{
    "title": "My Little Ventrue Pt. 05 Ch. 15",
    "pages": [
        "~~Eric~~\n\nSomeone was coming.\n\nHe sat up in bed, and climbed over Jessy, but she sat up at the same time, and he rolled with the momentum. The floor greeted him, and he wished he'd landed on cheap apartment carpet, not beautiful, designer ceramic tile that had all the softness of Sheryl's soul.\n\n\"The fuck?\" she said.\n\n\"Someone's coming. I can hear them. Feel them.\" He tried to stand up, but the moment he was on his feet, everything felt heavy. Arms, legs, the head on his shoulders, it all increased in weight to the point he felt like a newborn unable to lift its own head.\n\nJessy was up a moment later, hands on his shoulders, stabilizing him. \"You serious?\"\n\n\"Someone... familiar.\"\n\n\"No hunter's getting past the Kindred watching outside, Eric. The only people who could get in here without them knowing are other paranormals.\"\n\nHe frowned, blinked away his dizziness, and grabbed some jeans from the closet. \"I don't know who it is, but I can feel them. Someone's here, in my territory. I have to\u2014\"\n\n\"Your territory?\"\n\n\"I... shit, I didn't even think about saying it like that, it just came out.\" He marched out into the living room, wearing nothing but his boxers and jeans. Good enough to answer the door. Good enough to punch someone in the face if they were looking to try and convert him to their side.\n\nNot good enough to stand. He got to the door, before his hand had to brace his weight, fingers to the wall, head falling forward.\n\n\"You look really hot in nothing but jeans,\" the vampire said, coming up behind him. \"If you were cuddling Kat too, it'd be like a fashion shoot, specifically for wooing lonely, crazy cat women.\"\n\n\"Can we stop joking for a second?\"\n\n\"Fine, but I don't see\u2014\"\n\nThe stranger arrived at the door. There was a coldness to the smell that crept under the door frame, an alien, and almost overpowering aura. He didn't know what the fuck an aura was, or how he knew he could feel one, but he was. This person at the door had an aura, and it was dark.\n\nJessy pulled him back by the shoulder, and put her eye to the peep hole. Mistake. He tried to reach out, to grab her shoulder and yank her away, but the world wouldn't hold still under his feet. Before he could say anything, the door opened with a loud crack, the door frame shattering open around the lock.\n\nBut Jessy jumped back in time. As she slid by, socks gliding on the floor, she grabbed him by the wrist, spun, and threw him into the couch fifteen feet away. Nausea hit him, but he managed to keep his food down as his back collided with the couch back. He tried to keep his eyes on Jessy, but she was twisting, moving, sliding\u2014no, she was standing still now. It was the damn world moving around, refusing to hold still again.\n\n\"Who the fuck are you?\" she said.\n\nSomeone stepped into the room. Some guy wearing a nondescript gray hoodie, blue jeans, and black sneakers. He was tall, broad shouldered, and brought his hands up like a boxer as he put the weight of his body onto the balls of his feet.\n\nNo answer.\n\nHe was familiar, whoever he was. Fucker smelled familiar, felt familiar, and Eric was sure he'd seen the man before. Where? Who the fuck was this guy?\n\n\"Jessy, he's dangerous!\"\n\nThe woman snorted a growl, and came in closer. \"Answer me before I\u2014\"\n\n\"I didn't come here for you. I came for the Uratha.\" The stranger's voice was almost monotone, and for a moment, Eric almost expected him to say 'I vant to suck your blood' or some other stereotype. Romanian? It was subtle, but there. Except, whoever this fucker was, he was no vampire; he didn't smell like they did, hints of ash and staleness. Instead, he smelled more of that alien smell from before, something his nose didn't recognize.\n\nThe man stepped in, and swung his hand upward. Whoever he was, he had balls, but he didn't smell like a vampire or werewolf. What was he, then? The fist collided with Jessy's blocking arms, and sent her flying, the impact of knuckles on forearms hard enough the sound was almost comical, like a scene from a movie. A growl filled the room as Jessy stumbled back upon landing, before dropping to a knee and onto her hands, like she was getting ready to sprint.\n\n\"Jessy, I\u2014\"\n\n\"Shut up and stay put, Eric.\"\n\nYeah, that made sense. He wanted to get up, to fight, but the very thought of standing up was enough to have him reaching for the couch to brace himself. He was no use in a fight right now.\n\nMaybe if he changed? Could he change? He knew he could, felt the ability in his guts as much as he knew how to flex a muscle. But trying to change right now was like trying to fly, and until whatever was happening to him settled, he wasn't doing anything. \n\nJessy said the place was being watched by Kindred, but she wasn't calling for them. She had faith they'd come in on their own, then. But then, this fucker wasn't supposed to be able to sneak in past them. They might not have been coming; and not like they could see in, since Eric had blackout curtains hung up everywhere. Really regretted that now.\n\nHe half expected the man in the hoodie to tell Jessy to leave. Another part half expected him to pull out a pistol and start shooting. He did not expect the man to run up to Jessy, and take another swing.\n\nJessy came in to meet him, and swung her arm down. Eric stared on, sure his eyes were playing tricks on him, as Jessy's arm exploded in size, spikes and thorns erupting from her bicep and tricep, from her forearm, from her knuckles, and the length of her fingers extending as they thickened into claws. The counter inertia was enough for the rest of body to get launched a foot into the air, as the colossal hand slammed into the floor.\n\nOh god, his floor.\n\nThe intruder dodged to the side at the last moment, throwing himself with a panicked jump. He slid into the wall, near a cat tower. Shit, Kat! No, Kat wasn't around, still in his bedroom, and smart enough to not come out with the noise.\n\nHis eyes locked onto Jessy, and he forced himself to sit up more, one arm gripping the couch back at he squinted. If the world could stop spinning for just one fucking second, he could get a better look at the vampire.\n\nHe gulped as Jessy's other arm erupted in the same mess of death, covered in the same sort of spikes, and fingernails elongated into massive claws from monstrous hands. She launched forward, weight on the balls of her feet, back raised, as if she had a tail to counter balance. She didn't. Instead of an animal, she just looked like a hulking monster, several spikes erupting from her back, her spine, and from her elbows. Others erupted outward from the top of her head, and others erupted from her feet, talons that shredded her socks.\n\nThe man sidestepped at the last moment again, but Jessy's speed was immense. Her claws snagged on his hoodie, and cut through the pockets.\n\n\"I don't know you, who you are, or how you got in here,\" she said, stalking back and forth, now that her prey was out of reach. \"But I'm going to rip you to fucking shreds.\"\n\nThe man stood, looked at her, and frowned. His features were largely hidden in the hoodie, its hood pulled forward, and burying the man's face in more shadow than it should have. How he managed to punch Jessy so hard that she flew clear across the room, Eric had no idea, but the man grimaced as he looked the vampire up and down, his lips only barely visible. No banter, despite Jessy fishing for it.\n\nJust as Jessy was about to pounce, the man ran in, sneakers gripping the floor as he vaulted up, drew his fist back, and slammed it down toward her. As he did, a flash of shadow blanketed the room, black, enormous curtains that jutted outward from behind the man. The fist he drew back was enormous, black, leathery, and there were two of them for the one hand.\n\nWait.\n\n\"Jes\u2014\"\n\nShe leapt aside, talons tearing up the ceramic tile as her weight caught against it, skidding like she was ice skating. Her hand's claws sank into the floor as well, helping bring her sliding body to a halt.\n\n\"I saw it, Eric. I said shut up!\"\n\nHe gulped. Her voice had changed, some inhuman growl overtones mixing with the woman's usual tone. It was like a demon was bursting out of her.\n\nAnd a demon was trying to kill her. The intruder stood up from where he landed, and the tile around his punch splintered outward, a small crater around his fist. Any fighter understood that you could only put as much weight into a punch as you had weight attached to it; a light guy with a hard punch would send himself away from whatever he punched, if the thing was heavier than him. But seeing a guy jump, and then land as if he weighed a couple thousand pounds, was massive dissonance to Eric's trained mind. This made no sense.\n\nJessy dashed for the man, and threw her weight at him, hands out to both sides with claws elongated. If the intruder dodged to the sides, he'd risk getting clawed. If he stayed where he was, Jessy's weight would hit him, and then she'd close her claws around him.\n\nThe intruder turned his side to Jessy, and brought one of his wings down over his body, like a wall. Wings?\n\nEric squinted again, stared, breathed deep, and did everything he could to get the world to hold still for a second, so he could see what the ever living fuck the guy in the hoodie was doing. Something was coming out of him. Not like Jessy's spikes and claws, which had erupted from her skin like bone growths, but something that faded from existence the moment it had served its purpose. Something black.\n\nJessy's body collided with the black wall, and before she could close in her claws around him, he snapped the black curtain away from him. It was a wing, it had to be a wing, something that connected to the man's back, and had bent around him like a shield. Wings, four of them.\n\nThe thing from his dream.\n\nHe sprinted after Jessy, sneakers making tiny squeaks against the fancy floor as he threw his weight into her. The Gangrel hadn't gotten up from her rolling, and only managed to get to a knee as he ran into her. He slammed forward his palm, the one motion sending two alien palms to reach out, one grabbing her face, the other grabbing her wrist. With a growl, a familiar, shrieking growl, the man in the hoodie slammed the vampire's skull into the wall separating the living room from bathroom.\n\nThe drywall gave way, bits of paint and white mist splashing outward like water, before it cracked inward and let Jessy's head to pass through it. It was like a fucking cartoon, half her torso going into the wall too, and the impact causing her legs to straighten out in the air behind her, before slumping against the wall and floor.\n\nThe man turned toward Eric, and marched his way.\n\nEric stared at him, and tried to force his body to respond; so far the only thing that was responding appropriately was the increased heart rate and breathing. The world wasn't going to hold still long enough for him to stand up, and every motion felt like trying to find where gravity was again. He was borderline helpless.\n\nBorderline. Growling at the intruder, Eric dug his fingers into the couch cushions, and stood up. He expected his feet to land on the ground, but they didn't, tripping over themselves sideways, and sending him to the floor. It was like being very, very drunk, and as Eric reached over to the couch now beside him and tried to pick himself up, he groaned against the familiar struggle. Drunk as hell without any of the buzz, delightful.\n\nA loud crack turned his head toward the door.\n\n\"What the fuck is this?\"\n\nEric squinted at the apartment entrance, trying to make out who it was. But sound and smell filled him in a lot quicker than his eyes.\n\n\"Clara! This guy is... trying to... take me to Jeremiah,\" he said. She must have heard the commotion; everyone in the building must have heard the commotion. The Kindred had to know what was going on, or at least that something was happening.\n\nThe man let out a single snort, before he swung his foot for Eric's chest. To try and dodge it was a reflex, but a pointless one, and Eric let out a loud groan as the man's sneaker crashed into his stomach hard enough to send him back a few feet. If he had anything in his stomach, he'd be vomiting as he spun over once before landing on his side.\n\n\"He smells weird,\" Clara said, approaching, corner of her lip raised in a snarl.\n\n\"He's... a Begotten,\" he said between coughs and groans.\n\n\"The fuck is a Begotten doing working for Jeremiah?\" Clara looked to the other side of the room where Jessy was pushing herself out of the hole in the wall, and then back to Eric's direction. Groaning, Eric put his palms to the floor, and twisted to look back toward her, and the fucker who kicked him.\n\nMister Hoodie hesitated, before he brought his fists up to his chest, and cracked his knuckles. As he took a step toward Clara, a shimmer of black filled the air around him, burying them in shadow. Flickering movements, each massive, each swallowing the air around them in its shadow. A set of dragon feet, then gone. Four arms poised to rip and tear, then gone. A long tail slithering behind it like a swimming crocodile, then gone. Four wings, with a pair of horns rising up between them from the demon's skull. Gone again, as Mister Hoodie came in closer to Clara.\n\n\"The fuck were you hoping to accomplish?\" Clara said. \"Not like you're getting out of here with Eric, or alive.\"\n\nThe man snorted again, and a heavy blast of air shot out around him, as if a great beast had expressed discontent. He raised his hands, grabbed reality between his two and four sets of fingers and claws, and ripped out the curtains of the universe.\n\nAs blackness set upon them, he could hear Jessy, scrambling with her phone. \"Damien! Get in here now, we have an intruder! I can barely see anything, shit is going black, and the... shit.\" She put away the phone, and ran for the monster and two werewolves, before everything was swallowed in the growing shadow.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe blackness came, and fled, like a morning fog. Slow, heavy, cold, and unwanted. Eric groaned again as he reached over for the couch, and froze as his hand found something hard instead. Something hard, cold, and rough to the touch. Something that gave him a splinter as he slid his fingers along it.\n\n\"The... fuck...\"\n\n\"Eric?\" the darkness called out. Jessy's voice.\n\n\"Yeah, I'm here. Clara?\"\n\n\"Yeah, I'm here. Where's here?\"\n\n\"Dunno,\" Jessy said. \"But... but if what Fiona told me is right, this fucking Begotten just pulled us into a nightmare.\"\n\nThe following silence might as well have been the Funeral March.\n\n\"Shit,\" Clara said.\n\nEric sighed, and stood up. Stood, standing, up! Fucking yes, finally. He couldn't see much, only some barren walls in the dark and the two nearby women, but he could tell the world wasn't spinning anymore.\n\n\"I... am apparently feeling better,\" he said.\n\n\"Might be because we're in a nightmare?\" Jessy came up to him, and put a hand on his shoulder. He expected to feel claws, but they were gone. She changed quickly. \"If that fucker got into your dream, and did something to you there, maybe it's broken because we're here?\"\n\nClara snorted, and came up to them as well. Until their eyes adjusted to the darkness, better to stay near each other; the fucker could still be around, too. \"So you two might be perfectly fine with this, but this is my first time inside a nightmare. You sure we're in a nightmare?\"\n\nShrugging, Jessy brought up her phone, and used it as a flashlight. \"My first time too, but we know what Begotten can do. If you have any other ideas, hit me, because I'm getting no reception.\"\n\nEric smirked at the Gangrel. Panic was rising in his gut, and every sense he had told him he was in some alien location, but Jessy handled it in stride. He supposed her fifty plus years of being a vampire, and decades of being some sort of front liner for the Invictus, meant she'd earned her scars and stars. Maybe they were in good hands, if the woman's volatile nature didn't doom them.\n\nThe world decided he wasn't ready for standing yet, and he reached out for Clara's shoulder. \"Ok... feeling a lot better, but not back to full speed yet.\"\n\nThe Uratha nodded, pat his arm, and looked around the room that surrounded them. It was a large room, with walls, and a similar layout to his apartment. But as he breathed deep, he smelled stone, and the ocean. He smelled wood, the forest, just a hint, but the stagnant air mostly held the scent of old stone, and the sort of water damage from decades of weathering storms. As Jessy's light came by, he squatted down and ran his fingers along the floor. Dirty, and he could feel the stone, smooth and worn, against his skin. He was barefoot, after all, Jessy too, and the stone was colder than his bare feet appreciated.\n\n\"Feel like I'm standing in some sort of old, fancy cottage with stone floors,\" he said. Back on his feet, he walked over to a wall, and touched it. \"No, this is stone too. Stone walls and stone floors?\" Looked like a wood ceiling though. Old, stained, and a bit warped, but yeah that was a wood ceiling, with planks showing many imperfections.\n\n\"Oh shit.\" Jessy pulled on something, and the two wolves turned to look at the incoming light. The sound of wood shifting on stone was strange, grinding, not the sound you'd expect from a cottage. Eric and Clara came over, and watched the gentle light cut across the floor, flickering, swaying. Fire.\n\nJessy winced, put her phone away, and pointed at the wall beyond the door. A hallway, with torches high up on the stone wall, lit. No, not a torch, a brazier, fancy, with a gargoyle shape holding the flame in its hands, the beast perched upon a stone outcropping.\n\nThey both stepped out into the hallway, and gasped at the size that awaited them. Eric looked left and right, half expecting the fucker in the hoodie to pounce, half expecting the four-winged gargoyle to pounce. But they were alone, and the hallway greeted them with nothing but silence, and the fire the gargoyles dangled over them.\n\nThe ceiling of the hallway was high, much higher than the room, at least twenty feet, and the hallway was wide, twenty feet as well. Several doors like the one they'd opened awaited, all closed, and while one end of the hallway came to a stop, a wall of stone and nothing more, the other end of the hallway looked like it opened into a turn.\n\n\"We're not in Kansas anymore,\" Jessy said.\n\nFuck him, if the damn woman couldn't make him laugh.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe took the stairs.\n\nWrapped in his cloak of night, he tapped into the speed of a Mekhet, and drove his shoes into the hard metal of the inner fire escape stairway. Kine were there, some fleeing the building, but not in a panic. As far as he could tell, they had thought the noises might have been explosions, or maybe a collapsing wall or structure pillar. But the noises were gone, nothing had happened, and no fire alarm had gone off. People began walking back up the stairs to their apartments.\n\nSome of them paused, and glanced around, confused, as Damien sped past them, jumping along the railing and climbing it almost straight up. He was a blur to them, their eyes sliding off of him, and minds unable to parse the alien presence. Moving quick and silent among the masses was as much an art as it was a blood discipline, and Damien was confident in his mastery.\n\nEric's floor was near the top of the tall building, and Damien frowned as the journey took seconds longer than he wanted it to. He'd said on the open line he was going in, and half expected Julias Mire to tell him to wait for back up. He didn't, and gave him an 'affirmative' instead. Perhaps the man was beginning to trust him.\n\nIt'd be a nice change of pace, for people to trust him. The only people he felt truly did so, were Jack and Fiona.",
        "He steeled his gaze, sprinted down the hall, and went for the open door, sword in his right hand, pistol in his left. But the room was empty.\n\n\"What in God's name...\" Sighing, he put his pistol away, and pressed in on his ear piece. \"This is Damien. Eric's suite shows signs of melee combat, extreme damage, but there's no sign of him or Herrington.\"\n\n\"What about Clara?\" Julias said.\n\n\"Negative.\"\n\nDamien could almost hear Julias frown over the line. \"Video feed saw her jump from her couch, and then run out of the apartment. I assume she ran to join Eric and Jessy.\"\n\n\"She probably did. And Carter?\"\n\n\"Not in the building tonight.\"\n\n\"Roger that.\" Damien squatted down over the crater on the floor, and frowned. The floor was damaged as if someone had dropped a very large iron ball onto it from on high; but no iron ball was to be found. The hole in the wall could be accomplished by smashing someone into it, and the claw marks along the floor were long and filled with cracks and shred marks; the work of a Gangrel's protean transformations. The crater in the floor though, that would have required a great weight.\n\nAn Uratha could make a hole like that, if transformed into their war form, and if they drove the entirety of their weight into a single fist, after jumping to a great height. There had been two Uratha in the room, but no howling or roaring. That could have simply been the building's good sound insulation though.\n\nHe raised his head, and offered Jack and Natasha a nod as they walked in.\n\n\"They really just vanished?\" Jack said.\n\nSighing, he nodded again, and walked over to the hole in the wall. Clear through, studs smashed, with bits of fabric against the wood between the drywall.\n\n\"A bad fight,\" he said.\n\n\"Think... m-maybe... a Kindred did this?\" Natasha stood by the door, and looked back out. The police would not be coming, of course, and the residents would be informed there was no cause for concern.\n\n\"You know a Kindred that can make people vanish like this?\" Jack shook his head, and squatted down by the dent in the floor, as Damien had done. \"Cloak of night can do a lot of things, but the only Kindred I can think of that could use it, and incapacitate Jessy and Clara, and take them and Eric out of here all at once, would be\u2014\"\n\n\"Jacob or the sheriff.\" Damien shook his head, and motioned to the claw marks. \"Jessy would have called that in immediately, if it were Jacob. No, she called in something more vague after hesitating, and based on these marks, she thought she could fight the intruders.\" Jessy wasn't stupid enough to try and fight those ancient undead, and if it was either of them, she would have called it in.\n\n\"Could always be an ancient elder we don't know about,\" Jack said, rolling his eyes with his own absurdity.\n\n\"The chances of that are... v-very... very low.\" The little Mekhet came in and joined them, taking pictures of the damage with her phone.\n\n\"Yea, but the other three options suck.\" Wincing, Jack sat down on the couch, and looked around with wandering eyes. \"Either the hunters have a way of bypassing our stakeouts, getting passed all the Mekhet's auspex on top of that, or the Uratha or Begotten have taken Jessy and Eric. And Clara ran up here, so...\"\n\nDamien shook his head. \"I doubt Clara helped the intruder. Your sire says she ran up here after the noises started, body language surprised. Though, that does not dissuade the possibility that an Uratha is responsible; I don't know what abilities they have, but I assume some would be strange and powerful, considering their ability to journey to the Shadow Realm.\"\n\n\"B-Begotten then?\" Tash said. \"It w-w... would make sense, with what Jessy's m-message said, about Eric's dream. We could ask them.\"\n\n\"We?\" Damien said. \"You came along to cover Jack. That\u2014\"\n\n\"That's still a thing!\" Frowning, the tiny girl came up to him, and jammed in the chest with one of her fingers. \"Trying to get rid of... m-me?\"\n\n\"No.\" But he'd prefer to not involve her in the dark games he and Jack were drawn into. And that was a definite possibility, if the conversation turned in directions Damien wouldn't be able to predict. \"Fine.\" There was no reason to suspect the oncoming 'threat' Jack warned him about was linked to Eric's kidnapping, but, it never hurt to be prepared. Mekhet motto, or Mekhet paranoia, either or.\n\nTheir ear pieces gave off a quick beep tone, announcing an incoming message. \"Jessy's phone is off the grid, no GPS, no signal.\" Mire's voice. \"Think it was destroyed?\"\n\nDamien did a double check on the damage. \"No sir, at least not here. It may have been, if it was taken elsewhere.\"\n\n\"Tracker history shows it didn't leave that spot,\" the ear piece said. \"So unless she was teleported somewhere deep underground or into a jamming zone... I suppose that's all very possible, if she vanished.\"\n\nWhat a scary technology, being able to not only locate a person anywhere in the world if they had their phone with them, but to also have recorded where they'd been. Would Kindred keep maps, showing the life path of each Kindred and where they moved at all times? The Invictus would, surely.\n\n\"What do we do now?\" Jack said, finger to his ear piece. \"She's completely gone. The intruder, Clara, Eric, they're all gone like they stepped into the twilight zone or something.\"\n\nThe beep dialed in once again. \"Unfortunately our options are limited. Is Natasha willing to help?\"\n\nDamien nodded. \"She is.\"\n\n\"Ask her to visit the Uratha, and see if they have any ideas.\"\n\n\"Sure you don't want me to do that?\" Jack said.\n\n\"You need to visit Azamel. Jessy's description of Eric's nightmare intruder, and his sudden incapacitation, are too specific to ignore.\"\n\nDamien winced, and looked to his companion. The expression on the boy's face was obvious. Shit.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDamien sighed. Jack sighed. The two of them crept into one of the old, abandoned subway tunnels, and through a locked door, into the depths of Dolareido.\n\nDamien was not looking forward to this meeting; and yet, a smile kept sneaking onto his lips. A small thing, teasing him, sparking memories of Fiona, her giggling, her accent, her curves. A part of him told him he should be more concerned with immediate circumstances, about Jessy's disappearance, and the two werewolves. There was a very real chance that the three of them were in the hands of the hunters, and Jessy could be killed as collateral damage to their real target, Eric.\n\nPerhaps they should have asked the Circle of the Crone for help. Their blood magics were capable of extraordinary feats, and he wouldn't have been surprised if divination or mystical viewing and tracking were among them.\n\nHis mind warped back to Fiona, and he slapped himself hard enough to pull a gasp through clenched teeth. Jack stopped, and raised a brow.\n\n\"Sorry,\" Damien said. \"Thinking about... things.\"\n\n\"Fiona?\"\n\n\"... how did you know?\"\n\n\"The only times I've ever slapped myself, and was thinking about things, was when it was about a girl.\"\n\n\"Jessy and Clara are girls.\"\n\n\"Ha, yeah, but you know that's not the same thing.\" Jack had a smile on, small but there. Perhaps he wasn't worried, or had learned from Julias the value in not showing fear.\n\n\"... she is on my mind occasionally, yes.\"\n\nA strange look washed over the boy's face. Relief, perhaps?\n\n\"She's been flirting with you, so that's understandable.\"\n\n\"She has?\" Damien looked at his companion, and raised a brow. \"Isn't she trying to seduce Eric?\"\n\n\"She's attracted to Eric, sure, but a lot of that seems to be about making you jealous.\"\n\nMadness. Damien shook his head, and started walking again. It was a mile to Azamel's hideout, and they couldn't dally.\n\n\"... are you sure?\"\n\nWith a chuckle, Jack followed after him. \"Julias \u2014 and Antoinette \u2014 have been teaching me a lot about social queues. Fiona's young, fun, trying to discover herself, all that typical young adult stuff I'm still going through.\"\n\n\"I spent those years hiding in sewer and subway tunnels, I'm afraid.\"\n\n\"Which is why I'm telling you. I wouldn't have said a thing, honestly, if you didn't just say you were thinking about her. She likes you, but she's all over the place, not sure what to do with herself, what she wants, or how to figure it out.\" He put his hands up in mock surrender. \"I could be wrong, but the signals aren't subtle.\"\n\n\"Then how come I haven't seen them?\"\n\n\"Because they're not subtle by female standards. Flicking hair over the shoulder, frequent glances with smiles, sneaking peeks at you while drinking, turning to face your general direction. Women think these things are giant signs, big neon letters that say 'I like you let's chat'.\" He shrugged, and took a moment to check his vest within his suit. Good to always check that your weapons were on hand. \"But we're guys, socially awkward guys at that. It'll take a lot more than that for us to notice.\"\n\nHe found this all hard to believe. It was a stereotype he was familiar with; he spent fifty years hiding in a city, not in a cottage in the woods. But he'd assumed it was exaggeration. Who'd be silly enough to play these games?\n\nFiona would be silly enough, and her silliness kept pulling smiles out of him, whether he wanted it to or not. She was his total opposite, bright and cheerful and forever giggling. But, how was he supposed to respond to flirting? He hadn't a clue. His goal in unlife was to serve Lucas, and women were not a part of that plan. The plan was dead, along with his sire, but the wake of his inadequacies and ignorance remained.\n\n\"Damien,\" Jack said, \"has Maria been up to anything strange?\"\n\n\"Are more things pointing to her?\"\n\n\"Nothing related to this vanishing act, but, yeah, a few more people have mentioned they think she's up to something.\"\n\nThis again. \"I told you, I don't know what people are finding out about Maria that could suggest this. Everything she tells me, she tells the Invictus council, and all the Right Hands. The only things I know that you do not, are matters of the Lancea et Sanctum; and trust me, those topics are innocent.\" Trying to establish the rules for the rebirth of the Second Estate in Dolareido was proving problematic. People were not interested, and trying to bridge the gap between old and new, with an elder as his partner, was like trying to mesh water and oil. Stir them, and it seemed like they got along, but once things settled, the differences became apparent.\n\n\"I believe you. I'm just throwing shit at a wall, seeing what sticks.\"\n\n\"... what?\"\n\n\"Shit at a wall? Nevermind. We're flying blind about this mysterious threat, and the only person who could probably answer our questions, is Jacob, the sheriff, and the Prince. I can't ask the Prince, and we can't ask the sheriff, or Jacob for obvious reasons.\"\n\n\"Why can't you ask the Prince?\"\n\n\"Azamel said to not involve people, and I'm sure that goes double for the elders.\"\n\nDamien raised a brow at his partner again. \"You love her though, and trust her.\" It was a cold, logical decision to keep his lover out of such dangerous information trails. He hadn't expected Jack to have that level of resolve. Perhaps he should have expected it.\n\n\"Yeah... yeah I do. But I don't tell her everything, just like she doesn't tell me everything. Her Princely machinations, and Ordo Dracul things, I don't know any of it.\"\n\n\"Not the same thing. This thing threatens us all, and\u2014\"\n\n\"And she knows. I know she knows. She knows I know, and she knows I know she knows, I guess.\" Jack frowned at the metal rails beneath them. \"The problem is, this shadow game is deadly, and one slip up means someone dies. You knowing is a problem, but I took a gamble and trusted you.\"\n\n\"Though really, it was Fiona's slip up that forced the situation.\"\n\n\"I could have not explained what she meant,\" Jack said. \"And I was going to tell you eventually anyway, cause I need a friend in this.\"\n\n\"Thank you, I suppose.\"\n\nSmiling, Jack shrugged at him. \"You earned it.\"\n\nDamien returned the small smile. He appreciated Jack's reserved expressions, and how he didn't explode into theatrics for interaction, like Jessy often did. The boy understand the power, and value, of stating things simply.\n\nFunny, Damien enjoyed seeing Fiona explode with her dramatic exaggerations. He didn't enjoy it when others did.\n\n\"You said you have not told her everything? The Prince? It sounded like you meant more than this vague threat we hunt.\"\n\n\"Yeah, I... haven't told her about Angela.\"\n\nDamien raised a brow, and turned to look ahead as they talked. The matter sounded personal. In the past, Damien would have shied away from such interactions, but he'd been working with the Right Hands and the Invictus long enough to have developed a sliver of empathy for them; Jack, far more so.\n\n\"What do you mean?\"\n\n\"Just been having... rage issues, I guess, about Angela.\"\n\n\"That's understandable. I'm not sure I see the reason for concern.\"\n\n\"Yeah, yeah, I agree. Not... yeah, it's not a big deal.\"\n\nDamien again raised a brow, but did not turn to look at the man. There was more it than that, based on the tone in his voice; not that Damien's social skills were reliable. Was Fiona really flirting with him? He'd assumed the girl was flirtatious with everyone, and hadn't sent him any unique or specific signals. Maybe he was blind.\n\nOr maybe, as Maria told him, he had an aversion to happiness. A common failing amongst the Sanctified, she confirmed, and assured him it would be something he struggled with for centuries; as she still did. Fiona was a walking, talking bundle of happiness. Why? She was a monster, a beast of nightmares that stalked, hunted, and fed upon the scum of the Earth. Why was she joyful?\n\nYouth, no doubt, was a large factor. While the monster she'd taken into her as a part of her was old, with a name and history, Fiona herself was a young woman. Perhaps it was also her simple mind. She didn't over analyze everything, as Mekhet did.\n\nMaybe he should listen to Jessy, and try the same.\n\nA little while later, he and his Ventrue companion arrived at Azamel's 'hole in the ground', as Julias put it. He half expected to find it empty, but Azamel sat upon her chair, smoking, while Athalia sat reading a book. Mark and Fiona were nowhere to be seen.\n\n\"The boy returns, with... the other boy.\" Azamel shrugged, blew some smoke their way, and coughed. A lot. \"I assume this is about the appearance of the Begotten?\"\n\n\"So it was a Begotten?\" Jack said.\n\n\"Yes. We don't know who it is, or what they're up to, but there's a Begotten in the dream, nearby. They've shut their lair off to us.\"\n\nHow forward this woman was with information, suddenly. He didn't trust her. He was sure no one trusted her, except for maybe Jack, and the boy's naivete was a danger to everyone. But then, a little trust could lead to positive outcomes; case in point, himself. It was hard to abandon fifty years of scurrying in the dark, though, trusting no one.\n\nHe had no reason to be, as Jessy would put it, a ridiculous, brooding stereotype anymore.\n\n\"The ritual has been performed again,\" Jack said. \"This time, it showed Eric's face.\"\n\n\"It did?\" Athalia said, hopping down from Azamel's stage to join them. While the two Kindred were in suits, she was dressed in blue jeans and a black sweater. \"Strange.\"\n\nJack, naturally, decided to tell them far too much for Damien's taste, and recounted the tale of the discovery of the ritual, and their attempts to capture whomever was sent to kidnap Eric. \"We had Kindred doing a stakeout while Jessy was in there with Eric. Clara was below, in her own apartment. But, whatever happened, drew her attention. By the time the rest of us came in, Eric, Clara, Jessy, and the intruders had vanished.\"\n\nAthalia sighed, looked to Azamel, and sighed again when Azamel blew some smoke, and shrugged. Giving her permission to do whatever she wanted, Damien supposed.\n\n\"Many things could make a group of people vanish,\" Athalia said.\n\nShaking her head, Azamel managed to speak.\"Nonsense.\" Another coughing fit, lungs tearing them apart, forcing Damien to wince.\n\n\"Azamel's probably correct,\" Damien said. \"More incriminating is a dream Eric shared with Jessy, which she relayed to us. Eric insists a monster, a gargoyle creature with four arms and four wings attacked him in a dream. Since then, he's been exhausted.\"\n\n\"Shit, yeah, that's probably the Begotten we sense.\" Nodding, Athalia began pacing side to side in front of them. \"Wait, the ritual is performed by a friend of Jeremiah's. The fuck does a Begotten have to do with this?\"\n\nThe little Ventrue raised a hand. \"Jessy's text said Eric's dream monster said he was fetching Eric for Jeremiah.\"\n\nThat was enough to earn a snarl from Athalia. \"No Begotten is working for that psychopath, not willingly anyway.\"\n\nDamien shrugged. \"Perhaps it is unwillingly.\"\n\nAthalia's face turned from ice, to fire, as she considered the implications. \"Jeremiah, or Angela, controlling a Begotten?\" Fists at her side, she marched as she paced, feet growing louder, as if that would expel her anger. It wouldn't. \"We\u2014\"\n\n\"You didn't tell us,\" Damien said.\n\n\"I'm sorry?\"\n\n\"You didn't tell us, about a new Begotten in the city?\"\n\n\"Why would I tell you anything?\"\n\n\"When did this new Begotten arrive in the city?\"\n\n\"A few weeks ago.\"\n\nA few weeks ago? This woman was infuriating. Did she not see the harm in not sharing such crucial information?\n\nJack sighed, and waved his arms. \"Not the time, guys. We have to get Jessy and Clara back, and Eric. Tonight.\"\n\n~~~~~~~~~~~~~~~~~~~~~\n\nAzamel said Mark was busy and would not be joining them, but Fiona was at a bar in Devil's Corner. He knew the girl did her hunting there, at different bars, different alleys, different places where she was liable to run into someone who deserved to be put down. But she didn't put them down anymore, supposedly; Invictus police reports suggested few people had died, since her change in feeding approach, so it must have been true.\n\nThe Invictus car pulled up by the bar, and waited. Jack had his phone out, and was texting.\n\n\"Vola?\" Damien said.\n\n\"Yeah. She'll meet us at the apartment. Arturo and Matthew will be coming, at Avery's behest. They want help getting Clara back, but, understandably, don't want to send the whole pack into a nightmare realm. Not familiar territory for them.\"\n\n\"Is it for us?\"\n\nJack sighed, shrugged, and looked at him with a small grimace. It was their duty to learn all they could about the Begotten and the nightmares where they lived, but progress on that front was going slow. Maybe Damien should be more upfront about his curiosity with Fiona, and simply ask her? It'd be an excuse to talk to her, too.\n\nDamien, you are a child.\n\nOf course, Athalia was in the car, and she sighed and rolled her eyes. \"If it were familiar territory, I'd wonder who's been letting you into our lair. Fiona is far too chummy with you.\"\n\n\"Fiona,\" Damien said, \"understands the value in friends.\" Hopefully Athalia would notice his hypocrisy in that statement.\n\n\"She's a child. She doesn't understand anything, the value in anything.\"\n\nDamien almost snapped at her, but Jack spoke up first.\n\n\"You're protective of her,\" he said, smiling.\n\n\"What?\"\n\n\"My mom, she used to say the same thing about Mary, my sister, when she was being a bit too rambunctious.\"\n\n\"Ram... bunctious.\" Athalia sighed, folded her arms across her chest, and stared ahead. Damien struggled to not grin at the sight. It was true then, that Athalia was being protective of the girl. And why wouldn't she be? She was a mother who'd seen how badly things could go, and with her new family, was perhaps trying to prevent that.\n\nFiona came out of the bar, a grin on her face and bounce in her step. Wearing blue jeans that hugged her curves, she netted her fingers behind her, and skipped the last few steps of the way to the car. It was a large car, basically a limousine, and had no trouble fitting them all. But, with them all in the back seat, it made it difficult to not admire the green sweater she wore, and how it exposed the entirety of her shoulders.",
        "Her large bundle of frizzy red hair against the pale skin and freckles of her shoulders, was beautiful, and he struggled to not stare. Jack's words rung in his mind again and again, taunting him. Should he try and flirt back with her? How do you flirt? He could talk to her, but if he tried to say something flirtatious, or even slightly romantic or sexual, he was bound to fail. He had no idea how to do either.\n\n\"Damien!\" Fiona said, smiling at him, and scooting in past Athalia to sit beside him. Crap.\n\n\"Fiona,\" he said. He knew his voice was deadpan, and he made sure to only meet her gaze and nothing but. He did not lower his gaze. No. No lowering of his gaze, despite his peripheral vision able to see how her low-hanging sweater hugged her breasts and waist tight enough to show the curves of her figure.\n\nWith a small giggle, she reached out, and adjusted his collar. \"Suit and tie?\"\n\nHe froze for a moment, before he forced his eyes in Jack's direction. The kid was smiling at him. Damn it.\n\n\"Jack is wearing this too.\"\n\n\"Aye, but he's Invictus. Plus, I bet Antoinette likes the suit and tie.\"\n\n\"I am a Right Hand of the Invictus. Some presentation is to be expected.\"\n\nShe rolled her eyes, and tugged on his tie a few times. \"I think ye'd look better dressed like the sheriff, maybe a wee more modern. Ever see the Matrix?\"\n\nJack choked on a chuckle. Damien frowned at him, before setting a hand on Fiona's, and guiding it away from his tie.\n\n\"Let's focus on the matter at hand.\"\n\n\"Fine fine.\" She slumped into the car seat, a little frown of her own. It didn't last. It never did. \"I've felt a new presence in the dream, but I cannae find them.\"\n\n\"That's why we're here,\" Athalia said. \"We need your help. Vrall is better at opening doors than I am.\"\n\n\"But, opening a door into another Begotten's lair? I... I dinnae ken if I can.\" Fiona's frown returned as she folded her arms across her chest, and stared down. \"Vrall has ne'er done that before.\"\n\nJack nodded, and looked out the window as the car drove off to South Side. \"I imagine tonight will be full of firsts.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nOther than Fiona's worry over opening another Begotten's 'tunnel', everyone seemed confident, and he knew that was because he looked confident. He wasn't. But, Julias had made it clear how important it was for people to trust in the confidence of the leader, and while he wasn't the leader, Ventrue habit dictated he start acting like one. He only noticed after the fact, that he was the one doing things first, and encouraging others to follow. Case in point, he opened the door to Eric's apartment first, and expected everyone to follow behind him.\n\nThey did, too. It was a bad time to let his Ventrue blood inflate his ego, but there was something damn satisfying about being in the front, and everyone following behind you without a complaint. He forced down the smile, and offered a small wave to Tash and the two Uratha. Three Uratha.\n\n\"Um, hello?\" he said.\n\n\"Noah.\" The man, covered in tattoos with a shaved head and pale skin, walked up to him, and extended a hand. Wow, a hand shake. Taking it, Jack couldn't help but smile at the very old school form of introduction.\n\n\"Jack Terry.\"\n\n\"I'm here to back up Matthew and Arturo. They have a habit of getting stuck in stupid situations.\"\n\nArt came up to the man, and shoved him, hard enough to make him stumble a couple steps.\n\n\"Don't pick a fight with me, you asshole.\"\n\nOk, that wasn't as friendly as Jack expected. Some buddy buddy shoving and insults, he got, but Art looked more than a little pissed by that remark. Noah, on the other hand, sighed, shook off his shoulders, and walked back to where he was as Art walked back over to Matt. The two of them were sniffing as they walked around.\n\nTash walked up to Jack, and smiled up at him. \"Noah is... well, um, I wasn't there, but the boys say Avery isn't t-t-too happy about how often Art and Matt are with Kindred, so Noah is... is\u2014\"\n\n\"Just making sure things are going smoothly. Besides, I want to help get Clara back.\"\n\nMessage received. Noah was here to help rescue their pack mate, but also to make sure Art and Matt didn't do something to compromise the Uratha. What that meant could be anything, but it was definitely casting the man as some sort of auditor. Poor guy. \n\nAthalia offered the man nothing more than a short snarl, while Fiona bounced up to him, and looked him up and down. He was fit man, wearing a t-shirt and jeans, so he fit in well with the Begotten, clothes wise, while all the Kindred in the room wore suits, Tash included. The vampires were the only ones with weapons too, hidden under their jackets, while the monsters and werewolves were more comfortable killing things with their bare hands. The whole situation made Jack feel like the vampires were the civilized ones, and the others were not. Not a healthy image to have, but, it was hard to ignore.\n\n\"Noah,\" he said, \"this is Athalia and Fiona.\"\n\nNoah nodded to each of them. The introduction was unnecessary; the werewolves had already seen both of them, that time in the tunnel with the strange spider monster. Still, it was nice to do things proper, and maybe keep things civil. Three Kindred, three Uratha, and two Begotten, working together, was going to test his skills, because an argument was going to break out at some point. Inevitable.\n\n\"So, mission breakdown,\" he said. \"This is a rescue mission, but also a recon mission. We don't know where we'll end up, and learning as much as we can about enemy territory is secondary to rescuing our companions. Every effort must be made to maintain a stealth profile, and we should only engage the enemy if absolutely necessary.\" Remain calm, confident, don't think about the dangers ahead, don't think about Jeremiah or Angela, or this mysterious Begotten that might be an enemy. Stand strong, confident.\n\nHe winced as he thought about Antoinette. This was the sort of shit she was angry at him for, his natural tendency to put himself into harm's way, and try and deal with issues. Half of him knew it was because he really wanted to help, but deep down inside of him, he knew there was another reason, arrogant as it was. He couldn't trust anyone else to do it.\n\nWhere did that come from? It came naturally he supposed, with time, no matter the situation he was in. It was the same before he was Kindred; given enough time, he pulled ahead of others in his pursuits, and if it was a team effort, he could never quite trust other people to handle things, even if he knew they could. Ventrue hubris manifested in many forms, and that one was going to be a problem. Maybe he'd turn into an arrogant asshole like Viktor? He grinned at the thought. No way in hell.\n\nHe punched his palm, adopting the best hero pose he figured he could get away with. \"Search and rescue. The hunters knew we'd be watching Eric, or suspected at least, so they sent someone or someones they could trust to get Eric out of here without getting caught. Based on information from Eric that he was assaulted in his dream, that whatever attacked him there was working for Jeremiah, and that the Begotten have sensed the presence of another, unknown Begotten, we have to assume a Begotten is working for Jeremiah.\"\n\n\"Question!\" Matt raised his hand. Oh god, he acted like it was school. It was so damn cute, Jack had to look at Tash, who was smiling.\n\n\"Yes?\"\n\n\"The monster attacked Eric in his dream?\"\n\n\"Yes. Jessy said, after the dream, the man was wrecked, exhausted, dizzy.\"\n\n\"And the monster said it worked for Jeremiah?\" Big guy looked complexed.\n\n\"More or less. Yes, I know that sounds fishy. Why would the Begotten give up that information? The most obvious explanation is that this is a trap, and we're walking into it.\" It sounded so cool so say shit like that in the movies, but in real life, it just sounded dumb. He could see doubt manifesting in their eyes, and he raised a hand to cut in before they could speak. \"But that's why we're bringing a large crew, with many skills. Far as we know, Jeremiah hasn't had any interactions with the Uratha yet. But, considering the recon these hunters seem capable of, they might know werewolves are in the city. Kindred, Uratha, and Begotten all working together though? There's a good chance they won't see that coming.\"\n\nThe group nodded, each looking down and then around as they considered his explanation. It was a good one.\n\n\"Sounds like an adventure,\" Matt said, before a slap upside the head from Art earned a wince.\n\nNoah sat down on the couch, chin between finger and thumb as he considered. \"They also might not have expected Jessy, or Clara, to actually be with Eric in the room. They may have bitten off more than they could chew.\"\n\n\"Maybe.\" Jack had never seen Jessy fight, but she was one of the few ancilla in the city, and a Right Hand largely because of her might. He had faith she could handle combat situations easily enough. And Clara was a veteran werewolf; he'd seen her fight, when up against that spider monster, and he had no doubt in her abilities either. It was quite likely the abductors had indeed bitten off more than they could chew.\n\nIf that was the case, then their search and rescue mission would be easy. If not, it was a good thing they were bringing a group as large and strong as they were.\n\n\"Make sure you stick with us,\" Athalia said. \"Fiona and I can break out of this Begotten's chambers, burrow into the physical world here, but you can't.\"\n\nNoah leaned in. \"Uratha can\u2014\"\n\n\"You can't do shit, you stupid fucking dog.\" Athalia dismissed him with a hand wave and a snarl. \"And we're only bringing you because your companion is probably in the nightmare too. If it weren't for that, you could go fuck yourself.\"\n\nThe silence that fell on the room was cold, and painful. Only the ring ring of his phone managed to punch through the ice. Jack winced, sighed, and pulled out his phone.\n\n\"Sire?\" he said, once the ringing stopped.\n\n\"Jack. Report.\" Julias's official voice. Jack smiled into the phone; he liked the official voice, efficient and prompt.\n\n\"Vola, Burksen, and I are here with Athalia and Fiona. We also have three Uratha for assistance\"\n\n\"Three? I assumed Arturo and Matthew would be coming. Who's the third? Carter?\"\n\nCarter was a good guess, but the old man was with Avery at the moment, Jack assumed, and not in the apartment building. A waste. If the man didn't want to live in the luxuriousness of Carlava Villa, why'd he request it? Or maybe he was still pissed about the silver bullet Damien shot into his leg.\n\n\"Noah is the third. We'll be leaving, I assume, the moment Athalia and Fiona figure out how to track down whoever did... whatever.\" The holes in their knowledge about Begotten were painful, and it was going to make Damien and Jack look bad for Maria. But it wasn't like they could simply ask them for more details about how nightmares worked; Fiona'd already told them plenty, and was probably scolded for it. Knowing Azamel and Athalia, they likely treated her like a daughter who needed some rules to keep her safe. What a strange, twisted family.\n\n\"I'd say keep me posted,\" Julias said, \"but I assume you won't be able to contact me from the nightmare. Stay close to Damien and Tash, Jack. And if you run into Jeremiah or Angela, keep your head on your shoulders. I know, believe me, I know what's going through your head.\" Jack highly doubted that. \"But until you've got more years under your belt, you can't take the offensive against threats like that. If worse comes to worst, let the wolves do what they do best, and provide support. Agreed?\"\n\n\"Agreed.\" What was that scene, in Game of Thrones, with someone getting their eyes gouged in by the opponent's thumbs, lots of screaming, until their head exploded? Yeah, if he got his hands on Angela, he could see himself doing that. He could feel himself doing that. Press in, drive the thumbs through the soft eye, and drive the glass eye into her fucking brain, until he felt the soft matter of fleshy pulp splatter over his face.\n\nHe shook his head, blinking a few times, and took a few, useless breaths. \"We'll report back the moment we're out. Cya then.\" Beep. Nodding to no one, he put his phone in his pocket, and looked to the two Begotten wandering the room. \"It's up to you, ladies.\"\n\n\"Make sure,\" Athalia said, \"to keep your dogs on a leash. I can trust the vamps do be quiet about things, but if you mutts so much as howl, I will personally put the three of you into the fucking ground.\" The icy, beautiful woman walked up to Noah, and jammed a finger in his chest. \"Or I'll simply leave you there to die.\"\n\nFiona squirmed, looking down and shifting her weight from side to side as she kept her fingers netted behind her. Yeah, awkward. \"I can see the path the Begotten took.\"\n\n\"As can I.\" Athalia looked around at Eric's apartment after giving Damien a little shove, walking past him. No reason, she didn't walk in his direction. She just liked being a bitch. \"Seems like... the path connects... over... a building, filled with rooms, similar size.\"\n\n\"A weak connection,\" Fiona said. \"I'm surprised they managed to burrow from here.\"\n\n\"It's different with each Begotten.\" Shrugging, Athalia took a deep breath, and held out her hands. \"Come on, it'll be easier if we're both opening it.\"\n\nJack stepped back beside the wolves and vampires, and watched the two monsters. Uratha considered the world of spirits to be their realm to guard and maintain, and the Begotten considered the world of nightmares to be theirs. They had a point. Vampires could touch on those things, but couldn't really exist in them, grasp them, bend them and bind them. Vampires lived in the physical, in flesh and blood, sex and bullets.\n\nTo the three Kindred watching, what the two monsters were doing might as well have been an act of god. To the Uratha, it must have been like watching how your neighbor did laundry versus you.\n\nThe room's light began to flicker, before it settled on fading away, as if someone had blown out the fire. There was no fire, but if a cold breeze had come through the room, announced by billowing curtains and a spooky howl, it wouldn't have surprised him. More than darkness found them, weight found them, something heavy that pressed on their shoulders.\n\nHe looked beside him, and offered Natasha a smile. She returned it, but she was glancing around as well, barely enough light for them to see by, and getting darker. Art had a hand nudging against the back of her shoulder though, and Matt looked down to give her a smile too; big guy radiated safety and joy at the same time. Noah was looking around with an analytical eye, like Damien was. Jack was doing his best to not visibly tremble; his previous trip into the nightmare was not a fun one, and he didn't suspect this one would be either.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\n\"So, find someone to bang yet?\" Jessy said.\n\nClara stopped, turned around, and glared daggers into Jessy. Oh shit.\n\n\"What the fuck is the matter with you?\"\n\n\"What?\"\n\n\"We're kind of busy right now. How about you focus?\"\n\n\"I am focusing. Casual chat helps me focus.\" Shrugging, Jessy took the lead, and marched down the hallway. It was a long, massive hallway, and while she made sure to stay away from the fires that lit the path along the wall, Jessy otherwise seemed incapable of fear.\n\nNo chance in hell that's what it was. She had to be afraid; it was her first trip into a nightmare, and everyone's first trip into this particular one. They had no idea what the fuck they were in for, and their lives were in extreme danger. But Jessy didn't show that, didn't shake or flinch or do any of the things he'd expect from someone unexpectedly pulled into a literal nightmare. Brave, foolhardy, both, he wasn't sure, but Eric was damn glad to have her nearby, because Clara looked nervous.\n\n\"Vamps like to fuck, a lot, we get it, calm down,\" Clara said, growling under her breath.\n\n\"You gotta be shitting me.\" Laughing, quietly under her breath at least, Jessy continued along the hall, glancing back to see if they were following only once, before she pressed forward. \"I saw the look in your eyes, at the ball. I bet if the situation were a little different, you'd have joined in and made a few guys happy as a pig in shit. Maybe at least give a guy a blowjob.\"\n\nCat fight was on the tip of Eric's tongue, but through the infinite wisdom bestowed upon him by his experience with marriage and divorce, he kept his mouth shut.\n\n\"Sorry, I prefer monogamy. Guess I'm old fashioned that way.\" Clara rumbled in her throat, a growl deep in the chest.\n\n\"You're single. I didn't say cheat on someone, I said\u2014\"\n\n\"Not about cheating, fucking slut, it's about not opening your legs to everything with a pair of their own. I got a little more self respect than that.\"\n\nJessy rolled her eyes. She didn't turn around to look at them, so Eric couldn't see her eyes, but the woman's body language was blatant.\n\n\"You don't like sex?\"\n\n\"I do, but I prefer to pair it with romance. I hear a lot of girls like to do that, too.\"\n\n\"If you ever get to be my age,\" Jessy said, voice getting lower as they grew closer to the corner ahead, \"you might learn how to actually enjoy yourself. Romance is hard to find. A good fuck is a lot easier to find. Besides, if I was in a relationship, I'd be faithful as fuck. Got nothing against monogamy.\"\n\n\"Word is you prefer orgies to relationships.\" The venom in Clara's voice was not masked, the werewolf cluing in that subtlety wouldn't work with the vampire. Eric kind of wished it would, because subtlety was quiet, quieter than Jessy was being anyway. No sounds came from ahead, or the other rooms though.\n\nEric stopped, and eased open one of the doors along the hallway wall to peek into the darkness. Squinting until his eyes adjusted, he found nothing but another empty room. Mostly empty, with some old wooden chairs, a wooden table, and what looked like an empty fireplace. None of them looked comfortable, and it fit in nicely with the stone. It was like he'd been teleported into the guts of some sort of underground hold in a castle.\n\n\"I do love me a good orgy,\" Jessy said. \"You would too, if you knew how to have an orgasm.\"\n\n\"Knew... how to... What the fuck?\"\n\n\"Probably only ever cum with a vibrator on high power jammed against your clit, or a shower head on full blast set to incinerate. If only you knew how good it could be if you could get past your shit and relax.\"\n\nClara turned her head enough to stare at Jessy, and give her a backhand slap against the shoulder.\n\nJessy turned her head, stared at Clara, and returned the favor.\n\nClara turned completely, and shoved her. Jessy shoved her back.\n\nEric ran up between them, and winced, ready to feel fingernails dig into his skin. But thankfully, the girls \u2014 not women, evidently \u2014 got the message, scowled at each other, and grew quiet as they came to the turn at the end of the hall. He hadn't expected Jessy to start an argument in this circumstance, especially about something this ridiculous. He hadn't expected Clara to be offended, and return the argument. Maybe Jessy hit home, then. Still, a petty thing to insult someone over. Maybe Jessy was offended about the slut comment? If she was, she hid it well.\n\nJessy poked her head out first, before motioning for the rest of them to follow. Breathing deep and slow, Eric came around the corner, and looked up at the enormous door that barred their way. A dual door, wood, almost as tall and almost as wide as the giant hallway.\n\n\"Think fuckers are waiting for us past this?\" Jessy said, walking up to the door. It wouldn't have surprised Eric if the doors swung open the moment she touched them, but only silence greeted her exploring fingers.",
        "\"Yeah.\" Clara went up, mirrored Jessy, before putting her ear to the door. \"I don't hear anything. No breathing. And...\"\u2014a few seconds of silence went by\u2014\"no heartbeats, except ours.\"\n\nJessy smirked. No heartbeat for her of course.\n\n\"How far you trust that?\" Jessy said.\n\n\"Hearing a heartbeat? Ten feet maybe.\"\n\n\"That's not very far.\"\n\n\"It's a fucking heartbeat. I can hear breathing a lot further, usually.\"\n\n\"Usually?\"\n\n\"Smart people keep their breathing silent.\"\n\n\"How about smell?\"\n\n\"I can't smell if anyone's behind the door, when the door is air tight. I can smell a lot of scents, a lot of weird, old fashioned scents that make me think we're in some old farm or something. But unless there's a fucking breeze cutting through the door, I can't fucking god damn well smell through it.\" Clara was doing a good job of whispering, despite the blatant malice in her voice. If they weren't trying to be stealthy, she'd be yelling. \"If we had an Irraka with us\u2014\"\n\n\"Irraka?\"\n\n\"Type of Uratha. Stealthy. Good at recon.\"\n\n\"Sounds like a Mekhet.\"\n\n\"And you're a Gangrel.\"\n\n\"Yeap.\"\n\n\"So you're useless.\"\n\nJessy snarled at Clara, a little louder than she probably should have. \"So are you.\"\n\nEric walked up between the two girls again, and pressed his hands to the door. They both stared at him and what he was doing, but neither stopped him; yeah, no point in waiting around for whatever to whatever, they had to press on, and that meant opening the door into whatever dangers lay ahead. The girls backed up, put their weight onto the balls of their feet, and crouched slightly, ready to pounce at whatever exposed itself as the two massive slabs of wood slid apart.\n\nThe classic sound of an old wooden door times a thousand resonated through the hall behind them, and into the grand chamber ahead of them. If their location was unknown before, everyone in the building knew about it now. The two women winced almost as much as Eric, as he lowered his hand. He only pushed one door open, and only a couple feet, but that was enough to make far too much noise. So dead, they were so fucking dead.\n\nJessy poked her head out first. Eric braced to hear a bang, a gunshot, an explosion, a sword slice, something to end Jessy's life; nothing came. After a few moments, she reached behind her, and motioned for them to follow with a few finger waves. Gulping, Eric followed, and stepped into the chamber.\n\nThe hallway had been huge, but the chamber was titanic. The roof was high, very high, so high he had trouble seeing it. Darkness along all sides in the colossal room, the small flames unable to light its size. The gargoyle braziers that lined the hallway behind them, instead lined the enormous pillars of stone before them, pillars five feet wide, pillars that went up at least a hundred feet. Each pillar was topped by a gargoyle statue, each statue with arms raised, holding another pillar that continued the pillar up and up, until it vanished into the darkness.\n\nThe gargoyles had four arms, and four wings.\n\n\"Fucking god.\" He pointed up at the towering creatures. Far away as they were, a hundred feet up on the pillars, it was hard to make out details. But it was enough. \"That's... that's the thing from my dream.\"\n\n\"Ever seen this place before?\" Jessy said.\n\n\"Fuck no.\"\n\n\"Then... I guess we're in this thing's personal nightmare? Cause, yeah, if these statues look like it, then... yeah, must be its own nightmare? Right?\" Shrugging, Jessy touched one of the pillars, starring up at the titanic structure. \"Badass.\"\n\nHe facepalmed. Badass was not the word he would use.\n\nThe three of them drifted around a bit, but ultimately grouped back up, and stood in what they had to guess was the center of the room. The pillars were very far apart, and there were many of them, but at least they seemed to be in pairs; the giant room was actually a giant hallway. Standing between two pillars, in the center of the hall, the tiny fires on the pillars were barely enough to make the walls visible, and each end of the hall was nothing but a wall of darkness.\n\nHe looked up again, and again, and again. The gargoyle creatures were on a knee, all four arms up to hold the pillar above, like Atlas holding the world. Their four wings were spread, catching the tiny flickers of fire light that came from below. Their long tails wrapped around the pillar halfway, and their large, human-like faces stared down at them, horns visible. They really were like the monster from his dream.\n\n\"I guess... that means the guy that showed up at the apartment was a Begotten,\" he said, \"and... and he got into my dream somehow.\"\n\nClara nodded. \"Likely, yeah. You're Cahalith, so your dreams are pretty powerful.\"\n\n\"You know about the dreams?\"\n\n\"All Cahalith have powerful, meaningful dreams, that reach beyond what dreams normally do. I... I didn't think it'd be anything the Begotten would be able to take advantage of, though.\"\n\nJessy put a hand up. \"Maybe the ritual told them more about Eric than just his face and location.\"\n\nCertainly possible for the ritual to tell the hunters he was Uratha, and Cahalith. The fuck did he know about occult rituals and shit? Fuck all.\n\n\"Do... do you have the same dreams I do?\" he said.\n\nShaking her head, she squinted as she stared in one direction of the new, gargantuan hallway. Trying to see the other end, probably, but it was useless. They may as well have been trying to see past the horizon.\n\n\"It's different for all Cahalith. You'd know that, if you stopped being such a jackass and let Avery guide you.\"\n\nHe snorted, clenched his fingers into fists, and looked around a few more times. Pick a direction, pick a direction. Couldn't see the ends of the hallway, and couldn't smell anything in the still air to give a direction; the air was thick with the smell of what he guessed was horse shit, hay, and old metal and stone, but it sat in the air, everywhere, without any inclination of source. But, he could hear something.\n\nHe and Clara both started walking in a direction, the same direction. Jessy raised a brow, but shrugged and followed after them. The sides of the hallway were much darker, so the three of them fell back into the blackness against the wall, and crept forward.\n\n\"Stay close,\" Jessy said. The two wolves raised a brow as they looked back at her, but when a strange, almost cold sensation enveloped them, subtle but there, the vampire grinned. \"I really suck at the cloak of night, but it should be enough to keep us hidden from any basic kine.\"\n\nHe doubted they'd run into any normal humans in this nightmare, but, if they did, a normal human was perfectly capable of calling for help, or shooting a gun. The memory of Mister Pitt, and the way Eric had slaughtered him and his crew, bubbled up in his mind. A gun wouldn't do shit to him when he was transformed, but hunters were hunters, and no doubt they'd have some way of making sure werewolves were\u2014\n\nHe stopped, and stared at Clara, as the woman fell onto all fours, and began to shrink. Fur popped out of her skin, replacing it, as her clothes disappeared into her. Why go into that form now? No, wait, she was shrinking, not growing. Her hands and feet turned into paws, not giant hands of claws and talons. Her mouth grew into a snout, but not a huge one with giant teeth. No, she turned into a perfectly normal looking wolf.\n\nBecause wolves could move silently.\n\nClara sat there, in the dark, her fur blending into the shadows, and waited. Ok, yeah, just transform, on the fly, he could do that. Right? Right, no problem, right.\n\nOk, breathe. You can do this, you can do this; without roaring or making noise or giving away their position any worse than they already had, hopefully.\n\n\"First time?\" Jessy whispered. \"Except for, you know, that other time.\"\n\n\"... yeah.\"\n\n\"The cloak of night will keep the sound suppressed... a little... just don't scream or anything.\"\n\nEasy for her to say. For all he knew, this was going to be painful.\n\nBreathe. He took a deep breath, and another, and another, and looked for that part of himself. As much as he expected it to be a distant, strange, weird thought he'd have to pull out of a hazy memory, he could feel the transformations inside him. The issue wasn't finding the strange, new muscle to flex inside his soul, it was navigating forming the new muscle memory. Like playing the guitar, fingering a complicated riff used muscles you already had, but it took practice to perform the maneuver correctly, to establish the muscle memory.\n\nSo he did it slowly. With long, deep breaths, he tapped deep into his being, and flexed the muscle to be wolf, to be on four paws, to be low to the ground, to be a creature of fangs and speed and howls. Fur overcame his dark skin, and jeans vanished into his body. His spine warped, elongating, sprouting a tail. Fingers shrank, fingernails grew, and his palms raised before shrinking as well, the whole of his hands becoming paws.\n\nA wolf. He was a wolf. He sat on his haunches, like a canine would, and looked around, tilting his ears in different directions as he listened. He could hear more, and his initial choice on direction was the correct one. There was noise coming from the darkness, far, subtle, like breathing, and maybe sliding of something soft on stone.\n\nHe was a fucking wolf. That was so hard to wrap his mind around! Like switching a gear, flexing a muscle, like breathing, he was now a different thing. He turned around a few times, and almost jumped at the sight of his tail, before he looked up at Jessy. Her jaw had dropped, and she stared at him with wide eyes as she brought her fingers up to her lips.\n\n\"You. Are. So. Cute!\" Still whispering, thank god, she fell to her knees, and hugged him, wrapping her arms around his chest as he sat down on his butt. \"Oh my god oh my god oh my god.\" Squeezing him, she rubbed her neck into his, her cheek to his ear, and pet his fur.\n\nHis tail started wagging. He didn't tell it to, but damn if it didn't start wagging behind him. He could feel the mental connection, something in his mind as automatic as smiling; tail wagging. Being pet felt really good too, and all the nerve endings fired off little explosions of joy where her fingers ran.\n\nPart of him wanted to lick her, too. But, too weird.\n\n\"Ok,\" she said. \"I can keep the cloak of night going while we're all transformed.\"\n\nWait, what?\n\nHe stepped back from Jessy, and blinked, a lot, as the woman started to go through the same transformation. She winked at him as she began to shrink, as fur overcame her clothes, as paws emerged, and her mouth and nose morphed into a snout.\n\n\"Gangrel, mother fucker. I'm awesome,\" she managed to say before her lips disappeared. With her ears up and her tail wagging slowly, she became a wolf as well, fur darker than Eric's or Clara's, but still gray.\n\nWhat in the fuck. Vampires could turn into wolves? He thought that maybe, just maybe, they could turn into bats, but wolves was not on the list of things he expected to see out of Jessy. Panting a couple times, she walked over to him, paws quieter than her bare human feet could be, and nudged her nose into his side. Twice.\n\nHe had the sudden urge to pounce her, and play fight. Eric you dumbass, you're in a fucking nightmare and you've turned into a wolf because it's easier to sneak around this way. It's very dark, especially along the wall, and your gray bodies blend into the shadow. Your paws make less noise than shoes, or bare feet in your case and Jessy's, and both your hearing and sense of smell are greater than they were before. Stealth mode, not dog wrestling mode.\n\nMaybe he could wrestle later.\n\nHe wanted to laugh, but laughter wasn't a canine reflex. His tail wagging spoke for him, and he pressed his body into Jessy's, both to play a little, and push her toward the wall so they could continue their stealthy journey into inevitable death. She made a couple whining sounds, not happy about his focusing on keeping them alive, apparently, but fell into a prowling stance as she started forward, behind Clara. He fell in behind her, and kept looking around, forcing himself back to awareness.\n\nLooking up was proving surprisingly difficult. Could dogs look up?\n\nThink about that later. He craned his neck to look behind him, and then to the right, where the enormous hallway lay, pillars lining its depths. A tail in front of him was wagging, only a little, but wagging, and Eric found himself looking at Jessy's wolf butt. It was a nice wolf butt; he had no idea how he knew what a nice wolf butt looked like, but it was. Oh god, this was a dangerous road to take the mind down. Abort, abort!\n\nAgain he found himself wanting to laugh. What was it about Jessy that made him laugh so easily?\n\nThey continued along, shoulders and heads low, each step calculating and silent. It may have been a pointless attempt at stealth, considering they made plenty of noise earlier, but maybe not. What he was more concerned about was whether heading toward the noise was the right call. They could simply go hide somewhere where there was no noise, and wait for rescue. Waiting for rescue was the problem though. He didn't say it, and the girls didn't say it, but they all knew the possibility of rescue from their current circumstance was slim. They'd been transported into a literal nightmare, not into some corner of Dolareido. Could Azamel's people reach them here? Would they even try? Maybe, maybe not. But sitting around waiting for something to happen was a dangerous choice, so, he went with being proactive.\n\nWhat'd he hear, once? Action is not inherently superior to inaction. This was a ballsy, risky move, and it could get them killed.\n\nChrist, what he would do to be back in his new, fancy apartment, sitting in his hot tub, and sharing a glass of wine with Jessy. Except, she'd have a glass of blo\u2014actually, she'd be sucking on his neck, and riding his dick as she did. After, after that, they could sit down in the tub, relax, and Eric could try and enjoy the new wonders of his life. If they lived through this, if spirits left him alone, if Avery left him alone, if the vamps didn't drag him into some war, if Azamel didn't demand he become her guard dog.\n\nHe glared at Clara, over Jessy's back. Her prowling was amazing, and Eric became very conscious of the sound of his own paws against the stone, barely audible to him, let alone anyone else outside Jessy's stealth aura. She was right, and he should have let Avery take him on a hunt or two, teach him a few things about being Uratha. But, he just wanted to be left alone.\n\nThat mindless attachment to this ideal of solitude and peace, was going to be his undoing. Old habits died hard though. He knew it, and he saw it in his dad every day. Christ, he was more like his old man than he wanted to consider right now.\n\nIt took a while to get to the source of the subtle noises, but with time, a wall in the distance appeared. Tall, almost unending, disappearing into the darkness above. Stone, and more stone. But it was the thing against the wall between the two final pillars, that had the three wolves staring. A chair of stone, big, heavy and thick, huge slabs of stone carved and combined. It was a throne, with two of the familiar gargoyle braziers in front of its arms, casting flickering amber light over the seat. Upon the huge chair's back, was another gargoyle statue, like the ones that held up the centers of the hundreds of pillars. A colossal carving of darkness, four arms, each reaching down to grip onto the equally massive chair's back, along with its two legs. Its four wings were raised high, and Eric stared at them, squinting, looking for any signs of movement. No, they held perfectly still, as did the rest of the creature; a statue like the others.\n\nThe man in the chair didn't hold still. He breathed, he sighed with apparent boredom, and he twirled a knife along his knuckles as he waited.\n\nJeremiah. He wore the same trench coat last time, brown, and with many subtle pockets, likely filled with knives, ammo, and god knows what. Short gray hair combed back, and a short gray beard sliced with several scars. Tattoos started on his neck, before vanishing underneath a black shirt, and he wore a necklace with a coiling circular shape dangling against his chest.\n\nEric froze, and stared at the necklace. Last time he'd seen one of those, it was on the hunters that had jumped him and Fiona, and it'd been glowing white. This time it wasn't. Maybe it only reacted to nearby Begotten then.\n\nEric slid up further, enough for Jessy and Clara to see him, and he nodded his head toward the man on the rock throne, while baring his teeth. Both of them had no doubt read a description of Jeremiah, but Eric wanted to confirm. This fucker was dangerous, and out to kill things like them.\n\nThat was more than enough for Jessy, who lowered herself to the floor until her belly was almost touching it, and began to work her way into the corner of where the hallway wall met the end. A pillar stood between them at the throne, and little light reached past it. It was enough for a possible sneak attack, but it was also a really stupid idea to try and sneak attack a man who looked like he killed bears with his bare hands.\n\nClara didn't agree. She crouched low, and came up beside Jessy, blurring into the shadows behind the pillar, and sneaking up along the wall the throne sat against. They wouldn't be able to get behind the throne, its back many feet deep and connecting to the wall; a perch for the enormous gargoyle statue. But the throne's actual seat sat far ahead enough they could stick to the wall, get in close, and go in for the kill.\n\nThe monster had to be around somewhere, though. How he had managed to disappear after pulling them into the nightmare, Eric didn't know. Could have been a trick or something, but when he entered the nightmare with Fiona, she transformed beside him.\n\nNo, focus. This was an amazing opportunity to deal a blow to the fuckers threatening everyone and everything his new life had brought him. It could be a trap, or it could be an opening. Jeremiah was alone; maybe the Begotten apparently working for him got separated? If the Begotten didn't appear with the three of them in the room they arrived in, maybe he got separated, or was still back in the real world.\n\nNo more time to think. Clara and Jessy were both sneaking up alongside the long slab of stone that served as the chair's legs, and he followed up behind them. A few more glances up showed the enormous gargoyle statue, still as a stone, body dark and flickering with only hints of fire light. God it was creepy, being so close to it, where he could feel the heat of its body radiating.\n\nHeat?\n\nSomething massive swung out, and slammed into his back. Tail! The fucking tail. Oh fucking shit. It crashed against his spine, and flattened him, hard leathery skin of the monster combined with momentum and weight more than enough to crush him into the stone below. Pain scorched through him, the cracking of ribs like twigs, and the puncturing of organs. Like before, just like before, this monster was going to kill him.\n\nHe looked ahead, and barked fury as the beast reached down, and scooped up Jessy. Clara leapt away, but the beast swung out a wing, exploding air and sound and heavy mass in all directions. The tip of the enormous wing clipped her, and sent her spinning through the air, barrel rolling until she landed on her side twenty feet away, in front of the throne.\n\n\"Well well, I was wondering when you'd get here.\" The old man chuckled on his throne, but Eric couldn't see him. At least he couldn't, until one of the massive hands reached down and scooped him up. Being in the monster's grip, with his ribs shattered and poking holes into his innards, sent lava scorching through his body. The beast turned his head to them, most of his features hidden in the dark, but the eyes began to glow red all the same. Only now did an odor of leather and alien life emit from the entity.",
        "It was a trap. Of course it was a trap.\n\nStill sitting on his perch, the monster held out the two wolves in front of the throne, reaching over it and using his immense size for balance. Jessy and Eric could not move, as they were held before Jeremiah.\n\n\"Three werewolves?\"\n\n\"No.\" That deep voice, filled with bass, but mixed with weird overtones of vocal fry, harsh and raspy. \"This one is Kindred.\" The titan held Jessy closer to Jeremiah. She snarled, howled, barked, growled, and squirmed with all her might, but the monster's hand was big enough to keep her canine waist completely circled, and trapped.\n\n\"She must have sucked a wolf dry at some point then.\" Shrugging, Jeremiah reached out, and pat Jessy on the side. \"No idea where a city vamp would get a wolf for a meal.\" Laughing, Jeremiah looked at Eric, and winked at him. \"Hello Eric Tanverson. You're going to tell us everything you know, and even things you don't.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal",
        "paranormal romance",
        "slow",
        "suspense",
        "violent",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-05-ch-15"
}