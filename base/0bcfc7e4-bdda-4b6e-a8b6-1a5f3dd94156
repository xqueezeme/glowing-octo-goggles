{
    "title": "A Certain Tension Ch. 10-14",
    "pages": [
        "Author's note: Thank you again for your patience on this next installment and for all your support! More to come on this one. -FFF\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~</p>\n\nChapter 10\n\nIn a family full of big personalities, I've always thought of myself as one of the more understated members. But if anyone could see me now as I anxiously pace back and forth on a quiet New York sidewalk, they wouldn't believe that.\n\nI smooth out my jumpsuit for maybe the hundredth time as I glance down the street, waiting for everyone else to arrive. In LA, the fashion tends to lean towards intentionally casual and I'm not used to dressing up this much. But this is Manhattan, and not only did Holly text me four times to make sure I didn't wear jeans, I'm also hyper aware that Annie will be here.\n\nI shouldn't care what Annie thinks of my appearance. And I absolutely shouldn't want her to want me. But I'm far past lying to myself at this point. I do care. And I do want her to want me. My mind and body have been on overdrive since our kiss this morning and there's nothing I can do to calm it.\n\nSo as much as I pretended to resist Holly's fashion advice, I took more time getting ready for tonight than I have in years. As I pace past the hotel I'm in front of again, I'm able to catch a glimpse of myself in the lobby window and stop to make sure my hair is still intact after all my moving about.\n\nIt's rare that I ever try to tame the wild mess that sits on top of my head, and we'll see how long the low bun I tied my unruly hair into holds. But I won't hold my breath. It never holds.\n\nI take one more look at my black jumpsuit and heels, tilting my head back and forth at my own reflection before shaking it and rolling my eyes at myself. If I'm going to keep Kat and Holly from thinking something is going on with Annie, I need to get a grip and fretting over my appearance is definitely out of the ordinary for me.\n\nI turn quickly from the window when I hear something pull up to the curb. Holly climbs out of a black car and if I felt like I was dressed up, it's nothing compared to my cousin. Ever since we were teens, Holly has known how to dress herself and tonight, she did not disappoint. With her red, curly hair flowing over a skintight green dress, Holly looks glamorous and I'm guessing most people who saw her like this wouldn't assume she's a teacher by day.\n\n\"You don't get points for being early,\" she says as she walks over to me. \"Nobody but me is here to see it.\"\n\n\"I don't think being on time this morning would have made Jake's mom like me any more than she did.\"\n\n\"Maybe it's because you showed up to brunch late, looking like you just rolled out of bed.\"\n\n\"Says the woman who came in slippers.\"\n\nHolly smirks and then takes a step back so she can make a show of analyzing my outfit.\n\n\"Glad to see you still clean up nicely,\" she says. \"I guess you decided against skinny jeans?\"\n\n\"More like I was guilt tripped out of them. By you. If that wasn't clear.\"\n\n\"Still. I did not expect eyeliner. And cleavage.\"\n\nI self-consciously look down at myself. My jumpsuit isn't tight, but the top does cut down my chest, so an ample amount of my cleavage is on display.\n\n\"You seem nervous,\" Holly says, causing my eyes to snap back up to her face and away from my outfit choice. \"Is it because Kat is bringing her hot friend? Is that why you're in heels?\"\n\nHolly smiles widely at me, and I do my best not to scowl. I may be able to avoid talking about my love life with Kat since she's so much younger, but Holly grew up pestering me about women. The two of us even came out to each other on the same night when we were sixteen and talking about who we're dating has always been a consistent part of our friendship.\n\n\"I'm in heels because you told me not to wear my Vans and that's the only other thing I brought to New York,\" I respond. \"Besides, how do you know Lilly is hot?\"\n\n\"Kat showed me a photo.\"\n\n\"You're single. Why don't you date her? You actually live in New York and don't have perpetual baggage.\"\n\nI meant the comment as a joke, but Holly's face suddenly becomes uncharacteristically serious as she looks at me. \"Or you could let go of that baggage, Charlie,\" she says in a quiet voice. \"And move home. All you have to do is get your head out of your stubborn ass.\"\n\nI can't help but smile at her direct response. \"You're so much like your dad sometimes.\"\n\n\"And you're like yours. Brilliant and stubborn.\"\n\nEven with the pretense of teasing each other, I can tell where this conversation is going and it's a place that I really don't want to visit on Kat's bachelorette night. I make a show of looking at my phone so I don't have to answer and though I can feel her eyes on me, Holly doesn't push the topic.\n\n\"Anyway, Lilly isn't my type,\" she says instead, clearly reading my mood, which I suppose is one of the benefits of hanging out with someone who's known me for so long.\n\n\"Not enough tattoos?\" I ask.\n\n\"None from the photo I saw. She's your type though. Believe me.\"\n\n\"Everyone seems to think they know my type and yet I don't even know my type. Maybe I don't have a type.\"\n\n\"Oh, you do. You like them feminine, but not overly girly. Long hair. Light eyes. Polished. Somewhat sophisticated and cultured. Clean.\"\n\n\"Clean? As opposed to...dirty?\" I ask, laughing at my cousin's simplistic description of what I'm attracted to.\n\n\"Not dirty. But I like a little grit and grunge to someone. Your type is more like--\" Holly trails off as she looks down the street. \"Annie.\"\n\nMy stomach drops as soon as the name is out of her mouth.\n\n\"What? No, it's not,\" I say, far too defensively, but when Holly turns her head to me, she just looks confused.\n\n\"What are you talking about?\" she asks. \"Annie,\" she repeats, pointing down the street. \"She's here.\"\n\nI turn to the direction Holly is pointing and far up ahead I can see Annie walking towards us.\n\nEven if Holly wasn't calling out Annie as my type like I thought she was, that realization does nothing to temper my racing heartbeat. And now that I'm in person with Annie again, I know that I lied to my cousin before. I do have a type. And she's walking down a long Manhattan block towards me now.\n\nThis part of 10<sup>th</sup> avenue is long and she's still pretty far away from us, but that just gives me more time to stare at her. And even from this distance, I can see that her eyes are on me.\n\n\"Now there's a woman who transcends type,\" I hear Holly say from beside me. \"How the hell is she with Ian?\"\n\n\"That's a good question,\" I reply quietly, not tearing my eyes away from the woman.\n\nUntil now, I had concluded that my major mistake in all of this was going to The Runaway on Wednesday night. As if everything would have been fine if I had met Annie in a different context-- one in which a \"we\" was never even considered to be a possibility. But as I watch her walking toward us, as if the entire Manhattan block is her personal runway, I know that it doesn't matter how I met her. I would have wanted Annie regardless. My entire body vibrates with desire for her.\n\nAs she gets closer, I can feel my breathing becoming shallow and I'm glad there's enough New York street noise to cover it up. Annie has always affected me strongly and she's always looked gorgeous, but tonight, she is literally breathtaking.\n\nThrough her long, open peacoat, I can see she's wearing an elegant, yet very short, midnight blue dress and since our night together at the Dawson, this is the first time I've gotten to see her bare legs so clearly. It doesn't help that she's wearing a pair of silver heels that accentuate just how long they are, and it takes all the self-control I have not to blatantly stare at them.\n\nI force my eyes up, landing on what looks to be an intricately designed bodice that fits tightly over her breasts. Her hair is swept up high tonight and though I usually crave to see it down, flowing in perfect waves over her shoulders, this new view of her exposed neck and pronounced clavicles causes a wave of arousal to hit me. I'm just glad I'm wearing black. I don't know how long my underwear will hold back the wetness I can already feel starting to pool there.\n\nOnce she's in front of us, Holly moves over to her and pulls her into a quick hug, which I'm thankful for because now that I can see her and smell her familiar perfume, I'm basically just a useless puddle on the sidewalk.\n\n\"Hey, Annie,\" Holly says, taking a step back and looking at Annie's outfit. \"You look gorgeous. This dress is incredible.\"\n\n\"Wait until you see the back,\" Annie says, her aqua eyes moving over to me with a heated expression. \"But thank you, Holly. You look beautiful too.\"\n\nThough she's talking to my cousin, her eyes are on me as she says it and I can't help but think the words weren't meant for Holly. I know I should act normal and say hello, but my mind is now fixated on what the back of Annie's dress could look like and soon, a silence falls over the three of us with Annie and I just staring at each other.\n\n\"And you remember Charlie from dinner I assume?\" Holly says, breaking the awkward moment with a laugh. \"I mean, how could you not? Sounds like it was eventful.\"\n\nAnnie gives me a small smile before her eyes rake their way down my body-- and not subtly. \"It was indeed. And of course I remember. It's good to see you, Charlie.\" Annie's eyes stay on mine for only a moment before she's looking at my outfit again. Or more accurately, my chest. \"You look amazing,\" she finally says.\n\n\"She won't admit it, but she's trying harder tonight because Kat is bringing a hot friend with her who she wants Charlie to meet,\" Holly chimes in, oblivious to the sexual tension brewing between Annie and myself.\n\nAnnie's eyes snap up from my chest to my face and though I can't read her expression, the heat that I could feel emanating off her just a moment ago is gone. I wish I could tell her that the only person I dressed up for tonight is her. But even if Holly wasn't here, it probably wouldn't be advisable for me to admit that to Annie.\n\n\"I see,\" Annie says simply. \"Playing matchmaker at her own bachelorette party? That's ambitious.\"\n\n\"Kat has a lot of energy,\" Holly responds.\n\nAnnie gives me another long look before turning her attention to Holly. \"Where is Kat?\" she asks.\n\nHolly pulls out her phone to look at it. \"She'll be here any minute. Two of her best friends from childhood got ready with her and had planned some things to surprise Kat.\"\n\n\"And where is your date?\" Annie then asks, bringing her intense gaze back to mine.\n\n\"It's not a date,\" I respond, maintaining eye contact.\n\n\"You might change your mind once you see her,\" Holly says as she continues to look at her phone.\n\n\"Why? Is she pretty? Annie asks.\n\n\"Very,\" Holly responds before she looks up and pushes my shoulder lightly. \"Charlie is just being boring. She used to be more fun than this.\"\n\nAnnie narrows her eyes at me slightly and smirks. \"Did she?\" she asks. \"That's interesting.\" She then looks up at the hotel we're standing in front of. \"Isn't it against the family rules to eat at a non-Dawson hotel?\"\n\n\"I'll just tell my dad it's for competitive analysis,\" Holly says with a shrug. \"Besides, the hotel doesn't own the restaurant and it's one of the best in the city. You have no idea what I had to do to get us a private room.\"\n\n\"Do I want to know?\" I ask, relieved that the conversation has moved on from my nonexistent date.\n\nHolly gives me a smirk and shakes her head slowly. \"Nope,\" she says before turning to Annie. \"Kat thinks she's a foodie even though she works so much that she never eats anything but store-bought ramen in her clinic. All she said she wanted for tonight was a good meal with a small group of friends.\"\n\n\"Well, I'm honored to be invited,\" Annie replies.\n\n\"Of course you were invited,\" Holly says. \"Besides, you need to see that not all Dawson family dinners end in fights.\"\n\nBoth Holly and Annie look towards me, but as they do, a limousine pulls up to the curb and I've never been more thankful to see obnoxious opulence than in this moment. The last thing I want to do is talk about Ian and our family dinner.\n\nWe all turn our attention to the limo to see a giggling Kat, along with her friends Lena and Juliet, tumble out. Their loud voices and incoherent chatter make me think the group of women probably had a couple drinks as they got ready for tonight.\n\nThough I haven't seen Lena or Juliet in probably seven years, the two women haven't changed at all. Kat met both in first grade, so I've essentially watched them all grow up. And as much energy as Kat exhibits on a daily basis, it's nothing compared to Lena and Juliet.\n\n\"Hello, ladies!\" Kat shouts far louder than is necessary as she comes closer to us. \"Hello, sister,\" she then says, moving over to me and giving me a hug. \"You look so good.\"\n\n\"Hello, sister,\" I repeat, smiling at the silly mood she seems to be in. \"You look even better.\"\n\n\"That's true,\" she replies, doing a twirl in her dress as she laughs.\n\n\"Wow. Charlie Dawson. I haven't seen you in years,\" I hear before I'm being pulled in for a fast hug by Juliet.\n\n\"Not without me!\" Lena shouts and throws her arm around Juliet so I'm essentially being smothered by the two of them.\n\n\"It's nice to see you both have managed to grow up and stay out of prison,\" I say when they finally let go of me.\n\n\"Who said we've stayed out of prison?\" Lena says.\n\n\"I guess I figured Kat would have told me if her two best friends were incarcerated,\" I reply.\n\n\"We don't tell Kat everything,\" Juliet says, causing Kat to turn around from where she's talking to Holly and Annie.\n\n\"Honestly, you two tell me too much,\" Kat says before pointing at each of them. \"Annie, this is Lena and Juliet. I've known them for, well, forever. So don't listen to a thing they say.\" Kat gives her friends a wink. \"Guys, this is Annie. Ian's girlfriend.\"\n\nI watch the two excitable women move in and pull Annie into a hug, eliciting a laugh from the beautiful woman. Kat's mention of Ian causes my stomach to tighten as it always does, but I'm almost glad she did it. With Annie looking the way she does tonight, I'll need every reminder I can get that she's untouchable.\n\n\"Chloe and Laura are already in the lobby,\" Kat says once everyone has said their hellos. \"And Lilly should be here soon,\" she adds, looking pointedly at me as she says it.\n\n\"We should head in to make the reservation time,\" Holly says, showcasing once again why she is the real Maid of Honor. She may be a bit of a party girl at times, but she can also be fairly neurotic about logistics.\n\n\"Sounds good,\" Kat says before turning to me. \"Charlie, why don't you wait out here for Lilly and bring her in when she gets here?\"\n\n\"I'm sure she'll be able to find her way to us,\" I say, giving her a sisterly look that I know she'll recognize. If she's trying to be subtle about this whole set-up idea, she's failing.\n\n\"Personal touch, Charlie,\" Kat says with a wink, repeating her words from yesterday.\n\nI can't get a sober Kat to understand why setting me up during the few short weeks I'm home is a bad idea, so I certainly won't be able to get this overly tipsy Kat to see reason. And it doesn't really matter, because a moment later, my sister is shuffling the other women into the doors of the hotel.\n\n\"Take the elevator at the back of the lobby up to the 56th floor,\" Holly says to me as she follows Kat. \"They'll show you to the table once you're up there.\"\n\nAnnie is the last to follow the group to the door and before she goes through it, she turns around and looks at me with a serious expression on her face. I wish I could pull her into a kiss and tell her that this silly \"set-up\" of Kat's means nothing. I wish I could tell her the only person I want to date is her. But for so many reasons, I can't do that.\n\nFinally, when Annie turns and walks into the hotel, I'm left standing on the street alone, wishing my sister had listened to me for once in our lives.\n\nI spend the next few minutes waiting in the cold and regretting the flimsy jacket I wore over my jumpsuit. But luckily, I don't have to wait long and soon, a yellow cab pulls up to the curb and a dark-haired woman with the longest legs I've ever seen steps gracefully out of the car.\n\n\"You must be Charlie,\" she says as she walks up to me.\n\n\"I am,\" I reply, putting my hand out for her to shake, which she ignores in lieu of leaning in to kiss my cheek.\n\nWhen she pulls away, I'm able to get a better look at her and Holly was right-- Lilly is hot. She has on a short, simple black dress and heels and she looks like a woman who could get into any Manhattan nightclub with just a flip of her long, black hair and then run a Fortune 500 company the next day.\n\n\"Kat said you'd be waiting for me. How chivalrous,\" she says next, and I can already tell that she's in flirt mode. It's clear that Lilly is confident and I'm guessing she has no trouble finding dates.\n\n\"Not really,\" I say with a small smile that I hope isn't too inviting. \"Ready to get out of this cold?\"\n\n\"Absolutely. Lead the way, gorgeous.\"\n\nLilly winks as she says it and in any normal circumstance, I'd recognize my in and I'd take it. Especially with those beautiful blue eyes giving me a not-so-subtle look of desire. But my mind is still in Annie-land and I don't know if it will ever leave.\n\nI don't say anything else to Lilly before turning around and leading the way into the building. The sooner we get upstairs, the sooner I can see Annie again.\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\n\"Have you been here before?\" Lilly asks as we wait for the elevator to take us up to the restaurant at the top of the hotel.\n\nShe's so close that I can feel her breath on my neck. Given how forward she's already been, I have to assume that my sister told her this was some kind of a date.\n\n\"No, but I've read about it.\" I keep my eyes forward and try to will the elevator to get down to the lobby faster.\n\n\"Same. I can't believe we even got in. Especially with a big group. My friend is a bartender at the hotel bar and said you have to get reservations months in advance.\"\n\n\"Holly has a lot of connections. She's the one who got us in.\"\n\nI don't want to say that dropping the Dawson name can go pretty far in this city, but it's true. And though Holly is a social butterfly of sorts, I'm guessing she had to use our uncle's connections for this particular place.\n\nThe elevator arrives and I move back so Lilly can enter first. We're quiet on the way up and part of me feels bad. If things were different, I would turn on my charm and at least make small talk considering she's my sister's co-worker and friend. But I don't want to give her the wrong impression so for now, I stay quiet and make a show of looking around the elegant elevator.\n\nZenith, the restaurant that sits on top of the hotel, is known for its superb food first and foremost, but also its stunning views. And as we step off the elevator and into the restaurant, I can see why. The entire room is lit by small, twinkling lights that hang delicately from the ceiling, allowing us to see the full effect of the New York skyline. Everywhere you turn, you're gifted with a different view of Manhattan and beyond and I can't remember the last time I saw it all like this.\n\nAfter giving the hostess my name, she leads us through the main room to a private dining room that has a long table in it seating the rest of the women, including two new women I haven't met yet who I assume are Chloe and Laura.\n\nJust like the main part of the restaurant, this room feels majestic with floor to ceiling windows showcasing the expansive view of downtown. But even the clear view of the Empire State Building, plus the elegant ambience of the room itself, can't tear my eyes away from Annie, who's sitting at the end of the table.",
        "Now that her coat is off and I can see her whole dress, I'm grateful the reveal didn't happen in front of Holly. I probably would have given myself away. My mouth goes dry as I look at her and I have no idea what Annie meant earlier when she mentioned the back of her dress-- because there is no back of the dress. In fact, with both her back and her long legs exposed, there isn't much dress to even speak of. The only thing that might save me from drooling throughout this dinner is the fact that the only two empty chairs are on the other end of the table from her.\n\n\"Oh, good, you're here,\" Kat says loudly, holding up a drink she's already consumed most of.\n\nI take the seat next to her, which still gives me a good view of Annie down the table, while Lilly moves into the chair directly across from me. As we settle in, Kat introduces us to Chloe and Laura and though I say a polite hello to each woman I'm so consumed by Annie that I can't even remember which one is Laura and which one is Chloe.\n\n\"Isn't the view amazing?\" Kat asks, leaning into me.\n\n\"It is,\" I say, locking eyes with Annie. \"I know you've been wanting to come here.\"\n\n\"I'm just sad Jake can't be here,\" Kat replies, pushing her lip out in a pout. \"He's been dying to try it.\"\n\n\"None of that tonight,\" Juliet says from her seat next to Annie. \"You get him for the rest of your life. Tonight, we party.\"\n\n\"By eating,\" Kat says with a giant smile on her face.\n\nHolly, who's sitting on the other side of Kat, suddenly lets out a loud laugh. \"You didn't think we were just having dinner tonight, did you?\" she asks.\n\n\"We're not?\" Kat asks.\n\n\"This is a bachelorette party,\" Holly replies. \"This is just stop one.\"\n\n\"I don't remember the last time I went out past ten,\" Kat says.\n\n\"That's because you work too hard at the clinic,\" Lilly chimes in before looking at the rest of the table. \"Believe me, I see her do it on a daily basis.\"\n\n\"How about you just take over for me?\" Kat asks.\n\n\"I'm not qualified for that,\" Lilly replies with a smile.\n\nThe conversation is interrupted when a server comes into the room and takes another round of drink orders. As I hear Annie order a bourbon, I'm thrown right back into my hotel room and memories of how that dark liquor tasted on her lips. My eyes are drawn to her mouth and it's not until I hear my name that I'm shaken out of the moment. When I look back to Lilly, her eyes are on me and her eyebrows are raised.\n\n\"Sorry, what?\" I ask.\n\n\"I asked if you're an animal lover like your sister is,\" she says.\n\n\"Oh. I guess,\" I reply, trying to temper the blush I can feel creeping up my face after getting caught daydreaming about Annie so blatantly. \"Not like Kat is. I don't want to see them when they're sick.\"\n\n\"Charlie is scared of dogs,\" Kat says playfully to the table. \"When we were younger a dog sniffed her, and she never recovered.\"\n\n\"The dog didn't sniff me,\" I reply defensively. \"He tried to eat my underwear off me.\"\n\n\"It was a teacup chihuahua,\" Kat says, now fully laughing. \"I don't even think it was capable of doing that.\"\n\nI hate how warm my entire body feels when I look down the table and see Annie laughing along with Kat, but the sight makes me smile despite myself.\n\n\"Whatever,\" I say to my sister, rolling my eyes and turning my attention back to Lilly. \"How long have you worked at the clinic with Kat?\"\n\n\"A year. Your sister has taught me so much. And she's become a very good friend.\"\n\n\"I couldn't have gotten through this year without you,\" Kat responds, blowing a kiss to Lilly. \"And I'm very happy you two are finally getting to meet.\"\n\nEven if she wasn't tipsy, Kat wouldn't be subtle so I'm not that surprised by her comment or the pointed look she's directing at Lilly and me-- even if it does make me squirm in my seat.\n\n\"I'm glad too,\" Lilly says and as I watch her blue eyes roam from my face down to my chest, I feel a wave of annoyance at both of them.\n\n\"What's your next exhibit?\" Annie suddenly asks. The question is so abrupt that it takes me a moment to realize she's talking to me.\n\nI look at her for a moment before answering and have to wonder if her intention was to end my conversation with Lilly. Either way, I'd rather be talking art with Annie than past canine trauma with Lilly, and Annie's slight show of jealousy makes me happier than it should.\n\n\"We're featuring a few different local artists that all focus on geometric abstraction. Each one uses a different medium. One of my favorites uses recycled products to create models and then photographs them. They're beautiful.\"\n\n\"That sounds really fascinating,\" Annie responds, leaning forward. \"One of my favorite courses was about cubism and I've always been fascinated as to how it's evolved.\"\n\nI open my mouth to ask her more questions about school, but I'm cut off by Lilly.\n\n\"Are you an artist too, then?\" she asks Annie.\n\nI watch Annie wrestle with her response as the new round of drinks and appetizers are delivered. I know from experience that she's not comfortable talking about her own experience in the art world, so I'm curious as to what she'll say.\n\n\"No, not really,\" she finally says as the group starts digging into the food. \"But I went to art school.\"\n\n\"I didn't know that,\" Holly says, looking between Annie and me. \"I guess you two have that in common.\"\n\n\"Among other things,\" I say.\n\nI notice Holly's brow furrow slightly but everyone else at the table seems to be too inebriated and distracted by the food to think anything of my comment. Annie doesn't look shocked or even upset by what I said, simply lifting one confident eyebrow at me. The look sends a shiver down my body and if there was any question as to which version of Annie is here tonight, there isn't any longer. This Annie owns the room and I catch myself thinking of this Annie as my Annie.\n\n\"You're pretty sexy when you talk about art,\" Lilly says to me next, clearly oblivious to the sexual tension cutting straight through the table.\n\n\"Damn, girl. Can I borrow some of that confidence for when I hit on men?\" Lena asks from next to Lilly.\n\nLilly directs a flirtatious smile at me, apparently not bothered in the slightest for being called out by Lena. \"You just have to set your sights on someone and go for it,\" she says.\n\n\"Do you like art, Lilly?\" Annie asks, leaning down the table.\n\nI notice that Holly's eyebrows are raised as she looks at Annie and I'm not sure if she has sensed something's off or if she's just not used to such a vocal, confident version of the woman.\n\nLilly hums for a moment as she takes a sip of her wine. \"Well, sure. I like to go to The Met every now and then and there was this fabulous photography exhibit at The Guggenheim recently. Kat and I went. But I can't remember the artist's name. Something to do with poverty.\"\n\n\"That was good,\" Kat says, chiming in and by the way her \"s\" slurs, I can tell my sister's getting drunker by the minute.\n\n\"That was Peggy Jackson's work. I saw it too,\" Annie says, bringing her gaze back to me. She looks like she just won some contest, and the confident look goes straight from my eyes down to my pussy.\n\nA group of servers enter the room with a number of family-size entrees, but despite how good it all smells, I finally feel like I have freedom to ask Annie more about herself and I don't want to miss the opportunity.\n\n\"What kind of art did you make?\" I ask.\n\nAnnie seems just as disinterested in the food as I am, and she gives me a thoughtful look. Tonight, she doesn't seem guarded like she did the night we first met. Her expression is open, and I can see the spark that first drew me to her flashing clearly in her eyes.\n\n\"I've dug into a few. But lately I primarily focus on portraits. Simply using charcoal.\"\n\nMy eyebrows raise in surprise and not because of her medium. Mainly, I'm surprised she's speaking about it in the present tense.\n\n\"How do you keep your fingers so clean?\" I ask with a smirk.\n\n\"It's groundbreaking. I use soap. Clean and ready,\" she says, waggling her fingers in the air.\n\nMy mouth opens and closes and it's not because I can't think of anything to say. I just can't think of anything appropriate to say.\n\n\"See? Now, portraits are an art form I can get behind,\" Lilly says. \"I guess when I see modern art, I don't really know what I'm looking at. Like anyone could have thrown some paint on a canvas, you know?\"\n\nOut of the corner of my eye, I can see my sister flinch. If there was anything this woman could have said to turn me off, she just said it. It's not that I need to date an art expert. But someone who lumps all modern art into one category and can't see the beauty in so many of its forms, probably isn't for me.\n\n\"Try these scallops,\" Kat says, pushing something onto my plate. \"They're amazing.\"\n\nI know my sister is trying to smooth over the moment, but it's not needed. I wasn't going to respond to Lilly's comment anyway-- we're not on a date so it doesn't matter if we're compatible. I take a bite as the rest of the table starts talking excitedly about the dishes they're enjoying.\n\nI'm relieved that I'm not the center of attention anymore and that the food has taken over focus. As much as I enjoy talking to Annie about art, it's also exhausting trying to balance my desire for her with needing to keep it a secret.\n\nAs we eat, the Zenith servers make sure that our glasses are never even close to empty and by the time the dessert is being cleared from the table, I can start to feel a heavier buzz.\n\n\"So, where is stop number two?\" Kat asks Holly.\n\n\"You'll see,\" Holly replies as she signs the bill and puts on her coat.\n\nKat rubs her stomach in an exaggerated way as she leans back in her chair. \"Well, at least tell me that stop number two is the last stop. I'm so full, I could sleep for a week right now.\"\n\n\"Yes, I know you very well, my cousin,\" Holly replies, putting her arm around Kat's chair. \"Dad secured us a suite at the Dawson Midtown. We can pass out there later.\"\n\n\"Does Jake know I'm not coming home tonight?\" Kat asks.\n\n\"Yes, he knows,\" Holly says.\n\nI catch Annie's gaze as I put on my jacket, and I know she's thinking the same thing I am. The only thing the Dawson Midtown will ever remind me of is my night with Annie and I'm desperate to know if she's planning on joining the group there later tonight. That seems like an entirely too tempting and risky situation.\n\n\"Are we all ready?\" Holly asks, looking around the table.\n\n\"Are we all getting into cabs then?\" Laura...or Chloe...asks as we all start to stand up.\n\n\"No, no,\" Juliet replies. \"The limousine is ours for the night. It's our gift to the bride for her bachelorette party.\"\n\n\"I have the best friends,\" Kat says.\n\n\"Remember that sentiment tomorrow when you're nursing your massive hangover,\" Lena replies.\n\n\"Let's do it then. Our next reservation awaits. And ladies,\" Holly says before looking dramatically around the table. \"I hope you're ready to dance.\"\n\n\u200b\u200bChapter 11\n\n\"Tunnel?\" Lena asks as our limo pulls up to a club front and makes a stop. \"I've wanted to come here for ages, but the line is always so long.\"\n\n\"That doesn't seem to have changed,\" Juliet replies, looking at the line that goes from the front door of the club all the way down the block.\n\n\"What's Tunnel?\" Kat asks, excitedly pressing her face against the window.\n\nI'm currently sitting between Lilly and Annie and I'm such a mix of uncomfortable and turned on that I just want to get out of the limo. I don't care if it's a fancy club or a bowling alley-- as long as I'm not sandwiched between these two for much longer.\n\n\"It's a very popular club,\" Holly replies. \"Huge dance floor. Amazing cocktails. You'll love it.\"\n\n\"You had me at dance floor,\" Kat says. \"But will we get in?\" she then asks, looking back out at the line.\n\nThe door of the limo opens and Holly motions for everyone to get out. \"My dear cousin,\" she says, looking at Kat. \"Who do you think I am? Of course we'll get in.\"\n\nLike I've seen her do so many times before, Holly marches up to the front of the club's line and whispers something into the bouncer's ear. He looks at a list, gives her a nod and then says something into a walkie-talkie. I've never seen my cousin turned away from any door in this city and I'm not surprised that hasn't changed in the years I've been gone.\n\nAfter a minute of waiting in the cold, a woman comes out of the door and motions for us to follow her.\n\n\"Well, this feels very VIP,\" Lilly says as we follow Holly and the woman through the front door of the club.\n\n\"I told you,\" Holly replies, looking over her shoulder with a wink. She's so clearly in her element. \"Only the best for our queen tonight.\"\n\n\"I'm so glad I made you one of my Maids of Honor,\" Kat says, practically skipping through the door. \"We'd be at Hooters if Charlie was in charge.\"\n\n\"I can hear you,\" I call out from the back of the line.\n\n\"Love you, Choo Choo!\" she shouts back.\n\nI hear a low chuckle next to my ear and when I turn, Annie is standing there with a small smile playing on her perfect lips. \"Choo Choo?\" she asks.\n\nI narrow my eyes at her but can't help the smile that creeps onto my lips at the playful look she's giving me. \"Don't even think about calling me that,\" I reply.\n\n\"But why?\" she asks, letting out a louder laugh. \"I think it suits you. Very sexy.\"\n\nOur bodies are side by side as we follow the group, and I can briefly feel her fingers brush against mine.\n\n\"Are you into trains, Annie?\" I ask, allowing my fingers to touch hers again.\n\nShe stops laughing and turns her head to give me a heated look. \"No, Charlie,\" she says in a low voice that nobody else can hear. \"Just you.\"\n\nOur eyes lock and we both stop walking. There is something tangible vibrating between us that has nothing to do with the base music that's now pressing against my ear drums and everything to do with our explosive chemistry. But just as my hand begins to lace our fingers together, I feel someone grab my arm. And I should probably be thankful. When Annie flirts so effortlessly with me-- showcasing the easy confidence she did on our first night together-- I'm helpless to behave.\n\n\"Come on,\" Holly says, moving me towards the front of the group. \"You're going to want to see your sister's face when we get in there.\"\n\nI've never been to Tunnel-- and big clubs aren't really my scene anymore-- but Holly has been talking about it nonstop. As we enter the building, it becomes clear how the club came to its name. Before you even get to the inside of the space, you walk through a long, dark tunnel that's only lit by colorful strobes bouncing off the walls. The whole experience feels like you're walking into some kind of gay fun house.\n\nThat feeling only intensifies as soon as we walk into the club itself and are greeted with an explosion of lights, noise, and dancing bodies. The club is huge with three stories, all centered around the main room on the ground floor, which features a large dance floor and DJ booth. Along the side of the club are roped off areas with what look to be VIP booths.\n\nBut the sheer magnitude of the place isn't the most eye-catching thing about the club. Plastered all around the room-- including across a huge poster on the DJ booth and the shirts the bartenders are wearing-- is the smiling face of Jake. I turn to see my sister's wide eyes as she looks around the club, seeing her fianc\u00e9's face on every surface.\n\n\"That's a lot of Jake,\" I hear someone shout out from behind me. It was either Chloe or Laura, but I still can't tell the difference between the women.\n\nWhen we follow Holly and the club employee to the edge of the dance floor, the music suddenly gets quiet, and a spotlight hits my sister.\n\n\"Ladies and gentlemen!\" a voice booms out from the DJ booth. \"We have a bachelorette party in the house tonight! Everyone give it up for Kat and her fianc\u00e9 Jake. I'm sure you know him. Or are drinking on his face right now.\" He pauses as the crowd, including our party, let out a loud cheer. \"Now, make sure you get a good look at this bride here, boys. Because as of tonight-- this one is off the market. Kat, this jam is for you. Party hard tonight. The first round is on Tunnel.\"\n\nThe music picks back up and the spotlight dims, allowing me to see my sister's glowing, smiling face. \"I can't believe that just happened,\" she says, turning to Holly. \"How did you manage all of this?\"\n\n\"Dad knows the manager,\" Holly responds, shrugging as if all of this was nothing.\n\n\"Ladies, if you'll follow me, I'll show you to your booth,\" the woman who brought us into the club says before turning and moving along the side of the room to the VIP section.\n\nWe follow her into a roped off area full of large leather booths that all face the dance floor in front of us. Scattered around the table are more drinks than we'll ever be able to get through-- especially considering how much alcohol I know the group has already consumed.\n\n\"Put your coats down and come dance your faces off with me!\" Kat shouts before flinging her coat into the booth and grabbing Lilly and Juliet's hands so she can pull them with her to the dance floor. Lena, Chloe, and Laura all follow closely behind.\n\n\"I'm going to have a drink first,\" Holly says, sliding into the booth.\n\n\"Coming?\" Annie asks, looking directly at me and tilting her head to the dance floor.\n\nI look out at the packed area full of dancing bodies before bringing my gaze back to her. \"I think I'll join Holly for a drink first.\"\n\n\"Let me guess, you don't dance,\" she responds, raising one challenging eyebrow at me.\n\n\"I can dance,\" I reply with a smirk. \"I just prefer to watch other people do it.\"\n\n\"Well then,\" she replies with her own smile. \"Enjoy the show.\"\n\nWithout another word she turns towards the dance floor and walks off, swaying her hips as she goes.\n\nUntil this moment, I didn't know I could feel so many conflicting things at once. I've never felt so drawn to someone I have no right thinking about. Even if Annie wasn't with Ian and in the closet with her family, I don't live in this city. There's nothing but obstacles in the way for us.\n\nBut as I watch her step gracefully onto the dance floor and twirl, I don't think I've ever wanted something or someone more. And I'm only now realizing how ironic this entire situation is. I left this city to get away from Ian and memories that hurt too much. And now, because of him, I can't imagine leaving.\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\nI'm at the point in my life where I much prefer a quiet dive bar with a pool table to a loud, packed club. But right now, as I sit in our reserved booth, I can't say I mind the location.\n\nMainly because it gives me a direct view of Annie moving her body freely and expertly to the blaring music. The entire group of women are now on the dance floor, but my eyes are glued to her and with nobody else around to notice my staring, I allow myself the freedom to do just that.\n\nAnnie moves around the dance floor as confidently as she moved around my hotel room and it's one of the sexiest sights I've ever seen. I can't even imagine what it must be like to see this woman make art.\n\nRight now, her eyes are closed, and both of her hands are above her head. While the others dance together, Annie seems to be in a world of her own and she looks less constrained than I've ever seen her. When she finally opens her eyes, she immediately locks her heated gaze onto me-- as if she knew I was watching her. She gives me a wink before turning back into the crowd and joining Kat and the others.\n\nUnfortunately, I only get one more song to watch Annie alone before a very sweaty Holly comes back to the table and I have to pretend that I wasn't getting a private dance show from my brother's girlfriend.\n\n\"Are you going to sit here all night?\" she asks as she slips into the booth and pours herself a drink.",
        "\"We all have our parts to play. Mine is sitting here, making our VIP section look so good.\"\n\nHolly rolls her eyes before she takes a long sip of her drink and sets it down on a coaster with Jake's face on it.\n\n\"This is amazing, Holls,\" I say, flicking one of the Jake coasters at her. \"You've done an incredible job with tonight.\"\n\nHolly's face lights up and she smiles as she looks out at Kat dancing. \"Thanks. I'm just glad she's having fun.\"\n\nWe're both quiet for a moment as we watch the other women dance. I'm in no rush to break the silence now that we're both looking out at the dance floor and I feel like I have free rein to watch Annie again.\n\n\"I saw you sitting next to Miss Lilly in the limo. How's that going?\" she finally asks.\n\nI take a deep breath before answering. The limo ride just reminds me of being close to Annie-- being able to feel her bare leg pressed against me. But I can't say any of that to Holly, so I give my head a small shake before replying.\n\n\"She's very beautiful,\" I say. \"But that's not going anywhere.\"\n\n\"It was the modern art comment, wasn't it?\"\n\n\"No. I mean, that didn't help. But the whole thing was a bad idea to begin with. I can't start a relationship with someone who's going to be long distance.\"\n\n\"Your sister just wants to see you happy. You haven't really dated in a while.\"\n\n\"I've been busy,\" I say, which isn't a complete lie. Moving to LA and making sure the gallery is a success without being able to lean on my old contacts has been hard enough. I haven't had the time or energy to put into dating again.\n\n\"Has there been anyone? Even casually?\"\n\nWe were so drunk when we hung out the other night that we didn't get into any real conversations outside of Holly choosing which karaoke song came next. So, I'm not surprised she's curious-- these are the things Holly and I are used to talking about. And maybe it's the alcohol running through me or maybe it's that I miss having someone to confide in outside of the acquaintances I've made in LA, but I don't mean for my next words to slip out.\n\n\"There's been one person. But it's not an actual thing and never will be,\" I say.\n\nHolly's eyes snap from the dance floor to my face, and she raises both eyebrows. \"It's not Jen, is it?\"\n\n\"Jen? God. No.\"\n\n\"I don't know. You're back in New York. Old memories probably come up.\"\n\n\"Not good ones.\"\n\n\"Then you won't care if I tell you that I heard she's engaged?\"\n\n\"I could care less that Jen's engaged. She did us both a favor.\"\n\n\"Good. I never liked her anyway.\"\n\n\"Who's she engaged to?\"\n\n\"Some social media influencer apparently.\"\n\n\"That's not surprising. She only ever wanted me for my parents' money and name. Evidenced by the fact that she left me the moment it was all gone.\"\n\n\"You can do a lot better,\" Holly says before holding up her drink in a toast. \"Good riddance to greedy lesbians.\"\n\nI laugh and tip my glass against my cousin's, relieved that the conversation focused on Jen and not the revelation that there's someone I'm interested in.\n\n\"Who's the greedy lesbian?\" Annie suddenly asks from beside our table.\n\nMy attention had been so focused on Holly and her comments about Jen that I hadn't even seen Annie leave the dance floor. She slides into the booth until she's sitting next to me, and I have to remind myself once again not to stare-- despite the way the perspiration coating her skin causes the hair to stick there, reminding me of our hot, sweaty night in my hotel room.\n\n\"We were just talking about Charlie's ex,\" Holly responds.\n\n\"And now we're done,\" I say, trying to give Holly a pointed look that will get her to shut up.\n\n\"Oh, come on, Charlie,\" she replies with a smile. \"Everyone loves hearing about lesbian drama. Right, Annie?\"\n\nAnnie looks hesitantly between the two of us but doesn't address Holly's question. \"Is there drama?\" she asks instead.\n\n\"No,\" I reply quickly. \"There hasn't been ex drama for years.\"\n\n\"Perhaps. But she was just about to tell me who she's been crushing on,\" Holly continues.\n\nMy cousin looks entirely too pleased with herself, and I should have known she wouldn't let my comment just pass by without coming back to it-- Holly lives for romantic gossip.\n\n\"Really?\" Annie asks, turning to me with what I'm coming to realize is a signature eyebrow raise. I can't tell from her expression if she's concerned-- more than anything she looks amused.\n\n\"I wasn't about to tell you anything,\" I say to Holly. \"I was about to change the topic.\"\n\nAnnie gives me a smile before also turning to Holly. \"I'll help. How's Logan, Holly?\"\n\n\"You two are boring,\" Holly replies with an eye roll. \"But he's fine.\"\n\n\"I've been gone for four years and he didn't even bother to show up for our family dinner,\" I say, jumping on any opportunity to move the conversation along. \"Some cousin he is.\"\n\n\"That's Logan for you. My brother lives in his own world,\" Holly says. \"He just started rehearsals for a show downtown, so I expect to see him even less than I already do.\"\n\n\"When will I see him?\" I ask.\n\n\"The rehearsal dinner I suppose. He's wearing a kilt to it.\"\n\n\"Why?\" I ask.\n\nHolly lets out a long sigh. \"Because I told him he couldn't wear one to the wedding.\"\n\n\"Are you guys Scottish?\" Annie asks.\n\n\"Not enough to warrant a kilt,\" Holly responds. \"But Logan is Logan. I've given up trying to make sense of his whims. He wore a beret to his high school graduation.\"\n\n\"I forgot about that,\" I say, laughing at the memory of my cousin in his red beret sitting among a crowd of white caps.\n\n\"And it could be worse,\" Holly continues. \"He could be Ian.\" An awkward silence falls over the table before Holly's eyes go wide and she seems to realize what she just said. \"Shit, I'm sorry, Annie. I'm an asshole. Don't let me drink anymore.\"\n\nHolly makes a show of pushing the drink in front of her aside, but Annie simply smiles and waves her hand in front of her.\n\n\"It's okay, you can drink,\" she says, leaning over me so she can push Holly's drink back in front of her. \"I know how challenging brothers can be.\"\n\nHolly looks relieved for a moment before her face morphs into confusion. \"I thought you just had a sister?\"\n\nHaving little to no actual knowledge of Annie's life, I'm fascinated to know more about her family, but when I look at her, her face has taken on a much more serious and almost sad expression. She's quiet for a moment as she pours herself some water.\n\n\"I have both,\" she answers finally in a quiet voice that's hard to hear over the music.\n\n\"I'm learning all kinds of new things about you tonight,\" Holly replies. \"In fact, I think this is the most I've ever heard you speak. I had no idea you were an artist.\"\n\n\"I'm not really,\" Annie says, looking down at the water in front of her.\n\n\"Are the portraits you do of people ever nudes?\" Holly asks.\n\nI roll my eyes as I look over at Annie. \"Holly's mind is perpetually focused on sex. Ignore her.\"\n\nAnnie turns her gaze to me, and the serious expression is replaced by a heated one. She brings her gaze from my face, slowly down to my chest. \"And yours isn't?\" she asks.\n\nI can feel my face grow warm, but I don't need to say anything because a moment later, Annie is turning back to Holly as if nothing happened.\n\n\"I've never done nudes,\" she says. \"Just faces actually. And they're not all realistic. Some of them are quite abstract.\"\n\n\"What art school did you go to?\" I ask her.\n\n\"Art Institute of Chicago.\"\n\nI don't know what I was expecting but her answer surprises me. \"Impressive,\" I reply.\n\n\"Where did you go?\" she asks.\n\n\"Pratt.\"\n\n\"Impressive,\" she replies with a smirk. \"What kind of art did you make?\"\n\n\"Everything but I wasn't that good at anything. It's my eye that's the talent.\"\n\n\"Yes, I've heard you speak of this eye.\"\n\n\"I actually have two of them.\"\n\n\"Yes, I've noticed,\" Annie's tone is dry and playful and as much as I love the back-and-forth banter, I'm also curious to know more about her.\n\n\"SAIC is one of the best art schools in the world. Why on earth are you working in property investment?\" I ask.\n\nI know this is part of the conversation that we're meant to have on our own, but two things seem to happen when I'm with Annie-- either I stare at her in a complete state of arousal or I'm desperate to ask her questions to learn more about her. And usually, those things are happening at the same time. So, even with Holly sitting here, I want to know more. And I don't want to wait.\n\nAnnie is quiet as she takes a sip of her drink and looks out at the dancing bodies in front of us. Finally, she turns to me and I almost regret asking the question. The heat is gone from her face, only to be replaced by the same sadness I saw there when she mentioned her brother.\n\n\"The agreement with my parents was always that they'd let me go to art school if I also got some real-world work experience after. In their company. I guess it just became easier to stay through the years. Art was never a guarantee and that was.\"\n\n\"But you're talented,\" I argue. \"They let you just throw that away?\"\n\n\"You don't know that,\" she says quietly, turning her gaze back to the dance floor.\n\nI'm about to answer that I do, but then I remember that Holly's sitting there. When I look over at my cousin, she has the same look on her face that she did when we were in the restaurant-- confused and like she's watching a foreign movie without any subtitles.\n\n\"Water, water, water!\"\n\nWe all turn our heads to see Kat rushing towards the booth, waving her hands in front of her.\n\nPart of me is annoyed that the moment is being interrupted, barring me from asking Annie any more questions. But when I look over and see that Holly's brows are still furrowed in confusion, I'm thankful for the chance to move the attention onto my sister.\n\nFollowing Kat are Lena and Juliet, who slide into the booth next to Holly. Juliet begins pouring water from our pitcher into glasses and handing it to a sweaty and very drunk Kat and Lena. Kat grabs the water and drinks the entire glass before refilling it.\n\n\"I will not have my Maids of Honor sitting here all boring while we dance the night away,\" Kat says before taking another long sip. \"Especially you, Missy,\" she adds, pointing at me.\n\nI smile at my sister as I watch the water ungracefully drip down her chin and onto her dress. \"I thought we decided against the 'missy' nickname?\" I ask.\n\n\"That was not a mutual decision,\" she replies. \"Now come dance.\"\n\n\"I need a shot first,\" I reply, reaching for some of the bourbon on the table.\n\n\"No shots. Just dancing,\" Kat says in a whiny voice.\n\n\"Yeah, Choo Choo. Just dancing,\" Annie says with a flirtatious smirk on her face.\n\nI smile back and can't help the way my eyes flick quickly down to her lips. I know Holly is still watching us, but it's hard not to flirt back with Annie. \"Fine. But only if you come--\"\n\n\"Annie is this yours?\" Holly asks, interrupting me. She's holding up a phone. \"Ian's calling.\"\n\nAnnie reaches over me and takes the phone from Holly. She's handling it so gingerly, that it looks as if she's holding a bomb that's about to go off.\n\n\"Don't answer it,\" Holly says. \"This is a girls-only night. Ian can wait.\"\n\nAnnie doesn't say anything and simply stares down at the phone. When it stops ringing, she looks like she's been slapped. She looks up at me, reminding me so much of the version of her I met at my aunt and uncle's house-- timid, scared and so unsure of herself.\n\n\"I should call him back,\" she says.\n\n\"Call him later,\" I reply in a low voice, not even caring that the table is watching us.\n\nAnnie looks down at her phone again and shakes her head. \"Will you move so I can get out?\" she asks me, and it takes me a moment to realize what she means.\n\nI give her one more look before moving out of the booth so she can get out. She doesn't even make eye contact with me as she takes her phone and walks to the front of the club-- I assume to call Ian back outside. It may have only been a phone call, but her decision to leave this moment to go call my brother is the reality check I need.\n\n\"Shot?\" Holly asks, holding up a bottle on the table.\n\n\"Let's dance,\" I mumble out, needing to do something other than sit here and wallow over the woman that just walked away.\n\n\"Yes!\" Kat says, leaning over so she can grab my hand and pull me towards the dance floor.\n\nChapter 12\n\nI was telling the truth to Annie earlier-- I can dance, I just usually go to bars where it's unnecessary. You couldn't grow up in the Dawson household without learning to dance from my mom-- she even made Ian learn ballroom when we were kids.\n\nAs soon as we hit the dance floor, Kat twirls me around and I let the music flow through my body, trying to forget about the fact that my heart feels like it's being clenched.\n\nAfter a few songs of dancing with my sister, she leaves to go to the bathroom, so I close my eyes and let myself become enveloped by the music. As the DJ smoothly transitions into the next song, I feel a pair of hands secure themselves onto my hips and when I turn my head, I can see that Lilly is pulling me into her.\n\nThis is the exact situation I tried to avoid all night and even though a voice in the back of my head is telling me to move her hands away, I don't. Maybe it's the alcohol I've had-- or perhaps it's the jealousy I feel over Annie and Ian-- but I don't have the energy or desire to fight this anymore.\n\nLilly seems enthusiastic about my consent because she pulls me in closer and presses her body tight against mine. Soon we're moving seamlessly together, and her hands are moving freely around my waist and front. When the music changes tempo, she turns me around so that we're face to face.\n\nAs I look into her blue, inviting gaze, it's obvious how much easier this would be-- meeting a friend of my sister who's single and interested. And maybe if I do give into this, it can snap me out of whatever Annie spell I seem to be perpetually under.\n\nLilly brings her hands from my hips to my waist before moving them up even further, clasping her hands behind my neck. As our bodies continue to move together, I can feel her breath on my lips, but I feel none of the urgency to close the gap that I felt with Annie this morning.\n\nAnd yet, when Lilly gives me a small smile and then leans in to kiss me, I do nothing to stop it. I'd probably do anything at this point that gets my mind off the woman talking to my brother outside.\n\nThe second our lips touch though, everything feels wrong. Even if I can't have Annie, I can't turn off my feelings. And casual sex with Lilly has no appeal. If I have to long for Annie from afar until I can get back to LA and move on from New York all over again, so be it. Continuing this kiss wouldn't be fair to Lilly or me.\n\n\"I'm sorry, I can't,\" I say, moving my head away. I take a small step back so we're no longer touching\n\nLilly looks at me thoughtfully, but her features are soft, and she doesn't seem upset. She simply gives me a small smile and nods.\n\n\"Because of Annie?\" she asks gently.\n\nIf I was expecting that response, I may have been able to school my features in time, but I wasn't and my mouth drops open, giving me away in an instant.\n\n\"It's okay,\" she says quickly. \"I won't say anything.\"\n\n\"Was I that obvious?\"\n\nLilly lets out a small, but not unkind laugh. \"No. Actually, she was the obvious one.\"\n\n\"She was?\"\n\n\"It kind of felt like she was a dog marking her territory.\"\n\nI let out a small laugh at her comment, which sounded so much like something my sister would say. \"Do all vets make animal references in every conversation?\"\n\n\"Only the cool ones,\" she says, now fully smiling.\n\nI feel an instant sense of relief that this isn't awkward and now I can finally see why Kat thought we might get along.\n\n\"I can see why Kat likes you,\" I say.\n\n\"Your sister has good taste.\"\n\nI catch a glimpse of Kat, who's back on the dance floor, and my stomach tightens. I turn my gaze back to Lilly. \"Do you think Kat knows?\" I ask.\n\n\"No, I don't think she's noticed anything.\"\n\n\"It's just a crush,\" I say, and I don't know if I'm trying to convince her or myself.\n\n\"I can't blame you. She's very beautiful. I won't say anything, Charlie.\" She puts her hand out in front of her. \"Friends?\" she asks.\n\n\"Friends,\" I say, putting my hand in hers. But instead of shaking it, she pulls it up to her lips and places a soft kiss there.\n\n\"If you ever change your mind, I'll be here,\" she says before smiling confidently and winking at me. \"Saving animals' lives and looking amazing as I do it.\"\n\nI laugh again before pulling my hand back. \"Good to know. I'm going to go have a drink. I'll see you soon.\"\n\nLilly gives me a small nod before turning into the dance crowd and rejoining the other women. I take one deep breath before heading back to the booth where Holly's still sitting.\n\nDespite what's happening with Annie, the conversation with Lilly went better than I could have hoped. But any relief I feel is short lived when I see Holly.\n\nI know pretty much every expression that will ever cross my cousin's face-- I've seen them all. And the one she's sporting now-- one that I'm guessing works well on her fifth graders-- spells nothing but trouble. I'm about to be interrogated.\n\n\"What's going on, Charlie?\"\n\n\"With what?\" I answer in the most casual voice I can muster, even though I have a feeling I know what she's referring to.\n\n\"Annie just left. She seemed upset.\"\n\n\"She left?\" I ask. I look towards the front of the club, but I can't see her anywhere.\n\n\"It seemed to coincide with seeing you out there kissing Lilly.\"\n\nI maintain eye contact with my cousin, but I know she can see right through me. It doesn't help that I can feel myself slightly shaking.\n\n\"She probably just went to see Ian. He called,\" I say in what even I can tell is an unconvincing tone.\n\n\"Yeah? Then you're telling me that what I'm sensing is off?\"\n\n\"I don't know what you're sensing.\"\n\n\"Don't bullshit me, Charlie. I know you too well. And I know when you're into someone. There's been a weird energy between you two all night.\" Holly pauses and looks at me before she lowers her voice. With the music blaring, I can hardly hear her. \"Please tell me she's not the person you mentioned earlier.\"\n\nI don't want to shout over the music, so I slide into the booth so I'm sitting next to her. \"I can't tell you that,\" I reply, keeping my eyes ahead of me.\n\n\"That's Ian's girlfriend.\"\n\n\"You don't think I know that?\" I ask, my eyes snapping to her face.\n\nBut my cousin doesn't look judgmental like I thought she would-- she looks concerned.\n\n\"Does she have feelings for you too?\" she asks.\n\n\"No,\" I reply, rubbing my hands across my face.\n\n\"No? Are you sure?\"\n\n\"I mean, maybe? I know she's attracted to me. I don't know how much deeper it goes.\"\n\n\"But it goes deeper for you?\"\n\nI feel completely overwhelmed and it's not just Holly's line of questioning-- it's everything hitting me all at once. Maybe finally talking to people about it is what I needed to show me just how crazy it all is. I let my head drop to the table and let out a long, audible noise.\n\nI feel Holly's hand on my back. \"Hey. Take a breath. Lift your head. And talk to me.\"\n\nWhen I lift my head though, the concerned expression is gone, and Holly looks like she's trying to hold back a laugh.\n\n\"Why are you smiling?\" I ask.\n\n\"I'm not,\" she says, changing her face to an unconvincing scowl. \"I just haven't seen you exude this much emotion in years. It's nice.\"\n\n\"This is nice?\" I ask too loudly.\n\n\"No. This is a mess. But seeing you feeling something-- whatever it is-- is nice.\"\n\nNow that everything's out in the open, I feel desperate to talk to my cousin about it. I put my head in my hands and let out another noise. \"Holly, what do I do?\"\n\n\"Okay, back up,\" she says. \"Is this just an attraction or has something happened?\"",
        "I look out at the dance floor to make sure Kat is still there before I turn back to Holly. \"We met the night I arrived in New York. I didn't know she was with Ian. I didn't know until I saw her at your mom and dad's.\"\n\n\"I see. The dinner that just keeps on giving. I really missed a good night,\" Holly replies. \"Where did you meet?\"\n\n\"The Runaway.\"\n\n\"As in the lesbian bar? Why was Annie at the Runaway?\"\n\nI raise one eyebrow at her. Sure, sometimes straight women go with their friends to The Runaway, but usually, there's only one reason to go there-- and it's to meet women.\n\n\"Oh,\" Holly replies before a realization seems to hit her. \"Oh. And you two slept together?\"\n\nI nod slowly.\n\n\"And has it happened again?\" she asks.\n\n\"No. It can't happen again. And Kat can't know. It will ruin her whole wedding. Ian will just think I was trying to sabotage his relationship.\"\n\n\"Then you need to talk to Annie. Because I'll tell you one thing-- that girl can't keep her eyes off you.\"\n\nI hate how much her words make my stomach explode in tiny little butterflies, but I feel irrationally happy hearing from both Lilly and Holly that Annie was obvious about her attraction tonight.\n\n\"And you're right,\" she continues. \"It will make things tricky with the wedding. Kat's sensitive about you and Ian. Maybe figure things out once it's over.\"\n\n\"I'll be in LA once it's over.\"\n\n\"Even easier, right? Isn't that what you want?\" she asks, using her annoying teacher voice-- as if she knows that it's not really what I want.\n\nI don't answer her because I don't have an answer. Going back to LA should be what I want. But now the thought just makes me feel empty.\n\n\"Here,\" Holly says after a few minutes of silence go by.\n\nShe reaches across the table, grabs my phone that's sitting there and hands it to me. She then grabs her own phone and starts typing. A moment later I have a text from Holly containing a contact card from her phone.\n\n\"That's Annie's number,\" she says. \"Go call her. Find her. Talk to her.\"\n\n\"Tonight?\" I ask, staring down at the number on the screen. Just seeing it there makes my heart rate feel like it picked up.\n\n\"She looked pretty upset, Charlie. At least call her.\"\n\nI look out at Kat dancing. \"What about Kat? Won't she notice if I leave?\"\n\n\"Kat has consumed sixty percent of the alcohol she'll drink all year in just one night. I don't think she remembers that she's a vet let alone who's still here. I'll get her back to the hotel. We'll see you for breakfast.\"\n\nI nod slowly as I continue to watch Kat. Holly's not wrong-- Kat is drunk. In fact, I don't remember the last time I've seen her this drunk. As she and the other women begin to do a sloppy conga line on the dance floor, I make my decision. I need to find Annie.\n\nWhen I turn back to say goodbye to Holly, she has another grin on her face that she can't seem to hide, despite her obvious effort.\n\n\"What now?\" I ask.\n\n\"Nothing,\" she says with a shrug. \"Just ironic that you and Ian fell for the same woman.\"\n\nI narrow my eyes at her. \"I feel like you're enjoying this too much.\"\n\n\"Just feels like old times,\" she says, her smile softening.\n\nI pull her into a hug that I think surprises us both. Her hands come up around my back and she pulls me in tighter, just like her dad did.\n\nEven if I know I'll never be able to live this down with my cousin, she's still here for me, like she always has been. It's only being back here with this kind of support that I realize how much I've missed that while living in LA.\n\n\"Thanks, Holly. For everything,\" I say, finally releasing her.\n\n\"Go get your girl. Or you know, Ian's girl,\" she says when I stand up from the table.\n\n\"I can't believe I was just thinking that I missed you,\" I reply.\n\n\"Aw, well that's sweet. See you at breakfast tomorrow,\" she says with a wink.\n\n\"See you at breakfast.\"\n\nI look at my phone as I walk toward the front of the club and now that I have Annie's number, I'm desperate to call her. I don't even know what I'm going to say, but it's time we had the conversation we should have had days ago.\n\nMy fingers are shaking but as soon as I'm out onto the cold, and much quieter New York street, I click on the number Holly sent me.\n\n\"Hello?\" I hear Annie's voice say on the other line.\n\nAs soon as I hear her voice, it becomes clear that I don't need to see Annie. Just her voice does things to my body.\n\n\"Charlie?\" she asks when I don't say anything.\n\n\"Hi,\" I say quickly. \"How'd you know it was me?\"\n\nShe lets out a low laugh on the other end and that sound, so close to my ear, turns me on more than I want to admit-- especially when I just told Holly that nothing can happen with Annie.\n\n\"You have an LA area code. It was just a guess,\" she says.\n\n\"Right,\" I say, mentally face palming myself for my lack of cool. \"Can we talk? Maybe find a diner or something?\"\n\nAnnie is quiet for so long that I have to look at my screen to make sure the call didn't disconnect.\n\n\"Annie?\"\n\n\"I'll send you an address,\" she finally says. \"Just buzz suite twelve once you're here.\"\n\nA tornado of nerves flows through my body at the prospect of being alone somewhere with Annie, but I do my best to keep my voice steady.\n\n\"On my way.\"\n\nChapter 13\n\nWhen Annie sent me the address, I thought it might take me to her apartment. But now that I'm here on the lower east side, looking up at a slightly rundown building, I have a feeling this isn't where she lives-- especially considering what I know of her family's background and money.\n\nI look at the building's keypad next to the large steel door, but there are no names next to any of the suite numbers. I press the number twelve and after only a moment of waiting, there's a loud buzzing noise, allowing me to open the door.\n\nAnnie's floor isn't any more inviting than the outside of the building and there's such a heavy draft flowing through the hallway that as I walk towards the door at the end, I have to pull my jacket around myself to keep warm. Somehow, I can't picture Annie-- who's always so clean and put together-- in a building like this. It feels more like a warehouse than anything else.\n\nBut when I knock on the door and it opens, the Annie standing in front of me is not the pristine version I'm used to. She's traded in her dress for a pair of ripped, badly stained jeans and a worn out, green t-shirt that says \"School of the Art Institute of Chicago\" across the front.\n\nHer hair is still up but it's messier than it was earlier tonight and when I look down to her feet, I can see that she's barefoot. Every look I've seen on this woman works, but there's something special about casual Annie. As if I'm seeing a rare species that nobody ever gets to see.\n\n\"You found it,\" she says, before opening the door wider so I can see into the space, which looks to be one large room.\n\nAs adorably sexy as Annie looks in this outfit, this might be the first time she doesn't steal all my attention. For once, it's what's behind her that I can't stop staring at.\n\n\"This place is yours?\" I ask, moving into the room without an invitation. But I can't help it. Not when I can see a large canvas against the far wall of the room showcasing a splattering of vibrant colors.\n\n\"Not just mine,\" Annie says, closing the heavy door and following behind me. \"I share it with two other artists. But nobody I know has ever been here. Or even knows I rent it.\"\n\n\"Ian doesn't know?\" I ask, looking up at the piece in front of me, which is probably over eight feet tall.\n\nAnnie lets out a harsh laugh. \"Of course not. Ian and I have become accustomed to keeping things from each other.\"\n\nI look over my shoulder at Annie who's looking up at the canvas as well. \"Clearly,\" I say, causing her eyes to settle on my own.\n\nShe doesn't say anything before looking back up at the canvas. \"This one is by my friend Nick. He's brilliant. You know the Bowery Wall on Houston?\" I nod my head. \"One of his murals is currently holding that spot.\"\n\n\"It's beautiful,\" I say, turning around the room and glancing briefly at some of the other work scattered about in what I assume is Nick's section. His use of color is consistent from piece to piece, and I can see how his style lends itself to murals. \"You've made it seem like you don't make art anymore. Until tonight, that is.\"\n\n\"I don't generally tell strangers about this place. When I first met you, that's who you were,\" she says, moving across the room until she's at a curtain. She pulls the curtain aside and tilts her head so I can follow. \"I don't tell anyone about it.\"\n\nI walk over to where she's standing and see that behind the curtain is another artists' work and this artist appears to be completely different-- and much less traditional-- than Nick. The entire space is full of scraps of metal with a few of the tables featuring actual sculptures.\n\n\"This is Lucy's work. She does everything. Right now, she's really into metal,\" Annie says, pointing at a large structure that looks like some kind of metal jungle gym.\n\nI move around the room, looking at some of the larger sculptures. They're impressive, but chaotic and it's hard to know where to look.\n\nEven though I'm focused on Annie, I can feel the familiar buzz I always feel when around new art-- especially good art. And Annie's friends are clearly talented.\n\n\"What changed tonight?\" I ask as I wander through Lucy's work. I stop at a piece that looks like an abstract cube hovering in space. \"Now Holly and Kat know too. Even if they haven't seen this place.\"\n\nAs I continue to look at the piece, I can feel Annie come up beside me. Being in a room with new art may give me a certain kind of buzz, but it's nothing compared to what just standing next to Annie stirs in me.\n\n\"I have trouble not just being myself when I'm around you,\" she whispers, not moving her eyes away from Lucy's cube.\n\n\"Why did you leave tonight?\" I ask in my own quiet voice.\n\n\"You know why.\"\n\n\"I stopped the kiss as soon as it happened.\"\n\n\"I know. I'm not mad,\" she replies letting out a small, cynical sounding laugh, and I can feel that her eyes are now on my face. \"After all, I have no right to be.\" She then looks away from me and back to the work in front of us. \"But it scared me how much it bothered me. And I didn't know how to pretend anymore. So, I left. I'm glad you called.\"\n\nWe're both quiet as we look at the piece, but it's clear neither of us are really focused on the art anymore. We're finally alone and we both know that we need to talk. It feels as if we're on the edge of a cliff and this conversation will push us over-- one way or another.\n\nBut Annie was brave enough to bring me here. And before everything changes again, I want to see the part of her that nobody else gets to experience. If I walk away from here without her, which I fully expect to do, I need to see this part of her.\n\n\"Will you show me your work?\" I ask her, knowing the weight of my own request.\n\nEven if Annie brought me here, indicating that she's willing to open this side of herself to me, I know how vulnerable it can be to show someone your own art.\n\nAnnie brings her clear eyes to me and gently laces our fingers together. \"I'm nervous,\" she says in another whisper.\n\n\"To show me?\"\n\nShe nods. \"Yes. But not just that.\"\n\nI pull her hand more fully into my own. \"Then tell me why.\"\n\n\"Everything about you scares me.\"\n\n\"Show me your art. And then we can talk,\" I say.\n\nI can hear Annie take a deep breath, but a moment later, she's pulling gently on my hand and leading me to the far side of the room. Once we're there she pulls back a curtain and we're in a new space filled with different canvases-- all much more organized than Lucy's area.\n\nSome canvases are lined up against the wall, but many are displayed around the room on different easels, and I can't decide where to look first. When I glance over at Annie, her hands are in her pockets, but she doesn't look as timid as she did a moment ago. She seems proud as she looks around at her work.\n\nAs I look at her standing there among her own art, I have to take a few breaths to steady myself. The thought I had earlier tonight when I first saw Annie is only solidified in this moment-- going to The Runaway last week never really mattered. I was always going to meet Annie and I was always going to fall for her. The inevitability of our story is so obvious now as I watch her looking at her own work and I look away from her face before I feel completely overwhelmed with emotion.\n\nAnd for once, tearing my eyes away from her face isn't hard. Not when I'm surrounded by Annie's portraits, allowing me to finally confirm what I've known all along-- Annie has a special talent.\n\nI've never featured an artist who creates work solely using charcoal and now I know why. Everything I've ever seen pales in comparison to this. Through the years I've seen the medium used for portraits and I've seen works that are incredibly detailed and almost lifelike-- one of the benefits of using charcoal or pencils. But Annie's work is fluid. As if the faces are changing expressions in the middle of the canvas. Each face has such a ghostlike quality that they look like they were taken directly from someone's dream-- as if they're almost real. But not.\n\n\"How did you get into charcoal?\" I ask.\n\n\"In art school. We were using it as a preliminary method before delving into paint. And I fell in love with it. I leave color to Nick. I prefer exploring shadows. The ethereal side of things.\"\n\n\"I can see that,\" I say, moving around the room and looking at all the different faces.\n\nThe most consistent feature of all the pieces-- besides that fact that they're all incredible-- is that each face belongs to a woman. After looking at a portrait of a young woman laying down on a couch, I move on to the next one, which features the profile of a tall, older woman.\n\nNot all the drawings are of stereotypically pretty women. Annie's models are diverse and interesting. But the dreamlike quality of her work brings out something in each of them. Each piece shows you a different side of what makes a woman beautiful.\n\n\"They're all women,\" I say. \"Beautiful women.\"\n\n\"Well, as the old prophets said, if you can't sleep with them, draw them,\" Annie responds.\n\nI smile but continue my journey through the room. I don't know how long I'll have here, and I want to see it all. Finally, when I get to the canvas that's leaning against the farthest wall, I stop because I recognize the face.\n\n\"This woman,\" I say. \"She's the woman on your phone. The one I saw that night in the hotel.\"\n\nAnnie walks over until she's next to me and looks down at the same canvas. She simply lets out a humming noise and nods.\n\n\"She affected you,\" I say.\n\n\"It's not the people themselves,\" she says. \"It's their features. Sometimes it's one expression that captures me. When I see a face that I want to draw, it's like my mind memorizes every line. And I can't stop seeing it until I get it on canvas. But some faces I don't forget. Hers is one of them. Yours is another.\"\n\nI tear my face away from the canvas so I can look at Annie, but she's still looking down.\n\n\"Maybe if I drew you, it would be easier to move on from you,\" she says next.\n\nHer words cause my stomach to tighten. The idea of Annie moving on from me hurts even though I know it's what we'll both need to do. And now that we've gone through her entire art studio, landing on this last piece, I know we need to finally have the conversation that's been looming over us.\n\n\"Why do you keep all this here hidden away?\" I ask, dipping my toe into the ocean of questions I've had since first finding out who she is. \"Someone with your kind of talent? You could be showing anywhere.\"\n\nAnnie finally brings her eyes up to mine and shakes her head. \"I don't think that's true.\"\n\n\"Annie, I'm not some random person off the street. I'm an artist. I've owned multiple galleries. I understand this world and I know talent. You said earlier that you didn't pursue art because it wasn't a guarantee.\" I turn back to her canvas and point at it. \"This is a guarantee, Annie.\"\n\n\"Thank you,\" she says. She's quiet for a moment as she stares at me. \"Let's sit?\" she asks, pointing to a green couch that's pressed against one of the walls next to her area.\n\nAs we sit, we keep a small space between us on the couch, which is good because it's hard to think about anything coherent when Annie is touching me-- or even close to touching me. We're both quiet for a few minutes as we look out at her artwork.\n\n\"I don't even know where to start,\" she finally says.\n\n\"Tell me about your family,\" I offer. \"It seems that's what everything relates back to.\"\n\nAs soon as I mention her family, the expression on her face goes from thoughtful to pained and I can tell that this isn't going to be an easy conversation for Annie. It takes everything in me not to reach over and grab her hand.\n\n\"Everything in my family revolves around my dad's company. It's always been like that.\" She pauses for a moment and takes a deep breath. \"It was passed down to my dad from his. Growing up, there was very little separation between family and Astor Properties. They were the same thing. And family was everything. I grew up with that being pounded into my head. But what my dad really meant was that the company was everything.\"\n\n\"I can understand that to a certain extent.\"\n\n\"Yes, I know you can. But it sounds like your parents were a lot more open-minded than mine. The more money they earned, the more conservative and myopic they became. If it looked bad for their image or their circle of snobby friends, it wasn't good.\"\n\n\"They let you go to art school. That's something\"\n\n\"They did. They're not bad people, per se. Just set in their ways. But as I told you, there was a contingency to all that. They paid for school as long as I came back to the company after. I guess at the time, I thought I'd just do it so they would pay for school. Then I'd stay at the company for a year or two and then leave.\"\n\n\"How many years has it been now?\"\n\n\"Five. Almost six.\"\n\n\"So, why did you stay?\"\n\n\"Sometimes families have a way of making us forget that we have a choice,\" Annie says quietly, now looking off into space. \"A couple of years after I left school, things in my family kind of fell apart.\"\n\n\"With your actual family or the company?\"\n\n\"Both, actually. First, my dad made a bad deal on a property downtown. I don't even really know the details, but we lost a lot of money. And quite a bit of clout. After that, it was kind of expected that all hands were on deck. There was a lot of pressure to help out in whatever way we could.\"\n\n\"You mean you and your siblings?\" I ask, remembering what Holly had said about Annie's brother earlier.\n\n\"Not my sister. Zoe. She's thirteen years younger than I am. But I also have an older brother. Dylan.\"\n\n\"Why did Holly only think you had a sister?\"\n\n\"My family doesn't really talk about Dylan. Ian would never bring him up.\"\n\nAnnie shifts her body so she can bring both her legs up onto the couch. Her posture looks casual, almost as if we're just hanging out after a night out. But when I look at her face, she looks anything but casual. And I don't think I've ever seen her bright, aqua eyes so dim.\n\n\"Dylan didn't want anything to do with the company. Which was a disappointment for my dad but not the worst of it. Around that same time, Dylan came out as gay. And that pushed my dad over the edge. He seemed to confound his flailing business with Dylan's coming out. That was almost four years ago. And they still haven't talked.\"\n\n\"Do you talk to him?\"\n\n\"Yes. Pretty much every day. He lives in New Jersey with his boyfriend now. But it hasn't been easy for him. My parents cut him off from everything. And he hasn't seen Zoe since. She's only 16.\"",
        "\"Do they know you talk to him?\"\n\n\"Maybe. There's a lot that goes unsaid in my family.\"\n\n\"And that's why you haven't come out to your family? Because of what happened to Dylan?\"\n\nAnnie doesn't say anything as she seems to gather her thoughts. She repositions her body again and it's clear she's uncomfortable.\n\n\"I was always fine dating men. I had a boyfriend for a bit in college and we got along well. But I always knew I could feel...more, I guess. During my last year at school, I slept with my female roommate. That opened my eyes and I realized I might not be straight. But when everything fell apart at home, it seemed easier not to give in to that part of myself.\"\n\n\"Are you attracted to men?\" I ask hesitantly. I have no issues with Annie being bisexual, but I absolutely don't want to think about her with Ian.\n\n\"Yes, but it's not the same as it is with women. I guess over the years I let myself believe it was though.\"\n\nMy stomach tightens as I roll my next question around in my head. The fact that Annie has stopped talking, makes me think she knows what's coming.\n\n\"So...Ian, then. How did that happen?\"\n\n\"Things in my dad's company just got worse over the years. There's still business and the family name still holds weight, but it's been on a steady decline. But some of my dad's contacts and clients in other cities outside of New York are still strong. Cities that appeal to your brother.\"\n\nThe Dawson Hotel Group has opened hotels in other cities so it's no surprise Ian is interested in expanding. But it also makes me think back to the conversation I heard my uncle and Ian having over dinner about the hotel line being franchised-- a move I know my parents were always against.\n\n\"Okay, so you met him through your dad's company. But how did you start dating?\"\n\nAnnie takes both of her hands and wipes them over her face before leaning back into the cushions of the couch. She then shakes her head and looks at me.\n\n\"I don't know what you think of me, but it can't be great,\" she says. \"This isn't going to make it any better.\"\n\n\"Tell me,\" I say. I don't want to hear about Annie and Ian, but ultimately, this is why I'm here tonight and why we're in an impossible situation to begin with. \"And unfortunately, it seems that nothing you can say makes me want you less,\" I add.\n\n\"Until now,\" she replies, looking away.\n\nThe silence goes on for so long that I'm about to say something before she starts talking again.\n\n\"My dad figured out a deal for Ian so he could franchise the Dawson hotel line into specific markets across the Midwest,\" she says. \"See, my dad's a good salesman. The fact is that Ian didn't really need him. He probably could have gotten the contract done with another company. But my dad needed Ian. And he needed the deal to go through. However that needed to happen.\"\n\nAnnie stops talking again and stares straight ahead as she seems to search for what to say next.\n\n\"Did he set you up with Ian?\" I ask.\n\n\"More or less. He introduced us at a party. And then he just started inviting him to family dinners and events. He even invited him to my sister's sweet sixteen party. Soon, we just kind of fell into it. Kind of like my parents did when they were young. It wasn't romantic. It was convenient.\"\n\nAnnie looks helplessly around the room before she goes on. \"By the time I met Ian, I had already set up this studio and that felt like enough. Ian seemed to enjoy having someone with the Astor name on his arm at parties and in turn, I helped the company. It's not like I don't know who he is. It just became easier to go with it. I told myself it was for my family. That eventually I would end it and live my own life.\"\n\n\"Why didn't you?\"\n\n\"I lost myself. I became a shell of who I was. I convinced myself that dating women wasn't worth losing them. Losing Zoe.\" Annie stops talking as if she suddenly realized something. She brings her gaze up to me and her eyes look bright and intense. \"Until that night that I walked into The Runaway. And I woke up.\"\n\nI've been so invested in Annie's story that I let myself get comfortable sitting there on the couch. But as soon as those last words are out of her mouth, I'm hyper aware of my body and how alive it suddenly feels.\n\n\"I don't even know what made me go there that night,\" she continues. \"I guess I was curious and finally lost the battle with myself. I didn't expect to meet you and I didn't expect to feel like this.\"\n\nThere are so many emotions rolling through me as I look at her, but I still need more answers and if I scoot over to her like I want to, I know I won't get those.\n\n\"Do you love him?\"\n\nAnnie looks taken aback and her eyes get wider. \"Ian? Charlie, no. I've never loved him. I did what I thought would make my dad happy. That's all. And I've always gotten the sense that Ian doesn't love me either.\"\n\n\"Ian only loves himself,\" I say, not able to hold back the contempt I feel for my brother. \"You're so different with him than you are with me.\"\n\n\"In my family, women are seen but not heard. I know it's embarrassing. I forgot there's another way. I'm not like you. You know exactly who you are. You're brave.\"\n\nI let out a laugh at her misguided compliment. \"Annie, I'm not brave at all. I left town. That's who I am. I leave when things are hard. You shouldn't be embarrassed for trying to make things work with your family. I'm embarrassed that I left mine.\"\n\n\"I understand why you would. Ian doesn't talk about it, but I can't imagine how hard that was. I am so sorry, Charlie.\"\n\nOver the years I've heard every sympathetic phrase people throw at someone who's lost their parents and each one of them annoys me. But for some reason, Annie's statement doesn't. Nor does the soft look she's directing at me now.\n\n\"I don't think my family understands,\" I respond.\n\n\"Your family loves you more than anything. They talk about you every time I'm around.\"\n\n\"Not your boyfriend.\"\n\n\"He won't be my boyfriend for much longer.\"\n\nMy eyes snap to hers again. \"What are you going to do?\"\n\n\"I don't know. I just know I can't keep living like this.\" She looks around the room again with a thoughtful expression on her face. \"This is my only happy place,\" she says. \"And it's a secret. Maybe it's time I start living for myself.\"\n\n\"I think that sounds like a good start.\"\n\n\"And you?\" she asks. She finally smiles and the sight makes my stomach do a flip and I can't help but smile back. \"Back to LA?\"\n\nAs fast as the smile appeared on my face, that's how fast it drops. I don't want to think about leaving-- not now that Annie has finally opened up to me. It's not that things aren't still messy, but it feels like maybe for once there's a glimmer of hope.\n\n\"I guess that's the plan,\" I respond and as I do, Annie's own smile falls slightly. \"I never expected to meet anyone that night either,\" I add, mirroring her words from earlier. \"I never expected to feel like this.\"\n\n\"I find it hard to believe you don't have women lining up for you. Lilly is probably just the start,\" she says, sliding her body an inch over on the couch.\n\n\"No other woman has ever affected me like this,\" I say, shifting my own body slightly closer to her.\n\nAnnie lets out a sound that's a mix of a gasp and a sigh. \"I don't know how to go back to not feeling,\" she says.\n\n\"So what do we do?\" I ask.\n\nI don't even notice that we're now right next to each other until her hand touches mine.\n\n\"What do you want, Charlie?\" she asks in a low, quiet voice.\n\nI look down at our fingers as they slowly lace together and everything in the room feels like it changes in an instant. As if I've suddenly stepped into a sauna.\n\n\"I can't have what I want. It's all so messy. You're still with my brother.\"\n\nAnnie moves even closer and brings our hands into her lap. I can feel her breath against my face but I'm too nervous to turn my head. I'm too scared to look into the eyes I know I have no power against.\n\n\"And if I wasn't?\" she asks as she pushes some of my fallen hair back behind my ear. Her breath hits my cheek and I feel it ripple down my spine as if she were caressing me.\n\n\"We shouldn't do this,\" I whisper but I'm not even convinced by my own voice, so I doubt she is.\n\n\"I know,\" she says, but her actions don't match her words because at the same time as she says it, she brings one finger from my hair down my jawline.\n\n\"Annie.\"\n\n\"Do you want me to move my hand away?\"\n\nI finally turn my head to her, which causes her hand to drop. She's so close to me that I can see every speck that makes up her aqua eyes-- every freckle that sprinkles across her nose. If there was ever an excuse for lacking self-control, it's the face I'm now staring at. We both know that I'd never tell Annie to move her hand away.\n\nAs she looks down at my lips and licks her own, I make my decision. There are still so many things we should probably talk about. And things Annie needs to work out on her own. But right now, the only thing that I can think about is kissing this woman again.\n\n\"I want you. Right now. On this couch,\" I finally whisper to her, moving my hand up to lightly pinch her bottom lip. My mind has been consumed by this mouth since I met Annie and I feel a desperate need to feel her lips, even if it's not with my own yet.\n\nAnnie's chest is rising and falling slightly, and I can tell that her breathing has picked up. Instead of saying anything in response, she grabs my wrist and takes the fingers that were just on her lips into her mouth.\n\nMy eyes slam shut at the feeling of her tongue swirling around my fingers and a soft moan escapes my lips. The move is so hot that it feels like there's a direct current from her mouth down to my pussy.\n\n\"Fuck,\" I groan out as she takes my fingers out of her mouth.\n\n\"Might I suggest you stop playing with my lips and kiss me already?\" she asks, raising her eyebrow in the confident way that drives me wild.\n\nI might not usually submit to women, but with Annie, I don't need to be asked twice. I put my hand behind her neck and pull her into me until our lips connect. It isn't graceful or romantic, but Annie doesn't seem to need that. Because she's letting out her own series of moans as her hands come up around my back and she easily opens her mouth for me.\n\nOur lips don't have time to get reacquainted before both of our tongues are fighting for dominance. Finally, they begin to move together in an erotic rhythm and the way her tongue pushes in and out of my mouth has my pussy aching for the same.\n\nWe kiss for so long that I lose track of time, but when my hands wander down her back, the fabric I'm met with isn't enough. I need to feel her bare skin under me. I break my mouth away and laugh when Annie lets out a cute little sound of protest.\n\n\"This shirt looks adorable on you. But it has to go,\" I say, moving my hands to the bottom of the t-shirt.\n\nAnnie lifts her hands above her head and allows me to pull it over. As I'm throwing it to the side of the couch, she wastes no time and takes her own bra off.\n\nIt's only been a handful of days since I've seen Annie naked so I don't know how I could forget just how perfect her body is. And there's something even more beautiful about the fact that we're here. Not in a sterile hotel room, but an art studio. Full of things that she created.\n\nEvery inch of Annie's body deserves to be touched and pleasured and if I have it my way, devoured. And in a battle between my mouth and hands, as to who gets to touch her tits first, my mouth wins.\n\nI lean down and take one of her already hard nipples in my mouth. Annie grabs the back of my head and pushes my head further into her tit as she lets out a loud groan. My tongue swirls messily around her nipple before she tugs my hair, bringing my head to her other nipple. I bring my hands up so I can cup her tits as I lick, every now and then bringing my finger roughly over each nipple.\n\nI increase my pace, moving my head back and forth between her tits and soon our mutual moans are filling the room. When I feel her jerk in pleasure, I know she needs more so I take my mouth off her nipple and move my body so I'm between her legs.\n\nWe're both breathing heavily as I get situated. Annie leans back and the sight of her drowsy eyes and soaked tits is so sexy that I don't rush my next move. I need to take a moment to simply appreciate the sight in front of me.\n\nAnnie gives me a small smile before she sits up, leans down, and cups my face in her hands. Everything so far has felt fast and urgent but when she leans in to kiss me, it all slows down. Our lips move together slowly before our tongues lightly flick against each other.\n\nAnnie brings her head back from mine but only by an inch. \"Fuck the art studio. I think your lips may be my new happy place,\" she says, grazing one finger over them.\n\nI take her hand and kiss the tip of her fingers before she leans back, apparently ready for whatever is coming next.\n\n\"Let me show you a world where you can have both.\"\n\nChapter 14\n\nAs I sit between Annie's legs, I bring my hands up her thighs until I reach the top of her jeans. I let my fingers play with the button there, watching her as she closes her eyes and drops her head back against the couch.\n\nEverything about this moment feels different to our first time. That night in the hotel might have been sexy and mysterious, but it was also fast and urgent. I feel like I'm seeing a whole new Annie tonight. The real Annie. And I want to savor every minute of having her here like this that I can. I want to relish in the fact that she won't be running from me the moment we're done.\n\nAs I watch her, I can feel an overwhelming number of emotions flowing through me, causing my hands to pause what they're doing. The second I stop unbuttoning her pants though, her head lifts from the couch and she looks down at me.\n\nAll I've thought about this week is being with Annie again, but as many times as I've repeated this exact moment in my head, I also don't feel rushed. The reality of where we're doing this isn't lost on me and I need her to know that.\n\n\"Thank you for showing me this place,\" I say quietly to her.\n\nAnnie smiles at me as she puts her hands over my own. She then moves my fingers aside and unbuttons her own pants before sliding them down her legs and off her body. Her underwear quickly follows the same path.\n\n\"Charlie,\" she says, flinging her clothes aside. \"How about you thank me later and fuck me now?\"\n\nI'd laugh at how direct and demanding she is, but her pussy, which is clearly wet, is now in front of me and the slow pace I had been taking seems futile.\n\n\"Yes, ma'am,\" I say in a voice that sounds thick with desire.\n\nI graze my hands back up her thighs, but this time, I can feel a trail of goosebumps in their wake. Annie's head drops back to the couch again and she lets out a small sigh-- as if she can finally breathe now that I'm touching her. There's a slight rise and fall to her chest and seeing her so turned on already has my own pussy clenching.\n\nAs sexy as she looks leaning back like this-- so open and ready for me-- I need to taste all of her, and I can't do that from this angle.\n\nI bring my hands around her back until I can slide them under her body. I grab her ass and pull her quickly forward until she's on the edge of the couch and I have better access to her entire pussy.\n\nAnnie's breathing is now audible, and a sense of urgency is starting to settle in. I want to taste this woman again. Devour her for as long as she'll let me, and I'm done wasting time.\n\nI begin to lean down, but before my mouth can touch her, Annie puts her hand on my shoulder, stopping me.\n\n\"Wait,\" she pants out. \"I want to see you as you have me. All of you. Take that jumpsuit off.\"\n\n\"You're very demanding,\" I reply, letting my head rest on her bare thigh.\n\nI'm so close to her pussy that I can smell how turned on she is, and it would take nothing to lean in and capture her wet folds in my mouth. But I know Annie likes control and I don't think I can deny her anything when I want her this bad.\n\n\"Is that a problem for you, Choo Choo?\" she asks, stroking the top of my hair lightly.\n\nThe nickname causes my head to lift, and I look her in the eye. I'm glad I'm still wearing underwear, because the challenging, heated look she's directing at me causes my pussy to become so wet, it would be dripping down my legs if I wasn't.\n\n\"With you, it's weirdly not,\" I reply honestly.\n\nI don't waste any more time consenting to her request and quickly take off my outfit. Once all my clothes are thrown into a pile with hers, I kneel back down in front of her.\n\n\"Better?\" I ask.\n\n\"Much,\" she says, playing with a strand of hair that's come out of my pins. \"You looked gorgeous tonight. But I prefer you like this.\"\n\nI let out a small laugh. \"Good to know. Any more requests madam or may I proceed?\"\n\nAnnie doesn't answer and simply puts her hand on the top of my head. She doesn't push down but that's all I need to do the rest.\n\nAs soon as my mouth touches her pussy, I lose all sense of anything else. She wants this as much as I do, evidenced by how wet she is, and that only fuels my desire. In fact, she's so wet that I have to spend some time purely licking up and down her length, just so I can clean up some of the mess already made there.\n\nAnnie's hand pushes gently down on my head, and I take her cue, giving her more of my tongue. I put my hands back under her ass so I can bring her closer to my face and keep them there, squeezing as I flick my tongue against her clit.\n\nThe memory of how good Annie tastes has been on constant repeat in my mind since last week, but my memory must have faded because she tastes better than I ever remembered.\n\nNeeding to taste and feel it all, I slide my tongue down her length until I'm at her opening. I lightly circle the spot with my tongue but when Annie's hand grabs my hair and squeezes, I push my tongue all the way in-- giving in to what I know she wants.\n\nI push in and out before bringing my tongue back up to her clit. I repeat the motion over and over until she's letting out a series of gasps and moans. With each flick, I can feel her clit getting harder under my tongue.\n\nAs Annie continues to squirm on the couch, she begins to thrust her hips up, causing me to bring my hands back to her thighs so I can hold her down.\n\n\"Charlie,\" she gasps out after bucking up again.\n\n\"Yes, baby? Tell me what you want,\" I say quickly before resuming my tongue's attack on her clit.\n\n\"Let me fuck your tongue,\" she says between gasps.\n\n\"It's yours,\" I say before sliding my tongue as far into her pussy as I can.\n\nJust like the first time we were together, Annie is taking control and I love her like this. Her commanding tone is so sexy that I find myself consenting without even a challenge and moaning into her pussy as her hands grab the sides of my head and she directs my tongue where she wants it.\n\n\"Fuck, Charlie. You feel so good,\" she moans out.\n\nI'd tell her that she tastes better than anything I've ever had on my tongue, but her hands are still holding the sides of my head, pushing my face into her pussy, so all I can do is moan back.\n\nKeeping her hands where they are, Annie suddenly slows the speed in which she's fucking my face, now moving in a slow, upward thrust-- making sure to get my entire tongue inside of her pussy.\n\nI can tell that my face is wet, but I have no interest in fixing that right now. I'll do anything to make sure that Annie's pussy continues to drip down onto me. I can feel her walls clench around my tongue every time it slides in, and I know she's close to an orgasm.\n\n\"Fuck me,\" she says, finally releasing my head.\n\nI push Annie's body back onto the couch and slide two fingers inside her as my tongue latches back onto her pussy. She's so wet that my fingers slide in and out too easily so before she asks for it, I add another finger and begin to fuck her like she asked.",
        "\"Yes, yes, baby. Like that. I'm so close.\"\n\nAnnie's voice is low and almost guttural-- as if her orgasm is coming from somewhere deep within her body.\n\n\"More,\" she pants out, throwing her head back onto the couch. \"Just your fingers.\"\n\nAs good as Annie tastes, my fingers would agree that it's their turn to shine. I lift my body up so I can put one hand behind her neck as my other continues to pump into her. Annie allows her head to be lifted and I'm able to anchor my hand in her hair as I pull her body closer to me.\n\n\"More,\" she demands again.\n\nI slide a fourth finger inside her and almost my whole hand is wrapped up in Annie's pussy now. And yet, with the amount of wetness still seeping out, I have no trouble sliding them in and out. When Annie grabs onto my back and digs her fingernails in, I let out my own low moan.\n\nThere's nothing in this world that feels better than Annie does in the height of passion. I knew it our first night together and I know it now. And even as I fuck her, a huge realization hits me. I keep trying to find a home in a city. When nothing in my life has ever felt like home as much as this does.\n\nMy entirely too overwhelming thoughts are interrupted when Annie's fingers dig into my back even harder, and she lets out something that sounds more like a cry than a moan.\n\n\"I'm coming. I'm coming. Yes, fuck. Keep going,\" she says.\n\nI almost laugh at her words. The only thing that could ever get me to stop is if she explicitly told me to. Otherwise, I could do this all day-- food, water and sleep be damned.\n\nAnnie grabs my hand as she moans out and pushes it even further into her. I can feel that I'm wet everywhere-- from my fingers, all the way up to the base of my wrist. Everything I feel is Annie.\n\nAfter a few more thrusts of my hand, Annie lets go and her body sinks into the couch. The only sounds in the room are the heavy breathing coming out of both of us, and I let her enjoy the feeling as I sink back down to the floor and rest my head against her thigh.\n\nWhen I look up, I can see that her eyes are closed, and her lips are parted slightly. It's been a while since my fingers itched to sketch something but as I watch her in her post-orgasmic glow, I wish I could. In lieu of having a pad, I memorize every feature and every line of her face that I can. I want to remember how beautiful she looks in this moment-- relaxed and raw and happy.\n\nAs I continue to look at her, Annie lifts her head, and the relaxed expression is replaced by something much hungrier. A slow, confident smile grows on her lips as she looks down at me. \"There's something about controlling someone who's so in control,\" she says. \"It's so damn sexy.\"\n\n\"I'm not in control around you,\" I reply, lifting my head from her thigh and meeting her intense gaze. \"And you know that.\"\n\n\"Good. Now lay down. On the ground.\"\n\n\"Are you sure that you're done?\" I ask, lifting an eyebrow as I give her a challenging look.\n\nAnnie gives me a small smile before she leans forward on the couch and puts one finger under my chin. \"I am not by any means done, baby girl. But right now, I can't deal with how bad my mouth is watering and I need to taste you. Lay down.\"\n\nI can't imagine a world in which Annie would ever need to ask me to do something twice and as she gives me a stern look, I do as she commands, moving my body onto the ground at an embarrassing speed.\n\nAnnie quickly leaves the couch and moves onto the floor with me before she lifts her leg over my body so she can straddle me. As soon as I feel her pussy hit my stomach, I let out a long moan.\n\n\"Fuck. You feel good right there,\" I say out as she grinds down on me and I can feel my stomach and chest getting wet from her pussy.\n\n\"I may have lied earlier,\" she says as she looks down at me. She waits until my eyes are open and focused on her before she continues. \"Your lips are my happy place. But they have competition.\"\n\n\"They do? With whom?\"\n\n\"These,\" she replies as she lightly trails a finger over one of my nipples, hardening it immediately. \"And this,\" she says next, reaching down and grabbing as much of my ass as she can while I'm on my back. \"But mostly, this,\" she finally says, trailing a finger down my stomach and to my pussy.\n\nThe feeling of her finger there sends a bolt of electricity back through my body and I can't control the way it arches up into the woman above me, which only causes Annie to let out a low laugh.\n\n\"Is there something you need?\" she asks in a playful tone.\n\n\"Yes.\"\n\nAnnie leans forward until both of her hands are on either side of my head and her face is above my own.\n\n\"Yes, what?\" she asks.\n\n\"Yes, please.\"\n\n\"As much as I appreciate your manners,\" she says before licking my lips quickly. \"I'd like to know more specifically what you need.\"\n\n\"I need you to fuck me,\" I reply in a throaty voice I hardly even recognize as my own. \"Fingers, mouth, I don't care. Just fuck me. Please.\"\n\nI thrust my body up, but I know that Annie will move at her own pace despite what I do. I put both of my hands above my head and gaze up at her-- knowing that she'll likely enjoy such a submissive move. When Annie smiles down at me like she's won some prize, I know that I'm right.\n\n\"You are the sexiest thing I've ever seen in my whole life,\" she says quietly, pushing her hands into mine above my head. \"And right now, you're mine.\"\n\nWhen I nod in consent, she moves herself so she's no longer straddling me and can trail one hand down my front. I do my best not to squirm, but her slow tortuous journey down my body is sending me into a frenzy. I need her fingers on my pussy soon or I might combust.\n\nI'm about to beg her for her touch but before I need to, I feel Annie's fingers finally touch my pussy. My head falls to the side as I let out a long groan and I feel a sense of relief that she's finally made contact.\n\n\"My poor baby,\" she says, sliding a finger up my folds and onto my clit. \"So patient. Let me make it up to you.\"\n\nShe moves her fingers down and without teasing, she pushes what feels like two of them inside of me. My eyes fly open and I look up at the face above me. Annie's eyes are glassy, and she looks like she's incredibly turned on.\n\nEvery moment I've ever had with Annie seems to get more unbelievable than the last. And right now seems to top them all. The last thing I would have ever predicted was that Annie would be on top of me, looking at me like I'm the most delicious thing she's ever seen, as we fuck in an art studio. Her art studio.\n\nMy eyes slam shut again at the sensation but as soon as they do, I hear her voice from above me. \"Look at me,\" she commands.\n\nI open my eyes again and lock them onto hers. She's moving her body up every time she thrusts back into my pussy and soon, we're in a vertical dance that's so seamless, it's like she's been fucking me like this for years.\n\nI've been told that when I'm really turned on, my brown eyes become almost black. But Annie's eyes never stray from their true color. They always look clear and intense-- as if they could drown you in their perfection.\n\nAs she continues to look down into my eyes, she adds another finger. At the same time, she anchors her other hand into my hair and holds me there, so I'm forced to look at her as she fucks me. The move is so hot and erotic that I can't stop the breathy moans that are spilling out of my mouth.\n\n\"Does that feel good, baby girl?\" she asks, pushing her fingers in even deeper and pressing her lips against my neck. The heavy breathing I feel there is a giveaway for how turned on she is as well.\n\nHer fingers stay inside me but suddenly, I can feel her thumb pressing against my clit, eliciting another long moan from me.\n\n\"Answer me,\" she says, not slowing her pace.\n\n\"Yes,\" I reply, not able to say much more. \"Fuck. Yes.\"\n\nAnnie picks up the pace and is now pushing into me with her full weight. I can feel myself getting closer and closer to an orgasm and I finally have to move my hands from above my head. I reach around and grab Annie's back, pulling her into me so I can feel her tits press against me as her hand continues to fuck me relentlessly.\n\n\"Baby, fuck. I'm going to come,\" I cry out.\n\n\"I want you to come in my mouth.\"\n\n\"Then you better hurry,\" I reply, knowing that my orgasm is imminent.\n\nAnnie slides her body down mine and her hot mouth is on my pussy almost instantly. Nothing is graceful and everything is messy and it feels better than anything I've ever experienced.\n\nBut I don't get to feel her tongue lapping against me for long. Soon, I can feel my legs begin to shake and I know that my orgasm is about to roll in. My hands sink into her hair, pulling her into me.\n\n\"Come for me, baby girl\" Annie whispers against my pussy and her command is all I need to let go.\n\n\"I am,\" I cry out. \"I'm coming.\" My nails dig into Annie's scalp, which she seems to like because she lets out a groan and pushes her fingers into me even harder.\n\nI can feel my body begin to come down from the intense feeling, but Annie seems like she's on a different mission. Without even letting me catch my breath or make sure I can feel my limbs, she's flipping her body around so she can straddle me the other way.\n\nWhen she positions her face over my pussy and presses her body up so I'm in reach of hers, I feel a new rush of arousal. I can see how wet Annie still is and my tongue is impatient to taste her again. Suddenly, allowing my body time to come down from an orgasm seems silly when I could be licking this woman.\n\nI watch her get into a comfortable position on her elbows before I allow my tongue to explore the wet pussy above me. Annie jerks as soon as I touch her, but her moan is swallowed up by my own pussy as she slides her tongue inside of me.\n\nI'm usually sensitive after an orgasm and sometimes a second one isn't something that can happen right away, but it's as if Annie knows my body-- as if she's always known it. Because as she slides her tongue in and out, she's careful not to overstimulate me. It's slow and erotic and I can feel something build again deep within me.\n\nI'm grateful Annie is on top right now because I don't think I'd be able to hold myself up like she is. I've never really understood when people claim they saw stars during sex, but as I close my eyes, that's just what I see.\n\nBut I only allow myself a second of that because I have Annie hovering over me, and I can see and smell how aroused she is. There's no way I'm going to miss an opportunity to taste and feel as much of this woman that I can while I have her.\n\nI bring my hands up and around her thighs and ass and pull her down to me. My mouth is everywhere and as I feel her grind down, it's clear that I don't need to be graceful. I lick up and down her folds, my face getting wetter with every stroke of my tongue.\n\nI can feel Annie's clit begin to harden and as I flick against it, her moans become cries of pleasure against my own pussy. The vibrations alone could make me come, but when I feel her push a finger inside me, I know I won't last much longer. Not with Annie's own pussy driving me wild like this.\n\n\"I want you to come with me,\" I hear her say from above when she takes her mouth off my pussy. \"Come with me, baby girl.\"\n\nAnnie doesn't put her mouth back on my pussy, which is fine, because she adds two fingers to the one that's already there and begins fucking me so hard that I don't even recognize the sounds coming out of my mouth.\n\nUnlike the last orgasm, which rolled in like a wave I could see coming, this orgasm hits me like an electric shock. I don't even have time to tell Annie that it's happening before I feel it rip through my body.\n\nI don't know what I say or what sounds I make. I don't even know what my tongue continues to do to Annie. As my eyes slam shut, I feel a high that takes me to another plane. All I can see behind my closed eyes is Annie-- as if I'm engulfed by her entire presence.\n\nWhen I finally open my eyes, she's lying next to me, also on her back and we're both breathing heavily. I turn my head to her, but her eyes are closed. \"Did you come?\" I ask.\n\nAnnie turns her head lazily and smiles at me slowly. \"I told you I was coming.\"\n\n\"I think I blacked out. I don't remember anything. I don't even know my name.\"\n\n\"It's Choo Choo,\" she replies. \"And I'll take that as a compliment.\"\n\nI roll my eyes, but I know the smile on my face gives me away. \"You're really fucking sexy,\" I say. \"And really good at that.\"\n\n\"I'd say it all comes from experience, but I guess some rookies are just gifted,\" she replies, moving her body so she can lean over me. \"You are also very, very sexy and good at that.\"\n\n\"Well, you know. I read a how-to manual once.\"\n\n\"Oh yes, I'm sure that's how you figured it out.\"\n\nI give her as innocent a smile as I can muster. \"Being with you is like my first time because nobody else compares to you.\"\n\nAnnie lets out an exaggerated snort. \"That was a terrible line. Good thing you already got laid.\"\n\nI laugh as I pull her on top of me. \"You know, I've been in a lot of art studios before,\" I say, glancing down to the less than clean floor we're on. \"Am I going to need a tetanus shot after this?\"\n\n\"I didn't take you for the prissy sort.\"\n\n\"I'm not prissy. Just health conscious.\"\n\n\"And if you did happen to catch Art Studio Floor Disease, would it be worth it?\"\n\n\"Every moment with you is worth it.\"\n\nConsidering the mood, I keep my tone light, but my words are genuine. As crazy as this entire situation is, there is nowhere else I want to be than right here, pressed under this woman.\n\nAnnie's eyes are soft as she looks down at me and it seems we both feel something significant in that moment-- despite our teasing.\n\n\"Would you like me to get you a blanket, princess?\" she asks.\n\n\"Don't you dare go anywhere,\" I reply, my arms coming up around her body.\n\n\"Then let me show you just how worth it I can be.\"\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\nAnnie's studio is bright. Which may be good for art, but not for attempting to sleep. And though I love the feeling of her arms wrapped around my body, her front pressing firmly against my back, the light shining into the art studio is too intense for whatever hour it is.\n\nI turn my body around so I'm not facing the window and as I do, I can see that Annie's eyes are also open. Her hair is flying all over the place, but somehow it just makes her look even more beautiful. She gives me a small smile as she puts her arm back around my back and grazes her fingers up and down.\n\nI close my eyes as my skin erupts in goosebumps. Even after spending an entire night with her, Annie's touch is still electrifying.\n\n\"I don't remember the last time I slept on a couch. I feel like I'm in college,\" I say, opening my eyes and smiling at her.\n\n\"How is that possible? I sleep on this couch all the time.\"\n\n\"I guess I prefer beds. But I suppose this isn't so bad.\"\n\n\"No?\"\n\nI shake my head. \"In fact, I think I could get used to couches.\"\n\nAnnie's smile widens before she looks out towards the window over my shoulder. \"It looks like it's still early. Only seven.\"\n\n\"Can you tell time by the sun?\"\n\n\"Yes, Charlie,\" Annie replies, her face becoming serious as she brings her eyes back to mine. \"I didn't know how to tell you, but I'm actually a pirate.\"\n\n\"That's suspect. You don't have an eye patch or a parrot.\"\n\n\"It's rude to stereotype us,\" she replies with an exaggerated eye roll. She then points over to the window and when I turn my body slightly, I can see that there's a clock on the wall next to it.\n\n\"I'm slightly disappointed,\" I say, turning back. \"The pirate thing was kind of hot.\"\n\n\"Then let me fix that disappointment,\" she replies before capturing my mouth in a soft kiss.\n\nDespite how early it is, and despite how recently we did this exact thing, my body takes no time to respond, and I push myself into her so I can deepen the kiss. When we finally break apart, we're both breathing heavily, and I can see a visible rise and fall to her chest.\n\n\"Better?\" she asks.\n\n\"Aye, matey.\"\n\nAnnie laughs before leaning in and kissing me all over again. This time though, the kiss is cut short when she pulls her face away. \"You're vibrating.\"\n\n\"You think you're that good, huh?\" I respond with a smirk.\n\n\"Well, yes. But that's not what I meant. You're vibrating. Your phone. I hear it.\"\n\nOnce it's quiet, I can hear what she hears and turn so I can reach down and grab the interrupting device. I have to move my hand around before I find my jacket, but once I do, I pull my phone up to the couch with me so I can resume my position next to Annie.\n\nWhen I open my phone, I see that there's two texts from Holly there and my stomach immediately tightens.\n\nMorning, Sunshine. Came down to see you. Unless you're out for an early morning run, which I know you're not because you're lazy, I assume you're not here.\n\nI'd maybe say bye to Annie and get your ass back to the hotel before Kat wakes up. Pancakes at nine.\n\n\"Everything okay?\" Annie asks.\n\n\"It's Holly.\" I turn my head so I can look at Annie again and notice that her face is so much more relaxed than I've ever seen it and I hate that I'm probably about to ruin that. \"She's the one who gave me your number last night.\"\n\nAnnie is quiet for a moment, but her face doesn't change. \"Does that mean she knows?\"\n\n\"I didn't tell her. She could just tell.\"\n\n\"I guess I didn't leave the club very subtly.\"\n\n\"You don't need to worry about her. She won't say anything to anyone.\"\n\n\"I'm not worried.\"\n\n\"What are you going to do?\"\n\nAnnie's eyes close and she takes a deep breath before she speaks. \"I have no idea,\" she finally whispers, putting her forehead against mine. \"Last night was so incredible.\"\n\n\"It feels like there's a 'but' coming.\"\n\n\"No. There's not. I'm just confused.\"\n\nI pull my head back so I can look at her and now she looks the opposite of relaxed. \"About Ian?\" I ask.\n\n\"No, not about Ian. I know what I need to do there, and it should have happened ages ago. With my family.\" Annie is quiet for a moment as she looks down and starts playing with a strand of my fallen hair. \"I'm scared.\"\n\n\"Of what?\"\n\n\"Losing them.\"\n\n\"I understand that. More than most, probably. But you don't seem happy in that life. It's all a lie.\"\n\n\"They're still my family.\"\n\n\"And what about us?\" I ask in a quiet voice.\n\nAnnie is quiet as she looks at me and I brace myself for whatever she has to say. Last night was incredible. In fact, it was one of the best nights I've ever shared with a woman, and I don't know how I can just walk away now. Not from Annie. Not ever.\n\n\"You're leaving, Charlie. You've said so yourself.\"\n\n\"And if I wasn't?\"\n\n\"I don't know.\"\n\n\"Then why don't we start with a date?\"\n\n\"A date?\"\n\n\"A date. Without sex. Since we already know how we are in that department. And we see how things go.\"\n\n\"Wait, so this is a no-sex date?\" she asks playfully, pulling me into her.\n\n\"This is a no-sex-until-the-end-of-the-date...date.\"\n\n\"That may be hard for me. Have you seen yourself?\"\n\n\"I have. And I've seen you. But I think we can do it.\"\n\n\"And you think going on a date will somehow cure me of my mess of a life?\"\n\n\"No. But it might show you that living the life you want is worth making it a little bit messier.\"\n\n\"Who are you Charlie Dawson and what have you done to me?\"\n\n\"Is that a yes then?\"\n\n\"That's a yes.\"\n\nWe're both smiling at each other now and we'd probably look ridiculous to anyone if they could see us, but I don't care. I know nothing has actually been resolved yet and she's still technically with my brother, but I can't erase the significance of what last night meant to me-- and seemingly what it meant to Annie.\n\nTaking Annie out on a date is the last thing I should be doing this week, but our time is limited. And if I'm going to be thinking about her nonstop anyway, I might as well see her.",
        "\"What are you thinking right now?\" she asks when I just continue to stare.\n\n\"That you're really beautiful.\"\n\n\"Very smooth.\"\n\n\"I try.\"\n\n\"What time do you need to be back at the hotel?\"\n\n\"Nine.\"\n\nI see Annie's eyes flick to the clock on the wall behind me again. \"That gives us an hour or so. Any ideas on what we could do in an hour?\"\n\nI smile at her, knowing exactly where her head is at. \"Well, I guess we could look at some more art,\" I offer, pointing over to her canvases.\n\n\"I already am,\" Annie says as she moves her body over mine and stares down at me.\n\n\"Very smooth.\"\n\n\"I try.\"\n\nOur banter is cut short when Annie's lips find mine again and I'm not complaining. We'll have plenty of time to talk on our date. Right now, my mouth has other plans."
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "lesbian",
        "romance",
        "lesbian drama",
        "lesbian sex",
        "lgbt",
        "girl on girl",
        "queer"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-certain-tension-ch-10-14"
}