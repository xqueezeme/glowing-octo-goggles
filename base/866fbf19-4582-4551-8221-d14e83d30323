{
    "title": "Mental Manipulations Ch. 11",
    "pages": [
        "The next couple of days were busy. I talked to Sarah every night, promising to keep in touch with her while I was in the city. Wednesday morning, I packed up my car and started driving.\n\nMy drive back to the city that I grew up in was filled with thoughts of Sarah. How her body felt in my arms, how her lips felt pressed up against mine ... I wondered if I was making a mistake getting involved with her, with her damaged psyche while my own was still in turmoil. I admitted to myself, again, that I had strong feelings for her, but I was afraid of hurting her further. I finally decided that I was just going to have to play things by ear, feel them out and see how they go. Until then, I was a single, unattached man going to a wedding. A wedding hopefully filled with attractive, single women. And my ex-wife.\n\nThat evening, I was comfortably encamped in my friend Jim's condo. Jim had made a large fortune in the tech industry, selling his company just before the bubble burst, and one of the first things that he did was to buy this condo. A duplex unit, Jim's condo took up parts of the 14th and 15th floors of a converted warehouse in downtown Chicago. On the lower level, there was a deck running the length of the unit with glass walls and sliding doors, with a small balcony attached to the master bedroom on the top floor. \n\nI had called Jim so we could meet up while I was in town for the wedding, but he told me that he already had plans to be on vacation with his latest girlfriend. He did offer the loft to me while he was gone, so I wouldn't have to pay for a hotel room. \n\nI decided to go out for a bite to eat that night, picking up some beer on my way back to the condo. I opted to stay in after dinner, knowing that the next couple of nights were going to be very busy. As promised, I called Sarah before I went to bed, and was happy that she sounded upbeat.\n\nI called Sarah before I left for the rehearsal dinner the next night, telling her that I didn't know what time I would be getting back and didn't want to worry about waking her. A little while later I got to the restaurant and was greeted by my son and his fianc\u00e9. I had met her before, and liked her. She was very good for him, and kept him grounded. To my surprise, my ex, who I hadn't seen in five years, was very cordial to me.\n\nJan sat next to me during the dinner, and I could tell that she was trying very hard to put on the charm. 'Don't be nervous. He's still a man, and you've done this before,' I heard during a lull in the conversation. 'You know what you need to do, and you do NEED it!'\n\nNow I was intrigued as to what she was planning. Early on, it seemed like her plan was to try to seduce me. She spent a lot of time laughing at things that I said, touching my arm more than I could remember since we were first dating, and a couple of times I felt her rubbing her leg against mine. She was by my side, like we were still married, almost all night.\n\nI tried to spend most of the night talking to my son and his fianc\u00e9, as well as her parents, who were also divorced, and Jan clung to my side like she was trying to make it look like we were still together, which was very annoying considering the fact that I wanted to try to get to know my son's gorgeous future mother-in-law a little better. \n\nThroughout the night, I heard her thinking things like, 'You can do this.' 'We need this. He's the only option that we have.' That made me wonder who 'we' was and what she 'needed' me for. Most surprising, I heard her think, after a couple of drinks, 'Hell, look at him! He looks like he's still in good shape, so at least you might be able to get laid. You KNOW he can do that! And well!'\n\nOne of the reasons that we split up was the fact that as our marriage grew longer, Jan started getting this sense of entitlement, thinking that her duties, and her ONLY duties, lay no further than our house. That would have been fine, had she actually done anything around the house. Or even if she had done ME once in a while. Now she is planning on using me to get laid?\n\nExperience told me that once she started drinking, I would be able to find out more about what she was up to, and she would be easier to read. I knew that my best course of action was to keep my mouth shut, play stupid, 'listen' to her, and see what she was up to.\n\nAs the dinner was ending, Jan was getting drunk and I wasn't getting a lot from her thoughts, other than worry. I decided to give her a little push to try and get her to act.\n\n'It's getting late. You need to make your move soon!' I sent to her.\n\n\"The dinner is ending soon,\" she told me, hooking her hand in my arm. \"It's still early, do you want to go have a drink?\" \n\n\"Sure, why not?\" I replied. I went around and said my good-byes to everyone. Jan met me at the doors and we walked into the hotel bar together.\n\nAt her suggestion we sat at a table, and a waitress came up quickly and took our order. We made small talk until we had our drinks, and then, just as I expected, she started.\n\n'Ok, you can do this. Don't be nervous! Start by playing on his emotions, then get him upstairs. You've got him from there!'\n\n\"Do you ever think about us?\" she asked, just starting to slur her words. \n\n'Really?' I thought to myself. 'THAT is your approach? To bring up memories of our failed marriage?'\n\n\"Yeah, I do,\" I told her. \"I prefer to think about the early days, and not the last few years, though.\" \n\n'Shit! Why did he have to go there?'\n\n\"I know,\" she replied, clearly hurt by my shot about the end of our marriage. \"Those were fun days.\"\n\n\"I think we did it in every room in that first apartment,\" she said, laughing. \n\n\"Every room but the kitchen,\" I answered. \"We did it in the open on the back porch, the sun porch overlooking the courtyard in the front, and even on the stairs going up to the apartment after a night out drinking, but never in the kitchen. I never understood that.\"\n\n'Damn! I've got to go for it, or I'll lose him!'\n\n\"What do you say we go upstairs to my room and relive some of those memories,\" she asked in a husky voice, trying to sound sexy. She leaned over and placing her hand on my thigh, just below my cock. \"And then maybe make some more?\"\n\n\"I'll even let you cum all over my face,\" she said.\n\nI looked at her for a second and then reached my hand up to the back of her head. I grabbed a handful of her hair and pulled her in to me like I was going to kiss her.\n\n\"I will cum anywhere that I want,\" I told her as she gasped. When we were married, the only places that I was \"allowed\" to cum other than inside her pussy or mouth, which was a rarity, was on her ass and lower back, and then I had to get a wash cloth and clean her off right away. \"Anywhere, any time, any place!\"\n\n'Tell him yes! You need him! You'll do anything to get him to help!' I sent to her.\n\n\"Yes,\" she replied softly. \"Anything. Anywhere!\"\n\nI suppose now is as good a time as any to describe Jan, physically. Standing on the taller side for a woman, she is 5'7\", and a \"life-long size 10,\" in her words. Yes, that was very important to her. Throughout the years, she somehow kept her body in pretty good shape, but her face made her look older than she really was. A life-long smoker and binge drinker, her habits combined with genetics were not a kind combination. She was still an attractive woman, but nothing like when we first met. Then again, I'm sure I was nothing like I was back then either.\n\n\"No,\" I told her, removing her hand from my leg. I then decided to send her a command.\n\n'Damn! You lost him!' I sent her. 'Go upstairs and call her so you can come up with a better plan. Get her involved. She has just as much to lose, get her to sacrifice something and help me!'\n\nI still didn't know what she was up to, but I had a strong feeling that her best friend Christine had something to do with it. I knew that this would be a good way to keep her on her toes and possibly make a mistake for me to take advantage of. \n\n'Yes! Christine has as even more to lose! She should get her ass involved here! I'm going to go upstairs and call her so we can come up with a better plan!'\n\nHearing that, I had to smile to myself. It WAS Christine that she was in trouble with, just as I suspected. Christine was usual her partner-in-crime, even involved in helping Jan cover up her multiple affairs, all while harping on the fact that she was afraid that HER husband would cheat on her because his father cheated on his wives. The question was, HOW were they in trouble, and how did they think that I could help them? \n\nJust for fun, and hopefully to prime the pump, so to speak, I pushed a suggestion deep into her mind. 'While you're talking to Christine, you will realize how sexually attracted to her that you are. You're tired of hiding it. When you hang up, you will play with yourself thinking about her. From now on, your pussy will get wet every time that you even think about Christine. You will discover that you are bi-sexual, and that you want, and need, pussy as well as cock.'\n\nJan and Christine had always been big homophobes, especially towards lesbians, so this was a nice way for me to pay them back for trying to use me for whatever their plan was. \n\n'You will also forget that you were rejected you tonight, remembering only that he said that he was looking forward to Saturday, and that you're hornier than you've ever been, for him AND Christine. Your pussy is constantly wet!' \n\nJan looked funny for a second before she spoke. \"Well, it's getting late,\" she told me. \"I think that I'm going upstairs and going to bed.\" 'I've got to call Christine!'\n\nI watched her walk to the elevator and then went to the bar for one more drink before I left the hotel. As the bartender gave me my drink, I looked in the bar back mirror and saw a few of the bridesmaids coming into the bar.\n\nThree of the five girls were there, happy and laughing as they walked up to the bar. They stepped in to the empty space a couple of seats from me and soon got the bartender's attention. As he walked away to fill their orders he asked if I wanted another drink, and I said that I did, and that he should put the girl's drinks on my tab.\n\nA few minutes later the girls had their drinks, and when the bartender told them that I had paid for them they all turned to look at me. One of them, the maid of honor, who was the only one of the group that wasn't your typical 'Barbie' type, asked, \"You're Sean's dad, aren't you?\" 'You're kind of cute for an older guy. You look a little like an older Sean.'\n\n\"I am,\" I told her as I extended a hand to her. \"I'm Kurt.\"\n\n\"Hi Kurt. Thanks for the drinks! I'm Bethany, and this is Britt and Vanessa.\"\n\n\"Ladies, the pleasure is mine,\" I told them. I talked with them for a couple of minutes while I had my drink. Bethany was a very bright, intelligent young woman, who I would have loved to get to know better if I was closer to her age, but it was obvious that the other two girls had no interest in talking to me too much. I picked up my glass and drained it, and then wished the girls a good evening before I walked back to the condo.\n\nThe next morning, I went out for breakfast and then called Sarah when I got back to the condo. We had a nice, long talk before I told her that I had to start getting ready. After promising to call her the next day I hung up and got dressed. The church that the kids were getting married in was a few blocks away, so I walked over there. As I walked up the stairs of the church I was greeted by Jan and Christine. \n\nJan was wearing a dress that clung to her ass and showed generous amounts of her legs as well as cleavage. Christine, much more petite and curvy, as well as conservative, was also surprisingly showing a lot of leg and cleavage in her very tight dress. I complimented both women on how they looked, and I 'heard' both of them think that they picked a good dress for their plan.\n\nThe ceremony was very nice, with the bride and all of her maids looking beautiful. Jan and Christine both sat next to me, but for the most part I ignored them, pay more attention to Bethany. \n\nTall and thin, with long, curly red hair, she was definitely different from the rest of the women at the altar, who were more of the modern \"classic beauties.\" For once, the bride picked out dresses for her entourage that didn't make them all look hideous. All of the girls were either blonde or dirty-blonde with a pale complection except for Bethany, and the teal color of the dresses complemented their looks. The off-shoulder top, and the skirt ending just below their knees worked well on all of their figures.\n\nAfter the ceremony there was a two hour wait until the reception started so the bridal party could take all of the requisite pictures. I had thought about going back to the condo to relax for a while before heading over to the hotel, but then Jan and Christine invited me to have a couple of drinks with them in the hotel bar. I thought about it for a couple of seconds and then declined, telling them that I had a couple of things that I wanted to do. I then gave both of them a hug, and while I held them I gave each of them a suggestion. \n\nAs I held Jan, I reinforced the one that I gave her the night before, bumping it up to tell her that the wedding was making reminisce about our wedding, and the wedding night, and it was making her very horny, so she should start flirting subtly with Christine. When I hugged Christine, I gave her the same suggestion that the wedding was making her horny, especially since she hadn't had any sex in a long time. I also put a deep suggestion in her mind that she was not only attracted to me, she was attracted to Jan as well, and had always wondered what being with a woman would be like.\n\nI watched as they got into a cab, sitting right next to each other. I then loosened my tie and unbuttoned the top button on my shirt, and started walking around downtown. Living in the city for most of my life, and having done a lot of construction jobs downtown, I realized that was probably the first time that I had ever walked around wearing a suit. Fortunately, it wasn't a hot day so I didn't have to worry about getting very sweaty as I walked around.\n\nAs I played tourist in the city that I grew up in, and still called home, I eventually wound up at Buckingham Fountain, where I saw the wedding party lining up for pictures. Sean, and surprisingly Bethany, saw me and called me over and I wound up posing for a few pictures with the bride and groom and the bridesmaids as well. \n\nOne nice surprise was the fact that the mother of the bride was also there. A petite, curvy brunette named Alexis, she exuded an air of poise, confidence, and intelligence. We talked a little while the photographer set up the bridal party for another series of shots, and I found her to be very funny as well. I 'heard' a few of her thoughts, and I knew that she found me attractive, and it wouldn't take a lot of effort to spend some quality time with her, something that I stored away in my mind. My main goal that weekend was to find out what Jan and Christine had planned.\n\nThe kids all soon started piling into the waiting limos to go to the hotel, and they invited me to ride along. I politely declined, telling them that the car already looked pretty packed, and that I didn't mind the walk. Alexis looked at the limos, and then back at me, and asked if I minded if she walk with me. \n\n'Hmmm... would I mind walking the streets of downtown with a beautiful, busty woman? What a silly question!' I thought to myself. \"I would be honored,\" I told her, \"but it's a bit of a walk. Your feet may hurt, wearing those heels.\"\n\n\"Not a problem,\" she replied. \"Let's go!\"\n\nAlexis insisted that I call her Alex, \"All of my friends do, and I have a feeling that we're going to be good friends!\", and as we talked while we walked to the hotel, I found out that her family was \"old money\", her grandfather having invented quite a few vital components for things that we all use in our everyday lives today. Her father ran the company that her grandfather started, and made it even more successful.\n\nAs we got closer to the hotel, she told me about her ex-husband, and she told me that her daughter hated him, having walked in on him screwing her best friend and next door neighbor a couple of years ago. Thanks to a clause that nullified their pre-nup if either of them were caught being unfaithful, as well as a friendly female judge, Alex wound up with not only all of her money, but half of his as well!\n\nWith all of the noise downtown, as well as the other people, I was having a hard time hearing her thoughts, but I heard enough to know that she was still bitter about him, and she hadn't even been on a date in that time. \n\n\"Well, if it's any consolation, I know exactly how you feel. My ex had numerous affairs, and then got mad at me when I caught her,\" I told her as we walked into the hotel. \"And at the risk of speaking out of bounds, I think that your ex is a fool. You are intelligent, funny, and exceptionally beautiful. Any man would be lucky to have you.\"\n\nI saw her look at me for a second, and then she said, \"Thank you. That was very nice. You seem like a good man, and I think that your ex was a fool to cheat on you.\"\n\n'And thank you for mentioning my looks last! It's nice to be appreciated for something other than my tits and ass!'\n\n\"Ahhh, speak of the devils!\" I said softly as I saw Jan and Christine walking from the bar towards us. \"Here comes my fool now!\"\n\nAlex laughed softly and I introduced her to Jan and Christine. Alex then excused herself, leaving me with them.\n\n\"You two seemed awfully chummy,\" Jan said as Alex walked away. \"Are you two friendly now?\"\n\nI knew that tone all too well, and even after the years that we had been divorced, it still pissed me off. Especially since we WERE divorced.\n\n'Oh crap, Jan! Don't blow it already!' I heard Christine think.\n\n\"Jan, in case you've forgotten, we're divorced,\" I told her firmly. \"It's none of your business who I'm friends with. Especially any friendships that I may have with women.\"\n\n\"And for the record, I just met the woman, so back off.\"\n\n'Shit! Don't piss him off! Not now! We need him!'\n\n\"You're right. I'm sorry,\" she replied meekly. \"I just ... I'm sorry. I was out of bounds.\"\n\nI didn't say anything to her, and then Christine said, \"Should we head into the hall? They should be ready by now.\"\n\nThe three of us walked into the hall and were led to our places in the receiving line. Sean stood next to me and whispered in my ear that he was sorry about the seating arrangements, but that I was at a table with Jan and Christine. \"No worries,\" I told him. \"It's just dinner.\" \n\nOnce we were free of the line, I went and got us all drinks. I wanted to play being polite to them so I could find out what their plan was. When we found out table, I found out that Alex was also seated with us. 'This is going to be interesting!' I thought to myself.\n\nThroughout dinner, Jan and Christine all but ignored Alex, trying to monopolize me, but I wouldn't play along, talking with everyone at the table. I heard Jan and Christine becoming more frustrated at the intrusion into their plans, and I knew them both to be very jealous, insecure women. I decided to play on that and sent both of them a suggestion to go to the washroom together and formulate a plan to get me away from Alex. I also reinforced the idea that they were both increasingly aware of their desire for other women, especially each other. I saw both of them eyeing each other a little more, and I had to keep from smiling.\n\nAs soon as the dishes were cleared, Jan and Christine excused themselves and went to the bathroom together. As soon as they were gone, Alex looked at me and said, \"It seems that your ex still has desires for you. So does her friend.\"\n\n\"Yeah, well it was their desires that got them into trouble in the first place,\" I told her. ",
        "\"You have two attractive women that seem hell-bent on having you tonight. You're telling me that you wouldn't mind a run at your ex? Or her busty friend? Especially if you can have them together?\"\n\n'Hell, I wouldn't mind having either one of them myself! It's been a long time since anything like that has happened!' I heard.\n\n\"Well, at the risk of sounding like an asshole, as much as they both pissed me off, a little revenge sex wouldn't be bad,\" I admitted. \"As on old friend of mine once said, 'A stiff dick has no conscience'.\"\n\nAlex laughed, and then noticed the duo coming back to the table. \"I'll leave you to them, then,\" she said. \"I wouldn't want to make them jealous and ruin your plans.\"\n\n\"I know both of them too well. They're already jealous,\" I replied, smiling at her. \n\nShe laughed again and leaned into my ear as they sat down. \"Well then, I hope that jealousy turns into a wild night for you,\" she breathed into my ear. 'And if there's one of them that you don't want, send her to me!'\n\nAlex then announced that she was going to get a drink and got up from the table. Jan and Christine both shot her daggers with their eyes, and then smiled at me.\n\n\"She likes you,\" Christine said as she watched Alex walk away. 'She is hot, too!'\n\n\"So it seems,\" I replied.\n\n\"You're not interested in her?\" Jan asked. 'Hell, if Christine and I didn't have our plans for you, and Christine wasn't here, I'd go for her!'\n\n\"I'm not here to meet women, Jan,\" I replied, looking very serious at her.\n\n\"I'm sorry,\" she replied.\n\n\"I understand. Force of habit,\" I told her. Neither of them said anything about the not-so-subtle shot, so I offered to get us all some drinks. Jan quickly said that she would go, and got up and started walking to the bar. I looked at Christine and saw her watch Jan walk away. \n\n'How did I never notice how sexy she is?' she thought. She turned back and looked at me.\n\n\"So how are you?\" she asked. \"I heard you had a bad accident a while ago.\"\n\n\"I'm doing fine now,\" I told her. \"Thanks for asking.\"\n\n\"How are you handling your divorce?\" I asked.\n\n'Oh crap! Does he know that I was cheating on Jack?' \n\n\"I'm ok, I guess. I'm getting used to being single again. I'm going to lose the house. That hurts.\"\n\n\"It's rough. I know,\" I told her. I thought that it was very telling as to how materialistic she was that she was more upset over losing her house than she was her husband, all while talking to a man who's house she helped lose. \"Maybe you can move in with Jan. I'm sure she would love the company, as well as the help with the bills. After all, you're already about as close as two women can be without being lovers. You already work together,\" I told her, choosing my words carefully.\n\n'Shit! Does he know about the problems?'\n\n'I wouldn't mind being even closer to her, either!' she added to her thoughts.\n\nWe talked for a few more minutes and then Jan came back to the table. \"Your new friend is very pretty,\" she said. \"I was talking to her at the bar. She seems very nice.\" 'If things don't work out with Christine, maybe I'll make a pass at her!'\n\n\"Yes, she is,\" I replied, taking a sip from my glass of bourbon and wondering what Alex was thinking. \n\nWe made small talk for a little while, and then the DJ came out and started playing. I told the women that I wanted to stretch my legs and walk around a little, and then 'suggested' that they go dance together. They both looked at each other and then agreed.\n\nAs I was standing at the bar, Bethany and a couple of the other bridesmaids walked up. Bethany said hello, and then asked if I wanted to join them in a shot. \"Yeah, c'mon Sean's dad! Do some tequila shooters with us!\" one of the girls from last night said.\n\nI looked silently into the faces of these beautiful, beaming young ladies and laughed. \"Young lady, this is going to be a long night for me. I would be happy to join you all in a shot, but I'm going to have to insist on Jameson for myself.\" \n\nThey all cheered and agreed, and then ordered their shots. We all toasted the happy couple, and the rest of the girls decided to dance, but Bethany said that she was going to stay at the bar.\n\nAs the girls started moving on the dance floor, Bethany and I started talking. I looked onto the dance floor as we talked and saw Jan and Christine dancing very closely together, touching each other on the hips and upper arms while they moved.\n\nI could tell by hearing her thoughts that Bethany was a very intelligent young woman. Shy, introverted, with low self-esteem, she wasn't very comfortable in situations like this, and it showed. Every time that she looked over the other bridesmaids, out on the floor dancing and teasing my son's friends, she would ask the bartender for another shot. She had just looked over for a fourth time.\n\nI looked onto the dance floor and saw Jan and Christine walking off, heading towards the table. Jan made a detour and started walking towards the washrooms, and I excused myself from Bethany, telling her that I would be right back. I then sent her a suggestion that she should stay there, but not do any more shots. In fact, I 'told' her that switching to water might not be a bad idea. Once I knew that my message took, I followed Jan to the washroom.\n\nI waited outside the Ladies room for her, and as soon as Jan walked out I took her by the arm and led her down the hall. \"What's going on?\" she asked, confused.\n\n'Holy shit! Is he going to make this easy for me? For us?'\n\nI soon found a dark corner and led her to it, where I placed her up against the wall. I leaned in and grabbed a handful of hair at the back of her head, pulling her to me and kissed her. Her thoughts went crazy.\n\n'Oh my god! I forgot how good of a kisser he is! I miss his kisses! I miss EVERYTHING he can do with his lips and tongue!' she thought as she wrapped her arms around me.\n\n'Oh shit! I can feel his cock rising!' she then thought as I involuntarily started rising to the kiss. 'Damn! I REALLY miss his big cock! This could work out a lot easier than we hoped!'\n\n'Christine is so horny, she's going to LOVE what he can do! I can't wait until the three of us are together! Christine and I will get fucked real good, I'm finally going to get to make love with her, AND we'll get him to help us!'\n\n\"Give me the key to your room,\" I told her when I broke our kiss. 'Don't ask why. Just give it to him. And don't tell her that you gave it to him!'\n\nShe silently obeyed my order and I pocketed the key card. \"I just need to use the bathroom, and I don't want to go down here,\" I told her. \"I'll give it back to you as soon as I can.\"\n\n\"Ok,\" she replied, smiling at me.\n\n'Go back to the table and flirt with her some more. Get yourselves both so worked up that you are ready to jump each other's bones!' I 'told' her, using one of her favorite phrases for having wild sex.\n\n'Yes! I can't wait to have my first taste of a pussy that isn't mine! This is going to be great!'\n\n'Stop off at the bar and get yourselves a couple of drinks first. Flirt with the tall, skinny bridesmaid. You're attracted to her, after all.'\n\nJan smiled at me and said, \"I'll see you later. Have fun!\" I watched as she then walked back down the hall towards the room. I noticed an extra sway to her ass as she looked over her shoulder at me, smiling. I stood there, slowly shaking my head, and then went to the men's room. When I walked out, I went back to the bar where I found Bethany still standing there as Jan walked away, her hips still swaying.\n\nBethany greeted me with a smile, and was starting to slur her words when she spoke. \"Have you been standing here alone this whole time?\" I asked her.\n\n\"Yeah, except for your ex-wife talking to me a couple of minutes ago,\" she replied. \n\n\"I'd swear she was flirting with me,\" she whispered as she leaned in to me. \n\n\"She probably was,\" I told her. \"You're a very beautiful girl, and I've always thought that she was ... curious.\"\n\n\"Stop,\" she replied, looking at me. 'I am NOT beautiful!'\n\n\"Stop what?\" I asked, looking confused. \n\n\"I'm not beautiful,\" she said softly. \n\n\"Them,\" she continued, looking at the girls on the dance floor. \"THEY'RE beautiful. Not me!\"\n\nI gave her a confused look again, and then said, \"What are you talking about? You are at least as beautiful as any of them.\"\n\n\"No, I'm not,\" she replied, her voice almost a whisper.\n\n\"Young lady, didn't your parents ever tell you not to argue with your elders?\" I asked, giving her a mock angry look. \"Am I going to have to put you over my knees and spank you?\"\n\nBethany gasped and looked at me wide-eyed. 'Yes! I love to be spanked! Smack my ass!'\n\n\"No,\" she replied softly.\n\nI looked at her for a second as I worked on my plan in my head. \"Why don't you come with me,\" I told her. \"I think you can use some fresh air.\" 'He's right. Go with him. Get some air. Spend some time with him.'\n\nI offered her my arm, and we started walking to the elevators. \"Where are we going?\" she asked as the doors closed behind us and I pressed the button for one of the top floors.\n\n\"There is a rooftop bar with a nice deck,\" I told her. \"The fresh air will help you.\"\n\n\"Ok,\" she replied as she leaned against me. 'He's hot for an older guy! Nice, too!'\n\n'Oh my god! What are you thinking? He's old enough to be your father!'\n\n'Yeah, but you never had a father. This is nice. He's showing some concern for you. He wants to take care of you!'\n\n'Hmmm... he thinks that you're beautiful. Maybe he'll REALLY take care of you! I'm sure that he knows a lot of things that guys I've been with don't know!'\n\nShe started giggling after that thought and I asked her what was so funny. The elevator doors opened onto the foyer for the rooftop bar, and she replied, \"Oh, nothing. I was just thinking about something.\"\n\n\"Hmmm ... Anything I should know? Or worry about?\" I asked, as I smiled at her.\n\n\"No,\" she giggled again as I led her to the edge of the deck. \"At least, I don't think so!\"\n\nWe sat at a table overlooking the city and I told the waitress that we just needed a couple of glasses of water. She rolled her eyes, thinking that we were just taking up one of her tables, costing her tip money, until I laid down a ten-dollar bill. She smiled at me, and quickly returned with the water.\n\n\"So what makes you think that you're not beautiful?\" I asked her.\n\nBethany looked at me like I was crazy, and then replied, \"Have you looked at them? Look at me! I can't compare to them! I'm plain-looking at best!\" 'Is this guy blind?'\n\n\"I'm too skinny, I have no boobs or butt, I have wild, curly red hair and a ton of freckles ...\"\n\n\"Bethany, you are not 'plain-looking at best.' Those girls have to put in a lot of work to look like that. They are very high-maintenance. You have a natural beauty that beats theirs any day,\" I told her. \"Not every guy cares about big boobs, or a thick ass, and SOME guys even like freckles.\"\n\n\"Quite honestly, if I was your age, and I saw you out with them, YOU are the one that would get my attention, not them.\"\n\n\"Yeah, right. Whatever,\" she replied.\n\n\"Don't 'whatever' me, young lady,\" I told her firmly. \n\n\"Pffft. What are you going to do? Spank me?\"\n\n\"If need be,\" I said. \"You're not too old to be put over my knees!\"\n\n'Oh my god! Don't tease me like this!' \"Yeah, right,\" she replied.\n\n\"Don't roll your eyes at me, either,\" I added. Bethany looked at me and saw that I was serious.\n\n'Oh my god! You are so fucking sexy like that! You have such beautiful eyes! I wish you WERE my age!'\n\n'Why does his age matter?' I sent to her. 'You think that he's hot, he thinks that you're beautiful ... go with it! It's a wedding, damn it! Get yourself some!'\n\n\"Bethany, believe it or not, you ARE a beautiful woman,\" I told her. \"You are a very sexy woman, and any guy would be lucky to have you.\"\n\n\"ANY guy?\" she asked softly as she looked into my eyes. 'Even you?'\n\n\"Yes, young lady. ANY guy.\"\n\n\"Prove it,\" she whispered.\n\n\"Excuse me?\" I asked, wanting her to actually say it.\n\n\"Prove it,\" she said a little more firmly.\n\nI looked deeply into her eyes for a few seconds, and then asked, \"And how would you like me to 'prove it'?\" I asked her.\n\n'How the hell do you think?' she thought. \"If I have to tell you ...\"\n\n\"You don't HAVE to tell me,\" I replied, \"but hearing the words come from your mouth would definitely help.\"\n\nShe looked at me silently for a few seconds as she took a long drink of her water. \"You could kiss me,\" she said softly.\n\n\"Kiss you?\" I replied. \"That's it?\"\n\n\"That's a good start.\" 'You could also fuck me until I can't walk!'\n\nI looked at her quietly as I thought about the situation. While taking her to Jan and Christine's room would be wrong to many people, in reality I wasn't making her do anything that she didn't want to do. I wasn't manipulating her in any way. I told myself that it could even benefit both of us for a while. Bethany wanted, and needed, to get laid and this would help her self-esteem, especially with a solid suggestion afterwards that she could have any guy she wanted, it was clear to me that Jan and Christine were planning on trying to seduce me and manipulate me into helping them with whatever their problem was. If I had sex with Bethany first, I would last a lot longer the second, and third, times around.\n\nKeeping my eyes locked on hers, I put my hand behind her head and leaned in to her, gently pulling her to me and kissing her.\n\n'Oh my god! I can't believe he's really doing this!'\n\n'Damn! He's a pretty good kisser! I wonder what else he can do with his tongue!'\n\nI pulled my lips from hers a few seconds later and looked into her eyes. \"Holy cow! That was so hot!\" I heard from the side of the table. I looked up and saw the waitress watching us, her mouth open in shock.\n\n\"And how was it for you?\" I asked, turning back to Bethany. \"For starters, I mean.\"\n\n\"Good,\" she replied softly. \"For starters.\"\n\nI noticed that she had stopped slurring her words quite a bit, so I knew that the fresh air and the water had helped. I looked at her, and then took her hand. \"Come with me,\" I told her as I led her from the table.\n\n'I'll be happy just to cum!' she thought. She then giggled again.\n\nI looked at her as she giggled and she blushed a deep red. \"Sorry,\" she said.\n\n\"Don't be,\" I told her as I pressed the button for the elevator. \"It's sexy.\"\n\nBethany sighed as the doors opened and we stepped into the car. 'Sexy!' she thought. 'Where is he taking me now?'\n\n'Does it matter?' I made her ask herself. 'He obviously wants you! Do you think he's hot and sexy? Just go with him!'\n\n'Yeah, he IS hot and sexy!'\n\nBethany and I looked at each other lustfully as we rode the elevator down the ten floors to Jan's room. Her thoughts kept begging me to kiss her, but I stood still, just looking at her. The doors opened and I took her hand, leading her down the hall to the room. \n\nAs we entered the room, Bethany looked around. She saw the two suitcases on the floor and the women's clothing, including lingerie and a dress that was too short and wide to be Jan's, spread out on the bed, and then looked back at me. \n\n'What the hell? What's all of this?' \"Who's staying with you?\" she asked, looking around the room.\n\n\"This isn't my room,\" I told her.\n\n\"Who's is it?\" she asked, narrowing her eyes. 'Did you steal someone's room key?'\n\n\"My ex and her friend,\" I replied, smiling at her.\n\n\"And she just gave you the key so you could take me up here?\" 'What the hell is going on?'\n\n\"No,\" I told her with a chuckle as I stepped up to her and placed my hands on her hips. \"If she knew that I was bringing you up here, she might have wanted to join us. Her friend would probably want you, too.\"\n\nI pulled her in for a soft, tender kiss, and then added, \"I want you first.\"\n\n'First? Oh my god, he's a good kisser!' she thought as I pressed my lips against hers. 'Hmmmm ... I wonder what it would be like being shared between two, or even three, older people!'\n\n'Oh! But definitely him first! Oh my god!' she thought as our kiss intensified. My hand slowly slid down to her ass and I squeezed her cheek, pulling her hips to me.\n\n'Holy shit! I can feel his dick pressing into me! He feels big!'\n\n\"Now sweetheart, as much as I would love to spend HOURS exploring your sexy body,\" I whispered in her ear as I started nibbling on her ear lobe, \"we don't have that much time.\"\n\n\"I know,\" she moaned softly as I nibbled on her neck. She wrapped her arms around me and held me tight. \"I understand.\" \n\n\"Tell me what you want,\" I said as I kissed lower down her neck.\n\n\"Ooohhhhh!\" she moaned, pressing her fingers into my back. 'What does he want me to tell him?'\n\n'Tell him what you want! Talk dirty to him!' I told her. 'Let yourself go! Be the slut you've always wanted to be!'\n\n\"Oh my god!\" she gasped. My fingers were slowly pulling her dress up her long legs and my lips reached the juncture of her neck and shoulder.\n\n\"I want you to fuck me!\" she moaned as I kissed her bare shoulders. \"I need to cum so bad!\"\n\n\"Nice!\" I replied. Her skirt was just below her skinny ass and my fingertips were just reaching the bare skin at the back of her upper thigh, just below her cheeks. \"Very nice!\"\n\n\"Is that all?\" I asked.\n\n'No! I want it all!'\n\n\"I want to feel your tongue,\" she moaned. My hands slowly slid up the side of her body, my thumbs extending to reach the underside of her breasts. \"Oh my god! On my pussy!\"\n\n\"Are you going to suck my cock, too?\" I whispered in her ear as my thumbs brushed across nipples, pressing hard against her dress.\n\n\"Yesssss!\" she hissed as I pinched her nipples. \"I love to suck cock!\"\n\n\"Show me,\" I told her.\n\n'Yes! Show him what you can do!' I sent to her.\n\n'Oh my god! It's been so long since I've had a real cock, I hope I can remember what to do!' she thought as she slowly knelt in front of me.\n\n'You're gonna be a slut for him! You know that you know what you're doing!' I sent to her, to reassure her.\n\n'Holy crap! That bulge looks huge!' she thought as she stared at my crotch.\n\nI looked down, watching as she started opening my pants. With my belt unbuckled and my pants undone, she breathed heavily as she hooked her fingers into the waistband of my boxers. I watched her chest rise as she took a deep breath and then slowly fall as she exhaled. She then pulled my drawers down with a hard tug, causing my hard cock to spring up right in front of her nose.\n\n'Holy shit, that's thick!'\n\n\"Oh yeah!\" she breathed as she reached her hand up and wrapped her fingers around my shaft. \"Nice cock!\"\n\n\"Suck it, you sexy bitch,\" I told her. \"Get my cock nice and wet for your tight little pussy!\"\n\n\"Yessss!\" she moaned as she leaned in to me. 'He called me a sexy bitch! I'll show him what a sexy bitch I am!'\n\nShe looked up at me as she wrapped her lips around the head of my cock and slowly slid her lips down the length, keeping her eyes locked on mine. \n\n'How's that, old man?' she thought as the tip of her nose touched my pubic hair.\n\n\"Oh damn!\" I moaned. \"That is so good!\"\n\n'Damn right it is! And you ain't seen NOTHING yet!' She then started sliding her lips back.\n\n'Show him! Show him what a good cock sucker you are!' I sent to her.\n\n\"MMmmHmmm!\" she moaned around my thick shaft as she started bobbing her head back and forth.\n\n\"Oh damn!\" I moaned a few seconds later as I reached my hands down to her head.\n\n\"MmmMMM!\" she moaned, shaking her head and keeping my rod in her mouth. 'Let go of my head! I know what the fuck I'm doing!' \n\nI was happily surprised at her sudden burst of confidence and moved my hands from her. Bethany then tightened her oral grip as she continued sliding her lips up and down.\n\nShe slid her hands up and held onto my ass cheeks as she sucked my cock. She would alternate between sucking me with short, fast strokes and then slowing me down to take me deep. I could tell that she was trying to swallow me, but she couldn't get the final inch or so down her throat.",
        "\"Damn, he's big! I'm gonna choke myself trying to deep throat him!'\n\n'Just do what you can. We gotta get back downstairs soon anyway!' I made her think.\n\n\"I want you to fuck me!\" she gasped a couple of minutes later as she released my cock from her tight lips and started to stand.\n\nI helped her up and then roughly pushed her back onto the bed, right on top of one of Christine's dresses. I lifted her dress as she lay back and I saw her thong, with a big wet spot on it. I hooked my fingers under her waistband and yanked hard on it, tearing her panties off of her. Bethany yelped and looked down as I tossed her shredded garment on the floor.\n\n\"What the fuck?\" she exclaimed. 'I can't go commando! Not today!'\n\n\"You don't need those,\" I told her. I then hooked my hands under her legs and pushed them back as I squatted down and planted my face on her wet pussy.\n\n\"Oh my god!\" she moaned loudly as I took a long, slow lick up her slit, from her seeping hole up to her clit. My tongue danced around her stiff bud for a few seconds as she moaned louder and started moving her hips, trying to hump my face.\n\n'Holy shit, he's good! I've got to hook up with older guys more often!' she thought as she moaned louder. 'At least he knows what the hell he's doing down there!'\n\n\"Do you like that?\" I asked her as I quickly flicked my tongue at the tip of her clit.\n\n\"Oh my god! YES!\" she exclaimed, humping her hips higher.\n\n\"Good!\" I replied, leaning down and sucking hard on her clit. She yelped loudly and reached her hands down to my head.\n\n'That's it! Be vocal! He likes that! Let it all out!' I sent to her. I had heard someone enter the room next to this one, and I wanted them to hear her and think that it was Jan or Christine.\n\nAfter a few more seconds I released her clit and flicked at her clit, making her moan again, and then stood. \"Are you ready for this?\" I asked her as I slid the head of my cock up and down her slit, which was even wetter now.\n\n\"Yes!\" she exclaimed. \"Fuck me!\"\n\n\"Tell me!\" I told her. \"Make me believe you!\"\n\n\"FUCK ME!\" she yelled, looking me in the eyes. \n\n\"MAKE ME SCREAM! MAKE ME CUM ALL OVER YOOOUUUU!\" she exclaimed as I slammed my hips forward, burying my cock deep with one thrust. \"OH MY GOD!\"\n\nI kept myself pressed up against her hips and alternated flexing my ass cheeks, causing my cock to wiggle inside her. \"Ohhhhyyeeeeaaaahhhhh!\" she moaned as she reached her hands down to my ass.\n\n\"Are you sure that you're ready?\" I asked as I smiled at her.\n\n\"Yes!\" she exclaimed loudly. \"Fuck me! Make me cum!\"\n\n'Holy shit! Quit teasing me already and fuck me!'\n\nI pushed her legs back a little harder, and then started thrusting back and forth. \"Oooohhhhyyeeeeaaaahhhhh!\" she moaned. \"So full!\" \n\n\"You've got such a nice, tight little pussy,\" I told her as I started fucking her faster.\n\n'That's because I haven't been laid in months, and you're so damn big!'\n\n\"Tight just for you, baby!\" she hissed as she looked deep into my eyes. \"Now fuck my tight little pussy! Make me cream all over you!\"\n\n\"If you insist!\" I replied as I started fucking her faster and harder.\n\n\"Oh yes!\" she yelped. \"Fuck me! Fuck my pussy!\"\n\nShe WAS tight, and getting wetter by the second. I continued thrusting in and out of her. I reached up and grabbed the top of her dress and yanked it down, exposing her chest. Her tits were small, but her gumdrop nipples stood out far. I slid my hands over to her tits and pinched her nipples, pulling on them.\n\n'Oh my god! My nipples are so sensitive right now!'\n\n\"Fuck! Yes!\" she yelped. \"I love it!\" 'Holy shit! It's like he knows what I want! This is SO GOOD!'\n\nI started alternating between squeezing her little tits and pinching and pulling on her nipples as I fucked her harder and faster. \"Oh fuck yes! Fuck me! Harder! Faster! You're gonna make me cum!\"\n\n'Help him! Play with your pussy while he fucks the hell out of you!' I sent to her.\n\nHer hand the flew down to her pussy and she started rubbing her clit. \"Ohmygodyessssss!\" she moaned. \"Sooooo goooooood! I'm gonna cum!\"\n\n\"Tell me, you sexy little slut!\" I told her. \"I want to hear it when you cum!\"\n\n\"Yes!\" she yelled. \"Fuck me! I'm gonna cum!\"\n\nI started slamming my cock deep inside her, taking longer strokes as she rubbed her pussy faster.\n\n\"Oh my god! Oh my god! Oh my god! Oh fuck yes! I'm cumming! Fuck me! I'm cumming!\" she screamed.\n\n\"Oh fuck! Oh fuck! Oh fuck!\" she kept chanting as I fucked her hard and fast. It was hard to tell because her mind had gone basically blank at that point, but I think that her first orgasm hit her, and then rolled into another and another. \n\nI knew that I was going to have to cum soon and I started wondering where I should finish. Almost like she was reading my mind, she said, \"Cum inside me! I wanna feel you shoot inside me!\"\n\n\"Oh fuck! Yes!\" I growled a couple of minutes later, as slammed my hips forward and felt my cock spew deep inside her pussy.\n\n\"Yes! Oh fuck yes! I'm cumming again!\" she exclaimed as her body started quivering. I could feel her muscles squeezing my throbbing shaft as she moaned loudly and I bucked my hips against her. \"Oh FUCK!\"\n\nIt wasn't long before I felt my deflating pole slide from her wet hole and I stood. Bethany lay there catching her breath, her legs spread wide and her nipples still hard and tall. I watched as my cum started dripping from her pussy as she started to move again.\n\n\"Holy shit, that was awesome!\" she said as she sat up. \"I haven't cum like that in ages!\"\n\n\"I'm glad you enjoyed,\" I told her, smiling down at her. \"You're pretty damn good yourself.\" \n\n\"Thank you,\" she replied, giggling. We both started cleaning ourselves up, and when Bethany stood I could see a big wet spot on one of Christine's dresses. \n\n\"I'm going to have to go commando for the rest of the day now,\" she said, looking at her torn panties lying on the floor. \"I can already feel your cum starting to run down my leg!\"\n\n\"You're free to try to find a pair in one of the suitcases,\" I told her. \n\n\"You don't think that they'll mind?\" she asked.\n\n\"I don't think that they'll notice. I'd look through that suitcase,\" I told her. \"Those are my ex's clothes. They'd probably fit you better.\"\n\nBethany started looking through Jan's suitcase and soon held up a thong. \"This is nice! But it's too big for me! Everything is too big for me!\"\n\n\"I'm sorry baby. I guess you're just going to have to go commando after all,\" I told her.\n\nShe then looked me up and down, and asked, \"Aren't you going to wash up? You've got ... me, all over that big dick of yours.\"\n\n\"I'll wash up later,\" I told her. A few minutes later we rode the elevator back down to the reception. I heard her thinking about the feel of my cum slowly sliding down her leg, and wondering what she was going to tell her friends if they asked where she disappeared to.\n\n\"Any chance for another go later?\" she asked as the elevator doors opened.\n\n\"That's a good possibility,\" I told her. Bethany smiled at me and went to the ladies' room, I assume to wash the dripping cum off her leg."
    ],
    "authorname": "cuninglinguist61",
    "tags": [
        "wedding",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/mental-manipulations-ch-11"
}