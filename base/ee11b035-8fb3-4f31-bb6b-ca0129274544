{
    "title": "A Friend For Life",
    "pages": [
        "A giant thanks to my second pair of eyes from Across the Pond, Irfon. \n\n*** All characters are portrayed over the age of eighteen. *** \n\n\"Man, Kristen has got an ass on her. You can't believe what we did last night. I've got that bitch sucking my dick like a pro.\" Jason smiled and nudged his best friend Ryan as they sat in the balcony of the school pool watching swim practice. \n\n\"How are you making time for Kristen when you're dating Miranda?\"\n\n\"Her mom hates me with a passion. The bitch makes me have Miranda home by seven. I got my cock sunk in Kristen's throat by seven thirty. She's the biggest whore in school.\"\n\nRyan shook his head and eyed his friend. \"I thought that was you.\"\n\n\"Okay, yea. I'm a whore, but you know what I mean. The bitch will go down on a fucking mule if it says she's pretty. I can't stand to look at her face, but I swear, I'm gonna be balls deep in that ass right after The Valentines Day Dance. She just doesn't know about it yet.\"\n\n\"How are you going to pull that one off?\"\n\n\"It's call the afterparty. Miranda has to be home right after the dance. I'm gonna be working Kristen over something fierce. I'm planning to get her so blitz she can't even see straight. By the time she knows what I'm doing, my little swimmers will be doing laps in her ass. I'm gonna video the whole thing.\"\n\n\"Not bad. You're gonna videotape date raping a girl in the ass. Can't say it's the smartest plan in the world, but it's all you.\"\n\n\"Damn straight. If Miranda won't put out, I have to get it anywhere I can. Law of the jungle, man.\" Jason slapped Ryan on his back as he stood up. \"I gotta go. Kristen wants to go pick out a dress for the dance. If I'm really really good, maybe I'll get to squeeze her tit for a solid two seconds before she chickens out.\"\n\n\"Why are you even dating her?\" Ryan stood with him, shaking his head in disbelief.\n\n\"Untapped pussy, man. I just have to pop that sexy little brain's cherry. I'm gonna video that event too. Maybe even post it for making me wait so fucking long. Cock teasers need to be punished.\"\n\n\"Good luck with that.\" Ryan said as his friend walked away. \n\nRyan sat back down and rested his feet on the railing in front of him. With a heavy sigh, he pulled the digital recorder out of his pocket and listened to the conversation again. Satisfied it would be enough. Ryan stood and walked from the pool facility. He was home and finished with his homework by six. At seven ten, he watched Jason's car disappear down the street as he looked out his bedroom window at Miranda's house. \n\nHe waited until Saturday morning to walk down the street and knock on Miranda's front door. Mrs. Emily Tan answered the door and smiled as soon as she saw Ryan. Her dark hair with hints of red highlights in her bob shaped her face perfectly as usual. He was drawn to her dark almond shaped eyes and rounded cheeks. She seemed like a tiny jewel imported from a far off land. He really didn't know if Singapore was so far away these days, but it always seemed to be when she spoke about her earliest memories there before her parents had immigrated to America. \n\n\"Ryan. How are you?\"\n\n\"Good, Mrs. Tan. How are you?\"\n\n\"Fine. I was just getting ready to go out shopping. What do you need?\"\n\n\"Miranda. I need to talk to her about something.\"\n\nHer eyes narrowed at his scowl and odd sound to his voice. \"What's wrong?\"\n\nRyan shrugged. His eyes found hers and dropped. \"I'm betraying a friend Mrs. Tan. I don't really know what to do. I don't really know which loyalty is more important.\"\n\nShe motioned him in and shut the door. \"Explain it to me.\" Emily said as she guided him to a sofa and sat down next to him.\n\nSeated, Ryan pulled the recorder out of his pocket and looked at it. \"I've never known a world without Miranda in it. All the birthday parties, street parties, and Fourth of Julys. Even though we don't really talk much anymore, I still consider her a friend. I don't want her hurt.\"\n\n\"Who's hurting her?\" Her voice was sharp and demanding. The brown eyes locked on the recorder in his hands. \n\n\"I'm not sure you want to hear this, Mrs. Tan.\"\n\n\"If it concerns Miranda, I do.\" \n\nRyan looked up to see her breathing had increased. Her lips were pursed together in a combination of worry and determination. It was the expression she had when she was really concentrating on something. He held the recorder up and hit play. His eyes were closed as his friend's voice filled the silence. He heard Mrs. Tan's sharp intake of breath and then a heavy exhale. Ryan's eyes flew open when he felt her hand latch onto his wrist. It gripped tighter as the tape went on.\n\nWhen the tape was finished, he stopped it and placed the recorder on the sofa next to him. His hand dropped to hers. \"That kind of hurts, Mrs. Tan.\"\n\n\"Oh. I'm sorry, Ryan.\" Her head came up as her fingers uncurled from around his wrist. Her voice grew in anger with each word. \"I didn't mean...that little prick. I'm gonna cut his balls off.\" \n\nShe slipped her hand away as he turned it over. Pulling up his sleeve to get a better look, he revealed four perfect indents in his skin. The blood was already pooling around the wounds. \n\n\"Oh, Ryan.\" She gasped. \"I'm so sorry. I didn't know I was doing that.\" \n\nEmily took his hand and nearly dragged him upstairs to the master bathroom. He watched as she rummaged through a drawer and pulled out a well-stocked first-aid kit. She worked with practiced ease as she cleaned the wounds. Her bottom lip between her teeth. Ryan's eyes looked down at her and found her cleavage staring up at him. After a full minute, he realized what he was doing and turned his head. He was now staring at a pair discarded red lace panties. They'd been tossed on a bench seat in front of her makeup mirror.\n\n\"They're panties, Ryan.\" \n\nRyan blinked. His head slowly turned towards the voice to find Mrs. Tan smiling up at him. He felt his cheeks growing warm and knew he was blushing. Dropping his eyes from hers, he locked on her cleavage again. He let out a startled gasp when her hand came up and lifted his chin.\n\n\"Those are breasts.\" She was trying not to laugh at his obvious discomfort. Dropping her eyes she looked down his body. \"And that appears to be an erection. I guess everything works the proper way, Mr. Walker. That's always nice.\"\n\n\"Sorry.\" Ryan mumbled with his eyes shut tight.\n\n\"Have a seat, Ryan.\" \n\nShe motioned for him to sit after she picked up her panties and tossed them in the hamper. Ryan's eyes had followed them as they drifted in an arc through the air and disappeared. His hand came up to wipe imagined sweat from his brow. He scooted over quickly when she sat down next to him. \n\n\"Look at me, Ryan.\" His head came up. She was staring at him intensely. \"Do you treat girls the way Jason does?\"\n\n\"No, ma'am. I don't treat girls at all.\"\n\n\"What does that mean?\"\n\n\"I'm...I'm not aggressive. I'm not like that at all. I just don't...\"\n\n\"You're a virgin.\" Her lip curled up in a soft smile. The way she said it was more of a statement of fact than a question. \n\nRyan nodded. \"I've had chances. I think. I'm just not the aggressor. The initiator. I want to, but I don't want to make a fool out of myself being horrible.\"\n\n\"Very few boys are good the first few times. A girl's first time is usually extremely disappointing. It's just the way it is. You've always seemed like a good boy. Do you talk and think about girls the way Jason does?\"\n\n\"No. He's a friend. Always has been. I just follow along the way I always have. Kind of a habit, I guess.\"\n\n\"Have you ever heard the phrase, guilt by association? That's where you are at the moment. Jason is a despicable human being. If you call him a friend, so are you. It was brave and honorable what you did. You can't make excuses for what he is and you can't be friends with someone like that. He'll only lead you into trouble.\"\n\n\"What am I supposed to do. He's one of my only friends.\"\n\n\"You're graduating in a few months. Go off to college and become something. Make new friends when you get there. Decent friends. It's natural to drift apart from the people you grew up with. Don't worry too much about Jason. He'll probably end up in prison while you're away. You don't want to be in the cell next to him. Do you?\"\n\n\"No.\"\n\nMrs. Tan wrapped her arms around him as far as she could and gave him a gentle squeeze. Ryan felt the swell of her breast pressed against his arm and then her warm lips on his cheek. His eyes were once again focused on the gap between her breasts. Her golden brown skin looked so soft. There was a gentle sheen to it like she'd used a lotion on her skin. Her hand once again reached up to focus his eyes on hers.\n\n\"You like them?\"\n\nRyan nodded while scrunching up his face as if in pain. He was making a fool out of himself. The only reason he was already out the front door was the arm she had wrapped around him. \"I'm sorry. They're right there. I can't help but look at them.\"\n\n\"It's okay. They haven't got this much attention in years. If they could blush, they would.\" \n\nBefore he could react, Mrs. Tan leaned in and kissed him gently on the lips. It was just a soft press of skin. Ryan's eyes opened wide. He saw her eyes curl with her smile as her kiss went from his lips to the corner of his mouth and then his cheek. He could feel his heart rate increasing exponentially each time her silky warm lips touch his skin. He felt her hand run along the other side of his face and then her thumb ran across his lips. She wiped dark smudges of lipstick from his cheek then ran a hand through his sandy blonde hair.\n\n\"That was a thank you for caring for my daughter.\"\n\n\"Mom?\" Miranda's voice carried into the bathroom causing them both to move away from each other. Mrs. Tan was rearranging the first-aid kit when Miranda appeared in the doorway. Her face turned to surprise when she saw Ryan sitting on the bench seat. \"Ryan? What are you doing here?\"\n\n\"He got scratched up and I was putting him back together.\" She said offhandedly. \"I need to talk to you about something.\" She turned to look at Ryan. \"Where's the recorder?\"\n\n\"On the couch.\" \n\n\"All right. Come on downstairs.\" She motioned for Ryan to follow her out of the bathroom. Miranda had turned and disappeared. Emily stopped in the doorway and spoke in a low voice when Ryan got close. \"You should adjust so it's not so obvious.\"\n\nRyan groaned as he tried to hide his erection. He leveled a tiny exasperated glare at the soft laughter coming from Mrs. Tan. Adjusting as best he could, he followed her downstairs. Her head turned a few times to catch him watching her ass as she walked. He was surprised to see a slight blush creeping up her cheeks. When they got to the front sitting room, Miranda was staring at them both with her arms folded around her thin body.\n\n\"I should leave.\" Ryan blurted out as Mrs. Tan reached for the recorder.\n\n\"No. You should be here.\"\n\nRyan shook his head. \"She'll hate me. I don't...I can't see her like this.\" He spun on his heals and disappeared before anyone could react. \n\nThree hours later, Ryan was absentmindedly playing video games between cleaning an already clean room when his cell phone chimed. Looking at it, he read the words, \"Please come over.\" \n\nFive minutes later he was raising his hand to knock when the door opened. Mrs. Tan smiled at him and waved him in. \"I have to go shopping and run some errands. I don't want her to be alone. She's upstairs in her room.\"\n\n\"She okay?\"\n\nShe nodded. \"She will be. Go on up, she's expecting you.\"\n\n\"To her room?\"\n\n\"Yes, Mr. Walker. Talk to her and listen to her. I'll bring home pizza. You can stay for dinner. Just make sure you're both virgins when I get back.\"\n\nHer lips curled as she poked fun at him. With that, she turned and left him at the front door slipping out of his coat and shoes. His feet seemed to get heavier with each step up the stairs. The image of the little neighbor girl, who cried on the bus the first day of kindergarten until he'd sat next to her and held her hand, flashed in his mind. The very next day, he was waiting on her doorstep and they walked hand in hand to the bus. Her eyes had filled with tears, but had remained silent. She'd simply rested her head on his shoulder and clung to his hand. He'd always hated to see her cry. Almost as much as he'd hated to see her kissing Jason. \n\nShe was sitting on her bed with her back against the wall and her knees tucked under her chin when he stopped in her doorway. They looked at each other for a moment. Her eyes were puffy and red. Her normally perfect skin was mottled with streaks of redness. She smiled a sad smile up at him.\n\n\"You okay?\"\n\nShe shook her head slowly at first but it became frantic as the tears started again. He watched as she curled in a ball on the bed facing away from him. Ryan didn't know what to do. Hesitantly, he stepped into the room. With each step he gained momentum and was soon climbing onto the bed and tucking himself in behind her. His arm went around and found her hands clutched under her chin. He froze when she spun around and clung to him with her head pressed to his chest and her arms trying to pull him tighter. \n\n\"Shh.\" Ryan whispered into her hair as his arms encircled her. She rose up to let him slide his arm under her body so she could rest her head on his upper arm. \"I'm sorry, Miranda. I didn't mean to hurt you. Shh. Just stop crying.\"\n\nIt took what seemed an eternity for her tiny hiccup-like sobs to quiet. His hand was running up and down her back as he tried to ignore the growing pain of her head on his arm. When she finally pulled her head up to look at him, he grabbed a pillow and tucked it under them both. After pushing some hair from her face, his thumb began to brush the skin at her temple. She blinked long slow blinks as the tears dried up. Her voice was low and raw when she spoke.\n\n\"He never liked me, did he?\"\n\n\"No.\"\n\n\"Why didn't you tell me?\"\n\n\"I did. I told you when you two first started hanging out that he wasn't your type. You didn't listen. I told you all about him. You didn't care. You started dating him, anyway. You wouldn't have believed me.\"\n\n\"But he's your friend.\"\n\n\"Not anymore. He was planning on hurting you. I'm done with him. So are you.\"\n\n\"Is that why you stopped talking to me? Because of him.\"\n\n\"No. It was because of you. You liked that asshole. There are a ton of guys, but you picked him. I had to watch you make out with him. Had to hear the things he said about you behind your back. It was killing me.\" \n\nMiranda's head came off the pillow to stare at him. It was a searching look trying to find an answer to a question she didn't ask. Her brown eyes danced back and forth as he stared back at her. Unnerved, Ryan rolled to his back and stared up at the ceiling. \n\nAfter another minute, Miranda snuggled closer and rested her head on his chest. Her hand lay over his heart, feeling the heavy beat of it. \"He was your friend. I thought if he was good enough for you, he was good enough for me.\"\n\n\"He's not. He's just always been my friend. I don't have many. I don't have any, now.\"\n\nShe mumbled something Ryan couldn't decipher. Raising his head to look at her, he saw her eyes were shut. Her body seemed to relax into him. She was asleep. Resigned to be a pillow, Ryan laid his head back down and closed his eyes. His hand came up and rested on hers as he listened to her breathing regulate. He could hear the tick tock of a clock on the wall and the whoosh of the heat flowing through the vents. \n\nSometime later he felt fingers running through his hair. His eyes struggled to open. He'd fallen asleep as well. Looking up, he saw Mrs. Tan's smiling face staring down at him. \n\n\"Dinner's ready.\" She patted Miranda's back and then shook her gently when that didn't work. \n\nThe two of them stumbled down to the kitchen to find the pizza waiting for them. They ate in relative silence. Emily watched them both from across the kitchen counter with a curious smile on her face. \n\n\"Why haven't you two ever dated?\" She asked.\n\nRyan looked up with surprise written all over his face. He looked from one to the other and then lowered his head. \"I don't know. I never thought it was an option.\"\n\nMiranda stared at him for a moment without saying a word. \n\n\"You're handsome and she's beautiful. Both of you looked so sweet sleeping together. It seemed natural somehow. You're telling me you two don't have any romantic feeling towards each other?\"\n\n\"Mom.\" Miranda exclaimed in a loud desperate voice. \n\n\"What? You think he's cute, don't you?\"\n\nMiranda eyes bulged as she tried to silently shut her mother up with a look. Ryan was staring at her out of the corner of his eye. He was still looking at her when Mrs. Tan spoke again.\n\n\"She's beautiful. Isn't she, Ryan?\"\n\nMiranda's head turned to see his answer. The two of them stared at each other. Neither one of them sure what to do or say. Ryan lowered his head and almost imperceptibly nodded. \n\n\"Have you two ever kissed?\"\n\n\"Mom!\" Miranda stood up so quickly the stool tipped over and crashed to the ground. She was out of the kitchen and her feet stomping up the stairs in an instant. They both heard her bedroom door slam shut.\n\n\"Have you?\" Mrs. Tan was staring at Ryan.\n\n\"No. Not really. A few pecks when we were really little. Nothing that really meant anything.\"\n\nShe came around the counter and sat down on the stool Ryan picked back up from the floor. Patting the stool next to her, Ryan sat back down and took a drink of soda. Her fingers ran through his hair again as she stared at him with a curious little smile on her face. \n\n\"I made a decision today. You're an actual good boy. A good man.\" She corrected. \"You're both technically adults and both virgins. I want you to be her first.\"\n\n\"What?\" Ryan choked on a bit of pizza. Spitting it onto the counter. It brought a giggle out of her. \n\n\"You are skittish, aren't you. I don't know many mothers who would actually give a boy permission to have sex with their daughter. I figured you'd already be slamming her bedroom door by now.\"\n\n\"You want me to just go up there and crawl into bed with her?\"\n\n\"No.\" She was still giggling as she shook her head. \"Not like that. I want you to treat her right. Respect her. She was planning to lose her virginity to that monster on Valentines Day. Thank God that didn't happen. I want you to date her. When it's right and you both want it, it'll happen.\"\n\nRyan exhaled a long heavy breath. His eyes looked up to the ceiling as if he was trying to see into her room. He'd never thought of her like that. She'd always just been the girl next door. \"I don't know how to be someone's first. I'd be horrible. She deserves someone better than me.\"\n\n\"Wow. Are you really passing up sex with my daughter?\" Her smile grew until she was laughing loudly. \"How do you know if you don't try? You can't be that bad. I didn't really give you a chance to kiss me back, but I assume you've at least kissed a girl before.\"\n\n\"I have.\" Ryan said defensively. \"I've made out at parties with a few girls who attacked me.\"\n\n\"Never you? You've never initiated at all? You're that shy?\"\n\nRyan shrugged. \"I don't know if it's shyness. I just don't know how to start things. Girls are a bit tough to read sometimes. The idea of having my balls crushed is a pretty good deterrent. I have no idea what Miranda thinks of me.\"\n\n\"She likes you. I know she trusts you. If you two would just talk honestly about things, you might figure it out all by yourselves. Are you at least a good kisser?\"\n\n\"How should I know? I don't kiss myself.\"\n\nMrs. Tan buried her face in her hands and snickered. \"Good point.\" When her head came back up, she saw him with his arms folded and glaring at her. \"Sorry. I just forget how teenagers are so clueless when they aren't trying to pretend they're experts at everything. Miranda's the same way. I think maybe everyone is. I certainly was at your age.\"",
        "\"Can I go now?\" \n\n\"No.\" She turned towards him and pulled her stool closer. \"Kiss me.\"\n\n\"What?\" Ryan's eyes shot open. He hadn't heard her right. \n\n\"I said kiss me. Lean over and kiss me.\" \n\nHer hands found his thighs when he just stared at her dumbstruck. They moved up and down his legs for a moment. Each pass went higher up his leg. Her smile went from humored to curious when the bulge in his pants began to grow. \n\n\"Is that big, little, average?\" \n\nRyan followed her eyes down to his crotch. He'd hoped she wouldn't notice it growing. \"I don't know. At least average to the guys in the locker room.\"\n\n\"That's good. So, that's not why you're shy. Or is it?\"\n\n\"No. It's more of a...\" Ryan lowered his head but her hand lifted his chin again. \n\n\"Don't be embarrassed. I can't help you if you aren't honest with me.\" \n\n\"I don't know how long I'd last. I really don't want to be the guy that goes off when a girl sneezes on me.\"\n\n\"Oh.\" Emily nodded and ran a thumb over his lips. \"That's a rational concern. Guys have been known to do that. Has that happened to you before?\"\n\n\"No.\" At her doubtful look, he narrowed his eyes. \"No. I swear. But that sort of thing gets around quick. I don't need that piling up on me.\"\n\nEmily slid off her stool so she was standing between his legs. Her hands resting on his thighs with her thumbs brushing gently against his inner thigh. She froze when she felt his cock reach down his leg and run into her thumb. \n\n\"You like me touching you. Is it just my touch or is it me?\"\n\n\"Both.\"\n\n\"If you need to adjust it, go ahead.\"\n\nAs quickly as he could, he reached into his jeans and pulled at his cock so it was pointing up. He let out an audible sigh at the relief. Ryan watched her reach out and take his glass and take a sip before offering it to him. \n\n\"In case you're a little dry.\" She offered. Her eyes glinted when she said it.\n\nRyan took a sip and then a larger sip to quench his Sahara-like mouth. Placing the glass back down, he looked back at Mrs. Tan. She was dangerously close. Her perfume invaded his senses and her thumbs were barely in inch from his balls. \n\n\"Mrs. Tan? Why are you doing this?\"\n\n\"I think you can call me Emily.\" Her hands came up to rest her palms on his cheeks as she toyed with his lips with her thumbs. \"You obviously need practice and confidence. And I've been a little out of action since my husband ran out on us. The guys I've dated over the years were a bit too sketchy to bring home to Miranda. I'm not sure how she'd take to a man in my bed. But this morning was nice. I liked you noticing me. Can I ask what you were thinking about when you were staring at my panties?\"\n\n\"I was trying to avoid staring at your breasts. Then I was staring at the panties and wondering about how you looked in them and how you looked taking them off.\"\n\n\"And you liked the imagery.\" She leaned in and kissed the corner of his mouth before letting her hand return to his thighs. Her thumb traced up the shaft of his cock, causing his entire body to jerk. \"Did you cum?\"\n\n\"No. You surprised me.\"\n\n\"Are you close to cumming?\" Her thumb continued to run up and down the shaft in a lazy manner. \n\n\"No. I'm okay.\" Ryan gave her a nervous smile as he tried to control his breathing. This couldn't be happening to him. Wow, her thumb was amazing.\n\n\"Good. Now, kiss me. Just lick your lips to get them moist and kiss me as gently as you can.\"\n\nHe kept his eyes open as he aimed for her lips. She had a soft smile on her lips when his brushed against hers. They were soft and warm and perfect. Her free hand came up and curled around his neck to hold him close. Ryan took the hint that she wanted to continue kissing. With just the tip of his tongue, he lightly grazed the crease her lips made as she puckered. It brought out a moan of approval. \n\nRyan deepened the kiss as he slowly got used to the idea of kissing his older neighbor. He slid his palms down his legs to wipe the layer of sweat he'd acquired. Imitating what she'd done, his hand moved up and down her legs with his fingers curling around to graze the back of her legs. Her grunt caused him to try to pull back from her.\n\n\"You don't have to stop. I liked that.\" She spread her feet a little. \"Slide your hands up until you can't go any further. Then curl your fingers and gently scratch my inner thighs.\"\n\nRyan was staring into her eyes as he did it. He watched, as her pupils seemed to grow larger. She let out a shuddering breath when his hands couldn't go any further and began to tease her. Emily let out a tiny gasp and then pulled his face closer as her lips crashed against him. Her tongue was hot and demanding as she explored his mouth. It took her several minutes before her tongue lost its ferocity and gentled. \n\nLittle by little she coaxed Ryan's tongue into her mouth. Ryan was warm all over. She was by far the best kisser he'd ever experienced. Her tongue twisted and curled around his and then was held still. It took a few more minutes to figure out she wanted him to imitate her actions. Slowly but surely, he grew in confidence until they were simply making out without any effort. Breathless, she pulled back and wiped her lips.\n\n\"Okay. You kiss just fine. And your fingers are driving me crazy.\" \n\nShe pushed back and looked around to see if Miranda was around. Taking his hand, she led him through the house and into a study she used as an office. Closing the door, she turned the lock and headed for a small loveseat. Grabbing a pillow she tossed it on the floor and looked up at him. She was at least a full head shorter than his six feet two inches. \n\n\"Have you ever had a blowjob?\"\n\n\"No.\" Ryan's head went back and forth slowly and then his eyes dropped to look at the pillow on the floor near his feet. The light bulb went off. Mrs. Tan was going to blow him. \n\n\"I can't let you go up to talk to Miranda with that thing.\" She ran a hand across his bulge again. \"She might not be safe.\"\n\n\"I would never hurt her, Mrs. Tan.\"\n\n\"I know. It was a bit of a joke, honey. Would you like me to give you head?\"\n\n\"You don't have to. I...\"\n\n\"Ryan. Just say yes.\" She rolled her eyes at him. \"You and I are going to make a deal. I'm going to help relieve the pressure so you can go upstairs and talk to Miranda. The deal is you don't come back down unless you kiss her. Understand?\"\n\nHe had to clear his throat before he could speak. \"Not really.\"\n\n\"I'm going to have to teach you everything, aren't' I?\" She said as if she was talking to herself. She let out a sigh and then reached out and undid his jeans. \n\nRyan's pants and boxer briefs were around his ankles in an instant. She pushed him back until he slumped onto the sofa. Reaching down, she pulled his pants off. With the pillow positioned between his legs, she knelt and pushed up his shirt. He shivered when her nails traced delicate lines up his legs and grazed his balls. \n\n\"Do you want me to suck your dick, Ryan?\" \n\nHer eyes were large and as dark as he'd ever seen them. All he could do was nod. \n\n\"Say the words. I want you to tell me what you want me to do. Today's lesson is to be more assertive with women.\" \n\nRyan closed his eyes. \"Would you please suck my dick.\"\n\n\"Is that a question?\" Her voice was teasing.\n\n\"Please suck it, Mrs. Tan.\"\n\n\"Emily. I appreciate the manners. Your Mom certainly taught you those, but my name is Emily.\"\n\n\"Yes, Ma'am.\" Ryan let out a tiny growl. \"I'd love it if you'd suck my dick, Emily.\"\n\n\"Wonderful, Ryan.\" \n\nHer head lowered and began to kiss and lick his inner thighs. He sucked in his already flat stomach when her fingernails slid under his shirt to be dragged down to his body. When her tongue licked up the underside of his cock, his hips twitched. \n\n\"Take off your shirt, Honey. I want to see your body.\"\n\nAs quick as he could, he pulled off his shirt and dropped it on the cushion next to him. He was surprised when he wasn't embarrassed. Her nails were sending tiny spasms through him. \n\n\"I see all your running as kept you thin. You're starting track soon, aren't you?\"\n\n\"Yes. I'm already in the weight room. We start up in a few weeks.\" \n\n\"You have a nice cock, Ryan.\" Her slim delicate hand wrapped around it and stroked up its entire length. \"There's no reason to ever worry about it. It's plenty big.\"\n\n\"Thanks. I guess you can do anything you want with it.\" He let a timid half smile appear on his face.\n\n\"Can I?\" Emily chuckled and then turned serious. She was quiet for a moment as if deep in thought. Her hands were still moving. Toying with him. \"All right, Ryan. We're making a new deal. You're going to lose your virginity to me, if you take Miranda's from her.\"\n\n\"What?\" \n\n\"It's simple. I'll teach you what to do with a woman. How to be gentle and patient and caring. In turn, you'll be Miranda's first.\"\n\n\"Do I get to vote on this?\" \n\n\"You like her. You think she's beautiful. You're a guy.\" She waggled his cock back and forth. \"Obviously, you're heterosexual. I can't think of a guy who would care about her more and not push her faster than she is willing to go. As long as you're honest with her, she'll be fine and everything will work out. I shouldn't have to say this, but our little agreement is between you and I. First rule is to never kiss and tell. It's disrespectful. Not even Miranda can know about this.\"\n\n\"Okay.\"\n\n\"Is that an okay to the deal?\"\n\n\"Yes. I swear I'll treat her right. I won't ever hurt her.\"\n\n\"Good. Next lesson is that women like to be complimented. If you like what I'm doing say so. Groans and sighs are nice to hear. Vulgarities aren't. Treat us like we're ladies unless we tell you not to. And always warn us when you're about to cum during a blowjob. I swallow because I don't want the mess, but I need some warning.\"\n\nRyan nodded and then stared as her head lowered and her mouth surrounded his cock. His ass cheeks clenched as the silky wet and warm pressure slid down his shaft. He groaned loudly and smiled up at the ceiling. Lowering his head, he found Mrs. Tan watching him as she bobbed up and down slowly. He gave her a small appreciative smile as he bit his lower lip and nodded.\n\n\"That's amazing.\" He breathed and then closed his eyes tight when her cheeks sucked in to add more pressure. \"Ahh. Wow, Mrs. Tan, I love that.\"\n\nHe felt her soft feminine chuckle reverberate through him. It sent sparks up his spine. She kept with a slow methodical rhythm. Her tongue slid up the under side and curled around the tip. Ryan couldn't concentrate. The velvet warmth of her lips and the tiny sucking motions were driving him crazy. He didn't really know what to do with his hands. At first they were gripping the sofa, but eventually he was brave enough to reach down and run his hand through her silky black hair. Letting it slide under his touch as his thumb brushed against her forehead. \n\nEmily lifted her head to look up at him. Looking at the door, she bit her lip and shook her head.\n\n\"What?\" Ryan leaned forward. His hand moved down to the back of her neck. \n\n\"It's nothing. It's been awhile. I'm...\" She smiled, but a slight blush appeared. \"You've turned me on. I thought I was doing you the favor. All I can think about is how you'd feel inside me.\"\n\n\"Really?\"\n\n\"Yes. Girls like sex to. You've ruined my panties.\"\n\n\"I'll buy you new ones if you'd like.\" \n\nShe had to cover her mouth to stop her laughter from being too loud. \"You're gonna have to shut up, Ryan. Your sweetness is killing me.\"\n\n\"I thought women liked jerks.\"\n\n\"The dumb ones do. It takes years before they realized guys like you are the prize.\" \n\nShe rose up and kissed him. Her hands gripped his hair as his hand found her waist and pulled her closer. She had to straddle him as the kiss deepened. Between kisses, she whispered into his mouth. \"Keep your hands moving. Just gentle caresses with your fingertips and nails. Squeezing my ass works too.\"\n\nRyan let his fingers wander up and down her back for awhile. She sighed when they tickled along her side. He pulled a groan out of her when he flexed his fingers and gentle massaged her ass. Her fingers yanked at his hair when he reached between her legs from behind and rubbed. His eyes shot open to see hers wide and hungry. She nodded and then began flexing her hips into his hand.\n\nPushing away from him, she rose up on her knees and tore at the buttons of her jeans. Ryan was frozen and wide-eyed. He watched as she frantically pulled at her blouse until it was off and drifting down to earth. Her bra fell next. Standing, she pushed down her pants and wiggled out of them. Before him, he saw the curved body of a mature woman. Her breasts hung nicely, with dark, almost black areolas and nipples the size of his pinky finger. \n\nWhen she straddled him again, he couldn't help himself from reaching out and taking them both in his hands. They fit perfectly when he curled his fingers slightly. He'd felt up two girls when they pressed his hand to them. Both times the girls were fully clothed. The heat and smoothness was mesmerizing. His tongue came out to wet his lips as Emily leaned in until his nose was between her breasts. \n\n\"Just be slow and gentle, Honey. You can kiss and suck and massage them. I know it looks like a bullseye, but take your time getting to the nipple.\" \n\nHis tongue came out and licked the inside curve of each breast while his hands started to squeeze and relax. It brought a long drawn out moan from her. He could feel her body pressing tightly to him. Almost smothering him. He was running his cheek across her nipple when he finally realized she was gyrating to the rhythm he'd set with his hands. \n\nLooking up at her, he saw her head was down and her eyes closed. One of her hands was still gripping his hair, but the other had disappeared. Curious, he traced down her arm to find it behind her back with her hand between her legs. When his fingers got to her wrist, she opened her eyes and saw him staring up at her.\n\n\"Why'd you stop?\" \n\n\"I was curious what you were doing.\" \n\n\"Fingering myself. Would you like to feel how wet you've made me?\"\n\n\"Yes.\"\n\nEmily pushed back and sat down beside him with her legs spread wide. She took his hand and guided it between her legs. He could feel the heat radiating off of her before his hand even came in contact with her pussy. The dark V above the start of her labia was all the hair she had. The lips were spread and the wetness was obvious. With just a fingertip, he traced around her labia.\n\n\"I assume you've seen one of these on the internet. You know what the clitoris is, right?\"\n\n\"Yea.\"\n\n\"It's not a bullseye either. Take your time down here too. Start with feathery touches at first. The outer lips are less sensitive than the inner. But you can kiss and lick and nibble with your lips all you want. Teeth aren't allowed. Not with me, at least.\"\n\n\"You want me to go down on you?\"\n\n\"Would you like to?\"\n\nRyan swallowed hard. He wasn't sure what he was supposed to say or do. With a quick shrug, he stood and pulled the pillow between her legs and knelt. He was between a woman's legs. A beautiful exotic woman who seemed to be enjoying the things he was doing to her. The way she was sitting caused a slight roll to appear around her waist. It was non existent when she stood. Ryan realized how truly beautiful she was. \n\nHis fingers ran up her legs and back down. He could smell her. It was a rich pungent scent. Jason had talked about it a lot. He liked it for some reason. Lowering his head, he kissed her inner thigh about three inches from the union of her legs. His lips found a bit of dampness. Licking his lips, he tasted what he'd smelled. It had a slight bite to it, but still tasted good to him. Ryan dropped his head and licked up her thigh and right up between her lips in one slow deliberate motion. It brought Emily's ass off the couch as she moaned.\n\n\"Oh, Ryan. Just like that. Lick me clean. Please, Honey. Lick me nice and slow.\"\n\nRyan's head rolled as he licked up one thigh and then the other. He had to move with Mrs. Tan's hips as she rocked. Her hand would occasionally run through his hair and then move to play with her breasts. Tentatively, he probed with his tongue between the soft folds of her pussy. The scent of her was everywhere. When he cleared his throat, he hips flexed and her hand clamped down on the back of his head and pressed him tightly to her. Her legs came up and locked behind his back.\n\n\"Growl really low and use your tongue like you're fucking me, baby.\" \n\nLetting out a deep-throated growl, he felt her legs tighten around him and her hand press down harder. His tongue darted out. A few sharp probes and Emily pushed him further down until his tongue disappeared inside of her. He could help but chuckle at his own stupidity. Soon, his tongue was darting in and out with the occasional circle around the entrance to her vagina. \n\nEmily's legs tightened and then Ryan noticed the back of her hand was brushing back and forth right above his nose. She was whimpering softly. As close as he was to her hand, all he saw was a blur as she rubbed faster and faster until her entire body straightened. He had to grip her ass in his hands to stop from toppling over. \n\nShe let out a shuddering long ended, \"Shit.\" And then collapsed back to the sofa. \n\nHer feet slowly slid to the floor with his help until she was lying stretched out and smiling up at him with a dazed expression. His eyes went from her smile to her heaving breasts. Reaching out, he let his fingers work through the wet patch of pure black hair between her legs. \n\n\"This really isn't the way you should lose your virginity, but you can if you want. Just slide it in nice and slow.\" \n\nEmily spread her legs a bit further and pushed her lips apart with her fingers. Ryan saw a bit of semi-clear liquid sliding down. Inching forward on his knees, he pushed down his cock and caught what he guessed was her cum on the tip of his dick. He groaned from the heat his dick found. Pushing down, he aimed the tip at her entrance and leaned forward. \n\nHe groaned even louder when he was greeted by what he felt. It felt like hot silk and velvet mixed with liquid. Her pussy gripped him tightly as he forced it further in. He watched as more and more of his cock disappeared into his neighbor. When he was fully impaled inside her, he looked up and saw Mrs. Tan's strained face. Her teeth were clenched.\n\n\"Am I hurting you?\"\n\n\"No, baby. You have a lovely cock. It's just a really nice fit.\" She nodded and smiled at him. Emily lifted her legs off the ground. \"Grip my legs under the knees and start moving in and out. Nice and slow until you work up to a nice smooth rhythm. No need to warn me when you cum. Just keep pumping into me until you're done.\"\n\n\"You sure?\"\n\n\"I'm sure.\"\n\nWith his hands holding under her knees, he began sliding in and out with long slow strokes. His cock glistened each time it appeared. He noticed Mrs. Tan's knuckles were white as she gripped the cushion. She let out tiny almost inaudible grunts each time he pushed into as far as he could. His orgasm was already building. Ryan slowed down to try and prolong the experience. With his eyes closed, he tried to forget the beautiful woman under him. The sensations churning in his belly caused him to thrust faster. When he opened his eyes, he saw Mrs. Tan's fingers rubbing once more across her clit. The other hand was pinching and pulling at her nipples. \n\nHis hips faulted at the sight of her face filled with pleasure. She actually loved it. Emily broke into a smile when she saw him looking at her. Scooting down a bit further, she lifted her legs until they were resting on his chest with her feet on either side of his head.\n\n\"You close?\" She asked through heavy breaths.\n\n\"I'm trying not to be, but yea. Really close.\"\n\n\"It's okay. Go a little harder and faster. If you can, just keep going until you're too soft or I cum. I'm getting close too.\"",
        "Ryan increased his tempo until he could feel his balls slapping against her ass. Her grunts got louder with each thrust. He could feel the taunt muscles of her legs as his hand slid down to grip her better. Gritting his teeth, he tried to hold back the surge already beginning. It rocketed down the shaft of his cock and began shooting deep into her. He lost control of his hips as his entire body tightened up. As the last jet of semen filled her, he got control of his body again. He picked up the where he left off, his cock forcefully slamming into her. \n\nA minute after he'd cum, she did. Letting out and deep and loud guttural moan while pulling at her nipple. He watched her breast stretch upwards. Her hips seem to rise with them and then she began to shake. He felt his cock being gripped tightly and then a new level of wet heat wrapped around it. When the undulating twitches subsided, he pulled back and slid out of her. A bit of his semen followed his cock out. \n\nReaching over, he grabbed his underwear and caught it before it dropped on the sofa. He was patting gently at her pussy when her hand tussled his hear. Looking up, she was smiling at him. Her face was flush. In fact, her entire body seemed to be. His smile back at her was a bit shy. \n\nLeaning closer, she kissed him. Her tongue was slow and lazy as it toyed with his. \"You were absolutely wonderful, Ryan.\"\n\n\"I think it was all you. I should have told you earlier how beautiful you are. It was kind of hard to concentrate. You were amazing.\"\n\nEmily tugged at her lower lip as she smiled at his compliment. She wrapped her arms around his neck and pulled him tight. Her hand was petting the back of his head and her lips were kissing his ear. \n\n\"Thank you, Ryan. I didn't realize how much I need that. I'm sorry we didn't do this the right way. You're first time shouldn't have been like this. We'll do better tomorrow.\"\n\n\"Tomorrow?\"\n\n\"Uh-huh. Miranda has to leave at ten. She won't be back until eight o'clock. You're going to spend the day in my bed unless you have other plans.\"\n\n\"No plans.\" Ryan said quickly. \n\nHer body shook with quiet laugher. She stilled and gripped him tighter for a moment with her head resting on his shoulder. \n\n\"We need to get dressed, honey.\" \n\nRyan slid his jeans and shirt on while never letting his eyes leave Mrs. Tan. She noticed and made sure to move slowly, a smile permanently fixed to her face. When she was dressed, she dabbed at the cushion with his underwear and shook her head. \n\n\"Hopefully it won't stain.\" She turned and gave him a playful look. \"Do we have a deal? You and Miranda?\"\n\n\"Yes, of course. Was I good enough for her?\"\n\n\"I think you'd figure it out on your own, but luckily for both of us, you don't have to. Tomorrow we'll work through how to let a girl enjoy her first time. A woman has to be either really turned on or really comfortable with the man to have an orgasm. Our brains get in the way sometimes. She might not cum as easily as I did. I don't know why this was so exciting for me. I guess we'll find out if it was a fluke, tomorrow. Now, I need you to go home and take a shower as soon as you get there.\"\n\n\"Why?\"\n\n\"Because Miranda is going to spend the night with you. You're Mom is still working nights, right?\" \n\n\"Yea. Seven to two. I only see her a little bit after school. She's got Tuesdays and Wednesdays off.\"\n\nOkay. That'll work fine. There'll be no sex tonight. I want you two to get used to the idea. You're going to tell her how beautiful you think she is and you're going to kiss her. Hopefully, quite a bit.\"\n\n\"How do you know she'll want me?\"\n\n\"Because I know my daughter. And I saw how she looked at you at dinner. She seems to be desperate to lose her virginity. If she was going to just throw it away on a prick like Jason, she's beyond being talked down. While you take your shower and wash the smell of me off of you, I'll talk to her and tell her it's okay. We'll be over in about a half-hour. Now, get lost.\" \n\nRyan grabbed the underwear she held up to him and leaned down to kiss her when she pointed at her lips. She slapped his ass lightly as he was walking away. When her got home, he jumped in the shower and washed up as fast as he could. He even shaved. His beard was more like a few hairs over his lip and his chin. It looked terrible whenever he grew it out to see if it had gotten any better. He was still in shock when he wiped his face clean of shaving cream.\n\nHe had lost his virginity. And to a beautiful woman who actually wanted to have sex with him again. Maybe she did. Maybe it was just to help her daughter. He'd even help her with two orgasms. Her fingers seemed to have done a lot of the work. The image of her tugging at her nipples and rubbing her clit caused his cock to rise. He smiled broadly at his reflection. He was going to spend all day tomorrow having sex. After taking another turn around his room to make sure everything was clean, he was sitting on the couch in a pair of soccer shorts and a T-shirt when the doorbell rang. Ryan opened the door to find Mrs. Tan standing beside her daughter. Miranda seemed smaller than normal. Her body was tucked into an insecure ball while she held a small backpack in front of her. Mrs. Tan had to nudge her forward. She didn't even look up as she passed Ryan. After stripping out of her jacket and boots, she stood next to the wall with her head down. She was wearing a sweatshirt and a pair of pink pajama bottoms. \n\nMrs. Tan's voice caused him to turn and look at her. \"Remember, no sex. You two are going to do this right. Romance is what I want from both of you. You two are dating now. You're curfew is gone as long as you're with Ryan and he promises to keep you safe.\"\n\n\"Yes, ma'am.\"\n\nWith that, Mrs. Tan turned and walked back down the path leading away from the house. Ryan watched her for a bit and the closed the door. Miranda was still standing with her head down. \n\n\"I think your Mom's lost it.\"\n\n\"It didn't stop you from having sex with her.\" Her head came up just enough for her eyes to find him from under her lashes.\n\nRyan's mouth dropped open. \"She told you?\"\n\n\"No. She denied it at first. I came down stairs when I thought you'd left. I heard you in the office.\"\n\n\"I'm sorry. I...she was kissing me and it kind of got out of hand. Do you hate me?\"\n\n\"I don't know. She told me you were afraid to have sex because you wanted to be good at it. That she was practice for me. In a twisted way, that's sweet.\"\n\nRyan stepped closer and took her backpack. She didn't flinch or slap him when he reached down and took her hand. Her palm was sweaty. He couldn't blame her, so was his. She followed along as he led her through the house to his bedroom. \n\n\"I didn't know you were a virgin.\" She said as he dropped her backpack on a chair. She sat down on the edge of his bed with her hands tucked underneath her. \"I heard you'd hooked up with Becky and Julie a few times at parties.\"\n\n\"They just made out with me. I guess I'm their default pair of lips when they're drunk. It never went very far. When they're sober, they ignore me.\"\n\n\"I've thought about you. About you being my first. I gave up on you.\" She smiled a shy smile up at him as he stood looking at her. \"I didn't think you thought of me like that.\"\n\n\"I really didn't. You're a friend. I've always known you. I mean I noticed you. How beautiful you are and everything. It's just. I care about you. I didn't really know how much until I heard Jason talking about you. I never really had time to think of you like that. Romantically, I mean. I'm not really the most proactive guy in the world.\"\n\n\"Mom told me I'd have to tell you what to do.\" She scooted back on the bed until her head was on a pillow. Patting the place next to her, she smiled. He her cheeks darkened. \"Come kiss me.\"\n\nRyan looked at the clock and saw that it was nine thirty. \"I'll lock up first.\" \n\nHe turned and did a quick tour of the house and went to the bathroom. When he returned, she was under the covers and her sweatshirt and pajama bottoms were on the floor. All he could see was the soft curved features of her face. Her eyes had the same almond shape as her mother. Her skin was a slightly more exotic golden brown. His heart was racing when he turned off the lights and slipped out of his shirt.\n\nWhen he was under the covers, he slowly scooched closer until he hand ran into her arm. She lay perfectly still. Her arms at her side, her face staring up at the ceiling. The only movement he could detect was her chest as it rose and fell. His fingers moved up her arm and then worked up her neck to her chin. He couldn't see too well, yet. All he could see was her darkened outline.\n\n\"Are you going to help me at all?\"\n\n\"No. Your best friend is a pig and you just had sex with my Mom. I'm not going to help you at all.\"\n\n\"He's not a friend anymore. I guess that makes you my best friend.\"\n\n\"Then kiss your best friend, idiot.\"\n\nHer tone was playfully teasing. It allowed Ryan to relax enough to slide closer until he was pressed to her side. Her closest arm came up and slid under him as he leaned on an elbow. He felt her fingers tickle up his back. The sensation sent a shiver through him all the way to his cock. As gentle as he could, his fingers explored her face. Running up her jaw line and then over her full lips. Leaning down, he licked his lips right before he kissed her. \n\nMiranda's lips formed to his. They were fuller than her mothers were. He felt them quiver and then slowly relax as he placed tiny innocent kisses across them. When his tongue came out to tease, her mouth opened for him. He felt her pull against him and realized her other hand had found his back. Lifting his knee, he slid it over her leg and found her legs opening wider.\n\n\"It's okay. I want you on top of me.\" \n\nRyan obeyed instantly, his cock nestling perfectly against her. He kept most of his weight off of her as their bodies began to grind against one another. Her tongue slid between his lips. Moving with more confidence and hunger. For the next forty-five minutes only sighs and the soft sounds of two people kissing could be heard. They went from soft and slow to frenzied before they settled back down to a tender cadence.\n\nHe had his fingers tangled in her curls when he pulled his lips away. \"How far did you let Jason go?\"\n\nIt took her awhile to speak. When she did, it sounded like she was ashamed. \"We did this a lot. He felt me up a few times, until I'd stop him. He was always a bit rough and demanding. Always trying to guilt me into doing more and more.\"\n\n\"You never fell for his lines?\"\n\n\"No. I am a four-point student. I really did know what he was, I just thought...I don't really know what I thought. He wanted me. I guess I thought that was enough.\"\n\n\"Well, I want you. But I won't pressure you. Would it be okay if we went out on a date?\"\n\n\"We don't have to.\"\n\n\"Yes we do. I'm supposed to be all romantic and seductive.\"\n\nMiranda laughed up at him. \"Good luck with that, Romeo.\"\n\n\"Shut up. It's not my fault I'm a moron. I'm a guy.\"\n\n\"I know you're a guy.\" She wiggled her hips into his erection. \"I can feel you. Can I see it?\"\n\nRyan let out a nervous laugh. \"It does sort of belong to you.\" \n\nSliding out of bed, Ryan walked over to his desk and turned on a small lamp. It was enough to light the room in a dim yellow glow. Miranda was propped up on her elbows staring at him. Her lips were pulled into her mouth as she tried to suppress a smile. With only a slight hesitation, Ryan pushed down his shorts and stepped out of them. He watched her head tip sideways and her eyes twinkle as she blushed. Ryan realized she was more embarrassed than he was. It gave him a bit of confidence.\n\nShe swallowed hard when he walked back to the bed and stood beside it. \"Can I see you?\"\n\nMiranda let out a ragged breath and nodded. Pulling back the covers, she crawled towards him and then raised up on her knees. They were roughly the same height now. His eyes found two erect nipples poking out from her pink tank top. She had a similar colored pair of panties. Her hands went straight up in the air. After about ten seconds of staring at her, her rolled his eyes. He was an idiot. Reaching out, he pulled up the thin tank top and tossed let it fall to the floor. Her breasts were larger than her mothers and turned up and out slightly. The areolas were a nice dark brown. \n\n\"Do you like them?\"\n\n\"Yes.\" Ryan nodded and looked up to see her eyes exploring his face. \"They're perfect. You're perfect.\"\n\n\"Can I leave my panties on? I'm not...I want you to see me, but I'm...\"\n\n\"It's okay.\" Ryan stopped her. \n\nHe walked to the desk and turned out the light. She hadn't moved when he returned, so he reached out and wrapped his arms around her. Her head fell to his shoulder as she returned the hug. He could feel her breasts press against him. Her nipples taught. With just a bit of pressure, his nails moved up and down her back. He smiled when she sighed and raised her head to kiss him.\n\nThey moved back under the covers to continue for another hour as his hands played across her skin. She didn't stop his hand when he explored one breast and then the other. \n\n\"Are you wet?\" He whispered into her neck. The answer was obvious to him. Ryan could feel her damp panties pressing against him. Whenever his head dipped below the covers, he nose was filled with the aroma of her arousal.\n\n\"Yes.\"\n\n\"Can I help you? Orgasm, I mean. I want to make you feel good.\"\n\n\"I've never orgasmed in front of a boy.\"\n\n\"Your Mom had me lick her. I don't know if I was very good, but she orgasmed. I could do that if you want.\"\n\n\"You ate out my Mom? Oh, not what I want to picture in my head.\" She said as she let out a huffing laugh into her hands. \n\n\"Sorry. I'll do anything you want, Miranda. I'll even leave if you need me to.\"\n\n\"You mean masturbate? You want me to masturbate in your bed?\"\n\n\"Sure. You'd be the first girl to ever cum in my bed. I'd put a plaque up with your name on it.\" \n\n\"Shut up.\" She pinched him hard enough to make him yelp. \"Are you really serious? You would be okay with it?\"\n\n\"Yes.\" Ryan kissed her shoulder. \n\n\"Roll on your back.\" She instructed as she pushed him off of her and quickly rolled on top of him. Straddling him with her legs. \n\nHe felt her tense up when his bare cock came in contact with her panties. The heat from her made him suck in his breath. She rose up slightly with her hands on either side of his body. Miranda began to grind her pelvis against him. Ryan could feel her lips flattening through the thin fabric. Her hair tickled his chest as she slid up and down his cock. Hot blasts of air spread out across his skin, as her breathing became ragged. She faltered when Ryan reached up and began to caress her back. She resumed grinding into him when his fingers slid over her toned little ass and squeezed. \n\nIt took her three minutes to finally find release. Ryan felt her legs tighten their grip around him as she let out a loud heavy sigh. She slid off of him and rested her head on his chest. \n\n\"Thank you.\" She whispered.\n\n\"I didn't really do anything.\"\n\n\"Yes you did. Just being here and taking so much time kissing me helped. I trust you, Ryan. You're going to be my first.\"\n\n\"You were planning on Valentines Day, weren't you?\"\n\n\"Mom told you?\"\n\n\"Yea.\"\n\n\"I just want to get it behind me. The not knowing what it's like and everything, it's driving me crazy. All my friends have done it. I just thought I needed to do it.\" \n\nShe crawled over him and disappeared with her backpack in her hand. Five minutes later, she was curled up against him. Her phone went off at eight in the morning. They'd barely moved in the night. Content to be a tangle of limbs. Her head came up to show a smile when her thigh brushed against his hard-on. \n\n\"Good morning.\"\n\n\"Morning.\" Ryan squeezed her before closing his eyes and relaxing back into the pillow.\n\n\"I have to go.\" Miranda said as she worked her way out of his arms.\n\n\"Okay.\"\n\n\"Do I need to sneak out?\"\n\n\"No. Mom will be dead to the world. She uses a sleep mask and ear plugs. I have to set off a nuke to get her up sometimes.\" \n\nRyan slipped out of bed and into his shorts. He made a beeline to the bathroom to pee and brush his teeth. When he opened the door, Miranda was dressed and waiting for her turn. He walked her home and was ushered into the house by a smiling Mrs. Tan.\n\n\"Morning you two. Is my daughter's hymen still intact?\"\n\nRyan looked at Miranda in panic as they both blushed. \n\n\"Mom.\" Miranda shot her a glare and shook her head. \"I kept my panties on the whole time. And no, I don't have a hymen. You already know that.\"\n\nMrs. Tan had to stop Ryan as he turned and was heading out the door as quickly as he could. She grabbed hold of him. \"Oh, no. You stay. You're going to help me fix breakfast while Miranda gets ready to leave.\"\n\nA little frightened, Ryan followed along behind Mrs. Tan into the kitchen. He watched her ass wiggle in the tight fitting silk robe. It barely covered it at all and was so sheer her areolas could be seen through the red fabric. She pulled a carton of eggs out of the refrigerator and handed them to him.\n\n\"We're fixing French toast. Want anything else with it?\"\n\n\"No. That's fine. Thank you, Mrs. Tan.\"\n\nShe leveled her gaze on him and wiggled her finger for him to come closer. \"We've had sex, Ryan. You're supposed to call me Emily. Everytime time you call me ma'am or Mrs. Tan, you have to kiss me. Understand?\"\n\n\"Yes, ma'am.\" Ryan smiled and nodded. \"Anything else Mrs. Tan?\"\n\n\"Oh, we're frisky this morning.\" \n\nShe raised up on her tiptoes and wrapped her arms around his neck. Ryan bent down and kissed her. He shouldn't have been surprised by the aggressiveness of her tongue, but was. \n\n\"Pick me up. I won't break.\"\n\nRyan's arms engulfed her and lifted her off the ground. He felt her legs encircle him. Dropping a hand to her ass, he turned and put her on the counter. Her lips never left his as her tongue worked him over and lured his into her mouth. After a minute, she pulled his head away with her fingers in his hair.\n\n\"Good morning, Mr. Walker.\"\n\n\"Good morning, Emily.\"\n\nShe hopped down and started preparing breakfast as Ryan assisted.\n\n\"So, what did you two do last night?\"\n\n\"I thought one of the rules was never kiss and tell. You broke that one, by the way.\"\n\n\"Sorry.\" Emily laughed as she started beating the eggs into a lather. \"Kind of hard to deny it when she listened to the whole thing. I was louder than I thought. Now, I'm her mother and need to know what my baby is doing. Spill it.\"\n\n\"We kissed and talked. Apparently, she wants me to be her first.\"\n\n\"Yea. I already knew that. She was dating Jason to stay close to you. It confused the crap out of her when it made you drift away. What was that about?\"\n\n\"I couldn't stand seeing them together. I know Jason. I don't know. I didn't like what that made her for liking him.\"\n\n\"You mean a crazy teenage girl full of hormones and anxiety. It's par for the course. God knows I choose a few losers in my day. What else did you do?\"\n\nRyan looked over his shoulder to see if Miranda was anywhere around. \"We made out, she asked me to undress, and then she sort of orgasmed.\"\n\n\"Sort of? I'm not sure there's such a thing. She either did or she didn't. I thought I told you no sex.\"\n\n\"We didn't. Her panties stayed on like she said. She got on top and grinded into me until she came.\" He shrugged and gave her an apologetic smile. \"She was wet. Soaking, actually. I offered to leave the room for her to masturbate, but she wanted me to lie under her.\"\n\n\"Did she help you out?\"\n\n\"No. You took care of me. I'm kind of used to walking around hard all the time.\"\n\n\"Teenage boys. Yea, I remember them.\" She patted him on the arm. \"We'll take care of that, later. Did you tell her you loved her?\"",
        "\"What?\n\n\"You didn't.\" She shook her head and started chopping up some strawberries. \"You love her, don't you?\"\n\n\"I don't know. I told her I cared about her. That she was beautiful. I don't know if I love her. How can I do what I did with you and love her? Can I?\"\n\n\"Men.\" She growled. \"You've got to be the stupid creatures on earth.\" She motioned for him to sit on a stool so she could look him in the eye. When she was standing between his legs, she placed a palm against each cheek. \"Honey, I guess this is a screwed up situation for you. She and I talked about it and she excepts what we're doing. I blame that brain of hers. She's a big picture kind of girl. She won't say she loves you either, but she does. I'm not sure if it's the passionate kind of love or just a long lasting love. But it is love. I know that. You two used to be inseparable. Puberty kind of got in the way. Tell her and ask her. When you do, make sure you actually look her in the eye. Honesty and tenderness goes along way, Mr. Walker.\" \n\n\"Yes, ma'am.\" \n\nWith his face held between both of her hands, she kissed him softly. \"You're racking up the kisses, aren't you. I guess we'll have to find a white board to keep a tally.\"\n\nBreakfast was a little noisier than dinner. Mother and daughter chatted while Ryan tried to stay invisible. He wasn't sure what the new dynamic was or where he really fit in to it. Ryan rinsed off the dishes to Mrs. Tan's surprised pleasure and loaded the dishwasher. Miranda came back down stairs and kissed him a lingering goodbye kiss before leaving to spend the day at a volunteer animal shelter and then work on a school project with a classmate.\n\nWhen Mrs. Tan appeared, he was staring at a wall of photographs in the living room. She'd changed in to a simple blouse and skirt. She sat down and smiled at him, but didn't say a word. Her eyes looked at the seat next to her and then back to him. Ryan knew what he was supposed to do, but somehow his brain worked in slow motion. When he finally sat next to her on the couch, she scooted closer and crossed her legs towards him.\n\n\"Hello, Mr. Walker. What would you like to do to me?\"\n\n\"Anything you want.\" He caught the tiny disapproving shake of the head and cleared his throat. \"I want to kiss you.\"\n\n\"Is that it? I'd like you to be specific. In fact, I'll obey you completely.\"\n\n\"Really?\"\n\nHer eyebrow raised slightly. \"Within reason. You aren't some sort of freak are you?\"\n\n\"I don't think so.\"\n\n\"Good. Today's lesson is foreplay and as corny as it sounds, I'm going to teach you to make love to a woman. I've never really liked the phrase, but it can be accurate. I guess it's all just different forms of sex. Some girls really like slow and tender, others really like quick, rough, and dirty. The rest are somewhere in between. Our first time today is anything you want and any position you want. I'll only correct you if you're hurting me or having trouble. Okay?\"\n\n\"Okay. Can I ask you a question first?\"\n\n\"Sure. Anything.\"\n\n\"Are you getting anything out of this? I'm grateful. Extremely grateful, but I don't want to take advantage of you.\"\n\n\"Ryan sweetie, you've got to be the most adorable boy I've ever met. You gave me two orgasms yesterday. That's a pretty rare thing.\" Her hand dropped to his leg and began to tease dangerously close to his already hard cock. \"I might be getting more out of this than you. I'm certainly the one taking advantage. I'm the adult, remember? I want to have sex with you. I woke up this morning with a smile knowing I was going to have sex with you. So just relax and do whatever you want with me. Take charge and just do it.\"\n\nHe sat quietly for a moment as her hand began to caress his cock through his shorts. Standing, he offered her his hand. \"I guess we shouldn't ruin your couch.\"\n\nThey walked up the stairs in silence and into her bedroom. Ryan's heart was well beyond racing. He led her to the side of the bed and turned to look down at her.\n\n\"Lie on the bed.\" He instructed. \n\nHer lip twitched and her eyes narrowed, but she obeyed. She crawled onto the bed face down on her stomach with her hands under her chin. Ryan stared for a moment. He'd meant for her to lie on her back, but her legs were so cute staring up at him. Pulling his shirt off, he teased slowly up her legs with his fingernails as he crawled to her side. Her leg came up under his touch and her face turned towards him. She was smiling a content coy smile. It made him lean over and kissed her cheek. \n\n\"You're mean, Emily.\"\n\n\"A little. I told you to be specific.\"\n\n\"Roll over on your back, Mrs. Tan.\" \n\nShe was chuckling silently as she obeyed. One by one he unbuttoned her blouse. More and more smooth skin appeared. Her bra was non-existent. When he got to the bottom button, he tugged her blouse out of her skirt and opened it wide as his placed a kiss as close to her nipple as he could. He traced the outline of her breasts in a figure eight with his index finger. Then he repeated it with the tip of his nose and then his tongue. She wiggled and sighed under him.\n\n\"Who's being mean now?\"\n\nHe kissed down her stomach and then worked on her skirt until he could slide it down and off. \"Am I doing okay?\"\n\n\"No complaints. I love gentle and slow.\"\n\nHe slid off the bed and pulled off his shorts and then crawled back up to strip her panties off. She raised her ass to help and then made sure her legs were clamped tightly together. \n\n\"Take your blouse off, please.\"\n\nShe sat up and slipped out of it then flopped back down to lie perfectly still. Her smile appeared when she found him glaring down at her playfully. His hand found her breast as his lips met hers. While his tongue moved between her lips, his hand explored down her body. Lightly teasing the skin and then coming back to massage her breasts. He kissed down to her breast and ran his nose over the soft pliable flesh. She smelled like flowers. Maybe lilacs. \"Spread you legs for me.\" He was suckling her nipple when he felt her legs move apart. As he moved across to the other one, he looked up and smiled. \"Thank you for not wearing a bra. I doubt if I could have gotten it off of you without a chainsaw.\"\n\n\"You're welcome. I'll teach you how to take them off later. I thought I was the one going to pleasure you.\"\n\n\"You will. I want to see if I can make you cum without any help. You're going to have to teach me how to rub your clit the way you did yesterday.\"\n\n\"You can use your tongue and you can suck on it once I'm really aroused. Some even use their nose as they're tonguing a girl. It usually doesn't take much once I'm close. Just watch my stomach when it sucks in and stays, I'm minutes away from an orgasm.\"\n\n\"And your nipples? You were tugging at them. I thought you said to be gentle.\"\n\nShe blushed slightly as she raised her head to look at him as he absentmindedly ran his fingers over her body. His tongue was flicking an erect nipple as he looked up at her. \n\n\"I'm a woman. We change our mind. Pinching and tugging on them can send a spark right to my clit. It's like a lightning bolt.\"\n\n\"Oh. Teach me.\"\n\n\"What?\"\n\n\"I want to suck on your clit and play with your nipples. Can you cum if I do that?\"\n\n\"Oh yea. That would do it.\" \n\n\"Good. I guess you can teach me how.\"\n\n\"We're doing better with our communication. I like it. Just take your time down there. When you see my lips spread further apart, you can focus on the opening for a bit and then my clit. Be really gentle at first. Suckle it and flick it with your tongue. Keep your hands moving just like you're doing right now. I'll be cumming soon enough. Okay?\"\n\n\"Remember to tell my how hard. I don't want to hurt you.\"\n\n\"Thank you, Mr. Walker. You can spend a bit more time with my tits, but not too much. They'll get sore after awhile.\" \n\nShe let her head fall back and her knees moved further apart as he went back to work on her nipple. He could feel her body temperature rising. Crawling around until he was between he legs, he slowly worked across her abdomen. His lips found a sensitive spot just under her navel that caused her stomach to roll. Flicking the spot with his tongue brought her hand down to grip his hair.\n\n\"You're learning fast. I have a few places that drive me absolutely wild. Use your nails.\"\n\nTurning his head to watch the effects, he reached up and slowly ran his fingers across the width of her abdomen until he reached the spot. Her mouth flew open as her breath shot from her lungs. With one hand he gently palmed her pussy and started slow circles. The other continued to work across her stomach, hitting the spot every other pass. Emily seemed to be almost hyperventilating. \n\nRyan moved lower and found her lips spread wide and inviting. His tongue came out to find her clitoris. Spreading her lips, he barely surrounded it with his lips and began to suck in further into his mouth.\n\n\"Oh, yes Ryan. Just like that. Suck it faster.\" Her hands reached down and dragged his up to her breasts. \"Just pinch them every time you suck. Use your tongue too.\"\n\nEmily was bucking her hips into him as he followed her instructions. Her moans and coos were growing louder. Reaching out, she gripped the bedspread in both hands. She was arching her back, her body attempting to throw Ryan off it. Ryan tongue was as frantic as her fingers had been yesterday. When he cleared is throat, Mrs. Tan shriek and her body convulsed under him. For the next few seconds her body tightened up and shook before slowly relaxing. \n\nRyan felt a tiny bit of liquid hit his chin. It was warm. Reaching up, he wiped it away and then licked his fingers. He crawled up to lie beside her. Her eyes turned to follow his movements as her breathing slowed. \n\n\"You definitely aren't a fluke. Wow, I didn't know I was into young men.\" She rolled to her side and kissed him. Her tongue darting out to lick the moisture from his chin between kisses. \"Another rule. Always kiss a girl after she gives you oral sex. A guy that doesn't is an ass. It's a pretty good indication he's just using the girl. It hurts us.\"\n\n\"Okay.\" \n\n\"Have you ever tasted your cum?\"\n\nRyan coughed nervously and slowly nodded his head. \"I licked a little bit, once. It didn't really taste like anything. Just weird tasting something coming out of my own body.\"\n\n\"Well, it can't hurt you. You're going to taste some more of it today and get over the weirdness. If you aren't completely comfortable with sex, you'll freak out with a girl and hurt her unnecessarily. I think you've noticed we're sensitive creatures.\" \n\n\"Yea. Unpredictable too.\"\n\nShe gave him another kiss. \"It's your turn. What would you like?\"\n\n\"What ever you'd like to do to me.\" She swatted his chest in disapproval, which caused him to quickly state. \"Your favorite position. I want that.\" \n\n\"Hmm. That I can do.\"\n\nRolling on top of him, she slid down to rub against his cock. Ryan sucked in his breath from the feel of her pussy lips melding to his flesh. Emily rocked her pelvis, coating his cock with her wetness. All Ryan could do was stare up at the woman. \n\n\"My daughter is smaller framed than me. She might have a bit of trouble doing this at first. Hell, I might.\" \n\nPulling up his dick, she rose up and settled herself down. His cock disappearing into her as she slowly exhaled. Ryan heard her grunt and then felt the tightness surround his cock. He couldn't stop his hips from rising up to meet the sensation. It brought out a startled whimper. Her hand went to his hip and pushed him back to the bed. Hers began to rock. Every few rotations, she'd lower herself further until he felt her pubic hair mash into his. Emily was exhaling tiny puffs of air, a bead of sweat rolling down her cheek. \n\n\"Am I hurting you?\" Ryan reached up and pushed her hair from her face to have it fall back as soon as he removed his hand.\n\n\"No, honey.\" She leaned down and kissed him softly. \"I'm a little girl and you're a big boy. And I'm way out of practice. It doesn't hurt at all. It just fills me. It's hard to explain the feeling. It's wonderful. Just try and hold still until I get used to it.\"\n\nRyan nodded as she lowered her head to his chest and began to rock against him. He could feel the hardness of her nipples against his flesh. The wetness surrounding him. Her pussy seemed to be pulling at his cock every time she rocked. Reaching around her, he began to rub up and down her back and sides. Her head finally came up to look down at him. It looked like she was in blissful agony. Her upper lip was coated with sweat as she began to rock more forcefully onto him. \n\n\"Okay.\" She nodded quickly. \"Drive into me. As hard as you can.\"\n\nHis ass came of the bed and ripped the air from her lungs. She was hovering on inches above him, letting him only a quick thrust upwards. The springs of the mattress bounced him faster and faster. With a grunt, he came. The first blast was accompanied by a violent shudder. The next half dozen left his cock to coat her completely until his muscles slowly uncoiled and relaxed. \n\nHe felt her warm breath on his face just before she kissed him. Pushing up, she sunk all the way down on him and began to grind almost painfully into his pelvis. Her nails dug into his chest hard enough to draw blood. Ten little curved indents as her body tensed. The muscles gripping his cock grew tighter and tighter as she worked her hips. Ryan lost count of the minutes. He closed his eyes and let her use him. Slowly but surely, his cock began to grow inside of her. Emily's whimper told him, she'd noticed too. And then she was quivering and shaking on top of him. Her nails digging deeper into his chest muscles and bringing a sharp grunt from him.\n\nShe twitched and jerked for a moment and then slowly sunk down to lick the sweat from his hairless chest. Her head came up with an apologetic face showing. \"I'm sorry. I keep drawing blood.\"\n\n\"I'll live.\"\n\n\"It's going to be hard to explain what happened in the locker room.\" Her tongue came out and began to lick drops of blood. The combination of tastes caused her to groan in pleasure. \n\n\"I'll tell them I lost my virginity to the hottest woman I've ever seen. I just won't tell them who.\"\n\n\"Good boy. I'm going to have to keep you. If you don't mind, that is.\"\n\n\"I don't mind, but you'll have to ask Miranda. I thought this was all for her.\" He said it with a shade of laughter in his voice.\n\nMrs. Tan's head came up as she laughed. Her face a beautiful imaged of relaxed happiness. \"And he jokes. Good boy. Pretty soon you're going to actually enjoy this.\"\n\nRyan finally had to laugh. \"Yea, this is torture, Mrs. Tan.\"\n\nShe rolled off of him and pulled him so they were face to face on their sides. Her hand went down and guided the tip back into her. Their heads were resting on the pillow she'd pulled under them. Ryan snaked his bottom arm under her to get more comfortable while the other found her hip. She was staring at him as she slowly flexed her hips. Her eyes would occasionally close and then pop back open.\n\n\"All right, Mr. Walker. School time. You pass the kiss and hand test. We don't like it when a man gropes us. And you're definitely patient with your needs. If you can always make a girl cum before you get yours, you'll drown in women. I need you to be extremely patient with Miranda. Work up her entire body no matter what she says or asks for. She needs to be soaking wet when you slide inside. She's tinier than me, so it's going to be a tight fit.\"\n\n\"Tighter than you. Oh, crap. I won't last a second in her.\"\n\n\"Yes you will. You're going to double wrap with her. That means two condoms, Mr. Walker. She's on the pill, but I'm not going to let her get knocked up and ruin her future. She's got a scholarship coming and a baby would destroy her dreams. Understand?\"\n\n\"Yes, ma'am.\"\n\n\"I'm spoiling you a bit by not making you wear one, but I can't have children. Miranda's birth took care of that. You'll even last longer with a condom on, but the sensation will be a bit less. Always wear one with a girl, even if she says she's on the pill. Sometimes, a girl lies. And sometimes accidents happen. Not to mention nasty little diseases. Got it?\"\n\n\"Got it.\"\n\nShe slid him out and rolled to her back. \"Now, while you kiss me, let your hand wander across my body. Use your palm and your fingertips and the back of a knuckle. You can alternate between light as a feather and gently firm. They all add up. Making me cum is apparently easy for you, but some women need to be stoked like a furnace. Little touches and kisses are the kindling. Whispers against my skin and ear are too. Even your warm breath can drive a woman crazy. Have you ever fingered a woman?\"\n\n\"No.\"\n\n\"Since I'm already plenty wet, reach down and start playing with me. Avoid the clit for a bit. It can be extremely sensitive right after an orgasm. When you slide your finger in, curl it a bit and rub the wall of my vagina. Work up to two fingers and then work faster. Some women like it like that while other like you to use them like your dick.\"\n\nRyan moved his hand down and caressed her inner thigh. He could feel the slick skin under his touch. Emily was staring up at him with her eyes wide open. His fingers slid over her labia, allowing it to roll and move under the pressure of his fingertips. He continued to tease her until she bit her lip and smiled up at him. When he slid his finger into her, she tensed. He could feel her tighten around it. Curling his finger like she'd said, he began to pull at her gently. She nodded quickly as her eyes closed and her head rolled back. He switched to quick little probes in and out.\n\n\"Which do you like?\"\n\n\"The first.\" She said with her breathing rapidly increasing. \"Put two fingers in and do that.\"\n\nWhile his fingers explored, he leaned down and took her entire areola into his mouth. He felt her legs come off the bed and her knee hit him in the side. His tongue flicked across her nipple and then he pulled at it with his lips. He felt her groan vibrating through her as she fought against his fingers. She was rocking violently. Turning his eyes to look down her body, he saw her stomach pulled tight. He licked his way to her other breast and began to pull and tease it. Her throaty scream erupted as soon as she did. He felt the muscles grip his fingers so tight he pinched his lips clamped down on her breast and brought a second scream from her. Her body was fully stretched out with her toes pointed. He took his fingers out of her as she shivered. The actions sent goosebumps racing across her skin. Laying his head on the pillow, he watched as she came back down to earth.\n\nRyan wandered home at six o'clock. He was unable to remove the smile. Food didn't work, a shower did work, and finishing up some reading for school didn't even work. Mrs. Tan had given him an A minus for the day. She wouldn't tell him what he'd done wrong, but her smile seemed to be a teasing smile. He'd even gotten the green light to go ahead and have sex with Miranda. He expected her to knock on his door that night, but she didn't. He went to school with a smile still on his face. He was halfway through the day before Jason found him in the hallway.\n\n\"Shit.\" Jason's voice caused Ryan to turn and straighten up from his locker. \"The bitch broke up with me.\"\n\n\"Which one?\"\n\n\"Miranda. She said she was having trouble concentrating in class and I was a distraction. That fucking whore.\"\n\n\"I thought she was a virgin.\" Ryan's voice was staining to hide the anger. He noticed a few eyes turn at Jason's loud voice.\n\n\"She's still a whore. I even got blew off by Kristen. I'm going to have to find some easy bitch to suck me off. What are we doing after school?\"\n\n\"I'm lifting weights and running. After that I have to get home and finish an assignment. You're on your own, buddy.\" Ryan slammed his locker and walked away without looking back. ",
        "He went through two more classes to finish out the day. Ryan was walking towards the locker room when he was wrapped up in a hug. Kristen's puffy and red face looked up at him. Miranda was staring at him as she held out his recorder. \n\n\"You played it for her?\"\n\n\"Yea. She needed to know he was planning to rape her.\"\n\nKristen looked up at him. He could see the hurt it had caused to hear what Jason thought of her. \"Thank you.\"\n\n\"It's okay. He's an ass. You actually are pretty.\"\n\n\"No I'm not. Not really.\"\n\n\"Yes you are. And I like your butt. It's hard not to stare at.\"\n\nHer laugh was half-hearted. \"Thanks, Ryan.\" Her arms squeezed him a little tighter before she released him and walked hurriedly into the locker room.\n\n\"Hi.\" He looked at Miranda. Her hair was pulled back in a ponytail, accentuating her rounded cheeks and large eyes. He wanted to kiss her. \n\n\"Hi. How are you?\"\n\n\"Good. I was a little disappointed you didn't show up last night.\"\n\n\"Mom didn't let me. She said she wore you out.\"\n\nRyan blushed and looked around to see if anyone was taking notice of them. \"She's a good teacher. I passed the class. She told me I can have my way with you whenever you want.\"\n\n\"She was humming to herself all night. What exactly did you do to her?\"\n\nRyan shrugged. He felt the heat of embarrassment rising. Talking about have sex with her mother wasn't the most comfortable thing to discuss. \"I don't know what I did. She says it's either from being really turned on or really comfortable with the person. I'm not sure I'm doing anything special.\"\n\n\"She says you are. She says you'll blow me away.\"\n\n\"I hope so. Miranda? Are we dating? I mean...is this just sex or is this more for you?\"\n\n\"I don't know. I haven't really thought that far ahead.\"\n\n\"Yes you have. I know how you think. You probably wrote a paper on the long term outcome of having sex with the neighbor boy.\"\n\nShe punched him in the arm and pulled him aside to lean against the wall. Waiting for a crowd of guys to pass, she crossed her arms. \"I didn't get that detailed. Two years ago I made a list of boys I'd trust to be my first and you were the only one I came up with. I just didn't know how to tell you or ask you. I was afraid you'd freak out and run away.\"\n\n\"I wouldn't have. You might have been able to take my virginity before I regained consciousness. You know, you're kind of a sister to me in a way.\"\n\n\"What?\"\n\n\"I mean. We grew up together. You're the closest thing to a sibling I have. What I'm trying to say is that I think of you as family. You grew into a brainy hot girl.\" Ryan shook his head in exasperation. \"I'm screwing this up.\"\n\n\"What exactly are you trying to say?\"\n\n\"That I love you, I guess.\"\n\n\"You guess? You don't know?\"\n\n\"I do. I don't know how to explain it or compare it to anything. I love my Mom. I feel safe with her. I love you kind of like that, but differently. I use to be comfortable with you.\"\n\n\"What changed?\" She'd moved closer, her eyes dark and curious.\n\n\"You. You turned into a woman.\"\n\n\"And you love me like your mother?\" The left side of her face curled as she teased him gently.\n\nRyan was blushing fully now. He glared at her. \"No. I don't really know how I love you. I mean, I don't want to hurt you. I don't know if I just love you because I've always loved you or I'm in love with you. And I don't know what you feel for me. I don't want to make this more than you want or less if you really truly love me.\"\n\n\"Hmm. You're a really dumb boy.\" Miranda raised up on her tiptoes and kissed his cheek. She was smiling broadly. \"That's what I love the most about you.\"\n\nRyan watched her bounce away before turning and walking into the locker room. He was able to avoid anyone noticing his wounds as he changed clothes. His mind was racing to figure out what the hell he was supposed to say to her. All he knew was he couldn't stop thinking about having sex with her. She probably had it timed down to the minute when it was going to happen. \n\nAfter finishing his work out and his run, he headed home. His Mom had barely left for work when the doorbell rang. When he opened it he found Miranda with a small duffel bag. She stepped by him and headed straight for his room. When he got there, she was unpacking a few sets of clothes. \n\n\"If I'm going to keep spending the night, I want some of my things here. Where can I put them?\"\n\n\"The dresser. Top drawer is yours if you want it.\"\n\nHe watched her after he emptied the drawer for her. She went about her business in a quick unhurried way as if he wasn't even there. Amused and a bit worried, he sat down on the bed propped up on two pillows. When she was done, she looked at him for a bit and then stripped completely. Ryan's mouth turned back into a desert, while his hands turned clammy. \n\n\"I'm getting over my shyness.\" She said as his eyes roamed over her. \"Your turn.\"\n\n\"I like being shy.\" \n\n\"Shut up. Strip.\"\n\nRyan stood up and undressed. \"You Tan women are bossy.\"\n\n\"And you Walker boys like bossy women.\"\n\nMiranda stepped closer and kissed his chest. Ten little kisses for each fingernail. Her eyes were curious when she looked straight up at him. Ryan pushed her hair out of her face and smiled. \n\n\"She was enjoying herself. So, what's the plan?\"\n\n\"We cuddle.\"\n\n\"Anything off limits?\"\n\n\"Yes. I want my first time to be after the Valentine dance on Friday.\" \n\n\"Okay.\"\n\nIt was early to settle into bed, but they did anyway. They spent the night joined at the lips. Their hands grew braver and braver as the night progressed. The days passed slowly. The nights flew by in a blur. Jason rebounded quickly. He found and fell in love with a twenty-something's mouth. I tight little package named Rochelle. She had an oral fetish. Jason complained about her nose, but loved the top of her head. So he let it slide. Ryan listened, but continued to blow him off for training. Friday took forever to arrive. \n\nIn the nicest clothes he had, which weren't that special, he escorted Mirada to the dance. Her form fitting teal dress only emphasized her features even more. Miranda was all smiles each time she dragged him to the dance floor. During the slow songs, she was pressed tightly to him. Leaving no one wondering if they were just good friends. \n\nWhen the dance was over and he walked her towards his house with her hand tucked into his, he was unable to speak. She giggled when she noticed his hand shaking as he unlocked the front door. \n\n\"I'm supposed to be the nervous one. You've done this before.\"\n\n\"Yea, but this is different.\"\n\n\"How?\"\n\n\"You're you. Your Mom took charge and basically told me what to do. I didn't really have time to think about it. I've been thinking about this for a week. I don't want to disappoint you.\"\n\n\"I've been thinking about this for two years. You won't.\" She shut the door and locked it before heading for his bedroom.\n\nRyan watched her go. Her hips swaying back and forth as she walked. Her legs held his attention. They seemed to sparkle as they caught the light. Her long black hair was naturally straight for the first time in years. She disappeared into the bathroom, giving him time to grab some sodas from the kitchen. \n\nHe was sitting on the edge of the bed with a can of pop in his hands when she appeared in the doorway. She'd lost her shoes in the bathroom. Her footsteps were silent as she ignored the light switch and made her way to stand before him. The only indication of nervousness was a small drawn out breath before she took the can from him and took a drink and then set it aside. She slipped out of her dress and let it drop at her feet before she started working on the buttons of his shirt.\n\nRyan had to swallow twice before he squeaked out the words, \"I love you, Miranda.\" \n\n\"I know. You always did, but you just never knew it.\"\n\nHis shirt was tugged down his arms and tossed aside. Miranda knelt and undid his shoes and pulled off his socks. \n\n\"I knew it. I just didn't know if you did.\"\n\n\"Yes you did. You've always known. Why do you think I've always run to you whenever I needed to be held?\"\n\n\"I don't know.\"\n\nHer hands undid his belt and then unbuttoned his pants. The lightest pressure to his chest was enough to tell him to lie back. Her hand moved down his legs and pulled his pants off. With both of them in just their underwear, she crawled onto the bed and rested her head on a pillow.\n\n\"It's because you make me feel safe and loved. You've always protected me. Everytime I was scared or unsure, your hand always found mine. I've loved you since we were three. I'll love you forever. No matter what happens.\"\n\n\"Even if this ruins our friendship?\" Ryan curled up beside her and began tracing his fingers over her skin. His hands still trembled. \n\n\"I probably shouldn't tell you this, but you're going to marry me.\"\n\nRyan's soft short-lived laughter caused the bed to shake a bit. \"I am?\"\n\nShe nodded. Her eyes were deep and dark as she gazed up at him. \"You are. We're going to go off to college, get our degrees, and then get married. You're going to give me a baby when we're twenty-six.\"\n\n\"Really? Anything else?\"\n\n\"A cat. Maybe two.\"\n\n\"So, I don't have to make any decisions at all?\"\n\n\"You can choose whether the lights stay on or off for this.\"\n\n\"On.\"\n\nShe smiled at his quick response. Miranda raised up and undid her bra and handed it to him. \"Mom says you still suck at that.\"\n\n\"Hmm, that explains the A minus.\" \n\nRyan leaned down and kissed her waiting lips. His thumb was caressing her cheek. Feeling the softness of her skin. He'd transferred the tremble to her lips. It remained there until she let his tongue part them and discover her tongue. They'd started this way several times this week. This time was different. The kisses were deeper. There was an emotion in each kiss. Every sigh held a new level of passion. He felt a chill run through him when he realized how real this was. \n\n\"Just let me kiss and touch you for awhile.\" His lips moved against hers as he spoke.\n\nHer eyes opened and explored his. She nodded once and then closed them again. Her arms came up to rest under the pillow as she gave him her body without any resistance. Little by little, he kissed her cheeks, and chin, and eyelids. His hand ran up and down her inner arm until he slid it into hers. \n\n\"It'll be okay. I'll be gentle.\"\n\n\"I know.\" \n\nRyan traced the beginning curve of each breast with the tip of his nose. With his cheek, he felt the delicate smoothness of them. Her first real gasp came when his tongue licked slowly up between her breasts. Miranda's unoccupied hand found his and pulled it under the pillow. By the time his lips moved down to her surging stomach, he'd kissed her until she was breathless.\n\nAchingly slow, his fingers traced down her arms as his lips moved across her abdomen. He kissed in a circle around her navel before letting his tongue dart inside. With just fingernails, he drew random patterns across her skin. He could smell her. Smell the already familiar musk her body created when aroused. His tremble was back as he fought the desire to bury his head into the precious folds of her pussy. He wanted to drink her up completely. \n\nCurling his fingers, he pulled her panties down until the first bit of black hair appeared. His tongue moved across each new bit of flesh he uncovered. Dangerously close, he placed kisses around her already parted lips. As he pulled her panties further and further, he scooted down the bed. His lips teased her inner thighs and the inside of her knees. \n\nHer eyes appeared out of half-closed eyelids as her tongue kept coming out to lick her lips. Her chest rose and fell as fast as he'd ever seen. When he'd finally removed her panties, Ryan was on his knees. He lifted her left leg and traced his fingernails up and down it. Noticing her body twitch when he found a spot at the back of her knee. The other leg had a similar reaction. \n\nPushing her legs apart, he crawled up until he was on his stomach. The wetness of her pussy had spread down her thighs as he'd played with her legs. Sliding his hands under her ass, he began to massage in a slow methodical rhythm as his tongue reached out to clean her thighs. Taking a peek at her, Miranda's back arched as her head rolled back and forth. Her hands were pressing against the headboard as she tried to hold still. Her fragile breath was filled with shuddered sighs.\n\nRyan flattened his tongue and licked the length of her slit. He alternated between each lip, both inside and out. His tongue barely teased the length of the bright pink inner lips. His thumbs spread her wide as he finally found her vagina. Teasing and circling in tighter and tighter circles until he began to probe inside. \n\nMiranda hands came down and gripped his hair. Her moans and mumbled words were garbled. Ryan felt her knees lift as she tightened her legs around him. They were shaking. Her whole body was shaking as she tried to push his tongue further into her body. When his nose teased at her clitoris, she screamed.\n\n\"Yes. Oh, Yes.\"\n\nHis lips closed on the tiny little ball and suckled as fast as he could, his tongue darting. Miranda let out a raspy squeak and then her body jerked violently. He felt her body's aftershocks slowly recede. Her body turned a darker shade before his eyes. Miranda's eyes were closed. Her tongue seemed to be trapped between her lips until it finally disappeared. \n\nRyan placed gentle kisses as his fingernails moved across her belly. When her breathing had slowed, he slid a finger between her lips and teased for a second. Her head came up to see him smiling at her. He watched her eyes flare wide as his slipped his index finger in. With gentle pressure, he curled his finger and began to massage. His finger sliding in and out slowly. \n\n\"Ryan? What are you doing?\"\n\n\"Making sure you remember your promise.\"\n\n\"What promise?\" Her hands were running through her hair as her legs refused to be still.\n\n\"To marry me.\"\n\n\"I didn't promise you that.\"\n\n\"You better or I'll stop doing this.\"\n\nHer head bobbed frantically. Her knees came up and her pelvis widened when the second finger forced its way inside her. \"I promise. I promise I'll marry you.\" She whimpered.\n\nRyan fingers worked faster as he placed kisses around her clit. His tongue curled and toyed with it as softly as he could. When her hips began rocking frantically, he slid his fingers out and then back in. His eyes were focused on her stomach as he got her used to the in and out sensation. When her stomach got too tight, he slowed until her breathing got back under control.\n\nAs he toyed with her, he slowly slid his underwear down his legs and kicked out of them. Ryan worked her up again. His fingers probing and twisting, then rapidly massaging as they curled and pulled at her. The third time he thought her orgasm was almost crashing over her, he pulled out and hopped off the bed. He heard her loud whimpering moan in protest.\n\nHe was working feverishly to get the first condom on when a tiny lyrical laugh caused him to turn. She was leaning on her elbows watching him. Her lips twitched in a smile that slowly spread ear to ear. Her head bobbed as she slid down the bed a bit and spread her legs wider.\n\nThe bed rocked under him as he crawled back to her. On his hands and knees, he let his fingers tease her thighs. Working back to her core. She was well passed wet. With one hand running up between her breasts and back down, he slid a finger back inside. He gave her a soft smile when she glared up at him. Miranda's mouth opened to issue an order when his second finger slid in to cause her lips to slam shut. \n\nHis fingers moved faster than before. Ryan felt her clitoris roll under his thumb. When her stomach pulled tight, he inched closer. Pushing down his cock, he slid his fingers out and replaced them with the tip of his dick. Sliding in barely past the tip. His groan was barely quieter than the one coming from Miranda as he felt her muscles gripping him fiercely. Ryan silently thanked Mrs. Tan. He'd have finished the second he entered her daughter without the condoms.\n\nRyan's hips flexed, sliding deeper and deeper. He tried to concentrate on the tiny almost inaudible whimpers. The sheer tightness of her was more than he could stand. He pulled out, his breath ragged as he tried to fight back his orgasm while his thumb continued to tease her clit. \n\nAs slow as he could, he pushed back inside. This time he pressed as far as he could. Miranda's body rose up as her mouth flew open to let all the air in her lungs escape. His hips moved back. A distinct wet sheen covered his cock. He watched as her pussy seemed to try and pull him back in as if reluctant to have him escape. Time after time he slid and out of her. Her body getting use to the rhythm as he finally felt the pressure in his balls recede. \n\nRyan lowered himself on top of her as he flexed his hips. Hers began to greedily meet his. He could feel her legs move around him as he found her hands and threaded his fingers into hers. His breath drifted through her hair, as he began kissing her cheek, her temple, her forehead, and every bit of skin he could find.\n\n\"I love you, Miranda.\" He whispered into her mouth as it parted for him.\n\n\"I love...Ryan...\" \n\nHer eyes fluttered open as her hands left his to find the muscles of his back. Skin slick with the sweat made her dig her nails into his back. She pulled at him. Her hips driving into him. Ryan could feel her body straining. Her stomach rolled and then sucked tight as she exhaled through clenched teeth. Sinking as deep as he could, he began to roll his pelvis into her. Their bodies refused to separate, unable to. \n\nHe could feel her grip tighten. Her nails dug into the back of his hand as her body arched under him. He felt the muscles surrounding his cock roll like a tidal wave. Gripping tighter then ever before. They seemed to quake and shiver. Biting his bottom lip he drove into her. Moving fast. Knowing he'd given her the pleasure he'd prayed he could. \n\nAs her tides of her orgasm fell away, Ryan's began. He felt the pressure ripped from him in surging spasms as he groaned in her ear. His hips flexing. Instinctively driving into her with abandon. Ryan didn't know how long his orgasm lasted. It felt like forever. He lay on top of her trying to catch his breath. Feeling her fingers gliding across the skin of his back. Soothing the storm that had just passed over them both. Ryan rolled off of her to look up at the ceiling and smile.\n\nMiranda's hand found his chest as she rolled to her side. It slid down and removed the condoms and tied them in knot. Ryan took them and dropped them over the side of the bed. Reaching for her hand, he snuck a peek at her.\n\n\"Did I hurt you at all?\"\n\nMiranda moved so her face hovered over his. Her fingertips traced his face as her eyes drifted into his. \"You might not want to hear this, but that was beautiful. Pain and all. It was everything and so much more. I don't think anyone could ever do it better. Not with me. Not ever.\"\n\n\"What do we do now?\"\n\n\"We love each other. Everyday. Even when we hate each other. Love me like this and everything will be okay.\"\n\nThe lights were turned off and the rest of the night was spent cuddled up close. Miranda's hands refused to stop tracing his face as they shared the same pillow. She fell asleep a half-hour after he did. Her eyes slowly closed, no longer able to stay open to stare at him. \n\nMrs. Tan opened the door for them at nine as Ryan slowed and looked confused at the car in the driveway. \n\n\"Morning.\" She greeted them. Her eyes danced between them. A knowing smile found her daughter and then she wrapped her up in a hug. \n\n\"Morning.\" They both said almost in unison. \n\nThey were ushered into the kitchen to find Kristen smiling at them and half done with a plate of waffles. Emily went back to the waffle iron and began to make more. Her eyes were twinkling when she caught Miranda's smile and nod. Ryan stole glances around the room to try and figure out what was going on.",
        "\"How was the afterparty?\" Miranda hugged Kristen and sat down on a stool next to her\n\n\"Great. You should see the video.\" She flipped up a laptop and hit play.\n\nMiranda leaned over and snuck a peek. \"Oh my God. He did. I can't believe it.\"\n\n\"What? Rochelle is hot. Of course he did. It's already bouncing around school. He wanted to videotape anal sex. And Rochelle definitely likes it that way.\"\n\nRyan hesitated when he was waved over to see. When he finally peeked over Kristen's shoulder. He saw Jason on his back with a girl in a bra working her hips into him from her knees. He had to look closer and realized she wasn't completely a she. \"What the hell?\"\n\nKristen's smile was massive. \"Rochelle is a friend of my brother's. They dated a bit in college. She went by Roger back then. She's cute, isn't she?\"\n\n\"Yea, I guess.\" Ryan couldn't stop watching his former friend getting rammed in the ass. He movements seemed to be lethargic, but his cock was enjoying the experience. The hits on the video were already above five thousand. \n\nMiranda's smile was sweet, but Ryan noticed a bit of something else hiding in her eyes when she spoke. \"Wannabe rapists need to be punished. Don't they?\"\n\nThe End \n\n*** This is my Valentine Day Contest entry. Please take the time to vote. Thank you. And I hope you enjoyed the story. *** "
    ],
    "authorname": "luvthedesserts",
    "tags": [
        "first time",
        "mature",
        "oral sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/what-are-friends-for-26"
}