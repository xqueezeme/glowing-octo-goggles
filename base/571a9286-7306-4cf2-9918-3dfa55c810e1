{
    "title": "Molly's Muse Pt. 01",
    "pages": [
        "Authors note: This is my first submission to Literotica. Be gentle.\n\n* * * * *\n\nPaul walked up to the building where his interview was supposed to take place. It was much larger than he thought it would be for a moderately successful, privately owned publishing company. It was twenty stories at least and took up most of the square block.\n\nWhen he'd done his research for his application and initial interview, he found maybe a dozen authors who actively used Denton Publishing for their work, most of which were only mid-tier authors in the current market. All except one, Molly Denton.\n\nMolly Denton was the reason he was here. It had been ten years since she had written anything, choosing to concentrate more on launching her own publishing company, but word was she was preparing for a comeback.\n\nThe job Paul was here to interview for was to be her new editor. If her history stayed true, part of her process was to hire someone new for each book she wrote. She then depended on them so much during her process that by the time she published she would credit said editor with a co-author credit. An aspiring author like Paul could literally write his own ticket in the publishing world with such a credit.\n\nEntering the building Paul noticed the reception desk across the room. As he walked across the lobby, he noticed it was sparsely decorated but still gave off a very professional vibe. The woman sitting at the desk was a red head with green eyes, a rare combination, and very pretty. Paul thought so anyway. He dismissed his superficial thought as he approached closer to her and switched his mind back to the task at hand.\n\n\"Good morning, Ms. Amy.\" he said, reading her name from the nameplate on the desk. \"My name is Paul Becker, I'm here for an interview with Ms. Molly Denton.\"\n\nAmy, for her part, seemed far more casual about the interaction than Paul did.\n\n\"Sure, Paul,\" she said. \"I'll let Molly know you're here. Please make your way up to the fourteenth floor and someone will be there to escort you to where the interview will take place.\"\n\nPaul nodded and thanked the girl for her help and made his way to the elevators. When he arrived at his desired floor the elevator doors opened to reveal another young woman.\n\nShe was blonde, heavy in the chest, almost too large for her frame, and was slightly taller than him. Again, Paul acknowledged the beauty in front of him internally, but quickly dismissed his unneeded thoughts so he could keep his concentration on the interview.\n\nNot only did he need this job to better his career, but he needed this job in general. He had been unemployed since graduating with his master's degree in writing and literature. A degree, as it turned out, that is utterly useless outside of the field for which it would be directly applicable. He was behind in rent and could barely afford to eat at this point.\n\n\"Good morning, Paul,\" said the tall woman, \"if you'd please follow me? I will take you to the conference room where Molly will be interviewing you.\"\n\n\"Thank you, Ms...?\"\n\n\"Just call me Grace. We don't hold to many formalities around here.\"\n\nPaul nodded and stepped off the elevator preparing to follow Grace, but she just stood there, looking at him. It was almost like she was sizing him up or was trying to read something about him before moving.\n\n\"You're a lot taller than the last one,\" she said after another moment, then turned and walked away, assuming he'd follow.\n\nPaul hesitated, thrown off by the random statement about his height. It was true he was tall, but not overly. She was taller than he would have expected too, but he didn't say anything about it. Their physical attributes didn't seem relevant. Ignoring it for the moment, he quickly caught up with Grace as she led him through the office space.\n\nLooking around, Paul again noticed the sparse d\u00e9cor.\n\nThe interior designer for the building must be into the 'less is more' philosophy, he thought.\n\nGrace came to a door and opened it, holding it open until Paul got the hint and walked through. Inside the room were only two chairs and a small table, which would make sense for a one-on-one interview space, but it was the type of chair that was out of place.\n\nThey were recliners. The kind like you would find in a guy's apartment on some 90's sitcom because they were too manly to own a couch. They even looked to Paul like they would swivel and rock.\n\n\"Please have a seat,\" said Grace. \"Molly is currently in another meeting but should be done soon. Until then, the company lawyer, Cassie, will be keeping you company and getting some of the formalities out of way. Would you like something to drink, the interview process does take a while?\"\n\n\"Water, please? If I could.\"\n\n\"Of course,\" said Grace.\n\nShe left and shut the door behind her, leaving Paul alone in a room with two out of place chairs. Paul reflected on the last twenty minutes as he waited. Everything he'd seen and done since entering this building was a few degrees off-center to him.\n\nBefore he could think about it further, the door opened and yet another beautiful woman walked in. This one was also taller than him but was brunette. She was much curvier than Grace, as well, which was an accomplishment considering the blonde girls impressive bust.\n\nTearing his eyes from the swell of her hips before it could be considered gawking, he watched as the woman held out a water to him while setting down the small briefcase she was carrying.\n\n\"Good morning Paul, I'm Cassie, the company lawyer.\" she said.\n\n\"Nice to meet you Cassie, and thank you for the water.\"\n\n\"Of course. You're here to interview for the new editor position with Molly?\"\n\n\"I am. I believe you were who I spoke to on the phone interview? I didn't know you were a lawyer.\"\n\n\"Probably. There were a lot of applicants, though, so you'll forgive me if I don't remember what we talked about specifically.\"\n\n\"I understand. No offense taken.\"\n\nCassie sat down in one of the recliners and opened her briefcase, pulling out two single sheets of paper. Paul thought it to be slightly off, again, that he was now talking to the company lawyer before ever meeting the person supposedly interviewing him. He'd been on dozens of interviews over the last few months and not once had he talked to a lawyer, let alone twice for the same job.\n\n\"Before Molly arrives,\" said Cassie, \"I need to have you fill out some forms. Nothing too out or the ordinary, just an NDA and a waiver stating that the company, or Molly more specifically, is not legally liable for anything said or done during the interview.\"\n\nPaul was confused. \"No offense, Ms. Cassie.\"\n\n\"Just Cassie,\" she interrupted.\n\n\"Ok. No offense, Cassie, but this is a publishing company, yes? You don't work for the government on the side or something. I won't be taken to some secret base and told aliens are real? An NDA and a waiver seem a bit overkill for an entry level administration position, especially before I even have the job.\"\n\n\"I can assure you, there is nothing untoward going on here at Denton Publishing. This is in case the interview doesn't go well. You will be discussing things about Molly's new book, and... other sensitive issues while you're here. It's important those things remain confidential. You understand, yes?\"\n\nPaul didn't understand. Any of it, especially why she emphasized the word 'other' the way she did. He added it to the weird list of other stuff about this place he didn't understand. Maybe he'd figure out what it all meant later when there wasn't so much on the line for him.\n\nHe read over the forms and didn't see anything out of the ordinary, not that he knew enough about legal forms to know if there was anyway. From what he could tell, one form made it so he could be sued if he talked about what was said in the interview, and the other made it so he couldn't sue if something was said or done during the interview he didn't like.\n\nSeemed straight forward enough to him, and with only the feintest of apprehensions at the idea something would happen during the interview he would feel the need to sue over, he signed.\n\n\"Ok. Thank you much, Paul. That's all I have for you today, but if you get hired, you'll be seeing me again. More forms, you know? It's kind of what I do here. Among other things.\"\n\nShe took the papers back and slid them into her bag, standing up to leave. With one more glance at him, she smirked a bit.\n\n\"You're taller than those Molly usually hires for this\", she said, and left.\n\nThat's twice now they mentioned my height. How is that even relevant? thought Paul. I'm not exactly ugly, but it would be surprising if my looks had any bearing on whether I get this job or not. Wouldn't be the weirdest thing about this place though. Why the hell are all the women I've seen so hot... and tall?\n\nPaul wondered back to the first girl. The receptionist, Amy. She was seated so he didn't know if she was tall or short, nor did he get a good look at her figure from his vantage and brief interaction.\n\nDisregarding that, Paul opened the notebook he brought with him. He started going over his notes and reread some of the articles and information he'd scavenged about Molly Denton and Denton Publishing, refreshing himself for the interview in case any of it would be useful.\n\nNot long after, the door to the room opened again and another woman walked in. Paul stood ready for a handshake, assuming it was going to be Molly Denton. A few things about the girl hit him all at once.\n\nFirst, if it were possible, she was just as, if not more attractive than the already above average looking women he'd met so far. She was brunet, like Cassie, with dark brown eyes. She looked older than him, and he knew from her bio that she in fact was older by a decade. Keeping with the tradition she was also taller than him, but not by much. She wore jeans and a t-shirt, which seemed very weird for this setting in his opinion.\n\nHe was wearing a suit and tie.\n\nFinally, Paul couldn't help but admire just how huge her tits were. Magnificent was the only word he could find in his mind to describe how perfectly big and soft looking they were, even through her shirt and bra.\n\nHe shook his head in a vain attempt to clear it. He could reminisce about her dreamy bosom later. He needed this job, and he sure as hell wasn't going to get if he was caught drooling over his perspective boss' rack.\n\nThe woman walked forward and smiled with an extended hand.\n\n\"Good morning Paul, I'm Molly. It's nice to finally meet you.\" she said pleasantly. \"Ready for your interview?\"\n\n\"Uhm, yes. That's why I'm here. Yes. Job interview,\" said Paul struggling to compose himself.\n\n\"Great. I've been looking forward to this. Your resume was impressive. I especially liked the interactive website version you created, haven't seen that before.\"\n\nMolly walked closer to Paul which caused their height difference to look more prominent. Paul wasn't embarrassingly shorter, but it was noticeable. Paul's neck might have snapped if he put any more effort into keeping eye contact and not to ogle her.\n\n\"That's nice of you to say,\" Paul replied, \"most people I've interviewed with don't even bother to look at it. For whatever reason.\"\n\n\"Please, sit,\" said Molly, gesturing to a chair. She sat in the chair opposite the small table. They sat and adjusted until comfortable before she continued.\n\n\"I would imagine they didn't look at it for the same reason none of them hired you. Their old. You're not. An unfortunate characteristic of the industry, I'm afraid. Anyone young enough and talented enough to be an author, editor or publisher these days do so in some online format, not even bothering to go the traditional route. This has left a significant age gap. It'll correct itself in time. One of the reasons I branched out and started my own publishing house when I did. By the time everyone else is ready to modernize, I'll already be there with an army of young talent.\"\n\n\"Very forward thinking of you. Is that why you haven't written much over the last few years?\"\n\n\"Ha,\" she laughed, a bit surprised by his candor. Molly figured him the type that would be too 'professional' to say something personal like that. She liked it. \"Maybe. Among other reasons of course. Writer's block is usually caused by more than just time management.\"\n\n\"I get it. So the drought wasn't from lack of desire or motivation, was it of inspiration?\"\n\n\"Of a sort, yes.\"\n\n\"Might I ask why now, then?\"\n\n\"You can ask, but if you actually want an answer, you'll have to win the job. I don't share my art with just anybody. Enough about me, though, this is your interview. Tell me, why do you want this job? With your education you should be looking for something a little better than entry admin work.\"\n\n\"Like you said, it's a tough industry right now for people like me. I need a job.\"\n\nMolly raised an eyebrow, \"Is that it? You just need a job, any job? I must say it doesn't motivate me to hire you just because you need a job. Anyone else unemployed would need or want it just as much.\"\n\n\"That's fair,\" replied Paul. He took a minute to gather his thoughts before expanding on the question.\n\n\"You're Molly Denton,\" he finally said. \"You were first published at the age of fifteen, which isn't entirely unheard of by itself. What was unheard of, however, was the reception you received. One-hundred and forty-two weeks on the top of the best sellers list, movie rights and eventual movie, and wide consensus within the industry that your first ever novel will be considered 'high literature' before you turn 50.\"\n\n\"Pretentious, but that's what they say,\" said Molly, \"But why do you want this job?\"\n\n\"Ok, then,\" he said. \"Ten years ago, you published your fifth book. It was met with the usual praise and was probably well on its way to all the same accolades as your previous four books, not important in this context, I know, but there was one glaring difference between that book and every other one you had written. The main character was a man. It caused a lot of turmoil within your more feminist fanbase. When asked why you made this choice, you replied, 'It had to be a man. The narrative depended on it. Wouldn't have worked otherwise.\"\n\n\"And I spent the next six-months being attacked by every feminist in the country,\" said Molly. \"Who knew I had so many fans offended at the thought there wasn't some deeper, political meaning to me using females as the main characters before then.\"\n\n\"Yet you never apologized or placated, which would have definitely been the correct move, professionally speaking.\"\n\n\"The book was still a success. Where are you going with this?\" asked Molly.\n\n\"You cared more about the book more than you cared about the validation. You could have apologized, even though you wouldn't have meant it, and most of the criticism probably would have disappeared. If I'm going to work for anybody in the age of self-publishing, I need to work for someone like that.\"\n\nMolly sat there and just studied Paul for a moment, she couldn't help but feel a bit disappointed by the answer he was trying to push off on her. It was all bullshit. That was a nothing event in the life of her career.\n\n\"That was the perfect interview answer\" she said. \"You showed you know my history, that you studied up on my work and how it was received, you even added in a direct quote from an interview followed by an appeal to my artistic integrity. Very well done, all told. Too bad it's nonsense.\"\n\n\"What?\" asked Paul, taken aback.\n\n\"I bet if I were to look in that binder you are pretending to take notes in, there would be a list of things you think might come up in this interview. Seeing as 'why do you want this job' is a common question, you probably rehearsed parts of that. Even your initial answer of 'I just need a job', was probably on purpose. Am I right?\"\n\nPaul closed his folder and pushed it to the side. \"Maybe. Now it's my turn to ask where you're going with this. Anyone with a brain has some level of preparation for possible interview questions. Calling me out seems counter-productive to the format.\"\n\n\"Formats are dumb. Never found much use for them. Don't even outline my books before I write them. I find it too constricting and binds my creativity.\"\n\n\"I like outlines.\"\n\n\"I have no doubt. You seem the type.\"\n\n\"Something tells me that's not exactly a compliment.\"\n\nMolly didn't respond to that, instead changing the subject. \"You know, Paul, I don't usually hire someone like you for this position.\"\n\n\"Too tall?\" he asked.\n\n\"What?\" Now it was Molly's turn to be surprised.\n\nPaul figured since this interview wasn't going to go according to script he'd lean into the trend of the conversation.\n\n\"I've been told twice since arriving that I am 'taller than those who are usually hired for this position'. Considering I have only met three people, two of which I know for sure are taller than me, I feel the observation may be significant.\"\n\nMolly shuffled in her seat. It didn't play well that Paul might suspect his physical appearance is playing a role in her desire to hire him. Even women bosses had to abide by equal opportunity policies.\n\n\"Go on, anything else you've noticed?\" she asked, moving away from the topic of his appearance.\n\n\"As it happens, yes. Speaking of the people I have met in this office so far, all three were women, which isn't surprising, but all three are above average in both height and beauty. It might not be polite to comment on such things in the workplace, but its overly noticeable. Like it was intentional I met who I met. It could be a coincidence and I just happened to meet the only three model-esque looking women on your staff, but I somehow doubt it. Even you look like you belong on a magazine cover, and you own the building.\"\n\nHe leaned forward and continued.\n\n\"What's just as noticeable, beyond the employees, is the building itself. There's hardly a decoration to be seen. Minimalist, if I don't miss my guess. The contours, materials and characteristics of the building itself are used to accentuate an 'air of success and professionalism'. Very modern art, but just as 'pretentious', to use your word form before, as it would be if you had million-dollar paintings hanging on every wall.\n\n\"This is all not to mention that I've so far signed away my right to sue and put myself in a vulnerable position for you to sue me if I tell someone you don't approve of something you don't want them to know. I've been chauffeured through the office, legally briefed, and now have been dressed down about my interview notes by an overwhelmingly successful woman who shows up to our interview wearing jeans. Not for nothing, but I'm beginning to suspect this position isn't exactly what the job board had billed. I'm confused and annoyed, but still very much want this job.\"\n\nMolly had started smiling before Paul had finished his monologue. He was it. Just like that she wanted him for this position even if he was taller then she preferred. He was inexperienced professionally, most likely in other ways, as well, but not so much he couldn't be brought up to speed in short order. Companies always over-estimated the difficulty of needing to train someone.\n\nIt was that other part of what she needed from him that would be the real deciding factor. Now would be when the real interview began.\n\n\"Very impressive, Paul. And you're right, there is more to this position than you know. Though I wonder if you are prepared for exactly what that is. Tell me, do you know what a 'muse' is?\" asked Molly.\n\n\"It's descended from Greek mythology; I believe they were inspiration goddesses. Now it mostly translates to mean the anthropomorphic embodiment of being inspired.\"\n\n\"Big word, anthropomorphic. It's not used often enough in my opinion.\"",
        "\"I would have said 'human' instead, but I've seen rock-stars refer to heroin as a muse.\"\n\nMolly laughed at that before moving on to her next question.\n\n\"Ok then, would you believe that all five of my books have been inspired by what I would refer to as a muse? Five books, five muses.\"\n\n\"To write as well as you do, I'd believe just about anything you tell me about how you did it. And that's not me appealing your artistic integrity again, you being a great writer is just fact.\"\n\n\"Fair enough. How about this, then. Do you know who Samuel Khan is?\"\n\n\"He's a composer, I believe, but that's all I know.\"\n\n\"Correct. But him being a composer isn't what makes him relevant here, it's the process he used whenever he sat down and wrote his music. He attributed much of his success to his muses, much like I do. He named his symphonies after them, in fact. As for me, I give them a co-author credit when I publish.\"\n\nPaul was confused now, from what he understood, the co-author credits went to her editors, like he was hoping to be for her.\n\nMolly continued, \"Samuel Khan said he wrote his best music when he and his muse engaged in... carnal... acts while he wrote. Said he was his most bold and creative when he could feel their beauty.\"\n\nCarnal? What the hell is happening to this interview? thought Paul.\n\nThey were veering further off the path of the traditional interview with every new subject. Sex talk was a big no-no in a professional setting. Too much about it could be misconstrued as harassment if taken the wrong way.\n\n\"I don't think I follow,\" said Paul, trying to feel his way through where this might be going.\n\n\"Sex, Paul. They had sex while he composed. I, myself, do the same. Every word in my books were written either right before, during, or right after having sex. My best work is during, though. Samuel Khan was right about it helping to feel something beautiful when trying to create something beautiful.\"\n\n\"That's... interesting,\" said Paul, \"but what does this have to do with this job. From what I understand it's always been your editors that received the authors credit, not a muse. Unless you are suggesting that part of this job will be to have sex with you.\"\n\nHe was joking, but Molly didn't laugh. He was nervous her might have taken it too far.\n\n\"I'm not suggesting anything,\" answered Molly, \"I'll tell you outright. Being my editor requires that we have sex. A lot.\"\n\nPaul was way out of his depth now. It made the forms he signed make more sense though. If someone were going to freak out about being told he'd need to fuck their boss to get hired, lawsuits were a definite possibility.\n\nHis next thought came from his little head instead of his big one. This woman was hot. Would it be so bad if sex with her was part of his responsibility?\n\nHe needed to get a grip. His mind was racing. He needed more answers.\n\n\"That is surprising information. What if I say no and report this as sexual harassment, I assume that's what the forms were for?\"\n\n\"This isn't the first time I've needed to fill this position. There is a context to this conversation that makes it legal. I haven't offered you the position, nor have I said that you wouldn't get the job anyway if you refused the physical aspects of it.\"\n\n\"It's been implied,\" replied Paul.\n\n\"Hence the forms. Just in case. I'm very selective and hate doing these interviews for obvious reasons, so hopefully this works out. You would still have the standard work load you'd expect if this were strictly editorial. There is more to writing a book than inspiration and creativity. You'd also get the co-credit, like the others.\"\n\nPaul thought the offer was fucked up on its own, but now he couldn't shake the feeling there was even more to it. Another catch to the catch.\n\n\"You're talented, rich, famous, a legend in your field, and absolutely gorgeous. You could probably have sex with whoever you want, whenever you want, why hire for it? It doesn't add up. Where's the other shoe?\"\n\n\"Depends on your view of things. There's more you should know, but I'm still gauging whether you're ready to hear it. I can't quite get a read on you. Which I like. Makes it more exciting.\"\n\n\"I'd appreciate if you would just lay it all out,\" said Paul. \"This is all so far off-base from what I expected that I'm already tempted to panic and run away. Dragging it out won't do either of us any favors.\"\n\n\"That's fair.\" said Molly, hesitating for a beat, \"I have what I call a girlcock.\"\n\n\"Excuse me?\"\n\n\"I am a girl... and I have a cock. A dick, or penis, if you will, that would be involved in the aforementioned art inspiring sex.\"\n\nThis was the moment of truth for Molly. In her experience if she could keep Paul here, in this room, for the next few minutes while he processes this last piece of information, she would avoid the worst of the possible reactions. Knee jerk 'I'm calling the cops you freak' type of reactions were rarely pre-meditated.\n\nPaul processed surprisingly well. He added it on to the big pile of 'wtf' that had been heaped upon him since arriving here and began trying to piece the parts into a whole. He took a long minute, figuring she wasn't going to whip it out and start trying to poke him if he didn't have something to say right away. If he was following all this correctly, however, taking this job would mean that's exactly what she would do at some point.\n\nHas she even offered me the job? Would I take it if she did? This interview is so fucked.\n\n\"So... you're trans?\" he said, reaching for any response that made sense.\n\n\"No, not really. That would imply I was seen as a man at some point and am now seen as a woman. I'm a born woman, two 'X' and everything, but with a man's appendage.\"\n\n\"Right. Hermaphrodite?\"\n\n\"Again, not really. I don't have the lady parts. No vagina, you see. Just the cock. I know labelling this would make it easier for you, but honestly there isn't anything out there accurate enough to label what I am. Futanari might fit, though that's just Japanese for hermaphrodite, I believe. I would say 'dickgirl' is probably the best as far as pronouns go.\"\n\nPaul was getting fascinated now. He didn't know dickgirls, or girlcocks, were even a thing in this context. There was so much going on. So much to think about, but the only thing on his mind was dick. His curiosity at the novelty forced him to want to know more.\n\n\"You'll have to forgive me, but I'm going to need to be a little more indelicate if we are going to talk about this,\" said Paul.\n\n\"I'm a female with a cock who just said part of your job will be to have sex with me, I believe delicate is long since passed. You haven't panicked or run away screaming, which is a good sign. I'd even go so far as to say I'd like to offer you this position officially, but I'm still not sure you have grasped what that would mean.\"\n\n\"You're probably right. Taking a job where your boss required you to sleep with her is surprising enough. I believe it's even against the law. Not that I could go to the cops even if I wanted to.\"\n\nHe paused.\n\n\"Look,\" he said, continuing. \"I like sex as much as the next guy, and you are stunningly beautiful regardless of what's between your legs, but there is one more dick in this room than I had assumed at the beginning of all this, and I am just not sure what to do with that development.\"\n\n\"You've been in plenty of rooms with more than one dick before, that can't be new,\" said Molly, smiling at her glibness.\n\n\"Can I see it?\" asked Paul. His curiosity had finally gotten the best of him, and he couldn't help but ask. She was essentially going to pay him for sex, in a way, so why shouldn't he push the subject of her dick.\n\n\"If you want,\" said Molly, not missing a beat. \"As long as I can see yours as well.\"\n\nShe wasn't ashamed of who she was, and Paul should see what he'd be getting into. She owed him that much after the multiple small deceptions it took to get him here in the first place.\n\nAt the same time, she needed to see if what Paul had to offer was something she could work with. This arrangement would be mostly physical, so it wouldn't make sense if there was no attraction.\n\n\"Wow, ok, I think that's fair,\" said Paul, half not expecting for her to say yes. The part about him having to show off as well was unexpected, but understandable. His thoughts were so messed up and jumbled right now anyway that he probably couldn't even muster up the emotional insecurity needed to be embarrassed about stripping for a stranger.\n\n\"I know you have an idea of what to expect, but I think it would be best to provide female context before the shocking parts,\" said Molly.\n\nShe began to strip. Not just her pants, but everything. She started with her t-shirt.\n\nIt had been form fitting to begin with, giving Paul a good idea of how gifted she was in the chest. Standing there, now in her bra however, let him know quickly he underestimated her feminine talents.\n\nPaul didn't know why Molly was showing him her tits since he'd only asked to see her cock. He wasn't about to complain thought. They sat on her chest like two melons ready melons ready to be hefted and flicked to test if they were ripe. The sudden urge to bury his face between them was overwhelming.\n\nMolly watched as Paul's eyes became glued to her tits as she continued providing 'context' for him. Her intent was to get Paul horny enough that by the time she showed him her cock he'd be into it enough not to freak out.\n\nShe reached behind her and unclasped her bra, letting it fall to the floor and leaving her naked from the waist up. Molly could hear Paul's breath hitch, then speed up, if only slightly. If there was one natural imperative Molly could always take full advantage of in her love life, it was that men loved tits. They couldn't help it.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nIt had begun out of curiosity to see what she was packing in the pants, some weird feeling he had that he had to know what a real woman's cock would be like. It wasn't about getting aroused or making it sexual, but it was sexual now, which he figured might be the point of Molly's striptease before she got to the weird stuff.\n\nGet a man horny enough and they lose all clarity.\n\nThey both remained where they were for a moment, Molly standing topless and Paul still sitting in his recliner. They weren't saying anything, adjusting to the new intimacy. Finally, Molly broke the silence.\n\n\"You're turn. Take your shirt off,\" she said.\n\nPaul nodded and stood. He took off his suit jacket, untied his tie and unbuttoned his shirt. The process was so time consuming, putting a lot of attention on him for longer then he'd prefer. He was suddenly jealous that Molly had only been wearing a t-shirt.\n\nMolly looked Paul over approvingly. He had a long torso with what looked like natural muscle rather than anything he'd cultivated. She could tell he was a book worm.\n\nShe unbuttoned and unzipped her pants and pulled them down. She was toned, more from effort on her part than a natural inclination towards fitness. She hated working out, but as she got older it became more necessary. Her legs were long and defined.\n\nPaul was mesmerized. He watched as Molly undid her pants and slid them down her legs. She had to bend over to do it, which caused her perfect tits to hang down and jiggle as she went through the motions. It got even better as she stood back up. Her visage was amazing. She was tall, with every single curve and line you'd expect to see on a woman. One piece seemed missing, however.\n\n\"Uh, I'm no expert, but if you really had a cock, shouldn't there be a bulge?\"\n\n\"I tuck,\" she said, \"kind of have to if I ever want to wear anything feminine other than long, loose dresses or the like.\"\n\n\"I see.\"\n\nPaul didn't need prompting this time. It was his turn. Just like Molly, he didn't stand on ceremony and quickly removed his pants, leaving only his boxers.\n\n\"Do you think you're ready to see me?\" asked Molly, getting further to the point.\n\n\"If I'm not now, I probably won't ever be. Your tits are amazing, by the way.\"\n\n\"Thanks. I get that a lot.\"\n\n\"I can only imagine.\"\n\nMolly wrapped her thumbs in her only remaining article of clothing and pulled them down until gravity took them the rest of the way. She stepped out and spread her legs wide enough for her cock and balls to fall and dangle in front of her for Paul to see. She was currently soft. Which was a relief to her, at least for now. She didn't need to deal with the shock of how big it was when she was hard just yet.\n\n\"Ho-ly shit, that's big,\" said Paul, not able to react any differently. The cock was flaccid, which meant he wasn't looking at its real size. He was more of a grower than a shower himself, so he had no doubt what he was looking at was a monster of a cock.\n\n\"Very,\" said Molly, not trying to downplay her size, \"but I can assure you, whatever is playing in your head right is not how this works. Yes, sex with me will be uncomfortable at first, but only at first. It gets better.\"\n\n\"Better? Molly, you're soft and still almost as big as my forearm. Sex with you would tear me in half.\"\n\n\"Don't exaggerate. Besides, it's not all about me sticking my dick in various holes, I love everything about sex. I love to be fucked as much as I love to do the fucking.\"\n\n\"You don't have a vagina though,\" said Paul, confused.\n\n\"Neither do you, Paul. I do have an asshole, which is just a fuckable as a pussy. Just because I'm a woman with a dick doesn't mean I don't have all the other parts. I thought that would be obvious, you know, seeing as you keep staring at my tits.\"\n\n\"Yeah, sorry, just a little freaked is all.\"\n\n\"Understandable. If it makes you feel better, you're handling it better than most. Now show me yours. Let's finish this part up and see where you want to go with it next.\"\n\nPaul took off his boxers. Unlike Molly, however, he was hard, his own dick pointing straight and proud in Molly's direction.\n\n\"Well. You're not exactly small yourself, are you Paul?\"\n\n\"I suppose not, but I'd prefer if we didn't compare. Fragile male penis envy and whatnot.\"\n\nMolly laughed at that. The fact Paul had maintained a sense of humor through this mess of an interview was good. She could use some humor in her life.\n\n\"I usually prefer smaller men.\"\n\n\"Is this the height thing again?\"\n\n\"And a cock size thing. My type is usually the shorter, smaller more effeminate guys. Femboys, if you want another label.\"\n\n\"I suppose that means we're both outside our comfort zones at this point,\" said Paul. \"Can I... touch it? Touch you?\"\n\n\"We can do that. I should warn you that if we start petting, I will get hard. The only reason I'm not already is because I took something before,I came in here that helps keep me calm. Girls like me tend to get aroused and stay aroused easily.\"\n\n\"I don't know if that's good news or bad news, not quite sure how to process being the cause of someone else's erection. I've only been with... hmm, females? Vagina females? Fuck I hate pronouns these days.\"\n\n\"No worries. I don't offend easily. Come over here and cop a feel if that's what you want.\"\n\nPaul walked over to her. The closer he got to Molly, the more nervous he became. His arousal was obvious, and Molly was staring. He noticed her cock twitch. His own twitched in response, like they were communicating on their own.\n\nHe never had any sexual interest in men through his life. He always thought it was the dick that turned him off. Seeing himself now, however, transfixed by the biggest cock he'd ever seen, he wasn't so sure that was the reason anymore.\n\nHe was into whatever this was and was determined to see where it led. He looked at Molly, who tore her own eyes away from his crotch to look him in the eyes.\n\n\"How far are we taking this?\" Paul asked.\n\n\"Good question. I would suggest we avoid anything involving penetration, for today at least, but other than that, free reign.\"\n\n\"You've been in this position before, haven't you? 'Breaking in' someone not used someone like you.\"\n\n\"Yes. Women like me might be more common than you think, but it's still a rare gender. Warming up to the idea before diving in the deep end works out better for us.\"\n\n\"Makes sense,\" said Paul.\n\n\"It works, sometimes. Warmth and comfort are important. We will need to become as comfortable as possible around each other for this to work. There is no half measure here. Today might seem all fun, but if you take this job, things will get difficult for you.\"\n\n\"You don't have to do that anymore. I may not fully understand what all of this is, but I'm into it. Stop warning me.\"\n\nMolly nodded.\n\nPaul reached out in front of him, unable to control his arms anymore. He needed to feel her tits, drown himself in them. He needed to hold her girlcock in his hands, to feel the weight of it and see what it looked and felt like when she was hard. He wasn't sure where these feelings were coming from, but he wasn't sure he cared either.\n\nThey both pawed at each other, Molly running her hands up and down Paul's chest and going straight for his cock. She had a directness about her that Paul liked.\n\nPaul had never touched a more perfect set of tits. They were large, heavy and soft in his hands. He played with them exclusively at first, until with some willpower, he eventually tore his hands further south. He brushed his fingertip against her cock and visibly saw it start to grow.\n\nHe wrapped one hand around the base and squeezed. He closed his eyes and felt Molly stiffen in his hand. He reached his second hand and held her girlcock. It was hot, and different, and big. Yet all at the same time, it felt good. It didn't make sense, but seeing how none of this did, he continued with his current coping mechanism and just went with it.\n\nMolly was hairless. Not just shaved, Paul would have at least felt the stubble if she had shaved or waxed, but smooth, like that's how she was naturally. Something to ask about later.\n\nHe reached further down and cupped her balls with both hands. Each one was about the size of a lemon, but heavier than he would have assumed. Like they were over-full of something for their size. He recognized it for what it meant, having gone through his own droughts.\n\n\"How long since you've been with anyone?\" asked Paul.\n\nMolly had her eyes closed now, not caring for anything but for what Paul's hands were doing.\n\n\"Years,\" she said.\n\n\"How?\"\n\n\"Most of it by choice, some of it not.\"\n\nPaul kept fondling Molly's balls. It was a unique feeling. He had a set of his own, but it wasn't the same.\n\n\"Let's say, for instance, you somehow get off today. How much would you cum?\"\n\nJust hearing Paul use the word 'cum' brought her closer than anyone had accomplished in a long while. She wanted to, but she was still worried she might scare Paul away.\n\n\"A lot. I produce more semen than even the most virile male. Another part of being a dickgirl. My drive is also more than you'd expect. It would be best if you assumed when it comes to sex, the words 'more' and 'bigger' apply to everything.\"\n\n\"Interesting. For better or worse, you have me fascinated.\"\n\n\"You just want to play with my boobs more.\"\n\n\"I haven't paid any attention to your boobs for a few minutes, if you haven't noticed. Your cock is hard as steel. It's kinky and taboo and I can't help but wonder how you have enough blood pressure to keep a cock this big so hard.\"\n\n\"Another dickgirl thing. And can you call it a girlcock, please? I like the way it sounds better. Feminine, but doesn't hide what it is.\"\n\n\"Pronouns again. I'll call this thing Arnold, or Betty, if that's what you like.\"\n\nMolly laughed. He had a natural way about him that was putting her at ease, even as he experimentally felt up her hardness.\n\nThey shut up for the next few minutes and explored each other. Paul switched between feeling Molly's tits and her cock and balls; the decidedly feminine nature of her breasts combined with the masculine feel of her girlcock was really working for him. He decided to take it a step further and see what happened.",
        "He moved his hands to her shaft and started stroking while at the same time burying his face in her cleavage.\n\nPaul jerked Molly off, slowly at first. She moaned as he stroked, and Paul found himself liking what he was doing.\n\n\"I want you to cum, let me see if it's as much as you say.\"\n\n\"A little longer and you'll get your wish, whether you want it or not. Squeeze a little tighter, yes, like that. Fuck your hands feel good.\"\n\nPaul was sucking and lightly bit on Molly's nipples as he pumped her. He was worried she would protest to the rough treatment, but it seemed to only bring her closer to their goal. Her breathing changed and her body started to ripple slightly when he stroked over her cock-tip.\n\nShe was going to cum soon and Paul felt excited about it.\n\n\"Fuck, Paul, you're making me cum, uhh, shit...\"\n\nMolly started to buck her hips trying to fuck Paul's hands. He kept stroking, faster now and holding on a little tighter trying his best to bring about his prize.\n\nMolly threw her head back and let out a loud, aching moan as she came. Spurt after spurt shot out of her, some on the floor, but most of it landed on Paul since he was still standing right in front of her. She thought he might jump out of the way at first, but he didn't. Paul stayed where he was and milked her as she drenched him in her seed.\n\nThe aftermath was something out of a lewd fantasy. Paul had so much cum on his chest and stomach that it started sliding down to coat his own rock-hard cock. He never stopped stroking Molly as she kept going.\n\nSomething had switched in him as he witnessed how much Molly came for him. He didn't recognize it, didn't know what it was or what it meant, but he was sure he didn't want it to switch back.\n\nFinally spent, Molly pulled back from Paul. She was still hard but felt exhausted. Like a weight had been lifted and the strain of carrying it was all crashing down on her at once. She stepped back and collapsed back in the recliner she had been in before. She looked up at Paul and how much of a mess he was. It was beautiful.\n\nHe was beautiful.\n\n\"That was awesome,\" said Paul, \"Weird. Messy, but awesome. Like a cum god or something.\"\n\nMolly was not expecting that reaction. She didn't have a response for it.\n\nShe then watched as Paul took one his fingers and wiped some of her cum of his chest and brought it to his mouth. He licked it tentatively, not quite sure what to do. After a second of contemplation, he shrugged his shoulders and put the whole finger in his mouth.\n\nHe showed no signs if he liked it, but he didn't gag or spit, so Molly assumed it wasn't a terrible experience in the end.\n\nShe looked down at Paul's own throbbing cock. It was purple and needed attention. The interview wasn't quite over yet.\n\n\"Fuck my tits,\" she said, \"I want you to do to my tits what I just did to... all of you. Fuck my tis with my own cum as lube.\"\n\nPaul was all lust at this point and sliding his cock between those perfect tits was exactly what he needed. Or so his mind told him.\n\nHe walked up to the chair Molly was on and straddled her waist, a knee on each side of her. It was quickly apparent that her still hard girlcock was going to get in the way, so he leaned up slightly and tucked it way underneath one leg until it was behind him. He could feel it faintly rubbing against his ass, as if in promise of the future.\n\nMolly wiped a handful of her cum off Paul and applied it liberally between her mounds and added more to his dick before guiding him home between her tits. Once it was where it needed to be, she let him go, crossed her arms across her chest tightly, creating a soft warm seal between them for Paul to use.\n\n\"Fuck my tits, Paul. There so big and I need you to fuck them and cum all over them for me. Please?\"\n\nPaul did. He bucked his hips and luxuriated in the indescribable pleasure Molly was providing. Not only did it feel incredible, but as he looked down on her he lost himself to the scene. Her tits were pressed together tightly, the way she had her arms folded across her body made it seem like she was creating a window filled with nothing but her breasts, framing them.\n\nHer eyes were locked on his and he couldn't decide what was more erotic, her tits hugging his dick as he fucked them, or the desire in her eyes as she watched him use her.\n\nIt didn't take long. Between the foreplay, Molly's cum show, and the amazing titjob he was enjoying, he was already going to blow.\n\nA few more strokes in and out of the well-endowed tit-flesh and he was done. He grunted and thrust forward one last time and shot his load. It wasn't as much as Molly, but it was respectable.\n\nPaul kept using Molly's tits to massage his way through his orgasm, letting them squeeze and milk him the same way he had for her girlcock minutes before. He rode her through his high, not moving to get off her until he felt it might be awkward if he didn't.\n\nMolly had given plenty of titty-fucks in her life. With breasts as big as hers there was no way around it. Not that she minded the act. This, with Paul, felt different from those other times somehow.\n\nShe felt like she wanted to keep him there, sliding between her tits for hours. It was a surreal thought. This interview hadn't gone to plan. In fact, as she thought on it, much of her meeting so far with Paul had a tint of surrealness to it. His personality, his reaction to being all but lied to to get him here, not to mention the sex and her introduction of her non-female parts... he was too calm. Too willing.\n\nA flash of something hit her. Thinking on Paul and how everything had progressed sparked something in her head and she had a sudden, unbearable to need to write. She could see her new book, what it would be about, who the main character should be. The entire plot laid out in her mind as she looked up at Paul still sitting atop her.\n\nShe watched as he made to get off her now that he had finished.\n\n\"No... uhh, stay here, uhm, please,\" she said, feeling off balance. \"It feels nice.\" Which wasn't untrue, just not why she needed to him stay.\n\nPaul nodded and kept his softening cock wedged between her tits. He couldn't really fuck them without being hard, but he didn't think that was the point of her request.\n\nThey stayed like that for some time, well after the point where Paul's knees started to hurt and the pools of cum between them began dry. Molly lay there, all but ignoring Paul, combing through her own thoughts. Paul was absently fondling her breasts and waiting to see what happened next.\n\nIt had been so long since someone, or something, had affected her so much that the need to write was this overwhelming. She needed her laptop, needed to get some of it on paper before she lost any of it. She didn't know why her mind worked like this, through sex, but she long since gave up questioning it, writing it off as just another dickgirl quirk.\n\nSex was such a big part of who their gender was that it was hard to easily separate it from their life or personality.\n\n\"I need you to get off me now. Don't leave or get dressed yet, just get up. Please,\" she said.\n\nShe would have stayed where she was if she could, if she had her laptop handy, or even pen and paper. She thought it had to be something about Paul, and him fucking her tits, that was the catalyst for this surge of inspiration.\n\nSomething for her to test out more later.\n\nPaul obliged, relieved to be moving anywhere as long as he wasn't on his knees. He watched Molly get up after him and make her way to her clothes where she pulled out her phone and thumbed her way through it.\n\nNot a minute later a knock came. Molly went to open it, which caused Paul to panic for a moment thinking someone was going to walk in and see him naked and covered in dried cum, but it passed quickly as Molly answered the door by opening it just wide enough for her to be handed something through it.\n\nTaking it and closing the door again, Molly rushed back over to her chair and sat down, ignoring the mess her and Paul had made of the room. It was a weird, but funny, few minutes for Paul. Everything Molly was doing she did in a rush, like she had somewhere to be. Not funny on its own, but her doing it while her cock was hard, and her tits were swinging about gave the scene a jiggly effect that made a cartoon out the obvious seriousness of the moment.\n\nHe was also fascinated that she was, in fact, still hard and had been since he'd made her so before jerking her off. She hadn't softened in the slightest, even after she came.\n\nShe mentioned she was hyper-virile, so he figured this must be a part of that. It excited him. He still wasn't used to the idea that raging hard girlcock got him excited, but that was a battle in self-awareness for another time.\n\nMolly put a laptop on the table and opened it. After a few clicks she started typing furiously.\n\n\"Should I go now?\" asked Paul, assuming the interview was over if she was getting to her work.\n\n\"No, thank you,\" she replied without looking.\n\nThe door to the room opened slightly once more, still not wide enough for anyone to look in, and someone dropped a bag on the floor just inside.\n\nCurious, Paul made his way over to see what was left.\n\n\"Should be towels and baby-wipes,\" said Molly. \"Clean yourself and come sit down, please.\"\n\nPaul noted she was being bossier and shorter with him then before. It was confusing. He did want to clean up though, and thanked Molly internally for her thoughtfulness. The cum was starting to itch.\n\n* * * * *\n\nThe next hour was a test in patience for Paul. Twice he tried to get dressed, each time being stopped by Molly with her chirping a simple 'Don't please'. At least she was being polite with her orders. Paul didn't know why he did as she asked, but he did and reserved himself to sitting naked and playing on his phone.\n\nAfter a while, Molly stopped typing. When Paul looked up from his phone he saw she was staring at him, a puzzled look on her face.\n\n\"Something wrong?\" he asked.\n\nShe frowned, like she didn't want to say something, but had to. \"Are you taking the job?\"\n\n\"I'd like to,\" he said, \"but honestly, we haven't really talked about the job, outside of the sex stuff. Any way I can get more details? Like pay and hours, and maybe the benefits. You know, the ones that don't result in us cuming on eachother?\"\n\nMolly smiled. It was a very reasonable request. She turned back to her computer and made a few moves before looking back to Paul.\n\n\"Just sent you an email with your pay and benefits package, as well as a few extra details on the admin side of things. Hours, however, are going to be fluid. Writing a book isn't a nine to five sort of endeavor.\"\n\n\"Is that what you've been doing this last hour or so? Writing?\"\n\n\"Yep. Our little bout of extra-curricular interview activities got my juices flowing, in more ways than one. I like you, Paul, your interesting, and you get me hot.\"\n\n\"Ditto.\"\n\n\"Do you know how to suck a girlcock, Paul?\"\n\nPaul let out a laugh at the quick change of subject. It also helped mask a brief feeling of fear at the thought of putting her giant member in his mouth.\n\n\"I've never sucked any cock, let alone one like yours. I've had oral before though, and I would assume the mechanics are similar, but on a larger scale.\"\n\nShe nodded. \"I want you to crawl under this table and suck my dick, right now. Would you do that for me?\"\n\n\"I thought we were going to avoid any penetration today; wouldn't my mouth count as a form of penetration.\"\n\n\"You can always say no if you don't feel comfortable doing it.\"\n\n\"It's not that, at least I don't think it is. I want to understand what's happening.\"\n\n\"What's happening is you just cured my decade long writers block with a hand job and a titty-fuck, I can only imagine what you'll do for me if you take the job. And if you are accepting the job then I am amending my 'no penetration' suggestion. The interview is over.\"\n\nPaul couldn't help but smirk. Then frowned.\n\nGetting Molly off with his hands was different, yet familiar. Paul had rubbed one out enough times in his life that doing it on someone else felt more like an extension of his own masturbation, or at least he could pretend it was. Putting Molly's monster girlcock in his mouth would be something new.\n\nIf he was being honest with himself, he wanted to do it. Molly had been so big and warm in his hands and all that cum she had sprayed on him was so much dirtier and kinkier in a way he had never expereinced with any other woman. From much of the context of their conversations it was clear things could get even more dirty and kinky as this job progressed.\n\nThere was choice to be made here. Either he was in this world, with Molly, or he wasn't. He had an idea of what he wanted but couldn't admit to himself what it was. He needed more information on what he was getting himself into before the deal was locked in his own mind.\n\n\"Very well, Ms. Denton. I'd be glad to suck your girlcock. You'll have to forgive my inexperience on the subject though.\"\n\n\"Why are talking like that? Don't be weird.\"\n\n\"You just asked a guy you just met to crawl under a table and give you blowjob while you write your new book, and I'm being weird?\"\n\n\"Yes,\" she said. \"And don't worry about being inexperienced. I'm so hard-up your hands would be enough again. But I want you to use your mouth if you can. You know, take your time and have fun with it.\"\n\n\"Easier said than done, I'm afraid.\"\n\n\"Probably.\"\n\n\"This is so weird,\" Paul mumbled, not sure or caring if Molly heard him. If she did, she didn't say anything.\n\nHe made his way under the table. His knees had long since recovered so the crawling part didn't really bother him. He found it mildly fun even. He'd like to see Molly crawl to him like this. She'd be naked, crawling towards him with her tits swaying beneath her as she moved.\n\nHe really wanted to see that, not just imagine it. Taking a page from Molly and being direct, he asked, \"Would you crawl for me like this?\" he asked, his voice muffled a bit from being under the table.\n\n\"Yes,\" she responded.\n\n\"So, this isn't some dom/sub thing for you?\"\n\n\"No. Not right now, anyway. If I thought you could walk under the table to blow me, I'd have said it like that. I'm more interested in the blowjob. That's not to say I'm opposed to having power dynamics involved in our sex from time to time. I'm into to just about everything given the right environment... except feet. Don't do anything weird with your feet.\"\n\n\"Noted.\"\n\nPaul had arrived at his destination while Molly was talking. She was so hard her girlcock was pulsing. It was so big and meaty Paul didn't think he could fit even the tip in his mouth. He'd made it this far, however, so he damn well was going to try.\n\nIt took him a minute to figure out his positioning under the table. He was going to stay on his knees, but that would get uncomfortable quickly. He settled on sitting criss-cross applesauce with his ass on the floor. Molly sat on the edge of the chair so her cock was sticking as deep under the table as she could manage. It hung just below Paul's chin.\n\nHe reached up with both hands, taking Molly in a firm grip. He started stroking her like he had before, working himself up to using his mouth. He gave a tentative lick from base to tip on the underside of the huge shaft. He paused and concentrated on Molly's frenulum (the sensitive part of the penis just under the tip) knowing from his own experience it was where he would cause her the most pleasure.\n\nHe was still hesitant to take the leap of trying to take Molly into his mouth. He'd get there in his own time. Molly told him to take his time and have fun, so he was. He vaguely heard Molly typing away above as he went about his work. She didn't really seem to care what he was doing with her cock, only that he was doing something.\n\nPaul started paying more and more attention to the tip, licking around it, sucking the very nub and teasing the hole. She tasted salty and sweet, like her cum had been when he tried it earlier. He couldn't believe he had tasted her like that but didn't regret it.\n\nLike most of Molly, he liked it without understanding why.\n\nSteeling himself, he bent further forward, taking Molly's head into his mouth as best he could. It was a stretch, but he managed. It reminded him of the time when he was younger and had shoved the end of a pool noodle into his mouth so he could blow water out the other end, like a squirt gun.\n\nMaybe not as thick as that, but similar enough.\n\nHe kept her in his mouth, using the suction of his lips and mobility of his tongue to keep up the stimulation as he felt his way through his first blowjob.\n\nMolly sighed and stopped typing when she felt Paul take her into him. It had been so long since she'd had a willing mouth that she forgot how good it felt.\n\n\"That's amazing Paul. You're doing amazing. You make me feel so good,\" she said.\n\nNothing like a little positive reinforcement to train good habits, she thought.\n\nAnd Paul was reinforced. He pushed himself further, doing his best to fit as much of the new toy into his mouth as he could. It wasn't all that much more, but it was enough. He knew if he practiced, he'd get better at it.\n\nDoing what he could and using what he knew about what made him feel good when being blown, he had Molly on the brink quicker than when he'd used his hands.\n\n\"Stop, please,\" said Molly. \"I don't want to cum yet. A few more minutes so I can finish what I'm doing here.\"\n\nPaul did as requested. His jaws were tired, but not overly so. He could last a little longer.\n\nHe released Molly from his mouth with a lewd 'pop' but kept stroking her slowly with his hands. He liked what he was doing. He especially liked how Molly was behaving during this whole episode. She wasn't forceful or needy. She wasn't even critical, even though he knew he probably wasn't winning any awards for his technique.\n\nShe wanted the attention, the sensation. He wanted to give it to her. Everybody wins.\n\nHe took the tip of her girlcock back into his mouth, massaging the frenulum with his tongue, then back out, repeating the process and making sure not to put her over the edge just yet.\n\nHe wanted to see her cum again. He couldn't get over how it had literally splashed on him the first time. The pressure and speed of it coming out of Molly was something special to create that type of effect.\n\nHe worked her base with both hands and used his mouth on her tip, working in tandem to make it seem like one singular effort. Paul swore Molly got even bigger and harder as he worked her.\n\n\"That's it, Paul, make me cum again. Right down your fucking throat,\" said Molly, almost growling the words. She was so hot for what Paul had been doing for her it was almost painful that she hadn't blown her load yet.\n\nPaul ignored the aggression, chalking it up to the heat of the moment, and worked to finish her off.\n\n\"Right now... jesus fuck... I'm cuming again. You're making me cum again!\"\n\nA water hose shot into Paul's mouth. The pressure of Molly's cum all but forced Paul to swallow. There was no way for Paul to handle it all so he eventually gave up and just let the cum go wherever it could find room. He was more worried about keeping up the stimulation so Molly could finish properly. There was nothing worse than a ruined orgasm.\n\nPaul dated a girl once who was into doing that bullshit. It ended quickly with her.\n\nJulie came down from her orgasm and laid her head on the table above where Paul was below it. She wanted to keep writing, but Paul just made her feel too good to be able to accomplish anything more than recover. Her breathing was heavy, and her balls ached from all the work they put in today. Orgasms were great, but they were intense and draining (literally), especially for someone like her.",
        "Paul remained sitting under the table, massaging Molly's girlcock. It had softened a bit this time, but not completely. He had a sneaking suspicion it was a temporary development.\n\n\"Can you come out from under there, please?\" asked Molly.\n\nPaul crawled out and sat back in his chair across from his new boss.\n\n\"Good?\" he asked, seeking validation.\n\n\"Very much so, yes. Thank you,\" praised Molly, her head still down.\n\n\"I'd like to get better, so if you have any after-action notes for me, I would like know.\"\n\n\"I'll email them to you,\" said Molly. She finally lifted her head up high enough to see Paul. He was covered in her cum again. It would probably be a common sight for them both in the weeks to come.\n\n\"You wore me out,\" she said. \"I didn't expect things to play out this way. At least not as fast as they did.\"\n\n\"You know what they say when inspiration strikes...\" replied Paul letting himself trail off.\n\n\"Consider me inspired.\"\n\n\"So, now what?\"\n\n\"We should probably get you cleaned up. I sent everyone home for the day, so if you'd like to come up to my apartment you can get washed off properly.\"\n\n\"Up to your apartment?\" asked Paul, \"You live in the building?\"\n\nMolly nodded. \"Me and most of my staff live in the building. Floors sixteen through nineteen are apartments. I have the whole twentieth floor to myself. Perks of being the owner.\"\n\n\"You're staff? Will they see me like this if we move to your apartment. I can wipe myself off, but I don't really have a change of clothes with me.\"\n\n\"No. I have a private elevator that goes straight to my place. It will just be the two of us. You should come up. It will give us a chance to talk while we get cleaned up. We aren't done getting dirty for the day... probably... but we smell of cum and sweat and my shower is huge. I want to wash you.\"\n\n\"I like how straightforward you are about all this. Wish I was as confident, it always feels awkward when I say things like that. 'Let me fuck your tits',\" Paul said using a sarcastic voice. \"It's a weird request when you say it out loud.\"\n\n\"Maybe don't say it sarcastically. I get your meaning though. It's not really confidence, but pragmatism. All you can do is say no, right?\"\n\n\"I could run. Flee through the streets as you chase me with your Godzilla cock.\"\n\nMolly laughed and approached Paul with a package of baby wipes she had picked up from the table. Paul had used some of them earlier after the first time she came on him.\n\nBefore she did anything, she leaned in and kissed Paul.\n\nMolly wasn't sure why she kissed him. She wasn't sure what was happening yet, but it was different from the other times she had hired for this position. Simply put, Paul was better.\n\nShe backed away a step and pulled out a few wipes and wiped Paul's face free of the residual cum before leaning in and kissing him again. She could feel his cock poking her, she looked down and saw he was hard again. She wanted to play with it. She didn't want to do it here, though, they had done enough damage to this room. The cleaning crew was very understanding about this sort of thing, but no need to make it worse.\n\nPaul was happy to have whatever Molly was offering. Right now, she would lean forward, kiss him for a moment, then back off so she could wipe off some of the more egregious globs of cum. It was only a few minutes before she was done.\n\n\"Are you coming up?\" asked Molly. \"I want you to stay the night. Don't worry about your suit. I will send it out to have them dry cleaned in the morning. If you stay, you most likely won't need them for a while anyway.\"\n\n\"I didn't come here planning to stay the night. I want to, but it's not just clothes. I don't have a toothbrush, or any sundries for that matter, and if I start work tomorrow, I will need other work clothes.\"\n\n\"I have extra toothbrushes, and I'll have one of my staff get you a decent set of clothing for the morning. You can go home if you want, but I'd really prefer if you didn't.\"\n\nShe took his hand and started to lead him to what he assumed would be the elevator. He followed easily behind, watching her ass as she walked.\n\n\"No need to make a decision right now,\" continued Molly, \"just think about it. Grab your clothes and let's get out of here. You at least need to come shower.\"\n\nThe trip up to Molly's apartment was exactly as she said it would be. Short and private. The elevator doors opened right into the main room like it was an actual door.\n\nPaul was floored by the size of Molly's place. She wasn't exaggerating when she said the whole top floor was hers. The space was massive. Even more surprisingly to Paul, however, was that he didn't notice many walls. It was an almost entirely open concept. You could stand anywhere in the apartment and see anywhere else.\n\nThere were spaces as you would expect for any home. A bedroom, a living room and a kitchen, among other areas, but none of them were walled off. The only walls he did notice were off to the side. Some next to the kitchen and just some off center from the bedroom area.\n\nBathrooms.\n\nPaul also noted the apartment kept with the theme of having sparse, but purposeful, decorations. Nothing much hung on the walls, and if Molly had anything in the way of 'Live Laugh Love' posters, she hid them, along with any other personal nick-nacks she might own.\n\n\"This is it,\" said Molly, \"open and minimal, but spacious. As I'm sure you've noticed.\"\n\n\"Very nice. Different from what I'm used to, seeing as a live in a shit box with walls.\"\n\n\"Walls are dumb. I'd have an open bathroom if I could, but I do occasionally have guests and I don't think they would want me watching them pee.\"\n\n\"You can watch me,\" Paul said, surprising himself. He didn't know why he said it except that maybe Molly's habit of being forthright was rubbing off on him. He felt awkward and tried to save himself, \"you know, if you're into that sort of thing.\"\n\n\"I'll even hold it for you,\" she replied, no mirth in her voice to suggest she was just messing with him. \"For now, we should probably shower.\"\n\nEvery time Paul had thought he had a handle on Molly she would throw him off balance again. He was getting the picture that the woman was eccentric. The way her building and her apartment were decorated, the interview itself, the way she kept being honest with him about her intentions and what she wanted him to do, it all fit well into that odd box he had been putting together of his experience with Denton Publishing so far.\n\nHe followed Molly as she made her way through the apartment towards where the main bed was tucked closer to one of the corners. It was a large bed with enough pillows on it to restock a mattress store.\n\nCock or not, she was definitely a woman.\n\n\"You can put you stuff anywhere, and I'll get it sent out when I can. Bathroom is through that door behind you. Feel free to use anything in the apartment, there is plenty of food and booze if you like.\"\n\n\"Thanks. Shower first?\"\n\n\"Yes. Then I need you to titty-fuck me again, I need to test something,\" said Molly.\n\n\"Am I a guinea pig now?\"\n\n\"Of sorts,\" said Molly.\n\n\"If shoving my dick between your tits is indicative of your experiments on me, I'm ok with it. Though, shouldn't I do that before we clean ourselves. Why wash off just for me to get us all dirty again?\"\n\n\"I want your cum on me when I write, and I want you to cum from fucking my tits. That is what worked for me earlier. I want to see if it was a one-off reaction or if for some reason titjobs are a specific spark for me right now.\"\n\n\"Is that how it works? It's not all sex that helps you, but one act specifically?\n\n\"Only my third book was driven by one specific act. The rest were just from sexy stuff in general. Can't really control what works, you know?\"\n\n\"I get it. Was it titjobs for your third book?\"\n\n\"No,\" she said. \"Anal. My girlcock was buried in my editor's ass while I wrote almost every word in that book.\"\n\n\"Neat,\" said Paul. He looked down at Molly's monster and shuddered internally. There was an inherent understanding that Molly was going to want to fuck his ass at some point, but knowing it and doing it were two sperate things.\n\nThey made their way into the bathroom and got into the shower together. Paul felt out of place in the unfamiliar, luxurious setting. It was made even worse when Molly insisted that she be the one to wash him down, instead of him doing it himself. His concerns were eased quickly by Molly when she made sure she was pressing and rubbing her wet, soapy body against him as she worked. Feeling her generous and slippery chest was especially relaxing.\n\nPaul started thinking again as Molly took care of him. She had said that being the dominant partner wasn't much of a part of it for her, but she was the only one of the two who knew where this was going and what she wanted, so Paul resolved to let her take the lead as she saw fit. If he felt like being the aggressor later when he felt more up to it, he was sure Molly would be all for it.\n\nThey finished up in the shower with no more than a little groping and kissing. Molly was hard again but didn't seem in any urgency to take care of it, more concerned with Paul, who had been horny since his under the table oral session. He was aching for relief.\n\nMolly dried them both off, still wanting Paul to stand by while she did the work. He wasn't sure why the washing and drying was a thing for her, but he was getting used to not knowing why Molly did most things\n\nWhen she finished, she grabbed a bottle of lube out of the nightstand and handed it to Paul, then laid down naked on the bed. She was on her side and laying on the very edge, her front facing towards him. She spent a second to arrange her tits, stacking and aligning them one on the other and placed her arm on top to keep them in place and squeeze them down into the bed.\n\n\"There,\" she said, \"all ready for you. Lube up and fuck my juicy tits like you own them.\"\n\n\"Are you into dirty talk? You've said things like that a couple times now, I don't know whether to respond in kind or just let it go.\"\n\n\"I like saying dirty stuff, could care less if you do.\"\n\n\"Sure, makes sense,\" said Paul.\n\nHe couldn't help but admire the way Molly looked in this position. She was all curves. Her hard girlcock was laying half on, half off the bed from being so close to the edge, and it was throbbing noticeably. That wasn't where Molly wanted his attention right now, however.\n\nHe poured the lube Molly had provided on her tits and rubbed it in, moving his hands all around the soft mounds and in between her cleavage, where she wanted him to fuck her. He used more lube on himself before pressing the tip of his dick between Molly's breasts and sliding himself into them.\n\nIt was like her body swallowed him; her tits were so massive.\n\nIt was a different angle then how he had done it earlier. Instead of stroking up between her tits, he was pressing straight in, like he was trying to stab her in the heart with his prick. They were the same tits, and it was still a titjob, like before, but somehow fucking into her cleavage this way made it feel new and different.\n\n\"That feels nice,\" said Molly as Paul fucked, \"I was never all that into titty-fucks before this, doing it only when asked, which with tits like mine happened often, but I'm really liking it with you. It's soothing almost.\"\n\n\"Two thumbs up on my end as well,\" said Paul, actually giving Molly two thumbs up.\n\n\"I can't put my finger on you,\" said Molly, smiling at his antics. \"Your professional, reserved, even proper at times. Yet you've taken everything I've been throwing at you absurdly well, including an oversized girlcock. You even make jokes.\"\n\n\"You're hot,\" he said, as if that explained everything.\n\n\"That's it?\" she asked.\n\n\"You're very hot... and you let me cum on your tits.\"\n\n\"And my cock?\"\n\n\"Hot so far,\" he said absently, caring more about his cock than hers at the moment.\n\nMolly went quiet. The next few minutes were silent save for the slapping sounds of flesh against flesh. Molly's eyes were closed and she concentrated on the feeling of a hard dick sliding in and out between her breasts and letting her thoughts take her wherever they wanted.\n\nPaul's eyes were open. He couldn't get enough of the way everything was laid out in front of him. He'd always been a visual learner.\n\nHe was also enjoying the buildup to his eventually orgasm. Each pump of his dick sent a wave of pleasure through him and an urgency to his balls.\n\n\"I'm close,\" he said.\n\n\"Good. Don't pull out when you do, stay in between my tits like last time, please.\"\n\n\"Ok.\"\n\nPaul lost himself in bliss. He moved Molly's arm from where it was laying on top of her tit-stack and replaced it with his own hands. He leaned forward, using some of his body weight to press the soft flesh down harder, creating more, tighter friction.\n\nHe vaguely heard Molly gasp but couldn't spare the blood to his brain needed to figure out if the gasp was of pain or pleasure.\n\nHe put more weight down on Molly, wanting to choke his own dick with her cleavage, and came. His body spasmed each time a rope of his hot cum shot out from him until there was nothing left.\n\nIt turned out repositioning himself to be leaning over Molly's while he finished was fortuitous because he all but collapsed forward, draping himself over her side until his head and shoulders fell on the bed behind her.\n\nHe was breathing hard and not quite all there, lost in the intensity of his second orgasm of the day, but he made sure he held himself in a way that allowed his softening member to stay where it was and not slip out from Molly.\n\n\"Damn Paul,\" she said after a minute, \"can't say I expected the ending you gave me. It hurt, but not in a bad way. Like pinching my nipples, except it was the whole boob.\"\n\n\"Sorry,\" he said absently.\n\n\"Don't be. I hope you take more freedoms with my body like that, keep me on my toes.\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\"Said no woman ever.\"\n\n\"You think men are the only ones who like experimenting?\"\n\n\"It was a joke.\"\n\n\"I know. You can get up now. Would you mind getting my laptop for me, I'm going to grab a few other things before I start writing again.\"\n\n\"Sure,\" said Paul, extracting himself from their entanglement.\n\nHe walked across the apartment and retrieved the laptop for Molly and quickly returned with it. Molly had gotten off the bed as well and was currently rifling through a large wardrobe resting against the window on the external wall. When she turned around and started walking back towards the bed, he could see his cum dripping down between her boobs. She made no move to wipe it.\n\nIn her hands were two objects Paul recognized, even though he had no experience with them. They were butt plugs. They were different sizes, one about the two inches long and the width of his thumb, the other a bit longer and twice as wide at the base as the first.\n\nShe handed him the bigger one.\n\n\"Put this in my ass once I lay down again, please. You can use the same lube as before for it.\"\n\n\"And that one...?\" he pointed to the smaller one.\n\n\"Is for you. I assume you're an anal virgin?\"\n\n\"Correct.\"\n\n\"We need to start small then. You'll be surprised how quickly you can adjust though.\"\n\n\"This is so weird,\" he said, repeating himself from earlier.\n\n\"No. It's not. You won't be the first or last man to take a dick in the ass. Not even the first straight one.\"\n\n\"And here I thought I was special.\"\n\n\"To me, maybe, not in general.\"\n\nThey both balked at that statement. Molly had finally said something that even gave her pause.\n\n\"Thanks.\" Said Paul, needing to say something before things got awkward between them. \"So. Who's first?\"\n\nMolly sighed, appreciating that he brushed passed her too soon admission, at least for the moment.\n\n\"You. Then me while I write. Go put your hands on the wall by the head of the bed and lean over a bit like your about to get a prostate exam, it will go in easier that way.\"\n\n\"Sure thing,\" he said a bit sarcastically. Not for the first time, he thought about how weird his day has been.\n\nMolly lubed up the small plug and followed Paul. She placed the tip to his entrance and started working it. She was slow and methodical, never putting more pressure on his hole than it was willing to take. After a few minutes, Molly had it inserted to the base. She played with it a little more just to make sure Paul's sphincter wasn't going to push it out. Then she left it there to do its job of losing and widening.\n\n\"All done. We will go up a size before we go to sleep, but this is perfect for now.\"\n\n\"Great,\" Paul grunted.\n\n\"I'm going to write now.\"\n\nPaul watched as Molly laid on her stomach and planted her elbows down into the bed. Her laptop was in front of her. She opened it and immediately started to type.\n\n\"Did the titty-fuck work like you suspected or is this just the 'in-general' type of spark?\" asked Paul, genuinely curious how this was all working for her.\n\n\"Titty-fuck. Quiet now. Need to concentrate. Butt plug, please.\"\n\nAlways so polite, thought Paul.\n\nHe crawled onto the bed next to her while she typed away at her keyboard. He lubed up the plug she had given him and made to do as she asked but stopped. Her ass was perfect, much like the rest of her. He bent down and kissed one of her cheeks.\n\nShe wanted him to take freedoms, so he was.\n\nHe sat there kneading and playing with her firm, round ass, and brushed his finger across her hole as he played. He applied a few drops of lube directly to his finger and started working it around Molly's rim. He would get to the plug eventually, but right now he wanted to use his fingers.\n\nHe inserted one finger, one knuckle deep. Then two knuckles. Then two fingers. He lost himself in thought, again, as he toyed with his new boss' ass.\n\nHe thought about whether this job was really the right move for him. Given what he'd experienced of it so far it was going to be a lot of sex. Great sex, probably. But was that the best way to advance in his career? He'd essentially be sleeping his way to the top with a co-author credit on a book he didn't write. It was a dilemma he never thought he'd have to work through.\n\nThen there was Molly herself. She was professionally impressive. It was obvious her apartment was built for one, though. One nightstand by the bed, one chair in the living room with a couch that looked best used for looks rather than for guests to sit on. She's been alone a long time. Once she was done with her book, would she want to be alone again?\n\nWould he?\n\nThen he thought again about the actual logistics of this job. The sex. The blowjob earlier. Even the butt plug he currently had lodged in his ass weren't so bad. He found he liked what he'd done so far.\n\nBeing fucked in the ass by a girlcock that would look more at home on a large sea mammal rather than on a beautiful woman, however, he didn't know if he could do it.\n\nHe knew he could back out whenever he wanted, she couldn't force him to stay. He thought he had made this choice already, but every time he turned around, or got off in this case, the post-nut clarity made him question everything all over again.\n\nHe imagined what it would be like to have Molly inside of him. To stretch his ass until it gaped and she filled it with one of her massive loads. Would he like it once he got used to it? Did he want to get used to it?\n\nHe came out of his thoughts not really knowing how long he had spaced out. He was still using his fingers to massage Molly's asshole.\n\nMolly had stopped typing. He didn't know when, and her hands were still positioned on the keyboard like she meant to be typing, but her head was laying down on the bed. She looked to be sleeping.\n\n\"Molly?\" asked Paul quietly, testing to see if she was awake.\n\nNo response. Her breathing was smooth and melodic. The look on her face serene and beautiful. He removed his fingers and sat back thinking on what to do next. He was in a strange house, naked, sitting next to an equally strange and equally naked girl. He had nowhere to go and nothing to do. He looked at the plug still in his hand, he was supposed to put in Molly, but he'd not gotten around to it during his anal ministrations.",
        "He didn't have the answers he wanted, nor did he think he would get them tonight. There was one thing he could do, though, to help his qualms. He could continue this path. He could stay with Molly and if not enjoy, then endure, whatever may come of it. He could also stick the bigger butt plug in his hand in his own ass and at least put in the effort to see if he would like it.\n\nAfter some experimentation removing and then inserting things into his butt, Paul was done and had successfully switched his butt plug for the bigger one. He was tired from all the action of the day so with his mission accomplished, he laid down next to Molly, pulling covers over them both, and fell asleep with a quiet mind.\n\n* * * * *\n\nPaul woke up the next morning to the feeling of something hard poking him the stomach. Opening his eyes, he was equally confused to find a large and perfect pair of tits sitting only a few inches away from his face. It took putting the two sensations together, a hard poke and a giant pair of tits, to bring him back to where he was.\n\nHis boss's apartment.\n\nHe looked around to find that either his body had slid further down the bed, or Molly had slid further up from where he had positioned himself the night before. Looking to where Molly's head should be, he found her laying quietly on her side playing on her phone. She turned to look at him and smiled.\n\n\"Good morning,\" she said. \"Sorry I passed out on you last night, must have been more tired than I thought.\"\n\n\"It's okay,\" replied Paul.\n\n\"Would you like coffee?\"\n\n\"Very much so.\"\n\n\"I hope you like it black; I don't keep any milk or cream in the house. I have sugar though.\"\n\n\"Black is great.\"\n\n\"Grace should be here soon with some clothes for you.\"\n\n\"Ok,\" said Paul. He couldn't help but notice that Molly was acting a little differently than she did yesterday. Her otherwise blunt and honest personality seemed subdued.\n\n\"Is there something wrong?\" he asked.\n\n\"No,\" she replied. \"Thank you for tucking me in last night. It was also very... nice... waking up next to somebody again. It's been a while.\"\n\nThat was more like it, thought Paul.\n\n\"No problem. You look adorable when you sleep.\"\n\nShe blushed.\n\n\"What was that?\"\n\n\"What?\" asked Molly.\n\n\"You blushed.\"\n\n\"So?\"\n\n\"You had me crawl under a table to suck your dick an hour after meeting me without hesitation or awkwardness. I call you adorable and your cheeks go cherry. It's interesting, is all.\"\n\nMolly smirked. She wasn't sure how to respond to that, so she didn't. Sex was a part of her. Personal compliments weren't.\n\nShe got out of bed and walked naked across the apartment to the kitchen. She pulled two mugs from the cabinet and filled them from the steaming coffee pot on the counter.\n\nWalking back towards Paul she saw where his eyes were locked. She looked to her girlcock to find it hard and pointing directly at him as she moved. She looked back to Paul who now had something of a contemplative look to his face, though he was still only staring at her swaying prick.\n\nShe reached the bed and handed the entranced man a mug, breaking him out of his thoughts.\n\n\"Thank you,\" he said. \"Mind if we talk a minute, some personal stuff?\"\n\n\"Sure,\" replied Molly. She sat back on the bed and sipped her coffee, waiting for Paul to start.\n\n\"You're hard a lot. Does it always mean you're horny, or is it a part of being a dickgirl?\"\n\n\"I'm horny even when I'm not hard, which is part of being a dickgirl. So, both?\"\n\n\"I put the butt plug I was supposed to put in you, in my own butt. I take it the idea is to increase the size slowly until it would be easier for me to take you?\"\n\n\"I was wondering about that when I woke up empty,\" she said. \"And yes. The plugs should make our first time smoother. For both of us. I like being fucked in the ass, too, and have good experience with it, but I still use the plugs if it's been a while. Which it has.\"\n\nPaul nodded at that and went quiet, back to being contemplative.\n\n\"I was thinking last night,\" he finally said, \"while I was fingering your ass an all.\"\n\n\"That felt really good. You pretty much messaged me to sleep doing that,\" said Molly interrupting. She wanted him to know she was not just ok with what he had done, but that she liked it.\n\n\"Glad I could help,\" he smiled, then continued his thought, \"Have you ever been to the dentist to have any serious work done? Pulled teeth, cavities or the like?\"\n\n\"Once or twice,\" she answered. I was an odd question.\n\n\"You know how when a dentist needs to numb you up, they do the same thing each time. The use a weak jelly-like topical first to numb the area where he will eventually inject the Novocain. The idea being to lessen the pain caused by the needle. I didn't, but that was the intent. There is no way being stabbed in mouth wouldn't hurt, no matter how much you tried to numb the surface.\"\n\nMolly sipped her coffee and nodded.\n\n\"I always hated the topical way more than the needle. They would stick that jelly in your mouth and then leave for an hour before they started doing the actual work. I hated it so much that at some point I had to tell my dentist to knock it off with the jelly and just stick me, get to the damn point of it all, you know?\"\n\n\"You think the plugs are like the jelly.\"\n\n\"I sure do,\" said Paul, \"and I think I want you to skip the jelly and stick me, so to speak.\"\n\n\"You're afraid you won't like having sex with me,\" said Molly.\n\n\"No. I love what we've done so far. I'm afraid I'll hate being fucked in the ass. Which would be a deal breaker for both of us, I assume.\"\n\nMolly nodded again. She had enjoyed they had done so far, as well, but there was no way she could continue being sexy with him and not need to fuck him for real. The odd thing was that she felt that she would refrain from fucking him if she could, if only to keep him. There wasn't enough willpower in the world for that to happen, though.\n\n\"Are you sure that's how you want it? The plugs do make it easier, unlike the jelly.\"\n\n\"How many size changes would you say I needed?\"\n\n\"At least three. Four would be better.\"\n\n\"No thanks. That sounds like it would take too long.\"\n\nPaul finished his coffee and set his cup down, getting to the real point of why he wanted this.\n\n\"I like you, Molly. More than as a boss. If we can't figure out the mechanics of this, I don't want to get any deeper with you than I am now. Job or no job.\"\n\nMolly couldn't help but feel the same. It wasn't supposed to be like this. There weren't supposed to be feelings involved. Just art and sex.\n\n\"Fine,\" she relented. \"But we do it my way, and we go until we finish. No stopping in the middle because you're unsure or uncomfortable.\"\n\n\"I can work with that,\" said Paul.\n\n\"Good,\" replied Molly, pulling something out her nightstand again before adjusting her position on the bed. She was sitting up with her back against the headboard. Her legs were spread so that her balls were hanging low, resting on the mattress, and her girlcock was sticking up at an angle, pointing towards the foot of the bed.\n\n\"Come here, please,\" she said to Paul, beckoning him with one hand while her other held a bottle of clear liquid.\n\nPaul complied and moved over to where Molly was sitting. He had an idea of what she wanted from him and swung a leg over so he could be straddling her lap. It was reminiscent of yesterday during his interview when she first had him fuck her tits, complete with the feeling of her girlcock faintly rubbing between his ass-cheeks.\n\nThe feeling felt more ominous this time, most likely because he knew where that cock was eventually going to end up, sooner rather than later this time.\n\nMolly took the bottle she held, opened it and started pouring generous amount over both of their fronts. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nThere was no label on it, but Paul could tell it was baby oil. He watched Molly drench her tits and start rubbing it in, coating them both until they shined. Discarding the bottle, at least for now, Molly used her hands to give Paul a show.\n\nShe rubbed her mounds thoroughly, occasionally lifting them and letting them drop. They would bounce, jiggle and drip excess oil onto her stomach each time. The sounds they made as she played and slapped her flesh together made Paul forget all about that he'd soon be impaled by a human baseball bat.\n\nShe played with her nipples and stared Paul down, letting him know that every move and every sound she made was specifically for him. She grabbed the bottle of oil again and leaned forward to drench Paul's cock.\n\nSetting the bottle aside again she took Paul into her hands and started massaging his dick with as much attention as she had given her chest. She had used far more oil than she needed to so that when she stroked and rubbed and massaged, her hands made wet, slurping sounds. She gripped his shaft like it was a microphone and used her thump to rub softly just below his tip.\n\nPaul gasped and felt like he wanted to cum already. Molly must have noticed because she let go of his cock completely and went back rubbing baby oil onto herself.\n\nNot wanting to be a spectator anymore, Paul got involved, burying his hands and fingers into Molly's oiled and giving tit-flesh. He had never felt something so beautiful. He had always been a titman, but the last two days with Molly had rocketed him into a full titty fetishist. It wasn't a rare, original or particularly kinky fetish, but if he could move in and live between this girl's mammary mountains, he would.\n\n\"Hold out your hands,\" said Molly.\n\nHe did, and Molly poured even more baby oil into his cupped hands.\n\n\"Reach behind you and coat my girlcock. Be generous with it and get more if you need it. I need to be as drenched as you are right now.\"\n\nPaul did as he was asked. He leaned up until he was sitting straight and brought his hands behind him. He grabbed Molly's thick rod and started to rub and cover her in the slick substance. He pinned her rod against him, and he could feel her tip rubbing part way up his back. He brought one hand around and cupped it, telling Molly he needs more oil. This repeated a few more times until Paul was satisfied with the slickness of the shaft in his hands.\n\nThe next scene would have been an odd one to anyone not familiar with the context. A large breasted woman lay on a bed with a man straddling her. She alternated between jerking off the man and playing with her tits.\n\nAt the same time, the man was leaning back and seemingly trying to jerk off the woman with both has hands and his butt cleavage. They both glistened with oil in the morning light. The squelching sounds were lewd and the breathing wash heavy.\n\n\"Take out your plug,\" said Molly. \"I'm going to fuck you now.\"\n\nPaul nodded and worked out the plug. It made a plopping sound, but it was lost in the ambiance of their oiled bodies.\n\nWhile Paul was working with the butt plug, Molly squirted even more oil on her and Paul. Her bed sheets were going to be trash after this, but if her plan worked, it would be worth the sacrifice.\n\nShe grabbed Paul's head and brought him down to her for a kiss. As they made out, Molly shimmied a bit further down the bed, so she was laying flatter with only her head and shoulders still on an incline. This brought more of Paul's body weight down on her, but his knees were still doing the brunt of the work.\n\nPaul had never been hornier in his life. He was laying on top of Molly and felt it as she shimmied her chest so he could feel her tits slide back and forth on his chest. He hard nipples cutting through the oil was a sensation Paul didn't know if he could ever match.\n\n\"You need to line up my tip with your ass and old it there until I can slide in the head. The butt plug you had in might have been small, but it should make this part a little easier. After that, things will get... more.\"\n\nPaul nodded and did as he was told, reaching back and aligning Molly's giant girlcock with his own hole. If he were going to back out, even though he said he wouldn't, this would be his last chance. As he thought that, Molly kissed him again and stuck her tongue as far into his mouth as she could manage. She tasted like coffee.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nThe pressure began slowly. Molly knew what she was doing and very much wanted to do whatever she could to make sure this was a good experience for Paul. It won't be as good or easy as it would have been if she had prepped him better, but it was too late for that now.\n\nShe pressed harder, Paul still holding her aligned. She could vaguely feel that his crown was about to give so she could slip in, so she went back to sliding her tits back and forth between their oiled chests to try and distract him. She knew the power of her huge breasts and intended to use it to the fullest.\n\nMolly applied more pressure, and just like that, she felt herself enter Paul.\n\nHe let out the loud gasp. For better or worse, he was no longer and anal virgin. His last and only remaining cherry was pooped and gone forever. Instinctively, Paul felt himself trying to push the intruder out, but Molly wouldn't let him, keeping herself pinned inside him. She wasn't moving, letting him adjust to the initial size of her.\n\n\"You feel so warm,\" said Paul.\n\n\"That was supposed to be my line,\" replied Molly.\n\nThey both laughed and Molly took the relaxed moment to press further and inch more into Paul. It worked, not seeming to phase Paul any more than he was.\n\n\"You can go faster,\" he said after a minute more. \"It doesn't hurt and want to know what it's like when I have all of you inside me.\"\n\nMolly held the man tighter into her body, taking more of his weight on herself. She brough her feet up so her knees bent and provided her with more leverage. Once again, she rubbed her tits to bring Paul's attention away from what she was about to do.\n\nShe thrust, hard this time, slipping more inches inside, the copious lubricant doing its job.\n\n\"Oh jesus... fuck, woman, you're so god damn big,\" cried Paul.\n\nMolly kissed him. \"You're doing great. The hard part is getting it all in. After that you can adjust properly and it wont feel like so much.\"\n\n\"Adjusted or not, I don't think I'll ever agree it doesn't 'feel like much'.\"\n\nMolly thrusted again, sinking slightly deeper, and waited. She didn't press further for a while, choosing instead to gyrate what she did have inside him to help widen the gap she was forming. He felt so unbelievably tight around her girlcock that it amazed her. She had been with men much smaller than Paul who couldn't sheath her this perfectly. It was one more odd thing for her to add to the list about this man.\n\nShe felt as if she was ready to cum already, could have cum with only the few inches she had inserted so far, but she needed to hold out until she was hilted. Paul needed the whole experience if he was going to have enough information to decide whether to stay or not.\n\nShe very much wanted him to stay. She would find an editor she didn't want to fuck if she needed to if it meant she could have Paul here, in her bed.\n\nBut he didn't need to know that yet.\n\n\"I'm going to increase the pace,\" she said, \"you feel too good, and I already want to cum.\"\n\nPaul moaned.\n\nMolly knew it was a good sort of moan, so she leaned into it, \"that's right baby, first I'm going to fill you with my giant girlcock, then I'm going to fill you with so much girlcum I'll make you drunk off it. Would you like that?\"\n\nPaul moaned again and nodded, not really wanting to spare the effort to respond verbally.\n\nMolly started up a rhythm with her thrusts. She worked in and out of Paul gently, but forcefully. Each new inch she felt slide fully into Paul brought her into a new world on sensation. If she didn't know any better, she could have sworn she was being actively massaged from the inside.\n\nEventually, and with no shortage on effort and patience, Molly stroked into Paul one last time and felt his ass finally hit her thighs, both of their ball sacks kissing between them as they fully merged for the first time.\n\n\"That's it, I'm in,\" said Molly. \"You have all of me now.\"\n\nHer last words sounded as if she were referring to her cock, but in her own head, she meant much more than that.\n\nThe two of them rested from their efforts together. Paul laid on top of Molly absently playing with her nipples, while Molly lay on her back enjoying the weight of her new lover and gladly waiting until he could adjust fully to her size. Knowing she would cum very soon after fucking in earnest, she was in no hurry to do so, enjoying where she was. The intimacy of it was intoxicating.\n\nIt could only last so long, however, as her need to cum began to exceed her need for him. She rolled them both over so that she was on top now. She placed Paul's legs inside her arms, so they rested on her shoulders and leaned until his ass was slightly in the air.\n\nShe pulled out her cock until only the head was left in him and applied more oil.\n\nPaul's eyes widened in worry of what was about to happen, but once she started stroking in and out of him in this position, he locked eyes with Molly as if in surprise.\n\nIt hurt. The ache in his ass could rival some of the most intense sensations of his life, but with each successive stroke, in and out, Paul felt the subtle shifting from pain, to pleasure, inside his body.\n\nThey said nothing. Molly quickened her pace and hammered down into Paul. Her tits drooped and bounced on Paul as she pistoned, silently hoping he could still find solace in the beauty and softness of the most female parts of her, while the most non-female part of her tore into his body.\n\nPaul felt an unfamiliar pressure with each of Molly's thrust. It was the pressure of being filled, but of something building. It would spike on each of her thrusts, then ebb as she left him empty again. He had no experience so he couldn't place the feeling.\n\nThe methodical drumming of their bodies slapping together filled the room. Paul grunted and Molly moaned, neither wanting or capable of stopping, or even slowing, their rutting regardless of what the other wanted.\n\n\"I'm close baby,\" said Molly, \"Your ass is going to make me cum so hard.\"\n\n\"I... I think I'm going to cum too, why am going to cum?\" he asked breathlessly, still confused by the pleasurable sensation originating in his ass. He could feel it all the way through him now.\n\nMolly would have told him if she could. She had both caused and experienced anal orgasms before. It was different for men since she didn't have a prostate, but it all added to the same thing.\n\nHearing that he she was making him cum from pounding his ass sent her over the edge. She buried herself and exploded into Paul. She bucked her hips with each spurt and felt each time she drained from her balls into the warm hole it occupied.\n\n\"Oh fuck... I can't stop cuming...,\" she grunted, still spasming through her orgasm.\n\n\"Keep going, just a bit more,\" said Paul. \"More... More... shit!\"\n\nPaul's cock twitched and Molly knew he was there, about to cum. She grabbed him and stroked, adding more sensation to his orgasm. He came and started spraying his seed all over Molly's hand. She bent herself awkwardly so she could fit Paul between her hanging tits. If her breasts were any smaller, it wouldn't have worked, but Paul was long enough and her tits hung low enough that she swallowed him between her soft flesh, squeezing them hard and bouncing them up and down his overly excited dick while she continued to fuck and massage his crevice.\n\nComing down took time. Molly collapsed on top of Paul, letting his legs fall to her sides. She stayed inserted in him but was no longer thrusting, just resting. There was some intermittent kissing and petting, but neither of them talked, nor did they make any moves to separate.\n\nMolly squished into Paul lightly, causing some of her come to drip from him. She reached between her tits and made show of rubbing Paul's cum into her tits before licking her finger, like he had done the day before.",
        "She would eventually need him to cum on other parts of her body, inside her mouth and ass most notably, but for now she was absolutely addicted to feeling his juices running down, between and over her titties\n\nThe was no knowing how long they would have stayed like that because a *ding* rung from across the room. Someone was in Molly's elevator.\n\nPaul panicked for a second thinking the doors were going to open and someone was going to walk in and see him naked and impaled. Molly quickly soothed his worry.\n\n\"The doors won't open until I answer it, like a regular door. Relax. It's probably Grace with the stuff I asked her to bring for you.\"\n\n\"She knows you're a dickgirl right? And what position I was actually interviewing for?\"\n\n\"Yes...\", said Molly hesitantly, worried her beautiful morning was going to turn sour.\n\nSomething clicked for Paul, \"Grace is a dickgirl too, isn't she? Tall, big tits, crazy hot.\"\n\n\"Yes,\" Molly repeated, \"Does that bother you?\"\n\n\"Oh, my sweet girl. I can literally feel your dick softening in my ass as we speak. Why would one more dick in the room bother me?...you know, as long as this job isn't to 'inspire' her as well?\"\n\nMolly laughed and shook her head.\n\n\"That's good. My ass is a mess and couldn't handle being a muse for more dickgirls.\" He leaned up and kissed her, squeezing his ass around her cock in the process, \"I also wouldn't want to be seen as greedy, know what I mean?\"\n\nThe elevator dinged again.\n\n\"No,\" said Molly, slipping out of Paul the final few inches, \"we wouldn't want that.\"\n\nShe leaned down and kissed him again before getting up and moving to answer the door. She didn't bother covering up, which Paul thought was odd because he was currently frantically moving to hide himself with the bed covers.\n\nPressing a button, Molly opened the elevator and Grace walked in. She stopped short at seeing Molly unashamedly naked, oiled, and covered in cum.\n\nShe looked at Molly, then to the bed where Paul was sitting. She stared until he awkwardly waved to her, then brought her attention bock to Molly.\n\n\"On the first day?\" Grace asked quietly, sounding more worried than anything else.\n\n\"Yes. We'll talk about it later. Did you bring what I asked?\"\n\nGrace nodded and handed Molly the bag she was holding.\n\n\"Thank you,\" she said. \"I also need you to get Paul a laptop with all the editing software he might need. He'll be starting his new job later today.\"\n\n\"Looks like he's already started,\" said Grace with a smirk. She leaned in conspiratorially, \"Are you going to share?\"\n\nThey both knew she was just being a smartass, but Molly couldn't help the anger she felt at the idea of Grace touching Paul. It must have shown on her face because Grace backed up quickly in surprise.\n\n\"Shit. Sorry, Molly. I was kidding.\"\n\n\"I know,\" she replied, calming herself, \"like I said, we'll talk about it later.\"\n\nGrace nodded and went back into the elevator.\n\n\"Should have the laptop for him soon, I'll leave it on the desk in your office downstairs. Will he be needing an office as well?\"\n\n\"No. Bring a workspace into mine for him.\"\n\n\"Sure.\"\n\n\"Thank you much, we should both be down... after breakfast.\"\n\n\"I have no idea what that means with you standing there dripping.\"\n\n\"Bye, Grace,\" said Molly, closing the doors.\n\nPaul called from the bed, \"Did I hear breakfast? I'm crazy hungry after all this work I've been doing.\"\n\n\"I'll bet,\" said Molly walking back to him, \"and you've performed more than exemplary so far. Here,\" she said handing him the bag, \"some clothes. It's going to be a busy day, which may or may not require them.\""
    ],
    "authorname": "Severall",
    "tags": [
        "futanari",
        "futa on male",
        "titty-fuck",
        "anal sex",
        "dickgirl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/mollys-muse-pt-01"
}