{
    "title": "The Twelve Tables Ch. 15",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you to Margaret who proofread for me. I hope you enjoy this chapter. ~ellie\n\n\n\n They had hired a ground floor function room that opened up into a private garden area that overlooked the river. While Peri had invited her friends, the huge guest list was compromised mainly from Josh's family. She felt almost like a stranger at her own party as she was introduced by Josh to various groups of people knowing she would never remember names and how they were related to him.\n\n The gift table was stacked high and the small wishing well they had agreed to for people who wanted to give them a card rather than a present overflowed. She was glad in the end that she had let Andie and Lucia talk her into doing a gift registry at two major department stores.\n\n Josh had reassured her that aside of those directly involved in the incident with Nik, including his direct family, no one knew what had happened to her. She relaxed into the evening being happy to speak with those she knew but finding she liked the majority of the guests she met. Josh was kept busy with the family he didn't get to see very often and she often left his side from to time to find a quiet seat with her friends.\n\n She was standing with Dante and Louisa facing the door to the function room when a tall beautiful woman walked in. She was elegant and regal and when she turned to survey the room Peri froze. \n\n \"No, no, no, no, no!\" She said rapidly the glass she was holding slipping from her fingers to shatter at her feet breaking the spell of the shock she felt. She turned to run and began moving through the crowd, almost pushing people out of her way to get to the back garden and make her escape. Dante had followed her closely grabbing her before she could get there.\n\n \"Peri stop!\" he said loudly making her turn to look at him. \"What the hell happened?\"\n\n \"It's Nik! Nik's here!\" she looked back over his shoulder and the woman was nowhere in sight.\n\n \"No, Nik is in Canberra, you know this,\" Dante was saying reasonably as Josh appeared at their side looking worried.\n\n \"I saw her. She came in just then. I saw her Josh,\" Peri whispered wide-eyed. \"I have to go. I have to go home.\"\n\n \"The woman you saw arriving late was Izabella,\" Josh said calmly. \"It was my sister Izabella,\" he said a second time wrapping her in his arms. \"She came home for the party I told you that I sent her invitation, remember? She wanted to surprise us so she hadn't told us she would be here.\"\n\n \"Bigger surprise than anyone counted on,\" Dante chuckled relaxing. \"I gotta admit though they do look alike, a bit of a heads up would have been a better idea for Peri.\"\n\n \"But I saw Nik, she was there,\" Peri repeated her fear refusing to believe what he was saying.\n\n \"Let's get some fresh air and D can get Izzy once you meet her you will see that it's not Nik,\" Josh said soothingly and walked her out past the party goers to a quiet space.\n\n \"No,\" Peri shook her head. \"I don't want to. I thought I could do this. I thought everything could go back to normal but it can't, can it. I'm sorry Josh I love you but I can't do this. Let me go. I need to go home.\"\n\n \"You don't mean that. It's just the shock of seeing Izzy,\" Josh tried to reason with her.\n\n \"As long as I am with you I will keep expecting to see her everywhere I go,\" Peri said. \"As long as I am with you I will never be free to move on. You weren't there, not in the library, not in the courtroom. You don't know what I know. You didn't see her or hear her. I can't do this, I tried I really did, I wanted it so much.\" She began to cry and took the rings from her finger. \n\n \"You can't be serious!\" Josh exploded. \"What about what I want?\"\n\n \"Please Josh, just let me go. I'm sorry about all of this,\" she waved a hand around indicating the party. \"Maybe it was for the best though because now we know we were doomed to fail. Don't follow me, please just let me go.\" She put the rings in his hand and walked around the side of the building heading for her hotel room.\n\n \"What about what I want?\" he asked her retreating form. He couldn't let her go like this. He went after her and stopped her before she reached the side door. \"I get it, I understand, but she's in prison and not even eligible for parole for the next twenty years. That feeling will fade I promise, please just come and meet Izzy. She flew all the way from Italy to meet you. All of these people are here to meet you.\" He wrapped his arms around her and held her tightly to him. \"Don't leave me,\" he begged in a whisper.\n\n \"There you are,\" Dante said in a loud voice approaching them followed by a tall stunningly beautiful woman.\n\n \"Oh gosh, I'm sorry. I didn't know you'd been injured so terribly recently,\" Izabella gushed. \"I just wanted to surprise my baby brother and I scared you half to death you poor thing. This woman who hurt you must have been terrifying,\" she said and Peri realised she didn't know that Nik had tried to kill her.\n\n Peri looked at the woman with the sultry, accented voice. Up close she could see that the woman bore nothing more than a family resemblance to Nik. It was more the way she carried herself like a supermodel and the long dark hair that had made her panic the way she did. Josh was right she couldn't walk out on her own party, and humiliate not only herself but him in the process. She felt the need to flee but she pulled herself together for the time being. She would make her apologies and claim fatigue and dizziness after a little while and leave the party in a more dignified manner.\n\n \"It was a shock, but no harm was done,\" Peri said disentangling herself from Josh's arms. \"I just needed a moment to get my bearings again. It's lovely to meet you,\" she said holding out her hand and feeling Josh relax beside her.\n\n \"It's lovely to meet you too,\" Izabella smiled warmly. \"Come and say hello to Mama and Papa, they were so worried when you ran off like that. They thought you hadn't wanted to see them.\"\n\n \"If you'll just excuse me for a moment first I need to powder my nose, literally,\" she smiled.\n\n \"Of course,\" Izabella said. \"I'll see you back inside the party.\"\n\n \"Peri?\" Andie came around the corner. \"I heard you...\" She stopped in shock as Izabella turned with the others to look at Andie and Charles, who had followed her to find Peri. \n\n \"Andie this is my sister Izabella,\" Dante said into the silence.\n\n \"My god, you look just like her,\" Andie blinked. She looked at Peri and saw the brave false smile as well as the tear tracks in her makeup. \n\n \"Andie, can you help me find the bathrooms, I need to freshen up,\" Peri said lightly moving toward the relative safety of her mother.\n\n \"I was going to ask you the same thing, let's find them together,\" Andie linked her arm through Peris. \"Sorry to rush off, we'll talk more inside,\" she said to Izabella and walked away from the party toward the foyer of the hotel.\n\n \"You don't have to follow us, Josh,\" Peri said abruptly as he started walking behind the two women.\n\n \"He's just worried about you,\" Andie chastised her daughter. \"No one expects you to be fully recovered. I got a shock myself. We'll fix your makeup and go back to the party and everything will be fine.\"\n\n \"I'm not fine, though, am I?\" Peri said sadly. \"I'm a nut case. How could I possibly have thought this was a good idea?\"\n\n \"We'll get you some help to work through it,\" Josh said desperation colouring his voice. He could feel her slipping away from him again as she had at the hospital. Maybe he pushed her too fast, too hard but he had hoped once they were committed, married even, that she would stop running away from him and life would start returning to normal. \n\n Peri had felt that she didn't need the help Pete kept encouraging her to get. The nightmares had begun to ease and she was sleeping better in the last two weeks. Working through her list of things that would make her feel normal again, she had felt she was getting back to her regular life again. Until tonight, she had been feeling good about how she was handling everything. The urgent need to flee the situation was dissipating as she walked into the bathroom with Andie leaving Josh waiting outside.\n\n In a calmer way, she told Andie the same things she had said to Josh. \"I thought I could do this but I can't,\" she began. \"As long as I am with him I will keep expecting to see her everywhere I go,\" Peri said. \"I will never be free to move on. I can't do this despite wanting it so much.\" She said sadly. \"We are doomed to fail because I will always be waiting and worrying for her to show up again. I gave him back the rings,\" she said with a trembling voice.\n\n \"Stand right there,\" Andie said and checked the stalls of the quiet out of the way bathroom. Then she went to the door and opened it surprising Josh who stood nearby. \"Get in here,\" she said and motioned him into the ladies' bathroom.\n\n \"I can't stay out of this anymore,\" Andie said as Josh warily walked into the bathroom. \"You apologise for acting like a crazy woman,\" she pointed at Peri. \"And you,\" she pointed at Josh, \"Give her back her rings.\" She saw Peri hesitate but Josh sighed in relief. \"I'm not a doctor, but I have spoken to far too many over the last couple of months not to pick up a thing or two. Baby, it's perfectly reasonable to admit you have post-traumatic stress and need help. I should have made you see the counsellor but I was enjoying the fact that you were treating me like your mother again.\"\n\n \"You are my mother,\" Peri said shaking her head.\n\n \"We both know you hadn't thought of me as your mum for years before all this, because I didn't act like it, I guess,\" Andie admitted. \"Now admit you had a panic attack and apologise to Josh for taking off that ring. You love him and he loves you. The family is neither here nor there. You can love them or hate them because you don't have to live with them you only have to live with him.\" Andie took on a lecturing tone.\n\n \"I did have a panic attack, I'm still having it in fact,\" she said softly. \"I'm sorry I took off my rings.\" She apologised responding to her mother's authority.\n\n \"No more running away,\" Josh said. \"If you need to leave you need to take me with you but you don't run from me!\" The emotion was still thick in his voice as he slid the rings back on her finger.\n\n \"You know you need help just as much as she does,\" Andie told Josh gently. \"Kiss and make-up then I can redo her makeup. I'm the goddam makeup queen at the moment,\" she laughed trying to lighten the mood.\n\n \"No running away,\" Josh murmured.\n\n \"Don't leave me alone in there,\" she whispered and accepted his kiss despite still feeling their relationship remained doomed. It wasn't that she didn't love him as much as she always had, but she felt overwhelmed by the idea that she could never truly escape Nik and what she had done while she was with him.\n\n They returned to the party and Peri had numbly smiled and engaged in small conversations for the remainder of the night. She had been apologetic to Izabella and her husband for her reaction to their arrival and refused to let the woman take any of the blame. Izabella had explained that they had not known the details of the family emergency she had been asked to come home to discuss. She and her husband had been on tour with an orchestra and had not been able to come any earlier and had happily been able to arrive just in time for the engagement party. \n\n \"It's a shame our surprise entrance caused you such distress,\" Izabella said in a condescending tone.\n\n It was Lucia who had cut the conversation between Izabella and Peri short, linking arms with her sister and steering her away from where Peri stood beside Josh. \"Izzy, you have to trust me, stay away from Josh and Peri tonight, okay?\" She had whispered quietly. \"I'll explain everything later, I promise. Just stop being critical of her and stay away from them.\"\n\n \"No, explain it to me now, Lucy?\" Izabella became increasingly worried. \"So I look like someone who assaulted her. She looks fine to me. I can't help it if she is a drama queen who can't share the spotlight for five minutes.\"\n\n \"I can't explain it now, not here,\" Lucia responded seriously.\n\n \"Fine, I'll just find D., he'll tell me what the fuck is going on here,\" Izabella said her voice coloured with the frustration and rising anger that her homecoming was not as joyously received as it always had been.\n\n \"No one will tell you, not here,\" she looked around at the large crowd of guests meaningfully. \"Get Giovanni and tell Mama you're jet lagged or something. We can go up to your room, assuming you are staying here tonight. I doubt you will want to come back down afterwards,\" Lucia said seriously. \"I'll get D.\" She knew he would still have the photo of just how badly injured Peri was on his phone. Looking at her now, six weeks later, it was hard to believe how close to death she had seemed.\n\n \"No!\" Izabella shouted incensed at the way she was being treated.\n\n \"I think you should go now Izzy,\" Ben said appearing behind Lucia with Angelo. \n\n \"Let me find Giovanni and D. first,\" Lucia said quietly. \"She will believe D. if he tells her.\" Lucia went over to where the men stood near Josh and Peri.\n\n \"I will let mama know you felt tired after your big flight and have retired early,\" Angelo said his deep rumbling voice, making it clear this was not a choice Izabella could make any longer.\n\n Lucia and Dante had quietly escorted Izabella and her husband from the party and gone up to the suite they had taken. Without any preamble, Dante opened his phone and brought up the picture he had been sent by Ben, the morning they had found Peri.\n\n \"This is Peri six weeks ago,\" he handed Izabella the phone and she gasped, \"Who do you know for a fact that looks like a carbon copy of you?\" He asked making her think.\n\n \"No one, Catherine Zeta-Jones, when she was skinny,\" Izabella looked up from the photo as she compared herself to celebrities.\n\n \"Think closer to home,\" he said with an edge to his voice. \"You are just as vain and self-important as she ever was.\" He saw her look at him in confusion so he spelt it out for her. \"That photo was taken after Nik tried to kill Peri and very nearly succeeded.\"\n\n \"It was Nik? Nik did that to her?\" Izabella repeated not able to believe what she was seeing and hearing.\n\n \"Nik also murdered one of the Battaglia men,\" Dante said holding nothing back and watching his sister reel with the shock. \"Maybe next time when one of us tells you we will explain later you will trust us instead of demanding answers immediately like a spoilt princess. That girl down there may look physically fine but she is barely holding it together for Josh's sake at this point. She is far from the \"little drama queen\" you called her in front of everyone down there at the party.\" \n\n \"Hey, that was uncalled for. She didn't know, a little heads-up might have been helpful,\" Giovanni stood up and faced Dante.\n\n \"That's the point; she didn't know. She didn't know Peri or the situation and yet she felt justified in judging her as a drama queen. You know who else judged her too quickly, Nik,\" Dante spat. He wasn't letting Izabella off the hook so easily. \"Nik judged her as not being good enough for her brother and never gave her a chance despite that fact that Josh loved her,\" Dante said angrily.\n\n \"I didn't know,\" Izabella yelled back at him. \n\n \"It shouldn't have mattered! You walked into her engagement party expecting it to be all about you and your homecoming and when it wasn't you criticised her to anyone who would listen. She shouldn't have had to share the spotlight with you. It wasn't your welcome home party, it was her and more importantly, your brother's engagement party you were trying to hi-jack.\"\n\n \"I wasn't trying to hi-jack anything!\" Izabella raged back indignantly.\n\n \"I heard you complain that Peri was too much of a prima donna to share the spotlight with you for even five minutes,\" he accused. \"She thought you were Nik coming to finish what she started! She ran like any sane person would do.\"\n\n \"D. stop,\" Lucia stood in front of him and placed her hands on his chest. \"She gets it. She didn't know but now she gets it.\" She said calmly. She turned to Izabella and shook her head sadly. \"We did try to get in contact with you but all we could do was leave messages and send emails. Nik lost it, she murdered a man and almost killed Peri. Everyone is still a little on edge. Peri only got her cast off today and all that makeup is hiding more than just bruises.\"\n\n \"We were travelling a lot with the orchestra,\" Izabella sat back down and sighed heavily. \"I had no idea it was so serious or I would have come back earlier. Where's Nik? Not here obviously, is she back at the farm?\"\n\n \"She's in prison,\" Dante said in a hard voice and seeing the horror on his sister's face continued. \"Peri aside she murdered a man in cold blood, Izzy. You can't possibly believe she would be at home as if nothing happened.\"\n\n \"I guess not,\" she said uncertainly. Her view of the world and her place within it shifting dramatically. She knew Dante himself had been up on a charge of assault in his younger days and had never set foot inside a jail. He hadn't murdered anyone, though. \n\n \"I think you should go now,\" Giovanni said sternly to Dante.\n\n \"Yeah, your right,\" he was still angry. \"Look, Izzy, we probably could have told you in a better way, but you were a full blown bitch downstairs. Josh has been through enough. You have no idea how badly Nik screwed with him and Peri before she went too far,\" Dante sighed. \"Stupid thing is we let her, just like we always have and because of that, the Donati princess routine you pulled downstairs will put all of us on edge. You saw how Ben and Angelo came down on you when you yelled at Lucy, who was just trying to help you.\"\n\n \"I didn't do anything wrong,\" Izabella said softly.\n\n \"You know Nik still says those exact same words even though she's been convicted,\" Dante shook his head. \"I'll see you tomorrow,\" he sighed and left the room.\n\n \"She murdered someone, like dead?\" Izabella asked finally letting the words sink in.\n\n \"Nik did a lot of things, drugs, assault, manipulation, and yes murder,\" Lucia said softly. \"Papa protected her and sent her to the Battaglia for rehab. She murdered her guard, and tried to kill Peri, almost succeeded too,\" Lucia filled in a few more of the gaps in a soft kind way. \"Peri's lovely and sweet and Josh loves her to bits, no one will like you bad mouthing her, especially not tonight.\"\n\n \"It's been so long since I was home I just wanted to surprise everyone,\" Izabella said still trying to make sense of everything.\n\n \"Mission accomplished,\" Lucia laughed, \"But you can't blame Peri for her reaction and I guarantee she doesn't blame you for frightening her. She will be blaming herself for panicking the way she did. You might have to apologise to Josh for calling his fianc\u00e9 a drama queen, though,\" she smiled and hugged her sister. \n\n *****\n\n Peri had reluctantly agreed to have breakfast with Antonia and Joseph when the invitation had been extended to include Andie and Charles and she lay I bed that morning feeling sick about it. She still felt that cloud of impending doom over them and when they had come back to the room last night she hadn't wanted to talk about it. \n\n \"I can hear you thinking,\" Josh murmured into her neck and she rolled in the circle of his arms to look at him. \n\n \"I love you,\" she reached up to place a hand on his cheek. \"I just don't know if it's enough,\" she said sadly. \"Andie's right, I need help, I'm a crazy woman now and you deserve so much better.\"\n\n \"I have exactly what I want, and Andie was right, I think we both need help to get past this,\" he said softly holding her close. \"I can't bear the thought of losing you again, not when we have just come back together after everything.\"",
        "\"Josh,\" she said tentatively, pulling away from his slightly. \"I know how important your family is to you but after breakfast, I don't want to go to any more family gatherings, for a while at least.\" Last night had upset her and she had felt suffocated after returning to the party. Only a few of her friends had been there out of the hundreds of guests invited. She had been a stranger at her engagement party and she had hated the feeling. \n\n \"We've only seen them all so much recently because of the holidays and then, well what's happened. Honestly aside of family celebrations and the gatherings, I don't expect you will see them at all,\" he said easily. \"You don't even have to work with them if you don't want to, you can work with me, or work from home, until things get better for us both.\" He continued to refrain from putting the blame solely on her for their difficulties.\n\n \"I don't think working from home would work with all Andie's work stuff lying around,\" Peri laughed softly.\n\n \"Maybe we should look for a place of our own,\" he suggested. \"Just the two of us no family dropping by unannounced and having Andie let them in,\" he smiled. \"I can sell my place and we can buy something we both like here in the city and eventually build a family home out at the vineyard if you still want to. It could be the fresh start we both need at the moment.\"\n\n \"Andie's been so good to me, I don't know that I could leave her on her own,\" Peri said thoughtfully.\n\n \"I doubt she would be by herself, she and Charles are very close in case you hadn't noticed,\" Josh said surprising himself. Charles hadn't been interested in a long term relationship since the death of his wife. Andie though had seemed to get past that barrier and Josh was fairly sure that Andie was just waiting for Peri to move on before she made any plans of her own. He decided to have a chat with Charles about it. Things weren't always as they seemed and it was better to be safe than sorry.\n\n \"I know that in your family the women become part of their husband's family and tend to leave their families behind but Andie is all I have; all I've ever had really. She mightn't have been the best mother in the world but she has been there for me lately like I wouldn't have believed possible,\" she said carefully.\n\n \"We'll still be in the same city, and closer to her than my parents,\" Josh reasoned. \"Everyone moves away from their parent's home eventually. I'm not saying we have to do it straight away but it's something to think about. Having a space that is one hundred percent ours, not mine and not yours, but ours could be exactly what we need.\"\n\n \"It can't hurt to look,\" she said softly still unsure about the idea. Only last night she had been prepared to leave him and now laying in his arms she wanted nothing more than his love and the future he offered her. \n\n Josh smiled and held her close. He hated not being in full control of their relationship. The past few months he had found it beyond difficult to take the gentle approach when all he wanted was the power he once had in her life. He adored her. He couldn't imagine loving anyone the way he loved her but he craved the relationship they once had where they had loved and trusted each other completely.\n\n He rolled her onto her back and kissed her passionately. He wanted to be that dominant presence in her life whose presence could lull her to sleep or wake her with a gasp just by the way he touched her and what it meant. He wished for the symbolism of the jewelled necklace he had given her to signify the balance in their relationship and the trust she had in wearing it. He ran his hand through her hair pulling it over her shoulder to hover just above her breast.\n\n Peri looked up at him as his fingers tickled at her skin barely touching it at first as he began to draw invisible contours around the surface of her breast slowly decreasing the size until he reached the nipple. She gasped as his fingers closed around it tightly and twisted it until she whimpered her eyes widening.\n\n Josh felt his cock harden further at the sounds she made and looked down into her face desire for her filling him. He placed his hand behind her neck and kissed her again deeply and passionately. His hand glided from her breast down over her curves, her ribs, tummy and pussy teasingly light before continuing down over her thigh and knee, pulling it up and out from her body making more room for him. His hand then quickly retraced the path back up her body lightly teasing her until it once again reached her breasts.\n\n Laying alongside her, he pressed the hardness of his cock into her thigh as his hand lazily played over her body. He loved its curves and soft, pliant flesh and he explored every inch in a sensual massage occasionally stopping to make her mewl and whimper with sharp flicks, pinches and twists to the pink buds that rose and fell with her accelerated breath. He rolled her onto her side facing away from him and pulled her back into his body, his hard cock resting against her ass. The hand at her neck moved to surround her throat gently and she stiffened in panic.\n\n \"Trust me,\" he purred into her ear. \"I never have and will never harm you, trust me, I will keep you safe, always and forever.\"\n\n Her brain screamed at her but she took a deep shuddering breath as he continued to croon into her ear begging her to trust him again, to let him love her the way he needed to, as they always had done. She closed her eyes fighting and listening to her body alone. This man wanted her, desired her, needed her and at that moment she knew in her heart that she loved him enough to trust him, she always had. She relaxed under his hands as one held her in place by her throat and the other teased her body making her mewl and whimper in need.\n\n She pressed her ass back into his cock and his fingers stopped the soft stroking at her throat and settled more firmly, not tight enough to choke but to hold her in place and claim her as his. Josh felt closer to her as she gave in to the need they felt. Pressing his lips into her neck he breathed in her scent feeling the heat of their bodies pressing against each other. He let the sensations of sight, smell, taste, sound and the tactile feelings of claiming the woman he loved wash over both of them. His hand slid down to part her thighs and he moved until his cocked nestled between them nudging at the lips of her wet cunt.\n\n A growl slowly rose from Josh as his hand travelled down her body to her wet cunt moving his fingers into her wet slit. He rubbed at her clit enjoying the tremor of sensation that rolled through her body as he played with her. His fingers work into her alternately teasing her clit and slipping his fingers into her tight cunt. He revelled in the closeness of their bodies, and he felt her build up to her climax slowly as he crooned into her ear his hand closing further around her throat, still not tight enough to choke her but to make her feel his possession of her body more keenly.\n\n Her body bowed between the restraining hands as her orgasm hit her and she shook in pure pleasure. In his hands, she felt safe like nowhere else in her life. In his hands, she melted and became his. She knew within the same moment he was hers. This was what she desired, wanted and needed as much as he did. Together they were whole. She placed a hand gently over his hand at her loosening his grip slightly, and rolled in his arms tilting her head up to kiss him. \n\n Josh kept his hand at her throat and rolled her to her back manoeuvring between her legs. He pushed his hand into the mattress to keep his weight off her as he pushed into her hot, wet cunt. He groaned loudly enjoying the feel of her as he thrust gently at first, further into her. He smiled as she shifted below him mewling softly.\n\n Once all the way in he moved his hand from her throat to the side of her face, as she so often did to him. He teased himself by taking it slowly in long slow thrusts leaving him shivering in anticipation waiting for her to beg for more. Waiting for her to beg him to take her as he always had, hard and possessively. He craved that feeling and he needed her to crave it too.\n\n Peri looked up into his face and saw his need and desire, \"Please,\" she whispered and it was all he needed. His head lowered and he swallowed the rest of her words as he thrust heavily into her. His strokes remained slow and long but he rammed into her on each one now enjoying the music of her passion. \n\n \"Mine,\" he growled into the kiss and lifted his head beginning to fuck her in earnest.\n\n \"Yes,\" she hissed, \"Yours, Mine,\" she panted back wrapping her legs around his hips to pull him further into her body. She felt her climax rising with his and she rocked her hips to meet his every thrust. They came explosively each crying out their pleasure in perfect counterpoint. Josh collapsed on the bed beside her and pulled her close. Their ragged breathing slowing as they lay snuggled in each other's arms. \n\n \"I love you,\" Peri whispered. Sex had never been their problem, Peri acknowledged. Their love for each other and the intimacy they had only strengthened their bond. Their problems lay with other people, particularly their families. If she was honest with herself, Andie had become part of Josh's family as well now that she and Charles had become even closer since her injuries. Josh was right she thought. Having a place of their own would allow them to set boundaries and put in place ground rules for their family while they rebuilt their relationship and all that came with it.\n\n \"I love you too,\" he kissed the top of her head and tightened his arms around her. \"Let's get ready for breakfast, I'm starving,\" he grinned. He wanted more than anything for their relationship to return to what they once had. It could never be the same he admitted but he wanted the normalcy of their life to return and if that meant excluding his family for a short time he was prepared to do just that to ensure the woman he loved healed properly.\n\n *****\n\n Peri sat stunned at the breakfast table listening to Josh take control of their lives. She never actually committed fully to any of the things they had spoken about that morning but he began making the boundaries of the family's continued interference in their lives very clear in an easy, friendly way. He chatted about selling his current apartment and finding a house they both liked between his business and the city where Peri would continue to work once she felt up to it again. They hadn't discussed her work but she loved her job and she knew she would eventually like to go back to it whether she needed to or not.\n\n \"I wanted to talk to you about your work,\" Joseph said directly to Peri making her look up at him. \"Specifically the family history you did for us before the holidays.\"\n\n \"Was there a problem with my research?\" Peri asked defensively.\n\n \"Not at all, you did a very thorough job,\" he smiled trying to ease her worry. \"All of the original histories are available to us from our families in Italy. What we would like, however, is for you to concentrate on the families' histories since arriving in this country.\"\n\n \"I hadn't thought, I was just using the information available in the large old book Joshua had shown me,\" she said justifying her work on the original table of twelve.\n\n \"We like the way you have collated and presented the information and would like you to do this for each of the families that are joined by the tables here,\" he said. \"For most of us that is only two to three generations. After that, you can look into contacting the archivists in Italy to create the historical volumes.\" He turned his attention to Josh. \"Each of the families has asked for a copy of the volume detailing the original men and their vision for a united future. I believe your company can handle the creation of these?\" \n\n \"Sure, do you want some mock ups or are you happy for us to choose the final binding and look of the volumes?\" Josh said considering the prestige of delivering the histories not only for his family but all of the families that now lived in this country.\n\n \"I think Peri can oversee it, she has shown good judgement thus far,\" he said and inclined his head toward Peri. \n\n \"Thank you,\" Peri said in a small voice. She was stunned by the compliment especially with the enormous elephant that sat in the room with them called Nik.\n\n \"That's wonderful, baby,\" Andie said enthusiastically. \"Just think you might get to travel to all the other families and meet all those interesting people.\"\n\n \"I'm not sure I am quite ready to sit in front of a computer for hours at a time yet,\" Peri laughed softly, \"But when I am it would be an honour to continue with the Donati history.\"\n\n \"There is no hurry,\" Joseph agreed, \"Take your time to heal properly and plan your wedding. Antonia and I would love to host the wedding out at the farm if you would indulge us.\"\n\n \"We haven't even decided on a date yet,\" Josh said good-naturedly putting off that discussion for another day knowing she would refuse the offer if pushed at this moment.\n\n \"We are just grateful to see you both looking so happy,\" Antonia said. \"That's all I have ever wanted for you. I am glad you are trying to move past everything that happened,\" Antonia addressed the elephant in the room and strangely it was Peri who was grateful.\n\n \"I think it will take us all time to move past it,\" Peri said quietly and with understanding. \"It must have been a very difficult time for you both and I am sorry for that.\"\n\n \"You have nothing to be sorry for,\" Joseph said abruptly ending the conversation but Antonia smiled softly at Peri and nodded her head slightly. \n\n All she had needed to know was that Peri and Joshua were still in love and happy. Both Marisol and Lucia had explained to her at length that she couldn't treat Peri as she would one of her daughters. She wasn't welcome to just barge into her life uninvited, but she had been so concerned about the sadness in Josh's voice, each time she had tried to speak to him about his relationship she had needed to see Peri herself, when the opportunity arose. She hadn't considered that Peri would react the way she did when she arrived at the lunch date a week ago.\n\n Seeing them both now, however, she could admit that, Lucia had been right. Peri and Josh could work things out if given the space and time to do it on their own terms. She could see the happiness on her youngest son's face as he spoke about their plans and she was content to leave them to make their wedding plans as it suited them. She knew Joseph wanted the wedding to be held at the farm but she honestly didn't mind where it was as long as it happened and all the heartache that had occurred had been for a reason.\n\n \"I think it will be good for you two to find a place of your own, as long as it's not too far away,\" Andie said into the lull in the conversation. \"You can always come home for visits but it will be good for you to put your unique style into a place of your own. Plus, I have no idea where we would put all those gifts you got last night!\" She laughed easily.\n\n \"Oh I had forgotten about those, how will we get them all home?\" Peri asked Josh.\n\n \"Lio organised one of the vans from the warehouse last night to take them back to the warehouse,\" Josh said with a smile. \"There are perks to having a big family; someone is always around to help out with the details.\"\n\n \"It will take me a week to sort through it all and write the thank you cards,\" Peri laughed. \"Everyone was so generous.\"\n\n \"We would love to help you do that, wouldn't we Andie,\" Antonia suggested. She liked Peri's mother despite hearing contradicting reports about the woman.\n\n \"Who doesn't love opening presents,\" Andie laughed. \"That's a wonderful idea.\"\n\n \"Joshua, why don't you take your father and Charles for a tour of your company after breakfast and we ladies will go down to the warehouse and make a start on the gifts,\" Antonia suggested.\n\n \"What if I want to open presents,\" Josh deflected the suggestion unsure of how Peri would feel about spending the morning with his mother.\n\n \"I will save you a couple of small ones,\" Peri grinned showing she was okay with the idea as long as Andie was there with her. \"We will also have to open all those envelopes from the wishing well, there is probably enough there for a deposit on a house,\" she laughed.\n\n \"Are you sure you want to do that today?\" Josh asked giving her another out if she needed it and feeling concerned that she may panic again if his mother tried to talk to her about Nik or anything to do with the family expectations.\n\n \"Sometimes it better to just get in and get a job done,\" Peri said. \"Andie will be there to make sure I don't overdo it,\" she smiled nervously reading the concern on his face. \"I will be fine.\"\n\n They left the restaurant then and checked out of the hotel, with Josh asking at least twice more if she was sure she wanted to spend the morning with his mother. \n\n \"It's all part of the healing process. I had a panic attack last night and I am so sorry I scared you and said all of those things. I think Andie showed us both that she will step in if I start to panic again and I think your mother just wants to be involved in some small way. If opening presents can make things better for us then it's a pretty simple way to start,\" she said reasonably. \"I love you, and you come as part of a great big package deal. I realise now that I can't ignore your family so I need to start building some bridges.\" \n\n \"You're amazing, you know that?\" he asked. \n\n \"No I'm just insanely in love with you,\" she smiled and reached up to touch his cheek softly and he bent to kiss her. \n\n \"I'll take that sort of insanity any day,\" Josh murmured and straightened up looking into her eyes.\n\n Peri's eyes flicked to the movement of people checking out nearby. \"Speaking of building bridges. Could you introduce me to Izabella properly now that I am a little less crazy than last night?\"\n\n Josh looked around and spotted them in the foyer. \"Izzy,\" he called and held Peri's hand tightly as he walked toward them. \"I'm not sure you got to meet Peri properly last night,\" he said easily.\n\n \"I'm so sorry,\" Peri smiled putting on a brave face. \"No one had told me you were coming or that you would look so much like your sister. I hope I didn't upset you. I tried to find you to apologise last night but Lucy said you had jet lag and went upstairs early.\"\n\n \"It's such a big flight home,\" Izabella smiled taken aback by Peri's apology. \"I'm sorry too. I didn't mean to give you such a fright. I didn't know what had been happening here and I wanted to surprise my baby brother.\" She looked at Josh with genuine warmth. \"This is my husband, Giovanni,\" she introduced the man standing beside her.\n\n \"Nice to finally meet you,\" Giovanni took her hand and then extended it to Josh. \"It's good to see you again Josh.\"\n\n \"Likewise, it's been too long,\" Josh said. \"Are you staying long this time?\"\n\n \"Once we've got our heads around everything that's been happening, we'll know for sure but we were talking last night about staying through to the gathering with part of that time spent with my family,\" he said without confidence.\n\n \"That'd give us lots of time to catch up,\" Josh agreed. \n\n \"I hope so,\" Izabella said with a smile. \"We spoke to the management team in Italy this morning, they are going to negotiate with our replacements to stay on until the end of this tour and will let us know. Honestly I could use the holiday.\"\n\n \"Aren't musicians on permanent holidays?\" Josh teased his sister.\n\n \"Don't start,\" she rolled her eyes. \"What are you up to today? We're going over to Ben's this morning but we're free this afternoon.\"\n\n \"Taking Papa out to the publishing house while Mama opens presents with Peri,\" he shrugged. \"Not sure when we'll be done but there's plenty of time to catch up if you're here for a while. Are you staying in the city or going out to the farm?\"",
        "\"We'll probably do a bit of both. Lucia invited us to stay with her,\" Izabella said. \"But we'll probably go home with Mama and spend a few days there first.\"\n\n \"We'll have dinner when you get back to the city,\" he said easily slipping a hand around Peri's waist. \"Have a good time with Ben and Em.\"\n\n \"Yeah, I'm looking forward to seeing the kids. Angelo is there so there will be a horde of them,\" she laughed and pulled a face. \"Have fun with Papa and you will have fun unwrapping presents!\" she said cheerily to Peri.\n\n \"It will probably take us forever, everyone was so generous,\" Peri gushed. \n\n \"I'd love to come and help but I promised Ben I'd visit first thing this morning. He was always bossy even when I was little,\" he said with a smile. \"We'll catch up soon though and I will tell you every embarrassing story I have about Josh.\"\n\n \"I can't wait,\" Peri laughed.\n\n *****\n\n \"It must be time for a break,\" Emilio walked into the warehouse where Peri sat with a present on her lap trying to decide what pile to put it in. \n\n With the precision of a woman who had done this several times, Antonia had divided the space into five sections labelling them Kitchen, living, bathroom, bedroom and miscellaneous. As the presents were unwrapped, each was placed in a section to be repacked into larger boxes for when they found a home of their own. Some things were easily sorted but others like the dainty, exquisitely craft glass bowl she held could go in a number of places and without the context of the home and furniture she would have, the miscellaneous pile grew large.\n\n \"Oh what a good idea,\" Andie agreed. She had been moving between the piles while Peri opened and labelled each piece and Antonia took the cards and wrote what the gift was on each and then on a list for Peri to write thank you cards. They had gotten through most of it by the time Emilio had appeared.\n\n \"We've got some coffee and tea in the office,\" he said, helping his mother to her feet and leading the way through the warehouse to a spacious office filled with old world charm. Peri hadn't been to this office before and she looked around appreciatively at the furnishings knowing they would be genuine antiques.\n\n \"Would you like water?\" Dante asked Peri, walking into the room with a jug of iced water.\n\n \"That would be heavenly,\" Peri smiled. \"How did you know?\" She was so used to being offered juice as an alternative to tea or coffee.\n\n \"You always ask for water at some stage,\" he winked. \"How's the gift unwrapping going?\"\n\n \"It's hard without the context of what our house will be like to know where things might go, but aside of that, it's wonderful. Everyone was so good to us,\" she said enthusiastically.\n\n \"What sort of house do you want? I'm sure Josh won't mind too much as long as you're in it. I know I wouldn't,\" he chuckled.\n\n \"I guess I would like something with history, a restoration of some kind so I could fill it with beautiful antiques like this eventually, but with all the renovations of older homes that tend to happen recently it's more likely to be a fusion of modern and older pieces,\" she said thoughtfully. \"I think Josh would like to build a family home once we're married, up at the winery.\"\n\n \"Andreas's winery?\" Dante asked in surprise.\n\n \"Yes, we love it there,\" Peri laughed. \"It wouldn't be as far to commute to the publishing house as it is to the city and I could work from home mostly.\"\n\n \"I dunno if that's such a good idea,\" Dante frowned. \"I like having you around this place.\"\n\n \"It's not like it is going to happen tomorrow,\" she laughed at his frown thinking he was teasing her.\n\n \"You should show her the conservation room, she might like some of the pieces for their new home,\" Antonia suggested.\n\n \"Maybe Josh and I could look at it together it will be his home too. I imagine he has some pretty firm ideas about what he would like regarding style and furniture,\" she said thoughtfully.\n\n \"Nonsense, it won't hurt you to see what is there,\" Antonia insisted. \"Dante take her and show her while Andie and I have our coffee.\"\n\n \"As the queen commands,\" Dante clicked his heels together and bowed to his mother. \"This way Miss Wells,\" he bent his arm outwards for her to take. \n\n \"I'd rather wait and see what we decide on first. I already have too many things in my head from all these presents let alone adding any more,\" she said daring to say no to Antonia for a second time since the trial but trying to soften her refusal by explaining why she didn't want to do as she suggested.\n\n \"She's right,\" Emilio came to her defence. \"Once she knows the house plan then she can choose wisely. There's no use falling in love with a piece and finding it won't fit in the house the way you want it.\" He smiled then, \"You know if you would like to have a chat with Andie alone, you only have to ask.\"\n\n \"You were always too clever for your own good,\" she chided him. \"Both of you,\" she turned on Dante, who had chuckled at his brother's words. \"I thought it would be good for her to see what's available before she looks at houses. The other boys all have modern houses with modern furniture it's nice to think that Josh is marrying a girl who understands the beauty and quality of some of the pieces we have restored here.\"\n\n \"Why don't we finish off the presents and then if there's time we can all go and look,\" Andie suggested. \"Josh may even be back by then,\" she said cheerily.\n\n \"That sounds like a good idea,\" Antonia agreed and they went back to the pile of presents. It took very little time to finish the task and Peri was left with a long list of thank you cards to write. As if by magic a couple of warehouse workers arrived and began packing the items into boxes for storage. Peri found herself disappointed that she couldn't use some of the beautiful decorative glass objects immediately but knew it would be like Christmas unpacking those boxes when they finally found a place of their own.\n\n Joseph had called as they were working through the last gifts and asked them to meet them for lunch. As they were leaving Antonia paused and looked at Peri seriously.\n\n \"I know you think I am a silly old woman but please have a look at the restorations before you leave. Emilio can take Andie and me ahead and you and Dante can follow us after you have had a little look,\" she said, \"Indulge me, please.\"\n\n \"Just a quick look,\" Peri agreed reluctantly. \"Are you okay going on ahead, Mum?\" she asked Andie concerned that Antonia seemed to want to speak to her alone. \"I mean we could all have a look if you're interested in the restored furniture.\"\n\n \"That's probably a better idea,\" Emilio chuckled, \"Because Papa sent a car for the three of you. I'm afraid Dante and I would be gate crashing otherwise.\"\n\n \"That sounds like fun then,\" Andie said confused by Antonia's need to show Peri some old furniture. They went through the maze-like warehouse pathways to another large unlit section. Dante turned on the lights and lit up a huge space crammed full of furniture.\n\n \"Go on and have a quick look around,\" Antonia said to Peri taking Andie's arm and slowing their walk down somewhat. \"I wanted to talk to you privately before we left without alarming Peri,\" she whispered as the others moved ahead. \"We thought it would be lovely as the parents of Josh and Peri if we gave them a helping start in their life together. A family member passed a few years ago and left a beautiful little cottage close to where Josh's new company is and we would like to give it to them from all of us as the engagement present.\"\n\n \"From all of us?\" Andie asked stunned by what the woman was saying. \n\n \"Yes from Joseph and Charles, you and I,\" she nodded. \"Charles has made it very clear that you are now part of our family too,\" she smiled warmly. \"I don't often get to see the other girl's parent's so it will be nice for us to be friends,\" she added.\n\n \"That's so generous but I'm not sure that I could,\" Andie began.\n\n \"It hasn't cost us anything and the kids will have to do some work on it, which we can both help with I'm sure. It's not perfect by any means. I just didn't want you to be surprised. I'd like them to know it is from all of us, not just Joseph and I,\" she said with a smile. In truth, she wasn't sure if Peri would accept the gift if it were. \n\n \"That's so lovely of you,\" Andie said, \"Peri would know that my financial situation would mean that I couldn't have been involved, though.\"\n\n \"You have a partner in Charles and he can well afford to be involved,\" she laughed. \"You two girls are so independent. It won't hurt you to share the load sometimes. That's what family is for.\"\n\n \"We've never had much family so I think it will take some getting used to,\" Andie agreed.\n\n \"I found them,\" Emilio called having backtracked along the path they had taken. \n\n \"I was just explaining to Andie how much more comfortable this Kent sofa is than the modern versions,\" Antonia lied easily.\n\n \"There's just too much to take in all at once, I'd love to come back with Josh, though,\" Peri said as she came into view of the women.\n\n \"I'm sure that can be arranged,\" Dante chuckled. \"I mean you do still work here, after all, so you can access it as you like.\"\n\n \"We had best be going then,\" Antonia stood and took her son's arm letting him lead them out of the warehouse maze to the waiting car.\n\n They had driven along the valley road towards where Josh's company was situated but had pulled off the main road in the opposite direction to arrive at a quaint little restaurant tucked into the rolling hills of the area. It seemed the new estates that were springing up this far south had left this small piece of the valley in peace.\n\n The men were seated drinking beer and talking business when the ladies arrived and they all stood as they approached the table, each kissing their respective partner. The group chatted easily through lunch about the gifts and how when they found a place of their own they wold hardly need anything else once they had moved Josh's furniture in. She spoke about the restoration collection and that she would love Josh to have a look at it with her one weekend.\n\n It was Andie who, at the end of lunch suggested that the little valley that the restaurant sat in would be a perfect place for their new home. It was close to Josh's work and not a very long commute to the city or home so Peri could visit as often as she liked. Peri looked out of the windows at the scattered cottages she could see and agreed it was a lovely place and worth looking into. As soon as Josh had agreed with her, Joseph called for the bill.\n\n *****\n\n \"What are we doing here?\" Josh asked as Charles pulled into a long gravel driveway not far from the restaurant.\n\n \"There was a for sale sign out on the road I thought it might be worth a look,\" Charles shrugged awkwardly while navigating the gravel path.\n\n \"You can't just barge in on someone. You need to get permission or something first,\" Josh frowned.\n\n \"It'll be fine, we'll just have a quick look and if it's worthwhile you can come back again with permission of the owners,\" he chuckled.\n\n They pulled up in front of what must have been a pretty little cottage once but was now hidden behind overgrown shrubs and trees. \n\n \"Doesn't look like anyone has lived here for a while,\" Charles said getting out of the car. \"Let's have a look around.\"\n\n The overgrown garden hid the railing of a wide wrap-around veranda and Peri cooed in delight as she followed it to a large extension at the back of the cottage. She went down the side steps holding Josh's hand and walked toward the rear of the building marvelling at the view they had of the surrounding valley.\n\n \"I bet it looks even better from up there,\" Josh pointed to a large deck on the rear of the house. They scaled the stairs and stood to stare out at the view. \"It's a shame we can't see inside, this is almost exactly what we talked about having out at the winery eventually.\"\n\n \"It's lovely, do you think it might be in our price range?\" She asked. \n\n \"I know we don't talk about money but I'm not exactly a pauper, Peri,\" he chuckled. \n\n \"I know but if you want to build our dream home at the winery it doesn't make sense to spend a bucket load of money on a temporary home,\" she said reasonably.\n\n \"We might like it enough to stay here, do you think there is enough land attached to it for an airstrip?\" he grinned seeing her eyes widen. \n\n \"Cars don't go fast enough for you anymore?\" she shook her head and jumped with fright as she saw the door behind her open and Joseph and Antonia step out onto the deck.\n\n \"How did you get in there?\" Peri asked in amazement.\n\n \"We know the new owners,\" Joseph chortled. \"Want to have a look through?\"\n\n \"It's your engagement present from all of us, Antonia, Joseph, Charles and I,\" Andie said happily coming out onto the deck.\n\n \"Oh you can't do this, it's too much,\" Peri exclaimed.\n\n \"That's why we did it together, as a family,\" Antonia came to Andie's side quickly. \"You both need a fresh start and this is such a lovely and peaceful place.\"\n\n \"Your mother and I have been dating for as long as you and Joshua,\" Charles said in a friendly way. \"I would hope it's not too much of a stretch to think of me as family by now.\"\n\n \"It is very generous of you all,\" Josh came to wrap a hand around Peri's waist. \"Let's have a look through before we decide whether to accept it or not.\" He led her inside to look around knowing she would be wary of accepting the cottage as a gift, despite how much they liked it.\n\n The interior had been fully renovated with the rear of the house having a large open plan living, dining and kitchen area that opened onto the deck through bi-fold doors. The front of the house held four rooms all with decorative cornice and ceiling roses. There was more than enough room for two people with rooms for guests to stay and a home office. It was unfurnished but it was not hard to imagine how it would look if some carefully chosen pieces.\n\n \"It's a pretty good fit for us, with its location,\" Josh said. \"There won't be a lot of travel time if I work late and its close enough to the motorway for you to get to the city reasonably quickly if you need to. We can always give it back once we have built our dream home,\" he suggested being more than happy with the property and thinking through improvements he would like to make.\n\n \"It's nice that our parents have done it together,\" Peri said softly. \"In all this time I have been taking up all of Andie's time I hadn't given Charles the consideration he deserved. He helped us so much at the beginning of my recovery.\"\n\n \"He's a good man,\" Josh agreed, \"He's probably looking forward to having some more private time with Andie the way I am with you,\" he chuckled as Peri blushed. \"We wouldn't have to worry about neighbours overhearing us here,\" he grinned enjoying her blushes. \"I could make a few small modifications and bring in some specially made furniture.\"\n\n \"Stop that, your parents are in the next room,\" she whispered smiling with him. \"It is perfect, though,\" she agreed despite her reservations.\n\n *****\n\n Over the next two weeks, Josh and Peri decided which furniture they would take from his apartment and had a look through what was available in the warehouse. Despite looking like a cottage from the front, it was in reality quite a big home. Peri was enjoying the process of putting together their home and spent some time with Dante in the warehouses looking through various area's before they committed to any big purchases. They had slowly begun to move the big pieces into the house but had left the final move of all their personal belongings for a couple of weeks so that they had furniture to unpack their things into.\n\n During the big move, Peri felt nauseous on and off throughout the day and several times had to sit down and sip some water until the feeling passed. She was grateful for Joshes big family who had all come to help and unpacked the kitchen and bathroom boxes with ease. They had left the engagement presents at the warehouse until they were at least partially moved in so Josh could see what they were given, even though he had seen the list that Peri had been working through each evening to send out the thank you cards.\n\n \"Why don't we have a glass of wine and relax,\" Josh said wrapping his arms around her as they farewelled the last of his siblings on Sunday evening. \n\n \"That sounds lovely,\" Peri said softly returning his embrace. They walked through to the kitchen and she took out two glasses as he opened the wine. Peri sat on a stool at the bench as he poured the wine. She felt her stomach roll at the smell of wine and frowned. \n\n \"You still feeling a bit off-colour?\" Josh asked in concern. \n\n \"Yeah,\" she grimaced putting a hand over her belly. \"I probably just over did it this week.\"\n\n \"I'll take you to see Pete tomorrow just to make sure,\" Josh said taking another glass and pouring her some cool water.\n\n \"It will pass,\" she said looking up at him, \"You don't have to take time off work tomorrow.\"\n\n \"Its been great having Rick there. He can handle anything that comes up and I know he will call me if anything urgently needs my attention,\" he reassured her. \"Come and help me test out this day bed,\" he picked up his glass and took her hand leading her out onto the back deck. \n\n \"It's so peaceful here,\" Peri sighed looking up at the night sky. She snuggled against Josh's side enjoying the feeling of being in their own home. Josh bent his head to kiss her and she felt her stomach roll again from the taste of wine on his breath.\n\n \"I'm sorry,\" she said pulling away from him. \"I must have picked up a bug and I don't want you to get it,\" she rolled further from him willing the nausea to go away. \n\n \"It's been a big weekend. There's nothing to be sorry for,\" he murmured softly rolling with her and placing a hand over hers on her tummy. \"We'll see Pete tomorrow just to make sure.\"\n\n \"This isn't passing,\" she got up and rushed to the bathroom and was sick. Josh followed her and moved in to comfort her.\n\n \"Let's get you to bed,\" Josh said stroking her back. \"Then I'll lock up and join you.\" He had left her to brush her teeth and went to lock up the back doors. Pete had been concerned that she was overdoing it but Josh had thought he was just cautious due to the head injury she had sustained. Now he worried that he had pushed too hard to get here, where they could start their lives together away from the daily pressures of their families. He too brushed his teeth and slipped into bed beside her wrapping his arms around her and pulling her close.\n\n \"I'm sorry,\" she murmured into his chest.\n\n \"Don't be, we're both exhausted and we have a lifetime to enjoy being together. Sleep,\" he said in a hushed voice and kissed her forehead. \n\n When they woke in the morning, she felt fine and she tried to put off Josh's determination to take her to see Pete.\n\n \"You're ridiculous,\" she laughed, \"I'm perfectly fine I just overdid things on the weekend.\"\n\n \"It'll be good to have a check-up then, I need to know you are going to be safe to drive yourself around now that we've moved out here,\" he argued. \"We should probably talk about upgrading that old junker you drive too,\" he said with a smile.\n\n \"It's not a junker,\" she said defensively.\n\n \"No, I guess not, but it's old and needs some attention. I'd worry a lot less if you had something more reliable,\" he said assertively. \"You don't have to argue with everything I suggest. I know you are your own person but I will be far happier if you do this for me. I'm allowed to worry about you, just like if I start working too much or over-committing, you get to tell me about it. We're a team now and whether you like it or not, I'd like to wear the pants sometimes in this house.\" He grinned.\n",
        "\"That's only because you prefer me naked,\" she laughed as he pulled her into his arms.\n\n \"Yes, yes I do,\" his hands ran down her back to her ass and he kissed her deeply. Since you are feeling so good this morning,\" he grinned and left the words hanging.\n\n \"You will make us late,\" she teased. \n\n \"Well that all depends on you now doesn't it,\" he murmured and kissed her again, \"And whether I need to tie you to the bed or not,\"\n\n \"Need to or want to?\" she laughed and he smacked her ass.\n\n \"Both,\" he chuckled, \"Especially if you keep being so cheeky this morning. Now where did I put that box,\" he mused lifting his head to survey the room. \"Don't move,\" he growled but held his smile as he rolled to his back and reached for his ringing phone.\n\n Peri laughed. When it was just the two of them like this, she could shut out the world and everything that had happened and just enjoy how much she loved this man. She ran a hand down his chest as he spoke, she assumed to one of his siblings. He wasn't saying much just making the mumbling sounds of agreeance a person made when they weren't very interested in what was being said. Her hand travelled down his torso finding his cock semi-erect and she smiled cheekily at him before disappearing under the covers.\n\n Kissing down his body, she felt his free hand move to her hair, not stopping her in any way, but stroking it lightly as she moved between his splayed legs. She kissed licked and nibbled over his thighs and balls feeling his cock grow rapidly in her hand and she gently ran her hand up and down its length. She felt him shudder as she ran her tongue over his balls and up the length of his shaft to the tip and kissed it gently. Pleased with the effect she had on him despite his voice remaining calm as he continued to murmur into the phone she parted her lips and ran her tongue around the swollen glands of his cock.\n\n Sucking him into her mouth, she felt his hand tighten in her hair and his voice become slightly breathless. Enjoying the situation, she began bobbing her head taking more of him into her mouth and sucking hard, her tongue fluttering along the underside of his cock.\n\n \"That all sounds great, Maryanne,\" he almost groaned into the phone. \"It's no problem for me. I'll have Peri with me so long as that's okay,\" His voice wavered and Peri doubled her efforts enjoying being the one doing the teasing for a change. \"Yep see ya there.\"\n\n \"Oh fuck,\" Josh groaned and Peri could hear the phone clatter to the floor as he dropped it and placed his other hand on her head twisting it into her hair and bucking his hips as she sucked him deeply. He pulled her up his body then and kissed her deeply. \"You are a wicked woman,\" he growled and spanked her ass several times relishing the way she squealed and writhed on top of him. He pushed her sideways then forcing her face down onto the bed as he spanked her several more times as he moved behind her and lifted her hips.\n\n The warm pink glow of her ass only made him want her more and he spanked her again before entering her brutally forcing her forward into the pillows. He gave rein to his need and fucked her reaching forward to grab a fistful of her hair and pull her head back so he could hear the pleasure filled sounds she made. He had been holding himself back for so long but now he craved the power that came with dominating her. Now that they were here in this house he would ensure that they lived on a steady diet of the endorphins that their painful pleasure gave them both.\n\n He could see her body trembling with her need and he rammed into her even harder building them both up to a crushing climax. He felt her hot cunt tighten and clench around his cock and he growled long and low as he came with her. He relaxed his hand and let her head fall back to the pillows then collapsed over her breathing heavily and pulling them both to the side his arms wrapped around her.\n\n \"Fuck,\" he said breathlessly. Peri squirmed and rolled in his arms to look up at him.\n\n \"Yes please but let me get my breath back first,\" she grinned and kissed him.\n\n *****\n\n \"So no other symptoms?\" Pete asked dipping a strip into her urine sample and laying it on an examination sheet before disposing of the contents and the container.\n\n \"Honestly, most of the time I feel great. It's just been the last few days. I've had these waves of nausea. Sometimes it's only a minute or two and it's gone other times I get physically sick but they always pass. It's probably just a virus right?\" Peri asked.\n\n \"No, it's not a virus,\" he came back to sit at his desk. \"No tenderness around the breasts or feeling bloated?\"\n\n \"Maybe a little, no more than I would normally get just before my period,\" she said. \"I haven't had one since you put those rods in my arm.\n\n \"Implanon,\" he smiled naming the rods and lifting her arm touching the inside of her upper arm where they sat. \"I think as a side effect of your injuries the rods may have been lodged a bit too deeply into the muscle and stopped working. We will have to make a small incision and take them out to say exactly why they stopped working, but it can happen from time to time.\"\n\n \"Stopped working?\" Peri finally understood what he was saying. \"I'm pregnant?\" She gasped.\n\n \"Congratulations,\" Pete grinned. \"I'm assuming you and Josh have talked about having children. You weren't pregnant when you were in the hospital so I am assuming it's Josh's.\" He said and raised an eyebrow at her stunned expression.\n\n \"Of course, it is Josh's!\" she exclaimed. \"I just thought we would be married first. I mean the rods were supposed to last for three years!\"\n\n \"Something tells me not much has gone according to plan in your life since meeting Josh,\" he chuckled. He then became serious quickly concerned by her reaction to his words, \"You do want this baby, don't you?\"\n\n \"I, I mean I, yes I couldn't get rid of it if that's what you're asking,\" she shook her head. \"I'm just stunned. This wasn't what I expected. I need some time to wrap my head around it. You're sure?\"\n\n \"Ninety-nine percent sure but we'll do a blood test to confirm it,\" he said and wheeled himself over to a draw and gathered the needles and tubes for the test. \"I'll send it off this morning and put a rush note on it. We should know by tonight.\"\n\n \"Pete, don't tell Josh yet, I'd like to be sure and then I will tell him in my own way if that's okay,\" she paused, \"He'll be happy won't he?\" She asked tentatively. \"I mean we've just moved in together and I am still a bit of a basket case and I can think of a lot of reasons why he mightn't think this is a good thing.\"\n\n \"He will be happy, trust me,\" Pete reassured her. \"Shotgun wedding and all,\" he chuckled. \"You tell him when you're ready. I won't interfere but don't leave it too long okay?\"\n\n \"I promise, he will know within a day or two,\" she smiled crookedly.\n\n \"Make sure you do because we will need to take that rod out of your arm and that will probably mean a few stitches that Josh will want an explanation for,\" Pete explained. \"Why don't we make an appointment for Wednesday or Thursday to do it and start a prenatal plan.\"\n\n \"Gosh, prenatal? I would only be a month along at most,\" she said shocked by the idea.\"\n\n \"Best to start things off on the right foot,\" he assured her. \"Okay let's let Josh in and answer all those questions he has,\" Pete smiled and opened the door calling Josh into the room.\n\n \"What's the verdict? Bubonic plague? Swine flu?\" Josh asked as he walked in. \"I can take it, give it to me straight Doc,\" he chuckled.\n\n \"As far as I can tell she's perfectly healthy. She recovered nicely and this nausea will probably pass in time. I'm sending off some blood tests just in case it is plague but the chances of that are pretty slim,\" Pete said with a perfectly straight face.\n\n \"So life goes back to normal? She can drive herself to work in the city once or twice a week no problems?\" He asked.\n\n \"Sure, but get her something decent to drive,\" Pete advised.\n\n \"There's nothing wrong with my car,\" Peri said defensively making Josh laugh.\n\n \"I might have to insist on something with a few extra safety features given all that has happened lately,\" Pete said with a knowing smile.\n\n \"Fine,\" Peri gave in reluctantly realising her tiny two-door hatchback wasn't going to be very useful once she had a baby. \"Let's go shopping then,\" she sighed.\n\n \"Geez, next time you argue with me I will just get Pete to advise you to do it,\" Josh teased.\n\n \"Enjoy,\" Pete chuckled. \"I'll see you at lunch Josh.\"\n\n \"Yeah, I imagine Maryanne just wants to confirm some dates with us,\" he nodded. \"See you there.\"\n\n \"And I will see you on Thursday for a follow-up,\" Pete reminded Peri to make the appointment before leaving.\n\n \"Follow up?\" Josh asked.\n\n \"I like having my weekly meetings with Peri,\" he replied with a grin. \"I'd miss her if she stopped coming to see me so often.\"\n\n \"You make me sound like a hypochondriac,\" she complained making the men laugh as they walked out of the examination room.\n\n *****\n\n Peri and Josh drove from the medical practice to an industrial estate in the western suburbs where Josh pulled into a Custom car business. \n\n \"About time, you came to collect it,\" A taciturn old man said in greeting them, \"This isn't a car yard you know.\"\n\n \"Geez, grumpier than usual I see?\" Josh said good-naturedly. \"You know why we didn't come earlier, don't pretend you don't.\"\n\n \"This is her then,\" the old man said looking at Peri.\n\n \"Yes this is Peri, and Peri this is my Uncle Manuel. Take no notice of his grumpiness, he's happy to see us,\" Josh chuckled. \n\n \"Happy to get rid of the car that delinquent brother of yours parked here months ago,\" he grumbled and began walking away before Peri could respond.\n\n \"D. said you were happy to do it,\" Josh chuckled following the old man who grumbled about Dante coming in to check all the time on its progress and wanting it to be perfect as if he would ever do shoddy work.\n\n \"At least it wasn't one of those pissy little smart cars,\" he said pulling a dust sheet off a small SUV. \"Well, there she is,\" he grouched and stepped away from the car.\n\n \"You bought me a car?\" Peri said stunned.\n\n \"No, D. and Lio bought you a car so that they didn't have to worry about that old car of yours breaking down on the way to work,\" Josh said. \"It's a delayed Christmas and engagement present.\"\n\n \"You knew when you mentioned a new car this morning?\" she asked incredulously. \n\n \"I suggested a new car, I never said anything about buying one,\" Josh grinned. \"I wanted to know you were okay to start driving again before letting them give it to you.\"\n\n \"It's so pretty,\" Peri whispered approaching the car and running a finger along its surface. It was the colour of polished copper, almost pink but not quite. \"May I see inside?\" she asked the grumpy old man.\n\n \"It's your car sweetheart,\" he grouched back at her. \"Get in it and drive it the hell out of here.\"\n\n Peri opened the door and sat in the driver's seat adjusting the seat and mirrors and praising the colour co-ordinated interior. She'd never had a car with a touch screen display before and as she looked at the computerised dashboard, she realised just how old her car was. \n\n \"I need to go to work for an hour or two,\" Josh said leaning into the car and kissing her. \n\n \"Wait, I'm not even sure I can drive this thing!\" she exclaimed.\n\n \"That's okay. They can show you,\" Josh turned his head to look at where his Uncle stood with Dante and Lio.\n\n \"Oh my gosh, Lio!\" she smiled widely and Josh moved so she could step out of the car. She went over and hugged him tightly, \"It's way too much but, thank you!\" She gushed and hugged Dante in the same way.\n\n \"I take it that you like it?\" Dante said softly returning her embrace awkwardly all too aware of how good she felt in his arms and that she was engaged to his brother who stood a few metres away watching the exchange.\n\n \"It's amazing, but you shouldn't have,\" she said stepping back to look at them properly. \"It's so pretty. I love it!\"\n\n \"I'm going to head off,\" Josh said coming to stand beside her. \"Dante will show you everything you need to know and go for a drive with you so you can get comfortable behind the wheel.\"\n\n \"Really? You'd do that for me?\" She asked Dante.\n\n \"I insisted,\" he chuckled. \"I wanted to be here when you got it, but Lio drives like an old lady so we were late.\"\n\n \"No everyone feels the need to dice with death on the roads. Maybe I should be going for a drive with her,\" Emilio said seriously though his eyes crinkled as he held back his smile. \"He's not a good passenger, Peri. I suggest you just drive him back to work and go for a drive on your own.\"\n\n \"That mightn't be a bad idea,\" Josh chuckled and kissed her goodbye. \"I'll see you all at lunch.\" He strode off towards his car with Emilio.\n\n \"You ready?\" Dante asked dangling a key from his hand. \n\n \"Yes!\" Peri said excitedly. Then she walked over to where Manuel stood watching them, his grumpy expression unchanged. \"Thank you so much for all the hard work, it's amazing.\" Peri held out her hand to him unsure of how he would receive an embrace from her.\n\n \"What no hug for me when I did all the work on it?\" he grumbled but Peri could see the twinkle in his eye this time. She grinned and hugged the old man. \"I'm glad you're feeling better girl. Careful of that one,\" he nodded his head in Dante's direction, \"He's a grumpy old bastard like me.\"\n\n \"Oh I don't know, he's always been pretty sweet to me,\" Peri laughed, \"Just like you.\"\n\n \"You can stop hugging her now you old goat,\" Dante grumbled and walked towards the car. \n\n \"Told ya so,\" The old man mumbled under his breath and winked at her before releasing her from the embrace.\n\n \"Alright let's start with the basics,\" Dante said as she climbed into the car again. \"Hand me your phone and we'll get it synced up. They sat in the car without moving for a good half hour while Dante explained the touch screen capabilities and downloaded the necessary apps for her, before talking about the car.\n\n She realised why they had been worried about her driving her beat-up little car as he explained all the safety features. Dante was a surprisingly good passenger preferring to talk about the cars features and how she was feeling about the new house than worrying about the road. He agreed that working from home on the family history was probably a good idea but encouraged her to come into the auction house at least two days a week to continue with the cataloguing she had begun.\n\n \"It's a good system you have set up and Lio and I have been adding to it as new pieces have come into the collection. You're an expert on finding the histories though and if the pieces belong to the family collection or are just wonderful pieces,\" he said explaining why he was pushing her to return to work with him and Lio. \n\n \"It would be nice to come back in occasionally,\" She mused. \"I'm still pretty weak though so I couldn't move the items around like I used to on my own,\" she said considering not only the fact that she was still recovering but also that she was pregnant. The word seemed to foreign and she hadn't taken in the full implications of what it would mean for her yet.\n\n \"Just come in for a few hours here and there until you feel up to it,\" Dante said. \"We never had anyone to help us before but we liked it when you were there taking charge and putting in the new cataloguing system. It's much easier to handle the collections that came through the auction rooms as well now.\"\n\n \"I'm glad,\" she smiled. \"Though I only tweaked the existing set up it's not a whole new system.\"\n\n They pulled up in front of the restaurant and got out of the car. Just the strong smell of food made her tummy roll but she swallowed hard and forced herself to walk inside. She saw Josh sitting at the usual table with his siblings and smiled. She greeted them all with a kiss on the cheek as she worked her way around to where he sat.\n\n \"Josh, I want to show Andie my car, so I'll meet you at home later?\" she asked without asking.\n\n \"Sure, you should eat something, though,\" he said with concern.\n\n \"I'm still a bit off, I'm not sure the rich food here would agree with me at the moment,\" she pulled a face. \"I'll grab a sandwich with Andie.\"\n\n \"My cousin was in the lab when the blood tests came in,\" Pete said conversationally. \"It's just like we thought, so just rest and take it easy for a while,\" he advised. \"See me Thursday though and we'll look at your arm then.\"\n\n \"What's wrong with your arm?\" Josh worried.\n\n \"Well with the bubonic plague the arms have to come off first,\" he chuckled. \"It's just a follow-up, nothing to be concerned about,\" Pete groaned seeing Josh look at him raising an eyebrow.\n\n \"Have good lunch everyone,\" Peri began to walk away but Josh grabbed her hand. \"Drive carefully,\" he pulled her back down to kiss her again.\n\n \"I will, I'll see you tonight,\" she put a hand to the side of his face and smiled.\n\n *****\n\n Peri met Andie at a small caf\u00e9 in a shopping plaza where she had spent the morning shopping for a client. It was in the open air and Peri found that without the strong smell of food she was hungry and could stomach the simple toasted sandwich she had ordered.\n\n \"That was good,\" Peri enthused popping the list bite of her sandwich into her mouth and sipping at the coke she had ordered hoping it would keep her stomach settled.\n\n \"I can't wait to see your car,\" Andie said. \"Do you want to follow me home and then take me for a drive?\"\n\n \"Are you sure you don't have more shopping to do?\" Peri asked. She wanted to talk to her mother about her other news but she hesitated knowing that she should tell Josh first. She had changed her mind about telling Andie several times their simple lunch. \"I could take you for a quick drive and then bring you back here, I have a few things to do anyway, maybe we could shop together.\"\n\n \"That sounds even better,\" Andie approved. \"Let's go. I'm so excited for you.\" They left the caf\u00e9 and walked through the carpark arm in arm.\n\n \"It's a lot roomier on the inside than it looks from the outside,\" Andie said climbing into the passenger's seat.\n\n \"I feel so spoilt, our parents gave us a house and now Josh's brothers have given me a car, I feel like I should do something for everyone,\" Peri said. \n\n \"My beautiful girl, we do these things because we love you and we can. Not to get anything in return,\" Andie declared looking at her daughter with pride in the woman she had become.\n\n \"Mum,\" she said softly, \"There's something else but you have to promise not to say anything to anyone not even Charles,\" Peri said nervously changing her mind about telling her mother for the umpteenth time. \n\n Visions of everything that had happened recently raced through Andie's mind as she slowly nodded. \"You can tell me anything, baby,\" she said softly reaching out and taking Peri's hand preparing herself for bad news. \"Is your recovery not going as well as we were led to believe?\"\n\n \"No, I am perfectly fine. All healed and getting stronger every day. The injuries did cause one side effect, though,\" she admitted looking over at her mother who was obviously worried. \"The birth control rods I have in my arm were somehow damaged and stopped working.\"\n\n \"You're pregnant?\" Andie gasped horrified that Peri had barely regained her health and was now having to find the energy for a baby to grow inside her.\n\n \"How could Josh be so careless,\" Andie exploded. \"You've barely got back to being your old self and now this!\"\n\n \"We didn't know,\" Peri cried. This was not the reaction she had been hoping for and she began to worry about how Josh would react.\n\n \"You can't keep it,\" Andie said aghast. \"Your body has been through enough, have you seen Pete?\"\n\n \"Yes, this morning that's how I found out. I thought I just had a tummy bug or over did it with the house move,\" she said defensively. \"I can't get rid of it,\" she said quietly, \"I just can't.\"",
        "\"What does Josh think?\" Andie asked more carefully hearing the distress in her daughter's voice.\n\n \"I haven't told him yet,\" she admitted sadly. \"I'm afraid he will act just the way you did and I couldn't handle that right now.\"\n\n \"Oh baby, I'm sorry. It's just that I,\" she paused unable to voice the fact that she still had nightmares about walking into the hospital in Canberra and seeing Peri so badly broken. \"I' sorry, I will do everything I can to help you. Tell me what you need. I am here for you one hundred percent. If you are sure about having this baby, then I am going to be the best granny you could ever imagine.\"\n\n \"You, a granny?\" Peri laughed softly, \"I hadn't even thought of that.\" She started the car and began to drive still giggling. \n\n They talked about what Pete had said and what she thought she might do once she had told Josh going through several scenario's and preferring the idea that he would be thrilled. They had talked about starting a family immediately. Her biggest disappointment was that they weren't already married. \n\n \"I would have liked all the pieces of that stereotypical life in place before I had a baby,\" she sighed.\n\n \"So elope,\" Andie said. \"You can always redo the ceremony later or not.\"\n\n \"It would be so hard for Josh to be away from work right now,\" Peri argued.\n\n \"So do the honeymoon later too. Just do it on a long weekend. Invite just me and Charles and his parents as witnesses. No one else will mind too much that you have eloped,\" she said reasonably.\n\n \"His siblings might,\" Peri pulled a face. Andie seemed to think about it, before looking up at Peri with a devilish smile.\n\n \"I have it! I know exactly how you can have your cake and eat it too,\" she couldn't help grinning. She was bouncing with excitement as her mind kept working. \"I have a great idea for how you can tell Josh now too.\"\n\n *****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "engagement",
        "control",
        "dominance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-15"
}