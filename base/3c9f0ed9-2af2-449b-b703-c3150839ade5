{
    "title": "Felicity Ch. 20",
    "pages": [
        "Chapter 20. Paula and Paul\n\nShe had come to my campsite from hers to thank me for helping her son that morning.\n\n\"He seems to be a good kid,\" I said.\n\n\"Yes, he is, mostly. He is not nearly as helpless with his broken leg as he led you to believe. He had ulterior motives.\"\n\nI nodded but let her statement pass without comment. She understood that I knew what he had wanted.\n\nI poured her a mug of hot black tea that had a dash of coconut rum in it and a second for me. She thanked me and after her first sip said, \"Wow, this is just beautiful. My name is Paula by the way.\"\n\nI told her my name was Paul. I shook her hand for a bit longer than customary, but she did not mind. \n\nShe was perhaps in her late thirties, early forties, just as I was. Paula's smile was one of those that make you smile whether you felt like it or not. She was a short vivacious brunette with short hair and great tits. I could see that her tits were unconfined and I watched their every dance. She was definitely cute and definitely sexy. I had an erection within moments that did not diminish during her long visit.\n\nOur conversation centered on the tea for a while then veered to the temperature of the river water, (cold), and then to her kids.\n\n\"Will you be around tomorrow to help my son Wesley if he needs help otherwise?\" She asked.\n\n\"No, my trip here was for the purpose of climbing that mountain and I am starting out early. When I get back I intend to soak in the hot springs for a while.\"\n\n\"She smiled at me and asked, \"Would you mind having company on your mountain hike? It is also on my to do list and Wesley can't join me and his sister wont join me.\"\n\n\"I would be happy to have your company.\" I worried that I said that too quickly but she seemed to be very pleased.\n\nI refilled our mugs twice more as we talked into the night about many things. We had become very comfortable with each other very quickly and laughed often. We regaled each other with our camping stories. It was probably quite late when Wesley came to my site. \n\nPaula told him, \"Tell your sister she will not be forced to climb a mountain in the morning. I will be back shortly.\"\n\nTen minutes later I stood with Paula as she prepared to leave but before taking a step she asked me if she was the cause of my very prominent erection.\n\n\"Yes,\" I said.\n\n\"Interesting. Thanks,\" she said.\n\nActually I had noticed that she had glanced at my erection almost as often as I stared at her tits. I had watched her nipples as they tried to break through her shirt.\n\nAs I leaned over to kiss her cheek her hand \"accidentally\" made contact with my cock. I decided to give her a second kiss and when I did her hand pressed my cock a bit more firmly. My third kiss landed on her lips and I held it there. She gripped my cock and intensified her kiss. I ran my hand up her t-shirt and discovered it was the only garment she wore.\n\n\"Do you have a condom?\" she asked.\n\nIn answer I took her hand and led her inside my tent. Less than a minute later she was astride my hips savoring the slow entry of my cock into her pussy.\n\nI was very flattered that she wanted to fuck me so I decided to hold back as long as it was necessary which turned out to be about twenty minutes. On the way to her big orgasm she had a few small ones and her pauses for those allowed me to hold on but I had no chance when her big one came. When a deep but silent groan enveloped Paula I let go of my torrent. She said \"Oomph\" when I pressed her ass down to me and drove my cock deep into her as I filled the condom; it gave her orgasm a sequel. \n\nShe lay on me as she gasped for air for a few minutes then she kissed me wildly, got up, put on a t-shirt and left. I did not have the energy to tell her she had put on my t-shirt instead of hers.\n\nHer fuck was amazing. I had never seen a woman enjoy a fuck as much as she did. It occurred to me it might have been her first in a long while. It was for me. I greatly hoped that had not been a one and done.\n\nWhen I awoke the next morning she was naked and sucking my cock, my very first such experience. When she saw I was awake and sat over my thighs and asked, \"Any more condoms?\"\n\n\"We used my only one last night,\" I said.\n\nHer disappointment was palpable so I put my hands on her hips and slid her up over my body until her pussy covered my mouth and I began my work. I gave her my best effort. I was proud to get her to an orgasm quickly and prouder to see she had three in close succession. After a short rest she wheeled her body around and we were in a sixty-nine until I emptied my cock in her mouth.\n\nShe stayed in my tent while I went to the camp restroom and when done I quickly returned to my tent. Paula was still naked on my air mattress apparently asleep. I crawled up between her legs and kissed her pussy. She was not asleep. \"You are good at that,\" she said.\n\n\"Thanks. You are delicious.\"\n\n\"Thanks. We better get started. It is a long trek up.\"\n\nWe had Wheaties for breakfast and set out to conquer the mountain. It was a long hike but there was a nice trail to the top. The challenging part came as we got close to the summit; the last eight hundred feet of elevation took nearly an hour to conquer.\n\nAs is often the case there was a small hut at the top and a log for people to sign their name and the date. Paula and I noted that the last climbers had been there ten days before and that the average for summit conquerors was less than one a week. \n\nWe had not seen anyone on the trail after we took the fork to the summit. Everyone else we had seen on the trail apparently took the fork that led to a waterfall about a thousand feet below. I had done just that the day before. Apparently being the fourth highest mountain in the state won it little respect.\n\nWe rested and shared my Vienna sausages and crackers. After we shared her sports drink Paula asked, \"How healthy are you and your dick?\"\n\n\"Very, and I have a doctor that can attest to it.\"\n\n\"My pussy and I are very healthy and I have a doctor that can attest to it. Let's fuck.\"\n\nHer boldness impressed the hell out of me. So did her swiftness at getting naked. There was an aperture in a wall that served as a window and Paula put her elbows on the ledge and spread her legs for me. \n\nSomehow my shorts were already by my feet so I shuffled to her and swiftly stabbed her pussy with my dick. I took her to her first orgasm then turned her around, lifted her to the ledge and re-entered her.\n\nI did not have doggy style as a favorite way to fuck. I wanted the feel of tits on my chest, I wanted the kisses, and I wanted arms and legs wrapped around me. After giving Paula another orgasm I explained that to her. \n\nShe told me she only liked doggy style for hurried quickies, which was what she thought we were going to have. She thanked me for deciding to make love to her instead. \n\nI pointed out that from the window we would be able to see anyone coming for an hour before they got there.\n\n\"Fifty five more minutes would be nice,\" she said as she tried to devour me with a kiss.\n\nWe made love for a long while; the morning blowjob had given me stamina. We paused for a time when a doe and her fawn stopped to watch us. Paula and I kissed and caressed which seemed to fascinate the fawn. She came within five feet from the window.\n\nPaula spoke to her in a low soft voice and said, \"It's OK little miss. I told him to fuck me and he did but now he is making love to me. I like that a lot. What you see us doing is really, really nice. Ask your mother. She knows.\"\n\nThe doe seemed to shake her head in understanding then collected her fawn and led her away.\n\nWhen they had disappeared from our sight Paula gave me a long soft kiss and during it I resumed our fuck but with long delicate strokes. Somehow we were both naked by then.\n\nPaula was right, we knew it was no longer a fuck, we knew we were loving each other. Neither of us felt like changing that. Whatever our relationship had been before the deer became our witnesses it had suddenly changed.\n\nMany minutes later I filled her pussy but we maintained our embrace even after my cock slid out of her. \n\nI lifted her off the ledge and carried her outside. With her arms and legs still wrapped around me I leaned against the wall and sank to the ground. We continued our kissing as we enjoyed the view. We talked. We told each other our deepest secrets.\n\nWe had the hut to ourselves until it was time to set back so we did not bother to dress until then.\n\nOn our way up there had been a lot of groping and laughter along with a few kisses. On the way down we held hands mostly in silence. Twice we paused on the trail just to exchange a long deep kiss. My guess was that we had spent nearly two hours at the mountaintop.\n\nWe separated when we got to the campground. Releasing each other's hands proved to be much more difficult than expected and it took three kisses before we could manage.\n\nWe skipped the hot springs because it would have been dark before we got there. Neither of us minded that too much, our delay had been caused by much more pleasurable endeavors.\n\nPaula came to my campsite as I was pouring coconut rum into the pot of hot black tea. She was carrying a small bag that she threw into my tent. She was wearing my t-shirt. \n\nInstead of taking the cup of tea from my hand when I offered it to her she wrapped her arms around me and lifted her head for a kiss. I gave her a \"you are fabulous\" kiss that we maintained for a while.\n\nI had prepared a sausage and potato stir-fry with onions, garlic, and red peppers that was unhealthy enough to please. She helped me clean up after dinner. \n\nWe sat and drank our second cup of tea. Neither of us had said a word until she asked, \"How far away do you live from Felicity, Texas?\"\n\nI felt a big grin try to overwhelm my face as I answered, \"About seventy five miles up the south freeway.\"\n\nI saw a big grin threaten to overwhelm her face. A long, soft kiss later she said, \"I want to be one of your girlfriends. Not your fuck-buddy, a girlfriend. One you take on dates then fucks.\"\n\n\"I thought you already were,\" I said and immediately found myself inside big sloppy kisses. After her attack she smiled and rearranged our positions on the picnic table so she could sit on my lap. We kissed and embraced as we drank our tea.\n\nWe watched the stars and sipped from our mugs until I noted that again she was not wearing anything under her t-shirt. I gave her a slow, loving fingerfuck as I rubbed my face over her breasts. \n\nAfter her much more intense cum than expected we finished our drinks and prepared for bed.\n\nEven though my cock was in her pussy less than a minute after we were in bed we did not start our fuck for a while. We cuddled and kissed and talked.\n\nPaula said, \"We are going back tomorrow, the kids have things planned before they begin their senior year at Enormous State University. They are not into camping but let me talk them into it once a summer. I have several weeks of vacation left so I was hoping we could stay longer.\" \n\nIt took me a moment or two but I did pick up what she wanted me to hear and I immediately decided it was what I wanted to hear too.\n\nI said, \"In the morning, after you are all packed up, hand them the car keys and bring your stuff here. I doubt they will be too surprised but it would be a fun thing for you to do to them.\"\n\nShe giggled and said, \"Good idea although you are probably right in thinking they will not be too surprised. How long are we staying here?\"\n\n\"We leave tomorrow too but we are headed in the opposite direction. We have mountains, National Parks, and baseball games before we get to my main destination, Orcas Island.\"\n\n\"When are we going back home?'\n\n\"Three weeks before either of us has to go back to work.\"\n\nPaula's big smile told me she was very happy to know we shared the same profession, and the same work schedule.\n\n\"Orcas Island is on the straights between Vancouver and Seattle isn't it?\"\n\n\"Yes, we are going to visit with whales.\"\n\nAs I began to fill her in on my schedule she began our fuck. A few minutes later I noticed that she had stopped listening as she careened towards an orgasm so I concentrated on the fuck. I was not close to a cum myself so after she had her first major orgasm I resumed my narrative.\n\nPaula gave herself a few minutes then resumed our fuck but at a much slower pace. After I completed relating our itinerary I rolled us over and took us on a satisfyingly long fuck. We fell asleep immediately after we spooned.\n\nHer kids were a lot more surprised by Paula's change of plans than we had guessed. Apparently the youngsters thought I was gay. I was happy that among the things Paula brought to my camp was a folding table and a high back beach chair like mine. Park table benches become very uncomfortable very quickly.\n\nWe made it to my next mountain too late to tackle it that day so we set up camp in the National Forest then drove to the nearest town for dinner. We saw the diner at the same time and both of us said, \"There.\" It was a Triple D place featured by Guy Fieri on the Food Network which told both of us a semi-important piece of information about each other. \n\nAfter a very deliciously unhealthy dinner we stopped at a Cube-Mart and bought items Paula was going to need such as sweatpants and sweat shirts. We also bought a couple of pots and utensils and extra food since I was now cooking for two. \n\nAll her cooking stuff had gone back with her kids. She had been concentrating on her surprise for them and had simply forgotten about it when they packed it up.\n\nOur fuck that night was again satisfyingly long. I did notice that affection was creeping into all our couplings, not that I objected to that.\n\nMountain number two had a wide and well-populated trail to the top. It was just a two-hour hike so when we returned to camp we packed up and went to Phoenix and attended a baseball game that night. \n\nOur local team was the visitor and I had a team cap. Paula saw me put it on and was soon digging through her backpack until she found her own team cap, yet another nice thing we learned about each other. Those caps put us in a crowd shot for our local television, which we learned before the game was over. Her kids called to tell her they had seen us and to ask why we were in Phoenix.\n\nPaula seemed to be in the midst of an interrogation that she happily cut off when it got very loud in the stadium. The home team had tied the game with a homer into the swimming pool.\n\nPaula turned her phone off. It was then when it occurred to me that mine had been off since we met. I turned it on and found that my son had texted that he saw us on TV and asked if the lady sitting next me was in fact with me. \n\nI texted him and wrote, \"Paula is with me.\" I got our seat neighbors to take a picture of us with my cell phone and sent it to my son. Paula borrowed my phone and sent the picture to her mother.\n\nThe next two nights we spent in Las Vegas. We had gained two days on my schedule by skipping the Grand Canyon. I had camped on the north rim before and she had visited the south rim so she gladly exchanged it for a Las Vegas stop. Paula had never been there so we spent the time visiting every place she ever wanted to see.\n\nEvery time we were near the Bellagio she had us wait for the next fountain show. She loved the gondola ride at the Venetian and that I bought the photo for her. She loved the roller coaster at New York New York. I was happy to have survived it.\n\nShe loved the Bellagio buffet. We held hands everywhere we went. We never stopped in a casino. \n\nWe fucked each morning before we set out, then again in the afternoon after a shower and rest, and again when we returned to our room at the centrally located and relatively inexpensive Imperial Palace each night. It felt like a honeymoon.\n\nI sent my son a phone picture of us in Vegas and continued to do that at every stop for the duration of the trip. Every one of those pictures also went to Paula's mom.\n\nThe big mountain was next. We stopped briefly in Death Valley for the photo op before setting up camp below the highest mountain in the country not in Alaska, Mount Whitney. \n\nThe campground was more than eight thousand feet above sea level and I knew that spending a day acclimating to the altitude would be a good idea especially since the summit was still over six thousand feet above us. It would be a three-night stay. \n\nOur fuck the night we set up camp was a lot more about contentment than sex. We each wanted the other to understand that we were with whom we wanted to be.\n\nWe spent the next day on short walks, picture taking and two long fucks. That night we wore our sweat pants and sweaters during supper. It got chilly up there.\n\nThe next morning we set out for the summit well before six AM; we calculated that it would be a ten-hour hike but it took us fourteen hours to get back to our tent. The trail was good but two hours into the hike the lack of oxygen in the air became very noticeable. We rested by a lake for a few minutes then again by another lake two or three hours later. We were starving for air.\n\nWe continued to stop regularly to catch our breath. Then we got to the hard part, the long slow switchback portion to the top. \n\nI had been fooled by false summits before, the ones that make you think you are nearly to the top only to discover there is another set of switchbacks leading around what I had thought was the summit. Those had always somewhat irritated me. The ones on Mt. Whitney pissed me off.\n\nI was already pissed because all the way up the mountain there were people running past us. Running!\n\nHad I had any energy to spare I would have thrown rocks at them.\n\nPaula proved to be just as stubborn as me and we did make it to the top. We signed the log and collapsed on the floor of the shelter.\n\nWe saw one of the runners run in, look at his watch, sign the log, then turn around and start running back. A fellow hiker noticed our astonishment and said, \"It's a club. Supposedly some do the trip in under six hours.\"\n\nPaula and I were joined in our groans by most of the people there. That was when I noticed how many people were with us atop the second tallest mountain in the country, eight. I looked at the log and noted that Paula and I were the twenty-eighth- and twenty-ninth persons to sign in that day.\n\nAlthough I figured most of those had been the running club it was still a tremendous difference from our first mountain in which we had the privacy for a long leisurely fuck. Even more mind bending was the fact that our first mountaintop was no higher than our campsite was at the base of Mt. Whitney.\n\nWe stayed in the shelter and visited with others for a while. One young guy said he had climbed the mountain on every one of his birthdays since he was ten. We all found enough air to sing happy birthday to him.\n\nAfter about twenty minutes Paula and I noticed that our legs were getting stiff and when we overheard a woman urge her husband to \"Get up, it will be dark when we get back,\" we decided we better start down too. \n\nWe both knew that \"down\" was hard on the knees and back but we were not in too bad a shape when we got to the not-so-steep terrain. Two hours later our lungs found useful quantities of air and we began to say hello to the demented ones running past us. They were the only ones still going up.\n\nThere was a gift shop at the trailhead that had a deck area. I got us soft drinks, sandwiches and the appropriate t-shirts. Paula and I sat on a bench and wolfed down our food and drinks. We were famished.\n\nAs we shared a second drink Paula began to giggle. \"I am so proud of myself I could scream,\" she said. \"Everyone I know will have to put up with my bragging for years. I better get another shirt.\"\n\nI laughed and when she returned with a second shirt and two coffee mugs I said \"Don't get too cocky. The next two are tough.\"",
        "\"What two?\"\n\n\"Mt. Hood and Mt. Rainer.\"\n\n\"Umm, let's skip Mt. Hood for now. It seems every summer people die up there.\"\n\n\"Not to worry, we were not doing either of those this trip, they require equipment we don't have. I agree with you on Mt. Hood. I know thousands of people play up there every year but I am a bit afraid of it. \n\nMt. Rainer however is definitely on my list but you can't walk on the tundra which means you have to walk on the ice and hiking boots do not work well on ice.\"\n\n\"I take you have tried,\" she said.\n\n\"Three trips two attempts.\" \n\n\"What happened on that third attempt?\"\n\n\"A blizzard. My tent looked like and igloo so I stayed at the lodge.\"\n\n\"What time of year was that?\"\n\n\"Mid-June.\"\n\nShe shook her head at the absurdity then asked, \"Was this the last mountain?\"\n\n\"Yes.\"\n\n\"Then I can tell you that I think from now on we should stick to mountains under ten thousand feet. My body does not seem to manage well without oxygen.\"\n\nI explained, \"Every mountain not in Alaska is smaller than the one we just climbed. The only fourteen thousand plus mountain left on my quest is Mt. Rainier. I have done the tallest mountain in thirty-eight states. My next two tallest are Rainier and Mauna Kea. \n\nI have not done Kansas, Nebraska, Indiana or any of the states in the Midwest but all of them have peaks well short of our first one. East of New Mexico Texas has the tallest mountains in the country.\n\n\"Do you intend to go up all fifty?\"\n\n\"Intend yes, expect I will, no. I will get to forty-eight but not Denali and probably not Mt. Hood. Want to keep me company on any of them?\"\n\n\"Have you done Florida?\"\n\n\"Yes, sorry.\"\n\n\"Just how tall is Mauna Kea?\"\n\n\"Under fourteen thousand.\"\n\n\"That tall, huh.\"\n\nWe were almost a thousand feet higher today. Anyway I understand most of the climb would be by car. Remember we are at over eight thousand feet now.\"\n\n\"So you think we were at what, twelve thousand before we began to die?\"\n\n\"Yeah, about that.\"\n\n\"OK, twelve thousand, any higher than that you go by yourself and leave me a chair and hot chocolate. I'll cheer you on.\"\n\n\"That would leave out Hawaii.\"\n\n\"Exceptions could be made.\"\n\n\"Deal,\" I said with a laugh. \n\nWe held hands during our hike back to our tent; we were still almost thirty minutes away. There was just enough light left in the day for us to make it to our campsite safely. I brewed chocolate for us and put slices of banana in our mugs. No rum infused tea that night, we were still a bit lightheaded. \n\nBefore we went to bed we both realized that we had made plans to be together in an undefined distant future. We both treated that as just talk at first but the idea and the wish could not be easily dismissed.\n\nLess than forty minutes after we made it back to our tent we were asleep.\n\nThat was our first day together in which we did not fuck. We were exhausted and cuddling together was plenty good enough for us that night.\n\nThe next day we detoured on our way to Yosemite National Park to say hello to Giant Sequoia trees. After we felt we were sufficiently humbled and I had the pictures to prove it we continued to our next three-night destination.\n\nI was setting up the tent at White Wolf when Paula said, \"When you finish that lets fuck first then go sightseeing.\"\n\n\"Yes, dear,\" I said as if it was an imposition.\n\nShe came to me, grabbed my crotch and hissed, \"How dare you Yes-dear me?\" She grabbed me by the back of the neck and gave me a ferocious kiss then went into the barely stable tent.\n\nI noticed our neighbors in the next campsite were laughing. He said something that infuriated his wife and got the crotch grab I had just gotten. I nodded to him as he smiled. His ploy had worked well.\n\nI had the tent up and secure and had just started inflating the bed when I noticed Paula was nude with her hands on her hips and tapping her foot impatiently. I closed the tent and took my clothes off. Since she was in no mood to wait on the bed I lay down on the floor and beckoned her to me. I already had an erection.\n\nShe was astride in a flash and trying to fuck me to Hong Kong seconds after that. Her orgasm arrived quickly and with great intensity. It was the first time she had allowed a sound to escape during an orgasm, a deep, growling moan, which sounded like Chinese.\n\nI smiled when it occurred to me our neighbors likely heard that.\n\nPaula draped her body over mine and sighed, \"Thanks, I needed that.\"\n\nI kissed her then asked, \"Are we going again or do you want me to save it for later?\" I had not cum.\n\nShe gave me a big smile and said, \"If you don't mind, more please.\"\n\nI rolled her over unto her back and tried to fuck her to Borneo. That time we were both loud and as Paula's body and pussy went into spasms I released a torrent of cum into her. We saw orangs.\n\nWe rolled away from each other and held hands as we gasped for breath. \n\nShe said, \"Don't panic when I say this because it would be impossible, but I wish you had just gotten me pregnant. Not because I want a baby but because that was the kind of fuck that should get any woman pregnant. You know what I mean?\"\n\nAfter thinking about it for a second I said, \"Yes, in fact it felt that way for me too.\"\n\nWe laughed for a minute then managed to stand. Our bed was now fully inflated.\n\n\"Aren't self-inflating beds wonderful? But slow?\" She said.\n\nI nodded then dressed. She dressed too and we finished setting up camp. I was about to slam shut the back gate on my SUV when she put her hand up for me to stop and listen. What we heard was the slapping of bare hips against each other. \n\nPaula grinned and gave me another ferocious kiss. I shut the back gate softly. As we quietly got in my car we noticed their car had Texas license plates too.\n\nYosemite Falls is a lot more impressive in person than in photos or videos. So is the cliff, it took our eyes several moments to pick out the climbers on Half Dome. \n\nPaula seemed to be afraid to ask so I went ahead and told her that any mountain that required that type of effort would remain unconquered by me. From our vantage point on solid ground scaling that wall seemed like as an insane a thing a human could do.\n\nI found a couple of places where I could get a major part of the falls in my camera but not all of it. Apparently as I was taking pictures of Paula among the rocks with the falls as a background there was no one behind me and she flashed her tits. I was quick enough to get that picture. She did that at several other photo ops holding her shirt up long enough for me to get the picture.\n\nShe looked at them as we drove back to the campground and said, \"They are not too bad, are they? They do sag a bit but I could still go topless at an appropriate beach I think,\" she said.\n\n\"Absolutely,\" I said.\n\n\"I would like to do that once.\"\n\n\"You will get a chance to do that. Our next stop is San Francisco. I think there is a nude beach somewhere around there.\"\n\n\"I don't know about nude.\"\n\n\"You don't have to be nude, you can just be topless.\"\n\n\"Oh. Will you be nude?\"\n\n\"Possibly. That is on my bucket list too.\"\n\n\"Hmm. I guess I need to compile a bucket list of my own. Of course what would have been item number one I have already done.\"\n\n\"And that would have been?\"\n\n\"Fucking a perfect stranger. Thanks.\"\n\n\"Oh, you are welcome and I am flattered.\"\n\n\"You should be since you are also my first man in almost two years. Apparently I needed you.\"\n\n\"But you don't need me anymore?\"\n\n\"No, I have moved on. Now I just want you. Badly.\"\n\nShe had slipped the seatbelt past her shoulders by then and had me unzipped with my cock in her mouth in less than ten seconds. It had not been that long since my last explosive ejaculation so it took my cock a while to respond. It arrived a full alert just as we got at our campsite. Our neighbors were at their picnic table and waved as I parked.\n\nA big grin filled their faces when they saw Paula sit up; they had immediately understood where her mouth had been.\n\nPaula waved back before dipping down to give my cock one last slurp then leaving the car. \n\nI hastily sequestered my cock and zipped up. By the time I got around to joining Paula she was introducing us to the neighbors. \n\nLucy and James were on their second extended camping trip and their third honeymoon. Paula told them we were on our first of each. \n\nMy conversation with James veered towards our respective camping adventures. His were a hell of a lot more exciting than mine but he seemed fascinated by my mountain top quest and especially my upcoming Orcas Island adventure.\n\nLucy and Paula were doing a lot of OMG's and they interrupted us to announce that they worked for the same school district and had dozens of mutual friends. Small world indeed.\n\nFor the next hour or so the ladies shared gossip on their mutual friends as I listened to James' adventures in the tropics. I think I had convinced him to put Orcas Island on his to do list and perhaps add the mountain quest. He had definitely convinced me I needed to explore tropical rainforests particularly those in Costa Rica.\n\nIt was late in the afternoon when James reminded Lucy that if she wanted to eat at the restaurant at the village they needed to get going. He asked us to join them.\n\nLucy looked at Paula with a mischievous grin and asked, \"Didn't you have some unfinished business?\"\n\nPaula blushed which surprised me. I had not seen shyness from her. Before she could come up with an answer Lucy added, \"We will save you a place at our table. We have souvenir shopping to do for our kids and sisters first.\"\n\nWithout a word Paula kissed Lucy on the cheek, grabbed my hand and pulled me to our tent. I could hear Lucy giggling and a chuckle from James.\n\nPaula wanted us nude and wanted me to take her as opposed to being on top. In both our minds we though we needed a fast frantic fuck. It quickly degenerated into soft lovemaking. Our best such event to date.\n\nIn our quiet afterglow I reminded Paula that we had people waiting for us. She told me that she was positive that if anyone understood our delay James and Lucy would. Nevertheless ten minutes later we were dressed and on our way.\n\nAs it turned out there was a waiting list at the restaurant and they were still waiting to be called. They showed us the shirts they had gotten for their girls and asked if we needed to get souvenirs.\n\nAt that precise moment their names were called and we were seated.\n\nPaula said, \"Our kids are grown, they don't get anything except the occasional picture. He is going to buy me a t-shirt but we can do that after dinner. Why is this place so crowded?\"\n\n\"It's Friday,\" James said.\n\n\"It is?\" Paula asked incredulously.\n\nLucy giggled and said, \"Yeah, my best guess would have been Wednesday. It is amazing how quickly time and date cease to matter on trips like this. James keeps track because we have reservations here and there throughout the trip.\"\n\n\"Where is next for you?\" I asked James.\n\n\"Reno, like most of the people here. We have hotel reservations but will stay just through Sunday night. We don't gamble, we just want to say hello to Lake Tahoe. My grandfather's favorite TV show was Bonanza and we are going to visit the place where the exterior shots were taken. We also need to find a Laundromat. We have just started to work our way home. Where are you two going next?\"\n\n\"San Francisco. We have hotel reservations for two nights and two baseball games to attend,\" I said.\n\nPaula added, \"And Napa valley to explore and a nude beach to visit.\"\n\nLucy began to laugh and James explained, \"That is exactly what we just did. A friendly warning, it is steep trail down to the beach, wear your hiking shoes. Don't even consider getting into the water. Very cold and very dangerous and don't forget the lotion, we saw some sunburned boobs that were not going to appreciate being touched for a while.\"\n\n\"Good to know,\" Paula said amid her giggles.\n\nBy the time we finished dinner we felt like we had known each other for years. I had also completely lost track of the fact that Paula and I had met just over a week before. I had our server take a picture of the four of us. \n\nAs we sipped our coffee Paula showed Lucy her boob flashing pictures. \"Do you do that often?\" Lucy asked.\n\n\"No, first time. It suddenly appeared on my bucket list.\"\n\nLucy laughed and took a camera from her purse and showed Paula a picture that caused her to exclaim, \"I can't believe you did that there. How did you get away with it?\"\n\n\"Everyone was facing the field and I had my back to them. No one was behind James. This is not close to the riskiest such picture we have taken but it is the most spectacular. I am proud of it.\"\n\nWithout speaking Paula asked Lucy if she could show me the picture. She in turn looked at James and he nodded.\n\nThe picture showed a smiling Lucy exposing her tits and pussy at the San Francisco Giants stadium. It appeared that every seat in the park was taken and there were people walking behind her. It was indeed a great picture and said so.\n\n\"Wear a jacket and nothing else as a top. You need the jacket anyway for night games, it's cold in there,\" Lucy said to Paula.\n\nPaula said, \"I bought a nice dress in Las Vegas but I will need a skirt. I see that everyone is bundled up and I only have a windbreaker. Honey, we need to stop along the way and do some shopping,\" she said to me. \n\nI smiled as I nodded. I had been promoted to \"Honey.\"\n\nPaula took another long look at Lucy's flash picture before returning the camera. She whispered something to Lucy that brought a big smile to her face and a kiss to Paula's cheek.\n\nWe left the restaurant and Paula and I went to the souvenir shops while James and Lucy headed to their car, they said they had unfinished business.\n\nWe purchased our \"been there, done that\" shirts and coffee mugs and strolled around the village for a while. I was still somewhat surprised to note how natural holding hands had become for us, I had not noticed we were until I had to release hers as we got in my car. I was very pleased when after we were on our way Paula reached over and took my hand in hers.\n\nWhen we got back we could clearly hear James and Lucy fucking. In less than ten minutes we were too. I had a lot of stamina that night and managed to hang on until Paula had fucked herself out. We could hear that James and Lucy were having a marathon fuck too. We could also clearly hear Lucy's every orgasm.\n\nThe next morning Lucy and James joined us for breakfast, I had prepared a large deer sausage and bell peppers, onions, garlic and potatoes monstrosity and I invited them over to help us subdue it. They said they loved it.\n\nThey were going on a day trip to visit the Giant Sequoias. Paula told them that we had purchased the deer sausage at a butcher shop close to the entrance to the park. I told them to expect to feel small.\n\nDuring breakfast I did notice that Paula and Lucy kept physical contact with each other's body. Before they left on their daytrip Paula and Lucy kissed each other's lips softly and for more than a moment.\n\nI asked Paula, \"A new item on your bucket list?\"\n\n\"Yes, number one now that all of the previous number ones have become a great success. Would you be upset?\"\n\n\"Not as long as I get the last dance. I think you can play a little more with Lucy. What did you whisper to her about the picture last night??\n\n\"I told her she looked delicious. The first time I have ever said that about a woman. I shocked myself.\"\n\n\"She does look delicious and I am sure James has mentioned it to her more than once. I wonder if she has heard that from another woman before. She looked very pleased when you said it and was not shocked by it at all.\"\n\n\"I really regretted saying it as soon as I said it and had expected her to be a bit shocked, maybe even pissed. I had hoped for polite thanks but got a wet kiss on the cheek instead. Now I want a real kiss from her. I want her tits in my hands.\"\n\n\"Ah, wonderful lust, I said with a laugh.\" \n\nPaula giggled as she punched my arm lovingly. \"They seem to be about five years younger than we are and very much in lust with each other, I may not have the opportunity. But still, I am proud of both of us; we have brought out the horny teenager in each other,\" Paula said as she kissed me.\n\nI then reminded her, \"You and Lucy do live in the same town.\"\n\nPaula grinned.\n\nWe spent the day taking photographic advantage of all the scenic vistas prominent among them Paula's tits. The best photo was when she emerged from a tunnel topless just as a ranger's car was entering the tunnel. The ranger was a redheaded woman and her grin could be clearly seen in the picture.\n\nLate that afternoon Lucy called Paula and told us that they were bringing dinner. I though exchanging phone number was a nice gesture between them and likely useful when they got home. It was their third phone conversation that day.\n\nThey prepared delicious steaks for us along with enormous baked potatoes. After we stuffed ourselves we cleaned up our mess then settled around his fire. \n\nYosemite is the type of park in which you do not leave traces of food anywhere. It attracts large unwanted visitors.\n\nLucy shared some wine with Paula that she immediately loved while James and I put a serious dent on my stash of Dos Equis. The rule in all parks is no \"public\" consumption of alcohol. To keep things in proper protocol our wine and beer were in coffee mugs.\n\nWe talked late into the night. James was a Biology teacher and he regaled me with stories of lab disasters. I was jealous that he could have labs, TAKS practice testing had swallowed up almost all the time we had for labs in my school district.\n\nI did notice that as the evening progressed Paula and Lucy were kissing as often as they were talking. I also noted that the kisses were accompanied by tit caresses.\n\nI looked at James questioningly and he said with a grin, \"Her favorite hobby. It happens often but \"going all the way\" has become a rarity. Mostly one woman\"\n\n\"Do you know that woman?\"\n\nHe laughed and said, \"My little sister. They were having an affair before I met Lucy in Big Bend National Park. My sister had been trying to set us up for months but Lucy and I kept saying, no thanks. We were many days into our romance before we realized the connection. My sister re-married her husband and Lucy married me so they rarely have meaningful opportunities. We have kids and they have kids.\"\n\n\"I take it you have no problem with it.\"\n\n\"No, I know I am first, no, make that third, we have two girls. No fourth, her Mom. No fifth, probably tied with her sisters. Well anyway she seems to like me.\"\n\nI laughed as I realized that what he said was probably true for all married men.\n\nWe looked at our ladies and saw them exchange a passionate kiss. We also saw the each had a hand inside the other's shirt. \n\nSuddenly the kiss ended and we were urged to follow our ladies to our respective tents.\n\nJames said, \"One nice byproduct of the play is that it makes the ladies supremely horny for their men. Good night.\"\n\nJames hurried to his tent and I hurried to mine. Paula was already nude. \"Fuck me, fuck me, fuck me,\" she said.\n\nIt was a long, loud, breathless fuck. We abandoned ourselves to each other. We could hear James and Lucy do likewise.\n\nThe next morning when we returned to our tent after showering we saw that James and Lucy were packing up. Paula and I detoured to help them. The ladies were soon interrupting each other with kisses. \n\nJames and I grinned at each other as we loaded his 4-Runner. A few minutes later we watched the women share a deeply felt kiss. It was time for James and Lucy to go.\n\nI shook James' hand and Lucy gave me a kiss on the lips. Paula gave James a kiss on the lips and after Lucy got in her car seat Paula gave her another serious kiss. Each had a hand over the other's breast.",
        "We waved bye and Paula hurried us into the tent and into a fuck. Lucy had again made her horny.\n\nAs she rested in my arms she asked, \"Did I tell you I'm probably bi?\"\n\n\"No, but I suspected such,\" I said with a grin.\n\n\"I have never eaten pussy but that is likely because I had not run into a woman I wanted that way, until now.\"\n\n\"Then you should hold off on proclaiming yourself bi until you get a chance to do that. In fact you need to hold off until you go down on a second woman. The first one is just for checking off an item on your bucket list.\"\n\n\"That makes sense. Have you had that second opportunity?\" Paula asked. \n\n\"Yes, I have had several second chances offered, one at our first campsite as you know, but I have not been tempted. Many have assumed I was gay for some reason.\"\n\n\"That is because you are a very handsome guy. Did you regret trying it?\"\n\n\"No. It was an interesting and somewhat exciting experience. And it has been checked off the list. Checking off items on the list is always very enjoyable as you now know.\"\n\nIn the ensuing silence she was softly caressing my chest and kissing my neck.\n\n\"Did I mention I was your girlfriend?\"\n\n\"Yes, although James assumed you were my wife.\"\n\n\"Did you correct him?\"\n\n\"No.\"\n\n\"Lucy assumed you were my husband.\"\n\n\"Did you correct her?\"\n\n\"No.\"\n\nNeither of us spoke for a while. We were both mulling over in our minds if our omissions meant anything. I decided that there was no answer so I stopped worrying about it. Apparently Paula did too.\n\nI had to admit that Paula and I were behaving like a married couple on their third honeymoon too.\n\n\"Do we have any sausage?\" I asked.\n\n\"Let me see,\" she said and gripped my cock then let it go and said, \"We have some but it is apparently past its expiration date.\"\n\nI laughed and pulled her body over mine. A couple of kisses later I said, \"Then I guess it will be pancakes.\"\n\nWe minimally dressed, made coffee and pancakes and ate a leisurely breakfast. Between pancakes I apologized to her.\n\n\"I lied to you. We have another mountain to climb. The good news is that most of the climb will be in the car. We are going to say hello to the oldest creatures on land.\"\n\n'What kind of creatures?\"\n\n\"Bristlecone Pine trees, Thousands of years old. Older than the sequoias.\"\n\n\"Did James talk you into that?\"\n\n\"Yes and no. The pines are on my bucket list. I did not realize they were just a day trip away until he mentioned it. He gave me his map. Do you mind?\"\n\n\"I would never mind going anywhere with you. How high are we going to get?\"\n\n\"Sorry, I don't use that stuff.\"\n\nThat remark got me physically attacked just as a ranger was driving past. She stopped and laughed. I walked to her window and said, \"You are supposed to stop assaults, help me.\"\n\nShe was the redhead that had seen Paula flashing.\n\nPaula was on my back with her arms around my shoulders and her legs wrapped around my waist. She was growling as she gently bit my neck. The ranger laughed and said, \"I am more likely to help her. I am sure you deserve it.\"\n\n\"He does,\" Paula said to her.\n\nThe ranger drove on but not before taking a good look at Paula, or more accurately at where Paula's legs wound around my waist.\n\n\"I think she could see my pussy,\" Paula whispered in my ear.\n\n\"I know she saw something,\" I said.\n\nI walked us to my car and looked at our reflection on a window.\n\n\"She could not see your pussy but she had a very nice view of your beautiful ass,\" I said.\n\n\"Hmm. Maybe when we get back I could get myself arrested.\"\n\nI reached back and swatted her butt.\n\nShe tried to help me clean up without getting off my back but gave that up just as I finished. Perfect timing on her part.\n\nOur trip to Patriarch Grove was a lot easier than expected even including the gravel and dirt roads. The trip itself took a bit longer than expected. \n\nPaula and I were mesmerized by the surreal landscape and the thought that saber toothed cats and wooly mammoths likely rubbed themselves against the trunk of the trees. We were also awed by the fact that the biggest trees had obviously been hit by lightning at least once but had somehow survived.\n\nPaula was able to flash her tits for my camera several times, which was an added bonus for both of us. There were few visitors up there.\n\nOn our way back I mentioned to Paula that more than likely everyone up there with us was a science teacher.\n\nShe said, \"Only science teachers would know the place existed. Elementary school teachers would have taken you to a zoo.\"\n\nI mulled her statement in my head and decided she was pleased to be with someone that could show her things that were very different. I knew that the Bellagio Fountains was her favorite place so far, closely followed by the Bellagio buffet but I knew Patriarch Grove was now on her favorites list somewhere, as were Vegas and Mt. Whitney\n\nPaula saw her first bear and first moose on our way back. We stopped at the village and ate there before continuing home. It was late when we made it to bed so we did not fuck that night content to be naked in each other's arms. We did of course fuck first thing in the morning.\n\nI did note that the incidences of lovemaking had probably overtaken the fucks. \n\nIt was still early in the morning when we began our scenic drive to San Francisco and after deciding to ignore my navigation device I found our downtown hotel near Powell St.\n\nI had the valet place my car in an expensive parking garage and made him promised me it would be safe there. I did not understand why he was chuckling as he said that. \n\nI reassured Ishii that it was not in jail and would come back for it.\n\n\"Your Sequoias name is Ishii?\" the valet asked.\n\nI nodded yes. His smile became friendly and said, \"I will make sure the old masseuse has a comfortable stay.\"\n\nI smiled and stopped worrying about my vehicle.\n\nI left it there for nearly three days; I never drive when I visit a strange city. \n\nAfter we settled in our small but comfortable room in what would be called a \"boutique hotel\" we ventured out and as we wandered around we found a department store. \n\nWe had to look at the name more than once to be sure the name of the place wasn't Fuck but even after we were sure it was a letter short of that I took a picture of Paula next to it. We decided that would be as good a place as any to get her a jacket. I did not say anything at all but my facial expressions apparently had her choosing a dark red one. It seemed to make her appear even more radiant than she already was.\n\nThe place also had skirts and even though the price made Paula gasp she bought one that matched the jacket. She tested it in the dressing room and told me, \"I could raise the front without exposing my ass. It is perfect.\"\n\nWe took a cab to Fisherman's Wharf, ate a late lunch/early supper and did touristy things including a sight seeing tour. The area was too crowded for a flash but we took about as many pictures as the rest of the thirty million tourists around us did. Neither of us could muster any interest for a tour of Alcatraz.\n\nWe were back at our hotel in time for a leisurely make-out session before dressing and taking a cab to the ballpark. \n\nWe walked around the perimeter of the field level seats and found that the view from anywhere in the park was tremendous. Paula loved the kid's slide inside the giant coke bottle and briefly considered taking a ride. I reminded her that under her flared skirt was a nude pussy.\n\nI loved the giant glove. Paula loved the sight and the idea of McCovey cove. She giggled at the flotilla of splash hit ball seekers. She had seen that on TV and was thrilled to see the yachts, Kayaks and surfboards have their own little floating party.\n\nWe agreed it was the best ballpark we had ever seen. She had only seen three but I had been in fifteen. Seeing all thirty-two was on my bucket list. The continuously name changing Giants Park put me halfway there.\n\nIt was a Monday night game against a not too interesting opponent for the locals. Paula's and mine home team had just finished playing a series in Los Angeles and were starting a series against the Giants on a Monday night. \n\nI was a bit surprised that there were at least twenty thousand fans there but we had plenty of room to roam. We had a couple of opportunities for tit flashes and took them but it was not until the fourth inning that we got our pussy/tit shots. The second picture was with her cell phone. Paula immediately sent that picture to Lucy.\n\nOur main mission accomplished we settled to watch the game on the right field wall and were amazed to see a ball go over our heads and splash into McCovey cove. Paula enjoyed watching the scramble for the ball and cheered as two girls on a dinghy won the prize. \n\nOur home team caps again got us on TV back home. It captured us as Paula was cheering the girls in the splash hit race as I beamed at her. We were relieved that it happened after we had begun to pay attention to the game.\n\nMy son texted me, \" Saw U. Important lady?\"\n\nI though about it for a few moments and answered, \"Yes.\"\n\n\"Congrats,\" he texted back.\n\nWe got a fellow fan to take a picture of us on my cell phone and I sent it to him. Paula again sent the same picture to her mother. For some reason, probably a perverse one, Paula was not answering her phone when her mother called. She was likely avoiding interrogation.\n\nHer mother had left two messages on my phone and Paula had texted to her \"message received\" in response each time. At least she identified herself as the responder. The last thing I needed was to have her mother want to kill me on sight.\n\nWhen we got back to the hotel we went to the bar. We asked the bartender if there was any place of interest nearby we could enjoy dinner and would not be overwhelmed by fellow tourists.\n\n\"How adventurous are you,\" he asked.\n\nPaula said, \"Above average. I want to go to a lesbian bar.\"\n\nThe bartender and I each raised an eyebrow and looked at her. He looked at me and I shrugged my shoulders.\n\nHe said, \"As luck would have it you are a block and a half away from a nice place that is first and foremost a good restaurant. The food is very, very good; their chef has an excellent reputation. It serves until eleven.\n\nThe club itself is on the second floor and opens at eleven. Monday nights they have drink specials for people in the arts and club industry so the place is lively, for a Monday night. You will not need reservations for either the restaurant or the club tonight.\n\nThere are straight and bi couples and gay men that frequent the club but more than half of the clientele will be bi and gay women. Some do get very up close and personal with each other.\n\nI get off at midnight and I usually go there before going home. I will be one of the gay men.\"\n\nPaula and I had already figured out he was gay so my first question to him was, \"Do they allow pictures to be taken?\"\n\n\"Officially no. But if the photos include your wife no one will say anything. I am sure most of the women will show off for you. You may need to give the men a chance to get out of the shot.\"\n\n\"What would you recommend from the menu?\" Paula asked him.\n\n\"Anything that sounds Italian.\"\n\nI put out my hand for him to shake and introduced Paula and myself. He said his name was Ron even though his nametag read Phil.\n\n\"Does Phil know you have his name tag?\" I asked in jest.\n\nHe laughed and said, \"There is no Phil. The story is that he was the first bartender in this hotel but that would have been well before I was born. All the bartenders have always worn the name on their nametag although no one remembers how that got started.\"\n\nAs Paula and I rose to leave I asked him to find us when he got to the club. I told him I would buy a drink for him and reverse our roles.\n\nHe smiled and said thanks.\n\nWe were already sitting in the restaurant before either of us remembered that Paula was not wearing anything under her jacket. I saw that the restaurant sold branded t-shirts and I bought her a black one. The restaurant's name was Paul's.\n\nWhen she returned from the ladies room wearing it you could easily see she was braless. The shirt seemed to be advertising that it was holding Paula's tits for me. When she sat at the table you could see the excitement in her nipples.\n\n\"This fits perfectly. Thanks, she said.\n\n\"You do look nice in that,\" our waitress said, apparently to Paula's tits. Paula's nipples showed their appreciation. I took the picture.\n\nI suspected it was going to be a wild night.\n\nI had once heard a wise old Italian remark that his favorite food was anything that ended in an \"i.\" I ordered Linguini de mare and Paula ordered Ravioli. Both were delicious. When our waitress brought the check she asked if we were going to stay and join them upstairs.\n\nAs I signed for our dinner Paula said yes and that we looked forward to it.\n\nOur server's nametag read Ginger but Paula and I had already decided it was a fake name, all the others working the restaurant had name tags with the names of TV sitcom characters. We did not see a Maryanne though.\n\nGinger said that we could start our tab now and just hand it to the bartender when we got upstairs. I said \"good idea\" and ordered my second Dos Equis.\n\nPaula asked the girl to suggest something she liked herself and we both saw Ginger glance at her tits before answering, \"Twin Peaks. It is pretty to look at but can be dangerous to your sobriety. I can only safely handle one but it does make the night fun.\"\n\n\"I will have that,\" Paula said.\n\n\"Why is it called Twin Peaks?\" I asked.\n\nThe server did her best not too look at Paula's tits while saying, \"Apparently there was a TV show by that name. Our owner's wife had a bit part in it; she was murdered in the opening scene. She said it was a dizzying experience and so was the drink somebody made for her after shooting wrapped that day. I'll be right back with your drinks.\"\n\nAfter she left I said to Paula, \"The poor kid can't keep her eyes off your boobs.\"\n\n\"Neither can the couple sitting behind you. Reach over and pinch a nipple, I want to see what kind of reaction it produces.\"\n\n\"Let's wait until Ginger comes back with our drinks.\"\n\n\"Good thinking.\"\n\nWe had long ago figured out that Paula should be sitting to my right. I was left-handed and she was a righty. The hands nearest the other were always free so they often wandered over the others body. More than once at a campsite we had eaten a meal with my bare cock in her left hand and my right hand middle finger in her pussy. \n\nThat night my hand had already spent dinner \"accidentally\" brushing her nipples; it was what was keeping them gloriously prominent. Her hand had been resting on my hard cock all through dinner.\n\n\"Here she comes,\" Paula whispered.\n\nAs I gestured with my hand I trapped a nipple between two fingers, palm facing outward. You could easily see the long nipple between my fingers.\n\nWe heard two sighs, one from our server and one from the lady behind me. I did not release the nipple until our server was trying to place my beer in front of me without looking. Paula acted as if nothing of interest had happened although she now had one nipple larger than the other.\n\nBetween sips I took another picture of her, or rather of Ginger staring at her tits.\n\nBefore we finished our drinks the doors on the balcony opened and most of the diners went up the stairs. We were still enjoying our drink so we stayed at our table a bit longer. Ginger came by to tell us the upstairs was open. I noted she had never referred to it as a club. \n\nI asked her to pose next to Paula so our friends could see that we were right when we told them about our gorgeous server. She giggled and said, \"Sure.\"\n\nI pretended that I had a difficult time getting them both in the picture and suggested to her that she put her chin on Paula's shoulder. Paula gave me a knowing smile and placed a hand on the far side of girl's neck and guided her until they were cheek to cheek. As expected my first picture showed the girl staring at Paula's tits. I said to her, \"One more and this time look at the camera instead of her tits.\"\n\n\"The girl blushed and giggled then said, \"That's hard.\"\n\n\"Yes they are, aren't they?\"\n\nI got a good picture of both laughing.\n\n\"Is there anyone behind me?\" I asked.\n\n\"No,\" was the reply.\n\nI looked at the girl and said, \"One more. Put your arms around her and your hands on her tits. Spread your fingers so the nipples are between them.\"\n\nThe girl complied without the slightest hesitation. Paula may have moaned. The picture I got was perfect, Paula had closed her eyes and the girl was staring at the nipples between her fingers. The second flash of the camera broke both of their trances but it still took the girl a beat or two before she removed her hands.\n\nPaula said to her, \"You forgot to squeeze the nipples before you took your hands away.\"\n\nThe girl mauled Paula's tits as they shared a torrid kiss. They did not appear to notice the next three flashes of the camera.\n\nThe kiss and the groping ended abruptly when the girl stood and told me, \"You better take your wife upstairs before I take her home with me.\"\n\nIt wasn't until Ginger stood that I noticed that Paula's forearm had been under the girl's skirt. I stood and kissed Ginger's cheek and asked her, \"Do you work tomorrow night?\"\n\nShe said, \"Yes.\"\n\n\"We will see you then. Make sure we end up at your table.\"\n\nMy cock was pressing lightly on her thigh. Her hand found it and gave it a squeeze as she gave me a fine kiss on the lips.\n\n\"Until then,\" she said then quickly walked towards the kitchen. It wasn't until she went past the kitchen door that it occurred to me I had just made arrangements for a threesome.\n\nPaula had managed to stand up. She said, \"That is a sneaky strong drink. I better not finish it or I'll never be able to get up the stairs.\" She had finished less than half of the bright emerald green concoction.\n\nI kidded her by saying that half of her wooziness was likely from having her hand on a pussy.\n\nShe grinned. \"A naked and wet pussy,\" she said.\n\nLike most men I like to dance but will not admit to it. Paula dragged me to the dance floor as soon we got there and kept me there for at least twenty-seven hours. She claimed to be impressed with my dancing ability and I was impressed by how sexily her body moved. I was not nearly alone in that regard.\n\nI convinced her I needed a break and I ordered a beer for me, she wanted a coke. I changed my order to a coke with a twist of lemon. Paula asked for a twist of lemon in hers. She gave me a long soft kiss while we waited. \n\nAfter we got our drinks we found a table to stand next to and looked at the crowd. Ron was right about the clientele; it was mostly women, with a few couples, some apparently looking for a threesome partner, and gays with friends. Several women came by and asked Paula to dance but she declined and told them to make sure they asked again later. \n\nOne of them looked at Paula in the eye and said, \"You are not going home with any of us tonight are you?\"\n\n\"No, he has exclusive rights to me and I have exclusive rights to him tonight. We are here just to have fun and to buy a friend a drink when he comes in. Neither of us would object if you kissed me though.\"\n\nThe woman smiled and gave Paula a nice soft kiss.\n\n\"That was very nice. Until you find somebody feel free to come by for kisses,\" Paula said to her.\n\nThe girl smiled and kissed Paula again, that kiss was a bit more intense. \n\nThe next woman to come by did not ask and just simply kissed Paula. \n\nI was still mulling the \"exclusive rights\" bit in my head when Ron came in with a very pretty girl he introduced to us as his sister Iris, she had just gotten off work too. She worked in the hotel's room service kitchen.",
        "We had not ordered but a waitress came by with cokes with a twist of lemon for the four of us and a cup of almonds. I quickly told her. \"My tab,\" and she smiled and nodded. Obviously Ron and Iris were well known and liked.\n\nRon and I talked baseball but Iris and Paula were not talking. They had their foreheads together and their eyes closed. I saw that Iris' hand was inside Paula's skirt. Paula's hand was inside Iris' shirt. \n\nThe first woman to kiss her came over and stood behind Paula and reached around until she covered one of Iris' tits and one of Paula's with her hands. She kissed Iris on the lips and kissed Paula's neck. Paula groaned into a great orgasm. Iris kissed Paula hard then kissed her friend hard. \n\nThe friend gasped and I saw Paula's' hand slide down and into the very short skirt behind her, the hand that Paula had on Iris' tit slid down and into Iris' skirt. The friend slipped an arm past Paula to Iris' hips and pressed the three of them tightly together. Paula was a sandwich filling, a moaning sandwich filling with likely a pussy in each hand.\n\nI felt Ron nudge me and heard him say, \"Didn't you say you had a camera?\"\n\nI doubt the ladies noticed the flash of the first three pictures I took. All of those had the table concealing most of what was going on except for the hand of two different women on Paula's breasts. I took three pictures holding my camera below the table. A quick review of the shots showed that each pussy had more than one finger in it. Paula's pussy had fingers from two different women in it. \n\nAll three reached orgasms within seconds of each other. Paula's came first and lasted longer. I took a shot of that.\n\nRon introduced us to the third woman, Iris' partner Rachel, an oboist with the symphony orchestra. Rachel and Iris kissed Paula hungrily then they left us for the dance floor.\n\nSeveral minutes later I spotted Ginger; she was apparently looking for us. She had Paula's new jacket in her hand. I waved at her and she came over. Paula took her jacket, handed it to me, and then wrapped the girl in her arms for an intense kiss. I saw the girls right hand moving up inside Paula's shirt and stop at a breast. I heard both moan. \n\nI decided that what Paula meant was that I had exclusive rights to her on our bed. She was loving her third woman in just under an hour.\n\nI know neither saw the flash of the next two pictures. I took another two photos with the camera under the table.\n\nI then resumed my conversation with Ron. \"Is it always like this?\"\n\nHe laughed and said, \"Yes but I have seen worse. Look just past my sister under the table behind her.\"\n\nI did and saw a woman under the table on her knees obviously eating pussy. There were two women standing together at the table she was under but at first I could not tell whose pussy was being eaten. The right answer was both. \n\nRon said, \"I am going to wave at my sister, take a picture when she waves back. Zoom in under that table, I want to see if I can tell who that is.\"\n\nWe did just that and as a bonus Iris and Rachel flashed their boobs at me so I took more pictures.\n\nRon and I heard moans behind us but neither of us turned around. I did take a couple of more pictures below the table. As I suspected each had several fingers in the other's pussy.\n\nAs we surveyed the room we saw shirts lifted and tits being sucked, we saw hands under skirts. We saw the lady that sat behind me in the restaurant offering her bare tits to everyone.\n\nGinger interrupted my voyeurism as she embraced me and planted a big kiss on my lips, She said, \"My schedule got changed, I don't work tomorrow. Your wife has my e-mail and she agreed that you owe me a fuck.\"\n\n\"Your tit is out, \" I said.\n\n\"Yes, it's for you to kiss.\"\n\nI did just that and as I did noticed it was moist. She kissed Ron on the cheek and quickly left without bothering to cover her tit.\n\nI felt Paula arms around me as she said, \"I am exhausted. I'm ready to go home.\"\n\nI picked up her jacket and said, \"Go dance with the girls until I sign my tab. While you are there look under the table behind them. Paula danced her way to them but turned to smile at me when she saw the woman under the table.\n\nI enhanced the pictures I had taken of the woman under the table and showed it to Ron. He said, \"Well I'll be damned. The woman under the table is Joyce, the owner's wife.\"\n\nI gave Ron a handshake/hug then went to the bar.\n\n\"Who gets the tip from this tab?\" I asked the bartender. She looked at it and said, \"Ginger, she set it up.\"\n\nI added a two hundred percent tip then tipped the girl that had served us our cokes. When I looked for Paula I found her facing the table that Joyce was under. Iris and Rachel were there with her. Joyce had five pussies to pick from.\n\n\"Has she gotten to you yet?\" I asked her.\n\n\"Now,\" Paula gasped.\n\nI put an arm around her and pinched a nipple.\n\n\"Oomph\", she said.\n\nShe took a couple of deep breaths then circled the table giving each woman an enthusiastic kiss. All of them squeezed her tits. She waved at Ron then she pretty much forced me to sprint with her to the hotel. \n\nBefore the elevator door closed she was pulling my cock out and when they opened again she was clinging to me with my cock buried deeply in her pussy. \n\nI carried her to the room and we collapsed on the bed. She fucked me hard until she had her first orgasm then speedily got us nude and I began a nearly violent fuck, which appeared to be what she needed too. \n\nWe had the kind of orgasms that should have made everyone in hotel pregnant.\n\nWe were both asleep before the last spasms had run their course.\n\nWe did not fuck the next morning although there was a lot of gentle groping in the shower. She thanked me for the best night of sex in her life. She thanked me for its punctuation mark as she squeezed my cock and kissed me.\n\nWe went to a diner half a block from the hotel and had a leisurely breakfast. As we sipped our coffee she said, \"I have bad news.\"\n\n\"Oh no! You're pregnant?\"\n\nShe punched my arm and said, \"Not so loud you goofball. Those women on the next table think I am and you are mad about it.\"\n\n\"Let me set them straight.\" I said as I kissed her and briefly groped her tits.\n\n\"That's better, \" she said. \"But the problem is that I think I just got confirmation that I am definitely not pregnant.\"\n\n\"Oh no! You're not pregnant?\" I said.\n\nI got another shot in the arm. I could hear the ladies at the next table giggling.\n\nPaula grabbed the back of my neck and kissed me hard then hissed, \"Listen you ultra maroon. We have to get back to the hotel. I think my period just started.\"\n\nComprehension finally arrived so I gave her a quick kiss and told her to go on that I would be right behind her after I took care of the bill.\n\nI paid at the cashier and as I was leaving a tip for the waitress I turned to the ladies and said, \"I don't know what I'm going to do. I work and work and work and she still isn't pregnant.\"\n\nI could hear their gales of laughter all the way out the door. I wondered just where this new me came from, the guy that volunteered to entertain perfect strangers. I knew of course.\n\nAs soon as I walked into the room she handed me a note then pushed me back out the door. The note said, \"Tampax Heavy.\"\n\nI went down to the lobby and asked the concierge for directions to the nearest pharmacy. He told me there was one directly behind the hotel, half way around the block. I found what she wanted and just to be sure got the \"Light\" ones too.\n\nWhen I returned she had just stepped out of the shower. I saw her sweat pants hanging from the shower head, dripping. She grabbed the bag and went right back into the bathroom. She emerged after a few minutes wearing panties. It was the first time I had seen her wearing panties.\n\n\"We need to put off the nude beach for a while,\" she said.\n\n\"No problem. Let's do Chinatown instead. Do you need pain pills?\"\n\n\"It wouldn't hurt,\" she said.\n\n\"You just stole my line.\"\n\n\"I said it first so I could not have stolen it.\"\n\n\"I was thinking it.\"\n\n\"No you weren't. You were wondering if you were going to get blowjobs as a substitute for pussy.\"\n\n\"I have not thought of that at all, not once..... Since I was walking back from the pharmacy.\"\n\nShe hugged me and said, \"Thanks for getting me the emergency equipment. I was completely unprepared since I thought I would be home a long time ago. Don't worry; your kooky girlfriend will be back in a week. In the meantime your best friend ever will keep you company.\"\n\nShe had set me up with a nice straight line but it never occurred to me to use it. Instead I said, \"I am glad to be of service. Is Midol your preferred brand? I will get you some before we start out,\" I said.\n\n\"Thanks. I'll be dressed when you get back.\" The rest of the day went by more normally. Sort of.\n\nWe walked into some shops in Chinatown that were selling unrecognizable stuff at over a hundred dollars a pound. We watched as seven hundred year old ladies did their tai chi exercises in a park. We ate lunch on the balcony of a restaurant that overlooked the pyramid and bay. We saw that we were both pretty incompetent with chopsticks.\n\nShe got a text message from Lucy that simply said \"Delicious.\" She had gotten Paula's picture from the ballpark. Paula was very pleased with the message.\n\nI got a cab to take us down Lombard Street, the most crooked street in the world. Half way down we stopped and got out and asked the cabbie to go around the block and pick us back up. Apparently that was not a rare request.\n\nI took a couple of pictures of Paula with the street as a background then one more as she flashed her tits. A lady was walking down just behind her as she flashed and correctly guessed what Paula had been doing. We were pleasantly surprised when she stood next to Paula and bared her tits, Paula did too and I got one picture of four tits. Without a word she then just continued walking down the sidewalk.\n\n\"Thanks,\" I said as she walked by.\n\nShe simply nodded as she went past me.\n\nPaula and I rode a cable car. We bought t-shirts and mugs. Paula ran out of gas. We went back to our room and she took a nap.\n\nWhen she awoke she insisted that going to the ballgame was exactly what she wanted to do and was easily up to it. The previous night we had never sat at our seats, we were concentrating on the photographic priorities and sightseeing. That night we went by the concession stands, loaded up, then remained in our seats for most of the game.\n\nShe ate her garlic fries and then half of mine before the third inning started. In the middle of the fourth inning she sent me to get more garlic fries, and some Nachos, and some sushi.\n\n\"Well damn! You are pregnant,\" I said.\n\nShe smiled at me and said, \"That would be nice.\"\n\nI gave her a kiss and went to get her order. \n\nShe was trying to get her entire body inside her jacket when I got back. It was cold in there. That picture of her was beamed back home too.\n\nThe food warmed her up nicely but as soon as she had demolished it I suggested we go back to the room. She tried to convince me that she was fine but I was not close to buying it. The game was looking more and more like it would go into extra innings and there was no way she could have handled that so we left.\n\nWe went by the bar and said hello to Ron. Paula asked him to make us some hot chocolate with Kahlua, which turned out to be a first for him. Lucy and James had introduced us to the treat. Ron had the kitchen make the chocolate and Iris brought it out. As Ron was adding the Kahlua Paula and Iris were sharing a long kiss.\n\nWe had just that one drink then went to our room. I set out two pills with a glass of water for her while she was in the bathroom. When she came out I went in. When I returned to the bedroom the pills were gone and Paula was sound asleep. I put on my gym shorts.\n\nI stood next to her and took a long look. I decided adorable was definitely the best description of her. Yes, she was pretty, cute, sexy, but the bottom line was that she was adorable. I leaned over and softly kissed her cheek.\n\nAs I snuggled behind her in bed an unbidden thought popped into my head. She was my girlfriend. \n\nThe next morning I volunteered to bring back breakfast from the diner and suggested to Paula that she take a long hot shower and to take her time packing. On my way out of the hotel I picked up a brochure for the town of Calistoga and while waiting for our breakfast made hotel reservations there. I wanted to give Paula another night or two of comfort before we went back to a tent.\n\nAfter breakfast I had the desk send the valet to retrieve my car and as I paid the bills noticed that it would not have been much more expensive if I had gotten my car a room in the hotel. As I helped Paula get in I noticed Ishii was as clean as it had been in over a year. I looked at my bill and saw no charges for that on it. I looked at the valet, Jimmy Wong, and asked, \"Did you spoil the old man?\"\n\n\"He smiled and said, \"We visited a couple of times. I made sure he was not lonely.\"\n\nI looked at the three-dollar tip I had given him and added a twenty. I gave him a courtesy bow, which he returned. As I started to pull away I saw him bow at Ishii.\n\n\"What was that all about?\" Paula asked.\n\n\"He loves Ishii.\n\n\"Who or what is Ishii?\"\n\n\"You are riding in him.\"\n\nWe crossed the Golden Gate bridge and Paula took pictures all the way across. We stopped at the park on the north end and took more pictures including some of the two of us taken by fellow tourists. My son and her mother got those.\n\nBefore we got back to the car Paula saw an opportunity and handed me her cell phone. She flashed her tits for the camera, the cell phone, and me. They were very fine pictures of Paula, her tits, and the Golden Gate Bridge. \n\nAs soon as she was secure in my car she sent the picture to Lucy. As soon as that was accomplished her phone chirped. Lucy had sent her a picture of herself astride a horse. Her shirt was unbuttoned and her tits were out. Paula sent her a message that just said, \"D.\" Paula apparently felt better that day.\n\nWe toured the Mondavi Vineyard, stopped at a Vineyard that had a picnic area next to its store and had our \"bread, wine and thou\" moments. We detoured a bit to find a place that pressed its own olive oil from its own trees. We each got a liter of the bright green extra, extra virgin stuff.\n\nWe stopped at a vineyard that had its own tram and took a ride. Paula posed topless for a picture for Lucy and did not bother to put her shirt back on until our ride was nearly over. \n\nWe found our hotel in Calistoga easily enough and went to some vineyard's wine tasting event and then supper. We walked around the town for a while and returned to our room. We were both asleep by ten.\n\nWe had a big breakfast the next morning and as we sipped our coffee I told Paula that it would be a good day to do nothing. She agreed but we ended up taking a short trip to a lake east of the town and having a nice picnic. We did take a couple of flashing pictures. \n\nThe picnic was very restful and in fact she fell asleep on my lap for about twenty minutes. It was a defining moment for me. The shade of the tree, the view of the lake, the soft wind, and Paula blissfully asleep on my lap as she clung to me conspired to make me realize it was a perfect moment in time.\n\nThat was when I understood and accepted that I was in love with Paula.\n\nWe had a gentle make-out session for about ten minutes after she awoke then we worked our way back to Calistoga. I gave her privacy before and after we took a shower together but during the shower she was feeling well enough to give me a fine handjob, our first sexual contact in three days.\n\nWe went out to dinner and tried a California Veggie pizza. Neither of us ate more than one slice and when we left we went straight to a joint that featured half pound burgers.\n\nThe next morning after a nice blowjob/handjob I asked Paula if she was up to a small hike, there was a nude beach just a bit up the coast that did not require going up and down a cliff and was on the way to our next stop in The Redwoods National Forest.\n\nShe kissed me softly and thanked me for giving her extra nights of comfort and that she was now game for anything I wanted to do. \"I feel fine but I might run out of gas and not be very helpful in setting up camp.\"\n\nI kissed her and we headed west to Limantour Beach. We had the very large beach pretty much to ourselves. \n\nA couple of nude young ladies were walking past us holding hands and Paula asked them to please take a picture of us. She joined me in complete nudity long enough for two pictures, one from her cell phone.\n\nThe girls volunteered to have their picture taken with Paula. I took three, the last two of which with the cell. One that captured the young ladies stealing glances at Paula's tits. Paula kissed both as she thanked them; both kisses were a bit more than pecks on the lips. Both kisses featured full tit-to-tit contact. I took the picture of her kiss to the blonde that reminded me a little of Lucy.\n\nAfter Paula put her bikini bottoms back on I told her, \"Those girls don't know how lucky they were that you are in your period.\"\n\nI got a slap on the ass loud enough for the girls to hear and looked back. I rubbed my butt and the girls burst into giggles before continuing on. I am sure they thought I had been punished for looking at them like a bear looks at honey. It had not been me looking at them like that.\n\nPaula apologized after admitting that my comment was probably correct. She confessed that she was sure she was bi, that she would have gone down on one of the girls we had just met.\n\n\"The blonde?\"\n\nShe nodded and said, \"I've had tits in my hands and had been fingerfucked by women before San Francisco. Those events happened on end of the school year celebration parties on boats. \n\nUntil Paul's I had not played with pussy myself. I liked it. Not enough for me to search for opportunities but enough not to turn down a request. I also love kissing women. \n\nI loved doing all I did in public at Paul's. I loved being in the middle of a love sandwich, but I do not feel I have to do any of that again. The one exception to that is that, I would not mind at all if you watched Lucy and me go down on each other.\"\n\nPaula and Lucy had continued their long phone conversations since they met. Those had slowly but surely become more personal. Paula had given Lucy a somewhat edited version of our nights in San Francisco.\n\nI asked, \"With James watching too?\"\n\nShe thought about that for a minute then said, \"Yeah, as long as the two of you understood there would be no swapping. Three days ago I would have been fine sharing Ginger with you. I am not so sure of that now. Sorry.\"\n\nI hugged her to me and kissed her softly before we continued down the beach. I already knew it would kill me to see her with another man.\n\nWe stayed at the nude beach for less than an hour and resumed our trip on Hwy. 101. Paula sent the pictures to Lucy and settled back for our drive. Lucy and James were also traveling and just a few minutes into our drive Lucy called Paula. \n\nLucy commented, \"Delicious all the way around. Where were you?\"\n\nPaula filled her in on the last two days and described the nude beach adventure in detail even to confessing that under different circumstances she may have \"tasted\" the blonde.\n\n\"The one that looks like me?\" Lucy had asked.\n\n\"One looked like you? I had not noticed that\", Paula said in her most innocent voice.\n\nI though I heard soft giggles from Lucy.\n\nLucy told Paula that two more pictures were on their way to her and that they were on their way to Colorado to say hello to dead dinosaurs.\n\nTheir conversation veered towards school and hometown gossip and we soon found ourselves in the Redwoods National Forest. Paula said goodbye to Lucy and helped me set up camp. That night we ate take-out chicken and Ramen soup at our campsite. It was exactly what we wanted.",
        "We got two more pictures from Lucy. One of them I immediately recognized was taken at a campground on Jackson Lake in Wyoming. James and Lucy were both nude and had the Grand Tetons and the lake behind them. James had an erection. The other one had a lipstick impression of a woman's lips on Lucy's tit. Paula called her right away.\n\nShe asked Lucy who took the picture and she answered, \"One of the lesbian couple that had their tent next to ours. We had just watched them make love, which is why you see James' excitement. Right after the picture was taken James and I allowed them to watch us make love. They showed me some gratitude for that.\"\n\n\"Wait until next week before you describe their gratitude in minute detail. I am in my period and cannot fully enjoy the retelling.\"\n\n\"I just started mine. But we both have memories to see us through,\" she giggled.\n\nTheir conversation ranged from the indictment of their congressman to the amazing changes in their town. The call ended when Paula yawned.\n\nWe stayed two nights among the Redwoods and did some of the shorter trails. We agreed that we loved the smell of the ocean and the trees. We collected a few humongous pinecones. She showed me that my weird girlfriend was close to returning when she posed nude amid the gigantic trees more than once. I told her that in addition to Lucy and me our friendly neighborhood Sasquatch appreciated her nudity too.\n\nBefore we continued north it did occur to me that she had truly become my best friend by then. My first one ever.\n\nWe spent a night in Grants Pass Oregon and did a bit of gold panning. We both got a few grains. The excitement was more valuable than the gold. We spent a night at a motel on the banks of the Columbia River.\n\nI had to apologize to her again for dragging her up another mountain. She was relieved there would be a very short hike. She was not at all happy to learn the mountain was Mt. Saint Helens.\n\nI had taken a picture of the volcano just about every five years since its first eruption. The first set of pictures was with my dad and me. One set was with my son and me. There were none with my ex but there would be at least one with Paula. They were important pictures to me and having Paula along made it better. \n\nWhen my son got the picture of us by the crater he texted me asking \"That important?\"\n\nI answered, \"Apparently.\"\n\nIt seems that I had somehow neglected to tell Paula that I was a Geology teacher. She did not seem to think that made sitting atop an active volcano any safer. She did become fascinated by the place but was very glad when I announced it was time to get to Seattle.\n\nOur next boutique hotel was two blocks from the waterfront and easy walking distance to Pike Street Market.\n\nPaula was mesmerized by Mt. Rainier. We could see it from nearly everywhere we went. She eventually admitted that it was a gorgeous mountain. She also noted it was an immense mountain and wondered how I had gotten the nerve to try to climb it three times. I told her that the trailheads were over eight thousand feet up. The trails to the top were steeper but shorter than Mt. Whitney's. I suspected that I would have company on my next attempt.\n\nWe had dinner atop the space needle our first night and in the Mariner's ballpark the next. \n\nThat became Paula's second favorite stadium in part because the whistles of the trains just outside the park always startled her into giggles.\n\nI got full blowjobs both nights.\n\nAfter two nights in Seattle we headed north to the ferry terminal and Orcas Island. We were heading from the car deck towards the top deck when we heard a gasp and saw a woman suddenly move her hand away from a dog cage in the back of her SUV. We veered towards her to see if she was OK.\n\n\"I'm OK. She just doesn't like me for some reason. Oh, you have a nice camera. Would you do me a favor and follow me and take pictures when she is released?\"\n\nPaula and I looked in astonishment at the occupant of the dog cage; it was a magnificent bald eagle.\n\n\"Sure I said. Where are we going?\"\n\n\"Where she was found, not too far from the ferry terminal. Home territory for her.\"\n\n\"I take it she was injured?\"\n\n\"Yes, flew right into high wires, broke the smaller bone in a wing. She healed quickly so we think she will be fine. I am scared of her and when they put her back here I was too agitated to remember a camera.\"\n\n\"We can get you the pictures,\" I said.\n\nIt was then that I noticed that besides being awed by the creature Paula was also a bit afraid of it too.\n\nWe drove to a farm of sorts and followed the landowner to a field that was about half a mile from the coast and about seventy-five feet above it.\n\nThe landowner left us at the spot; apparently we had interrupted something that needed his attention. I guessed that this was not the first wounded eagle he had found on his land.\n\nIt soon became apparent to me the woman was too afraid to open the cage herself. I readied the camera and handed it to Paula then knelt by the cage. The woman said, \"Thanks.\"\n\nI introduced myself to the eagle and told her we were going to set her free and not to fly into any more wires.\n\nI knew she would not understand but hoped the soothing sounds she was hearing would calm her down a bit. It apparently worked and she simply waited for me to open the door. I was pleased she did not lunge at my fingers when I grabbed the latch. I told Paula to start shooting but she already had.\n\nThe eagle hopped out and jumped into the air. I could feel her wing beat as she flew past me. She gave out a loud call and circled over us as she headed towards the sea. Paula kept taking pictures until the eagle was just a spot in the sky.\n\nI took the camera from her and snapped a couple of pictures of Paula; she had tears streaming down her cheeks. She was giggling.\n\nThe woman had an expression of relief on her face. Her name was Sarah and she asked me when the rehabilitation center would be able to get the pictures. Every release was always recorded.\n\nI said, \"If you have the web address it will be as soon as I get to a computer.\"\n\n\"Where are you staying here?\"\n\n\"Howard's End.\"\n\n\"Oh good. Lois will let you use her computer. Follow me, I'll guide you there.\"\n\nI was loading up the pictures into the computer when the ladies saw a picture of Paula and Ginger in deep embrace. \n\nI said, \"Oops,\" and quickly changed the screen. I doubt any of the women saw it for more than half a second but within moments Lois and Sarah were flirting heavily with Paula who in turn whispered something to them. I heard Lois say, \"Lets check that out,\" and lead them to what appeared to be an apartment next to the office.\n\nI smiled to myself for the well-done subliminal message. I had seen that the only reason Sarah was not hitting on Paula was me. I had also seen that Lois was not going to let that detail stand in her way for long.\n\nI soon had the eagle's release edited and e-mailed. I emailed the same pictures to my son and to myself. That done I carried our stuff to room number two. I went back to the office and checked out the excursion schedule and signed up Paula and me for the next three, one that afternoon and two the next day.\n\nI waited in the office for the ladies to emerge then got bored and began to explore. I saw a nice deck with tables and chairs and a path that seemed to lead to a cave. I walked over and saw that there was a natural depression with a hot spring. I also saw an older couple nude. They were kissing. Her hand was wrapped around his smallish cock. His where mauling her enormous tits. \"Aahh, young love,\" I said to myself. Before I continued my exploration I heard a moan emerge from the cave. The older couple was not the only one in there.\n\nI walked back to the front of the building and saw the reason for the odd design by the door to our room; it was the nose of an Orca, a painting that extended from room two to room eight.\n\nA fifty-foot long Orca spread almost all the way across the side of the building. The fin and the tail fluke extended across the walkway and into the driveway. The dorsal fin extended above the walkway cover.\n\nThree kayaks were painted following the Orca that covered the front of rooms nine through twelve. I later learned that Lois' late husband Howard was depicted as manning the first one, he had apparently died the year before. Lois was on the second. A guy that looked like me except for his beard manned the third.\n\nThere was a small platform just so people could get a picture of the whole thing and benches so people had a place to sit and just stare at it. It was awesome. Guest parking had apparently been moved to the end of the road next to the office so cars would not block the view.\n\nIt had been an hour since the ladies had walked into the apartment. I assumed Paula could now check off the entire platter on the number one item on her bucket list. I was sitting on the bench closest to our room when I saw Paula emerge from the office. She was nude. She saw me and said, \"Now!\" and rushed to our room.\n\nIn less than thirty seconds we were in the midst of our most passionate fuck ever. I tasted pussy in her kisses as I pounded her hard. Her groans sounded primeval, so did mine. We exploded together. I rolled us over and hugged Paula tightly to me. She kissed me hungrily at first then lovingly. We were soon asleep.\n\nA knock at the door woke us up. Lois came in and after giving us an approving smile said, \"The safety lecture is in ten minutes and will be on the dock, the excursion leaves in twenty minutes.\" She again smiled at the freshly fucked out couple, kissed one of Paula's tits, then left.\n\nI hustled us out of bed.\n\nOur first excursion had no whales but we were entertained by the sudden appearances of the neighborhood seals. They seemed to love startling us by suddenly surfacing next to our boats. We also saw bald eagles at work and Paula and I wondered if the one we released was one of them.\n\nWe were happy with our adventure but I was glad I had signed up for both excursions for the next day. Our guide Nancy told us that the morning excursions had a better chance of whale sightings.\n\nDinner was on the patio, it was halibut and Paula and I loved it. \n\nThe place had just eleven guest rooms and twenty-five kayaks. Paula and I were in no danger of being squeezed out since only six of the rooms had guests and no room had more than two people. Just in case after dinner I signed us up for both excursions on our third day.\n\nThat evening Paula and I experienced our first fuck in front of witnesses. Of course those witnesses in the spa were fucking too so it was an easy decision for us.\n\nLois awakened us the next morning. She did so by squeezing my cock and Paula's tits. She was telling us we needed to get to the dock. We dressed and went straight there.\n\nPaula and I had some experience with kayaks before we got to Orcas Island and were somewhat competent. The four other people in our group that morning were not. The second time we stopped to wait for them Paula turned her craft and slid next me for a deep kiss. \n\nWe did that a couple of more times that morning until our kiss was interrupted by a muffled honk next to us. A seal had a large fish in his mouth. As we looked around we saw several seals dashing under us and below them a large dark mass that we eventually figured out was an enormous school of fish. It was so large that nearly twenty minutes passed before the last fish zoomed by followed by an enormous shadow. That enormous shadow made the hair on the back of my neck stand up.\n\nAlthough I knew it was probably useless I snapped about fifty photos of the encounter. As it turned out nine were good and three were excellent. I also took pictures of the looks of amazement in Paula's and our companions faces. Even our guide seemed to be awed by it. The large shadow below us was definitely an animal and likely a whale but I could not sharpen the image more than that.\n\nThe afternoon excursion featured a large number of fish hurrying past us. Some of them leaped over peoples kayaks and one almost hit Paula.\n\n\"Look around, something must be chasing them,\" our guide yelled at us. Whatever it was none of us saw it.\n\nAfter dinner Paula said, \"Let's skip the spa tonight and go for a walk.\"\n\nShe intertwined our fingers and we strolled along the shoreline. We heard a large splash but did not see what caused it. Whatever did was just four hundred feet away.\n\nI sensed Paula wanted to tell me something but never did. Before I began to worry she kissed me lovingly and held me close to her when we resumed our walk. I figured out what she was not telling me and stopped our walk to kiss every inch of her from her neck to the top of her head. She sighed and we just held on to each other for a while before resuming our walk.\n\nWe did not fuck that night for a long time even though as usual my cock was in her pussy as soon as we were in bed. We talked about our lives.\n\nShe asked me to consider taking her with me when I went on my Costa Rica and Mauna Kea adventures. I asked her why she thought she would not be with me.\n\nShe sighed and gave me an eternal kiss.\n\nAfter a longish period of silence she said, \"As you have guessed all of my lesbian bucket list items have been checked off. I loved the kissing and the tit fondling, I enjoyed giving orgasms. It was a great experience. But unlike you I am not entirely done with that. \n\nI doubt I will seek opportunities after we get home. My mouth prefers your cock; my pussy prefers your mouth. I do admit that I could be seduced by the right woman.\"\n\n\"Like Lucy?\"\n\nPaula giggled and said, \" I love Lucy. Her tits felt so good in my hand, better than any in San Francisco or here. Her kisses are second only to yours. But I can see where that would be enough for me. If she wanted me to go down on her I would but the way I see the future she and I would be just getting ourselves ready for our husb-.... guys.\"\n\nI felt her shiver. I kissed her softly and held the kiss for a while. I said, \"It's OK. I had forgotten we are not married yet too.\"\n\nAnother period of silence was broken when she asked me, \"Did you just ask me to marry you?\"\n\n\"Not really, I am assuming we will be husband and wife sometime soon in the future. Since we love each other it would be silly not to get married.\"\n\n\"Who told you I loved you?\"\n\n\"You did tonight as we were walking by the shoreline.\"\n\n\"I did not say it out loud.\"\n\n\"Nevertheless I heard you. I told you I love you right back.\"\n\nA bit of silence later she said, \"That's right, you did. But let me make sure I got this right, you love me and we will be married. How is that not a proposal?\"\n\n\"Is there any doubt we will be married?\"\n\nPaula sighed and said, \"No, but I still would like to be asked.\"\n\nI smiled at her and gave her the most loving kiss I had ever given in my life.\n\n\"Paula Prentiss, I am in love with you. Will you marry me please?\"\n\n\"I love you Paul O'Brian. I will be your bride.\"\n\nAs she kissed me I felt a tear on my cheek then a second one. The second one was my own.\n\n'Where are we going to live?\" she asked.\n\n\"In Felicity. I should be able to get a job there.\"\n\nNo one in my daily life knew I had a lot of money. I had inherited a nice sum from my dad and invested it in a software company that was sold for a big pile of cash. Even though I was a minor investor I profited nearly eight million dollars from the deal. I was still just your ordinary multi-millionaire high school Geology teacher. Getting a job in Felicity was not at all necessary.\n\nPaula seemed to be grateful for my decision to relocate and began our fuck, or rather our lovemaking episode. It lasted well into the night and ended with the longest lasting orgasms in our lives. We smiled as we allowed sleep to overcome us. We both knew we had found the right one.\n\nWe skipped the morning's excursion and went to the grotto. We had decided we liked to be watched as we fucked. Paula had apparently made a tentative date with a couple our age. As opposed to our previous adventure in the spa there were just the four of us. There was a lot of loving before and after the fucks. We did notice that Lois came in to watch us for a while. She may have masturbated.\n\nAfter an uneventful afternoon excursion a television crew from Seattle came over to do a story on the painting across the front of the resort. The artist wanted no part of the camera and neither did Lois so Paula handled the interview.\n\nThe TV crew opted to shoot the intro with the interviewer and Paula on kayaks and they went out fifty feet or so away from the docks. I paddled out close to them to provide security or assistance but the girl was a competent kayaker so I got out of the camera shot. The cameras were on the dock.\n\nBefore we paddled out Paula gave me a questioning look, which I quickly saw as asking for permission to put the make on the newsgirl. I laughed and nodded yes. She mouthed, \"I love you.\"\n\nShe later told me that in each lesbian instance she was the one being seduced. She wanted to see if she could seduce a woman. The interviewer was yummy she said.\n\nThe interview on the water was going well as Paula had assumed her schoolteacher persona and had already made some headway towards seducing the very pretty Asian interviewer, her name was Sidney. \n\nAs luck would have it and with the cameras rolling, a large tail fluke slapped the water about one hundred feet behind the ladies. The tail fluke, the slap, and the reaction of the startled women were all captured on camera. \n\nPaula dared Sidney to \"catch it,\" and they both suddenly veered and began to paddle quickly in the direction of the splash. I headed towards them but at an angle thinking I would cut them off.\n\nI saw them suddenly stop and put the paddles up. They sat very still. I saw the whale surface and roll over to its side not twenty feet from them, about thirty feet from me. It seemingly waved to them, (Paula and Sidney timidly waved back), and slowly sank into the depths of the sound.\n\nAll of that was captured by the video cameras.\n\nIt took a while for things to calm down but the film crew eventually got to the shot of the Orca on the building as Sidney finished her interview with Paula. \n\nSidney and Paula had spent over an hour together by then mostly hugging and laughing about their great adventure. I saw that their bodies seemed to be in constant contact. I saw a couple of quick kisses exchanged. The crew finished filming the interview, packed up, and left for the dock.\n\nSidney and Paula went to room twelve.\n\nI saved a plate of dinner for Paula and prepared a sandwich for Sidney. They emerged from the room forty minutes later and Sidney hurried to the ferry landing. She kissed me as thanks for the sandwich, or for loaning her Paula. I tasted Paula's pussy in her kiss.\n\nAs it had already become a pattern Paula urged me to ravish her. I did the best I could for as long as I could. I began to really appreciate her lesbian escapades.\n\nI did get a picture of Paula and her tits while she was on a kayak. She was just ten feet from the dock but that was as far as Lois would allow her to go without a lifejacket. I also got a picture of the two women and four tits.\n\nAfter we got back to the room I got to take pictures of the start of a lesbian tryst between Paula and Lois but when I saw that Paula might have been a bit uncomfortable with my presence I left the room to them. She would apparently need to re-think the voyeur scenario with Lucy.\n\nPaula and I took kayak trips every morning and every evening the next two days. We saw lots of seals, another enormous school of fish, (salmon Nancy had said), blowhole exhalations in the distance, and white sided dolphins, (incredible creatures), but no more whales. Paula and I had already had the acme of whale encounters so we were ready to head home.",
        "The night after our whale encounter I quipped to Lois that she had probably already had her last good night sleep until after Labor Day. Clips from the whale encounter spread everywhere. Before it was time for us to work our way back home Lois had to hire three people for the inn and one for Nancy. It got very hectic very quickly The day Paula and I left every room in the inn was booked for the remainder of the summer Paula and I got long heartfelt kisses from Lois before we set off.\n\nLucy and Paula had talked on the phone almost everyday since they met. By the time we left Orcas Island Paula was not leaving anything out of their conversations. Apparently neither was Lucy.\n\nIt was during one of those calls as we drove through Idaho that I learned that the reason Paula was uncomfortable when she was making love to Lois with me in the room was because she knew Lois wanted to fuck me but realized she could not handle seeing that. Whatever Lucy said back to Paula seemed to please her very much.\n\nWe worked our way home by way of Yellowstone and Rocky Mountains National Parks. Paula loved Yellowstone and we stayed there four days. I decided not to tell her that the park was mostly inside the caldera of a very large volcano.\n\nYellowstone is a crowded park so opportunities for flashing shots were rare, but she managed to show her tits to elk and bison, one of which was so affected with the sight he exposed his cock to her. I took that picture too.\n\nPaula asked me what that meant. I put her hand on my cock and told her, \"He likes what he sees too.\" She giggled but kept her hand on my cock for the rest of the drive.\n\nWe were traveling from Wyoming to Colorado when I resigned my teaching post over the phone and called to apply for a job in Felicity. They asked me to call them back as soon as we got to town. They needed to finalize the assignments as soon as possible.\n\nAs we were traveling in Colorado we began to get phone calls from everyone that had our numbers. All of the local TV stations had showed the whale encounter clip and we were identified as tourists from Texas. Paula and I were apparently the only people on Earth that had not seen the clip. I had also apparently wandered into the camera shot. The people calling me told me they recognized me immediately.\n\nLois called us to say her friend the artist that had painted the Orca was painting our whale encounter at the end of the building. She would send us pictures. She would also send us the t-shirts that were imprinted with our close encounter of the cetacean kind. It took Paula and I a long time to get a grip on the idea that someone would print t-shirts with us on them.\n\nOn our long drives I had heard Paula describe to Lucy her adventures in San Francisco and Orcas Island more than once. Paula's descriptions had become more detailed, lewder. I suspected that the stories were phone sex for Lucy.\n\nDuring one such call I learned that when we got to Howard's End the first one to dive for pussy had been Paula. She had been in a hurry to check that off her bucket list. I also learned that the longest part of the time she was on Lois' bed she had a mouth at her pussy and a pussy in her mouth.\n\nShe had also described Sidney's love making as intense and was happy to learn she could be just as intense when needed. Of course she already knew that since some of our fucks had bordered on violent.\n\nWhile Paula and I were eating an early dinner before our ball game in Denver her phone rang. She said Hi to Lucy but it was James on the phone and he wanted to talk to me.\n\nWe covered several bases and he confirmed my suspicion that Lucy had been using Paula's stories as phone sex. Lucy had masturbated to them then attacked him with fury. He told me to tell Paula thanks.\n\nI laughed and told Paula that James was thanking her for making Lucy horny for him. \n\n\"Tell him it's my pleasure,\" she said.\n\nMost of our conversation was over my curriculum on Earth History. He said that when he first met me I looked very familiar to him. He looked through his Texas Science Teachers Association stuff and learned that he had been at my presentation of the curriculum at a convention in Austin. He liked it but his district had no appetite for anything new at the time. He asked me for a quick rundown and I gave him one.\n\n\"Fascinating stuff. I have a couple of aunts that would love to hear that when you get here. You better give the phone to Paula, I am being mauled here.\"\n\nI laughed and gave Paula her phone. We were in a public place so there were no racy stories from her. In fact when Lucy had to take a potty break Paula ended up talking to Jamie, Lucy's oldest daughter who apparently did not want to give up the phone when her mother returned.\n\n\"Love you too, Bye.\"\n\nIt was the first time I heard them end a conversation that way. Every one of their phone conversations for the rest of their lives would end that way but I did not know that at the time.\n\nWe were at an allegedly haunted hotel in Santa Fe when Lucy called Paula next. She said that the chance of me getting a job in the district had just shot up ninety percent. The wife of the Geography teacher had just been appointed to fill the unexpired congressional term of the incumbent. Her husband was the Geography teacher at the high school.\n\nLater that day we had a very fine dinner at a Mexican restaurant around the corner from our hotel. While we waited for our bill and sipped Dos Equis Paula picked up her phone and called Lydia, the new congresswoman, they were friends.\n\nAfter congratulating her she learned that Lydia already had the backing of her party to run for her own term in office. Paula volunteered to help her when the time came.\n\nShe asked how her husband was doing with the uprooting. \"He is fine\", she said. He was a military brat so he took it in stride. He already has a job with the Department of Interior.\"\n\nPaula then told her that she had just had the Cancun experience Lydia had except it happened on a trip west. Lydia sounded excited and wanted details but Paula said that like her adventure it was also an x rated story and we were in a crowded restaurant in Santa Fe. \"I will tell you the whole story when you come home next time. In bed. Naked,\" Paula told her.\n\nI heard a happy squeal that probably hurt Paula's eardrum. \"Yes, I promise. Have a good time up there, make friends. Bye.\"\n\nAfter she hung up Paula said to me, \"Lydia has tits and lips I could go to town on. She has been flirting with me since I moved to Felicity. She seemed to be happy to hear I was available for her, \" Paula said in a gross understatement.\n\nWe did not see any ghosts in our stay at the hotel and in jest I complained about that to the mute assistant manager called Edna as we checked out. She laughed. Paula lost panties there.\n\nWe made overnight stops in Dallas so Paula could meet my son and daughter-in-law Kay. \n\nAs I expected it was love at first sight for them. I had regularly updated my son on the progress of my relationship with Paula. I had sent him a picture of her or us over the phone every few days. Before we left Orcas Island I had texted him that Paula and I had agreed to be married.\n\nAfter dinner that night I got an unexpected present from them, a coffee mug. It read \"Worlds Greatest Grandpa.\" I was going to be a grandfather. I was so overwhelmed I almost cried. I kissed Kay repeatedly and even kissed my son on the cheek. After I got the details and things calmed down a bit my son gave Paula a coffee mug. It read, \"Worlds Greatest Grandma,\"\n\nPaula burst into tears. My son looked at me apparently worried he had done the wrong thing but at that precise moment Paula jumped up and gave him a hard kiss then a hard hug. Then Paula gave Kay the same treatment. Then me. It took her even longer to calm down than it did me. \n\nI understood her elation. Both of her children were gay and grandma was a title she was sure she would never have.\n\nKay sat with her on the sofa and embraced her. My son and I went to the refrigerator for beers for us, and cold wine for Paula. Kay was getting V8 juice.\n\nOur evening ended with Paula's and mine description of our whale encounter. It was our second time to relate it; the first had been to Lucy on the phone. I told him that Paula and I had still not seen the video.\n\nMy son told us he had it downloaded and showed it to us. Paula and I were impressed with it even though we were the co-stars. My son put the thing on a loop and Paula and I saw things that we had not known happened among which was Lois' voice saying, \"Oh no!\" There had been lot of commotion on the dock; we were never aware any of it.\n\nThe video did not capture many things we had experienced. It did not show that the whale looked directly at Paula and Sidney as it emitted a low rumbling sound. You could not see the happy tears in their faces either. And it could not show the whales sense of presence, the enormity of the living being.\n\nPaula and I were stunned to learn that the entire incident from the initial tail flap to the final disappearance of the whale had occurred in just over forty-three seconds. My son burned us a copy to take home.\n\nI got us home in mid July. We had spent every second of well over a month together, (except for the Lois and Sidney events). \n\nPaula and I spent one night in my townhouse. I rented a trailer and we packed everything I would need for the foreseeable future and drove to her home in Felicity. We put the trailer in a storage lot, I figured to unload it as I got around to it.\n\nThat Friday afternoon I called the school district office and was told that my interview would be at a bar and grill at seven that night. I was also told to dress casual and to bring Paula.\n\n\"We are definitely not in Kansas,\" I muttered to myself.\n\n\"What was that honey?\" Paula asked.\n\n\"Oh, just wondering what I am getting into. My interview is at seven tonight in a bar.\"\n\n\"That happens a lot here. The interviewers say they get a good feel for the person in that setting. As a bonus the person being interviewed gets a meal out of it. Should I wear the blue or the yellow sundress tonight?\"\n\n\"How did you know I was to take you with me?\"\n\n\"Lucy told me. That is also routine.\"\n\n\"The maroon one. You look delicious in it. Maybe Lucy will be there and find you as tasty as I do. Apparently James will be there.\"\n\nThe bar was great; I knew it would be my basic hangout. Paula had been there several times before with a pack of friends from school.\n\nThe person I ended up interviewing with turned out to be the superintendent of schools. The first question the small redheaded woman asked me was, \"Just how did you think you could help those two ninnies if the whale had not been a good natured beast?\"\n\n\"I was going to rush right in and think of something.\" She shook her head but she was smiling. \n\nI continued, \"In truth the video made it look like we were much closer than we really were. The girls had more than twenty feet clearance although the tip of the whales fluke was less than ten feet away. I was about thirty feet away. Plus Paula and Sidney knew to be still. It looked dangerous but I was not too concerned about mishaps. I did lecture them about rushing towards the whale. That might have been construed as an aggressive act.\"\n\nShe smiled and nodded. She asked me how I was on Geography.\n\n\"I am OK in political geography but what I have been teaching is Physical Geography, Earth History and Ecology.\"\n\n\"How do you integrate Ecology in that?\" she asked with sudden great interest. I guessed the lady had been a science teacher herself.\n\nI answered, \"How physical environment determines all the ecosystems including human. I do cover physical and political boundaries.\"\n\n\"Sign here and here. Paula, come sit with me for minute. Charles.\"\n\nI signed what I hoped was a contract; an enormous guy came over and kissed the superintendent on the cheek and then signed the form too.\n\nPaula kissed the lady on the cheek as she sat with us and the lady said to her, \"Sweetie, I changed your school assignment. You are now at the new MacDuff Elementary School. I need an experience teacher to ride herd on a newly minted principal. You are now also the team leader for the upper grades.\"\n\n\"Do you really want me to baby-sit a principal?\"\n\nWe heard, \"I am not a baby, I am not a baby. I am too big for a baby sitter.\"\n\nThat fine whine came from Lucy who promptly kissed the superintendent of schools on the lips and then gave Paula a ferocious kiss. I got a nice kiss from her too.\n\nLucy said to me, \"Go out to the patio, James is waiting for you out there. He has a bunch of guys to introduce to you.\"\n\nI got up feeling a bit disorientated. My interview lasted less than five minutes but I was pretty sure the interview was over and I had been hired. Sure enough James was outside and had a Dos Equis waiting for me.\n\nI met a bunch of guys and they all wanted to know all about the whale encounter, particularly James although he had heard it second hand from Lucy. I gave them the long version from before the cameras were rolling and after they stopped.\n\nOne of the guys, I was sure his name was Sam, asked me how it felt to be so close to such a creature.\n\nI had not sorted out those feelings yet so it took me a few moments before I said, \"Like falling in love for the first time.\"\n\nAll the guys nodded and raised their drinks to me.\n\n\"Anybody want to go with me?\" James asked.\n\n\"I have bad news for you,\" I said. \"The Inn is booked for the entire summer. If anyone wants to go next summer Paula and I have a little clout and we may be able to book all eleven rooms for five days or so.\"\n\n\"Lets do it. We can figure out later who is going.\"\n\nI called Lois right then and she told me that the week of June twenty first was still completely open. I said, \"Reserve that for the Felicity Texas party of twenty two. You may need more kayaks. Tell me if that is a problem.\"\n\n\"It should not be. By the way, you were right when you told me I had just one more peaceful night left this summer. I am sending you a picture now. Talk to you later.\"\n\nThe picture was of the mural of the whale encounter. It was not finished, as the water had not been painted in. I was surprised to see that the front end of the whale, about twenty feet worth, took up the entire side of the building. The perspective was from the dock and the lens of the news camera had zoomed in some. The three kayakers looked minuscule next to it yet you could tell who they were.\n\nI showed the picture around and all of them said, \"That is just cool.\"\n\nLucy stuck her head out the door and asked me, \"Is the Saturday after Thanksgiving OK with you.\"\n\nMy blank expression told her I had no idea what she was talking about.\n\n\"Your wedding you ninny.\"\n\n\"Oh, fine. Who am I marrying again?\"\n\nLucy grabbed a handful of peanuts from a bowl and threw them at me. I managed to catch a few and so did most of the guys. No one seemed to see that as strange behavior, if anything they were grateful for the peanuts.\n\nJames told me that his mother was a realtor and that there were two houses left in the subdivision he and Lucy lived in.\n\n\"Charles, tell him why they call it the Naked Arms Estate,\" Sam asked.\n\nThe big guy that had signed my papers said, \"Because it would be impolite to call it the Naked Asses Estate.\"\n\n\"It's a nudist colony?\" I asked incredulously.\n\n\"Only on Sundays\", James said.\n\n\"Only sort of,\" Charles said. No one goes out the front door naked. Each yard has a gate to every neighbors yard. Those gates are seldom closed and the gates are color-coded. Red means look and ask first or wear clothes. Those are the yards with kids. The gates to James and Lucy's yard are red.\n\nYellow gates mean look before opening. That means people with families that would not understand or in the case of James and Lucy to remind them to look before opening the gates when their kids are out. The girls have aunts on both sides. \n\nGreen means come anytime, dressed or nude. All the rest of our street have green gates. My house is the first on the street so I have just one such yard gate. Every body else on the loop has two gates except the first one on the other side of the street from me. That is one of the two un-occupied.\"\n\n\"Lucy and I live at the end of his loop,\" James said to make sure I understood that if I bought the remaining house we would be neighbors.\n\n\"Who owns the house?\" I asked. \n\n\"The developers,\" the oldest guy on the patio said. I thought his name was Harry. \"It has never sold because it does not have a separate office. The master bedroom is extra large because of it. The builders misread the plans. You would get a good deal on it.\"\n\n\"Who do I see,\" I asked him.\n\n\"His mother,\" he said pointing at James. It would be months before I learned that Harry was the principal developer.\n\nJames looked at me questioningly and I nodded. He sped dialed and said. \"Mom, E 27 has a buyer. Harry said a good deal. Yes, Paul and Paula. Love you.\"\n\nSee her sometime tomorrow,\" He said to me.\n\nSuddenly all the ladies inside came out and grabbed their man's hand. We were led to an escalator and I found myself in a small plaza between restaurant clubs. We followed James and Lucy into the one playing Latin music and straight to the dance floor.\n\nI could do salsa, and mambo, and cha-cha. Paula was so happy to see that she jumped into my arms and gave me a pornographic kiss. We danced for at least thirty-two hours until she allowed me to stagger to a table. Lucy and James were already there and had ordered drinks for us.\n\nA fine looking lady in a silver dance costume came over and after James and Lucy kissed her they introduced us. Her name was Juanita and she was going to do a tango demonstration \"if my husband ever manages to get in costume.\" \n\nRight after she said that Sam came out wearing a 1930's gangster suit. He grabbed Juanita's arm and flung her across the floor as the music started. Her graceful slide across the dance floor brought immediate applause.\n\nJuanita was soon crawling up Sam's leg as he looked at her in contempt. The dance moved into sequences of attempted seduction by her and rejection by him. Their intricate legwork was dazzling. \n\nThis was not the tango of dancing with the stars, it was the real stuff and they were amazing. When the dance finished they got an ovation and for the first time I noticed how full the place had suddenly become. The wide entrance was packed with people that had apparently come over from the club across the little plaza.\n\nAfter the applause died down Juanita announced, \"Free lessons at two tomorrow.\"\n\nJuanita mingled with the spectators but Sam came over and sat with us. He groaned, \"I'm getting too old for this crap.\"\n\nAs soon as he said that he was hit with an olive. Juanita called him, \"Viejo,\" and sauntered away.\n\n\"I'll never be too old for that, \" he said with a grin as he watched his wife's ass sway its way across the room.\n\nA bolero began to play. I loved boleros; they were intimate and seductive with a bit of ballroom and a bit of slow salsa in it. I took Paula to the dance floor and proceeded to seduce her with the dance. When the song was over she jumped into my arms and kissed me several times while repeating, \"I love you.\" I carried her back to the table and I got a high five from James and a slide five from Sam. \n\nWe suddenly saw most people moving across the plaza to the other club. Sam said, \"Come on, Harry and Margo are about to start.\n\nWe were half way across when we saw Juanita climbing up Sam's back ending up sitting on his shoulders. Paula immediately did the same with me. Lucy was already on James' shoulders. All three women were wearing dresses.\n\nHarry was wearing a tux and Margo, apparently his wife, was wearing a long gown. A waltz began to play. They floated effortlessly across the floor as the made love to each other with their eyes, their fingertips, and their moves. Tens as far as I was concerned.",
        "As with Juanita and Sam they got an ovation. After it died down Margo announced \"Free lessons tomorrow at one.\"\n\nPaula jumped down off me, found Lucy and kissed her. Paula told her something that made Lucy grin, kissed her again and ran back to me. She led me to the escalator and before I had a chance to say anything I was driving us to her townhome.\n\n\"What's up?\" I asked.\n\n\"I am in a hurry to fuck your brains out.\"\n\n\"Oh.\"\n\nBy the time she was finished with me I was nearly catatonic. She really had fucked my brains out.\n\nShe slowly brought me back to the world with kisses.\n\n\"Did you realize I was no longer your girlfriend?\"\n\n\"Huh?\"\n\n\"True. I am now your fiancee. Everybody told me we needed to go to Wendy's Jewelry Shop for our rings. She did Lucy's and most of the women you met tonight. All of them are gorgeous.\"\n\n\"We will go there in the morning.\"\n\n\"I love you.\"\n\n\"Good to hear because I am buying us a house.\"\n\n\"A what?\"\n\n\"A house, one of those things with roofs and rooms. People live with them.\"\n\n\"Yes but why? My condo is perfectly suited for us. We could be comfortable here.\"\n\n\"It's up the street from Lucy and James.\"\n\n\"Oh.\"\n\n\"Your school secretary lives across the street.\"\n\n\"Shirley? She is yummy.\"\n\n\"Do you know why they call it Bare Arms Estates?\"\n\n\"No.\"\n\n\"Because it's more polite than calling it Bare Asses Estates. There are gates to and from all the backyards. If the gate is green you can walk through it naked.\"\n\n\"You made that up.\"\n\n\"That is what James and Charles told me.\"\n\n\"Which one is Charles?\"\n\n\"The humongous guy. Shirley's husband.\"\n\n\"Oh, everyone tells me I need to see his cock. It is appropriate to his size they say.\"\n\n\"I will pass on that. I have enough inadequacies to fill a book.\"\n\n\"Your cock is the perfect size, it covers all the bases it needs to cover. It is beautiful and delicious. But now that I think about it how could the ladies know what Charles' cock looks like unless he is parading around naked.\"\n\n\"If you get us invited to Lucy's for lunch Sunday afternoon we can find out. Apparently everyone is nude on Sundays.\"\n\n\"Lucy already invited us to a grilling this Sunday afternoon. She did not say clothing optional.\"\n\n\"That could mean her kids will be there. We can ask her tomorrow. Let me change the subject a minute. When is our wedding?\"\n\n\"November 26th. My daughter will be the maid of honor and Mom will be the matron of honor. My bridesmaids will be mostly friends from my old school plus Lucy. Which reminds me, I haven't told anybody yet.\"\n\n\"My son will be best man and I will need to call him tomorrow too. A word of warning, he will call you Mom from the beginning. Don't cry when he does.\"\n\nShe cried. \"Why is he so anxious to call me Mom?\"\n\n\"He never thought it would happen. He was sure I would never trust my heart to a woman, he knows the type of woman his mother was. Since he was eight he has never spoken about her, not even when we learned she died when he was a high school senior.\n\nI have never trusted women after I divorced his mother. \n\nYou remember that I told you that we did competitive dancing for a few years. What I did not tell you was that she fucked the judges and fucked the husbands and partners of our competition, anything to gain an edge. Winning ceased to mean anything to me. She left us for one of the judges she fucked regularly. Both were banned from competition shortly after that. \n\nMy son became aware of everything when that story hit our small town newspaper. He and I got out of town and came to Texas. There where years in which I qualified for the priesthood more than the average priest.\"\n\n\"And yet you trust a woman that asked you to fuck her the night she met you.\"\n\n\"Yes, but as amazing as that fuck was it was just a fuck. But by the time we came down from the mountain the next day we both knew exactly who the other was. We told each other everything about ourselves expecting we would never see each other again. That night in my tent when you threw me the chance and I asked you to come with me my strongest feeling was relief. I already knew I did not want you out of my life. I was probably already in love with you.\"\n\n\"The most agonizing stretch of my life was the two seconds between letting you know I was available and your invitation to join you. I knew I was in love with you before we left the mountaintop. When you let me play in San Francisco I knew just how special you are. I will be a good and faithful wife to you. I know you will be a good and faithful husband to me. I know how the rest of my life will unfold. I know it will be good. I love you.\"\n\nWe kissed until sleep overtook us. The next morning we showered together and had toast and coffee naked in her small, enclosed patio. She said we were trying out the concept just in case the stories were true.\n\nWe made our phone calls and Paula called her mother last. I went to the kitchen to refill our cups; I knew that phone call would take a while.\n\n\"I did learn my lesson which is why I know Paul is perfect for me mom,\" I heard Paula say to her mother as I returned to her patio. I half listened to their conversation as we sipped our coffee. As usual a naked Paula produced a very nice erection. When I noticed that she was repeating herself I lifted her onto the patio table and slowly slid my cock into her. She tried to cover up the phone as she moaned but her mother apparently heard it.\n\n\"Is he fucking you?\" I heard her mother ask.\n\n\"Almost.\"\n\n\"Let me speak to him a minute.\"\n\n\"Hello,\" I said.\n\n\"Just one question, do you love my baby?\"\n\n\"Very, very much. I learned my lesson too which is why I know Paula is perfect for me.\"\n\n\"Thank you. Give the phone back to her please.\"\n\nI saw Paula grin then wrap her legs around me. I heard her say to her mother, \"You perverted old broad. No, I will not let you hear us fucking,\" Paula said and giggled.\n\nI heard a loud cackling laugh on the other end of the line.\n\nPaula's expression suddenly changed and she put the phone on speaker and set it on the table next to her ass.\n\nI understood and began a vigorous fuck. It did not take long for Paula's orgasm to arrive. We kissed and caressed for a while. I had truly forgotten about the phone and was startled when I heard a voice say, \"Paula?\"\n\n\"Yes, Mother.\"\n\n\"Does he always take you to orgasms?\"\n\n\"Yes he does, usually more than one.\"\n\n\"Oh, then it will be nice to have him in our family,\" she said with a seductive voice.\n\n\"Mom!\"\n\nGiggles came from the other end until her mother said, I love you baby, you too Paul. Let me know when you two are settled so I can come visit.\"\n\n\"Hopefully before school starts. I will let you know. Love you. Bye.\n\nShe hung up and gave me a very loving kiss and said, \"Go.\"\n\nI finished our fuck and managed to give her one more orgasm before I was spent. We cleaned up, dressed, and went in search of Wendy's Jewelry.\n\nIt turned out to be easy to find, it was across the boulevard from Felicity Place. \n\nWe told the lady at the counter that we were sent to see Wendy. \"I'll get her,\" she said. She came back with a spectacular redhead wearing a lab apron.\n\n\"Hi, you must be Paula and Paul,\" she said before she kissed us. Her kiss to Paula was quite personal.\n\n\"Paul, had you been to Felicity before?\"\n\n\"No, yesterday was my first time.\"\n\n\"Paula, how long have you lived here?\"\n\n\"Five years.\"\n\n\"Do you and your friends hold hands and kiss in public?\"\n\n\"Hold hands yes, many of us do. Kiss in public or private, rarely. But I have seen many women in town do that.\"\n\n\"That would be the clan you are now a part of. What you and Lucy do when you are together we all do to each other.\"\n\nWendy kissed Paula on the lips and lifted Paula's hand to one of her own very full tits. Paula extended the kiss a bit and when it ended Wendy's hand was on Paula's tit.\n\nWendy looked at me and said, \"Guys don't kiss anyone except their wives. Girls can kiss anybody they want,\" then kissed me again.\n\nShe then took a device from her apron pocket and measured Paula's and mine ring fingers. She scribbled down something then sped dialed a number on her phone. \"Amanda, they are here. OK, love you. Bye.\"\n\nShe pressed two more buttons and said the same thing but the name was Mo.\n\nThirty seconds later a very tall redhead came in and Wendy introduced her as my principal, Miss MacDuff.\n\nThe woman shook my hand and said, \"I am Miss MacDuff at school, anywhere else call me Mo. Martha and James told me you have your own curriculum that includes all kinds of things. When Amanda brings you back come see me next door at the gallery, I would like to hear what you have.\"\n\nShe turned to Paula and spread her arms and said to her \"Jump.\"\n\nPaula jumped into her arms and got a terrific kiss then she was allowed to slide down. I learned that Mo had been her Paula's principal her first year in Felicity. It was obvious to me Mo and Wendy shared a deep love for each other. There was zero air space when they stood together. It soon became clear to me that that they were sisters.\n\nA small redhead walked in and immediately jumped into the other redheads' arms for her kisses. She introduced herself as Amanda and said, \"I am ready to go when you are.\"\n\nPaula and I said we were ready. Wendy and Mo reminded us the come see them when we got back. \n\nAn enormous SUV was stopped in a no parking zone in front of the store with its hazard lights on. It had a magnetic sign that read MacDuff Realty. The small redhead was a sister too.\n\nShe gave us a quick rundown on the Cloverleaf Estates and said that subdivision number two would be ready before Labor Day and number three before Christmas so if we did not like the house she could run us over there and show us the model homes. She confirmed that each backyard had a gate to their neighbor's backyard. She also said that the new subdivisions would not except when requested.\n\nWe turned onto a blacktop road and soon turned into the subdivision at a flashing yellow light. We took the first left and entered a cul-de-sac. We were less than two miles from the middle of town but it felt like we were in the middle of the country. The circle at the end had several large oaks inside and each had bird and hummingbird feeders on it. A small pond was in the middle. Every house had a front porch.\n\nAmanda drove slowly and said, \"The houses are less than a year old. This subdivision is the smallest and oldest of three. That first house is Charles and Shirley's, I heard you met both.\n\nThe second one is Leslie; she is a coach at the high school so you will meet her soon. She has an alleged temporary housemate that we hope is more than that. They are good kids.\n\nThat house is Jason's and Maggie. Jason is a photographer and you best bet for wedding pictures. Maggie is a teacher.\n\nThe third one is Karen and Mike, Both teach at the old intermediate school. Karen is your best choice for gossip in town. Everybody tells her everything even though they know she cannot keep a secret. She is Maggie's sister and both are daughters of your principal Mo.\n\nThat house at the end is James and Lucy. By the way, I am James' mom. \n\nThat house is Carly and Jimmy. It is one of the few households without a teacher in it.\n\nThis house is Marina and Jay's, both high school teachers. Both are very tall. They are the second youngest to Charles and Shirley.\n\nYour neighbors would be Jana and Inga. Jana owns a club and Inga owns a ladies gym.\n\nAnd this is your driveway.\"\n\nThe ranch house was very nice outside with a bit more of a ranch flavor than most such houses. Once inside Paula and I were mesmerized by how truly big it was. Her townhome or mine would easily fit inside the living room/dining area.\n\nPaula loved the open concept floor plan. The kitchen was huge as was the laundry room attached to it. They both had the most modern appliances available. Walking down the hallway we saw two decent size bedrooms that shared a large bathroom. At the end of the hallway there was an enormous bedroom with an enormous bathroom with separate shower and tub. \n\n\"This house has the biggest master bedroom because a third of this space was supposed to have a small office. All the connections for one are installed but they are in the bedroom itself,\" Amanda said.\n\nPaula had not made a sound but it was easy for me to see she loved the place.\n\nThere was a sliding glass door from the bedroom to the patio. Paula walked out and said, \"It's green.\"\n\nAmanda said, \"Go ahead and walk over there, Jana and Inga are likely in the pool.\"\n\nPaula smiled and walked to the gate. She peered past it and we heard, \"Hi, come on in.\"\n\nAfter Paula walked through the gate I asked Amanda, \"How much?\"\n\nThe number she gave me was a hundred thousand dollars less than I had hoped.\n\n\"I'll take it,\" I said. \n\nWe walked back into the house and to the kitchen counter. She opened her valise and started handing me papers to sign. They were already filled in. \n\nShe had apparently already run a credit check on me. The papers already had me as a teacher in the Felicity school district. They had my salary listed and I noted I had gotten a small raise from my previous district. My salary had never come up the night before.\n\n\"Will you be wanting to finance it?\"\n\n\"No, it will be a cash purchase.\"\n\nAfter I signed all the papers she gave me one more and said, \"Fill out this paper and sign it,\" she said.\n\nI had done so before I noticed it was a renter's agreement.\n\n\"Give me a one dollar in a check. I will apply it to the earnest money and the rent. We should close in just two weeks so it will never be cashed. \n\nA word of advice, buy a new bed for the two of you. You want a bed that has never been shared with anyone before. You can use the beds you have in the spare bedrooms. If you go by Juanitas Furniture they can have your new bedroom here this afternoon. Here are your keys. Welcome home.\"\n\nShe hugged me and kissed me, then said, \"Now for the hard part, we need to get your fiancee away from the clutches of the two blonde bombshells next door.\"\n\nWe found Paula naked in the swimming pool with them and I noticed that blonde bombshell was barely adequate to describe my neighbors. Amanda kissed both of them then urged Paula to get dressed because she had a lot of things to do. \n\nI said Hi and I paid attention as the blondes told me their names, they looked a lot alike. If anything Inga seemed more muscular, she appeared to be a little older and had the trace of an accent. Jana may have been a little shorter, had the better tits. Both were true blondes.\n\nOn our way back Paula pointed at a furniture store and said to me, \"They have good stuff, you can get your recliner there.\"\n\nAmanda stopped in front of Juanita's Furniture and said to me, \"It's just two and a half blocks to Wendy's so you can walk from here. Stop at Janie's on you way, you will love whatever you eat there. My sisters will fall in love with you if you take them some burritos.\"\n\n\"Probably too late to say that, I think they already do,\" Paula said with what sounded like pride.\n\nAmanda laughed and said, \"You are probably right.\"\n\nAmanda took Paula to show her where her new school was and I went into Juanitas.\n\nI bought a not too masculine bedroom set, a matching vanity table, and a computer desk. Mine was too ratty to put in our beautiful new bedroom. I bought a second matching computer desk when I remembered that Paula's computer was in her kitchen. I bought us recliners. Paula already knew I would be replacing mine at the first opportunity and bought a second for her, our new living room had plenty of room for all our stuff. They promised delivery within fifteen minutes each side of five that afternoon.\n\nIt suddenly occurred to me we did not own linens for our new king sized bed, (Paula's bed and mine were queen size), so I asked the sales lady, Esmy, where I could buy some. She led me to a golf cart and took us two blocks to a store called Bernice's. The young lady kissed an older lady then introduced me to her, she was Bernice.\n\nBernice kissed my cheek and asked where Paula was.\n\nI told her she was going by her new school then Lucy will be taking her to Wendy's shop. I briefly wondered how the lady knew about us but decided she probably knew Paula.\n\nI picked two complete solid color sets and a multi-colored spread. I got two king size pillows and some bathroom mats. After I paid for them I was wheeled to Janie's and Esmy, said, \"We will deliver your linens with the furniture. Everything in Jeanie's is great but try the burritos first.\"\n\nI soon found out that what Amanda and Esmy had said about the burritos was true, those things were addictive. I ate a couple then ordered two bags of two burritos but the deaf kid in charge told her helpers to tell me I needed three, that I would need two at the gallery. I did as suggested since it did not feel like a sales ploy.\n\nWendy gave me a big kiss when she saw me come in and a bigger kiss when I handed her the bag of burritos.\n\nI went next door to the gallery and found my boss. She took us to a Starbucks looking area at back corner of the place and I handed her two bags of burritos. I was amazed to find Wendy already sitting there munching on a burrito. Either she moved faster than light or she had a secret entrance.\n\n\"Marie, come here. You have a guy to kiss. He brought you burritos.\"\n\nAn elegant blonde rushed towards us, saw the bags and kissed me and sat with us.\n\n\"You must be Paul, welcome to our town. You will love it here. Amanda said you bought the house and will be moving in soon.\"\n\nI said, \"Yes, maybe even tonight. You know, I forgot to tell Paula.\"\n\nMo asked, \"You forgot to tell her you were moving in tonight?\"\n\n\"No, yes. I forgot to tell her I bought the house. She was in Jana and Inga's pool when Amanda and I were doing the paperwork.\"\n\n\"The ladies laughed and Mo said it's a good thing she is a little thing because you will be attacked when you tell her,\" Mo said.\n\nI sighed and said, \"It wont be the first time.\"\n\nThe ladies giggled and asked where she was.\n\n\"Amanda is taking her by her new school. Lucy is meeting them there and she will be bringing Paula back.\"\n\nThe ladies had finished their burritos and I got coffee for them and me. Marie went to the front to greet people that had walked in. Wendy left through her secret door; it was shielded by a tapestry.\n\nMo asked me to explain what I had been teaching and I spent about twenty minutes covering it. I did tell her it had been years since I had been able to go through the entire process because the state testing prep, practice, and real testing Had eaten up our lab time and some of the longer lessons.\n\n\"We don't worry to much about the state tests. We want the teachers to go over their own test with their kids after they take them, show how the questions were set up and explain how to arrive at the correct response. Our entire district has been exemplary for years. Our teachers are good, our parents are good and the kids are good. Did you say you have a power point presentation for every lesson?\"\n\n\"Yes, even the labs. I was single and not dating. I had time.\"\n\n\"Well then, here comes the one that ruined your life.\"\n\nPaula was walking over to us with a big grin on her face. She kissed Mo then me and announced, \"Wendy wants to show us something.\" I stood and Mo stood too and said, \"I want to see.\"\n\nWe followed Mo through the secret door that led us to a work storage area and another door led us to an office. Lucy and Wendy were there standing next to a computer desk. Wendy had a 3D image of an engagement ring up on the monitor.\n\nWendy motioned Paula to sit at the desk and said, \"I have three for you to look at. This is number one, then number two, and number three. You can toggle between them here. You can use the cursor to see them from any angle. You can eliminate one by dragging it to this folder. Take your time. If you decide you don't want any of them just tell me and I will come up with another three.\"",
        "Paula's eyes were wide with awe. \"I have never seen anything so beautiful in my life,\" she said.\n\nI kissed her and stepped back. My choice would have been number one but I was not going too even hint that I had a preference. \n\nMo kissed Paula and Lucy then kissed her sister. You could see the pride and adoration in her eyes. Wendy embraced Mo in gratitude. \n\nMo said, \"I'm going to get Marie.\" When Marie saw the rings she hugged and kissed Wendy. She then kissed Paula and left without saying a word. By then Paula understood she was on her own, no one was going to hint any preferences to her.\n\nBefore Marie left I noticed something interesting and somewhat important, Mo and Marie were wearing identical wedding bands on their ring fingers.\n\nLucy and I followed Wendy when she went to her showroom and into her workshop area facing the sidewalk. It was separated from the rest of the shop by a short wall. Passersby could watch her work through the display window.\n\nShe fashioned her own line of jewelry and she told me that when they were building her shop she thought that was the stupidest idea ever for a jewelry store. The first time she tried it she had gathered a crowd and one lady rushed in and bought the piece she was working on before it was finished. That happened once a week or so she said.\n\nA corner by the workshop had a large monitor that showed the same images that Paula was sorting through. There was a sitting area for people just like me that wanted to watch the decision making from afar. Mo was sitting there sipping coffee. She had brought me one. Lucy and I sat with her.\n\nI then noticed that right behind the monitor we were watching there was another facing the sidewalk. That screen had gathered a crowd and each time Paula switched from one to the other cheers and boos were emitted but very little sound came through so Paula could not hear them. \n\nThere were lots of cheers for number one and number three but when Paula eliminated number two there were some boos for that decision. I was glad Paula could not hear them because I knew Paula would have put number two right back in had she heard it and she would end up sitting there forever. \n\nBefore Paula started the second round Janie, the deaf girl, and Mo's daughter Karen had joined us. Karen was sitting on her mother's lap. Juanita came in and Janie stood to giver her the seat then sat on her lap. I gathered they were mother and daughter too. \n\nUntil I felt a hand on my shoulder I had not realized there were people standing behind us. The hand belonged to Amanda and Jana was next to her. Inga was leaning on the wall behind us with two others I had not met. I took a quick glance and noted that as expected Jana and Inga were wearing identical wedding bands. Apparently relationships were not hidden in this town.\n\nWhen Paula at last picked number one there was a loud cheer inside and outside. As soon as Paula emerged from the office all of the ladies inside the store congratulated her on her choice. She got many kisses, all to her lips and all firm kisses except for Lucy's, which was a voracious kiss. Jana slapped her butt. In the aftermath of all that I learned Lucy and Jana were sisters. I stayed back and watched the adulation of Paula with a grin. \n\nWendy wrapped her arms around me from behind and said, \"That is the one I expected her to choose but you will be happy to know it is the least expensive of the three. Your wedding bands will either complement or match that ring. I will give her a couple of days to decide, there are plenty of people that have examples of each. \n\nI always work on the engagement ring first so that the bride can show it off as soon as possible. I should have hers ready by next Wednesday. Take her to the String of Pearls for dinner and give it to her there. It is the most romantic joint in town.\"\n\nI looked on as the ladies led Paula outside and across the street. \n\n\"They are taking her to Sam's to ply her with wine. I hope she can hold her liquor. Come over to the counter and I will give you the gory financial details.\"\n\nI opted to pay for all three rings then. \n\nBefore I crossed the boulevard Mo took my hand and joined me on the trip to Sam's. I was holding hands in public with my school principal, my boss. For the umpteenth time I reminded myself I was not in Kansas anymore.\n\nJames and Charles and Sam were there and I was handed a beer and patted on the back as they gave me their condolences. The beer had a label in a central European language. It was fabulous.\n\nJames said, \"That is your consolation price, Charles found a pipeline for this and Sam can now keep it in stock. The secret word is Bohemia and it costs a hell of a lot less than what you just plopped down across the street. You need to stay out of there.\"\n\n\"I know that now,\" I laughed. I took James aside for a moment and said, \"I have an embarrassing question to ask. Who did I interview with last night?\"\n\nJames burst into laughter and told the others, \"Aunt Martha forgot to introduce herself last night. She gave him a job and never told him her name.\"\n\nSam said, \"Don't worry about that. She was sitting on my lap before I knew her name. The good news is that she can pick up peoples character quickly and accurately in less than three minutes. If she approves of you then you immediately become her long time friend and a friend of everyone that knows her. She also assumes you know all about her too.\n\nIf she has reservations about someone then we all do. As far as I know she has never been wrong.\"\n\n\"How many aunts do you have?\" I asked James.\n\nHe chuckled and said, \"Four. You met Aunt Martha even though you did not know you had. You know Aunt Mo and Aunt Wendy. You will meet Aunt Allison when you decide to trade in that embarrassment of a vehicle you drive.\"\n\n\"Hey that thing has served me well for a long time. It only has two hundred thousand miles on it, practically brand new.\"\n\nJames laughed and said, \"Yeah but it looks like it hit everything in a pine forest more than once.\"\n\n\"Well it has, twice. Once when the brakes failed and once to avoid a log that fell off a loggers truck.\"\n\n\"Ooh, I saw that on a road in Montana once,\" James said. \"The people in the car behind it had no chance. I wont follow one of those things. I pull over to the side of the road and let at least five cars go past me before getting back on. Paul, are you and Paula moving in your house today?\"\n\n\"I have been thinking that we could at least spend the night there. I bought a bedroom set that will be delivered around five.\"\n\nSam said, \"The ladies are well into their coven meeting, I have a van and we can move the stuff you need to just stay there before they realize we are gone.\"\n\n\"Lets do it James said.\"\n\nAs we returned to my new house with the first load my new neighbors named Jimmy, Mike and Jay joined us. An hour later we were unloading the last of the clothes from my car, the last of the furniture from Mike's truck and the mattress, cushions and pillows from Sam's van. We were completely done setting up what Paula had in her condo when the Juanitas truck arrived. It was just after four. Paula's townhouse was already empty. In twenty minutes the entire move was complete. I had a fully furnished home.\n\nWe decided we needed to hurry back but we stunk. James suggested we jump into Jana's pool before we returned. We did just that and went to our own homes to dress after swearing that we would never tell Jana or Inga what we did.\n\nI was one of the guys staring at Charles cock in amazement, the rumors about it were correct.\n\nWhen we got back to Sam's none of our ladies were there. Sam asked his bartender and she said, \"At Jana's. They are talking Paula into being a Thursday night star.\"\n\n\"Huh?\" I said.\n\nJames said, \"An erotic dancer. Don't worry, they all do it and it's a lot of fun for them. Plus it has that most pleasant side effect.\"\n\nI immediately understood the side effect line and said, \"Sounds like a good time for hamburgers and beer then, my treat.\" I accepted the cheers as Sam ordered for us. We were soon happily eating and drinking.\n\nWe were fighting over the last fries when the girls came back. They were starving too so Paula said the hamburgers were on me. She was cheered even though I would be paying for them. Strangely I was OK with that.\n\nI ordered more fries and another round for the guys.\n\nAs soon as the ladies were done with their food Paula came to me and said, \"You are taking me club dancing tonight. Lucy and Jana are taking me to their sisters Allison's boutique. I need a new dance outfit. We will be right back.\"\n\nInga sat next to James who said, \"Coward\" to her.\n\n\"Intelligent,\" she said in response.\n\nIn the world of Felicity they were in-laws and were definitely fond of each other. I finally decided that her accent was British; it had taken me a while to admit to myself that she was not Scandinavian.\n\nJames quickly confessed to her our little peccadillo in her pool. He also volunteered us to pay for the next cleaning.\n\nInga said, \"Ugh, all that testosterone in our beautiful pool. I feel faint.\"\n\nJames, Jimmy, and Mike pushed beers in front of her.\n\n\"Oh, I feel better now,\" She said.\n\nThat night I learned that male or female no one held their liquor better than Inga. \n\nThe girls were back about an hour later. They all insisted they needed to get home and get ready for the night. They all had shopping bags. I paid my bar tab, ($80.00 well spent), and drove us home. \n\nPaula asked me if I had gotten the recliner I wanted from Juanita's. I said yes and soon realized she still did not know I had bought the house. Amanda had probably decided that I needed to be the one to announce it to her. I changed the subject by asking her if Jana or Inga had made a pass at her. She grinned and said, \"Not yet.\"\n\nPaula's eyes widened when she saw I was not taking us to the home she expected us to be driving to.\n\nShe did not say anything but I could see her excitement building as I took the right and the left past the caution light. She about jumped out of her skin when she saw her car in the driveway. I unlocked our front door, picked her up and carried her through the threshold. Several cars had stopped in front of the house and honked their horns. Paula waved at them with tears in her eyes.\n\nFor the next twenty minutes Paula walked through the house crying, jumping into my arms for wild kisses, then wandering around the house in tears again.\n\n\"This is the biggest and best house I have ever lived in,\" she sobbed.\n\nHer routine added a new wrinkle when along with the wild kisses and tears came instructions to move this here, that there.\n\nWhen a pause in her manic jag showed up I quickly reminded her that we had a night on the town waiting for us. She became agitated as she looked for her shopping bag and could not find it, I went to the front door, took it from the doorknob where she had placed it and handed it to her. \n\nHer elation still had a tight grip on her. I was quite proud of myself at that point.\n\nI took our new linens out of the washer and put them in the dryer then walked around the house making mental notes. Every place that needed blinds had them because all the exterior glass was double paned with the blinds between them. Every room was painted off white but that was a decision for later. The only thing I could think of that I still needed to do was to unload the trailer. It had my camping gear, winter clothes, two filing cabinets of school stuff, and my old bed. The trailer was now in the garage.\n\nThe living room was large enough for two sitting areas. James' suggestion of an aquarium seemed like it would be just right as an adjunct to my sound system.\n\nI had noticed that almost every house had a bicycle rack with bicycles in them. Neither Paula or I had bikes and I told myself to ask the others tonight about that.\n\nI was ready to go by nine and only had to wait another forty minutes for Paula to be ready. I figured, (correctly), that James was in a patiently waiting mode too so I called and asked him about the bicycles. \n\nHe said the other two loops had family and friends and that Lucy's sister Allison lived on the south loop of our neighborhood. His mother Amanda and two sisters lived on the west loop. His aunts Allison, Wendy and Mo lived on the circle across the road. He said that bikes would be a good idea for us; we already had a lot of friends in biking range. \n\n\"Lucy and Shirley have been riding the bikes to school when inventory comes in,\" he said. He volunteered to help me pick out bikes for Paula and me. He said Cube-Mart had Consumer Report's best buy.\n\nWhen Paula finally emerged she was stunning. Her dress was fabulous, a deep red silky flowing thing that went a bit below mid-thigh. She raised the dress to show me the matching panties. She said that every twirl would expose her almost to the waist. She was braless.\n\nWe walked out and Paula immediately said we were taking her car. I had to admit mine needed some help. Funny, right then I knew where and with whom Ishii was going to spend the next stage of his life.\n\nBefore we got in Paula's car a dolled up Inga came over and asked for a ride. She said that Jana was already at work and she was still slightly drunk. We laughed and I opened the front seat passenger door for her, then the driver's side door for me. I sat in the back and noticed it was just as cramped as it looked. Paula drove a red VW bug.\n\nThere was a long line to get into the club but Inga led us down a hallway past the entrance. She used what appeared to be a security card and led us into an office. She positioned Paula then me in front of a screen and took our pictures. Three minutes later we had badges. She led us back to the front and the three of us went into the club through an entrance labeled \"members\". Inga had fixed us up with VIP passes. I noticed we did not have to pay the $20 cover charge either. Inga became one of Paula's favorite people to maul. Probably would have been anyway.\n\nWe had a great time that night mostly because we were in the midst of friends. I was proclaimed the best dancer but much to my surprise Charles the friendly giant was very good on the dance floor too. James had all the moves of Frankenstein. Karen and Mike were very good together. \n\nWe met Jimmy's wife Carly and Jays wife Marina. Carly was a member of the horde of diminutive redheads that were sisters and cousins. She was a lawyer and headed a talent agency. Marina was spectacular. With modest heels she towered over most of us. Shirley was almost as tall but her husband Charles of course dwarfed her and everyone else.\n\nPaula and I were introduced to many others but I am afraid they got lost in the blur of the evening. I danced with Jana, Inga, and Lucy twice and with the others once. James, Charles and Jimmy danced with Paula. The girls danced with each other often.\n\nSometime past midnight as we sat together in our booth for eight I asked Paula if she was ready to go home. I put the emphasis on the \"home.\" \n\nShe gave me a big grin then worked her way around to kiss everybody before she announced we absolutely needed to go home and ruin a perfectly new bed. \n\nWe got hoots and lewd comments for that.\n\nWe made it home quickly but slowed everything down when we got there; we wanted to savor every moment. We helped each other undress. I stayed by her new vanity table and watched here remove her makeup. I got one of her wild kisses mid-way through the process after she told me the last vanity table she had was a Cinderella model. She loved her new one and loved that I had thought to get it for her.\n\nWe went to the bathroom together and she held my cock as I peed. We stepped into the shower together briefly and dried each other off.\n\nWe held hands as we walked to our bed. As she enveloped my cock in her pussy we both closed our eyes, no better feeling in the world than insertion. \n\nShe draped her body over mine as we had done countless times before. I pressed her ass downward as I raised my hips to meet hers. \"Oomph.\" She said as she gasped for breath.\n\nAfter a few minutes she giggled and said, \"That was the fastest and easiest anyone had ever taken me to orgasm, even me. I think I better not mention this to mother.\"\n\nI kissed her and resumed my caresses but each time my hands were on her ass I stroked hard into her. She was soon pounding her hips on mine as she stared into my eyes.\n\nThe love and eroticism plunged her into an orgasm that sent her body into spasms. I shot so much cum into her that I could feel it ooze out of her and onto my balls.\n\nAfter we made it through our storm she said, \"I think we just made our entire neighborhood pregnant.\"\n\nWe lay still and quiet for a while, neither of us wanted to move. I had pressed my legs to hers and we were now in as complete contact with each other as possible.\n\n\"What day is today?\" she suddenly asked.\n\n\"The twenty-second. Why do you ask?\"\n\n\"Because I just realized forever started tonight.\"\n\nShe gave me a long loving kiss. She pressed her tits on my chest and rubbed her body on mine.\n\n\"I think we should use today as our anniversary day,\" She said.\n\nI did not answer and she became a bit concerned. \"You don't like the idea?\" she asked.\n\n\"Oh I like the idea alright but I was thinking of a different date over a month ago, June 8th. We had a doe and her fawn as witnesses.\"\n\nShe smiled then kissed me and said, \"I think that one is good too. You can have that one, I will have this one and we can share the one in November, maybe Vegas too, and San Francisco, and Orcas Island.\"\n\n\"Deal,\" I said with a chuckle.\n\n\"I adore you. Good night,\" She said as she made herself comfortable over my body.\n\n\"I love you, good night,\" I said.\n\nI kissed her and wished her pleasant dreams.\n\nNot for the first or last time we fell asleep as we were."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-20"
}