{
    "title": "Oktoberfest Sex-Geschichte",
    "pages": [
        "Notes:\n\nHi! Welcome to my submission for the 2012 Halloween story contest. This story began as a flashback in a much longer novel about a haunted house full of nymphomaniac ghosts. I may finish that novel someday, but for now, I wanted to expand on one of my favorite sex scenes from it.\n\nSex-geschicthe (or sexegeschichte) is the German phrase for 'sex story'.\n\nThis one is about an awkward nerd who scores BIG TIME after going to an Oktoberfest party. It's full of frustrated longing, teen angst and sweet, sexy relief. It features two hot and nasty sex scenes! But there's also a thread of love running through it.\n\nSo put on your lederhosen, and get ready for my seasonal sex-geschicthe!\n\nPART ONE -- September 22\n\nOctober was almost here. Outside, a cold, gusty wind was blowing the freshly fallen leaves across the campus commons. But I was warm in my room, snuggled under the covers, devouring chapter seven of Advanced Organic Chemistry. I had a test scheduled for the next morning, but studying wasn't a chore for a nerd like me. It was a joy. I was basking in the awesome power of carbon, and the stunning ways it had chemically combined with other compounds over the unimaginable eons of time to form the very basis of life itself.\n\nI loved learning. I loved science. I loved textbooks. They allowed me to escape my self. In textbooks I wasn't a loveless, lonely virgin. I wasn't an awkward, babbling dork. I didn't have a disappointing body with deep pockmarks from a high-school bout with acne, and crooked teeth from parents too poor to pay for braces. And I didn't become embarrassingly tongue-tied in the presence of hotties, because there were no hotties in textbooks. There wasn't even a me. Lost in the mysteries and majesty of science, I became the universe itself. Immortal. Beautiful. Content.\n\nIt was a blessed relief from all the stress I'd been under of late. You see, I could understand carbon. I could understand DNA. I could understand calculus, non-Euclidean geometry and superstring theory. But girls? They were a total mystery to me.\n\nMy roommate Troy had been trying to share his 'wisdom' about the fairer sex with me, but it wasn't easy for me to take his advice. After all, he was a Neanderthal. Normally, I avoided guys like him. You know, big dumb lunks, with handsome faces, muscular bodies, and cocky attitudes. Troy was willfully ignorant about the natural world. He didn't believe in evolution, because it just didn't make sense to him, but he did believe in Bigfoot because he saw a movie about it once. I mean, he was just an idiot. I never would have chosen a guy like him to be my roommate, but my roomie for the last two years suddenly transferred to Columbia just before school started in September, so Troy, was assigned to me at random.\n\nI'll never forget the day I met the big dope. He swaggered into my room as if he owned the place. He was tall and broad, with a thick, strong neck, short tan hair, and an infuriating air of confidence. I hated him instantly. But I resolved to try to get along with him, so I said, \"Hi. I'm Hans. Hans Willis.\"\n\n<br> He replied, \"Look dude, here's the deal I'm gonna fuck a lot of girls in this room, so we need to work out some kinda arrangement. If you see a sock hanging on the doorknob, don't come in. Got it? Just assume I'm boning some chick. I don't care if you have to sleep in the lobby, don't come between me and my pussy. But don't worry, same rules apply for both of us. If I see the sock, I'll stay out too. Those are now the house rules. Name's Troy, by the way.\" He held his fist out for me to bump, so I bumped it.\n\nBut I was flabbergasted. I'd been living in this room for two years, and now this idiotic interloper intended to actually have intercourse in here... with actual FEMALES! It was a filthy, wonderful, yet utterly inconceivable idea. I guess I'd gotten used to living with an even nerdier nerd than me, because I just couldn't imagine any girl who'd be willing to 1- have sex in this pathetic, low-rent, prison cell of a dorm room, or 2 have sex with a big dumb, cocky, idiot like Troy.\n\nBut I was wrong. Two days later I came home from the library to find a sock on the doorknob, and a girl's moans coming from the room. I instantly retreated, utterly scandalized. But also freakishly excited. An actual naked female was having sex in MY room! How crazy was that? I occasionally returned to check the sock status, but even after their moans died away, the sock stayed on. I figured that someone would come kick her out, because girls weren't allowed in the boy's dorm after eleven! But I guess he snuck her past the front desk, so nobody knew she was in there. I ended up sleeping on the couch in the common room, my titillation giving way to blind fury. How dare he do this to me? That's my room!\n\nI thought about snitching on him for breaking the dorm's 'no sex' policy. But I didn't want to make an enemy out of him, so I didn't say anything about it, hoping that was a one-time deal. But after the second time he locked me out over night, I was too pissed off to keep my mouth shut. \"You know, Troy, It wasn't cool for you to leave me out in the cold all night. This is my room too, just as much as yours.\"\n\n<br> He laughed. \"I was wondering if you were gonna stand up for yourself! I guess you're not a spineless nerd after all.\"\n\n\"Look, you just can't make me stay out of my room all night.\"\n\nHe nodded. \"Okay. What about... let's say I make 'em leave by 11 pm.\"\n\nThat really made me mad. \"No. This is my room too. Find somewhere else to fuck!\"\n\nHe laughed again, amused by my nerdy fury. \"Well, that ain't being fair to me, little man. Besides, you don't want me barging in on your action, do you?\"\n\nI didn't say a word, but something in my face must have flipped a switch in his big dumb head. He looked at me aghast. \"Dude! Are you a virgin? Oh, shit, you are! You're a V!\"\n\nI screamed at him, \"So what if I am? It isn't so easy for some of us! Just look at me, for fuck's sake!\" I pointed at the pockmarked moon that was my face.\n\nHe stopped grinning like an ape, and a look of genuine compassion came over his face. \"Dude, dude, sorry. Just chill out. I was just saying... you might get lucky. I mean, it could happen, couldn't it? You'd want to be alone with her, right? Uh... you do like chicks, don't you?\"\n\n\"Well, I'm not gay if that's what you mean.\"\n\nHe grinned, \"Hey, I don't mean to be insulting, Hans, but take a look around! You're in college! You'll never have this much easy access to free pussy again! I mean... you are interested in pussy, aren't you?\"\n\nWhat a crude way to put it, but yes. I suppose, technically, I was interested in pussy. Very interested. So I nodded weakly.\n\nHe shouted, \"Then what the fuck are you waiting for? Get with the program, poindexter!\"\n\nI was furious. But not at him. At myself. He was essentially right. What was I waiting for? My acne had cleared up over a year ago, but I'd never so much as asked a girl out. I'd let fear and a feeling of inadequacy cut me off from the one thing I wanted most in the world: love.\n\nTroy punched me hard on the shoulder, saying, \"Tell you what. You let me fuck a girl in here from time to time, and I'll be your pussy guru.\"\n\nI had no earthy idea how a big jerk like him could help me, but I was willing to give it a shot. So I said, \"Fine! But no more sleeping in the lobby.\"\n\nAfter that he tried to be a bit more sensitive to my feelings, though the way he went about it only made him more of an asshole in my book. He started making his girls clear out as soon as he finished with them. No more sleepovers. But that just struck me as rude. What about their feelings? Didn't he care about them at all? No. Not really. They were just pussy to him. One day he said, \"Hey, I'm glad you told me to start kicking them out, because it's a lot better that way. The last thing I need is some love-struck chick getting all attached.\" What a jerk. But strangely, the two or three times I saw girls staggering out of the room after he'd finished with them, they looked amazingly content. I didn't get it. I didn't get it at all.\n\nWhat did these silly girls get out of these random, loveless encounters with a heartless dope like him? Why did Troy expend so much of his time and energy trolling bars and parties for shallow trollops like them? And why did he spend so many hours in the school gym getting in shape so he could be 'great in the sack', when he should have been doing his homework! I mean, what was the big friggin' deal about sex anyway?\n\nI guess I should point out that all of this happened in the early nineties, before the World Wide Web brought porn to every boy's bedroom. I'd never seen an x-rated video in my life. Sure, I knew the biology of sex, and I'd seen some nude pictures. But I had no practical conception of what sex was like. I'd always imagined it was a sweet, intimate act of love. But Troy was making it clearer and clearer to me that sex was more like an act of assisted masturbation. You do me, and I'll do you. Thanks. See you around!\n\nHe made sex sound so filthy and unloving with his crude after-action commentaries. I had no idea what to make of it when he said things like, \"Man, I really ate the bottom out of that pussy.\" Or, \"Fuck. I totally ruined that girl! She won't be walking straight for a week.\" Or, \"Wow, that one was a real cock gobbler. If I weren't already circumcised, she'd have done the job with those teeth of hers! Know what I mean?\"\n\nI didn't know what he meant, but I just nodded and mumbled, \"Yeah. Cool.\"\n\nAs for being my 'pussy guru'... well, Troy was a lazy shit, and not a very good teacher. All he really did was nag me. \"Get your face out of those books, poindexter, and score some pussy already!\" He dragged me with him to a few college mixers, but watching him work his magic on girls was utterly confusing. He just ignored them half the time, or leered at them like a total jerk. But going out was good for me. I got to where I enjoyed talking to girls. I could tell that they liked me just fine, but by the end of the night Troy would be the one making out next to the restrooms, and I'd be the one sitting alone, watching the girls I'd chatted with earlier in the evening leaving with other guys. Whatever it was that Troy had... well... I didn't have it, and he didn't know how to teach it to me either. It was frustrating for both of us.\n\nOh, he offered me pearls of numbskull wisdom from time to time, such as this little tidbit: \"Look, Hans. Here's the deal. All chicks are really looking for is a dude who knows what he wants, and knows what she wants, and has the fucking balls to make that happen. The secret is to keep your stupid yap shut, unless you're telling her how fucking hot she is, or you're telling her what to do. Hey, chick, you're so fucking hot. Go out with me. Dance with me. Kiss me. Suck my fucking cock. Take those fucking panties off and let me fuck that fuzzy little pussy, pronto! It's no more complicated than that. Just figure out how to say those things at the right time, in the right way, and you'll be golden. And don't be dissuaded if they act all pure and shit. The fact is, they all want to fuck, but society tells them they're sluts if they ask for cock. They're just waiting for a man with the sack to make that decision for them, so they don't have to feel like whores.\"\n\nHow could I take ridiculous advice like that seriously? His 'tell her what to do' philosophy might work on the drunken coeds and naive sorority pledges he preyed on. But it would never work on the girl I was interested in.\n\nBriona Skorsczi. Sigh.\n\nBriona was a general science major, same as me, so we'd had a lot of classes together over our freshman and sophomore years. I'd never been able to work up the courage to ask her out, so I did the next best thing: I ogled her from afar. She wore her soft brown hair in a feathery bowl-shaped cut, with straight bangs that reached down to the middle of her great big glasses. I loved the way she shyly peeked out from under them. By Troy's standards, Briona would have been considered ugly, but I loved her huge nose and bunny teeth, which were so big that she could never completely close her oversized lips. I didn't let those bold features distract me from her amazingly brown, faerie-like eyes, with those wonderfully long eyelashes. To me, her face was a beautiful symphony. It was unique. One of a kind.\n\nI also liked the fact that she was awkward, and seemed to be a bit uncomfortable in her skin, just like me. She always wore layers of baggy clothing that made her look like a homeless nerd, but I suspected that she was hiding a shapely body under all those layers. I figured that she was probably embarrassed by her own body, and was trying to cover it up. She certainly seemed to have bigger breasts than most of the other girls at Prairie Tech.\n\nBut Briona's best feature, by far, was her brain. She was a fucking genius. Literally. A genius. I had such a crush on her. And I was certain that I was the only guy at school with the sensitivity and refined taste to see her nerdy attributes and dorky facial features as utterly desirable. Under Troy's influence, I started to work up the courage to ask her out. I reasoned that it was unfair of me to deny her the happiness that I could give her. I was cheating her, and myself, by not asking her out. After all, we were both lonely, misunderstood virgins, in serious need of love and affection, and we were absolutely perfect for each other. I could see us in the future, a happy, nerdy couple, walking around campus, hand in hand, floating on the wings of love.\n\nSo I finally worked up the courage to ask her out after Chemistry Lab. She was packing up her books, and I awkwardly stepped up to her, my heart thundering with terror. \"Uh... Briona... I was... uh... wondering if you'd like to go out... uh... with me... sometime?\"\n\nShe peered up at me from under her low bangs, smiled and said, \"Sure, Hans.\"\n\nBefore I knew it, there I was, on the first date of my life, crunching through autumn leaves next to the girl of my dreams. I was living on nothing but a limited scholarship, so I couldn't afford to take her out to a movie, so I took her over to a student exhibition of art they were having at the Student Union. We wandered through it silently, unsure of what to make of that artsy-fartsy stuff. Then we walked off-campus for dinner at Denny's, and then it got good... we started talking. Boy, oh boy, we really hit it off! We had a lot of stuff in common, just as I'd hoped. We gossiped about our teachers and classmates for a while, then we started talking about science, and soon we were gushing about the wonders of DNA and the awe inspiring size of the universe. We laughed about some of the shallow new-agey art we'd seen at the show and shared our feelings about how stupid religion and creationism was. We both gleefully agreed that there was no god, no heaven, no hell, but that the universe was awesome beyond measure, and we both felt lucky to be living in a time and place where we could life free from superstition and ignorance. It was wonderful.\n\nConversations with Troy were nothing like this. He believed the Loch Ness monster was not only real, but that it also had the power to make itself invisible. I mean, he was an absolute idiot. But Briona was a genius, and some of the insights she shared with me about her understanding of the cosmos were truly mind-expanding. Oh, shit. What a night. We yakked for hours, breathless with excitement.\n\nThen Briona yawned, so I walked her back to her off-campus apartment. But for the first time that night, things felt a little weird. Although I couldn't put my finger on why. It was nippy out and I wanted to put my arm over her shoulder, but I hadn't gotten any hint from her all night that she'd be cool with something like that. She seemed so timid and innocent to me, at least as far as things like human intimacy were concerned. You know... shy. I wondered if this was her first date too? Well, I didn't want to scare her off, or weird her out, so I resisted the urge to make any moves. Not that I had any idea what kind of moves to make in the first place.\n\nWhen we reached her door, I wondered if I should kiss her good night. But I couldn't imagine she was ready to be kissed. And... well, honestly, neither was I. But I loved the feel of her soft hand in mine. It gave me the courage to ask her out again.\n\n\"I... uh... hope you might want to... uh... go out on another date... or something... sometime... if you have time.\"\n\nShe peered at me shyly from under her bangs, with those velvety brown eyes that made my knees weak. \"Yeah... maybe. My class load is really killing me, though. Not sure when I'll have time... but let's just see how the semester pans out, okay? Then maybe... I'll let you know. But I had a wonderful night, Hans.\" She paused, staring at me awkwardly from her open doorway.\n\nI stared back, and wondered what I was supposed to do now. Did she want me to kiss her? Or was it something else she was waiting for? I ached to kiss her. Oh shit, I wanted to kiss her so bad. And maybe she wanted it too. But I was immobilized with uncertainty and fear. After staring at me for almost a full minute, she said, \"Well... uh... g'night,\" and closed her door.\n\nI'd never felt as empty and uncertain in my entire life. As I walked back home through the dark wind-swept streets, I thought about turning around and knocking on her door. When she opened it I'd sweep her up into my arms and kiss her. It would be magical. Like a scene from a movie. The very idea of it made my cock swell with lust. But I felt ashamed of my animalistic instincts. She deserved better than some perverted nerd lusting after her body. So I went back to my room, and crawled into bed feeling like a clueless, frustrated fool.\n\nOver the next few days I was racked with uncertainty over what to do next. Our date had gone so well, at least while we were talking. But when I saw Briona in class I didn't get any hint that she was interested in seeing me again. She smiled at me more than before, but she didn't go out of her way to talk to me. I wondered if she was waiting for me to ask her out again. But I remembered her saying, \"I'll let you know\". Did that mean she wanted me to wait for her to make the next move? But what if Troy's philosophy about girls was right, and she needed me to tell her what to do? But what was that? If I told her what I really wanted, I'd say, \"Be the love of my life! Marry me! Walk the earth with me for the rest of our lives!\" But how could I tell her something like that? And why was I getting ahead of myself? She was a beautiful girl, wasn't she? I wanted to make out with her, didn't I? Maybe she had the same carnal urges as me. Maybe I should just kiss her already. Or... maybe I should wait.\n\nI could barely sleep that week, confused to distraction. I didn't confide any of this to Troy. I hadn't even told him about my date. He'd have teased me mercilessly. So I was alone with my worries. Thankfully, studying for my Organic Chemistry test gave me the first sense of peace I'd had all week.\n\nSo there I was, lost in my textbook on a cold September evening, when voices in the hallway brought me out of my reverie. They stopped in front of my door and began to talk back and forth in hushed tones. I recognized Troy's voice. He started talking loudly. \"No, really, don't worry about my roommate. He's asleep. Sleeps like a fucking log.\"\n\nA girl's voice whispered, \"Really? I don't know about this. Are you sure?\"\n\nHe answered loudly, \"Yeah, I toldja, he's on some kinda meds to keep his acne from coming back. Those things knock him out like a light. It's actually kinda bizarre. Hey, why don't you see for yourself?\"",
        "He was fumbling with his keys, and then he dropped them loudly on the floor. I realized with shock that he was hoping I'd hear him so I could pretend to be asleep. I was gripped with utter terror. He'd never done anything like this before. He usually called me if he wanted to bring a girl over, to give me time to clear out. But he must have met this girl at some late night party, and didn't think I'd agree to leaving the room at 2:15 in the morning. So what was his plan? He wanted me to stay? To... what? Pretend to be asleep while he fucked this girl? It was a crazy idea! Utterly indecent! Utterly wonderful! Two conflicting thoughts raced through my head at the same time. One: I don't have time for this! I have to study! Two: Oh holy shit... oh holy shit, shit, shit, shit, SHIT, SHIT, SHIIIIIIIIIIT!!!!!\n\nWhat a position to put me in! But I felt I had no choice but to play possum! I heard the key clicking into place, so I barely had time to put my books on the floor, flip out my bedside lamp, and yank the covers messily over my head before the door swung open. I didn't see them coming in, but I heard their voices.\n\nHe said, in a normal voice, \"See? What did I tell you? Out like a light.\"\n\nShe whispered, \"No... really?\"\n\nThe door closed, and he said, \"Here. Let me show you.\" He tromped over to me, shook me and shouted, \"Wake up, roomie! The building's on fire!\" Then he leaned down close enough to whisper, \"Please, Hans. Just go with it.\" I didn't make a peep, so he said loudly, \"What did I tell you? Dead to the world. It's just you and me, sweetheart.'\n\n<br> She giggled and whispered, \"Damn. Those must be some killer meds. Which one does he take? Xeotrex, or Iso...\"\n\nShe fell silent. From the sound of the wet little smacking sounds I heard, he must have started kissing her to stop her questions. Damn, what a caveman he was. But she didn't complain. Soon she was making hungry little moans and wet slobbering gasps and groans. Oh shit. I couldn't believe they were making out... right there in my room! My cock started to harden. It was a good thing I'd turned to my side, or she might have seen a volcano rising under my sheets.\n\nI just lay there in shock for the next five minutes, unable to block out those sexy sounds. I couldn't believe this was actually happening. But it only got more shocking when I heard the unmistakable sound of a belt buckle clinking open. Troy moaned, \"Oh yeah, baby. Fuck yeah.\"\n\nShe giggled, saying, \"Let's see what you got in here, big boy. Oooh, hot damn. It's so big. Damn. My fingers barely fit around it. Fuck. I gotta get a taste of that.\" Then she inhaled and made a wet slurping sound.\n\nTroy moaned deeply, \"Oh... fuuuuuuuuck.\"\n\nUp to that very moment, I'd had no intention of peeking. But once I realized that a girl was giving Troy a blowjob just a few feet away from me, and the only thing that stood between them and my eyes was my blanket... well I just couldn't resist. I had to see. I just had to! So I slowly moved my hand up to my face and began to tug at the blanket to form a shadowy little opening to peep through. The first thing I saw was Troy's rapturous face, illuminated by his bedside light. He looked right at me. I thought he'd be pissed, but he just smiled and put his finger to his lips, then pointed down, grinning like a birthday boy showing off his brand new BB gun.\n\nWith that encouragement, I pulled the opening a little more open, and laid my eyes on a sight that absolutely shook me to the core.\n\nBriona Skorsczi was on her knees sucking my roommate's big fat cock.\n\nI couldn't have been more shocked if I'd suddenly seen my family being eaten by a Tyrannosaurus Rex. It was horrifying, yet I couldn't look away. I just couldn't. Briona's big, beautiful nose was bobbing forward and back, her glasses sliding down to the tip as she sucked him into her beautiful mouth. Her delightful bunny teeth were sliding gently over the raw, naked flesh of that frighteningly huge cock of his. It had to be eight or nine inches long. Maybe more.\n\nShe must have taken off her coat and shirt before getting on her knees, because I saw her enormous tits absolutely straining to escape the confines of her lacy white bra. I'd been right all along. She had been hiding a smoking hot body under all those baggy clothes. Her tits were even bigger than I'd suspected, probably full D cups, and her creamy white cleavage was wiggling like a bowl of Jell-O as she slurped Troy's cock with increasing eagerness.\n\nI watched all of this in utter shock. I couldn't believe this was actually happening. The sweet, innocent, genius of my dreams was polishing a Neanderthal's knob. It was wrong on so many levels; I just couldn't wrap my head around it. How the hell had he met her anyway? I hadn't told either of them about each other, but Prairie Tech wasn't a very big college, so this was just one of those random coincidences that happen from time to time. Only this time it was happening to me, goddamn it!\n\nIt was heartbreaking to watch. But I had to. I had to. Those full, beautiful lips, which I'd been too timid to kiss, were now sliding and slurping over the bulbous head of Troy's throbbing meat. And her delicate pink tongue, which had said so many fascinating things to me over the course of our evening together, was now slipping out, and flicking that sensitive spot on the underside of his glans. All the while she stroked his long shaft with those delicate hands I'd imagined holding in my own. Then she lifted his cock, leaned forward and slurped his big, hairless balls into her mouth, making him grab his bedside table for support.\n\n\"Oh fuck. Suck my balls, bitch. Yeah... so fucking good.\"\n\nI watched her lick every inch of his veiny shaft, her big beautiful nose occasionally bending in contact with his cock, which I found particularly obscene. Then she kissed her way back to the tip of his salami and began gobbling him forward and back in long swooping moves, making her brown hair bob and bounce, taking him deeper and deeper into her throat with each stroke. She began to drool copiously, coating his cock with so much slime that long strands of slobber dripped down onto her creamy white cleavage. God... I just about passed out at the sight of it. She tilted her head lithely side to side as she gulped his cock, literally swallowing it until I could actually see the end of his massive member distorting her willowy neck! It was astonishing. She was making loud, wet gasping sounds, but unbelievably, she wasn't choking oh his cock one tiny bit.\n\nThat's when it dawned on me that she wasn't a sweet little shy virgin after all. She'd obviously sucked a cock or two in her time. Hell, for all I knew, she did this sort of thing every single night of the year. I'd completely misjudged her. She hadn't turned me down because she was too busy. She'd turned me down because I was a coward.\n\nLooking back, I suddenly realized that she'd been waiting for me to make some kind of move all night during our date. Now with hindsight 20/20, I could remember at least half a dozen opportunities for intimacy that I'd passed up. I could have held her hand at the art show. I could have sat next to her at dinner. I could have put my arm over her shoulder on the walk to her place. And that awkward silence before she closed the door? She'd definitely wanted me to kiss her! IDIOT! WHY DIDN'T I FUCKING KISS HER?? And if I had... then what? Would she have pulled me inside? Would she have dropped to her knees and pulled out my cock and started sucking me, just like she did with Troy? And then what? Would she have fucked me too?! Oh shit. I blew it. I fucking blew it.\n\nI closed the gap in my blankets, and closed my eyes, trying to stifle my sobs of regret. Oh god, I was a pathetic excuse for a man. I wasn't a man at all! I was a fucking BOY! Troy may have been a stupid caveman who didn't believe in evolution, but did believe that a magnetic wristband could make you run faster, but nevertheless, he was still twice the man as me. My pitiful erection faded away and I silently wept, feeling lower and more useless than I'd ever felt in my life.\n\nOkay. I must admit. I was wallowing a bit. But then I heard Briona say, \"I want you to cum on my tits, baby.\"\n\nI instantly forgot my misery, and opened the flap again, just in time to see her reaching behind her back and unhooking her bra. It popped open and her big pale breasts fell into view. My cock leapt fully erect again. Her nipples were puffy and pink. Oh god, her tits were more magnificent than I could have ever imagined. Troy grabbed her head with both hands and began fucking her face hard and fast. Then he stiffened up, arched his back and let out a long, gut-wrenching, guttural groan. She pulled back and presented her tits to him, while she jerked his long cock with one hand. I saw his nuts literally jumping, then ropes of glistening white sperm shot out of him, splooging all over her breasts and neck. She jerked it out of him with expert yanks, until her cleavage was dripping with goo. Then she leaned forward and sucked his cock head while squeezing his balls, making him squirt another shot into her mouth. She looked up at him over her glasses and opened her mouth, and let the cum slowly drip out of it onto her tits. Oh fucking christ!!! It was so fucking FILTHY! Then she ran both hands over her breasts, spreading his shiny cum all over until she her tits were glistening.\n\nHe couldn't stand up any longer, so he plopped down onto his bed, and fell onto his back. Briona stood up, and quickly stripped out of her shoes, jeans and panties, a sight that made my eyes nearly pop out of their sockets. She had an incredible ass and a stunningly narrow waist. What a figure! She was built like a movie star! Her back was to me now, so I reached into my shorts and wrapped my hand around my throbbing hard cock and started jerking off as quietly as I could manage. She leaned forward to yank Troy's pants off, giving me an amazing view of her extremely hairy pussy. It was big, bushy and brown, but fucking hot as hell. I couldn't make out her pussy lips, but I didn't care. I just stared up her ass crack, jacking off like the pathetic little perv I was, my cock lubricated by the copious amounts of precum it was weeping.\n\nOnce she'd stripped his bottom half bare, she wiped her tits clean of cum with his pants, then climbed on top of him. I thought she was gonna fuck him, but she kept going upward until she was straddling his face. \"Suck my fucking pussy, donkey-dick.\"\n\nI couldn't get over how filthy her mouth was. It was like she was schizophrenic or something. This wasn't the brainy girl I'd been out on a date with. That girl could wax poetically about superstring theory and the big bang. But this girl was gleefully grinding her pussy against a moron's face, as she moaned, \"Oh fuck yeah. Eat my pussy, fuckwad. Eat my fucking pussy. Yeah, that's right. Stick that tongue inside my cunt. Taste my fucking cum.\"\n\nI couldn't see exactly what he was doing. Her back was to me, and his big fat cock was in the foreground, blocking some of the view. But I saw the underside of his chin, and his tongue going up into her. He was making crazy slurping sounds, and his semi-hard cock slowly stood to attention again, and he started stroking it, at the same time that I was stoking mine. I wondered what it must feel like to have a monster cock like that in your hand. Mine was puny compared to his. A measly seven and a half inches.\n\nBriona was like a wild woman, and she couldn't get enough of Troy's tongue. She just kept grinding herself roughly into his face for the longest time, while he jerked himself off. Her aggressiveness was a bit scary, actually. I wondered what I would have done if she'd attacked me like that in her apartment. I was starting to feel like maybe I dodged a bullet there. Sure, she was sexy, smart and sweet... but damn, she was an animal in the sack! She started shouting out filthy commands as she rode his face. \"Yeah, suck my pussy, you mother fucker! Suck my hairy snatch. You know you like it, fuck face. Gimme that hand. Use your finger... oh shit yeah. Ohhhhhh.... fuuuuuuuck yeah.... right there. Yeah... like that. No don't stop licking my clit. Yeah... oh fuck... No, don't change anything! Just keep doing it like that, mother fucker! Oh YES! YES! YES! YES!!!\"\n\nShe was screaming so loud, they were in serious danger of having the RA's realize there was a girl in the room, but Troy clamped his free hand over her mouth. For the next ten minutes she moaned and groaned into his hand, and he took her through a series of awe-inspiring orgasms. Then right when it seemed she was at the peak of her excitement, she suddenly jumped backward and straddled his cock, then lowered herself slowly onto it.\n\nWow. She didn't even make him put on a condom! I saw his huge cock spreading her furry pussy lips wide for a moment before she lowered herself slowly down his shaft, while juices dripped out of her. Based on the guttural moan she emitted, I guess he was stretching her to the limit, and she liked it. The sight of his cock disappearing into her pussy triggered something in my own cock. I felt a burst of pleasure, and moments later I was filling my underwear with cum. But I didn't get soft for a second, so I just kept jerking, ignoring the sticky gunk on my hand, taking advantage of the fact that her back was turned to me so she couldn't see my blankets jumping as I jerked off like a monkey in a zoo.\n\nShe rode him like that for a good long time, slowly at first, moaning, \"Oh fucking Christ on a sandwich! You're so fucking big! I've never fucked anyone like you before! Oh god. You're splitting me open, you fucking animal!\" But once she got used to his girth, she began to fuck him with more speed and gusto. She started getting tired, so she could no longer keep his cock from popping out of her pussy. But each time she'd reach down, pull it back into place and start fucking him again, slamming herself down on him like she was riding a wild horse. She was insatiable! And he had lasting power. I shot a second wad into my shorts, but he just kept fucking her on and on and on!\n\nEventually, he flipped her over onto her back, and lifted her long, pale legs high, and started ramming himself into her like he was trying to destroy her pussy. But she just stared up at him with those big brown eyes and urged him on. \"Harder, you fucking pussy. Fuck me harder.\" She said it with an animal intensity I'd never imagined her capable of. It was frighteningly sexy! And he seemed to love it, because he attacked her with the fury of a jungle cat. They were two wild animals, groaning and grinding on that squeaky dorm bed, in a crazy battle to the death.\n\nThey were turned sideways to me now, so I beheld the stunning sight of Briona's big breasts surging up and down her chest as he pounded her. He occasionally leaned forward and sucked them violently into his mouth, nibbling her puffy nipples hard enough to make her squeal with delight. It looked so painful to me, but Briona seemed to love it.\n\nShe kept groaning and cursing the whole time he fucked her. \"Harder! Fuck me harder! Oh, yeah. Yeah. Yeah. Yeah. Fuck me with that big fat cock! Shit! You feel so fucking huge! Harder! Fuck me harder! Oh my god. Oh my god, you feel so good inside me! Oh fucking god! OH FUCKING GOD!!! Ohhhhhhhhhhhh.\"\n\nHe slammed his hand over her mouth as she had another crazy loud orgasm. He pounded her with merciless glee, his well-muscled body glistening with sweat. He moaned, \"Take it bitch. Fucking take it!\"\n\nI had to stroke myself slower, now that she could possibly see me, but that didn't stop me from cumming a third time. My underwear was absolutely gross with accumulated cum by now, but my cock didn't get soft, so I kept squeezing and stroking it as I stared at Briona's beautiful tits... her long, lithe legs... and her beautiful big nose. She was looking up at Troy, right into amazed eyes, with a passion so hot that it could have started a forest fire.\n\nShe suddenly crawled out from under him, moaning, \"Oh, shit... Fuck me doggy style, you son of a bitch!\" She got up on her hands and knees and he immediately rammed himself into her pussy from behind. She arched her neck up ward, her lush mouth opening into a long, breathy groan. \"Goddammmmmmmmmmmmm. Sooooooooooooooooo fucking goooooooooooooood....\"\n\nMy eyes were drawn to her pendulous breasts. They were flopping forward and back as Troy fucked her. Once or twice he leaned forward to fondle them, something I longed to do, but that just threw off his rhythm, so he went back to fucking her. I wanted to get out of bed, and crawl under her, and let those big boobs sweep up and down my face. But I was pretty sure that would have freaked her the fuck out, so I just kept playing possum.\n\nHe looked toward me a few times, smiling with wicked pride. He even flashed me one of those stupid 'hang ten' hand signals that dopes like him were fond of. I wanted to hate him for stealing my girl, but I just couldn't be mad at him. It wasn't his fault. It was mine. I'd let her slip out of my hands. And now he was fucking my dream girl. I sure hoped he was enjoying it, because the longer it went on, the more my image of her slipped away. She wasn't my dream girl any longer. Oh, I loved her still, and admired her. I also hoped one day I might be friends with her. But I didn't dream about fucking her any longer. I knew I'd never be able to handle her. For one thing, she seemed to like it rough, which just wasn't in me. And for another thing, she absolutely adored Troy's humungous cock. It was at least an inch or two longer than my pitiful seven inches. It was apparent now why all those girls were so happy after fucking him. How could I ever hope to make her happy in bed after she'd been fucked like this?\n\nTroy grinned at me and mouthed, \"Watch this\", then he grabbed his pillow, stripped the pillowcase off, flipped the loose end under her midsection and grabbed both ends with his fists and suddenly lifted her up, so her knees left the bed. Now, with her utterly under his control, he started to fuck her harder than ever, and she started to squeal and weep and scream. She looked back at him with a look of pure, worshipful amazement as he pounded her pussy like a pro, tears pouring out of her eyes from the sheer perfection of the moment. She'd been calling the shots all night, but now he was in command, and she was enraptured. Utterly enraptured.\n\nAnd I guess I was enraptured too. They both amazed me. I felt like a pathetic troll compared to these guys. If any two people on earth were made to fuck each other, it was Troy and Briona, goddamn it! He fucked her that way longer than I could ever have done, but he finally began to grunt and stiffen with impending release.\n\nBriona moaned, \"Oh yeah. Cum inside me. I want to feel you cumming inside me. Oh god... yesssss.... I can feel it!\"\n\nThe astounding sight of my roommate filling that beautiful, busty nerd's pussy with cum made me blast one final load of semen into my sticky underwear. And as impossible as it may seem, I actually fell asleep immediately afterward. I don't know if they kept fucking or not, but I would have slept through an earthquake at that point. It was probably some sort of psychological defense mechanism. My brain had overloaded with a lethal combination of lust and self-loathing. My only escape was sweet oblivion.\n\n*\n\nWhen my alarm rang the next morning, Briona was gone. The alarm woke Troy up too, and he looked around with disappointment.\n\n\"Hey... where'd she go?\"\n\nI shrugged as I pulled my sticky hand from my underwear. My cum had dried, and I pulled out a few pubes getting my hand out. \"I don't know. But she's in my Organic Chemistry class. We have a test this morning. She's probably studying\"",
        "His eyes went wide, \"Oh, shit.... you know her?\" He sat up with a grin, \"What's her name?\"\n\nI couldn't believe this asshole. He brought her here to fuck and he didn't even know her name! Unbelievable! \"What an ASSHOLE!\" I shouted, as I threw on my clothes, not even bothering to change out of my crusty undies. I just had to get out of there before I smashed his face in.\n\nHe was stunned by my anger. He shrugged. \"What can I say? It just never came up. Okay... it probably did. I just forgot it. I can't remember everybody's name. Come on dude, what's her name? And where can I find her? I let you watch. So you owe me.\"\n\nI snorted sarcastically. \"If you don't know her name, isn't that for the best? I thought you didn't want any silly girls tying you down!\"\n\nHe looked at me blankly. \"Yeah... but... Shit, dude. You saw her! She's fucking awesome! I mean, I've had a lot of pussy, but that shit was tight. And her face... I know, she's got a big nose, but holy shit, she's hot! And did you see her eyes? Fuck! And her tits. Those tits are epic, dude! I just gotta tap that ass again. You gotta tell me her name. You gotta! Please, I'm begging you, Hans, old buddy!\"\n\nI saw the desperate look in his eye. Shit. He was in love. Or as close to in love as an asshole like him can get. It was utterly infuriating!\n\nI tossed my books in my book bag, saying, \"Look, I'm late for class. Let's argue about it later.\" I ran out the door, not giving him a chance to pressure me for her name. I wasn't going to give it to him. No way. No fucking way. I was absolutely sure that by now she'd come to regret her foolish actions the night before. Maybe she was drunk. Maybe she was high. But there was no way she was going to want to see that ape again. I was certain of it.\n\nI arrived at my classroom half an hour early, so I sat at my desk and tried to cram a bit before the test began. Then Briona showed up. I guess she'd had the same idea because she sat down at her desk with her textbook and notes, and began to study. She didn't notice me, as usual, so I was able to ogle her amazing face from afar while she tried to study. I could tell that she wasn't her normal focused self. Her cheeks were rosy, and her eyes kept wandering from her books and out the windows, drawn by the fluttering orange leaves in the oak trees that dotted the campus below. There was a sweet, satisfied smile on her perfect face. She kept biting her lip and blushing, as if reliving a wonderful memory. Then she let out a long, happy sigh, closed her eyes and smiled.\n\nI didn't know much about sex, but I knew love when I saw it. I brushed the tears from my eyes, and went back to studying, losing myself in science, and the awesome mysteries of the universe, so as not to scream.\n\nPART TWO -- October 6, 1992\n\n\"You should go,\" said Troy.\n\n\"Yeah, I agree,\" said Briona, cuddling next to him in his bed. \"What have you got to lose?\"\n\nI shrugged. \"I don't really know these guys. And I wouldn't know anyone else at the party either.\"\n\nBriona shrugged, \"So what?\"\n\nTroy added, \"And it's at a frat, dude! Think of all that fresh young sorority pussy!\"\n\nBriona slapped his arm, hard enough to make him squeal. \"Shut up, you big dumb ape!\"\n\nTroy pouted adorably, nursing his arm. \"Sorry Bree.\"\n\n\"Oh, did I hurt you, baby?\" Then she gently, lovingly kissed his arm, as he looked at her enraptured.\n\nThey'd only been together for two weeks, but the change she'd had on Troy had been amazing. He'd stopped trolling for chicks, even though she hadn't asked him to. And when the two of them weren't over at her apartment fucking like rabbits, she was over at our room studying with me! It worked out for all three of us because our studying together encouraged him to do his own homework, so his grades began to improve as well.\n\nJust in case you're wondering, Briona had no idea that I'd been awake the night she fucked him. In fact, when she found out that I was his roommate, she nearly had a heart attack, but I pretended his 'acne medicine' story was true. There are some acne medicines that cause drowsiness, although I'd been off them for over a year. Still, I kept up the charade, secretly hoping that she might fuck him again while I 'slept'. But apparently the night she came over her cousin had been visiting, so her apartment wasn't empty. That wasn't true any longer, so I hadn't seen hide nor hair of her pussy since that wonderful night, and I probably never would again.\n\nBut that was okay. She was fast becoming one of my best friends. The fact that I'd seen her totally naked, riding my roommate's cock while she cursed like a whore, didn't diminish my fondness or admiration for her one tiny bit. It actually opened my eyes up to my own naive ideas about sexuality. I realized that sex isn't just for sluts and dopes, but for smart people too. People like Briona... and people like me! It finally dawned on me that everybody in the world had sex, and every woman, however shy she may seem, had a secret tiger in her, just waiting to be discovered and unleashed.\n\nAs for Troy, he was still a bit of an asshole, but he treated Briona like a princess. He was honestly in love. So much so that it frightened him a bit. After I told him that she was a genius, he started to worry that she'd lose interest in him, so he worked extra hard to earn her love. But I'd seen him fucking her. As long as he kept slaying her pussy like that, he had nothing to worry about.\n\nBriona asked, \"Who are these guys again?\"\n\n\"Roland Rawlings and Joseph... something... I forget his last name. They're in Tau Sigma Omicron, I think. I'm in their Astrophysics study group. I guess that's why they invited me to their Oktoberfest party. I can't think of any other reason. I'm certainly not interested in pledging any frats. I don't have that kind of money anyway.\"\n\nBriona nodded. \"Well, I don't know them, but Tau Sigma has a good reputation. If you were pledging, you could do worse. Though Delta Delta is the one that most of the guys in the science department belong to. They have an excellent academics record.\"\n\nTroy grinned mischievously, saying, \"Yeah, but the real question is, does Tau Sigma have a sister sorority, and do they like to fuck nerds?\"\n\nBriona roared like a lion and started snapping her teeth at him. \"I told you to stop it, you dirty little boy! Don't make me bite you!\"\n\nHe stuck his tongue out at her so she leapt on top of him like a jungle cat. I watched them roughhouse with a smile on my face. Troy was much bigger and stronger than her, but he let her pin him with only minimal resistance. That's one of the ways I knew he was smitten with her. She'd literally tamed him. It was really kind of cute.\n\nStill straddling Troy, Briona turned to me and said, \"No, really, Hans, you ought to go. You don't have anything better to do tonight, do you?\"\n\nI shrugged. \"No, but I don't have a costume. Everyone's supposed to dress up like Germans.\"\n\nTroy said, \"Well, you're German, aren't you? Just go as yourself.\"\n\n\"My grandpa's from Austria, but I don't think that counts as a costume.\"\n\nBriona smiled, \"Oh hey, there's that costume store over in that strip mall next to the Wendy's. I bet they're open for another hour or two. You should run over there and... here....\" She reached into her pocket and pulled out her wallet, then took out sixty dollars, \"Go rent a costume.\"\n\nI put my hand up, \"No, no. I can't take your money.\"\n\nShe hopped off Troy and pressed the money into my hands. \"Consider it a loan, Hansie. Pay me back when you can.\"\n\nI looked at the money, and my heart started to beat hard. I'd never gone to a real party before. Or at least not one at a cool fraternity, which I just knew would be chock full of eligible women getting drunk off their asses. I didn't know what to say, but Briona just pulled me off my bed and pushed me toward the door, saying, \"You better hurry up before they close! Scoot!\"\n\nTroy shouted from his bed. \"Yeah, get out of here, loser, so I can fuck my girlfriend!\"\n\n<br> As she was closing the door behind me, I heard her saying to Troy, \"Okay mister. You've officially pissed me off. Now you're gonna get bit!\"\n\nI stood in that hallway for a few minutes, listening to her jungle-cat roars turn into orgasmic groans as they attacked each other in my room, perhaps even on my very bed. It made my cock stir with lust. Since it was unlikely they'd ever do it while I was 'sleeping' again, eavesdropping at my dorm room door might be the closest I'd ever get. But as fun it was to listen to Briona's dirty talk, her money was burning a hole in my hand, and I knew she'd expect me to have a story to show for it, so I dragged myself away from her beautiful moans, and sweet obscenities.\n\nBy the time I'd walked to the costume shop, the sun was already setting, and they were just about to close. But the man let me in and showed me his selection of Bavarian costumes. Most of them were cheap, mass-manufactured Halloween costumes, but one was really quite authentic. I should know. I'd been dragged to my fair share of polkas and Oktoberfest celebrations when I was a kid. My parents were proud of their Austrian ancestry, so I could tell an authentic outfit when I saw one. It wasn't cheap, but Briona's money, added to my own pitiful stash, added up to just barely enough to rent it, along with an oversized plastic stein. That was all the money I had for the rest of the month, but I figured, if I'm going to look like a fool, I might as well do it in style. Besides, if I impress those guys, maybe they'll invite me to another party.\n\nAs I was trying it on, the shop owner said, \"You're lucky you're not a woman. A bunch of girls came in here earlier and rented all the Bavarian dresses in the place. Hey, you know what? I bet they're going to the same party as you.\" I shrugged, barely hearing him. I was distracted by my own reflection in the mirror. I looked exactly like my grandfather. There was photo of him hanging on our wall back home which was taken when he was a boy in Austria, wearing a costume that was freakishly similar to this: a pair of dark brown lederhosen with suspenders, high socks embroidered with ducks and edelweiss flowers, a loose white peasant shirt and a blue cap with a long feather sticking out the top. My god, I was the spitting image of my grandfather.\n\nSuddenly I flashed on the old man. He was the most rakish, hearty, balls-to-the-wall man I'd ever met. He could have eaten ten Troys for breakfast and still had room for seven Brad Pitts. When Grandpa came into a room, everybody smiled. He flirted with all the ladies, even his own relatives, and made every man his buddy. He was amazing, and lived life to the fullest, right up to the very end. I hooked my thumbs in my suspenders, just as he was doing in that old photograph, and grinned, trying to make my eyes twinkle just like his. Damn. I looked more like him than ever. And then I remembered that he had a pockmarked face too. I'd never thought about it before, but he must have had acne as a teenager, the same as me! But he hadn't let that stop him from being a man, and damn it all, I wasn't gonna let it stop me either!\n\nI walked proudly to Fraternity Row, dressed in my costume, ignoring the catcalls from passers by. No... scratch that. I didn't ignore them. Whenever someone laughed or shouted out some obscenity at me, I raised my fake German stein and shouted, \"OKTOBERFEST!\" at the top of my lungs, and their jeers turned instantly into cheers. I felt almost as if I was channeling my grandfather's spirit. But I didn't believe in any sort of afterlife, so I knew that my grandfather's spirit didn't exist. No. If anything, it was my grandfather's DNA coursing through my blood, which gave me the gumption to act as if I was the man I wanted to be. That, and the long feather in my cap.\n\nI charged into that party as if I owned the place, and stomped all the way into the middle of the room on my big, loud boots. That's when I noticed that I was the only person in sight wearing a costume of any kind. Then I saw the assholes who'd invited me laughing their asses off. My heart sank, and my cheeks burned bright red. I'd thought I'd left this kind of crap behind me in high school. But I was wrong. You never get too old for a pair of snotty assholes to make you feel like a fool.\n\nI was about to make a humiliating retreat when I realized, much to my delight, that I wasn't alone. Six freshmen girls, dressed in sexy little Bavarian dresses, filed through the door, drawing fresh gouts of laughter from the assembly. Now I knew who'd rented all the female costumes from the store! Most of the girls looked utterly embarrassed, but one of the girls was shining with confidence. Her sky-blue eyes caught sight of me and a broad grin spread out on her stunningly beautiful, copper-colored face. I'd seen her around the Science Building, but I didn't know her name. All I knew was that she was a freshman, and insanely hot. I considered her so far out of my league that I didn't even daydream about asking her out.\n\nShe was simply stunning to behold, particularly as she made her way through the crowd toward me, smiling from ear to ear. As she came closer, I realized that her costume was the female match for mine. They had the same brown, green and blue fabrics, the same embroidered socks. But instead of the lederhosen and suspenders my costume had, she was wearing a traditional dirndl, which was comprised of a brown skirt, a big green apron, a puffy white blouse, and a bodice with a low front, which was pushing her ample breasts up into a startling display of feminine pulchritude. I mean, this chick's cleavage was epic, and it was wiggling about wonderfully as she clomped toward me in her polka shoes. Her wavy dark brown hair was braided into two long braids that were framing her tits marvelously.\n\nCoincidence was once again rearing its ugly head, but this time it seemed to be working in my favor!\n\nShe shouted in a fake German accent, \"Liebchen! Vere haff you been? I've been vorried schick about you!\"\n\nThen she gave me a big hug and a quick kiss on the lips. I was stunned. That was literally the first kiss of my life, and even though she meant it as a joke, my heart did a total flip flop in my chest, and tingles shot down my spine! Then she took my hand in hers and pulled me toward the other costumed girls, all of whom were adorable, each in their own way. \"Come vit me, liebchen. I vant you to meet my freundins!\" The girls laughed when they saw that I was wearing the male match of their friend's dirndl. \"Girls, girls, I vant you to meet mein freund... Helmutt von Wiener.\"\n\nNormally I found it impossible to be spontaneous around hot chicks like this, but something about being in that costume, thinking about my grandfather's irrepressible charm brought out a boldness in me which I didn't normally possess. I put my arm around this hot, blue-eyed fraulein and said, in my worst German accent, \"Yah, and dis here is mein liebchen, Helga Boobenschteen.\"\n\nShe corrected me comically, \"Not Boobenschteen... Boobenschtein!\" Everyone in the entire room laughed themselves silly. Then Helga loudly introduced the girls. \"May I introducen mein fellow pledges from ze Tau Nu Upsilon Sorority? Ya, dis here is Gertruda Cockensucken.\"\n\nEveryone laughed at her crude pun, but I clicked my heels together very seriously, like a proper Austrian man, and said \"Guten abend, Gertruda,\" then I bowed and kissed the back of the adorable redhead's soft little hand.\n\nHelga went on, pointing to a busty little African American girl, who looked quite stunning in her bright orange dirdl. \"Und zis here is little Heidi Ho. Yah, she's an actual ho!\" I clicked my heels together, and kissed Heidi's hand. \"Un dis vun here ist Muschi von Kittenlicker.\" Muschi, who had short black hair and snow-white skin, leaned forward and presented her cheek to me, so I kissed it, laying my lips on the second female of my life. Her skin was as soft as silk.\n\nHelga gestured toward a cute blonde with bright pink circles painted on her cheeks, saying, \"Und, finally, mein beste freunden, Hildegard Fuckmeuptheassenstein... the third.\" Hildegard laughed, then turned and wiggled her ass at me. I bowed deeply and said, \"Very nice to meet you, Herr Fuckmeuptheassenstein.\" She wiggled her ass again, right in my face, so I leaned down a little farther and kissed her right on her behind, and the crowd went wild. I was surprising the shit out of myself. My grandfather's DNA was having a field day with my confidence. I raised my oversized prop stein, and shouted, \"Beer! Ve must haff beer!!\"\n\nHelga had an identical stein, and so we filled them together from the keg and chugged them while everyone clapped, until they were empty. I saw that beer was leaking out of her defective stein and dripping all over her glorious, copper colored cleavage, making her white top wet enough for me to see the lacy blue bra she was wearing under it. Oh shit. I couldn't take my eyes off her tits. She caught me looking, but instead of getting mad, she just looked down at her breasts and said, \"Oops. I can be zo clumzy zometimes, liebchen! You know how I am!\" She ran her fingers over her soaked cleavage.\n\nI don't know what came over me, but I took her wrist in my hand and said, clicking my heels together, \"Allow me, fraulein Boobenschtein.\" And I wrapped my lips around her fingertips and licked them dry of beer. She just stared at me with the biggest smile on her face, and her eyes twinkling. My god! Who was I?\n\nI had no idea what to do next, but some joker saved me by playing a polka on the stereo. Without missing a beat, Helga shouted, \"Shall ve dance, mein liebchen?\" She didn't even wait for me to answer. She just grabbed my hand and dragged me to the middle of the floor and we started to polka.\n\nI'd been to a few polkas when I was a kid, so I knew the basic moves, and a few of the special ones, and I guess Helga had been to a few polkas too, because she kept right up with me. Soon, everyone was clapping and cheering and snapping photographs, and at least ten others, who knew how to polka, joined in, including Heidi Ho! Where a black girl learned to polka is anybody's guess. When the song finally ended, I lifted my stein and shouted the traditional Oktoberfest starting cheer, which for some reason popped to mind even though I thought I'd forgotten it years ago \"O'ZAPFT IS! THE KEG IS TAPPED! LET OKTOBERFEST BEGIN!!!\"\n\nAfter the ear-splitting cheer, the music switched back to hip hop, and the lights dimmed, and the disco lights began to flash, and soon Helga and I were dancing in the center of a crowd, this time gyrating like fools, just like everyone else on the dance floor. By the third song, I was utterly smitten with her. She had such a bold, fearless spirit, that I just let all of my nerdy inhibitions go, and danced, not caring how stupid I looked, because my eyes were glued to her. Her breasts. Her coppery face. Her stunning, sky-blue eyes. And she was looking right back at me, sometimes smiling, but sometimes with an expression on her face that reminded me of the expression I'd seen on Briona's face while Troy was fucking her. Damn. Helga was giving me sex face! It was unbelievably cool!\n\nThe third song was a raunchy rap song that was bit that year, Baby Got Back, and suddenly Heidi Ho, Helga's black friend, appeared in front of me and started grinding her ass against my crotch. I'd never danced like this before, but there were other couples doing it, so I put my hands on her hips and grinded away. I started to get a boner, so I turned around, afraid she might feel it. But then Gertruda Cockensucken, an adorable freckle-faced girl, with vivid red hair, started grinding her ass into my crotch instead, apparently unconcerned about the fact that I was rubbing my erection against her. Or maybe even enjoying it! It was an incredible feeling. Then Heidi put her arms around me from behind, and started grinding her crotch against my ass, and now I was sandwiched between two Bavarian hotties, feeling Heidi's firm tits rubbing all over my back. My mind was now officially blown. But I rolled with it. Why the fuck not? It was Oktoberfest!",
        "Then when that song ended, Hildegard Fuckmeuptheassenstein switched with Heidi, and Helga von Boobenschtein switched with Gertruda, and now I was feeling Helga's large, coppery tits flopping back and forth across my back. Hildegard was a bit drunk by this time, so she leaned forward and started rubbing her ass up and down, grinding her pussy against my cock, making it look exactly like I was fucking her. She even started making orgasmic sounds. And I realized that in all likelihood, my cock was actually rubbing against more than just her ass. In fact, it might be rubbing right against her tight little pussy! Shit, this was getting way out of hand! Then I noticed that the older sisters in her sorority were watching us with great amusement. Maybe this was part of their initiation ceremony. But I didn't care. If she wanted to dry hump me in a room full of people, more power to her. She even grabbed my wrists and pulled my hands up to her tits! Oh shit! They weren't all that big, but I could feel the hard lumps of her nipples bouncing under my fingers as I squeezed her little grapefruits.\n\nI began to feel the warning signs of an impending orgasm coming on strong. Oh my god, I was going to blow my load feeling the first tits of my life! But at just the last minute, the final girl in Helga's harem, Muschi von Kittenlicker, pushed Hildegard aside, but instead of grinding her ass against mine, she faced me and started gyrating against me in time with Helga behind me. Now two sexy women were rubbing her tits against me, and my cock got enough of a reprieve that my urge to cum faded mercifully away.\n\nMuschi's paper pale face was flush with devastating sexiness, but she wasn't looking at me. She was looking past me at Helga. And in spite of how much I was enjoying this once-in-a-lifetime experience, I think I detected pure infatuation in Muschi's expression. She didn't make eye contact with me even once, but she kept licking her lips as if she wanted to kiss someone. I bent toward her, suddenly excited about kissing another girl, but she just shifted to the other side, her eyes staring past me, and looking down at Helga's ample cleavage. Oh shit... she wants to kiss her friend! I turned to look at Helga's beautiful copper colored face in the flashing disco light, but she appeared to be totally unaware of Muschi's lustful looks.\n\nThe song changed, and now all the Bavarian girls crowded around me and began to rub their bodies and butts all over me. It was dark, and the lights were flashing, and I had no idea who was who, but my hand definitely squeezed another girl's breast for a few seconds, maybe Heidi Ho's and I also fondled a couple of their asses, running my fingers over their delightful butt cracks. It was almost like I was in some kind of fully clothed orgy!\n\nBut then, halfway through the song, a hand grasped mine, and pulled me off the dance floor. It was Helga Boobenschtein. She grinned back at me as she pulled me out the front door, leaving her friends behind, obviously sick of sharing me with them. She wanted me all to herself. That was just fine with me. It was getting pretty weird anyway. Helga and I ran hand in hand through the campus, laughing like lunatics. I suppose the beer had gone to our heads, because we were utterly silly with hilarity. I never was much of a drinker. When we'd run ourselves tired, we sat down on a bench, still holding hands.\n\nAfter she caught her breath, she said in her regular voice, \"I lied to you earlier, my name's not really Helga Boobenschtein.\"\n\n\"Ach du lieber! I'm shocked! Is it Boobenschteen after all?\"\n\nShe laughed and said, \"No. My real name is Annie Stoltz. And yes, that is a German name.\"\n\nI dropped the accent and said, \"You sure don't look German!\"\n\n\"No... my mother's Brazilian. I got my black hair and dark skin from her. But I learned to polka from my dad. He also gave me these eyes.\" Indeed, her eyes were the most amazing baby-blue color I'd ever seen. They almost glowed against her copper colored face.\n\n\"Well, I have a surprise for you too. I'm not really Helmutt von Wiener. My name is Hans Willis.\"\n\nAnnie laughed, \"You have German name too? That's too perfect!\"\n\n\"My grandpa's from Austria, and my grandma from my mother's side is Bavarian.\"\n\n\"Oh my god. What are the odds that two half-Germans would meet at an Oktoberfest party in Illinois, dressed in matching costumes? It's a good thing I don't believe in fate, or I'd say it was fate.\"\n\nI laughed, \"I don't believe in fate, either, but show me the evidence, and I'll be happy to reconsider. But in any large sampling, like life, coincidences are bound to happen. And they have to happen to somebody. In this case, to us.\"\n\n\"Spoken like a true scientist, Hans.\"\n\nI smiled. But for some reason, I wanted to avoid talking about science. That's what had derailed my date with Briona. So instead I said, \"That party was off the hook!\"\n\nShe blushed. \"I'm sorry about the girls. They're a bunch of sluts. Except for Muschi... her real name is Barbara. She's a lesbian.\"\n\n\"Yeah. I kinda noticed. And I think she has the hot for you, Annie.\"\n\nAnnie laughed, \"I know. I know. I keep telling her I'm not into it, but she just wont give up. But I love her to death. And you enjoyed our little dance, didn't you?\"\n\nI had no words for how much I'd enjoyed our dance. So I just blushed and smiled.\n\nShe laughed and squeezed my hand, giving me a strange erotic thrill. Then she said, \"I've seen you around the labs. What's your major?\"\n\n\"General science.\"\n\nShe grinned, \"Yeah? I might do that too, but I'm just a freshman. I'm taking a bunch of different classes this year until I figure out what my passion is. But it's definitely in the sciences. I love science. I loooooooooooove science. I'm taking this biology class right now, and we're learning all about the...\"\n\nAs she bubbled with enthusiasm about biology, her face absolutely glowed, in spite of her dark skin. She just seemed to radiate a luminosity that filled my heart with a feeling so powerful that I was on the verge of laughter or tears. I had the overpowering urge to tell her how much I loved science too, but remembering how things went with Briona, I did something else instead.\n\nI kissed her.\n\nIt was a sudden impulse, perhaps inspired by Grandpa's mischievous DNA, and I acted on it without getting hung up by my normal crippling uncertainty. I didn't even wait for her to finish her current sentence. I just leaned toward her and planted my lips on hers. She didn't push me away or slap my face. Instead, she threw her arms around me, pulled me closer on the bench, and kissed me back, deeply, passionately, lustfully as if she'd been waiting for this moment her entire life. Her mouth opened and our tongues began to polka. This sweet, funny, brainy girl was a seething well of passion under that fun-loving surface. She was moaning into my mouth in no time at all, clearly enjoying this amazing kiss every bit as much as me.\n\nWe must have made quite a tableau in our costumes, making out like crazy on a bench in the center of the quad, illuminated by a nearby streetlight. I could hear people walking by, occasionally snickering or making crude comments. But I didn't care. This was my first French kiss, and I had no intention of letting embarrassment cut it short. And the longer we kissed, the more I dialed out the rest of the world, until there was only the two of us... and our tongues... and our lips... and our hearts.\n\nSuddenly she turned and straddled me, and I enjoyed the feel of her breasts heaving against my chest. By this time I had a massive erection, so I held her back a bit, to prevent her from feeling it.\n\nShe started shivering, and said, \"My legs are freezing\". I took that as an invitation to help warm them up, so I put my hands on her calves, which were splayed out on the bench on my left and right. Some girls, like Muschi, have baby-soft skin, but not Annie. Her skin felt thick and smooth and was covered with a soft, almost invisible peach fuzz. The feel of her flesh made my cock throb with desire. I'd never felt anything so amazing in my life. It felt like suede leather, only softer and suppler.  \n\nShe began humming happily in my mouth as I rubbed her calves. I moved my hands up higher, my fingers slipping under the edge of her skirt to rub her soft thighs. Then with each stroke of my hands, I went a little higher under her skirt. I expected her to tell me to stop at any moment, but she didn't. Finally my fingertips touched the edge of her panties, and a few strokes later my hands were all the way onto her butt cheeks, squeezing them through the soft, stretchy cotton of her undies. She giggled, but she didn't make me stop. I loved the feel of her ass wiggling under my hands as she laughed.\n\nThen, unexpectedly, she slid forward on my lap, pressing her crotch against my hard on. She gave a lustful little gasp, as did I. I couldn't believe how well this was going! The only thing separating my cock from her pussy was a few thin layers of fabric. It was insanely erotic, and all the while we explored each other's mouths with our tongues, absolutely breathless with passion.\n\nWe kissed and kissed and kissed in this position for the longest time. The campus clock struck 1, then 2. I couldn't believe we'd been at it for so long. But I knew it couldn't last forever. There were classes tomorrow and we were both dedicated students. So, reluctantly, we pulled back and just looked into each other's eyes for a while. I found that to be ten times more intimate than kissing. For the first time in my life, I could look into a woman's eyes without glancing away nervously after a few seconds. I could look into Annie's baby-blue eyes forever.\n\nShe said, \"Would you care to escort me back to my dorm, liebchen?\"\n\n\"But of course, fraulein.\" I was sad when she squirmed off my lap. I had the sinking feeling that this was a one shot deal. In the light of day she'd notice how crooked my teeth were. She'd notice my acne scars and wiry hair. But we walked, hand in hand, like boyfriend and girlfriend, and I started to think... maybe... just maybe... a second date?\n\nShe led me on a roundabout route, rather than the direct way to her dorm. It took us into the dimly lit park next to Davenport ravine, which was totally deserted. We waded through drifts of fallen leaves. I put my arm around her waist and snuggled her close. My palm was tucked right under her right breast, which would occasionally bounce down against the top of my thumb, giving me an incredible thrill each and every time. I was trembling with lust. I wanted to move my hand higher, but I was afraid of overstepping. But then it occurred to me that Annie was my girl now. I don't know how I knew it, I just did. It gave me the confidence to cup her breast in my hand. She hummed and leaned her head against mine and squeezed my waist tighter. We walked that way for a while. I thrilled at the feel of her soft, squishy boob bouncing playfully in my fingers. I even felt her nipple getting harder against my palm. And the heft of her breast was amazing. The bulge in my lederhosen was pointing straight ahead.\n\nI could see the bright windows of her dorm getting closer over the treetops, and I knew this magical night would soon be over. This was a girl's only dorm. Boys weren't allowed in at any time. But she steered me off the path toward a huge thicket of bushes near the center of the park. Then she got down on her hands and knees and said, \"Follow me, Hans.\" She crawled into a dark opening in the branches, which I'd never noticed before. I followed. It was a dark and thorny little tunnel, but I could see her silhouette ahead of me, and I could hear the thorns scratching at the edges of her skirt. A chill of fear swept through me suddenly. Fear of the unknown, I guess. Fear of dark places.\n\nThe thorny tunnel took a few twists and turns, but eventually I saw her crawling out into the moonlight ahead of me. She stood up and smiled at me as I climbed out of the tunnel into a small clearing in the center of the giant thicket. I wondered how many people knew about this secret place?\n\nWe were totally alone. Moonlight twinkled in her eyes and we kissed again. She pulled me close, then pulled me over with her into a pile of leaves that had collected in the center of the clearing. We laughed. I kneeled over her, my legs straddling her thighs. I looked down, mystified by her beautiful moonlit face. She put her hands on her blouse and pulled the front of it down, all the while looking at me with an intensely trusting and intimate expression. She had a thin baby-blue bra under the blouse, through which I could see the dark circles of her areolas.\n\nShe reached up and pulled my face down into her coppery cleavage, and I breathed in her powdery perfume and kissed her supple skin, in circling motions, hardly believing this was happening, until I was kissing her hard nipple through the thin fabric of her bra. She groaned in pleasure and suddenly pulled the front of her bra down, exposing her moonlit breasts to me. Her areolas were chocolate brown. I took one of her large nipples into my mouth and circled it with my tongue, and bit it lightly with my teeth, making her giggle. This was an absolute dream come true, but it was only getting better with each passing second.\n\nAs I switched to kissing and licking her other breast, she opened her legs, and I shifted so I was kneeling between them. I lowered myself onto her, pressing my hard-on into her crotch, and began to grind myself against her, softly at first, but with growing urgency. She ran her fingers through my hair, then began to push my head downward. For a second I thought she wanted me to stop licking her boobs, but she kept pushing me down with one hand, while she pulled up her flouncy skirt with the other. Soon my face was inches away from her lacy blue panties. There was a large wet spot in the center of the blue lace. I saw it only for a second before she pulled my face down into her warm wet crotch. I was overwhelmed by the musky moistness of her. I'd caught a whiff of Briona the night she fucked Troy, but now that I was buried in an actual pussy, I took a deep breath of her animalistic aroma. Good grief, I loved it!\n\nI grabbed her suede-soft thighs with both hands and began kissing her pussy through the lacy fabric, licking the tender flesh of her labia on either side, which made her moan with delight. I worked my tongue around the edge of the panties, slowly pulling the edge of it inward, exposing more of her tender flesh. I felt her downy black pubic hairs tingling across my tongue. I pulled at them playfully with my lips. She laughed, then groaned. I teased her for a while, licking the left side, then the right, moving ever inward, but not all the way. She twisted about passionately trying to make me go further, but I playfully delayed, as much to entice her as to prolong the moment for me. This was, without doubt, the greatest night of my life, and I wanted it to go on forever. Finally she couldn't wait any longer, so she reached down and pulled her panties all the way open and pulled my face into her warm wet pussy. My nose buried itself in her downy bush, and my tongue slipped between her swollen lips. She tasted incredible.\n\n\"Oh, liebchen...\" she moaned, \"that feels sooooooo good.\"\n\nAlthough this was my first time, I'd listened to Briona's instructions as Troy ate her out, so I had a general idea of what to do. For the next half hour or more I ate Annie's sweet pussy with absolute abandon. I kissed and teased her, and tried to make her squirm and whimper with pleasure. I found I couldn't put my tongue very far into her vagina. There was a thin membrane just an inch inside her pussy lips. It took me a few seconds to realize what it was. Oh shit... that's her hymen! I recognized it from biology class. For some reason, because of her sexual confidence, I'd assumed Annie wasn't a virgin, exactly the opposite mistake I'd made from judging Briona. I chuckled, realizing that I was a terrible judge of things like that. But it didn't matter. I was touched that Annie trusted me to kiss her this way. I was careful not to lick her too vigorously. I knew from biology class that the hymen could be broken accidentally, and I certainly didn't want to be responsible for an unintentional defloration! So I concentrated most of my efforts on her tiny little clitoris. She loved it when I sucked it and swirled it with my tongue.\n\nAfter a while I discovered that her favorite thing was when I rubbed her pussy up and down with my entire face. I'd start with my nose buried between her quivering lips, then slide upward, so my nose and tongue went up her pussy until I could lift the little hood covering her clitoris with the tip of my tongue, and flick that sensitive little nub before making my way back down. I went up and down this way, again and again, starting slowly but building up speed. My face was slick with her copious juices, which thrilled me to no end. She whimpered and gasped and groaned, and started saying, \"Oh, god. Oh god. Oh yes. Oh yes...\" And then, quite suddenly, her entire body tensed up like crazy, and she closed both of her thighs around my head and held me in a vice grip while she bucked and arched and clenched, squealing with an incredibly powerful orgasm. A splash of warm juices surged out of her pussy onto my face, startling me, and delighting me at the same time.\n\nThen I began licking and sucking her dripping wet pussy with gusto, swallowing her juices, and slurping her delicious clit. But after a few seconds of this she started banging my forehead with her palm, apparently too overwhelmed to be able to communicate vocally. I took the hint and left her over-stimulated clit alone. Annie's body remained as stiff as a board, and a deep trembling rolled through her thighs for two solid minutes. Finally she relaxed, and her thighs opened, releasing my head from the vice grip. She just lay there for the longest time, panting hard as if she'd just jogged a mile. I took the opportunity to finally take a good long look at her beautiful pussy in the moonlight. Every woman in the world has one, but Annie's was the first I'd seen this closely. I'd seen Briona's but she was so hairy, I really hadn't been able to make out any details. But Annie's pussy only had a little oval tuft of silky black hair on top, and simple curving chocolate brown lips below, topped with a tiny little nub. I knew right then and there that for the rest of my life, Annie's vagina would be the one I'd judge all others by. It was simply too beautiful for words. An absolute work of art, just like every other square inch of her.\n\nI kissed her pussy lips gently this time, savoring the similarity of these lips to her other lips. After a while she tugged at my hair. So I crawled up and snuggled her in the leaves, my leg over her legs to keep them warm in the chilly October air. Slowly she came out of the post orgasmic state she'd been in for the last ten minutes. She looked at me with wide eyes and said, \"Hans... I never did that before. That was an orgasm I guess. Wow.\"\n\n\"Yeah, wow!\" I said, smiling. We kissed. She backed off and wrinkled her nose in distaste.\n\n\"Is that what I taste like?\"\n\n\"Delicious.\"\n\n\"If you say so,\" she said sardonically.\n\n\"I do say so. Your pussy, my dear, is ze finest pussy in all ze fatherland. Yah, sweet nectar from Odin...\"\n\nShe kissed me to shut me up. We hugged and kissed sweetly for a long time, shivering against each other, neither of us wanting the night to end.\n\nThere was a rustling in the bushes. We both tensed and listened intently for more. Was someone else crawling up the tunnel? Fear gripped us, but after a few minutes of deadly silence, I said, \"Must have been a branch falling.\"\n\n\"Sorry,\" she said, \"I get easily spooked.\"",
        "\"Yeah?\"\n\n\"I saw a ghost once.\" She let this random bit of information sit there in the darkness. A cloud moved over the moon and suddenly we were plunged into pitch darkness. I could only, just barely, make out her sky blue eyes in the inky blackness.\n\n\"A ghost?\"\n\n\"Yeah.\"\n\n\"There are no such things as ghosts.\"\n\nShe sighed, \"Yeah, I know, but I saw one... so... I guess that's stupid, right?\"\n\nMy science brain now switched on, instinctively. \"You know, I used to love ghost stories and paranormal stuff. But nobody has ever found scientific evidence that any of that stuff exists, in spite of millions of dollars spent on research, hundreds of independent studies, probably more. In the whole of human history, there's still no conclusive evidence that human consciousness survives death.\"\n\n\"I know. But it hasn't been disproved either.\"\n\n\"You can't prove a negative.\"\n\nShe laughed. \"I know, Hans, I know. I told you it's stupid.\"\n\n\"So what's this ghost you saw? Could have been a dream, or a hallucination. They're more common than people think.\"\n\n\"Maybe.\" She said. The cloud moved off the moon, and once again I could see her lovely bronze face. I could tell from her expression that she didn't want to tell me more. She'd given me a glimpse of her dark secret, but that was all I was going to get. She could let me lick her pussy, but the ghost story thing was a little too personal. Go figure.\n\nPerhaps as a way to change the topic, she rolled over to straddle me. In response my softened cock began to grow again. She looked down at me in the moonlight and said, \"You know, Hans, you're quite lovely.\"\n\n\"Handsome, you mean\"\n\n\"Lovely. Handsome men don't wear lederhosen.\"\n\nI was about to say something funny, but she began to grind herself on my hardening erection. A beautiful, lustful expression came over her sweet face. She inched herself slowly down my body, and I watched her as she unbuttoned the buttons on the front of my lederhosen. There were a lot of them, and it would have been amusing except I was suddenly aware that she intended to touch my cock. I got lightheaded with amazement and lust. One of the great dreams of my life was about to come true, and I tried to commit the sight of Annie unbuttoning me to memory. My underwear-clad cock began to emerge more and more with each button, rising up to her grinning face, eager to meet her, to shake hands, to say hello. She tickled the tip of it playfully, amused at the way it jumped with each touch.\n\n\"Little Hans wants out. Should I let him?\"\n\n\"Yes Fraulein. Zat would be lovely.\" I tried to be funny and cool, but my voice cracked with tension.\n\nShe pulled the band of my underwear down, and my cock unfolded in front of her face, looking quite impressive in the moonlight, if I may say so myself. Her eyes twinkled at the sight of it. \"I stand corrected. Not little Hans. BIG Hans!\" I'm glad she'd never seen Troy's cock! Then she touched my cock with her fingers, sending shivers up and down my spine. She began to bat it with her fist, making it bob about playfully. She'd obviously never seen a penis before, because she was utterly fascinated. She stroked it gently, and rolled my furry balls in her fingertips, giggling at the strange feel of me. I was in absolute heaven by this point. And when she leaned down and kissed the underside of my cock with her beautiful lips, my heart skipped a beat. She kissed it again and again, and the more she kissed it, the harder it got, which I didn't even think was possible. Finally she opened her mouth and the tip of my cock slipped between her warm, wet lips. I felt her teeth, her lips, her tongue... but mostly I saw. Really, it was the sight of her mouth, her beautiful, rosy mouth, wrapped around this most intimate part of me, which made my heart do loop-de-loops.\n\nShe tongued me and kissed me and sucked me in a variety of ways. It was her turn now to experiment, and I loved every minute of it. After a while she unbuttoned my suspenders and pulled the shorts down, without bothering to take my boots off. She spread my thighs open and licked my furry balls, taking them into her mouth, while stroking my cock with her soft fingers. She was clumsy and inexperienced, but I didn't know better. It was perfect as far as I was concerned. I just laid back and let her service me, amazed at how much she got into it. She kept looking up at me with her baby blue eyes as she slobbered all over my cock, which was truly mind-blowing. I'd daydreamed about blowjobs for years, but the reality was so much better. I mean, this was literally one of the most beautiful women I'd ever seen in my life, and she was sucking my cock. It was beyond wonderful. It was life altering.\n\nAfter only a few minutes of her wonderful mouth bobbing up and down on my cock, I began to feel the telltale signs of impending orgasm. \"Oh shit, Annie... I'm gonna cum if you keep that up.\"\n\nShe looked up at me and said, \"I want to feel you cum in my mouth, Hans. Is that okay?\"\n\nI nodded, dazed with excitement. Then she sucked and slurped, putting her limber neck into it, and rolling my balls with her fingertips. The underside of my cock became so sensitive that I could feel every taste bud on her magical tongue. Then I felt a hot burst in my nuts, and I began to buck and writhe with the most incredible orgasm I'd ever felt. She kept sucking and jerking as I shot my seed into her mouth. Her cheeks quickly became distended, and cum began to ooze past her lips down my cock. Then I saw her gulping, and I realized she was actually swallowing my cum.\n\nI didn't get soft for a second, so she just swallowed and kept on sucking. Sure, my cock was so sensitive by this time that it almost felt painful being in her mouth, but I put up with the pain because I didn't want it to end. I had no idea when or if I'd ever get another blowjob. Happily I got over the hypersensitivity after a few minutes, and she continued to suck and slurp for another ten or fifteen minutes until I thought I was probably on the verge of cumming again.\n\nBut then Annie suddenly sat up and grabbed her purse. My heart sank. I was certain she was going to check her watch and say it was time to go home. But instead she pulled out a little wrapper and clumsily tore it open. My head nearly exploded when I realized what she was doing. I'd totally forgotten to bring my condom with me. Thank God Annie was more organized than me. She tried to put it on my cock, but it was too dark to see that she was putting it on inside out. We both laughed as she yanked the stretchy rubber on my throbbing shaft. It was so hilarious that it almost took my mind off what was about to happen.\n\nEventually she got the condom over about half my penis, and said, \"Well, that's as good as it gets, I guess!\" Then she stepped out of her panties and squatted over me. I reached up and our fingers interlocked. I was filled with the most amazing love for Annie as she lowered her pussy onto my cock. Then before I knew it, I felt the head of my penis pushing against the tender flesh of her hymen. She paused, our eyes locked on each other. We both knew this was an important moment and should be savored. Then she lowered herself, with a deep groan, and popped her cherry on me. She slid all the way down with a throaty gasp, until I was totally immersed in her tight pussy. She sat there for a minute or two, and we looked at each other smiling. It was over. We were no longer virgins.\n\n\"High five.\" I said.\n\nWe high-fived each other, smiling like crazy.\n\nI was thrilled with the thought that half of my cock, the part uncovered by the condom, was touching the inside of her sweet tunnel. She slowly lifted herself, then lowered herself. She was so tight around me, I might as well not have been wearing a condom. It was incredible.\n\nShe moaned, \"Oh fuck, Hans. You feel so big. Oh god. Oh god. What a great cock. Thank you. Thank you for this, Hans.\"\n\nI was actually fucking a gorgeous half-Brazilian hottie in a pile of leaves, and she was actually thanking me. I looked up at her in wonder. The moonlight was glinting on her dark, shiny braids. As she slowly lifted herself up again her gorgeous lips opened to emit a moan of transcendent pleasure. I was moved more than words can convey.\n\nI blurted, \"I love you.\" Her blue eyes opened wide, and for a moment I was worried that I'd made a mistake. But then she began to pump her body up and down on me with crazy abandon, her eyes locked to mine, as she gave off beautiful, throaty moans.\n\n\"Oh... oh.....ohhhhhh. You feel so good inside me. Oh yeah. So good. Goddamned fucking fantastic! Oh Yeah! YEAH! YEAH!!!\" Soon she was pounding herself on me faster, making the leaves rustle and bounce into the air. I reached up and yanked the front of her bra down, releasing her large brown breasts again. They looked amazing, bobbing and bouncing in the moonlight with those dark brown areolas flying up and down in a blur. Then I began to arch my pelvis in rhythm with her movements, rising up to meet her with each downstroke. The bare skin of our pelvises began slapping wetly together again and again. She was so wet, I could feel her juices dripping down my balls.\n\nSuddenly... a sharp, spine-tingling, high-pitched groan came from the bushes to our left. We froze in primal fear. I felt every hair on my headstand erect, and Annie's pussy tightened like a clamp around my shaft. After a few moments of silence, the bushes rustled... as if something was moving slowly around the edge of the clearing. It groaned again, weirder this time, sounding almost human, but I was certain it had to be an animal. Annie's face was contorted in terror. She pulled off me, and plopped to her hands and knees.\n\nShe whispered desperately, \"Come on. Fuck me Hans. Hurry up.\"\n\nI couldn't believe she wanted to keep going. I wanted to run. As a matter of fact, I was scared shitless. But there she was, kneeling with her skirt bundled up, exposing her beautiful brown ass to the moonlight. I kneeled behind her and slowly slid my cock into her tight, trembling canal, while she looked at the bushes, following the eerie rustling sounds with her head. Man, oh, man, her hips felt good in my hands, and her pussy felt incredible around my cock. I began to pound her hard and fast, trying to work her up to another quivering orgasm. I felt myself building up to one too, but I was able to put it off longer than I normally could have, because my abdomen was clenched into a tight little fist of fear. But after thirty, forty, fifty strokes, she let out a little choking gasp, and warm juices surged out of her all around my shaft, splashing loudly into the leaves between her knees.\n\nAt the moment of her climax a huge black flying thing burst out of the edge of the clearing and flew right at us then up out of sight making us both SCREAM!!! Right then I began to ejaculate, spurred on by fear and the shivering, quivering spasms that were rolling through her pussy and thighs. My orgasm seemed to go on and on for minutes, as I continued thrusting and squirting shot after shot into that wonderful girl. Or, into the condom, I should say.\n\nWhen my spasms finally ended, I pulled out of her and plopped into the leaves next to her. She crawled on top of me and whispered into my ear, \"I love you too. Now let's get the hell out of here.\"\n\nI yanked the fully loaded condom from my penis, and tossed it into the leaves, then we dressed hastily, laughing like idiots, and crawled in terror through the tunnel. Then we sprinted breathlessly, hand in hand through the park to her dorm. We didn't look back until we got through the doors in the foyer. I swear, it felt as something was chasing us the whole way, but when we turned to look out the glass doors, nothing was there but the cold October dawn. The sky was glowing with the first rays of morning light. We laughed and breathlessly talked about what an amazing night we'd had! But what the hell was that thing? We agreed it must have been a bird. What else could it have been?\n\nOnly then did we realize that she'd bled a bit from her broken hymen. The brown crotch of my lederhosen had splashes of dark crimson, and her flowery skirt and white stockings were spattered too. But we both laughed, happy that the lobby was deserted at this hour. We held onto each other in the foyer until the morning sun broke over the treetops, casting October orange light on her bronze face, and filling her blue eyes with wonder. She was even more stunning than ever. We stood up and I kissed her goodnight... or good morning I guess. But before she went inside, I haltingly said, \"Uh... do you think... that you'd like to... uh... go out with me again?\"\n\nShe smiled as if I'd just asked her the dumbest question in the world. \"I'm your girlfriend, stupid.\"\n\nMy heart soared. I have a girlfriend!\n\nThe end\n\nI hope you enjoyed my little sex-geschichte! Please vote, and leave comments! I am not ashamed to admit that I'm a comment whore. Reading your comments are the main reason I write this stuff in the first place!"
    ],
    "authorname": "cbsummers",
    "tags": [
        "lederhosen",
        "college dorm sex",
        "bavarian costumes",
        "sexy nerd",
        "oktoberfest",
        "brazilian",
        "peeping at sex",
        "virgin",
        "cosplay",
        "public sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/oktoberfest-sex-geschichte"
}