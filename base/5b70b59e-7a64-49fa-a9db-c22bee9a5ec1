{
    "title": "Oh, Jeeves!",
    "pages": [
        "Whatever dramas may have arisen from time to time in life, Jeeves' grip on the morning saucer has always remained firm and unshaken. Whether conveying news of political friction in the Balkans or of irrupting aunts on the doorstep the man has always carried a beautiful cup of tea. So when I heard the ominous clink of crockery I knew the world's foundations were quivering even before I opened my eyes.\n\n\"What ho, Jeeves. Nice morning, what?\"\n\nA fairly safe opening, I thought, given that the newly drawn curtains were admitting a whole treasury of golden rays to brighten the interior of the Wooster bedroom with their cheerful glow. Yet the springing sun's touch was clearly failing to pluck at Jeeves' manly heartstrings. Framed in the halo of sunlight he loomed over me like Jehovah about to inflict a plague of pyramid scheme salesmen on both the upper and lower Nile. Any valet displaying an irate eyebrow in that openly disapproving manner was clearly as impervious to polite chit chat as Vlad the Impaler in the grip of a hangover.\n\nThe thing was, I couldn't imagine what could have caught the man so fully on what was clearly the rawest of raw spots. I'd never seen him in such a state before, not even when a gang of red revolutionaries had turned up at the apartment at five o'clock in the afternoon for an anticipated feast of scrambled eggs and sardines. Although, to be fair, on that occasion it had been the sight of Bingo Little's false beard which had unmanned Jeeves to the extent of forcing him to clutch at a table for support. But the premises were currently pest free and without trace of either Bingo, any of his many fianc\u00e9es, or even revolutionaries of any hue. The only thing visible which might have been described as slightly irregular was the decidedly well shaped leg which had somehow escaped from underneath my rather disordered bed clothes -- a female leg, in point of fact, if you see what I'm driving at. \n\nYet there was nothing in that which should have been responsible for poor old Bertie getting his hot tea handed to him in a frozen mitt. Jeeves knows very well there are some services which even the best of gentlemen's gentlemen cannot provide for the young master and none of my modest domestic debaucheries has ever drawn a hint of disapproval from the great man before. Indeed, whereas we have frequently failed to see eye to eye in the matter of floral cummerbunds or purple socks, Jeeves has uniformly approved my choice of women. I like females who laugh a lot -- well, what other sort would consort with a certified half wit like Bertram? But whatever their shape, size or inclination to lots of giggles after generous doses of champagne, Jeeves has always greeted each and every one of them into the apartment as warmly as if they the proverbial flowers in May.\n\nI daresay that may be because the relationships are always of a transient nature. A pair of spats in old Etonian colors I'll wear as often as Jeeves will let me get away with, but no girl need expect an invitation to linger in Abernathy Mansions once the trysting's done and completed to everybody's satisfaction. Truth to tell, ever since Cynthia Wickhammersley nearly sank one of her floating ribs laughing at my tentative offer of a joint canter to the alter rail I've decided that the life of a bachelor gay is what suits Bertie Wooster best. It's true that I've been greatly scorned by many of my contemporaries who've boldly set off along the tempting highway of marital life, but I'm also duty bound to record that several of them have since ended up with their offside wheels very deep in the ditch. Enough at least for Bertie to reflect that there are worse fates than being stupid and single, provided one has -- as I have -- a considerable private income and Jeeves' unparalleled problem solving abilities to keep us both in our present happy state.\n\nSo, to labor the point, why was I waking up to find myself underneath eyes of terrible aspect, prying through the portage of Jeeves' head like brass cannon? Where was the usual feudal spirit of goodwill between master and man, between valet and valeted? It suddenly occurred to me that I might gain an insight into the developing plotline by asking him that very question.\n\n\"Something wrong, Jeeves?\" I asked lightly, pretending not to be aware of the storm clouds gathering in a black line on the horizon.\n\n\"Might one inquire as to where you happened to meet the young lady, sir?\"\n\nThis was a decidedly rum question, a blatant expression of curiosity as far distant from Jeeves' usual disinterested behavior as it was possible to imagine: I felt as if I was watching an Old Bailey Judge enter his courtroom with his face blacked up and playing a banjo -- the senses reeled, as you might say. But I rallied and responded.\n\n\"It happened to be at Goodwood. In the private enclosure, if it matters.\" \n\nThere was some emphasis on the last words, a firmly implied measure of rebuke. After all, where does one get off if the domestic staff feel entitled to an full explanation of their employer's activities? Apart from anything else it was dashed embarrassing to have somebody else listening to one being cross examined by one's manservant as to one's doings, if one gets one's drift. Fortunately, apart from the eye-catching leg, the only other thing visible from underneath the bedding was a tangle of blonde hair and the only noise coming from the night's partner was a regular series of snores. And, don't you know, I felt quite bucked up: there's nothing like a love sated girl as compensation for the fact that Bertram's life had been singularly free of any kind of formal prizes since my collection of pressed flowers was judged best in class at infant school.\n\n\"And may I assume that the lady was wearing her travelling coat at the time you met and kept it on until you returned home? And may I further assume that she disrobed in the dark?\"\n\nBy Jove, that collapsed my self confidence in short order. No one has more respect for the raw horsepower residing in Jeeves' fish fed cerebral cells than Bertie, but even I had never suspected that his intellect was of positively Sherlockian caliber.\n\n\"Good Lord, Jeeves, how did you know that?\"\n\nI'm sure that for a second he was on the point of saying, 'Elementary, my dear Wooster' but even the most insidious temptation has always found it hard going with a personage of Jeeves' strong character. Instead of speaking he simply pointed to a set of nether garments thrown over the back of a chair and revealed to a disbelieving world by the rising sun.\n\n\"Good God,\" I choked, \"Trousers!\"\n\n\"Or slacks,\" Jeeves suggested icily.\n\n\"She's an American -- pants,\" I adjudicated, and then seized the cup of tea with fingers that trembled a great deal more than Jeeves had. \"I've escorted a woman wearing pants around the private enclosure of Goodwood. If anybody ever finds out about this I'll be the laughing stock of London -- no, but wait, she was wearing a skirt underneath her coat. She must have been, because I could see her ankles and calves. I'm sure of that because I remember admiring them an awful lot.\"\n\nJeeves picked up the feminine abominations and showed them to me as undeniable evidence for the prosecution.\n\n\"Sir, allow me to point out the numerous wrinkles around the lower legs and the knees. I believe that the young lady initially tried to enter the private enclosure with her pants in full view underneath her coat and was very properly turned away by the enclosure stewards for being inappropriately dressed. Normally, that would have been an end to the matter, but being an American and quite without shame, I believe she simply retired to some private place and there rolled up her trouser legs, perhaps securing them with string or in some other extemporized fashion, and then entered the enclosure by another gate. Of course nobody would have dreamed that she was not wearing a skirt underneath her travelling coat.\"\n\n\"Good God, Jeeves.\" I hadn't been so shaken since Aunt Agatha had blithely announced that I was under starter's orders to marry Honoria Glossop. \"Imagine if one of those confounded leggings had come adrift and unrolled down as I was talking to her -- I'd have been warned off the turf for life. No decent bookie would have accepted one of Bertram Wooster's wagers ever again. It's all the fault of those blasted Americans for not taking a hard line with their womenfolk from an early age. Just because they can get away with outlandish behavior in California they think they can do it in civilization. This has been a lesson to me, Jeeves, a very firm lesson to stay away in future from any girls with any hint at of sun tan. Not unless we're at the Casino at Roville-sur-mer.\"\n\n\"A wise decision, if I may venture to comment, sir. But I fear you've failed to grasp the situation in its entirety. If you met this young person in the private enclosure at Goodwood, then may I assume she has a certain social status which requires she be allowed to leave in a manner befitting such standing?\"\n\nThey say that no man is a hero to his valet, and has the implications of Jeeves' words sank in, I must have looked more like a stunned mullet than any human being has a right to. For he was absolutely spot on; had I been entertaining a chorus line girl it would have been a simple matter to dress her, pop a couple of crisp fivers down her cleavage as marks of appreciation for a night well spent and to gently push her out through the door with expressions of mutual good will. But in this case . . .\n\n\"Jeeves, dash it all, she was carrying a letter of introduction to one and all in society signed by Freddie Threepwood -- you remember Freddie Threepwood?\"\n\n\"Certainly, sir, the second son of Lord Emsworth of Blandings Castle. He married Miss Niagra Donaldson, the daughter of the founder of Donaldson's Dog Biscuits company of Long Island. A most successful union, I am led to believe.\"\n\n\"That's as maybe, Jeeves, but whom we have here is Annette Pederson, the daughter of the family Pederson, with which is associated the family enterprise of Pederson's Prophylactics of San Francisco, rubber goods as sold at all good barber shops and drug stores. Every time an American on the West Coast gets the urge the necessary item he reaches for first is almost certainly to be a Pederson manufactured prophylactic. And if the Americans out West are anything like the Americans we've met in New York I daresay they get the urge an awful lot. The essential point, the nub of the conversation I'm trying to put across is that the Pedersons have more dollars to scratch themselves with than all the consumers of Donaldson's dog biscuits put together have fleas. Reading between the lines of Freddie's letter it seems that we're talking about a family business which every day fills entire trains of boxcars with rubber necessities intended to keep the size of the population of the United States within reasonable limits.\"\n\n\"Doubtless a worthwhile aim, sir, though not perhaps achieving as much success as one might wish for in an ideal world. None the less, from what you've said it's clear that we cannot simply put Miss Pederson out into the street. She must be escorted back to her residence with all due politeness, or at least seen into her taxi, if so she chooses to depart. Therein lies the difficulty. As you may have already observed, today is distinguished with remarkably clement weather. So clement indeed that I fear there is no possibility of Miss Pederson wearing her coat -- nor do I think she would be amenable to any suggestion of rolling up her . . . hmmm . . . her pants again.\"\n\n\"So at the very least, Jeeves, the good old noblesse oblige of the Woosters requires me to escort her downstairs and to open the taxi door for her. Is that the way you see the scenario unfolding?\"\n\n\"I fear so, sir.\"\n\n\"Are you seriously suggesting that I appear in public on the pavement of Berkeley Square with a woman wearing pants? I'll swim in blood first!\"\n\nFear had gripped Bertie's palpitating organs in a grip of steel. For I knew, I just knew, that fate would decree the moment I stepped out into the sunlight would be the moment that Aunt Agatha would loom over the horizon.\n\nAunt Agatha, the curse of the Woosters, who dated the start of the fall of the Empire from the first raising of a skirt hem above floor level. Aunt Agatha, widely known as the fiery harridan of the Fernie Hunt ever since a female huntress of advanced ideas had been observed riding astride a horse instead of using a side saddle as nature intended. If Aunt Agatha saw Bertram on the streets of London escorting a trouser clad female the resulting invective would make Lloyd George at his rabble rousing noisiest sound like a soft breeze brushing the tree tops. Within hours the entire mass of Wooster matriarchs would be trampling me underfoot, invariably bringing in their wake Sir Roderick Glossop and the certificate of lunacy he'd been itching to inscribe Bertram's moniker on ever since the unfortunate affair of the cats, the fish and the stolen hat. Another by product would probably be a sinking of Anglo-US relationships to a level not known since 1812, but such diplomatic niceties would mean nothing to a man being hunted down by an Agony of Aunts.\n\nOr, even worse yet, what if one of my fellow members from the Drones Club espied me in the streets with a trousered female: the thought was enough to make me cringe like a beaten puppy: \"What ho, Bertie, taking your girl rat catching, what?\" \n\nMy name would be stricken from the Club records and made a hissing and mockery amongst London society. Instead of being a proud adornment to my fellows because of my achievements I would be shunned and passed on the other side of the street. No longer would people remark on sighting the elegant Wooster frame: \"You wouldn't believe it to look at him, but that chap can throw a bread roll further than any other man in London.\" Instead, it would be: \"You wouldn't believe it to look at him, but that chap was once seen in broad daylight in Berkeley Square with a colonial female dressed like a chap herself. By Jove, they should have treated him like Oscar Wilde and thrown him into Reading jail.\"\n\nI stared at the glowing window like those soothsayers in the fiery furnace awaiting their doom: \"No chance at all of rain, Jeeves? Not even a hint of a cloud anywhere in the sky?\" I pleaded forlornly.\n\n\"None at all, sir. The weather forecast on the wireless was emphatic on the uniformly fine sunshine which may be expected for the next twenty four hours. No doubt we can rely on the veracity of the British Broadcasting Corporation.\"\n\nI felt like sobbing: \"No rain, not a drop -- in England, of all places. Dash it all, Jeeves, it's hard, it's dashed hard. I feel like a Bedouin camel herder drowning in the only deep oasis in ten thousand square miles of desert because I never bothered to learn to swim.\"\n\n\"An elegant description of your difficulty, sir.\"\n\n\"No, wait a minute, I see a way out. You can escort Annette down to the street yourself and hail a taxi for her. I'll say I've sprained my ankle or something.\"\n\nJeeves drew himself up to his full height with graven mien: he regarded me with hooded eyes and the expression of a Roman Senator arriving home unexpectedly to find his wife trying on a new male slave for size.\n\n\"I fear, sir, that such an undertaking would be totally incompatible with my position as Grand Master of the Worshipful Guild of Personal Retainers.\"\n\nSo there it was, mutiny above decks in broad daylight, shameless and flagrant, with poor old Bertie cast in the role of Captain Bligh. With any other servant I would have sprung from the bed with an angry cry and shown him the way out. But that had been Captain Bligh's response too, and look where that got him, cast adrift in an open boat. Which was where I would end up too, floating aimlessly on the sea of life without Jeeves as my guiding star. No, I must put my faith in the man's genius to get us out of this spot.\n\n\"Then what's to be done, Jeeves, what's to be done?\" I demanded in desperation.\n\n\"Well, sir, it would be quite easy to buy a dress: the problem which presents itself is in persuading Miss Pederson that she must change her apparel because she cannot possibly appear on the streets of London wearing pants. Do you feel she might take the suggestion amiss?\" \n\nI shuddered: \"Jeeves, this is a girl who apparently flies her own aeroplane, hunts mountain goats with a rifle through the Californian high country and is on first name terms with everybody in Grosvenor Square from the US Ambassador on down. Apart from which her father can apparently call up President Hoover whenever he likes by mentioning two magic words, 'Campaign Funds'. If we insult her there'll be a huge scandal, not to mention that we might end leaping from rooftop to rooftop around Berkeley Square like goats ourselves, dodging Miss Pederson's gunfire. No, blast it, I can't simply tell her that while she might be appropriately attired for the High Sierras she's currently the essence of high farce in high society.\"\n\n\"Then we must depend on the psychology of the individual. You, sir, must rise immediately and repair immediately without bathing to the Maison de Mode dress shop in Cumberland Street. It's only a few minutes walk away. I will give you a note for Madam Juin, the proprietress, to explain the situation. She will immediately select something suitable and you will bring it back. You will then tell Miss Pederson that you rushed out and bought the garment as a token of your appreciation for the pleasure of her company during the night. Then you must beg her to try the dress on and see how it looks. We may hope that she will be so pleased with the spontaneous presentation of your gift that she will keep on wearing it when you take her out to her taxi.\"\n\n\"Go out, unbathed and unshaven -- into a female dress shop. Jeeves!\" It was a cry of anguish torn from my soul.\n\n\"Should you meet any of your friends, sir, you can explain away your appearance by saying that you've spent all night at the tables at Crockfords, and have just finished breaking your fast at a costermonger's coffee stall in Covent Garden. As for Madam Juin, she is discretion herself, and so are her staff. Your secret will be safe.\"\n\n\"Safe! And what if one of Bingo Little's ex-fiancees arrives in the Maison De Mode whilst I'm there? The story will be spread around the whole Metrop before I've finished signing Madam Juin's check.\"\n\n\"The likelihood of any such encounter is extremely remote, sir,\" the man said loftily, rather like Zeus having to explain his grand plans to a slow witted mortal.\n\n\"Remote! Do you know how many girls Bingo has been affianced to in his time? Laid end to end they'd stretch the length of Rotten Row.\"\n\n\"Considering the general quality of Mr Little's selections that might be an appropriate venue for the event, sir. Though I'm bound to say the sight would probably frighten the horses rather badly.\"\n\n\"Ah!\" I said. Fear had lent wings to my normally sluggish brain and exposed the flaw in Jeeves' strategy. \"You're forgetting, I can't buy a dress for Miss Pederson without knowing her dress size. So that puts paid to that idea.\" \n\n\"Not at all, sir. We shall simply lift the bedclothes off Miss Pederson and I will be able to judge her requirements by eye.\"\n\nHad anybody else bar a master tailor made such a claim I wouldn't have believed it. Yet I'd had it proved to me time and time again that Jeeves could indeed name my clothing sizes to within a fraction of an inch with a single glance. That the talent might extend as far as female bodies was something I'd never considered, but presumably he knew his own abilities best. \n\n\"She . . . she hasn't got any clothes on at the moment, Jeeves.\"\n\n\"Then my task will be so much the easier, sir.\"\n",
        "Crushed -- I was fairly crushed underneath the dead weight of his reply. Not that they'd been any insolence at all in his reply, nor did there need to be, after the stupidity of my remark. Poor old Bertie was a very embarrassed employer indeed as he slipped out from underneath the covers without a stitch to cover himself and prepared to help Jeeves throw the bed clothes back from the figure still underneath them.\n\nIt seemed that the Pedersons were a family who liked their sleep almost as much as they liked collecting federally printed autographs of the Secretary of the Treasury. Deprived of the warmth and shelter of the blankets, Annette curled herself up on her stomach like an uncovered dormouse in the depths of hibernation and continued to put plenty of solid spadework into her snoring. \n\nDash it all, though, noise apart, she was a vision which would have been worthy of any painters' brush work, even Rembrandt's. A kind of pocket Venus De Milo, with all those curves and enticing handfuls that are creation's most interesting mystery. The good thing about looking at her on top of the mattress was that her breasts were tucked out of sight underneath her, which let you admire her hips and bottom without being afraid you might be missing out of a glimpse of something even better somewhere else. All in all, taking a look at the little blonde bombshell, any impartial male observer would have to agree that Annette Pederson had more attractive trimmings on her than any Christmas tree you ever saw. Which begged a couple of questions, such as why she'd ended up in bed with silly ass Bertie, and where the devil was her chaperone on this holiday jaunt of hers across Europe?\n\nConsiderations which went completely out of my mind as Jeeves leaned forward and tickled the bottom of Annette's right foot. She made a kind of ingrowing breath noise and rolled over on her back. Two delightful mounds of faintly freckled flesh swung and heaved together in graceful arcs before gently settling into the gentle swaying motion. A pair of large brown nipples rose and fell with her breathing, like fishing floats on a moving sea twitching with the promise of hidden life below, if only a man could haul them in. Then her eyelids opened and her vivid blue eyes glanced incuriously at me before turning toward Jeeves. I tried to think of something I could possibly say but only managed a kind of choking gargle.\n\n\"Good morning, Madam,\" Jeeves said cordially. \"Could you possibly oblige me by sitting upright so that I can obtain a clearer impression of the size of your bosom?\"\n\n\"Huh . . . sure.\"\n\nYou know, over the years I've had to put up with a great deal of loose gossip about how I let Jeeves make too much of himself, and how I talk a lot of nonsense about what strength of character he has. So, let the record show, that when Miss Pederson was subjected to the Jeeves' treatment she was as much putty in his hands as poor old Bertram has ever been, for all of her own undoubted personal strengths. Summoned straight from the depths of sleep and confronted with Jeeves' iron will, you may as well try to argue the toss with the Recording Angel, should you happen to find him in the bed chamber writing down the names of all your tribe.\n\nSo, to resume the narrative, Annette heaved herself up, leaned back against the bed head, put her hands underneath her well developed charms and displayed them to my valet as calmly as if they were a pair of second hand bolsters with dubiously hued antimacassars.\n\n\"Will that do?\"\n\n\"Thank you, Madam, that view is amply sufficient,\" Jeeves answered with due deference and some considerable degree of understatement. \"Now that I know your approximate dimensions I can work out your displacement and run your bath to the correct level and temperature. I will call you as soon as it is ready. Would you wish me to leave a cup of hot coffee beside the tub as well?\"\n\nAnnette lay there, as naked as she could be, bar her earrings, and smiled at him as calmly as before: \"That sounds like a great idea. You wouldn't like to give me a hand in the bath as well, I suppose?\"\n\n\"I have done such services for other ladies, Madam. Many of them have been kind enough to congratulate me on my skills as a masseur. Though I cannot recall any of them as your equal in pulchritude. Naturally, if called upon, I will endeavor to give every satisfaction within my power.\" \n\n\"Pulchritude?\" \n\nAnnette arched her eyebrows in question marks and joggled herself at Jeeves with both hands. I had a vague sensation of a locomotive letting off steam somewhere between my ears. One of the big American Pacific class steamers.\n\n\"I was merely stating the obvious fact that Madam is the fortune possessor of a great measure of extremely enticing physical beauty. Madam will excuse me?\"\n\nJeeves inclined his head like Gladstone doing the polite by Queen Victoria and vanished in the same uncanny way that he seems to arrive, appearing and disappearing into the atmosphere with the facility of an errant wisp of steam in a Turkish bath. Personally, my flabber was entirely ghast, as you might say. First of all there was that cunning little diversionary tale about needing to see Annette naked so as to judge the right level for the bath, and then there was that casual flash of the bat sending a six to the boundary as Jeeves talked about his services to other ladies -- his services, mark you, and what ladies might they be, I wondered? And come to think of it, hadn't there been a lot of girls through the Mansions who'd left envelopes behind with Jeeves' name on them? Minor gratuities for minor services, I'd always assumed, but how minor, that was the moot point. Dash it all, none of them had left any keepsakes for Bertie Wooster, the official and duly appointed resident Romeo in these premises. \n\nThese were deep waters, especially for a naked man with only a few sips of tea in his system and an urgent need to drag on his clothes before taking urgent flight to Madam Juin's. Deep waters which suddenly became deeper and murkier.\n\n\"That must have been Jeeves, I suppose?\" Annette asked me. \n\nQuite an unsettling question to put to a chap when a chap is standing on one leg and trying to put the other one into the correct hole of his pinstripes. I mean, I was well off balance to begin with.\n\n\"Jeeves? yes, that was Jeeves, but how come you to know his name?\"\n\nAnnette leaned back and put her hands behind her head: watching the effect on her body, I nearly tore the gusset out of my trousers.\n\n\"Bertie, everybody knows about Jeeves. Freddie Threepwood made me promise I'd meet Jeeves whilst I was over here. He said that Jeeves and Westminster Abbey were the two things in London I mustn't miss out on, no matter what.\"\n\n\"Well, confound his cheek,\" I grumbled. \"He's got no business telling people to meet my valet. Dash it all, there'll be a plaque outside the next thing you know, 'JEEVES LIVES HERE', with Bertram opening the door for visiting tourists wanting to go sightseeing around one of the stately retainers of old England.\"\n\n\"Don't be so grumpy on such a nice morning, Bertie. Everybody thinks you're so clever to have found Jeeves for yourself. I think you're very clever to, and very handsome.\"\n\nWell, that put a different complexion on things, don't you know? What with Annette's magnificent contours on display, and her honeyed words, well I'd begun undressing again given half a chance. But duty called, so I kept on buttoning up.\n\n\"Where are you going, Bertie, and in that state? I doubt if Jeeves will let you out looking like that.\"\n\nI drew myself up to full height, displaying the haughtiness that the Woosters have always been able to call on ever since Sir Bertram De Wooster fell off his steed in full armor at the battle of Agincourt and landed on top of the High Constable of France, thereby instantly reducing him to the Low Constable of France.\n\n\"Jeeves is not my keeper, and if you knew my business, you would entreat me go rather than stay.\"\n\nAnnette fluttered her eyelids: \"Yes, Master Petruchio. In any case it seems that I'm taking over your bath, so you may as well make tracks until I've finished wallowing in it.\"\n\n\"Look, Annette, it is important that I have to go out now, dashed important,\" I said diplomatically. The realization had come back to haunt me about how I was going to have to sweet talk this squawking squaw into dressing with some degree of decorum before she issued forth over the Wooster doormat.\n\n\"Sure, take as long as you like, I won't be offended. Can Jeeves cook -- a breakfast, I mean?\"\n\n\"Of course, anything you want, and to perfection. He'll look after you until I get back.\" \n\nAnnette slid down into the rumpled bed and heaved a great sigh of pleasure: \"I'm sure he will. Did you hear him say I had pul . . . pulc . . . whatever?\"\n\nWatching the effect of the sigh on her breasts was having a hampering effect on my own breathing: \"Yes, well he's right, you've got bags of charm.\"\n\n\"Have I really, Bertie?\"\n\n\"Oh yes, by Jove, I can see two of them at least from here, don't you know?\"\n\nShe giggled and threw a pillow at me: \"Don't be gone long, Bertie. After I've had a bath and some breakfast I may need another lesson in English lovemaking.\"\n\nWell, that was an inducement I badly needed as I sidled out of the Mansions by the tradesman's entrance, collar turned up and shoulders hunched in fear of detection. After I'd travelled the length of the street with people staring after me as though I was wearing a mask and had a bag marked \"SWAG\" over my shoulder, I realized that what might suit James Cagney in the Bronx after he'd fled the Big House at the dead of night might not be quite the thing on a sunny Mayfair morning. It was the lack of a shave which was really undermining the Wooster morale and impeding my thought processes to no small extent.\n\nAnyway, I shall simply record that the next hour was one of the grisliest ever suffered by your correspondent. Bad enough to be sneaking through the streets in desperate fear of being arrested as a vagrant at any moment. Worse yet to be standing in Madam Juin's establishment of frills and fripperies with blasted girls appearing from behind screens in all directions to gape and giggle at Bertie as he presented Jeeves' note and was in turn presented with a selection of dresses to choose from, as though I knew or cared anything about any of the deuced things. Most depressing of all was the sight of the telephone on the counter of the shop and the far too late realization that I could have simply phoned through an order and arranged for a messenger to deliver it to the apartment. But perhaps Jeeves thought that my chances of getting Annette to take me to her heart would be improved by Bertie bringing the bacon home personally, as you might say. \n\nAt any event I decided to take three different dresses and to hope that one of them would appeal to the brazen hussy who'd accepted an invitation into my home and hearth without warning me of the appalling state of her apparel. So you may consider my state of apprehension as I tiptoed back home through the streets, not only unbathed and unshaven, but clutching three large be-ribboned boxes to my chest and trying to hide my face behind them. Vague talk of returning from some prolonged nocturnal roistering might have served before, but what was Bertram Wooster doing creeping around the streets with the sun well over the yardarm, dressed like an organ grinder, smelling like his monkey, and carrying an assortment of Madam Juin's finest creations? Let that question be bruited around amongst London's fashionable inhabitants and Sir Roderick would be packing up his collection of little rubber hammers and calling around at Berkeley Square with a couple of white coated assistants faster than Bingo Little could get himself engaged in a ballroom full of drunken debutantes.\n\nBearing that thought in mind, you'll appreciate the shock to the poor old Wooster system when I opened the door to my apartment and found two burly men in scarlet coats and wigs standing to attention in the hallway like extras in a Regency play. Whilst I was still gaping at this unexpected turn of events one of the unidentified retainers stepped forward and neatly scooped Madam Lafarge's packages out of my limp arms.\n\n\"Welcome home, Mr Wooster,\" he said, rather like the Biblical Patriarch giving the formal greeting to the Prodigal Son.\n\n\"Er, yes, thank you.\"\n\nTruth to tell, I was rather keen on knowing why my front hall was being cluttered up with ornately dressed servants who certainly were not part of the Wooster household. The difficulty was that when it came to questions, it was rather a case of dealing with a embarrassment of riches -- or a richness of embarrassment. One might, for example, have also turned to the matter of the silver tray being held by one of these magnificently turned out menials, a tray well nigh covered with packets of what I recognized as Pederson's Prophylactics. Recognizable to me even though I'd never been West of West Point because Annette had been carrying several similar packets inside her handbag and had insisted, like the man in the soap advertisement, that I should use no other. No wonder a family with such faith in its goods did so well on the retail side, but, whatever their sterling qualities, I was unaware that Pederson's useful rubber goods were on sale anywhere in the sterling area, so their sudden appearance on a salver in my London apartment, was, like that of the scarlet jacketed retainers, shrouded in mystery.\n\nStill, leaving that aside, one might also wonder these footmen were also shrouded in clouds of vapor as though the Wooster premises had its own private peasouper: but this was steam I was seeing, not fog, coming from the opened bathroom doorway. Along with a sound like a pair of kippers being beaten into pulp against an elephant's flank. All in all, Bertram's brain was as misted up as my front hall seemed to be. It was a relief when one of the men in red gave tongue.\n\n\"My name is Woodend, sir, and this is Chataway. We are part of Sir Max Hobden's household. Sir Max is away at the moment, sir, in America, and we are here because Mr Jeeves asked for our help.\"\n\nSir Max Hobden -- well, everybody knew who he was. The most successful actor ever to leave the West End Theatres to seek fame and fortune in the film lots of Hollywood, a search which had turned up more treasure for the titled thespian in the role of Long John Silver than any buccaneer had ever buried.\n\n\"Mr Jeeves is aware of the fact that Sir Max greatly favors the Pederson brand of prophylactics, sir, an habit he acquired in California, and Mr Jeeves requested that I bring around some of Sir Max's stock as a matter of urgency.\"\n\nGood God, was there nothing that the Servant's Hall didn't know about who did what with who and with what upstairs? That was a revelation, I can tell you but bigger and better shocks were coming. This was an earthquake which had just begin to shake things up.\n\n\"But, dash it all, Woodend, why bring the bally things here?\"\n\n\"Apparently there's a young lady who's eager to enjoy herself, but who needed to be reassured that a adequate supply of Pederson Prophylactics was at hand before she would consent to begin.\"\n\nI gaped at him, and then turned and gaped just as inanely at the direction of the bathroom, where a sound vaguely reminiscent of a wolverine going through a particularly difficult birth was making the clouds of steam quiver. The thought occurred that none of this was doing the flock wallpaper any good -- the further thought occurred that what I was hearing was Annette either in total agony or in total ecstasy.\n\nWhen I looked through the bathroom door and waved aside the strata of hanging steam I saw her standing behind the massage table and leaning forward over it with both arms stretched out stiffly in front of her, one cheek against the leatherwork, hair twisted around her forehead and ear in damp curls, calling out a name very loudly and dribbling out of the corner of her mouth like an infant. The owner of the name was standing directly behind her, naked himself except for his washing up apron, which was lifted up and spread out as a kind of concession to modesty over Annette's haunches as she thrust herself back wildly against his own matching movements. \n\nJeeves nodded deferentially at me across her back, an act which seemed definitely incongruous, especially as he was slapping the flats of his hands against her cloth covered bottom like an tribal drummer beating on a Tom-Tom. Rather a good rhythm he was keeping under the circumstances, too. So now at least I didn't need to ask what was making the 'elephant assaulted by kipper' sound. One query which did cross my mind was why my valet was giving my female guest what seemed to be the experience of her life, as unsheltered as that life seemed to be. Jeeves nodded again, seemed to slow his own stroke rate to half of what it had been and then pressed down hard against Annette's buttocks, holding her to ransom for her own satisfaction against whatever movement he chose to give her. Annette wailed in despair at being restrained, wriggled around like a trapped rabbit, curled her hands into fists and then thumped them down on the massage table as if she was throwing a tantrum.\n\n\"Jeeves . . . please!\"\n\n\"Be quiet, Madam. Otherwise no more treats for you. Excuse me for taking this liberty, sir, but I had no choice. I'm afraid that Miss Pederson was awake during our conversation after all, and eventually expressed her deepest conviction to me that she would not change her clothes merely to save you some minor embarrassment. So I was forced into a change of tactics.\"\n\n\"Jeeves! Fuck me! Now!\" \n\nI suddenly found that the American girl's call of the wild was being answered. Two more shapes appeared in the doorway, displaying an startling amount of untanned flesh between eyes and knees. In fact there are few more unsettling sights than seeing two men suddenly appear in your bathroom, especially when they're wearing nothing but wigs and silk stockings.\n\n\"Ah, Woodend and Chataway. I think Madam needs a gobstopper if you can find one of a suitable flavor.\"\n\n\"Certainly, Mr Jeeves, certainly. My pleasure.\"\n\nThe duo of domestics walked in, surrounded the table, each slipping a hand under Annette and seizing hold of a breast each. As far as both of them were concerned Bertie Wooster might as well have been one of the fixtures and fittings. Dashed high handed, I thought, as well as low handed as well, but at least I wasn't having Annette's troubles.\n\nI saw her eyes bulge wide open in surprise, and then even wider as she found her lips being pushed opened by the Woodend family's pride and joy, and if Woodend wasn't exactly a fully qualified footman he went almost three quarters of the way at full stretch towards matching his job description. He was certainly well enough endowed to keep Annette completely out of the conversation. When Jeeves gave her a couple of quick beats to the bar the only response which came out around the Woodend scepter of masculinity was a series of gargles vaguely reminiscent of a plumber's mate being applied to a well blocked drain. \n\nMeanwhile Bertie was leaning back against the tiled wall feeling as if he was already facing the inevitable firing squad. Not that I've any objection to orgies as such, but one has to be so dashed careful about whom one sends the invitation cards to -- and Annette hadn't even been invited to this one, simply pressganged into it by all appearances. By the time she'd finished having her most intimate mysteries delved into by a valet and two flunkies she was likely to be as sore as a gum boil. By Jove, if this got into the courts it would be a matter of rapine, mass rapine, with three further offences of stealing policemen's helmets on boat race nights to be taken into consideration in the sentencing of Childe Bertram to durance vile.",
        "\"Dash it all, Jeeves, what have you done. How? Why?\"\n\n\"Well, sir, since Madam is determined to leave in her pants the only thing we can do is to delay her departure until dark. So I asked her if I could massage her shoulders as she lay on the table in a towel. Mmmm, excuse me, sir.\"\n\nThe blighter blinked his eyes, took a deep breath, rose on the tips of his toes and lunged into Annette like a matador striking for the bull's neck: her eyes rolled back in their sockets as if Jeeves had scored a winning stroke off the cush with both of them. \n\n\"Madam has remarkably tight vagina muscles. I can't keep her in play much longer. Fortunately Woodend and Chataway are here to keep the momentum going until we can begin a new innings.\"\n\nThere were things to be said here, including a definite refusal on Bertram's part to bowl any googlies onto an already well dampened wicket. But before I could give voice to any of these matters of pith and substance, Jeeves took his pressure off Annette's bottom. It was as though he'd released the mechanism on a life-sized clockwork doll: she thrashed herself against him and moaned like a gale from the icefields tearing through the shrouds of a clipper ship rounding Cape Horn. Not that I've ever actually been to Cape Horn of course, but at least I can say for sure that Annette Pederson was as close to Jeeves' horn as a girl could be: until they both ran aground on each other, anyway.\n\nJeeves said: \"Thank you, Madam\" as he finished his work. Annette, typically American, made more noise than a speakeasy being raided and ended on a higher note than Louis Armstrong finishing off a bracket. Then Jeeves stepped back and smoothed out the wrinkles in his apron. I sincerely hoped he wasn't going to be still wearing it when he finally got around to cooking my breakfast.\n\n\"Well done indeed, Madam. You are a truly enjoyable partner. Now please go into the master bedroom with these two friends of mine and let them play at being your masters for a while.\"\n\nAnnette half turned and stared back at him as if he was the most marvelous thing she'd ever seen. Freddie Threepwood would have been pleased if he'd been there to see the excellent results of his advice, although I doubted if Annette would ever look at Westminster Abbey with the same expression of awed respect that she was directing at Jeeves.\n\n\"Jeeves, do the Chinese thing for me again, please -- pretty please . . .\"\n\n\"Not until you've fucked both of these stalwart lads to the extent they can't stand up. Then you can have it again, only even better than before.\"\n\nHer eyes lit up with delight. Here was a conundrum which baffled Bertram as much as the Times crossword had ever done. What is it that a millionaire's daughter needs so desperately and can't get elsewhere that she has to beg for it from Bertie's domestic staff? Not just sex, of course, so what was the magic ingredient?\n\nWhatever the answer, it had a galvanic effect on my guest. She stood up with remarkable energy, seized hold of Woodend and Chataway's jutting appendages and then walked backwards out of the bathroom, the two footmen putting their best feet forward with urgent necessity as she led them to the bedroom like a pair of greyhounds being paraded around the stadium before they were let off the leash. I noticed that Woodend's wig was already well askew and would probably fall off in the first lap.\n\n\"The Chinese thing, Jeeves? What is the woman talking about? Does she have some kind of a fetish for stroking my Ming vase?\"\n\n\"No, sir. Madam was referring to my demonstration of a certain technique of using my fingers inside her body whilst applying my tongue to her clitoris. The method was developed in the Forbidden City of China as the ultimate source of satisfaction for the female nervous system and practitioners of the art were often granted secret access to the Empress of the day and her ladies.\"\n\n\"Huh. . .\" Bertie was well and truly stumped. \"That's a useful thing to know Jeeves. Does it have a name, this hmmmm . . . technique?\"\n\n\"Certainly, sir. The Chinese know it as 'Pan-chiu hu-t'ung wei-hua p'i-p'a', which roughly translates as 'The making of a woman's heavenly thunderstorm of inner delight'.\"\n\n\"Really? Have you . . . have you ever been to China, Jeeves?\"\n\n\"No, sir, I have not had that pleasure. But I was once in service as Under Butler at Seend Palace, the residence of His Grace the Bishop of Ching and Wye. And His Grace has spent many years in the East as a missionary.\"\n\n\"The Bishop taught you about this heavenly thunderstorm business?\" It was my morning for asking stupid questions.\n\n\"Certainly not, sir,\" Jeeves replied in a dignified rebuttal quite remarkable for a man wearing only an apron. \"But His Grace was kind enough to provide practical demonstrations of the technique to the Head House Maid, the Head Still Room Maid, two upstairs maids, one nursery maid, one scullery maid and the resident Governess. And they, in turn, were kind enough to teach me how to achieve the same ends with their own nerve ends.\"\n\n\"Bless my soul,\" I said, astonished. \"Always a seeker after knowledge, hey, Jeeves?\"\n\n\"One tries, sir, one tries.\"\n\n\"Dash it, Jeeves, remember that business at Twing Hall, the Great Sermon Handicap? If the Bishop had been speaking on his favorite subject he could have cantered in while all the other clergy had long since de-banned and gone into the clubhouse, and still not a muscle would have twitched in the congregation. Spell-binding stuff, what? Especially with a Sunday afternoon at hand to allow time to try out a little laying on of hands before a general laying.\"\n\n\"An interesting thought, sir, although I fear the ecclesiastical authorities might be a little prurient about broaching such matters with the laity. Would you like to take a bath now, sir? And perhaps a fresh pot of tea would be in order?\" \n\n\"An excellent idea, Jeeves. Away you go and infuse the tea leaves until your trained senses tell you that the brew has infused enough.\"\n\nHe left, I undressed and slid into the still steaming bath. I didn't care who'd used it before, nor did I pay more than minor attention to the grunts, groans, feminine cries and creaking bedsprings echoing across the hall. For Bertie had much to think about: perhaps the greatest mystery in life had been solved, which was, of course, how come there are so many totally ugly and totally awful men who seemed to have total control over so many woman?\n\nNow perhaps I understood why. Perhaps there was a club of privileged males who had been made privy to this woman shaking secret and were able to make themselves known to the distaff side of society by some mysterious means. Perhaps it was all done by handshakes, like the Freemasons, with every woman knowing the secret existed and just waiting with repressed eagerness until some Eastern trained adept arrived in her circle and made himself known.\n\nMmmm, put that way it didn't sound very likely. I would need to consult Jeeves on the matter. And it was at that moment, thinking of nerve shattering thunderstorms, that a nerve shattering thought crossed my mind like lightning flickering across the accursed heath and illuminating the witches -- well, one witch at least. For I'd seen the look in Annette Pederson's eyes when she'd demanded that Jeeves work his magic manipulation on her again: if it had been Freddie's alternative sightseeing destination she'd been gazing at instead of Jeeves I'd be harboring great fears about seeing the whole edifice eventually shipped out to California in large crates labeled: \"Westminster Abbey -- fragile -- this way up.\" But she'd been looking at Jeeves, not the Abbey, and Jeeves might be a lot easier to transship to the orange groves of the West Coast than a cathedral.\n\nNo, the old Wooster brain box might not be the deliver of Nobel Prize type insights, but even it could see that there was every sign of a sudden takeover raid being launched against the majority shareholder in Jeeves incorporated, i.e. the young master himself, Bertie. As I moodily plied the sponge around my trembling torso I found my thoughts turning to Lord Bittlesham. When that elderly peer had found himself liable to lose his much treasured cook to a higher bidder he'd taken the drastic but effective counter-attack of marrying her. A capital notion, but I could hardly keep Jeeves out of Annette's claws by marrying him. Not even at the Drones Club could I get away with that. Nor could I hope to win any kind of financial bidding duel with a girl who had access to the Pederson family purse. No, if Annette was determined to take Jeeves away and if he had any weaknesses at all she would find a way to exploit them until his steamer trunk had San Francisco labels stuck all over it.\n\nThen it suddenly occurred to me that if only Jeeves could be induced to teach his Chinese chicanery to some other chap then Annette could take the other chap back to California instead and everything would be tickety boo again. But was there anybody I knew who would be a cad enough to want to learn such dirty tricks and then to use them to play the gigolo for a domineering American female? Was there anybody from the old school so low down, so lacking in moral fiber, so desperate for money that he'd even consider doing such a despicable thing?\n\n\"Jeeves,\" I shouted. I needed to because Woodend and Chataway seemed to be doing something complicated with a Annette in the bedroom which involved a three way lift, lots of grunts and some vaguely hydraulic sounds.\n\n\"Sir.\"\n\nHe'd done it again, materializing out of nowhere. But at least he was properly dressed again.\n\n\"Jeeves, consult the telephone directory and lay it down next to the instrument.\"\n\n\"Sir. And am I looking for any particular name, sir?\"\n\n\"Ukridge\", I said smugly. \"Stanley Featherstonehaugh Ukridge.\"\n\nThe End"
    ],
    "authorname": "shawalphamale",
    "tags": [
        "streets london",
        "deep waters",
        "bertie",
        "underneath coat",
        "bertram",
        "sir madam",
        "wearing pants",
        "buy dress",
        "full height",
        "young master"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/oh-jeeves"
}