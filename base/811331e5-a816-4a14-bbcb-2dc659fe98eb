{
    "title": "Dark as Daylight Ch. 17",
    "pages": [
        "\"I have sworn upon the altar of God eternal hostility against every form of tyranny against the mind of man. Thomas Jefferson\n\nATTENTION: All persons appearing in this novel are above the age of 18, except those who are specifically named, and are below the age of 18. Those children, who are under age, will not engage in anything close to being sexual, as per the rules of this site. I have also been reminded to tell you, although I can't for the life of me think of why; that this is a work of FICTION, and any resemblance to people, places, and/or things this story may evoke in your imagination is illusory. Please remember this is a Novel, and this STORY is Fictitious by nature, and design.\n\nI hope this covers all the bases required, and straightens everything out for those who asked for this edification on this subject.\n\nBob- Prolonged/Debut10\n\n63. A Pearl of Great Price\n\n\"Big Captain, can we take a ride into space tomorrow, so we can catch some 'Dark Energy'?\"\n\nMonty's eyes dilated. She shook her head, while looking at the beautiful, blossoming redhead who stood before her.\n\n\"One second Teddy, Brendan is still nursing. I'll answer your question as soon as he's done.\"\n\n\"Thank you, big captain.\"\n\nA few moments later Monty covered Brendan's ears, and yelled, \"Delicious, get over here.\"\n\n\"This doesn't sound good, Gray. You better come with me. Teddy is with Monty looking very innocent.\"\n\n\"I can't get out of this, can I?\"\n\n\"Do you really want me to answer you?\"\n\n\"No, I know the answer, because we've been married so long. Let's go.\"\n\n*************************\n\n\"How much trouble are you in, Teddy?\"\n\n\"I'm not in trouble, mommy. I just asked big captain a question, and she called you here.\"\n\n\"Repeat your question to your mother, Teddy. If she says it's okay, we can do it tomorrow morning.\"\n\n\"Yes, big captain, because all I need is a thick radiation proof jar, with a sealable lid. Easy!\"\n\n\"I'm already afraid to hear this question, Gray. It sounds like she's ready to split the atom.\"\n\n\"No mommy, I don't want to split the atom. They've done that already. I want to catch 'Dark Energy' to power your new engine.\"\n\nGray grabbed Delicious just before her knees hit the ground.\n\nMonty said, \"That's what I thought your reaction would be. I'm glad I was sitting down when she asked me that question.\"\n\nHer father said, \"Teddy, it is impossible to catch 'Dark Matter', or 'Dark Energy'. They are both theoretical sub-atomic particles, and nothing can hold them.\"\n\n\"I don't mean to be snobby, or sound smarter than you, daddy, but you are wrong. Tatum, Truman, and I have it all worked out. I'm going to show my science work to Gordon, because I know he will be proud that I finished it. I need him to go outside the spaceship to do the spacewalk for us. I didn't think you will let me do it, even though it's very easy work.\"\n\nMonty replied, \"Oh yes, you are quite right about that Teddy. If we do this idiot stunt of yours; Gordon will go outside. That way, if he annoys me, I can close the ramp, and leave him out there forever.\"\n\nIn as much of a huff, as Teddy ever displayed, she said, \"It is not an 'idiot stunt' captain, and I resent that reference. It is simple science. I'm 13 years old. I know the difference between a scientific experiment, and a circus act.\"\n\n\"Oh, my God, I've just been told off by your little girl. I think she's growing up.\"\n\nDelicious replied, \"She's going to try to catch 'Dark Energy' in a jar. It's not possible to do. Every scientific principle I was ever taught by my father tells me it's impossible. When someone told my father, something was impossible, he smiled, because he knew he could do it. Teddy, what are we going to do with the 'Dark Energy?\"\n\n\"I just told you, mommy, weren't you listening to me? You haven't used the scientific portion of your brain in a long tine. It is time for you to make the new engine, and you will use the 'Dark Energy' we catch tomorrow as its power source. You are going to use the proton antimatter to make us go so fast, no one is going to be able to keep up with us, not even the Good Luck 2, with its four nuclear engines.\"\n\n\"Where am I supposed to get 'proton antimatter'? I can't just walk into C.E.R.N. and borrow some.\"\n\nTeddy smiled at her mother and said, \"Mommy!\"\n\nDelicious stared at Teddy, and put her mind in gear.\n\nGray smiled, and nudged her with his elbow. She couldn't understand why.\n\nTeddy handed Brendan to Jackson, and began walking in baby steps towards her mother. Very slowly she closed the distance. Agonizingly slowly, she closed the distance, until they were almost nose to nose.\n\nGray elbowed Delicious harder this time, until she barked at him \"What!\"\n\n\"Think, dammit, you know the answer.\"\n\nShe looked up at him, and then at her daughter. She shouted at Gray, \"If you're so damn smart, you tell me where I'm supposed to get...\"\n\n\"Oh... 'Dammit Teddy I'm going to have to put my nose in the corner', fuck!\" She shouted. \"It's as plain as the nose on my face. Why didn't I see it before? Of course, that's what you do to get the proton antimatter. The 'Negative Magnets' that are going to keep the 'Dark Energy,' from escaping the capsule, and reduce it to 'Dark Matter', are going to produce the 'Proton Antimatter.' The continuous fight between the two entities is never ending, and while they are fighting they produce the third as a bi-product. How stupid can I be? Don't you dare answer that Grayson.\"\n\n\"One hour, you pray, but not have to put nose in corner mommy. You can pray in the chapel with Tatum, Lane, Lynn, and me.\"\n\n\"Why not Truman?\"\n\n\"I'm working on him. He is a hard nut to crack; just like my mommy.\"\n\n\"I'm going to kill my mother.\"\n\n\"Grandma didn't tell me, grandpa did.\"\n\n\"They deserved each other.\"\n\n\"Here come Tatum and Truman, now. You are going to love hearing about their discovery. While I was working on my project, they were in the science lab working on a different project. If you stay true to form, mommy, I know the name of my new little brother. They discovered something that is going to rock your world, and make daddy grab what is left of his hair.\"\n\n\"Delicious, I want to go home.\"\n\n\"Please take me with you. My kids are so much smarter than I am, they are not going to need us to make the new engine.\"\n\n\"Gordon has been telling you that this was going to be your fate for nine years. Now, it's finally in your face. I hope you enjoy it, because you have Lynn, and Lane coming up behind Tatum and Truman very rapidly.\"\n\nDelicious whipped her head around to look at Monty. Her face turned red, and her mouth opened. She was about to shout something profane, which would have put her nose in the corner for a week, when Gray's calming hand covered her mouth. He pulled her body against his, and whispered gently, \"1010, 1009, 1008... 1000. Are we okay now?\"\n\n\"Mommy doesn't have to put her nose in the corner, and pray, like she used to, thanks to you daddy.\"\n\n\"I've been very good, Teddy. Exceptionally good. You should be very proud of me.\"\n\nTeddy walked over to her mother, and hugged her.\n\n\"I am very proud of you, mom. You've come a long way since I was 3 years old, and started training you. God is not angry with you anymore. You still must continue praying, because this time you are carrying a boy. He will be the smartest of us all.\"\n\nDelicious hit Gray viciously. She screamed, \"You got me pregnant, again?\"\n\n\"It had to be a joint project, dear. I didn't do it alone. He will be number 7, and that is going to be last of our kids.\"\n\n\"He is our last one Teddy, right?\"\n\n\"That's what grandma told me, when I was 3.\"\n\n\"Did you notice she said that without hint of hesitation. She remembers it as if it was yesterday.\"\n\n\"I don't forget anything mommy; anything, ever, just like you.\"\n\n\"She is just like me and Gordon. She is totally photographic.\"\n\nGray said, \"I had to study like a beast at Penn to get my grades. My children are being home schooled, and they are going to be 1000 times smarter than I am. How the hell are we supposed to teach them, when by the time they are 10 years old, they are 1000 times smarter than we are?\"\n\n\"Why are you two complaining? That's what this adventure is all about. We took people who were mainly in their late 20's and 30's, and who excelled in their fields. What did you expect them to breed; idiots? We are not looking for a super human race. We are just looking for people who want to continue this exploration, and one day maybe want to return to our home planet, and tell them what we've seen, done, and especially, what we've learned. You two should be as proud as peacocks. I know damn well, I am. This little bundle would not be here, if I hadn't joined this Intrepid group.\"\n\nTeddy asked, \"Can we go flying tomorrow?\"\n\nDelicious responded, \"If you say we can catch 'Dark Energy', I say let's give it a go.\"\n\n\"Your mother said it's okay, and I said we would do it, if she approved it. Tomorrow morning at 1000 hours, we will depart. How long will you need us to stay up, Teddy?\"\n\n\"We need to get far away from the planets magnetic interference, and then maintain three times lightspeed for about 10 minutes. If Gordon can do as I ask him to do, we will be finished after that, and return home.\"\n\n\"Where is he today? As a matter of fact, I haven't seen him around a lot lately. Since our friend's spaceship departed, it's like they took his toy chest away.\"\n\n\"Him, you should see what Newton looks like. He walks around with a permanent scrowl on his face. He even decided it was okay for him to go into the bowels of the ship, with Adam, to learn how to become a plumber, because he was desperately looking for something new to learn.\n\nWhen I heard about it I laughed. It turned out that Adam is one fine teacher. Newton believed that plumbing was very far beneath him. It was simple flow mechanics, and all you had to know was the way the water went. What he forgot was water doesn't flow the way it's supposed to in a vacuum.\n\nAdam realized Newton wasn't taking his lessons seriously, and when he knew my son was not paying attention to what he was trying to teach him, he would skip, or change the order of the way a process was supposed to be done.\n\nAdam would ask him, \"Do you have that series down pat, Newton?\"\n\nNewton would say something like, \"After a week on the job, a trained monkey could do this stuff.\"\n\n\"Okay, you do the four valves on the right, and I will do the four on the left. Go slowly, I am an experienced plumber, and this is not a race.\"\n\nNewton floated to the first 12-inch valve, as Adam flew as far away from him as he could. As soon as my boy opened, what he thought was the correct valve, and released the seal, three days of excrement gushed out from the pipe, and poured out onto my poor son's face and body.\"\n\n\"Adam told us afterwards that he didn't realize a 21-year old boy knew that many curse words. He even learned some new ones himself.\"\n\nGray said, \"I can't imagine where he learned those words from?\"\n\nDelicious flinched, and turned towards him, but before she could say anything Teddy said, \"Daddy, be nice.\"\n\nDelicious was astounded. \n\n\"Teddy, you stood up for me. I think that's the first time you've ever done it. Thank you, thank you so very much.\"\n\n\"You have been very good mommy, there was no reason for daddy to pick on you.\"\n\n\"Monty, I think my daughter just told me off.\"\n\n\"Welcome to the club, Gray!\"\n\n\"Where was I, oh yes. Newton has gone home to Elizabeth, more than once, with tales of having crap flushed onto his face, because he did something in the wrong progression. What he hates worse is when the female plumbers are with him. They are fully qualified, and they are showing him up, while they are showing him around. They float effortlessly, like mermaids, around down there. They make it look so easy, getting between the pipes, and around impossible corners, or bends, because there is no gravity in those access areas. He has more bumps and bruises on his body now, than he ever had, when he was working out against Gordon.\"\n\n\"I repeat my question, where has Gordon been?\"\n\nTeddy smiled, \"Zoey is pregnant.\"\n\n\"Oh God, we will never see him.\"\n\n\"I need him for tomorrow. I must talk to him today to tell him what he must do. What should I do, mommy?\"\n\nMonty said, \"I will handle it, Teddy. Hold Brendan for me, please?\"\n\n\"Absolutely, big Captain; he is going to grow up to be very tall, and very handsome.\"\n\n\"Thank you, Teddy.\"\n\nShe opened her communicator, and authoritatively said, \"Attention: there will be an emergency meeting of senior staff members in the meeting room in one hour. It is imperative that all members be there. Anyone missing this meeting will be in the brig for one week. I repeat in the brig for one week, with no conjugal visits.\"\n\n\"Big Captain, you told a lie.\"\n\n\"I did not tell a lie. You are coming with me, and your parents to this meeting. You are going to explain to everyone what we are doing tomorrow. You will tell Gordon what he must do, and show him the math, and science to make sure it is correct. I'm not sure why you are showing it to him, when your mother is the math genius. After that is completed, we will put our minds together to figure out a way to fabricate a radiation proof jar, to your specifications, to catch this 'Dark Matter/Dark Energy' and keep it there, until your mother finishes her new engine, which will make us go very fast. Just make sure, we don't go so fast, the ship breaks apart, and we wind up floating in space.\"\n\n\"Big captain, I don't believe God would give me the brains She did to discover a way to collect Dark Energy, and put it to use in a way that would only destroy us all. I believe She wants us to explore Her magnificent creation, and meet more of the people she has placed around it.\"\n\n\"Delicious, I believe she just did it again. In the span of 10 minutes; your 13-year-old daughter has told me off twice. I don't think I like it.\"\n\n\"I think my father's genes are beginning to wake up inside her. I think we should all run for the hills now.\"\n\n\"I knew I didn't like him for a reason.\"\n\n\"You told another lie, big captain. You liked my grandfather very much. He loved, and respected you, as much as he did every member of our family.\"\n\n\"It is your father coming out in her. I can hear his voice. I can hear him laughing at me.\"\n\n\"It's like giving you Gordon, when he was three years old, wasn't enough punishment for you to bear. Now you have Teddy, as she is about to blossom into her teenage years.\"\n\n\"I think when the ship leaves to go to new places and see new things, I'm going to stay here.\"\n\n\"You can't do that, big captain. Grandpa told Callie that our ship doesn't leave for another planet, without you in command of it.\"\n\n\"I caught you! I caught Teddy in a lie.\"\n\nDelicious said, \"Monty, you have a problem. Teddy doesn't lie. She never ever lies. You can ask Callie if what Teddy said is true or not, because the computer cannot lie. You are stuck with our ship, and our company, until the day God takes you from us.\"\n\n\"I hate your father, Delicious. I hate your grandfather, Teddy. I hate this spacecraft.\"\n\nTeddy said, \"I guess you must not like this little guy either, big captain. The only reason he's here is because of my grandfather and the spaceship he helped create.\"\n\n\"Don't forget me, Teddy; I had something to do with him.\"\n\n\"Hello Mr. Oberlin.\"\n\nHe looked down at his baby, and went to kiss Monty.\n\n\"Are we discussing world affairs?\"\n\nMonty replied, \"We are taking the ship out again tomorrow. Tomorrow is not a training flight; it is to catch 'Dark Energy'. Teddy also told her mother she's been at rest too long, and it's time for her to develop a new engine to put 'Dark Energy' to use. When the Good Luck 2 gets here and we've said hello to everyone, we will decide where to go for our next adventure. We will beat them there, isn't that correct, Delicious?\"\n\n\"There's nothing like putting a little pressure on me, is there? They could be here tomorrow for all we know?\"\n\n\"Gordon said they would not be here for two years, maybe a little less. Get your act in gear, girl. You can have your husband help you, if he doesn't get in your way, and stops playing with your ass.\"\n\n\"Just think Gray, we have a 13-year-old, who tells everyone off, politely, and has decided to have my brother catch 'Dark Energy' tomorrow. I am sure we are going to learn the secret of taking plasma directly from a star, and putting it to use to transport us from one end of the universe to the other instantaneously. Then there is this one in my stomach, who Teddy says is the smartest one of us all. What are our first six children going to leave for him to discover?\"\n\n\"How about transmuting matter?\"\n\nHe ducked just in time to miss the right cross that passed over his head.\n\n\"You promised not to do that.\"\n\n\"I know, trust me I know, but you so deserve it.\"\n\n\"Mom, can I talk now?\"\n\n\"What are we going to talk about Truman?\"\n\n\"The stuff you were helping me with the other day.\"\n\n\"That sounds safe enough, doesn't it Gray?\"\n\n\"I guess we'll find out, won't we? What's up sport? Should I pull up a chair for your mother and me?\"\n\n\"It might be a good idea, dad. Mom was the one that proved that Mr. Newton was wrong, I just found out another old-timer was wrong.\"\n\nDelicious yelled, \"Chairs, Gray, quick before there is a pregnant lady on the floor.\"\n\nGray pulled over two newly made wooden chairs. Teddy sat down, with Brendan, and Jackson sat alongside Monty. They all waited for Truman's expose'.\n\n\"Who did you find out was wrong, and can you prove it in a double-blind test?\"\n\n\"Unlike you mom, where you could prove Mr. Newton was incorrect by floating chairs around in the basement of grandpa's house, my discovery was much harder to discern, but right up your mathematical alley. Edwin Hubble's 'Constant' is wrong.\"\n\nDelicious didn't scream the loudest, although she did scream. Gray's scream would have shattered diamonds. The only thing it didn't do was wake up Brendan.\n\n\"Not Happening my son! Every measurement of a celestial body is based upon Hubble's Constant. (H0) Every measurement ever taken from Earth is dependent upon it. It's not possible for it to be wrong. Laser measurements from earth have proved that the moon is the exact distance Hubble said it would be mathematically. All our calculations on the distance to this planet were correct. As you said Truman, math is your mother's strong point. She doesn't need Callie to tell her what the measurements are between planets, or the cooking time for a cake made from scratch. Your mother is a genius, and you'd better remember that.\"\n\n\"We flew all over four quadrants of the sky before we arrived here, at Atwater Luck. It's not hubris, and I'm sorry, but Tatum and I agree. The 'Constant' is wrong, and we can, and with your approval, we will prove it to you, and anyone else who wants to observe us. \n\nWe spent hours in the astronomy lab taking measurements, and watching stars move over hours, and days. The reason the astrophysicists realized the universe was expanding at a much faster rate than they believed, was because they were using Mr. Hubble's 'Constant'. If you are using a figure that is too low, (Ho), to begin with, and you finally have equipment to see out to the edges of our universe, you are amazed at the speed it is expanding. You return to the beginning, and rework everything from the moment of the 'Big Bang.' You work your numbers, until they match what you see happening in space, and you screw up everything. Tatum, and I corrected that.\"\n\n\"Let me see your paperwork.\"\n\n\"Here, I made two copies, so you could follow along. Hubble said he watched stars move over months of observation. Now, we can use lasers to fractionalize the hydrogen, and helium that stars are emitting as they are moving away from the center of our universe at almost the speed of light. Using our advanced equipment, we didn't have to waste months to see how far a star was, and how fast it's moving away from us. We did it in hours, or in a day, if we wanted to waste time. We used the hydrogen stars let out, and split them into a red shift, which becomes unambiguous as to a distance measurement. This gives us a recessional velocity over a matter of hours, or days, rather than months or years.",
        "Hubble's constant was: Ho = 67.11 parsecs/per millisecond.\n\nThe new Constant is exactly: To = 74 parsecs/per millisecond. It is verifiable by any telescope on earth, and by any sentient being in the universe.\"\n\n\"I know this is going to bite me in the ass. No let me just say it. The 'T' is for Truman and Tatum?\"\n\n\"Of course, it is, mom.\"\n\nGray said, \"I hate myself.\"\n\nGordon laughed. \"I knew you would.\"\n\n\"What or who allowed you out of bed?\"\n\n\"I have a meeting to go to in 20 minutes, and when no one was at the meeting room I figured I would come outside to see where everyone was. Guess what; my family was having a meeting, and I decided to join in. I did a little work with the 'T's' on this Hubble project, and I knew they would nail it. I was waiting to see if my niece had finalized her project. She's been sneaking away from me lately, hiding behind corners, and playing shy. What's up my partner in crime, or am I still to be left in the dark?\"\n\n\"Oh yes, she is going to put you in the dark, all right, really in the dark. I may leave you out there.\"\n\n\"What's up cupcake? What do you have in store for me, because you know anything you ask of me, I will do.\"\n\n\"Will you walk outside the spaceship for me?\"\n\n\"Even without a space suit, if you want.\"\n\n\"You would die!\"\n\n\"I would die for you. I remember what you did for me. I owe you, and I will repay you with my life whenever you wish.\"\n\n\"I need you to catch 'Dark Energy' for me.\"\n\n\"No problem, when are we going?\"\n\nDelicious exploded. \"No Problem! Do you realize what she just asked you to do?\"\n\n\"Yes, I do, and I will do my best to catch 'Dark Energy', because I suspect she has a plan for me to do it. Don't you Teddy?\"\n\n\"Yes, I do, uncle Gordon, it's a very easy plan too. We will leave the planet and pick up speed until we are moving at 2 \u00bd to 3 times the speed of light. You will go outside the spacecraft, as far as you can, on the tether. You will have a closed radiation proof jar attached to your chest. Face the same direction we are going, and when you are ready, open the lid, wait 10 minutes, and close the jar. Then you can return to the ship. If all went properly, enough 'Dark Energy' will have compacted itself in the jar to power my mommy's newest engine.\"\n\n\"What new engine? Hello, I didn't know you working on a new engine?\"\n\n\"I just found out about it a few moments ago.\"\n\n\"If I can be of any help, just ask.\"\n\n\"Thank you, Gordon, all I have to do is get you way from Zoey.\"\n\n\"Who opened their big mouth? We haven't said a word to anyone.\"\n\n\"Don't bother Gordon, the cat is out of the bag. How far along is she?\"\n\n\"She is almost 4 months gone.\"\n\n\"I thought you lost weight.\"\n\n\"She is very tough keeping up with.\"\n\n\"Try eating more vegetables in the morning, and meat for lunch. According to Hannah, it's supposed to help keep weight stable.\"\n\n\"Look me in the eyes, sis; does my wife have company?\"\n\n\"Holy crap, do you have x-ray vision too?\"\n\n\"No, something odd is going on and I picked up on it.\"\n\n\"What was it, what gave it away?\"\n\n\"You have to promise me one thing before I tell you what it is. You can't stop doing it, and you can't hit anybody; especially that, you can't hit anybody.\"\n\n\"Okay Gordon, what gave it away?\"\n\n\"If you break your promise, every time I see you, I'm going to whack your behind so hard, you're going to scream. Do you understand, Delicious?\"\n\n\"Yes, I understand. Now tell me, what gave it away?\"\n\n\"It was very simple. You are holding Gray's hand, and stroking it softly.\"\n\nBefore she could move, and she really wanted to move, Tatum was sitting on her lap, Teddy was squeezing her left arm, and Gray had his hand down the back of her slacks, grabbing her ass.\n\nTatum said, \"Hi mommy, did Truman tell you about our discovery? Isn't it wonderful; now we are real scientists. Isn't that great mommy? Are you in there somewhere, mommy?\"\n\n\"Yes sweetheart, I am in here. Truman did tell me about your discovery. I am going to ask some of our senior scientists to verify it for me. I believe what he told us is true. It will just be another set of eyes verifying your work. It is done all the time on Earth, and probably throughout the universe. Honey why did you jump on my lap just now?\"\n\n\"I didn't want uncle Gordon to spank you again. You always get angry with him, and you are always wrong when it happens. He only told you the truth. Why do you get angry with him, when he tells you the truth?\"\n\n\"I don't know. I think it goes back to when he was a young boy, and hid from me at the dinner table. He would climb underneath it so I couldn't get to him. It was so frustrating. All I wanted to do was tickle him.\"\n\n\"Uncle Gordon is ticklish?\"\n\n\"Of course, he is. All you have to do is get behind his ears, and he will run away laughing like a tiny baby.\"\n\n\"Uncle Gordon, where is mommy ticklish?\"\n\nDelicious yelled, \"Don't you dare.\"\n\nHe replied with a big smile on his face, \"It only seems fair.\"\n\n\"I will put you in the jar, with the 'dark energy', and open it in a year to see who wins.\"\n\nMonty said, \"I hate to break up this family feud, but we have a meeting to attend in five minutes.\"\n\n\"You lucked out, Gordon.\"\n\n\"You can look at it that way, sis. Congratulations on the boy, by the way.\"\n\n\"Dammit, how did you know it's going to be a boy?\"\n\n\"Your mother said you were supposed to have seven children: four girls, and three boys. You have the four girls. It was not hard to figure out that this one was going to be a boy.\"\n\n\"Why do you always get me on the easy things. Sometimes I want to punch my own lights out, because you do that to me so often.\"\n\n\"Can I watch when you do it.\"\n\nThat was the last straw. She went after him like a missile with his name on it. He was running just fast enough to keep her 3 or 4 steps behind him. He kept taunting her as he took the stairs up to the third level, and charged into the conference room. He nearly ran over his mother, Janet, and Fred, who were already seated by the oval table.\n\nJennifer yelled, \"Are you two at it again?\"\n\n\"She's out of control mom. Her hormones are overflowing. She tried to beat up Gray, but he escaped by the hairs of his chinny chin chin. Her children are driving her crazy, because they are smarter, and faster than all of us old people. And to top it all off, she's pregnant with number seven.\"\n\nJennifer shouted, \"Thank goodness, this madness will finally end in a few months. How pregnant are you, Delicious?\"\n\n\"Mom, that's not fair. I only wanted 1, possibly 2 children. I wanted no part of 7.\"\n\n\"Look who you are talking to Missy, when you talking about having a brood of children. Look what your father put me through? After my 3rd, he asked me if I wanted him to have a vasectomy so I wouldn't have any more children. I told him I didn't want anymore, and he was such a wonderful, and caring husband, he had it done. I thought I was in the clear for the rest of my life. I should've known better. He cheats everyone, and by that, I mean he would have cheated God, if that was at all possible.\n\nEverything he did scientifically, he was told was impossible. He thrived on that word: Impossible. Give him an impossible deadline, and he'll meet it. Give him something that's not possible to do, and he'll do it. His children are following close behind him. \n\nThey are following in his footsteps. I don't have to tell you two what you've already done, because we wouldn't be here, on this planet, if you two hadn't done the impossible. We wind up with floating sofas in the basement, because of a 15-year-old girl living in Maine. A tiny television station, in Austin Texas, announces the invention of the ages. Atomic energy, with no waste products.\n\nA 16-year-old boy invents Nuclear Fusion, and gets grilled, live on television, by his father's former teacher at MIT. Isn't that wonderful for everyone involved, except for me, because I got pregnant again. The wonderful darling husband of mine that I adored, and fawned over had the vasectomy reversed, and he didn't bother telling me. I wound up having 3 more adorable children. Wasn't I lucky? \n\nIf I didn't love the bastard so much, I would have cut him to the quick. That weapon of his, oh God, I loved that weapon of his; I loved it so. I have a total of 7 children implanted in me by that wonderful tool.\n\nMy first child was given to me, while I was a young and tender 19-year-old college freshman, and I issued forth Gordon. I received six more geniuses from Dr. Even Luck; that no good cheating bastard. He never cheated on me, he never had a woman before me either. He swore he never had sex before he entered me. He told me he knew nothing about sex, but he read a lot about it. By the time he was finished with me, on our wedding afternoon, I had a permanent smile on my face, and I was bowlegged, and pregnant for life. No one can possibly be that big, without being surgically enhanced. After being with him for a while, I knew in my soul he probably did the surgery himself. \n\nAs I said, he cheats everyone. He cheats science, because he gets things done that are scientifically impossible. Ask any of his peers if the things he has made work can possibly work. If you get a yes as an answer, please let me know.\n\nHe cheated death, because he had his pilot crash their airplane into the trees, BACKWARDS, because of a joke I told him on our way to Anchorage, from Minneapolis. He is unscathed, but the pilot is seriously injured. He disassembles the airplane, builds a rickshaw out of the aircrafts parts and walked over 40 miles out of the cold dense Alaska wilderness straight up to my front door.\n\nWhile he was trying to keep the pilot alive, and waiting for rescue to arrive, he told me we were going to get married, and to be ready to leave for Denver the following morning. He didn't ask me if I wanted to get married to him, he told me. We only knew each other for the hours we were on the aircraft heading to Alaska, and I was impressed with him and his knowledge. I knew there was something between us, and I wanted to pursue it, but marriage was a big step. He was adamant. He told me we were getting married in no uncertain terms. He said he would wine me and dine me, when we got back to Denver, and I would love living where he lived, because his home was out in the middle of nowhere, just like my house in Alaska was. \n\nI guess I helped him cheat death that time, so I kept him, as long as I could, until that rotten bastard decided to vanish from our spacecraft, while we were in the middle of nowhere. \n\nI know exactly where he is now, and know he's going to be there until they destroy his computer chip. Now, he's trying to cheat a computer in a game of chess. Trust me, if it can be done, Dr. Even Luck will find a way to do it.\"\n\n\"Are you sure it's only 7 children, mom? If that smile on your face gets any larger, it's going to crack. Viggio is a very happy man, and rumor has it that he has taken up permanent residence in your apartment. Some mornings he's late for work, and we don't keep time schedules. I can't imagine why anyone could be that late? I'm going to have to keep Teddy away from you two. I don't want her to see what wyandotta has done to you.\"\n\n\"Monty, do plastic surgeons know how to wire jaws shut?\"\n\n\"I think that's one of their specialties, Jenn.\"\n\n\"Would someone please block the exit to this room, my son and I are going to have a parent/ child conference.\"\n\n\"Mom, do you remember the night you took me to Walgreens to buy me a pregnancy prevention item, and I fulfilled a life long wish of mine. It's been a very long time since that night, and it would be my privilege to do it again.\"\n\n\"I will get a gun, and I will not miss.\"\n\n\"It does not mean I will not get my wish.\"\n\n\"Before the entire Luck family gets into a brawl, this meeting is called to order. You are a little testy, Jennifer, are wedding bells in the air?\"\n\n\"Well, since his ship is gone, and we really don't know how to get to his star system, I guess you could say I have him by the nose.\"\n\n\"Are you sure, it is only, by the nose, mom?\"\n\n\"Delicious grab your brother as he comes by. I will kill him, when I get there.\"\n\n\"With pleasure, mother.\"\n\n\"I don't know why you're up in arms over my question, mom. I only wanted to find out how long I was going to have to wait to walk you down the aisle, with my new stepfather. You were the one that told me I was going to do it. Don't you remember?\"\n\n\"I remember, but did you have to be so crude, in the way you phrased your question?\"\n\n\"You should be happy I didn't ask if you were going to perform your wedding, according to the constitutional marriage rite of the Nasralvhrnec?\"\n\n\"Show off; there are only three people on this ship that can say the name of his home planet, and two of them are in this room. Viggio can say it, but I swear sometimes he doesn't say it properly. I am happy I can spell it properly.\"\n\n\"Thank goodness it doesn't have to be put on the wedding invitations. We are having the wedding here, aren't we, mother?\"\n\n\"I will let you know, when the time is right, my son.\"\n\n\"Aren't you interested in knowing about Viggo's wedding ceremony, mother?\"\n\n\"Does anyone in this room have a gun, or a long blade. I know I'm going to want to kill Gordon, after I say, 'Yes', to his question.\"\n\nEveryone in the room checked, but they knew beforehand they had nothing Jennifer could use to annihilate her son.\"\n\nDelicious said, \"I will kill him for you, mom.\"\n\n\"No, I want to kill him. I just need something to do it with.\"\n\nGray said, \"You could always swing Delicious at him. If their heads collide, that will kill them both.\"\n\nDelicious growled, \"And what about our baby, asshole?\"\n\n\"Mommy, you said a very bad word.\"\n\n\"Your father made me very angry. However, that was no excuse for my inappropriate verbal outburst. I'm sorry. I will go to the chapel later, and pray.\"\n\nMonty said, \"Teddy, look what you've done for your mother. I never thought I would see the day when she changed her ways. You were just a baby when you started in on her. It took you less than 10 years to make your mother change the way she uses language. \n\nNow, she is a completely different woman, because of your unflagging efforts. You are to be congratulated. If I had a medal to give you as a sign of excellence for doing such a magnificent job, I would do it in front of the entire crew. It would show them how well a job can be done, and should be done. Thank you, Teddy, thank you for giving us your mother, the way God intended her to be for us.\"\n\nNo one had ever talked to Teddy as if she was an adult, since her grandfather died. He always treated her as an equal, and she always tried to do her best work for him. She never let him down. She completed every task he gave her. Now, here she was 10 years later, and Monty was telling her the same thing. She felt..., she wasn't sure how she felt. Water was filling her eyes, until it finally overflowed their rims. Tears flowed down her cheeks, even though she didn't understand why she was crying.\n\nMonty moved to her side, and hugged her.\n\n\"You are supposed to be smiling, little captain. What I said honored you, and your persistence in training your mother to be a good parent, a great mother, and a fantastic wife. But most of all she has become a wonderful crewmate to all of us. All of this happened, because of your constant presence in her life. If it wasn't for you, your willingness to be with her for hours, instead of playing with your friends; and your willingness to lose at monopoly, knowing that she was cheating, who knows what would've happened to her.\"\n\n\"I never cheated at monopoly. I swear I never cheated.\"\n\nEveryone laughed at her outburst.\n\n\"I guess we will let that one go, Teddy. If it wasn't for you being beside her all the time, your mommy would not be with us today. She would have died of a broken heart, because she couldn't find the place in her heart where she was supposed to be happy. You brought her to that place Teddy. It was right here, but she didn't realize it. You would no longer be with us, either, and your daddy would only have Newton to watch over him. We all know how that would have gone, don't we Teddy?\"\n\n\"Yes, big captain, but I wouldn't do that to my daddy.\"\n\n\"Apparently, neither would your mother.\"\n\nEveryone laughed, until their sides hurt.\n\n*****************\n\nGordon said, \"I guess it's back to us now mom. Do you want to know what Yantal told me about their constitutional 'Primary Marriage Contract' or not? It does not make a hill of beans to me, if you want to know, or not. It's just a part of their history. I thought you might be interested in knowing about it, since you are going to be the 'First Homo-Sapiens/Human-Female' to Marry a/Nasralvhrnec/Male.' If I am correct, and I always am, you are also about 2, possibly 3 months pregnant.\"\n\nJennifer was irate. \"Tell me, tell me how you knew I was pregnant. I haven't told anyone, dammit. I haven't told him yet. How did you know, and don't you lie to me?\"\n\n\"Thank you for confirming my suspicions mother. I wasn't sure, one way or the other, but I took a good guess. You two have been screwing like bunnies, for the last 4 \u00bd months. I know you haven't been taking birth control pills since dad died, and he always said that he could walk past you, and get you pregnant.\"\n\n\"That bastard should thank the good Lord he's dead, because I would be fitting him into a stump grinder if he was here now.\"\n\n\"To continue, I had a discussion with five of our doctors, and there was nothing in our genome sequencing, or cell structures to stop conception, between our two species. As you told Monty last year, 'If you are going to play, you are going to pay'.\"\n\n\"I did not say that to Monty. It's what I meant, but I did not put it in those crass terms.\"\n\n\"I guess you don't want to know what Viggio's wedding ceremony would be like. As I said, it doesn't make a hill of beans to me.\"\n\n\"You must have a death wish. It must be so outrageous; I would want to kill you. So, my son, I am going to disappoint you. 'NO'; I don't want to know about the wedding ceremony. I would probably have to be naked when we were married, screw him during the reception; all while we were on a raised platform.\"\n\nGordon shouted, \"You knew. You knew all along, and you lead me on. Way to go mom, you finally played me for the sucker.\"\n\nJennifer shouted, \"I'm not only going to kill your father, because of the way he raised you. I'm going to kill you and him at the same time. No planet would have such outrageous rules of conduct. If they did, no man would have balls on their wedding night.\"\n\n\"Nasralvhrnec would be a lot of families, with only one child.\"\n\n\"Good, a woman would only have to go through one painful pregnancy during her lifetime.\"\n\nDelicious said, \"Gray, do you see what I mean darling; she may not be my birth mother, but I do get some of my temperament from her.\"\n\n\"You didn't need any help in that department dear. However, she did help you with your cooking. It took me a lot of years to work off the weight I put on, because of your wonderful meals.\"\n\n\"Thank you dear, you got out of that one gracefully. So, I'm not going to hit you.\"\n\n\"Good, that way I won't have to spank you, when we get home.\"\n\n\"Not even if I ask you to?\"\n\n\"Little ears dear, little ears.\"\n\n***********************\n\n\"Mom when dad left us, he put me in the position as 'Man of the Family.' I take that job seriously. I don't do the careless things I used to do, because I have people I must protect. I owe my life to someone, and I will be around, regardless of how old I am to repay that debt. Now, I told you how I knew you were pregnant, because dad gave me the cues he used to pick up on your pregnancies, and how to get the truth out of you, before you knew it.\"\n\nJennifer interrupted him.",
        "\"Your father never knew I was pregnant until I told him.\"\n\n\"Do you really believe that mom? Were any of us ever able to surprise or outwit dad? Why did the garbage cans in our bedrooms allow the refuse to go down into the basement, onto a small conveyor, and into one large receptacle to be compacted? Dad knew everything we were using in the house, because we threw the packaging away. It wasn't to make it easier for the cleaning crew to bundle it up, and carry to the street. It wasn't to keep them from searching through the house. It was to keep an eye on what we were doing, and what we weren't doing. He knew the day you took a pregnancy test to see if you were or weren't pregnant, because you threw the packaging away. If the little stick was blue, you were pregnant.\"\n\nJennifer screamed, \"Teddy, cover your ears.\"\n\n\"God still hears you.\"\n\n\"Damn you Teddy, I'm furious with your grandfather, and I can't scream at him the way I want to because of you.\"\n\n\"Yes, you can grandma; just use good words.\"\n\n\"I don't know why God just doesn't give you your wings now. You are such an angel.\"\n\n\"I'm not an angel, I do bad things sometimes.\"\n\n\"Baby, we have to sit down and talk. I want to hear what you consider bad things.\"\n\nJennifer mumbled, \"Even Luck read my mind. The next time we meet you are going to hurt so bad.\"\n\nJenny stood there, with her eyes closed, her arms rigid at her sides, and her body ramrod straight. If Even could hear what she was thinking, he would be running for the highest hills.\n\nGod knew what she was thinking, long before she thought it and the demerits were marked next to her name for inappropriate language. However, demerits were not put down for inappropriate thoughts. Even Luck deserved all those evil thoughts, because of his wry sense of humor.\n\n\"Free Will, I'm so pleased I gave it to them.\"\n\nJennifer said, \"So you are the 'Man of The Family'. You better be prepared to prove it. When you step outside the spacecraft to do Teddy's work, you better not fool around. You will do exactly what Teddy tells you to do, in the manner she tells you to do it, and nothing else. Then you will get your ass back into the spaceship, quickly and safety. Do you hear me, Gordon?\"\n\n\"Yes mother.\"\n\nJennifer said, \"No one move; no one say a word; do not make a sound.\"\n\nEveryone froze.\n\nJennifer got up from her seat and like a cat, stalked her way around the conference table. She stayed as close as possible to the walls as possible, but did not let the fabric of her clothing touch them. Everyone watched her, as she moved stealthily, and under complete control around the area. The room was eerily quiet. When she reached the area directly behind Gordon, she jumped away from the wall, grabbed him around the neck, and kissed him on top of his head.\n\nConfused, Monty asked, \"What the hell was that a\n\nall about?\"\n\n\"Monty, didn't you hear what my son said to me?\"\n\n\"Yes, we all did. He said, 'Yes Mother.'\"\n\n\"Exactly! Now think back many years and ask yourself what it would have taken to get those words out of my son's mouth, if my name was 'Even Luck?' Where would this discussion be heading now, if my hardheaded son would have given his normal answer. Wouldn't it have been: \n\nMother, I will do as I damn well please!\"\n\n\"Oh God, I am not going back to that day, ever again; even if I have to go into the brig myself, and take him with me.\"\n\n\"Uncle Gordon is not going into the brig, is he?\"\n\n\"No Teddy, but you remember when your uncle wanted to walk out into space, without a space suit, when you were three years old?\"\n\n\"Yes, I remember. He was not very smart that day. He had a tumor in his head, but it was not the reason he was acting like he was smarter than grandpa. Stubborn, like my mommy, daddy should spank him. Spank him hard like the day that he thought mommy lost her engagement ring.\"\n\nDelicious screamed. \"No! You couldn't know about that day. You weren't born yet. Your daddy and I weren't married the day he spanked me for almost losing the engagement ring. You couldn't know about it; you couldn't possibly know about what happened that night.\"\n\nShe turned and looked at Gordon, who was the only person, beside her and Gray, who knew about that incident.\n\n\"Gordon, did you tell her about that night?\"\n\n\"Sis, I would never tell her about something like that, not ever.\"\n\n\"Swear to me that you didn't tell her about that night.\"\n\n\"On my children.\"\n\n\"Teddy, how could you possibly know about the night I thought I lost my ring. You weren't born until nearly 8 years later. Daddy and I never talk about that night, and uncle Gordon just said he doesn't talk about it either. How could you possibly know about it?\"\n\n\"Easy, your mommy told me.\"\n\n\"I am going to kill that bitch! Doesn't she realize that some things are supposed to remain private.\"\n\n\"Mom, you are going to have to put your nose in the corner for one hour, and pray that grandma does not keep you up at night for many years to come. God is not happy with you either.\"\n\n\"At this moment, Teddy, I don't care if God is happy with me, or not. That was a part your father and my life that our children were never supposed to know about. I am not particularly happy that you know when your father and I are making love, but there is nothing I can do about it because of the confines of our spaceship. \n\nThe events of that night were supposed to remain very private between my husband-to-be and me. I did not loose my ring that night. My fianc\u00e9 and I were playing. We did not have sex, until the night we were married. We did many things before we were married. However, I made a promise to my mother, and myself, and I kept it. I swore I would not have sex, until I was at least 18 years old, and I was married. \n\nYou will never know how hard it was to keep that promise after I met your father, but we made it. I say we, because sometimes your dad was much stronger than I was. I am very angry that you know about that part of my past. I'm not angry with you, I'm angry that my mother had the gall to tell you about it.\"\n\n\"What are you going to do about God, mommy?\"\n\n\"I will take care of God in my own way, and in my own time, Teddy.\"\n\n\"God can stay angry longer than you can.\"\n\n\"I know, but I'm not putting my nose in the corner, for something my mother did, and it was wrong for her to tell you about it. God knows it was wrong for her to tell you about that night, and anything else she told you about your father and my private life. Parents deserve that distance from their children, and my mother should not have told you anything that infringed upon it.\"\n\n\"I agree with you, mommy. I don't tell you everything I do either. I think, maybe, we should talk about growing up.\"\n\n\"I would love to talk to you about growing up, Teddy. Tell me when you want to talk, and I will be with you for if you want, for as many days as you want to talk.\"\n\n\"I would like that a lot mommy. Maybe we can talk tomorrow, while we are in space.\"\n\n\"Do you two think we can continue with the meeting now?\"\n\nFred asked, \"Do you mean there really was a purpose for this meeting?\"\n\n\"Yes Fred, and don't mock me again, or you will be in the brig looking out from the wrong side of the bars.\"\n\n\"I think you are correct, senior captain, there must be something in the air. Everyone seems to be extremely touchy today.\"\n\n************************ \n\n\"What crew is on duty today, Monty?\"\n\n\"Are you asking me what crew am I going to put through the wringer today, Janet?\"\n\n\"I would never accuse you of tormenting a junior crew, senior captain.\"\n\n\"Well, since it is just idle chatter, it is one of my favorite crews, with one of my favorite captains. It is crew 6C.\"\n\n\"Are all the children staying on the ground, while you torture Mr. Cushing?\"\n\n\"How did you know I was going to put Mr. Cushing in command?\"\n\n\"You wouldn't miss an opportunity to pull on Mr. Cushing's chain, unless all four of your limbs were broken, your bowels were blocked, you were on a respirator, and in a deep coma.\"\n\n\"I don't know what's up with that man. He has all the attributes of a superior captain, yet he functions at a low level when he sitting in that chair. At every other position, he has had to learn, from engineering, to food service, he excels. Why at 'command level' does he shrink back.\"\n\n\"Have you had him speak to Hannah?\"\n\n\"No, I haven't. I didn't think it was necessary.\"\n\n\"Maybe you should rethink that decision.\"\n\n\"I will speak to Hannah about it, when we return from today's mission.\"\n\n\"I have to rake weeds, in our wild oats area, today. I will see you, when you return.\"\n\n\"Don't forget to wear your hat, I don't want to see you with a sunburn, again.\"\n\n\"Is that in order, captain?\"\n\n\"Does it have to be?\"\n\n\"I will consider it in order, because I don't want the pain I went through again.\"\n\n\"Good thinking, go to work.\"\n\n\"You just love giving orders.\"\n\n\"Who are you sewing your wild oats with?\"\n\n\"Have you been married so long you need to hear about my sex life to get your juices flowing?\"\n\n\"I wasn't sure if you had a sex life, until recently.\"\n\n\"Well I do, but I'm not sure it's going anywhere. I am getting up in age, so I may just get pregnant to have a baby, or two to keep me company, in my declining years.\"\n\n\"Declining years my ass. You're 40 years old, and you have a body that would stop traffic on Alpha Centauri B. Your only problem is you have limited access to the opposite sex here. When the Good Luck 2 gets here all that will change. There will be at least 500 more men for you to choose from, and they would be idiots to pass you bye.\"\n\n\"You're just saying that because it's true.\"\n\n\"Get out of here, and go sow your wild oats.\"\n\n\"With a great deal of pleasure I assure you, senior captain.\"\n\n***********************\n\n9:45 AM\n\n\"We have to give this new ore a name. We we can't keep calling it by different identities every time we speak of it, so let's decide on something specific to name it and stick with it. I found it, but I'm not naming it Gordon. Laura has been working with it the longest, and we are not naming it after her. Steven, you are the closest thing to a metallurgist we have; do you have any ideas?\"\n\n\"There is the problem, Gordon; it's heavy, but it's not a metal. It reacts like a metal, but it does not attract to a magnet like a metal would. I don't know how to classify it.\"\n\n\"Jack, how about you?\"\n\n\"Mercury flows like water, but it's not considered a liquid, and I don't think it qualifies as lead, even though it does have some of its qualities. \n\nThey use coolants for supercomputers that are viscous, and again they are not water-based. I think we have something that is in a clay family, but I have no way to prove it. I wouldn't name it based on that until I could.\"\n\n\"Delicious, you're very quiet.\"\n\n\"Why do we have to name it after anything specific. Drug manufacturers take the technical name for their product then give it to an advertising firm to come up with a name that the public will accept. Why don't we just do that?\"\n\n\"That sounds like a great idea. Give us a name.\"\n\n\"Thanks Gordon. How about 'LITELEAD'? We agree it's not a metal, and it's not water based. It's not malleable like clay. It does have a radioactive signature. It is impervious to x-rays at a thickness of 1/32nd of an inch, just like lead, but it's not as heavy. I think it's as good a name as any.\"\n\n\"All those in favor of calling our new rock 'Litelead', signify by saying aye. The eyes have it. Congratulations sis, you have named our first new member of the periodic table. We will give it the initials DT.\"\n\n\"Why DT?\"\n\n\"If your sons can change Hubble's constant from Ho to To, why can't we put 'Litelead' onto the periodic table under my sister's initials: DT.\"\n\n\"It's been a long time since you did something nice for me, Gordon. Thank you.\"\n\n\"I do nice things for you all the time Delicious, you just don't see them that way.\"\n\n\"Let's not argue, let's get back to work.\n\nJack said, \"We smelted enough 'Litelead' for several experiments. In the first one we increased the oxygen flow into the fire to get rid of the impurities in it. We poured it into a mold, 12 x 12 x 1/2\", and cooled it rapidly in water. After 10 minutes, we had Roger use his AR-15, from 30 feet, and had him unload the complete magazine into it rapidly. It didn't scratch the surface. The bullets were completely flattened. I don't know what we have found, but we have lots of the raw material to make anything we want with it. It has a low melting point, and to find out how high the failure point is after it is purified, we would have to use the nuclear engine. I'm not a fan of using it, because nothing I anticipate using this product to make would use that much heat. You can take that same ingot make something of it, melt it, and reform it into some other object, without any loss of density or properties. It may be perfect to use as the exterior vessel for your engine, Delicious, or to make the engine itself.\n\nIt's not a material like bauxite, which makes aluminum, because we do not have to add copper, and electricity to make it. I don't know what we have here, but they don't have it on earth. My suggestion is, 'If we can't use it now, take enough of it with us when we leave, just in case any occasion arises where we do, and we can have it on hand. When we leave, we must make sure we clean up every speck of it. Cover the area where we've mined it, and make sure the natural covering that was there takes over it completely before we leave. We must not leave one trace of this for any other people who come this way. We don't know who they may be, and if they will use it for good or for evil. I just want to make sure we don't lead them to it. If they find it, fine, but I don't want us to be responsible for their making this discovery.\"\n\n\"Excellent thinking Jack.\"\n\n\"Why did you show this to me now, Laura?\"\n\n\"I want to take this on the ship to see if it interferes with the magnetic engines. If it doesn't, we can make use of it to make all sorts of items for the ship. Jack will have a laundry list of things that he could make in engineering. Catering could finally have proper kitchen utensils, plus knives, forks, plates, pots, and pans, while we are waiting for the Good Luck 2 to get here.\"\n\n\"Delicious, it's up to you, they are your engines. Will you be able to tell if there is a distortion in your magnetic engines, caused by this one small piece of 'Litelead' before we crash?\"\n\n\"Yes captain, I believe my engines can take it.\"\n\n\"Good, I will have Mr. Cushing take us up to 1000 feet, and hover, while you check out your engines. If there's any problem, we will throw it out, before we retract the landing gear.\"\n\n\"That is an excellent precaution captain. Delicious, where would you like me to place this 'Litelead'?\"\n\nDelicious put her arm around Laura, and began walking up the stairs and into the ship.\n\n\"I have the perfect place for it. I know someone who is very familiar with the area. I think we should let him do it.\"\n\n\"That sounds logical, who is it?\"\n\n\"Adam! He should put it in the same pressure module, where he found the bomb, before we left Earth. If you want, we can attach tape to the back of it, and have him place it on the ceiling of the module. You can have him lay there for the three hours we will be in space, to make sure it stays in place. How does that sound to you?\"\n\nLaura grinned. \"Actually, it sounds like a lot of fun.\"\n\n\"You have an evil grin on your face, Laura.\"\n\n\"Adam and I weren't married the last time he was in that tube. We are now.\"\n\n\"You nasty girl you.\"\n\n\"I have learned a lot from him since we were married, and he never runs out of things to teach me.\"\n\n\"Yes, I've heard about your discussions with my sister-in-law's. You evil girls you!\"\n\n\"Have you ever...?\"\n\n\"No comment.\"\n\n\"You have six children, with one on the way, and you've never done that?\"\n\n\"If this gets out, I'm going to cut out your tongue, and remove your breasts.\"\n\n\"I promise.\"\n\n\"The subject has never come up. I don't know what I would say if he asked, and I have never brought up the subject to him. So, that's where it stands.\"\n\n\"You must be one hell of a lay.\"\n\n\"He is my only one. He had many others before me, but I was only 17 when we met. You know the rest.\"\n\n\"I was 24. You cannot believe the number of women who came up to him, while we were dating. They would openly ask him openly, in front of me, if we were in a monogamous relationship, or if she could borrow him for an evening, or if we could have a threesome. \n\nI could not believe my eyes, and ears, because some of these women were beyond beautiful. I didn't find out why he was in such demand, until after we were married. I knew what he could do with his hands, and mouth, because I had so many orgasms while we slept together, that they would run into one another. He could make me cum just by talking to me. He has a very evil mind, and the way he uses his body to pleasure mine is so much better.\n\nOn earth, we had a signal I would give him when he made me so hot and I couldn't take anymore. Even if we were eating dinner, reading, or resting; when he got me to the point where I was about to explode, I would scream, 'I need a shower.' \n\nHe could have a fork full of food at the entrance to his mouth, and he would drop it, and fly to the bathroom. I could be halfway there, and he would pass me to get it ready for us. I could have my way with him in any room in the house, but not in the shower. \n\nThe shower belonged to Adam. \n\nThe things he did to me in our shower would have relaxed the entire student body of an All-Female Catholic College, run by the Sisters of Perpetual Virtue, located on a private island, with no outside communications, and no batteries.\"\n\n\"Now that place sounds like hell on Earth.\"\n\n\"No ma'am, 'Our Shower Was Heaven On Earth.\"\n\n\"Now, not only am I pregnant, but I'm horny as hell.\"\n\n\"Isn't Grey coming with us?\"\n\n\"He sure as hell is now!\"\n\n\"I will make sure Adam is on board. As soon you tell me the 'square' of 'Litelead' is okay, or not, we are finished. Either it gets thrown overboard, or it gets placed safely away. There is no sense wasting three hours watching stars go by, when Adam can make some new ones for me.\"\n\n\"Isn't life grand.\"\n\nWistfully, Laura said, \"I wish I could talk with my mother. I would love to tell her how much I've I've grown, and matured. I don't think she ever believed it would happen to me, because I was always a loner. She would go crazy over Tiffany, and Dick. I guess that is the worst part of this trip, no communications with Home.\"\n\n\"Newton and Gordon are working on it. They haven't gotten very far, but it is a work in progress. Lightspeed isn't fast enough to get messages there, and receive a reply. The first message would have to be diagrams on how to make a transmitter and receiver to keep in contact. To test it, we would have to take the Good Luck out 100, 150 light years away and transmit a message here to it to see how long it takes to gets back here. If it takes more than three hours, it's not fast enough. It's good, but not good enough. It has to be instantaneous, like I am talking with you, now.\"\n\n\"As was said at our last meeting, your father loved being told it was impossible to do. Get to work Delicious. Get your brother, and your children to work on the project. They are the smartest people on this ship. Don't hold them back. Push them forward. Even your four-year-old's, put them to work, too. You never know what gems will come out of their mouths.\"\n\n\"You want me to go back to seeing Hannah every day, don't you?\"\n\n\"If that's what it takes to get that radio buzzing, and your new engine zipping us through space at WARP speed, do it. I don't care if you and Gordon are outside the spacecraft, square dancing, with no spacesuits on, while we are under attack by the Kardashians.\"",
        "\"I believe I'm starting not to like you, Laura.\"\n\n\"My trainer, and my best friend, George, told me he hated me when we parted company on Earth. We had been together for more than 20 years, and I trusted him more than anyone else in that world. I paid all my guys very well, and they protected me with their lives. I made them all millionaires on January 2, but I got even with George in a very big way. I made every one of his dreams come true. \n\nOver the years, you get comfortable speaking with your client, and we became fast friends. When he thought he was getting information out of me, he forgot I had a photographic memory. I retained everything he said. The more I gave him; the more he gave me. Every tidbit of information he gave me, I filed a way for later use. I never anticipated leaving the planet, but it was the perfect way to get even with him for all that he did for me, while I was trying to grow up.\n\nWhile I was lying in Adam's arms, on January 2, George was in my lawyer's office listening to a video of me tell him what was about to happen to his life. I could picture him sitting there wondering how I knew how to get him the exact type cattle, and those Spanish bulls. I gave him 1000 acres of prime land in eastern Oregon, at the confluence of two rivers, and mountains on the third side. I had my lawyer hire 20 experienced ranch hands, who he would pay for a period of two years, $200 million in investments, and cash, and an audiocassette of me that he had to listen to at the beginning and end of every day for one year.\n\nI simply said to him, \"Hello George, I hate you too! Then I laughed, a good hearty laugh, for about 20 seconds, and just before I turned off the machine I said, 'I do, George, I really hate you; just as much as you hated me' and hit the stop button.\" He probably tore apart my lawyer's office, when he heard me say that to him, because there wasn't a dam thing he could do about it.\"\n\n\"What makes you think George won't be on the Good Luck 2?\"\n\n\"He would have to be away from the ranch for 10 years or more. I'm not sure he would be willing to do that.\"\n\n\"George sounds a lot like my mother. My father finally was able to get her to go on a vacation, with him, away from our ranch, after we launched. I hope she enjoyed it.\"\n\n\"I heard she went on other trips, didn't she?\"\n\n\"Yes one, New Mexico. Friends of ours got married.\"\n\n\"Oh yes, I remember reading about it. The son married the adopted daughter. I swear, they should let your mother into the NSA building outside Omaha for one week. The Russians wouldn't have a working computer for the next century.\"\n\n\"Shit, my brother, sister, and I did that. We almost started the third world war, when we were kids.\"\n\n\"No shit!\"\n\n\"We are getting company; I'll tell you about it later.\"\n\n\"How old were you?\"\n\n\"Seven.\"\n\n\"No shit.\"\n\n\"Are you ready for your part of the test, Mrs. Thyme?\"\n\n\"How many times have I asked you to call me by my first name, Captain Cushing? Unless we are on board the ship and discipline is required, it is not necessary to be used on the outside while we are at leisure.\"\n\n\"It just doesn't seem proper. You are so much smarter than I am, and 90% of the crew, I believe it is a sign of respect, and deference that you are due, Delicious.\"\n\n\"Thank you, Harvey, but my Seven-Year-Old twins are now smarter than I am, and I'm not saying that in jest. You will learn about their discovery, while we are on this trip. Are you more comfortable in the captain's chair yet?\"\n\n\"I don't believe I was cut out for a position of command. I liked my anonymity. I liked my telescopes, computers, and radar maps. They always gave me time to make my own observations. In a collegial atmosphere, my other scientists and I could make decisions to the best of our ability. It was not just me making that decision, it was a joint decision, and usually we were right on the money.\"\n\n\"Harvey, may I remind you of your actions as we were flying towards the Sagittarius 'A' Star, and what would have happened to us if you had not had the courage to come forward and report to Captain Jamison what was going on in the science section?\"\n\n\"My actions were caused by my wife's over active mouth, Delicious. I would not have volunteered any of that information, if she had not been on the bridge badgering me to tell the senior captain of the working conditions in the science section.\"\n\n\"Captain Cushing, my husband will attest to the fact that behind every brilliant man, there is a strong woman, pushing him along his way to greatness.\"\n\n\"She speaks the truth Harvey, just look at Grayson. There was a magnificent engineer at the top of his game at NASA, until she came along. He quit his job almost immediately to help build this magnificent ship, and along the way give her seven children. It was a tough job both ways, but he has survived so far. Delicious, you better control your mouth, little ears are with me.\"\n\n\"I saw my daughter standing beside you, and I was not going to say anything I would not say in church. What you said is true, and Gray could not be happier if he wanted to be. Isn't that correct, dear?\"\n\nAs Gray passed Gordon, he smacked him, and continued to Delicious' side, to kiss her.\n\n\"What the hell was that for?\"\n\n\"You are absolutely correct dear; I am the happiest man on this planet.\"\n\n\"Do you see what I mean, Gordon? My husband is not only brilliant; he is smart also.\"\n\n\"I understand Delicious, and you are forgiven for hitting me, Gray.\"\n\n\"That is mighty nice of you, Gordon. If you didn't forgive me, I would have had to check out a gun from the armory to shoot you in the foot.\"\n\nTeddy said, \"God would not be happy with you, daddy.\"\n\n\"Would God be happy with uncle Gordon, after he beat me up to with in a fraction of my life?\"\n\n\"Uncle Gordon would not do that to you. He would only beat you up enough to get mommy upset. That's when he has fun with her. When he finishes with mommy, she goes to sleep, and wakes up refreshed. She's able to think clearly, and ready to go to work. Uncle Gordon knows how to push every one of mommy's buttons, and he enjoys doing it.\"\n\nGray laughed, which was the wrong thing to do. Delicious was on his back hitting him on his head and shoulders.\n\nTeddy was about to scream at her, but she saw her uncle Gordon sneaking around behind them.\n\nWhen he was in position, he said to Teddy, \"Get your mother's attention, and have her count down from three. 3-2-1-0. Okay?\"\n\n\"This is going to be fun uncle Gordon?\"\n\n\"Yes, it is, Teddy.\"\n\nTeddy yelled so loud Delicious heard her and stopped hitting Gray immediately. She didn't get off him, but she did stop hitting him.\n\n\"Mommy, try this, 3,2,1,0.\"\n\n\"He deserves a beating Teddy, but I'll try it anyway. 3, 2, 1, 0.\"\n\n\"Thank you, mommy.\"\n\n\"For what, Teddy?\"\n\n\"This!\"\n\nSSMMAAACCCKKKKK!!!\n\nDelicious ass hurt so much all cognizant thought left her, and she had to attend to it. Her hands left Gray's neck and reached for her bottom to comfort it. The tension in her legs that were wrapped around his middle melted away, and she began falling backwards.\n\nUnder normal circumstances, Gordon would have let her fall to the floor, and receive another indignity, but this was not one of those times. She was pregnant, and as she left Gray's body, he cradled her in his arms and laid her on the floor.\n\n\"I told you to be good to your husband, and you weren't. You received a smack because of it, and by your reaction, I take it it hurt. Do you want to try for a second, sis?\"\n\nLike lightning, her hands went from her ass toward his throat, but by the time they got there, he wasn't. She was in the air turning over, and on her way down, when she received the second smack he promised. It wasn't as hard as the first one, but it's still made her howl in pain.\n\n\"You cock sucking son of the bitch. I'm going to get you for that.\"\n\n\"Mommy, nose in corner for two hours, and pray hard, very hard. Your language is moving backwards, and I don't like it. What if Tatum had heard you say that?\"\n\nDelicious got up and charged into the spacecraft after her brother. She shouted, \"2 hours, it wasn't that bad, was It?\"\n\n\"2 hours mommy, and I will be at your side every minute of it.\"\n\n\"I'm going to murder my brother when I find him.\"\n\n********************\n\nGray knelt next to his daughter and asked, \"Do you know what the words mommy said means, Teddy?\"\n\n\"Yes, daddy, I know what the words mean, and what the act involves. When I was very young, and slept in my crib, I remember seeing mommy doing it with you many times. I am confused. You both seemed to enjoy it very much. I don't understand why mommy would wish something so pleasurable on uncle Gordon, when she is so very angry with him?\"\n\n\"Honey, you know words can have more than one meaning, and they can be used to heap praise on a person, or to denigrate him or her. Believe me, your mother was not wishing anything pleasurable on your uncle when she said that to him.\"\n\n\"Thanks daddy, now at least I know mommy was running true to form.\"\n\n\"What do you mean Teddy?\"\n\n\"Save your energy today, daddy. I'll keep Tatum, Truman, Lane, and Lynn with me in my room tonight. You are going to be very busy, and mommy is going to be very happy, and busy in the morning.\"\n\n\"Thankfully she's already pregnant, so I can't cause any more damage than I already have. Thank you for telling me Teddy, and thank you for watching your brother and sisters.\"\n\n\"You're welcome daddy.\"\n\nLaura asked, \"Does Teddy always give you advanced warning when a hot night is coming your way?\"\n\n\"No, she doesn't. Apparently, this must do with her getting to work on her new engine. So, it's going to be all hands-on deck tonight, and I am to clear all the cobwebs from her mind so she can start imagining what the next one will be. I have no idea what type propulsion system it will be, but it will be interesting, I'm sure of it. I had my doubts on the nuclear engine, until Gordon came up with the fusion reactor. I had no idea how it would produce energy in space. On earth, nuclear engines boil water to produce steam, to turn turbines to produce electricity. It's all very simple. However, in space, where are you going to get all this extra water? You sure as heck aren't going to carry it with you, because you would need a spaceship as big as from the Earth to Mars to do it. The mass alone would prohibit you from getting anywhere near light speed for 2 million years or more. It would take 30 minutes for a control input to get from the crew capsule, at light speed, to the engines, in something that big. It's nonsense on an unfathomable scale. I just had a thought: \n\na) How are you going to get pure water up to that monstrosity?\n\nb) What ocean are you going to drain to fill that monstrosity up?\n\nc) How many decades will it take to fill that thing up with pure water?\n\nd) The longer the vehicle sits in one place, the greater the chance it will get hit by a micro- meteorite, a piece of space junk, or something else, which will puncture the skin of the vehicle. \n\nWe will need a spare spacecraft to carry patch kits to cover the pierced aluminum, and spare parts. However, we must know exactly what is underneath that piece of punctured aluminum before we move forward to repair it. Did that screw floating around in space at 17,000 miles an hour, pass through the aluminum, and hit a steel support column, causing no damage? Or, did it destroy a secondary communications module, which we wouldn't know about until the primary fails. We are 100 trillion miles out in the universe, and there we find ourselves, without a backup, or the part is in the spare spacecraft, which will require a dangerous spacewalk. \n\nThese are just some of the questions we must have answer and that's after she figures out how she is going to use the Dark Energy as a propulsion system to move us around the universe, at speeds that frighten me. \n\nWe don't know if we can use this vessel to hop around the universe using her new engine. I don't know about you, but I've come to call this big black ball 'Home.' I've become quite attached to it. I know our apartment is quite like my dorm room at Penn, but I don't think I'd like to leave it behind for any another mode of transportation.\"\n\n\"I feel the same way Gray. Remember, tomorrow is only the first day, and she hasn't lifted a pencil yet. If you are a very good husband, you may be able to distract her quite a bit. As you said, you can't do any more damage than you already have.\"\n\n\"Laura, you are evil. You are asking a man to use sex to distract his wife from her job. I may have to report you to the Senior Captain.\"\n\n\"Well, I am off to the infirmary to take a little test. I am about to find out if Tiffany and Stephan are going to have a sibling. We have run out of those little test kits, and they are doing it the old-fashioned way; with a sonogram.\"\n\n\"Have you chosen your gynecologist?\"\n\n\"I don't know if I'm pregnant yet.\"\n\n\"It was just a fun question. With our five new doctors roaming around looking for patients, it just shows the brilliance of my father-in-law. Everyone is forced to train upwards. The janitor must train up to his/her highest level of competence, including the captaincy if he/she is capable of it. Nothing is put in their way. My son, Newton, started out as an engineer apprentice, now he's working with Adam learning how to be a plumber. If he doesn't stop eating shit, he'll start listening, and wind up being a dam good plumber.\"\n\n\"Adam tells me that he is listening, and learning now.\"\n\n\"I'm very happy to hear that Laura. Go make Adam a happy daddy.\"\n\n\"It was bound to happen again, sooner or later. We practice a lot.\"\n\n**********************\n\nTeddy was walking with Lynn and Lane towards the ponies. They were gathered by the trees, in the shaded areas. It was an unusually warm day, and even the rambunctious twins were walking very slowly. Teddy saw Daylight. She was very pregnant, and due to give birth any time. She asked the twins to stay close behind her, because she was going to greet her friend.\n\nThis would be the fourth foal for her friend, and she had been beside her for the first three girls. It always amazed her that immediately after giving birth the young mother was up and caring for her baby. She was never in the infirmary to watch the birth of a human baby, but was hoping to begin training as a nurse, as soon as she was old enough, and could pass the exam. She was unsure what her calling in life was to be, but helping people was something she had always done, and nursing seemed like a perfect fit for her. In years to come she would train to become a doctor, because she did not have the calling for the sciences, like her brothers and sisters seemed to have.\n\nDaylight and Teddy greeted each other as they always did; by touching heads together. This time Teddy sensed something was wrong with her friend. She put her hands on the young horses' head, and closed her eyes. She felt her friend's pain. She was in labor, but something else was wrong inside her friend. She told her friend help was on its way.\n\nShe turned to Lynn and Lane. \"Will you both do me a big favor, and do it right away?\"\n\nThe four-year-olds nodded their heads.\n\n\"This is it very important. My friend, Daylight, is getting ready to have her baby, but she is in terrible pain. Something is wrong inside her. I want you to run back home and ask any adult to have Mrs. Oberlin, Uncle Gordon, and any doctor to come here to help her. Will you remember all that, and do it for me quickly?\"\n\n\"Yes, you want Brendon's mommy, uncle Gordon, and a doctor to come here to help your horse have her baby, right?\"\n\n\"Yes, now hurry and do it.\"\n\nThe twins were off and running like rabbits.\n\nTeddy kissed Daylight on her head and stayed by her side.\n\nDaylight walked over towards an area where she could be alone, and lay on her side.\n\nGordon came running full tilt.\n\n\"Are you okay, Teddy? How bad are you hurt?\"\n\n\"Who told you I'm hurt?\"\n\n\"Lane came to me and said you were by your friend, and you were hurt. I knew she meant you were by Daylight, so I came running.\"\n\nGordon had just finished speaking as Monty came to a stop.\n\n\"How bad are you hurt, Teddy?\"\n\n\"I'm sorry big captain, but it seems my four-year-old sisters have been pulling a fast one on the two of you. I am not hurt; Daylight is in distress. She is in labor, but there is something wrong. I can tell by the way she is breathing, and I can feel it when I touch her head. Can you help her?\"\n\nMonty said, \"It's been a lot of years since I've helped an animal give birth, but I will certainly give it a try. You keep her comfortable, while Gordon helps me deliver the baby.\"\n\n\"This isn't going to be like cutting open the Buffalo, is it?\"\n\n\"Do I have a knife in my hand?\"\n\n\"No, but if you did, I would be running away as fast as my legs could carry me.\"\n\n\"Pull the ponies top leg forward and up, so I can get my hand inside to feel what's going on in there.\"\n\n\"Rather you than me.\"\n\nAs Monty inserted her hand into Daylight's vagina, the mare bucked in pain, and whined loudly.\n\nMonty said, \"That's what's wrong. The baby is in a breech position, I'm going to have to convince it to turn, or they both will die.\"\n\nTeddy screamed, \"Please Monty, don't let them die. I'll babysit for Brendan every day for a year if you don't let them die.\"\n\n\"This is not 'Let's make a deal Teddy', even though that is a very generous offer. The life and death of these two animals is up to God, not to me. You know what you have to do, so get to it.\"\n\nTeddy didn't need any more hints. She stroked Daylight's head, and prayed for her friend, and her baby.\n\n\"God, I know you are very busy, and I don't mean to be a bother, but I don't usually ask for anything for me, and if you could help Monty save my friend, Daylight, and her new foal, I will pray an extra hour every day this month. I'm not trying to bribe you, really, I'm not. It's just I love my friend, Daylight, and she was willing to give up her life to save mine from that beast, a long time ago. She is a very good friend, and she is a wonderful mommy. Please don't let her and her baby die.\"\n\n\"Gordon get over here. You are stronger than I am. Stick your hand in here and convince that little sucker to turn. It won't do it for me.\"\n\n\"You're just doing this for the thrill of it, Monty. If you had a camera you'd be taking motion pictures of me with my hand up there.\"\n\n\"You bet your ass I would.\"\n\nAs Gordon got down on the ground and started inserting his arm gently into the horses opening, Doctor Bernice Hernandez arrived on the scene. She saw Teddy with tears in her eyes.\n\nMonty was smiling, as she watched Gordon insert his arm into the horses' vagina, and she had to ask the dumb question, \"Hi guys, what's up?\"\n\n\"Hi Doc, we have a horse in labor, but the baby is in breach. I couldn't get it turn because the mother kept going into contractions. That's why Gordon is giving it a try.\"\n\n\"I guess the reason I was called is to see if I can give a muscle relaxant to the horse to stop the contractions.\"\n\n\"Do you see why Joe Finch promoted you to a Full Doctor, instead of just a daytime doctor?\"\n\n\"It goes to show you what seven years of studying will do for you.\"\n\n\"As I recall, you volunteered to come along on this expedition.\"\n\n\"You bet your ass I did. I've gotten laid more in space, then I ever did on earth.\"\n\n\"Doctor a young girl present.\"\n\n\"It's okay Teddy, I got married first.\"\n\n\"God doesn't care if you're married. She only cares that you are using your own free will to make the appropriate decisions in your life, and that you are happy with those decisions. When my mommy was sick, she wasn't making the right decisions, and everyone suffered. My dad helped her, and she began making better decisions about herself. When she made those decisions, everyone else's decisions became easier, and life here became better. All our lives became better because my mother was making the right decisions for herself.\"",
        "\"Don't you dare tell Jason that. He thinks I'm the best thing that ever happened to him.\"\n\n\"You are Doctor Hernandez, and he knows it. His life became better, because of your decision to marry him, instead of Charles, and the other men that were after you.\"\n\nBernice looked at Teddy incredulously. \"What men were after me? I didn't see any; except Charlie every once and again.\"\n\nTeddy replied, \"You may not have noticed the looks and hopes of the single men watching your every step. Going to the Infirmary, when you were on duty, with ailments that required you to touch their bare skin.\n\nJason did, and he was very jealous of them! \n\nHe looked at all the available men on this expedition, and he knew he was not much better or worse than they were. If he didn't marry you, and doesn't keep you satisfied, there may be a good man you can go out exploring with. \n\nDid you say Mr. Oberlin was unhappy lately Big Captain?\"\n\n\"Homewrecker.\"\n\n\"I was just asking!\"\n\n\"Teddy tell your friend I'm going to give her an injection that's going to make her sleepy. She's going to be fine, just a little sleepy.\"\n\n\"I will Doctor Hernandez. Thank you very much for helping.\"\n\n\"You're welcome Teddy, and so is Daylight.\"\n\nWith a quick swipe of an alcohol swab, and the jab of a hypodermic needle, Doctor Bernice Hernandez injected 80 mg of Tocolyctica into Daylight's rump. It was enough, that in two minutes, Daylight's eyes started to close, and her breathing became steady.\n\nTeddy felt Daylight's head fall heavy on her lap. She was soon asleep.\n\nBernice said, \"Maybe I gave her a touch too much. She will be fine but I did not expect her to go to sleep so quickly.\"\n\nGordon received the greater benefit from it. The muscles of the horse's abdominals released their hold on the tiny horse at the entrance to the birth canal. When he realized what he did next, he wanted to kick himself. Instead of bringing the head towards him, he brought the ass end of the little creature towards the opening instead. \n\nHe screamed, \"FUCK IT!\"\n\nTeddy yelled, \"Uncle Gordon, what's wrong?\"\n\n\"I made a mistake, Teddy. I must pull the little pony out backwards instead of the way I it was supposed to come out. I think it will be fine.\"\n\n\"You're getting like my mommy. You're forgetting your language.\"\n\n\"I promise, I will never get as bad as your mommy was, and I will try to get almost as good as you.\"\n\n\"Promise?\"\n\n\"That's what I said, and that's what I meant.\"\n\n\"God will be very happy with you.\"\n\n\"I want to make you happy. If I make God happy, that's a bonus.\"\n\n\"Here it comes. I have it firmly by the tail, and it's sliding out nice and easy. Here it comes, and look; we have another white baby girl. Do you want to check her over, Doc?\"\n\n\"Monty, you better call the cafeteria, and have them make two \u00bd gallon bottles of whole milk for this young lady. She won't be able to nurse from her mother for thirty minutes, or maybe more. She's going to want to suckle, but she won't be able to, until her mom is standing on all four legs.\"\n\n\"Okay Gordon, I will place the order right away.\"\n\n\"You better make that four bottles of milk, Monty. There is someone else in here that wants to join the party.\"\n\nBrightly, Teddy shouted, \"Daylight is having Twins!\" She smiled, clapped her hands, and rubbed her friends head lightly so she didn't wake her up.\n\n\"I think she knows, Teddy. After all, she is the mommy. All I have to do is pull the second one out. However, I'm going to this one the right way; head first.\"\n\nGordon's hand reached in, felt around for the foal's neck. He found the ponies nose. He lost contact for a moment, as the little horse moved. He accidentally slid his hand into the baby horse's mouth, and grabbed its tongue. \n\nThe little horse took objection to this, and bit down hard on his hand.\n\nGordon howled in pain, and tried to extricate it, but the little animal would not let him go. He had no choice. He was in too much pain to do nothing, and there was no way to convince the little horse to let him go. So, he kept pulling little animal down, and out of his mother.\n\nFinally, when the head of the animal cleared the vaginal opening, he was able to use his left hand to pry the little pony's mouth open enough, so he could extract his right hand from its mouth. \n\nWhen he was free, Gordon yelled at it. \"Dammit Blackie, that hurt. Look what you did to my hand. I will never be able to play the violin again.\"\n\nTeddy laughed. \"You never played the violin, uncle Gordon. You just named your first pony. It was not a very original name, but it's a good name for a horse.\"\n\n\"Thanks for your left-handed compliment, cupcake.\"\n\n\"I was hoping you wouldn't notice, uncle Gordon.\"\n\nMonty watched the entire incident as it unfolded. She was laughing as Gordon was tending to his damaged hand. With blood trickling down the back of it.\n\nShe said, \"Bernice, your human patient is going to require a tetanus shot, for certain. However,is the gash on the back of his hand going to require the services of a 'Plastic Surgeon?\"\n\nBernice ears perked up at the mention of those two hallowed words. Doctor Finch trained every new doctor in the art of 'Plastic Surgery', from the moment they picked up a scalpel. No scars could show on any member of the crew of the Good Luck 1. If you lanced a boil, and the area required a simple stitch, you used disappearing thread, and a reverse stitch that no one would ever see from the onset. Not even the knot was visible after the surgery. If you screwed up, you opened the wound, cleaned it thoroughly, and started the procedure over, until it was perfect.\n\nShe looked at Monty and smiled.\n\n\"Doctor Finch is going to be so excited. This is a case for major 'Plastic Surgery'. No Band-Aid can cover a wound of this size and shape properly. This will be Hannah's first real test as a Surgeon.\"\n\n\"You two should be very happy Teddy is here. Otherwise, I would have said something very nasty, but appropriate.\"\n\n\"You can't do that uncle Gordon. You said you are going to be as good as I am.\"\n\n\"I thought you said you weren't good all the time.\"\n\n\"I'm not, but I'm not that bad all the time either.\"\n\n\"You and I must discuss certain limits.\"\n\n\"Mommy and I are going to discuss growing up. I had my first period last month.\"\n\nMonty looked shocked.\n\n\"Your mother survived your transition into womanhood?\"\n\n\"Yes, and she is doing very well. She only had to spend two days with aunt Laura, and has had appointments every day since with Doctor Daniels. She doesn't have to take any medication during the day. She's not taking any sleeping medication, either. I think she'll make it, as long as Newton doesn't do anything Earth shattering, with Elizabeth, during the next year.\"\n\n\"Teddy please be careful when you explain to your mother how growing up is done. Please try to keep her calm.\"\n\n\"Uncle Gordon, I think this is one of those moments, where my mom would get angry with you.\"\n\n\"Teddy, if she didn't, I would be very angry with myself.\"\n\n\"Look everyone; our new little pony pulled himself the rest of the way out of his mother's womb, and he is standing. He's black from the tip of his nose, to the end of his tail. This little guy is strong. I will bet he is going to be the leader of this herd, when he grows up.\"\n\nApparently, Commander agreed with Gordons' assessment. Commander was now in his 18th year, and was somewhat passed his prime. He had defeated all the males who tested him, up to this point, and there were none in his herd for him to worry about now. Not until this new dark horse. It would be best to get rid of him, before he grew up and posed a danger to him. He observed the birth of his newest children, from a discrete distance, but when the black foal took to its spindly legs to join his sister, he moved closer, and took his measure. He didn't like him from the very start, not one little bit. He was different, and he did like different. He and his sister could cause him trouble, in the future. Daylight was entering her prime, and soon would become his lead mare. He wondered why she wasn't up tending to her new children, like all his other young mares did after they gave birth. Maybe she died. If she did, he wouldn't have to worry about these two little ones. They would die off quickly from neglect, if the humans didn't interfere. Regardless, she was still laying down, and unable to feed or protect her newborns. I'll get rid of the colt now, and save myself the trouble of doing it later.\"\n\nMonty was attempting to get the female to suckle from the nipple attached to the bottle of milk with only limited, and messy success. Regardless, it still reminded her of her younger years on the family farm, when it was fun with the calves, and goats. She was laughing during this procedure.\n\n'Blackie' was sniffing around the area. He was mainly working his way around the hind end of his sister, and occasionally trying to lick what was coming out of the bottle Monty was holding.\n\nTeddy was holding the other bottle, and trying to get his attention, but he had a mind of his own.\n\nSlowly, Commander moved closer to the group. Then, without provocation, he made a very aggressive move towards Blackie, hitting the little horse with his head, knocking him to the ground, close to Teddy, and Gordon. \n\nLike a prizefighter moving in for the kill, he reared majestically into the air, on his hind legs, ready to step on, and kill his own son.\n\nFrightened for 'Blackie's' life, Teddy yelled, \"STOP,\" just in time.\n\nEverything stopped, including 'Time'; well nearly anyway.\n\nThe milk dripping from the female foals' mouth stayed suspended in mid-air. Monty's hand was at an impossible angle, but she held the bottle high enough to get the milk out fast enough for the foal to drink.\n\nDoctor Hernandez had her back to the scene checking Daylight's condition.\n\nSeeing the stallion act so impetuously towards the male the first time, and seeing him start moving aggressively towards it again, Gordon threw his body up, towards the stallions' forelegs to prevent any further movement forward. They were both suspended in mid-air, a few feet in front of Blackie and Teddy, as she set about rearranging the scene.\n\nIf the stallion propelled his legs forward, before Gordon's got his body into the proper position, regardless of where those two forelegs hit, his bones would be crushed, and severe injuries would have occurred.\n\nIf the stallion hit the little pony with the same force, the little horse likely would have died on impact from those injuries.\n\nTeddy had all the time in the world to put her plan in motion, but she wanted to make one that was quick, and safe. She decided to move her sitting position back two feet, which would be enough for her to move the little pony out of harm's way. She moved Gordon back the same distance to keep him safe, also.\n\nShe would give Commander a good talking to, as soon as she started time.\n\nBefore she started time, she wanted to see the look in the stallion's eyes to find out what was in his mind and heart. She saw two things: fear and hate. \n\nShe would remove those feelings from his head and heart, once and for all, after her preparations were completed, and she allowed time to move forward.\n\n\"START!\"\n\nThe drop of milk fell on Monty's pant leg, as the little girl danced around trying to figure out how to get more milk from that nipple.\n\nWhen Gordon landed face first in the grass, well short of his targeted area, he shook his head. He looked around and saw his position had been changed, but more than that, Teddy, and the little horse were not where they were a second ago.\"\n\nHe smiled and shook his head. \"You did it again cupcake, didn't you?\"\n\n\"Later, uncle Gordon.\" She stood up and approached Commander, who started backing away from her.\n\nShe screamed at him. \"Oh no you don't; you big bully. Come back here now.\"\n\nThe stallion approached her with his head bowed low. He knew something changed but he didn't defy her.\n\nShe took his head in her hands, and without a word being spoken, showed him what he did wrong, and what his future would be, if anything were to happened to the tiny colt and his sister.\n\nCommander did not like the idea of being placed outside the protected zone as he grew older, and became slower. There had not been an incident inside the protected zone, since Newton deployed it. Having to be on the lookout for, and out run carnivores was something he'd rather not think about, and do as he grew older. Not having the herd around, for common protection, and females to pass on his genes, was another thing he didn't want to think about.\n\nHe nodded his head to Teddy and walked towards his two newest children.\n\nBlackie was a little skittish, when the huge stallion approached him. When he began licking his flanks, and neck, Blackie relaxed, and return the affection. With his mother still lying down, he accompanied his father as he walked over to his sister.\n\nCommander began licking her as he did his son. She finally gotten the hang of drinking from the bottle, and now this big oaf was bothering her. Like all females, she just ignored him, and went on drinking. She would wait until there was something she needed, and only a prime stallion could do it for her.\n\nAfter he finished his time in the nursery with his children, he walked over to see what was going on with Daylight. He put his muzzle against hers and began licking and pushing against it. He stayed at it for a time, until finally she opened her eyes. She blinked, and saw who was trying to get her functioning again. It took a little more convincing, but she could lift her head and begin licking his muzzle in return. It was all very tender, and Gordon had to put his arms around Teddy, because she started to cry.\n\n\"You did good sweetheart. Why are you crying?\"\n\n\"I want that to happen to me one day, but I don't think it ever will.\"\n\n\"Why would you say something like that to a man who would dig you a replica of the Grand Canyon if you asked him to?\"\n\n\"Look at all the lives of the Holy People. Look at the lives they led down through history. Look at all the gifts God gave them, and look at the one thing she kept from them.\"\n\n\"This is going to take me a moment, I have to put my thinking cap on.\"\n\n\"Do you want to meet me back here tomorrow morning?\"\n\n\"At this time tomorrow morning, I will be floating in space catching 'Dark Energy' for you.\"\n\n\"I was just checking your memory.\"\n\n\"I am just like your mother, only she's smarter than I am.\"\n\n\"How can that possibly be uncle Gordon?\n\n\"Are you asking me how one genius can be smarter than another genius?\"\n\n\"Yes, I guess I am.\"\n\n\"May I ask you a question?\"\n\n\"I'm in trouble.\"\n\n\"Yes, you are little one. When you told your mother and father that your mother was pregnant, you also told them that your new brother was going to be...'The smartest of you all!' Am I correct, or not?\"\n\n\"You are correct, uncle Gordon. Your next statement is going to be: Newton is a genius engineer. I'm very smart in many areas. Then came Truman, and Tatum, who are the finest astrophysicists ever. All they did during the first seven years of their lives, is take 150 years of the most sacrosanct science, and blow it apart. They proved, using the best scientific measuring devices available, that the Hubble Constant (Ho) is wrong. When the scientists on Earth find out about it, there will be the weeping and gnashing of teeth unlike anything since the death of Jesus. Don't ask me uncle Gordon, because I will not tell you.\"\n\n\"Little girl, I love you, I love my wife, and I love my children. I also love my God. I have a relationship with her that is based on my relationship with my father as I grew up. He never forced me to pick a religion. He asked me to think about the universe and how it came to be. I never went to church on Sunday, but I did go to church with Zoey, when we were together. I was baptized as a Catholic, but I never received any other sacraments, until I married Zoey. If I wished, I could baptize Payne, and Dick myself, using a Catholic Bible as a reference. It won't mean anything to me or Zoey. It would just be a starting point for them as they begin their journey through life. All we want to do is lead good, productive, God loving lives. We want our children to grow and do the same. Zoey and I believe, wholeheartedly, if we do this, when we meet Her on judgment day, and She tells us what she has planned for us, it will in accordance to the merits of our lives. There is no death, Teddy, you know that. You talk to grandpa, and yet he lives in the computer all the time. You know he died. What we knew him to be is no longer with us. Our souls, our spirits continue, they live on forever. Our bodies are as old as the universe, because matter can neither be made nor destroyed. It is our consciousness that will be permanently changed. There will never be another Teddy Thyme, unless, of course, God, in her infinite wisdom, makes 10 million more of her to keep the rest of us in line.\"\n\nTeddy hit him with a sharp left to his ribs.\n\nHe howled in surprise, and in pain.\n\n\"Uncle Gordon put your nose in the corner for one month, and pray hard I don't spank you. You were doing so well, until you got to that last line. Just picture yourself on judgment day with 10 million of me in-line, holding paddles, and waiting for you to pass by.\"\n\nMonty, and Bernice were stunned into silence. Demure, sweet, unassuming Teddy Thyme had just cornered the king of the put-downs. There was no way Gordon could maneuver out of this trap, and gain the upper hand on her. This 13-year-old had done something no one on the spacecraft had managed to do, since the day it launched. She made Gordon Luck retreat.\"\n\nBernice Hernandez said, \"Where is Doctor Even Luck when you needed him?\"\n\nGordon looked at his niece, and fell to his knees in front of her. Raising both hands into the air, he proceeded to bend at his at his waist, and touch his fingertips, and head to the grass in supplication. He did this, 10 times.\n\nMonty and Bernice head grins on their faces a mile wide as he did it.\n\nAs he stood up stood up he said to her, \"You do realize I have to take care of you and your family for the rest of your lives now. Wherever you are, my family and I will be. If you want to go to Gliese 581C, I will pilot the ship and take you there. It is an M class planet, very much like this one is, but there is no landmass. It is a water world. On our way there, I will build you a sail boat, from the wood we will take with us. It will be a vessel with a rudder, a tall central mast, which we will install once the boat is on the ramp, and sail, so you may enjoy the water. \n\nWe don't know the temperature of the water is, but as we get closer to the star system, we will have a more accurate prediction. We don't know if the water has occupants, so we will take the Good Luck 1 diving to a depth of 60 meters below the surface and look around. If there is no great danger to those who wish to go sailing with you, we will lower the ramp, and launch the ship with all hands already on board. The ship will hover a few hundred feet above the surface of the water, while you and your crew sail around enjoying yourselves. When you need us, we will fly to your location, and bring you back on board. How does that sound, little Captain?\"\n\n\"Gliese 581C is made up totally of water?\"\n\n\"That's what Kepler tells us. It also tells us it's not just a few feet of water deep either, so don't fall overboard. It goes down to a depth of 87 miles in some places, but nothing has tested out at a depth of less then 54 miles. It rains there quite often too. It is close enough to its star for water to evaporate and rise into its atmosphere, which is 1.25 of earth, our bodies will feel a little heavier than normal. It clouds over, and rains until the atmosphere rings itself out. The planet has no moons that would cause a tidal reaction, and there is no landmass for it to be attracted to at any rate. It's only 10,000 ly away. When your mom finishes the new engine, we can take Good Luck 1 for a quick test flight, and check it out. If it is as good as you say it will be, it will only take us a few days to a week to get there. We will spend as much time as you wish there. What is a month or more with your favorite uncle, his family, and a few dozen of your best friends?\"",
        "We can also do a little work while we are there. We can fill up the exterior shell with water, and not have to worry about it when we get back here. It will be as easy as pie to do. We can open the outer hatches, and valves, and watch the gauges while we are submerged. Once we are at 104% of maximum, we will come up slowly, allow their sun to dry the exterior of our hull, and walk along the exterior of our ship and close everything up, exactly as we opened it. Doesn't that sound like a fun adventure to you, Teddy?\"\n\nMonty said, \"Gordon, you are positively nuts.\"\n\nHe looked at her incredulously.\n\n\"...you are just figuring this out now!\"\n\nShe picked up a full bottle of milk, threw it at warp speed, and hit him in the center of his chest.\n\n\"Ouch! Thank God that wasn't your knife.\"\n\n\"If it was my knife, I would have aimed lower.\"\n\n\"You really know where to hurt a guy.\"\n\n\"Couldn't you have smuggled a few chickens on board, along with those damn turkeys? The chef has run out of recipes for them.\"\n\n\"In the beginning of our journey, you didn't think I couldn't get the turkeys on board. Now you're complaining I didn't bring chickens along with them. Would you please make up your mind?\"\n\n\"I am not ungrateful. It is just... I am beginning to hate eating turkey. I would love a chicken salad sandwich.\"\n\n\"I have an idea, senior captain.\"\n\n\"Someone shoot me, quickly. I hate it when he has new ideas.\"\n\n\"It does involve an element of risk, but the benefits far outweigh them. Will you listen, or should we start back to the comfort, and regimen of our ship?\"\n\n\"Doc, do you have any tranquilizers with you?\"\n\n\"Oral, and injectable.\"\n\n\"Good, stay close by me; I may need them both. What do you have in mind Gordon.\"\n\n\"We build 15 or 20 large bird traps to hang in trees, outside the exclusion zone, where only large birds can get trapped in them. We load them up with live little birds, seeds, berries, water and leave them there for a few days. We are not looking for the birds that we have flying around here. We are looking for birds the size of eagles, hawks, seagulls, cormorants, turkey vultures, geese, and anything that is a comparative size of a turkey. If we are lucky, we can find their nests, steal their eggs, and raise the birds in captivity. We pull their flight feathers so they can't go anywhere.\n\nWe must gather birds of both sexes for this to work, because, eventually, we are going to artificially inseminate our turkeys with their semen, and inseminate their eggs with the semen from our turkeys.\"\n\nBernice's eyes flew open. \"We are going to do what?\"\n\n\"You don't expect these birds to cross-inseminate for us on demand, do you?\"\n\n\"No, I guess not.\"\n\n\"Do you have any other pressing needs on your schedule, for the next 20 to 30 years, Doctor?\"\n\n\"I just became a doctor; now you want me to become a geneticist?\"\n\n\"We have the equipment, Doctor. We have the study material. Why don't we uncrate everything we need, and start putting it to good use?\"\n\n\"Captain, would God hate me 'Forever' if I shot him?\"\n\n\"Forever is a very long time, doctor.\"\n\n\"Teddy, would you ask God how long forever is.\"\n\n\"I don't have to ask, She already told me. God said the 'End of Time' will come when ALL the peoples of her universe stop praying, and they believe they have no use for Her. That is when She will turn off all the stars, and day will turn into permanent night. There will be no energy remaining in the universe, and everything will turn cold. \n\nFree Will is the only reason she allows us our continued existence. \n\nShe is the Beginning and The End of All Life and Reason!\"\n\nGordon said, \"Amen!\"\n\n\"I can tell Teddy is being truthful. There is no other reason for your continued existence, other than Free Will, Gordon. Otherwise, I would have killed you when you were seven, eight, ten, eleven, or thirteen years old.\"\n\n\"You had many reasons not to kill me, Monty. My father was paying you a ton of money to keep me alive.\"\n\n\"Your mother offered me more, of her own money, to kill you.\"\n\n\"That is a lie. My mother loved me too much to have me killed.\"\n\n\"Ask her, if you have the courage to do so. Ask her, if on your 13th birthday, when you came within 9 seconds of blowing up the Fort Hood Army Base, and the city of Temple, Texas, because you were determined to set off a miniaturized version of the most lethal destructive compound short of a nuclear weapon known to man, and prove to your father's secret friends that they were wrong.\n\nYou believed your father's friends, from the ABC Company, when they said it wouldn't work after their experts tested it. In fact, their scientists were so disturbed by your discovery they wanted you to believe the device would not work. \n\nYour father warned them the one thing they should not do was play with your pride. It would backfire in their faces! \n\nThey didn't listen to him. They hoped you would let the project die a natural death, and eventually, you would lose interest in it, and continue working on the spacecraft. They didn't want that explosive compound to see the light of day, ever. It was too dangerous. They weren't going to inform anyone about it, not even our allies, because it was so dangerous. It was kept secret at the highest levels of military and civilian government. \n\nIt was undetectable by any known screening process. It didn't have a nuclear signature. It didn't emit any explosive chemical isotope. It was the perfect weapon for any terrorist organization, or country to have, who wanted to put the fear of God into the heart of a strident enemy. They even loved the name you gave the device: 'The College Dropout'.\n\nIf a terrorist organization got a hold of the formula, they could form the compound to fit into a briefcase, as you did, or a seat like people take to a football stadium, and carry it in our hundreds of thousands are power and her. Imagine the devastation that could be brought about, on any given football Saturday. There is a minimum of 46 games played throughout the nation on any given Saturday during football season. Most of them are played in the largest cities in the state, and in the state capitals. An average of 60,000 people attend those games, and the cities they are played in average 50,000 people. In one day, a terrorist organization could kill 5 million American citizens around the nation, and laugh at us from a safe-haven 6500 miles away. It would take a minimum of 20 years for this nation to recover. We would recover, eventually, but the feeling of safety this nation once had, would never return.\n\nScientists at the Brookhaven National Laboratories stop all their other work to run particles of your compound through the heavy collider to break down its elements so the country could come up with a way to defend against.\n\nEven you didn't realize how powerful the compound was. Your math was wrong, but not by a factor of one, or a factor of ten, or a factor of one hundred. It was worse than your sisters' estimates with freolyte. You were wrong by a factor of >13500.\"\n\n\"I know all this Monty. I lived through it, remember? It was the first time in my life my mother beat the crap out of me. I felt bad for her while she was doing it, because she was crying. I had to hold her when she was finished hitting me, because my father was on the phone explaining to the president why I shouldn't be put into the military, so he could put me into a military prison for my own good, and the good of the nation. Do I have to live through this again?\"\n\n\"Turn around and look at the crowd gathered around us. Does that answer your question?\"\n\nHe turned and saw over twenty people standing behind him. His mother was in Viggio's arms smiling, as she waved to him.\n\n\"You can go back to the ship mom, you know the ending.\"\n\n\"Oh no, my son, when I was told Monty was telling this story, I rushed over. When she's finished, I'm going to do a reenactment of what happened to you when you walked in the front door. Doesn't that sound like fun?\"\n\n\"Oh...\"\n\n\"Noooo, you promised,\" yelled Teddy.\n\nHe smiled at her, and messed up her hair.\n\n\"Young woman, you are going to be the death of me.\"\n\nTeddy jumped into the air, with her fists raised.\n\n\"YES! I am a woman now. My uncle called me a woman, so it has to be true!\"\n\nHis sister yelled at him. \n\n\"You are a dead man, Gordon. If any boy walks within 20 feet of my baby, you better be standing between them.\"\n\nTeddy stamped her foot.\n\n\"Mother, I am no longer a baby. We have discussed this, haven't we?\"\n\nDelicious' lower lip began to quiver, as Gray's arms enfolded her.\n\n\"It's okay baby, I have you. Let's have some fun. Let's let Monty continue the story about Gordon's debacle. Afterwards, we can watch Jennifer beat the crap out of him again. On the way home, I'll buy you two scoops of ice cream with blueberry syrup.\"\n\n\"Can I get two of them; I'm pregnant, remember.\"\n\n\"Of course, you can, honey. It was my pleasure to get you pregnant.\"\n\n\"Monty, would you please continue your reenactment of Gordon attempting to rule the world, using explosives? I especially want to hear the part of his heroic arrival home.\"\n\n\"Of course, Gray, I can't beat the shit out of him anymore. With his father gone, only his mother can can do it now.\"\n\n\"Where was I; Yes, you were determined to test your compound and prove that all the experts at the nuclear test facility, at White Sands New Mexico, and Brookhaven, Long Island were wrong, and a fifteen-year-old boy was smarter than they were. Your sister did it with Isaac Newton and gravity, now you were going to do it with this explosive device. \n\nYou sent about making a \"Portable\" version of 'Fat Man,' the name of plutonium bomb that was dropped on Nagasaki, and helped end World War II. Naturally, you named your 'Portable' bomb 'Little Man', the name of the hydrogen bomb that was dropped on Hiroshima three days earlier.\n\nThankfully, because of the size of the legal briefcases you purchased, you had to scale 'Little Man' down. Your scaled down design turned out to be so elegant, our atomic scientists, military planners, and government officials fell in love with you. You put us ahead of the Russians in nuclear warheads per missile. You help this nation add 2 nuclear warheads to each Intercontinental ballistic missile, because of the design of each honeycomb holding each element. You made the honeycombs out of household aluminum paper, which stunned the experts. When they tested your design, not only was it thinner, and lighter, it was 63% stronger than the manufactured aluminum holding the nuclear missiles in our Minuteman and Poseidon missiles, and less prone to failure due to vibration. \n\nOur nuclear community loved you for what you invented. The executive branch of the government and military branches wanted to kill you for what you tried to do with your compound. \n\nFear force them to test 'Fat Boy', after your debacle was over. They tested it underground; very, very deep underground, in an abandoned silver mine, near Las Vegas, Nevada. The mine was greater then >7 miles deep. They sealed off more than >\u00bd mile of it, before it was detonated. The damn thing set off seismographs, as an earthquake, all over the world.\n\nWhat worried the civilian government, and the military was 'Fat Boy' only weighed 209 pounds. \n\nLike all good criminals, you didn't want to go to jail alone. You didn't want to die alone, either. And you couldn't leave well enough alone. You had to drag your idiot cousin into this scene with you. He was only nine years old, and he jumped at the chance to go along with you to see you set off your little 'fireworks' display. \n\nYou taught him how to disable the sophisticated, military grade, home alarm systems. You showed him how to get out of his home through his bedroom window, and beat the motion and heat sensors that were buried in the ground, and to avoid eight roving agents. \n\nI didn't fire those agents. What happened to them was worse than being fired. I wouldn't let them quit either. I had them carry around likenesses of the two of you for the next month. Every hour they were at work they held either one of you at their sides. The ribbing they received from their brothers in arms was merciless. Several fights broke out because of the severity of the ribbing.\n\nI warned all the agents that the two of you were going to be allowed to escape on certain evenings, and if they got by the 8 guards who were on duty, guarding you homes, they were going to eat what they were dishing out.\n\nAfter that a great deal of the rhetoric died down, and the tone of it was not as brutal.\n\nYour escape route was one we had guarded for infiltration, not exfiltration. We never figured on someone trying to escape by boat. So what did the two of you do; exactly what we didn't plan for. You walked to the edge of Stillhouse Lake, uncovered your uncles boat, and put the miniaturized device inside, before you pushed it into the water. The two of you paddled out a hundred yards, or so, before you started the boats' electric engine, and motored off to the center of the lake, and Cashew Island.\n\nYour mother was lying comfortably on your father's chest, when the alarm on his watch went crazy. He sat up so quickly, he nearly threw her off the end of the bed.\n\nBefore she had a chance to say a word he yelled, \"I'm going to kill our son.\"\n\n\"Even, be more specific, we have two more boys now.\"\n\n\"I'm not going to kill the ones that are still in the crib, dear. I'm going to kill the one who kept asking me questions on the airplane on our way to Fairbanks. I was in love, and wanted to be with you in the worst way.\"\n\n\"He's in his room sleeping. What kind of trouble can he possibly get into doing that?\"\n\n\"I will bet you $1 billion that he's not in his room.\"\n\n\"I don't have $1 billion. What do you want from me if he's not there?\"\n\nHe kissed her nose, and patted her ass.\n\n\"That will do nicely.\"\n\nYour mom sat on the bed and covered her behind.\n\n\"You may keep your $1 billion sir. You are not getting my ass.\"\n\nThe crowd laughed, and Jennifer blushed.\n\nShe said, \"That bastard never got my ass either.\"\n\nGordon said, \"Mom, there are children here.\"\n\n\"No there's not. There is a baby in John's arms, and according to you, a young woman standing beside you.\"\n\nTeddy shouted, \"Thank you grandma.\"\n\nDelicious retorted, \"I hope your baby comes out green.\"\n\n\"I wouldn't care, as long as he is healthy.\"\n\n\"How do you know it's a boy?\"\n\n\"My soon-to-be husband told me so.\"\n\nEveryone applauded the good news, but when the applause died down Delicious asked, \"Do you believe everything that Alien says?\"\n\n\"Gordon please?\"\n\n\"Okay, but you have to remember how to say it sooner or later, mom. Viggio is not an alien. He is a Nasralvhrnecian.\"\n\nEveryone who was seated around him stood up and applauded, while roaring with approval. Viggio released his mother, walked over and hugged his son.\n\n\"It is the greatest sign of approval for someone from another culture to be able to pronounce our culture's name. Our children start out at the age of four trying to say it, and many never learn how to do it properly. Thank you my son, thank you very much.\"\n\n\"You're welcome dad. I want you to know that I am very protective of my mother. If you treat her well, we will be the best of friends. If I find her crying, and you are the cause, we will be the worst of enemies. Let's be friends.\"\n\nViggio replied, \"I agree, let's be friends.\" They hugged again and parted.\n\n\"Now that all this family crap has been taken care of, I'd like to continue, because I want to see Jennifer beat the crap out of this little runt.\"\n\n\"The last time we got together, you couldn't walk for two weeks, and then only with crutches.\"\n\n\"That's not the point. Now where was I. Yes, your father was explaining to your mother that her ass was safe. However; their son was assembling his explosive device somewhere close by.\"\n\n\"Kill that boy, Even. You ordered him not to assembled anything like that ever again.\"\n\n\"I did, didn't I.\"\n\n\"Get your ass out of this room and find him, before he levels this town, and possibly half this state.\"\n\n\"We could buy oceanfront property on the cheap.\"\n\n\"Move Even, put your ass in gear, and neutralize that bomb.\"\n\n\"That is my intention dear. I will kill him right after I do it.\"\n\n\"Permission granted, now go.\"\n\nEven opened his bedroom door, turned right took two steps and grasped the handle to your room. It was locked.\n\n\"Gordon, if you're in there, you have three seconds to open this door. 2, 1, 0.\" The door opened, but you were not the one that opened it. Your father's shoe did the job.\n\nHe turned on the light, looked around your room, and saw what you had done to escape. He smiled at your genius, and frowned at what you were about to do to the city of Temple, and the Army base 10 miles west of it. He opened his cell phone, hit number nine, and waited for the operator to answer.\n\n\"Yes, Doctor Luck, how may I help you?\"\n\n\"Larry condition red. Get all the principles out of a 20-mile area now. My son is getting ready to test his toy. Call the police and have them move everyone as far away from the city as possible. Advise them it's a chemical accident, and we are attempting to get it under control, but an explosion is imminent. Call the Army next, and give them the same instructions. I will tell them the truth later, myself. I will cover all costs personally, no questions asked. Explain to them in the harshest terms that this is not a drill. Oh, and I need the helicopter an hour ago.\"\n\n\"You got it Doctor.\"\n\nThe lights went on, in every home that had an employee of the Deep Space Science Project within minutes. As those people were getting ready to leave, they banged on their neighbors' doors, waking them, and warning them of the impending disaster. They had to leave their homes immediately, and drive away from the science building, in any direction for at least 20 miles, as quickly as possible. The message would be all over the local radio stations by now, or soon would be. \n\nThe officer in command at Fort Hood received the message from their switchboard, but didn't believe it until he picked up the phone and heard it from Larry, at the switchboard at the Science Center himself.\n\nTrue to his military breeding he asked, \"Is there any way we can be of help?\"\n\n\"Thank you, Colonel, but Doctor Luck wants you to get your people out of Dodge now. He wants you safe and he will talk to you, if he's alive, later.\"\n\n\"You can tell him the Army is moving.\"\n\nNearly simultaneously, as Larry disconnected his call, he could hear the sirens at the Army base, 10 miles away, sound off. The military is known for its ability to move men and machines with speed and precision. That night, under the harshest circumstances, they did both magnificently.\n\nThe warnings were on the local radio and television stations already, and CNN, in Atlanta, had just picked it up. There were no details, but the evacuation of Temple, Texas and Fort Hood were underway. \n\nThe Pentagon was informed, and they informed the White House; which went into crisis mode. The country went to code yellow and all airports, train stations, and bus terminals, because information was so sketchy.\n\nThe military lowered the nations Defense Condition from DefCon 5 to DefCon 3, in preparation to move men and material to the disaster area.\n\nWhen this happened, Senior Members of the military establishment, were assembled in the Kremlin to speak with their civilian counterparts. They were called into emergency sessions to find out what the hell they were did that got the American's so pissed off, and they were getting ready for war. \n\nThe military men said nothing unusual was going on, so a call went out to the American ambassador at his residence to come to the Kremlin immediate for urgent consultations on this matter."
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "dark matter",
        "dark energy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/dark-as-daylight-ch-17"
}