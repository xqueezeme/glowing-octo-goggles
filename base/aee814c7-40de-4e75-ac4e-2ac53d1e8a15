{
    "title": "Jeong Park's First Frosh Ball Ch. 07",
    "pages": [
        "<center>Jeong Park's First Frosh Ball Ch 07</center>\n\n<center>A Sunday Kind of Love - Part Two</center>\n\nby Chloe Tzang\n\n\u00a9 2021 Chloe Tzang. All rights reserved. The author asserts a totally immoral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. If you see this story on any website other than Literotica, it's been ripped off without the author's permission.\n\nThat little note from Chloe again: Well, I won't repeat the intro to Chapter 6, but Chapter 7 is really Chapter Six , Part Two. Alas, by the time I finished the first draft, it was 75k words, which is about 20 LIT Pages, so I decided to have mercy on you, because I don't want to wear you to a frazzle, and I split Chapter 06 into three parts, and this is Part Two of Three. Hope you enjoy. And just in case you haven't read any of the previous chapters before, I will of course repeat that warning for any innocents who inadvertently have failed to read any previous Jeong Park installments before. \n\nThis is a tale of sordid, misogynistic, exploitative and abusive sex (if it isn't, I've lost the plot). You have been officially warned. Now, enjoy. Or not. But don't be complaining about it once you proceed past this point. Because if you don't enjoy sordid, misogynistic, exploitative and abusive sex, well, you're in the wrong place. You're not going to enjoy this story at all, I can absolutely assure you of that, and you should read no further.\n\nSo now that we're clear on that one, there's plenty of sordid, misogynistic, exploitative and abusive sex. As there has been in EVERY preceding chapter. As there will be in EVERY subsequent chapter too. Now, I do hope those of you who make it past this introduction, and who have enjoyed the first few chapters, do continue to enjoy this sordid and misogynistic tale of despicable guys, innocent girls, and of course, Hot and Graphically Sordid, Misogynistic, Exploitative and Abusive Sex (although I may have mentioned that before). Without much of anything else to derail the story, lest you need to ask, but if you've read the previous chapters, you probably don't need to ask.\n\nSo read on with me, discover what happens next, and do enjoy this next installment of Jeong Park, in the Traditional Manner of Literotica Readers, with my encouragement and best wishes for a successful and enjoyable culmination to your reading adventure... Chloe\n\n<center> * * * * * * </center>\n\n<center>Jeong Park's First Frosh Ball Ch 07</center>\n\n<center>A Sunday Kind of Love - Part Two</center>\n\n<center>Oh I'm hoping to discover\n\nA certain kind of lover\n\nWho will show me the way\n\nAnd my arms need someone\n\nSomeone to enfold</center>\n\n<right>A Sunday Kind of Love, Etta James</right>\n\n<center> * * * * * * </center>\n\n\"Why don't you both come inside?\" Erik held the door open for them, and Sally had never been in a house like this one. It wasn't even that far from where they lived, but it was almost a different world. The wall around this complex, the security gate they'd had to drive through. The wide laneway, trees and flower beds, all perfectly manicured. The house was huge. It seemed... expensive. It just had that aura, it felt that way, and walking inside through the front doors, her eyes widened.\n\nSo did her mom's.\n\n\"It's my dad's,\" Erik said, closing the front door behind them. \"He lives up north in San Francisco most of the time. Doesn't come down here that much. Have it to myself most of the time. Come on through.\" He grinned. \"Leave your heels on, they make both of you look even more fuckable than you already are.\"\n\nIgnoring their pink-cheeked glances towards each other, he took Jessica's hand in one of his, Sally's in the other, leading the two of them inwards from the marble-tiled foyer, past a sweeping staircase and down a long wood-panelled hallway, through another solid door, and into a large conservatory overlooking a patio-surrounded pool and garden.\n\n\"This is my part of the house,\" Erik said. \"My bedroom's through here,\" and he led them past a couple of large couches, through another doorway, past his bed, to the almost floor to ceiling bay window.\n\n\"Like the view?\" he said, releasing Jessica's hand, standing behind Sally, one arm sliding around her, and now he was close behind her, not pressing against her, but she could feel him, brushing against her, and she knew he was hard. She knew why she was here, too. She'd known that, from the moment she'd said to her mom that she wanted to go with him this afternoon.\n\n\"It's lovely,\" Sally said, eyeing the tub out on the patio. \"Is that a jacuzzi?\"\n\n\"Sure is, babe,\" Erik said. \"You can try it out later.\" He smiled at Jessica. \"You're not in any hurry to go anywhere else today are you?\"\n\n\"No,\" Jessica said, her nipples aching. The only place she wanted to hurry too was flat on her back on Erik's bed, looking up at him as he took her, while Sally watched, and she wanted to watch him with Sally, too. Her sex pulsed hotly at the thought.\n\n\"Why don't you look around, Sally?\" Erik said, and he smiled at Jessica. \"First.\"\n\n\"Sure,\" Sally said, enthusiastically, just about bouncing out of the bedroom.\n\nErik smiled, watching those long slender legs and that tight little butt depart, and then he turned back to Jessica. \"I'm glad you're not in any hurry to look around,\" he said.\n\nJessica watched him, her heart pounding as her eyes dropped to his erection. His jeans concealed him, but they didn't hide it. He was as big as she remembered.\n\n\"You do like this view better, don't you, Jessica?\" Erik asked, taking those half a dozen steps to her, and he took her in his arms, kissed her. Kissed her gently, and Jessica melted into his arms. Melted against his naked body, her hands running over those broadly muscular shoulders before vining around his neck, welcoming his tongue in her mouth, her own dancing and hungrily flirting with his.\n\n\"Mmmmm,\" Jessica murmured, and she felt as if she was eighteen again. Sally's age, and she didn't want talking. She wanted fucking.\n\n\"Baby, you're hot,\" Erik grinned, easing back a little, taking one of her hands, and placing it firmly on that bulge that his jeans still concealed. \"You want this now?\"\n\nJessica said nothing, her face flaming as she found his belt with both hands, unbuckled him, unzipped his jeans and began to work them down his hips. She wasn't eighteen. She had an eighteen year old daughter, but unlike when she was eighteen, she knew what she wanted. \n\nErik's cock.\n\n\"Oh yeah, you're one hot chick, alright, Jessica,\" Erik smiled, peeling his shirt off as her hands continued to work. \"You want to get down on your knees and take everything off for me, babe?\"\n\nJessica did, and, wordlessly, she sank to her knees before him, her hands working his jeans down, all the way down to his ankles, tugging them off him as he raised first one foot, and then the other. Her heart pounded as her hands moved to his boxers, straining against the pressure exerted from within them by that bulging erection. Her mouth flooding with saliva, she swallowed as her hands dragged his boxers down, freeing him, so that his cock slapped against her face.\n\nErik smiled as he stepped out of his boxers, one hand on her head now, fingers entwined in her silky black hair, holding her head, the other holding his cock, and he slapped one cheek, then the other.\n\n\"Open wide, babe,\" he breathed, smiling down at her upturned face.\n\nJessica gazed up at him, and she did exactly as Erik asked. She opened wide.\n\n\"Ggguugggg.\" Erik smiled, and filled her mouth with his cock, sliding his cockhead slowly across her tongue, her lips stretched around his cockshaft while his cockhead found her throat, and pushed a little.\n\n\"Gggglluggguhgggg.\" Jessica swallowed around his cock, tasting cock flavoured saliva. Cock, and something else. Something she'd tasted before, last night. Semen, and.... girl juice? Who? Huh?\n\n\"Gggglluggguhgggg.\" She swallowed again as Erik eased his cock outwards, her tongue moving against his cockshaft as he drew back, lips sealed to him, sucking lightly, swallowing.\n\n\"Oh yeah, you like sucking cock, don't you, baby?\" Erik said, smiling down at her upturned face.\n\n\"Mmmmmm,\" Jessica hummed, as his cock eased inwards, filling her mouth. Yes, she did like sucking cock. She'd liked sucking cock at that party, twenty years ago. She liked it even more now, and she found herself wishing she could go back in time. Twenty years. To that party. Her and Stephanie, the same age Sally was now. The two of them, and all those guys. Jessica shivered with remembered excitement.\n\n\"Let's see you take more,\" Erik said, and he pushed a little, smiling as Jessica's eyes widened, and his cock pushed a little into her throat, and he could feel her throat working on him, feel her head jerking back against his hand.\n\n\"Oh yeah, that's good, Jessica,\" Erik eased back, smiling as she sucked air in. \"Let's do that again.\"\n\nHe did, and her eyes widened all over again.\n\n\"Baby, we better get you used to this.\" Erik grinned. \"Nice and easy, Jessica. To start with.\"\n\nHe did, and by the time he'd worked his cock into her mouth a couple of dozen times, she was taking his cockhead into her throat every time, and yeah, fuck, she was trying to take more all by herself.\n\n\"Jessi...oh!\" Sally's voice interjected, but Erik didn't pause. He continued to work his cock into Jessica's mouth as he turned his head to smile at Sally.\n\n\"Why don't you get down here beside your mom, Sally, and she can show you what she's doing.\" He chuckled. \"Because it's your turn next.\"\n\nHe smiled as Sally walked across the room towards them, her cheeks pink. \"You brought your swimsuits, right? Why don't you change first? We can jump into the Jacuzzi afterwards.\"\n\n\"Okay.\" Sally picked up her handbag. \"I'll go get changed.\"\n\n\"You can change right here,\" Erik said, and he grinned. \"Where I can see you.\"\n\n\"Gggglluggguhgggguhhhh,\" Jessica choked, his cock halfway down her throat, and then \"Gguuggg,\" sucking in oxygen as he pulled back.\n\n\"Uh,\" Sally hesitated, blushing. She'd never undressed in front of a guy before. Erik had taken her clothes off, last night, she'd been naked for him, but undressing? Changing into her bikini? While he watched.\n\n\"Now, Sally,\" Erik said.\n\n\"Gggglluggguhgggguhhhh,\" her mom choked, and now it was Sally's eyes that widened as she saw how much of Erik's cock her mom was taking.\n\n\"Oh my God!\" Sally gasped. \"Mmm... Jessica!\" Almost all of it? How did she...?\n\n\"Sally,\" Erik said. \"Come here.\"\n\nSally came, taking that last step towards him, his eyes holding hers, and she was sure that was what a rabbit felt like as a fox approached it. Her heart fluttered, her knees trembled, and at the last, her lips parted as Erik's lips found them. He kissed her, long and slow and gentle.\n\n\"Gggglluggguhgggguhhhh,\" her mom choked, and she felt Erik moving as he used her mom's mouth.\n\n\"Change, Sally,\" Erik breathed, his lips teasing across her cheek, brushing her ear. \"Now.\"\n\n\"Gguuhhhgguuhhgguhhh,\" her mom gurgled.\n\nSally stepped back, turned her back to Erik, and fumbled for her bikini. Blushing, she slid her panties down to her knees, stepped out of them, and wriggled into her new bikini bottoms. She and her mom had bought thong bikinis, as tiny, and as revealing, as the G-strings they'd both been wearing. Hesitantly, her cheeks flaming, she slid her skirt off, following it with her top, and at least the bikini top covered most of her boobs. Most.\n\n\"Nice,\" Erik said, and he was eyeing her as she turned around, and he grinned. \"You can get down on your knees now, and help Jessica, Sally.\"\n\nSally did. She sank to her knees, beside her mom, wide-eyed as she watched Erik's cock ease inwards between her mom's lips. In and in and in, until her mom's nose brushed Erick's pubic hair.\n\n\"Oh yeah, that's good, Jessica,\" Erik said.\n\n\"Gguuhhhgguuhhgguhhh,\" her mom gurgled.\n\nWatching his cock emerge, glistening with her mom's saliva, Sally couldn't believe how much of it her mom had taken. So much? How had she managed?\n\n\"You take over, Sally,\" Erik said, withdrawing his cock from Jessica's mouth completely, and for good measure he slapped Jessica's cheeks with his glistening shaft. \"You go change now, Jessica.\"\n\nJessica's mouth continued to seek Erik's cock, bringing a chuckle from him, and another slap across the face from his cockshaft.\n\n\"Swimsuit, greedy,\" Erik said, smiling. \"Sally needs some cock too.\"\n\nSally wasn't sure that she needed it, but she knew she wanted it, and her mouth opened wide as his cockhead homed in on her lips, like a bee after honey.\n\n\"That's it, Sally,\" Erik said, easing inwards between those now parted lips, enjoying that slight grazing of her teeth on his shaft as he slid across her tongue. \"Now, use your tongue on me, baby.\"\n\nHe watched Jessica undressing, her back to him. Watched her wriggle into a thong bikini that matched the one Sally was wearing. \"Oh yeah, nice bikini, Jessica.\" \n\nNice firm tits too, you'd never guess she was Sally's mom. She really did look like she could be Sally's older sister though, and he wasn't gonna say a thing to his buddies. His hands held Sally's head, and he looked down and smiled, luxuriating in her tongue sliding against the underside of his cock. Yeah, she was a fast learner.\n\n\"Let's see how much you can take, Sally,\" he said, and he pressed inwards, brushing the back of her mouth, finding her throat, enjoying her suddenly wide-eyed startlement, and the jerking pressure of her head against his hands. Hands that held her right where he wanted her, as he pushed a little.\n\n\"Gguuhhhgguuhhgguhhh,\" Sally gurgled, on the verge of choking, her throat working frantically before he eased back slowly, and she sucked in air.\n\n\"Gguuhhhgguuhhgguhhh.\" She gulped saliva. Saliva flavoured by Erik's cock. She liked that taste now.\n\n\"Good girl,\" Erik smiled, as Sally slid her lips down his shaft, withdrew, slid them down again, taking as much of him into her mouth as she thought she could take, and there was still three inches to go before her nose brushed his pubic hair, the way her mom's nose had. How had she done that? How?\n\n\"Like this,\" Erik grinned down at her, his hands holding her head as he eased in, and in, his cockhead brushing the back of her mouth. Her throat. Pushing. Into her throat.\n\n\"Gguuhhhgguuhhgguhhh.\" Sally gurgled wildly.\n\n\"Relax, Sally babe,\" Erik said, easing back, watching as Sally snorted air, and then he did it again.\n\n\"Gguuhhhgguuhhgguhhh.\" So did Sally.\n\n\"You can do better than that, Sally,\" Jessica said, kneeling on the floor beside her daughter, eyeing her critically.\n\n\"Gluggguggguggaaahhhglumphhh,\" Sally choked around Erik's cock, finding out that her mom was right.\n\nShe could do better than that. A lot better than that, with her mom's encouragement. She could do a lot better, especially when her mom's hand on the back of her head pushed her down, so that Erik's cock pushed even further into her throat. Only momentarily, because as soon as she seriously gagged, Jessica's hand lifted, and Sally's mouth slid back.\n\n\"Help Sally again, Jessica,\" Erik said, eyeing Jessica's little bikini. Jessica did. She helped Sally.\n\n\"Gguuhhhgguuhhgguhhh.\" Sally did better this time.\n\n\"That is better,\" Jessica said, eyeing her daughter's lips sealed around Erik's cock. Weirdly, the sight sent little thrills of excitement through her, and her own words sent more. \"But there's still two inches left. Bob your head on him, and try to take more every time, Sally. If you do it quickly, it won't matter if you can't breathe, okay.\"\n\n\"Mmmmmm,\" Sally hummed, swallowing cock-flavoured saliva yet again, and she was bobbing her head now, slowly to begin with, sliding her lips down as far as she could, and then a little further, choking and gagging, but Jessica was right. \n\nWhen she did it quickly, she didn't feel like she was running out of air, and she could take him a little down her throat, all on her own. So she did, again and again, trying hard, no longer even embarrassed in the slightest that her mom was watching her.\n\n\"Up here, Jessica,\" Erik said, reaching down with one hand, and helping Jessica stand, urging her closer, his mouth finding hers, kissing her as Sally continued to blow him.\n\n\"Let's see if we can make this work with both of you at once,\" he said, a little later, holding Sally's pony-tail, removing his cock from her mouth, stepping back, turning and walking out of the room.\n\n\"I think he wants us to follow him,\" Jessica said, looking down at her daughter, on her knees.\n\n\"Yes,\" Sally said, struggling to stand on legs that were shaky, following her mom out, into the main room. Erik was naked, sprawled back on one of those large padded black leather armchairs, one of his legs hooked over the arm of the chair, his cock was jutting upwards, erect, swollen, obscenely ready. \n\nExposed. Everything was exposed.\n\nHis eyes met Sally's, and he smiled.\n\n\"M... Jessica,\" Sally whispered, tugging at her mom's arm, not taking her eyes away from Erik. He was smiling.\n\n\"Oh god... oh my god...\" Jessica started. \"It's... it's...\" Her knees turned to jello, her mouth flooded with saliva.\n\n\"Who wants to come over here and suck my cock first?\" Erik said, holding himself upright with one hand. \"The other one can lick my balls. First come, first served.\"\n\nJessica reached him first, sinking down on her knees before him, but Sally was only a second behind.\n\n\"This side,\" Erik said, guiding Jessica over, and he grinned at Sally. \"You can lick my balls while Jessica blows me.\"\n\nJessica was already blowing him, engulfing his cockhead, sliding her lips down his shaft, down and down and down, forcing herself further, and those little choking sounds as he entered her throat were natural.\n\n\"Oh yeah, baby,\" Erik groaned, watching Jessica's lips brush his pubic hair, almost reaching the base of his shaft, and he knew his cockhead was in her throat. He could feel her throat working on him as her tongue swirled. \"Now that's a blowjob,\" and as her lips slid upwards, all the way until they circled him just below his glans, her tongue circling delicately, he grinned. \"And that's sucking cock.\"\n\n\"Mmmmm,\" Jessica hummed, her mouth lifting from that cock, and now she smiled at Sally, watching her daughter cupping Erik's balls with one small hand, delicately licking them, and her eyes were sparkling as she ran her tongue up Erik's shaft, all the way from the base to the tip, before she took him into her mouth again, and slid her lips down, further and further down.\n\n\"You can do better than that, Jessica,\" Sally said, and her hand rested on the back of her mom's head, and she pushed her mom's head down. Firmly.\n\n\"Gluggguggguggaaahhhglumphhh,\" Jessica choked as her lips met Erik's body at the base of his cock, her nose buried in his thick and wiry pubic hair, and his cock was halfway down her throat.\n\nSally's hand released her, and her head jerked upwards, she gasped for breath, half choking, and Sally was smiling, her eyes now sparkling.\n\n\"See,\" she said. \"You can do it, Jessica.\"\n\n\"Your turn, Sally,\" Erik said, lifting Jessica's mouth from him, guiding his cock to Sally's lips, and Sally did as he encouraged her to do. Her mouth engulfed his cockhead wetly, her lips slid down his shaft, her tongue caressing his length.\n\n\"That's it, Sally,\" Jessica said, smiling as she pushed her daughter's head down, her hand as firm on her daughter's head as Sally's had been on hers. \"You can do it.\"\n\nSally's eyes widened as her face planted itself firmly against Erik's body, his pubic hair tickled her nose, and his cock filled her throat, half-choking her.",
        "\"Gluggguggguggaaahhhglumphhh,\" Sally choked out, jerking back, and Jessica giggled.\n\n\"Good girl, Sally,\" Erik said, and Sally had no choice. She did it again, choking, her throat convulsing, until Jessica relented, and released her head, so that she could draw another breath.\n\n\"You can lick my balls now, Jessica,\" Erik said, smiling as Jessica obeyed, cupping his balls in her hand, lifting them a little, licking them wetly, lapping at them, slowly coating them with her saliva as Sally worked his cock with her eager mouth.\n\n\"Oh yeah, you two are good,\" he sighed, one hand on Jessica's head, the other brushing Sally's hair back so he could watch her lips sliding down his shaft, and she was trying hard.\n\n\"Now, which one of you am I going to fuck first?\" he added.\n\n\"Mmmmmmm,\" Sally moaned around his cock.\n\n\"Me,\" Jessica exclaimed, still lapping. \"Fuck me first, Erik.\"\n\n\"That's cheating,\" Sally exclaimed indignantly, lifting her mouth from Erik's cock.\n\n\"No it's not,\" Jessica smiled, running her tongue up Erik's shaft to the glans, teasing him with the tip of her tongue. \"You had your mouth full, Sally.\"\n\n\"Up here, Sally,\" Erik said, patting his lap, smiling as Sally began to scramble up. \"No, back to me, Sally, knees here, either side... now, Jessica, you hold my cock... Sally, you can balance yourself on Jessica's shoulders.... That's it... down you go...\"\n\nHis hands guided Sally's hips downwards. Jessica's hand held his cock upright, Sally balanced herself, biting her bottom lip as she eased down, hesitating, shuddering as his cockhead first brushed her. This time yesterday, she'd been a virgin. She'd never done this, not until yesterday evening, and now?\n\nNow her mom was kneeling naked in front of her, holding Erik's cock upright in her hand while she knelt over Erik, her hands on her mom's shoulders, balancing herself as she looked her mom in the eyes, about to be fucked. Right in front of her mom. Not just in front of her mom. Her mom was going to help Erik fuck her, and she knew that was weird, she did, but it was really exciting too.\n\n\"Down, girl,\" Erik said from behind her, his hands caressing her hips, not forcing her down. Encouraging her. \"You can do it. Just let yourself go, Sally.\" His lips brushed the back of her neck. \"Fuck me, Sally.\"\n\n\"Nnnnnnnnhhhh,\" Sally whimpered, thighs quivering as she sank down a little, his cockhead parting her labia, pushing up against her entrance, and now she looked down at herself. Her mom's wrist, her mom's hand, Erik's cock, her sex, parted around his cockhead, and she could see him there, huge, thick. His cock as thick around as the juncture of her thighs, filling that gap.\n\n\"You can do it, Sally,\" Jessica murmured encouragement.\n\n\"It's so big,\" Sally gasped, looking down, and she was stretching where he pressured her. She knew she was. She could feel herself, feel him, there, that thick friction as she opened to him. Exquisite friction, and last night, how had she...? But she had, she knew she had, and she wanted to again, except... it was so big.\n\n\"Like this, Sally,\" Erik breathed from behind her, flexing his hips, slowly, his hands holding her firmly in place, and there was no escape. Not from what Erik wanted, and Sally wanted it too.\n\n\"Uhhhh,\" she gasped, jerking upwards as his swollen cockhead pushed firmly through her entrance with that single, slow, flexing, thrust upwards, and his penetration was remorseless, not stopping until his cockhead entered her.\n\n\"Nnnnhhh,\" she whined, again, as Erik's hands gripped her hips, holding her in place, his cockhead embedded within her, pressing against the walls of her channel, stretching her entrance around his girth. Gasping. Juddering upwards, but his hands held her in place on him. \"Uhh... uhh... uhhh...\"\n\n\"Take it, Sally, baby, take it, do it for me. Do it slowly,\" Erik breathed, smiling, and yeah, he loved this. Coaxing some newly-fucked chick back onto his cock, showing them how much they enjoyed being fucked. Teaching them how much they really wanted to be fucked, until they couldn't get enough of it, and yeah, he revelled in this. Got his kicks from this, and that her mom was helping her, that was even better. Yeah, Jessica was one kinky mom, and he was gonna make sure she was one well-fucked mom before this Sunday ended.\n\n\"Huhhh,\" Sally gasped, sinking back a little, eyes widening as his cockhead penetrated a little further within her, unable to jerk herself up and off that shaft that was beginning to impale her.\n\n\"Nnnnhhh.\" Her fingers clutched at her mom's shoulders, and she shivered with that mix of fear and excitement that she'd felt last night. Unlike last night, there was less fear, and more excitement. She knew she wanted it. Wanted what he had done to her last night. She'd come here to get that, and she wasn't saying no. It was just all so new, and strange, and scary. That, and he was so big. How could he fit?\n\nHow could all of that possibly fit inside her?\n\n\"You're going to take it all, baby,\" Erik breathed, his lips brushing her shoulder, his hands brushing her slender hips, and Jesus, that tight little butt. He was gonna fuck that tight little ass later this afternoon, or this evening, and he was going to tell her that soon. Give her something to look forward to. But for now, he was gonna let gravity do its work.\n\n\"Huhh... uhhh... uhhh...\" Gravity did, and Sally sank slowly downwards, her thigh muscles weakening, unable to hold herself up, panting, gasping, whimpering as his cockhead slowly speared higher within her, filling her, and it didn't hurt at all.\n\nHurt? No, it was... no, there weren't any words for how good it was, as Erik's hands guided her down, and her own hands clutched at her mom's shoulders.\n\n\"Almost there, baby,\" Erik breathed, watching her taut little butt descend in little jerks of movement, and he could feel her muscles trembling, hear her gasps, hear those little moans, sense her hesitancy, and her inexperience, as she gradually took him all.\n\n\"Almost there,\" he murmured again, his eyes meeting Jessica's, over Sally's shoulder, and he smiled. \"Your turn next, Jessica.\"\n\n\"Ohhhh, please,\" Jessica just about moaned in her excitement, and she knew she shouldn't be excited watching Erik fuck her daughter in front of her, but she was. She wanted Erik to fuck her in front of Sally, too, and there was that moment where she thought back to that party, her and Stephanie, those guys, Stephanie watching her, and she'd watched Stephanie, and she shivered with remembered excitement.\n\n\"Uhh,\" Sally gasped, and then came a soft whining little \"nnnhhhhh,\" as she found herself sitting firmly on Erik. Impaled. Stuffed. Filled with cock, and she looked down. Her mom looked down. They both looked as Erik's hands slid from hips to her thighs, and then to her inner thighs, spreading her a little wider.\n\nThey both saw Sally's sex, pink, stretched around the girth of Erik's rigid cock. They both saw the silky olive of her inner thighs, wet with her excitement. They both saw her pink inner lips where they clamped around him, and the little pink button of her clitoris, slowly emerging from those protective folds of skin that usually hid it from sight, but now clearly visible, pink and swollen. Sensitive.\n\nThey both saw, but Sally felt, and she was feeling inside her body. A man's erect cock, a rigid intrusion within her, strange and new, her body accommodating his hard length, tight around him, clasping him, and inside her, he seemed to go so deep, so far within her that it was as if he reached to her heart, and yet she wanted that spear of flesh impaling her. Wanted him inside her, so deep, forcing her to take him.\n\n\"Uhhhh,\" she groaned, and her groan was one of helpless surrender and accommodation, because this was why she'd come here. To surrender herself like this to Erik. To take his cock, and after last night, she'd known what it was to be taken, and that was what she was here for, and it was happening.\n\n\"Nnnnhhhh,\" Sally whined again, leaning forward a little, eyes wide at this thick and hard intrusion within her body, filling her sex, inside her. He was inside her, and twenty four hours ago, she'd never imagined that she'd have lost her virginity, let along to a guy she would only meet that evening. Not just lost it. She'd done it again, and then last night, with her mom.\n\n\"Ohhhhhhh.\" Her sex spasmed hotly on Erik's cock, and she sagged forward a little, her mind emptying of everything except sensation. His body, her body, both of them naked, and her surrender, the surrender of her body, and of her mind, was complete.\n\n\"That's it, baby, let yourself go. You're here for me to fuck, Sally.\" Erik's voice, his words soft and gentle in her ear, told her what she already knew, and her body, acquiescent on him, told him that her body knew why she was here too.\n\nHis hands raised her, up and up until only his cockhead remained within her, and she could see his shaft, rigid, glistening, blue-veined, his balls below, large and round in their ball-sacks. Sally hung there, balancing herself with her hands on her mom's shoulders, eyes wide as she looked down, mouth wide open as she panted.\n\n\"Nnnhhh... uhhh... ohhhh...\" Whining as his hands guided her slowly back down to his lap, fully impaling her on his length. Again. And again. And again. Fucking her slowly while she hung there quivering and moaning, squirming, wanting this pleasure to go on and on, wanting that cresting wave of sensation that he'd brought her to yesterday evening, and again, last night, on the floor of her parent's house, and later, on her mom's bed, with her mom beside them, watching.\n\n\"Please,\" she sobbed, looking down at where his cock entered her, seeing him, seeing herself, feeling everything as he slid into her, and she wanted to take it. She wanted to take everything he wanted to give her, and she moaned again. Moaned as he lifted her, moaned as he let her sink down onto him again. And again. And again. \"Oh please... please...\"\n\n\"I could fuck you all afternoon like this, Sally,\" Erik said.\n\n\"Ohhhhhhh,\" Sally shuddered, and she wanted him to fuck her all afternoon. She wanted the release he'd brought her to yesterday evening, too, and that wave inside her, that tidal wave of pleasure, it was building, slow and thick within her body, and she couldn't stop it. She couldn't hurry it. She couldn't control it. She couldn't do anything except respond to Erik, and it was as if his cock was a pump that slowly built that wave within her, but it was he that was controlling that pumping. Not her. She had no control, none whatsoever, and she knew it.\n\nHis hands moved her, and she was whimpering now, needing what she knew he could give her.\n\n\"Make her, Erik,\" Jessica breathed, and she felt for her daughter, knowing what that torture was like, being brought to that edge, riding the crest of that wave, desperately desiring it to break, but not quite there. When she looked down to where Erik's cock slowly pumped in and out of Sally's sex, her labia were pink and swollen, her inner lips exposed where they clung so tightly to Erik's cock, her clitoris swollen and protruding, and for a moment, Jessica wondered if that was what she looked like.\n\nErik grinned over Sally's shoulder, his hands guiding her down again, and her wetness was coating him where she sat on him, coating his skin, her butt slippery, and her back glistened with sweat.\n\n\"You make her, Jessica,\" he said, smiling, and he moved one hand upwards, to cup one small firm boob, rolling one swollen red-brown nipple between his thumb and his finger as he drew her back against him, arching her a little, so that her back rested against his chest, her head against his shoulder.\n\n\"You make her.\" His other hand rested on her taut, flat stomach, pressing Sally down firmly onto his cock, and he held her there. Arched backwards as she was, her thighs stretched, a little of his cock protruded from her.\n\n\"Please,\" Sally begged, her hips juddering against the restraining grip of Erik's hands, and her own hands were beside her, reaching down, holding on to Erik as she attempted to move herself.\n\nHesitantly, Jessica reached with one hand, her fingers tracing Sally's sex, where she was clamped pinkly around Erik's glistening cockshaft. She touched her, watching Sally's face as her fingers slid over those sensitive membranes that encircled Erik's girth, seeing her daughter's mouth form into a rounded \"o\" as a piquant moan emerged.\n\n\"That's it, Jessica,\" Erik breathed, his lips teasing Sally's earlobe, finger and thumb rolling that rubbery-fat nipple, his other hand pressing firmly down on her taut belly, holding her in place, and he could feel her muscles tightening spasmodically under his fingers, as he felt her tight little cunt clutching at his cock.\n\n\"Ohhhh,\" Sally moaned, doing her best to move, but impaled on Erik's cock, held by his hands, the best she could do was to squirm as her mom's fingers caressed her, touching her wetly, and then her mom's fingertips were circling her clitoris, slickly rubbing in little baby circles, moving the fleshy hood against that sensitive little bud that now protruded so visibly.\n\n\"Aaaahhhhhhh,\" Sally wailed bucking frantically, her sex clenching tight on Erik's cockshaft, and he held her close as she shook through that orgasmic climax that overwhelmed her. There was a long moment where Sally thought she was going to die, quivering and trembling from the intensity of the roiling pleasure that convulsed around Erik's cock, before rushing outwards to fill her body and her mind, on and on and on, lasting for an eternity, until it faded at last.\n\n\"Ohhhhh,\" Sally moaned, sagging limply as her climax slowly ebbed, and she was glowing, shuddering in the aftermath of that pleasure that pervaded her, that golden glow leaving her mind empty of everything except that kaleidoscopic mix of sensations and emotions.\n\n\"Down you get, Sally.\" Erik slapped her butt, his hands easing her up and off him, lowering her to her knees on the floor, smiling as she collapsed slowly forward to lie face down, quivering like jello in the aftermath of that pleasure.\n\n\"Poor baby,\" Jessica said sympathetically.\n\n\"Oh yeah, your turn now, Jessica,\" Erik growled, moving down from his seat in the chair, pushing her onto her back on the floor, moving down and over her, and her hand clasped his cock, stroking him as she spread her legs wide for him.\n\nHe grinned. \"Is there something you want?\"\n\n\"Don't tease me,\" Jessica moaned. Almost, she begged.\n\n\"Okay, I won't,\" Erik said, and he didn't.\n\n\"Nnnnnnuuuhhh,\" Jessica groaned, taking Erik's cock for the first time that morning, her sex dancing on his cock with the excitement of that first surrender, that first driving thrust that filled her with him, the way she'd wanted to be filled since she woke up that morning, taking him, enveloping him, sheathing him, and she had what she wanted now, but Jesus, he was big. He was stretching her. \n\nHe was... Jesus, how had Sally taken him? But she knew how.\n\n\"Relax, Jessica, you know you can take it,\" Erik grunted, pushing deep, demonstrating to her that yeah, she could take it, and she did. She took it all, his long thick cock stretching her labia wide around his girth, his weight crushing her thighs apart as he sank himself to the balls inside her, and began to fuck her.\n\n\"Ohhh... ohhh... ohhhh,\" she moaned, her cries echoing and matching his deep, slow thrusts, as his weight came down on her, his chest crushing down on her breasts, his body pinning hers, riding hers, and she had what she wanted. She was being fucked.\n\n\"You are so fucked, Jessica,\" he growled in her ear, enjoying her little bucks, the frantic movements beneath him, her heels bouncing off his butt, and yeah, she was hot.\n\nJessica looked up at his face as he rode her, experiencing that sweet aching as his cock penetrated her deeply, as deep as those guys at that party had penetrated her, twenty years ago, and her husband's cock didn't fill her like this. Had never filled her like this, and this was being fucked. This was taking cock. This was what her body was designed for. This was how she should be fucked, and she'd never wailed with pleasure, not since that party, twenty years ago, but now she did, without thought. Without embarrassment.\n\n\"Ohhhhhhh... ohhhhhhhhhh.\" With eagerness, and with ecstatic enjoyment.\n\nShe heard herself as her back arched, as she reached down to clasp her own ankles and pull her legs back further, offering herself to Erik, exposing herself, giving herself to him as she'd never done before, not with anyone, ever, and she groaned as his cockhead somehow reached even deeper inside her, groaned as his pubic bone ground against her clitoris, sending a surging rush of pleasure through her, and another, and then another, and the size of him was present, everywhere inside her.\n\n\"Nnnnaaaaahhhh...\" His cock, it was huge. She could feel him in her, pushing against her butt through the canal of her anus, almost as if his cockhead was rubbing against her tailbone and fuck, oh fuck, it was just too good. Too much. Too much pleasure, and she sobbed out her pleasure as she felt that slow wave of her orgasm beginning to build, and his cock sank even deeper into her, vague discomfort inside her telling her that the tip of his cock was brushing her cervix, and she'd never realized a cock could do that, but she loved it that his did, and the noises she was making were incoherent pleasure.\n\n\"Oh wow,\" she heard her daughter say, and her face was beside Erik's, looking down at her, eyes wide. \"Mo... Jessica, he's fucking you so hard,\" and Sally was smiling, her cheeks pink, her eyes sparkling with excitement.\n\n\"Your turn next, Sally,\" Erik smiled, and there was a sharp crack, and a squeak from Sally. \"Why don't you go jump in the Jacuzzi and relax, take a break? I'll get to you again soon, babe.\"\n\n\"Okay, sure,\" Sally managed to say, but Jessica wasn't paying attention to anything except what Erik was doing to her, as her daughter left the room. She wasn't really paying attention for that matter, she was too busy experiencing.\n\n\"Let's get you onto the bed, Jessica,\" Erik said, checking the time. Yeah, one or two of the guys should be here soon, and he'd have Jessica more than ready for them to take over when they walked in. He'd have her begging for it.\n\n\"Ohhhhh,\" Jessica sobbed as he slid out of her, leaving her empty, lifting her effortlessly and placing her on the bed.\n\n\"On your hands and knees for me, baby,\" he said, smiling as she scrambled to cooperate, and then he was behind her, hands gripping Jessica's hips, and he pulled her back hard onto his cock.\n\n\"Uhhhhhh.\" Jessica's eyes widened as Erik's cock buried itself to the balls inside her.\n\n\"Ohhhhhhh.\" Her fingers clutched at the sheets, her sex squeezed down on his cock, clasping him along his entire length, and she could feel every inch of him, his swollen cockhead high inside, his cockshaft impaling her. Jesus, he was so deep inside her, and she couldn't control the noises that were emerging from her mouth. She couldn't control the movements of her body.\n\n\"Oh yeah, Jessica, you're one tight little bitch. Guess your husband's cock's not as big as this one,\" Erik grunted, sliding slowly out, then thrusting in and deep, taking his time, luxuriating in that tight slippery friction, enjoying her shudders as he reached beneath her with one hand to brush her swollen clitoris.\n\nJessica knew he was right. Her husband's cock wasn't as big as this one. Nowhere near as big. Her husband had never done it to her like this, either. Not kneeling for him. She'd only done it like this that one night, at that party, and it was so good. It was even better when he reached for her hair and wound it into his fist, pulling back, tipping her head back, forcing her to push herself back on him, take him deep, his cock moving inside her, sliding, thrusting, penetrating.",
        "\"You like that, huh, Jessica? You like me fucking you?\"\n\n\"Yes... yes...,\" Jessica moaned, and she did. She liked it. She more than liked it. She loved it.\n\n\"Fuck me, Erik... fuck me...\"\n\n\"You bet I'm gonna fuck you, babe...\"\n\n\"Uhhh... ohhhh... ohhh god... ohhhhhh yes... yes yes yes!\" Jessica was grinding herself back against him, her body and her mind absorbed by that oncoming wave of pleasure, and that unbearable need to find her release, and then she was wailing, her sex pulsing and spasming around him as she lost control, and he was fucking her hard, slamming up against the backs of her thighs and that taut firm butt, and she knew she was taking it hard as her climax roiled through her in a surging maelstrom of sensation.\n\nErik smiled as Jessica's sex went wild on his cock, and now he slowed, holding her there, moving slowly inside her, and yeah, he'd keep pumping her until one or two of the guys turned up and took her over, but he'd save that first load for Sally.\n\nWhile his buddies watched her take it.\n\n<center> * * * </center>\n\n\"Suzy's asleep,\" Jeong said, looking out through the kitchen window, rinsing off the plates from lunch.\n\n\"She was out late,\" Max said, eyeing Jeong's butt, and Jesus, just thinking about earlier this morning, before Suzy had walked out and fucked things up, that just did things to him. His cock throbbed. \"Would you like to go for a swim?\" he added.\n\n\"I didn't bring a swimsuit.\" Jeong eyed the pool. She wasn't going home to get hers, either. Wilfred might be sitting outside, waiting. He'd done that before and she'd thought it was sweet of him, then. Now? Not so much.\n\nMax grinned. \"Borrow a swimsuit from Annie. She's got enough.\"\n\n\"I don't think they'll fit me,\" Jeong said.\n\nMax looked at her. Really looked, and probably not. Her hips were way more slender than Annie's, and her boobs were perfect, but... she was smaller than Annie, for sure. \"Borrow some shorts and a t-shirt from Annie's room, and swim in them.\"\n\n\"Uh... when's your wife back?\" Jeong asked. Wet t-shirt. He'd see her boobs, but then, he'd seen her boobs before lunch. More than she'd ever imagined him seeing. Before Suzy interrupted them. He'd have seen even more of her if Suzy hadn't interrupted them. \n\n\"Tonight,\" Max said. \"She's out with her friends.\"\n\n\"Oh,\" Jeong said, and she knew her cheeks were pink. She could see Max reflected in the window too, and she knew what he was looking at, and that pink deepened.\n\n\"Okay,\" she said, after a second, her heartbeat quickening.\n\nYou can run up to Annie's room and change there,\" Max said. He grinned. \"I'm already in my swim shorts. See you in the pool.\"\n\nStanding in Annie's bedroom, in nothing but her black cotton panties, Jeong realized Annie's shorts were all way too big for her. She hesitated for a second, but then she took one of Annie's t-shirts, one that at least covered her panties, and slipped it on. She could put her panties in the drier, afterwards. It wouldn't take them long to dry. Or she could just dry them with Annie's hair-drier, and it felt good wearing that t-shirt, with no bra.\n\nMax would like the wet t-shirt look, she was sure of that.\n\nWalking out onto the deck, she could see Max, already in the pool, swimming. Without giving herself time to think, she jumped straight in, startled when the t-shirt bunched under her armpits, but the cool water felt delicious on her skin. Hastily trying to pull the t-shirt down, she didn't think Max had noticed, he was still swimming lengths.\n\n\"Find something?\" he asked, from the far end, standing.\n\n\"Sort of,\" Jeong said, breast-stroking slowly towards him.\n\n\"Great,\" he said, ducking down and swimming towards her underwater, and underwater, yeah, well, he could see what she was wearing. See right through what she was wearing, because that white-t shirt had turned transparent, and she wasn't wearing shorts, either. Panties. She was wearing black cotton panties, and they weren't as transparent as her t-shirt, but they sure weren't concealing anything. Max surfaced, blinking the water away, standing, and Jesus, just like that he had an erection that rivalled the Eiffel Tower.\n\nSteely hard.\n\nDucking beneath the surface, Jeong almost breathed in water when she suddenly came face to face with that huge bulge inside his swim shorts, and she remembered what it'd felt like earlier, pressed against her. She remembered his kiss, his hands on her, on her boobs, and her nipples ached as she twisted past him, and came up for air behind him.\n\nWhat was she going to do?\n\nThe floater. The large one, big enough for two, floating at the far end, and she swam towards it, freestyle, stroking fast, her feet a blur, an outlet for that pent-up energy and excitement within her. Without thinking, she squirmed up onto the float, wriggling out of the water, moving to the center, the surface hot against her, and that t-shirt clung like a second skin. She didn't want to look, but she did, and it was transparent. Completely transparent, and her cheeks burned as she felt the float move and tip.\n\nFelt him beside her.\n\n\"Jeong.\" His hand was on her shoulder, and she didn't know what to do, so she did nothing. Simply lay there, face down, the heat of the float warming her.\n\nMax looked down at her, face down beside him, and his weight on the float was sliding her towards him, that t-shirt clinging to her like a second skin, transparent. His cock throbbed as she slid into him. He felt her quiver, heard her gasp.\n\n\"Let's take this off,\" he said, and his hands tugged at her t-shirt. \"Lift your hips.\"\n\nJeong obeyed, her breath coming fast as Max's hands worked the t-shirt up to her waist, further up, to just beneath her boobs, and now, without a word from him, she lifted herself so that his hands could work her t-shirt up to her armpits, and they did.\n\nMax watched as she removed it completely, herself, and now she lay before him in black cotton bikini briefs that clung to her skin so tightly that she might as well not have been wearing them. Wet briefs, hiding nothing from his eyes, and her butt was gorgeous. Taut, firmly muscled, slender hips, deliciously curved. Without any conscious thought, he reached for the sunscreen in its holder and uncapped it, squirting a long trail down her spine.\n\nJeong turned her face towards him, acutely conscious of her near-nakedness, seeing his arm before her eyes, but she said nothing.\n\n\"You don't want to get sunburnt.\" Max's hand began to massage the liquid cream into her shoulders, the back of her neck.\n\nJeong closed her eyes, her muscles relaxing as Max massaged the sunscreen onto her back, slowly, even more acutely conscious than she had been, that her t-shirt was gone. That her boobs were pressed against the float, that her panties were transparent. That he'd kissed her, earlier. Kissed her and touched her, and she lay limp under his hand as he worked his way down, wondering what he would do next, neither of them saying a word.\n\nHis hand was on her butt, his fingers tracing her panties, and her sex pulsed hotly, waiting. Waiting for his hand? His touch? But he didn't, and maybe he was hesitating because she hadn't said anything.\n\n\"I don't want my butt burned,\" she said at last, without opening her eyes, \"can you put some more on?\" She wanted his hand on her.\n\n\"Sure.\" His voice, so assured, so relaxed, so confident. Like the movements of his hand on her.\n\nSunscreen squirted onto her butt. She shivered as his fingers brushed her panties downwards, exposing more of her butt, a lot more, massaging the sunscreen into her skin, his fingers digging in a little, kneading, and she bit her bottom lip, shivering, wanting to moan out loud. More than moan, she wanted to say things to him, words, tell him what she felt, what she thought, what she wanted him to do to her, except she didn't know, not really.\n\nDid he want to?\n\nHe was hard. She could feel it, pressing against her thigh, huge and hard, bigger than Wilfred's. So much bigger, and Max was so much bigger than Wilfred. So much bigger than her, and her insides churned hotly. What would it be like with him? So big. Huge, compared to her. All male muscles and hardness, and without thinking, she half turned onto her side, her back to him.\n\n\"Oh!\" Her butt pressed against Max, and he was. He was hard. So hard It felt like a steel bar, and her panties were down around the tops of her thighs, her sex exposed, and the only thing between her butt and him was the thin nylon of his swim shorts. His cock. Erect. Hard. Separated from her by a single layer of that thin nylon material that his swim shorts were made from. So thin that the hot hard heat of him burned into her skin, and she shivered with the excitement that that awareness generated within her.\n\nJeong wanted more.\n\nShe wanted him to do it to her.\n\nTake her, do everything he wanted with her.\n\nOne of her hands tugged and pulled at her panties, dragging the clinging wet material down her thighs. All the way down to her knees, and behind her, she felt Max moving. Separating from her, she felt his shorts sliding down, tugged downwards, just as she was frantically freeing herself from her panties, kicking them off. He was pressed back against her, and her heart seemed to judder and stop for a second, before thumping wildly.\n\nHis cock.\n\nPressed against her.\n\nHot and hard against her butt.\n\nMax was completely naked, just like her.\n\nOne of his arms, the arm that had been under her, it was still under her, but now his hand cupped one of her boobs, and his hand on her was large and masculine. Cupping her, easily cupping her, and he squeezed her nipple lightly, tugged gently, and that heat inside her seemed to flower and expand, filling her, and her sex pulsed with that heat, hot and liquid.\n\n\"Ohhhhhhhh.\" Now she did moan, without any thought, and it was her body that uttered that moan of helpless excitement, not her mind. Not Jeong, because she knew Jeong had no mind left, she was a roiling maelstrom of sensations and emotions, helpless in his hands, and she would do whatever he wanted, move however he wanted her to move.\n\nHe moved her.\n\nHis hands turned her, rolled her onto her back so that she lay there, naked in the afternoon sun, exposed to his eyes. All of her exposed, and she lay there, gazing up at him, conscious of his eyes roaming over her, examining her, seeing her naked, and she'd never been naked like this for anyone, not even Wilfred. Now she was, she was naked for Max, and he was looking down at her, and she was pressed against him.\n\nSo close that she could feel his erection where it rested on her thigh.\n\nSo close that she could feel his eyes on her sex, as if he was touching her there.\n\nHer body responded, helpless with that hot excitement that filled her. Filled her until her nipples hurt, swollen to bursting, and her back arched a little, begging for his hand, his mouth, anything to assuage that aching need. Her sex pulsed, and she knew how wet she was, how sensitive, and somehow, her knees parted, exposing more of her to his eyes, and she wanted his weight. Wanted him to move over her. Wanted him to do what men did when they wanted a woman, and Jeong wanted to be that woman for Max.\n\nShould she touch him? She wanted to. She wanted to hold him in her hand. Stroke him. Clasp him in her fingers. Take him, the way a woman takes a man, surrendering, giving herself to him, and there was no resistance in her as she gazed up at him. She knew she wanted this as his nose brushed hers, and her lips parted eagerly, willingly. Welcoming Max's lips, accepting his kisses. Returning his kisses, her tongue dancing with his, as his sought hers, sliding into her mouth, tasting her, caressing her, teasing her. Jeong moaned into that kiss as his hand cupped her boob, his large hand firm on her, not teasing but taking, exploring her curves, squeezing her nipple a little, gently, then harder, harsher. A man's touch, not hesitant, but confident, assured.\n\nShe wanted that assurance, that harshness, that masculine roughness, and the pressure of his fingers both assuaged that aching need, and fed a new and growing hunger within her for what would come next. His kisses grew more demanding, harsher, no longer gentle, but Jeong wanted that, and she surrendered to his demands, gave her mouth up to him as she arched her back, pushing herself against his hand, moaning as he tugged at her nipple, squeezed, kneading her breast, and those almost too rough caresses were what she wanted.\n\nThey were what she needed, and when his hand left her boob to slide downwards, she smiled inside, her insides rippling as his fingers slid down over her belly, and she waited, both eager and scared, wanting his touch, wanting his hand on her.\n\n\"Ohhhhhhhhh.\" There.\n\nHis hand on her, cupping her where she was so hot and wet, his fingers touching her, and her eyes widened, because he was. He was touching her, his fingertip, she felt it, felt herself parting, and there was that tense moment of suspense, of fear. What would he...? What would it...? What would it be like...? Would it hurt...\"\n\n\"Ohhhhhhhh.\" She moaned as his fingertip penetrated her entrance, slid up inside her, her back arching, her mouth a rounded \"O\" of surprise, and new sensation, and excitement as she felt his finger within her, touching her inside. Strangeness, a strange presence within her, a man's finger, touching her inside, and she was so wet on him. Hot and wet and slippery, and his finger was large, moving inside her, caressing her, and somehow he was doing things to her.\n\n\"Ahhh... ohhh... Maaaaa... Maaaaaax...\" Strange, exciting things. Sensation. Pleasure. His touch inside. On her sex. Her clitoris. Oh god, what was he doing to her? How could his touch be so much better than her own, but it was... oh god, it was so good...\n\nMax couldn't mount her, not on the float, and that was what he wanted to do. All he wanted to do. Mount Jeong, and ride her hard, but it wasn't going to work, not on this flimsy float. They'd end up in the water, and he wanted her now. He could take her on the deck, but he didn't want to take the time to get her there, and who knew if she'd want to by the time he got her there. No, he needed now, and she was half his weight. Half his size, and he knew what would work.\n\nHis finger left her, his hands seized her, and he moved, rolling onto his back, turning her towards him, lifting her, and even as Jeong's legs fell apart, he rolled her up to lie on him, over him, her legs either side of him, his cock pressed against her sex, the silky skin of her lower belly, and his hands moved her, slid her on him, exquisite friction on his cockshaft, and he wanted to drive his cock into her tight little pussy, but he needed that friction now. He needed her body against his, now, right now, and he had what he wanted.\n\nHe had almost all that he wanted, and for that first time taking her, he wanted her under him. He wanted to spread her, take her, drive his cock into that tight little Korean pussy and fuck her good and hard, pounding her, and he couldn't do that here, not on this float, in the pool. He couldn't pound her like this, with her on top either. This would do for now, and his hands moved her on him, slid her on him, and he felt her shudder.\n\n\"Ohhhh... ohhhhh.\" Heard her moan, saw her eyes as she looked down at him, startled, wide, and her cheeks were flushed pink. There was no resistance in her expression. Only excitement, and acquiescence, and her sex slid on his cockshaft, her wet excitement adding to the pleasure of that slippery friction.\n\nLying on him, her legs either side of him, her hands clutching at his shoulders, her boobs sliding against his chest, Jeong moaned as her clitoris fed those exquisite sensations of pleasure into her already pleasure-saturated mind. Through that pleasure, she grasped her own helplessness, knowing that this was what she wanted. This was what her body wanted, to be handled and used, and her acquiescence to the demands of Max's hands was both willing, and complete.\n\nHis hands urged her to move on him, move against him, and Jeong obeyed. She moved, slid, and her movements drew shuddering moans from her as she slid on him, his cock enormous and hard against her belly, and her excitement, her pleasure, they were rising with every movement, until she was moving herself as much as Max's hands were moving her.\n\n\"Jeong... Jeong...,\" Max groaned, reveling in her hot tight body on him, her satin-smooth skin, those large firm boobs against his chest, her thighs, her butt, everything, and if they hadn't been on that float, he'd have rolled her onto her back, eased his cock into her virginal little pussy and fucked her into oblivion. Probably he'd have fucked himself to exhaustion, too, and that thought, of fucking her, that was even more of a stimulus, as if he needed anything more than her naked body, pressed against his so acquiescently.\n\nClinging to him, moving desperately, that wave rising within her, if Jeong could've turned her desires into words, she would have pleaded with Max to take her and use her, but she was incapable of words, only moans and sobs and soft choked off cries escaping her lips, and that wave was growing. Rising higher, and her own need rose with that wave of pleasure, until her need was so intense that she buried her face against his chest, sobbing for breath, choking out words without thought, because she knew this was going to be so good.\n\n\"Please.... Oh yes... Max... Max... please... please...\" It was going to be so so good, she knew.\n\n\"Jeong... Jeong...\" Max used her name as an incantation, a magical word, and everytime he said her name, he moved her on him, and every time he moved her, his own excitement grew, and Jesus, he wanted her so bad. Wanted everything she had to give, and he was going to have her. He was. He had to, but right now all he wanted was to shoot his load, and her sex slid wetly along his shaft, the soft silk of her belly, slippery with sunscreen, massaged his cockhead, and he could sense her excitement, her need, her loss of control.\n\n\"Ohhhhhhhh... ohhhhhhh... ohhhhhhhh...\" Sense when she climaxed in a long shuddering spasm against him, her body quivering, shaking, her feet beating the float, her body taut under his hands, and then limp on him, her breath gusting against his skin, and he knew she had.\n\n\"Ohhhhhhh.\" Jeong, limp on him, glowing, knew she had, too, and it'd been the best. The best ever, as that wave flowed through her, thick as molasses, hot as molten lava, overwhelming her with that special ecstasy that was better than anything, and in the aftermath of that orgasmic bliss, she clung to him as he continued to move her on him, and she felt him, hard, moving against her.\n\n\"Jesus... yes... yes... that's it, Jeong... it's okay... it's okay...,\" Max groaned, both hands on her butt, moving her on him, sliding her up and down on him, on his cock, and she was limp on him. Limp and acquiescent, lying on him, her cheek resting on his shoulder, and he could feel her breath puffing out against his neck as he moved her, the sunscreen making the smooth satin of her belly slippery.\n\n\"Ohhaaaauughhhh...ughhhhhhh...ughhhhhhh.\" He came at last, hard, his cum bursting outwards between their bodies in an explosion of pleasure that defied description, emptying his mind of everything except the sheer ecstatic euphoria of that release. His cum burst outwards, spurt after spurt, his cock throbbing and pulsing, hot and slippery between them as his head arched back, his body arched upwards, and there was nothing but Jeong and him in that moment. Nothing but the taut slender sensuality of her body against his, and the pleasure of that spurting culmination.\n\n\"Jeeeeesssussssss,\" Max groaned, bucking as he spurted again, and he hadn't cum like this, not so hard and so long, not since that first time with that Korean chick in Seoul ten years ago.",
        "\"Ohhhhhh,\" Jeong sighed, feeling his cum spurting out under her belly in that hot flood of jetting bursts, and she knew what was happening, and that knowledge sent a renewed frisson of pleasure and excitement through her as his hands moved her, and that friction... the feel of his cum between them... her excitement flared up anew, and with a little moan, Jeong moved against him as he spurted again, sliding in his cum, and he had, he'd cum so hard, she'd felt him, and his cum was between her skin and his, liquid and warm, mixed with their intermingled sweat, and the sunscreen that he'd applied so liberally, and his cock throbbed, a last seeping spurt that she felt, moving under his hands.\n\n\"Uh...\" Jeong gasped, almost inaudibly, and she shivered. He felt her shiver, quivering, her fingernails digging into his shoulders, and she raised her head, looked at him, biting her bottom lip, her face concentrated, her butt muscles suddenly taut, and she moved against him, again, gasping.\n\n\"That's it, Jeong, it's okay... it's okay.\" Max breathed, and his hands moved her again, moved her against his cock, sliding her easily on him, wetly now, and he saw her face. Saw she was almost there, and he moved her again, smiling, as he watched her face, saw her expression change.\n\n\"Ohhhhhhh.\" Jeong moaned, her aching nipples dragging on Max's chest, and her clitoris slid along the raised ridge of his cockshaft, that sweet friction bringing that sudden cresting wave inside her to its peak. His hands squeezed her butt, moving her on him, dragging her down, sliding her up, shivering with suspense.\n\n\"Ohhhhhhh.\" Moaning with her need, and her excitement, looking blindly down at him, knowing he was watching her, just as she'd watched him, and she knew he'd cum. She'd known what those spurts were, and now she slid in his cum, liquid wetness against her belly, and that second wave, unexpected but welcome, crested and crashed down, hard, jolting her, filling her with a swirling explosion of heated pleasure that started at her center and rushed outwards, filling her down to her toes, and it was good as the first.\n\n\"Ohhhhhhh.\" Her fingers dug into his shoulders, she shivered on him, quivered under his hands, wanting that closeness, needing his body against hers. Needing his hot hard masculinity. Needing his hands, needing him to take what he wanted, and she moaned again, then sobbed, riding that wave of sensation that wracked her body, and she was still sobbing with pleasure as she subsided down onto him, again, soft and trembling now. Glowing.\n\n\"Relax, Jeong, it's okay,\" Max said, one hand on her butt, the other around her shoulders, holding her in place as she lay on him, her head resting on his shoulder, and he could hear her panting. He could feel her heart beating, fast as a bird's, almost fluttering. \"Close your eyes and relax, it's alright. No-one's coming.\"\n\nJeong relaxed on him, she closed her eyes, she breathed in the scent of him, of his sweat, of herself. His cum pooled wetly between them, and she smiled to herself, because next time, she knew. Next time, she wanted that wetness inside her. She wanted Max inside her, and there was the rest of the afternoon and evening, and she smiled, glowing.\n\n\"You little honey,\" Max said, his voice a whisper, listening to her slow breathing, knowing she was fast asleep, and he could lie here on the float, with her lying almost naked on him, for hours. All afternoon, and he smiled as he picked up the bottle of sunscreen, dribbling it onto her back, and down her spine. His hands gently massaged it into her skin, without waking her. She really was fast asleep, and Jesus, he'd cum so hard.\n\nHe hoped like fuck that Suzy slept all afternoon, and Annie didn't come back until the evening, because explaining a naked Jeong lying on him would take a lot of explaining to his daughters. He closed his eyes, breathing in the scent of her hair, the taut softness of her slender body lying on his, her boobs so firm and taut against him, the muscles of her butt, taut under his fingers. \n\nJesus Christ, he had to fuck her. He had to, and he just didn't care if his wife and daughters found out. He wanted Jeong Park so fucking bad, and he knew he should be scared by what he was thinking, but he didn't feel any fear. None at all.\n\nOnly desire.\n\n<center> * * * * * * </center>\n\n\"This apartment's really cool, Dave,\" Ariana said, leaning back against him where they say together on the couch, and the way he looked at her, this bikini had been a really good choice. She'd have been embarrassed wearing it where there were other people, it was so small, but with just Dave and her, it was okay, because she had thought about this, when he'd asked her out on a date.\n\nYeah, she was going to make out with him. Swimming in that rooftop pool had been fun, and the big outdoor patio, and even the food. He was really thoughtful, and funny, and nice, and hunky too. Yeah, he'd make a really good boyfriend, and she was wondering now just when he'd make his first move. She wasn't going all the way with him, not yet, not like Fer with that pig, but...\n\nJesus, she had to stop thinking about Erik and Fer, this morning. That'd been so exciting... no, no, no, it hadn't. It'd been disgusting, the way he abused Fer like that, and Fer had loved it. Ariana wondered if she'd love something like that, and she didn't think so, although she'd seen Erik looking at her while he fucked Fer, looking at her like he was undressing her with his eyes.\n\nWhat was that smell?\n\n\"Does your brother mind?\" she asked, half turned towards Dave, and he was smoking a roll your own, and it smelt like... hey, she knew what it was... she'd smelt that before, at parties...\n\n\"Try it,\" Dave said, offering her the joint he'd rolled. \"Like this,\" he said, lifting it back to his mouth, inhaling. \"Wow, this is really good stuff.\" It was, too. Real good shit. Worth trading Suzy's pussy for, for sure.\n\n\"Uh...,\" Ariana hesitated, but then, when Dave offered it to her again, she let him hold it to her lips.\n\n\"Is it supposed to do something?\" she said, coughing.\n\n\"Not right away,\" Dave said. \"Just try it a few times, breathe it in, hold it in for as long as you can, and watching Ariana, he grinned, and then, after the joint was gone, and he'd lit another one, he started to giggle.\n\n\"Oh wow,\" Ariana said, breathing in when Dave held the joint to her lips, holding her breath. \"This is... wow...\" She started to giggle after that next hit. \"This isn't doing anything.\"\n\n\"Wow,\" she said again, and he was smiling down at her, and they'd smoked the entire thing, and she didn't feel different at all, and she giggled. She was still giggling as she watched her bikini top vanish, and then she stopped giggling and moaned as his lips drew on one swollen nipple. \n\nTen minutes later, she wasn't giggling, she was moaning and offering him her tits, and man, her tits were gorgeous, big and firm, and fuck, those nipples. She loved it when he sucked on them, and when he paused, her eyes were glassy. She was fucked, and the way she looked at him and giggled, yeah, she was out of her gourd.\n\n\"No... no...\" Not out of her gourd enough to let him remove the bottom half of her bikini though. She hadn't said a thing when he removed his swim shorts though, and he was naked, his cock pressed against her thigh, where he faced her, looking down at her, and Jesus, she was hot.\n\n\"You ever given anyone a blowjob before, Ariana?\" Dave asked, more or less out of the blue, except he'd taken one of her hands and clasped her fingers around his cock, and she knew what it was. She'd seen Erik's a few times, and this morning hadn't been the first time she'd watched Erik with Fer, either. She knew what a blowjob was. She'd watched Fer do those, too. Spied on her, really, back when Erik was dating Fer, and she thought about this morning again.\n\nShe thought about Dave, and she'd like him as a boyfriend. She'd have to give him something, and she wasn't going to give him that, not yet. She didn't want to be easy for him. Not like Fer was, for Erik. Guys didn't respect girls who were easy, and besides, she'd never done it before, and she wanted to be sure that Dave was the right guy. Maybe after a few dates.\n\n\"No,\" she breathed, and she liked what his hand was doing there, through the bikini. Her own hand rested on his, stopping his fingers sliding under the bikini, but her sex pulsed at the thought. What could it feel like if he touched her, there? She'd touched herself, she knew what that felt like, and it was good, but the other girls all said a guy's hand felt much better. She knew he'd taken his shorts off. She could feel him, hard, pressing against her, and that sent excited little shivers through her.\n\n\"Oh fuck,\" Dave groaned, and of course he was excited. He was a guy, and his mouth was all over her boobs. \"Would you?\" he added, kissing her before she could answer.\n\n\"I don't know,\" Ariana gasped. \"I don't know what to do next.\"\n\nShe did, sort of. She'd watched Fer. But watching and doing it were two different things. Very different.\n\nDave grinned, because 'I don't know' wasn't 'no', not by a long shot. \"I don't mind teaching you,\" he said, and he was smiling. No, he didn't mind at all. \"Let's see how fast you can learn, Ariana,\" he added. \"Up here. You can rest your head here.\" \n\nHe patted his stomach, and he wasn't in any hurry. They had the rest of the afternoon and evening. He didn't have to have her home until ten, that's what her mom had said. Hours. He could take as much time as he needed to coax her into blowing him.\n\n\"Okay,\" Ariana gasped, twisting and turning, her head sliding onto his stomach, facing his cock.\n\nDave grinned. Yeah, she had the idea alright. All he could see was the back of her head, but he could feel her breath against his cockhead, her cheek on his stomach, her hair falling over him, and his cock twitched and jerked in anticipation.\n\n\"That's good, Ariana,\" he breathed, stroking her hair. \"Now, just hold it with one hand and, you know, kiss it and lick it.\"\n\nAriana didn't say anything, but face to face with his cock, she did what he'd told her to do. She took his cock in one hand, and for a long moment, her heart fluttering with excitement, she looked at it, and felt it under her fingers. That velvet skin, soft and smooth. Rigid beneath, lined with those veins, and there was that swollen head, with the little hole at the top, and, very tentatively, she kissed it.\n\n\"See, that was good, and it doesn't bite,\" Dave said. \"Now, we're going to take this slowly, so why don't you kiss it again, and then lick it... all over.\"\n\nAriana did, slowly. She kissed it, and then she licked it, and then she opened her mouth, wider. She'd watched Fer, she knew what to do, and once it was in her mouth, his cockhead pressing against her tongue, it didn't seem so strange at all once it was inside her mouth, but she was still nervous, because she'd never done this before. She wanted to, though.\n\nDave's fingers ran through her hair, but he wasn't pushing her or anything, and that was okay. It was the physical size, because it was so big and so hard, and her mouth was stretched wide around him.\n\n\"Ohhh yeah, that's good, Ariana,\" he gasped, holding himself still in her mouth, letting her get used to it, and it was good. Her lips were sealed around his cockshaft, her tongue was moving on the underside of his cock and his cockhead, and he felt her swallowing.\n\n\"I'm going to move now,\" Dave said. \"Just a little, so keep your mouth there, like that.\" He started to flex his hips, sliding his cock slowly and gently in and out between her lips, in and out of her mouth.\n\nAriana felt weird, like this huge thick sausage thing was sliding in and out between her lips, which were stretched around him, and he filled her mouth totally. She could feel his cock where it rested on her tongue and slid over it, moving backwards and forwards. She could feel his shaft sliding in and out between her lips where they closed lightly on his shaft as it moved slowly between them.\n\nThere was so much saliva in her mouth that she had to swallow continuously, and now she was really tasting him, every time she swallowed. He was slightly salty, and actually, she liked the taste of him, she liked the excitement at doing this, too, and she experimented, seeing how far down his cock she could slide her lips, before sliding them back up again, bobbing her head on him, like she'd seen Fer doing with Erik.\n\n\"You've really never sucked a cock before, Ariana?\" He sounded disbelieving.\n\n\"Mmmpphhh?\" Was she doing something wrong? She lifted her head, sliding her lips off him and licking them as she contorted herself to glance around and up at him, her hand still holding his cock, all wet and shiny with her saliva.\n\n\"No.\" She wasn't going to tell him she'd watched Fer, with Erik.\n\nDave smiled, his hand brushing her hair away from her face. \"You're doing good for a beginner, Ariana. Now, open wide.\"\n\nHe guided her head back down towards his cock with one hand, his other hand holding his cock uptight and Ariana knew what she was supposed to do. She opened her mouth wide, so that his cockhead could slide in between her lips, filling her mouth again, and now that she knew what was going to happen, she wasn't scared at all.\n\n\"That's good, Ariana,\" he said, tensing a little as she slid her tongue over him. \"I want you to slide your lips down and take as much of my cock into your mouth as you can, and then hold it for a second and slide back up until you've only got my cockhead in your mouth, and keep doing that.\"\n\nHis hand pushed gently against the back of her head, lightly guiding her still uncertain movements as she began to bob her head, sliding her lips down his shaft until his cockhead touched the back of her mouth, sliding back up, licking and sucking and swallowing, really tasting him.\n\n\"Oh yeah, that's good, Ariana,\" he repeated, as her lips and tongue slid down his shaft while her mouth flooded with saliva. She lifted her head, and her lips sucked their way back up until only the head of his cock was in her mouth, resting on her tongue, and then she'd swallow that cock-flavoured saliva before doing it again, feeling his cock slide across her tongue, his shaft slide inwards between her lips.\n\n\"Use your hands on me too, Ariana. Here, like this.\" He lifted one hand from her head, slid it round her to take one of her hands from where it rested on his thigh, and wrapped her fingers around the base of his shaft, holding her hand there, her fingers clasped around him and he was real hard and thick, his girth too thick for Ariana's fingers to meet around him.\n\n\"Use your other hand to cup my balls,\" he said, spreading his legs wide so Ariana's hand had plenty of room to cup those two big round hairy testicles in their loose sacs of skin.\n\nShe'd never actually seen a guy's balls, not like this, and it was fascinating. As fascinating and exciting as his cock in her mouth, and she kept on bobbing her head on him. It was easier now that she was holding him, and it wasn't actually uncomfortable or anything now that she was getting used to it.\n\n\"You're enjoying this aren't you, Ariana?\" Dave asked. He wasn't exactly sure if she was, but he sure was.\n\n\"Mmmmmm.\" Ariana was, and she was half surprised that she was enjoying it so much. She hadn't thought she would, but it was exciting. Far more exciting than she'd thought it would be when she'd thought about it.\n\n\"Stroke me with your hand while you use your mouth,\" he said.\n\nHe used his hands to push her head down a bit further than she'd been taking him. Down so that his cocktip touched her throat. Ariana gagged, but she managed to keep her lips more or less sealed around him, sliding up and down faster now, because his hands had taken charge of her head. She swallowed mouthful after mouthful of cock-flavoured saliva, her tongue running over him, exploring the shape of him, the contours of his shaft and his cockhead, and she held his shaft at the base, slowly stroking him at the same time.\n\n\"Jesus, your mouth was really made for cock-sucking, Ariana,\" he said.\n\nAriana did her best to prove he was right, although she'd never thought of her mouth that way before.\n\n\"Oh yeah, suck me baby, suck me good.... Oh fuck that's good...\" Dave was enjoying what Ariana was doing, and he didn't mind telling her that.\n\n\"Now you're gonna swallow, aren't you, Ariana...\" He didn't mind telling her what he wanted, either.\n\n\"Mmuuuhhgglugghhh.\" Ariana wasn't sure about that, but Dave's hand on the back of her head pushed her mouth down on him and her slips slid down his shaft, his cock brushed the back of her throat, and he held her there as she sucked and licked and salivated and swallowed. She was getting used to this, now, and she'd worked out how to breathe while he was moving.\n\n\"Ohhhh yeah that's good, Ariana.\" Dave's groans of pleasure were louder now, his movements in her mouth more vigorous. \"Oh fuck yeah... oh yeah, Ariana, that's so good...\"\n\n\"Mmmpphhh.\" Ariana's head was bobbing, her mouth sucking, tongue licking, lips sliding and her hand stroked him faster, and it was getting a bit messy, with saliva everywhere.\n\n\"Jesus, Ariana, that's great,\" and Dave began to move his hips more urgently, surprising Ariana, so that she let go of his cock, and used both of her hands to clutch at his hips, holding him there, ready to push herself back if he thrust himself too far into her mouth. She was totally inside her comfort envelope, sucking on him with her lips, licking him with her tongue as he thrust himself in and out of her mouth even more vigorously.\n\nHe reached down, took one of her hands from his hip, and placed it back onto his cockshaft, encouraging her to keep on stroking him as he fucked her mouth, and he was breathing really hard, almost groaning as he tried to hold it off. Jesus, her mouth on him was so sweet, and he wanted it to last as long as possible, but he knew it was coming.\n\n\"Oh fuck, here it comes,\" Dave grunted, and Ariana didn't get a choice about what happened next.\n\nNo choice at all, because one second, her hand was busily stroking him, and her lips were clamped around his shaft, her head bobbing, her tongue working away, swallowing cock-flavoured saliva. The next moment, Dave shuddered, his hands holding her head as he slid his cock deep into her mouth, and then his cock throbbed once. That first jet of cum spurted into Ariana's mouth, taking her more or less by surprise, and then she was gulping it down frantically to prevent herself from choking.\n\nShe was startled, but only that it happened then. She'd seen Fer, watched her with Erik. Watched Erik cum. She knew what to expect, and she knew all about what happened when guys ejaculated. She just hadn't really thought about what actually happened, and what it would be like when those great thick liquid spurts took place inside your mouth. Inside her mouth? Dave's cock just erupted, and that first spurt went straight down Ariana's throat.\n\nShe just about choked before she could gulp it down, and she found out right away what cum actually tasted like, because Dave's cock had flooded her mouth, and he spurted again about a second later, and Ariana swallowed frantically. Another spurt, and another, and another, and she swallowed as much of it as she could but there was more than she could swallow.\n\nA lot more.\n\nIt didn't matter. Dave was getting his rocks off, and he knew what he wanted. His hand held her head firmly in place, while his cock was pushed hard into her mouth, the tip touching the back of her throat, and Ariana swallowed, and swallowed again as he came. And came. And came.\n\nBehind the back of her head, Dave was groaning his pleasure as his cock throbbed and pulsed between her lips. His cum filled her mouth, one great jetting spurt after another, filling her mouth to overflowing however frantically she swallowed, coating her lips, coating her fingers where she still held him, trickling down her chin until, after half a dozen flooding jets he was finished.",
        "\"That was good, Ariana,\" Dave said, as she there with her cheek on his stomach, his cock still in her mouth, feeling a little dazed, tasting his cum on her tongue, her hand sticky and wet where she still held him to her lips, some of his cum trickling slowly down her chin. Dave smiled up at the ceiling, one hand stroking her hair as he felt her licking and sucking on his cock, until he eased it out of her mouth and he was smiling as he slid her around and took her in his arms. Yeah, wouldn't take long before he got those panties off her, and popped her, and he was looking forward to that.\n\n\"How was that, Ariana?\" he asked, holding her close, and she liked that.\n\n\"Okay, I guess,\" she said, licking her lips, running her tongue over her teeth and gums, tasting him as she swallowed. Cum and cock flavoured saliva. She wasn't sure if she actually liked it, but it wasn't gross or anything, and it was kind of exciting to know his cum was in her tummy. That, and she'd given him her first ever blowjob, and his cock rested on her thigh, she felt it twitch and swell on her skin, and when she half turned towards him, and ran her fingers up and down it, it swelled even faster.\n\n\"Is it going to get hard again?\" she asked, curious.\n\n\"In a while,\" Dave said. \"How about we just lie here for a while?\"\n\n\"Sure,\" Ariana said, sleepily, tasting him every time she swallowed. Maybe she'd let him, you know, touch her there, later. Or maybe on their next date. He hadn't actually asked her, not yet, but she was sure he would. She'd given him a blowjob, after all. He'd enjoyed it too, and she wondered sleepily when she could do that again for him. She swallowed, tasting him again, and she almost liked that taste now.\n\nSmiling, she closed her eyes.\n\nTen minutes later, Dave eased himself out from under her head, moving her to the pillow. For a long moment, he stayed where he was, looking down at her lying there on her back, and fuck yeah, she was hot. Slender, slim-hipped, long legged, with those big boobs that made his mouth water and his cock throb. Bigger boobs than Suzy's, that was for sure. That bikini was hot, too.\n\nIt was only mid-afternoon, he could leave her here for her nap, catch one of the games, drink a beer or two, and his bro sure had left the place stocked. No shortage of beer. Wake her up later, and get down to it again, and he was still smiling as he slid naked into the Jacuzzi, a beer in one hand, and the remote in the other.\n\n<center> * * * </center>\n\n\"Uhhh... uhhh... uhhhh.\" Jessica could hear herself. She liked hearing herself now, and she was on her back, Erik's weight on her, and she loved it that he was so large compared to her. Muscular, solid, with those broad shoulders and arms, fit and hard, and he'd rolled her onto her back and re-mounted her without a word.\n\nTaking her, and Jessica was beyond enjoying being taken. She was revelling in it, the way she'd revelled in that one long night back at university, except that back then she'd been uncertain about what she was doing. Too ashamed and embarrassed to realize how much she'd enjoyed what had happened.\n\n\"Ohhhhhh... ohhhhhh...\" Now she knew, and she couldn't get enough of what Erik was doing to her, riding her, his cock thrusting into her, remorselessly slow and steady and deep, and whatever she did, however she moved, it didn't matter. He kept on fucking her, driving her half out of her mind with a pleasure that grew, and grew, and grew, and she wanted what she knew was coming. Wanted what she knew she needed.\n\n\"Yo, Erik, she's hot, dude...\" That new voice startled and surprised Jessica, so that she looked, and what she saw as her eyes darted to the source of those words caused her to buck beneath Erik in sudden shock, because there were two guys standing in the bedroom doorway, looking at her. Her and Erik.\n\nWatching Erik fucking her.\n\n\"Mmmmmpphhhh.\" Erik's mouth sealed itself to hers, his hands pinned hers to the bed, and now he picked up his pace, fucking her hard. Driving his cock into her, pounding his cock into her, slamming her down onto the bed as she bucked under him.\n\nNeal and Bodie, they'd been there before, and they knew the score as well as Erik did. Thirty seconds later, they were as naked as Erik was, their cocks almost as hard, and they were on the bed, on either side of Erik and Jessica, and Jessica's head was arching back, on the edge of that climax that her body craved, closer... closer, and she didn't care that Erik's friends were on the bed beside them, on either side of her, except...\n\n...Except she remembered that long night at that party, and her sex spasmed wildly on Erik's cock, an uncontrolled dance of wild excitement, and her eyes darted from Erik to one side, and then to the other, and what were they... what was Erik... and then she....\n\n\"Ohhhhhh... ohhh... ohhh... ohhhhhh.\" ...wailed in uncontrollable ecstasy as that climax crashed through her in a tidal wave of pleasure that had her bucking and sobbing under Erik, and he didn't stop.\n\nHe didn't stop!\n\nHis cock slammed into her, taking her there and holding her, so that she rode that wave of pleasure, on and on, shuddering, helpless, her mind a maelstrom of sensations without thought, on and on, until at last he relented, slowed, eased her down.\n\n\"Ohhhhhhhh,\" Jessica gasped, her mind in that orgasmic cloud of ecstasy as she floated down from that climax, her sex clamped down on Erik's cock like an oil-filled vice, squeezing, her hips still juddering, knees clasping at his ribs as her heels continued to beat a spastic little tattoo on the small of his back, and it was as good as last night. It was better, because under Erik, she could see Bodie on one side, waiting, and she could see Neal on the other, and she remembered what it'd been like.\n\nShe remembered that party, those guys, and she wanted that again, and there was no reason to say no. None at all, because she wanted this, and she saw their faces as Erik fucked her slowly, and she heard his voice, in her ear.\n\n\"You want them next, don't you, Jessica? You want them fucking you, just like I fucked you last night.\"\n\n\"Yes,\" Jessica moaned, glancing at them. Looking up at Erik. \"Yes... yes... I want it...\"\n\n\"Uhhhh,\" Jessica said. \"Uhhhh... uhhhh... uhhhhh.\" She really hoped he wouldn't shoot his load too quickly, because she wanted another of those, soon. As soon as he could give it to her. \"Are you...\" she gasped. \"Are you... going to... take... uhhhhhh... take turns... uhhhh... with me?\"\n\n\"Would you like that, Jessica?\" Erik looked down at her, and he could read it on her face. She wanted this, and he smiled, because she'd had that look, last night. There had to be something there, in her past, that made her want this. He'd find out.\n\n\"Yes,\" Jessica moaned, without even thinking, and she knew she would. She'd like them taking turns with her. She'd like that a lot.\n\n\"Yeah, you know you're a hot little slut, don't you, Jessica? Well, we're gonna fuck you the way a slut like you wants to be fucked, and you're going to love it, aren't you?\"\n\n\"Yes,\" Jessica moaned, taking all of Erik's cock, her eyes just about rolling back in her head, and she was going to... she wanted to... \"Say that again... tell me what I am...\"\n\nOh Jesus, yes. She was. She knew she was, just like she had been twenty years ago, except now she knew. She knew what she was, and what she wanted, and when she looked up at Erik, and saw those other two faces, on either side of his, she knew she was going to get it.\n\n\"You're a slut, Jessica,\" Erik grunted, knowing that was what she wanted to hear. \"I'm fucking you like you're a hot little Chinese slut, and you love it, don't you?... you want us all to fuck you, I know you do... tell me you do, Jessica. Tell me you want us all to fuck you the way a hot Chinese slut should be fucked... that's what you want us to do, isn't it, Jessica?\"\n\n\"Ohhhhhhh,\" Jessica moaned, and she was almost there.\n\nAlmost... and every time he told her she was a slut, a hot little Chinese slut, her sex danced and spasmed on Erik's cock. She did. She did want them all to fuck her, just like all those guys had fucked her at that party, twenty years ago. She wanted them to make a slut of her, just like those guys had made a slut of her, and she had been, that night. She'd been a hot little Chinese slut, and she knew what she wanted to be, this afternoon, now, for these two guys on either side of Erik.\n\n\"Yes,\" she sobbed. \"I'm a slut... I'm a slut... fuck me... I want you all to fuck me...\" She knew she did. She knew they would, and their faces said they knew what to do with a hot Chinese slut, and she almost climaxed at the thought alone.\n\n\"A hot little Chinese slut, Jessica,\" Erik said, riding her hard, thrusting himself into her, and Jesus, she was so wet. Hot and tight and wet, and he knew she wanted to be his slut. Every time he called her a slut, her cunt did the pussy-dance on his cock. Yeah, she was gonna be their hot little slut today, and he grinned down at her. \"That's what you are.\"\n\n\"Yes,\" Jessica moaned, and she knew she meant every word of what she was moaning. \"Yes, I'm a hot little Chinese slut... I am... I know I am.\"\n\n\"Yeah, you are,\" Erik said, and he grinned at Bodie and then at Neal. \"She takes it up the ass too, guys, so go ahead, fuck the slut any way you want.\" He looked down at Jessica. \"You're a slut, you'll take their cocks up any hole my buddies want to fuck, won't you, Jessica?\"\n\n\"Yes,\" Jessica moaned. \"Yes, whatever you want,\" and she knew she meant it. She would. However they wanted it, she'd give it to them. Like she'd given it to those guys at that college party that night, with Stephanie.\n\n\"Good, Jessica,\" Erik smiled. \"I'm gonna leave these two guys to take care of you. I'm gonna go take care of Sally. Time to make a hot little Chinese slut out of her, next.\"\n\n\"Ohhhhh,\" Jessica sobbed. \"Sally's not... not like me...\"\n\n\"Who's Sally?\" one of the other two guys asked.\n\n\"She came with this one. Popped her cherry last night, and we're gonna spend the afternoon turning her into a good little slut, just like this one,\" Erik said, feeding Jessica his cock, and fuck yeah, her pussy was going wild.\n\n\"Yeah, you like that, don't you, Jessica? That Sally and you are gonna be sluts together.\"\n\n\"Nooooooo,\" Jessica moaned, tossing her head. \"Not Sally... Sally's not a slut... not like... not like...\"\n\n\"Not like you?\" Erik grinned. \"She is, Jessica. She's just like you, and I'm gonna leave you to these two now, and go fuck her.\"\n\n\"Please,\" Jessica sobbed. \"Fuck me some more, first... before you fuck Sally... fuck me hard...\" and another mini-climax hit her out of nowhere, her sex dancing on Erik's cock as she writhed on him, writhed on his cock as he moving inside her, helplessly enthralled by the pleasure she was receiving, and she didn't want to think about Sally. Not Sally. Sally wasn't a slut. Sally wasn't like her mom.\n\nExcept, deep down, Jessica knew she was. Just like her mom.\n\n\"Man, she looks hot, Erik,\" one of those two guys said, and Jessica knew he was looking. \"Can't wait to fuck her.\"\n\n\"Hey, Bodie, go ahead, you fuck her now.\" Erik grinned, down at Jessica. \"I'm gonna go fuck Sally now, Jessica. These two guys, they're gonna take real good care of you, and I'll send in a couple more to help them later.\"\n\n\"Ohhhhhhhh,\" Jessica sobbed, head arching back, and then Erik was lifting himself out of her and off her, and before Jessica could even gasp, he was off her to one side, and one of those two guys was over her, between her legs, and there were hands on her knees, holding her, spreading her, and she was wide open, just like she'd been for those guys back at college, back at that party...\n\nOh my god... he was, he was... just like...\n\n\"That's it, Jessica, baby, spread wide... you can take it... you want it, you know you want it real bad, baby...\" Erik's voice was soft and coaxing, his hand on her knee rather less so as he and Neal spread her wide and held her open for Bodie, and Bodie knew where it went. It was wide open, pink, glistening wetly, and his cockhead was on target, unerring as he zeroed in.\n\n\"Hhhhuuhhhh,\" Jessica gasped, hands clutching at Bodies's hands. Hands that now pinned hers to the bed above her head, back arching as that thick cockhead slid inwards through her entrance, and she was so wet, so slippery wet, distended, open.\n\nEasy.\n\nHis cockhead slid through her entrance, thick sliding friction. Jessica whined, once, juddering as she felt that cockhead within her channel, that cockshaft gripped by her entrance, sliding inwards. His weight came down on her, his eyes looked down into hers, and then a guy she'd never even met, whose name she didn't even really know, he thrust himself into her completely, one long slow driving penetration that only ended when all of his length was inside her, and it was so good.\n\nAs good as it'd been that once, twenty years ago.\n\nShe'd been so easy for those guys, then.\n\nShe'd been so easy this time.\n\nHe was fucking her.\n\n\"Ohhhhhhhh.\" It was as good as it had been when Erik fucked her last night, and just now, and Erik was beside her, holding one of her knees, making sire she was spread wide for Bodie.\n\n\"Uhhh... uhhh... uhhhh...\" As this guy fucked her.\n\n\"She's good, isn't she, Bodie?\" Erik was looking down at her.\n\n\"Ohhhhhh.\" Jessica didn't know what Bodie thought, but his cock was good.\n\n\"Oh fuck yeah.\" Bodie thought she was good.\n\n\"Ohhhhh... ohhhhh... hard... fuck me hard...\" Because it was good. It was very very good, and she was so close, and it didn't matter if it wasn't Erik. She didn't care if it wasn't Erik. Not now, and she looked wide-eyed at the other guy, beside her, watching, waiting. Waiting his turn, and she knew this was going to be like that party, twenty years ago. She knew that she wasn't going to say no, and when she glanced at Erik, he was smiling, and she knew that he knew that too.\n\n\"Yeah, you do like that, don't you, Jessica baby?\" Erik was looking down at her.\n\n\"Yes,\" Jessica moaned, taking Bodie's cock, long and slow and good. Really really good. Taking it all. \"Yes... yes... yes...\"\n\n\"She really Chinese?\" the new guy beside her, not the guy fucking her, asked. \"Never fucked a Chinese chick before.\"\n\n\"Yeah, she is,\" Erik smiled, and he smiled down at Jessica. \"Check out the little slanty eyes, dude. Of course she's fucking Chinese. But she likes big white cocks, don't you, Jessica?\"\n\n\"Yes,\" Jessica moaned. \"Yes... yes... yes.\" She loved big hard white cocks. She was loving this one, the one that was fucking her. She loved it almost as much as she'd loved Erik's. \"I love big white cocks.\"\n\n\"Neal wants to fuck you, Jessica,\" Erik said.\n\n\"Yes, yes... fuck me,\" Jessica moaned, turning her head to look at Erik.\n\n\"Oh man, she's a good fuck,\" Bodie grunted. \"I don't want to shoot my load too quick.\"\n\n\"Uhhhh,\" Jessica said. \"Uhhhh... uhhhh... uhhhhh.\" She didn't want him to shoot his load too quick, either.\n\n\"Fuck me,\" she sobbed. \"Both of you fuck me.\"\n\n\"You try her out, Neal,\" Bodie said, easing himself out.\n\n\"Sure,\" Neal said, easing himself over her, and in. Trying her out.\n\n\"Ohhhhhhhh.\" Neal knew where it went, too, and Jessica took it from him, eagerly. She welcomed him as he thrust himself into her, hard, and then she was taking Neal's cock, and Neal was giving it to her, riding her, and Jessica was almost there as his cock surged up inside her, almost there, almost...\n\n\"Uhhhh,\" Jessica groaned. \"Uhhhh... uhhhh... uhhhhh.\" He was fucking her so good. Erik. Bodie. Neal. She even remembered their names. The one fucking her now was Neal, and the other one was Bodie. Sally could have Erik. Jessica didn't mind. She knew what she wanted. Big hard white cock, and she had it.\n\n\"Harder... fuck me harder.\" She wanted more. She wanted much more, and she remembered that party, and she wished she'd known then what she knew now. If she had, she'd have done that every weekend, and maybe she could do that now. It wasn't like she expected her husband back anytime soon, and he was living with that girl back in China, he'd never know.\n\n\"Am I hot for you?\" she sobbed, crossing her ankles behind Neal's back, squeezing, and moving on him.\n\n\"Oh fuck, yeah,\" Neal groaned, humping her hard. \"Yeah, you're hot, Jessica.\" He looked down at her, breathing hard. Straining. \"You want to be hotter?\"\n\n\"I want to be anything you want me to be,\" Jessica moaned, bucking under him.\n\n\"Oh yeah, you do, don't you?\" Erik interjected, tilting her face towards him, kissing her while Neal fucked her. \"You want to be a hot little slut for us, don't you, Jessica? A slut for me and my buddies, so you just do that, while I go make a slut out of Sally.\"\n\n\"Ohhhhhh,\" Jessica sobbed, her knees clamping hard against Neal's ribs as he rode her, and her feet were kicking high now, her hands clutching at his back. \n\nHe'd said that before.... Slut? Making a slut out of Sally? She glanced upwards, from Neal to Bodie. Erik had gone, and she knew he was going to fuck Sally, and maybe he would make a slut out of Sally. Maybe Sally was like her mom, maybe she was a slut, and Jessica almost liked that thought. That her and Sally were both sluts.\n\nHot Chinese sluts, that guys like this enjoyed fucking.\n\n\"Tag,\" Bodie said, and Neal knew what he wanted, sliding out from inside her, easing back, and Bodie was there, over her, easing his cock into her, and Jesus, she was hot and slippery and tight, and totally fuckable.\n\n\"Ohhhhhhh,\" Jessica moaned, and she did her best to be a hot little Chinese slut for Bodie. It didn't take much. All she had to do was take his cock, and Bodie knew where it went, and Jessica took it, the way a hot little Chinese slut takes a big white cock.\n\nEagerly.\n\n\"Oh yeah, you like that, don't you, Jessica?\" Bodie grunted. \"You like my cock?\"\n\n\"Uhhhh... uhhhh... uhhhhh.\" Jessica did. She liked it a lot. She liked his cock as much as she'd liked Neal's, and she hoped Sally liked whatever Erik was going to do to her, but she was sure she would. After last night, she knew Sally was much more like her mom than either of them had ever guessed.\n\nJessica knew she was a hot little slut who loved big white cocks.\n\nShe didn't want to think about Sally being fucked like this.\n\nBut she knew that if Sally was anything like her mom,\n\nShe'd be just as much a slut for big white cocks,\n\nAs her mom was, and that was Sally's choice.\n\nJessica had already made up her mind.\n\nShe'd take whatever they gave her.\n\n\"Spread wide,\" Bodie grunted.\n\nEverything they gave her.\n\nAny way they wanted.\n\n<center> * * * </center>\n\n\"Like the Jacuzzi, Sally?\" Erik grinned as he slipped into the tub, and she was sitting there, immersed to the neck in the steaming hot water. Naked. She hadn't turned the waterjets on, and he liked the view. Liked that she shaved her pussy, too, and he didn't bother sitting down. He took those couple of steps across the pull, his cock drawn to her lips as if they were magnetic.\n\nSally glanced up at him, then back and what she was face to face with, and she knew what to do. She parted her lips, opened her mouth wide, leaned forward, took him in one hand, cupped his balls with the other, and she knew Erik was smiling as she slid her lips over his cockhead and down his shaft, her tongue swirling on the underside of his cock, tasting him.\n\nSucking, and tasting her mom as she swallowed.\n\nShe remembered that taste from last night.\n\nShe knew what he'd been doing.\n\nHe'd been doing her mom.\n\nNow it was her turn.\n\n\"Oh man, I like that,\" Erik breathed, brushing her hair back from her face so he could watch her lips, sliding up and down, as she bobbed her head on him, taking as much of him in as she could, with every slide of her lips.\n\n\"Mmmmm,\" Sally hummed, enjoying herself. It wasn't strange and scary now. It was exciting, and now she balanced herself with a hand on his hip, doing her best to plunge her mouth as far down his cockshaft as she could. His cockhead seemed huge, inside her mouth, his shaft so thick around that her mouth was stretched wide. She swallowed, tasting him. Male. Masculine. Cock-flavoured, and she wondered if he'd finish in her mouth. She'd like him to do that. Hold her head and make her swallow.",
        "Erik saw them through the glass door, and grinned, waved with one hand, the resting on Sally's head. The other four, right on time, and his grin grew as he watched them peeling off their clothes and dropping them on the floor. Engrossed in what she was doing, Sally had no idea they had company. Not until they were out on the patio, and...\n\n\"Hey Sally, this is Dylan, Carter, Jackson and Leo. Friends of mine. Jump in guys.\" He pressed the button to start the waterjets, bubbles foaming up, hiding Sally's nakedness from their eyes.\n\n\"Erik!\" Sally protested, jerking back, sinking down into the water, acutely conscious that they must have seen her. Naked. With Erik's cock in her mouth. And Erik was still standing there, in front of her, his cock pointing at her face as those guys joined them in the Jacuzzi.\n\n\"Erik!\" she gasped, mortified, tugging at his hand.\n\nHe grinned down at her, before sinking into the water beside her, and with all four of them in the Jacuzzi, it was starting to get crowded. His hands lifted her, moved her, and before she knew it, she was sitting on his lap, her shoulders out of the water, her hands covering her boobs, relieved that he'd turned the waterjets on, and that the bubbles foaming up more or less concealed that she was naked.\n\nCompletely naked on Erik's lap. Acutely conscious of Erik's hand on one of her boobs as well.\n\n\"Pleasure to meet you, Sally,\" one of them said, and they were naked too, all of them.\n\n\"Want me to go get you a bikini?\" Erik whispered in her ear.\n\n\"Please,\" Sally whispered back, embarrassed. \"It's on the bed.\"\n\n\"Hey, just going to get Sally her bikini, guys,\" Erik said. \"Be polite.\" He grinned, and they all knew the story. One look at Sally's burning cheeks told them that.\n\nErik slipped out from under Sally, leaving her immersed in the bubbling water, and stood. He still had that erection, and Sally's cheeks burned as he climbed out of the Jacuzzi and walked back inside.\n\n<center> * * * </center>\n\n\"Hey, Sally, are you with that other chick?\" one of them asked.\n\n\"Uh, yeah,\" Sally said.\n\n\"What's her name?\" the same guy said. He grinned. \"I'm Jackson.\"\n\n\"Hi Jackson,\" Sally said. \"Jessica. Her name's Jessica.\"\n\n\"I'm Leo,\" one of the others said. \"And this dude's Carter, and that guy's Dylan.\"\n\n\"Hi,\" Sally said, sort of smiling. Where was Erik? She really wanted that bikini. This was so embarrassing.\n\n\"You known Erik long?\" Dylan asked.\n\n\"Uh, we met last night,\" Sally said, her cheeks flaming all over again. A lot had happened since she met Erik, and she knew they'd seen what she was doing with Erik when they walked out. They must think she was easy, or something.\n\n\"You guys really hit it off,\" Leo said, and he grinned.\n\nSally knew exactly what he was thinking. They'd seen her. With Erik's cock in her mouth, and the water jets hadn't been on. They must have seen her, too, and that flame spread from her cheeks downwards.\n\n\"Where's... Where's mm... what's Jessica doing?\" Sally asked, eyeing them nervously. She'd never been naked in a Jacuzzi before. She'd never been naked in a Jacuzzi with four guys she didn't know before. She'd never had anyone see her with a guy's cock in her mouth before, either. And she did wonder where her mom was. Why hadn't she come to join them? Maybe she'd thought her and Erik should have some time together...?\n\nAll four of them grinned.\n\n<center> * * * </center>\n\n\"Ohhhhhh... ohhhh yes... yes... yes...\" Erik could hear Jessica from the moment he walked back inside. Sure sounded like she was enjoying herself. When he walked in through the open bedroom door, well, it sure looked like she was enjoying herself too.\n\n\"Man, she's hot,\" Neal grinned across the bed at Erik, and he had Jessica on her hands and knees, boobs quivering as he did her doggy style, slow and steady, enjoying himself, and by the look on Jessica's face as she knelt for him, hands clawing at the sheets, she was.\n\nBodie was there, grinning lazily as he stretched out next to her, watching. \"What's her name again, dude?\" he asked. \"She's better than a good fuck. She's a great fuck.\"\n\n\"Jessica,\" Erik answered, walking over to the dresser. That must be Sally's bikini. \"Wait until you try the other one.\"\n\n\"Bring her in, dude,\" Neal said, grinding himself into Jessica. \"If she's as good as this one, I wanna fuck her next.\"\n\n\"You will, dude. You will,\" Erik grinned. \"But the other one, Sally, I only popped her last night. Gotta break her in slowly, but we'll get to her today.\" He reached down and stroked his cock. Man, he was so hard, he was gonna have to get off soon. \"Everyone'll get to Sally today.\"\n\nHe held up the little bikini. \"Need to get her into this to get her out of the Jacuzzi though. She's a bit shy.\" Shy to start with, anyhow. Couple more hours and she wouldn't be so shy. Nope, a couple more hours and she'd be putting it out there like her mom was now, and as for her mom...\n\n\"How about I send Dylan and Carter in to spell you guys? I'll bring Sally in to meet you guys.\" He grinned. \"She's a little cutie, kinda shy and sweet, college freshman. Jessica here's her mom.\"\n\n\"You're fucking kidding me,\" Bodie said. \"Her mom? Fuck, I thought she was, like, twenty or twenty two or something.\" He eyed Jessica, then grinned. \"Her cunt feels tight as a twenty year old's.\"\n\n\"Oh man,\" Neal groaned, giving it to Jessica hard enough that her firm little boobs quivered like jello dropped into a dessert bowl. \"She liked it when you said that.\"\n\n\"Nnnnuuhhhh...uhhh...uhhhh,\" Jessica groaned, juddering before Neal's slamming drives, hands clawing at the sheets, and her eyes were wide. As wide as almond-shaped eyes got, anyhow, and her mouth was a rounded \"O\" as she sucked in the air she needed for those groans.\n\n\"Hey, told you before, she takes it up the ass too, guys. Just use some lube on her,\" Erik said, and Neal grunted, thrust deep, and that was almost enough.\n\nJessica was close, on the verge of another climax washing through her. Neal was close too, and this time he wasn't stopping. He was riding her into it, driving himself into her, lost in that frenzy of short hard plunging thrusts that told Jessica he was going to finish, and she lost herself in that thick wave of golden pleasure that had been building and building and building, and now that wave broke, crashing through her, sweeping her up and away in a paroxysm of mindless sensation and ecstasy that filled her.\n\n\"Ohhhhh fuck fuck fuck,\" Neal grunted, and he came, shooting his load into the clasping confines of the tight slippery cunt that was busy convulsing on his cock, grunting as his cum burst down his length, exploding into her in great spurting bursts that drove every other thought from his mind.\n\n\"I'll tell Dylan and Carter to come join you guys,\" Erik grinned, watching as Neal eased back from Jessica, leaving her kneeling there, sobbing, her face buried in the bed.\n\n\"Sure,\" Bodie said. \"No rush. I'm gonna take my sweet time here,\" and he was rolling Jessica onto her back, and she was there, gazing up at him, ready and willing, as his rigid cock lanced towards its wide open target.\n\n\"Take this, you hot little Chinese fuck-slut,\" he grunted.\n\n\"Ohhhhhhhhhh.\" Jessica cried out, back arching as she took him, easily. Took his cock in her cum-filled sex, and then he was buried to the balls in her and fucking her slowly, taking his time, grinning at Erik.\n\n\"She's one hot fuck, dude.\"\n\n\"Yeah, isn't she,\" Erik said.\n\n\"Uhhhhh,\" Jessica moaned. \"Uhhh... uhhh... uhhhh.\" She liked being one hot fuck. She liked being a hot Chinese fuck-slut. She wished she'd been a hot Chinese fuck-slut more than that once, back at university, and with her husband back in China, she could. She could be a hot Chinese fuck-slut like this whenever she liked, and she was sure Erik and his friends would like that.\n\n\"Uhhhhhh.\" She knew she would.\n\n\"Uhhhhhh.\" She half-wondered if Sally was going to be a hot Chinese fuck-slut too, but then she stopped wondering, because she was too busy being a hot Chinese fuck-slut for Bodie's cock, and a hot Chinese fuck-slut only had to do one thing. Get herself fucked, and Jessica's mind didn't have room for anything else except what Bodie's cock was doing to her, and what she was doing her best to do for him.\n\n\"Uhhhhhh.\" She crossed her ankles behind Neal's back, moving herself under him, encouraging his excitement, and she hoped Erik's friends would be here soon, because she was going to do her best.\n\n\"Harder... fuck me harder,\" she sobbed, tightening her sphincter muscles, squeezing him, seeing that wrapt expression on his face as he began to pump-fuck her.\n\n\"Yes... yes... yes...\" Oh god, yes! This was even better than last night, and she hoped he wouldn't come too soon. But if he did, it didn't matter. Erik had said he'd send Dylan and Carter to come join Neal and Bodie. She had no idea who Dylan and Carter were, but as long as they wanted to fuck her, she didn't care.\n\n<center> * * * </center>\n\n\"What's my mo...what's Jessica doing?\" Sally asked, as Erik slid back into the pool, still naked, his cock still erect, and she couldn't help blushing at the sight of his erection. That, and she did wonder where her mom was, and why she wasn't joining them in the Jacuzzi. Was she talking to Erik's friends?\n\n\"Jessica? She's doing Neal and Bodie right now,\" Erik said, grinning. \"Hey, Dylan, Carter, why don't you guys go give them a hand, they need a break. Here's your bikini, Sally.\"\n\nSally's blush turned even more fiery as Dylan and Carter stood, because they had erections too, and for a second she wondered what her mom was doing, but she wanted to be wearing that bikini. Now there was only Erik and those other two guys, Jackson and Leo, and Sally wiggled the bikini bottom on. She knew it was small, but with it on, and then the top, she felt a lot more comfortable in the Jacuzzi, even if Erik and his two friends were naked.\n\n\"Come here, babe,\" Erik said, lifting her onto his knee, his arm around her, and on his lap, she was higher, her boobs out of the water, and she was glad for that bikini, even if his hand on her stomach made her want his hand where that bikini now covered her.\n\n\"Sally's gorgeous, hey guys?\" Erik asked, smiling, and Sally blushed as Jackson and Leo smiled back.\n\n\"Then you guys are gonna understand if we leave you alone here for a while,\" Erik said, and he patted Sally's butt, lifting her to her feet, and standing with her. \"Come on, babe, you and I are going off by ourselves for a while.\"\n\n\"Erik!\" Sally giggled with embarrassment, but she scrambled out of the tub, acutely aware of how tiny that bikini was, that it didn't cover her butt at all, and that those two guys were looking at her, and that Erik was naked, and he had an erection, and they'd know that she knew that, because it was obvious. As obvious as what Erik wanted to do, and it was even more embarrassing when he took her in his arms, and held her.\n\nAnd kissed her.\n\nKissed her really slowly.\n\nKissed her very very thoroughly.\n\nHe was so hard. She could feel him, and he was naked, and her bikini was tiny. She'd bought it this morning to wear for Erik, to tease him and excite him, and it covered hardly anything. Which meant there was nothing between his cock, and her stomach, where he pressed against her, hot and hard, and his hands were on her butt, holding her against him.\n\nHer arms vined round his neck. Her shy reluctance turned to shy excitement as his mouth devoured hers, and he was standing with his back to the Jacuzzi, hiding her from his friends' eyes. Hiding his hands on her butt from his friends' eyes, and she couldn't help that soft moan of excitement that escaped her. A soft moan that his mouth on hers muffled.\n\n\"Is there anywhere... can we...,\" Sally whispered, barely able to think. Erik's hands were driving her half-crazy, and she wanted him so much. In the worst possible way, and she wished his friends hadn't come around. \"Can we go to your bedroom?\"\n\n\"Jessica's in there,\" Erik said, and when Sally's eyes widened, he grinned. \"She's getting to know my buddies. Come on, come inside.\"\n\nHe released her, took her hand in his, and led her inside, and Sally followed, acutely conscious of his friends' eyes on her butt, and that he was naked. Naked, and very very erect. They'd know what they were going to do. She was sure they would.\n\nShe went with Erik anyhow.\n\n\"Yes... yes... yes... ohhhhh yes... give it to me... fuck me... fuck me...\" The first thing she heard was her mom's voice.\n\n\"Ughhhh... ughhhh.... Ughhhh.\" Those deep-pitched male grunts, and the slap of skin meeting skin formed a duet with her mom's voice, and right away, she knew what her mom was doing.\n\n\"Mmm... Jessica?\" Startled, Sally glanced at Erik, her heart thumping, and there was that wild frisson of excitement, because she didn't need to look to see what her mom was doing. She knew that. The question was, with who, because Erik was with her. Did that mean her mom was....? With Erik's friends?\n\nErik looked in through the doorway, and Sally looked with him.\n\n\"Mmm... Jessica?\" Sally's shocked whisper was audible to her, but nobody else took any notice. Oh my god. Her mom. On her back, in the center of Erik's bed, and one of those guys from the Jacuzzi was... well, it was really obvious what he was doing. It was just as obvious that her mom was enjoying what was being done to her.\n\n\"Your turn, buddy.\" The guy pulled himself away from her mom, and a second guy, one she hadn't seen before, took his place.\n\n\"You want this, you hot little slant-eyed fuck-toy?\"\n\n\"I want it... I want it...\" Jessica did, and the expression on her face, that wordless moan as she got what she wanted, told Sally that she was enjoying getting it.\n\nNone of them had noticed Sally and Erik.\n\n\"Guess Jessica's occupied, and so's my bed. Let's go over here.\" Erik led her back into the big family room, with the leather couches and chairs.\n\n\"What about your friends?\" Sally whispered, as he eased her down onto one of those couches, and they were huge. Easily big enough for Sally and Erik. Her heart was still pounding from seeing her mom with those guys, all four of them, and she could hear them. She could hear bits and pieces of what they were saying to her mom while they fucked her.\n\n\"...they're busy with Jessica,\" Erik said, removing her bikini top by some sleight of hand that had it off her before she'd even finished laying back on the couch, and then she was, wearing nothing but that tiny little bikini bottom, covering nothing but her sex, and that, only just.\n\nThe sort of bikini bottom someone like a stripper wore.\n\n\"Take my cock, you hot little Chinese cum-slut...\"\n\n\"Ohhh... oh yes... I'm your cum-slut.\"\n\nA stripper, or maybe her mom.\n\nOr a girl like Sally.\n\nErik's cock rested on her thigh, his eyes gazed down into hers as he lay propped up on one elbow beside her, and his hand slid down over her belly to that tiny little bikini bottom. For a moment, Sally's mind hesitated, but her body didn't. His hand deftly tugged at that little bikini bottom, and in seconds it had been removed, leaving her naked.\n\n\"Harder.... Fuck me harder... ohhhhhh yes yes yes yes... do it do it do it to me...\"\n\nAs naked as her mom, on Erik's bed with those four guys.\n\nSally's knees fell apart as his hand cupped her sex, and she was hot and wet and ready for him as his fingers teased and explored, then probed and penetrated.\n\n\"Ohhhhhhhh.\" Her back arched, her hips juddered, and Sally surrendered herself to what she'd wanted since she woke up that morning. Erik's finger pierced her entrance, probed upwards, penetrated deeply, caressing her channel walls, exploring, and it was as good as it had been last night. Better, even, and her clitoris and her sex sent messages of pleasure rippling through her body.\n\nMessages that said, this was what her body was for, attracting a man's eyes, attracting his interest, arousing his desire, giving herself to his desire.\n\n\"Do it in me... oh yes... I want it... I want your big white cock.... Ohh... ohhh...\"\n\n\"You got it babe... you got all of it, you hot little slant-eyed fuck-toy.\"\n\nSally knew what her mom was getting, and she wanted it too.\n\nShe wanted Erik to take her and do that to her so good.\n\nMake her sob and cry out and give herself to him.\n\nJust like her mom was giving herself up now.\n\n\"I want you now, Sally,\" Erik breathed.\n\nShe wanted to be his fuck-toy.\n\nHis slant-eyed fuck-toy.\n\n\"What if someone sees us?\" Sally asked that question, but Erik was already moving, one leg between hers, moving himself up and over her, and after last night, Sally knew what he intended to do. She knew what he wanted, and her body knew what she was going to give him, even if her mind was hesitant.\n\n\"Don't worry about them,\" Erik purred, and her sex said yes please as he moved over her.\n\n\"Wider, baby, spread them wider for me,\" Erik breathed, nudging at her thighs with his.\n\nSally did, obediently, and after last night, she knew why she was spreading wide. She spread wider for him, and that was all Erik needed, one of his hands urging one of her knees back. All the way back, to brush his ribs, her foot trailing across his hip, and her other leg followed. Sally knew what she was doing, and she'd done this last night, with Erik. She forgot all about her mom, in his bedroom. She forgot all about his friends.\n\nIt'd been so good, last night, and now there was only her, and him.\n\n\"Good girl,\" Erik breathed, and he smiled as his weight came down on her, those cute little tits pushing upwards against his chest, her slender body so close to his, her sex parting for his cock-head, hot and wet and slippery-tight, and....\n\nHis cock...\n\n\"Uhhh.\" Sally's eyes widened, and there was that little buck of her body, that jerk of her head, her eyes looking into his as his cock-head eased through her entrance, and Erik loved that look. The wide-eyed surprise, the little buck that said their body knew. That look into their heads that said, yeah, wow, they were about to be fucked, and this was what a cock inside their pussy felt like. That sudden puff of breath as Sally gasped, the surprised little noise she made as he worked his cockhead backwards and forwards. Worked his cockhead into her.\n\nEvery little reaction of Sally's fuelled Erik's pleasure. Fed his enjoyment, because there was nothing he enjoyed more than this. Taking an innocent girl, the sort of virginally nubile young girl Sally had been yesterday afternoon, and turning her into a hot little fuck-toy, and Sally was well down that path now.\n\n\"Is that what you want?\" he breathed, easing inwards a little, luxuriating in that slick tightness that clasped his cockhead, gripped his shaft, just below the glans, and as he drew back, he tugged at her, just a little. Enough that she gasped, her eyes widening even more.\n\n\"Uhhhh.\" Luxuriating in the shivery little gasp as he pushed himself inwards, forcing the tightly-resisting confines of her channel, working a little further into her, and he was going to take his time here. Wasn't like there was any rush. He had all the time in the world to bury himself to the balls in this hot piece of teenage Chinese pussy, and she'd loved it last night. He was gonna drive her out of her mind this afternoon. And then...\n\n\"Fuck me... fuck me....\" Jessica's voice carried clearly through the open door.\n\n...and then... she'd be a hot Chinese cum-slut, just like her mom.\n\nErik had never had a little Chinese fuck-toy before. Never.\n\nNow he had a pair of red-hot Chinese fuck-sluts.\n\nWell, one, but Sally was coming along.\n\nShe'd be a little fuck-slut soon.\n\nAnother couple of hours.\n\nJust like her mom.\n\n\"You want that, don't you, babe?\" He could sense her quivering excitement, her hesitant eagerness, and he'd known that in the Viper, on the way over here, that both of them were hot for more. He hadn't expected Jessica to be quite so hot and willing, but like mom, like daughter. Turning Sally into the sort of willing fuck-toy that her mom was shaping up to be was going to be fun. Sunday afternoon fun.",
        "\"Nnnnuhhhh,\" Sally gasped, straining as her channel took more of his cock.\n\n\"Nnnnnuhhh.\" Last night, she'd taken all of it, but it was so big.\n\n\"Aaaohhhhh.\" Big? Oh my god, it was huge.\n\n\"Nnnnooooh.\" Her back arched, her hands scrabbled at his back, clutching at him, her knees clutching his ribs, as Erik gave her another inch, before slowly easing back. Back, and then back some more, until only his cockhead was inside her, her tight little cunt squeezing and massaging his cockhead, and...\n\n\"Uhhhhh.\" He gave her back everything she'd had, and another inch with it, slowly forcing his cockhead higher, deeper, and fuck, he loved it. Hot, tight, slippery, almost-virginal pussy, and he held it there, half his cock in her, and she was shuddering under him, almost vibrating, whimpering, her cunt just about milking him, and Erik knew. He'd been here before, any number of times, and Sally was just one more cock-struck little slut, who'd found out that a hard cock, and a good fuck, was the best thing there was in life.\n\n\"Please,\" Sally moaned, and she wanted it. She wanted it all, like she'd got it last night, and she didn't care that his friends could walk in on them. She didn't care that her mom was getting it from four guys on Erik's bed. She wanted to get it from Erik, now, all of it.\n\n\"Please... please...\" She didn't know what to do, but she knew what she wanted.\n\n\"Relax, Sally, you're going to get it all.\" Erik smiled, and he eased back a little, luxuriating in that hot tight slide, that exquisite friction where her cunt held him like a vice, and then...\n\n\"Nnnnnaaaaaoooaaaaahhhhhh.\" Sally bucked like a half-broken filly in a rodeo, wailing as he gave it to her. Gave her all of it, everything she'd wanted, buried to the balls inside her, not hard and fast, but slow. Slow and thorough, and deep, on and on and on until she'd taken all of him. So deep, so high inside her, all the way, until he was pressed up against her where their bodies joined.\n\n\"Huhhh... uhhh-huuhhh... huuhhh... huuhhhh.\" Sally's groan was staccato, fading away as she gasped for air, growing in volume as she exhaled, and her entire world was Erik. Him. His eyes looking down in hers, intent, that half-smile on his face that said he knew what he was doing to her. His body, on hers, dominating her, spreading her wide, exposing her, controlling her, possessing her, and his cock.\n\nHis cock.\n\nRigid, a steel bar within her, impaling her impossibly, and she writhed under him, juddering, her sex wracked by uncontrollable spasms as she took him, surrendered to him, a sheath for his sword, his to take, his to use, and beneath him, spread wide for him, Sally surrendered herself utterly and completely to him, knowing her body was his to use, her sex was his to possess, and she was there for him to take his pleasure with, and his eyes, his expression, his body, they told her that he knew that, and that he was going to take her, and he was going to use her.\n\nLike he'd used her last night.\n\n\"Please.\" She managed to find a word between those groans, possessed by those sensations, that exquisite need to give herself, to surrender herself to him, completely. Utterly.\n\n\"Now,\" Erik murmured. \"Now I'm going to fuck you, Sally.\"\n\n\"Ohhhh... ohhhhh... uhhhh... ohhhhh.\" Long slow thrusts, in, and then out, deep, gentle, steady. Long rhythmic thrusts that filled Sally's channel inexorably with every flexing motion of his hips. Thrusts that ended only when all of him was buried in her, again and again.\n\n\"Ohhh... ohhh... ohhhh...\" Thrusts that her channel took, and within her there was that molten heat, that growing pleasure that she'd felt last night, and her body remembered. Her body wanted it. Wanted to give what Erik wanted to take, and his cock was remorseless in it's taking.\n\n\"Oh yeah, you're made to be fucked, Sally,\" Erik breathed, fucking her. Enjoying her, the way he enjoyed every girl he fucked. The tight slippery friction, that heated grip on his cockshaft, that tight clasp of her cunt around his cockhead as she engulfed him, and her hot little cunt seemed to shiver on his cock, tightening as he filled her, and her body was his.\n\n\"Take it all, babe, take it all,\" he grunted, feeding her every inch of his cock, and he loved those moans, those delicious little sobbing cries, that blind look in her eyes as her pleasure grew, and he loved it. He fucking loved it. Nothing better than taking some hot young chick like Sally, and teaching her what her body was for. Teaching her that her body was all about receiving that pleasure, that sensational enjoyment that a good fucking could bring, and he enjoyed that.\n\nHe enjoyed bringing chicks that pleasure, enthralling them with that exquisite enjoyment, that ecstasy, that a guy who knew what he was doing could bring them to, and Erik knew what he was doing. He had no idea how, it was just something he knew. How to talk to them, caress them, with his words and his mind as well as his hands and body, and he just knew what gave them that pleasure. What would stoke that fire of passion and desire that burned within every girl, every woman, and he could light that fire, feed it, stoke it until it was an all-consuming furnace.\n\n\"Yes... yes...\" Sally writhed helplessly under him. Blindly. Wanting, and she wanted what he'd given her last night. She wanted that so much, and she was so close. So very close, and his cock thrust into her. His body rode hers, took hers, hot and hard where she was soft and giving, and in that moment, he was everything, and the outside world faded away, until there was nothing but his taking, and he took and took and took, and Sally gave and gave and....\n\n\"Let's go join your mom,\" Erik said, sliding one hand under her taut little butt, the other under her back, and he lifted her easily, still inside her, standing.\n\n\"Wrap those legs around my waist and hang on, babe,\" he said, his hand under her butt moving her on him, so that she vined her arms around his neck, and crossed her ankles behind his back, sobbing helplessly as he moved inside her, moved her on him, and he was walking with her, fucking her as he walked.\n\nInto his bedroom, and it was only when they were in there, that Sally realized where they were.\n\n\"Uhhhhhh,\" Sally groaned, eyes wide as Erik lowered her to the bed, beside her mom, moving down with her, still inside her. Shivering, she could see his friends, looking at her, and as soon as she was on her back on the bed...\n\n\"Uhhh... uhhh... uhhh...\" He was moving again, inside her. Thick, hard slides, in and out, slowly sheathing himself in her channel, easing back, easing in, his body on hers, in her, possessing her.\n\nFucking her.\n\nIn front of his friends.\n\n\"Sally?\" In front of her mom.\n\nAll of them watching Erik fuck her.\n\n\"Ohhhhh,\" Sally moaned, back arching as he somehow did something to her inside, with his cock, that sent shivering ripples of sensation through her, and her eyes met her mom's.\n\nHer mom, who was on her hands and knees, jolting as whichever of them it was who was kneeling behind her, fucked her. Fucked her so that she jolted with every thrust, her boobs quivering, her moans and gasps coming from her mouth uncontrollably, because she wasn't in control of anything, and she knew it.\n\n\"You like that, don't you, Sally?\" Erik breathed, easing in and out, slowly, and his balls were going to burst. He'd been holding it back, drawing it out, working up to this moment, and now it was time to make Sally their newest little fuck-toy.\n\n\"Ohhhhhhh,\" Sally moaned, looking up at him, seeing only him. Erik. Erik and her mom, both of them looking down at her, and she liked it. She loved it. Loved what he was doing to her, but she didn't want to think about his friends. All she wanted to think about was him. Erik. Doing what he was doing, and it was like she was a piano, and he was playing her, and whatever key he touched, she responded, and her body was the piano that he was playing.\n\n\"Ohhhhhhh.\" Playing her so good.\n\n\"Hey dude, she's as hot as you said she was.\" Sally didn't know who's voice it was, but she could see him looking down at her, and Erik slowed. Sally didn't want him to slow. She wanted it hard.\n\n\"Oh yeah, she's one hot fuck,\" Erik grunted. \"Aren't you, babe?\"\n\n\"Ohhhhhhh,\" Sally moaned, and she had no idea if she was a hot fuck, or not, but she knew she loved Erik fucking her, and her mom was on her hands and knees, right beside her, and their eyes met.\n\n\"Sallyuhhhh.....\" Jessica's eyes widened, and she juddered as she took what she was given, and Sally knew her mom loved what she was getting, too. Except...\n\n... it wasn't from Erik, and she could see the guy's face, looking down at her, watching as Erik gave it to her, and her heart jolted with that weird mix of excitement, adrenaline, and embarrassment that she'd been feeling ever since she'd woken up this morning.\n\n\"Uuuuhhhhhh,\" Sally groaned, her back arching, as Erik thrust himself into her. All the way into her.\n\n\"Uhhhhhh.\" Her hands clutched at the bed, her firm little breasts quivering as Erik eased himself back out, before thrusting himself into her once more.\n\n\"Ohhhhh.\" Sally's head jerked back, and her eyes met her mom's again, startled, astonished, horrified, excited, and Sally knew her own eyes shared all of those emotions and sensations.\n\n\"Uhhh... uuuhhh... uhhhh,\" Jessica gasped, hair flying, juddering as the guy behind her picked up his pace, and even through the excitement of Erik riding her, Sally was fascinated.\n\n\"You want to watch Neal shoot his load in Jessica, babe?\" Erik asked, and he didn't wait for an answer. He lifted her, moved her, slid her around so her face was right next to her mom's, almost touching, while he continued to fuck Sally, slowly.\n\n\"Uhhh... uuuhhh... uhhhh,\" Jessica gasped, and then \"mmmmuuuuu,\" as Erik turned his head, turned hers with one hand, and kissed her. He kissed her mom, while he fucked Sally, and Sally watched her mom kissing him back while some other guy fucked her mom.\n\n\"Yeah, Jessica's a hot little fuck-toy alright,\" Erik said, looking down into Sally's eyes as he hilted his cock in her, slowly, and held it there, all the way up inside her, high inside her. Huge inside her.\n\n\"You think Jessica's a hot little fuck-toy, Neal?\" He said that without taking his eyes from Sally's.\n\n\"Yeah, she is, she's a real hot little fuck-toy,\" Neal said, not stopping giving Jessica what you gave a hot little fuck-toy, and Sally knew he was, because she could see her mom's face.\n\n\"Why don't you let Leo take a turn with Jessica, Neal,\" Erik said. \"She'd like that. Fuck-slut's like being shared.\"\n\n\"Sure,\" Neal grunted, and a couple of seconds later, another face was looking over her mom's back, and down at Sally's face.\n\n\"Nnnnuhhhhh,\" Jessica groaned. Her eyes widened. Sally's eyes widened too, as she realized what'd just happened.\n\n\"You think Jessica's a hot little fuck-toy, Leo?\" Erik smiled down at Sally.\n\n\"Uhh..uhh...uhh...uhh...uhh...uhh...\" Jessica gasped, quivering, and Sally knew why.\n\n\"Yeah, Jessica sure is a hot little fuck-toy,\" Leo said. \"We've never had a Chinese fuck-toy before, have we?\"\n\n\"No,\" Erik said. \"Whaddaya think she's like?\"\n\n\"Nice,\" Leo grunted. \"Really nice. Going to enjoy shooting my load in this cum-slut.\"\n\n\"Nnnuhhhhh,\" Jessica moaned. \"Yes... yes... do it to me... I want it... I want it...\"\n\nErik held Jessica's face up, finger under her chin. \"Do you like being our hot little Chinese fuck-toy, Jessica?\"\n\n\"Uhh...uhh... yes yes yes... I love being your fuck-toy,\" Jessica moaned. \"I want to be your fuck-toy.\"\n\n\"Our hot little Chinese fuck-toy,\" Erik murmured, still fucking Sally.\n\n\"Yes... yes... your hot little Chinese fuck-toy,\" Jessica moaned, and she remembered some of the thing thoses guys had said to her, twenty years ago, in that room, on the bed beside Stephanie, while they'd used her. They'd said lots of things to her. About her. Degrading things. Exciting things. Things she'd been ashamed of. Then.\n\nNow?\n\n\"I want to be your hot little Chinese fuck-toy...\" Now she wanted to revel in whatever they wanted to do to her, and she wasn't ashamed at all. She loved it. Loved what they were doing to her. Loved that she aroused them, and excited them, and that they wanted to fuck her. That all of them wanted to fuck her. That she wanted that... wanted them all to fuck her.\n\n\"I want to be your hot little Chinese fuck-slut...\" That's what those guys had called her and Stephanie. Fuck-sluts. Other words too. Slant-eyed whore. They'd called her a slant-eyed whore. A fuck-slut. A cum-dump, and they had, they'd cum on her, on her face, on her boobs. They'd cum in her, everywhere. Her mouth. Her sex. Her ass. Everywhere they wanted to fuck her and Stephanie, they'd fucked them, and cum in them, and that was what Jessica wanted.\n\n\"I want to be your hot little Chinese cum-slut...\" Jessica sobbed, seeing the horrified excitement on Sally's face as Erik fucked her, and she tried to smile, but all that came out was another groan as Leo humped himself into her, hard, and she knew she'd be a cum-slut for him soon. Like she'd already been for Neal, and for Bodie.\n\n\"Oh yeah, you're our cum-slut tonight, Jessica,\" Erik purred. \"Hey, Ben, take over from Leo, buddy. You guys tag team Jessica, show Sally here what a fuck-toy's for.\"\n\nThey did. Ben, Dylan, Bodie, Carter, Jackson. Five minutes, five different guys, tag-teaming Jessica as she continued to kneel there, taking their cocks, one after the other, and they didn't go easy on her. They fucked her hard, pumping their cocks into her tight slippery cunt, kneeling behind her, taking her.\n\n\"They're using Jessica the way you use a fuck-toy,\" Erik explained to Sally, easing his cock in and out, slowly, gentle thrusts, long thick slides that filled Sally, possessed Sally, and the pleasure he brought her was filling her to bursting. He turned his face again, looked into Jessica's eyes.\n\n\"Do you want to be a hot little Chinese cum-slut now, Jessica?\"\n\n\"Ohhoaaahhhh,\" Jessica groaned, because Jackson was pump-fucking her now, short, fast and hard, pounding his cock into her in that frenzy that told her he was going for it, and any second now, he was going to shoot his load in her, and just the anticipation was enough to send her over the edge.\n\n\"Ohhhoohhhooohhhhooohhhhhh.\" That climax rushed through her in an immense wave of sensation that drove every thought from her mind. Drove everything from her mind, but for the intensity of that ecstasy that washed through her in a great rushing wave of pleasure, her sex squeezing and spasming on Jackson's cock, and as for his cock...\n\n\"Oh yeah, take my cock, you hot little slant-eyed cum-whore,\" Jackson groaned, ramming his cock into Jessica, hands gripping her slender hips, pulling her back until he was buried to the balls in her, and he knew he was gonna shoot his load in the fuck-slut, and he did, his cock throbbing, his cum bursting outwards, pumping into her, and her hot little cunt squeezed down on him and milked him like a fist, sucking the cum from him as he pumped her full.\n\n\"Nnnhhhhh...nnnhhhhh....nnnuhhhhh...\" Jessica groaned, eyes widening, mouth working, gasping and groaning with every burst of cum that filled her, flooding her, pumping her full, and those bursts within her, those hot jets of cum, that sent her into a second climax, as intense as the first.\n\n\"Your turn, Dylan,\" Erik said, and as soon as Jackson had eased himself out of Jessica, Dylan was there, except that he rolled Jessica onto her back, and moved her next to Sally before he eased his cock into her, and this time Sally didn't get to watch her mom's face as Dylan fucked her. She got to watch Dylan's face as he fucked her mom.\n\nShe got to hear her mom, though.\n\n\"Uhhh...\" squelch \"Uuhhhh...\" squelch \"Uuhhhhh\" squelch\n\n\"Jesus, I love fucking you, you hot little cum-slut,\" Dylan grunted. He looked down at Sally. \"How's she, dude?\"\n\n\"Fucking tight,\" Erik grunted, smiling down at Sally, picking up speed.\n\n\"Uhh..uhh...uhh...uhh...uhh...uhh...\" Sally gasped, because he was really fucking her now, and she was just about... she was going to... almost... almost... almost...\n\n\"Oh man, I gotta do this,\" Dylan grunted, and Sally watched his face as he blew his load in her mom, grunting as he came, and she could hear her mom's excitement as she took it. It wasn't exactly like she was counting, but she'd just watched two guys cum in her mom, one after the other.\n\n\"Your turn, Leo,\" Erik said, and Sally saw her mom take Leo, and those squelches as he started to fuck her were even louder.\n\n\"Please,\" Sally begged, almost desperate for that climax was hovering inside her, and somehow Erik was keeping her there, on edge, almost but not quite, and she knew she was almost there. Knew he was holding her there, but she didn't know how, and she wanted it, and Erik could give it to her, but he wasn't, and she needed it so bad. So baaaaad.\n\n\"Oh pleaaaaasase...,\" and she was moving beneath him, knees clutching at his ribs, straining as she moved herself on his cock, just a little.\n\n\"Oh yeah, you like that, don't you baby?\" Erik just about purred, and Sally did. She loved it.\n\n\"Do it to me... do it to me,\" she pleaded, wanting him to push her over that edge, wanting him to satisfy himself with her, the way he had yesterday evening. Wanting that throbbing culmination that she knew would satisfy him, because she knew now that was what she was for. That was what her body was for, for him to take his pleasure with, just as her sex was there for his cock to fuck. For him to cum in.\n\n\"What do you want, Sally, baby? Tell me?\" Erik breathed, humping her slowly, long slow slides, and fuck, she was wet. Wet and tight and slippery and ready for it. Ready to take it, and he smiled.\n\n\"Do it to me,\" Sally begged, back arching. \"Finish in me... please... do it to me... I want it... I want it...\"\n\n\"Oh yeah, Sally. You're going to get it now,\" Erik grunted. \"Tell me you want it baby. Tell me you want my cum...\"\n\n\"I want it,\" Sally moaned, taking Erik's cock all the way. \"I want it... I want it...\"\n\n\"Oh yeah, take it, you hot little fuck-toy,\" Erik grunted, and beneath him, Sally climaxed as that first giant burst of Erik's cum exploded from the tip of his cock, flooding her sex with a torrent of cum in one long instant in time.\n\n\"Ohhhhhhhhhh,\" Sally wailed, convulsing, her sex spasming on his cock as he throbbed inside her, spurting a second hot burst of cum, and that wave of hot melting pleasure washed through her in a thick slow wave. \"Nnnnnnooohhhhhhhhhhhh.\"\n\nOn her hands and knees beside Sally again, Jessica knelt for Leo, taking his cock, watching Sally climax, and she knew Erik was climaxing in her, and she knew Leo was about to shoot his load in her.\n\n\"Leo, Ben,\" Erik grunted, pulling out of Sally and rolling around to kneel over her face, stroking his cock, continuing to shoot off over Sally's stomach, and then her boobs, and then her face, all as Jessica watched, wide-eyed, gasping as Leo pulled out of her.\n\n\"Uhhhhhhhh.\" Juddering as Ben took his place.\n\n\"Ooooooohhhh,\" Sally sobbed, as Erik's cum splattered across her cheeks and into her wide-open mouth, and then....\n\n\"Uuuhhhhhh.\" Leo's cock buried itself in her sex, his weight came down on her, and he was fucking her before she realized what was happened, her sex clamping down on him as he rode her through her orgasm, and she was sobbing and moaning and bucking beneath him as he fucked her.\n\n\"Ohhhhhh fuck.\" Leo, he'd been close when he was fucking Jessica. He was even closer, now, his cock sheathed in Sally's slippery-slushy tightness, and Jessica had been tight. Sally gripped his cock like a slick vice, and the first hot slippery slide as he sank himself to the balls in her told him there was no stopping now, not until he blew inside her, and his balls told him this was gonna be a big one.",
        "\"Ohhhhhhhh...\" Sally's moan, that shocked and startled look on her cum-splattered face, the sudden dance of her sex on his cockshaft, the soft-taut resilience of her slender body beneath him, those firm little boobs pressed wetly against his chest, the cradle of her thighs as he fucked her, all told him what Erik had already known.\n\n\"Oh yeah, take my cum, you hot little Chinese fuck-slut.\"\n\n\"Ohhhhhh,\" Sally choked out, eyes wide, mouth wide, gazing up at Leo's face, knowing he was fucking her, and she had no idea which one he was. Just that he was one of Erik's buddies, and now his cock was inside her, his body was on hers, and he was fucking her, and he'd just called her a fuck-slut, and she wasn't. She knew she wasn't, but why was it so exciting? Why was she almost...\n\n\"Hot little slant-eyed Chinese fuck-slut,\" Erik said in her ear, helpfully, and his face was next to Leo's looking down at her as Leo fucked her.\n\n\"Which one, Jessica or Sally?\" one of the others said, and he was kneeling next to her head, right in front of her mom, and her mom was on her hands and knees, that guy was behind her, and....\n\n\"Gggllluuuggmmphhh.\" That other guy was holding her mom's head, and fucking her mouth.\n\n\"Ohhh fuck, take this you slant-eyed little cum-whore...\" Grunting his satisfaction, Leo gave Sally everything he had, and he didn't stop giving until her tight little cunt had drained his balls and sucked his cock dry.\n\n\"Uhhhuuhhhuhhuhhh...\" Gasping with every hammering thrust as his cum shotgun-blasted out, flooding her channel, Sally took, and beside her, Erik smiled, watching, waiting for Leo to finish.\n\n\"Your turn, Bodie,\" he said, as soon as Leo's convulsive spasms had ended, and they moved like a well-oiled team, Bodie moving in as Leo moved away, and in seconds, Sally was taking the third cock of her life, and Bodie was going for it, and beside her, Jessica was choking down cum as Jackson blew his load down her throat.\n\n\"Jesus,\" he grunted, sagging backwards. \"Where did you find these two fuck-toys?\"\n\n<center> * * * </center>\n\nAn hour later, Sally wasn't on her back, and she wasn't on Erik's bed. She was out in the conservatory, in the middle of the floor, with Erik's friends sitting around watching her, and she was watching her mom kneeling in front of one of them, blowing him. She'd heard Erik.\n\n\"Suck Greg hard, Jessica. He's got to get it up so that he can fuck Sally again.\"\n\nShe could see her mom, kneeling in front of him, and she couldn't see her sucking him hard again, but she knew that was what her mom was doing. Sucking him hard again, so that he could fuck her.\n\n\"Nnghhhh .... ughhh ...uhhhh ... huuunnhhhh... nnuhhhhhhh.\" Sally groaned in time with Carter's throbbing spurts as he filled her cunt with his cum. Her hands clutched at the leather of the ottoman she was bent over, eyes wide, mouth open wider as Carter pounded his cock deep inside her.\n\nBeside her, Erik knelt, stroking her silky black hair as she juddered through Carter's culmination. \"That's it baby, feel him shooting inside you, oh yeah, that's sooo good, Sally, you can take it... you can take it all....\" \n\nHe kissed Sally as Carter eased himself out of her, moving away, but she wasn't going to have time to become bored. Well, she was going to be bored, but she wasn't going to become bored, because her mom had been successful.\n\nGreg was hard.\n\n\"Ooohhhhhhhh.\" Sally groaned into Erik's kiss as Greg's cock eased wetly into her wide open little cunt, replacing Carter's almost before her dazed mind realized what was happening. Greg's hands held her hips firmly in place. His cock enjoyed the liquid clasp of her cum-filled little cunt.\n\n\"That's it, Sally,\" Erik smiled, his eyes holding Sally's as she experienced Greg's cock penetrating to its full length, pressing up deeply inside her. \"You're a fuck-slut, you can take Greg's cock, baby. You know you like it.\"\n\nSally knew he was right. She knew she did like it.\n\nShe liked it even more when he took his time, long and slow.\n\nAnd when he reached his culmination, her own climax made her toes curl.\n\n\"Come up here and ride me, Sally, baby,\" Erik said, chugging back his beer, watching Sally lying limp over the ottoman after Greg had finished fucking her, and they'd all fucked her a couple of times now. Him. Greg. Carter. Ben. Dylan. Leo. Jackson, and now Bodie. All eight of them, and all eight of them had shot a couple of loads in that tight little pussy, and she was lying there looking a bit stunned and shocked, the way most of them did after their first gangbang.\n\n\"Help Sally over here, Jessica,\" Erik said, lifting her mouth of his cock, \"and then you can get see who's fuck-slut you're going to be next.\"\n\nJessica knelt down beside Sally, brushing her hair back from her face. \"Are you okay?\" she whispered.\n\nSally looked at her mom, and she knew she should have been embarrassed. She could feel the cum trickling down her inner thighs, and she'd been fucked so many times. So had her mom. By all of them.\n\n\"Yes,\" she whispered back, licking her lips, tasting cock. Tasting cum. \"Help me up.\"\n\nShe hesitated. \"I want to. Whatever he wants.\"\n\n\"Are you sure?\" Jessica whispered back, her cheeks as pink as her daughters. Her pussy pulsed hotly with shamed excitement. She'd never done anything like this, stood around in someone's apartment naked. Fucked. Cum everywhere. That college party, back twenty years ago, that'd been different. Those guys, they'd fucked her and Stephanie, and then they'd left.\n\nHere? They were in Erik's house, with his buddies, and she wasn't drunk. Neither was Sally.\n\nJessica knew she wanted it as much as Sally did, or maybe it was the other way around. She knew she shouldn't be excited at seeing her daughter gangbanged either, but she was. She shouldn't be excited about what she was doing, but she was.\n\nErik paused, smiled up at the pretty young Chinese girl's face as she stood in front of him, an angelic looking little fuck-toy, and fuck, this time last night, she'd been a virgin, and now look at her. A hot little cum-slut, ready for more.\n\n\"You okay, Sally?\"\n\n\"Yeah,\" Sally whispered, and she wanted Erik to keep fucking her. \"I'm okay.\"\n\n\"Like this, baby,\" Erik said, turning her, so that her back was to him. \"Now, knees either side, and down we slide.\"\n\n\"Ohhhhhh,\" Sally moaned, because her knees did fit either of his legs, and down she did slide. Down Erik's cock, wetly, and that slide was easy now, easy all the way, until she was seated on him, her hands on his knees, leaning forward slightly, her eyes seeing her mom on her hands and knees, one of those guys kneeling behind her, and another in her mouth.\n\n\"Gguhhguuhhgguhh.\" She could hear her mom choking, gagging, trying to swallow as that guy came in her mouth, cum dribbling out, and when he was done, he wiped his cock on Jessica's face before he moved away, leaving her to the guy behind her to flip her onto her back, and fuck her.\n\n\"Your mom's a real hot fuck-toy,\" Erik breathed in Sally's ear, his hands on her hips moving her on him, sliding her up and down his length. Long, hard, slushy-slippery, squelching wet slides, and looking down at where he entered her, sobbing for breath, Sally could see white foam frothing outwards around his shaft, emerging from where her puffy pussy lips clamped wetly around his shaft.\n\n\"Just like you, Sally. You're a hot little fuck-toy too.\"\n\n\"Uhhhh,\" Sally moaned. \"Uuuhhh,\" and she was watching as two of them started taking turns with her mom, counting down each stroke until they got to zero, and then they'd swap. Watching, she knew her mom was a hot fuck-toy, and when one of them unloaded in her mom, filling her with one more load of cum, and she heard her mom begging for it, pleading with him to fill her with his cum....\n\n\"You mom's a real cum-slut.\" Sally knew that, too.\n\nSitting there, riding Erik, facing the room, she could see all the others, too. The guys that had all already fucked her, and some of them were watching her, drinking beer, talking about her, her and Jessica, and she could hear them, and through her own moans and sobs and cries, the words sometimes made their way through that haze of sensation that enveloped her clearly enough for her to understand.\n\n\"That's it, Sally, baby,\" Erik breathed in her ear, one of his hands on one hip, encouraging her, the other on her sex, teasing her swollen little clitoris, taking her to the edge and holding her there. \"You're already a hot little fuck-toy. You're going to be a real cum-slut, just like your mom, real soon, baby. Real soon.\"\n\n\"Ohhhhhhh,\" Sally moaned, insides clenching tight, and she was close again. Close, and Erik was teasing her, touching her, taking her closer and closer. \"Please.... Please....\"\n\nShe wanted it so bad, and she was scared, because she wasn't sure what sort of cum-slut Erik thought she was, but she knew she'd find out soon.\n\n\"You want to be a hot little Chinese cum-slut for me, Sally?\"\n\n\"Yes... yes...\" Sally sobbed, knowing she did. She wanted to be a cum-slut. His cum-slut.\n\n\"Tell me, Sally,\" Erik grunted, and yeah, he could do her any moment now. \"Tell me you want to be a hot little Chinese cum-slut for me.\"\n\n\"Yes,\" Sally sobbed, desperate now, on the edge. \"Yes... yes... I want that... I want to be... I want to be a hot... hot Chinese cum-slut...\" She'd said it. Oh god, she'd said it, and she knew it was true. She wanted to be like her mom. She wanted what her mom was getting. She wanted what she knew she was going to get as Carter, Ben, and Leo stood, and walked towards her, and all three of them were hard.\n\n\"Ohhhhh,\" Sally sobbed, and it was Erik's hand moving her on him, controlling her, and she knew what she was. A receptacle for Erik's cock. A receptacle for all their cocks. A fuck-toy for them. A cum-slut, and as they stood in front of her, stroking themselves off, she wanted their cum. She wanted them to cum. In her. On her. It didn't matter, because she was a cum-slut, and she wanted them to cum.\n\nSally stared blindly at those three cocks in front of her, frantically working herself on Erik's cock, and her clitoris, he was taking her there and she wanted it she wanted it she wanted it, she wanted it so bad, and that wave inside her rose, and rose, peaking, and she knew this was going to be even better than the last one. Better, and bigger, and badder.\n\n\"Ride me, Sally,\" Erik breathed, teasing her clitoris, brushing, tantalizing, taking her higher, taking her almost to the crest, and he knew where she was, shuddering on the edge, and he could push her over whenever he chose, he knew that as he listened to her sobs and her choking cries. \"Ride me good.\"\n\nCarter was first, and he aimed his cock at those pert firm boobs, quivering as she bounced around on Erik's cock, his hand working as he unloaded himself onto that silky pale-olive skin, and she didn't even flinch as that first jet of semen arced from the tip of his cock to splatter across her in a thick trail of creamy white, coating her with jet after jet of his cum.\n\nErik reached around her, took one of her hands, and rubbed it across her boob.\n\n\"Rub his cum all over, Sally,\" he told her. \"That's what a cum-slut does.\"\n\nSally obeyed, just as she obeyed when Ben said, \"open wide,\" and guided his cock to her mouth. Sally opened wide, moaning and gasping around his cock as he face-fucked her, and in about two seconds flat, he came, his cum filling her mouth. It wasn't like she didn't know what to do. She'd already swallowed enough cum that she wasn't going to need food for a while, and she did what she'd done before.\n\nShe swallowed as his cum flooded her mouth, choking it down.\n\n\"Fuck, Sally, you're as good as Jessica,\" Ben grunted.\n\n\"Gluuggggguhhglluggg,\" Sally choked.\n\n\"Do your best, baby.\"\n\n\"Ohhhhhhhhh,\" Sally choked out, seated firmly on Erik, doing her best, cum dribbling from her lips, coating her tongue and her teeth, her boobs splattered with their semen, trembling as Erik's cock pulsed within her, and that first jetting spurt pumped another load of semen into her already cum-filled sex.\n\n\"Climax for me now, baby,\" Erik grunted, and his fingers on her clitoris teased instant obedience from her, so that she wailed in helpless ecstasy as her sex spasmed slushily on Erik's throbbing cock, that cresting wave of pleasure crashing through her inexorably.\n\n\"Yeah, milk my cock, Sally, you hot little fuck-toy,\" Erik grunted in her ear, watching as Leo came onto her face, his cum splattering across her nose, her cheeks, even into her mouth.\n\nSally was still gagging and gasping and swallowing as Erik lifted her off him and lowered her onto the floor beside her mom. Jessica was too busy proving to Bodie and Dylan that a hot little Chinese fuck-slut enjoyed being spit-roasted to even notice.\n\n\"Who wants to fuck the new cum-slut next?\" Erik said.\n\nLying there, glowing, Sally knew Erik knew exactly what she was.\n\nShe was the new Chinese cum-slut, a hot little fuck-toy, just like her mom.\n\n<center> * * * </center>\n\n\"Oh wow,\" Ariana said, breathing in when Dave held the joint to her lips, holding her breath. \"This is... wow...\" She started to giggle. \"This is really good stuff.\"\n\nShe giggled again when she looked at Dave's cock, and they were both sprawled across the bed, Dave naked, Ariana wearing her bikini bottoms.\n\n\"It's so small now,\" she said, inhaling again.\n\n\"If you stroke it, it's going to get bigger again,\" Dave said, inhaling. \"Wow, this shit really is good.\"\n\nAriana giggled again when he took one of her hands and placed it where he wanted it. She had the idea now, she hadn't when they started, but now she stroked him inexpertly. Nothing like Suzy, but it was far more exciting, because he knew Ariana had never done this before, and Jesus, didn't that get him hard real quick.\n\n\"Wow, it gets big so fast,\" Ariana breathed, fascinated, watching Dave's cock grow, and it was hard now. Rigid even, longer and thicker, and her fingers were soft and silky, magic on his cock, even if she wasn't that good at it.\n\n\"Do you want me to blow you again, and finish in my mouth, Dave?\" she asked, watching his cock, and his hand was on hers, and he stroked himself with her hand, a lot faster and harder than she'd been doing.\n\n\"Like that,\" Dave said, leaving her to do it herself, and she did, enthusiastically. Even more enthusiastically when he ground the stub out in the ashtray on the nightstand and turned, taking her in his arms, kissing her, and she knew where his hand wanted to go.\n\n\"Ohhhhh.\" She was so hot, when his hand touched her, cupped her where her bikini bottom covered her, and almost, almost she let him.\n\n\"Jesus, I'm going to,\" he grunted, lifting himself, half kneeling over her and they both watched as her hand stroked him, and his hand guided hers, faster, squeezing her fingers on him, and he grunted again, shuddering, holding back, trying to prolong the pleasure, but he was there.\n\n\"Oh wow,\" Ariana squealed, eyes wide as she watched Dave's semen arc upwards from the tip of his cock.\n\n\"Ohhhhhh.\" Ariana was looking down at his cock, when that sudden spurting jet of white erupted from the tip of his cock and sprayed across her boobs and her stomach, and then there was another, and another, as more and more of his cum spurted onto her, splattering over her boobs, coating her fist where she pumped him, and he just kept on spurting, until at last it trickled away.\n\n\"Wow,\" Ariana said, looking at all the creamy white stuff that'd spurted out onto her boobs. \"There's a lot.\" She looked down at her boobs, and at his cock, and she smiled as she ran her fingers through it.\n\n\"Is it exciting for you to do that?\" she asked, curious.\n\n\"Fuck, yeah,\" Dave said, kneeling there, his cock in his hand.\n\nAriana could see his balls clearly, dangling down between his legs, and she reached down with one hand and cupped them, gently. \"They're so big,\" she said, and she smiled as her other hand smeared his cum across one of her boobs. He liked that, she could tell.\n\n\"Is it better than in my mouth?\" she asked. \"Can we do it like this again?\" She kind of wanted to see his semen coming out like it just had, and maybe she could do that next. Jerk him off so that he finished on her boobs?\n\n\"Sure,\" Dave said, grinning as he collapsed onto the bed next to her, watching her playing with his cum, and fuck that looked hot. She had that light-brown skin, that made his cum even whiter on her, and her boobs were boobs, real boobs, and fuck, he wanted to shoot off onto them again. He thought about that, and then about her blowing him, and hey, it'd be cool to do what he'd seen on Pornhub, and shoot off all over her face.\n\nMaybe after he'd popped her though.\n\nSpeaking of....\n\n\"Hey, Ariana, I been meaning to ask you...\" he said, lifting himself, turning towards her.\n\n\"Do you want me to do it again, you know, with my mouth?\" she asked, eagerly, and one of her hands found him.\n\nDave grinned. \"Oh yeah, I do, but right now, I wanted to ask you if you'd like to be my, you know, my girlfriend.\" He would've said be my bitch, but that sounded too much like he was trying to act cool, and he knew he wasn't cool enough to pull that one off. Not like that jerk, Erik.\n\n\"Dave!\" Ariana squealed. \"For real? You mean that?\"\n\n\"Yeah, I do,\" Dave said, a bit stunned by her sudden excitement.\n\n\"Of course I'll be your girlfriend, Dave,\" she said, snuggling into his arms, and she looked like she wanted to be kissed, so he did, ignoring that her mouth tasted of his cum. \"I'm so happy.\"\n\nYeah, Dave was going to get another blowjob before he took her home tonight. Maybe she'd even let him get his hand inside her panties, when he dropped her off home.\n\nHe was her boyfriend now, after all.\n\n<center> * * * </center>\n\n\"Mmmmmm,\" Jeong sighed, smiling sleepily, and as soon as she woke up, she knew exactly where she was. Lying on Max wearing nothing. Nothing at all, and she remembered exactly what they'd been doing before she went to sleep on Max too, and she yawned sleepily. It was still warm and sunny, so she couldn't have been asleep that long.\n\n\"Awake now?\" Max breathed, his voice soft, and his hands were on her butt, but they weren't soft at all. They were calloused and strong, and he was kneading her butt, making her insides ripple.\n\n\"Mmmmmm,\" she sighed again, not moving, limp on him, every movement, every caress of his fingers sending little waves of pleasure washing through her, and there was that heat, that excitement, growing all over again, except that now, she was naked, and so was Max.\n\n\"Okay?\" Max asked her, his fingertips running down the insides of her thighs, and she was instantly wet. He'd touched her, before. His finger, inside her, and she wanted him to touch her again, and he'd finished. She'd felt him, and she was still lying on him.\n\n\"Mmmm, yes, I'm fine,\" Jeong said, lifting her head, and now she smiled.\n\n\"I wasn't sure...\" Max said, hesitantly, but his hands felt sure. His hands knew what they were doing, and he knew what he was doing.\n\n\"You weren't?\" Jeong giggled, and sat up, cautiously, wobbling a little as the float moved, balancing herself with her hands on his chest. \"It felt like you were before.\"\n\nShe looked down, and his cock was there, she looked at it, and she could see him.\n\n\"It's not hard now?\" she said, surprised, and she could see his semen, on his stomach and matted into his pubic hair, and when she looked down, she could see his semen on her stomach, too.\n\n\"Uh...\" Max hesitated.\n\n\"I want to see it get hard,\" Jeong said, and she could see him eyeing her. Her boobs. Down. There. Her cheeks burned, but she didn't hide herself. She wanted him to see her.\n\n\"Not here,\" Max said.\n\n\"Where can we go?\" Jeong asked, and she knew she shouldn't have asked, but she wanted to, and her sex pulsed again, thinking about that. Him. It. Her. She shouldn't have asked, but... he wanted to. Or he wouldn't have.",
        "\"Inside,\" Max said, and he looked at her. \"You need a shower.\"\n\nJeong giggled. \"So do you.\"\n\n\"Come on then, I'll go first and get you a towel.\"\n\nJeong slipped into the water, scrubbing her stomach as clean as she could with her hand, but his stuff was dried on, and it didn't scrub off easily. Max followed her, taking his shorts, and her panties and the t-shirt with him. Jeong followed, swimming naked through the pool, climbing out, naked, and he was standing there, looking at her, holding a towel.\n\nHe was naked, too, and she looked, standing there, eyeing his cock, and she wanted to sink to her knees and kiss it. Hold it. Stroke it. Explore. Learn. Ask him to teach her. Show her. His cock twitched, and she watched, fascinated, as it seemed to swell, thickening, and lengthening. She'd learnt about this. A physiological response, excitement causing the blood to flow there, causing his cock to enlarge, and harden, and it was.\n\nHer own nipples engorged in response, her sex pulsed, leaving her suddenly weak-kneed and breathless. He wasn't like Wilfred. He knew. He knew what to do, and he was married, but he'd... they'd... in the pool, and his cock said he was interested, and he wasn't running away. He wasn't going to leave her, not like Wilfred had last night, and she eyed his cock, then glanced at his face, and he was. He was looking at her, and looking at her was doing that to him.\n\nJeong took a step towards him, and then another, almost moaning out loud, and his cock. It was growing even more, expanding, lengthening, thickening, stiffening, standing outwards, stiffly, pointing at her, and now she looked at his face, and his eyes, he was gazing at her, hungrily, as if he wanted to eat her. Eat her alive, and she took another step towards him, her knees turning to jello, so that it was difficult to walk, and she wanted to hold him in her hand. Take him in her mouth. Give herself to him.\n\nMax had no idea how it happened, but one second he was standing there, rapt, drinking in her naked body, her nubile innocence, the sheer sensuality of those full, firm breasts, her slender-waisted, slim-hipped, long-legged beauty, that heart-stopping face, and then she was in his arms, her arms vined around his neck, and he was pressed against her, holding her against him, held tight, and he had to have her.\n\nHe had to, and everything else was forgotten in her body against his, his mouth possessing her, and he wanted her. He wanted her now, wanted to lower her to the deck, and have his way with her, there and then, but somehow sanity prevailed, and he tore his lips from hers, took her hand in his, and almost dragged her into the house, naked, and he hoped to god Suzy was still flaked out, wherever she was, because he was doing this.\n\nHe was going to fuck Jeong Park.\n\n\"Where are we going?\" Jeong whispered, her hand in Max's following him up the stairs, Annie's t-shirt and her panties still in one hand, dripping.\n\n\"In here,\" Max said, drawing her into the guest bedroom, and across the room, into the small en-suite. \"You can shower here, afterwards.\"\n\nHis eyes held hers, and they both knew what afterwards meant, and Jeong didn't demure.\n\n\"My clothes are in Annie's room,\" Jeong said. He was so hard. She could see he was hard. Big and hard. She wanted that hardness. Wanted it to do to her what she knew a man's body was intended to do for a woman.\n\n\"I'll get them for you,\" Max said, tearing himself away from her, and he heard the shower turn on as he left the bedroom. Her t-shirt, her bra, and that cute little denim skirt were lying on Annie's bed, and he picked them up, lifted that bra to his face, inhaling the milky-sweet fragrance of her as he walked back across the hallway and into the bedroom, closing the door, placing her clothes on the bed.\n\nHe could hear her, in the shower, splashing, and there was that scent of shampoo wafting outwards. For a moment, he thought of taking a shower himself. A cold shower.\n\n\"Max? Is that you?\" her voice called, and if she hadn't called his name, he would have left. That's what he told himself, as he walked through the open bathroom door, and closed it behind him.\n\nHe knew it wasn't true. He couldn't have torn himself away from her with a bulldozer.\n\n\"It's me,\" he said, watching her through the clear glass. Slender, black-haired perfection, her hair lathered and foaming with shampoo, her body sheened with water and soapsuds, and she turned towards him, eyes wide, startled. Surprised.\n\n\"Max.\" She didn't turn away. She stood there, looking at him, one of her hands washing herself, her eyes meeting his. Showing herself to him, and he could see how swollen and full her nipples were.\n\n\"Yes,\" he said, and she continued to stand there, saying nothing, as he peeled his shorts off, and dropped them to the bathroom floor.\n\nNow Jeong's eyes moved. Downwards, to look at him, and he saw her eyes widen. Saw her hand hesitate, pause, and then he slid the shower door open, stepped inside, and closed it behind him, his eyes holding hers. Neither of them said a word as Max took her soapy body in his arms, his cock pressed against her smooth soapy skin, and he kissed her, gently at first, and then, as her mouth opened to him, as she surrendered to him, harder.\n\nJeong's arms vined around his neck, her boobs pressed against his chest, his hands slid over her back, her butt, pressing her against him, and she moaned into his mouth. Moaned again and again as he kissed her, as his hands ran over her, exploring her, caressing her.\n\n\"Ohhhhhhhhh.\" Touching her, intimately, one finger sliding inside her, probing inwards where she was so hot and wet, and his fingertip was pressing against her inside, moving, caressing her inner channel, and she clung to him, knees rapidly weakening, squirming a little against his hand where he cupped her.\n\n\"Ohhhhhh.\" She kept her eyes closed as the warm water ran over her body, washing the soap away, and when at last she opened her eyes, he was so big. His body, his hands on her, he was so big.\n\nEverywhere.\n\nHer hand reached out, found him, clasped him, and he was. He was huge.\n\nMax didn't say a word. He turned the water off, opened the shower door, took Jeong's hand, and led her out, and when he turned towards her, he was holding a towel. She stood there, trembling as he dried her, dried himself, his eyes holding hers, and then he dropped the towel and took her hand in his.\n\n\"Where... where are we going...? Jeong whispered, and she didn't make any attempt to conceal her nakedness. Not now. Not from Max. She followed him, her hand in his, out of the bathroom, and into the guest bedroom, her heart pounding.\n\n\"Bed,\" Max said, and his hands guided her onto the bed. Jeong followed the direction of those hands, willingly. Timidly, but willingly, and when he guided her down onto her back, and looked down at her, she drew her feet up, and spread her legs apart, opening herself to him. Offering herself to him, and she knew what she was doing as she looked up at him, towering over her. She could see how big and hard he was, and she'd held him in her hand.\n\nShe wanted to do more than hold him in her hand, and Jeong knew it would be good with Max.\n\nThere was that long moment of suspense as he guided her to the bed. Would she? Wouldn't she? But she did. She turned away from him, and there was that moment when his heart sank as he thought she was turning away to escape, but it was to crawl onto the bed, and her butt was perfect. Small, taut, light olive, and Jesus, he'd like to take her like this.\n\nSeize her hips and fuck her. Fuck her so hard that those gorgeous tits of hers would quiver and bounce, but then she turned onto her back, and she slowly spread her legs. Max looked down at her, and Jesus, that little pussy was beautiful, and he could see she was excited. See how pink and wet she was, and he could even see her little clitoris.\n\nHe moved onto the bed, kneeling upright, his knees between hers, his cock jutting stiffly outwards, and he knew what he was going to do. Knew what he had to do, and this time he wasn't going to fuck around. This time, he was going to have her, and he moved forward, closer to her, leaning forward, his hands on the bed on either side of her now, looking down into her eyes, and he knew she knew.\n\nThey both knew. He was going to fuck her.\n\nHe was going to fuck Jeong Park.\n\nHer hand, one of her hands, reached out to where his cockhead rested against the smooth olive-silk of her lower belly, and her fingers clasped him again, a silken vice gripping him. He looked down, and her delicate fingers were so small on him, unable even to close around his girth, and he almost shuddered at the thought of his cock inside her. Filling her. Fucking her.\n\nAbusing the fuck out of her, because he knew he would.\n\nHe'd fuck her like he'd fucked that girl in Seoul.\n\nFuck her until she walked bow-legged.\n\nUntil she'd sucked his balls dry.\n\n\"Jeong.\" His voice was a hoarse gasp. His cock was a massive bar of steel clasped in her fingers. So much bigger and harder than Wilson's. Much bigger. Tentatively, she stroked him, savouring the rigid length in her hand, and her heart was pounding. He was looking. Looking down at her, not smiling, serious, his hand hot on her stomach, circling slowly as he knelt between her legs, and she was relieved that she worked out, that her stomach was taut and firm, because this was why, and his hand circling on her stomach seemed to generate a black hole of suspense inside her that grew with every circle.\n\n\"Jeong...\" he gasped again, and he groaned as her hand stroked him, slowly, tugging at him a little, as if she wanted him to... Jesus, he had to... he had to fuck her.\n\n\"Jeong...\" he groaned, shuffling forward, until the front of his thighs brushed the back of hers, and Jesus, he could see how wet she was, her labia pink and swollen, slightly parted, glistening wetly with her excitement, and she looked up at him, little whimpering sobs emerging from those gorgeous lips, and she wanted him to do it, he knew she did, and her hand. Jesus, her hand...\n\n\"Dad, are you there?\" Annie's voice came faintly from downstairs, and they both heard the front door chime.\n\n\"Oh no,\" Jeong moaned, heart jolting, but this time with shock, and for a second she continued to lie on the bed, with Max looking down at her, kneeling between legs that she'd already spread for him, and she knew what he wanted. She knew what she would have done, too. He was in her hand now, so hard, so ready to give her what she wanted, and for a moment, she wanted to do it anyhow, and if he'd asked her right then, she'd have said yes. She knew she would've.\n\nBut she didn't think he'd been meaning to ask. He'd been meaning to take.\n\nJeong knew he could have taken anything he wanted from her.\n\n\"Dad... anyone home?\" Annie's voice called again.\n\n\"Into the shower, Jeong,\" Max said, and he'd found his shorts, was sliding them on, and he was out the door before Jeong had managed to slide off the bed and stand.\n\n\"I was upstairs, Annie,\" she heard Max's voice call, and she heard him on the stairs, and then she was back in the bathroom.\n\n\"Annie's come to visit us, Jeong. \" Max looked up, grinning, when she walked out of the house onto the deck, ten minutes later, and he knew she wasn't wearing any panties. They wouldn't have had time to dry, and Jesus, he couldn't get rid of that erection. \"Jeong's been here all day, waiting for you.\"\n\n\"Oh, hi Jeong!\" Annie's happy squeal broke the hold his eyes had on her.\n\n\"Hi Jeong.\" Chuck appeared right behind her.\n\n\"Annie!\" Jeong's squeal carried.\n\nIt was really lucky Annie couldn't read her mind.\n\n\"Hey, Chuck,\" Max said. \"Firing up the barbeque. If you're staying, you can give me a hand, here.\"\n\n\"Is it okay if Chuck stays, Dad?\" Annie asked, glancing at Chuck, smiling, and the way that they looked at each other, Max knew right away they were hooked, and hooked hard. Annie's first boyfriend, and he seemed like a nice young guy.\n\nEven if the little bastard was fucking his daughter, and from that glow, the young asshole must've been getting what he wanted.\n\n\"Of course it is, honey,\" Max said. \"Unless Chuck has to head off anywhere?\"\n\n\"Sure I can stay if that's okay,\" Chuck said.\n\n\"Of course it is,\" Max said. \"Come and give me a hand here, Chuck. Beer's in the fridge inside. Grab me one too, will ya, while I fire her up.\"\n\n\"Sure,\" Chuck said, and yeah, he was happy as a pig in shit. Blonde, hot, gorgeous tits, fucked like a mink in heat, and her dad was handing out free beer and steak? With a bit of luck, he'd get to fuck Annie again before he left as well.\n\nJeez, he'd really lucked in.\n\nShame about the gas station though.\n\nHe kinda wondered what Erik was up to, but fuck, Erik had all the chicks he could handle. He was gonna focus on Anna. Erik could look after himself. Asshole was good at that, alright.\n\n<center> * * * The End </center>\n\nComing real soon (because it's almost done) - \"Jeong Park's First Frosh Ball Ch 08 --A Sunday Kind of Love -- Part Three\": Well, if you've enjoyed Jeong Park's First Frosh Ball Chapter Six and Seven, well, Chapter Eight (\"A Sunday Kind of Love -- Part Three,\") follows this. But Chapter Nine is maybe three or four months away, I'm afraid, and Ten wll be a while after that. I have half a dozen novels to write next, to be published. But at least those next two chapters will be sometime in 2021. You won't have to wait three years... And before anyone asks, I will take a stab at the next chapter or two of Happy Birthday this year, as well as another Chapter or two of Chinese Takeout. The Adventures of Jay-Lin and Round Out will resume... they have not been discontinued, only paused... Chloe\n\n<center> * * * * * * </center>\n\n \n"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chloetzang",
        "chloe tzang",
        "asian",
        "korean",
        "chinese",
        "virgin",
        "anal",
        18,
        "student",
        "mom"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/jeong-parks-first-frosh-ball-ch-07"
}