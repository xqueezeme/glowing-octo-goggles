{
    "title": "Folie \u00e0 Deux Ch. 02",
    "pages": [
        "//Author's Note: After suffering from a lengthy bout of writer's block, a good friend helped me get past it by providing some inspiration that set my imagination on fire. This is the result. Thank you, JP!//\n\n\"No,\" I said, as I stared down the driveway. Blake was crying, straining to get free from his carseat, with both hands extended toward me. How could Felicia not hear him? How could she not know? He needed me, and that paternal pull was catastrophic. \"No!\"\n\nMy ex-wife's red Grand Cherokee pulled away from the curb. I darted diagonally across the lawn, waving my arms wildly to get her attention to no effect. Screaming at the top of my lungs. Even with the strength granted by true fear, my legs could not keep up with a vehicle powered by an internal combustion engine, and her red SUV looked smaller and smaller as it drove down the road.\n\nThe feeling of wrongness condensed in the pit of my stomach. She wasn't supposed to have him. She was taking him away. I would never see Blake again. He was my reason for being.\n\n\"Jay,\" Natalie said. \"Don't worry.\"\n\nI skidded to a stop, nearly running into her as she stood still in the middle of the road. Panting as I sputtered, \"She has Blake. Felicia. She has Blake.\"\n\n\"It's going to be okay,\" she said. \"Blake is safe.\" My jaw fell and I pointed past her, over her shoulder, but she smiled warmly as she shook her head. One hand held up calmly. \"Don't worry. Blake is okay. He gets upset sometimes, but that's normal.\"\n\n\"It's not normal\u2014\"\n\n\"He's barely two,\" she said, laughing lightly. \"Everything is the end of the world for him.\"\n\n\"But what if it's serious this time?! What if he got his finger caught in the door when she shut it, and\u2014\"\n\nNatalie smiled at me, and shook her head as she lowered herself to her knees in front of me. Right there in the middle of the street. She said nothing as she lowered the zipper on my slacks and slipped her fingers through the fly of my boxers. Right there in the middle of the street. In the middle of the day.\n\nHow were her knees not burning on the asphalt?\n\nI jerked up halfway off the bed, body tensing as it lost all sense of itself and its surroundings in the lightning quick change from dreaming to wakefulness. Natalie looked up at me, smiling devilishly with half of my cock in her mouth, and gently shook her head.\n\n\"Shhh,\" she whispered, pulling back. \"Blake is still sleeping.\"\n\nI couldn't stop the long, long grunt as she wrapped her lips around me and swallowed me deep. My body was slow to react, and slow to move, but the shaft was as hard as I'd ever been. Copious amounts of white and clear fluid were gathered at the base of my cock, right where I knew to be the furthest she could take me. Saliva and precum.\n\n\"How long,\" I croaked, pausing to try to gather my scattered wits. I rubbed both eyes with my palms, back arching. \"How...\"\n\nNatalie said nothing as she stared up at me, head bobbing up and down. Always keeping eye contact. Her beautiful hazel eyes. Just like mine. It had been years since anyone remarked to me that we looked like we could be twins, but I'd never needed anyone to point out the obvious to me. One of my hands came up, to cradle the back of my head and make it just that much easier to look downward, while the other hand slowly settled on the back of her head. Her messy brown hair was even curlier than usual.\n\n\"That's it,\" I groaned, guiding her further down and applying light pressure. \"Take it deep. Show me how much you want it.\"\n\nShe made a small sound in her throat, coupled with a tightening around her eyes, that I had come to know intimately.\n\n\"Show me how much the thought of today has been turning you on.\"\n\nBoth of her eyes pinched shut, and further down the bed her hips moved in slow, pulsing waves. No doubt dry humping while she fingered herself. The blood ran hot in my veins, and I clenched my teeth tightly.\n\n\"Jesus. I'm gonna cum. How long were you going down on me?\"\n\nHer tongue moved purposefully against my shaft, pressing here and there as she tried in earnest to make intelligible sounds, but it was for naught.\n\n\"That's it,\" I whispered, voice strained with the effort of holding off until the last moment. \"That's it. Suck it all out. Show me what a good little cum bucket my sister is.\"\n\nNatalie started groaning before I did, and her groaning turned to a gagging cough when the first spurt of cum tried to go down the wrong part of her throat. Thick cum shot out around my shaft, gathering mostly near my groin where I could see it, while she continued to squirm and heave. Her face turned bright red. I let go, not wanting to actually choke her, but she tried to slide right back down on me of her own accord. More coughing. More cum blew through her lips, collecting into thicker and thicker gobs of pure white.\n\n\"Oh god,\" she said, as she backed off and starting sliding around the bed. \"I can cum again. Please.\" Her mouth was on my shaft, tongue teasing the slit in my head, as she moved her lower end around the bed toward me. Time slowed as her thighs, her heavenly-thick thighs, settled over and around my head, and she lowered herself over my face.\n\nDistantly, I could feel her as she ran her tongue over every part of me. Blowing me, pausing to lick up her mess, and then swallowing my cock again with rabid enthusiasm. Only distantly, though. My sister's glorious cunt, with its trim patch of thick pubic hair, always smelled wonderful, but never more so than first thing in the morning. My tongue went straight for her clit. Circling. Lashing. Attacking.\n\n\"God yes,\" she groaned, as she ran her tongue along the length of the side of my cock. \"Make me cum. Make me yours.\"\n\nBoth of my hands slipped out around her legs to press into her pale, round cheeks. Fingertips sinking into her magnificent shape. Gripping and pulling. One hand lifted briefly before coming back in for a spectacular spank, one that echoed loudly through the room. Natalie groaned, and muffling herself by taking my shaft back into her mouth. Her legs squeezed tightly around my head, and I gave her another hard slap right on the same spot to give her that last little push she needed to achieve her second orgasm.\n\nShe moaned and writhed above me, legs clenching and spasming, and I brought my hands down to tease her nipples. Her beautiful little nipples, coming down from her beautiful little breasts. A soft twisting between my fingertips. Pulling gently.\n\nHer breathing slowed as she came to rest on top of me more and more fully. I would have happily laid under her, breathing in the heavy scent of her sex, for hours, but she rolled off to my left with a contented sigh and came to rest on her side. Her left arm extended straight above her, with her head resting on her upper arm.\n\nI took a moment, appreciating the curve of her hips from that angle. With her on her side, the dip down to her waist was even more pronounced. Her belly swelled gently with every breath. After a moment, she shifted to lay her head on the top of my thigh, and she extended one of her legs for me when I moved to do the same.\n\nAnd then she smiled.\n\n\"Sorry I woke you up.\"\n\n\"No you're not,\" I laughed.\n\n\"Not even a little,\" she said without smiling any wider than she already had been, although when I started laughing louder she couldn't help but break. \"Jesus, Jay.\" She shook her head slightly and let a long, pleased sound slip from her lips.\n\n\"What time is it?\"\n\n\"It's...\" Natalie sat up just enough to peek over me at the clock. \"Four in the morning.\"\n\nI grimaced, looking at the nearly-muted light that was trying so hard to get through our blinds and heavy curtains. \"Uh huh.\"\n\n\"We have hours before we need to get out of bed.\"\n\n\"Uh huh.\"\n\n\"Plenty of time to fuck two or three more times.\"\n\n\"Uh huh.\"\n\n\"It's six fifty,\" she said, playfully sulking.\n\nI groaned and kissed her thigh. \"We've gotta get going.\"\n\n\"I know,\" she grumbled.\n\n\"Come on.\"\n\n\"I'm going,\" she said, without moving off of my thigh. I grinned and reached over my head, giving her ass another good swat, and she yelped. \"I'm going!\"\n\n\"Now you are,\" I said, as I slid toward the edge of the bed. Natalie stuck her tongue out at me, over her shoulder, as she got to her feet, and shook her ass. I couldn't help myself and dove at her, swinging my flattened palm wildly, and she cackled as she ran for the bathroom.\n\n***\n\n\"There's my big guy!\" Felicia said, as she came in through the front door. Blake toddled across the living room on an unsteady line, gibbering happily. \"Hi Blaaaake!\"\n\n\"Momo!\"\n\nI follow along behind him, still too nervous to let him walk alone, and it was only when he was in her arms that I felt like I could breathe. \n\n\"Did you have a good time with Daddy?\"\n\n\"Dada!\" Blake turned and pointed at me with every ounce of zeal he could muster, and Felicia laughed.\n\n\"Yes, that's right. That's Daddy.\"\n\n\"Dada!\"\n\n\"Okay, okay.\"\n\nBlake turned and plucked curiously at the plunging neckline of Felicia's shirt, which she deflected before he could do much more than stretch the fabric just a little.\n\n\"Now now,\" she laughed nervously.\n\n\"Hey,\" I said.\n\n\"Hey.\" She smiled and hefted Blake a little higher and to the side, so that he sat more or less on her hip. \"How're you doing?\"\n\n\"Good,\" I said, nodding. Felicia turned back and forth, causing Blake to sway.\n\n\"Bus!\" Blake shouted.\n\n\"Okay,\" she said, rolling her eyes. \"We'll sing Wheels On The Bus when we get to the car.\"\n\n\"Bus!\"\n\n\"Hey,\" Natalie said, as she came out of the hallway with Blake's diaper bag. Felicia smiled at her briefly before looking back at me.\n\n\"Hey,\" Felicia said, \"um... could I ask you for a favor?\"\n\n\"Sure,\" I said.\n\n\"On Tuesday, instead of picking him up from daycare, could I maybe pick him up and bring him home, and then you come and get him from me?\"\n\n\"I mean, I guess I can?\"\n\n\"And maybe,\" she said, biting her lip, \"while you're there, you could take a look at the kitchen sink?\"\n\n\"The k\u2014\" My tongue briefly closed off the airway, and I nodded. \"What's wrong with it?\"\n\n\"Remember how the right one wasn't draining a few years ago? And you had to pull out that twisty part?\"\n\n\"You mean the trap?\" Natalie said, moving to stand beside me.\n\n\"I think it's that again.\"\n\n\"Yeah,\" I said, scratching at the back of my head. \"I can bring some tools and a change of clothes for after work.\"\n\n\"Oh that'd be great!\" Felicia beamed. \"I'll give Blake his bath and dinner, so he'll be all ready to go. You'll just have to change his diaper once you get back here.\" There was just the slightest pause before she said the word here, and given the way Natalie looked down and smiled to herself I wasn't the only one who heard it.\n\n\"Yeah,\" I repeated. \"No problem. I'll be there by, like, four thirty?\"\n\n\"Awesome!\" She turned to Blake and leaned in close. \"Say bubye, Blake.\"\n\n\"Bus!\"\n\nFelicia shook her head and smiled at us over her shoulder. \"Bye!\"\n\n\"Bye!\" Natalie and I said together. I shook my head and shuffled into the kitchen, wishing I'd gotten my first cup earlier.\n\n\"She is unbelievable,\" Natalie said, still staring through the front door. \"Did you see what she just did?\"\n\nI looked up from pouring myself a cup of coffee, the sweet nectar of life, to where my sister was standing, and shook my head. Loose t-shirt and short-shorts. Still, with just her legs exposed and her hip angled sharply, I was turned on. \"What did she do?\"\n\n\"She's trying to get you back.\"\n\nI don't always bark like a seal, but when I do, I prefer to also spill my coffee.\n\n\"Did you see the way she barely addressed me? Or how low the neck of her shirt went?\"\n\n\"I was worried she was going to fall out of that top when she went to pick up Blake,\" I said, still chuckling, as I tossed a hand towel over my mess to sop it up.\n\n\"She wasn't worried about that, because if she had that would have been a bonus as far as she's concerned. Hope you didn't forget I had these babies!\" Natalie stalked toward me, and I couldn't help but stare at her legs as she walked closer and closer. \"She's in need of your help. She's more pleasant. She's dressing more revealingly. It's like she doesn't even realize you're playing for Team Itty Bitty now.\"\n\nThe hairs on the back of my neck stood on end. Natalie's voice had gotten softer, and huskier, as she'd gotten closer. The quiet voice she used just between the two of us. I looked up and licked my lips.\n\n\"Down boy. We don't have time.\"\n\nI made a harsh sound in my throat as I stood. \"Such a little cocktease.\"\n\nNatalie jaw fell, and she fanned herself to keep cool. \"How dare you,\" she said venomously, as she took another step forward. \"I will have you know that I am a huge cocktease.\" She rose up onto the tips of her toes, bringing her lips to within a hair of mine, while her gifted fingers cradled my shaft through the shorts I had on. When she spoke, her lips brushed mine so sweetly that I almost missed it when she said, \"We don't have time.\"\n\nThe smell of her lingered as she turned and saunted back down the hallway, pulling her shirt tight around her waist to keep it from obscuring the sight of her shorts, also pulled tight, around her ass. I took a deep breath, in through the nose and out through the mouth, and followed. It was going to be a long day.\n\n***\n\nI gave Natalie's hand one final squeeze before we exited the car. While we weren't technically late, we were also by no means early so the parking lot had filled with family. We walked side by side, with me in my black suit and her in a navy blue dress that might as well have been black, through the hive of cars. Mom was waiting for us on the steps.\n\n\"Oh Jay,\" she said, sobbing lightly. \"I'm so glad you made it.\"\n\n\"Hey Mom.\" I caught myself using a tone of voice, one of supreme comforting and understanding, that Natalie had pointed out to me, and quietly shook my head while I gave her a hug. It's hard to break patterns of behavior. \"How are you holding up?\"\n\n\"Hey Mom,\" Natalie said, coming up beside me and getting a much shorter, and much more superficial, hug.\n\n\"He had so much spark in him!\" she said, shaking her head. \"So much energy!\"\n\nI nodded and tried to keep my expression flat as I slipped my arm around her shoulder and tried to usher her back into the church. \"Well, Uncle Frank lived a long, full life.\"\n\n\"He was only 85!\" she said, gesturing with her tissue. \"Oh, Nat, and you used to love it when he'd do magic.\"\n\n\"I know, Mom,\" Natalie said, barely hiding her irritation.\n\n\"He had so much life left!\"\n\nI looked over her head, to where Natalie was standing on her other side, and we shared a brief-and-subtle eye roll.\n\nAs soon as we were inside the church proper Mom was met by other grieving family members, nearly all of whom were strangers to us. Uncle Frank was her uncle, one of our grandmother's six brothers. We'd only ever met the man a handful of times as children that we could remember, and it had easily been a decade or two since the last time.\n\n\"Wait,\" Mom said, turning back to us suddenly. \"Where's Blake?\"\n\n\"He's with Felicia today,\" I said, lips pressed tightly together.\n\n\"You didn't bring him?\"\n\nI shook my head. Natalie folded her arms across her chest and looked down, no doubt arriving at the same conclusions I was except faster; not only do I have to deal with all this 'grief', but now I can't show off my grandson either?\n\n\"I wish you would have told me,\" she said, dabbing at the corners of her eyes.\n\n\"It was Felicia's day to have him,\" Natalie said, jumping in with more assertiveness than I would have used. \"Even then, there's no way he would would have behaved himself. He's two, for crying out loud.\"\n\n\"Blake would have provided a lot of comfort and joy to this,\" our mother shot back. \"He's a good kid. It's a shame you're too jaded to see that.\"\n\nI was already reaching over, to lay my hand gently on Natalie's arm, before she could launch into the response that was no doubt coming. For her part Mom already considered the match won, and showed it by turning and heading through the aisles toward the front. Natalie spun to face me, glaring and quivering with unspoken rage.\n\n\"I know,\" I said softly, placing both hands on her upper arms. \"I know.\"\n\n\"She is unbelievable!\"\n\n\"I know,\" I said.\n\n\"She didn't even like Uncle Frank!\"\n\n\"Yeah, but this is what she does.\"\n\n\"The man pulled a quarter from my ear, one time, twenty five years ago, and now she's looking at me like I'm some kind of monster because I'm not as choked up as she is?\"\n\n\"I know,\" I said, pulling her in for a hug. My chin came to rest just above her ear, and though she kept her arms crossed tightly between us, she did lay her head on my shoulder. \"And she's crazy if she thinks I'd have brought Blake to a funeral.\"\n\n\"It's like she just thinks we're all trophies of hers to be trotted out on special occasions, and God help us if we're not all shiny the second she decides she wants us on display.\"\n\n\"Oh my God,\" I whispered, staring across the church.\n\n\"What?\"\n\n\"Oh my God!\"\n\n\"What?!\"\n\n\"Look,\" I said, tilting my head to gesture as indirectly as I could. Natalie twisted at the hip and scanned the backs of the heads. And then gasped.\n\n\"No,\" she whispered.\n\n\"Is that Uncle Jim?\" \n\nNatalie turned back to me, eyes wide and expression carefully neutral, but I knew the twitchy bounce in her feet.\n\nUncle Jim was not actually an uncle of ours. He was a friend of the family, and more specifically a friend of our father. A very old friend, in the sense that he'd known Dad longer than Mom had. For him to be here, where our father most assuredly was not, and sitting next to Mom, was more than a little conspicuous. His particular brand of male pattern baldness, shock white hair, and breadth of shoulder were practically unmistakeable.\n\n\"Do you think Mom and Uncle Jim are fucking?\" she said, whispering even more quietly.\n\n\"Is there any other way that what we're seeing makes sense?\"\n\n\"You know what,\" Natalie said, drawing herself up. \"Good for her. Dad cheated on her.\"\n\nMy eyebrows steadily rose across my brow, marching ever upward. \"I've never heard you frame that in any other way than 'Mom's antics drove Dad into a younger woman's snatch'.\"\n\n\"I have a little more capacity for nuance now,\" she said, shrugging disaffectedly. \"It doesn't make the way she treated him for years okay, but... I think I don't have a problem with this.\"\n\n\"How magnanimous of you,\" I said, and she playfully swatted my arm.\n\nOur banter was cut short by a wave of hushed motion through the church. We quickly and quietly moved into one of the rear-most pews, and then spent the rest of the service craning our necks and watching Mom and Uncle Jim interact. How she'd cry, and he'd give her another tissue. How they'd both look down and between each other, ostensibly at where they might be holding each other's hands (although that wasn't something we could explicitly see from our vantage point). We got our confirmation near the end, when he put his arm around her shoulder and drew her closer.\n\nNatalie excused herself with a smirk just before the pallbearers started hoisting. They filed out of the church, and the throng followed in their wake. I meandered toward the back, in no particular hurry, and let the sea of them wash around me.\n\n\"Where did your sister go?\"\n\nI jumped, not having heard my mother come up behind me over the low chatter of parishioners filing out. The snarky tone, however, was not a surprise at all.\n\n\"Just to the bathroom,\" I said, turning. \"She'll be right back.\"\n\n\"It would be just like her to skip out. At least you're coming to the cemetery.\" It wasn't a question. I couldn't be sure if it was intended as a command or, from her perspective, a simple statement of fact, and decided that the truth lay somewhere in the middle.",
        "\"We'll both be there,\" I said soothingly.\n\nNatalie came up beside me at just that moment, standing very tall in her heels, and smiled pleasantly. \"Are we ready?\"\n\n\"We were just waiting for you,\" my mother said, smiling thinly.\n\n\"Okay! Well, I'm here now!\" After a moment's pause, she leaned slightly forward. \"Hey,\" she said, lowering her voice, \"was that Uncle Jim up there next to you?\"\n\nMom's back stiffened almost imperceptibly, but her expression never faltered. \"He's an old friend.\"\n\n\"Yeah, he's Dad's old friend.\"\n\nI did my best to remain absolutely still, with only my eyes moving to follow the back and forth.\n\n\"Do you have a problem,\" Mom said, \"with someone being there for me in my time of need?\"\n\n\"Oh no! No, it's just that he and Dad were friends for so long that they're almost like brothers.\" Natalie's eyes glowed from within. \"It just makes the whole thing look kind of... I don't know... incestuous.\"\n\nMom looked positively apoplectic, and only at the last moment seemed to remember that she was playing the martyr role. \"When family fails you so completely, friends are all you have left.\"\n\n\"Hey,\" I said. Natalie didn't react, but Mom seemed to have either forgotten I was there or was shocked I hadn't spoken up earlier. It was impossible to tell the source of her disbelief. \"We should get going if we're going to follow the column.\"\n\n\"Don't let her sit behind you at the gravesite,\" Mom hissed. \"The minute you turn your back on her, you might find a dagger in it.\"\n\nNatalie bit her lip and shook her head as our mother stalked away. Fortunately for us, in her furor it only took a few seconds to get out of earshot, so we didn't have to keep straight faces for very long.\n\n\"Did you plan that?\"\n\n\"Yes!\" she said, jumping slightly, although her feet and legs were oddly close together as she did so. \"I thought of it while I was in the women's room and was praying you'd have her alone where I could sneak that in.\"\n\n\"Well played.\"\n\nShe bowed, slightly, and for a moment I thought she made just the tiniest little whimper, but she was laughing as she stood back up with a flourish. \"Give me your phone.\"\n\n\"What? Why?\"\n\n\"Just do it,\" she said, holding out her hand expectantly.\n\nI pulled my phone out of my pocket and handed it to her. She frowned slightly, focusing, as she used her middle finger to slice through some menus. I tried standing up a little on the tips of my toes to see what she was doing, but she just scowled at me and tilted the phone where I couldn't.\n\n\"Why do you not have bluetooth enabled?\"\n\n\"It eats up the battery,\" I said defensively. \"Plus it's not like I use it for anything.\"\n\nShe shook her head as she swiped around a bit more, and then waited with uncharacteristic impatience. Not that Natalie had ever been possessed of an abundance of it.\n\n\"Okay,\" she said finally, as she handed it back to me.\n\n\"What did you do?\"\n\n\"Don't look at it now,\" she said under her breath. \"Later.\"\n\nI frowned and slid my phone back into my pocket, and her smile came right back. As bright and excited as I'd ever seen her, and then I held out my arm, elbow crooked just so. Her brightness softened as she looked around, realizing that no one would care, and gently linked her forearm with mine. Her cheeks warmed, and we walked arm-in-arm down the steps and out toward our car.\n\n***\n\nNatalie gave my hand one final squeeze before we exited the car. The column had taken quite a route through town, and there was no shortage of grumbling from the people ahead of and all around us.\n\n\"Shit,\" Natalie said, as she surveyed the path. \"Can you... um... hold my hand?\"\n\nI blinked and looked around. \"Sure?\"\n\nNatalie groaned. \"There's no carpet or anything to get out to the grave, and I'm in heels.\"\n\n\"Oh! Sure.\"\n\n\"Sometimes it sucks being a woman,\" she grumbled. She held my hand tightly as she stepped along, putting all of her weight on the balls of her feet. She mumbled something that might have been, \"Thank you,\" about halfway across the grounds, and then said nothing further until we reached the site.\n\nThe casket was already in place, and there were dozens of black folding chairs set up in a single block. Most of the guests had arrived ahead of us, and were already seated. Natalie squeezed my hand again and turned to face me. Her expression was more severe than the words coming out of her mouth.\n\n\"Here's the play,\" she snarled. \"You took her side. You're mad at me, and I'm really mad at you. Got it?\"\n\n\"Got it,\" I said, scowling immediately.\n\n\"So much so, that you're not going to sit with me!\"\n\n\"Oh, you'd like that! Wouldn't you?\"\n\n\"And you're certainly not going to let me sit behind you. No no. You're going to sit behind me. Where you can keep an eye on me.\"\n\n\"We will talk about this later, young lady!\"\n\nShe glared at me, broken only by a wink when she knew she'd turned enough that Mom couldn't see, and angrily stalked into the second to last row. For her part, our mother was definitely watching, and even had the gall to look pleased with our spat. I moved into the last row, which I had all to myself, while Natalie sat down next to an elderly woman in a Sunday hat. After a few moments, another gentlemen sat down on Natalie's other side. I had the back row all to myself. With everyone seated, the ceremony began a little early, and within a minute my phone was buzzing in my pocket.\n\nHey, read the message. Check out that new purple icon\n\nI blinked and dropped her chathead into the trash can. It took me another minute of staring at the home screen of my phone to see the little purple sphere that pulsed when I touched it. It brought up a more or less blank screen with some grayed out controls at the bottom, but after another minute, another section of it began to blink.\n\nCONNECTING TO: MySistersAss\n\nI felt it move, read another message that popped up on my screen. Do you like the name I gave it?\n\nGave what, I typed back incredulously.\n\nInstead of answering me directly, Natalie looked back over her shoulder and smiled. Her hands moved to the hem of her skirt, and she slowly began to pull it out from underneath herself. The elderly funeral guests to either side of her were too focused ahead to notice what she was doing as she tugged and pulled and wiggled until the back side of her dress began to slide up over her beautiful pale ass. I hadn't even noticed that she was wearing stockings, as the color so closely matched her skin tone, until I saw the straps leading up to a garter belt around her waist. No panties... but there, peeking out between her two perfectly sculpted orbs of flesh, was a small, curved piece of pink silicone. I tilted my head, trying to imagine how she could have sat on\u2014 \n\nAnd then it hit me. Why she'd been in the bathroom so long. Her unusual posture afterwards. Bluetooth device. MySistersAss.\n\nIt was vibrator, a remote-controlled one at that, and no sooner had I sorted out the whole affair than my phone finished its lengthy handshake and I was greeted with a simple, singular analog control. Basic intensity. More and less. It was agony to tear my eyes away from the phone, but Natalie was still staring at me with a mixture of composure and sheer delight. I rewarded her with a gentle opening salvo.\n\nAfter a minute, I had the motion of it down where I no longer needed to watch my thumb. I could just watch her. Studying the way her body moved and reacted. The shivers. The twitches. The moments where her arms drew in tight against her sides. When she sat up very straight. I couldn't wait to see how long it was so that I could retroactively appreciate how deeply she was feeling this. Given the way she'd been so stiffly posed, back as straight as an arrow, my guess was that it was long enough.\n\nI settled into a pulsing rhythm, reaching the same intensity and backing off to almost none, as steadily as I could. Reaching the perfect intensity was not as important as maintaining the rhythm. Perfect rhythm. Natalie's eyes closed, and she gave a weak whimper.\n\nSuddenly, the woman next to her took her hand and gave her a sympathetic smile. Natalie nodded emphatically, and then bit down on her lip. Allowing herself to show more of what she felt on the inside. Others around us, experiencing grief both real and imagined, masked and recontextualized her whimpers to appropriateness, but I knew. I knew, and Natalie knew. Knowing made it better.\n\nShe looked down, typing on her phone with one hand, and smiled.\n\nAr3 you gonna make me cun? surrounded by family?\n\nI typed no response, pausing only to dump her chathead into the trash, and when she looked at me over her shoulder I smiled warmly.\n\nIm ur whore\n\nFor the first time since sitting down, I had to adjust myself. Shifting my legs every so slightly to hide the tented zipper. I kept the rhythm but ramped the intensity up dramatically, and Natalie lowered her head. Chin tucked to her chest. The elderly woman reached over to pat the back of Natalie's hand, gripping it from both sides, and that feather proved to be the final one.\n\nShe started nodding emphatically, her eyes pinched shut, and I backed way off on intensity. Keeping it steady at just shy of 'off'. Her cheeks were flush with color, with perspiration dotting her brow. The elderly woman leaned over to check on her, whispering softly, and Natalie nodded again. I backed off the rest of the way and closed the app, and the phone was back in my pocket by the time she turned around to smile gratefully at me.\n\nThe casket was heading down, already lowered beneath the ground around it. We'd played through almost the entire ceremony. On one hand, this was far and away the most dangerous attempt we'd ever made to get away with something under the noses of others, and my skin felt absolutely electric. On the other hand, it also felt like Natalie and I had moved into a realm where the most important part of any family gathering was how we would subvert it for our own desires. I didn't feel guilty, but I almost felt like I should.\n\nAnd then Natalie looked back at me, and I forgot about everything else.\n\n***\n\nAs soon as we were back in the car, we were holding hands. We always held hands in the car. Since I did most of the driving when we were together, I'd gotten very adept at doing everything with my left hand and using my knee to hold the steering column in place if I needed to reach for something else.\n\nThe cars ahead and behind us were parked so closely that we were effectively trapped until those ahead of us were moving. As soon as it looked like there would be no more people walking past our car, Natalie smiled and leaned closer to me. She stayed upright in her seat, but her left hand was in my lap, tugging and pulling on the zipper of my pants, the second she thought she had the cover to do so.\n\nIn our world, cover was not the same thing as privacy. Cover was enough of an obstruction that others probably wouldn't see, and as long as the parts of us that others could see met their expectations (smiling, affable, calm, or whatever the situation called for), then they usually gave it no further thought. Cover was all we needed to get started.\n\nAt no point since playing with her vibrator had I stopped being hard, and Natalie laughed and waved at a distant cousin as she started to stroke me. Slowly up and down, pushing the soft outer layers of skin up to surround and cradle the mushroomed head. Instantly, my hips were sliding forward, back arching slightly, to let her reach just that little bit extra.\n\nThe speed of it, the manual stimulation, was so much less exhilarating than the thrill. I laughed and nodded at the same cousin, but it was hard not to melt under her touch. Then the cars started moving, and we pulled into the flow of it.\n\n\"I have an idea,\" I said, saying it only as the idea was forming. Each of the cars ahead of us were following the same path, and I turned at the first opportunity to head elsewhere.\n\n\"Yes,\" Natalie said. She turned in her chair, watching as the two cars immediately behind us continued on with the rest of traffic, and lowered her head into my lap. I groaned loudly, slouching just a little bit more, and ran my fingers through her hair. Our car ambled slowly through the cemetery, bouncing along uneven pavement toward points unknown. \"Mmmmmm.\" Her lips were warm on my shaft.\n\nSuddenly, a glint of light in my mirror caught my attention. \n\n\"Shit,\" I said. \"Someone followed.\"\n\nNatalie made a little noise in her throat before sitting back up, and immediately reached back down to stroke and spread her own saliva.\n\n\"What are you gonna do?\" she laughed.\n\n\"I got this,\" I said, feeling flush with inspiration.\n\nThe road we'd taken was merely an offshoot of the main road, one that headed out into a section of the cemetery grounds that had not yet started to be used. In other words, it was paved but there were no graves there and it went nowhere. It wound down a hill and behind a treeline before terminating in a loop. I slowed as we approached the loop and shook my head.\n\n\"It's a shame they followed us,\" I yelled, \"because now I have to do this!\"\n\n\"And I think we both know I'd rather be sucking your cock!\"\n\n\"So would I!\"\n\n\"Then why are we yelling?!\"\n\n\"Because,\" I said, pointing wildly, \"They'll just think we pulled over here to have it out about God only knows what.\"\n\nShe held a quivering finger right under my nose, a pose that would silhouette perfectly when viewed from behind, and snarled, \"You didn't just pull over here so I could suck you off, did you? Admit it!\"\n\n\"Of course not!\" I shouted back. I pulled the car halfway around the loop, so that it was perpendicular to the winding road behind us, and stopped. \"I'm gonna bend you over, behind this car, and fuck your slutty\u2014!\"\n\n\"They're turning around,\" Natalie said, grinning and peeking past me. \"Oh my god, they don't want any part of watching us fight. That's amazing!\" She reached for her purse absently while she watched the car pulling a tight three-point turn.\n\n\"Good,\" I said, \"because I don't know how much longer I could have kept that up.\"\n\nI quickly tucked myself back into my pants and stormed out of the car. Natalie was already waiting for me on the far side, and there was only a small cloud of dust to where the follower cars had been.\n\nI pushed Natalie against the car so that she was facing it, with her backside to me. She bit her lip, hands settling against the tops of the door frames, and looked back at me over her shoulder. She cooed as I pulled up on her dress, and brought my hands in to cup her beautiful ass. Squeezing.\n\nThe curved end of her vibrator hooked nicely in the crook of my finger, and I gave it a gentle tug. She let her head slide back into her shoulder and groaned as I pulled just a little more. And just a little more. And then, with a low moan, the whole thing came sliding out of her.\n\n\"Here,\" she said, twisting one arm behind herself. In her palm was a small, orange-and-clear bottle of lube. \"I assume that's where you want to fuck me?\"\n\nI laughed as I stood up, my body pressed tightly against hers. Pinning her against the car. My lips against her ear as I whispered, \"The thought of accidental pregnancy is\u2014\" She shivered hard, and I chuckled. \"See?\"\n\n\"Yeah,\" she purred back, grinding against me, \"but I think we both know that what you really want is my dirty little asshole.\" She clenched her teeth, as I guided the lube-streaked head between her cheeks, and rolled up onto the tips of her toes. \"To \u2014nnngh oh God\u2014 to fuck your little sister's ass? Huh?\"\n\nThrusting was almost a straight up-and-down motion, and Natalie grunted with every push. Head popping up ever so slightly. I reached around her, holding her tightly against me, and grabbed her breasts through her dress. Curling my palm just so to pinch her nipple through the fabric.\n\n\"Yes,\" she grunted, chin falling to her chest again. \"Oh God.\" \n\nIt was a shallow fuck, limiting the depth to which I could penetrate as well as the strength I could put into each push, but that was just fine by us. I tilted my head, bringing my lips to her neck, and kissed her repeatedly. She leaned her head the other way, granting me greater access, and I took full advantage of it. Crushing her against the car.\n\n\"Fucking fill me up,\" she moaned. \"Jeesus that feels good.\"\n\nBoth of us still completely clothed. The skirt of her dress pinned against the small of her back. Her stockinged legs, in her four inch heels, planted just to the outside of my feet. Against the passenger side of my car. In broad daylight. Right hand still clutching at her breast, I brought my left hand up to wrap around hers. My palm to the back of her hand. She stretched out her fingers, between which I interlaced mine, and we both squeezed.\n\n\"I want it inside of me,\" she said softly, tilting her head back to nuzzle against my forehead. \"I want your cum inside me.\"\n\n\"I love you,\" I grunted, throat tightening, as I felt the peak approaching.\n\n\"Fuck! Yes! I love you too!\"\n\n\"Fuck! Fuck!\"\n\nMy cock quivered inside of her, pulsing with energy. My hips kept moving, in quick, halting thrusts that mashed and pushed her rounded flesh outward. As soon as I started to slow, Natalie let go of my hand and reached back.\n\n\"Stay inside me,\" she whispered. \"Just stay inside me.\"\n\n\"Okay,\" I whispered back.\n\n\"Please.\"\n\nI nodded, brushing the my forehead against the side of hers, and brought my hands down. One pressed against her pelvis and one over her belly button. There was no need to hold her against me, as I was also using my legs to pin her between the car and me, but it felt right to hold her and keep her close.\n\n\"Just another minute,\" she whispered. \"Stay there.\"\n\n\"Are you... are you close? Are you gonna cum?\"\n\nShe shook her head, and bit her lip as she smiled. \"Just...\"\n\n\"Okay,\" I said, as I kissed her cheek and nodded. \"I understand.\"\n\nHer hands came to lay over mine, and we stayed just like that for the next several minutes.\n\n***\n\nI gave her hand one final squeeze before we got out of the car. Natalie climbed halfway out of the car and looked back down.\n\n\"Okay good,\" she said with a grin. \"No stain.\"\n\n\"I still can't believe you just squatted there in the grass until it all fell out.\"\n\nShe smirked and nodded. \"Does this girl know how to party or what?\"\n\nI laughed, and it took a considerable exertion of will to compose myself, to take full control of my faculties and present properly, even though I knew it wouldn't matter. There he was, already coming toward us.\n\n\"Jesus,\" Dad said, as soon as we were within earshot. \"You two look like you're going to a funeral.\"\n\n\"Hi Dad,\" Natalie's body language was so much more relaxed, and I don't think it was from the orgasms. Shoulders down, hips less stiff. Head tilted slightly as she moved in to give him a hug.\n\nStanding just behind, in a polar opposite in posture, stood Dad's new girlfriend Denise. Arms folded. Hip cocked. One foot planted slightly in front of the other like a dagger.\n\n\"Hi Baby,\" Dad said.\n\n\"Hey Dad,\" I said, coming up beside her. Dad smiled and extended one hand, and I settled for a firm shake. Par for the course.\n\n\"Hi,\" Denise sang, a little more bitingly than was strictly necessary. Natalie and I both smiled and nodded at her, and she stopped just shy of rolling her eyes. Pleasantries exchanged, we turned and headed into the hotel. Natalie and Denise flanked my father, while I brought up the rear. There were signs in the lobby for us to follow, directing us to the second of the two large reception halls.\n\n\"I'm glad you guys could make it,\" Dad said, ostensibly speaking to both of us but directing it toward my sister with his body language.",
        "\"Of course!\" Natalie said.\n\n\"I wouldn't be surprised,\" Denise chimed in, \"if your ex had pushed to make sure that funeral was today just to make them choose between you and her.\" Dad nodded in agreement, and Natalie and I shared an unsurprised look. That did sound like her. \n\n\"How long has it been since we saw Billy?\" my sister asked, still looking back at me.\n\n\"God... ten years? How old is Billy now?\"\n\n\"It's just Bill,\" Dad said sternly, and I rolled my eyes. \"And I think he's gotta be... thirty-two? Something like that?\"\n\nBilly had always been a goofy kid. The youngest of three of our father's older sister, who had then been raised in the same neighborhood as two of their other, older cousins not related to us. In a way, Billy had really been the youngest of five given how much time they all spent together, and he'd used his natural charisma as a means of getting the attention he needed. At one time, Billy had even considered a career in stand-up, but his timing and wit were better suited to a kind of situational humor that didn't always translate perfectly to pre-written jokes.\n\nIt was no surprise that we only recognized about half of the assemblage as we walked into the hall. Lots of family had showed, but the family was easily distinguished from Billy's peers because they varied in age. Billy made friends by the metric ton, and the sheer number of them was staggering.\n\nWe had never been particularly close with Billy, and that showed when we were seated at a table with strangers. They seemed pleasant enough when they introduced themselves, but their names went in one ear and out the other as soon as spoken. They got very excited when they found out that Natalie was starting a new career as an event planner, but that point of relatability went out the window when they realized she hadn't had a hand in planning either the wedding or the reception. With that the table went largely silent, with the different pairings breaking into their own conversations.\n\n\"Any news from Felicia?\" Natalie asked, as I bent over my phone.\n\nI smiled, intuiting that she wasn't asking about my ex-wife at all. \"She sent me a video of him walking and using a plastic wrench.\"\n\nNatalie leaned a little further, watching the video with her neck craned sharply, and smiled. \"Oh god, oh god!\" she whimpered, as Blake stumbled and tripped. Her shoulders curled lightly, empathetically cradling her arms inward as he picked himself up and brushed his hands across his shoulders.\n\n\"Where did he pick that up from,\" I said, eyes wide.\n\nNatalie giggled and shook her head. \"Dora the Explorer. Boots got lost on the 'Dusty Trail', and they sang a song about how to get right back up, dust yourself off, and keep going.\"\n\nIn the video, Blake crowed loudly and proudly after deeming himself clean, and went right back to hammering the wrench on Felicia's coffee table with all of his toddler might. \"Car!\" he screamed.\n\n\"That's right,\" came Felicia's voice, from right behind the camera. \"You're fixing the car! Just like Daddy does!\"\n\nNatalie laughed and smirked. \"Very subtle.\" I slid my phone back into my pocket when the video ended, and my sister took a long sip of water. \"She is a piece of work.\"\n\n\"Tell us how you really feel,\" I said, struggling to keep a straight face.\n\n\"I don't want to think about about her,\" she said, shaking her head. \"If I get going, I'll just be pissed off all night.\"\n\nOut of the corner of my eye I caught Denise shifting in her seat, and reverse engineering her movements heavily implied she'd been trying to look at my phone too. On the other side of her, Dad was as silent and impassive as ever. His father, our grandfather, had very specific ideas about how men were supposed to behave in public, and Dad had never deviated from those early-imparted lessons.\n\nInstead of doing all the talking for him like Mom had always done, Denise was sitting with her arms folded across her chest. Looking very lonely and, I think, trying to find some way to engage us.\n\n\"Hey,\" I whispered, leaning over to Natalie (who was between Denise and I). \"I think she's trying to talk to us. Or maybe just you.\"\n\nNatalie's eyes widened. \"I don't really... want? To be her friend?\"\n\n\"Yeah, but like... what if her biggest crime is just that she's attracted to an older guy?\"\n\n\"Jay,\" she said, putting her hand on mine and making very direct eye contact. \"I'm not going to make friends with her here.\"\n\n\"I mean, we could try, right?\"\n\n\"How do you think that could possibly happen right here, and right now?\"\n\n\"It's a wedding,\" I said. \"There will be wine. Aren't there some common interests you could try to figure out?\"\n\nNatalie smirked and shook her head.\n\n\"Couldn't you, like... I don't know. Invite her to go to the bathroom with you or something?\"\n\nNatalie threw her head back and laughed. \"Like it's some rite of passage women go through to be besties.\" She slapped her open hand lightly, repeatedly, against the surface of the table, and the other people seated around us looked over at her with expressions ranging from curious to disturbed. Natalie continued to laugh and snicker under her breath for the next several minutes, only really getting herself under control when the lights dimmed slightly and the actual ceremony started.\n\nBilly's wedding was held in the reception hall, with all of us seated there at the same tables we would later eat at. I had to turn my chair to the side to face front, and that put Natalie behind me. I could feel her foot brushing against the back leg of my chair, and I longed to reach down and hold it.\n\nI couldn't. Too exposed. But I wanted to.\n\nIf I had laid money, before getting there, on what kind of ceremony little Billy would have had, I'd have guessed something very non-traditional and full of joy. Something with jokes and fun. Something that reflected who he was. I'd never met his girlfriend, but it made sense that he would have found someone as interesting as he was.\n\nI would have been wrong. Venue aside, we were treated to the longest textbook wedding I've ever attended. There were two readings, one of poetry and one of Bible scripture. Very dry. The more time went by, the more I realized that I was not alone in my confusion. Several others were leaning toward each other and whispering conspiratorially.\n\nThe longer the ceremony dragged on, the more emboldened Natalie became behind me. Her heeled foot crept higher and higher as it brushed against my chair. I could just make out the tip of it beside me in my peripheral vision. Bouncing slightly. The same way it did when she was on her back. That was a hard mental image to put aside.\n\nThere was no cover beside me, and I couldn't quite manage enough don't-give-a-fuck to pull out my phone so I could message her. Even though I wanted to. I wanted to text her right there. I wanted to\u2014\n\nThe toy. The app.\n\nI squirmed in my chair. I wanted to play even more now. and it didn't seem possible. I'd finally found a situation where we were too exposed to risk it. That wasn't stopping Natalie from teasing me, but it definitely got in the way of me acting on my desires. The rest of the ceremony passed in fits and bursts while I alternated between dreaming of the things I wanted to do to my sister and dealing with the reality that I couldn't. Not right then. So I waited.\n\n\"Is it in?\" I asked, turning in my seat as the new Bride and Groom made their way down the aisle together.\n\nNatalie leaned forward and smirked. And shook her head. \"Give me a couple minutes.\" \n\nAs soon as the bridal party was out the door she stood and headed for an exit, and she wasn't the only one. A half-dozen others, men and women, scooted toward exits with pained expressions and flushed cheeks. So I waited.\n\nAnd I waited. Nobody at our table was talking, and one by one the others who had slipped out of the venue hall returned. And I waited.\n\nAnd just when I pulled out my phone to check on her, it buzzed softly in my hands.\n\nCan you come out here?\n\nI was out of my seat in a heartbeat. My father said nothing as I got up, but out of the corner of my eye I could see he disapproved. It was freeing to realize I didn't care.\n\nNatalie waved at me with a huge grin on her face from further down the hallway as I emerged from the reception hall. I gave her a few meaningful, questioning looks as I closed the distance, but she merely smiled wider.\n\n\"What?\" I finally said, when I finally reached her.\n\nNatalie said nothing, but gave a tell-tale tilt of her head. I followed her gaze to a door, and it wasn't until I heard the music coming from the other side of it that I understood.\n\n\"Are we crashing a wedding reception?\"\n\nNatalie nodded gleefully, took my hand, and led the way. No power on Earth could have stopped me from following her.\n\nNo one looked at us twice. The other reception hall was packed with smiles from wall to wall, a stark contrast from the dreary tone we'd just come from. On top of that, they seemed like the kind of people that were so happy to be happy that they didn't care who they shared it with. Like even if we announced ourselves as outsiders we would still have been welcome.\n\nNatalie went straight to the dance floor. I held her hand the entire way. We were surrounded by strangers. It didn't matter what they saw because they had no way of knowing what they were seeing. Given the way she squeezed my hand as she walked, she was thinking the same thing.\n\nThe music was upbeat. I didn't recognize it, but that meant nothing. The DJ was doing his job of playing something with an easy groove that even an average guy like me could keep up with. Realistically, though, all I had to do was keep up with Natalie. I fed off of her energy. I played off of her motions. There were some children in the crowd and the song wasn't a grinder, but I danced with my sister and it was amazing. Utterly exhilarating.\n\nNatalie's grin bordered on being too much when the next song was much slower. I slipped my arms around her sides, hands coming together behind her waist while her arms came to lay over my shoulders and around my neck. I held her close. I held her to me. She smiled. We rocked back and forth, shuffling in a small, erratic circle, but I guided her around and she followed. It felt wonderful to hold her in my arms.\n\nOne song blurred into the next. There, on that dance floor, Natalie was so alive, but that wasn't what it felt like for me. It felt like she was possessed by gravity and I was trapped in her orbit. I was within the event horizon, and time had no bearing. It was a matter of certainty that I would fall into her.\n\nThat is, until the Electric Slide came on.\n\n\"Noooo,\" I groaned, but she grabbed my hand in both of hers and bit her lip.\n\n\"Come on!\" she laughed, tugging playfully. \"It'll be fun!\"\n\n\"I don't know this dance at all!\"\n\n\"Neither do I! That's what makes it great! We'll look like fools together!\"\n\nI groaned again and rolled my eyes, and that was when Natalie stepped up closer to me.\n\n\"I'm doing this in heels,\" she whispered, \"with a vibrator in my ass. Surely you can keep up for one more?\"\n\n\"Well now I can't say no.\"\n\n\"No?\" she said, grinning.\n\n\"You've impugned my honor. I have to.\"\n\n\"Is that all I have to do?\"\n\nI shrugged and nodded, and for just a moment she stared at me like she'd never done before. It was gone before it had registered in my brain that it was a new look, but the memory of it lingered.\n\nAfter much wailing and gnashing of teeth, when the final notes of the patently-80's Electric Slide faded into the next song, Natalie graciously allowed me to exit the dance floor. This time, I took her hand and guided her toward the bar. I ordered a rum and coke, and she ordered a white wine. As soon as I had the glass in hand, her arm interlaced with mine and she dragged me off without a word.\n\n\"Hello,\" she said, as she sat down at a table while I stood bewildered by her side.\n\n\"Hello,\" replied a kindly old man dressed in black. With a distinctive white collar.\n\n\"Lovely ceremony,\" she said. \"Truly.\"\n\n\"Oh thank you!\" the man said. His face lit up when he smiled. \"Truth be told, the Bride did a lot of the planning for this one. I had an easy job this time.\"\n\n\"That is so like her,\" Natalie laughed, nudging me with her elbow. I laughed and nodded as well.\n\n\"Totally,\" I added. \"Remember that party she threw at State where the guys all showed up\u2014\"\n\n\"\u2014and they all had those hats!\" Natalie chortled, and I had never been more proud of her. Or us. \"Yeah. Oh, that was great.\"\n\n\"Are you friends of hers?\" the man asked.\n\n\"We are, uh... is it 'Father'?\"\n\nThe priest nodded and smiled.\n\n\"Sorry, Father. I didn't want to insult you by using the wrong term.\"\n\n\"Oh no,\" he laughed. \"It's quite alright, I answer to many names. I get Pastor, Reverend, and Padre all the time.\"\n\nI looked down at Natalie, so composed and intent, and a chill washed over me.\n\n\"Father, can we impose upon you for a minute?\"\n\n\"Of course,\" he said brightly.\n\n\"Kevin and I,\" she said, gesturing to me, \"Kevin is my fianc\u00e9. We're getting married in two months.\"\n\n\"Congratulations!\" the priest exclaimed.\n\nNatalie beamed and squirmed, and squeezed my hand. \"But we're having a hard time with our preparations. Our families, and scheduling, and deposits, and money, and we're just starting out. You know?\"\n\n\"Oh,\" he laughed. \"I know. It can be a lot.\"\n\n\"Too much, sometimes.\" Natalie looked up and me and winked. \"We were really wanted to get one tiny little thing off of our plate, and we were hoping you could help us with that?\"\n\n\"Well I, I don't know what I can do, but I'd be happy to try?\"\n\n\"Well we were hoping you could, in the briefest way possible, marry us now. Just a quick 'do you, do you,' for our own peace of mind.\"\n\n\"We were,\" I interjected, pausing to clear my throat and meet her gaze. \"We were thinking about eloping at one point, because it's tough with our families.\"\n\n\"Ugh,\" Natalie groaned, rolling her eyes. \"His mother.\"\n\n\"But we love each other very much.\"\n\n\"I can see that,\" the old priest said, smiling. \"Now you know that anything I do like that wouldn't be official or\u2014\"\n\n\"Oh,\" Natalie said, leaping forward. \"We know. And we're not planning on cancelling our bigger ceremony. We just want to be able to feel like the pressure is off and all we're really doing is throwing a party for everyone else.\"\n\nI let go of her hand and placed mine on her shoulder, giving it just the slightest squeeze. \"This would just be for us.\"\n\n\"Well,\" he said, tilting his head consideringly, \"a marriage is a sacred vow between two people.\"\n\n\"That's exactly what I said,\" Natalie said eagerly. \"Kevin, that's exactly what I said. Didn't I say that?\"\n\nI nodded, doing my best to make my nod appear like I was admitting something rather than just agreeing.\n\n\"It's between us! It should be between us, you know?! That was why we were thinking of eloping, but you know how it is.\"\n\nThe priest licked his lips and shrugged reluctantly. \"I can't argue with that. Do you, uh.. Do you have the ring?\"\n\nI froze, but Natale turned smoothly and reached for her purse without missing a beat. \"It's a family heirloom,\" she said, as she opened the velvet clamshell. \n\nI blinked, staring down for a moment, and then caught myself. \"Oh, and I... uh... I actually already wear mine. A lot.\" Technically it was my wedding ring from Felicia, but continuing to wear it was an intentional cover story Natalie and I had adopted to keep anyone from looking too closely at us. \"Especially at home. I actually forgot to take it off when we left the house today.\"\n\nThe elderly priest smiled graciously and waved his hand, indicating for Natalie to stand. She did so, pressing her shoulder just inside of my arm and turning herself slightly toward me. \"Okay, I'll make this quick,\" he said, looking at me. \"Do you?\"\n\n\"I do,\" I said.\n\n\"And do you?\"\n\n\"Yes,\" Natalie said, smiling broadly.\n\n\"I now pronounce you husband and wife.\"\n\n\"Bless you, Father,\" Natalie said, placing a hand on his shoulder as she gave me a gentle nudge. \"Thank you.\"\n\n\"Thank you, Father,\" I added, over my shoulder, as she pushed me more and more firmly.\n\nWe were out in the hall before either of us knew where we were going. I took her by the wrist, pushed her up against the wall, and leaned into her. Kissing her passionately. In her heels our heights were nearly equal. My hands slid up and down her sides while she cradled my face, holding me there even as my body weight kept her pinned.\n\n\"Thank you,\" she whispered under her breath. \"Thank you. Fucking God, thank you.\"\n\nI couldn't make words work at all, unable to do more than grunt at her. It was hard holding back the part of me that wanted to pull up her dress, right there in the hallway, and take her no matter who saw. I knew the look in her eyes well; she wasn't far behind, if at all.\n\nSuddenly, her eyes opened wider. \"I have an idea.\"\n\n\"I love the way your mind works,\" I said, though in truth it was very hard to stop.\n\n\"Follow my lead.\"\n\nI nodded.\n\nNatalie licked her lips slowly and rolled her head from side to side. When she opened her eyes, they were heavy and lazy. \"Follow,\" she slurred. She held my hand, then clasped it in both hands. Then her left arm slid up to interlock with my right arm while she held my right hand in hers. With every step she held onto me a little more desperately, and by the time we rounded the corner I would have sworn she was drunk if I didn't know better.\n\n\" 'scuse me,\" Natalie said, letting go of my arm briefly to wave, before gripping my hand again fiercely. \" 'scuse me.\"\n\nThe woman working the front desk turned and smiled, and then her eyes popped wide. \"Ma'am?\"\n\n\"I'm fine,\" Natalie slurred. \"I'm fine.\"\n\n\"She's not fine,\" I said.\n\n\"Kevin,\" she whined, looking over at me. Just as we reached the desk, one of her knees buckled and she slumped hard. She would have gone all the way down if not for her tremendous grip and a last-second adjustment by me. \"Shit. Sorry.\"\n\n\"It's okay, Baby.\"\n\n\"It's not okay.\"\n\n\"It's a new medication she's on,\" I said, turning to the receptionist. \"The doctor warned her it might change her tolerance for some things, but\u2014\"\n\n\"Not like this,\" Natalie said indignantly. \"He didn't tell me... He didn't.\"\n\n\"I'm sorry,\" I said, turning back to the woman.\n\n\"I just need to-to lie down. For a little while.\"\n\nThe woman behind the desk looked down for a moment and smiled. \"You know, we have one of the dressing rooms around the corner that's open. There's some really comfy couches and a bathroom, and it's private.\"\n\n\"Yes,\" Natalie said.\n\n\"That would be lovely,\" I added. \"Thank you.\"\n\n\"It doesn't have a bed, but you can shut the door and lay down somewhere quiet. Would you like that?\"\n\n\"Yes,\" Natalie said again.\n\n\"We'll send someone around in an hour to check on you. Just to make sure you're okay.\"\n\n\"Thank you,\" I said, giving the helpful woman the most sincere smile I could muster. \"So much.\"\n\nThe woman typed for another minute before producing a freshly programmed keycard with a smile. \"Make a left right there and then another left at the end of the hall. It'll be the fourth door on your right. C2.\"\n\n\"C2,\" I repeated, holding up the card. \"Got it.\"\n\n\"You're a saint,\" Natalie said, a little louder than necessary, as I turned her and helped her down the hall. \"A saint.\"\n\nThe lobby and hallway were otherwise empty, and as soon as we turned the corner Natalie began to compose herself. She deftly took the card from my hand as she walked, held it up between two of her extended fingers, and smiled.\n\n\"How did you know?\" I asked.\n\n\"Any hotel worth its salt has a couple extra dressing rooms for its reception halls.\" She smiled at me as she started walking, and it was impossible not to look at her and see how sexy she was. \"Just in case.\" It was in her stride. In her confidence. In the way her hips rolled, and her shoulder dipped. There was sexiness in the way her arms swung at her sides, and in her calves. My god, her calves. I fell behind her, captivated by the way she moved, and had to shake my head to snap out of it.",
        "I caught up to her as we rounded the second corner, and she squealed happily as I scooped her up. Time rushed forward, drawing us along like the tide. Natalie twisted in my arms, reaching forward to slip the keycard into the slot and grabbing the door handle. I carried her across the threshold, and the way she stared at me made me so happy. Natalie slid down in front of me and turned, facing me with both hands pressed against my chest. Elbows tucked against her sides. \n\nI felt full to bursting.\n\n\"No no,\" she whispered, when I moved my hands toward the zipper at the back of her dress. \"They'll come around sooner than an hour. Keep the dress on.\"\n\n\"Okay,\" I said, nodding. I grabbed the hem of the skirt, lifting, and took a step forward for every step she took toward backwards toward the wall. She still wasn't wearing any panties, and her nimble fingers had little trouble unzipping the fly of my pants. Her knee was hooked into the crook of my elbow, with her heel dangling from the tips of her upturned toes. She grabbed hold of my shaft and guided me in.\n\n\"Oh God yes,\" she moaned, tilting her head forward until her forehead came to rest against my brow. \"Oh god.\"\n\nI widened my stance, knees bent slightly, with a gentle thrust that brought me very close to fully inside. Close to the hilt.\n\n\"Do you,\" she huffed, eyes fluttering. \"Do you like my wedding dress?\" In and out.\n\nI groaned loudly, saying \"Fucking hell, I love it.\" In and out.\n\n\"I want you to... I want you to...\" In and out.\n\n\"Tell me,\" I said. In and out.\n\n\"Don't cum inside me. I want you to pull out and cum on this dress.\" In and out.\n\n\"Oh fuck.\"\n\nAs happened often between us, the longer we went the less I found myself able to speak. The lizard brain, the part of me that wanted to be fucking her at all times, took over more completely. I heard her, processed everything she said, but the urge to answer or engage lessened with every second and with every thrust. With every soft grunt from her. My nerves sang sweetly of the joy of being inside of her, and their call was overwhelming.\n\n\"I want to... fuck... I'm gonna put on this dress, every weekend, and oooh God. Put a new stain on it. Each week. Fuck.\" In and out. \"Have you fucking me from behind,\" she moaned, \"and then pull out and cum all over my back.\" In and out. \"Never wash this dress again.\" In and out.\n\nIn and out.\n\n\"My own little\u2014ahh!\" Her eyes pinched shut, and her jaw clenched tightly. \"Fuck! Don't... Don't stop!\"\n\nIn and out.\n\n\"I know what I said! Don't stop!\"\n\nIn and out.\n\nHer arms wrapped around me tightly, clinging to me. Her leg curled around my arm, heel bouncing against my hip. Color exploded across her cheeks. I kept thrusting, slow and easy, as she tensed and squeezed around me. Her short brown hair fell over her face, obscuring her eyes and nose and leaving me with only the soft sounds she made under her breath to judge her.\n\n\"Never stop fucking me,\" she moaned, and with a guttural groan I filled her with seed.\n\n***\n\nI held her hand as we sat in the car, ambling down the highway toward home. The sun had long since given over to night, and the sky was clear.\n\n\"How are you doing?\" she asked quietly, giving my hand a light squeeze to get my attention.\n\n\"I'm, uh...\" I smiled. \"I mean, today was...\"\n\nNatalie smiled softly and nodded.\n\n\"How are you doing?\"\n\nShe licked her lips and looked down at our hands. \"Thinking a lot.\"\n\nI wanted to say 'me too'. If I'd been paying attention, I'd have noticed that Natalie had been quiet when we went back to Bill's reception. I might have noticed how small she was when she walked, taking short steps along a very narrow line, or the way her shoulders were tucked. I might have noticed the way she excused us from the ceremony with a complaint about a cramp.\n\nI didn't notice those things, because I'd been too caught up in my own head. Too spun from the day to process anything else. I wasn't ready to say what was on my mind, so instead I pressed her.\n\n\"What are you thinking about?\"\n\nNatalie folded her arms tightly across her chest, hands both tucked under her upper arms. \"I'm worried.\"\n\nI was too, but I wasn't brave enough to say it. Or agree with her. So instead I waited.\n\n\"Every time we go a little further, I... I don't know.\" She shook her head and frowned. \"I keep expecting this thing we're doing to run its course, and... and then we can go back to not talking to each other for years, like we used to. I keep thinking that... that every...\"\n\n\"I'm listening,\" I said.\n\nShe took a deep breath to compose herself. \"I was worried, in the beginning, that I was much deeper underwater with you than you were with me, and in a weird way that made it okay for me. I knew \u2014I knew!\u2014 that sooner or later you were going to throw your hands up and say 'okay, this is too far', and that would be it.\"\n\n\"Nat, I\u2014\"\n\n\"Just... shut up and listen,\" she said, interrupting me. \"Knowing that you were going to quit first made it okay for me to take the next step each time. To be the one that made the suggestions, and bought the toys. I was prepared for you to back out every time I did something new.\" She licked her lips and shook her head. \"I wasn't prepared for this.\"\n\n\"For what?\"\n\n\"For this,\" she shouted, gesturing wildly. \"For us. You and me. I wasn't prepared to want this so badly.\"\n\nMy jaw hung slightly open, tongue pressed against the the inside of my lower lip, for quite a while.\n\n\"It's stupid,\" she said, almost under her breath. \"I'm sorry. I don't know why I'm...\" She made a sound in her throat halfway between a sigh and a grumble. \"Every time you don't back down, this thing gets more real.\"\n\n\"You mean us?\"\n\n\"Yes,\" she snapped irritably. \"The relationship I'm in with my brother.\"\n\n\"Okay,\" I said, voice lilting up at the end to phrase it as a question.\n\n\"Us ending, I'm prepared for. I can handle that. Us continuing is... scarier. You know?\"\n\n\"Yeah,\" I croaked. My voice sounded horrible.\n\n\"I... you know, I put on this ring sometimes,\" she said, pulling out her left hand and extending her fingers, \"when I'm alone and afraid. I put this on when I want to feel special.\"\n\n\"Nat, do I not make you feel special?\"\n\nShe fixed me with a blood-shot stare. \"That's not what I meant. I mean... I'm never going to have a day like that, you know? Where it's all about me, and us? And we're surrounded by people who love us and are happy for us and support us? Not me. Not you and I. Not like this.\n\n\"Every time you meet me halfway, you erase some of that doubt that I'm alone in my feelings, and that makes my fears about where we're going that much worse.\" Her voice broke at the end, and she sobbed a little. \"I don't know what to do.\"\n\nAfter a few moments of silence, she jammed her hand back into her armpit and grit her teeth. \"I sound like a fucking lunatic.\"\n\n\"This isn't just a game to me, Nat.\"\n\n\"I'm not...\" She squeezed her eyes shut and shook her head. \"I'm not doubting you, Jay! Fuck! Are you even listening to me?\"\n\n\"I'm sorry,\" I said, wincing. \"That wasn't how I meant it. I meant that... that I take this very seriously too.\"\n\nNatalie groaned. \"I'm not looking for you to just prop me up and blow smoke up my ass, Jay.\"\n\n\"I'm looking for a new job,\" I said quickly, trying to force it out so she would hear me. \"Quietly.\"\n\n\"What?\" she said. \"Why?\"\n\n\"One that's closer to Wilcox.\"\n\n\"What? Wilcox? That's like... five hours away!\"\n\n\"Six,\" I said. \"With no traffic.\"\n\n\"Wait, so this is how you tell me you're moving out?\"\n\n\"Nat,\" I said, reaching over to lay my hand on her thigh, \"I wasn't wanting to go alone.\"\n\nThis time it was her turn to stare back open-mouthed. \"Really?\"\n\n\"I've been looking for months. I keep agonizing over how far away to look.\"\n\n\"Really?\"\n\n\"I was looking at Springhouse for a while, but that's only an hour away and you know how Mom loves to make little day trips without notice.\n\n\"So then I started looking further out, at like Anapoli. That's like ten hours away, and then I started to worry that if we moved that far that one of them might move to be closer to us. It's not like Dad ever really liked it here. So then I started thinking about moving to Chicago, because that's only like six hours, but that started to make me worry that we'd run into someone we know.\"\n\n\"Really?\"\n\n\"At first I thought a big city would be good because we would blend in and that would allow us to go out a little more openly, but then I started to worry that we'd see a thousand people every time we did. It only takes one person seeing us when we're out, acting like we want to, to ruin everything. In a week, that's 70,000 people, and the odds scared me.\n\n\"So then I started thinking about smaller cities, places that aren't as big but not too big. Far enough away, but not too far away.\"\n\n\"Really?\"\n\n\"Yes,\" I said, looking sideways at her. \"Why do you keep asking me that?\"\n\n\"I didn't... I didn't know you thought about stuff like that.\"\n\nI nodded. \"I didn't know you were wearing a ring sometimes.\"\n\nNatalie slowly unfolded her arms, and gently laid her hand over mine. \"It was Grandmom's ring,\" she said softly. She merely looked at me when I pressed the brake and turned, pulling onto the side of the road.\n\n\"Natalie,\" I said, as I put the car in park and turned toward her, \"I don't regret any part of this. Of us. Do you know that?\"\n\n\"Yeah,\" she said, sobbing lightly.\n\n\"No regrets.\"\n\n\"No regrets,\" she repeated, nodding emphatically.\n\nShe turned in her seat, and took my hand in hers. We leaned in over the center console, first touching foreheads before her head came to rest on my shoulder.\n\n\"I hate hugging in cars,\" she said, words slightly muffled from her cheek being smushed.\n\nI laughed. \"Yeah. Me too.\"\n\nShe sat up and dabbed at her eyes, looking a little embarrassed. \"Can we go home now?\"\n\n\"Yeah,\" I said, turning back in my seat and shifting the car back into drive. She reached over and turned on the radio, but kept the volume down.\n\n\"God,\" she said, slouching in her chair and bringing her knees up to rest on the glove box. \"I'm really lucky I hated you for so long.\"\n\n\"What?\" I laughed. \"Why?\n\n\"You're too good at making me feel... I don't even know, but if I hadn't been trying so hard to make you the bad guy I'd have done something stupid like throw myself at you when I was 14 or 15. We'd have gotten pregnant. It would have been a mess.\"\n\nI cleared my throat and shifted in my seat. \"Yeah, that... that would have been...\"\n\n\"Can you imagine?\" she said, smiling wider. \"In that little yellow bikini?\"\n\n\"Yes,\" I said, shifting again and smirking at her.\n\n\"Keep driving,\" she said, as she unbuckled her seatbelt and leaned over into my lap.\n\n//Thank you for reading! Votes and comments are dearly appreciated!//"
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "incest",
        "siblings",
        "brother sister",
        "brother-sister",
        "oral",
        "anal",
        "public",
        "sibcest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/folie-a-deux-ch-02"
}