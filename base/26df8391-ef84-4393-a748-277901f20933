{
    "title": "Kelsey's World Ch. 32",
    "pages": [
        "\"Happy birthday, Mom.\" Richie handed Wendy a box wrapped in yellow paper with a silvery bow. \n\n\"Happy birthday, Mrs. Nanty,\" Abby said, smiling by his side.\n\n\"Did you have a good time last night?\" Richie asked. \"Where'd Dad take you?\"\n\n\"Where'd he take me? He called you from the restaurant when we had the car trouble, remember?\"\n\nWendy felt a sudden flush of heat on her face when she realized, too late, that Matt's phone call to Richie had been a hoax. The rest of the night had swept her away so thoroughly she hadn't had a chance to put all the pieces together.\n\n\"Oh, no! You guys had car trouble?\" Richie said.\n\n\"Oh,\" Wendy said, obviously flustered. \"We were at the French place out near you. I thought he said he called you, but I guess he just called Koop.\"\n\n\"Koop helped you?\"\n\n\"Yes. We...went to his shop. He and your dad, they...fixed everything.\"\n\n\"That was lucky, huh?\" Abby said. \"Koop's really nice.\"\n\n\"I didn't tell you, Mom,\" Richie said, \"Abby did some modeling with Kelsey, at Koop's shop. For the Jeep ads.\"\n\n\"Oh, really?\" Wendy said. The picture hidden in her underwear drawer popped into her mind. \"Have you done that kind of thing before, Abby?\"\n\n\"No, but I liked it. Kelsey's like an old pro. She helped me get used to it.\"\n\nI'll bet she did, Wendy said to herself. Did you get used to Koop's big cock, too? I wonder how he fit it in that little body of yours.\n\n\"So how long did it take to fix?\"\n\n\"What, Sweetheart?\"\n\n\"Koop. Did it take him long?\"\n\n\"Oh! Yes, we were there for a couple hours. They had to try lots of things.\"\n\n\"Oh, that's too bad. Were you all dressed up?\"\n\n\"Yes. It was kind of fun, actually, feeling sexy in a dirty shop like that. You know all about that, with those pictures you take of Kelsey there.\"\n\n\"Yeah, I guess. I just never pictured you there like that.\"\n\n\"I think you're sexy, Mrs. Nanty,\" Abby said. \"Way more than my mom.\"\n\n\"Thank you, dear. Coming from you that means something.\"\n\n\"I didn't mean you're not, Mom,\" Richie said. \"I just...\"\n\nWendy smiled. She'd successfully dodged the awkwardness by transferring it to Richie. \"What did you get me?\" she asked him. \"You didn't need to buy me a present.\"\n\n\"Abby helped me pick it out,\" Richie said, as Wendy tore off the wrapping paper. \"I hope it fits.\"\n\n\"Oh, how nice!\" Wendy said, holding up a lightweight v-neck cardigan sweater. \"I love the color.\"\n\n\"I've got one like it,\" Abby said. \"You can use it for a layer in the winter, and alone in the summer.\"\n\n\"Oh, your father will like that. This'll really cling to me.\"\n\n\"Too small, you mean?\" Richie asked.\n\n\"No, just right I think. He likes it when I show off my curves. Shall I try it on?\"\n\n\"Yeah, I guess,\" Richie said.\n\nWendy went to her room and took off the bulky sweater she had on. She pulled on the new one, marveling at it's softness. One look in the mirror at how her decidedly unsexy mom bra showed and off the sweater came. She unclasped the bra, swept it down her arms, paused to look at the horrid thing and tossed it in the trash. A mental note was made to eradicate everything from her underwear drawer that didn't make her feel sexy. The bright red lace bra she'd worn to dinner and Koop's shop was visible in the dirty clothes hamper, so she grabbed it and put it on. It was a skimpy, sexy bra, designed to go with the crotchless panties, and had a definite 'push up' way about it. Wendy's eyes looked surprised when she buttoned up the little cardigan over it in front of the mirror. It was definitely a hotter look than she'd normally show off to her son, but she was feeling way sexier than usual after her first threeway with Koop.\n\n\"It's perfect,\" she said as she paraded out into the living room. \"Your father will love it.\"\n\n\"Yeah he will!\" Abby said. \"Mrs. Nanty, you look hot!\"\n\nWendy giggled. \"Maybe another button?\" she said, undoing it, letting more cleavage and a little bright red lace peak out. She looked at Richie, with a bashful but curious look in her twinkling eyes, wondering what he was thinking about her newfound sexiness. Did he know, she wondered, about her long, luxuriously naked evening at Kay's house with all his girlfriends? She was pretty sure Barb wouldn't have told him about it, but Kelsey certainly might have. \"Will your father...like me...tonight?\"\n\nAs soon as the words stuttered awkwardly out of her mouth a flush of heat racked her whole body. She was certain she was blushing noticeably, and she wanted the words back. \n\n\"Yeah,\" Richie said, looking uncomfortable. \"I mean...Abby got it right. You look hot.\"\n\n\"You have no idea how nice of a fortieth birthday present that is, to hear that from you young people.\"\n\n\"You must hear it all the time, Mrs. Nanty,\" Abby said. \"Everybody thinks so.\"\n\n\"Who's everybody?\"\n\n\"The girls. They were all talking about you. And Austin said so, too. We all think it's so cool that you and Barb work so hard on yourselves at the gym.\"\n\n\"Ha! Yeah, well, I wish we didn't have to! You're a dancer, you'll be in good shape your whole life if you keep at it.\"\n\n\"Maybe,\" Abby said. \"What does Mr. Nanty do? All the girls think he's hot, too. Does he work out?\"\n\n\"Matt? No, he just won the genetic lottery. Richie probably did, too. They look so much alike.\"\n\nWendy looked at Richie again, wondering what the girls had been talking about. Father/son fantasies? It almost certainly would have been that, she thought, if they really did think Matt was \"hot.\" The fact that Wendy was thinking about it sent another flush of tingles all through her.\n\n\"Well, I just think this sweater is wonderful,\" she said, looking down at her rosy pink cleavage and noticeably bumped-out nipples. \"Thank you both, so much.\"\n\n\"Sure, Mom,\" Richie said. He was blushing a little, too, with that same confused feeling he had when he saw his mother in the little leopard-print kimono robe. \"Tell Dad we said you're welcome.\"\n\nWendy's eyes flared with delight, and her nipples hardened up even more. Maybe forty wasn't such a bad age after all.\n\n\u2014\n\n\"Did your mom like her present?\" Kelsey asked. She was sitting at the kitchen table with Richie, a rare moment of quiet in the busy house, with just the two of them at home.\n\n\"Yeah. And you were right, it fit her good.\"\n\n\"Nice and tight? Does it show off her nice titties?\"\n\nRichie smiled shyly and blushed. \"She said my dad'll like it.\"\n\n\"Yeah he will. Richie, you gotta get over this awkward shit, Honey. Your mom's sexy, just like Barb. All her parts work the same, and her brain does, too.\" Kelsey searched Richie's embarrassed face for signs of what he was really thinking. \"The girls and me, we never told you, but we were at a party with your mom. My mom and Barb set it up.\"\n\n\"A party? What do you mean?\" Richie had a feeling something was going on, but it was all just a blurry inkling up until then.\n\n\"You know, like, a girls thing. I don't wanna call it an initiation, cause that sounds boring. Your mom wanted to try some stuff.\"\n\nRichie looked confused. \"My mom? And your mom?\"\n\n\"Yeah. It was super fun. Before you get all worried, you dad said it was cool. I think he kinda wanted her to do it.\"\n\n\"Wait...who was there?\"\n\n\"Me, Brie and Char. Your mom, my mom and Barb. It was just a little wine and fun kind of thing.\"\n\nRichie's face was blank, but Kelsey could see a glimmer of excitement in his eyes. \"And was it?\" he asked.\n\n\"Fun, you mean? Shit yeah, Richie. Your mom's super fun. You know how it is when someone new comes in the group.\"\n\n\"So...it wasn't like a one-time thing?\"\n\n\"No. I'm pretty sure there'll be more. I don't know if it'll work out or not, but I'm hopin' your dad joins in, too. But you know me, I'm selfish. I'm hopin' for a father/son threeway.\"\n\n\"Kelsey! With my dad? And me?\"\n\n\"If that shocks you, you don't know me very well.\"\n\n\"No, that's not the part that shocks me. Jesus...my mom and dad really wanna be...swingers? I never thought about them that way.\"\n\n\"Yeah, I can see how that'd take some gettin' used to. Maybe I shouldn't have said anything, but the ball's sorta rollin' a little, so it's probably better that you know.\"\n\n\"No. Yeah, that's okay. I'm glad I know. I sorta had a feeling maybe something was going on. I don't want people to be, like, lying to me, you know?\"\n\n\"Yup,\" Kelsey said. \"All this stuff's best when it's just out there. It took Austin a little while to get used to stuff with Barb, and now they're super cool, so...\"\n\nRichie's mind flashed to the last time he saw the two of them together, with Austin's big cock deep in Barb's pussy. Is that what Kelsey considers \"super cool\"? Fucking your own mother?\n\n\"I need another beer,\" Richie said, standing slowly on legs he could barely feel.\n\n\"You okay, Honey? Too much information?\"\n\n\"No, I'm all right.\"\n\n\"It's all just nice mixed-up fun,\" Kelsey said. \"You're fuckin' your mom's best friend, she's fuckin' your mom. You met me at Koop's and Koop fucks your mom and Barb and me. You fuck my mom...\"\n\n\"Wait, what? Koop and my mom?\"\n\n\"Oh, shit,\" Kelsey said. \"Fuck. Barb just told me. I wasn't supposed to say anything.\"\n\n\"And? Kelsey, are my mom and dad okay? This is getting fucked up.\"\n\n\"No, Honey! They're fine! Your dad was in on it. It was...oh, shit. I'm not supposed to tell you.\"\n\n\"Well you fucked that all up, Kel. You gotta tell me now.\"\n\n\"I guess. Can you keep it a secret, though? At least until you hear it somewhere else?\"\n\n\"Yeah, like there's secrets around here,\" Richie said, shaking his head. \"Just tell me. I won't tell anyone it was you.\"\n\n\"It's super romantic. Barb helped your dad set it up. Your mom, she's had a crush on Koop. You know, just a normal neighbor thing, 'cause he's sexy and single and stuff. So Barb and Koop and your dad set up a surprise threeway, at Koop's shop on your mom's birthday. It was her first time with two guys. How's that for an awesome birthday present?\"\n\nRichie was stunned. It really was too much information. His brain couldn't keep up with everything Kelsey had told him. He wanted to call his mother and ask her if everything was all right, but he'd just seen her the day before with Abby and everything seemed fine. More than fine, really. She had a nice glow about her. Jesus, Richie thought to himself, what is it about this Koop guy? He's fucked Barb, Abby, Erin from school. Kelsey and all the girls. Kay and all the older women. And now my mom. Koop fucked my mom!\n\nRichie realized he'd fucked all those women, too, and all those women had fucked almost all the guys. Is my mother going down that road, he wondered? Is everybody going to want to fuck her? Is Dad going to fuck Barb now? Maybe he already has. Jesus, what about Abby? She always smiles around him. Yesterday she said all the girls think he's hot!\n\n\"You don't look so good, Honey,\" Kelsey said. \"I shouldn't have told you.\"\n\n\"No. It's okay. I'm okay.\"\n\n\"I'm serious about Austin. He was freaked just like you. Just give it time, and sort of ease into it. Your parents are cool. They'll be good with it. Your mom had a long talk with my mom about it all. She's going about it the right way. It's just more delicate because you're involved. But hey, it worked with me and my folks, and it worked with Austin and Barb. It's all good, right?\"\n\n\"Yeah,\" Richie said. He looked a bit dazed and took a big swig of beer. \"It's all good.\"\n\n\u2014\n\n\"Wow!\" Matt said when he got home, smiling at the way Wendy looked in her new sweater.\n\n\"It's a birthday present. You like it?\"\n\n\"Let me guess...from Barb, right? Why wouldn't I like you looking like a sexpot?\"\n\n\"It's from your son.\"\n\n\"Richie?\" Matt giggled. \"Whoa! I guess he's got his father's taste.\"\n\nWendy didn't want to be excited by that thought, but she was, and the thin bra and thin sweater let her nipples show it. She already new Matt had the hots for Barb, and Richie was fucking her. And now the sexy little sweater for a birthday present. It was all confusing, but exciting.\n\n\"I almost slipped up about Koop,\" Wendy said. \"I was thinking you really made that phone call to Richie that night.\"\n\n\"Oh no! What did you say?\"\n\n\"I caught it before it got too awkward, but I can't help thinking it's gonna be. Everything's all so tangled up.\"\n\n\"Do you regret it?\"\n\n\"No! It's not that at all! I just think it's going to be difficult to keep Richie out of it. He's better friends with Koop than we are.\"\n\n\"Well, maybe we shouldn't worry about that,\" Matt said. \"He's an adult. He's tangled up with your best friend. I get the feeling all those young friends of his are used to just about anything. What we did wouldn't be shocking to them. They don't think the way our older friends do.\"\n\n\"Yeah, I know that. It's just a bit of a leap of faith. Are you willing to take it? It'll be a different father/son relationship than you have now. He's always thought of you as my protector.\"\n\n\"Yeah, well, he's a man now. He's figuring things out. Speaking of Koop, have you talked to him since that night?\"\n\n\"No. I saw him in his driveway,\" Wendy said. \"I just waved.\"\n\n\"You can talk to him you know. I trust you guys.\"\n\n\"I know. It just seemed...awkward. I don't want it to stay like that, though.\"\n\n\"Hey. I'm plenty flirty with Barb. Life's too short to be all awkward.\"\n\nWendy smiled. She wondered if Matt would feel the same way after she turned Barb lose on him, which was something she felt was almost inevitable.\n\n\u2014\n\nThe next day Matt worked late, and Koop was home early. Wendy heard his noisy old truck, and watched him through her window as he shoveled fresh snow off his driveway. \"Hi Koop. Gee, that sure was fun when I let you fuck me the other night, wasn't it?\" The words came softly out of Wendy's mouth in her empty living room, without much confidence, and then she giggled nervously. \"Hi Koop. It's me, the neighborhood slut. Do you still like me?\"\n\nWendy watched as he walked back and forth, pushing the fluffy snow with his shovel. He was nearly at the end of the driveway. It was now or never.\n\n\"Hi, Koop,\" she hollered from her open door. \"Wanna cup of coffee?\"\n\nKoop waved, wedged his shovel in the snowbank and walked across the street. Wendy nearly passed out from the sudden rush of blood from her thumping heart.\n\n\"Come on in,\" she said. \"I can't believe how cold it is today.\"\n\n\"We should be used to it after all these years,\" Koop said, thudding his work boots against the front steps to knock the snow off of them.\n\n\"Is that a sneaky way of saying we're old?\" Wendy smiled.\n\n\"You'll never be old,\" Koop said, his eyes crinkling as he smiled.\n\n\"You say the nicest things. Coffee?\"\n\n\"Sure. Matt home?\"\n\n\"Nope. I told him I felt awkward about talking to you, and he told me not to worry about it. He trusts us. So...here we go.\"\n\n\"Good. Yeah, I needed a push, too. I wasn't really sure...what to say to you.\"\n\n\"I kind of wanna try and act like Kelsey and Kay would, and just treat it like it's absolutely normal,\" Wendy said, standing next to the coffee maker as it spit out a hot mug full. \n\n\"Aren't they somethin' else?\" Koop said, smiling and shaking his head. \"I'm pretty sure the day Bobby bought Kelsey's Jeep from me was the best day of my life.\"\n\nWendy handed Koop his coffee and put her own mug under the machine. \"So what would Kay say right now? Maybe...thanks Koop Honey, for makin' my birthday so special. Your cock is the best present I ever got.\"\n\nKoop smiled at Wendy's impersonation. \"That's pretty good,\" he said shyly, hiding his blushing face behind a slow sip of coffee.\n\nWendy loved the little rush she got from speaking so freely, so she continued. \"The best orgasm I ever had in my life was when you were in me and Matt was in my mouth. I mean it. You guys did things to me that I didn't think were possible.\"\n\n\"Jesus, Wendy. If we're gonna earn Matt's trust maybe we shouldn't be...\"\n\n\"Oh. Sorry.\" Wendy was surprised at how red Koop's face was, and then she noticed the big lump in his pants. \"Whoa! Do I...do that to you?\"\n\n\"Are you kidding? You were the neighborhood hottie even before you knew you were.\"\n\n\"Before I knew I was? When was that?\"\n\n\"When you started hangin' around with Barb I guess.\"\n\n\"Oh. Yeah, I...this is gonna sound pathetic, but, I was trying to learn how to be sexy like her. To sort of spice things up with Matt. Long marriages can flatten out a bit over time.\"\n\n\"Well I guess you figured things out, huh?\" Koop smirked.\n\nWendy smiled, and then she laughed. \"I guess so.\"\n\n\"It's none of my business, but...are you and Matt thinking of getting involved with Kay and Bobby and that gang?\"\n\nWendy's heart raced again. \"Do you think we should? Give me your perspective on it. I keep hearing how happy the couples are, but, it worries me. I'd hate to fuck up my perfectly good marriage. Doing what we did with you is already testing things.\"\n\n\"And? How does it feel so far?\"\n\n\"Marriage wise? Perfectly fine, much to my amazement.\"\n\n\"I'll be honest with you,\" Koop said. \"I've seen nothing but happiness amongst all those people. It's almost weird, like Kelsey and Kay have everyone under a spell or something. Happy thinks Kelsey's a sex angel.\"\n\n\"Ha!\" Wendy laughed. \"A sex angel! I love it! I know what you mean, though. I think I'm about to let my husband fuck my best friend, and if you asked me why, I don't know if I could come up with an answer. It feels like something else is in control lately. Suddenly all this wackiness seems normal.\"\n\n\"Yeah, I got there a few months ago,\" Koop said. \"I'll be damned if I know why, but it's a pretty sweet feeling. I'm just rollin' with it. A guy in his fifties, he just doesn't fall into this kind of thing that often.\"\n\n\"Yeah, a girl in her forties, too. That's kind of what's been pushing me. Is that selfish?\"\n\n\"Not if you bring Matt along for the ride.\" Koop finished his coffee and put his mug on the counter. \"Thanks Wendy. That hit the spot. Now I've got a night full of paperwork to do.\"\n\n\"Thanks, Koop,\" Wendy said, hugging him tight. \"Best birthday ever. Maybe it won't be the last we see of each other.\" Wendy felt Koop hardening up against her again. \"Ooo! You're easy to rile up, aren't you!\"\n\nKoop blushed again and smiled shyly as he pulled on his coat.\n\n\"Be careful out there,\" Wendy smiled. \"You'll freeze your pecker off.\"\n\nAfter Koop left, Wendy called Barb. Barb could tell something was up.\n\n\"So, what's going on? You sound different,\" Barb said.\n\n\"Is that what being horny sounds like over the phone? Different?\"\n\n\"What got you heated up?\"\n\n\"I think I'm ready for more. Would you...be interested in...maybe coming over? You and me and...Matt?\"\n\n\"I think you know the answer to that. But are you sure you're ready? What brought all this on?\"\n\n\"Koop was just here. Just for a cup of coffee, but we talked. Broke the ice a little about my birthday. It's starting to feel almost normal I guess, but it feels way too one sided.\"\n\n\"I'm guessing Matt had all kinds of fun. It's not all that one sided.\"\n\n\"What about me with you, and me with all the girls at Kay's. Yeah, it's pretty one sided.\"\n\n\"So, what did you have in mind?\" Barb asked. \n\n\"I can't believe I'm actually saying this, but...a threeway. With you.\"\n\n\"Okay, I gotta say, that excites me, and makes me smile, but this is big stuff, Wendy. Once it's done it's done.\"\n\n\"I know. I'm ready.\"\n\n\"You need to talk to Matt about it. You shouldn't just spring it on him.\"\n\n\"Really? I thought it might be exciting for you to...just be here.\"\n\n\"Another time, yeah, that'd be fun. But the first time, no, I think you guys need to discuss it. You've got a happy marriage. You need to be super open about everything.\"\n\n\"He surprised me with Koop. You helped him, remember?\"\n\n\"I did. I was worried about it for a week, but...you're right. It worked out.\"\n\n\"It was way hotter than if I'd known. I wanna give that to Matt.\"",
        "\"Okay girlfriend. I'm in. I mean, why wouldn't I be? I'm all tingly already.\"\n\n\"Oh my God, so am I. I swear to God, my horny hormones feel totally different than they used to. When I was younger I never used to feel this way.\"\n\n\"Am I allowed to say your husband makes me horny, too?\"\n\n\"He is kinda sexy, isn't he? Oh my God, Barb, this is gonna rock his world.\"\n\n\"When are we doin' this rockin'?\"\n\n\"Can you come over right now?\"\n\n\"Right now? Wow, Wendy! You're sure? No more thinking?\"\n\n\"No more thinking. I can already taste you. I can't wait to see Matt's face when he tastes you.\"\n\n\"Jesus, Wendy. I'm on my way.\"\n\n\u2014\n\nWendy pushed Matt down on his back on the bed, with his knees toward the door, and swung her leg over him for some sixty-nine. \"Let's do it like this tonight, baby,\" she said, sliding her wet pussy across his mouth. \"I like it like this.\"\n\nShe gathered Matt's hard cock in her hand, hoping he wouldn't notice how sweaty it was. She was nervous from the excitement of what was to come. \"Oh, fffuuck baby!\" she yelped as his tongue got reacquainted with her juiciness. \"Do you do that to all the girls?\"\n\nThat was the signal Barb had been waiting for, quietly and not so patiently, in Richie's old room just down the hall. She crept toward Wendy in bare feet, thankful the house didn't have squeaky floorboards.\n\nWendy had Matt's cock in her mouth when she saw Barb approaching. It was an odd feeling letting such an intimate moment with her husband be seen. Similar to being naked with all the girls at Kay's house, but different. With Matt involved it was even more thrilling.\n\n\"Do you ever think about other women sucking on your cock, babe?\" Wendy asked between licks. \"You let Koop lick my pussy. Maybe I should let Barb suck your cock.\"\n\nMatt groaned into Wendy's steamy pussy.\n\n\"Oh, you like that idea?\" Wendy said, smiling at Barb, who was waiting patiently on her knees, just inches from Matt's legs. \"Maybe if you dream hard enough it'll happen,\" Wendy said. She held the throbbing cock at its base and gave Barb a nod. Barb leaned in, being careful to only touch Matt with her mouth.\n\n\"What do you think, babe?\" Wendy said. \"Are you dreaming? Are you dreaming really hard?\"\n\nMatt was so swept up in the moment it didn't even occur to him that Wendy shouldn't have been able to talk with her mouth full the way it was. But she was talking, he finally realized. And that mouth feels different! Very different! He tried to look around Wendy's leg to see what was going on, but her thighs had his head pinned. She swiveled her hips and ground her gloriously wet heat on him some more.\n\nBarb let his cock slip from her hungry mouth. \"How's your dream doing, Matt?\" she asked. \"It it real yet?\"\n\nShe plunged her mouth back down on him, and Wendy joined in, tonguing his balls before sucking them in.\n\n\"Ohh ffuckk!\" Matt groaned. The dream was real, and his head was spinning.\n\n\"You don't get to fuck her until you're honest with me,\" Wendy said. \"Have you ever dreamt about it? Have you ever dreamt of fucking Barb?\"\n\n\"Yes,\" Matt whimpered.\n\n\"Was she riding you? With her big tits in your hands?\"\n\n\"Yes.\"\n\n\"Then that's the dream you get.\"\n\nWendy rolled off, giving Matt his first look at Barb. Her smiling mouth was still on him, full of his slippery cock.\n\n\"If you make her happy maybe you'll get more than one dream,\" Wendy said. \"Ride him, Honey,\" she said to Barb. \"Ride my loving man.\"\n\nMatt could barely speak. A soft \"Fffuucck!\" floated out on his breath when Barb stood up in all her naked glory. She straddled him on the bed on her knees, used her hand to line up his cock and took it into her pussy. She was horny and wet, so it went in like it was meant to be there, inch by glorious inch as her hips started moving.\n\n\"Ffuuuck!\" she sighed, her mouth open, smiling with delight at the sweet feeling. \"Oh yeah!\" she said when Matt's hands lay claim to her tits. She'd had the same dream he'd had.\n\n\"Fuck her, baby,\" Wendy said. \n\nShe leaned in and kissed Barb, smiling into her mouth when she felt Matt's thrusts start. Barb moaned as the beautiful assault on her body began. Within moments some deep, dirty fucking was happening, and Barb's breathy giggles gave away the goodness.\n\n\"Oh...God!\" Matt gasped. \"Oh...God!\"\n\nIt wasn't long before he was a goner, his cock thrusting fast as it spewed its hot cream deep inside Barb's velvety heat. Wendy gasped in the middle of it.\n\n\"Shit! I shoulda known that wouldn't take long,\" she smirked. \"You're gonna have to do way better than that, babe. I promised Barb you'd make her cum three or four times. Think you can handle both of us?\"\n\nMatt was lost in the dream for a few moments, and then a smile lit up his face. \"Did I forget my own birthday or something?\"\n\n\"I was feeling guilty,\" Wendy said. \"All the fun I had with Koop and with the girls. You deserve it, too. It's all right, don't you think? Wanna take a run at being swingers?\"\n\nMatt's smile grew brighter. \"Do you want to?\"\n\n\"I think...maybe. We can talk about it more later. Right now we've got a super sexy toy in our bed, and I think we should play with her.\"\n\n\"I think you should play with her,\" Matt said. \"I'm gonna need a few minutes after what just happened.\"\n\n\"Aww, did Barb take all your sweet cum from me?\" Wendy teased. \"Maybe I'll have to punish her.\"\n\nWendy pushed Barb off of Matt. She fell to the bed giggling.\n\n\"Oh! She did take all your cum! Look at it, all leaking out of her. I better lick it up so it doesn't mess up our bed.\"\n\nWendy dove in between Barb's long legs, lapping up the cummy ooze from the pretty pussy. It was a first for Wendy, and she was surprised how much she liked the slippery mess.\n\nMatt watched with surprised eyes as his loving wife moaned into Barb's pussy. Wendy's tongue licked all around in the glistening goo, cleaning it all up, making Barb moan, too.\n\n\"Jesus!\" Matt said softly.\n\n\"Wanna help, babe?\" Wendy asked. \"She's really messy.\"\n\nBarb put a hand on each head as her friend's mouths went at her electrified crotch. Every kiss, every lick, every nibble made her fly. She threw her head back and groaned loud enough for the neighbors to hear.\n\nSoon she was on her hands and knees and the ass Matt loved to look at was his. He kissed it and ran his hands over is warm smoothness. His tongue played in the crack while Wendy settled in with widespread legs in front of Barb. Barb licked her pussy and Matt licked Barb's, his head nestled between her ass cheeks, smelling her scent and reveling in the wetness of her juiciest flesh. He needed to fuck her that way, and he needed it bad.\n\nUp on his knees, his cock felt harder than ever before as it sunk into Barb's pink softness. Her pussy was so different looking than Wendy's, brighter pink on the inside that was swallowing him. He moaned at the way it looked, and the way it felt.\n\n\"Does she feel good, babe?\" Wendy said, her eyes half lidded and sexy. \"Her mouth feels amazing.\"\n\n\"Ohhh Goddd!\" Matt groaned.\n\nWendy was writhing on Barb's tongue, with her tits in her own hands, smiling with the devil in her eyes at the look on Matt's face as he began a sweet, sweet fuck of Barb's sweet, sweet pussy.\n\nThe sensations were intense and Matt thought for sure he was going to lose it, but he fought through and then it was clear sailing, a long, luxurious threeway fuck that was the stuff of his dreams.\n\nWendy came hard watching him, his body glistening with perspiration, fucking smoothly like a porn star, on, and on, and on. She pulled away and watched, her pussy so sensitive she needed a break from Barb's licking tongue. \n\nShe watched as Barb rose up on her hands and knees, tits hanging beautifully and swinging with the thrusts. Barb's skin was starting to glisten, too, and she had a look of sweet, dreamy ecstasy on her pretty face.\n\nWendy watched as Matt pulled Barb up on her knees, wrapping his arms around her big sweaty breasts as he thrusted smoothly up into her from behind, on, and on, and on.\n\nWendy's pussy was still tingly, but she needed to be involved, so she fingered herself gently as she watched her two favorite lovers fuck themselves right into a dream.\n\nMatt's shiny body was all pumped-up muscles, and Barb's was all slippery curves. The speed picked up and Barb went back down on all fours again. Something was building. Wendy could see it in their eyes.\n\nSoon there was a new energy, a louder slap slap slapping of sweaty skin. New and deeper moans. Wilder, darker eyes. Barb's back arched low, taking Matt's deep thrusts even deeper. Feeling the last few millimeters way deep inside her did it. That was the trigger. They both felt it, something in there, deep in Barb's core that released all the pent-up fire. It blossomed like a mushroom cloud, as pure as the purest energy.\n\nWendy watched as Barb's eyes rolled and Matt's mouth hung open, letting his guttural cry out into the world. Each thrust dropped Barb's body lower, and took her mind higher. It was a long, glorious fuck for the ages, and Wendy made herself cum again as she watched the mind-melting finish.\n\n\u2014\n\n\"Hi Koop!\" Wendy yelled, waving from across the street.\n\nKoop waved, too, as he spread some salt on his icy sidewalk. Wendy pulled her little jacket tight around her and trotted over to him like an energetic teenager.\n\n\"We did it,\" she said happily. \"Barb was here. Last night.\"\n\n\"She was?\"\n\n\"Yeah,\" Wendy said, smiling coyly, like someone with a really good secret. \"Remember what we talked about?\"\n\n\"Oh!\" Koop said. \"Really? You guys...\"\n\n\"Yup,\" Wendy said. Her happy smile was contagious. \"It was so awesome. I mean...wow!\"\n\n\"Yeah, she's pretty great,\" Koop said. \"That's a big step, Wendy. Are you guys all cool this morning?\"\n\n\"Oh, yeah! It's so exciting I can't even...I probably look ridiculous out here gushing about it.\"\n\n\"No, it's nice. I love seeing you smile like this.\"\n\nAn awkward silence took over the icy stillness. Koop and Wendy both had a powerful urge to go in his house and fuck like bunnies, but they knew that wasn't part of the deal.\n\n\"Have you...heard about any get-togethers coming up?\" Wendy asked.\n\n\"No. I'm not really at the center of the circle. Barb might know something.\"\n\n\"Oh. Yeah,\" Wendy said, her smile looking a little shyer. \"Well, I better go. I gotta get some groceries and some things.\"\n\n\"Yup. I'm off to work.\"\n\nWendy stepped forward on her tiptoes and kissed Koop on the cheek. \"Bye,\" she said, turning and skittering across the slushy street. Koop watched her go, her cute ass looking fine in her tight jeans.\n\nWendy dodged the icy spots deftly, but she didn't know how. Her mind was elsewhere \u2014 on Koop's cock, Barb's pussy, and the unknown but easy to dream about future."
    ],
    "authorname": "riverboy",
    "tags": [
        "swingers",
        "wife",
        "sharing husband",
        "threeway",
        "best friend",
        "creampie",
        "eating creampie",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-32"
}