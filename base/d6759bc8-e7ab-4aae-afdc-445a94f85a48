{
    "title": "Pool Boy Ch. 10",
    "pages": [
        "Alexis' graduation was at noon on her high school athletic field. She had showed me her graduation robe and hat. They were both golden yellow. She had a tassel with her graduation year hanging from the button at the center of her hat. I had worn the same get-up the year before except mine was bright red. Alexis would also be wearing a deep green satin sash around her neck to signify 'National Honor Society'. My girl's a 'brainiac'. \n\nI had finished my work that morning as fast as I could without skimping on the effort. I had plenty of time but I was antsy as hell as I kept checking my watch. Time seemed to have slowed to a crawl. I had meant to discuss this party with Alexis and Emma but they always seemed to have other things on their minds. Not that I minded. I planned to pull Alexis aside the first chance I got. \n\nI pulled into Emma's driveway and drove up to park the furthest away from the house beyond the last of the five garage doors. I went in the back of the van and pulled off my nylon shorts and underwear and pulled on a clean pair of cargo shorts. I yanked off my tee-shirt and pulled on a knit polo shirt. I pulled back the sliding door and stepped to the cobblestoned driveway. I looked in the window of each garage door to see if Emma's husband, Jim's car was here to surprise his step-daughter. The garage was empty. Emma and Alexis weren't home yet. I walked back around the garage and pushed open the gate in the privacy fence. The pool area was all decorated in golden balloons that read 'Congrats Grads'. Tiki torches lined the perimeter of the deck. The water in the pool was pristine. I smiled to myself. \n\nI walked around the pool and sat down in a lounge chair in the sun. It was as hot as ever and I pulled my shirt over my head and laid back and swung my feet up. I closed my eyes as thoughts of the possibilities of this party along with a short prayer that everything would go well for Alexis danced around in my head. I had a bet with myself that Alexis had worn her robe with nothing on underneath. She hadn't said a word to make me think that, but I knew her well by now. The first thing I wanted to do when she got home was find out. I checked my watch for the umpteenth time and figured they wouldn't be much longer. \n\nI was startled awake when the sun on my face was blocked. I opened my eyes and shielded my face with my hand. The person standing in front of me was backlit by the sun and I couldn't see who it was. It wasn't Emma or Alexis. Whoever it was, I could make out the four corner hat canted on her head. The body was shrouded with a robe. I assumed it was a 'her' because only girls were graduating. I tried to adjust my eyes to get some contrast. I gave up and swung my feet to the ground and sat up, still shielding my eyes. \n\nA female voice softly said, \"You must be Alexis' boyfriend.\" \n\nI nodded and said, \"That would be me, and you are?\" \n\n\"My name is Rachel. I'm a friend of Alexis. She talks about you non-stop and frankly, we are all getting tired of it. Now that I see you I understand the infatuation.\" She moved slightly out of the sun so she could check me out in the sunlight. I could see her clearly for the first time. She stood about 5'5\" tall. With the folds of the golden robe draped over her there was no telling what kind of body she had. Even in her robe, I could tell she had an ample bust-line which was pushing the folds of the robe out in front of her. As she turned further I could see that she had a very pretty face with sculpted cheek bones accentuated by dark, curly brown hair to her shoulders and ice-blue eyes like Alexis'. The combination of dark hair and the ice-blue eyes was captivating. She was beautiful and my cock jumped in my cargo shorts. \n\nI was a little embarrassed at my reaction to Rachel and even with my deep bronzed tan I knew my face had reddened. I could feel the heat in my cheeks. She giggled and offered me a hand to help me up from my seat. When I stood, I towered a foot above her. She looked up at me and said, \"Alexis didn't say anything about you being so tall.\" Rachel scanned me all the way down and continued, \"She did say you were ripped. We all decided she was exaggerating. I guess we were wrong.\" She licked her lips and sucked her lower lip onto her teeth and bit down gently. \n\nI extended my hand to shake hers and she hesitated before placing her hand in mine and allowed me to shake it gently. I smiled at her and said, \"Rachel, it's a pleasure to meet you.\" \n\nShe mumbled something like, \"The pleasure is all mine.\" She scanned me up and down again before releasing my hand. \n\nI just stood there captivated by her eyes and finally collected myself and said, \"Is Alexis and her mother back yet?\" \n\nRachel just nodded and took my hand again and led me back to the house. I realized that I was shirtless and I thought I should go back and get it, but I followed her like a puppy dog on a leash. \n\nThe activity in the kitchen was a blur. There were what seemed to be a dozen bodies in robes floating across the floor carrying this and that. Rachel pulled me into the middle of the kitchen and said, \"Ladies, this is Hunter.\" All activity and movement stopped as each turned in my direction. I felt awkward standing there with no shirt on and my face reddened with embarrassment again. There was total silence for several seconds as they all just stared at me. I heard a voice from the back say, \"Holy Shit.\" \n\nThe spell was broken and they all flowed across the floor to greet me. One by one they shook my hand and sized me up and down. Thankfully, my cock behaved and didn't embarrass me further. \n\nJust then Emma and Alexis walked in and I watched them turn to each other and smile. Amid the din of yammering voices I could hear Emma say, \"I guess they know what is on the menu now.\" Alexis burst out laughing and looked over at me and threw me an air-kiss. I just smiled back as I was trying to extricate myself from the throng of good looking babes all around me. I finally made it across the room and kissed Alexis on the lips. She kissed me back and the tittering voices behind me started up again. \n\nEmma interrupted the gawking girl's and said, \"Alright everyone. Let's get out of those robes and get this party started.\" \n\nAlexis grabbed my arm and turned me around to face the other girls in the kitchen. \"You won't want to miss this.\" One by one the girls unzipped their robes and either let them fall to the floor or they pulled them off like a shirt. Every one of them was dressed in a bikini beneath their robes. All but one had bodies that belonged in a bikini and that one had all the right curves but her hips and ass were a little chubby to go along with a huge set of boobs. She was cute in a cherubic way. \n\nThe girl I had talked to at the pool had a knockout body. I remembered that her name was Rachel. She had very large tits on a slender body that tapered from her broad shoulders to a narrow waist and then back out to perfectly proportioned hips and ass. Amidst the chaos in the kitchen, Rachel never took her eyes off me. \n\nAll of the girls except Rachel were buzzing around gathering platters and buckets of ice and cases of cold beer to carry out to the pool. I turned to watch Alexis remove her robe. My eyes went wide when I saw that she had on the micro-bikini I had bought for her when we went to the beach a couple days ago. It consisted of three tiny triangles of material which covered only her nipples and her pussy. Even the strings that held everything in place, sort of, were miniscule filaments. From the back, she looked naked. My cock pushed hard on the front of my shorts. \n\nAlexis slithered up into my arms and pushed her tits into me. She stretched up and nibbled on my earlobe and whispered, \"I had better get you first before Rachel gets to you. She has lust in her eyes.\" She kissed me on the lips and smiled at me. \"I have work to attend to if this party is going to get off the ground. You try to be a good boy, OK?\" I smiled and nodded. Alexis reached down and grabbed my hard cock through my shorts and winked at me before she grabbed a case of beer and headed for the pool. \n\nI was about to grab some things off the counter to help when Emma came over to my side and whispered, \"You look like you're ready for action.\" I smiled down at her. \"When your guys arrive I want you to blind-fold them and bring them into the study off the foyer. I have several chairs lined up. Sit them down and tell them not to move.\" She handed me several bright colored scarves. \"I'm assuming that they have little experience and I want to make sure that if things get hot that they don't blow their wad at first touch. I'm not concerned with you or Noah, OK?\" \n\nI took the scarves and smiled as I nodded. I knew what her plan was. Olivia had done the same thing with Noah when I brought him there the first time. I said to Emma, \"I have to talk to Alexis about her friends. Do you know if they are all on the pill or not and are they virgins?\" \n\n\"Both are very good questions. I don't know. You'd better go pull her aside and ask her right now. Some of these girls look like they are going to gang up and rape you right now.\" I laughed and handed the scarves back to her. \n\nI found Alexis giving directions at the pool. I pulled her off to the other side of the pool and asked her my questions. She said, \"They all went to the school infirmary about a year ago and got birth control pills. I have seen them take them so it isn't just talk. As for the second question, I would guess that none of them are virgins in the sense that they still have their hymen intact. I bet that between them they have fifty dildos of every size and color. I don't think any of them have actually had sex with a man though. They have asked me a hundred times if guys will be here.\" \n\nI said, \"Your mother has a plan to unload their pent up sexual tensions so they don't cum in their pants.\" \n\nAlexis smiled and said, \"That's my mom. She's always planning ahead.\" \n\nI said, \"There are some real good looking babes out here, starting with you. Incidentally, the guys don't know I'm your boyfriend. You're just another babe to them.\" \n\nI retrieved the scarves from the counter top where Emma had left them. The front door bell rang and I went to the door. Standing on the front stoop was Chuck, Jackson, Chase and Dean. They had apparently all arrived at the same time or they had come together. \n\nChuck was a short guy at 5'5\". He is a little chubby and soft. We nicknamed him Chub somewhere along the line. He is a Junior Engineering student. He has a cherubic face and wears glasses. He studies constantly and has never dated anyone since I've known him. \n\nJackson is also a Junior Engineering student. He is only twenty and has a genius IQ which has been a detriment to his experience with girls. He is arrogant with guys. He told me he paid a hooker to give him a blowjob once. He said he was terrified through the whole thing and he worried about STD's for a month after. He is 5'8\" tall and has a typical geek look with a skinny frame and unruly dark brown hair with black rimmed glasses. \n\nChase is a rich kid who should get along fine with these little rich girls. He is tall at 6'2\". He is not athletic but he's in pretty good shape. He is kind of a pretty boy with long blonde hair over his ears. He is also twenty and is a Sophomore Engineering student. In spite of his good looks, he told me he had never gone beyond second base with a girl before. I suspected that he would hit a home-run tonight. \n\nDean is one of my best friends at college. He is a huge, massive man. He plays football with me and is a defensive lineman. He is also a sophomore and has been in many of my classes. He stands 6'3\" and weighs around 300 pounds. Dean is responsible for giving me my nickname that I can't seem to shake. Everyone on the football team calls me \"Meat\". \n\nI handed each of them a scarf and told them to tie it around their heads as a blind-fold. Jackson got a little snippety but I calmed him down and he did as I asked. Per Emma's instructions, I led them into the study and found five chairs lined up. I maneuvered each of them to the chairs and sat them down. I told them to wait and not to move no matter what happened. Dean and Chase were into it and joked back and forth between them. Jackson was whining and Chuck didn't make a sound. \n\nEmma came in and quietly shut the door behind her. She motioned for me to sit in an overstuffed chair across the room. My cock was already pushing out at the constricting material of my cargo shorts. She didn't say a word as she knelt between the splayed knees of Dean. She was obviously intrigued by his size. When he felt her presence he spread his knees further. Emma scooched up close and pulled down his zipper. His cock was already hard and she struggled to pull it out the front of his shorts. \n\nAs soon as Dean's cock came free she sank her mouth down the length of his average sized cock. She flicked his balls with her tongue with the tip of his cock in her throat. He groaned loudly as she pulled back up and began giving him a blowjob. In fact, it was his first blowjob. She made three full length cycles before he groaned again and blew his load in Emma's mouth. She accepted it all and swallowed it. She sank back down the length of him again and cleaned his cock with her tongue. \n\nI could see the others trying to see under their blind-folds. After watching so much pornography, they knew from the sounds what was going on. Dean's cock lay limp in his lap. The others were straining their shorts. \n\nEmma moved to the next one, Chuck. When Emma pulled down his zipper he started whimpering. Not because he was afraid. It was because he was afraid he would cum before she even touched it. He at least accomplished that. When Emma touched his cock to pull it from his underwear he collapsed his body forward and said, \"Oh Fuck. I'm gonna cum.\" Emma had expected this from at least one of them and she pushed his cock into her mouth in barely enough time to catch his first shot. He groaned and whimpered until he finished. Emma felt bad for him so she swallowed his load and then gave him a blowjob. His cock stayed hard and after a couple minutes he exploded into her mouth again with another loud groan. When he was done, she pulled off and swallowed. She lathed his cock with her tongue until he was clean. She laid Chuck's limp cock down in his lap and moved on. \n\nJackson was next. To my surprise, he actually did pretty well with his first free blowjob. Maybe it was his experience with the hooker. Emma struggled getting his average sized cock out of his 'tighty-whiteys'. She blew him for almost three minutes before he groaned out, \"Oh my God, that's incredible,\" just as he fired rope after rope launching his hips up with each one. Emma did the same thing with Jackson's cock and moved on to last-but-not-least, Chase. \n\nI could tell that Emma liked the looks of Chase. He was tall and pretty. Women always like pretty men. I had never seen Chase naked let alone with a hard-on. Emma was delighted when she pulled out a monster cock, almost eight inches long of average thickness. She smiled over at me as she pushed her face down on his cock. Inch after inch pushed past her lips and down into her throat. She pulled back and flicked her tongue on his glans. He was moaning non-stop. She started to give him one of her amazing blowjobs but she didn't get very far before he blew his wad in her mouth. She swallowed and cleaned his monster cock from end to end and then stood and left the room. \n\nI sat there quietly for a couple minutes and then said, \"You can remove your blind-folds now.\" Their eyes squinted from the brightness of the room and looked down at their exposed cocks. They each quickly pushed them back in their pants and zipped up. Chase said, \"Holy Fuck. That was amazing.\" The others chimed in with an agreement of their own. \n\nI led them back into the foyer and pointed to the back door and said, \"Food, booze and women are right out there by the pool. Get into your suits and get out there and mingle. I'll join you in a few minutes. I still have some business to attend to.\" \n\nThey grabbed their bags and removed their bathing suits and went back into the study to change. I found Alexis in the kitchen and grabbed her hand and pulled her quickly up the stairs and down the hall to her room. My cock was ready to explode after watching Emma give four blowjobs to my friends. \n\nAlexis recognized the condition I was in and went to the floor on her knees and pulled my shorts and underwear down to my knees, where they fell to the floor. My cock sprang up and slapped her hard on her right cheek and she giggled as she grabbed it with her hands and stuffed it in her mouth. \"Oh fuck,\" came out of my mouth the second her lips slipped past my glans on her way to my balls. My head rocked back on my shoulders and my hands involuntarily wrapped around her head. She looked up at me with a smile on her face. That look alone was so hot. I had seen it so many times and I never took it for granted. \n\nWhen I looked down, I noticed that she had pulled aside the miniscule triangle of cloth covering her pussy and was fingering herself. I wanted my tongue where her fingers were and I wanted her mouth to stay right where it was. \n\nShe was confused when I pulled her up to a standing position and she shrieked when I lifted her up and spun her around upside down. With her thighs on my shoulders, I plunged my tongue into her pussy. She shrieked again when I flicked my tongue on her clitoris. When she got her bearings she realized that my cock was poking her in the forehead. She adjusted and pulled it into her mouth and quickly devoured me. I planted my feet wide for stability and tongue fucked Alexis for several minutes while she gave me an incredible throat job. Her hands were on my ass-cheeks pulling her face onto my cock as hard as she could. \n\nShe erupted into her orgasm only moments ahead of mine. She groaned from her orgasm and bucked around in my arms. I had no trouble containing her spasms. When my orgasm started she had pulled back to get a breath of air and I blew my first two streams of cum onto her face before she could get her mouth back on it. I fired my hips into her face with each shot and she took it all. I turned around facing the bed and gently laid Alexis down on her back. Her mouth was still on my cock. Her head was hanging off the bed and I pulled my cock out of her mouth to let her breathe. She took a deep breath and lifted her head toward my cock again so I pushed it into her mouth. Her nose was on my balls as I began face fucking her. She started frigging herself again. \n\nI pulled back out of her mouth and quickly moved around to the other side of the bed and climbed up to her splayed knees and pushed my cock into her pussy to replace her fingers. She pushed her sopping wet hand up to my mouth and I sucked in each finger one at a time as I fucked her hard. I was the first to erupt this time. When she felt my first shot she groaned, \"OOOOHHH FUUUCCCKK, BBAABBBY. YYOUUUU GGGOTTT MMEEEE AGAINNN.\" Her pussy began clenching rapidly on my cock as stream after stream of cum launched into her pussy. \"OOHH JJJJEEESSSSSUSSSSS. IT'S A BIIGGGG ONE.\" \n\nAlexis was all over the bed as her arms and legs flailed. I caught a slap in the face which she didn't even register. Her head rocked from side to side as her mouth hung open. There was no sound and then suddenly she went limp and collapsed back on the bed. I went down on my elbows and kissed her face. She didn't respond. It was like she wasn't there. She had taken a huge gasping breath of air and then held it for nearly a minute. I kissed her chin and then her neck. She exhaled hard and then began breathing in rapid, ragged breathes. \n\nI held her there for several minutes until she was breathing normally. I rolled off on one side so as not to crush her. Her tits were still hard and her nipples stuck out nearly an inch. She wrapped her hands around each tit and began tweaking her nipples. The tiny triangles of cloth called a bikini top could not contain her erect nipples and they had slid off to the side. ",
        "After several minutes Alexis raised her head and said, \"I'd better get back downstairs. I heard the guys come in. Are they all here?\" \n\nI said, \"When we came upstairs they were all here except for Noah.\" \n\nAlexis smiled and said, \"I want to meet this Noah. Mom speaks highly of him if you know what I mean.\" I nodded that I did. \n\nAlexis pulled herself up and went to her bathroom to pull herself together. Even though she had been royally fucked, she didn't want to look like it in front of her friends. We went down the stairs separately so as not to raise any eyebrows. Everyone was outside so that didn't turn out to be an issue. I stripped out of my shorts and underwear right there in the foyer and pulled on my bathing suit. \n\nAs Emma had expected, the girls had all congregated into a group under one umbrella and the guys had done the same under another umbrella. Both groups were eyeing the other. Alexis said to her mother, \"What should we do to get everyone together?\" Emma told her to let it be for a while. She predicted that things would loosen up with the alcohol that both groups were consuming like drunks at a wine tasting. \n\nTwenty minutes later Emma walked to the edge of the pool and yelled, \"Alright everyone. Grab yourself a beer or whatever you're drinking and get in pool. We'll do introductions as I'm sure you haven't already done that.\" Alexis and I dove in and popped up in the shallow end. I motioned for the guys to get in the water and Alexis did the same to the girls after she adjusted the triangles on her top to cover her nipples. Some dove in and others walked down the steps. Rachel had timed her entrance so she walked in beside Chase. I saw them speak and shake each other's hand. I thought, 'that's a natural pairing of pretty girl with pretty guy.' \n\nEmma introduced me by name. She went on to introduce Alexis as her daughter and hostess of the party. She then asked me to introduce the guys and I waded through the water to where they were standing. As I said each name, he raised his hand. When I finished, I thanked them for coming. \n\nAlexis did the same for her friends. As I hadn't met any of them except Rachel, I did a little mental assessment as she introduced each one. \n\nDivia preferred to be called Divi. She was about 5'8\" with long shiny black hair and dark skin. She obviously was of Indian descent. She had a beautiful long oval face with very large, almost black eyes. Her body was slim with graceful curves. She was beautiful. \n\nJulia, whom everyone called Jules, was short at 5'4\". She was ghostly pale. She had a little extra weight on her, but her tits were large and full to match her backside. She had a cute cherubic face with pouty lips that were always pursed open showing her ultra white teeth. Her hair was brown and worn short. When she was introduced, she broke into a smile and her cute little nose crinkled. \n\nJennifer was introduced and she interjected that her name was Jenn. She was 5'6\" tall and had a long skinny frame with no female curves. Her bust would be lucky to be an A-Cup. Her face was very pretty with large light brown, almost golden eyes. Her hair was long and naturally wavy and was blonde but there was evidence that it had been bleached. \n\nMadison stood off to the side with an aloof look and posture. She was called Maddy by her friends, which didn't include any of us guys. She was about 5'7\" tall. Her body was very toned and sexy. She had all the right curves in all the right places. Her bust line was perfect for her body at a B-Cup. Her stomach was remarkably flat and toned with a hint of six-pack abs. \n\nSarah was Asian. She was very short at maybe 5'0\" tall. Her body was very slender but her breasts were abnormally large for her size. They were probably enhanced. Her hair was black and long, dropping nearly to her butt. Her face was pretty with very dark eyes. \n\nJillian went by Jill. She was very tall for a woman at 5'11\". I knew I had seen her somewhere before. She was a model and had a long thin body. Her hair was blonde and was very straight down over her B-cup breasts. She was very sexy. Her eyes were bright blue and her nose was straight and thin. Her lips were plump and her teeth were perfect and white. \n\nRachel was introduced next but she was engrossed in a conversation with Chase, so Alexis asked her to acknowledge her introduction to the others. She waved her hand and went back to conversing with Chase. \n\nKaren was introduced last and she was almost forgettable. She was very plain in every way. She stood 5'5' tall. She had mousy brown hair with natural curls that she apparently paid no attention to. She didn't wear any makeup. She had an athletic body with small breasts, slender waist and hips. I thought that she would make a great spy or something like that. \n\nJust as Alexis had concluded her introductions, Noah arrived and jumped into the pool. I introduced him and he waved. Noah is my best friend from High School. We've lived in the same neighborhood since we were five. He is 5'10\" tall. He's as ghostly pale as Julia. I thought, 'If those two get together we will all need sunglasses to reduce the glare.' \n\nDuring the introductions, guys and girls were sizing each other up and deciding who they were interested in based solely on appearances and they all started gravitating toward that person. There were more girls than guys so it wasn't like everyone had to pair up. It was beginning to look like Rachel and Chase were paired as they were still talking and smiling. \n\nAs everyone started up the steps of the pool, at least guys and girls were talking to each other except, of course, Madison. I decided right there and then that I would make it a point of calling her Maddy and watch her facial contortions. \n\nAlexis and I stepped out of the pool and I grabbed a beer and Alexis poured herself a glass of the vodka laced fruit punch. Emma came over to us and said, \"I think everything is going great. Other than Madison, it looks like everyone is enjoying themselves. I've had to fill the punch bowl twice already. It was good planning to have the girls stay over tonight.\" \n\nI glanced over Emma's shoulder as she was talking and noticed that Rachel and Chase were heading hand in hand for the house. As they were about to step through the door, Chase pulled her around to face him and leaned in and kissed her. She seemed startled at first and pulled away. She looked up at him and then launched her lips onto his. I smiled and Alexis and Emma turned around to see what I was smiling at. Emma said, \"That was an easy pair to figure out right from the beginning.\" \n\nI said, \"It looks like Chase may get past second base today.\" \n\nAlexis said, \"You're kidding me. I guy that good looking has never been with a woman before?\" I just shook my head and watched as Rachel pulled Chase into the house and shut the door. I thought, 'One down and a bunch more to go.' \"By the way, why does the big guy, Dean? keep calling you 'Meat'? It looks like you should be calling him 'Meat'.\" I just grinned at her and put my hand down on the front of my bathing suit. She followed the movement with her eyes and suddenly snapped her face back up to mine and with eyes wide said, \"No way. He calls you 'Meat' because of your cock?\" I nodded. She burst out laughing so loud that others at the pool began looking over to see what was so funny. \n\nI said, \"The whole Football Team calls me that. It's kind of embarrassing.\" \n\n\"I think I'm going to start calling you 'Meat' too,\" she said. I frowned down at her as she was grinning up at me. She reached down and grabbed my cock through my suit like she was shaking hands and said, \"Hello 'Meat'. I'm very glad to 'meat' you.\" She burst out laughing again. \n\nEmma broke up our conversation and said, \"You two should get in there and mingle with the others. You know, flirt with them and get them fired up.\" \n\nAlexis laughed and said, \"Mom, you're trying to turn this party into an orgy, aren't you?\" Emma just smiled and walked away. \"Well 'Meat' let's get to work. I have to go get my cupid bow and arrows.\" \n\nI said, \"Who are you thinking make good matches? I was thinking Noah and Jillian, Dean and Divia, Chase is already paired up with Rachel, Jackson and Sarah or Karen and Chuck with Julia or Jenn. That leaves Madison out and I can't think of one guy hear that is going to get anywhere near her with their fragile egos and her nasty attitude.\" \n\nAlexis thought a few moments on the pairings I suggested and nodded, \"OK. Let's see if we can get them together. I just want them all to enjoy themselves. If they get as far as 'getting it on', then fine, but that's not my goal, even if it is moms.\" She started to turn but stopped and looked up at me, \"I agree with your assessment of Maddy but I don't want to give up on her. The only guy here that might be able to break her porcelain fa\u00e7ade is you. You have carte blanche to try. OK?\" \n\nI said, \"Careful. She's a beautiful girl. She might want to run away with me.\" \n\nAlexis laughed and said, \"She is a beautiful girl, and she might want to run away with you. But, I beat her out in every category.\" She shook her head and her wet hair flew. She cocked her hips and reached up and pushed her near naked tits together with her hands and blew me an air-kiss as she turned and walked away. She looked back over her shoulder with a smoldering look as she shook her virtually bare ass at me. \n\nI watched her go and quietly said to myself, \"Yes you do beat her in every category.\" My cock surged in my bathing suit. I walked over to Noah. He had a beer in his hand and he was staring at Jillian who was lying back on a lounge chair talking with Madison who was standing with a glass of punch in her hand. It was a perfect setup. I wagged my finger at Noah to follow me. I waited for a break in Jillian and Madison's conversation and then walked up and sat down on the bottom of Jillian's chair. She pulled her feet back to make room for me. She smiled at me and then looked Noah up and down. I said, \"Hi. My name is Hunter and this is Noah.\" I looked up at Madison to make sure she was part of the introduction. \"Noah, this is Jillian and this is Maddy.\" \n\nJillian said, \"Jill is fine.\" \n\nMadison said, \"It's Madison, not Maddy.\" \n\nI smiled up at her and said, \"Sorry.\" Noah jumped right into a conversation with Jill about her modeling career, whether she was going to pursue it further, was she going to college or not. I knew he didn't want to talk about himself so there were endless questions and answers. I notice Madison was looking at me every time I glanced at her. My job was done getting Noah and Jill together. I stood and excused myself. Neither Noah nor Jill acknowledged me as I turned to Madison and motioned for her to follow me to a couple or chairs several feet away. To my surprise she did. \n\nI offered to fill her glass. She looked down at her glass and after a moment handed it to me. I told her I would be right back. I grabbed a beer for myself and filled her glass with punch. I went back and sat down beside her. There was silence for fifteen seconds or so. I decided to take a direct approach, \"Madison, you are a very beautiful woman and you know that, but this sour look you carry is not becoming at all.\" \n\nShe had a shocked look on her face and I expected her to get up and leave, but she didn't. She looked down into her glass and a little smile spread on her lips. She looked back up at me and the smile was gone. She looked back down and spoke to the glass, \"I've never had anyone say anything like that to me before. I know it's true and I think about it often. I don't like myself very much because of it. My parents have drilled into me 'act superior and others will think you're superior'. She looked back up at me, \"Do you think I'm superior because I act superior?\" \n\nI just looked at her for a moment, thinking about how I should answer her question. \"I don't think you are superior and I don't think you act superior. I think you act like a snob.\" \n\nMadison smiled at me and said, \"That's what I think too. The private school we go to is full of snobs as you can imagine.\" I wasn't sure if this was her really talking or the booze. \n\nI asked her, \"Do you feel superior to the girls here with you today?\" \n\nShe thought a moment, \"I know I should answer 'no' but there are a couple of my 'friends' that I feel superior to. Have you ever met someone and thought you were superior to them, and be honest.\"I got her point and nodded that I had. There are a lot of scum-bags out there in the world. She smiled at me. \n\nI said, \"High School is a very small microcosm of the world. If you're going on to college, people will be less intimidated and less tolerant of snobs.\" I knew I had no right to expand on my last statement given that I have no experience in the big bad world, but I continued anyway, \"When you get out in the world and out from under mommy and daddy, people will be even less tolerant.\" \n\nMadison looked at me with a blank look in her eyes and then said, \"I really should treat my friends better than I do.\" \n\n\"Madison, you should treat everyone better than you do. You never know when the person you just stepped on will become necessary later in your life. At least, that's how my parents raised me.\" \n\nShe paused and looked up from her glass again and said, \"Can you call me Maddy?\" \n\nI leaned toward her and offered my lips. I didn't want to force a kiss on her. That was up to her to accept and come the remaining distance. She came the distance and gave me a very passionate kiss which I returned to her. To my shock, she didn't pull back. In fact she pushed herself out of her chair and into my lap. Her arms wrapped around my neck. My hands went to her narrow waist. Her tongue slithered between my lips and ran along my teeth. \n\nMy cock jumped up and pushed against her right ass-cheek. She jumped when she felt it. She felt it again and jumped again. She pulled her face back and smiled at me. \"Is that what I think it is?\" I reddened with embarrassment and nodded. \n\n\"Sorry. As I said before, you are a very beautiful woman. He has a mind of his own when it comes to beautiful women.\" \n\nShe giggled and adjusted her position on my lap so she could see the outline of my cock through my bathing suit. She said, \"He? Your penis has its own identity?\" I smiled and nodded. She launched her face back down on mine and reached down between her legs and grabbed my cock through my suit. \n\nMaddy pulled back again and whispered in my ear, \"Do you think I could see it or him?\" She pulled back to see my reaction. She had a huge grin on her face. I glanced over at Alexis who was talking with Dean and Divia. She looked over at us and gave me a thumbs-up. \n\nI said to Maddy, \"Let's go inside and find a more private spot. OK?\" She grinned from ear to ear and bounced up out of my lap. She nearly dragged me into the house. She looked in every room as we passed. She stopped at the door to the study. I could hear loud moaning and groaning so I looked around the door frame to see a naked Rachel perched on top of Chase riding his cock like a cowgirl. Her big tits bounced up and down with her motion. He had a hold on her hips helping her to push up and then dropping her back down again. Chase saw us but Rachel's eyes were closed and her head was tipped back as her mouth hung open. \n\nRachel slowed and then stopped bouncing on Chase's cock and he moved his hands to her tits and gently massaged them as he rolled her erect nipples between his index finger and thumb. Maddy's free hand went inside her bikini top to her own tits as she watched. She began rolling her nipple. Rachel was apparently too tired to continue so Chase rolled her to the side and then maneuvered her into a doggy position on her knees and elbows. \n\nMaddy was in a trance as she pulled her other hand from mine and pushed it down in her bikini bottom. Chase moved around behind Rachel and guided his stiff pole into Rachel's pussy. She groaned loudly as Chase's cock disappeared inside her. She was watching between her dangling tits and spread thighs. She pushed a hand down between her thighs and began rubbing her clit with her palm as she laid her fingers along the underside of Chase's cock to finger his balls each time they came within reach. \n\nMaddy looked up at me with the sultriest look on her face. She was breathing very heavy. She looked down and pulled her hand from her tit and reached down in my suit to wrap her fingers around my rock hard cock. She looked back up at me with a shocked look on her face. She said softly, \"Jesus Christ. He is so huge.\" I just smiled. \n\nWith her hand still wrapped around my shaft she pulled me into the Study and pushed me down in a huge leather overstuffed chair. She reached around behind her and untied her bikini top and let it fall to the floor. \n\nChase was fucking Rachel and watching Maddy. Rachel looked over too as she became aware that they had company. She smiled at me as Maddy's bikini top hit the carpet. Rachel looked back at Chase and said, \"Come on baby. Give me another load. We're going for the tri-fecta.\" \n\nMy attention was pulled back to Maddy when I saw her bikini bottom drop softly to the floor. She was standing in front of me completely naked. She was gorgeous. The look of lust on her face alone would make a man cum in his pants. She knelt on the floor directly in front of me and pulled down my suit. My cock sprang up and slapped once on my stomach and then stood bouncing up and down. \n\nMaddy came in close and wrapped one hand around my cock. She pulled and pushed to examine every inch of it before she started jacking me off. She moved her hand slowly up and down the shaft and I let out a groan to let her know it felt great. As Maddy shifted her position on her knees and began to lower her face to my groin, Rachel screamed, \"OHHH FFFUUCCKKK. OOOOHHHHH GGAAAWWWWDDD. I'MM CCCUUMMINNNNGGG AAGGAAAINN. HURRY BABY, CUM WITH ME.\" Maddy stopped her advance and turned to watch Rachel and Chase. Chase was furiously pumping his hips into Rachel. He was gasping for air as was she. \n\nWe watched as Rachel's hips snapped down and then up again. She was looking forward now at the arm of the couch they were on. Her mouth hung open like she was screaming but not a single sound escaped until her orgasm crested and washed over her. Then she groaned, \"OOHHH JEESSUSSS. I NEVER IMAGINED. HOLY FUCK.\" Her stomach rocketed down and then back up in counteraction to her hips as they were randomly pulsing. The clenching of her pussy must have pulled Chase over the top as he let out a feral growl and slammed his hips forward. The whole scene was extremely hot and Maddy sat back on her feet and watched as she continued jerking me off. I didn't mind one bit. \n\nChase shoved his cock into Rachel in rhythm with his cum shots as though he was putting more force behind each shot by launching his hips forward. The physics behind it are logical but I knew his hip surges were as involuntary as was Rachel's gyrations. When he had fired his last salvo, he pulled his cock out of her pussy and bent down and kissed her on each ass-cheek. Rachel collapsed forward with her head now on the arm rest of the couch. They were both sucking air. \n\nMaddy looked back at me with the oddest look on her face. She said, \"I want to do all of that,\" as she thrust her thumb toward Rachel and Chase. I smiled down at her. She came up off her feet and pushed her mouth over half of my glans and then stretched her lips wide to push all of my cock-head into her mouth. From there, she was very tentative. She pulled her head back off my cock and said, \"Jesus. I have done this before with my dildos but they aren't this big. I'll do the best I can.\" She smiled and worked my cock back into her mouth. Now Rachel and Chase were watching Maddy give me a blowjob. I heard Rachel say to Chase, \"Fuck. Look at the size of that monster.\" Chase didn't respond. He was stroking his hardening cock back up to full size. Rachel noticed and added her hand to the stroking. ",
        "Maddy was giving me a pretty good blowjob now as she was using her hand to simulate a deep-throat as she sank her mouth about a third of the way down my shaft. She had increased her pace as she got more comfortable with the girth. She was looking directly in my eyes. She didn't have the look of total bliss that Alexis always had when she was blowing my cock, but, as I've said before; there's no such thing as a bad blowjob. She pulled back and off my cock and said, \"Don't cum too soon. I want you to fuck me like he fucked Rachel.\" \n\nI smiled down at her and said, \"Don't worry Maddy. There will be plenty of cock for that.\" She smiled and worked her mouth back over my glans. She was flicking her tongue on the velvety, pebbled surface of my glans and then started her blowjob again. After several minutes, I could feel my imminent orgasm building and my cock surged harder. Maddy eyes went wide with concern. I thrust my hips up into her face to announce that I was about to cum. Rachel and Chase had moved to a chair beside me to get a close look. \n\nMaddy had not decided what she was going to do with my cum. She opted to take the first shot in her mouth. It was more than she counted on and she immediately pulled her mouth off my cock just as the second surge of cum hit her in the nose and across her forehead. She was concentrating on the load in her mouth. She was trying to swallow it but couldn't deal with the sticky, gooey cum. \n\nMaddy had stopped stroking my cock with the first shot. I pushed her hand off and began jerking myself off. I aimed the third and fourth stream across her face and hair. The last few shots I aimed down onto her chest and tits. Her hands went to her face to clear cum from her eyes. She looked like one of those 'Cum Whores' you see on the internet porn sites. \n\nAs though she were being pulled by some invisible force, Rachel moved over and began licking cum from Maddy tits and face. Maddy welcomed the help and when the opportunity was there, they both locked onto each other's lips. The kiss was sensual and both girls were moaning into the other's mouth. I looked at Chase and he smiled. His cock was back up as he continued stroking it. \n\nAfter a couple minutes the Maddy and Rachel action subsided. Maddy looked at my cock, which was bobbing up and down at full size. She grinned broadly and said to Rachel, who was now kneeling beside, her, \"Fuck. Look at the size of his cock. It's massive. I don't think I can put that anywhere in me.\" \n\nRachel was silent a moment as she gazed at my bouncing cock and said, \"Maddy, honey. If you don't try that on, I'm going to. If you get on top, you can control how much cock you want.\" I aimed my cock at Maddy and then at Rachel, who seemed mesmerized by it. I looked over at Chase, stroking his cock. He was looking toward the door with a big stupid grin on his face. I turned to see what he was looking at. \n\nDean and Divia and Noah and Jillian were watching the action. Both couples came in and sat on the couch and watched a naked Maddy and a naked Rachel kneeling in front of me as I stroked my cock and Chase stroked his. The tension in the air was palpable and everyone knew something was about to happen. \n\nSuddenly, Maddy came up off her feet and grabbed my free hand and pulled me onto the floor. She maneuvered me to lie on my back and then lifted one leg over my hips and sat down on my thighs. My stiff cock was right in front of her and she forced my hand off and replaced it with both of hers. She started a counter-twisting motion, which felt amazing and I groaned with her attack. \n\nMaddy lifted herself up and over my hips and maneuvered my cock to her labia. She was biting her lower lip when she pushed herself down over my shaft. The feeling of entering her silky pussy was incredible. She pushed down until her pussy passed the ridge of the glans and then stopped. Her head position alternated between looking at the ceiling with her mouth open to watching my cock slowly disappear in her pussy. She was moaning continuously. The pressure and heat was fantastic. \n\nRachel had inched over closer and was sucking each of Maddy tits. She sucked and licked up any cum she found there. For more than a minute, Maddy began a very slow descent down the length of my cock. She groaned loudly as she exhaled and then sucked in air and began groaning again. About half way down, she said, \"Oh my God. He is so fat. It hurts so good. Fuck.\" The others watched closely as my cock slowly disappeared. \n\nDivia had one hand in her bikini bottom and the other inside Dean's bathing suit. His eyes were closed and his hips were rocking slowly to match Divia's ministrations. Dean opened his eyes and saw that I was looking at him. He smiled and said, \"Way to go 'Meat'.\" \n\nJillian was in the throes of her own erotic sensations. She had Noah's cock pulled out of his bathing suit and was stroking the full length of his nine inch cock. Chase was now standing in front of a still kneeling Rachel pumping his cock into her face. She was gagging a lot but she stayed with it. \n\nAs I waited for Maddy to slide her pussy down to my balls, I watched the heat building between Jillian and Noah and Divia and Dean. Rachel and Chase were way past heat. They were on fire. Then I noticed that Alexis was sitting in the chair that Maddy and I had started in. Her legs were crossed. I worried about what her reaction would be but she seemed fine with what was going on. I smiled up at her and she blew me an air-kiss. \n\nMaddy finally made it to the bottom and now she just sat there. Everyone in the room was willing her to start fucking me but she just sat there. All of the attention in the room went to Rachel and Chase as he had his hands on the sides of her head fucking her face for all he was worth. He was careful not to push in past her gag point which she had marked with her hand wrapped around his cock. \n\nMaddy was watching them too. She moved herself back up my shaft and my attention shifted back to her. I put my hands under her thighs and lifted gently to assist her movement. She was luxuriating in the feeling of her pussy sliding along the contours of my cock. When she got to the ridge line she reversed direction and sat back down hard. She let out a scream that pulled everyone's attention. She started fucking me and I contributed by pivoting my hips. \n\nChase groaned as his fourth load blasted into Rachel's mouth. She took the first shot but couldn't handle any more and she pulled off his cock as the rest of Chase's cum streamed onto her face and hair and down her chest and tits. \n\nThis was all too much for Divia and she stood up and ripped her bathing suit off and knelt down in front of Dean and forceful ripped his bathing suit down and off his feet. She threw his suit across the room and buried her mouth on Dean's rigid cock. They now had the attention of everyone in the room. \n\nJillian was still stroking Noah's cock inside his bathing suit and she now had the free hand in her own bikini bottom fingering her clit. Both were breathing very heavily. Noah reached over and untied the back of Jillian bikini top at the neck and back. It fell to the floor. \n\nMaddy was fucking at a pretty steady pace now. The look on her face and in her eyes told me that her conscious self was elsewhere. She was grinding on my cock and moaning non-stop. She was too tired to continue the fucking motion, even with my help. She could only pivot her hips forward and backward. She had fallen forward and put her hands on my chest as she ground away, moaning. \n\nI rolled Maddy off me and moved her onto her back. Before I moved up between her splayed knees, I looked over at Alexis. She had pulled the triangle tied around her hips to one side and she had four fingers digging deep into her pussy. She was watching my every move and when she noticed that I was looking at her she smiled and said, \"Fuck. This is so hot. I can't stand it.\" She closed her eyes as her mouth fell open, \"AAAHHHHH...AHHHHH..AHHHH.\" Her hips rocked to announce that she was having an orgasm. \n\nI pulled Maddy's ass up into my lap and pushed my cock down and into her pussy. It was pushing upward toward her pelvic bone. I pushed in deep several times and then started working her 'g-spot' located a few inches in on her upper vaginal wall. I also had a thumb randomly stroking her clitoris. Maddy was going absolutely nuts and everyone was watching her writhe around on the floor. She was in one orgasm after another or it could have been one long one. I didn't let up. She was screaming at a very high pitch and then she would settle back down and then start right back in again starting with a low pitch groan up through the high pitch screams. \n\nBy now Jillian had stripped her fantastic body of her suit and had pulled Noah's suit off. She was straddling his hips right there on the couch and driving her pussy down his long hard pole. Noah's hands were on her tits and she had nestled her head in the crook of Noah's neck and shoulder. \n\nSitting right beside them was Divia sitting on the couch with her knees spread wide. Dean was kneeling on the floor driving his cock up into Divia's pussy. Dean groaned very loudly and it was obvious he was blowing his wad. He didn't even slow down and kept right on plowing his still hard cock into her. Jillian exploded into her own orgasm and it turned out to be multiple orgasms; one right after the other. The sounds of sex were pervasive. In every corner of the room, someone was moaning, groaning or screaming. \n\nMaddy had settled down a little and when I started fucking her again she lifted a hand and said, \"Please. No more. I can't take anymore.\" I pulled my cock out and bent low to kiss her on the mouth. She slid out of my lap in the process. She rolled off to the side and curled up in a fetal position. \n\nI stood up and surveyed the room. Maddy was curled up on the floor. Dean must have cum a couple times and he was still pummeling Divia who was in the throes of another orgasm as I watched. Noah saw me looking and he flashed a thumbs-up at me. I would later discover that he had unloaded twice in Jillian's pussy and once in her mouth. Rachel was diddling herself and continued to have sporadic orgasms. Chase was wasted and he had left the room in search of a beer. Alexis had stripped off her pieces of material completely and sat in the same chair with her legs over the arms slowly drilling one finger into her pussy. Her eyes were shut and her mouth hung open. She had soaked the leather chair between her legs. \n\nI came over and bent down and kissed her lightly on the lips. Her eyes flashed open and she threw her arms around my neck. I stood back up pulling her up with me. She wrapped her legs around my waist and locked her feet behind me. I reached down and guided my cock into her pussy. She rocked her hips up into me to drive herself hard onto it. \n\nI walked her across the room and pinned her against the wall between two expensive pieces of art. The last time I was in this room I had noted that one was by Salvadore Dali and the other by Paul Gaugain. No one in the room paid any attention to either of them. They were watching me nail Alexis up on the wall. She was clearly the most beautiful piece of art in the room. She was grunting with each penetration as she clung to my neck desperately trying to push her ass off the wall to drive herself deeper on my cock. \n\nI felt the tell-tale signs of Alexis' orgasm as her vagina clamped down on my cock. As she went over the edge and began to settle back down again, she couldn't hold her legs up any more. She leaned forward and whispered in my ear. I pulled back and looked at her grinning face. \"Seriously,\" I said. She just nodded. \"OK,\" I smiled. \n\nI backed away from the wall bringing her with me. I grabbed her thighs and walked out of the room with Alexis still impaled on my cock. She squealed with delight as we left the room. I walked through the foyer and I pinned her up against the back-door frame and opened the door. I carried her through the door and closed it behind me. \n\nThe other's still at the pool saw us coming and all conversations ceased as we walked through to the steps down into the pool. Chuck had been making out with Julia and Jackson was making out with Sarah. That left Karen and Jenn and wouldn't you know it; they were making out with each other. \n\nI waded down into the water and let Alexis' legs drop. She released my neck and dropped down. She turned her back to me and lay down on the steps and adjusted herself up on her knees on a lower step and her torso laid on a higher step. \n\nWith her hips out of the water, I pushed my hips up to her ass and guided my cock to her anus. All the others gathered around the edge of the pool to watch what was going on. Chuck and Jackson's cock had gone to steel pole status when they saw a naked Alexis. Jackson had his cock pulled out the left leg of his bathing suit and was absent mindedly stroking it. Chuck was adjusting his cock in his bathing suit. Karen and Jenn had never seen Alexis naked and they had sat down right in front of her head with their hands in each other's pubic area. \n\nSarah pulled up a chair right next to Jackson and sat down. Her face was right at Jackson's cock level and she alternated her eyes from Alexis and me to Jackson's hard cock right beside her face. Julia did the same as Sarah in hopes that Chuck would pull his cock out too. \n\nI looked around at the audience and smiled. Alexis felt my cock touch her anus and she pushed back. My glans pushed into her ass and I stopped when the entire glans was inside. I waited for her move to indicate that she was ready for more. It wasn't long before she pushed back. I slowly pushed my cock into her bowels. Both of us were groaning as I sank deeper and deeper. \n\nAlexis pushed an arm under her and her hand began stroking her pussy as her fingers curled up to feel my cock moving into her ass. She lightly touched her clit with the heel of her hand and she rocked forward. I thought she was in pain so I stopped. Her hips rocked right back at me and sank my cock all the way to the bottom. \n\nAlexis moaned and yelled out, \"OH MY GOD. YOU'RE COCK IS SO FAT. JESUS. FUCK ME.\" I did as directed and began rocking my hips back and forth. I had my hands on her hips as I fucked my pole into her bowels. We were both gasping for air and moaning and groaning. The pressure and heat on my cock was incredible. \n\nChuck had noticed that Jackson was stroking his cock and he also noticed that Sarah couldn't take her eyes off it. He looked over at Julia and noticed that she was also looking over at Jackson jerking himself off. Chuck finally decided, \"What the fuck\" and he reached up the left leg of his suit and pulled out his cock and started jerking himself off. He looked back at Julia and smiled when he saw that she was now locked in on his cock. She was licking her lips as she fought with her inhibitions. When Sarah wrapped her fingers around Jackson's cock and started jacking him off, Julia followed suit and started jerking off Chuck's cock. I smiled when I saw the last two remaining couples actively engaged in some kind of sexual activity. \n\nJackson and Chuck didn't last very long with a girl jerking them off. Within seconds of each other they blew their loads on Sarah's and Julia's face and chest. Neither Sarah nor Julia had removed their suits yet. As soon as jizz began shooting out, they both crab-walked back away from Jackson and Chuck. They had horrified looks on their face that prompted me to burst out laughing. Alexis was continuously moaning from my assault on her ass and she raised her head to look back at me to see what I was laughing at. She saw where I was looking and she chuckled too. \n\nAlexis' chuckle was short circuited when she burst into an orgasm. It was without much warning and I could feel the clutching on my cock. She screamed, \"OHHH MYYY GGOODDDDD. I'MMM BUTTTTT CUMMMINNNGGG.\" She was having an anal orgasm and the pressure on my cock ratcheted up until I thought she would crush me. I could only move when she released me between clenches. I felt my own orgasm coming on fast and I could hardly move. The pressure on the outside of my cock from Alexis' orgasm combined with the pressure from the inside of my cock from my own gave me thoughts that my cock would just explode right there. It was not pleasant and I wanted it over fast as I groaned more in pain than anything else \n\nJackson and Chuck were busy stroking out the final shots of their orgasms. Sarah and Julia were busy licking up cum from each other's chest. They removed their bikini tops to aid the collection of cum. Jackson and Chuck dropped their suits and stood there naked with boners pointing straight out ahead of them. When Sarah and Julia were finished with their cleaning, Jackson helped Sarah up and over to a chair. Chuck did the same with Julia. They helped the girls pulled off their bottoms and burrowed their faces into the girl's pussies. \n\nThere was a whole lot of pussy eating going on. Karen and Jenn were in a sixty-nine position inches from Alexis' head. She heard their groans and turned her head to watch. She was groaning too. When her orgasm started to diminish, the anal pressure on my cock relaxed and my final spurts felt more normal. \n\nKaren and Jenn were both in their own orgasms within moments of the final throes of ours and now Chuck and Jackson were fucking Julia and Sarah missionary style. Both girls had their feet locked around the guy's waists and they were pumping away like piston engines. They were all moaning. When Sarah burst into her orgasm, she screamed out, \"OHHH FFUUCCKKK. AAAMMMMAAAA ZZZZIINNGGG. GODDDD I'MMMM CCCUUMMMINNNGGG.\" \n\nJulia looked over at her friend and suddenly yelled, \"OOHH MMYYY GGAAAWWDDD. MEEE TTOOO.\" They were both flailing around side by side. Chuck looked at Jackson and raised a hand for a high-five which Jackson returned. \n\nIn minutes it was like someone had turned a switch off. The orgasmic groans had stopped and the breathing had returned to normal. Chuck and Jackson rested on their elbows and were kissing Julia and Sarah who were passionately returning their kisses. I had finally been able to extract my cock from Alexis' ass and I was sitting on a step cradling her in my lap. Jenn and Karen were now sitting in chairs with another glass of punch. It was obvious they were getting blasted. Alexis and I decided to go back in the house to see what was going on in there. \n\nAll the same bodies were still there but they had switched partners at some point. Maddy was riding Chase's cock like a cowgirl, sliding forward and back as she mashed her tits in her hands. His arms were behind his head as he casually watched her go. Jill and Rachel were sucking Dean's cock and he blew his load on their faces and tits just as we walked in. The two girls then attacked each other, sucking and licking up cum from the other. Noah was face down in Divia's pussy and she was in the midst of a huge orgasm. Her body was flailing everywhere as she screamed and screamed a high pitch wail. \n\nI turned to Alexis and said, \"I haven't seen your mother for a long time. Have you?\" She looked at me and shook her head. \"Come on, let's find her.\" I took Alexis' hand and led her up the stairs. As we got half way up the stairs, Jackson and Sarah and then Chuck and Julia came in the back door. I stopped and said to them, \"You'll find the rest of the action right in there,\" and pointed toward the study. We continued up the stairs and down the hall to Emma's bedroom. \n\nShe was lying on the top of her bed completely naked stroking her fingers leisurely along her labia. She was propped up on several pillows. She smiled when we pushed the door open and walked in. \"I've been waiting and hoping that you two would find me. I couldn't stand to watch all the fucking and sucking downstairs without joining in and I thought that would be inappropriate. So, I figured that when you had finished together, you could do me. I've probably had a dozen or more orgasms as I listened to the screams and moans. ",
        "Alexis climbed up on the bed and crawled her way to her mother's pussy and gently began tonguing her clitoris before probing her vagina. I walked around the edge of the bed and presented my mostly soft dick to her. She turned her head and inhaled it. As she pushed her hips up into Alexis' face, she bobbed her head up and down on my now rock hard cock as she held it in place with her closest hand. The free hand had gone down on the back of Alexis' head and was guiding her where she wanted the attention. \n\nWhile Emma sucked my cock, my attention turned to Alexis' ass up in the air as she was folded up on her knees. I had a thought and I pulled my cock from Emma's mouth. She had a confused look on her face until I climbed up on the bed and began urging them into a new position. I moved Emma to the middle of the bed with her head near the bottom. I maneuvered Alexis into a sixty-nine on top of Emma. I moved behind Alexis and pushed up close to her and pushed my cock into Alexis' pussy. \n\nEmma went to work on her daughter's pussy and Alexis returned the favor. Emma was looking straight up at my cock driving into Alexis' pussy. My balls swung forward and back in front of Emma's eyes. After a couple minutes, Emma did what I hoped she would do. She reached up and pulled my cock from Alexis' pussy and sucked it into her mouth and straight down her throat, \"MMMMUUUMMPPPHHH\". I groaned. \"OH FUCK,\" as I was now fucking Emma's throat, \"MMMUUMMPPHH...MMMUUMMPPPHH.\" \n\nAlexis lowered her head to look between her hanging tits to watch my cock push in and out of her mother's mouth. After a dozen cycles, Alexis began whining that she wanted my cock back and Emma reluctantly released it and went back to tongue fucking her daughter as I pushed my cock back in Alexis' pussy. The combined attack pushed Alexis over the top in a massive orgasm. Emma threw her arms around Alexis' waist and hung on as Alexis gyrated everywhere. She had to stop her manipulations of Emma's pussy as her forehead rested on her pubis until she had collected herself. I kept right on fucking her pussy until Emma repeated the earlier action and pulled my cock out and pushed it into her mouth again. \n\nWhen Alexis went back to eating her mother's pussy, the combined action drove her over into her own huge orgasm. She was moaning around my cock as it pushed into her throat. We were all gasping for air. Alexis had dropped her tits down on top of Emma's massive tits to try to hold her in place as Emma's body muscles clenched and unclenched over and over again. I was hoping she wouldn't accidently bite my cock. I knew she had way too much experience to do that, but still. \n\nWhen Emma had recovered from her orgasm and was more or less breathing normally, she said, \"OK Baby girl. Let's get him.\" Alexis pulled forward and Emma pushed my cock from her mouth and rolled up on her knees. Emma pulled me down on the bed on my back. My hard cock was pointing at the ceiling. Alexis set her ass down on my stomach facing my feet. Emma set her ass down on my thighs facing my head. They both pivoted their hips up and pushed their pussies together with my cock sticking up between them. In unison, Alexis and Emma began driving their pussies up and down my cock. They were going nuts because my cock was now sliding along their pussies and in particular, their clits, which were already very sensitive from their recent orgasms. \n\nI tried to see but Alexis blocked my view. She was tilted backward with her hands on my biceps. Emma was tilted backward with her hands on my knees. They pushed with their legs to drive their pussies in a coordinated action up and down my cock. I groaned loudly and announced, \"Fuck. Yes. I'm CUMMMINNNGGG.\" \n\nThick, white, hot, gooey cum rocketed up my shaft and spewed like a volcano about three feet in the air. As it descended, both Alexis and Emma squealed and closed their eyes. As cum splashed down on their faces and bodies another salvo burst upward again as they squealed again. They kept pistoning their pussies up and down my cock until the final shot of cum drooled out and flowed down my cock. They were absolutely covered with cum. Some had flown over Alexis' head and landed on my face and chest.  \n\nI collapsed as my lungs were pleading for oxygen. Alexis and Emma pushed themselves up and pulled themselves together for a very passionate kiss. Then they high-fived and rolled off me onto the bed. I looked down at them as my chest heaved up and down and said, \"Holy Fuck. That was incredible. How many times have you done that? Neither of you said a word to each other.\" \n\nEmma frowned at me and said, \"A gentleman never asks those kinds of questions.\" \n\nShe was right, of course. \"Sorry,\" I said. \n\nEmma and Alexis spent the next many minutes sucking and licking up cum from everywhere on their bodies and when they were satisfied that they had cleaned each other; they turned their attention to me. Alexis sucked my cock into her mouth and sucked and licked until there wasn't a trace of cum left. Emma sucked and licked cum from my face and chest. When they were done, they came together again for a very sensual kiss with tongues snaking in and out of their mouths searching for any taste of cum. I sat up and joined them. \n\nEmma got up first and put her clothes back on and left the room to check on things downstairs. Alexis and I cuddled in a spoon position for many more minutes before we went downstairs. We were both curious to see what everyone was doing. On the way down the stairs, Alexis said, \"Well, it looks like mom got her way. I knew my friends were cock hungry but I never imagined this.\" She stopped mid-flight and turned to me, \"...and Jenn and Karen are lesbians? I didn't see that coming. They talked about cock as much as anyone for the past year.\" \n\nWhen we walked into the study, Emma was sitting in a leather chair across the room watching the continuing action. I looked at Alexis and said, \"Well there's your answer about Jenn and Karen.\" \n\nJennifer was sitting in Dean's lap driving her pussy hard onto his cock. She was frantic. It was quite a contrast with the three hundred pound guy holding the barely one hundred pound girl by the hips trying to keep up with her pace. Right beside them was Karen kneeling on the big leather couch facing the back with her ass pointing forward with Noah's long pole fucking her hard from behind. Both of them were groaning as loud as Dean and Jenn. \n\nChuck and Jackson were sitting on the floor jerking themselves off until Rachel and Divia moved over and took over for them. Maddy was sitting in the middle of the couch between the Dean/Jenn duo and the Noah/Karen duo. She had her hand buried her pussy. She was paying no attention to either couple beside her. She was in her own world. \n\nAfter progressing from handjob to blowjob, Divia and Rachel were now sitting in Chuck and Jackson's laps fucking the hell out of them. \n\nOne by one, Karen, then Divia, then Jenn, then Rachel and finally Maddy began screaming and groaning as they each had their own orgasms. The cascade pulled Emma over too as she sat way back in the corner. Dean's cum erupted into skinny Jenn which enhanced her orgasm. She yelled out, \"FUCK. YESSSS.\" Noah's orgasm came as Karen was recovering from her orgasm and another one washed over her as she yelled out, \"YESSS. FUUCKKK. ANOTHER ONE. OH MY GGAAWWWDDD.\" \n\nChuck and Jackson were sitting side by side against the wall with Rachel 's and Divia's pussies pulsing on their cocks. Jackson looked glassy-eyed at Chuck and said, \"Fuck Bro, I'm done,\" just as his hips surged up into Rachel driving his cock all the way home. Rachel's mouth flew open as her torso collapsed down on to Jackson's chest. \n\nChuck was only seconds behind Jackson and he announced, \"Me too.\" He slid down off the wall and bucked his hips up into Divia as he poured his jizz into her pulsing pussy. When he was done, he pulled Divia down and wrapped his arms around her back. They were both gasping for air. \n\nMy cock was as hard as it had ever been as I watched the orgy before me. Maddy opened her eyes and saw me and she burst off the couch heading directly for me. She grabbed my hand and pulled me around the chair that she and I had started in earlier and pushed me back. She was going down to her knees as my butt hit the seat. She had her hands on my cock and was surging her torso forward when Alexis stopped her dead in her tracks. She leaned down and whispered in Maddy's ear. \n\nMaddy's face contorted into a frown and then her lower lip pouted like an unhappy child. She released my cock from one hand and then reluctantly the other. She fell backward onto her butt and pushed herself back against the front of the couch. \n\nAlexis stepped in front of me to take Maddy's place. She loudly announced, \"For anyone who hasn't figured it out yet, this hunk of man right here is mine. You've heard me talk about nothing else but some un-named guy for the past several weeks. Hunter is the guy I have been telling you about.\" From across the room someone said, \"Yeah, No Shit Dick Tracey.\" I was turning red with embarrassment. \n\nMy embarrassment got worse when Alexis continued, \"Hunter plays for the State University Football team along with Dean over there. The team calls Hunter \"Meat\". Now, I wonder where he got that nickname from.\" The room burst out in laughter. In spite of my embarrassment, my cock was bouncing all around and I had to wrap my fingers around it to stop it. \n\nAlexis continued, \"Until mid-night, \"Meat\" is free to have sex with anyone here that he and she desires. As for me, I've seen a few cocks around here that I would like to strap on.\" This brought a chorus of \"Fuck yeahs,\" from the guys. Alexis bowed and continued, \"The girls are all staying here tonight. The guys are free to stay or leave. If you leave, call a cab, please. We've ordered Pizzas to be delivered to give everyone a break from the booze and the sex. They should be here soon. So...until then, let the orgasms continue.\" Everyone was clapping when Alexis knelt down before me and sank her mouth down on my steel-hard shaft. A loud groan burst from my lungs and my head rocked back on the chair as she went straight down my pole and flicked her tongue on my balls. Loud groans came from every guy in the room as they imagined she was deep-throating them. \n\nMaddy came around beside the chair and pushed one of her tits into my face. I sucked as much of it as I could into my mouth and began tongue flicking her nipple which instantly became erect. Alexis watched and smiled around my cock. She varied her attack on my cock, just as she had been taught by her mother, the expert. It was only minutes before she got her prize. She swallowed my load as she needed to and then opened her mouth to show me the remaining cum. She rolled it out onto her lips and then sucked it back in. She stood up and came around the other side of my chair and pushed a tit up against my face and leaned toward Maddy. \n\nMaddy had an inkling of what Alexis intended and she hesitated while she decided what to do about it. Then she smiled and pushed her lips up to Alexis' lips and accepted the load of cum to the hoots and hollers around the room. Maddy pulled back and showed everyone that she now had the load of cum in her mouth. Instead of sharing it back with Alexis, she swallowed it and stuck out her tongue to show an empty mouth. The hoots erupted again. Alexis pushed her lips against Maddy's and licked a gob of cum that had escaped when she was showing the crowd. Alexis pulled back with her captured cum on her tongue and smiled. Maddy burst out laughing and everyone else followed suit. \n\nIt was going to be one hell of a night..."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "group",
        "group sex",
        "party"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-10"
}