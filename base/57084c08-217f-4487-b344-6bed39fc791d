{
    "title": "Light Up For The Holidays",
    "pages": [
        "I hope you enjoy my submission to the .\n\n*\n\nBeing a good neighbor\n\nI am a flexible guy when it comes to my own hard and fast rules. I have very few of them simply because I have learned that rules seldom apply all the time. I do have a few that are significant to this story. Be a good neighbor and decorate for Christmas.\n\nThe 'being a good neighbor' rule makes sense for anyone. Decorating for Christmas might seem a bit strange since I am a male of thirty-five years, and single. Growing up we always decorated. Dad, mom, and I would spend days decorating and hanging lights. To this day I love watching everything light up when the work is done.\n\nMy parents now live in a retirement village eight hundred miles away. Their distance does not change my love for Christmas decorating. I own a two-bedroom home that is perfectly sized for me. I bought the house thinking that I could always sell and get a larger home when I met the right woman. So far, Mrs. Right has been crushed under Ms. Wrong's spiked heels.\n\nYou would think that a little lighting would go a long way because I own a relatively small home. You would be incorrect. I have thousands of lights of all shapes, types, and chord lengths. You could say I am a bit obsessive. Honestly, I say I am obsessive. It is a harmless obsession and I have never felt the need for professional help in resolving it.\n\nI start decorating immediately after Thanksgiving. I take down my decorations no later than the end of January. I am not a fan of wire tumbleweeds that require a puzzle genius to untangle, only to find the string will not light. So, I will spend evenings for a week after I take everything down reorganizing, labeling, and storing for the next year.\n\nThe house next door is a mirror image of mine. It had been emptied for months with a bent over 'For Sale' sign barely peaking above the unmown grass. I came home from work the second week of November to discover the grass had been mown, the sign was standing straight, and a 'SOLD' sticker artfully angled across the sign.\n\nI pulled onto my driveway after work a week later just in time to see a moving van pull away from the house.\n\nI gave them the day to get settled before I dropped by. The next day I was carrying my homemade spaghetti, garlic bread, and two bottles of wine when I knocked on the door. I hoped my new neighbors were nice people and we could break bread and share some wine. Worse case I would drop off everything and come back for the dishes later.\n\nThe woman that answered the door was a vision in beauty. Standing next to her was her near twin. I had double visions!\n\n\"Hey, uhm High, uhm I'm, I am John Burton, your next-door neighbor.\" I pointed at my house. Their house was the last one on the street and the pointing may have been a bit redundant. Sue me. I was having some difficulty concentrating.\n\n\"Food, here. I brought food. And wine. I brought food and wine. For you. Welcome to the neighborhood!\"\n\nBoth women gave me a primer on their facial expressions. The first was mild curiosity, the second was mild confusion, the third was sympathy for the mentally impaired, and the last was humorous acceptance. Their smiles nearly matched and both made me feel like a sixth-grade schoolboy after his first real kiss.\n\nI was shocked that they invited me in considering my less than suave introduction. The vision that had answered the door was openly grinning, \"Well, John Burton why don't you follow me to the kitchen, and we will tell you who we are.\"\n\nThankfully, the walk to the kitchen did not require much in the way of neurons. They led the way and I followed. I could not help but notice that their butts swayed in time as they walked. They were without doubt exquisite butts. The legs attached to said butts were equally as nice. I wondered if they were twins.\n\nBoth their heads turned toward me.\n\nShit, busted staring at their asses. I just went from nice neighbor to neighborhood perv. They both smirked because they caught me looking. I nervously set everything on the kitchen table.\n\nThe lady reached out to shake my hand, \"John Burton it is a pleasure to meet you. I am Denise Lang, and this is my daughter Lacy. Please have a seat while we set the table.\"\n\n\"Did you say your daughter?\"\n\n\"Yes, can you not see the resemblance.\"\n\nI might have turned a shade redder, but I doubted if one existed, \"Of course.\"\n\nI never stop talking when my foot is only partially in my mouth, \"I thought you might be twins.\"\n\n\"Oooh, Lacy we have a flatterer on our hands.\"\n\n\"Speak for yourself mom. I think he just said I was old.\"\n\nRedder did exist, \"Can I have a mulligan? I will go back outside, you can pretend I haven't been here, and I will try knocking again.\"\n\nLacy snickered, \"Do you really think you can do better?\"\n\nI pondered for a moment, \"Nope. I blew my chance unless you both get selective amnesia.\"\n\nDenise chimed in, \"We saw that you noticed we are women. I am also sure you are aware that you are a man. When in history has any woman ever had amnesia regarding anything embarrassing that a man said?\"\n\n\"Point taken. Shall I crawl out the front door and slither my way home?\"<br >\n\nDenise smiled, \"No, of course not.\"\n\nLacy added, \"We are used to men saying silly things. Eat first, slither later.\"\n\nI opened the wine without breaking the cork or the bottle. No mean feat considering my conduct so far. We settled at the table and began to eat.\n\n\"How long have you lived next door John Burton?\"\n\n\"Please call me John. Our conversations are going to be unnecessarily redundant if you insist on using my first and last name.\n\nLacy just had to ask, \"What is your middle name?\"\n\n\"You just had to ask, didn't you? My middle name is Randolph Eugene. Yes, I have two middle names. Yes, I will hate you if you insist on using them.\n\n\"I have lived next door for three years. I transferred here a year before that. I rented until I found the house I wanted.\n\n\"I know how long you two have lived in this house. I am observant that way. Where did you move from?\"\n\nDenise took over, \"Well John Randolph Eugene Burton..\"\n\n<br >\"You just had to do it didn't you?\"\n\nShe snickered, \"John, Lacy is going to college here and transferred to my company's local branch so we could stay together.\"\n\n\"Mr. Lang?\"\n\nThe smile left her face, \"Mr. Lang and I were married young, our parents insisted. I was sixteen and pregnant. He was eighteen and an asshole. He remained an asshole until I divorced his cheating, lying, abusive ass six months ago.\"\n\n\"So, conjugal visits are out of the question?\"\n\nI finally managed to get them laughing.\n\n\" On a more serious note, if you need anything fixed around the house, I will be glad to help. I need a list though. I cannot put my finger on why, but my brain does not want to function very well when I am in this house. Probably fumes or something. Maybe a cat hair allergy left over from the previous owners.\"\n\nThe blush I saw on their faces boosted my ego to untold heights.\n\nLacy smirked, \"I suspect the brain problem is gender related.\"\n\nAh, there's that ego. I was looking up when I should have been looking down.\n\n\"Denise, have you ever abused Lacy?\"\n\n\"Oh my god no!\"\n\n\"Maybe you should consider it.\"\n\nDenise laughed as she looked at her daughter, \"Lacy I think he has your number.\"\n\nLacy looked at me, \"If you don't have it, I would be glad to give it to you.\"\n\nI think I blushed a little. Honestly, I blushed a lot, \"I will write my number down for both of you. If you need anything call or come over.\"\n\nI wanted them to get to know me before sharing things like phone numbers. If they called me, I would know that they thought I was OK. I very much wanted to be OK. I wanted to be more than OK, but OK would do for now.\n\n\"There is something you should know about me. I decorate for Christmas. I really decorate for Christmas.\"\n\n\"Mom, he's gay.\"\n\n\"That is a mean stereotype young lady. Plus, you saw for yourself that he is definitely hetero.\"\n\n\"Oh, Sorry mom. The gay thing was wrong, an easy one, but wrong. He's probably just mentally disabled.\"\n\nI raised my hand, \"Still here. Haven't left. I am not sure what that says about my intelligence, but I am not disabled.\n\n\"Anyway, before Miss Turing test interrupted with her evaluation, I was going to ask you about decorating.\n\n\"Do you decorate? If so, do you need decorations? Would you like help putting them up? Can you make Lacy stand in the corner or something?\"\n\n\"Yes. Yes. Yes. No, and it wouldn't stop her from talking anyway.\"\n\n\"He wasn't trying to shut me up mom. He wanted another look at my ass.\"\n\nThey were both watching intently as my face adopted the red coloration that seemed to be the norm for me in this house.\n\nI know when I am beat. I just wish I had known it when I walked in the door. It would have saved me from some abuse. Time to redirect, \"Do you have a writing pad and a pencil?\"\n\nDenise opened the ubiquitous kitchen junk drawer and pulled out one of each. I sketched our houses. I roughly outlined for them how I usually decorated my house and asked them how they wanted theirs decorated.\n\nDenise was pensive, \"This is kind of you, but we don't have the budget to do anything.\"\n\n\"You know when I said I really like to decorate? I have enough decorations to do both houses and still have plenty of spares.\"\n\n\"Told you mom. Ga..\"\n\n<br >\"Do not finish that sentence or John will have time to memorize your ass, your legs, and every hair on your head before you get out of that corner.\"\n\nI wasn't thinking when I stood to make my point.\n\n\"Mom, definitely not 'G' word.\"\n\nDenise followed her daughters gaze, as did I. We all observed my erection painfully bulging against my pants. Well, painfully for me.\n\nThey looked up at me and my face flared with a shade of red so bright that it had not been documented yet. I was concerned that their faces would burn from the brightness. I know mine felt like it was.\n\n\"OK, Well. Nice to meet ya. Welcome to the neighborhood, Bye.\"\n\nI turned ready to dash for the front door.\n\nThey were both laughing. When Denise caught her breath, \"Oh my god! John, sit down please. You are so much fun to fuck with.\n\n\"Please tell us you are enjoying this too.\"\n\n\"Of course, I am. Two beautiful and funny women were looking at my semi-erection. What's not to enjoy? No reason to be embarrassed. It's not like I just met you, or got caught staring at your asses, or something pervy like that.\"\n\nThey laughed some more. I couldn't help but think that it might be me they were laughing at. Nah.\n\nI took my annual decorating vacation and started on both houses the next morning. I worked through the day without break in the hope that Denise and Lacy would see the finished product when they came home.\n\nI was standing on the sidewalk waiting when they pulled up. They got out of their car and stood with their mouths hanging open. I was thrilled!\n\nDenise was first to respond, \"This is amazing!\"\n\nLacy was thoughtful, \"Who's Leon?\"\n\nHuh? I looked at my roof. Yep, it said 'LEON'. I forgot that I was standing on the back side of the roof when I put the letters up, \"Famous beer buddy of the fourth king. You know, the one that got a CJWI and didn't get to the stables until the following Monday?\"\n\nDenise was skeptical, \"CJWI?\"\n\n\"Camel jockeying while intoxicated.\"\n\n\"Lacy, I think you may be on to something regarding the whole brain thing.\"\n\n\"Yuck it up ladies. Wait until it gets completely dark. Then you'll see something.\"\n\n\"Noel spelled correctly?\"\n\n\"No, miss smarty pants.\n\n\"Wait, I mean yes.\n\n\"No, it's really both yes and no.\n\n\"Yes, it will be awesome!\n\n\"No, it won't be spelled right, at least not until tomorrow.\"\n\nLacy could not let it lie, \"You should probably throw in a few maybes here and there.\"\n\nI walked toward my house, \"Whatever. You guys ready for some wine?\"\n\nThey followed me in like they had lived there forever. I thought it was uncanny how they knew where the kitchen was. I almost mentioned it until the realization hit me, Duh, their house is the mirror image of mine.\n\nThey liked my cooking well enough last night so I figured I would give it another shot. We ate my two and a half alarm chili and drank some wine. I talked so they would have ammunition for their teasing.\n\nDishes cleaned and put away, we headed out front. I walked over to the garage and waited while the ladies went to stand on the street. I flipped the switches.\n\nSilence\n\nMore Silence\n\nScreaming and jumping! That's good. No one is running away. Even better! I moseyed over to them as a proud handyman will do, Noel notwithstanding, \"Do you like it?\"\n\nThey both jumped me. Well, they didn't jump me, they hugged me, but it felt like jumping. They sandwiched me, and it was wonderfully squishy. I really like their squishy parts. I was harder than 'naughty or nice' calculus in seconds.\n\nThey were both aware of my predicament. They started circle hugging me. Denise would hug my front, then swap places with Lacy. Before long, the hugging seemed to be centered at my groin. The hugging arms were being draped across my shoulders.\n\nThey couldn't really be that horny, could they? God, I hope so.\n\nEventually the hugging calmed (damn). We stood there for a while as they took in the details and after a bit Denis grabbed one hand, Lacy the other, and they pulled me toward their house.\n\n\"Wait! I need to get something from my house. I will be there in a second.\"\n\nI ran to the house, grabbed the sack by the door, and trotted back. I walked in and Denise handed me a drink, \"Thanks, I will drink this in a minute. First, I have yuletide gifts for you. You have to close your eyes and trust me.\"\n\nLacy looked skeptical, \"Yeh, those words have never gotten me into trouble.\"\n\nSome cajoling, attempted bribery, and begging later I got them to close their eyes and keep them closed. I removed the gifts and adorned each of us with them, \"OK, Open your eyes!\"\n\nEach of them had circles made of garland suspended around their boobs. Hanging in the center of each circle was a piece of mistletoe. A garland belt around each waist held a piece of mistletoe hanging centered over the area I wanted to kiss the most.\n\nI wore a similar belt. Except I had bigger mistletoe. A manlier piece of you will.\n\nOK, I knew this could go sidewise in a hurry. My hope was that they would embrace the idea. I figured that the worst case would be to play it off as a lame joke. I was taking a huge chance that they might just get pissed off and kick my ass.\n\nLacy broke the silence, \"Does this mean you want to kiss my nippies and my little pussy? Or does it mean you want mom and me to kiss each other's nippies and little pussies?\"\n\n\"Can I have both?\"\n\nThey looked at each other, then they looked at me\n\n\"Yes.\""
    ],
    "authorname": "IJS0904",
    "tags": [
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/light-up-for-the-holidays"
}