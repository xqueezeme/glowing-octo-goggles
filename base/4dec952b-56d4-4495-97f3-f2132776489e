{
    "title": "The Theft of Our Lives - Kellen",
    "pages": [
        "Disclaimer: This is a side-story providing the detail of what occurred at home between Emma and Kellen while Ray was out-of-town. It has the same underlying thread of blackmail and coercion, but has a strong incest theme, so be warned. It contains various sex acts between adults, including incest and non-consent. The story, all names, and all characters are fictional. Any resemblance to entities or persons, living or dead, is purely coincidental. In real life, all non-consensual sex is immoral, illegal, and not condoned by the author. All characters are 18-years-old or older. All rights reserved.\n\nTHE TEASE\n\n\"You'd better get upstairs and get ready,\" Emma suggested before I left to catch my flight to Duluth, looking displeased and returning to her glass of wine with her little sister, Betsy, taking another large gulp.\n\nI went up to my room, passing Kellen's on the way and finding his door ajar. Looking in, he was peeking out his window into the backyard using the mini-binoculars he brings to ball games. I didn't know if he was checking out his mother or his aunt in their striking bikinis, but I didn't interrupt fearing I'd embarrass our 18-year-old son expressing his natural and abundant sexual curiosity.\n\n'I'm not so sure this is going to be as difficult as Emma thinks,' I thought, shaking my head, and moving on to our room, packing up and heading out the door after giving my wife a kiss and a hug in sympathetic bonding for our travails.\n\nEmma and I agreed to minimal contact while I was gone. It broke our usual 'openness' rule but under the circumstances I understood her reticence to speak candidly about what occurred during the week. Instead, she promised to send me texts each night keeping me updated so I didn't drive myself crazy wondering.\n\nI hoped she was straightforward, and perhaps more went on than I knew, but Emma is honest and usually tells me everything, so I was sure she'd mention anything significant if it had occurred. As I found out, she was true to her word, and the story she told on my return was stark, if difficult to hear, confirmation of that truth.\n\nAs one might expect of a mother confronting a dreadfully opprobrious task, Emma took it slow, planning to ramp up the naughtiness as the week progressed -- in essence, building his interest in her as more than just 'mom,' but also as an object of sexual appeal.\n\nIt was perverted and wrong, but she had no choice. Knowing her cautious nature, as well as her strong fear of failing her assignment, I expect her initial efforts were so artfully subtle our oblivious son didn't even notice.\n\nGenerally, at home or out in the world, Emma is a fashionable but conservative dresser. It's true, Hank required her to don highly scandalous attire when she was 'entertaining,' as it were -- such as the slutty outfits on the cruise, the visits to his office as the 'gold-digging' wife, or the sexy schoolteacher get-up at the poker party.\n\nMore often, however, and most definitely at home, my unpretentious wife wore neatly tailored, respectable clothing -- jeans with a sweater or a blouse buttoned modestly to the neck, or possibly a breezy summer dress extending to her knees with a closed bodice on a warm day.\n\nPrior to our capture and descent into sexual servitude, Emma would never dream of wearing anything remotely revealing or provocative around our kids, even now that they're adults.\n\nSelf-consciously, she's also extremely aware of the effect of her generous breasts on people, accustomed to the lingering stares of men and women alike throughout her adult life, and so protectively does her best minimizing her huge rack with functional, sturdy bras and opaque tops without a hint of cleavage whatsoever.\n\nAs she conveyed it to me, over the initial days after my departure, the telltale signs of her efforts began to show -- a skirt a few inches shorter than usual, for example, or a button-down blouse with one or two more buttons undone at the top during dinner.\n\nIt was so discreet I doubt Kerri even noticed, although apparently Kellen's flitting eyes drifted briefly to his mother's chest when she leaned over the table to serve him the mashed potatoes that first night, spying a deep valley of cleavage between her well-supported tits.\n\nEmma forced a nervous smile while slowly dishing out the food, making certain to give our startled son a moment to linger on the mountains of pale flesh before catching himself and respectfully averting his eyes to his meal. She was very likely embarrassed by her act but also content for the night that step one in a long descent into depravity was taken.\n\nAfter that tentative foray, the displays increased in frequency and flesh, although as Emma told it she kept her most brazen acts of licentiousness for when Kerri was absent, and she was alone with our unsuspecting son. Conveniently, Kerri spent a lot of time with friends or in her room, perhaps pondering the unimaginable events overtaking her life and that of our family and unaware of her mother's dubious assignment.\n\nEmma's flagrantly buttoned-down blouses soon lost another button, such that her bras revealed an abundance of cleavage when Kellen returned home from school. She went lingerie shopping too, purchasing nude bras lighter in construction, colorful, and even frilly, replacing the substantial white support garments usually containing her giant tits.\n\nThese new bras were sexy and uplifting, emphasizing her impressive endowment rather than hiding it. They also weren't padded, allowing her responsive nipples to protrude against the fabric.\n\nThat minor adjustment wasn't so noticeable when wearing a loose top granting Kellen a sneak peek down the front but was readily apparent when wearing form-fitting pullovers, which she rarely did out of inhibition.\n\nThat afternoon, a tight, lightweight shirt made an appearance in Emma's wardrobe. Clearly, she was aware what she was doing, with the snug top hugging her mountainous chest, and even though warm and unaroused, prominently displaying the poking tips of her flaccid nipples to even a casual observer.\n\nI'm sure our reverential son noticed the conspicuous and unexpected change in his respectable mother's dress code but was too well-raised and courteous to stare, undoubtedly trying to do the right thing, and failing miserably.\n\nBig tits and hormone-driven males go together like peanut butter and chocolate, and there was simply no way Kellen could resist checking out his beguiling mother's immense rack, and Emma knew it.\n\n\"Kel, sweetie, be my big strong son and help me reach that suitcase way up there in the garage?\" she cooed adoringly that day upon his return from school as he lounged in a tank top and poly-mesh athletic shorts.\n\nEmma wore a short sundress -- much shorter than she'd ever worn before and showing a lot of leg.\n\nMy wife is tall with long, shapely legs to go with her height. For that reason, she generally didn't wear anything much above the knee, but this loose-fitting yellow number dropped only to mid-thigh. Snug at the bodice, it slung low in a squared cut, exposing a healthy amount of her eye-catching breasts supported only by the flimsy lace of a white bra.\n\n\"Sure, mom,\" Kellen obliged, stepping into the garage finding his beckoning mother standing on the top rung of the ladder reaching ineffectively towards the upper rafters.\n\n\"Just hold the ladder steady and I think I can reach it myself if I go up another rung,\" she suggested helpfully, looking down at our son's vivid green eyes transfixed momentarily on her thighs.\n\nAs my crafty wife arranged, the hem of her cotton dress was an inch or two above eye level, understanding exactly the view he'd get when she rose another step, and stretching on tiptoes to retrieve the suitcase.\n\n\"Get behind me and grab either side to brace it,\" Emma directed, intending to place his face in optimal viewing position with her feet parted to the edges of the step and the backs of her thighs within breathing distance of his open mouth.\n\n\"Okay, ready mom,\" he said when set with each muscular arm gripping the metal ladder.\n\n\"Alright, if I can just,\" his scheming mother strained, raising herself in a false attempt to reach the suitcase.\n\nEmma's deceptive effort not only lifted the hem temptingly up her thighs to only inches below her bottom, but also elevated her to a height where our hoodwinked son couldn't help but see up his pretty mother's dress if he only looked in that direction.\n\nHonorably, initially, Kellen did not, so my intent wife pretended to really stretch her right arm, looking down in doing so to find our well-mannered boy warily gazing to the side, afraid of disrespecting his caring mom.\n\n\"Kel, am I close to it?\" she cleverly importuned, not wanting to let this opportunity slip away without forcing him to look up her dress.\n\nBamboozled but obedient, our conscientious 18-year-old followed her instructions, turning to look at where her hand was reaching just short of the suitcase and unavoidably staring directly up his long-legged mother's dress. Emma saw his eyes shift perceptibly away from the direction of her hand to straight upward and knew she had him.\n\n\"Uhh,\" Kellen started momentarily at the treasured view greeting him, with her full round bottom set in lacy white bikini panties a mere foot from his face.\n\nEmma had thought about going commando, but simply couldn't take that derelict step quite yet. It was simply too far out of bounds for her to seriously contemplate, although she knew it was coming soon enough. Instead, she selected a pair of sexy panties exactly for this purpose, narrowly cut carving into her ample buttocks and disappearing in a wedge between her ass cheeks.\n\n\"Can you see it?\" she asked, aware of the insinuation but wanting to be sure our son saw what she intended.\n\n\"You're close, mom,\" he returned uncomfortably, not truly certain of her meaning but only allowing himself to believe she was innocently talking about the suitcase.\n\nKnowing he was hooked and couldn't force himself to look away, Emma shifted on her feet in a vain attempt to reach the suitcase, brazenly parting her muscular thighs 'for balance' with the simple turn presenting Kellen a blatant crotch shot between her legs.\n\nFor the first time, our unworldly son had a birds-eye view of his sainted mother's panty-clad vagina.\n\n\"Any better now?\" Emma taunted with feigned naivet\u00e9 in flashing our susceptible lad, certain his view was much better.\n\nSure to pull the lace fabric snugly against her pussy and without the presence of so much as a hair on her bald snatch, Kellen most definitely saw a well-defined 'camel-toe' as her labia impressed themselves against the cloth panel.\n\n\"Hey, you're not looking up my dress, are you?\" my blushing wife astutely turned the tables upon noticing his obvious focus, playfully teasing in a planned 'gotcha' moment designed to break another seal between mother and son.\n\n\"I, umm, I, well, I think maybe I'd better try to, uh,\" our flustered son stammered, staring unblinking at his revered mother's covered pussy before becoming an unnerved kid again caught looking at a girlie magazine.\n\n\"Well, you better not be. I mean, really, a handsome young man looking up my dress. That's so, um, exciting,\" she chided coyly, making sure not to sound angry and instead projecting appreciation.\n\nClimbing down and turning to Kellen, Emma made a point of brushing her statuesque frame against him, placing her hands on his broad shoulders, drawing him into her body and pressing his chest into her large spongy bosom with her ruby lips next to his ear.\n\n\"Okay, Kel, you try,\" she whispered seductively with a breathy lilt but a terrible sense of guilt. \"After all, we can't have an athletic young stud looking up his mother's dress, now can we?\"\n\nKellen shifted nervously with the words, not understanding what had gotten into his pragmatic, pull-no-punches mother and defaulting to the role of obedient son he'd played his whole life.\n\n\"Yes, ma'am,\" he mumbled, not knowing how else to answer the unusual admonition and instead placing his foot on the first rung to climb the ladder.\n\n\"Maybe I should boost you up, instead of holding the ladder,\" Emma advised with a tentative quaver in her voice betraying her discomfort with this game she was regrettably playing as he ascended to the upper rungs.\n\n\"I think I can, ahhh,\" Kel assured when suddenly two widespread hands braced against his muscular butt cheeks.\n\n\"Does this help?\" his conniving mother asked suggestively, closing her eyes with sorrow while boldly grasping at his meaty flanks pretending she simply needed a better grip but sending a different message entirely.\n\n\"Ohhh, um, that's enough. I got it,\" our confounded son yelped at her illicit touch, quickly grabbing the suitcase within easy reach and practically falling off the ladder in his hurry to get down.\n\n\"I knew you could do it, my big strong man,\" Emma gushed with genuine pride in our helpful young man.\n\nKellen stood confused but pleased by his strange acting mother's praise, basking in the glow of her compliments when she suddenly pulled him in for an aggressively affectionate hug.\n\n\"My, my, feel those muscles. They're so hard. You really are mommy's big strong man, aren't you?\" she purred flirtatiously, testing the sinew of his broad back in her hands while embracing him for a long minute and perceptibly pushing her hips into his pelvis with indiscreet intent.\n\nAfter a moment, Emma looked Kellen searchingly in the eye, passing a message of inappropriate longing she wasn't sure he'd pick up before kissing him on the lips just a second longer than proper.\n\n\"Okay, handsome, don't you have some homework to do?\" she immediately reverted to mother mode, but left one more indelible impression on our perplexed son as he headed into the house.\n\n'Smack!'\n\n\"Now, get your cute butt in there,\" Emma scolded lightheartedly with a gentle slap on the ass as he ineptly walked away.\n\nStunned at his mother's bizarre behavior, Kellen was left clueless about what was going on but undeniably sensed the amorous effects of her unspoken overture with his impressionable young cock twitching faintly in his shorts.\n\nAs Emma described it later, it was just another unthinkable step taken as she regressed further into becoming a 'temptress mother,' as was every premeditated move to follow.\n\nLater that night, Emma and Kel ate dinner together, with Kerri yet to arrive home from her volleyball match. Mother and son were seated on the couch in the den watching a movie in a normal enough setting. Emma had changed from the sundress she wore earlier in the garage, as each outfit she wore now had an express purpose.\n\nEmma was dressed in a sleeveless button-down checked blouse, and as was becoming usual, the top three buttons were unfastened. While the blouse was relaxed, the fabric itself wasn't so loose that it was quickly obvious she wasn't wearing a bra, and Emma always wore a bra around the house -- always!\n\nNow, in a nod towards Hank's obscene directive, that unwavering element of her prudent home attire was clearly missing. Kellen sat to his mother's left, with the overlapping side of the cotton blouse most certainly presenting a plentiful view of the insides of her big braless tits, if positioned correctly.\n\nOur careless son's inquisitive green eyes wandered surreptitiously to his right every few moments, with his calculating mother purposely positioned correctly for a generous eyeful of alabaster flesh.\n\nAccompanying her suggestive top, Emma donned a pair of not overly scandalous cotton shorts that still exhibited a tremendous span of her taut shapely legs, unadorned by so much as even socks on her bare feet. Her chestnut hair was held in her standard ponytail with her black-framed glasses necessary to view the program.\n\nKellen hadn't changed clothes at all, leaving plenty of flesh touching flesh as they sat watching the show. Innocent really, and other than the light clothing, lack of a bra, and their bare arms and thighs pressing casually together, it really wasn't significantly different than any other family home evening.\n\n\"Hmmm, getting sleepy. Let me rest against you, Kel,\" Emma murmured, bringing her feet up beneath her bottom and leaning into our son setting her torso against his chest.\n\nThe move necessarily shifted Emma's weight, lodging her substantial left breast against his ribcage, with her unleashed melons a heavy and heavenly mountain of flesh that were difficult to ignore.\n\nKellen was no different than any other male experiencing the delightful pressure of my wife's jello-y tits reposing against his body, however, unaccustomed to such familiar contact with his respectable mother, he squirmed just a little while allowing her to settle in just right.\n\n\"Oh, that's nice, Kel. You're so warm and comfortable,\" she sighed charmingly, with the words themselves not so alluring, but with a tone that was obsequiously adoring and a touch fresh, and at the same time imparting the full effect of her heaving breasts on our rattled son.\n\nFurthering her intent, Emma's head rested dreamily on his shoulder and her hand dropped lazily to his bare thigh. Nothing provocative, but the contact alone was a small step towards breaking down barriers of intimacy between them.\n\nIn her reclining position, the top of Emma's blouse gapped widely, and under any other circumstances, she'd close it immediately. Not that night, leaving it purposely agape enticing Kellen to glance at the creamy tops of her unclad tits.\n\nWhen his eyes drifted down and stuck there, ignoring the movie, she knew she'd hit another mark. Kellen was getting a heaping helping of her healthy jugs and intoxicating cleavage -- possibly to the pinkish rose rim of her wide areolae, although of that she wasn't certain.\n\nThe two stayed that way until the end of the movie, making no other moves, but the damage was done, and Emma had slipped another notch in the pantheon of her decency.\n\n\"Good night, Kel. Thanks for playing mommy's pillow,\" she offered, hugging him tightly against her mashed bare breasts before sending him to bed with an edgy remark perilously close to sounding risqu\u00e9 if tweaked just a little.\n\nThe week progressed in this manner, and I'm guessing Emma did her best keeping her seduction of Kellen from our maturing daughter's increasingly worldly eyes. If Kerri noticed anything, she didn't say, although she must have caught her reserved mother once or twice surprisingly without a bra.\n\nSuggestive touching, prolonged hugs, kind but suggestive compliments about his developing body and build -- each day Emma directed more and more salacious behavior towards our unsophisticated son, prepping him for the dreaded day when she'd spring her trap in the preposterous form of an overt sexual proposition.\n\nOn Thursday, Emma really cranked up the heat, pushing boundaries she'd never imagined by displaying herself in a very unmotherly way to our bewildered young man.\n\nKel had baseball practice that afternoon and wasn't expected until past 5:00 p.m., just before dinner.\n\nAs common in the network of local mothers, Emma received a text from the mother of another player informing her the session was canceled, so on the spur of the moment apprehensively put into action a plan she'd plotted lying awake during a sleepless night pondering how to accomplish this impossible goal set by Hank.\n\n\"Bottoms up,\" she said presciently before slugging a rarely consumed mid-afternoon shot of whiskey for courage before initiating the scheme.\n\nAround 2:15 p.m., Emma grabbed a miscellaneously composed load of dirty clothes to take to the laundry room. It didn't matter the content -- colors, whites, permanent press, that wasn't the point of the exercise.\n\nJust before closing the lid, she unfastened the button on her designer jeans, stripping them off to throw in the wash before pulling the baggy shirt she wore and tossing it in as well. Adding the detergent and applying the settings, just as she hit the start button, she heard the front door open and close, just as expected.",
        "Bracing herself emotionally and closing her tense green eyes momentarily to gather her calm and strength, she stood at the doorway to the laundry room dressed, or more accurately, undressed for her most daring move yet. Frilly black lace French-cut bikini panties and an ivory silk chemise were the only things separating Emma from the bulging eyes of our soon-to-be shocked 18-year-old teen.\n\nThe panties were cut high on her broad hips, pulling the crotch neatly against her shaved pussy and dipping extremely low up front such to only cover her mons. The back panel was almost non-existent, climbing up her ass crack exposing most of her white butt cheeks.\n\nIt wasn't technically a thong, but it may as well have been.\n\nThe sheer top was just as scandalous -- a brief midriff chemise barely covering the full mounds of her prodigious breasts, with the cloth pushed outward by their tremendous size imprinting her taut nipples against the silk fabric leaving her rounded tummy exposed and a hint of under-boob peeking from beneath the brocaded hem.\n\nHonestly, a professional lingerie model couldn't have done a better job for pure audacious sexiness, especially as Emma has the voluptuous body to pull it off, making it tastefully alluring without looking trampy.\n\nFootsteps rambunctiously rambled down the hall, drawing closer with each step and heading for the kitchen located next to the laundry room.\n\nNervous energy raced through Emma's tremoring body and her breath grew rapid with tension at the show she had planned. Quickly, she composed herself, standing tall and squaring her shoulders bravely pushing her mammoth tits forward in setting her most remarkable assets on unmistakable display.\n\n\"Mom, I'm home,\" Kellen's voice rang out as he turned the corner into the kitchen looking for an afternoon snack.\n\n\"Oh, Kel, home already?\" she called with practiced surprise, anxiously drawing his gaze as intended. \"I wasn't expecting you until dinner time.\"\n\n\"Hey mom, uhhhhh,\" he replied, freezing with the words halfway out of his mouth, gawking openly at his nearly undressed mother standing at the entrance to the laundry room.\n\n\"Oh, ummm, I was just doing laundry,\" Emma stuttered, staying in place despite her internal upheaval, other than drawing her hand to her mouth pretending to be caught off-guard and staring directly at our stunned youngster.\n\nKellen was too shocked to speak and too paralyzed to move. His prudish mother was standing half-naked in just a skimpy pair of lacy panties and a barely-there top. Our sheltered son had never, and I do mean never, seen her dressed in anything remotely so revealing.\n\nMy conventional wife always took great care never to be caught in her underwear anywhere in the house. She changed clothes in our bedroom behind closed doors, and just as with her previously essential brassiere, wouldn't dream of even a quick jaunt to the linen closet wearing only a top and panties.\n\n\"I thought practice ran until five, and I wanted to get the laundry done before then,\" she said by way of explanation, desperately trying to be nonchalant while turning towards our dazzled son intentionally granting him the full picture.\n\n\"Uhhh, cancelled,\" Kellen replied haltingly, unable to remove his bugging eyes from his disrobed mother and not understanding why she did nothing to cover herself.\n\nKellen had never seen so much exposed flesh in his life, seeing his appealing mother's long toned legs rising intriguingly to her meaty hip bones, the padded pale flesh of her curved tummy centered by a cute bellybutton, and even a hint of the sloping bottoms of her half-escaping tits.\n\nIt was all there right before his gaping eyes, and he simply couldn't look away, exactly as she intended.\n\n\"Oh, I see,\" Emma answered, spreading her hands in a gesture of recognition purposefully designed to shimmy her gelatinous melons beneath the thin chemise, sheer enough for the faint impression of her dusky rose areolae to be visible.\n\nKellen marveled at the near nudity of his mother. He'd never imagined her this way, and never thought of her sexually, at least not until just recently with her unusual behavior. She was always just 'mom,' and the idea of her without clothes was completely foreign.\n\n\"Oh, look at me, half-naked. I'm sorry, I should put something on but there's nothing here. I wasn't expecting you until later so threw my clothes in the wash with the load,\" she apologized cleverly, for the first time acknowledging her minimal state of dress but excusing rather than doing anything about it.\n\nAs if to emphasize the point, but really just to give him a good look from another angle, Emma turned her back to him pointing at the load running in the washer while giving our dazed son an unobscured view of her ripe, alabaster cheeks, with the plentiful half-moons roundly displayed in all their glory resting above the long stems of her graceful legs.\n\n\"I hope you don't mind,\" his astonishing mother followed, turning on the coquettish charm and giving her capacious glutes a gentle wiggle while forming a 'come hither' smile on her face.\n\nKellen shook his head dumbly and only continued to stare straight at his taunting mother's delectable ass.\n\n\"Since you're here, help me out. Grab that stack of your shirts and take them to your room,\" she asked, adopting a motherly tone, and pointing at a neat pile of clothes further inside the laundry room on a folding table.\n\nThe change in her voice broke his trance, recognizing the 'do your chores' inflection sending him into his deeply ingrained 'responsible son' upbringing. It also meant he'd need to get closer to pass his authoritative mother in the doorway -- a moment certainly uncomfortable for our baffled young man, and for Emma too, even as the instigator.\n\n\"Ummm, yes ma'am,\" Kellen respectfully answered, tentatively walking towards her as she stood unmoving, with her incredible body steadfast and merely inches from his own, letting him sidle past her statuesque form.\n\nAt that proximity, there was no hiding the prominence of his stoic mother's involuntarily stiffening nipples poking through the lightweight chemise.\n\nThe doorway was narrow enough that even taking great care to avoid contact, Kellen's muscular chest couldn't avoid brushing against his shallowly breathing mother's outthrust chest, looking her awkwardly eye-to-eye in silent awareness of the illicit contact.\n\n'Huh,' our agitated son exhaled, sensing the soft plushness of his mother's glorious breasts pressing against his shirt, with her extrusive nipples seemingly drilling into his chest as he passed.\n\n'Whew,' Emma released a quiet exhale of her own at the intimate contact, exchanging a knowing gaze attesting to their mutual understanding of the licentious impropriety of the act as a shiver of erotic energy ran through her body.\n\n\"Thank you, Kel. You're such a good son,\" she promptly returned to 'mother mode' again, turning with eyes briefly closed in remorse for the impure exhibition but giving her ass an exaggerated swivel sashaying through the kitchen as she left to end the immoral interaction.\n\n*****************\n\nAs she told it, the next 24 hours were relatively quiet. Kellen was gone most of the day for an away game and didn't arrive home until after dinner. This was the night she'd texted me they'd touched, feeling each other up. I had the worst image in my mind of Kellen and Emma going at it groping tits and ass and who knew what else.\n\nWhat I learned upon my arrival home was that it wasn't nearly as naughty as I'd feared.\n\nBraless in a loose t-shirt and fashionable shorts, Emma took every opportunity to press her body against his muscular form, aggressively pushing her pelvis into his crotch with a welcoming hug or letting her freely jostling breasts flatten against his back pretending to lean over his shoulder retrieving a plate from the table as he ate a late dinner.\n\n'Accidentally,' she touched his crotch when pretending to reach for his lap to retrieve his napkin and squeezing his soft cock as she did, releasing him before he even knew what happened. A moment later, she 'jokingly' placed his palm on her bottom and held it there, asking him if she was getting fat in a ridiculous ruse.\n\nApparently, he didn't get to cop a feel of her unbound tits, although that inglorious event was just a matter of time. It was really pretty tame, all things considered, but even then, it was abnormal behavior for Emma, and she let slip the simple touching had generated a warmth in her pussy she couldn't explain, leaving her confused and discomfited.\n\nOn Saturday things picked up, as Emma's little sister Betsy showed up in the early afternoon to chat, once again sitting in the backyard sharing glasses of wine.\n\n\"Let's take a quick dip,\" Emma suggested to cool off after some time in the hot sun.\n\nAs they emerged from the pool after a short swim and splash, Betsy studied at her sister in the drenched bathing suit.\n\n\"Jeez, Emma, are you shaving down there?\" my wife's straightforward sister commented incredulously, catching a glimpse of Emma's wet bottoms and the obvious cameltoe her labia created unobstructed by any pubic hair.\n\n\"Umm, yes,\" she sheepishly replied, quickly adding. \"It was just a lark, you know, to see what it felt like.\"\n\n\"Well, I can tell you what it looks like,\" Betsy pointed out. \"There's not much left to the imagination and that suit doesn't do much to hide your nipples either.\"\n\nEmma's suit wasn't transparent, but it wasn't padded either, so when wet it adhered to her body like a snug glove outlining her every curve and impression, including the steely buds tightened by the cool water.\n\nUnbeknownst to the oblivious sisters, Kellen was downstairs, spying through the backdoor as his tempting mother and spunky aunt dried off, keenly noticing the form-fitting bikinis and all they revealed. He couldn't help but feel a stirring in his loins at the sight.\n\nFinished drying, Emma and Betsy entered the kitchen, still chatting when they saw Kellen standing there.\n\n\"Oh! Hi Kel, are you getting hungry?\" his surprised mom asked good-naturedly.\n\n\"Yeah, uh, I mean, sure,\" Kellen sputtered, not looking up to speak his timid response, unable to pry his eyes from the delta between his mother's legs and the still-apparent cameltoe.\n\nBetsy nudged Emma, who suddenly realized she was giving our son quite a view of her covered pussy and erect nipples. Even then, she consciously paused for a moment, conveniently granting Kellen more time to ogle before finally covering up with a towel.\n\n\"Ok, dear, let me go upstairs and change then I'll make you something,\" Emma offered, pretending she hadn't caught his lingering attention to her crotch. \"Are you staying, Bets?\"\n\n\"No, I'd better change and get home,\" Betsy begged off, kissing, and hugging my wife and son with care, inadvertently smushing her generous breasts into her fixated nephew's chest to his undeniable pleasure, before throwing her clothes on over her bikini and leaving.\n\n\"I'll be down soon, Kellen,\" Emma called back while heading upstairs, feeling the intoxicating benefit of the wine and deciding to search her wardrobe for something alluring to wear.\n\nAs much as she hated to admit it, the opportunity to make clear-cut inroads on Hank's demand was too convenient to pass up. Besides, she was running out of time and her past week of provocative behavior had only laid the groundwork for a more aggressively persuasive approach.\n\nDeciding to dress down in more than just style, she found a loose, light cotton printed short skirt she thought was perfect for a warm spring evening. It was slit on the sides, so parted on her hip when she sat down, reaching only to mid-thigh on her long legs.\n\nFor a top, my judicious wife picked a semi-opaque, cotton button-down blouse in a chiffon yellow complimenting the print pattern in the blue skirt. Daringly, she left two additional buttons undone at the bodice to nearly mid-torso, and her flaccid nipples expressed themselves against the blouse but weren't obvious unless they became truly erect.\n\n\"Yeah, this'll get his attention,\" she addressed herself in the mirror, certain that when caught in the right light her prominent silhouette was visible and put to its best advantage.\n\nWhile the skirt was designed to wear with something underneath, Emma indecently wore no underwear at all -- bra or panties. It made showing off some skin, or even access if things went that far, much easier. Adopting a freelance style, she wore no shoes either, preferring a comfortable barefoot approach.\n\nFinally, she pulled her hair into her usual ponytail tied with a yellow ribbon and did a light touch up on her make-up -- nothing suggestive or slutty, just enough to highlight her features and particularly her full lips, giving the lush petals a seductive appeal just begging to be wrapped around a hard cock.\n\nEmma looked good -- natural, casual, and certainly more 'carefree' than she'd ever dressed around the kids, even now as adults. Bracing herself for the evening ahead, she exhaled and collected her jumbled emotions. The wine helped and she planned to drink more.\n\nEven with the fortification, however, Emma was nauseated and remorseful about what she had to do.\n\n\"How does one seduce their own son?\" she plaintively asked, joking to ease her stress. \"It's nowhere in the Mother's How-To Manual.\"\n\n\"I'll just play it by ear, but I dare not push too hard or I'll scare him off,\" Emma determined, with no grand plan.\n\nSince she also had no specific goal for the evening, she resolved to just go with flow and let events take their own course, with a little nudge here and there as needed. Wisely, my smart wife recognized that advancing her obscene proposition too aggressively ultimately worked against her and be a disaster to fulfilling Hank's deviant order.\n\nOn the other hand, Emma mentally prepared herself to take things as far as possible, even all the way, if Kellen was willing and not totally freaked out by the idea of fucking his mom.\n\nA chill ran up her spine at that prospect, but Emma calmed herself, putting it out of mind to deal with later, if the situation arose. At the end of the night, she'd re-evaluate her position and Kellen's reaction, then determine the next step in her outrageous seduction and their impure mother-son relationship going forward.\n\nKellen sat at the breakfast nook, still dressed for the warm day in loose shorts and a tank top, when his mother breezily returned to the kitchen with feigned nonchalance. He was barefoot too.\n\n'Mom's dressing so different lately,' our perplexed son observed quizzically.\n\nThere was no question she was braless, however, which she never did until just the last few days, as the pronounced bulge of her chest carried slightly lower on her frame than usual.\n\n\"Grilled cheese?\" Emma inquired, hoping not to work too much.\n\n\"Sure,\" he replied without thinking about the perennial favorite meal.\n\nAs Emma got out the fixings, she reached for another bottle of wine and poured a glass, needing the reinforcement of the relaxing alcohol.\n\nThen, figuring 'why not?,' she turned to Kellen.\n\n\"Kerri's out for the night and your dad is out of town, so I guess you're the man of the house. Would you like a glass of wine?\" his amenable mother informed him in making the startling offer.\n\nIt was another precedent, but Emma assumed it might make the whole evening easier if Kellen was a little tipsy too, but not too much. She knew getting him sloppy drunk wasn't helpful and the mother deep inside also didn't want him feeling sick in the morning. Just one or two glasses to loosen him up a little was sufficient for her plan to work.\n\n\"Um, yes, please,\" Kellen stammered, not understanding what was going on with his usually uptight mother, but not wanting to turn down the opportunity to drink either.\n\nHe'd never had wine before, but we liked it, 'so how bad can it be?' he reasoned, and it always put us in a better mood.\n\nOver the next few minutes, Emma pranced about the kitchen preparing the sandwich, with Kellen spying her every move from the sway of her skirt, the tone of her long sturdy legs, and even the playful bob of her cutesy ponytail.\n\n'She's pretty,' he realized, never noticing until now with her liberated behavior and revealing attire, although some of his friends made inappropriate comments he'd previously ignored, challenged, or dispelled.\n\nFrom the other side of the room, Kellen saw the light pass through his animated mother's skirt, outlining in shadow her shapely thighs, and more indiscreetly, he also caught the slope of her big loose breasts poorly hidden beneath her blouse.\n\n'They look bigger without a bra,' he observed shamefully, exhibiting a typically male response even he couldn't resist.\n\nEmma was aware of our son's eyes on her pleasing form. She felt so evil and immodest. Even then, she made a bold point of accentuating her movements, certain to emphasize the shifts of her body, enticing him and inviting his attention to her plentiful curves.\n\nThe whole sordid ploy was wrong, and it felt wrong, so in response she drank more wine, feeling a gentle buzz overtaking her nerves, with the alcohol hitting our inexperienced son too by the time his mother served up his sandwich.\n\nWinsomely, Emma leaned low, revealing a large amount of cleavage directly before his wandering eyes while placing the grilled cheese on the plate. She took her sweet time about it too, so Kellen got a generous eyeful of the deep fleshy valley, with the big jugs barely contained within the confines of the partially unbuttoned blouse.\n\nIn his increasingly inebriated state, our 18-year-old son gazed mesmerized by the sight of his mother's large boobs. It was the closest he'd ever been to seeing real-life naked breasts. He envisioned himself reaching down her top and touching them but didn't dare despite the alcohol and wanton nature of his mother's suggestive behavior.\n\nWhen Emma set the pan to soak in the sink, she purposefully bent at the waist to open the cupboard below with unbent knees, raising her short skirt high on the backs of her well-proportioned thighs, and almost to the swell of her round ass cheeks but leaving the pale globes just out of view.\n\nKellen was entranced and careless to look away, with the effects of the alcohol emboldening his stare. His clever mother knew it too, intentionally catching him eyeing her body and embarrassingly forcing him to avert his eyes from her plump bottom only well after getting busted.\n\nThe two talked politely over dinner about school and the team, but Emma was sure to always have the opening of her blouse as wide as possible displaying the swelling curvature of her breasts. Frequently, she touched him casually on the shoulder or placed her hand on his bare knee.\n\nBefore long, she artfully guided the conversation to a subject she had never broached -- girls.\n\n\"I know I don't ever ask you Kellen but is there a girl at school you're interested in?\" she started innocently, asking a tame question any mother might ask her teenage son.\n\n\"Me? Ummm, no one in particular, but sure, there are some cute girls around,\" he murmured, feeling relaxed from the wine, but still surprised by the question.\n\n\"You're able to drive, have you thought about dating?\" Emma pressed with a hint of sincerity to the question, following with motherly reassurance. \"You know, you can always talk to your mom and dad if you ever need advice.\"\n\nKellen's a good kid and knew where to turn if needed, but he awkwardly replied 'maybe,' remaining elusive and non-committal.\n\nWhen he was finished, Emma picked up the plates, once more flashing a generous amount of her full, unrestrained bosom and sauntering to the sink, swaggering her hips suggestively.\n\n\"Those can wait until later,\" she decided, extending another surprising invitation. \"Why don't I pour you one more glass of wine and we can sit in the family room and talk.\"",
        "\"Okay,\" Kellen answered agreeably, happy to spend time with his strangely free-spirited mother in her revealing outfit.\n\n\"Let's listen to some music. There's never anything on TV on Saturday night anyway,\" Emma offered with a cheery lilt designed to hide her discomfort at her wicked intent.\n\n\"We don't get too many chances to talk when it's just the two of us, alone,\" she added, speaking in a slow, hushed tone emphasizing the obvious fact they were alone.\n\nIn the family room, Emma let Kellen pick some music he liked.\n\n\"Not too loud though or we won't be able to hear ourselves talk,\" she advised parentally, setting the stage.\n\nKellen sat on the sofa, but his forethinking mother deliberately sat in the easy chair facing from the right, rather than sitting directly next to him, but remaining within touching distance. The next part of her brazen plan was designed to give our unsuspecting son an 'inadvertent' show and sitting in his line of sight allowed her to 'accidentally' flash him.\n\nWhat Emma hadn't counted on was that at her angle she also had a good view up Kellen's pant leg. Respectfully, her initial impulse was to avert her eyes, knowing he preferred the freedom of boxers and wasn't aware of the unintended exposure of the loose fit.\n\nWhile she couldn't see anything at present, she guessed that at the right angle the open shorts might afford her an accidental flash too, and the realization of that indecent prospect sent a disquieting and quite improper shimmer through her body.\n\nListening to some current pop band in the background, mother and son sat in the family room and conversed while drinking wine. As they did, Emma's questions became strikingly provocative and ever more personal.\n\n\"You said there are some attractive girls at school, Kel, do you think about sex?\" my prying wife inquired venturesomely, straying into areas she'd never talked about with the kids, at least until recently with Kerri, for obvious reasons.\n\n\"Well, uh, sure,\" Kellen replied tentatively, embarrassed by the question, but with the warm feeling of the wine prompting him to answer.\n\n\"Have you had sex, Kel?\" she quizzed, suddenly acting the alarmed mother not wanting her son to grow up too soon.\n\n\"No, of course not!\" he denied strongly, genuinely caught off-guard by the presumptive question. \"It's just, you know, me and the guys talk about it.\"\n\nEmma was relieved in an ironic reaction considering all she was trying to accomplish in satisfaction of my deviant boss.\n\n\"You mean, you talk about the girls at school, like, which ones are hot and that type of thing?\" Emma pressed onward, curious while trying to sound cool.\n\n\"Sure,\" Kellen replied, limiting himself to the one-word answer, while confused and uncertain where this was leading.\n\nUncomfortable with the intrusiveness of the probe, but committed to her task, my cautious wife pushed the discussion in an increasingly taboo direction.\n\n\"Do you talk about the lady teachers? The 'MILFs,' I think you call them?\" she inquired directly, seeking his own level of understanding by employing what she considered a disrespectful acronym in her proudly feminist worldview.\n\n\"Mom?\" Kellen questioned at the odd line of inquiry and surprised she even knew the term 'MILF,' but it did give him a sense she considered him an adult.\n\n\"I'm just curious. I know some young men prefer us older ladies,\" Emma girlishly retorted, slipping in a playful comment including herself to aid her intent.\n\n\"Yeah, a few of them, I guess,\" he hesitated, gullibly not picking up on the allusion and uncertain if he should say what he did next but taking the chance considering his mother was asking the questions.\n\n\"Mrs. Green is hot,\" he answered, throwing caution to the wind under the bizarre inquisition.\n\n\"Really? She's probably what, in her mid-30's?\" Emma asked in response, not truly shocked but pretending to be anyway. \"I'm surprised you're attracted to a woman that age, but I can understand why. She's very pretty.\"\n\nMy actively involved wife had met Paget Green, Kellen's biology teacher, at a parent-teacher conference. The raven-haired teacher was gorgeous, with her finely chiseled facial features topping a long, lithe body possessing sculptured curves in all the right proportions and all the right places.\n\nEmma now shifted in her chair, pulling her legs to the cushion in a slow, deliberate manner hiking her skirt up her legs and exposing more of her thighs, all the while acting as if she was completely unaware.\n\nKellen squirmed on the sofa as well, discreetly adjusting his shorts to a more comfortable position.\n\n\"So, have any of your friends ever said anything about me? Do they think I'm, well, a MILF?\" she asked, devilishly employing a purposefully impish giggle at the evocative leading question.\n\nMy intrepid wife boldly strayed into dangerous waters, but she wanted our son to think of her as a sexual attraction to young men and not simply as his mother, so she took the risk.\n\n\"Mom!\" Kellen started with surprise.\n\n\"Well, why not?\" she protested gamely. \"I'm not just your mother. I'm a woman too, you know.\"\n\nKellen considered the immodest query and then, in the spirit of the increasingly ribald evening, confessed the truth of his prurient conversations with his buddies.\n\n\"Yeah, my friends talk about you. You know, about your looks and stuff,\" our son admitted warily.\n\n\"And stuff?\" his mother pressed, hoping for him to speak his mind and talk about her other female attributes.\n\n\"Umm, well, your, uh, body and like that,\" he mumbled, ashamed to mention such thoughts about his beloved mother.\n\n\"Oh, that kind of stuff. Really? That's interesting,\" Emma sighed, a little flattered and definitely intrigued.\n\n\"Brian thinks you're hot, and, one of my friends even said, 'your mom has a great rack,'\" Kellen volunteered, emboldened by the frank discussion in his wine-fueled bravado,\n\n\"He even told me to my face how much he'd like to 'get into your pants,'\" he candidly admitted, unbidden and pushing into new territory.\n\n\"Well, the audacity!\" Emma gasped, genuinely surprised and feigning disapproval, but her heart fluttered from the compliment, and also her arousal at the youthful praise.\n\nEmma had only taken their talk in this direction for effect, not really expecting to learn our son's horny friends had such indecent thoughts of 'kindly' Mrs. Tyler, whom they'd known for years. Still, it was beneficial to her deceitful plan, so she tucked away the valuable information for future reference and moved ahead with her immoral scheme.\n\nAs they talked, Kellen kept sneaking looks at the expanse of his mother's creamy inner thigh leading perilously to the edge of her skirt, improperly available for his viewing. Emma simply drank her wine, pretending not to notice while shamefully titillated by his furtive glances.\n\n\"Kel, do you ever look at porn on the internet?\" she asked as the chat became more intensely sexual.\n\n\"Uhh, yeah, most guys do,\" he paused, afraid to answer before defensively admitting the truth.\n\n\"What type of girls do you like to look at online?\" his inquiring mother ventured, not chastising him but instead probing deeper as the wine left the two more open and willing to tell all.\n\n\"I mean, do you ever check out the MILFs? Do you have any interest in older women? You know, women my age?\" Emma pushed, deliberately steering the direction of the discussion to the salacious topic.\n\nAs she asked the question, his newly wanton mother seized the moment to shift again in her chair, this time uncoupling her legs and adjusting them to the left one at a time in a casual manner. In doing so, she left a slight gap between her thighs for a brief second before pulling her feet up to the cushion.\n\nWith her skirt high on her thighs, Emma was certain she had just crossed a new line by giving our son an unmistakable view of her shaved pussy. Not for long and just a glimpse, but certainly enough for him to realize what he was seeing.\n\nOf course, she acted as though she had no idea, but it didn't take her long to confirm the flash of her uncovered snatch had indeed caught Kellen's observant eye by the way his head reflexively jerked, and his eyes froze in place.\n\n\"Uh, yeah, I look at them, um, sometimes. Some of them, uh, look great,\" he conceded self-consciously, managing to pull his wide eyes back into their sockets and struggling to form the words to his answer.\n\nAnswering this type of question from his mom was weird and Kellen was unsure what was happening, but he was certain he'd just seen his mother's bare pussy and was so stunned he almost couldn't digest the image.\n\n'Why isn't mom wearing any underwear? What's going on?' he asked himself, bewildered by the prospect, certain she'd shaved down there.\n\nKellen had seen enough bald pussy in the porn he viewed, bit that was for sluts and porn queens. In his unsophisticated mind, our incredulous son simply didn't expect it from his own sainted mother.\n\n\"Really, what is it you like about them?\" Emma questioned interminably, forcing Kel to vocalize his sexual desires.\n\n\"I don't know,\" Kellen shrugged, uttering words typical of an embarrassed 18-year-old guy when confronted by an uncomfortable situation. \"They're more grown up, I guess. You know, they have more, um, curves.\"\n\nEmma didn't let up, pushing our insecure son in a difficult direction for his youthful emotions.\n\n\"Curves, huh? You mean, breasts?\" she scoffed, playfully raising an eyebrow.\n\nKellen was clearly out of his element under the bizarre inquisition from his mother, and between the wine, the questions and the undeniable crotch shot she'd flashed, he was aroused. Shifting again in his seat, he bashfully didn't want her to know about the awkward bulge growing in his shorts.\n\n\"Yes,\" our flustered son answered with a coy grin.\n\n\"So, you're saying you like the older women because of their big tits?\" Emma alleged, purposefully lewd hoping to shock him with her bold language while smiling alluringly with a toying look in her eye.\n\nManipulative and sexually assertive in a manner previously unthinkable to our unwitting son, she incorporated the coarse term to assure Kellen he wasn't in trouble or that the conversation was unacceptable. Nonetheless, his eyes popped wide with shock, and was obviously too embarrassed to answer.\n\nIt was just the reaction Emma wanted and despite his efforts to conceal it, my mindful wife noticed the tightness in his shorts as a sure enough indication of her progress in continuing the depraved game.\n\nPointedly, she decided now was a good time to press her advantage, uncrossing her legs in a deliberately slower manner than the first time, intentionally affording Kellen another unhindered view of her bald pussy, then moving next to him on the sofa.\n\nAs she did, she dipped low giving another good shot of the cavern between her generous melons, barely hidden behind her loosely buttoned blouse.\n\n\"Your wine is gone, and I'm not going to pour you another glass, but why don't we share the rest of mine?\" she offered, sitting to Kellen's right, and noticeably pressing her voluptuous body against his own.\n\nPuzzled and more than a little addled, Kellen took the glass from his mother, unintentionally brushing his bare arm along the soft, full curve of her large left tit through the thin cotton fabric. The contact was brief and unexpected, with his eyes widening and gulping openly at his miscue while quickly grabbing the glass for a drink.\n\nEmma was also affected by the inadvertent touch against the side of her unencumbered breast, sending a shiver coursing her body and goosebumps rising on her skin. Perceptively, her areolae unmistakably tightened, with the reaction surprising Emma, as her own arousal was the last thing she expected from the shameful seduction of our son.\n\n'It's gotta be the wine,' she rationalized, unwilling to accept any other explanation, and regaining control of herself.\n\nReturning to her nefarious mission, my wife leaned against the back cushion putting her giant chest on its best display.\n\n\"This is nice, isn't it? Just the two of us together, listening to music,\" she sighed, setting her hand on his back and lightly rubbing his strong muscles. \"We don't ever get to talk, especially about important things.\"\n\nSitting side-by-side and arm against arm, the proximity of their bodies kept Emma's nipples erect, and if Kellen had looked, he'd see the fine points poking through the material of her thin blouse. Instead, he was focused elsewhere, as his mother's skirt rose high on her thighs, almost to her lap, and if it crept much higher her pussy would be fully in view.\n\nSwallowing deeply, summoning her courage to make that possibility more likely, his intractable mother's legs slackened apart immodestly, leaving the landscape of her pale inner thighs available to his wandering eyes only a foot away.\n\nStudying Kellen's puzzled expression staring at her thighs, Emma knew she was exposed and that she should cover herself. What she was doing was wrong, enticing our son with her bountiful body, but she did nothing to correct the disgraceful display of illicit flesh or to prevent him from looking as long and as closely as he desired.\n\nMy crafty wife studied Kellen's face peering indiscreetly at her crotch, noting he was quite handsome and grown-up. His arms were muscular and well-defined as a result of his weightlifting for his sports activities and a patchy but clean-shaven beard had developed on his chin.\n\n'How can I do this to him? Take his innocence?' she asked herself, battling her conscience internally through a stream of unanswerable questions. 'What kind of sick man forces a mother to seduce her son? How can I live with myself?'\n\nSnapping herself from her pity before she sank irretrievably into doubt and melancholy, Emma returned her attention to the task at hand. She had come so far, and she needed to see how far she could go or else lose the momentum.\n\nEmma had broken a visual barrier by exposing her bare pussy to our 18-year-old son and knew she needed to break a physical barrier as well. To accomplish that unthinkable feat, she judiciously set upon continuing the salacious questioning.\n\n\"So, you and your friends like women with big knockers?\" Emma asked crudely, turning the language as naughty as possible keep the lewd nature of the discussion in high profile, but receiving no response from our flummoxed son.\n\n\"C'mon, Kel, spill. Who told you I have a 'great rack?'\" she pursued his earlier admission, girlishly raising her plucked eyebrow to demonstrate her curiosity.\n\n\"Well, it was Tim,\" Kellen said after hemming and hawing for a moment.\n\nTim Bradley is our son's best friend living down the street. The same age as Kellen at 18, Emma had known him since he was a kid, and even served as the den mother for their scout troop. She still thought of Tim that way, when obviously he was now an adult too.\n\n'Maybe it's time to change my point of view about Tim Bradley,' she reflected indecently.\n\n\"Really? Tim thinks I have a great rack?\" she teased, openly expressing her surprise and teasing Kellen outright about the perceived misdeed. \"Why, I should talk to his mother about him having such dirty thoughts.\"\n\nWillfully, Emma sat upright, pressing her chest against the tightened blouse so her erect nipples were unavoidable, with the shape of her large melons neatly defined by the contours of the thin fabric. The inside of her generous right boob was easily visible through the gap left by the open buttons.\n\n\"What about you, Kel? Do you think I have a great rack?\" his saucy mother brashly inquired out of the blue.\n\n\"Mom!\" our astounded son exclaimed, but his eyes betrayed his untoward interest, immediately drawn from her scantily covered lap to her outthrust chest just as she intended.\n\nOvertly, Emma's hard nipples figuratively poked holes through the front of the flimsy material of her chiffon blouse, and there was no hiding her excitement as the scandalous exhibition.\n\nDisgracefully, the naughty questions, the deliberate display of her pussy, and now conspicuously pushing her impressive chest outward for Kellen's benefit while asking his opinion of her tits, were all erotically charged acts spreading the warmth of arousal throughout her body.\n\n\"I just want to know if I match up to the MILFs you see online,\" she elaborated shamelessly. \"Tim must think so, and I just want to know if you do too?\"\n\nEmma made it seem so perfunctory and harmless, instead of a shameless, sexually ignited way to force our son to examine her expansive chest and make him confess that he liked his beguiling mother's big tits.\n\nHesitating to answer the unusual question, Kellen still couldn't peel his eyes away from his mother's giant melons, with her thick eraser tip nipples pressing through the shirt right before his eyes. Knowing he had to say something, he decided to tell the truth.\n\n\"Yeah, mom, you have a great rack,\" he announced, cautiously using the demeaning phrase while entering unknown territory.\n\n\"Well, thank you,\" she replied endearingly, listening with great interest when he spilled more insight than requested.\n\n\"They look as big as any I've seen on the web, except for the freak job women with fake boobs,\" he added unsolicited by way of explanation, although not quite using the same naughty language his mother had employed.\n\n\"Well, I promise you Kel, these aren't fake,\" Emma responded proudly, making the comment an unintended challenge by momentarily boosting the immense globes from beneath with her hands as a shelf.\n\nKellen's eyes bulged at the unexpected presentation and fidgeted in his seat with the bold presentation.\n\n\"I didn't think you'd know fake tits from real ones anyway. Does it really matter?\" she pressed, continuing the use of her bawdy anatomical slang.\n\n\"Yeah, it matters! I can tell just by looking at them and, um, I can tell yours aren't fake,\" he declared presumptuously with a touch of bravado in his knowledge of such adult things, fueled by the glibness of the wine coursing his veins.\n\n\"My what, Kel? You mean, my tits?\" she prodded deliberately, forcing him to use the salty language in the context of speaking about his esteemed mother's breasts.\n\n\"Y-yes,\" he stammered tentatively, contemplating the consequences of using the disrespectful word about his mom.\n\n\"Then say it, Kel. I've always taught you to speak your mind, so say what you mean,\" Emma chided forthrightly, not backing off in her determination for our deferential son to use the word to her face.\n\n\"Um, your tits, mom. I can tell your tits aren't fake,\" Kellen hesitated, gulping before finally saying the word.\n\n\"Really? Are you so sure? You haven't even seen them, yet?\" his cunning mother pounced, her last word foreshadowing a previously unimaginable promise as he fell further into her trap.\n\nCleverly playing with Kellen's youthful pride in his ostensive knowledge of female anatomy and driven by her unyielding need to protect our family by succeeding in completing Hank's depraved quest, Emma grew more brazen with each challenge to our chastened son.\n\n\"Besides, you really can't be sure if tits are fake unless you feel them. I told you mine are real, but how can you be so sure?\" she advised, smiling with satisfaction at her small victory in manipulating him.\n\nBaffled and hesitant, Kellen sat dazed as his wily mother twisted him into knots of confusion and doubt.\n\n\"Have you ever even felt a woman's breasts before?\" Emma asked with a hint of contrived exasperation, setting up her next daring move by exploiting his fear of exposure as a fraud, or worse, as just an inexperienced kid.\n\n\"I, uh, don't know, but, um, your tits don't look fake, and you said they weren't,\" he muttered sullenly, his pride wounded and defensively countering her query.\n\nKellen squirmed talking to his bedeviling mother about the inappropriate subject, searching for some bizarre rationale even as he subconsciously grew more comfortable using the cheapening 'street' name for her breasts.",
        "\"That's true and they aren't, but can you really believe me, or any woman for that matter, just because she says so?\" my assertive wife challenged, anxiously preparing herself for her next audacious gambit.\n\n\"But, you're my mom. You wouldn't lie,\" Kellen protested, bamboozled to the point he missed entirely where she was steering the impulsive debate.\n\n\"Sure, but other women might not be so trustworthy as your deal old mom. You can't be so naive in life, Kel,\" she sincerely imparted the motherly advice with a tongue-in-cheek twist. \"You've heard the saying, 'trust, but verify.' Until you see them and, well, touch and hold them, you can't really be sure.\"\n\n'Huhhh,' Emma paused, drawing a breath as the moment arrived for a brash, deliberate act -- one undeniably designed to cross the physical barrier on the path towards seducing Kellen, and as expected, she felt horrible.\n\n\"Kel, do you want to see them? Do you want to see my tits?\" his circumspect mother asked demurely, unsure of our wary son's response to the unusual offer but recklessly extending it in furtherance of her sinful objective.\n\nResolute in accomplishing her mission, Emma didn't wait for an answer, turning the question rhetorical by not giving Kellen an opportunity to come to his senses out of a deeply ingrained respect for his beloved mother. She knew that's exactly what he would do given enough time and she simply couldn't afford to let that happen.\n\nInstead, Emma swiftly undid the remaining three buttons on her blouse, pulling away the cloth covering her sizable breasts and gracefully removing the garment before Kellen's disbelieving eyes. Sitting fully upright, she proudly pushed her splendid melons forward to their fullest advantage.\n\n\"Oh-ohhh!\" Kellen gasped reflexively, truly shocked, and mesmerized, and simply unable to answer, never actually seeing real breasts before and certainly not his mother's spectacular pair.\n\nIn fact, until recently he'd never even seen her without a bra.\n\n\"So, do my tits look real to you?\" she bravely inquired, gazing directly at our dumbfounded son with his gaping eyes glued to her outthrust chest.\n\nWhile Kellen is inexperienced, he's not stupid. He has eyes. He knows his mom is stacked and that her substantial tits rivaled anything he'd seen online. Once, he even rummaged through her underwear drawer at Tim's behest learning just 'how big' they are, noting the '37DD' tag definitively revealing the illicit answer.\n\nNow, they looked even bigger than he realized, featuring a beautiful slope yet set prominently upright, full and round with her thick rose nipples perfectly drawn and erect, as if she were cold in the warm room, when in fact she was terribly aroused by her outrageous display.\n\n'Oh, my god, I'm showing my breasts to my son,' Emma screamed with horror inside, struggling mightily to remain outwardly calm as if this was no big deal.\n\nThings were moving quickly, and much faster than anything Emma had anticipated, but she knew Hank's ultimate goal and the clock was ticking, so decided to continue since she was making good progress.\n\nEmma's hands trembled apprehensively in contemplating her next drastic move. She had momentum on her side and Kellen at a disadvantage so, acting before she lost her nerve, my brazen wife took his hand in her and unsteadily placed his palm firmly under the base of her hefty right breast.\n\n\"Of course, you can't really be sure unless you touch them, um, feel them and squeeze them,\" she breathlessly explained in a voice sounding more confident than her fluttering heart would attest, and more importantly, signally it was okay to do those very acts.\n\nNow, Kellen was speechless, his jaw dropping with a frozen expression of astonishment while feeling the warm skin of his mother's enormous tit.\n\n\"Huh-huh, huhhh,\" he barely breathed, with the fleshy melon heavy in his palm and much denser than he ever imagined, yet at the same time, it was soft and spongy, spilling from his open hand.\n\nEmma wavered in her seat as well, also barely breathing and fighting the urge to berate herself and apologize profusely. Instead, she simply let him hold her huge breast, sorrowfully knowing she'd put it there, and frightfully, that it felt good.\n\nShamefully, in the past few weeks many people -- friends and strangers alike, had touched, held, squeezed, and bobbled her healthy jugs, with the inviting set a prime attraction to the lewd men. None of those sordid experiences, however, felt as bizarre as our curious son cupping her jiggling boob.\n\nIt was surreal and Emma felt out-of-body, as if watching him grope some other woman's pliable breast. Despite her angst and regret, she encouraged Kellen, fearing without it he'd shy away once recognizing how wrong it was for a son to touch his mother so intimately.\n\n\"Go ahead, Kel, squeeze my tit. Lift it and hold it. Get a sense it's weight. Do you see how it feels like jello?\" his mother edified, blushingly gave a lesson in gauging the quality of a woman's breasts.\n\nWondrous with awe, Kellen hypnotically followed her instructions as he had all his life, on autopilot earnestly squishing and jostling the magnificent pale globe.\n\n\"That's how a real breast feels, son. If it were fake, it would be hard and solid,\" Emma concluded, imbuing him with the confidence needed to believe that feeling her up acceptable behavior.\n\nGrowing secure in his education, Kellen tentatively squeezed her gelatinous mound, gently grasping the flesh between his fingers, but careful not to do so too roughly without knowing if it hurt his patient mother. Entranced, he scooped beneath the soft under-boob in fascination, lifting as she'd directed while assessing the weight of her ponderous melon.\n\n\"Go ahead, Kel, touch the other one too. They're both the same,\" she spurred sinfully.\n\nAs awful as she felt urging him to feel her up, Emma couldn't get past how nice his hands were -- warm and tender as he softly took her left breast as he had the right, gingerly massaging and curiously exploring her bountiful jugs.\n\n'He's so much gentler than those assholes,' she marveled internally with a perverse mother's pride assessing how Kellen played with her tits compared to the many aggressive cads of her recent past.\n\n\"Huuhhh,\" she involuntarily exhaled, increasingly affected by the caring examination, with difficulty controlling her breathing under the caresses but doing her best not to make any sudden movements scaring him off.\n\nInstead, Emma pushed forward despite her troublesome emotional tension, even as the depraved nature of the act remained ever-present in the back of her mind.\n\n\"It's okay to play with my nipples too, Kel. Tweak them, you know, pinch them a little,\" Emma invited in a welcoming tone. \"Most girls like that, just not too hard.\"\n\nAbsolutely lost in what he was doing, it was surprising he even heard his reassuring mother, yet alone followed her direction he was so focused on her expansive breasts.\n\n'Whew,' her breathing grew heavier with her chest rising and falling in time with each inhale and exhale.\n\nObediently, Kellen took the diamond hard nipples between his thumb and forefinger, compressing the sensitive nubs with a light touch sending a shiver up her spine. When she didn't flinch in pain, he increased the pressure on the taut buds, pinching and tugging as they tightened into dense points under his touch.\n\n\"Oooooh,\" she cooed spontaneously as a tinge of electricity sparked her rousing nipples despite her outward calm.\n\nEmma has exquisitely sensitive nipples and Kellen's tweaking her swelling tips incited jolts of arousal shooting throughout her torso. Even though it was our own enthralled son manipulating them so erotically, she couldn't help but develop a tingling wetness between her legs.\n\n'Oh my god, this is awful. This is my son. I shouldn't feel this way,' she bemoaned in silent alarm, terribly conflicted at the depraved act as his agreeable hands brought her to a heightened state of sexual excitement.\n\nYet, she did feel that way, engrossed in the pleasant sensation and unable to deny how good it felt, especially since Kellen was so respectful kneading her heavy breasts and not abusive like the many uncaring men mauling them as if disconnected from a real woman.\n\n'I need to break away,' Emma realized, becoming overwhelmed by the compelling sensation of his caressing hands.\n\nShe wanted this evening to go slow, hoping to tease and entice Kellen as Hank wanted, knowing full-well where this was leading in due time but not truly anxious to arrive and torn by the dire consequences to our family for failure.\n\n\"Whew, okay. I think you've got the idea,\" she assured, taking his hands into her own seeking to regain control and return to the whole point of the demented experiment in touching.\n\n\"So, now you know they're real, do you still think mommy has a great rack?\" my deliberate wife asked, pointedly referring to herself as 'mommy' in re-establishing her parental position, but also keeping the forbidden nature of the contact bubbling just below the surface.\n\n\"They're awesome,\" Kellen exclaimed in an awestruck guy's way with an inappropriate exuberance.\n\n\"Why, thank you, kind sir. Hopefully as nice as some of the MILFs on the internet?\" Emma replied politely with an affected grace, noting his ardent enthusiasm with a mix of sadness and self-satisfaction.\n\nIt was another rhetorical question, but Kellen heartily nodded in agreement.\n\n\"I wonder if Tim would think so? Maybe I should get his opinion too?\" his taunting mother ribbed, saucily suggesting the indecent proposition.\n\nEmma wasn't sure why she threw this last little tease into the conversation, but secretly the thought turned her on, and it was almost as if she was encouraging Kellen to tell his best friend about his mother's great tits to see what happened.\n\nSo sexually provoked by the taboo experience, the naughty idea of Kellen's handsome buddy fulfilling his lifelong fantasy of seeing and holding his modest, big-titted ex-scouting den mother's breasts in such a forbidden way held a certain appeal for Emma.\n\n\"Seriously, mom?\" Kellen impugned, unsure whether to believe his mischievous mother or not.\n\n\"Well, I'll have to think about that, but I'll bet he would,\" she responded tauntingly, keeping the prospect tantalizingly in reserve but also in the fevered mind of our rattled son.\n\nEmma now contemplated her next step, having broken the physical barrier letting Kellen play with her big, pillowy breasts, but sensing she needed to do something to reciprocate, as merely gripping his slack cock through his shorts as she had the night before wasn't nearly the same league of where things need to go.\n\nTerribly horny after Kellen's exploration of her responsive tits and wet between the legs, she thought briefly about introducing him more formally to her pussy just as she had her ample chest. Shamefully, Emma had little doubt that if she showed Kellen what to do with an erect clitoris, she'd find a much-needed orgasm even at the fumbling fingers of our inexperienced son.\n\nThat was rather self-serving however, and Emma understood her own gratification didn't necessarily aide in achieving her goal for the evening. Further, she was afraid of going too fast too soon, and sparking his principled conscience or worse, scaring him away.\n\nMy smart wife knew she needed to touch our impressionable son in an improper but sexually provocative way to really break through and create a sense of mutual trust and forbidden lust. Decisively, she acted, pushing Kellen's shoulders until pressed against the sofa cushion.\n\n\"Huh, what?\" he gasped, struggling briefly but easily overpowered in his befuddled and somewhat willing state, with his recent experience of holding his mother's breasts so overwhelming he didn't really resist.\n\nFacing Kellen, tensely breathing with the nervousness of her next move, Emma's gloriously large tits swayed before Kellen hypnotically, his dazed eyes never leaving the sight of her lovely breasts as she looked first into our sprawling son's unwavering eyes and then at his lap and finding exactly what she expected after her indecent teasing.\n\nKellen's shorts stretched obscenely at the seam with what looked to be a painfully hard erection, and with a wistfully coquettish approach designed not to unnerve our tottering youth, his toying mother delightfully declared her surprise at the impressive outline of the hidden column straining for freedom.\n\n\"Why Kellen James Tyler, did playing with mommy's big tits do that to you?\" she exclaimed girlishly, staring flagrantly at his obvious hard-on.\n\nKellen looked to the bulge at the front of his pants but said nothing, flushed with embarrassment and frightfully ashamed at becoming hard from the taboo act but paralyzed to inaction about what to do.\n\n\"I had no idea you found me so, um, arousing. I guess I must truly be a MILF. Is that what you want, Kellen, for me to be your MILF?\" Emma purred seductively, pushing to the extremes of propriety with the leading question.\n\n\"Ummm, mom, I, uhh,\" he stuttered and tarried, as horny as his topless mother after feeling and squeezing the forbidden playground of her ample tit flesh but unready for the implications of the disreputable acronym.\n\nAs an unsophisticated youth taught to respect and obey his virtuous mother, it was extremely awkward for him having her see his erection and drawing attention to it. Aware of his palpable distress, Emma brazenly assumed the role of the woman solving all his problems, just as she had his entire life.\n\n\"Well, that's asking a lot, I suppose, but I should at least take care of this for you,\" she offered surprisingly, nodding towards Kellen's straining cock.\n\n\"Huhhh?\" our startled youngster gasped in confusion.\n\n\"Mommy caused it, let mommy handle it,\" Emma prescribed, easily assuming her 'mommy' control again, along with the knack for double entendre she'd picked up from Hank.\n\nActing without thinking to avoid any internal recrimination before it took root, his mother assertively grasped the elastic waistband of Kellen's baggy shorts and tugged, removing them and his boxers to his knees before he even knew what happened.\n\nImmediately, Kellen's dense pole popped up and down, bouncing on his abdomen with its sudden liberation from the constricting pants.\n\n\"Ohhh mom! What are, um, I don't?\" he protested at an absolute loss for what to do at the unprecedented dropping of his drawers by his unusually aggressive mother.\n\nShocked and caught off-guard by her bizarre behavior but also pacified by a deeply-rooted deference to do as she said, our reeling youth did nothing to cover himself.\n\n\"Ohhh my,\" Emma sighed involuntarily, fixating on the solid meat pulsing before her eyes, her anguish and shame set aside momentarily, while deep down disgracefully pleased and secretly intrigued by our athletic son's remarkable tool.\n\nFueled by wine and her own growing arousal, Emma couldn't suppress an inappropriate mother's pride at his generous endowment, thinking his burgeoning manhood was good-sized for an 18-year-old kid. Nothing like Nate or Ike to be sure, but Kellen showed great promise.\n\nAs importantly, and although she'd never say this to his face for fear of insulting his masculinity, our maturing son's iron-bar cock was pretty.\n\nStraight and stalwart, it featured a rounded light purple crown and a hearty veined shaft with soft pinkish white skin anchored by two golf ball-sized testicles. The attractive package was nestled in a good growth of auburn pubic hair, much the same color as his sister's curly pussy fur.\n\nConveniently forgetting just whose cock she was admiring so appreciatively; Emma was very tempted to simply take the lovely member into her mouth, before quickly returning to reality.\n\nInstead, she fought back the need to cry at the prospect of improperly sucking our handsome young son's sturdy cock, recognizing that while it might not happen tonight, at some point in the very near future performing that awful deed, and undoubtedly many other unsavory acts with our trusting son, was necessary in pursuit of Hank's impure objective.\n\n\"You might want to take off that shirt, Kel, this could get messy,\" she advised in a distinctly maternal tone, again setting aside her outrage for the greater good of preserving our family.\n\nObediently, he did, exposing his muscular chest and six-pack stomach on equal display with his tensing pole in a compelling vision of masculine perfection inescapable to Emma as a woman, rather than as a mother.\n\nDeciding outright sex was going too far for Kellen's muddled brain, and unable quite yet to give our son the blowjob she knew was in the offing before long, Emma figured a handjob was sufficient to break the physical barrier of mother and son while letting her refrain from more sordid contact.\n\nDelicately wrapping her fingers around his throbbing shaft, the indecent touching sent a shiver through her restive body and also a jolt of discomfort up his reclining frame at the unwholesome nature of the contact.\n\n\"Ahhh, ohh, mom,\" Kellen winced almost as if in pain, with his hips jerking involuntarily to the electric pulse running from his pelvis to the farthest extremities from her unnatural grip.\n\nA queasiness overcame my wife as the taboo boundary was forever broken, but Emma fought her nausea back by concentrating on how nice his hard cock felt in her lightly clenched palm -- pulsing with vitality and youth, while soft, warm, and firm and so much nicer than all the older men.\n\nKellen merely stared at the unimaginable sight, frozen in awe and squirming with confused excitement at the indecent grip. No one other than himself had ever touched his cock, and certainly not when it was rock hard. Regardless, his mother's gentle fingers felt unbelievable and far better than his rough hand ever had.\n\nToo much better, perhaps, and it was probably best that Emma put off the blowjob for another time, because Kellen wouldn't have lasted a second within his mother's silken mouth.\n\nInstead, she encased his inflamed staff fully in her supple palm, languidly running her loose fingers along the solid length and drawing the ends gingerly around his purplish cockhead upon reaching the tip, then gently easing down his swollen shaft again.\n\nIt was a splendidly effective handjob in a caring display of maternal love completely in contradiction to the genuinely obscene nature of the act.\n\n\"Ohhh, oh mom!\" Kellen yelped, hyperventilating, and struggling to wrap his brain around what was happening.\n\n\"Relax, Kel, mom will take care of it,\" my compassionate wife calmly soothed, sensing his stress while fluidly drawing her fingers deliberately up his straining length and trailing lightly across his swollen crown again.\n\n\"Uhhh, ohhh,\" Kellen huffed responsively, watching her slender hand ply his pulsating shaft and perceptively torment his expansive glans, smearing the precum as a lubricant across the delicate skin to compelling effect.\n\n\"It's okay, son, mom will make you feel better,\" she repeated with motherly reassurance as if bandaging his wounds when he was younger.\n\nNot surprisingly, it didn't take long for 'mom to take care of it.'\n\nEmma's soft hand smoothly gliding along the sensitive surface of his thick staff, combined with her lilting voice of encouragement and the lewd sight of her sitting topless stroking him off created an unbelievably erotic performance making our apoplectic son no match for the indescribably taboo handjob.\n\n\"OHH, OOHHH, UUNNGHH!\" Kellen's ecstatic cry of release filled the room.\n\nJerking spastically, our contorting son shot a fountain of pearly white cum straight into the air, landing on his chest with a plop and dripping viscously onto his attentive mother's pumping hand.\n\n\"Uuunnhhh, uuhhh, oh mom, oh mom, I, uh, ohhh,\" he called as a second, and then a third long rope of rich, vital jism soon followed, spurting from the tip of his cockhead, with each burst not quite as high as the previous launch.",
        "Pleased and unnaturally fascinated by the strength of his youthful orgasm, Emma thoughtfully worked Kellen's gushing geyser, graciously guiding our son through the throes of his orgasm to the other side even through her own remorse at the perverse act.\n\n\"Ohh, ohhh, mom,\" Kellen moaned gratefully.\n\nCaring and considerate as always, his compassionate mother pleasantly caressed his still-pulsing shaft and rolling her palm luxuriously over the seeping cockhead extending the pure pleasure of the unusual experience until the powerful eruption ended.\n\nSecretly marveling at the sheer force of his prodigious load, his proud mother struggled to not smile at his virile capacity. Wide-eyed and impressed, Emma had mostly been with old men -- degenerates Hank required her to service, and she was simply unaccustomed to the copious volume of spunk produced by a healthy young man.\n\n\"Uhh, huh, uh,\" Kellen huffed, depleted, and breathing heavily with small dribbles of gooey semen draining from the mouth of his cock as she slowed her manipulations and eventually let his deflating staff drape against his stomach.\n\nConscientiously, but in a purely deviant act of supplication to her developing role in his life, Emma tenderly took Kellen's fleshy scrotum into her gentle fingers, giving the sensitive contents a gentle tug massaging the last drops of familial seed from his spent balls.\n\n\"Uhhh, mom, oh, incredible,\" he sighed appreciatively, for the moment not considering the source of his pleasure and lolling on the sofa unable to quit his lust-induced reverie.\n\n\"Wow, that was impressive! I mean, that was a gusher, young man,\" Emma extolled openly, gratified by the pure might of his robust orgasm, finding herself extremely aroused and sexually unrestrained performing the depraved act of giving Kellen a handjob.\n\nTerribly excited by the demented experience, and despite the guilt consuming her conscience, Emma gave into temptation, performing the final act of any good lover, as she clearly was this night. Hovering above Kellen's heaving chest, my corrupted wife extended her tongue to his sweaty skin and audaciously licked a large dollop of his translucent jism into her mouth.\n\nIt was a sinful act and wrong in so many ways, but Emma was on fire and dying of curiosity to know how Kellen's virile seed tasted. Just the thought of such a debauched act should have made her ill, but coming this far, she quite simply had to know.\n\nTo her satisfaction and motherly bias aside, our vigorous youth's manly ejaculate tasted good -- not salty or bitter like the old men, but with the sweetness of fresh cream. It was still warm to her tongue and thick with its viscosity. Wickedly, Emma dipped for more, determined to clean our drained son of his profane semen as taught to do by Hank.\n\n\"Oh, wow! Mom?\" Kellen murmured incredulously, opening his eyes, and greeted by a sight inconceivable in even his most crazed masturbation fantasy.\n\nHis sweet, ponytailed mother, her big tits bared and hanging loosely pressing her swollen nipples into his stomach, had her face flush against his chest licking up a scoop of his slimy jism, indecently swallowing before retrieving more of his pooled spunk.\n\nAs she worked her way down the rippled muscles of his abdomen, Emma's piercing green eyes were aflame and focused on his wondrous countenance, looking away only briefly when tracking down another tongue-full of the incestuous jism and then returning to the shocked eyes of our disbelieving son.\n\nKellen was beside himself at his respectable mother's disgraceful yet tremendously erotic actions, never imagining it was possible for her to perform such a degrading act. It was as if she was a different woman -- a wanton vixen straight out of an internet porn story.\n\nThis was the most unbelievable night of Kellen's young life, with no idea what possessed his unfathomable mother and not knowing how to react, so simply letting her proceed down his recumbent body until reaching his softening cock.\n\nEmma withdrew, pausing momentarily admiring Kellen's flaccid tool with a hint of motherly affection for the superlative manhood, and unsure whether to do to what with any other man was now second-nature. Deeply torn, her pretty face disclosed her anguish but also a resolve overcoming her uncertainty and her course was set, knowing that not doing what came next only postponed the inevitable.\n\n\"I suppose this needs cleaning too,\" she effused with a practiced smile and a palpitating heartbeat, cringing with real trepidation at the latest line she was to cross in this deviant, disreputable game.\n\nCapturing our slack-jawed son's semi-hard cock between her lush lips, Emma deftly consumed the softening tool just long enough to suck clean the last of his cum from it slickened surface. Her solemn green eyes fixed on Kellen's, completing an act of pure degeneracy no mother should perform on her own son.\n\nKellen lay speechless, unable to even breath watching his deflating shaft disappear into the velvety warmth of her wet mouth, only to reappear a moment later neat and shiny with the glean of her residual saliva. By doing so, Emma completed the first step of luring our son into the gutter with the rest of our family in order to keep us together.\n\nGrief-stricken and demoralized, my dutiful wife lapped her tongue one last time collecting the sticky juice running down her fingers in a deliberate, tortured display of deviance and subservience. After a moment's pause, recuperating while mentally blocking the awful reality of what she'd just done at Hank's behest, Emma rose and buttoned up her blouse.\n\n\"I told you mom would take care of it. Now, I think it's time to get to bed,\" she advised in her best motherly voice, hoping to hide how terribly disturbed she truly was by the entire sordid episode.\n\nEmma didn't remark one way or another about the handjob she'd given, or that she'd just licked his gooey jism off his body, or that she'd taken his soft cock into her mouth cleaning the last vestiges of his orgasm. Sorrowfully, she'd gone further than initially expected for the evening, but that couldn't be helped now.\n\nBesides, she knew it was just a matter of time before she was doing that and much worse with our perplexed son.\n\nGoing to bed just before midnight with tears in her eyes, potent familial cum in her stomach, and the distinctive taste of Kellen's youthful cream in her mouth, Emma sadly realized she desperately needed to masturbate, relieving the awful nagging horniness haunting her from the perverse sex act with our son.\n\nEmotionally and morally devastated by the night's inglorious events, she dearly hoped she could live with herself in the morning, while wondering just what response to anticipate from Kellen in the light of day.\n\n*****************\n\nIt was Sunday morning when Emma woke at around 8:00, brushing her teeth and running a comb through her hair before throwing on a brief summer robe over her naked body. Sheer and barely covering her bounteous ass, it was really something best left to the bedroom, but she was a little hungover and at that moment didn't really care.\n\nAnyway, she had a mission to complete -- a demented mission to be sure, but necessary to keep our family in one piece.\n\nDownstairs, Kerri was already up and in the kitchen with a pot of coffee brewing.\n\n\"Good morning, mom,\" our remarkably cheerful young lady greeted her mother. \"Wow, you could look better. What'd you do last night?\"\n\n\"Oh, nothing really. Kellen and I just stayed up and listened to music. I guess I just had too much wine,\" Emma answered dismissively, unwilling to tell the whole sordid truth, even to our recently-corrupted daughter.\n\n\"Well, it was Saturday night. That's what Sunday mornings are for, right?\" our pretentious daughter spoke as if she knew about hangovers from deep experience, when in fact she didn't.\n\n\"Yeah, right,\" Emma replied without much thought about the joke while adding sugar to her coffee.\n\nKerri's ability to rebound was impressive -- resilient, bubbly, and full of energy.\n\n\"Umm, speaking of Kellen, he's probably going to be up soon, are you sure you want to be caught walking around in that robe?\" she asked with feminine concern. \"It doesn't leave much to the imagination, if you know what I mean.\"\n\n\"Oh, I know. I'll change once you're gone,\" her mother agreed insincerely, with no intention of changing out of the robe, figuring the revealing garment set the tone for the next step in teasing our 18-year-old son.\n\nOf course, Kerri was right about the sparse covering, but Emma knew she was out the door soon to her friend's house for the day, so didn't hesitate to agree just to quell the concern.\n\n\"Alright, I'm outta here,\" Kerri abruptly announced, dumping the last of her coffee and admonishing her scantily clad mother one last time heading out the door. \"Seriously mom, you really need to change or Kellen's gonna get a quick female anatomy lesson.\"\n\n\"I will, I will,\" Emma repeated for Kerri's benefit alone, knowing an education for our growing son was exactly what she intended, regardless of her compunction or regret.\n\nA half-hour passed as Emma sat in the breakfast room nursing her coffee and thinking about last night. She didn't know what to expect from Kellen but decided to stay in the robe as planned, sending the message last night's unprecedented events were not a dream.\n\nAt around 9:00 a.m., our sleepy student-athlete stumbled down the stairs and into the kitchen, a bit timid upon seeing his mother sitting in the breakfast nook but not noticing what she was wearing, at least at first.\n\n\"Oh, hi mom,\" he called through droopy eyelids.\n\n\"Hi Kellen, how are you feeling?\" Emma started modestly.\n\n\"I'm alright. I slept like a rock,\" Kellen answered after a pause as if nothing unusual happened last night, relieving her that he wasn't upset.\n\n\"Well, you should have been relaxed. Wine can do that to you,\" his mother gibed, hinting at the groundbreaking activities between mother and son, then disingenuously diverting to an alternative explanation.\n\n\"Do you want some coffee? Or breakfast?\" she asked, changing the subject to a more mundane topic.\n\n\"Yes, please, pancakes would be good,\" Kellen replied absent-mindedly, not considering the work involved as so common to young men.\n\nEmma didn't really want to cook but figured this was a chance to display her ripe body in the barely-there cream-toned robe, assuming Kerri's absence allowed for the whole day with him and not wanting the opportunity to be wasted.\n\n\"What are you up to today, Kel?\" his sneaky mother asked, lifting herself from the nook and walking to the pantry.\n\nFor the first time, Kellen noticed the robe, his eyes darting sharply to her half-nude form. The fabric was opaque enough you couldn't see through it -- gossamer silk diaphanously hugging her abundant curves. It was also quite short, stopping high on her upper thighs granting our attentive son a healthy dose of his tall mother's long, shapely legs.\n\n\"Not much. I thought maybe Tim might come over,\" he answered with a knowing taunt, playfully retaliating for her tease the previous night suggesting she might get his best friend's opinion about her 'great rack.'\n\nWise in his own ways, Kellen wanted to see what kind of response his proposal incited from his provocative mother.\n\nEmma paused in her tracks for a moment and pondered the prospect of Tim visiting, recalling her wine-fueled and lust-induced comment about the young man. Briefly, she thought it might be wicked fun teasing a pair of horny 18-year-old guys in her bikini, especially one she knew thought highly of her as a MILF.\n\nA visit from Tim was problematic, however, interfering with her intentions for the day with Kellen. Hank's instructions were clear and directed to the seduction of our son, meaning her plans didn't include guests. She couldn't afford any of Kellen's friends intruding on her goal regardless of how amusing it might be.\n\n'Tim can come later,' Emma thought instinctively, not considering her choice of words and their insinuation.\n\nStill, her inadvertent double entendre was clear, and she reprehensively recognized how depraved she'd become under Hank's tutelage, with instant recriminations at the deviant prospect of teasing her son's buddy in an act she'd never even considered before last night.\n\n\"Really?\" his mom bemoaned instead, purposefully employing a disappointed tone.\n\n\"I was hoping we might spend the day together. You know, maybe sit by the pool, just the two of us like last night,\" she suggested with a clear reference to the previous night's activities as a veiled offer.\n\nEmma's anxious voice implied the tantalizing prospect of more of what Kellen experienced on the most unusual Saturday night of his young life. Maybe it was just his imagination, but the opportunity for alone time with his mother, especially if she wore the bikini she wore yesterday, was too much to risk losing by inviting his friend.\n\n\"Okay, so Kerri's gone all day?\" he conceded with feigned nonchalance, asking about his sister's whereabouts confirming his hopeful expectations.\n\n\"That's what she said, until later tonight,\" Emma replied with equal casualness, engaging in the cat and mouse interplay.\n\n\"Alright then, I'll keep you company,\" Kellen graciously accepted his barely dressed mother's enticing invitation.\n\nAs Emma reached to the upper shelf of the pantry for the pancake mix, a cool draft of air touched her skin leaving her fairly certain the brief robe lifted high enough to reveal at least the bottom half of her round butt cheeks, giving our watchful son a good hint of her ample, wonderfully shaped ass.\n\n\"That doesn't mean you can skip mowing the lawn while I'm doing the laundry, mister,\" Emma added with a stern tone of parental authority.\n\n\"Yes, ma'am,\" Kellen agreed, eyeing her fleshy half-moons appreciatively and unwilling to say 'no' to anything, more than happy to do his lawn chores if the reward was as he hoped.\n\nDuring breakfast, Emma made sure to 'accidentally' flash a few well-timed views of her deep cleavage -- nothing obvious and no nipple, just the occasional peek down the front of the loosely tied robe in an exhibition much like the other day.\n\nAfterward, she cleaned the dishes, displaying plenty of leg on her 5'10\" tall frame before returning upstairs and changing into her Sunday chore clothes. The one variation in today's outfit was the loose tank top with low-scooping arm holes above short shorts, instead of her usual t-shirt and of course, no bra.\n\nKellen finished the yard work by around 1:00 p.m. as Emma put the last load of towels in the dryer, leaving them ready for a break and something cool to drink.\n\nCircumspect and always thinking ahead, she mentally prepared for the next round of her insidious seduction -- one she wasn't sure she had the courage to undertake. Indeed, the task was disturbing enough to necessitate numbing herself to get through it, knowing deep down inside how emotionally ill it made her feel even contemplating.\n\nNonetheless, Emma knew Hank would be unhappy with anything less, with his disappointment invariably resulting in the destruction of our family, and that thought made her acutely nauseous.\n\nBearing that undesirable outcome in mind, my scheming wife moved forward with her stealthy plan, mixing a pitcher of Planter's Punch to drink by the pool. Our unsophisticated son wouldn't know it was alcoholic since the rum was difficult to taste through the fruitiness of the cocktail, while also lubricating them both for the impure events to come.\n\n\"Kel, I'm gonna change into my bathing suit. You look hot, do you want to join me for a cold drink?\" Emma playfully teased our perspiring son, extending an offer she knew he'd gladly accept. \"I put a pitcher out on the patio. Feel free to start without me.\"\n\nThe possibility of seeing his mother in her bathing suit, hopefully her bikini, was enough to convince our overheated lad to accept, especially since he was tired from doing his chores.\n\n\"Okay, my suit's down here. I'll be outside,\" Kellen called in return.\n\nChanged and starting on a drink when his mother made her appearance out the back door, our expectant son's initial hopes for his mom in her bikini were dashed, at least so it appeared as he gulped down the rum concoction. True, she wore the green bikini bottoms from last week, but she also wore the loosely fitting tank top.\n\n'Probably didn't want to get too much sun,' he reasoned, internally disappointed.\n\n\"Pour one for me,\" Emma asked girlishly.\n\nKellen studied closely his mother's every graceful move as she approached, her hips swaying seductively in the French cut bikini panties with the height of the fabric on the hips emphasizing her wiry, toned legs.\n\nMore noticeably, Emma's large unrestrained and delightfully buoyant breasts swung alluringly side-to-side with her exaggerated gait, sending her flat nipples tracing a lateral line embossing her blue shirt, confirming his suspicion she wasn't wearing a bikini top.\n\nThe pair sat relaxing, finishing the first round of drinks with Kellen rarely taking his eyes off his mother's chest, and furtively glancing occasionally at her attractive legs stretched on the lounge chair.\n\nEmma knew he was looking and did nothing to conceal herself, understanding the stirring affect her curvaceous body had on men, especially with the addition of alcohol. Chastising herself for her lack of moral strength in her self-imposed purgatory, she realized she needed to take the next step, but wasn't quite ready.\n\n\"Can you pour me another drink, sweetie?\" she instead asked for another drink, cheerily hiding her misgivings before taking a big swallow summoning her courage.\n\n\"I'm ready for a swim. You gonna join your deal old mom?\" my apprehensive wife announced with a seductive lilt, abruptly rising to her feet.\n\nEnsuring a positive response, Emma added a sweetener to the offer, but needed to act quickly before she thought about it too long and her sensibility overcame her need to fulfill Hank's wishes. Purposefully, she dropped her hands to the tank top's hem, peeling it smoothly up her body and over her head, casually tossing it on the lounge chair.\n\nNow, boldly topless before our gawking son, she wore only the green bikini bottoms, looking sexy as hell with her cute ponytail flipping behind her head and her fashionably dark designer sunglasses obscuring her nervous eyes as she kicked off her sandals.\n\nKellen's eyes bulged out of his head, uncomprehending why his mother was acting this way, but now clear last night wasn't a dream, not that he had any doubts. Greedily, he appraised her delightful body in the broad daylight, accepting she was every bit as hot -- hotter even, than the MILFs he saw on the porn sites.\n\nEmma's legs were sturdy but tapered, rising invitingly to her broad hips, with the pleasantly meaty flanks of her ass fitting snuggly in her bikini panties. Rounded but appealing, her tummy featured the slightest roll of padding as the natural result of age and childbirth, with flawlessly smooth, pale skin.\n\nShe was undeniably a mature, full-bodied beauty with curves in all the right places, but it was her enormous chest that really caused a stir in his pants. Kellen hadn't seen his mother's glorious breasts from this angle last night, upright and on full display in the light of day, and she knew from experience they were quite a sight for any horny guy.\n\nAt 39-years-old, Emma's breasts are spectacularly large and truly impressive, holding their shape nicely for her age and sloping a touch, but not saggy. The attractive pair are topped by rose-tinted silver dollar-sized areolae, with her wide nipples currently saucer-like and at ease.\n\nCunningly, she deliberately pushed her chest outward, forcing her tremendous melons to the center of his undivided attention in an effective but unnecessary effort, as craning his eyes upward in the bright light of the afternoon there was no way for our eagle-eye son not to be captivated.",
        "\"I figure you've already seen my tits, so what's the harm?\" my quick-thinking wife directly addressed what she was certain filled our son's mind, audaciously reasoning out loud for his benefit and once again using dirty vernacular.\n\nPurposefully shimmying the gelatinous globes a little holding his gaze, Emma dropped her sunglasses, shooting a sly wink before sauntering saucily toward the pool. Each step sent her tantalizing jugs jostling invitingly, while the pronounced shift of her womanly hips accentuated the sway of her delectable ass.\n\nReverently watching her parade, Kellen grew consumed with his incredible mom wearing nothing but bikini panties, looking undeniably sexier than a young man should ever think of his own mother. Before diving in, Emma turned with a practiced allure, bewitchingly dipping her shoulder setting her glorious breasts in magnificent profile.\n\n\"I'll bet Tim would like to be here now,\" she teased flirtatiously with a coy grin before diving headfirst to disappear under the rippling water.\n\n\"Huh, ohhh, holy shit,\" Kellen groaned aloud when she was out of earshot.\n\n\"Get in here, Kel, and play with your mom. It's not every day I get to swim half-naked with a hunky guy,\" his charming mother insisted suggestively, rising to the surface issuing her siren call with just her head and shoulders above the water, consciously piling on the provocative banter.\n\nKellen didn't need to be asked twice, quickly joining her in the pool, but to his surprise she remained aloof, contenting herself frolicking in the water and splashing about kid-like.\n\nSpurring his arousal ever higher, Emma made a conspicuous effort at keeping her curvaceous body and huge tits in his sight but just out of reach, toying with him by neither overtly touching nor allowing any immodest contact.\n\nThe lack of physical contact didn't stop a tent from rising in Kellen's swim trunks, conveniently hidden for the moment by the water. Neither did his big-titted mother's nipples stiff reaction to the cool water do anything but encourage his cock to harden, pressing against the zippered seam.\n\nEventually, his tempting mother rose above the water. exiting the pool with thick nipples fully erect on brilliant display.\n\nSoaking wet with her chestnut brown hair dripping off her head and her saturated bikini bottoms pasted to her broad hips, his mother's real show was the unavoidable cameltoe appearing at the junction of her legs, outlining every crevice and fold of her hairless pussy to his discerning eyes.\n\nEmma was keenly aware her wet bikini bottoms left nothing to the imagination, emphasizing every impression, fold, and crease of her clean-shaven vagina, leaving even the most minute detail of her pussy virtually exposed to our fascinated son, if not actually so.\n\nAfter all, that's why she wore it.\n\nInternally, she was in turmoil, disbelieving she was actually exhibiting her nearly nude body so openly in such a scandalous a manner. Kellen was only a few feet away in the pool, unavoidably eyeballing his brazen mother, completely mesmerized by her awe-inspiring chest and the contours of her plump, protruding labia.\n\nEven knowing that awful reality, Emma did nothing to cover herself, standing immodestly before him with feet shoulder-width apart silently encouraging him to gaze blatantly at her pussy, with her spiked nipples standing as beacons for his attention.\n\nAfter a long minute, she traipsed to the table and her drink, taking back nearly the entire glass as much-needed reinforcement. As she walked, Kellen followed her flexing, bikini-clad ass cheeks with every step. She didn't bother to towel off, knowing how enticing her naked flesh looked wet.\n\nAs outrageous as her actions were so far, Emma's next audacious move was designed to shock our admiring son more than anything yet. Sunglasses in place to hide her shame, she deftly hooked her thumbs into the waistband on each curvaceous hip and in one fluid motion smoothly pulled the panties down her legs to drop at her feet.\n\n\"Let's not kid ourselves. I see you looking at me, and these don't cover much anyway,\" she uneasily offered in laughable explanation, forcing a smile, and kicking the wet garment to the side.\n\nMy normally reserved, conventional wife stood totally naked only feet from our astonished son, with her firm, heavy tits jiggling with nervousness performing a dance of their own in response to her restive breathing.\n\nNonetheless, pretending lack of concern when in fact she was in a state of internal panic, she casually sat in the lounge chair with knees shamefully parted in a very unladylike manner, giving our wondrous son an unobstructed view of her breathtaking snatch, now absolutely uncovered.\n\nFully visible for his inspection, Emma's baby smooth mound curved exquisitely above her flowering labia, puffy with her own perverse excitement at her indecent behavior, with the unfurled petals leaving unguarded the entrance to her lovely pink slit.\n\nBeneath the water, Kellen sported an iron-bar erection making him too embarrassed to climb out of the pool, and dearly hoping for it to go down soon. Unfortunately, the sight of his unclothed, surprisingly libertine mother sitting poolside allowed no such possibility.\n\n\"Don't you want to come up and have another drink?\" she beckoned intriguingly, a suggestive lilt to her voice.\n\nAfter a moment of unsuccessfully wishing his hard-on away, our flustered son realized it was useless to wait, apparently understanding that so long as his heavenly mother was naked, his hard-on wasn't going anywhere. With some trepidation, he finally climbed from the pool to timidly walk to his drink and towel.\n\n'Gotcha,' my triumphant wife exalted seeing the expected result of her flagrant striptease prodding the front of Kellen's wet bathing suit.\n\nSeizing the advantage of his discomfiture and confusion about the change overcoming his previously prudish mother, just as she had the previous night, Emma gulped another drink for courage, her laser-focused gaze trained directly on the undeniably hard member silhouetted in the tight, dripping swimsuit covering Kellen's erect manhood.\n\n\"Uh-oh, did I do that to you again?\" she wickedly mused about his obvious erection, hating the embarrassment she was heaping upon our flummoxed young man.\n\nTurning to face him, Emma confronted our abashed son directly, keeping him off-guard but offering the solution for his problem as she always did.\n\n\"Come here, Kel, there's no point hiding that hard cock from your mother,\" she stated plainly in the same caring tone she always used, furthering his awkwardness by addressing the situation so sweetly but in such crude language, while also emphasizing her maternal status.\n\nEmma's head was waist-level with the front of his swimsuit, so acting as clinically as possible while unable to control the trembling in her hands, she grasped Kellen's stiff pole within his suit and gave it a gentle squeeze, as if a nurse examining a medical issue, but instead just spurring his arousal.\n\n\"Uhhh,\" he squeaked timidly, unprepared for the sudden hold of his solid shaft.\n\n\"This big guy can't be comfortable, Kel. It's so swollen, I can only imagine it's terribly uncomfortable,\" his concerned mother suggested no differently than if adjusting his tie for church, even as she gave his hard-on another light clench in keeping his interest.\n\nUnsnapping the front button with a practiced twist of her wrist, Emma lowered the plastic zipper down the front in an instant, springing our bewildered son's inflamed cock before he could react, with the vibrant meat bouncing enthusiastically before her expectant eyes.\n\n\"Uhhh, mom, is this okay?\" Kellen asked tenuously, plaintively finding his voice at the outrageous act.\n\nIntuitively, he knew it wasn't, and Emma did too, but she was committed to a course of action regardless of how disturbing and proceeded dropping his suit by the open waistband to his ankles.\n\n\"Of course, it's okay, Kel,\" she lied valiantly. \"I'm your mother, after all, and it's not healthy to be so constricted.\"\n\nOn autopilot, Kellen stared blankly into her glowing green eyes after her preposterous statement, his cock a rigid column projecting in the air waving mere inches from his sainted mother's pretty face.\n\n\"I'm sorry if seeing me naked made you get this way. You know, made your cock so hard,\" she apologized breathily, immodestly describing his condition and biting her bottom lip in what might not have been a forced gesture admiring his impressive staff.\n\nKellen didn't respond, with simply no clue what to say or any understanding of her suddenly inexcusable conduct.\n\n\"I just figured after last night you'd be okay with seeing me naked, since you're an adult and all,\" his dissembling mother explained, brazenly rationalizing an irrational explanation.\n\nThe poor guy's world was changing so much, so fast, and he couldn't control any of it, so Kellen defaulted to the safety of his loving mother taking charge, believing she knew best as she always did.\n\nEmma sensed his acquiescence and pressed forward, gently grasping his rigid shaft between her fingers and lightly squeezing again, naturally causing him to tense at the unusual sensation of a woman, especially his own mother, handling his stiff prick. It was just too bizarre for his unprepared mind to comprehend, so he didn't bother trying.\n\n\"You really have a wonderful cock, son,\" she complimented adoringly.\n\n'I'm so disgusting. Hank is ruining me,' she confessed, reproaching herself immediately for such a degenerate thought.\n\nRecriminations reluctantly set aside, Emma inquisitively ran her fingertips up and down Kellen's solid length, careful not to ply his excitable equipment too much, fearing he'd shoot off as quickly as he had last night. She had something more reprehensible in mind and feared spoiling her chance at leading our gullible son into greater acts of incestuous deviance.\n\nUnbeknownst, she needn't have worried.\n\nApparently, Kellen jerked off in his room earlier after seeing her in the revealing robe, cumming hard into a washcloth at the thought of her spectacular nude body and unknowing what lay in his future. Together with the alcohol flowing through his veins, our quickly rejuvenated son wasn't popping off at just the touch of her delicate fingers.\n\n\"Kel, let mom take care of this for you again,\" Emma offered, removing her sunglasses, and gazing longingly into his transfixed green eyes with a smoldering look of desire that was only partly manufactured.\n\nKellen's vibrant cock was big and thick, but also extremely hard too. The impassioned staff featured delicate pink flesh along the rigid shaft and a purplish knob pulsing with the vitality of youth. The splendid tool was everything Hank and his nasty cronies' pricks were not, and it belonged to her dear son.\n\n'I shouldn't do this,' she castigated herself, assuaging her conscience and maintaining some sense of morality, knowing in her heart she would do it, and worse, she might shamefully enjoy it just a little too much.\n\nIt was another moment of crossing a threshold for my conflicted wife, who despite the illicit appeal of the lovely cock set disquietingly before her face, realized she was traveling to a place changing everything and from which she couldn't return.\n\nEmma knew she was taking our guileless son along for the ride whether he wanted to go or not.\n\n\"I know just how to make it better,\" she promised disgracefully, drawing a deep breath, and steadying her hand around the base of his ardent pole.\n\nStaring admiringly into Kellen's dazed eyes, my beautiful wife, and his loving mother, devoted to our family to the point of committing egregious sins of the flesh to protect us, swabbed her tongue across his inflamed knob, drawing up the precum on the tip and tasting the same fresh sweetness she'd experienced last night.\n\n\"Unnnhh, aaahh,\" a reflexive sigh of nervous delight slipped from Kellen's circled mouth at the bizarre feel of his mother's wet tongue gliding delicately across his sensitive cockhead, with his volatile staff jerking involuntarily in response.\n\nKellen didn't otherwise move, and his lack of rejection or outright revulsion encouraged Emma to continue, licking the supple knob again before running the flat of her tongue fully around the surface of the spongy tip.\n\n\"Ohhhhh,\" he gushed under his breath at the marvelous sensation, closing his eyes momentarily and relishing her soft tongue delightfully teasing his responsive crown.\n\nConfident of her control and unwilling to grant our flabbergasted youngster enough time to think of anything but the gentle laving of his mother's tongue, Emma encircled the wide cockhead between her lush lips, swirled her tongue languidly around the engorged knob once more, and proceeded engulfing the swollen girth within her warm mouth.\n\nGliding the flat of her moist tongue along the underside of Kellen's hard shaft, my intrepid wife journeyed its tensing length until she consumed over half its nearly eight inches.\n\nAs she did, Emma never took her intent green eyes off his wondrous face, gazing at him with loving reassurance while encircling his width until pressing her upper lip against the curly auburn hairs covering his pubis.\n\n\"Ohhhhh, mommmmm,\" Kellen exclaimed, awestruck at the unimaginable sight of her plush lips literally wrapped around his meaty cock.\n\n'Uck, gck,' she gagged slightly with the introduction of the rigid stanchion into her throat but managed it remarkably well with her nostrils flaring for air and a prominent bulge visible in her neck.\n\nKellen finally woke to the disturbingly immoral nature of her unsavory act, but the undeniably wonderful sensation of her throat massaging his buried lance and active tonguing under his pulsing staff persuaded him to accept her unnatural oral talents.\n\nFor Emma, lamenting the act with profound sadness, the realization was more profane and difficult to accept than anything she could conceive. To hear Kellen call her 'mom' at a moment of sexual gratification was perverse. The word starkly underlined she was actually giving head to our trusting son.\n\n\"Uhhh, ohhh, mom,\" he sighed, dumbfounded but content, and reinforcing the all-consuming truth about whose young prick filled her mouth.\n\nLast night, Emma had shamelessly cleansed him of cum and even briefly taken his soft penis into her mouth. That was spontaneous and unplanned. This was different, because blowing Kellen was now her intention, and there was no escaping the fact she was seated naked in our backyard purposely sucking off our 18-year-old son.\n\nDesperately trying to look calm and in control, inside Emma's heart and mind were a tumult, unable to prevent the telling dampness in her eyes as she cried silently inside even while continuing to actively work his rampant pole.\n\nWithdrawing to the flared tip was between her ruby lips, she employed the varied skills learned under Mrs. Ogawa's strict guidance earning her Hank's praise as 'a great cocksucker.' Swirling her tongue around the head, Emma dove inward once more, taking the full shaft into her warm mouth, and applying highly effective suction upon retreating along the slobbery surface.\n\nSettling into a steady rhythm, she skillfully repeated the action, demonstrating the magic of her vacuuming technique on his raging cock. In and out, over and over, my miserable but relentless wife knew the piston-like motion of her enveloping mouth combined with the traction of her luscious lips on his perceptive skin would soon produce results.\n\nEvery once and again, Emma drew up to the crown, teasing his cock slit with just the tip of her tongue before once more swallowing the full span of his rigid tool down to his pubic bone, encircling the sturdy shaft as the pliant head pushed into the tight confines of her throat.\n\n'Guck, uck, ggug,' her light gurgles were the only sign of distress accepting his long cock into the narrow channel and she never broke stride in her depraved effort towards his orgasm.\n\nWhatever reprehension she felt about the horrendous circumstance forced upon her by Hank, she fully understood her new role was servicing the sexual needs of whomever my boss dictated -- man or woman, son or daughter.\n\n\"Huhhh, uunnnhh,\" our athletic young man's breathing grew heavy, with a gentle hum issuing from his pursed lips as his persistent mother's blowjob skills overcame any emotional trauma at the extreme turn of events.\n\nKellen grew subconsciously disconnected, falling into a dreamworld with his beautiful, loving mother sitting before him stark naked in broad daylight by our pool taking his hard cock into her mouth time after time, licking and sucking with an ability he had no idea she possessed.\n\nDeep in his fantastic reverie, he couldn't deny how incredible her silken mouth felt, while throughout her taboo blowjob, Emma stared adoringly into his glazed eyes with subservient affection.\n\nI was in Duluth, so can only imagine what it must have looked like to an outside observer and wondered if Don Stanley was peeking through the fence knothole, astonished by the sight.\n\nSeated naked on a lounge chair by our backyard pool, his late-thirties suburban neighbor, the conservative wife and mother, with her large DD breasts undulating in time with her efforts and his solid cock straining her red lips, reverently gave our tremoring 18-year-old son a loving blowjob.\n\nEarnestly, Emma worked on Kellen, seeking to relieving him of his mother-induced lust while ambivalently anticipating the arrival of his youthful load of incestuous semen into her mouth.\n\nOur well-hung son's balls are good-sized, with his fleshy sack stretching inches below her mouth devotedly attending to his swollen shaft. The ample gonads bounced against her chin, and as a vital youth almost certainly contained a generous serving of heated jism, even with his earlier masturbation session.\n\nSensing the image of his mother with his balls in her mouth might be enough to put him over the top, Emma withdrew completely from Kellen's painfully stimulated tool.\n\n\"Huunnhh?\" our disappointed son complained, uncertain if the marvelous blowjob was suddenly finished.\n\n\"Don't worry, young man, momma's not done with you yet,\" Emma promised with obscene fervor.\n\nWary of losing her prey, she astutely lowered her mouth, licking the underside of his fleshy nut bag. Drawing his attention to the wonderful softness of her tongue, she weighed the heavy spheres on the flat surface, before taking his left testicle fully into her mouth to tease and wash with her saliva.\n\n\"Awwhhh,\" he sighed at the tenderness of the delicate caress as his stiff cock bobbed obscenely about her head when Emma encapsuled his right nut in much the same way to his vocal satisfaction.\n\n\"Unnnhhhhh! Ohhh, mommmmm,\" Kellen cried, never experiencing anything like the feel of his cum-filled balls in his mother's velvety mouth.\n\nRegrettably, his loud response reminded her of the perversity of their mother-son bonding, but by now, it didn't matter, as Emma was too committed in her mission of achieving Kellen's orgasm. Twirling the heavy orbs for a moment with Kellen staring awestruck into her doting face, she stretched her lips impossibly wide, encompassing both big balls in their hairy sack.\n\n\"Ohhh, ohhhhh!\" Kellen groaned, out of his mind witnessing the impressive feat as her jaws strained and cheeks bloated lewdly accommodating his entire package, releasing the base of his cock, and gripping his muscled butt cheeks securely.\n\nIt was an obscene hands-free demonstration exactly as instructed by Mrs. Ogawa and no doubt meeting the approval of Hank Allenby.\n\n'Such a nice tight ass,' she shamefully thought, clenching the sturdy flanks, hoping it added a powerful stimulus to her oral performance and soon deliver results.\n\nWith that goal in mind, my wife artfully returned her delightful lips to his dancing staff, capturing the waving pole and swallowing until the length pressed his broad cockhead beyond the entrance of her throat again."
    ],
    "authorname": "Tug_Coxwell",
    "tags": [
        "incest",
        "nonconsent",
        "oral",
        "blackmail"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-theft-of-our-lives-kellen"
}