{
    "title": "The Cleaning Lady Ch. 03",
    "pages": [
        "Please read the first two chapters of The Cleaning Lady before reading this chapter.\n\n\n\nA week later Nicholas was almost completely on edge. When he heard the knock on the door he rushed to open it.\n\nMinh and Ping were there, both of them dressed alike; black fleece shorts reaching almost to their knees and yellow tops with Chinese characters embroidered into the chest area. \n\n\"Good afternoon Mr. Nicholas,\" Ping said and then smiled. \n\nMinh smiled too and walked through the door and straight to the kitchen. Nicholas turned to admire her walking away from him momentarily, watching the way her bum swayed enticingly under her loose shorts, and then turned back to Ping. \n\nHe led her through to the living room but she declined his offer of a drink or even to sit.\n\n\"We have much work to do today,\" she said with her customary smile. \"We start now.\"\n\nNicholas watched her walk through to the breakfast nook where Minh was pulling her top over her head to reveal her bare breasts. Ping pulled her top off as well and then the two of them pulled their shorts off. Nicholas was surprised to see that neither of them even wore panties today. He guessed they knew they would only be removing them once they arrived and so didn't bother putting them on.\n\nHe grinned as he watched and his cock hardened in his shorts the moment he saw Minh's tits.\n\nThe girls exchanged a few words and immediately got to work. Ping went to retrieve the cleaning supplies from the linen closet and Minh began gathering up dishes to clean.\n\nNicholas went to his room and stripped off his clothes. He lay naked on his bed and waited for the moment he'd been expecting; he was eager for one of the girls to make him cum. His cock was erect and hard and Ping smiled at him as she walked past his bedroom door with the supplies. She nodded and gave his cock a long hard stare. He saw her nipples pucker and harden, but she kept on going.\n\nAfter a long while, Minh paused in the doorway to stare at him too. She too gazed longingly at his cock, but then she continued on toward the bathroom to clean in there. \n\nAbout an hour after their arrival, both girls came into the bedroom. Nicholas was still lying on top of the covers, feeling a little dejected because no one had come to give him a hand job yet. His cock was still hard and he had resisted the urge to masturbate so far. He really wanted one of the girls to do it.\n\n\"Good afternoon Mr. Nicholas,\" Ping said with a smile. \"We have finished cleaning.\"\n\nNicholas looked at them with some alarm. Although both of them were still naked and he was enjoying the sight of the sisters with no clothes, he was concerned that they intended to leave without once having visited him for one of their customary hand jobs. \n\n\"Really!\" he said nervously. \"You've finished already and you're leaving?\"\n\nThe girls looked at one another with puzzled expressions and then back at him.\n\n\"You would like us to leave?\" Ping asked, her own expression becoming concerned.\n\n\"No!\" he said. \"I don't want you to leave, but... you said you were done. You always say that just before you leave.\"\n\nPing translated for Minh and then the two breathed a sigh of relief.\n\n\"Oh no Mr. Nicholas,\" Ping said. \"We have finished cleaning very fast! We clean fast so we could be with you for more time today.\"\n\n\"Oh!\" Nicholas said. \"Well, I'm glad we can have more time together.\"\n\n\"Yes, that is good!\" Ping said with a giggle as she crawled on to the bed. \"Now please to lie back. My sister and I have many plans. We would like to do some new things today, if you will allow us.\"\n\nNicholas smiled and lay back as he was asked. \n\nMinh crawled on to the bed and lay beside him while Ping crawled over his midsection and placed her tiny hand on his cock.\n\n\"I ask my sister how to do what she does,\" she said. \"She take you with her mouth and you like it yes?\"\n\nNicholas nodded nervously.\n\n\"She say she will teach me,\" Ping went on with a laugh at his expression.\n\nMinh spoke in Chinese and Ping leaned forward tentatively and guided his cock toward her lips. She opened her mouth and tried to take it in, frowning a little bit and then looking up at Minh. Minh spoke again and Ping opened her mouth wide enough that Nicholas heard her jaw bone pop. This time she took his cock past her lips and then the head was in her mouth. \n\nMinh repositioned herself on the bed to watch Ping more closely. She was now lying beside her sister with her head no more than a few inches from Ping's. \n\nShe gave Ping some encouraging words and Ping tried to move her mouth over his cock. She gasped for air and pulled it out, staring at it like it was a monster. Minh spoke soothingly to her and took the cock into her own hand. Then she guided it into her mouth, opening her lips and sliding it in so the head was nestled in the inside of her cheek. She swabbed her tongue over and around it and then pulled it out and offered it back to Ping. \n\nPing, having watched Minh closely, slipped the head past her lips. This time she did it more easily, allowing the head to slide between her lips instead of opening her jaw so painfully.\n\nShe pushed it into her cheek and then ran her tongue over and around it. She made a muffled sound and then repeated it. Minh smiled and continued to coach her as she took his cock in from several angles.\n\nNicholas knew this is what heaven looked like, to have two petite Asian girls kneeling at his midsection and taking turns sucking his cock. He lay back and moaned happily as Minh continued giving instructions to Ping.\n\nBy now Ping was becoming more comfortable. Although she was only repeating the one maneuver Minh had so far taught her, Nicholas still thought he was in heaven. She continued swabbing her tongue over and around the head and poking it into her cheek, making it bulge outward as Nicholas and Minh watched. \n\nMinh said something else and Ping pulled her mouth off his cock. Minh took it and slipped it past her lips and then took it right to the back of her throat. She then started moving her mouth slowly back and forth, gripping the shaft with her teeth behind her lips to increase the pressure as she moved. Her lips moved about two inches or so in each direction and Nicholas gasped at the new sensation.\n\nMinh and Ping both giggled at his response and then Ping tried to imitate what her sister had done. She slipped it past her lips and took it as far back as she could. She began to gag and Minh spoke to her. Nicholas guessed she was telling her to not go so deep, because Ping moved his cock to a more comfortable position. Now she had a little more than three inches of his cock in her mouth. She started moving her mouth back and forth and, although she wasn't as good at it as Minh had been, Nicholas groaned and put his hands on her head as she sucked him. Ping giggled again and continued to move her mouth back and forth. She got to her knees to give herself more room to maneuver and then went back to sucking. She moved her mouth up and down rhythmically and Nicholas groaned again. \n\nPing's eyes went wide for a moment and she pulled her mouth off it. She spoke to Minh who answered her calmly. Ping held his cock and studied it for a moment. A drop of precum appeared at the head and she spoke again. \n\nMinh smiled and quickly licked the droplet off of his cock. Then she took his cock into her mouth and started moving her mouth up and down his length and Nicholas groaned in response. Ping smiled as she watched her sister and how Nicholas responded to what she did. She spoke again and then Minh pulled back. Ping took his cock as deeply into her mouth as it would go.\n\nShe began to gag again but backed off a little. Then she started moving up and down. After a few minutes, she pulled back and studied the head again. Another droplet of cum appeared and she licked it up and giggled as she spoke to Minh. Minh giggled in response and looked up at Nicholas.\n\n\"Feel good?\" Minh asked.\n\nNicholas nodded and groaned again. Then he took Ping's head in his hands as she started sucking him again.\n\nMinh reached down and started kneading his balls. She watched Ping as she sucked and continued to coach here and there. \n\nPing sat up breathing heavily and smiled down at Nicholas.\n\n\"I never knew this would be so much work!\" she said with a grin.\n\nMinh took his cock in her mouth and tongued and licked it expertly.\n\n\"My sister learn how to do this long time ago,\" she said. \"I never learn before.\"\n\n\"You're doing a great job!\" Nicholas said and meant it.\n\n\"Really?\" she said as he smile grew. \"You feel good?\"\n\n\"Very good!\" he said.\n\nMinh pulled her head back and Ping took his cock into her mouth with gusto. She moved her mouth up and down, leaning forward with her hands on the bed on either side of his hips. \n\nMinh spoke again and Ping looked at her for a moment with his cock still between her lips. She put one hand on his shaft and kept the head between her lips. She started stroking him and Nicholas gasped. Minh cupped his testicles and Nicholas felt them tighten a bit. She said something else to Ping and then Ping put her hand gently on his balls. She continued stroking the shaft and licking the head and then Nicholas felt his balls tense again. \n\nMinh spoke to Ping and then Ping began stroking his shaft faster, keeping the head between her lips. Nicholas grunted and then he was cumming. She held him between her lips but she made a muffled sound as her mouth filled with semen. Then she pulled her head back and Nicholas spurted on to his stomach. Another spurt shot out but Minh quickly moved forward and took his cock into her mouth. She kept it there until he was finished and then leaned back.\n\nPing had been surprised at the force of his eruption. It squirted into the back of her throat and she choked a bit on that. Now she was kneeling over him with tears in her eyes and gasping for breath. There was sperm drooling down her chin and on to her chest and she coughed from time to time, trying to clear her air passage.\n\nMinh rubbed her back gently and spoke soothingly to her. She looked at her and then at Nicholas with a questioning expression. Minh gave Nicholas a meaningful glance.\n\n\"Oh,\" he said quickly, \"yeah Ping, you did great! It felt really good. I'm sorry I made you choke.\"\n\nPing coughed a few more times and smiled awkwardly as she still tried to clear her throat.\n\n\"You feel good?\" she asked hoarsely. \n\nNicholas pulled her to him and hugged her closely. \n\n\"It felt wonderful!\" he said.\n\nShe smiled and looked back at Minh. Minh spoke to her and both girls laughed.\n\n\"My sister say you are very big!\" Ping said. \"I am too small to take a big man like you for my first time.\"\n\nMinh spoke again and they laughed again.\n\n\"My sister say she is glad you are so big,\" Ping went on. \"She like a man who is big.\"\n\nNicholas was not really big. His cock was only a little over six inches when fully erect. The mushroom shaped head though was a little wider than average. When he was fully hard, it could stretch to just less than three inches in diameter.\n\nHe took their compliments eagerly, although he told himself they were just being nice.\n\nPing then moved herself over him and reached for his cock again. She began stroking it and Nicholas found himself responding, though it was happening slowly.\n\n\"It has been a long time,\" she said as she shoved it against her lips. \"My sister and me have not had a man since husbands leave.\"\n\nShe lowered her hips, holding his cock in her hand and guiding it toward her pussy. She placed the head against her lips and then held the shaft as she tried to lower herself onto it. He wasn't fully hard yet, and that probably helped. Right now it was a little over half its full size.\n\nIt took a lot of persuasion for her to get it in but she moved her hips up and down and back and forth, sliding it along the length of her lips to wet the head. Finally after much cajoling, it slipped past her lips and she groaned softly as her tunnel stretched to accommodate him. \n\n\"My sister is right!\" she gasped. \"You are very big!\"\n\nNicholas gripped her hips and held her steady. She put her hands on his chest and opened her mouth and gasped as she slid down a little further. She groaned again and bit her lip as she pushed herself further and further down. \n\nNicholas put his hands on her breasts, kneading them and palming her nipples. They were so hard they pressed into his hands like little pebbles. \n\nMinh watched closely as Ping took his cock inch by inch. She spoke in Chinese, encouraging her as she went. Ping gasped and stopped, shifting her hips back and forth slowly until she was lubricated enough. Then she started moving downward again. \n\nShe pushed herself downward slowly and steadily until finally his cock was completely inside her. \n\nShe paused and took a deep breath. She bit her lip again and spoke to Minh. Minh giggled but replied, encouraging her sister as she got used to the feeling. \n\nAfter a few moments, she began humping against him, slowly moving her hips up and down and around. Nicholas gasped as he felt her vaginal muscles clench his cock. She clenched her arms with her hands on his chest and then started moving her hips a little faster. \n\n\"You are a big man!\" she said with a grunt. \"I like a big man too I think.\"\n\nHer pussy was now fully lubricated and, though his cock was stretching her pretty far, it moved freely when she swiveled her hips. She gasped as she moved from side to side and commented in Chinese. Minh answered her in hushed tones and then Ping began moving faster still.\n\n\"Feel good?\" Ping asked between gasps.\n\n\"Oh yeah!\" Nicholas said. \n\nHe held her hips again and looked up at her, marveling at her beauty. Although she was small, her features and figure were that of a woman. She wasn't quite five feet tall. She had long black hair that was currently hanging down on to Nicholas' chest as she leaned into her work. Her waist was tiny and her breasts were probably an \"A\" cup, but on her tiny frame, she was perfectly proportional. Her nipples were puckered and hardened. Perched on the apex of her breasts, they seemed to be swollen and distended.\n\nNicholas lifted his head and pulled her toward him. He put his lips to her left nipple and sucked it greedily into his mouth. Ping gasped and let out a long \"ooh\". Her eyes closed and she began moving her hips in a circular motion.\n\nAlthough she had loosened up quite a bit since she first had taken his cock in, she was still tight. The sensations that Nicholas felt when she began swirling her hips were almost indescribable. It felt as though it was a fist wrapped around his cock, a fist that was gripping him firmly. \n\nHe sucked her nipple a little harder and grunted.\n\nPing gave a cry and took a deep breath. She stopped in mid motion and froze with her eyes tightly closed and her mouth opened to a small \"o\". Her legs began to tremble and she gave another cry.\n\nNicholas held on to her hips as she rode out her orgasm, although she did not make much noise as she experienced what appeared to be a powerful climax. His groin was suddenly soaked and she made short little \"Oh!\" sounds one after another. After about a half minute and at least a dozen \"Oh's!\", she stopped making sounds and crawled weakly off of his cock and lay beside him with her limbs still shaking. She put her head onto his shoulder and whimpered delightfully.\n\nNicholas looked at her and then over at Minh. \n\nMinh was practically beside herself with desire. Ping had said that neither of the girls had had a man in a long time. Now she had just watched her sister get fucked and she was beyond ready.\n\nShe crawled over Nicholas' hips and guided his cock to her pussy. She slipped it past her lips and bit her lip as her entrance opened up. She gasped as the head disappeared inside and then she looked down at Nicholas with a broad smile. She put her hands on his chest and then started moving her hips around and around. \n\nNicholas felt her tunnel close around him as she moved and groaned as the feelings grew. She was not quite as tight as Ping, but it was certain that she had not experienced a cock with such a large head before. \n\nShe gasped as it went ever deeper and then her pubic hair was matted against his. She sighed deeply and then began moving. She thrust up and down, her tummy undulating like a belly dancer's, and gave a little grunt every time his cock bottomed out in her pussy. \n\nNicholas reached for her tits and cupped them lovingly. He splayed his fingers over them and pinched the nipples between his outstretched fingers. They were hard and Minh cooed as he squeezed them. \n\nHer hips were almost a blur. She moved herself up and down on his cock like a piston engine, muttering in Chinese as she went. She leaned forward with her hands on the bed by his head and raised her legs. Now she was using her thigh muscles and moving her vagina straight up and down on his cock. She made a mewling sound that lasted and lasted. Eventually it became a wail and she was crying out as she impaled herself on him. \n\nShe gripped him by the shoulders and pulled. She rolled on to her back dragging Nicholas with her. Then he was on top and her legs were spread wide beneath him. He started pounding into her. He thrust for all he was worth until he thought he could move no more. \n\nShe gasped and cried out again, wrapping her arms around his neck and her legs around his waist. She shouted in Chinese and then Nicholas grunted. He came inside her and she screamed into his ear as she began to cum.\n\nWhen they came down from their orgasms, they were bathed in sweat and gasping for breath. He felt like his cock was inside a swamp. It was so warm and moist. When he pulled out he watched a stream of cum drool out of her and onto the bed. He fell to his side and lay between Ping and Minh.\n\nPing was looking at him with a girlish smile and Minh was staring at the ceiling as she regained her breath.\n\n\"Feel good?\" Ping asked quietly.\n\nNicholas nodded, to spent to speak.\n\n\"We stay for a while?\" she asked.\n\nAgain he nodded and smiled.\n\n\"Yes,\" he said. \"Please stay for a while.\"\n\n\"Good!\" Ping said and then nuzzled into his shoulder again.\n\n****************************************************\n\nBefore the girls left that day, they had each fucked him two more times. Minh wanted to feel him penetrate her from behind. Nicholas grinned as Ping translated the request to him and eagerly lined his cock up with her pouting pussy. Minh was a little looser than Ping, but he still felt as though he were fucking a teenager. \n\nHe drove into her from behind and, try as he might, couldn't hold himself off from cumming for more than a few minutes. When he held her close to him and ejaculated inside her, Minh reached with her leg around Nicholas' buttocks. The feel of her pulling him in as he came made his eyes roll back in his head.\n\nAfter a suitable time to rest, Minh leaned down and got his cock hard with her mouth. When he was erect again, Ping shyly asked him to fuck her while lying on top and facing her. \n\nNicholas smiled widely and crawled between her outstretched thighs. He leaned over her and guided his cock to her opening. He looked down to see her grinning in anticipation and then he started pushing inside her. \n\nIt was a tight fit and Ping asked him to stop a couple of times as she stretched around him, but after a few minutes he was buried to the hilt. \n\nShe wrapped her legs around his shins and smiled up at him as he pumped into her slowly and rhythmically. With her hair splayed out in a spray of black against his pillow and her beaming smile as they fucked, Nicholas came after only a few minutes. He managed to last a bit longer this time because it was his fourth orgasm in two hours, but he could not stop the inevitable as her tight pussy clenched around his cock. ",
        "When his orgasm came his mouth opened in a grimace and Ping moaned as she called his name. She put her arms around his neck and held him close as his semen spewed inside her. He looked her in the eye and rolled away from her slowly. He came to rest between the sisters who both giggled at his expression of satisfied desire.\n\nAnother suitable rest time went by and then the girls straddled his midsection and rode him until they had both climaxed. They took their turns, each watching the other as their climaxes approached. \n\nThe two sisters were so much alike in appearance; it only made sense they were alike in their passion as well. They both liked fucking slowly. Ping moved so slowly up and down on his cock it was almost slow torture. The feeling of her guiding herself along his pole was exquisite in its unhurried pace. Only when she was close to cumming did she increase her pace. When she did cum, she did so with a series of \"Oh!\" sounds, at least a dozen, just as she had done with her first orgasm. \n\nMinh too started out slowly. She was looser than Ping but the gyrations her hips made as she fucked had Nicholas groaning in appreciation. He looked up at her with her eyes clenched shut and looking upward with her mouth slightly open. She ground herself on is cock with abandon and soon her mewling began which grew to a wail. She gripped his shoulders tightly and pushed herself down until her pubic hair was matted against his and gushed her orgasm all over him.\n\nWhen they were both done and had rested, they then took turns sucking him. They put their heads together over his crotch and giggled as they took turns licking and sucking him. Minh cupped his testicles as Ping sucked him and then warned her sister when Nicholas was about to cum. \n\nThis time, Ping took his semen into her mouth and did not choke. Her eyes watered slightly and she gasped a bit, but she kept her lips over his cock until he stopped spurting. \n\nNicholas watched in awe as Ping kissed her sister and shared his sperm with her. They put their lips together and their tongues intertwined, the white fluid coating them both. When a stream of cum drooled down Ping's chin, Minh licked it off her and smiled,\n\nThe girls looked at him with big grins and then swallowed his cum, each of them licking their lips with relish. When they were done, Nicholas could see a thin coating of white on their lips and a little bit on Ping's chin. \n\nHe leaned forward and kissed Ping passionately, taking his own taste of his cum from her lips and tongue. Then he leaned back and wondered to himself if life could get any better."
    ],
    "authorname": "brian473317",
    "tags": [
        "chinese"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-cleaning-lady-ch-03"
}