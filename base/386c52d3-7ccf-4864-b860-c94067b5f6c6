{
    "title": "Operation: Final Fantasy Ch. 04",
    "pages": [
        "As always, big thanks to Wolf Vixen for a great editing job. Chapter X below was probably the most challenging chapter to write and she helped tremendously. While writing about him and plotting out his story, I listened to a lot of Johnny Cash's \"Hurt\". While writing about her, I listened to a lot of Miranda Lambert's \"Over You\". I'd recommend it while reading the chapter, and as always, I hope you enjoy...\n\nIX\n\nSettling down in the couch in a bluish-silver nighty with her feet tucked underneath her, Trixie looked outside at the quiet, peaceful night, now that the sun had gone down.\n\nIt was movie night, and Ryan was plugged Iron Man in the Blu-ray player while the popcorn popped in the microwave. He was candidly surprised that she was open to watching the movie; at the very least, he expected her to roll her eyes. He questioned her, \"Is my nerdiness rubbing off on you? Before you know it, you'll be reading the Iron Man comics. Or, better yet, I'll have you playing Call of Duty with me. Maybe you'll be dressing up as a Lord of the Rings character, precious?\"\n\nTrixie giggled, \"Well, no. First of all, it has Robert Downy Jr. in it, so how could I pass that up? Secondly, I even considered dressing up as a super heroine for you after this movie, like Supergirl, or maybe Catwoman. But if you're going to complain and call me a nerd, maybe I'll take those outfits back to the store.\"\n\nRyan looked stunned and said, \"Um, technically I never called you a nerd. Still, is it too late to take back what I said?\" He looked her up and down with elevator eyes; Trixie didn't know if he was imagining her as Supergirl or Catwoman, but she was sure it was one or the other.\n\nShe really enjoyed tormenting him. There was something about watching him squirm that she found simply irresistible. Trixie said, \"As for comic books, maybe I do wanna read one with you.\"\n\nHe shook his head and laughed, closing his eyes and telling her, \"Now I know you're just teasing me.\"\n\n\"Hold on,\" she said, reaching down and opening one of the bags next to the couch. \"I was waiting for the right moment, and I think I just found it. Close your eyes and hold your hands out.\"\n\nWith an amused smile, Ryan obeyed.\n\nGiving Ryan one last look, making sure that his eyes were really closed, Trixie carefully opened the bag and pulled out a comic book protected by a white cardboard back and tucked inside a clear plastic sleeve. She couldn't hold back her smile any longer, beaming from ear to ear.\n\nShe stood up and carefully placed it in his hands. \"Open your eyes. You can read this one to me!\"\n\nCarefully opening his eyes, he just about fell over when he saw he was holding a copy of The Avengers #1. It was the original, 1963 Avengers #1 -- Earth's Mightiest Super-Heroes.\n\nTrixie took in every moment of Ryan's surprise; to say that he was speechless was an understatement. The smile of a little boy on the face of this full grown man was absolutely charming. It was possible that she may have been even more excited than he was.\n\n\"T-Trixie, I...\"\n\nRyan leaned in and gave her a huge hug, kissing her fully on the lips in the process.\n\nIt was hard to say the last time she had been embraced like this. It wasn't the hug and kiss of a horny male, but rather the hug of someone truly grateful and appreciative of her thoughtful gift. She couldn't have been any happier, mostly because he couldn't have been any happier.\n\nRyan swallowed and finally spoke, \"Someday, someone is going to be lucky to have you. Thank you.\"\n\n\"Aww, thank you sweetie,\" she choked out. \"I hope I didn't overstep my bounds, intruding on your Christmas memories with your parents and all, but I figured if you had The Avengers two through five, you might as well have the first one, too. Call it an early Christmas present from me.\"\n\nIt was obvious he was still in shock. \"How did you find it?\"\n\nTrixie looked at him deviously, \"That's my secret. All I will say is it involved at lot of Googling behind your back when we were in Hawaii, finding the right semi-local comic book shop, and calling in a favor from Madeline to pick it up for me.\"  \n\n\"Trixie, honey, I have no idea how much it cost but I know it was too much. I...I can't accept this.\" With reluctance, Ryan held the comic book out for her. \"You're the sweetest thing ever, but you really should take this back. I...\"\n\nTrixie interrupted him by holding her hands up, rejecting him, \"I have no intentions of taking it back, and never mind what it cost. The smile on your face when you saw it was irreplaceable and you can't put a price tag on that.\"\n\nRyan lowered his hands; they both knew it was impossible to argue against her. He became quiet and a solemn look passed over his face, \"You do remind me of Amanda in so many ways.\"\n\nThere were not any words she could say to reply to that. The comparison to Amanda took her breath away, but at the same time, it felt like she was making a mistake and shouldn't even be here with him. She felt so out of place.\n\nHe continued, \"I mean, I know you two are different. You like different things. But I didn't mean you're like her only on the outside. You have a lot of the same virtues that made me fall in love with her in the first place. You have her compassion, her joy for life, and her gift for sacrifice and pleasing others.\"\n\nHer heart stopped when he said she had the same virtues that made him fall in love with Amanda. Initially, she felt like swooning. But the more she thought about it, his comparison and mere mention of the L-word scared the life out of her. Surprisingly, she noticed that he said it innocently enough that he didn't seem to make the same correlation that she did.\n\nShe also noticed that he didn't mean she bent over backwards for others because her job required pleasing them, or because she was getting paid for it. He meant that making people genuinely cheerful was in her nature; Trixie knew exactly what he meant.\n\n\"And no, you didn't overstep your boundaries. I'm sure my parents would have loved what you did for me. I wish you could have met my parents. I think they would have loved you.\"\n\nHer eyes began misting up. She wasn't worthy of being compared to Amanda and dragging down someone as gentle and loving as Ryan.\n\nRyan looked at the comic book again and started to say something, but no words came out. Instead, he grabbed her and gave her a tight, loving hug again.\n\nThe feeling of his big, strong arms around her made everything worth it. In reality, Trixie felt like she was the one receiving a gift. She couldn't remember the last time she went to such great lengths to do something this special for someone, and she certainly couldn't recall ever having a feeling this warm after giving anyone a heartfelt present like this.\n\nIt was impossible to hold back her tears.\n\n\"Jessica,\" she whispered in his ear, as he continued holding her tightly.\n\n\"What?\"\n\nShe looked up at him with her big blue eyes, \"You wanted to know the real me. My real name. It's Jessica. Jessica Kelly.\"\n\nHe held her tighter. She could feel his strong arms wrapped tightly around her, and heard him taking in her scent as his head rested next to hers.\n\nOh my. What have I done?\n\n---\n\nIt was hard to believe it was already noon on Tuesday. There were only twelve hours left until Jessica and Ryan went their separate ways. It was like a whirlwind for both of them; as quickly as the time flew by, both of them knew they had just lived out an amazing adventure with memories that would last a lifetime.\n\nThe mood turned somber; an uneasy feeling hung in the air. The funny part was Jessica had never felt this way with a client before. Up until she met Ryan, it was all business. She wondered if he felt the same way.\n\nShe knew they would have to make every moment count and focus on each second throughout the day and avoid focusing on what would happen when the clock struck midnight. The unspoken tension of the minutes ticking away was driving her crazy; she knew he felt it too.\n\nRyan made the mistake of calling her Trixie on one occasion, but he quickly corrected it, calling her by her real name. She giggled at his mistake, but he made sure he didn't repeat it. \"I guess I can't call you 'Wicked Trixie' anymore, can I?\"\n\n\"For you, Ryan, I'll let you call me whatever you like,\" she purred.\n\nEven when Ryan briefly left the to pick up Chinese for lunch, promising he'd be back in twenty minutes -- he swore it was the best Chinese food she'd ever have, but the problem was they didn't deliver -- Jessica wanted to tidy up and straighten up the house. She could get a lot done in twenty minutes.\n\nShe planned on starting a load of laundry first; she could always switch it after he came home. Sorting the laundry was the time consuming part, not switching loads. Ryan had a pile of dirty clothes thrown in the hamper left over from his Hawaii trip that he hadn't gotten around to washing. She had a few articles of clothing she'd throw in with his; Ryan had done an excellent job trying to stain her undergarments, after all. Then, while it was washing, she'd vacuum the living room and dining room -- all before Ryan came home.\n\nAfter grabbing a pile of clothes destined for the washing machine, she noticed something sticking out of one of his pockets. It looked like a napkin. She pulled it out and went to set it on the dryer when she noticed he had scribbled down a few words on it. They were written down sequentially; \"Amanda\", \"North Shore\", \"Arizona\", \"Return\", and \"OFF -- Complete\". The first four words were lined out. It appeared to be a checklist he spontaneously jotted down, and only the last one wasn't scratched out.\n\nSorrow was the first thing she felt when she saw Amanda's name. \"Ryan, you poor thing,\" she quietly said aloud to herself. It reminded her of how she ended up in Ryan's life in the first place. She shook her head, unable to shake that nagging feeling that she was making a mistake. That this was all a mistake, and she shouldn't even be here.\n\nThe next three line items, \"North Shore\", \"Arizona\", and \"Return\" all brought smiles to her face. North Shore and Arizona were easy to interpret, and she had a memorable experience at both places with Ryan. Return must have meant returning from Hawaii; as nervous as she was to leave the tropical island and join Ryan at his home, everything had been going even better than she could have initially imagined.\n\n\"Off complete?\" Jessica pondered the last item on the list. \"What does that mean... what are you up to, Ryan?\" She couldn't figure out what it meant, but it sounded cryptic. There was an unsettling feeling in the back of her mind that wouldn't leave her alone.\n\n---\n\n\"You're gonna love this, baby. The best Chinese you'll find anywhere. Well, except maybe for China.\" Holding two large bags in each hand, Ryan stepped inside and closed the door with his foot.\n\nJessica looked like she didn't even hear what he said. Instead she asked, \"What does 'off complete' mean?\"\n\nRyan at first looked confused. Then his smile faded and his eyes narrowed. \"Not sure what you mean. Do you want to set the table or get the drinks?\" He put the food on the table and went to the kitchen.\n\n\"Look at me, Ryan,\" Jessica said sternly -- almost coldly.\n\nRyan turned around briefly while opening up the cupboards. The flash of anger that crossed her face was enough to make him cringe for a split second.\n\n\"You're lying! I can see it in your eyes. You know exactly what I'm talking about. Did you forget what I do for a living? Did you forget how well I am at reading men?\n\n\"I started washing some of our clothes and I found this in your pocket.\"\n\nShe handed him the napkin.\n\nHer face turned from anger to sadness. \"Ryan, just don't lie to me anymore. You promised me back in Hawaii you wouldn't lie to me anymore.\"\n\nHis shoulders sagged and he stopped moving around in the kitchen. He tried his hardest to fake a smile, which Jessica didn't buy, and said, \"It's nothing; it's not a big deal. I like order and structure; I just jotted down some of the things I wanted to do with you.\"\n\nThe heartbroken look on her face told Ryan she didn't believe him. \"So then tell me what it means. I don't have any more secrets from you. I-I know what we have isn't exactly orthodox, but you wanted me to be myself and I've done that for you. And I'm glad I've done that for you and have no regrets. But after everything we've been through together over this last week, despite me being a call girl, I think you owe it to me to tell me the truth.\"\n\nRyan was exasperated and threw his arms up in the air, \"Why is this such a big deal to you?\"\n\nShe countered with a raised voice, \"First of all, you lied to me. And you're hiding something. I understand you lying about Amanda, and I forgave you; I even understand it wasn't my place to have to forgive you. Secondly, I don't know what you're hiding, but I've learned enough about you this last week to tell it's something significant. Maybe even painful to you. I can tell by the look in your eyes.\"\n\nShe lowered her voice and said, \"That's what scares me the most.\"\n\nAll he could do was sigh, \"Look, I said it's nothing. Can we just get past this and pretend it never happened?\"\n\nJessica's emotions surprised her. A single tear rolled from her eyes down her cheek. \"If you lie to me again, I'm leaving. If you don't want to tell me, fine. But don't you dare lie to me again.\"\n\nRyan sighed, allowing himself a shred of relief, \"Ok, ok. We won't talk about it then. Let's just sit down and enjoy the rest of the day. Midnight will be here before we know it.\"\n\nShe settled back down, relaxing her shoulders and leaning back, like a cobra that was no longer being threatened.\n\nBut before he realized it, the words were out of his mouth, and the damage was done; \"It's not a big deal, you're just overreacting.\"\n\nHe lied to her again.\n\nThe hurt in her eyes was unlike anything he had ever seen before. Ryan realized he screwed up and it was too late to fix it. Her jaw practically dropped. It looked like she wanted to say something, but only a soft squeak came out. The hurt in her eyes quickly turned into anger.\n\nIt was a big deal.\n\nShe wasn't overreacting.\n\nAnd he lied to her again.\n\nShe stormed down the hall to his bedroom and grabbed her suitcases. Frantically, she threw clothes, beauty products, and shoes in, zipping them up as fast as she could.\n\nRyan chased her down the hall, \"Jessica, I-I'm sorry. I...\"\n\nHe was at a loss for words. She ignored him like he wasn't even standing there, except to walk around him when she needed to grab something for the suitcase.\n\nJessica probably forgot a few things -- she had three full-sized suitcases, after all -- but she didn't care. She just wanted to get out of there as soon as she could.\n\nOff balance, she rolled and dragged her suitcases behind her, down the hallway and to the door. \"I'm not going to listen to you lie to me, anymore. And I'm not going to watch you hurt yourself. Amanda is gone, and...,\" she could barely finish her sentence through her tears and sniffling, \"and I'm not her. I never can be her.\"\n\nShe couldn't help thinking to herself that it was best for her to leave, even if he never lied to her in the first place. She was living in a fantasy world; she should have never accepted him as a client. This whole thing was a mistake -- everything was a mistake.\n\nAs she stepped out the door, she turned around and without looking into his eyes she told Ryan, \"Don't call Madeline again and ask for me. Don't you ever even think of calling me, either!\"\n\nShe ran out to her mustang and threw her bags in the back. For a moment, she wondered if she was overreacting. Her thoughts and emotions quickly overrode that feeling, No! I most certainly am not!\n\nShe turned around discreetly, looking for Ryan. She expected to see him chasing after her, or at the very least standing in the doorway.\n\nHe wasn't anywhere in sight.\n\nJessica wiped away her tears and sat in the mustang. With one last desperate look, she looked for signs of him anywhere; he wasn't standing in the doorway, and he wasn't peering through the windows.\n\nThe engine of the mustang roared and the car screamed down the road. Within moments, the house had vanished from her rearview mirror.\n\nX\n\nThe wind blowing through her hair felt relaxing as she cruised down the highway on her trip to nowhere, especially after she exploded on Ryan.\n\nReplaying the recent events over and over in her head, she tried to figure out what had just gone wrong. It could have been more than just the lie; it might have been because the stress of everything she had experienced this weekend had finally boiled over. Ryan forced her to question who she was, what she wanted, and what she cared about. Maybe she expected too much from him; maybe she put too much trust in him. One thing was for sure; she opened her heart to him and allowed herself to be vulnerable. She placed her heart of glass carefully, gently in his hands. And what did he do? He dropped it on the floor, allowing it to shatter into a thousand pieces.\n\nAnd she had no one to blame but herself.\n\nEverything was so surreal and confusing; she wasn't even sure if she was being rational or not. Either way, Jessica snapped, and she knew it.\n\nSome escort you are, she thought to herself, walking out on the client before his time was even up. What the fuck happened to you, girl?\n\nHer mind began to race.\n\nYou shouldn't have stormed out on him like that; he didn't deserve your wrath. You left him while he was in pain.\n\nYes you should have! You should have left days ago; it'll never work between you two. This was one big mistake from the beginning.\n\nHe's no different than any other man. He lied to your face more times than you can count.\n\nIf he was honorable he'd never have hired a hooker like you.\n\nYou only have feelings for him because of his sad story. You're a sucker for wounded men. Grow up and move on.\n\nNo; Ryan is special. He's your soul mate, and he's your hero. But you just blew it.\n\nJessica accelerated to ninety miles per hour, fifteen over the speed limit on Interstate Five. She kept heading north on the interstate without a destination in mind, at least until the bars opened later.\n\n---\n\n\"Madeline, how could you not tell me I looked like his wife,\" Jessica shouted through the cell phone, signaling to the bartender for another strawberry margarita.\n\nThe voice on the other end told her, \"You know how it works, Trixie. Despite our profession, we do have a certain degree of client confidentiality. My job was to make sure he wasn't dangerous. Was he a little off his rocker? Maybe a little, but he certainly wasn't dangerous.\"\n\nShe shook her head, \"I still can't believe you knew and didn't tell me! Or at least give me some kind of warning. I walked into his world without a clue.\"\n\n\"I understand your feelings, Trixie. I'm sure you can forgive me given the amount he was willing to pay you, not to mention the little tryst you two kids took to Hawaii? Am I really not forgiven?\" Madeline always had a way with words; maybe that was why she was the boss.\n\n\"Thanks,\" Jessica whispered to the bartender as the margarita arrived, covering the phone. She took a big sip through the straw.\n\nBreaking through the silence, Madeline asked, \"Is that why you called, honey? To vent? Or is something else going on?\"\n\nJessica sighed, \"No; well, yes and no. I also have a little confession to make which might not be so great for business. Um... has Ryan called you?\"\n\n\"No. Should I expect his call?\"\n\n\"Maybe. It's a little after midnight right now, but I bolted around noon. I just got up and left. Long story. I didn't know if he had called complaining or not. I'll give him back his money for the half-day I skipped out, maybe a little more to smooth things over, if he makes a big deal out of it. But I'd like you to be the one to deliver it, if you don't mind?\" Jessica was nervous and not sure how Madeline would take the information.",
        "The phone was quiet. Jessica took another big sip.\n\n\"Trixie, this isn't like you. What exactly happened? Did he do something to chase you away? Tell me my judgment wasn't wrong.\"\n\n\"N-no, no. He was a perfect gentleman. We just had a few... issues. You had to have seen that coming with the entire Amanda situation, though. This was never meant to work out,\" Jessica choked out the last part. She couldn't believe what she was saying, but she knew it was true.\n\nMadeline sounded a little irritated, \"If you're sure about this, I'll call Ryan tomorrow and smooth things over.\" Madeline asked her point blank, \"Tell me something. Did he get to you?\"\n\nHer flush face betrayed her, and she shook her head. Jessica was just glad Madeline wasn't there in person to read her expression. \"Oh, Madeline. Don't make me answer that.\"\n\n\"Mmm-hmm. I thought as much. After all the good service you've given us, I won't hold this one against you. Just keep your head on straight, honey. It's probably best you left when you did since tomorrow is his anniversary. Actually, I guess I mean today, since it's after midnight.\"\n\nJessica froze.\n\n\"What did you say?\"\n\nMadeline didn't quite follow her, \"Say about what?\"\n\n\"His anniversary.\"\n\n\"It's today, December 12<sup>th</sup>. At least that's what he told me. It would have been their five year anniversary today. He didn't come out and say it, but I'm fairly certain that was why he hired you all the way up until yesterday, December 11<sup>th</sup>. I can only guess he wanted private mourning time.\"\n\nThere was a pause; Madeline heard no response. \"Trixie, are you there? Trixie? Hello?\"\n\nJessica threw a twenty on the bar, hung up her cell phone, and ran out of the bar as fast as she could while trying not to trip over her high heeled sandals.\n\n---\n\nThe mustang tore out of the parking lot. \"OhGodohGodohGod, please let him be there still,\" she said, praying as hard as she could. She hadn't prayed very much in her life, but she was now, and could only hope that she would be heard.\n\nShe cursed herself, \"How could I be so stupid?\"\n\nShifting into sixth gear, she hit excess of one-hundred miles per hour. The clock said it was fourteen minutes after midnight. She pulled out her cell phone and tried to call Ryan. \"Pick up, pick up,\" she quietly mumbled to herself. It went straight to voicemail. Jessica desperately tried calling several more times, but he never picked up. \"Don't let me be too late. Please, God...\"\n\n---\n\nHer mustang came to a screeching halt. Jessica threw it in park, pulled the keys out, and jumped out of the car so fast that she didn't even bother closing the door.\n\nFrantically ringing the doorbell and knocking at the same time, she bounced up and down with a bend to her knees, crossing her arms as she waited for him to answer. It took everything she had to remain still and try not to knock the door down with all of her pent up energy and impatience.\n\nShe rang the doorbell again, refusing to wait any longer.\n\nRyan cracked open the door.\n\n\"Jessica?\" He was genuinely surprised to see her, asking, \"What are you doing here?\"\n\nShe pushed her way inside, forcing Ryan to take a step backwards.\n\n<br> \"Um, come in,\" he said facetiously, even though she didn't appear to detect his dry semi-humorous comment.\n\nJessica wanted to pounce on him -- hug him, kiss him, slap him, or punch him, she didn't know -- but she tried to remain calm. At least on the outside.\n\nHe asked in earnest, \"Are you ok? Is everything alright?\"\n\nShe ran her hands up her arms, \"Yes, it... no, actually. It's not alright. Why didn't you tell me today was your anniversary?\"\n\nA sigh escaped his lips, \"My anniversary? That's what you came over for?\"\n\n\"Just answer me, please, Ryan.\"\n\n\"You've been talking to Madeline, haven't you? I wish I had never told her. I let it slip out when I first sat down with her. I knew that was going to come back to bite me in the ass.\"\n\nThe look on his face changed from apprehensiveness to frustration, \"What are you doing here? You made it clear when you left earlier you wanted nothing to do with me. And it's past midnight, so our time's up.\"\n\nHe waited for her to respond. She couldn't shake the nagging feeling that something was wrong, but he seemed remarkably calm. He seemed especially calm for his fifth anniversary, or his first anniversary without Amanda.\n\nJessica didn't know what to expect when she showed up, but she didn't expect this. She wasn't sure what to say. She half expected his alcohol level to be three times the legal limit, or at least crying his head off. A dark thought even crossed her mind that she might have found him dead.\n\nBut here he was, and he was incredibly calm.\n\nHe shook his head and sighed, trying to find the right words to say, \"Look, Trixie. I had a blast with you. I think you even had a great time with me, too. I wouldn't have traded those memories with you for anything. You made my life have a purpose again. You're an amazing girl, and someday you're going to make someone happy. I have no doubts about that.\"\n\nShe was shocked -- he called her Trixie, not Jessica. She wanted to say, \"Why didn't you call me by my real name, you big jerk?\" but she held her tongue. Barely.\n\nShe wasn't sure if his smile was cynical or genuine, but he said, \"You won't be in the escort business forever. You're too smart for that.\" Reaching out, he lightly touched her cheek sending shivers down her spine but prolonging her confusion.\n\n\"I appreciate your checking up on me, but you don't need to. I'll be fine.\"\n\nThere was something about the way he said that unsettled her. She believed him, but her instincts were telling her there was more to the story. He was acting different.\n\n\"Ryan,\" she started, taking a deep breath. \"I'm so sorry I bailed on you. That's twice now.\" The guilty look on her face told him she meant her apology.\n\n\"I shouldn't have been so hard on you about lying to me; I could have handled it differently.\"\n\n\"Hon, I...,\" Ryan tried to speak but she cut him off.\n\n\"Please, just let me finish.\"\n\nHe nodded for her to go on.\n\nCalmly, she continued, \"I know it's not exactly our business policy, but I want to stay with you. Just one more day. You don't have to give me a dime, it's not about that. You shouldn't be alone on your anniversary.\"\n\nAgain he started to shake his head and speak, but Jessica put a finger to his lips and gave a subtle grin. \"I won't be here to replace Amanda. We don't even have to be intimate.\"\n\nShe put her arms around his shoulders, looking him in the eyes, \"Just two friends together, Ryan and Jessica.\" She stressed her own name and gave him a playful-yet-dirty look, as if to say \"not Trixie.\" He smiled bashfully and looked to the floor; she knew that he fully understood he was in trouble for intentionally calling her by the wrong name.\n\nShe could tell by the look on his face that she wasn't getting through to him.\n\n\"Jessica, I'm sorry. I'd love that, I would. Just now isn't the right time.\"\n\n\"Ryan, I know you're in pain, and I can't bear to watch you like this. You can't do this yourself. Please... will you at least consider it?\"\n\nA certain look flashed in his eyes. At first, she thought he would agree.\n\nRyan put his hands gently on her arms, and carefully took them off of his shoulders. His soft eyes had moistened, and he barely croaked out, \"I don't think so, Jessica. I really don't think we should see each other again.\"\n\nHer heart skipped a beat. She tried her hardest not to cry, but it was inevitable. Streams of tears ran down her face. Rejection was something she didn't have much experience with. Still, even common rejection from anyone else wouldn't have been so bad, but coming from Ryan, it hurt badly. It flat out stung.\n\nWould he even miss her? He said it so easily... \"I really don't think we should see each other again.\" Those words echoed in her head; it was obvious he had come a long way from being wrapped around her finger. He clearly wasn't anymore.\n\nRyan walked over to the door and held it open for Jessica. He avoided looking into her eyes. He whispered, \"I'm sorry.\"\n\nShe stood motionless. Maybe she deserved it; after all, she was the one who bailed on him in the first place. She knew he wanted her out of the house, but she could barely move her legs.\n\nThe best she could do was give him a tiny nod.\n\nTurning around behind her, Jessica desperately wanted to take one last look at the house she had come to feel so comfortable in. She glanced at the couch; so many wonderful memories were made on that couch. Even the dining room table; memories as simple as having breakfast or lunch with him was now over. It was hard to believe everything was ending this way, but she had no one to blame except herself. Even if he was stubborn. Taking a couple of steps backwards towards the door, she looked down the hallway and into the bedroom. The bedroom where she felt so loved, so happy.\n\nJessica stopped. While her initial attention was on the bed, she noticed the safe next to the bed out of the corner of her eye. It was the same safe Ryan put his gun in earlier when he told her he was cleaning it.\n\nThe safe was open.\n\nShe whirled around with wide eyes, staring down Ryan.\n\nHe knew exactly what she was going to say.\n\n\"Dammit Jessica, please. Just go. Get out.\"\n\n\"Oh my God, Ryan!! No, you're not going to...to....\"\n\nRyan put his hands up towards her in a defensive position, trying to get her to calm down. Jessica could finally see a chink in the armor of the man of steel. His calm demeanor was deteriorating; his body remained motionless but tears were starting to surface.\n\nJessica screamed, \"You've had this planned since the beginning, haven't you? Y-you, you're going to try and kill yourself? Ryan, how can you stand here and even think of doing something like that?\"\n\nThe look he gave Jessica told her everything, \"Jessica, please...\"\n\n\"I get it now; you wanted one last time to be with someone who looked exactly like Amanda, so you could pretend it was her. That's why you chose me. I'm guessing you even emptied your entire bank account to make it all happen, spending it on me and our trip in Hawaii. But that final memory wasn't enough; you wanted to wait for me to go, for your anniversary to come, and then you'd go out with a bang. You're hurting so badly you want to end it all.\"\n\nHis gaze was empty; it was as if he was looking at something from afar with dull eyes. \"You're wrong about the last part,\" Ryan said. \"It's not about ending everything or going down in a blaze of glory; it's simply about seeing them again. I want to see my Amanda and my boy.\"\n\nHis head hung, \"I'm tired. I want to be with them on the other side. May God forgive me, but it's the only way to see them again.\"\n\n\"Ryan...,\" she barely squeaked out.\n\nRyan's once beautiful eyes were now filled with rage. The red blood vessels in his eyes looked like a burning fire. The more he talked, the more his anger began to surface. \"You... you just don't get it. You can't possibly understand the pain I'm feeling!\"\n\nShe was becoming scared.\n\nHe started yelling, \"I should have DIED in fucking Afghanistan. I should be with them right now! That IED should have hit us. Instead... death passed right over me. Instead, they died. I thought just missing that mine was a blessing, but it was a fucking curse. Even that fucking drunk driver died in the crash, so I can't even get revenge on him, even if I wanted to!\"\n\nThe passion and anger in his voice was unlike anything she had seen from him. \"I can't wait any longer. I will NOT wait any longer! I refuse to go through life anymore without them. The pain... don't you understand? It's overwhelming. I miss them. I miss...,\" His lip quivered and he couldn't speak, but he looked directly at her. It was like he was looking into her soul, begging for her to leave.\n\n\"Ryan,\" she said, trying her hardest not to shake. \"It doesn't have to be this way! I know you love her. I know you love them both, but it will get easier.\" She desperately wanted to help him, but couldn't think of what to say to convince him.\n\nBravely, she stepped closer to him and whimpered, \"Don't do this, Ryan.\"\n\nRyan held up a hand for her to stop. He reached behind his back and pulled out the nine millimeter which had been tucked in the back of his pants.\n\nJessica froze in her tracks.\n\n\"It's too late, Jessica. We're past the point of no return.\" Ryan's face was red, but he wasn't crying anymore, \"I'm so, so sorry. I wish things had turned out differently.\"\n\nHe looked her in the eyes and said, \"But that doesn't matter anymore. It's time for you to go.\"\n\nShe was quivering, and the fear made it almost impossible for her to think rationally. Her legs were shaking. The fear on her face was evident. Half of her was convinced she couldn't move, while the other half was ready to run out of the house as fast as she could.\n\nMaybe it was because she looked him back in his dull, lifeless eyes; she didn't know why she said what she did. Jessica softly squeaked out a \"no\", shaking her head slowly.\n\nDespite his lifeless eyes, she noticed a small spark somewhere deep within; it was a brief look of surprise.\n\nHe sharply said in a deep voice, \"It's not an option, Jessica. Go.\"\n\nWith a little more boldness, she shook her head again and said, \"No. I'm not leaving.\"\n\n\"Jessica!\"\n\nDeep down she knew she should have ran, or maybe even tried to convince him into giving up his gun, but her anger at his stupid stubbornness started to overcome her fear. She was still terrified, but she managed to cross her arms in defiance.\n\nShe screamed, \"If you want to blow your brains out, you'll have to do it in front of me! I'm NOT leaving!\"\n\nHis eyes narrowed, \"Oh yes you are.\"\n\n\"No I am NOT!\"\n\nShe could tell by the look on his face that he meant business, and he was about ready to charge her.\n\n\"Don't you dare...,\" was all she got out.\n\nRyan lurched forward with his weapon pointed downward and away from her. She backed up but wasn't quick enough; before she knew it, Ryan built up enough steam to squat down and lift her over his shoulder with one quick motion, holding her with one hand as if she weighed nothing.\n\n\"Oh. Yes. You. ARE.\"\n\nJessica screamed and kicked, flailing her legs as hard as she could; she made fists with both hands and hit his back, but he wouldn't let her go. She struggled as if her life depended on it.\n\nHe grunted a few times after she hammered a few good hits on his back but he turned around and walked towards the door.\n\nShe shrieked at the top of her lungs, \"No! You asshole, put me down! Let me go! Let me GO!\"\n\nIt was obvious she was losing the battle; she still kept flailing and kicking although it was becoming futile.\n\nOnce they were outside his house, Ryan said, \"Jessica, listen to me very carefully.\" He tucked his gun back behind him in his jeans. He carefully set her down and firmly held her shoulders. She tried to break away, but he grabbed her wrists, trying his hardest not to hurt her.\n\n\"I don't blame you for any of this. This is NOT your fault. In fact, you have no idea how grateful I am to you. I meant what I said earlier; you are an amazing girl and you made these last few weeks so much better. Someday, you're going to make someone extremely happy. Don't blame yourself for what's going to happen. Just remember its better this way, better for everyone.\"\n\nHer words were barely intelligible through her hysteric crying, \"Ryan, don't... DON'T DO THIS...!\"\n\nAll she could think of was that it wasn't going to be better for everyone. It wouldn't be better for him. It especially wouldn't be better for her. How could he not see that?\n\nShe saw a smile of relief crossed his face, but there was something about that smile that made her sick to her stomach. \"Thank you, Jessica...\"\n\nEverything seemed to happen in slow motion. She read his face and knew exactly what he was going to do, but she just wasn't ready for it.\n\nHe let go of her wrists as she was tugging backwards in an attempt to free herself from his grasp. She could feel herself falling towards the damp grass, but it was so surreal; it was almost as if she defied gravity and fell as gently as a feather. She couldn't stop herself from falling, and she couldn't stop Ryan from turning around, letting her fall.\n\nIt was all a blur when Ryan stepped back inside the house and slowly closed the door behind him. The click of the lock echoed; her heart felt like it had stopped beating.\n\nShe barely remembered getting up and charging at the door, and had no recollection of what she said. Jessica only remembered screaming and yanking on the door handle as hard as she could, but it wasn't hard enough. Unaware of the concept of time, she had no idea how long she stood there.\n\nA deafening gunshot rang out inside the house.\n\nOne single shot. As quickly as it went off, it was over.\n\nHer heart stopped. She couldn't breathe.\n\nJessica sobbed uncontrollably as she slumped to the ground, leaning against the door. Ryan was gone. "
    ],
    "authorname": "Spartan22",
    "tags": [
        "ryan",
        "trixie",
        "jessica",
        "suicide",
        "heartbreak",
        "drama",
        "hope"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/operation-final-fantasy-ch-04"
}