{
    "title": "A Magnificent Bastard Pt. 02",
    "pages": [
        "It was a wintry Wednesday evening in New York, and I was in a hotel room winding down from another day of work. Jeremy, one of the other product managers, had summoned us here to do an impromptu sketch of next year's feature roadmap. Normally we all work from wherever. We were one of those companies where everybody was remote, and our headquarters was not in one physical office, but in this ineffable matrix of video chats, cloud storage files, and collabjects. And for all of the virtues of that line of work, of not having a commute and of working with sharp minds from all over the world, there was still something to be said for just getting together in person and hashing things out face to face.\n\nGabe came up from Austin, Magnus and Anira took the train down from Cambridge, and it was, of course, convenient that two of our lead devs, Mindy and Ivan just lived over in Queens. So we'd all get together in Jeremy's Brooklyn loft to sketch out plans for the next year, then keep it going in bars afterwards, until eventually I'd go back to my Manhattan hotel room, fall asleep and start it over again. Yet, this evening I was feeling a little too keyed up from the conversation and not quite ready to call it a night. \n\nMy tablet was in my lap, and I was passing some boredom by surfing through my various social feeds, though it was the usual assortment of predictable mediocrity. Outrage piece. Cat video. Someone's baby photos. Someone's photogenic plate of food. Oh, but wait, who posted that plate of food? Ah, yes, Rachel.\n\nI haven't seen Rachel in person for about four years. We used to work together, in a past life at a past company, and she was one of those bright young things that had the mixed fortune of being a pretty face in a really male environment. She was a smart one, but her looks combined with her youth made it hard for her to be taken seriously. We got along mostly because I didn't hit on her and I treated her professionally. It was my policy back then never to hook up with coworkers, and she appreciated that. \n\nOf course, one is always tempted to make exceptions.\n\nEventually Rachel left, backed the wrong side of a political shuffle and sent on her way. She left town, moved across the country to the East Coast. I thought that was it for us, another pair of colleagues gone on their way, but then she reappeared in town to visit her parents for the holidays. We met at a bar, talked as friends, and, well, realized that we were no longer coworkers so we didn't need to hold back on certain rules.\n\nThat was five years ago, and then a year later, she came back to introduce me to her new beau, a big, athletic lunk of a guy named Josh. We only met once but I don't think Josh and I got along all that well. I don't think Rachel told him about our little fling, but of course there's certain things that will set off another guy. Little bits of chemistry between us that would hint at something more. Ways that we'd hold a hug a little longer than was casual. Josh may not have been the most sophisticated fellow, but he was savvy enough to pick up on some hint of history, and, well, he could've gone a couple of ways with that. One way was to talk about it, agree that the past was the past, and that he'd trust his girlfriend to be honest with him with her expressions of love and devotion. Another way was to be possessive, and always suspect or dislike someone who slept with his girl before he did. I guess Josh was more of the latter.\n\nThat may have been one reason why Rachel and I didn't see each other much since then, and that was a bit sad, but life was life and I got on with mine. Still, we kept each other linked on various online social networks, and our friendship was like this:\n\nRachel posted a photo, caption: \"woo-hoo! finally taking the plunge and moving to New York with the boyfriend! Go big or go home, bitches!\"\n\nJake liked this\n\nJake posted a photo, caption: \"sunrise, Day 2 camp overlooking the Milford Track in New Zealand.\"\n\nRachel commented: \"*dreamy sigh*\"\n\nRachel posted a photo with Josh, caption: \"one thing about living in NY is that it's always drunk o'clock somewhere.\"\n\nJake liked this.\n\nJake posted a photo with Elise Douvre at Sam and Amanda's Wedding.\n\nRachel liked this.\n\nJosh posted a photo of Rachel, caption: \"Moon over the beaches of Mallorca and I am the luckiest man in the world\"\n\nYou know, friendship in the 21st century. I guess she must be 29 now.\n\nIt was not a surprise to see her getting engaged. It was a year ago, and they seemed pretty happy. But then, she had gone silent online recently. I hadn't really noticed until now. There was a pretty steady series of updates about getting ready for the wedding, but that gradually faded until she dropped out entirely. Now there was this photo, a plate of chocolate cookies surrounding a square of cake with chocolate sauce artfully drizzled over it. \n\nCaption: \"sometimes the prescription is chocolate.\"\n\nI pulled up the commenting interface and was about to type something, but then thought of it and closed the commenter. I should leave her alone. Let the past be the past. She may not even be interested in seeing me again. Or maybe she is. Maybe I should just see if she'll respond. I opened up a universal messenger, and just sent her something private asynchronous. Just between you and me. Not urgent. Reply when you're ready.\n\n\"A second medical opinion would say that the prescription is whisky. Hey, Rachel. I'm in town for a bit and was wondering about catching up. Are you around?\"\n\nHer reply came back in ten minutes.\n\n\"Jake! How are you? Of course, we can totally catchup. Can you switch to chat?\"\n\nI toggled my messenger into chat mode, and watched as the usual word balloons materialized and a little status window showed that Rachel was online and typing.\n\n\"Hey, Jake, so I'm just finishing up at this restaurant, but I can probably meet for a drink somewhere. Where are you staying?\"\n\n\"I've got a hotel room in the Lockwood, over in the Upper West. But I could meet you anywhere, though.\"\n\n\"Oh! Actually I really like the bar in the Lockwood. The agency's done events there in the past. Their Old Fashioned is pretty great. Meet you there in 30?\"\n\n\"Sounds like a plan.\"\n\nThe Lockwood's bar, Mavis & Dean, was by all accounts, not as painfully hip as one may fear from a New York cocktail bar. The look was still pretty distinctly early 2010's aesthetic. Plaid-shirted bartenders, lots of beards and spectacles, artisanal everything. Not quite as minimalist and engineered as the current zeitgeist was. At least they weren't trying to pass themselves off as a speakeasy. I had just pulled up a stool when Rachel walked in.\n\nIt had been five years and her hair was different - shorter, more asymmetrical, but she was still Rachel. Slender, graceful, with a subtle set of womanly curves hidden beneath a veneer of professional attire. Those sapphire eyes still glittered against her pale skin, though they did look a little heavier, sadder. I pulled her into a hug, and felt her cheek press against mine.\n\n\"Hey stranger,\" she whispered.\n\n\"Hey yourself. It's been a while.\"\n\n\"Oh yes, it has. Last I saw you, you still looked more like my best friend's hot older brother. Now you look like my dad.\"\n\n\"All the grey came in last year.\"\n\n\"Don't get me wrong. The silver streaks look good on you. It gives you some much undeserved dignity, even if it's probably a sign that life's burdens are taking their toll. Girl, work, or family?\"\n\n\"A little of each, I guess? Maybe not so much with the work, but the other stuff has been crazy.\"\n\n\"Tell me about it. Are you still seeing Elise?\"\n\n\"Mmm, no. We split a while ago. She had to move back to France and we were kind of done, anyway.\"\n\n\"Oh, that's too bad. She was super pretty. What are you having?\"\n\n\"I think I'll do this Louisiane, the absinthe and the whiskey have me intrigued. You?\"\n\n\"I've been thinking about their Old Fashioned ever since you suggested the place, but actually, you know, what? There's a Talisker that caught my eye.\"\n\n\"So you're still doing single malts?\"\n\nAnd she smiled and looked away for a second, \"for special occasions.\"\n\n\"How are you doing? How's Josh?\"\n\n\"Oh,\" she said, casting her eyes down. \"Umm, can't say that I know how Josh is doing. We called off the engagement about four months ago.\"\n\n\"Oh, jeez, Rachel, I'm sorry.\"\n\n\"You don't need to apologize. We've been kind of keeping quiet about it. tl;dr is that he's an asshole. Thankfully, I only joined this ad agency right before everything hit the skids, so it's not like they got a chance to know him or ask any prying questions. Still processing, and it's complicated. What brings you to town?\"\n\n\"Work.\" I said, cooly taking the hint to let the topic go somewhere else \"I've got a few colleagues out here, and just got together to do a big in-person planning meeting.\"\n\n\"Oh yeah, I think I read about you guys in Fast Company. One of those hot new breeds of virtual companies where everybody's working from home, and it's all just video and text chatting and nobody wears pants.\"\n\n\"It is awfully tempting to just show up at work in my pajamas; but that gets old after the first month. It doesn't matter if nobody's around to see it. If you dress like a bum, you work like a bum.\"\n\n\"I never figured the mighty Jake Traeger to dress like a slob. Glad to hear you're still keeping standards. How long are you in town for?\"\n\n\"I fly out on Friday.\"\n\n\"Really? Not even sticking around to for a holiday winter weekend in New York? You've already gotten work to fly you out here, might as well stay a while, but I bet you've got plans back home.\"\n\n\"Nothing special. I'm heading off to see my parents in a couple of weeks, but I kind of don't know anyone else in this city, and I've done the tourist thing a bunch of times. I like my coworkers, but -\"\n\n\"- but you're still the same Jake who doesn't mix business and pleasure. I get that. How about this? I have a company holiday party to attend on Friday. It should be fun! Creatives and ad people know how to party, right? We're renting this nightclub a few blocks from the office. There's going to be an open bar with a couple of local bands playing, and you'll meet all kinds of New York scenesters. Come on, don't let me go alone.\"\n\n\"I thought you said that I looked like your dad.\"\n\nRachel's beautiful eyes fixed on mine. \"Even after all of this time, do you honestly think that still matters to me?\"\n\nI just smiled and looked down from her gaze, \"You know, I seem to remember another night at another bar where you were trying to sell me on a party.\"\n\n\"Oh, that was a nice little night, wasn't it? But, I promise, Jake. This time, we're actually going to the party.\"\n\n\"Oh good, for a second, I thought you were just propositioning me for sex.\" \n\n\"Still a bastard, Jake.\"\n\n\"Let me see about changing my flight.\"\n\nShe smirked and arched an eyebrow at me, \"Don't give me that 'let me see' stuff, Jake. You're changing your flight. Go home on Saturday if you want, but let's just have some fun before hand.\" She poked me playfully on the shoulder for emphasis.\n\nWe passed the rest of the evening catching up on the last five years, with me telling Rachel about life back in the old city and her relating various stories of New York adventure, but still studiously avoiding any talk of her blow up with Josh. She left a little after 11, flash hailing a car from her phone before pulling me into a hug. She smelled of ginger and vetiver.\n\n\"Hey,\" I whispered, \"I'm glad that I got to see you.\"\n\n\"Yeah,\" she said, pressing her cheek against mine. \"I'm glad you came to town.\"\n\nI watched her get in a self-driver and stood on the sidewalk as the car pulled away and turned at the corner. Then I went in and approached the front desk.\n\n\"Hi\" I said, \"I'm checked into Room 1248, and I'm supposed to check out on Friday, but need to extend my stay to Saturday. Would that be possible?\"\n\n\"Anything's possible, sir. But please let me check.\" The clerk looked at his computer and tapped a few keys before looking up and saying, \"I can't keep you in the same room, but fortunately we have a few last minute cancellations because of the impending snowstorm. So I can put you in another room if you don't mind?\"\n\n\"I think that should be fine, but what sort of storm are you talking about?\"\n\n\"Oh, National Weather Service reported that we've got another Noreaster on the way. Supposed to be a doozy, but it doesn't arrive until Sunday morning, so if you're leaving on Saturday you should be fine. Some others decided to leave earlier, so I can put you in their rooms instead.\"\n\n\"Ok, thank you. So I assume that I need to pack my bags out and then check in afterwards?\"\n\n\"Quite right, sir. But you're probably not going to be able to check in until the afternoon. We have to clean the rooms after all.\"\n\n\"No worries. I can manage.\"\n\nChanging my flights was also easy, so on Thursday evening, as I was packing my things to go, I contacted Rachel again.\n\n\"Hey, so I got my reservations shifted and we're on. What's the plan for tomorrow? When and where should I meet you?\"\n\n\"Ah, yes, let me send you the address in Midtown. The party starts at 6, and there's a cocktail hour from then until 7, which is when dinner starts. It's not far from the office, and I'll just be hanging out at work until it starts, so let me know when you get out of the subway and I'll meet you there?\"\n\n\"Hmm, well, I was able to get my reservation extended but I need to pack out of my hotel room and then check back in. What about, rather than go all the way back up to UWS then back down to Midtown, I just bring my suit and luggage to your office and change there a little earlier?\"\n\n\"That works too! In that case, you can come by at 5:30 and I can also give you a tour of the office after you're all dappered up.\"\n\nThe next couple of days flew by, and on the night itself, I found that Rachel wasn't exaggerating that her workplace was multiple levels of swank. Everything was either so white that it almost glowed or so dark that it almost seemed to drink up sound and light. Black holes as decorative ergonomics. Walls of plants and hedges added some warmth to the place, but still gave everything this retro futurist space station vibe.\n\n\"The conference rooms are also pretty neat,\" Rachel said as she led me past a small wall of impossible topiary and into narrow space with a table of dark glass. She pressed her hand against the table surface and a small keyboard appeared as the table greeted her. \"Hello, Rachel.\"\n\n\"oh, is this a Surface Table?\"\n\n\"Yup. Just got them this summer. People were talking about them being the new wave of design collaboration, but mostly we use it for playing Scrabble.\"\n\nI placed my hand on the Surface and waited. The computer built into the table greeted me as \"Guest\" and then presented a keyboard for me.\n\n\"Hmm, I wonder ...\" I hit a couple of hotkeys. \"A-ha, of course, it's still Windows underneath. Let's see if your guests can bring up Task Manager.\"\n\n\"Hey, are you hacking into our conference tables?\"\n\n\"I'm just curious.\"\n\n\"Jake! You're not getting me into trouble at a holiday party.\"\n\nHer hand had gripped my wrist, though her voice had a hint of a laugh on it. The skin was still soft but the grip was stronger than I remembered. I looked at her hand then at her. Those blue eyes. \n\n\"Don't worry.\" I said as I raised my hand from the Surface. \"I'm not going to cause any trouble.\"\n\nShe let go, but I placed my hand back on her arm, and I let my finger trace along a raised vein as I smirked, \"Trouble, no. Mischief, maybe.\"\n\nI leaned in and kissed those red, luscious lips. Rachel sighed, and began to return the kiss, but then I felt her hands push back against me. \"Hold off, tiger.\"\n\n\"I'm sorry, was I presumptuous?\"\n\n\"No, umm, I don't know. It's just, well, I haven't seen anyone since Josh. It's been a while and I'm a little out of practice.\"\n\nOddly, I found that response to be a relief. I reached down and took her hand again and squeezed it. \"No problem, darling. To be frank, I haven't been with anyone since Elise, and I'm doing a bit of warming up myself. We can go slow, and we can stop at anytime. Ok?\"\n\n\"Ok.\"\n\n\"Party?\"\n\n\"Yes. You still need to change into your suit, right?\"\n\nWith completely platonic professionalism, Rachel guided me to the men's room where I could change into my suit, and then we agreed to just leave my other gear at her desk rather than schlep it all the way to the club. As I changed though, I did take a moment to go through my toiletry kit and find one small case with a very important blue pill. I'd almost left off packing it on this trip. Bringing Viagra after a year long dry spell seemed like foolish optimism, but now here it was and here we were.\n\nStill, I wasn't sure. Maybe Rachel was giving me a signal to back off. Maybe she did want me to take this further. I didn't want to lose her as a friend, but maybe she was also thinking the same thing and had the same fears.\n\nSoon, Rachel had joined me in a devastatingly gorgeous cocktail dress. It was a shimmery silver that set off her blue eyes and dark hair. The dress hung effortlessly on her well-defined shoulders, with a near scandalous neckline that plunged past the cleavage of her chest, and flowed into a skirt with a snug fit around her fit and luscious hips. \n\n\"You like?\"\n\nShe obviously wasn't wearing a bra, and the twin curves of her breasts hinted delectably from the heart of her dress. As waif like and slender Rachel was in her earlier youth, I liked this curvier, sexier her.\n\n\"Quite yes.\"\n\n\"I like you too.\" She winked and we were off.\n\nThe club was loud, the people were beautiful, and the drinks were generous. Rachel's colleagues were important ad people, so the party just wasn't for them, but for all of their clients, a veritable who's who of glitterati. There were no tables or assigned seating to get in the way of the hobnobbing and networking, just an array of food being passed around to be followed by what seemed like an endless stream of cocktails and champagne. \n\nRachel had introduced me to a couple of her coworkers, but it was hard to catch names over the din of music. Eventually an old, sensuous Florence + The Machine song came on, and I felt Rachel grab my hand and pull me into a crowded dancefloor. The remix was slow and silky, and I let my hands fall on Rachel's slim waist as we swayed in time, hips pressed against each other, noses and cheeks inches away, her scent heavy on my nose.\n\nWe danced like that for a while, before the DJ decided to increase the tempo and get into dancier terrain. I took Rachel's hand this time and led her up to a mezzanine, a quieter space further away from the speakers and with a good view of the club below.\n\n\"All those girls,\" she said as she looked down on the dancefloor, \"I remember being like them once, all pretty, happy and carefree. Delighting in the gaze of boys and drawing the eye of men. Feeling the power in being beautiful. God, I can't believe I'm almost 30. 30! Would you believe it? I can see my marry-by date on my wall calendar.\"\n\n\"Hey, Rach, do you hear that? Over the music? That violin that's playing for you? No? Maybe it's because that violin is really fucking tiny.\"\n\n\"Thanks for the sympathy, Jake.\"\n\n\"Seriously, girl, there's no reason for that kind of over-the-hill talk. Looks change over time, yes, but so does taste, and you probably won't want the guys who just go for the 20 year olds. Also, you're smart as hell, and there's no age limit on that. I know that it sucks to be single again, but you've still got it. And give yourself time. You'll look back on your time with Josh and probably say, 'Thank God, I didn't waste any more years with that jackass.' \"",
        "Rachel smirked and looked at me sideways, \"did you really think he was a jackass?\"\n\n\"I thought he was pretty buff and handsome, and I could see how you'd be attracted to him, but I was more expecting you to fuck his brains out then leave him for someone whose brain was thicker than his cock.\"\n\n\"He was kind of a clod, wasn't he? Disappointed in my taste?\"\n\n\"You? Nah. Honest mistake. We all get wrapped up in someone who's no good for us. All we can do is figure out how to move on.\"\n\n\"What do you suggest?\" Her bluer than blue eyes were on me again, and I leveled my own gaze back as I said.\n\n\"Find someone who reminds you what it's like to have fun.\"\n\n\"Are you having fun here?\"\n\n\"I am, but I think we can both be having more fun somewhere else.\"\n\n\"Oh, I always liked how you put things, Jake, even when you're just offering meaningless rebound sex.\"\n\n\"I prefer to think of it as a guilt free one-time offer. Good while limited supplies last. Have a nice night with an old friend trying to cheer you up.\"\n\n\"You're so selfless.\"\n\n\"Hey, remember that fist bump? 'Honest to goodness, not fake professional courtesy, just tell each other when the other's being an asshole' friends?\"\n\nI put a hand over hers, and let it run up her arm so that my thumb was resting on the hollow of her elbow. I bent my head lower so that my lips were right up against her ear. \n\n\"Come on, Rachel. You won't regret it.\"\n\nHer head turned to me, and those lips were just a few inches from mine. I took that as an invitation and pressed my lips to hers, letting my tongue slip along the edges of her mouth, and letting my hand go from her arm to her waist, pulling her closer.\n\n\"Mmm,\" she said, \"speaking of which, I think you left your bags back at my office. We should probably go back for them.\"\n\n\"Ladies first.\"\n\nI followed her out, watching her shapely hips sway as she made her way back out to the club's lobby to retrieve our coats and head out. Outside, a light snow was starting to fall, and we walked hand-in-hand the few blocks to her office. Rachel swiped us into the building using her flash fob on her keychain, and then pressed a button for the elevator. A lone night guard sized her up over his tablet, and shot us a neutral smirk. I placed a hand on Rachel's hip, and she leaned in closer to me.\n\nThe elevator came, and Rachel palmed the office's floor for 20. Then after the doors closed she asked, \"do you suppose that the elevator's got a security camera?\"\n\n\"Oh, I'm sure it does,\" I said, from behind her, but I slid my hand upward from her hip . \"the other question is whether you'd like to give the guard a show.\"\n\nRachel sighed as I cupped a breast and planted a kiss on her neck. The cold had made her nipples stiff, and I reveled in provoking another groan from her as my fingers swirled around their prominence. \"Still a bastard, Jake.\"\n\nHer ass pressed against my pants, wrapping my cock in the softness of her rump. Her hands braced themselves against the door, as I continued to grope her through the sheerness of her dress.\n\nThe elevator arrived at 20 faster than I would have liked, and we cleared our breath and straightened ourselves out before entering the office. Still the entire floor appeared dark and empty. Even the cleaning staff had disappeared. \n\n\"You know how to find my desk, Jake? I'm just going to hit the ladies.\"\n\n\"I'm pretty sure I can find my way around. See you in a bit.\"\n\nEmpty and quiet, Rachel's ad agency office looked like a dormant relic of some futuristic spaceship left marooned in a New York high rise, fancier than any of us deserved. We have all of these dreams of technology and progress, but at the end of the day, we're still the same evolved apes that came out of the trees and driven by our baser urges. Though, speaking of which, there was a part of me that was still worried that even with that sexy little show in the elevator, my cock was still asleep. I felt my jacket to find my little pill case and insurance policy. I stopped by the water cooler, and grabbed myself a cup of water. \n\nSwallowing the year old piece of Viagra, I hoped that it still worked. I threw the cup in the garbage, and found my bag then decided to be gallant and shoulder Rachel's briefcase. \n\nRestless, I wandered back over to a conference room and palmed the Surface Table. Rachel found me surfing through a small raft of media feeds. \n\n\"Hey,\" she said, coming up behind me and sliding an arm around my waist. In heels she was nearly as tall as me, and could rest her chin easily against my shoulder. \"so I don't think we ever discussed where we were going next.\"\n\n\"Oh, no, we didn't,\" I replied and I shifted to pull her to my side so I could look into her eyes. \"But to be honest,\" I continued \"I'd rather spend a little more time here.\" \n\nI started kissing her again as I pulled her close, while my other hand started to pull up her skirt.\n\n\"Oh, god, Jake. People may come in.\"\n\n\"So?\" That word made her give a soft mewl. \"If it happens, I think we can straighten up and pretend like we're just getting our bags. And then meetings that you have in here will be slightly less boring.\"\n\nMy hand found the bare flesh of her hip, and the softness of her stocking, and Rachel kept kissing me as my fingers slid across her leg to the inside of her thigh, tracing the outline of her panties. \n\n\"You,\" she said between kisses, \"are incorrigible.\"\n\nI also just needed to know if I was still working again. \n\n\"On the table. Spread your legs.\"\n\nThere was another muted squeal as Rachel sat on the table and kept her hands on me, kissing. I let my lips trail down the neckline of her dress, down the valley of her breasts, then into the whirlpool of fabric that was her skirt, and into the heady, fragrant juncture of her thighs. I pulled the silk of her thong aside to gaze at her shaved pussy, and savor the earthy scent of her arousal. Then I felt Rachel's fingers grip my hair as I took one long lick of her entrance.\n\n\"Oh god, Jake. I remember when you did this to me in your kitchen.\"\n\n\"I remembered doing it to you. Your pussy's always tasted ... delicious.\"\n\nShe moaned again as my tongue flicked her clit, dancing around it as that tasty nub of flesh emerged from its chamber. \n\n\"Oh, Jake, you've always been so good. So fucking good.\"\n\nAs my tongue kept working on her clit, I crooked two fingers into her vagina, sliding them in one on top of the other, before twisting and letting them go in side by side, which also drove her crazy. Then, there it was - the familiar sensation of arousal, the return of an old friend. Modern chemistry does its magic again.\n\n\"oh, god, Jake, keep doing that. Keep it up. Don't stop. Don't stooooooop.\"\n\nWith Rachel groaning above me, I fingered her relentlessly into one long climax. And as that subsided, I stood and kissed her, while I let one hand unzip my aching, tremendously stiff prick. I let the tip of it nudge her thigh, and she smiled and swung her legs up so that she could take her thong off completely. Then keeping them spread, she swung her legs back down on either side of me, and took my cock in her hand again.\n\n\"Impressive flexibility,\" I said.\n\n\"Pilates,\" she replied. Then she moaned as my cock entered her warmth. \"Speaking of impressive.\"\n\n\"You miss this?\"\n\n\"I miss a good, hard, uncomplicated fuck.\"\n\n\"Well then here, you go.\" I slid in to her hot tightness.\n\nRachel squealed with that, and sat forward to kiss me as I thrust into her. She put her hands on the table, while moaning, \"oh, Jake, yes, fuck me, yes.\"\n\n\"Hello, Rachel, \" the Surface intoned as it read the fingerprints on her hands. \"It looks like you've been sitting on and moving around the table. Can I help you play Twister?\"\n\nThe table lit up with a bunch of numbered circles, and a conference screen showing the view from a top down camera came on as Rachel panicked.\n\n\"Oh shit!\" she said as she pushed me back abruptly. \"computer abort! fucking abort!\"\n\nWith her dress all disheveled, Rachel worked frantically on the virtual keyboard of the Surface. No, we don't want to play Twister. No, we don't want to save the video session. No, Surface, you haven't been helpful at all. Go to sleep. As a matter of fact, just shut the hell down and let's pretend the last five minutes didn't happen ok?\n\nShe looked at me over her shoulder and just snarled, \"wipe that shitty grin off your face, Traeger. Or I swear I'll smack it off.\"\n\nWe straightened ourselves out again, and decided that we had enough office hijinks for the evening. \"I'll flash hail a cab back to my place,\" she said, \"you took me to yours last time, so I might as well return the favor ... and, hey, did you see my panties somewhere?\"\n\n\"Oh, yeah, you mean these?\" I pulled them out of my coat pocket and walked up to her, dangling them in front of me before snatching them back. I gave her a kiss. \n\n\"Do me a favor.\" another kiss \"and don't put them on quite yet? I want to think of you walking without them.\"\n\nI finished that with another long, slow kiss that we both lingered on. Rachel looked at me again, her gaze lidded and her voice whispered.\n\n\"Jake Traeger, you are just about the cheekiest fucker I know.\"\n\nWe kept our hands off each other in the elevator, but as we walked out of the lobby, I could see the night watchman arch an eyebrow at us. When he said, \"You two enjoy your evening.\" there was a very specific emphasis on 'enjoy'.\n\nIt was actually a good old NYC medallion cab that got to Rachel's flash hail first. These cabs were almost extinct, but it was kind of nice to get one because the old school cabs still had drivers, and therefore didn't have cameras in the cab. Rachel gave them her address for some place in the newly gentrified corners of West Bronx.\n\nAs the cab got underway, I slid my hand on Rachel's stockinged thigh, and I could feel her tense up a bit.\n\n\"You are fucking relentless, aren't you?\"\n\n\"Don't worry,\" I whispered, \"while the cab's in motion, our driver's got to keep their eyes on the road. And my body's blocking most of his view. So long as my arm isn't actually moving, he won't notice a thing. If we stop or if his eyes flick up to the rear view, then I'll stop. I promise.\"\n\nWe got to a red light and I saw the driver's eyes go up to his mirror. I stopped touching Rachel, but I could see a certain knowingness in his gaze. Then the light went green and we started again. His eyes flicked down on the road. My fingers slid up Rachel's thigh, and I could hear her take in a bit of breath as my fingers found their way past her labia. Her legs spread a little more to give me room. \n\nThen the driver's eyes flicked up to his rear view to check before switching lanes. My fingers stopped, but stayed buried inside her. Then as we switched lanes and his eyes want back to the road, they started up again. Rachel bit back a sigh as my fingers crooked into the bend of her vagina.\n\nThen there was another red light and I stopped again as we both pretended to gaze out of the side window. Rachel whispered, \"if this keeps up, you're going to drive me utterly bananas.\"\n\nWe started again and I let my fingers dance over her stiffening clit. The cab got onto the West Side Highway and started cruising along open roads with light evening traffic. For ten, fifteen minutes, I worked Rachel discreetly, feeling the steady flooding of her pussy, delighting in her spasms and choked moans, but then we approached an off-ramp and red light. The driver's eyes flicked up to the rear view again and I hesitated.\n\nRachel muttered through gritted teeth. \"mmmnnh. Don't stop, Jake, please. nnnh ... I don't care. Just don't stop.\"\n\nSo I kept stroking her as the driver kept his eyes flicking back between us and the road. I looked at Rachel and I could see that her gaze was fixed on the mirror too, watching the cabbie's eyes, reveling in his unspoken attention.\n\nThen I felt it, that reflexive clamping of her legs, and one of her hands seizing my shoulder as Rachel's body tensed up and peaked. She kept her lips pressed together, making suppressed groans as my fingers sent her creaming. I took my fingers out and for the rest of the ride, I rested it against the inside of her thigh, while Rachel leaned into my shoulder and looked away from the mirror.\n\nWe had stopped, and the cabbie cleared his throat and said, \"that'll ... uh ... be fifty bucks.\"\n\nI threw some cash at him without really checking the math. It may have been high and he got a good tip, or it may have been a tad low and he got a good show instead of a tip. Neither of us really cared. I was just more focused on Rachel's grip as she led me into her apartment building. I was lucky that I remembered to grab my bags.\n\nThe apartment was on the third floor, a short enough climb for a walk-up, and once we got to her landing, Rachel crooked a finger at me to follow her down the hallway. We arrived at her door, she unlocked it with an old-fashioned key and then she turned around, took my hand and led me in.\n\nShe didn't even bother to switch the lights on, instead she just kept my hand pressed to her body as we wound her way through the dark apartment, occasionally stopping to turn around and kiss me, and give me a chance to pull a zipper, loosen a strap, slide off something. In return, I could feel her fingers dance on my chest and let my shirt come apart.\n\nThen there was the feeling of her fingertips on my pecs, tracing down to my gut, while my hands found the bare flesh of her back, exposed to cleft of her ass. And lips again. Soft, sweet, delicious lips. Hips pressing against mine, a hand clamping on my butt. Then we were falling over. \n\nWe fell into a bed. The blankets were soft and a bit disheveled. I wasn't sure where her dress stopped and the bedsheets began, but I could feel more and more flesh under my hand. A bare shoulder to her neck. Lips suck on my thumb. And there, the wonderful soft curve of her breast. The stiff eager bud of a nipple. The salty of taste of her as my lips and tongue went to suck on her tits.\n\nRachel's hands were on my waist, tugging, loosening and then my pants were gone. Fingers sliding into my boxers, finding my cock hard and steady. I kept kissing her as she stroked me, but then I broke the kiss and grabbed her hands and pinned them to the bed. Then I straddled her. On my knees, I hovered over her chest and let my cock dangle in front of her mouth, waiting before she willfully leaned forward and wrapped her lips around me, sucking me into her.\n\nHer mouth and her tongue were like magic, bathing me in their sweet pleasure. I held Rachel down as I thrust into her mouth, letting my cock grow steadily harder and more aroused. Then as I felt my stiffness reach its peak, I pulled out and in the darkness, I heard Rachel take in a breath.\n\n\"Is this how you want me?\"\n\n\"Is this what you want? To be held down and fucked?\"\n\nThere was a moment of silence and then her quiet, urgent whisper, \"Yes.\"\n\nSo, with one hand pinning her wrists down, I slid another hand down to the small of her back, as I positioned myself between her legs and let my cock rest on the edge of her pussy, now swollen and engorged.\n\n\"Hey, Rachel, I have to ask ...\"\n\n\"You don't have to, Jake. Just go ahead and fuck me. I want to feel all of you.\"\n\nI don't know if she could see how big my smile was, but I could clearly hear her moan as I thrusted my way inside her. Her pussy yielded to me and I soon found my rhythm, spearing her with a steady pace that built up as her moans grew higher in pitch.\n\n\"Unh, unh, UNH. Oh, yes, Jake. Fuck me. Oh, fuck. Oh, fuck. Oh, yes, Jake.\"\n\nI was soon slamming into Rachel with more force and power, making a mess of her sheets and her pussy as I ravaged her. I kept one hand holding her arms down, while the other held one of her legs open, keeping her spread for me as I kept pounding and feeling her pussy spasm around my cock. \n\n\"Oh, Jake. Oh, Jake. Yes. Yes. YES.\"\n\nHer first orgasm seemed to go on for a while, rolling through her body like the surf on a shore, rippling back and forth as it peaked and ebbed within her. And still I kept fucking. Finally, as her moaning subsided, I let go and then flipped Rachel on to her knees.\n\n\"Oh my. I think that I'm in for a long night.\"\n\n\"You're damn right, girl.\" And I slammed into her again, sliding in and out gradually but then speeding up until I found myself hammering with abandon as I had her bent over doggy style. From this position, looking down at her beautifully compact waist and shapely hips, all of my pent up lust and desire reached a head quickly. With my hands on Rachel's hips, I pulled her savagely back onto my cock and kept her impaled on it as it erupted and filled her with my hot come.\n\nMy body went rigid and my mouth opened into a long, deep moan as my entire consciousness submerged itself into the deep bliss of my orgasm. Below me, I could feel Rachel's hips slide a few times as she milked two more small spurts from my cock, but soon the tension left our bodies and we both collapsed onto her wet, sweaty sheets.\n\nI felt Rachel turn inside my embrace, her face swiveling to look at mine. Then she kissed me and I let my tongue dance at the edge of her lips. \n\n\"Thanks, Jake.\"\n\n\"Oh no, thank you.\"\n\n\"Would you mind staying? For the night?\"\n\n\"Well, I do have this expensive hotel room that someone encouraged me to book for one more night.\"\n\n\"I'll make it worth your while.\"\n\n\"It's a really expensive hotel room.\"\n\n\"I think I can offer an arrangement that will compensate.\"\n\n\"I'm sure you will.\"\n\nShe began to kiss me then, nipping at my collarbone, my chest, my stomach. I sighed and laid back as she started licking my cock.\n\n\"You like the taste of yourself?\"\n\n\"Mmm. I might have a bit of a fetish for it. Do you have any idea how many nerve endings are in your mouth and lips?\"\n\nAlmost impossibly, I could feel myself stirring again. Chemical miracles, indeed. In the darkness was Rachel's giggle and her amused voice.\n\n\"Been saving up?\"\n\n\"You could say that. Also, you deserve more than a little credit for inspiring me.\"\n\n\"Flatterer.\"\n\nShe took her time, kissing the sides of my shaft, and licking the sensitive underside, wrapping her fingers tightly on my base as she sucked on my head. I let my hands stroke her hair, glide over her earlobes, and down the nape of her neck. Wanting to give me more access to her, while never taking her lips of my cock, Rachel smoothly rearranged herself, swinging her legs underneath her so that we were almost 69'ed.\n\nI could still smell the cum in her pussy, and as I slid two of my fingers into her, I could feel the juicy residue of our sex. I fingered her in that position while my lips pursed around her clit, swollen and turgid like a bubble of pleasure. She squealed pleasantly as I gave that nub my attention; then I pulled my cock away and got on my knees as I readied for our second round.\n\nLeaning back on her elbows, head back towards the foot of her bed, Rachel gazed up at me expectantly and spread her legs once more. \"I take it you're staying the night?\"\n\n\"I'd be a fool to leave you.\"\n\nThen I was upon her, cock in her hot, steaming pussy, lips on her neck, her mouth, her ear, her breasts. I had intended to take it slow, but as slick and as well lubricated as she was, I was soon pounding her with gusto. As I fucked her with my cock, I could hear Rachel gasping helplessly\n\n\"Oh, fuck, yes. Fuck me hard. Don't stop. Don't stop. Just keep - ooh Ggggggoooooddddd.\"\n\nHer orgasms rolled through her like an extended drum solo, rising and ebbing, hitting different notes, but never ending. Eventually, I found myself with my arms wrapped around her, holding her against me, as I slammed into her with relentless abandon. My breath had stopped. Her fingers were like claws fixed on my shoulders. Her legs clamped around my hips, holding me close against her as my thrusts were short jackhammers causing the bed to almost roll with a rhythm like the sea.",
        "\"Oh, Rachel, you're such hot little fuck. Such a delicious, tasty, perfect pussy. So, just oh ... fuuuuuck.\"\n\nThis orgasm wasn't quite as volcanic as my last one, but I could feel it running for a while. I somehow miraculously just stayed hard and kept thrusting, like some overclocked cock machine, churning her pussy with nearly unquenchable lust. Eventually, however, I ran empty, and I could feel my self softening. Like a locomotive slowly coming into station, I just coasted to a halt, and lay beside Rachel in the dark, holding her close still and listening to our ragged breathing in the dark.\n\n\"Jesus, fuck, Jake. What the hell did I do to deserve that?\"\n\n\"Did I get carried away?\"\n\n\"I'll say. I am a glorious fucking mess, or mess of fucking. Or something. Whatever. I can't fucking think straight. No. Thank you. Thank you. Fucking thank you. Though, now that you're here and staying, get properly undressed while I head off to the bathroom.\"\n\n\"But I am undressed!\"\n\n\"You've still got socks on. All of that frantic tearing clothes off stuff is fine in the moment, but still having socks looks super fucking dorky afterwards.\"\n\n\"Point.\"\n\nShe crawled off the bed and walked out to the bathroom, letting me ogle that simply lovely ass of hers as she unsteadily walked out. While she was out, I got up and folded my shirt and suit and set it up in a tower on her dresser. Outside there was the soft crunching sound of trucks and buses rolling their way through the accumulating snow. The entire city sounded like it had been muffled in a sweater. Then there was Rachel's shapely shadow as she re-emerged in the threshold of the bedroom, and the warmth of her as she wrapped her arms around my waist, and pressed her cheek to the back of my shoulder.\n\n\"Having a look around?\"\n\n\"Just putting my clothes away. I don't suppose I could hang my suit.\"\n\n\"Yeah, here, let me take that and put it in the closet.\"\n\n\"So, this is your place then? I like it. It's what I imagined New York apartments being.\"\n\n\"What? You mean overpriced and undermaintained? No need to scrounge for compliments, Jake. It is what it is, a temporary crashpad while I figure out what to do with my life. Come on, it's cold.\"\n\nRachel slipped back underneath the covers and I soon joined her, wrapping my arms around her waist and feeling the soft swell of her belly. I kissed along the nape of her neck and the hollow of her jaw. She sighed and then turned and buried her face in my chest.\n\nAfter a moment, I could feel tears staining my chest. Rachel said nothing, just wept silently, and all I could think to do at the moment was just stroke the length of her chestnut hair and kiss the top of her head. Then, after what felt like minutes of this going by, she let out a big sigh. I asked, \"anything you want to tell me?\"\n\n\"I'll tell you in the morning. I want to tell you in the morning, but right now I just want you to hold me. And ...\"\n\nshe looked up at me again, fixed me with those blue eyes of hers.\n\n\"... you were right to suggest this. This is exactly what I needed.\"\n\nI'm glad. I kissed the top of her head again, and let her fall asleep in my arms.\n\nI woke in the pre-dawn, to get up and go pee. Outside, I could see that the snow had kept coming and the city was just blanketed in winter. Out of curiosity, I picked up my phone and checked the airline app. Apparently, the storm had arrived in earnest, and flights out of the city were being cancelled. I just got back in bed. Rachel had woken up again, and sleepily laid her head on my shoulder as the light outside her curtains had started to change.\n\n\"hey, buddy,\" she said sleepily, yawning.\n\n\"hey, yourself.\"\n\n\"You know, last night was probably the first time in a long while where I had a good dream. And it wasn't a dream about Josh.\"\n\n\"Sounds like you want to talk about it.\"\n\n\"Yeah ... you know, sometimes I feel like I've forgotten how trust myself.\"\n\n\"How so?\"\n\n\"Well, you know I always thought that my Older Guy Fetish was a thing that I might have to get over. Like, you know, that was the thing that I liked about Josh. He's my age. He's normal. We're normal. We can go around without people getting all judgey about me being a piece of arm candy for a dude going through a mid life crisis. Also, the thing that I learned about Josh, was that it wasn't exactly the older guys that I was into ... though, admittedly, I have developed a thing for the silver. No, I just like being told what to do.\"\n\n\"In bed, you mean?\"\n\n\"Totally what I mean. So yeah, I find this guy who knows what he wants, and can tell me exactly what I need to hear to fill my head with all of the filth that I need to get excited, but I start to realize later on that he also wants to tell me what he wants outside of bed too.\"\n\n\"At first, I think it's fine. He's just being a guy. Some guys are bossy, but then it gets to the point where he's telling me what I should be thinking and saying, and he's lecturing me on manners and telling me why I'm a terrible person. But in between that, he's devoted and sweet and does nice things for me. And I don't know what to do. Half the time, I was scared and angry, and the other half, I begin to think that I can be the person that brings out the good parts of him. I just have to ... I just have to behave.\"\n\n\"Oh, Jesus, Rachel. I'm sorry.\"\n\n\"And, fuck, even saying it now I have to ask myself what the fuck was wrong with me, to believe that. Now, I also ask myself how I can be sure that I won't fall for that sort of manipulative scumbag ever again.\"\n\n\"Well, not to be at all 'not all men...' , on you.\"\n\n\"I'm sorry, the preferred nomenclature, is 'Well, -actually-, Rachel, not all men are manipulative assholes.'\"\n\n\"But, we aren't. It's just a lot of fucked up cultural programming.\"\n\n\"Exactly! And it's the flipside of that cultural programming that makes me all fucking wet when you tell me to take my panties off, but it also makes me feel like I'm failing at feminism. Like, I shouldn't need a guy to make me feel sexy.\"\n\n\"I wouldn't be surprised if a lot of your female colleagues find you hot, too,\" I said as I continued kissing the nape of her neck.\n\n\"Kind of specifically missing the point.\"\n\n\"No, actually kind of held up by the part of you being all wet after taking off your panties\" I said this as my fingers started gliding across the smooth flat plain of her belly. \"though, I'm listening, really.\"\n\n\"oh,\" she sighed, \"right. Still a bastard.\"\n\n\"No, I get it.\" I kissed her and then kept kissing her in between sentences and phrases. \"We're supposed to find this stuff old fashioned. It's retrograde. It's toxic. And it can be abusive as you found out.\"\n\nMy other hand stroked across her back, down to the small of her back and the squeezed a nice handful of her ass, but as my other hand continued to play with her belly, I continued saying, \"But, you know, it is hot when you have your own confidence, when someone that you desire yourself tells you unamibiguously that they want you. Like I do right now. I mean I could just keep telling you about how you're going to be fine, and you don't have to think of yourself as broken. Or I can show you how happy you can be. Are you ready?\"\n\n\"Oh. Oh, yes.\"\n\nShe turned on to her back, and I felt her legs spread as she let me delve into her pussy. My cock had been limp and dormant now, but I could feel Rachel's hands on me again, trying to rouse me once more. I shifted away and said, \"no, here let me make you feel good.\"\n\nI extended my tongue again and started to lick her labia in slow circles as my fingers parted her and let my tongue in ever deeper and deeper. Rachel's musk got more intense as her fingers wrapped themselves in my hair. My fingers found the trigger of her g-spot, and I could feel her tugging getting more insistent.\n\n\"Oh, Jake, God. I forgot how much I missed this.\"\n\nShe released another scream and then relaxed her grip, going a bit limp, and I brought myself up from her thighs. My cock had hardened against slightly, but as I slid into her, I could feel it going soft, and so just gave her a few thrusts before pulling her into my arms, spooning her, and letting both of us fall asleep.\n\nAt night, I dreamt of Elise and Rachel. Somehow the two of them had combined into one person, morphing between Rachel's deep blue eyes and Elise's grey or shifting hair between blonde and chestnut. It was an argument. There was a voice that was yelling. It was my own. Then kisses, forgiveness, soft murmurs, restless quiet.\n\nAs morning came, I found myself still spooning Rachel, my left arm draped over her waist, and my hand nestled in the warm valley of her soft, round breasts. She turned her head and gave me a sleepy smile.\n\n\"Morning. When do you fly out?\"\n\n\"I don't know. I think my flight's been cancelled because of the storm.\"\n\n\"Oh, that's too bad. Are you heartbroken?\"\n\n\"Fucking devastated.\"\n\n\"Do you need someone to help you feel better?\"\n\n\"Yes. I'm really, terribly sad. My spirits need lifting.\"\n\n\"I do my best.\"\n\nShe turned in my embrace and slowly palmed my cock and balls, before kissing her way down to my groin. It felt nice, but I had started thinking about how soft it was, willing it to harden again, which is, of course, the wrong thing to do. Ah well, I guess that really was it for the Viagra. It was nice while it lasted. Rachel, though, was a trooper and still kept slowly trying to suck me awake, but fortunately a rumble in my stomach distracted us from any further awkwardness.\n\n\"was that you?\" she asked.\n\n\"Maybe. It's been a while since dinner and we've been working up an appetite.\"\n\n\"That's right. I never did figure out how to log 'marathon sex session' in my Fitbit. Do you think that counts as, like, core exercise? Maybe Pilates?\"\n\n\"Given the way you come, girl. I'd call it more like interval training.\"\n\n\"Given the way you make me come, I'd think you're right. Come on, let's get up. I'll pull something together.\"\n\nShe slid out of bed, and teetered unsteadily, as she got to her feet. We both giggled a bit and as she pulled a robe around herself. Rachel just smiled and said, \"workout indeed\" before taking up a towel and tossing it to me.\n\n\"One thing I'm grateful for about this place,\" she said, \"old radiators work like a fucking tank, and heat's included in the rent.\"\n\nI wrapped the towel around myself as I got up and went to my bag, still lying discarded in the entrance to her apartment. From my bag, I pulled out an old pair of jeans and a t-shirt, then walked into the compact little kitchen where Rachel was pulling out a carton of eggs and a bag of coffee.\n\n\"So, seriously, Jake. I'm sorry if I made you miss your flight. I didn't realize the storm would be this big of a deal.\"\n\n\"No worries, honestly. It's a bit inconvenient, of course, but I didn't have any plans back home that I had to worry about. Hey, umm, I just realized that since I've got all of my stuff, maybe I could just check out from my hotel over the phone and just stay here?\"\n\n\"I knew it. First they start with offering a one night stand of rebound sex, and the next thing, they just want to move in. So clingy, Jake. Of course you can stay until you figure your flights out. Scrambled eggs and toast?\"\n\n\"That sounds fantastic.\"\n\nThe sounds of the coffee grinder drowned out conversation, and as Rachel busied herself on the stove, making breakfast, I just sat at her tidy little table for two and dialed my hotel to settle my room. As I waited on hold, I just let my eyes roam over her, taking in the gamine length of her legs, and the fetching tousle of her chestnut hair. Then the hold music came off and a clerk answered.\n\n\"Hello, this is Jake Traeger. I had rebooked for an extra day, and I just wanted to call to say that I'm checking out and need to settle my bill. No I'm pretty sure that I didn't have extra charges. No, I'm not at the hotel right now. I moved my things to a friend's place last night after the storm kicked in. No, everything at your hotel was splendid. I just haven't seen this friend in a while. Yes, you can use the card on file. And, yes, send my bill to my email. Thank you and have a good weekend.\"\n\nI was working on searching for a new flight as Rachel placed a plate of eggs and toast along with a mug of black coffee in front of me. All flights were still grounded, and cancellations were creating a cascade of stranded travelers like me. Fortunately, having premium status meant that the airline could just setup an AI bot for me to book my next flight once I gave it my preferences rather than make me wait on hold. Direct, no connections? preferred. One stop? ok. Evening or afternoon departure for today? ... not preferred. Sunday departure preferred. \n\nWhen I was done, Rachel sat across from me and said, \"you know, I was just thinking of that time I hung out in your kitchen and we just talked about all of this stuff. I didn't know you, not really, but you know I just felt totally okay and natural. I can just tell you anything and trusting you to be good about it.\"\n\n\"And like, last night, you were telling me about what was happening with Josh.\"\n\n\"Yeah, as I said, I liked him. I liked him a lot. But he's just got a lot of problems of his own. Fucked up ideas about women and just trying to tell me how to do everything. And I mean, yeah, I like it when a guy's a boss of me in bed, but not outside of it. He'd sometimes just have these horrible screaming fits, and most times it wasn't over anything that I did. I was just close by. Sometimes he seemed to get it, and said he'd change. I was just a sucker to believe him. It was just another way for him to keep me hooked.\n\n\"But then he punched me, and I ran to the police, got a restraining order, and that was that.\"\n\nRachel was looking deeply into her coffee mug, and took another deep breath and said, her voice shaking.\n\n\"I was such an idiot to believe him. And now I don't know if I'm going to be an idiot with whoever else comes along. Like something about me is just broken.\"\n\n\"Come here,\" I said.\n\nI slide my chair aroudn the table, and I just pulled her into a hug. Neither of us said anything. Just held her and let her bury her face into my shoulder.\n\n\"I'm sure,\" she said after some time, \"that this is probably more than you bargained for. I wish I could be the girl I was five years ago, just having fun with you. You're the first person I've told since the assault. My family knows some details about how he was shitty to me, but I couldn't bear to tell them everything.\"\n\n\"Hey, you're the woman you are now. I would never change that. You had a shitty relationship. We've all had those. We just learn from them and we move on. Don't worry about what you're supposed to be with me. I'm your friend. Friends are there for each other no matter what.\"\n\n\"Thank you. What's the story with your flight?\"\n\n\"Don't know yet. I setup a bot to confirm me for the next plane out whenever the storm lets up, but I may be here a while. I hope you don't mind.\"\n\n\"Hey, no, that's cool. I want you to stay, but ... do you mind if we just hung out for a bit with our clothes on? I mean, it's a little weird realizing that our one night stand is just turning into a friend hanging out in the apartment.\"\n\n\"Well, of course not, and frankly, I think I need a bit of time to recharge myself.\"\n\n\"Oh, I thought you acquitted yourself well in your middle age.\"\n\n\"Oh, fuck you for being condescending.\"\n\n\"I'm serious! You're what, like, 67 now?\"\n\n\"43, you fucking child.\"\n\nGod I loved hearing her laugh, and seeing that smile. \n\n\"No, seriously, Jake,\" she said, \"you were fucking awesome last night. Exactly what I needed.\"\n\n\"I'm glad. You were also pretty sexy, well, all the time, actually.\" I said, suddenly fascinated by my coffee cup, not wanting to look her. It was quiet for a very significant moment, and then I took in a breath and realized that I had to do this. I had to tell her.\n\n\"Hey, Rach ...\"\n\n\"Yeah?\"\n\n\"Umm, you know how I said that earlier I was a bit out of practice? To tell you the truth ... I haven't actually had sex with someone for more than a year now.\"\n\n\"Oh, I thought you were still with Elise a few months ago.\"\n\n\"Oh, we were, but the sex had stopped before we did. I mean, uh, I don't know. I'm making it sound worse than it was. I mean, Elise is a lovely person. I'm happy that we met, but you know, she's had a rough time of it when she was young. Lots of the wrong kind of attention from guys that she thought she'd trust. She'd gotten ... spiky. For a moment I thought she'd let me in. Trusted me. But there were things that I said, things I had a habit of saying, that just kept triggering her.\"\n\n\"Oh, sweetheart...\" \n\nand then it was her turn to reach out, and take my hand in hers.\n\n\"It's not her fault,\" I continued, still staring into my coffee cup. \"Lots of men are shits. I know that. She let me see that. Some of us are even shits when we don't mean to be, because we're taught shitty things at an early age. And I felt ashamed for some of the things that I said; things that I thought were normal and just guy talk but just had all of this latent misogyny embedded inside of it. I had to figure out how to drop all of that programming.\n\n\"And, I don't know if it was me getting older, or some of that shame or processing, or a mix of the two; but even when I could manage to get her in the mood and say the right things, I still couldn't, you know ... rise to the occasion. Anxiety, stress, age. Who knows.\"\n\n\"So, what happened between then and last night?\"\n\n\"On a buddy's advice, I got a script for Viagra. Just a couple of pills to get my confidence back. I tried one with her, and you know, worked like magic. But the relationship was too far gone by then. We knew that we weren't going to work. Too many of the wrongs things said. Too many little cracks in our trust to fix. So, we broke up, and I still had one pill left and that's what I used last night. That's the thing that I used to turn into such a fuck machine, and it was my last one. This morning was a return to the normal state of things. Me and middle age.\"\n\n\"Oh, gosh, Jake. I didn't know. That was a stupid joke.\"\n\n\"No, not your fault. It's my baggage.\"\n\n\"Hey, look, I like you as you are. Gentlemanly Jake Traeger and Bastard Horndog Jake Traeger. Don't worry about it with me. If we just spend the rest of this snow day lounging around and watching guilty pleasure movies, then that's still a day well spent in the company of good friends. Deal?\"\n\nShe held her fist out to me again. 'Honest to goodness, not fake professional courtesy, just tell each other when the other's being an asshole' friends.\n\n\"Deal.\"\n\nIt turned out that Rachel's guilty pleasures were breakdancing and hip hop movies. We spent that morning curled up on her couch, watching a successive series of street kids trying to save their school/neighborhood/reputation with the magical power of dance and hip hop, while I let Rachel curl up against me and fold her body into mine. \n\n\"God,\" she said, \"these teenage romances are so exquisitely awkward.\"\n\n\"I know right? I've been spending the last ten minutes wanting to just grab this guy and tell him to kiss the fucking girl already.\"\n\n\"But maybe the girl doesn't want to be kissed quite yet. Maybe she's just enjoying the chase and the flirting. Maybe she's not in a hurry for it to be over.\"\n\nShe shifted so that her body spooned into mine, letting my hand fall on a terry-clothed hip. I looked at her and Rachel looked back with those beautiful sapphire eyes.\n\n\"You like the tease and the chase?\" I asked.\n\n\"I like the ambiguity. I like the moments just before things are said, when your mind is just guessing and anything can happen. I like ...\"\n\nAt this she shifted again so that a part of her robe fell open and I could see the swell of her breast.\n\n\"... anticipation.\"",
        "And somehow, incredibly, my once dormant cock started to harden once more.\n\n\"I like the pay off in the end.\" I said \"I like getting what I want.\" I kissed her lightly on her neck.\n\nRachel turned her head, with a faint smile on her lips, and kissed me in return, kept kissing in between words, \"I do like a man who knows what he wants. Especially when it's me.\"\n\nShe reached back and slipped her hand into my boxer shorts, feeling the length of my surging dick.\n\n\"I said what I meant earlier,\" she continued, \"I like you as you are. I want you as you are.\"\n\n\"Oh, Rachel ...\"\n\nMy fingers were running over the bare surface of her legs; pressing and kneading them, feeling them squirm, then sliding upwards into her robe and upwards into her fresh and willing cunt.\n\n\"Oh, I want you, Jake. I want to feel this hot cock filling me up. I want to hear you groaning and shuddering and the way you gasp as you try not to come too soon. I want the creamy hot mess that you leave in my pussy and the way I can feel your cock twitching inside me. I love knowing that I made you do that.\"\n\nMy cock was a raging monster after that little speech, and I shucked off the shorts that I was wearing then devoured her lips as I grabbed her leg and draped it over my hip. My other hand pulled her robe aside, and fondled her tits to feel her nipples, hardened and erect once more. Then I took my cock and entered her from behind.\n\nWe fucked on this old couch in her Rachel's snowbound Manhattan apartment. We went from me spooning her from behind to her lying flat on her back with one leg held high, while I got up above her and fucked her sideways. One hand draped her leg against my chest and shoulder, while the other fondled and played with her firm, beautiful breasts. Through it all she kept her eyes on me. Those vibrant, intense gems stared into my soul, keeping our connection in ways that went deeper than any sense of the flesh; and when I came I was still looking into those beautiful orbs.\n\nWe somehow had missed out on the big dance scene in the movie, but I don't think we minded or thought to rewind. Instead, we fell asleep on that couch of hers, her nestled in my body.\n\nI got up first again, and pulled my clothes back on. I saw a new alert on my phone saying my flight back home had gotten rebooked for midday tomorrow. The storm was going to be ending later tonight. It was like a bonus day for us, stolen out of the folds of space and time.\n\nRachel stirred on the couch and stretched, gloriously naked in the midday light. She saw the update on my phone.\n\n\"So, tomorrow, hmm? I guess you were going to leave eventually.\"\n\n\"You make that sound so dramatic.\"\n\n\"Oh, believe me. I want to eventually be able to walk again. But, hey, speaking of which, that seemed to work towards fixing your problem.\"\n\n\"Yeah, that was a nice surprise. Good to know I'm not totally useless yet.\"\n\n\"Give yourself some credit, tiger. That was totally fucking hot. Maybe your thing is that you just need to stop worrying about the if's of sex and just let it happen.\"\n\n\"You may be on to something.\" I said as I got back into the couch \"Or might be I like it when my partner tells me that they want me unequivocally, and I don't double guess myself.\"\n\n\"Consent is sexy,\" she said, \"for both sides.\" \n\nRachel nestled into my arms and stared off into space before continuing, \"I used to think that domination/submissive was just a sado-masochism thing. That whips and ball gags were all part of the deal. That's never been my jam so I never thought of myself as that. But maybe I just like being told what to do in bed, and maybe you just like doing the telling.\"\n\n\"But just in bed.\"\n\n\"Times New Roman in the streets, Wingdings in the sheets.\"\n\n\"I guess it's easy to confuse that with being a feminist and having to be well behaved all of the time.\"\n\n\"It's probably more like one confuses the idea of giving respect to a woman with just giving power to her. I like you because you respected me, Jake. You always have. You never treated me like another piece of tits and ass in the office. You didn't take our arrangement for granted, and just let it be only about the sex. I didn't know Elise, but I sympathize with her and can totally believe how a woman can become spiky based on all of the bullshit that we want. But that's not the way it is with us. I like fucking you because I totally trust you and can let myself just be with you.\n\n\"But, I did mean what I said earlier. You don't have to worry about me. You don't have to double guess yourself. I fucking want you. I will always want you.\"\n\nAfter a speech like that, I gave Rachel a long, deep kiss, and afterwards, she got up and went out to the bathroom again, leaving her robe behind and letting me feast my eyes on that wonderful, firm ass of hers.\n\nWith those two movies and a nap, it was now well past lunch, and I started looking through a ZipFood app on my phone, scrolling through an endless sea of takeout places when Rachel returned wearing a t-shirt and a new pair of panties. \n\n\"Got an appetite again?\"\n\n\"In more ways than one. Unfortunately, it looks like everyone else has the same idea. All of the delivery places are mobbed, and it looks like all of them have an hour-plus wait.\"\n\n\"Hey, let's put some clothes on and go outside. City's announced a driving ban so that plows can get through. How many chances do any of us ever get to walk around New York without cars. Come on, it'll be fun. I'm getting a bit cabin fever-y in here.\" \n\nSo, we threw some warm clothes on and went outside. It was like a transformed city, with people out in the middle of the streets, laughing and spinning around. The snow was still falling but lightly, and while my West Coast blood was not used to the cold, the air didn't hurt my face like earlier days had. I held Rachel's hand as we walked a couple blocks to a nearby bodega.\n\n\"Oooh,\" she said, \"you know what's totally fun to do with two people? Pizza.\"\n\nWith that, we wound up picking up some store made pizza dough, a jar of tomato sauce and some cheese. \n\n\"What do you want for toppings?\"\n\n\"I'll name three options, you pick you one, then do the same to me. Mushrooms, olives, or sausage\"\n\n\"Obviously, you've done this before. I pick olives. Now pick Spinach, Green Peppers, or Slivered Almonds.\"\n\n\"Spinach, but what kind of barbarian puts slivered nuts on their pizza?\"\n\n\"Don't knock it 'til you try it. I had it once in Copenhagen.\"\n\n\"So many unfortunate stories start that way...\"\n\n\"Ass. I may have been drunk and a bit high at the time, true, but it's a texture thing. Anyway, we'll get Spinach now, but I'll convert you to the almonds on pizza gospel, just you see.\"\n\nOn our way back, crossing Morris Avenue and getting back to her building, I let Rachel walk up to her door to unlock it, but the stoop was slippery and she nearly fell, but I quickly grabbed her arm and held her steady as her other arm grabbed the alcove wall.\n\n\"My hero,\" she said.\n\nShe unlocked the door with one, then a wicked grin spread across her face, and her hand on the wall flashed with a fistful of snow that she shoved down the back of my jacket.\n\n\"My sucker, too!\" and she took off cackling up into the apartment building.\n\nI chased her up her apartment steps, listening to her laughter echoing through the stairwell. \n\n\"Got you!\"\n\nI caught up with Rachel as she fumbled her key into the lock of her unit, dropping the bag of groceries in the corridor, as I wrapped both hands around her from behind and pressed her up against her door. She was still giggling, as my hands started to pull up her layers of clothes, and once she realized what I was doing, her laughter went up in pitch into a hysterical shriek. \n\n\"Oh, damnit, NO! Your hands are cold. They're freezing.\"\n\n\"All the more for me to rub them all over you and warm them up. You made them cold after all.\"\n\n\"Ah! ha-ha-ha! Oh, god, fuck, Jake. That's cold. That's so mean.\"\n\n\"Turnabout is fairplay.\"\n\n\"Oh, I yield.\"\n\nShe had not bothered to put on a bra when we went out, so it was easy for me to slide my cold fingers up to her breasts, cupping their natural shape, then revel in how her nipples had hardened like plump, pulsing tips of pleasure. I rolled them in my fingers, as Rachel turned her head and kissed me lustily before opening her door and letting us back into the apartment.\n\nOnce inside, I kicked the door close behind us, as my fingers kept working on Rachel and my body pushed her up against the wall of the entrance corridor. One hand was still fondling her breasts while the other went down her stomach to the waist of her jeans. She mewled with anticipation as I undid the button and pulled at her zipper. The jeans were snug and tight against her beautiful ass and womanly hips, but she obliged me by wiggling her hips back and forth as I pulled the rest of the pants down to her ankles. With one hand still on her back, holding her facing away me, I let my fingers glide smoothly over the soft expanse of her calves and thighs, swirling in long ovals to the edge of her panties, feeling them spreading as Rachel prepared for what was to come. Then with the scent of arousal rising fragrantly from between her legs, I pulled the fabric aside, and plunged two fingers into Rachel's tender depths. \n\nShe gasped as my fingers explored her again, pressing and delving with my now familiar knowledge all of the secret places that would set her off. \n\n\"Fuck, Jake. You are fucking insatiable.\"\n\n\"I prefer relentless.\"\n\n\"Oh, god.\"\n\nShe quivered a bit at that, and kept moaning as I let my fingers rotate and stroke more deeply within her. I got to my feet and kissed the side of her neck and back of her jaw. My fingers on my right hand kept working her inner depths, as my left started pulling at her jacket. Rachel obliged me by leaning one arm on the wall, and started taking off the rest of her tops off with the other. Jacket followed by sweater, and then once her t-shirt came off, I savored the sight of Rachel's aerobic back and finely sculpted shoulders. With one hand, I pulled her dark hair aside as I kissed her neck and jaw. Then I turned my other hand as it probe further inside her, adding a third finger into her liquid pussy, while my thumb was now primed to massage the edge of her rosebud.\n\n\"you're fucking delicious, Rachel. Do you know that?\" My free hand moved from her jaw to cup her breast again. \"Do you know what a tasty and delectable body you have? How just fucking fun it is to do this to you?\"\n\n\"Oh, yes, Jake. Do you want to fuck me? Do you want to take me pressed up against this wall? Just bury your cock in me?\"\n\n\"No, not this time. This time it's just about me having my way with this body of yours, seeing how long you can take it.\"\n\nHer cry was an exquisite mix of alarm and surrender. I could feel her leaning her weight into my arms as her legs went weak. I kept delving into her, but we slowly sank down the walls as her legs gave out. Soon we were just in a puddle of clothes, and I lowered my head so that I can start teasing her clitoris with my tongue, while I took out my damp, pussy soaked fingers and started playing with her ass. She tasted hot and earthy and luscious, and while her ass pulled away at first, it eventually relaxed and let me put my smallest pinkie inside of her, yielding slowly to my penetration. \n\n\"Oh, God, Jake. I've never really done this before.\"\n\n\"Do you want me to stop?\"\n\n\"No, God. Please. It's just new.\"\n\n\"Be brave, but tell me if it hurts, and I'll stop.\"\n\n\"It doesn't hurt. It's just ... wow.\"\n\nI worked my way up from pinkie to ring to middle. When my thumb went inside her though, that's when things really started to get set off. Rachel's hands clamped around my head pushing me even deeper into her and her legs thrashed upwards as if she was trying to crunch herself into a ball with her convulsions. She'd catch her breath and relax, and I'd push even deeper into her again, or let my tongue and lips brush against her engorged clit and she'd explode once more. Explode, subside, catch her breath, explode again, subside, catch her breath, explode again. Whimper.\n\nFinally after what seemed to be an endless cycle of this, I felt Rachel tap me weakly on the head and say, \"no more.\"\n\n\"No more, please, Jake. It's all good, but ... but I need some fucking water before you completely drain me dry.\"\n\n\"No worries, darling. I think my jaw was starting to get a cramp anyway.\"\n\n\"Jesus fuck. Help me up.\"\n\nWe straightened ourselves out, pulled some of our clothes back on, and then Rachel weakly leaned into me and kissed me. Long, tenderly, and deep.\n\n\"You really like me, don't you?\"\n\n\"That is one way to describe it.\"\n\n\"I think we left the groceries outside.\"\n\n\"I think you're right.\"\n\n\"Division of labor,\" she said as she walked into the kitchen while I grabbed the grocery bags that I left out in the hall. She was just dressed in her t-shirt and panties. Her jeans still lay in a pile in the corridor. \"You're obviously good with your hands so you can shape the dough. I'll fire up the oven and chop vegetables and grate cheese for the toppings.\"\n\nShe queued up a playlist of moody rock as we washed our hands, poured ourselves some fresh glasses of water, and set to work in a companiable, satiated silence. My hands flattened the ball of storemade dough and stretched it into something thin, flat and round, while Rachel worked the cutting board like a pro. From time to time I could see her looking up and watching my hands and fingers work. She'd catch me watching her, watching me and we'd both just smile and smirk. I dipped two of my fingers into the bowl of olive oil that she kept next to the toppings, and massaged some of that oil into the dough. Then, when I was done, I placed the dough on the baking sheet, and let Rachel dress it with tomato sauce, cheese and vegetables. Then she slid it into the oven, finished her water, and then leaned back into me as I stood against the counter. I wrapped my arms around her waist and heard her sigh. She took one of my hands, saw that it was still glistening with olive oil, and let one of my fingers slip into her mouth so that she could run her tongue all over it, circling around the tip of my finger and playing with it.\n\n\"Careful,\" I said, \"you might give me the impression that you weren't sufficiently worn out from last time.\"\n\n\"Oh, I certainly hope we aren't finished yet,\" she said as Rachel took my finger out of her mouth, \"I've only got you for a few more hours and I intend to make the most of it. But, yeah, my body needs a bit of a break before the final stretch. Don't worry. There's more to come.\"\n\nShe sighed contentedly in my arms as she relaxed into me. The minutes ticked by in just warm, savored silence. Midday slipped late afternoon. Then the timer for the pizza went off and Rachel leaned out of my arms to grab the potholders. We pulled the pizza out of the oven, sliced it and then devoured it sitting at her kitchen table; like the smell of tomato and cheese made us realize how little we had eaten that day and how much of an appetite we had. In the midst of that feasting Rachel pulled out a bottle of red and we toasted: to two friends lifting each other's spirits. As we regarded each other over our wine glasses, I sighed and said, \"I wish I could stay.\"\n\n\"It's crazy.\" she said, looking back into my eyes, \"Five years ago, a night like this was just a one night stand. That's what we told ourselves.\"\n\n\"It was true then. It was just one night.\"\n\n\"But this feels different, right?\"\n\n\"Like the circumstances are all the same. One of us is just in town for a short while. Flying out in the morning. No reason to want more. But ... yeah ...\"\n\n\"Just a few secrets shared in just the right way. And suddenly, I just want to keep sharing more of myself with you. I don't want this to stop.\"\n\nRachel reached out and took my hand, and I folded her fingers in mine.\n\n\"But maybe,\" I said, \"the fact that it's only for a short time makes us more willing to be intimate with each other. The stakes are lower. It's easier for us to be our best selves. We won't have time to find out about all of the terrible parts.\"\n\n\"You probably fart in bed don't you? I've had other relationships start under less awesome circumstances.\"\n\n\"Is that what we're talking about now? A relationship?\"\n\n\"I ... I don't know. I mean is there another word for this? Friends with benefits sounds like something you do when you're in your 20's.\"\n\n\"You know, technically, you're still in your 20s. But I get what you mean. There's something superficial and temporary about friends with benefits. This feels different. We've been friends for years\"\n\n\"But, really, what kind of friends have we been? Liking each other's stuff on Facebook? Commenting on vacation photos and the occasional political rant? What kind of friendship is that?\"\n\n\"It's the kind of friendship where you give enough of a fuck to pay attention. I don't like pulling the age and experience card...\"\n\n\"... but you're going to do it anyway ...\"\n\n\"but, yeah, I mean, over time you realize that not everyone gives a fuck. People get wrapped up in their own lives and they fade away. Even on social media, it's just easy to just keep scrolling and not stop. Something like this matters.\"\n\n\"God, you're intense. Don't get me wrong. That's good. This is good.\"\n\n\"So what do you want to do?\"\n\nI felt her grip squeeze a little harder and then relax. Rachel's eyes met mine. I realized that I could keep looking into those eyes for years.\n\n\"I like that you asked 'what do you want to do?' and didn't just start making a plan. I'm sure you have ideas about what you want us to do. But I like that you asked me for my opinion first ... I think ... God, this feels heavy ... I think we should wait. I think we need to talk about this again when our brains aren't drunk on sex. I need to think about you as you, me, and us; and not just you as someone that I hook up with when I'm single and lonely.\"\n\n\"You know, we might be overthinking this. It's not like I'm asking us to move in together and start picking out names for our kids and our dogs.\"\n\n\"I fucking hope not. I'm scared of dogs. I also just got out of a pretty fucked up engagement.\"\n\n\"Yeah, exactly. I'm just saying, let's not make this the end of it. I want to see you again. I want to see what happens to us. My job doesn't care where I'm working from. I can come back in a couple of weeks. We can hang out again. It can just be us hooking up until we find someone else, or we can make up our minds that we're the someone else. Let's just figure that out one week at a time.\"\n\n\"I think I can drink to that. To being ... lovers?\"\n\n\"To being lovers. It sounds so sophisticated.\n\nWe toasted again, and I kept looking at her as another smile broke across my face.\n\n\"We should've gotten something for dessert.\"\n\n\"Oh, I was just wondering how many licks it would take me to get the center of your lollipop.\"\n\n\"You mean the one with the cream filling?\"\n\nRachel put her hand on my thigh, squeezed it and then climbed onto my lap. She wrapped her arms around my shoulders and her beautiful eyes gazed into mine. Then she tilted her head and kissed me as my hands held her waist, and roamed up her back and shoulders, massaging as I went along. We kept kissing, nipping sweetly at each other lips. I felt her break out into a smile and giggle as we kept at this. Then her lips went to my jaw, my neck, and my collarbone. I could her moving downwards, off my lap and instinctively, I spread my legs to make room for her as her fingers went to the button of my jeans.\n\nMy cock had hardened once more in anticipation and I could see Rachel smile as its tumescence emerged from my fly. She gripped it gently at first, then licked a trail of smooth saliva around its shaft before squeezing a little firmly. Then she proceeded to stroke me, feeling me stiffen and harden even more. Rachel looked at me again, winked, and then she opened her mouth and swallowed my cock with gusto. It felt amazing with teasing tongues and firm lips taking me into delirious heights of pleasure. When I felt like I couldn't take much more, she backed off, then stood up and pulled her panties aside, revealing her bare, flushed, and primed pussy to my lusty gaze.",
        "Then I took charge, and grabbed her by the waist, pulling her to me. I gripped my shaft and held it steady while I wrapped my arm around her and guided her body onto it. I could hear Rachel moan as I parted her with my cock, her soft center wrapping itself around me. I placed my other hand on the underside of her rib cage, pushing her t-shirt upwards, until my thumb found the underside of her breast and then started swirling in a clockwise motion upon her soft flesh. I pushed the cotton of her t further up, revealing aureole and nipple, which I kissed then tongued then sucked.\n\n\"Oh, yes, Jake, keeping doing that.\"\n\n\"Fuck, Rachel, you are a hot fucking slut.\"\n\n\"For tonight, I'm your hot fucking slut. Hot for you. Hot for this cock. Your cock feels so good.\"\n\n\"It just loves fucking you. Splitting you open. Claiming you.\"\n\n\"Oh, God, just keep talking like that. Tell me how much you want me.\"\n\nShe reached down and pulled off the rest of her t-shirt, revealing her beautiful, lovely torso to me as I continued to fondle and kiss her breasts. I held her waist firmly, fixing her in place as I bucked my hips up into her pussy, revelling in every groan and cry that would escape from her body as I steadily stroked into her. Soon Rachel, wrapped her arms around my head, hugging me close as her movements became more urgent and frantic. \n\n\"That's the spot, yes,\" she said, \"just keep hitting it. Don't stop. Don't stop. Donnnn't, ohhhhh, fuuuuck.\"\n\nI sped myself up as well, accelerating with her as her arousal built steadily and inexorably, turning her moans from a series of bursts to one low, constant note before her entire body seized around me. We went quiet as all of Rachel's arms squeezed my neck and head against hers, her legs had crossed behind my torso, her strength seemed focused on doings its best to mash us together. We were silent, her breath had held.\n\nThen she exploded. \n\nRachel's voice was a wail, a shriek, an eruption. My cock was flooded with a warm, sticky cream. At first I thought that I had cum, but then I realized that I was still hard, and it was all Rachel gushing all over me. I gave her a couple of more thrusts, and then slowed down letting her catch her breath. She was sweaty, shivering, and smiling. Her eyes had closed but her face looked ecstatic and that smile looked angelic. Finally, she looked at me, and her gaze had a bit of awe and a bit of tenderness.\n\n\"Oh, God, Jake ... that was ... that was ... are you still hard?\"\n\n\"Yeah, I don't think we're done yet.\"\n\n\"Oh, wow. I don't ... I don't know how I ...\"\n\n\"Here, let me take you to bed. Just hold on to me.\"\n\nI felt her hold me tight, as I took my arms off her and propped myself up from the chair and table. Then with one arm holding her butt, and another arm leaning against the wall, I carried her back to her bedroom. With my cock still buried inside her, I lay us both down on her rumpled bed, rolling her underneath me.\n\n\"Now, where were we?\"\n\nShe said nothing as I started again, going slowly this time, taking my time, and letting it be a tender, easy moment between us. I propped myself up onto my arms and gazed down fondly at her. Rachel had closed her eyes and was just sighing and smiling. We fucked for a while in that position, just slow, steady, easy sex. As my arms got tired, I held Rachel's hips, and pulled her closer to me as I sat back on my haunches, tilting her up and letting her butt rest against my thighs as I kneeled above her.\n\nHer pale skin glowed in the sunset light filtering through her windows. It was still kind of amazing to realize that it was maybe only 5 in the evening. It felt like much later, but that may just be because we've both spent this day stupored with sex.\n\n\"Rachel?\"\n\n\"Yes?\"\n\n\"You're beautiful. Do you know that?\"\n\n\"Oh, Jake. Kiss me.\"\n\nSo I leaned down, and I kissed her deeply, longingly, ardently. Then when we separated she whispered, \"Jake?\"\n\n\"Yes, Rachel?\"\n\n\"I want to feel you cum.\"\n\nI smiled and just gradually sped myself up, then took Rachel's legs and lifted them up to my shoulders. Her own smile grew wider as I kneeled further over, folding in her half over herself, so I was pounding her from above, and her hand gripped the sheets as I sped further up.\n\nI was going at her with total abandon now, and Rachel had turned her head and buried her face in a pillow to muffle her squeals. I could feel the familiar tingle, the anticipation, and the inevitable. I picked up the rising crescendo of Rachel's moans, and tried to hold out and time myself for another simultaneous orgasm, but somehow Rachel swiveled her legs away from my shoulders and then wrapped them around my waist, crossing along my ass and pinning to me, and then I was helpless. Buried in the volcanic caldera of her pussy, my cock burst inside her, flooding her anew with my lust.\n\n\"Oh FUCK, Jake. YES. FUCKING YES.\"\n\nI could feel her join me as the heat of my release set her off. There was again the almost vice like grip that her legs had on my body, holding fast, not letting me go. Then there were the spasms of her pussy as aftershocks followed with each successive spurt of my seed. Soon it ebbed down and her hold relaxed and I collapsed next to her.\n\nWe were quiet for a while, just catching our breath and holding hands. Then Rachel got up, slipped out of her sodden and sticky panties, and walked back out to the bathroom. I kept looking up at that ceiling for a couple of minutes then when she came back and settled into me, I turned my head to look at her and said, \"Rachel, I love ...\"\n\nshe returned my gaze with a look that seemed like mild surprise or alarm or expectation.\n\n\"... I love sex with you.\"\n\nShe giggled and looked up at the ceiling. \"Fucking ass. I love talking dirty with you.\"\n\n\"I love the way you try to bear hug me when you come.\"\n\n\"I do that, don't I? It's not painful is it?\"\n\n\"Hard to say, I'm a little distracted when it's happening.\"\n\n\"I love it when you lift me up or turn me over or just manhandle me in bed.\"\n\n\"I love looking at you as we fuck, seeing all of the expressions on your face as I do things to you.\"\n\n\"I love the way that you kind of hold your breath before you come. I love knowing that I'm making you feel that and that sense of anticipation, like 'he's close. He's so close.'\"\n\n\"I love how hard your nipples get when I start groping you. I love how obvious it is that you're into this and down for some good, raw fucking.\"\n\nShe purred and buried her face into the crook of my neck and slid her leg across both of mine, hooking her heel the far edge of my calf. She whispered, \"Jake, I'm falling ...\n\n\"... for this cock of yours.\"\n\n\"Ass.\"\n\nWe dozed off again holding each other.\n\nI woke once more in the darkness. Night had settled in and Rachel's hands were palming my re-awakening cock.\n\n\"Girl, you call me insatiable.\"\n\n\"Are you saying, no?\" She asked as she got up and straddled me, lifting my hands once more to her breasts.\n\nNo. Of course not.\n\nWe never left that bed for the rest of the night. Our evening was this blurred series of sleep, dreams, whispered stories, arms wrapped around bodies, sex, kisses, laughter. I remember the way the streetlights veiled the muscles on her shoulder and back in glow and shadow as I bent her over and took her from behind, and I also remember her laughter in the darkness as we lay together, sharing stories of childhood. We probably fell asleep for real for only a few hours, but then roused ourselves once more as dawn was breaking, and I could remember the look in Rachel's eyes, as I lay sideways with her in the grey morning light, and took her one last time.\n\nRachel was still asleep, when I got up, showered, and dressed. She looked like she needed the rest. I had gone into her kitchen, to refill a water bottle before I flash hailed my cab to Newark. And then I turned and there was she was, standing and facing me, wearing one of my shirts, unbuttoned and hanging charmingly off her slender frame.\n\n\"Did you ... did you take that out of my bag?\"\n\n\"I seem to recall you taking one of my panties last night, and I don't remember you giving it back. So, fair trade.\"\n\n\"That's a really nice shirt.\"\n\n\"So, it's a really good reason for you to come back. Think of it as collateral.\"\n\nI smirked and walked up to her, and slipped my hand into the shirt, palm on the underside of her rib cage. Then we kissed and I let my thumb glide up to the swell of her breast, and twirl around a rising nipple.\n\n\"I already have a good reason to come back.\"\n\nShe giggled and said, \"thank you for staying over. Thank you for helping me turn this corner.\"\n\n\"No. Thank you. We helped each other. I'll see about finding another flight back here soon\"\n\n\"Again, don't give me that 'we'll see' crap. Book your flight. I'll be here for you.\"\n\n\"I'll miss you.\"\n\nAnd she sighed, and pulled me into a deep kiss and a fierce hug.\n\n\"I'll miss you, too.\""
    ],
    "authorname": "scenester",
    "tags": [
        "younger woman",
        "older man",
        "cunnilingus",
        "vaginal sex",
        "blizzard",
        "friends with benefits",
        "creampie",
        "fwb"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-magnificent-bastard-pt-02"
}