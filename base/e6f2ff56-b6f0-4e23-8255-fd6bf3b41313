{
    "title": "The Iceman's Wrath Ch. 03",
    "pages": [
        " Hey everybody, Annabelle here with the next exciting chapter of The Iceman's Wrath! If you are new to the series, I would give the first couple of chapters a read so that you can watch the conscience of Jason Dawes break apart shortly before having sex with his daughter's friends.\n\nOh, and I would like to mention this: though some character seem young, they are all at least 18 years old, meaning that their bad decisions are completely legal, voluntary, and enjoyable for us to watch. I hope you like it!\n\n*****\n\nExploring Boundaries\n\nThe rest of the summer was nothing short of a hot mess. The brownouts got worse, which meant an uptick in stupid behavior from the locals. A midnight drag race got messy and Jason spent part of a perfectly good Saturday evening scraping what was left of a couple of drunk college students out of their cars. Naomi was picking up extra hours at her job to save up money before college, which meant that he didn't see much of her, or her friends.\n\nWell, almost. Every couple of days, he received a text from Megan. She was always careful to hide her face, but made up for her anonymity with various poses, ones that often involved various objects stuffed inside of her pussy. Jason's favorite involved the infamous double dildo-she had folded in half, inserting both ends into her vagina, and captioned the photo with \"Wish You Were Here.\" Naomi was too busy to have her friends over, and she spent what little free time she had left either visiting her mother or hanging out with Jason. They went to a couple of movies, walked the mall (which had air conditioning), and Jason even bought her a new Macbook for college.\n\nThough the temperature remained high, Jason saw the summer end not when the calendar turned, but rather as he loaded the last box into Naomi's car. He focused his efforts on her car, checking that she had enough wiper fluid, making sure the pressure on the tires was okay. Naomi, sensing his anxiety, stayed inside the house while he did his pre-college vehicular check.\n\n\"Well kiddo, it looks like you are all set.\" Jason walked inside, feeling a little sick to his stomachs as the words left his mouth. How many years had he wasted, hundreds of miles away? What would have happened if he hadn't moved out here, learning who his daughter was as a person? How many more years would he still be a dad to her, before he was suddenly just another adult?\n\n\"Thanks, daddy.\" Naomi gave him a long hug. Jason locked all those feelings away, embracing his little girl. He thought of when she was younger, the time he had braided her hair poorly and she wore it to school all day anyway, the time they made a pillow fort in the living room and spilled juice on the cushions, the time that...\n\n\"Dad?\" Naomi's arms had gone limp. \"Dad, you're crushing me.\"\n\n\"Oh, sorry.\" He released her, her face shimmering through the moisture that had collected along his eyelids. He rubbed his eye, examining a non-existent speck of dirt. \"Hey, here's this.\" He handed her a hundred dollar bill. \"Buy yourself some dinner, and use the rest on your dorm room.\"\n\n\"Thanks.\" Naomi kissed him on the cheek, slung her backpack over her shoulder, and walked outside. Jason followed her out, each footstep toward the curb a moment of pure torture. Her mother was going to meet her at the college, help her get set in, take her to dinner. Part of Jason wished that things could have turned out different, wished that they could have stayed a family, but wishful thinking wasn't going to help him with the fact that he felt like time was marching him toward a cliff.\n\nWhere had all the years gone? Looking back, would he remember this day fondly or with misery?\n\n\"Ok, well, I guess I'm going to college!\" If Naomi was suffering any of these thoughts, he was unable to see them. He gave his daughter a tight hug and held the door for her when she got in. The engine started, and Naomi waved to him when she pulled away, moving toward a future that he was uncertain of his place in.\n\nDad Jason stood in the short grass, waving to Naomi. Wild Jason patted him sympathetically on the back, a devil's grin plastered on his face.\n\n\"I guess there's only one thing to do now,\" Jason said to himself, breaking the silence. Walking in the house, he grabbed a beer from the fridge (Hey, it was five o'clock somewhere), planted his ass on the couch, and started up some Game of Thrones. He had nothing else to do today, and binge watching some sex and violence would make him feel better.\n\nJust as the credits finished rolling, the whole house went dark. Jason listened to the dying hum of his AC, the fan blades winding down.\n\n\"Fuck.\"\n\n-\n\nHours later, Jason was sprawled out on his couch, wearing nothing but red and white boxers. He read an old issue of Time magazine that he had left by the couch last time the electricity went out. He was dozing off from boredom when the AC finally kicked back on. Sighing in relief, he closed his eyes, enjoying the sensation of cool air rolling over his exposed skin. With the electricity back on, his hand quickly found the remote to his entertainment center. Within minutes, he was sitting on his couch with a cold beer and a bag of chips, the familiar Game of Thrones theme song permeating the room. Jason hummed along with it, sipping from his beer, the cold fluid chilling him from within. He was grateful that he had thought to put his beer in the freezer this morning-the brownouts were lasting longer than ever, and there were rumors that the grid in town had actually suffered some sort of damage from the heat.\n\nThere was a knock on the door. Puzzled, Jason sat up, listening to see if they would go away. After a minute of silence, the knock came again, this time, more insistent.\n\n\"Shit.\" He set his beer down, paused GOT, and walked to the door. Through the glass square of his door, he only saw a dark patch hovering at the bottom of the frame. Curious, and a little frustrated, he opened the door.\n\n\"Hi Mr. Da-oh my gosh!\" Standing at the door, in a white blouse and tartan skirt, was Maria. She had turned her head away, covering her eyes. \"I am so sorry!\"\n\n\"What?\" Jason realized he was in his boxers, which wasn't a huge deal for him. However, that was apparently not the case for Maria. \"Oh, I'm so sorry, hold up.\" He closed the door and retrieved his pants, which had been tossed over the side of the couch earlier when the temperature in the house had gotten out of control. He slid into his jeans, and walked back to his door to retrieve the bashful teenager. \"Hey, c'mon in.\"\n\n\"Oh, okay.\" Maria peeked through her eyes. Seeing that the coast was clear, she walked inside, carrying a backpack. \"Is Naomi home?\"\n\n\"No, she left for college this morning.\"\n\n\"Oh.\" Maria's face fell. She stood in the living room, her eyes brimming over. Jason watched her for a few seconds, wondering what the deal was. Maria fidgeted with the hem of her skirt, swaying back and forth.\n\n\"Can I help you with something?\" Jason asked, and the dam broke. Maria cried, alternating between nodding and shaking her head. Jason took her by the hand and led her out to the dining room, where he took her backpack from her and sat her at the table. Concerned, he sat next to her, gently rubbing her back. Maria babbled incoherently, but he couldn't make out what she was saying.\n\nGiving up, he got his cellphone out and looked up Maria's parents' phone number. Maria's parents were pretty strict, and had called him on a few different occasions to make certain that Maria was at his home where she said she would be. For some reason unknown to him, they treated him like a long lost relative, always inviting him over for family events, barbecues, and one time to help her dad fix the furnace. It wasn't entirely uncommon for Jason to accept, spending his afternoon with over a dozen people who spoke a language he barely understood, but Maria's mother was one hell of a cook.\n\n\"Hello?\" The woman on the other end of the phone sounded very tired, an exhaustion in her tone that carried through the phone lines, threatening to drag Jason down with it.\n\n\"Hey, Camille? Jason Dawes.\" Silence on the other end of the line. \"Look, so Maria showed up at my door and she seems pretty upset. Is everything okay over there?\"\n\nThe sigh on the other end of the line said it all. \"No, not really. Maria and her father got into a huge fight about college. I won't bore you with the details, but Maria packed a bag and left. Can I talk to her?\"\n\n\"Maria? It's your mother.\" Jason held out the phone, and Maria took it. She spoke softly into the receiver, a rush of Spanish that Jason couldn't follow at all. After a few minutes, Jason retrieved his beer from the front room, muting Game of Thrones to keep an ear out for Maria. Nearly ten minutes passed when Maria wandered into the living room, holding the phone out for Jason to take.\n\n\"Hi.\" Jason set down his beer, standing up. He couldn't help it; he always paced when he was on the phone.\n\n\"I have a huge favor to ask of you,\" Camille began. \"When Maria and her father argued, some things were said. Feelings were hurt on both sides. Maria has asked me if she could stay at your place tonight.\"\n\n\"I mean, I have no problem with that, but I already told her Naomi left for college this morning.\"\n\n\"And that's the huge favor. Most of her friends have already left, and the ones who haven't are not the girls I want Maria going to for advice. She just wants somewhere quiet to stay for the evening, and I would feel much better knowing that she is safe at your place. Is that too much to ask?\"\n\n\"Oh, no, that's fine. She can stay in Naomi's room. I totally get it. When I was her age, my dad and I fought all the time.\" Jason watched Maria rub the tears out her eyes. He filled up a glass of water, handing it to her when he walked past. \"I'm not back on at work for a few more days, so she can stay up until then.\"\n\n\"I think tonight is all she will need. Those two are like fireworks-they burn bright and loud, but not for very long.\" Camille sighed. \"Thank you for being a good friend. Naomi is lucky to have you.\"\n\n\"I do my best Camille. Tell Marco hi for me.\" Jason hung up the phone, staring at the pretty Latina in his dining room. \"Okay, it's just you and me. You hungry?\"\n\nMaria nodded.\n\n\"Tell you what. Why don't you go drop your stuff off in Naomi's room, and I will get us some dinner defrosted. You like steak?\"\n\nMaria nodded again, muttering a thanks as she turned the corner. He could just barely hear how soft her footsteps were to the top of the stairs. Shaking his head, he grabbed a couple of steaks out of the freezer and filled a jug with hot water. Tossing the plastic wrapped steaks into the water, he opened up the fridge and pulled out a couple ears of corn. With the AC gradually cooling the house, he decided that grilling was his best option.\n\nMaria took her time coming back. When she finally reappeared, she had recomposed herself, apparently spending some time in the bathroom fixing what little makeup she was allowed to wear. Jason had already started the grill, prepping a quick rub for the steaks as they warmed to room temperature.\n\n\"I've got to cook outside,\" Jason informed her. \"Feel free to watch TV or whatever. Make yourself at home.\"\n\n\"Thank you, Mr. Dawes.\"\n\n\"You can call me Jason,\" he told her, for perhaps the hundredth time.\n\n\"That wouldn't be proper,\" she informed him, wandering out into the living room. Jason rolled his eyes when she wasn't looking-it's what she always told him. \n\nJason pushed on the steaks, satisfied that they had defrosted enough. Wrapping up the corn in foil with a liberal amount of butter, he tossed them on the grill. Whistling to himself, he returned to the kitchen to finish prepping the steaks, patting them dry before drizzling a little oil across them and applying his Top Secret Fireman's Rub (patent pending). Even though she wasn't in the room, Maria's presence somehow filled the void that Naomi's departure had left behind.\n\nThe temperature outside was hot, but luckily some clouds had come in, providing some decent shade. Checking on the corn, Jason threw the steaks on when the corn was close to done, twisting the meat just slightly a couple minutes in for those gorgeous diagonal grill marks. The shimmering air over the grill was permeated by the smell of meat and corn, and Jason's mouth watered. He sipped at his beer, but the heat outside had caused it to warm up already.\n\n\"Shit.\" Jason wiped sweat off his brow, staring back at his house. Through the blinds of the back window, he could tell that Maria was watching something on his TV, but he had pulled the blinds down to keep the sun out. He couldn't wait to get back inside. He flipped the steaks and gave them a few more minutes on the other side, poking them gently with his tongs. Once he was satisfied that they had cooked long enough, he pulled them from the grill, putting them on a plate. He did the same with the corn, closing the lid of the grill and turning the gas off.\n\nWalking inside, he announced that food was ready. Like magic, Maria appeared in the dining room, her hands clasped in front of her.\n\n\"Can I do anything to help, Mr. Dawes?\" She asked, her face still a mask of misery.\n\n\"Yeah. Help me set the table.\" Jason put the steak down in the center of the table. The corn got its own plate, somewhere it could be easily unwrapped. Maria appeared with some dishes and silverware, and she set the table quickly while Jason grabbed the steak knives she had forgotten. Maria brought her glass of water from the living room, and Jason grabbed another beer from the fridge along with the butter. Sitting across from her, Jason cracked open his beer and pushed the butter plate across to her. Maria put a large spoonful of butter on her plate, then pushed her corn into it. Jason watched her spin the cob carefully, the corn shining in the afternoon light. Once the corn was coated, she hit it with salt and the pepper before biting into it with a crunch.\n\n\"Mmm, this is so good.\" Maria smiled at Jason, a moment of happiness to steal away the events of the day. Jason smiled back, noticing how her sparkling brown eyes lit up the room. The tight curls of her hair framed her face nicely, and she had taken the time in the bathroom to tie most of it away from her face with a dark, red ribbon.\n\n\"I'm glad you like it.\" Jason took his own corn. Across from him, Maria leaned forward to grab the steak plate, the top of her blouse lowering just enough to reveal the upper curves of her breasts.\n\nDad Jason stood next to the steak place, arms crossed and shaking his head.\n\n\"I appreciate this, Mr. Dawes.\" She transferred her steak to her plate, careful to avoid the runny butter. \"When my father and I fight, sometimes we take things too far.\"\n\n\"Well, if you want to talk about it, I'll listen.\" Jason looked to Dad Jason, who was nodding his approval. \"Even if I can't help, it pays to talk about it.\"\n\nMaria sighed. \"We got into a fight over boys.\"\n\n\"Well, I can see that.\" Jason cut himself a piece of steak. \"What was he so upset about?\"\n\n\"There's a mixer at the end of the first week of school. It's for incoming freshmen. Well, my father forbid me to go, because he doesn't want me... um, he's afraid I might...\"\n\n\"Have sex?\"\n\nMaria's face darkened, her eyes on the table. \"Maybe. He's very concerned about stuff like that. When I told him that I didn't need his permission because he would never know if I went, he told me I could pay for my own college.\"\n\n\"Wow. That sounds terrible.\" Jason shook his head. \"In my opinion, avoiding issues like sex just makes it more likely that you will end up making those bad decisions. It sounds like he overreacted.\" \n\n\"Well, that's not the whole story.\" Maria squirmed in her seat. \"I don't know if I should be talking about this with you.\"\n\n\"Hey, anything you say is just between us.\" Jason took a bite of his steak. The rub gave it just a hint of sweetness.\n\n\"Well, part of it is our church. We aren't even allowed to use contraception, and Father Davis convinced all the parents years ago that abstinence education was best. I wasn't even allowed to sit through the sex part of health class.\" Maria took in a deep breath, then let it out. \"I've been having shameful thoughts lately, and I was trying to look stuff up online yesterday. I had a lot of questions about some things, and ended up at a porn site.\" Maria covered her eyes, staring down at the table. \"The speakers on the computer in our living room were turned all the way up, and the video started while my parents were watching Saved by an Angel.\"\n\nJason laughed, briefly choking on his steak. Maria lowered her head even farther.\n\n\"Oh man, that must have been awful. I can picture how your folks reacted.\"\n\n\"Yes, well, I played it off as a computer virus, but the mixer thing made it worse.\" Maria shook her head, her dark, springy curls dancing back and forth. \"I don't know what I'm doing.\"\n\n\"I'll let you in on a secret.\" Jason reached over the table, squeezing Maria's hand. \"Nobody does. Not at first anyway. Maybe I...\" He looked to Dad Jason, who gave him a thumbs up. \"Like, if you have questions, you can talk about it with me. I would be happy to be upfront with you.\"\n\nMaria let out a laugh. \"Maybe. I'll think about it.\"\n\nJason let it go, the conversation transitioning to Maria's classes in the fall. When they finished, Maria did the dishes for him while he walked outside to cover up the grill. Stepping through the yard, he set up one of the sprinklers to hit a dying patch of grass, the sun finally disappearing behind some houses.\n\nInside the house again, he noticed that Maria had disappeared. Walking into the living room with his beer, he saw Maria sitting on the couch, eyes open wide and watching the screen.\n\n\"Shit,\" Jason muttered to himself, watching Khal Drogo fuck Daenerys from behind. Daenerys' face is twisted in a mask of pain, and Jason remembered that Maria's parents didn't even want her watching R-rated films. This wasn't something he needed tonight.\n\n\"Oh, Mr. Dawes!\" Maria grabbed the remote and paused the Blu-ray player. \"I'm sorry, I didn't know this show was so dirty!\"\n\nJason looked at the screen, then back at Maria. \"The rest of this episode is far from clean, so I'm calling your bluff.\"\n\nMaria, busted, blushed. \"Naomi said you were always watching it, so I picked an early episode to see if I would like it. When the dirty stuff was happening, I was tempted to keep watching.\"\n\n\"Well, there's a ton of dirty stuff that your parents... wait, you're eighteen now, right?\" \n\nMaria nodded. \"Almost nineteen, actually.\"\n\n\"Well, your parents may want certain things for you, but you're old enough to vote and die for your country, so I figure you're also old enough to pick what you watch on TV.\" Jason picked up the remote. \"This show can be a little dark, but it's a lot of fun.\"\n\n\"Maybe.\" Maria turned her attention back to the scene. Daenerys was focusing on the dragon's eggs, a smile on her face. \"I think I'm missing the point.\"\n\n\"It's not really like this, you know?\" Jason pointed at the screen. \"This is all plot and no context. She doesn't even want to be with this man, and she has no experience with sex. The first one is the reason that she cries, not the second.\"\n\n\"Does it hurt when you have sex for the first time?\"\n\n\"It can.\" Jason sat on the other side of the couch. \"But a lot of that depends on the man you choose to do it with.\"\n\n\"My husband,\" Maria informed him.\n\n\"Well, yes. Your husband.\" Jason gestured at the screen. \"But you need to know that sex is more than just this. It can be a lot of things. Um...\" He looked at the screen. \"Tell you what. Let me find you the scene where her friend explains to her how to make it pleasurable.\"\n\n\"Ok.\" Maria turned her attention back to the screen, and Jason inwardly groaned. Game of Thrones was not necessarily the best means of sexual education, but she seemed to be emotionally invested. He found the scene he was looking for. \"Here, um, I guess watch this part. Her friend is going to explain that sex can be fun if you do it right. I'm, uh, going to grab another beer.\"",
        "\"But your beer is half full.\" Maria informed him.\n\n\"Yes, well,\" Jason slammed the whole thing, spilling some of it on himself. \"Yep, gonna go, just listen to them talk. I'll be back.\" Patting himself on the back, he hastily exited the living room, then slow walked to the fridge. Dad Jason threw him a look of disapproval, but Jason ignored him, opening another beer. Luckily, he kept plenty on hand. Puttering around the kitchen, he checked his phone.\n\n\"Fuck,\" he whispered, looking at his latest text from Megan. She was using the double dildo again, but someone else was attached to the other side of it. The picture had been taken in selfie mode, both Megan and her lover's faces off camera. His cock immediately stiffened in his pants, and he took a large swallow of his beer before walking back out.\n\nMaria was staring at the TV, wrinkles on her forehead, her crossed arms pushing her breasts up on display again. Her legs were crossed, but one of those legs was bouncing up and down. The scene had already ended, and Maria was lost in thought.\n\n\"You okay?\" Jason asked. Maria picked up the remote and paused the show.\n\n\"Yeah. Well,\" Maria scowled a little. \"It's just that I kind of wish I had somebody like that. Somebody who could just explain those things to me.\"\n\n\"You have plenty of friends who have sex, I'm sure.\"\n\n\"Well, kind of. Brianne would know, but I don't want to learn stuff like that from someone with no self respect. Gabrielle goes to the same church I do, so she has the same problem. And I would ask Naomi, but she won't tell me anything about all the times she had sex.\"\n\nJason coughed hard mid swallow, forcing a large quantity of beer out of his nose. Maria scooted across the couch to slap him on the back, timing her smacks between coughs.\n\n\"Naomi has had sex?\" Jason's eyes were watering from the pain in his face.\n\n\"I shouldn't have said anything.\" Maria shook her head. \"I'm winning all over the place.\"\n\n\"No matter.\" Jason waved his hand. \"That's not something her and I have talked about, but she's an adult. As long as she is being smart about it, it's none of my business.\" Jason wiped his nose with his hand, marveling at the beer foam that had accumulated there. \"Just give me the name of the guy so I can burn his house down and make it look like an accident, and we'll never mention it again.\"\n\nMaria laughed. \"You really are a protector, aren't you? Is it bad if she had sex with some guy from school?\"\n\nJason thought for a minute. \"I guess it's not that I worry about her having sex. It's that I want whoever she's doing it with to have some respect for her. Does that make sense? Dads don't want to picture their daughters with some guy who treats the whole affair like some sort of victory.\"\n\n\"So, what if it was with an older man?\" Maria asked.\n\nJason's eyes narrowed. \"Then he probably took advantage of her. I would rather she have sex with some idiot her own age.\"\n\n\"Hmm.\" Maria scrunched up her face. \"This isn't making you uncomfortable is it?\"\n\n\"No. Well, yes. Mainly talking about Naomi like that. I still see her as my little girl. Probably always will. I guess maybe when you talk about her doing something like that with an older man, I picture her as an eleven year old in pigtails instead of the woman she is. I'm super biased.\"\n\n\"Well, not your daughter than. Do you think someone my age should be with somebody your age?\"\n\n\"I...\" Jason looked at Dad Jason, who shook his head vehemently. Wild Jason gave him a double thumbs up. \"I guess it depends.\"\n\n\"Huh.\" A look crossed Maria's face. \"So what happens next?\" she asked, changing the subject. \n\n\"What? Oh. If you wanna watch, we can watch.\" Jason turned to face the TV, using the sleeve of his shirt to wipe his lips off. His nose burned like crazy.\n\nMaria said nothing, and Daenerys and Drogo met in the bedroom once more. This time, Daenerys stopped Drogo from mindlessly pounding her, using her new seductive skills for good use.\n\nJason looked at Maria to see how she was taking in the scene. Her mouth slightly open, she was rubbing her knees together, hands clenching the hem of her skirt. As Daenerys moans of pleasure grew louder on the TV, Jason watched Maria's eyes grow wider, her eyebrows climbing up along her brow.\n\nWhen the scene ended, Maria stared into empty space.\n\n\"See? A little bit of knowledge can go a long way.\" Jason pointed at the screen. His finger wavered slightly-that last beer had gone straight to his head. \"This is where you want to be. Nobody wants sex to be some sort of forced mechanism, you want it to be special, fun, exciting. Yes, I think it's great that you want to wait for marriage, but there are lots of things you could do to enjoy your body now.\"\n\nDad Jason facepalmed on the coffee table. Wild Jason pumped his arms, rooting Jason on.\n\n\"What kinds of things?\" Maria asked. \n\n\"Um, well, uh...\" Jason looked away from her. \"Well, I mean have you ever touched yourself, or did anything like that? You can still be a virgin and explore what your body likes.\"\n\n\"A little bit,\" Maria admitted, her face red again. \"I mean, a couple of times, I've had dreams and felt all floaty when I woke up, but also frustrated.\"\n\n\"Well, yeah. That just means that you were all worked up. Next time it happens, you should finish the job.\" Jason nodded, his sage advice dispensed. He was feeling pretty good about things so far, despite the little tantrum that Dad Jason was throwing on the coffee table.\n\n\"How would I finish the job?\" Maria asked.\n\n\"Uh...\" Shit. He had stepped in it here. \"Well, there are things you could do.\"\n\n\"What kind of things?\" Maria asked, moving closer.\n\n\"Well, I mean, just using your hands would do it.\" Jason shifted, moving away.\n\n\"How would I use my hands?\" Maria moved closer again.\n\n\"Well, it's complicated... well, not complicated to do, but, uh...\"\n\n\"Can I ask you something?\" Maria shifted back a little bit. Jason took a deep breath. He must have been imagining things.\n\n\"Yeah, sure.\"\n\n\"You said earlier that it would be okay for an older man to be with a younger women, but it depends. Depends on what?\"\n\nFuck, fuck, fuck. Dad Jason's hair spontaneously burst into flame, and Wild Jason chased him around the table with a tiny fire extinguisher.\n\n\"Well, when I said that, I was...\" Jason trailed off. He couldn't really remember what he had said.\n\n\"What would it depend on?\" Maria moved closer, and he was suddenly aware of the sweet smell of her perfume. \"When would it be a good idea?\"\n\n\"Well, maybe if they loved each other?\"\n\n\"But sometimes love comes after attraction. So try again.\" \n\n\"Well, they should at least respect each other. Like, if an older man is going to be with someone like you, you aren't a prize. Like, boundaries need to be set and respected.\"\n\n\"Okay, that makes sense.\" Maria was suddenly so close, her fingertips gently brushing the top of Jason's thigh. \"For instance, maybe he agrees to be her teacher, in a way.\"\n\n\"Um...\" Where was this going? \"I guess that would be okay. But they would have to keep it a secret.\"\n\n\"Oh, I know you are good at keeping secrets, Mr. Dawes.\" Maria smiled, cocking one eyebrow. Why did Jason feel like he had walked into a trap?\n\n\"That's an awfully vague statement,\" Jason told her. \"I mean, I get what you're suggesting, but you don't really know me, and besides, a guy your age would be happy to show you some things.\"\n\n\"But a guy my age might mess up. He might not be willing to respect the boundaries. But I think that you could.\" Maria pulled something out of the pocket of her skirt. \"I want you to show me things, Mr. Dawes. Teach me about my body, at least enough that I don't feel so frustrated all the time.\"\n\nDad Jason and Wild Jason froze in awe, mouth agape. The flames on Dad Jason's hair migrated down to his clothes.\n\n\"That's pretty inappropriate,\" Jason informed her, pushing her away. \"I'm much too old for-\"\n\nMaria had activated the videoplayer on her phone. It wasn't super clear, but Jason watched and listened in super clear detail as he fucked Megan up against the sink in low light mode.\n\n\"Fuck.\" Jason's further arguments were null and void.\n\n\"I can't stop thinking about it,\" Maria admitted. \"I kept waiting for everybody to talk about it. It's a small town after all. Megan said nothing, but more importantly, you didn't say anything.\"\n\n\"You didn't show this to Naomi, did you?\" Jason's throat was suddenly very dry.\n\n\"No. This is just for me to watch. However,\" she turned her phone off and tossed it to the side. \"Next time I watch it, I want to enjoy it on a deeper level. And if it's okay for you to do that with Megan, then it is okay for you to do those things with me.\"\n\n\"But, what about your future husband?\" Jason asked.\n\n\"Oh, regular sex is off limits. I want you to show me some of the other stuff. When I came here, I didn't expect Naomi to be gone, but now I think this is God's way of helping me with my problem.\" Maria blushed again. \"I tried to pray my feelings away, but they only got stronger. And talking about them with you made me realize that I'm not broken or weird, I'm just a normal girl with normal urges.\"\n\n\"I... I don't know what to say...\" Jason looked at the coffee table. Dad Jason was no more than a pile of ashes smoldering over a pair of shoes. Wild Jason stuck the fire extinguisher between his legs, humping the air and discharging powder into the air.\n\n\"Say you'll teach me.\" Maria leaned toward him, unbuttoning the top of her blouse. She was wearing a simple black bra beneath her blouse, her cleavage accentuated by the golden cross around her neck.\n\nIndecision took flight, and Jason stroked Maria's cheek gently with his fingers.\n\n\"Not a word,\" he told her. \"Ever. To anyone.\"\n\n\"Absolutely not.\" Maria smiled.\n\n\"Let's start with the first lesson. Anticipation.\" Jason hooked his finger into Maria's shirt, tugging gently. She leaned forward, her breath shallow, her hands clenched again. \"There's a lot I can show you, but it all starts with the willingness to wait.\"\n\n\"To wait?\" Maria's eyes flicked up to meet his, but she looked away.\n\n\"Yes. You know that we are about to do things they warned you about in Sunday school. Naughty things, sinful things, things that feel good, but right now, you are all nerves, aren't you?\"\n\n\"Yeah.\" Maria bit her lower lip. \"I'm nervous.\"\n\n\"Good. Use it, but don't be afraid to look me in the eye.\" Jason grabbed her chin, aiming her face toward his. \"That's where trust begins. Eye contact.\"\n\n\"It's a little embarrassing with you so close.\"\n\n\"It might seem embarrassing to you now, but I'm going to do things to you that you are really going to like.\" Jason leaned into the crook of her neck, breathing softly on her skin. \n\nMaria shivered. \"Tell me what you're feeling.\"\n\n\"Okay. I'm feeling nervous.\" Maia let out a laugh. \"Um, my stomach feels all weird. Like I'm hungry, but much, much lower.\" Jason planted a tiny kiss on her neck, just below her ear. \"Oh! That felt good.\"\n\n\"Keep talking. The more you can tell me, the more we can both learn.\" Jason ran his hand up her side, gently caressing her hip, gently kissing the side of her neck.\n\n\"Um, the hungry feeling is getting bigger, and my legs feel a little shaky.\"\n\n\"Let me help with that.\" Jason slid his hand up the length of her bare thigh, disappearing beneath the tartan skirt. He massaged the top of her leg, trailing his fingers in circles. \"How does that feel?\"\n\n\"Um...\" Maria went silent, so Jason kissed his way down her neck.\n\n\"Lean your head back to show me that I should keep going,\" he muttered. Maria tilted her head to the side, pulling her hair back to reveal the soft, caramel color of her skin. \"Now, how does that feel?\"\n\n\"Your hands are making me feel funny. Um, you know.\"\n\n\"Interesting.\" Jason pulled his hand from under her skirt, and undid another button. \n\n\"Remember that you can tell me to stop at anytime.\"\n\n\"Fuck that!\" Maria's face turned bright red. \"I'm sorry Mr. Dawes, I didn't mean to-\"\n\nJason kissed her on the mouth, gently at first. She let out another sigh, and he broke contact.\n\n\"Use your body to tell me to keep going,\" he informed her. Her arms circled his head, and he kissed her once more, gentle touches on her lower lip. His mouth opened, his tongue gently licking at the coconut flavored lip balm she wore. She kissed him back, her tongue mimicking his. He moved his hand to her inner thigh, squeezing her gently. She let out a quiet moan, one of her hands falling to his waist. He used his other hand to gently caress her ribs, moving slowly upward to cup her breast from beneath, giving it a squeeze.\n\n\"Oh!\" Maria moaned quietly into his mouth, pulling him closer to her body. Jason undid a couple more buttons, tugging her shirt open to reveal her breasts.\n\n\"This is the anticipation,\" he explained to her. \"Going nice and slow, exploring what we both like about each other. Communication, encouragement. These are the tools you will need.\"\n\n\"They're good tools,\" Maria responded. Her bra was the only fabric between his hand and her breast, and Jason teased the sensitive skin around the edges. They kissed some more, Jason pulled Maria deeper into his mouth, no more gentle probing of the lips. Their tongues fully embraced one another, and his hand beneath her skirt detected a sudden humidity change. Sliding his thumb slowly up her inner thigh, he brushed against the boundaries of her panties.\n\n\"Mph!\" Maria shivered, but held tight. Jason teased her, pushing at just the edges, never actually running his fingers across the outside of her pussy. He smiled inwardly, hearing her groan of disapproval when he removed his hand. He grabbed her wrist, helping her find his cock through the fabric of his pants.\n\n\"This is called petting. Over the clothes. No big deal.\" He put his lips to her once more. Her hand was stiff at first, but when she traced the outline of his cock, she grew bolder, exploring it with gentle squeezes. He waited until she was fully involved, then resumed tracing the skin where her thigh and panties met.\n\nMaria was rubbing him gently through his pants when he slid his thumb across the fabric of her panties, gently tracing the lips of her pussy. Maria sat up straight, as if electricity ran through her spine. She moaned loudly into his mouth, and Jason broke contact, grinding his thumb into her while she gasped. \n\n\"Do you like that? He teased her, moving his hand in circles.\n\n\"Oh, God, yes!\" Maria shifted her pelvis, pushing into his hand. Jason pulled away, and Maria grabbed at his wrist to pull him back.\n\n\"Easy now. You wanted to learn, right?\" Jason slid his hands up her outer thighs, grabbing at the edges of her panties. \"I'm going to show you how you can do this yourself.\"\n\n\"Okay...\" Maria's breath was ragged, but she lifted her hips. Jason took her panties off, tossing them on the coffee table where Wild Jason accepted the offering with outstretched arms, disappearing under the glossy black fabric.\n\n\"Give me your hand.\" He took her fingers, noticing how small they seemed in his own. \n\n\"Follow what I do, Maria.\"\n\n\"Okay Mr. Dawes.\" Jason ran his fingers over the outside of her labia. She was slick with her own juices, and a wet spot was forming on the inside of her skirt. \n\n\"This whole area is your playground, but there's a couple spots you are going to want to explore more when you are in a hurry.\" Jason moved his fingers up around her clitoris. \"Can you feel this bump?\"\n\nMaria's fingers followed his, and she nodded at him, biting her lower lip again.\n\n\"Feels good, doesn't it? That's your clit. You find a guy who knows where that is, and you're in good shape. Some women like it played with directly, others need a gentler touch. Your homework is to figure out which of those women you are.\"\n\n\"Okay.\" Maria pulled her hand away, but Jason put it back.\n\n\"Nope. Let me see you work on your homework now.\"\n\n\"It's embarrassing,\" she told him, but she obliged. Moving her fingers around in gentle circles, she let out small gasps.\n\n\"Good girl. While you do that, let me show you something else.\" Moving his fingers in gentle circles, he pushed up into her. Maria cried out, grabbing his wrist with her spare hand.\n\n\"Oh shit!\" Maria wiggled her hips, moving in circles around Jason's finger. He was barely an inch inside of her.\n\n\"This is your vagina. The actual inside. This is the bigger part of your homework, because this is where you figure out what you like.\" Jason moved slowly, hooking his finger upward into the fleshy lump along the front wall. Maria bucked her hips. \"You can buy toys that hit this spot right here-\"\n\n\"Gah!\" Maria's face turned bright red, and her pussy clamped down on his finger. He held onto her hip and let her ride out her first orgasm without any further help. She went limp in his arms, moaning softly to herself.\n\n\"Well?\" He asked her once she had settled down.\n\n\"That was so intense,\" she said.\n\n\"I'm glad you liked it.\" Jason hooked his finger again, pulling upward. Maria cried out, but Jason slapped her hand away when she tried to push on her clit some more.\n\n\"Let me show you something you can make your future boyfriend do for you.\" He twisted her around so that she was sprawled against the back of the couch and he was kneeling on the floor. She looked at him in confusion as he kissed his way up her inner thighs.\n\n\"Isn't that dirty?\" She asked.\n\n\"In the best kind of way.\" Jason took her into his mouth, licking all around the edges of her pussy, sucking gently on her clitoris, and lapping up all the cream she had made. Maria's hands clenched at his couch cushions, uncertain of what to do.\n\n\"Play with your breasts for me,\" he told her, and she obliged, squeezing at her bra. Jason reached up, pulling her bra down, revealing large brown nipples the size of half dollars. \"Pinch them, but be gentle. Only do it harder if you like it.\"\n\nWatching her squeeze her breasts in such a frenzy was amazing. Working her with his mouth, he could feel her next orgasm coming, deliberately holding off to tease her. The closer she got, the louder she became, and one hand grabbed at his hair, pulling out small tufts of it (which was quite painful).\n\n\"Oh please Mr. Dawes, please, please, make me do it again, make me cum again Mr. Dawes.\"\n\n\"Good girl, keep talking to me-ouch!\" Maria had grabbed his ear, pulling too hard and twisting it. He moved her hand to the back of his skull and resumed. Her taste was musky, yet sweet, and he managed to work a second finger into her tight canal, feeling her pussy squeeze the life out of his hand.\n\n\"Oh please, oh please, oh God OH GOD!\" Maria grabbed one of the pillows tightly, then threw it across the room, roaring loudly from her gut. Her whole face became red again, and Jason's mouth flooded with her creamy white cum. He stood up, wiping his face dry with his shirt before removing it.\n\n\"How was that?\" He asked her. Maria sat on the couch, her body twitching with aftershocks. Grinning, he moved closer to the couch. \"Shall we continue?\"\n\n\"I need... to catch... my breath...\" Maria told him. He lovingly traced her jaw with his fingers, using his other hand to expose his cock. Maria's eyes went wide at the size of it, and Jason flexed it so that it jumped in front of her face.\n\n\"You won't need your lungs for this part.\" He sat down next to her, taking her hand and placing it on his shaft. \"If you find a man who is willing to do those things for you and not have sex before marriage, there are some things you need to learn to do as well.\" He wrapped his fingers around hers, gently stroking himself with her hand. \"This is the basic motion.\"\n\nHe did this for over a minute, letting the shock of seeing a penis subside. Maria was clearly exhausted, but fascinated, and her energy level increased the longer he stroked him. He showed her how to use her other hand to massage his balls, how to tease his frenulum, how to use his precum as a lubricant to tease the head of his cock. She stroked him quickly, slowly, with a tight grip, and then a loose one, whatever she was willing to do. She switched hands, then used both of them.",
        "\"Are you getting close?\" She asked him after nearly twenty minutes.\n\n\"Nope,\" he informed her. \"I'm not a nineteen year old boy. It's going to take more than that to get me off.\"\n\n\"Okay.\" Maria kept stroking him, her face scrunched up. Curious, Jason said nothing, and was pleasantly surprised when Maria leaned forward and swallowed the head of his penis in her mouth.\n\n\"Oh, shit!\" Maria smiled around his cock, attempting to work it further into her throat, but she could only manage the first three inches or so. Bouncing her head up and down, she kept stroking him for a few minutes before breaking away, a long trail of spit connecting her mouth to his dick. \n\n\"That hurts my jaw,\" she complained, rubbing her cheek.\n\n\"That takes some getting used to,\" Jason told her. \"Use just your tongue. Lick the top and sides, grab it with your lips. Imagine all the things you did with your hand, and how you would do those things with your mouth.\"\n\n\"Okay.\" Determined, Maria licked the head of his cock, her pretty little tongue making circles around the hole in his dick, licking the wide ridge along the top, sucking on the skin all the way down. After several minutes, she tried taking his balls in her mouth, but gagged inexplicably and came back up.\n\n\"Hey, it's okay, you're doing great,\" Jason told her.\n\n\"I want to see you cum, though,\" Maria told him.\n\n\"Until I do, let's just keep having fun.\" He kissed her, and she stroked him gently. His fingers found her pussy once more and she trembled at his touch. The sun was going down now, and Jason was lying on his back, Maria on top of him, the teen frantically working his dick from several different angles. Though her enthusiasm was high, her experience simply wasn't enough, and Jason could tell she was close to another orgasm.\n\n\"Mr. Dawes,\" she asked, sitting back to stroke his cock. \"I was wondering if we could try something.\"\n\n\"Sure.\"\n\n\"Um. I want to be on top of you. Like Daenerys was for her husband.\"\n\nJason immediately had warning bells. He knew Maria's family didn't believe in birth control, and he was out of condoms. \"What about getting married first?\"\n\n\"That's just it. Um, we wouldn't be doing... that exactly.\" Maria bit her lower lip in that cute way, her top pulled down around her breasts, her skirt hiked up around her hips. \"I, um, want to know what it's like to have a man inside of...inside me, but not in my vagina.\"\n\nJason stared at her in disbelief. \"Wait, you mean you want to skip home plate?\" He realized that his comment sounded dumb, but Maria nodded. Clearly, she understood. \"That's grad level work. If we do this, we need to take it nice and slow.\"\n\n\"Actually,\" Maria said, suddenly shy despite massaging his balls with her hand. \"Actually, Megan bought me a toy for my eighteenth birthday. I lied a little, before. She got it for me as a joke, but I started playing with it, and I really like it.\"\n\n\"What toy?\" Jason asked.\n\n\"She said it was because I had a bug up my ass and that I should use it to squish it.\" Maria giggled. \"My mom found it once under my bed, but had no idea what it was. It's an inflatable butt plug.\"\n\n\"Holy fuck,\" Jason muttered.\n\n\"I... I use it a lot, but couldn't figure out how to get off. I was told not to play with my... with my pussy, but nobody ever told me to leave my bottom alone. So some nights, I put it in, and pump it all the way up, and just sleep with it.\" Maria shivered. \"I have some lube in my bag. I guess what I'm trying to say is... um, could we...\"\n\n\"Look in my eyes, Maria. Ask me out loud.\" Jason was suddenly serious.\n\n\"Would you fuck my ass, Mr. Dawes?\"\n\n\"Get the lube,\" he told her. Maria let go of his dick, running upstairs to Naomi's room. The whole time she was gone, Jason muttered to himself, over and over again \"Please come back, please come back, please.\"\n\nMaria reappeared, a small bottle of hand sanitizer in her hands.\n\n\"That's not lube,\" Jason informed her.\n\n\"That's what I want my mom to think.\" Maria, clearly excited, knelt by Jason's side. \"I can't believe I'm going to do this.\"\n\nThat makes two of us, Jason thought to himself. Maria was clearly no stranger to how much she needed-she coated him all over, making a small mess on the couch. I'll just flip the cushions later, Jason decided.\n\n\"Okay, here goes.\" Maria sat on Jason's lap, his cock bouncing along her bare ass. Maria leaned forward to give him a small kiss before sitting up straight, and grabbing his cock beneath her legs.\n\n\"Guide it carefully,\" he told her. \"I don't want you to miss.\"\n\n\"I could do this is my sleep,\" she informed him with a grin. \"Though you are quite a bit longer than my toy.\"\n\n\"Take your time.\" He placed his hands on her hips, watching the tiny teen place his cock at the entrance of her asshole. Clearly excited, she wiggled her hips in circles, holding tightly to his cock to keep it from slipping into her pussy instead. There was resistance at first, but Jason felt the head of his dick penetrate her tight little asshole.\n\n\"Oh, shit!\" Maria hissed. Jason used his thumb to play with her clit, and she flinched, pulling off of him. Determined, she forced his dick up her ass again, just the tip fitting inside. She slapped his hand away from her pussy. \"Not yet, not yet,\" she told him, grabbing onto his hips with her hands.\n\n\"Oh!\" She lifted her ass slightly, then pushed down, taking him in just a little further. \"Oh! Oh! Ow!\" She tried to take more of him, but tensed up, her face a mask of pain.\n\n\"Relax,\" Jason told her, stroking her thighs. She stayed where she was for a couple of minutes, making tiny little movements. Jason could feel her asshole clenching him, and his dick was starting to hurt in a good way. Maria bit down on her lip again, sinking even further.\n\n\"Oh! Oh! Ow! Fuck, mmm!\" Maria was gasping for air now, and she started swearing in Spanish. Jason watched in amazement as she lifted her ass up until he nearly slipped out, then sank all the way down onto him. \"It's so huge! I can feel it hitting me in the stomach!\"\n\n\"Oh, shit!\" Jason grabbed her hips, pulling him close. True to her word, Maria swiveled her hips just like Daenerys had, moaning softly to herself as her tight sphincter tugged on Jason's dick. He stuck two fingers in her pussy, feeling his own dick through her inner wall.\n\n\"Oh, Mr. Dawes!\" She leaned forward, kissing him. She lifted her ass and slammed it into him, moving faster and harder with every thrust. \"Oh Mr. Dawes, fuck me, fuck me in the ass!\"\n\nHer inexperience was easily trumped by the tightness of her ass. Jason thrust his dick into her from beneath, moving slowly at first so they could find their rhythm. She rode him this way for several minutes, stroking her own clit now while he held on for dear life. She was clamping down every time he bottomed out, stroking hard on his shaft as he pulled out. He felt it building up, his long overdue orgasm.\n\n\"Oh Maria, I'm going to cum! I'm going to cum Maria!\"\n\n\"Cum in my ass, Mr. Dawes!\"\n\n\"That would be... inappropiaaaaate!\" Jason blasted the inner walls of her ass. The sudden warmth of his cum coupled by the additional lubricant caused Maria's hips to move faster, her breath to quicken.\n\n\"Don't stop fucking me-OHHH!\" Maria came hard, grinding her ass into Jason, squeezing his balls with her ass cheeks. She shuddered once, then again, collapsing on his chest. She laid there for several minutes, panting against him.\n\n\"We should get cleaned up,\" Jason told her. \"Before I go soft. Just in case. Go use my shower, it's bigger than Naomi's.\"\n\n\"Thank you, Mr. Dawes.\" Maria kissed him one more time. She sat up straight, lifting her ass slowly off of him. A giant glob of cum fell out of her ass, splashing against his stomach. It ran down his side, staining the couch cushions. Jason figured if flipping it didn't work, he could just burn it and buy a new one.\n\nHumming to herself, Maria left the room, undoing her tartan skirt and walking up the stairs, bow legged and half naked. Shaking his head at his own stupid luck, he looked at his coffee table. Wild Jason was sweeping Dad Jason's ashes off of the side of the table.\n\n\"Oh. He's dead,\" Wild Jason informed him. \"You should follow her up to the shower, see what else you can get her to do tonight. Pound her ass doggy style, maybe.\"\n\nJason stared at Wild Jason, the crack in his psyche that had manifested itself. Maybe it was concerning, or maybe it was nothing. Either way, it was still that inner voice, and it was his choice if he chose to listen to it.\n\n\"You know what? I think that I might.\" Whistling a soft tune to himself, Jason picked up the bottle of lube and headed up the stairs. The shower was already on, and Jason opened up the curtains to see that Maria was using the detachable shower head to spray her pussy, her head thrown back in delight. Caught by surprise, she fumbled the shower head, and it swung against the stone of the shower with a crack.\n\n\"Want to learn anything else tonight?\" He asked her. Gone was the elusive shyness, replaced by the wet, naked skin of a horny woman who had just learned about the amazing things her body could do. She was no longer just his daughter's friend, but a woman who was hungry for knowledge.\n\n\"What else can you show me?\" Pulling him into the shower, she slid the curtains shut behind him.\n\n*****\n\nWell i certainly hoped you liked that! Your ratings and comments motivate me to keep working hard, so if you loved it, please leave a rating or a comment below. Though I don't usually respond to feedback, I do read them all (I get so many now that I can't keep up). As always, the community here is amazing, and I hope you liked my story!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "mature",
        "teen",
        "daughters friend",
        "anal",
        "virgin",
        "sex education",
        "first orgasm",
        "oral",
        "boundaries"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-icemans-wrath-ch-03"
}