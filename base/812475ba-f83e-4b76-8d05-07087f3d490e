{
    "title": "Kelly Ch. 05",
    "pages": [
        "Parts 1 through 4 are entertaining, but not mandatory before reading this. There is an Amanda that fits the physical description (she is a lovely lady), but her role in this story is completely fictional. \n\nI hope you have enjoyed the earlier parts of this work of complete fiction, and enjoy this one, too.\n\n*\n\nThe days dragged by in school when all I wanted was to spend time with Kelly. It was so nice just to be with her, talk to her, hold her hand. I wanted to make love with her, too, but we didn't spend time alone for the rest of the week. \n\nKelly's parents would be gone Saturday night, and she wanted me over for dinner. I couldn't wait, and Saturday morning passed too slowly. \n\nSaturday afternoon, my phone rang.\n\n\"Justin?\"\n\n\"Yes?\"\n\n\"This is Amanda. Amanda Burke?\"\n\nAmanda Burke! Another object of lust throughout my high school years. Calling me? I pictured her: a full six feet tall, she was built like a runway model with incredibly long legs, world-class tush, slim waist, and a nice chest. And she had one of the most beautiful faces on the planet. Very long, straight blonde hair, large grey eyes, high cheekbones and luscious lips. She was the type of gorgeous that made any male drool. \n\nI remembered one day at school when I had rounded a corner only to be confronted by a perfect ass on someone squatting to retrieve books from the bottom of a locker. Tight jeans hugged every curve. Then, when she stood up, she just kept rising and rising to her full six feet, with a wonderful hourglass shape now on full display from behind, pale hair hanging down almost to her waist. A pleasant memory. \n\nAmanda was nearly thrown out of school for wearing a miniskirt so short the guys later joked that we could have walked underneath it without ducking. I remember the legs on display with that skirt. The administration wanted her to go home and change. The guys held a protest outside principal's office. It was 1973, when such protests were pretty common. The guys won, and I remember seeing her in the cafeteria, up on her toes to reach something, the skirt climbing higher. I later had many a wonderful fantasy of coming up behind her, peeling down her panties, and fucking her with that skirt on. She was a long-time object of my fantasies. One time, I almost hit my ceiling when I ejaculated, thinking about her while jerking off.\n\nBut what could she want with me?\n\n\"Hi. What's up?\" I asked.\n\n\"Justin, are you doing anything this afternoon? I need help with math before the final next week.\"\n\n\"Uh, sure, I could help, I guess.\" Knights can never resist a damsel in distress, and besides, I was good at math.\n\n\"Great! How soon can you be here?\"\n\n\"Let me gather my stuff and I'll come right over.\"\n\n\"OK. Do you know where I live?\"\n\n\"Yeah.\" Four years of lust didn't pass without research.\n\n\"Thank you, Justin. It'll be worth your while. See you soon!\"\n\nNow, what did that mean? I gathered my book and slide rule (no calculators yet) and drove over. I thought about Kelly. I needed to be on time for supper. Would she understand? Would she be jealous or mad at me? It was too late, I'd have to handle it. Why was I even doing this?\n\nI was definitely not prepared when Amanda met me at the door in a very skimpy flowered bikini and a short white terrycloth robe, open at the front. Her hair fell loosely on the robe, framing her beautiful face. Her body was in the same style as Kelly's: built for speed rather than comfort, and just as incredible. She caught me staring.\n\n\"Like what you see?\"\n\n\"I'm sorry, Amanda, I didn't mean to stare.\"\n\n\"It's OK. I like it when men admire my body.\"\n\nGulp. What was going on? \"I'm sorry.\"\n\n\"Don't be. Come on in,\" she said, opening the screen door, \"Do you want something to drink?\"\n\nI walked in the entryway. It was a nice house in the better part of town. Amanda's family was well-off. \"No, thanks, not right now. Let's get to work.\"\n\n\"I'm using the den,\" she said, \"Walk this way.\" And she led me down the hall. Like the old joke, I watched her move and thought to myself that I wouldn't dare walk that way.\n\nOnce in the den, she plopped on the floor by a math book, already open, with her papers spread around. She patted the floor beside her and gave me one of the most radiant smiles I've ever seen. I sat cross-legged beside her.\n\nWe chatted. I had never really talked to her before, never having been able to overcome my painful shyness and insecurity. She talked about tennis - she was a ranked player, and horseback riding, which she loved. I imagined her for a moment as Lady Godiva, naked on a white horse with her long blonde hair. \n\nI talked about school, going to college, and basketball. She was nice. Really nice. I was having a good time. A lot of time passed. I thought about Kelly and decided that we'd better get to work.\n\n\"I just don't get this stuff,\" she said with consternation.\n\nWe worked through several problems. She was smart, and a quick learner. She was getting the hang of it. Or, she already had the hang of it and didn't really need math help.\n\nI was explaining a problem when I suddenly realized that she had shifted slightly, and gotten much closer. In fact, her bikini-clad breast was gently rubbing my arm. It moved as she breathed. It felt really good.\n\nThen I smelled it. TABU was by no means an expensive perfume, but to me it was pheromones in a bottle. TABU never failed to excite me. And here was Amanda Burke, my heartthrob, pressing into my arm and smelling of TABU. Wow.\n\n\"I don't really understand how you use a slide rule for this problem. Can you show me?\" With that, she moved over and snuggled in to sit between my legs, pressed against me. The only way I could hold the slide rule was with my arms around her, and my chin over her shoulder to see. Her long blonde hair tickled my nose, but smelled so good. Clean hair and TABU. Dynamite.\n\n\"Show me,\" she said, and put her hands on my knees. I showed her how to use the slide rule for that problem, and for several others that she asked me about. She was attentive, but once again I got the sense that she understood more than she was letting on. Her hands now rubbed the outsides of my thighs. I was wearing gym shorts, and she tickled a little when she rubbed. It felt really good. My head spun.\n\n\"Justin, let's take a break.\"\n\n\"Good idea.\"\n\n\"Now would you like something to drink?\"\n\n\"Sure,\" I replied, \"What are my choices?\"\n\n\"I have a bottle of champagne I could open.\"\n\nI was stunned. Champagne? \"Champagne? That's for celebrations.\" The old days. When they tried having the drinking age be eighteen.\n\n\"I feel like celebrating,\" she said, \"It's left over from my 18th birthday. And besides, I've finally gotten you here.\"\n\nMy head reeled. Finally gotten me here? Amanda Burke! Finally getting ME here? This was weird.\n\n\"No thanks, Amanda,\" I said, \"I don't drink. A Coke would be fine.\"\n\nShe looked disappointed, a little pout furrowing her brow. \"Are you sure? It's French! And it would be fun to celebrate!\" She looked at me with those grey eyes. I have always been a sucker for beautiful eyes and long hair. I could feel my toes melting. I needed to remember to inhale. I did. TABU. Inhaling didn't help.\n\n\"Yes, Amanda, I'm sure. A Coke would be just fine.\"\n\nShe got up and moved - I can't say 'walked' because 'walked' just doesn't describe it - out of the room. She returned a minute later with two Cokes. Setting them on the end table just in reach, she sat next to me on the floor.\n\n\"Justin, you're a nice guy!\"\n\n\"Ouch! Said as if you're surprised!\"\n\n\"No, I didn't mean it that way. I've just never really talked to you before today, and now I know what I've been missing. A really nice guy who's also really tall.\"\n\n\"Thank you, Amanda. I think you're a nice guy, too.\"\n\n\"Oh, stop it!\" and she slapped my arm. We laughed.\n\n\"Don't worry, Amanda, you're about as far away from being a guy as anyone I can imagine. \"\n\n\"When's your birthday?\" she asked.\n\n\"Just after Christmas,\" I said.\n\n\"You mean you're a Capricorn?\" she asked brightly. \"That's perfect! I'm a Taurus.\"\n\nSo was Kelly, and Kelly had said that it didn't get better than a match up of a Capricorn with a Taurus. Trouble. I could smell it beneath her perfume. Did I want trouble? Was that why I was here?\n\n\"Why haven't you ever asked me out?\" she asked, looking through me with those incredible grey eyes.\n\n\"To be honest, I have always been too afraid.\"\n\n\"Too afraid? Am I that scary?\" She moved even closer, her breast pressing my bicep.\n\n\"No, I'm that shy,\" I said, averting my eyes. I couldn't hold her gaze and smell her perfume at the same time.\n\n\"What is there to be shy about? I'm only a girl,\" she said, laughing a sparkling laugh, and squeezing my arm.\n\n\"Amanda Burke, saying that you're only a girl is like calling the Mona Lisa only a painting, or a Ferrari only a car,\" I said.\n\n\"What are you afraid of?\"\n\n\"Rejection. Being laughed at. Making a fool of myself. It petrifies me to call a girl. What if her parents answer the phone? It's scared me for all high school. It's why I've never really dated.\"\n\n\"I wouldn't have rejected you or laughed at you,\" she said quietly, looking at me steadily. \"I wish you had called me. Or talked to me in school. It feels like we've wasted four years.\"\n\n\"Amanda, if the truth should be known, I've had a crush on you for four years.\"\n\n\"You have? And you've never done anything about it?\"\n\n\"Nothing,\" I said, \"other than lust from afar.\"\n\n\"So, it's lust is it? Shouldn't I say something about liking the person inside?\" she said with a lilt to her voice that was intoxicating. \n\n\"But I don't know the real you. So I could only lust after the you that I saw. And to be honest, there was a lot of lust. I used to go find you in the halls between classes just to see you. I snuck a peek at your schedule in Guidance so I would know where to go each period. It was a pretty serious crush.\"\n\n\"Justin, that's so sweet! You did that? Just to see me? I'm really flattered. But all the more disappointed that you never acted on it.\" Her smile could light up the night sky, and it was beamed directly at me. Whew. I could feel sweat on my brow.\n\nShe leaned in still further, and I realized that the smell of TABU originated between her breasts. I looked down at her bikini inside the terry robe. There they were, all right. Two of the loveliest breasts imaginable, only inches away, barely covered by flowered material. As she leaned forward, she hunched her shoulders a little in a way that accentuated her cleavage.\n\nShe caught me again. \"Like what you see?\" she smiled knowingly.\n\n\"If I didn't, I'd be dead,\" I said, looking away. \"But I'm sorry, and I'm embarrassed.\"\n\n\"Don't be,\" she said gently. She reached out and stroked my cheek. \"My parents are gone until late. Let's spend some time together. You can get to know the me inside. And maybe act on those lusty feelings.\" With that, she leaned in a little more and brushed her lips against mine. It was as if she were plugged into the wall. I felt what seemed to be an electric shock at the touch of her lips. Incredible.\n\n\"Justin,\" she said, pulling back, \"I noticed you long ago, and I have wanted to be with you for a long time. Now I find you're nice, too. I want to know what it's like to date somebody much taller than me! I want to wear heels!\" She giggled.\n\n\"I've always wanted to date someone as tall as you. And as beautiful.\"\n\n\"Thank you, sir, for the compliment.\" She beamed another steel-melting smile. When she did, her eyes had a sparkle that lit up the world. My toes curled.\n\n\"You may call it a compliment. I call it the truth.\"\n\nUnbelievable! One of the most beautiful women in the world, wanting me! She moved in again, kissing me. \n\nHer mouth felt so soft. Talk about dreams come true! Once again, I felt like there was electricity in her lips. Mine literally buzzed. Her mouth opened and I felt her tongue. That made me wake up a little.\n\nI pulled away. \"Amanda, I'm sorry, but there's somebody else in my life.\"\n\n\"That's OK,\" she purred, \"I'll never tell.\" And she closed in again. Her hand found its way behind my head. She pulled me close and tried to kiss me deeply.\n\nI pulled back and stood up. \"It's not like that. No matter how beautiful you are, and how sexy you are, I can't. No matter how much I have liked you before, it's not right to do anything now. I can't betray her trust.\" I was working hard to say that. Amanda was completely sexy. Completely intoxicating. \n\nLust welled up, and I could feel the devil on one shoulder and the angel on the other. It wasn't clear which would win.\n\n\"She never needs to know,\" Amanda said, \"What happens here stays between us.\" She dropped her terrycloth robe. She stood up before me, wearing only the smallest bits of cloth. I took in her body. Wonderful breasts, tight tummy flaring to slim hips and incredible, long, well-muscled legs. I love it when you can see just a little curve of the belly and just a little protrusion of hip bones, all coming together with a tightness that makes you want to spend hours kissing and licking the tummy regions. Amanda had it all, perfectly. So did Kelly. I had to remember to breathe.\n\n\"I can't Amanda. Please don't make this harder for me.\"\n\n\"No one else ever needs to know. And Justin, I want you.\" She moved closer. She pressed the full length of her exquisite body against mine. Her perfume was thick, and made me dizzy. Or something was making me dizzy. \"I know you want me, too,\" she whispered in my ear, \"And I want you so badly,\" she slipped her arms around my neck. I felt weak in the knees.\n\n\"Ooh, Justin! She had a hand around my neck, she whispered fiercely in my ear. \"I'm ready to love you. I want to love you until you beg me to stop. And I'm ready to take care of you better than anyone you've ever had, especially Kelly.\" She squeezed me passionately, kissing my neck, biting and sucking it, nibbling my ear. I noticed I wasn't pulling away. I was entranced, completely under her spell. I was losing. Then, what she said hit me. I backed away fast.\n\nI gaped. Her eyes went wide and she clapped her hands over her mouth. She realized her mistake, which gave it all away.\n\n\"How do you know about Kelly?\" I said, suddenly angry.\n\n\"I heard it through the grapevine,\" she said, unconvincingly.\n\n\"And how do you know if Kelly and I have had sex?\" I had to word that carefully.\n\n\"Well,\" she stammered, \"I just assumed that you would have. And if you hadn't you were probably frustrated and ready for me.\"\n\n\"It doesn't add up, Amanda. What's going on?\"\n\n\"Nothing.\"\n\n\"Oh, come on. You didn't really need my help with math! Why did you get me here?\"\n\n\"Because I wanted you.\"\n\n\"Why, all of a sudden, did you decide to take the initiative?\"\n\nAmanda started to cry. \"Kelly put me up to it. She asked me to see if I could get you to make out with me.\"\n\n\"Why? Why did she ask you?\"\n\n\"She knows you liked me. I think she thought it was a test.\"\n\n\"And what about you? What if I'd given in?\"\n\n\"I was ready to give you everything you wanted, Justin,\" she said, once again looking at me with those incredible eyes, \"Because what I said about noticing and wanting you was the truth. I do want you. Forget Kelly, I want you for me.\"\n\n\"So, we could have even gone to bed? You wouldn't have stopped?\"\n\n\"No,\" she said in a tiny voice, \"And I still won't stop if you want me, because I still want you.\" She sobbed.\n\nCrying women are my downfall. It's that knight thing. I reached out and held her to me. It was not lost on me that she was essentially without clothing. I stroked her back as I held her. \"Amanda, you're about a week too late. If I'd met you before Kelly I would be here, not there, enjoying a dream come true. But that didn't happen, and I'm in love with Kelly. She's been the other girl in my four-year fantasy world, and almost by accident we've gotten together. Amanda, you're basically a nice lady, and incredibly beautiful. I've had a nice time talking to you and getting to know you. You're wonderfully sexy. Really sexy. But you're the second sexiest girl I've ever known. Kelly is the first. But I gotta tell you, double-crossing Kelly isn't good, or honest. Even doing as she asked isn't a nice thing to do to me. What's worse, what do I do now about Kelly?\"\n\n\"I don't know, Justin,\" she sniffed and wiped her eyes, \"But know this: she's really flipped for you. She cares about you a lot. So be careful, and gentle. And if things don't work out between you two, the invitation is open here.\" she looked at me deeply with those incredible eyes. Whew. She was alluring. I smelled TABU.\n\n\"I'd better go.\"\n\n\"Are you sure, Justin,\" she said, pressing her long, tall, shapely, nearly-naked body against my long, tall body. I must admit: I had a long, tall erection, too, that I'm sure she could feel as she pressed against me. I had to get out of there fast, before the little head took over all thinking from the big head.\n\n\"Yes, Amanda, I'm sure. And thank you. I'm honored, and flattered.\" I kissed her cheek.\n\nShe smiled that breathtaking smile. \"She's a lucky lady, Justin. You're pretty special. That makes it all the more disappointing that I didn't win.\"\n\nI blushed deeply, \"Amanda, you almost did.\" I left her in the den. Was I stupid? Crazy? Or just deeply in love with someone equally as beautiful on the outside and even more beautiful on the inside? I had just passed up the opportunity of a lifetime. And now, I was really mad.\n\nI headed straight to Kelly's. She opened the door, surprised that I was earlier than agreed, and then shocked at what she clearly saw as my anger.\n\n\"Kelly! Why? Why did you do that?\"\n\n\"Do what?\"\n\n\"Don't give me that. You know what I mean. Setting me up with Amanda Burke.\"\n\nHer eyes went wide. \"She told you?\"\n\n\"Kelly, I knew something stunk from the moment I got to her house. None of it made any sense. And when I said I couldn't because of you...\"\n\n\"Couldn't what?\" Kelly asked.\n\n\"Couldn't go to bed with her,\" I replied hotly.\n\n\"Go to bed? It had gotten that far?\" Now Kelly seemed mad.\n\n\"No, it hadn't gotten that far. But she all but offered, and I refused.\"\n\n\"She wouldn't have done it,\" Kelly said confidently.\n\n\"Don't be so sure,\" I said, \"She basically admitted that she would double-cross you to get me.\"\n\nKelly's eyes went wide again. \"That bitch! She said that?\"\n\n\"Yup. She said she'd had her eye on me for a long time. And that you knew I had had a crush on her before you and I got together. Was it the truth? Would she really have screwed me? I don't know, but it sure sounded like it. And Kelly, let's face it, she's an incredibly beautiful and sexy girl. Did you know that she's a Taurus, too? I'm still not sure what that means, but it seems important to both of you. It was a ready-made disaster except for one thing.\"\n\n\"What's that?\" asked Kelly, tears streaming down her face.\n\n\"I LOVE YOU, YOU JERK!\" I shouted loud enough for the whole neighborhood.\n\nShe burst into tears. I held her close, but I was still steaming mad. She burrowed into my chest, her hands over her eyes as she sobbed. I'd had enough of crying women for one day.\n\n\"Justin, I didn't want to hurt you. But I needed to know.\"\n\n\"Know what? That I'm human? That I can be tempted just like anyone else? That in the end I love you more than even Amanda Burke could tempt me?\"\n\n\"I needed to know that you're not a jerk,\" Kelly said, sobbing.\n\n\"Why can't you trust me? Why can't we be happy and love each other? Why did you have to do this?\"\n\n\"I don't know. I guess it's hard for me to trust, too. I don't know.\"\n\n\"What would you have done if I'd screwed her?\"\n\nHer voice was tiny. \"I would have died.\"\n\n\"So what am I supposed to do now?\" I asked, still pretty angry.\n\n\"Forgive me? I'm so sorry, Justin.\"\n\n\"I'm so sorry, Justin,\" I said, a mocking tone entering my voice. \"Somehow that just doesn't do it.\"",
        "\"Can't we forget it?\" she pleaded, \"With my parents gone for the night again, I was so looking forward to spending time with you.\"\n\n\"I don't know, Kelly. I just don't know. This is pretty serious.\"\n\n\"No, Justin! Please! Stay with me! I have dinner planned! I want to be with you! Don't leave me!\"\n\n\"Amanda says I'm welcome back if I leave you,\" I said.\n\n\"NO! NO! I want you so much!\" She was really crying now.\n\nI paused and tried to think. I tried to feel, and know my feelings. What was best? What should I do? What should I say? It came to me. The answer was really very clear, and had been, if I could only see it. I saw it now. I knew what had to be done. In the end, I knew how I felt, and I had to act on it. \"Kelly, I can't let this go unpunished. You have to learn a lesson from this.\"\n\nShe looked at me, a little fearfully, through her tears. \"Punished?\"\n\n\"Yes, Kelly, punished.\"\n\nShe wore a silk scarf as a belt over a long white shirt, and another knotted around her neck, which happened to look incredibly sexy. But I had other ideas on my mind. A plan took shape. \"Come with me.\" I took her by the hand and led her upstairs to her bedroom. There, I took of the scarf from around her neck, and the other from around her waist. I moved closer and unbuttoned the shirt. I took it off. She was looking at me quizzically.\n\n\"Take of your panties,\" I said stonily. She did, and stood before me naked. \"Get on the bed.\"\n\nShe lay on the bed, looking at me. I took one scarf, and grabbing her hand roughly, tied it to one of the brass bedposts. I did the same with the other scarf. She was spread-eagled on the bed, her hands tightly tied. Her naked body splayed before me. She looked a little scared.\n\n\"Justin, what are you going to do?\" she asked.\n\n\"Last time, I said I'd only stop if you begged for mercy. This time I won't be so kind.\" With that, I moved to one of her hands and kissed it. I sucked each finger. Slowly, I started to work my way down her arm, kissing and softly licking her skin. I stopped and burrowed my face into the inside of her elbow. I kissed her bicep and moved closer to her shoulder. I pressed my nose into her armpit and inhaled her smell. I kissed. I licked. She made soft moaning sounds. I kissed her shoulder. I kissed her neck. She tried to turn her face to kiss me but I moved out of the way and she couldn't reach. I kissed her jaw line. I touched her only with my lips. \n\nI got off the bed. She watched me as I pulled my shirt over my head. She could see that my erection put a huge bulge in my gym shorts. I pulled them down, slowly, giving her a show as I looked her steadily in the eye. She was looking at my crotch. Then, I pulled down my briefs. My erection sprang out at full attention. Off went my socks and shoes and I was naked before her. She stared at my body, and writhed a little against the scarves that bound her hands.\n\nI knelt beside her on the bed, and leaned down to kiss her collarbones. Then I leapt over her to kneel on the other side, and slowly kissed up the other side of her neck, her jaw line, her shoulder. I worked my way with my lips down her arm, pausing at her armpit, her elbow, finally, slowly, excruciatingly slowly, getting to her tied hand. I kissed each finger.\n\nShe was breathing heavily. \"Too bad for you,\" I said, \"I've only just started!\"\n\nI took my hands and cradled her face, and slowly moved them down the sides of her neck. I felt her shoulders, crossed over her upraised arms, and put my hands under her shoulder blades, kneeling by her side, my erection pointing towards her face. My hands came to the top of her chest, my fingers on her collarbones. Then slowly, ever so slowly, my hands moved down to the tops of her breasts, from where they first emerged in delightful curve from her upper chest. She arched her back, wanting me to take her nipples, but I wouldn't do that yet. My schedule, not hers. Slowly, with firm pressure I moved my hands down her breasts until I cupped them both, her now firmly erect nipples between my thumbs and the meat of my hands. I squeezed them gently and she sighed, arching her back again. I moved my hands in a circular motion, caressing both her beautiful breasts. I leaned down and kissed her collarbones, and then slowly started to kiss my way down her chest between her breasts. Then, again ever so slowly, I worked my way up each breast with my lips, now kissing, now licking, now just dragging moist lips on her skin. I took each nipple in my mouth - just the tip of each nipple, and tickled it with my tongue while I held it in my lips. She gasped and writhed, wanting me to use a firmer touch. Nope. I was in total control. \n\nI swung a leg over her, and now sat on her hips. She could feel my balls on her. I took both her breasts in my hands, and held them so her nipples poked out. I leaned down and licked them like lollipops, one after the other. I could feel my cock rubbing on her stomach and chest, and I knew she could feel it, too, so I stroked a little and she moaned. But I was far from done, far from ready to give her what she so clearly wanted, needed. I kept kissing her nipples for a long time. Then, as I kissed the skin of her breasts I pinched her nipples hard with my fingers. That brought her to climax and she bucked and cried out and moved against her tied scarves. But I had tied them well and she couldn't escape, and I had her pinned to the mattress with my body.\n\n\"Kelly, you tested me, and I passed,\" I said, looking into her eyes. \"To be honest, it wasn't easy and I almost lost. We almost lost. But at the right time I knew how much I love you. Your punishment is for me to spend as long as I want to show you just how deeply I love you, without you being able to do anything about it. I love you with all my heart, my beautiful lady, and I'm a long way from being done showing you.\" She shuddered in what I to this day believe was an orgasm. Tears streamed out the sides of her eyes.\n\nStill holding her nipples, I resumed kissing her skin, first between her breasts, but then moving down just a little. I cupped her breasts again, slowly working my lips down to her belly, kissing and caressing her with my mouth and tongue. When I reached her belly button, I spent the longest time tonguing her and kissing her there. I kissed the sides of her tummy; I kissed above and just barely below her navel. Her skin was so firm, she tasted so good.\n\nBut it was clearly torture for her as she writhed and moaned beneath my touch.\n\nI scootched down and pinned her knees, which let me reach her hips with my mouth. I kissed and caressed and licked. Then, I moved to free her legs, which I spread with my hands, holding her thighs firmly. I looked at her pussy lips, which were dripping with her juices, running down and already making a wet spot on the comforter.\n\nI sucked her toes. I moved my lips up her feet, first one and them the other, kneeling before her. I kissed her ankles, inside and out. I licked the bottom of her feet and she screamed and giggled from being so ticklish.\n\n\"No laughing during punishment!\" I said. But it was tough for me to keep a straight face.\n\nI worked on each leg, running my tongue up her calf, going back to suck her toes. Each leg. It was like giving her legs blowjobs, all tongue and lips and sucking.\n\nI kissed the backs of her knees. I kissed her kneecaps. I ran my tongue up the inside of her thighs. She was whimpering, she wanted me to eat her so badly. I still gripped her hamstrings and controlled what she could do with her legs. I kissed the tops of her thighs, running my tongue up and down her tight muscles.\n\nStill holding her legs, I plopped on my belly, my nose practically in her snatch. She moaned and begged me to bury my face in her muff.\n\n\"No talking!\" I said gruffly. What I felt, though, was deep, all-consuming love for this little girl. My heart felt like it filled my chest.\n\nI licked and nibbled her hamstrings. I pushed her legs forward, her knees in her chest, and kissed her ass cheeks.\n\nI settled before her pussy lips. The smell of her musk even beat TABU. I stuck out my tongue and barely touched her lips. Kelly shuddered. I touched again and she gasped. Again, and she moaned and writhed against the scarves, and tried to push herself down onto my mouth. But no, I was in control. I gave her a few more flicks with my tongue. She writhed.\n\nThen, without warning, I said \"Kelly, I love you so unbelievably much!\" and clamped my mouth firmly on her pussy. She screamed and instantly climaxed, pressing her legs around my ears and bucking while the spasms rocked her body. In return, I clamped my mouth on her again and stuck my tongue as deeply between her pussy lips as I could. Then I licked up, caressing her with my tongue. I did that over and over, licking in long strokes. Her excitement grew, and I knew she was building to another climax. I kept it up, and she exploded in my face again, shuddering. I lapped up her juices, and began nibbling her pussy lips with my lips. Gently, but firmly.\n\nThen, in the midst of nibbling, I planted my mouth directly on her clit and sucked, twiddling her erect nub with my tongue as I did. Her response was an immediate scream and orgasm in my face, bucking like a bronco as she gripped my head with her legs. I went along for the ride. I was losing count of how many times she had cum. I kept on eating her for two or three more solid climaxes. Kelly panted and cried little cries of pleasure.\n\nI wasn't done yet. Putting my elbows underneath, I grabbed her ass cheeks and lifted her off the bed, raising her pussy to where I had even greater access and could shove my tongue in deeper. I ate and licked her with abandon, kissing and sucking her lips, nibbling them with my lips and even with my teeth. I licked her clit hard, and she arched even further. She was so little, and her precious body so lithe. I could prop on my elbows and keep her in raised snacking position forever, I thought. So, I continued to snack on her. It drove her wild, as she pulled against the silk scarves binding her and pressed herself into my face. It almost seemed like she was having a continuous orgasm.\n\n\"Justin, please stop! I can't take any more!\" She pleaded.\n\n\"Sorry, my lady,\" I said, \"But sir knight shows no mercy this day in giving her his love,\" I resumed snacking.\n\n\"Mercy! Please! Mercy!\"\n\n\"I am sorry, my lady, but there is no mercy given to naughty girls.\" I laughed a mock evil laugh. \"And there are other punishments you must endure.\"\n\nI rose to my knees, and straddling her, moved up her body until my hard cock was only inches away from her face.\n\n\"Like what you see?\" I asked, just like Amanda, but Kelly didn't know that. She could only nod, staring at my member. I grabbed her hair and pulled her head up, bending her neck so that it lined up with my cock. I moved forward and she took me in her mouth. She tried to suck and fondle my dick with her tongue, but as soon as she did I withdrew. She whimpered and reached out with her tongue, trying to get to me. I moved forward and buried my cock in her mouth again. She clamped her lips on me and sucked hungrily, and I let her, needing the release. But I didn't plan on cumming in her mouth. We did that for a while. I would let her taste me and suck me a little, but not long enough to where I was ready to cum. Each time I put my cock in her mouth she would take her tongue and circle my head, and then try to take me deeper, collapse her cheeks, and suck me hard. I looked down to see this beautiful woman, arms upraised and hands tied, sucking my shaft. I loved to see her lips taking me in, see her tongue lap my shaft, see her cheeks drawn in as I felt her suck. Her mouth felt so wet, soft, and warm as she took me. I was sitting on her breasts, which I could feel against my thighs, hard nipples pressing against me.\n\nI moved down and caressed her breasts with the head on my dick, rubbing it across her nipples, over her skin, in her cleavage. With my cock between them, I could take my hands and press her flesh against me, a tit-fuck. I stroked her chest like that, ending each forward stroke where she took my head with her lips for a momentary suck. Forward and back, I fucked her chest as it heaved with her now almost panting.\n\nI withdrew from her mouth, and kicked out my legs so I was above her in pushup position, my legs outside hers. My cock was now down by her entrance, and it was aching for release. She looked in my eyes deeply, longingly. She wanted my cock, she was desperate for me to fill her. She wormed her legs outside mine and wrapped them around my waist, trying to force me to enter her. But I wouldn't. I put the tip of my throbbing dick at her wet entrance, but I only touched it. She tried to get me inside, but I resisted. I pulled away and she cried out. I touched her again, and she gasped. I withdrew. I did that a few more times, teasing her unmercifully. I was above her with my elbows locked, looking down at her wonderful body as she writhed and tried to get me inside her. Now I had a view of every graceful, delightful, delicious curve that I had just spent so much time kissing and licking. I felt as if I had truly come to know her body, even more than when she would melt against me and I could feel her all along my skin. This was better, even more intimate. I loved doing this for her, loved getting to know every inch, every muscle, every curve.\n\nI was poised at her entrance, the tip of my head gently pressed to her opening. Then suddenly, I rammed my cock home, going deep inside her. Kelly cried out and clenched her legs around me. Then I pulled completely out. Then I rammed it home again, hard. This time, I withdrew very slowly until only the tip was in contact with her pussy lips. Then I rammed it home hard again and withdrew slowly. I kept this up for what seemed like hours. Slow withdrawl, followed by fast, hard rams. Kelly was going wild, loving the feeling of my cock filling her violently. \n\nI got on my knees between her legs. I cupped her ass cheeks with my hands and lifted her into position. Then, kneeling, I pressed my shaft deep inside her. She arched her back and took the weight off my hands, and thrust back at me. We fucked hard this way, her back and butt in the air, she supporting herself with her neck and feet. Me on my knees, ramming my cock home passionately. She gasped and came hard, shuddering a full-body shudder. I kept thrusting my cock into her drenched pussy. She came again. I loved to feel her cheeks as I gripped them. Loved to look down and see my long shaft going in and out. There was a big damp spot on the bed beneath her. She was so wet and slick. I could feel her pussy walls massaging my penis head. I felt huge. I pulled it out to look at it. I'd never seen it so big or purple. I plunged back in and we kept fucking and fucking.\n\nI was surprised that I had lasted this long, but finally I felt a huge load start to rise. I went closer and closer to the edge. I set Kelly down and lay on top of her, my arms pushed up so I could look at her form, so I could watch us fuck. I went deep into her time and time again, a solid rhythm of thrusts of my prick. I went right to the edge.\n\nThen, I pulled out slowly. \"Look at me, Kelly. Look into my eyes. Don't blink. And know that I love you more than you can possibly imagine, and that I will give you all my love right now.\" She looked at me. And with that, I slowly sank my shaft into her, and when I bottomed out I exploded in an absolutely life-altering, mind-bending way, filling her with spurt after spurt of my seed. All the while, we stared at each other. Kelly arching her back in her own simultaneous orgasm, crying out, but looking at me. It wouldn't stop. I just kept on ejaculating into her, my cock buried as deep as I could put it. I moved my hips in circles, grinding my cock round and round her pussy as I just came and came and came. I saw stars. My vision went fuzzy. I kept looking at her, staring into her eyes, but I couldn't see. I felt like my balls and cock were connected directly to my heart. I loved this little girl so incredibly much! And all I wanted to do was show her my love with my body, my cum. There were tears in the corner of her eyes. Mine fell on her chest. She owned me, body and soul. I would be hers forever.\n\nI untied her hands. She wrapped her arms around me so tightly I didn't think I could breathe. She sobbed and sobbed. I laid on her, supporting my weight on my elbows, but circling her shoulders with my arms. We cried together. She melted into me in her way, so much of our bodies pressing. But we weren't moving this time, it was still, except for our breathing and sobs. I felt so much love for her. \n\nOf course I forgave her for tempting me with Amanda. I could understand, finding it so hard to trust anyone myself, why she would try something like that. In a way, it made me love her more, because I felt now that I had earned her trust, and that she would feel even freer to love me in return. That's what knights are looking for, I thought. We rescue damsels in distress, but the price we demand in return is undying, passionate love, which we rarely get. I had high hopes with Kelly that we would mount my charger and ride off into the sunset with a lifelong passion between us. In any case, it seemed like a nice idea at that moment, with her body melted against mine.\n\nAfter a while, I rolled off her and we cuddled, holding each other close. We dozed. After a little while I awoke. I was rock hard again. Kelly was still asleep, now on her belly beside me, I was pressed to her on my side, with my arm across her back. \n\nI climbed up on top of her back, my legs outside hers. I guided my cock to her entrance and slowly penetrated her. She was still so slick from our lovemaking before that I slid in easily, my cock bottoming out against her cervix. She was awake instantly, and rocked back to raise her butt in the air so I could go deeper. I thrust hard. I established a quick rhythm of hard strokes, withdrawing my cock to where just the head was inside her, then driving deep. She, how can I say this? - chirped with each thrust. A little \"Ah\" each time I bottomed out. She began countering my thrusts, thrusting her ass back when I'd enter, coming forward when I left. We made love as one body, working together in complete unity. \n\nBut at another level, this was a fuck, too. Not lovemaking. I looked down to see her perfect ass, with my cock disappearing and reappearing from between her pussy lips. Her back, and its hourglass shape in and out of her waist was wonderful. I watched her move as she fucked me in return. Her face still pressed to the pillow, her breasts were likewise settled on the comforter. I could see the curves of their sides. I reached and cupped them, squeezing her nipples and making her gasp with pleasure. She moved against me more urgently as I pinched her nipples. I cupped her breasts and just held them tight. They were so firm, the nipples poking my palms. She was so sinuous, so graceful. It was like watching thick flowing liquid as she impaled herself over and over and over on my long shaft. I grabbed her ass cheeks and rammed her hard again and again. I had stamina now, after that first explosion. I rammed and rammed and pulled her back and forth on my cock. She cried and moaned and came hard. \n\nI pulled back on her breasts to raise her upright in front of me, sitting back on my haunches, my cock still buried deep. She could now rise and fall along my length. I could easily reach her breasts, which I did, fondling them as we rocked. I reached down and pressed her clit back so it rubbed against my stroking shaft. She cried out and almost immediately came, bucking against me wildly and covering my fingers on her clit with her own, her other hand kneading and squeezing her breast. I massaged her clit, rubbing it in circles while I moved my dick in and out of her most willing, wet pussy.",
        "I kept up a furious rhythm of fucking until I could feel my load rising, and then I fucked harder. A few more strokes and I exploded inside Kelly again, ejaculating load after load of sperm. I hugged her back to me, hands around her waist, and held her tight as I gushed inside her. My penis kept contracting, again and again. It didn't seem to want to stop. Kelly felt it and clamped her pussy walls in return, squeezing my cock hard, and making me spasm even more. Finally, spent, we rolled onto our sides as a still-connected unit. Seemingly, in moments we were fast asleep. Just before I nodded off, I looked at the clock. It was four hours after we had started. We missed dinner.\n\nWhen we awoke the next morning, Kelly looked at me with sleepy eyes. \"Is there more punishment?\" She smiled weakly, and sleepily. She was exhausted.\n\n\"No.\"\n\n\"Too bad,\" she sighed, \"I guess I'll have to be naughty again soon.\" She wrapped her arms around my neck and kissed me deeply.\n\n\"No, Kelly, please don't,\" I said between kisses. \"This was too awful.\"\n\n\"Punishment was awful?\" Kelly asked, confused.\n\n\"No it wasn't, but your naughtiness was. Please, Kelly, any time you want punishment like I gave you last night, you need only ask.\" This time, I kissed her. \"I understand about Amanda, and why you did it. I don't like it, and don't ever do anything like that again. But when I realized that it was a way for you to feel safer with me, and freer to love me, the only thing I wanted to do was to punish you the way I did.\" I kissed her, and held her hard against me.\n\n\"I love you, you jerk.\" She said, coming up for air.\n\n\"And I love you, too, jerk. I am yours, Kelly, body and soul, forever and ever. Just like in the movies. I love you more than you could possibly imagine.\"\n\n\"I can imagine a lot! Why, Justin! I do believe your penis is erect!\" Kelly looked deep into my eyes, hers full of love. \"Whatever shall we do about that?\"\n\nKelly and I have been married 28 years. We survived college, had the struggles most young married couples have, and now our three children are almost grown. I have been completely faithful, never once even remotely tempted by another woman. She, too, has known only me. It has been a fairytale marriage, and I love her even more than I did in high school. Amanda may have thought that Kelly was a lucky lady, but every day I bless my own luck, bless Kelly, and bless all that I have had in this life.\n\n*\n\nThanks for reading the \"Kelly\" series, or even just parts of it.\n\nBut what if Justin had succumbed to Amanda's considerable charms? Part Six follows. "
    ],
    "authorname": "Balrog",
    "tags": [
        "possibly imagine",
        "slide rule",
        "hourglass shape",
        "withdrew slowly",
        "talked school",
        "home hard",
        "soul forever",
        "skin breasts",
        "long tall",
        "rammed home"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/kelly-ch-05"
}