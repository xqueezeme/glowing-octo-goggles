{
    "title": "A Tempting Vacation Ch. 17",
    "pages": [
        "Beth slowly eased down the shoreline, little more than her head above water. As she drifted along, her mind continued to sift through the day's surprising events, as well as envision what she hoped might transpire a little later, in light of her most recent chance encounter. \n\n()()()\n\nWhile Pam had relaxed in the shade, waiting for their salads, Beth had parked herself in front of the painfully slow bartender as he mixed their drinks. She glanced past him, to the ocean side of the circular bar, immediately recognizing the statuesque Bahamian girl that had serendipitously helped her torment Ron, as well as Sue, yesterday at the boutique. Noticing she was wearing one of the Resort staff polo shirts, Beth made her way to an empty barstool next to her. \n\n\"Hi, ah, remember me, I was in your shop yesterday, with some friends?\" Beth said, offering her hand along with a friendly smile. \"I'm Beth. We bought a lot of stuff.\"\n\n\"But you know I do. Assisting you and your friends was the highlight of my day as a matter of fact. My name is Leslie.\" She answered truthfully while attempting to discreetly admire this older lady's age-defying body, and the way her teeny orange bikini struggled to contain her otherwise nude form. \n\nBeth wasn't afraid of confirming to this young girl the deliberate teasing they'd inflicted upon Ron, and by default, Sue, and flashed her a knowing grin as she leaned closer and softly said, \"I bet. My friend Ron needed an icy shower after experiencing your attentive customer service.\" Then in a more normal tone said, \"But what are you doing here...you work for the resort as well as the retail store?\"\n\n\"Just on a part time basis. I conduct an occasional spa session when the normal instructor is unavailable, you know, yoga, massage, aerobics, stuff like that. I just finished a couple's massage class a little while ago. It was rather boring, with an overweight older couple...too bad you and Ron couldn't make it. I would guess you'd have been up for a spicier class, with my more advanced full body massages,\" she smiled broadly as she continued, \"not for the inhibited, don't you know.\"\n\n\"Oh my now Leslie, you sound like a woman after my own heart.\" Beth spoke, even as her mind was toying with the possibilities. \"Maybe you'd like to offer us a session this afternoon, a group session? It would be me, Ron who you obviously remember, and my dear friend Pam...oh, and maybe even another couple. What do you say?\" Beth asked even as the familiar tingle overtook her body at the prospect of such deviously erotic fun.\n\n\"We'll schedule you in for a, ahem, a relaxing experience. I'll reserve three private rooms. What do you think?\" Leslie asked with a sly grin and conspiratorial wink.\n\n\"I love it.\" Beth replied, her enthusiasm evident. \"But there are a couple of things we should be clear on, you know, relative to how certain members of our group should, and shouldn't interact.\" \n\nBeth leaned close to convey her desires to her new accomplice, and within 10 minutes she was back poolside with their drinks, where Pam had begun eating, unaware of her friend's scheming conversation. After lunch, they headed to the beach as planned, and within 30 minutes Ron found them sunning lazily, recuperating from the mornings intoxicants and the lingering awkwardness of their lunchtime tryst. \n\nBeth was pleased with his demeanor, as he somehow managed to preserve his innocent schoolboy performance while so nonchalantly maneuvering about with his impressive bulge so obscenely displayed by his snug green swimsuit. It was fun to watch Pam struggle to steal peeks without being too obvious. Having decided it would be best to let everyone simmer a bit prior to their upcoming massage class, Beth was content to relax and get some sun, that is until she'd seen Lil and her husband making their way down the beach, a little further from the main crowd. She'd been intending to track her down if possible, and waited about 20 minutes or so before slipping quietly down to the sea to seize the opportunity before her. \n\n()()()\n\nRealizing Beth was floating further down the shoreline, Pam decided to take another run at a little innocent teasing of Ron, and slowly made her way into the surf as well. She'd been kept at a constant simmer beneath her white bikini bottoms ever since Beth had left short of cumming back in the room. Having to continually squeeze and grip the lolling Ben Wa balls, all the while spying Ron's nearly obscenely bulging trunks, had her in need of a brief respite in the ocean. After a few dives into the oncoming waves, Pam began the slow walk back up the soft sand. She'd promised herself she would not look down to examine this new white bikini's first display when soaking wet, at least not until she'd approached Ron and begun to dry off.\n\nAs expected, he was sitting, propped up by his arms extending behind him to the rear of his towel, ready to watch her every move as she returned in her dripping wet bikini. His legs were extended so that his package was plainly evident as she strode closer. They both were doing their best not to be too obvious as to where their eyes were focused behind their dark shades. Pam started toweling off the water from her hair and as she continued to surreptitiously spy his swimsuit, his dick noticeably lurched against the green material, and began to lengthen right before her eyes. \n\nRon had intended to show off when Pam came back from the ocean, but he wasn't quite prepared for the way she looked in that white bikini. It was super sexy when completely dry, as her nipples had been tenting the thin material all afternoon, but now, it was practically non-existent. Not only could he see her entire areolas, but the wet bottoms were molded into every crease and crevice of her pussy. She didn't seem to notice, which seemed odd, but his cock certainly did, as it immediately began a steady expansion toward a complete erection in only a matter of seconds. \n\nPam couldn't resist any longer as Ron's rapid response within his trunks was a pretty evident clue as to how her suit might look while wet. She bent to dry the water from her legs, taking the opportunity to discreetly examine her appearance. She'd expected it to be tight and clingy, and maybe show her nipples a little more plainly, but she was practically naked. It was sexy and exhilarating, but it was too much for her when layered on top of everything else that had been stoking her fires, not the least of which was the last couple of hours spend battling the persistent steel balls as they battered the walls of her pussy. \n\nShe'd finished drying off and composed herself enough to say, \"Ron, I'm going to run up to the room for a quick bathroom break, I'll be back in a few.\" She then scampered away, finally anxious to extract her recently discovered sex toy. By the time she was in the room, the bikini had dried. She intended to change anyway, but couldn't find her old suits, or even any of her underwear for that matter. This smelled of Beth, and she'd have to confront her as soon as she got her alone. Being forced to go back to Ron in the white bikini wasn't the worst thing, as she'd rather enjoy 'innocently' tormenting him for the rest of the afternoon. After all, wearing such a scant swimsuit around him would fall in the 'it's a beach vacation and he just has to deal with it' category.\n\n()()()\n\nBeth only drifted a couple hundred yards or so until she spotted Lil lying face down, in a black and yellow one piece, closer to the palm trees bordering the back of the beach, than the ocean's edge. Mike was sitting next to her, but their kids were nowhere in sight. Knowing it was now or never, she began to make her way from the surf. Beth could feel her nipples harden, more from the nervous exhilaration of what she was about to do than from the ocean breeze against her wet top. \n\nThe new bikini she'd put on during lunch had actually been one of her more audacious purchases. Even though she'd intended it for a later day, the unplanned encounter back in the room had led her to wearing this particular suit sooner than expected. As she felt the ocean water cascading over her exposed skin, Beth was pleased to be wearing it for the upcoming conversation with the married couple.\n\nLil was on her stomach, facing away from the shore, so she didn't have the view being afforded her husband, as Beth leisurely sauntered from the sea. Mike's eyes settled on the fit blonde, just as he had nearly every other reasonably attractive female to cross before his dark shades, and allowed his mind to pose her in various sex acts. Objectifying women like this wasn't really like him, at least not to this degree, but there was no denying that the sexual depravity he'd embraced watching his wife and the well-hung teenager was still in the forefront of his thoughts. He and Lil had vaguely referred to their exploits over breakfast, and she was obviously regretful of her behavior, even though he'd done his best to alleviate her guilt, taking on as much blame as she'd allow. \n\nWhat he didn't tell her was how aroused he still was, continuing to replay their once-in-a-lifetime evening in his mind. He didn't want to forever lose the sexy persona he'd coaxed from her last night, and while he didn't believe she'd ever do anything even close to that daring again, he'd certainly love for her to embrace the confident sexuality and teasing behavior she'd exhibited with the college boys in the bar. He knew her well enough to avoid pushing in that direction so soon, but eventually, he'd find a way to broach the subject again.\n\nIn the meantime, Mike was content to enjoy the scenery. Before she could even fully emerge from the receding waves, it was evident that the approaching blonde was a cut above the typical beach eye candy, as she proudly displayed her indisputably athletic, yet still curvaceous physique. A few more deliberate strides onto the beach, and he realized she was heading in his direction, each step allowing him a more detailed assessment of her exquisite body. \n\nHe supposed the style of her pale orange bikini was not really that much different than others he'd seen, except that it appeared to be too small for the attention-demanding body it was struggling to conceal. The dripping wet top, in particular, was woefully inadequate to do the job. He'd examined enough Victoria Secret catalogs to guess this to be a \"shelf bra\" style, as the cups were cut horizontally straight across her tanned breasts. Her fleshy globes were pushed up, and because the cups appeared to be designed for someone far less endowed, her breasts were bordering on being obscenely exposed. How her nipples avoided popping over the top edge of the suit was a mystery Mike hoped to solve before she would eventually pass by their spot on the beach. He couldn't completely see through the material, but her erect nubs were unmistakable, as was the camel toe produced by the proportionally tiny bottoms molding to her like a second skin. \n\nAs his attentiveness grew, he shot a quick glance to Lil, confirming she was oblivious to his voyeuristic opportunity, and not wanting to come across as a complete pervert, Mike did his best to appear equally uninterested, deliberately flipping a page in his latest John Grisham novel. Concealed beneath his sunglasses, however, his eyes continued to devour the superb feminine form drawing closer by the second, until it finally dawned on him that the object of his lustful fantasies was none other than Beth, the drunken teenager's mother, and she was not just walking in their direction, but obviously intent on coming to join them. \n\nMike's reaction quickly transitioned from the shameless delight of some ocean-front girl-watching, to a very real apprehension that Ron had for some reason told his mother of their indiscretion from the previous night. \n\n\"Hi, I thought I recognized you two.\" Beth said as she traversed the final 10 yards of soft sand between her and her unwitting accomplices-in-waiting. \n\nMike tried to appear as if he only then looked up from his book, to notice her. \"Oh..., hi there. Lil, honey, it's Beth.\"\n\nHaving rolled over at the sound of a strange voice, Lil saw Beth about the time Mike announced her presence. She, like her husband, was overcome by a sense of panic, but managed to suppress it behind a welcoming smile and somewhat nervous banter, \"Hi Beth. Sorry I haven't tracked you down already...you probably want your room key back, huh?\"\n\nBeth dropped to her knees, just between the feet of the married couple. She of course knew the push-up demi-bra styled bikini, with the halter shoulder straps attached at the outer edges, near her arm pits, allowed an inordinate amount of each fleshy globe to be overtly exposed above the undersized cups. Just a glimpse of each pinkish brown areola ever so briefly slithered beyond the top edge of her bikini, as her enticing breasts jiggled noticeably from her sudden descent to the blanket. In addition, she could feel her simmering pussy practically engulfing the wet, thin material, and could only imagine the obscenely erotic vision she must be presenting. As such, Beth was not the least bit surprised to see both sets of eyes scanning her barely clad body. \n\n\"The key, oh yeah, if you have it with you, sure. Did everything go ok last night?\"\n\nLil unconsciously made brief eye contact with Mike before returning her focus to Beth, \"No problem at all. We stopped by on the way to and from the bar. He was sleeping like a baby both times.\" Lil replied with what she believed to be the truth, technically. \n\n\"Good. I appreciate you helping out.\" Beth couldn't help but toy with them a little, noting the relief wash over them both when she appeared to accept Lil's statement. \"So, are you planning on doing anything fun tonight?\"\n\nMike answered before Lil could respond. Now convinced the molestation of Ron was their secret to keep, he wanted to preserve any potential option of spending an evening with this incredibly alluring woman. \"Not really. How about you guys?\"\n\nLil shot Mike another brief, but noticeably irritated look as Beth replied, \"Well, we may go to one of the clubs, you know, pretend we're still in college one more time. You should go with us...and Lil, you should wear your red dress again.\" Beth paused, taking a perverted pleasure is watching the confusion overtake first Lil, then Mike. \"You are so full of surprises, I mean, I never took you for someone to wear such a daring dress.\" She stopped, letting them digest her words.\n\n\"Uh, I'm not sure I am following you, what red dress?\" Came Lil's weak attempt at denial.\n\n\"Hmm, let me think, I believe it was a halter style, cut rather low, down to about here.\" Beth demonstrated by dragging a single red fingernail deep into the bronzed and ample cleavage created by the undersized bikini top. \"And even though the video was a little fuzzy, and I admit, I was more focused on the way you sucked on Ron's big cock, but still, the dress appeared to be brazenly thin, you naughty girl.\"\n\nThe threesome sat motionless as Mike and Lil came to terms what they'd just heard. Eventually, Mike felt a sickness in his gut upon registering Beth's graphic confession of her knowledge of what they had done. Even worse, he didn't like the confident, almost condescending tone with which she was speaking, and decided he should do his best to end this conversation right now. \"Look here, I don't know what you're talking about, but I think it best if we just give you the key and go our separate ways.\"\n\n\"I guess we could do that. It's just that if a particular video I have ever made its way to the First Baptist Church, or maybe even one of the local bars in, where was it you lived again, oh yes, Greenville, well, I can only imagine the fallout. Greenville's not really that big, so it would probably only take a few days, maybe a week before this video was the talk of the town.\" Beth said with as much sinister commitment as she could muster. Of course, she'd never do such a thing to them, but if she was to gain their assistance in her latest conniving scheme, they had to be properly motivated. Based on their actions in the video, she truly believed that after initialing coercing them, then adding some alcohol, and maybe one of her recently found joints, it wouldn't take long to break down their resistance until each were playing along voluntarily and enthusiastically.\n\nLil sat upright during Beth's veiled threat, and scooted a little closer to her husband as she felt the tears coming on. About that same time, Mike exploded, \"Listen you, I don't know what you're trying to accomplish, but you'll go to jail, trust me, if you do anything to tarnish our name.\"\n\n\"Oh, come on Mike, please calm down. I am not really an evil person. I didn't plan any of this,\" Beth lied, \"It's just that last night, before we left the room, I started thinking about having a stranger, albeit someone that seemed nice, normal and trustworthy, but a stranger nonetheless, come into our condo, and well, I decided to be safe and hide my video camera. To say I was shocked with what I saw on the tape, well, that would likely be the understatement of the century.\"\n\nMike and Lil sat there, flabbergasted. Each was struggling with their response, neither could find a voice to ...to what?...to deny what Beth had seen on the video?... to be angry at her for taking steps to protect her son and belongings?...to accuse Beth of setting them up?...maybe, but she certainly didn't force them to do the things they did, so that seemed a losing position. \n\nThe sobbing from Lil was bubbling up in earnest now. Mike reached over and held her hand, but he already knew that if Beth truly had a video of them with Ron, that they had little leverage to demand anything of her. His anger was still evident in his voice, even as he asked, \"So, what is it you want from us? Money?\"\n\n\"Oh my, no. That would be, well, that'd be criminal. I only want your assistance, just for today, then you get the video for a keepsake, and we part, hopefully friends, after all is said and done. But understand, I do intend for you both to do what I ask, or I will mail the video, believe me.\" Beth laid down another hollow threat in an effort to keep them focused.\n\nLil, now working on stifling her tears, sensed they might be able to come through this without ruining their reputation, and through now abating sobs and sniffles, asked, \"What exactly do you expect us to do?\" \n\nBeth had given this much thought over the past hour or so, while basking in the sun just up the beach from where they now sat. She'd decided the best way to truly have Mike and Lil buy in was to tell them about the various bouts of exhibitionism, teasing and voyeurism they'd experienced so far on their trip. She also wanted them to get past being strong-armed, and to focus more on this being a continuation of the sexual adventure they'd begun last night with Ron.\n\n\"Now, don't get all worked up, it's not a big deal, just think of it as playing a part in a movie, but before I get to that, let me tell you about the past few days. What started out as an innocent little trip, has for reasons ranging from pure serendipity to some admittedly calculated scheming, turned into a vacation of one erotic temptation after another. Coincidentally, you two happened onto one of these tempting escapades yesterday, at the boutique, but I'll get to that in a bit,...\" she paused briefly, allowing Lil time to fully register the implication of her words. Seeing her glance apprehensively to her husband, Beth continued, \"This could take a bit. Would you be so kind as to share your sunscreen?\" Beth seemed to absentmindedly ask Mike while she made a show of brushing the sand from her defined, tanned legs. \n\nMike had quickly reassessed the situation, and while he resented being manipulated, he didn't truly believe Beth's intent was to cause them any harm. Quite the opposite, in fact, she may actually bring about a quicker return to the previous night's adventures than even he'd planned. Plus, it certainly couldn't hurt to give her their sunscreen so that she could oil herself down while sharing with them the naughty events to which she'd hinted. As his cock twitched in anticipation, he reassuringly stroked his wife's hand as Beth continued speaking. ",
        "\"Even after the boutique, I never anticipated you'd drop back into our little erotic journey, but then fate intervened, you just happened to be sitting poolside last night, as I was deciding what to do about Ron. You were so agreeable to check in on him, and well, ahem, you know the rest.\" Beth gave Lil a purposeful wink, delighting in watching her squirm nervously even as Mike's anger appeared to be dissipating with every word she uttered and every drop of lotion with which she caressed her golden skin. \n\nLil sat there, still in a near state of shock. She knew letting Mike talk her into wearing the red dress had been a mistake. But of course, she also knew her actions couldn't totally be blamed on the dress, or even the alcohol for that matter. She'd happened upon Ron in the changing room, and having spied his unusually large penis, well, her thoughts had been teetering toward perversion ever since. And now, after a night of reckless and sinful behavior, here they were, at the mercy of some twisted woman they hardly knew. \n\nOf course, her increasingly perverted husband was more than happy to drool over her while she lathered up her perfect, practically nude body with tanning oil. The sad thing was, Lil knew she could hardly blame him. Beth was incredibly attractive, with toned, flawless skin, and yet still curvy enough to just ooze sex appeal. As much as she despised her right now, Lil also knew she really had no choice but to sit back, allow her to flaunt herself for Mike, and hear her out. Her only hope was that her demands weren't too unreasonable, and that they'd be able to escape the consequences of their ill-advised decisions of last night.\n\nBeth continued to very slowly coat her arms and shoulders, the coconut aroma wafting about them. \"But let me back up, it really all began on the ride down. My friend Pam, who'll you meet this evening, decided to get some sleep ...\"\n\nAfter truthfully relaying Pam's accidental backseat encounter, her unavoidable contact on the plane, and then the fortuitous opportunity for her to spy on Amy blowing Ron in the bathroom, Beth paused, anxious to assess how this was all settling in with her newest co-conspirators.\n\nLil and Mike had both been taken in by Beth's tale. Even as her oily hands caressed the exposed top half of each breast under the guise of protecting her skin from the sun, Mike surprisingly found himself equally as intrigued by her words as by her actions. Lil, understanding exactly how Beth's friend could have become so quickly enamored of the teenager's penis, had all but forgotten the coerced position she was in, and only wanted to more fully understand where Beth was going with all this.\n\n\"So let me understand, you knew your friend was becoming obsessed with your own son's...well, Ron's ah, you know what I mean, and you didn't care?\" Lil honed in on the most obvious issue, as most any mother would.\n\n\"Oh, I guess I should set the record straight. Ron isn't really my kid. We all concocted that lie to keep Pam's ex-hubby calm because...well, it's not really relevant now, but Pam knew, and now you do as well, that Ron isn't related to me, or anyone else on this trip for that matter. After we kept up the charade through our first lunch with you guys, I couldn't see any reason to tell you otherwise, plus I kinda thought that by prolonging the lie last night, that you might be a little more protective of him, you know, mom to mom.\" Beth paused once more, noting yet again the guiltily fleeting glance between the married couple, before she continued with a light-hearted chuckle, \"Guess that one didn't work out like I thought, huh?\" \n\nLil fidgeted beneath the emotional weight of the accusatory words, even as Beth pressed on, her tale occasionally infused with self-serving lies, \"Anyway, it seemed like every time I turned around, Pam's daughter Amy was maneuvering Ron into some sort of predicament that would torment him while more often than not tempting her own mother as well. Pam has held up pretty well, most of the time, but, well, you know Lil, there's only so much a woman can resist, right?\"\n\n\"Please, quit assailing me with my indiscretion from last night. I am truly regretful for taking advantage of your so...I mean Ron. I really am!\" Lil responded earnestly to Beth's recurring taunts.\n\nEven as his eyes were involuntarily drawn to Beth's glistening tummy, as she swiped sun lotion ever closer to the edge of her bikini, Mike stroked Lil's hand and said, \"Please, just tell us what you want and quit torturing my wife, it's only upsetting her, and certainly not helping to convince her, er us, to go along with whatever it is you're planning.\"\n\nEven if Beth hadn't caught Mike's inference of his own willingness, his bulging crotch was a dead giveaway as to his growing interest in what she might propose. Obviously, it didn't take a brain surgeon to assume something sexual was going to be asked of them. \n\n\"Okay, okay, I'll get to that, but I need to finish bringing you up to speed. So after I notice how Amy seems to delight in forcing Ron to tempt her own mother, I mention it to Pam. I can tell she's thought the same thing, but refused to admit it to herself, or maybe only me...I guess it is another 'mom' thing. But eventually, I convinced her that we'd lay a little trap and see which of us was right about Amy. \n\nAfter a night out drinking, Pam pretended to be passed out, and I excused myself to take a bath, leaving Amy and Ron the task of getting Pam put to bed before they went to the hot tub. In only a matter of minutes, Amy convinced Ron to stop changing into his swimsuit, and help her with her mom. Ron was stark naked and completely hard, while he crawled around the bed, helping position Pam so Amy could undress her. I peeked through the not-quite-closed bathroom door the whole time...it was super erotic to watch.\"\n\n\"No...are you serious?\" Lil asked in a genuinely interested tone, seeming to forget to be mad at Beth, at least for the moment.\n\n\"Why would I lie about it? As a matter of fact, I'd say just hearing about this is exciting your husband, so you can only imagine how young Ron responded that night.\" Beth replied, nodding to the bulge in Mike's suit. \"I have an idea. It's time for your first task to show me you will do what it takes to keep your little video from being mailed... I'd like you to slip your hand in his swimsuit until I finish my story.\"\n\nLil shot Mike a look of disgust, as if he should be able to refrain from getting hard as Beth sat there next to them, caressing her golden skin with lotion as she told her erotic tale, then immediately turned back to Beth to refuse her request, saying, \"I can't do that. Not right here on the beach where anyone might see.\"\n\n\"Okay, then I guess the video will be the talk of Greenville by this time next week.\" Beth said with as much cold, unfeeling determination as she could portray, and began to rise to her feet.\n\n\"No...stop...okay, you win. But can I use this towel for cover? Lil pleaded, holding up a spare beach towel. \n\n\"Sure, all you need to do in exchange for that privacy is hold out your hand.\" Beth leaned forward and pulled Lil's right hand from Mike's grasp, and before she could object further, squirted a nice dollop of sun screen into her palm. She then directed the slick and reluctantly compliant hand to the waistband of her husband's swimsuit, guiding it beneath the fabric just as Lil managed to spread the towel over his lap.\n\nMike was surprised by both the audacity of Beth, and the relative ease to which his wife had allowed herself to be manipulated. He halfway expected her to simply sit there, her wrist snugly encased by the straining elastic, but to his surprise, Lil wrapped her oily fingers around his shaft and slowly began to fondle and stroke his steel-like erection. \n\n\"OK, I am doing it, now please get to the point and tell us what sort of twisted game you are making us play.\" Lil demanded. \n\nBeth heard what she thought to be concocted anger in Lil's words. Furthermore, her nipples practically bursting through the padding of her bathing suit, her shallow breathing and continued stroking of her husband on a public beach, seemed to support Beth's assessment of Lil's feigned annoyance. Feeling her own arousal building from the emerging sexual atmosphere, she decided to ignore Lil's plea to divulge her ultimate demands, and delve a little deeper into the stimulating aspects of her story.\n\n\"So anyway..., I can't help myself...I've taken great delight in my friend Pam's struggle in dealing with the fact that her daughter's boyfriend is hung like a porn star. And honestly, it's been just as much fun to torment Ron, you know, watch him squirm while trying to conceal his considerable excitement.\" Beth continued, now lathering her thighs with the shiny oil. \n\nShe noted the lustful gaze on Mike's face and the way Lil's body continued to betray her growing arousal before resuming her story. \"The more I've kidded her, the more defensive Pam's become, continually denying any desire for what Ron's packing, so to speak. She got so defensive that I eventually goaded her into betting on it. We have $1,000 on whether or not she breaks down and sucks on Ron's big fat cock before the trip is over. Of course Pam thinks this is going to be easy money for her...but that's where you come in Lil, you're going to help me with my plan to further entice Pam, cause you can relate to just how tempting such well-endowed forbidden fruit can be, can't you?\"\n\n\"That lucky little shit!\" Mike spat out before he could censor himself, and regretted it immediately. Lil and Beth both locked eyes on him, and his wife ceased moving her slick hand inside his shorts. Beth stifled a giggle, anxious to see what Lil would say next.\n\nBefore she could speak, Mike decided to just jump in with both feet, realizing he wouldn't be able to talk himself free of his envious outburst anyway, \"Well, don't look at me like I said something crazy...he is a lucky little shit. I mean he's got this big, meaty cock that seems to captivate any woman that gets a whiff of it.\" Mike rambled on, intentionally glancing at Lil, practically daring his wife to interrupt. \"Now he's left on a tropical island, at the mercy of an incredibly sexy and devious family friend, and along with the help of my own wife, I'm guessing he's going to be teased and toyed with in the hopes that his own girlfriend's mother will finally succumb to the temptation and give him a blowjob. How is that not the luckiest kid on earth?\" \n\nLil quickly digested her husband's words, growing undeniably aroused at the thought of being coerced into luring another woman past the taboo of fellating the well-hung teenager, a boy that is her own daughter's boyfriend no less. It would be so wrong, so dirty, so deceitful, but as her pussy grew moist from the recollection of her own moral breakdown and submission to the unconscious boy's penis, Lil reminded herself that the video Beth had taken would make refusing whatever she was told to do impossible. During the seconds in which her mind processed these thoughts, Lil's slippery hand instinctively resumed the steady stroking of Mike's rock hard penis.\n\nBeth heard the jealous desire in Mike's words, and noted Lil's heightened arousal as she continued on with her manipulative lies and half-truths. \"Yeah, I guess the kid is rather lucky, but you might have some fun with this yourself.\" She said, looking Mike directly in the eye. She thought Mike was already a willing participant, but it couldn't hurt to keep him properly motivated to further insure he'd play along. \"I mean, Pam will need to be primed a little as well, and that job may fall to you.\"\n\nLil's hand immediately ceased moving inside Mike's shorts, as she was not nearly as comfortable with him being 'forced' into this twisted little game of seduction as when it had been only her. Her discomfort was obvious, and Beth interjected, \"Look you two, it's not like I'm going to tie you down and have you taken against your will, but I do need you both to be willing to just go with the flow, okay? So Lil, please be a good sport and resume your current task at hand.\" Beth finished, her eyes locked on Mike's towel covered crotch until it was obvious Lil had resumed her hand job.\n\n\"Ok, so here is the plan...\" Beth leaned in closer, an explained their roles for what she envisioned to play out later that afternoon. As her instructions drew to a close, Beth noted Lil's continued stroking beneath the cover of the towel. Mike's body began to more conspicuously convey his increasing arousal. She was toying with how far to let them go, when the decision was made for her as Beth saw their kids coming down the boardwalk to the beach, and said, \"Ah, I hate to break this to you, but in about two minutes your kids are going to join us...maybe you should pull your hand from Mike's shorts.\"\n\nLil of course did so immediately, and even though Mike obviously understood, he was visibly disappointed. Beth decided leaving Mike hanging was only fair, and quickly rose to make her exit. \"We'll be up the beach for another hour or two, and I expect you both to follow through on what I have asked you to do, see you shortly.\" With that, Beth sauntered back to the clear Caribbean waves, to ease her way up the coastline and join an unsuspecting Pam and Ron. \n\n()()()\n\nLeslie had been on edge ever since her earlier conversation with Beth. She'd never meet anyone so sexually adventurous and unabashedly manipulative. She'd promised the alluring blonde to do her best to stay within her guidelines. Luckily spring break week didn't bring a lot of spa use, as she guessed most of the kids preferred to spend their money on drinking rather than getting an expensive massage, so reserving the massage rooms was no problem.\n\nShortly after 4:00, Lil and Mike entered the spa as they'd been directed by their sexy blackmailer. As planned, Beth and Lil portrayed themselves equally surprised to once again cross paths, all for the benefit of Pam and Ron, then related their brief encounter from the previous day's shopping and lunch, and made introductions all around. \n\nRon was the only one truly surprised by the presence of Mike and Lil. He'd been extremely drunk the night before, but was still able to recall bits and pieces of the magnificent blow job, and the way her husband had urged her on. Now, to see them so unexpectedly was quite a shock, and he found himself embarrassed to have to face the married couple again. He saw them both seemingly involuntarily glance at his bulging trunks, then each do their best not to look again. It was also rather obvious that Mike was quite intrigued with Pam in her teeny white bikini. Lil seemed to take note as well, albeit with a far less lascivious countenance than did her husband.\n\nAnd then Leslie entered from the door to the adjoining office, and spoke to the group. Ron immediately recognized her from the boutique, and glanced to Beth. There was little doubt in his mind that she'd somehow managed to bring this group together, but her face gave nothing away. \n\nAs he continued to process these events, Leslie spoke up, and it only got worse. \"Unfortunately, we are understaffed, and only myself and another masseuse are working today, and even she won't be here for a bit. To express the resort's apologies for this inconvenience, there will be no charge for this spa session. What we've sometimes done in the past is basically provide a massage 'class', and demonstrate basic technique, and then provide guidance as guests take turns massaging each other. Would that be acceptable today?\"\n\nPam had managed to grow somewhat immune to seeing Ron so blatantly displayed within his green swimsuit for the past hour or so on the beach, even though her thoughts kept returning to the vision seared into her brain of Ron stroking himself to orgasm back in their room. But to potentially put her hands on his body as part of a massage would surely be a bad idea. She was prepared to object to Leslie's suggestion, but before she opened her mouth, Lil spoke up, \"I think it'd be neat to learn how to give a massage, but I know my husband, and once I put my hands on him, he won't let me treat this seriously, ah, well, I'm sure you know what I mean.\" She laughed nervously, relieved to have conveyed the message as she'd been instructed, and glanced briefly to Beth, glad to see a brief, confirming smile.\n\nPam still wasn't sure where this was going, but decided if she could get Ron paired with the other married woman, she wouldn't be tempted and he wouldn't end up at the mercy of Beth's devious hands. Just as she prepared to broach the subject, Leslie continued, \"Here's what I recommend. Everyone take a quick shower, wrap in a clean towel, and come back to Room #1. I'll show the group some basic techniques, then we'll break into twos. I'll pair each of you with someone not in your group. Hopefully Nancy will join us in time to be your partner Beth. That will leave Mike with Pam, and Ron with Lil. I'll move room to room to answer questions and give pointers. Is that acceptable to everyone?\"\n\nAfter everyone indicated their agreement, she continued, \"Good. Let's get started, there is a women's locker room down this hall. Guys, your facilities are not quite as large, but at the opposite end of the hall is a changing room for the men. See everyone in Room 1 in 10 minutes.\"\n\nWith only one shower stall, Ron went first, and even with the clear curtain, was able to shield his cock from Mike. He felt funny about being alone with the man, knowing what had happened the previous night, but to Ron's relief, Mike behaved normally and their conversation was brief and superficial. He wrapped himself in an oversized towel, glad that the awkwardness of the past few minutes had left him mostly flaccid. Glancing down, the sloping curve of his dick was evident beneath the white towel, but at least not obscenely so.\n\nAs everyone reconvened in Room #1, Leslie once again took control. \"Okay, I'll need a couple of volunteers to be on the receiving end of our lessons, who's first? Mike?\" \n\nHaving been given instructions by Beth to go along with whatever was asked of him, Mike agreed and crawled up on the table, on his stomach. Leslie tugged the towel from beneath him, leaving it draped across over his butt and thighs. \n\nEveryone gathered around as Leslie showed them how to press down his back, with just the right amount of pressure and each of them took a turn. It all appeared harmless enough, and when Leslie asked Pam to be next, she agreed. While Pam had initially been skeptical when Beth had suggested massages, it appeared for once that Beth was not playing puppet master. Even though the group's near nudity provided a somewhat erotic aura to the room, the black masseuse seemed to be behaving in a professional manner. \n\nPam replaced Mike on the table, in the same face down position. Leslie tugged her towel loose as well, and to Pam's surprise, positioned it just as she had for him. This left her upper body completely exposed, the swell of her breasts pressed out to each side and only concealed by her arms pressed tight into her torso. In addition, Pam felt a steady drizzle of massage oil being dripped over her back and legs. \n\nAs Leslie began to work the oil into her shoulders, she invited Lil to stand at Pam's head, and give it a try. The pressure felt good, and as Pam relaxed further, she was slow to comprehend a second set of hands a little further down her back. \n\n\"Very good Ron. Since Pam is so petite, you can turn your body like this,\" Leslie said, twisting Ron so that he was next to Pam's hip, positioned facing her head. \"This way both hands can grip her waist, then your thumbs can slide up along her spine. Just keep working her like that while I show Beth and Mike some leg moves.\" \n\nRon steadily inched higher and higher, his large hands completely spanning her tan, slender back. As he moved, his fingers tentatively probed between her ribs and arms. Pam reflexively tensed up, tightly squeezing her arms to her side so that he didn't come in contact with the swell of her breasts. No matter how complicit she'd ultimately been in teasing and tempting the poor boy to this point of their trip, willingly offering herself up to knowingly be groped and caressed by him was a line she just couldn't cross. Frustratingly, this current situation of having numerous hands so publicly roaming over her tingling skin was rapidly turning her on, as evidenced by the smoldering moisture between her legs. As Pam steeled herself to withstand Ron's touch, Leslie began to direct Beth and Mike as they stood at the foot of the table.",
        "At once, Pam felt a pair of hands on each foot, and heard Leslie detailing how they should keep constant pressure when slowly ascending up her slick legs. Her body tensed as she felt them pass her knees, and move higher up her thighs. Nothing Beth might do would surprise her at this point, but having this strange man, with his wife fully aware of his actions, getting ever closer to sliding beneath her towel was unexpected. No matter how perverted this vacation had been, Pam was not going to be the center of some sort of group sex gang bang. Just when she thought Beth and Mike were going to cross the line and elicit her objection, they reversed course and moved back down toward her calves. \n\nStill, her moral intentions notwithstanding, feeling four sets of hands on her was doing nothing to lessen Pam's percolating libido. She'd only barely suppressed her guilt for the lunch time interlude with Beth. Even worse, the roller coaster of arousal and remorse from the numerous encounters with Ron was becoming exhausting. It seemed that no matter how resolute Pam's prior pledges to taking the high road had been, she'd obviously crossed over to 'inadvertently' teasing the poor boy. And even in cases such as this, when she'd truly intended to avoid the slippery sexual slope on the horizon, as so many times before, she found herself in a battle with her own body over yet another titillating situation. \n\nRon was in heaven as Leslie placed her hands over his own, and encouraged him to roam more freely over Pam's lower back. \"You see Ron, the lower spine, right here, is key. Tightness here can impact the nerves running across a person's gluts and down their legs.\" As she spoke, their hands nudged the towel back further over her well defined ass before returning to grip her svelte waist once again. Ron's eyes locked on the curve of Pam's buns and the resulting cleavage escaping from beneath the towel and his cock lurched at the vision of Beth and Mike as they concentrated on caressing her tanned and toned thighs.\n\nKeenly aware of the way Leslie was guiding Ron's hands over her friend even before she felt her body grow more tense, Beth tugged Pam's leg over closer to the edge of the table. As she and Mike moved in unison back up her legs, she gently folded the bottom edge of the towel up so that it barely covered the junction of Pam's round cheeks and well defined thighs. Mike followed Beth's lead, and they each lingered just an inch or so from the noticeable heat emanating from just beneath the towel. Her muscular legs felt incredible, and as much as Mike wanted to take advantage of her nearly exposed pussy, he knew he'd have more time alone with her shortly.\n\nPam's body was on fire. Her mind was in turmoil. Feeling two sets of hands on her thighs, so close to her needy pussy was pushing her ever closer to submitting to the burgeoning hedonistic desires slowly consuming her. Yet, as she felt Leslie direct Ron's hands once again to the ever-receding edge of the towel, a fresh jolt of excitement pushed her to the intersection of pure debauchery and righteous morality. As her conscience struggled with doing what she knew to be right, the decision was made for her.\n\nLeslie removed her hands, as did the rest when their attention was diverted to the stunning dark haired girl that had just entered the room, \"Nancy, finally. Now that you're here we can break out and let everyone put what they've learned to use.\"\n\nLeslie made the introductions, then said, \"Pam, why don't you just stay put so Mike can continue with your massage, Nancy, you take Beth to Room #2 and take care of her. Lil and Ron, come with me and I'll get you set up just down the hall.\"\n\n()()()\n\nBeth, having been willing to take a backseat so far during this little escapade, was more than pleased with her masseuse. Something about the girl seemed familiar, but she'd worry about that later. As they entered their room, Nancy authoritatively directed Beth to drop her towel and crawl up on the table completely nude. Beth liked the way this one took charge, and gladly stripped down to let her admire her fit bod. \n\nNancy didn't think she'd been recognized by anyone in the group. She presented much differently with her long black hair cascading over her shoulders and dressed in the resort provided khaki shorts and polo shirt, than she did as Hilda, the leather clad dominatrix with her hair slicked back in a tight bun. She certainly remembered Ron, and his drunken revelation that he'd fucked his mom in the shower, so when Leslie asked her to help out with this perverted massage class for some hot woman and the big dicked kid with her, she'd quickly connected the dots and jumped at the chance. Now alone with the mom, she fully intended to have some fun and learn more about this twisted little family.\n\n()()()\n\nAs soon as the door shut, leaving Mike and Pam alone, he spoke, \"Ah, this is somewhat awkward, right? But I'll start over at your shoulders, and you just let me know if you ever feel uncomfortable.\" \n\nPam agreed. Mike drizzled more oil over her exposed skin and began the pleasurable task of teasing and seducing her as best he could, just as Beth had directed. Given the erotic events of the past 5 minutes, and the way Pam had been noticeably responding to the numerous hands roaming over her body, Mike felt he had a good chance of meeting his goal. \n\nHe tried not to think about Lil and Ron, for he was equal parts aroused and jealous with the thought of his otherwise conservative wife being alone and naked with the big cocked teenager. Last night had led them both to a point neither had ever dreamt possible. He had to admit he'd surprisingly been turned on like never before, but this time, he wouldn't be there to control how far he wanted her to go. Mental images of Ron sinking his fat prick deep within Lil's tight pussy were interrupted when Pam let out a tiny moan as his hands moved closer to her ass. He refocused his attention to the task at hand, which might make the trade off with whatever happened to Lil a little more acceptable. \n\n()()()\n\nThirty minutes later, Beth emerged from her massage room, once again wrapped in a towel. Her legs were shaky as Nancy had wasted little time in transitioning from a proper massage, to a full on sexual assault. Beth had promised she'd come back for more, but for now, she had to check in on Lil and Mike, to make sure things were going as planned. She peeked into the first room to see Mike still slowly tormenting her friend. Pam was now completely nude and writhing beneath his hands, but he was being a good boy, just as he'd promised, and wasn't taking things too far. \n\nUnbeknownst to Beth, Mike and Pam had heard her at the door, and ceased what was quickly evolving into some rather stimulating foreplay. As soon as she'd left, Mike's hands resumed their activity between Pam's legs, and after only a few more minutes, he convinced her to join him in the men's locker room. She protested briefly, but within five minutes they were in their towels and slipping down the hall to a more private location.\n\n()()()\n\nBeth left room #1 and scurried down to where Lil was with Ron, still under Leslie's direction. Taking the time to check on this trio proved to be wise, as things appeared to be spiraling toward a full blown threesome. She made her presence known, and directed that Ron should go to his locker room and get cleaned up. She stayed behind with the two women, taking a little perverted pleasure in forcing Lil to sit there nude and describe in detail everything they'd done to him. \n\nAfter 10 minutes or so, she decided against forcing Lil into any other debauchery, and excused herself to go resume her fun with Nancy. As she was walking out the door, almost as an afterthought, she said, \"Ah, Lil, last I saw your husband was delivering quite the massage to Pam back in room #1. You might want to go check on them, you know, just to make sure they are behaving.\"\n\nHearing Lil tell of the very naughty massage she and Leslie had inflicted upon Ron, she was eager to get back to the raven haired stunner that had so captivated her. Having Lil bust in on Mike and Pam might be a fun little show, but getting back to Nancy's talented tongue and fingers promised to be much more rewarding, so Beth made a beeline back to the young girl.\n\n()()()\n\nAs soon as Beth had once again interrupted his fun, Ron had dashed across the hall to the same changing room he and Mr. Johnson had used earlier. He did his best to contain the gooey Nuru massage oil with the resort towel as it stubbornly oozed across most of his body, yet even so, his erection was hardly concealed, the misshapen towel jutting out before him as if a divining rod steering him to the release he would have to seek in the shower, alone.\n\nHis frustration level was worse than ever before. Leslie had spent the entire time with he and Lil, maneuvering Lil to assist her is sliding their equally oily, nude figures in the most erotic ways possible across his tormented body. But as so many times before, Beth had eventually managed to join them to break up their \"massage\" so that he was left with a raging hard on, unsatisfied and desperate for more. \n\nNow safely in the tiny changing room, Ron dropped the towel and stepped into the lone shower stall. He fully intended to jack off, and since the curtain was clear plastic, only hoped that Mike wouldn't show up in the next five minutes. Just as he reached for the faucet, the outer door did indeed open. Disappointed, Ron started to reach for his towel, accepting the fact that he'd have to hide his erection until it subsided, or Mr. Johnson left. \n\nBut suddenly everything changed, as he heard a female voice, \"Mike, you are so bad...I can't believe I let you talk me into this.\"\n\nRon's jaw dropped as he undoubtedly recognized Pam speaking to Mr. Johnson. He knew they were just a second or two from rounding the corner and seeing him. As much as he wanted Pam to see his hard cock, standing here dripping in oil with a towering erection might lead to questions he couldn't easily answer to his girlfriend's mother, or even to the husband, perverted though he may be, of the women with which he'd just shared a massage. \n\nThe only hiding place was one of the oversized wooden lockers standing directly opposite the shower stall, and he swiftly stepped over the bench and into the locker. It could almost be classified as a small, very small, closet, but was obviously designed to function as an upscale club locker. His movement was limited by several items at his feet; two dumbbells, a medium sized medicine ball, and a jump rope. He positioned his feet as best he could and quietly shut the door, which was vented across the top, allowing him to peer out and see most of the room. \n\nHe held his breath and watched as Mike and Pam came through the second door. They were both wrapped in towels, their bodies glistening from their own massage, although they'd obviously not been doused with the Nuru oil still clinging to him from head to toe. \n\n\"I can't believe I let you talk me into this...but, well, you've caught me in a very susceptible mood, as today has been quite the day!\" Pam stated, alluding to all the teasing and temptations she'd been a part of since first being tricked into parading before Ron in the semi-transparent night gown.\n\n\"Well...\" Mike said, the desire evident in his voice, \"I'm more than happy to have you succumb to what I have planned for you, no matter what drove you to it.\" His mind wandered briefly to Ron as the source of her arousal, and the fact that his wife was still in a private 'massage' class with the big dicked teenager, and had been for the past half hour, but quickly forced those images from his mind in deference to the smokin' hot milf that was basically offering her body up to him. Given Lil's interaction with Ron the previous evening, and what was likely happening now, Mike felt very little guilt for deciding not to let this opportunity slip away, and he leaned in and began kissing Pam's neck as he deftly tugged her towel free and let it drop to the floor. \n\nRon stared on in disbelief. He'd never imagined Amy's mom would do something like this, with a man she'd just met, and a married man at that. Of course, he'd have bet one million dollars that she would never have allowed Beth to go down on her either, so maybe he shouldn't be so surprised by what was playing out less than five feet from his hiding spot. \n\nIt seemed that he would be relegated once again to being an uninvolved voyeur, as he looked on with mixed emotions. Pam had been the object of his youthful lust for months now, and given everything that had transpired on this trip, he could barely even be near her anymore without sprouting a boner. To see her willingly offering her perfect body to this man, as he stroked her tanned skin and traced her luscious curves, preparing to do God knows what to her, seemed to Ron to be completely unfair and the cruelest of ironies. \n\nHis increasingly perverted mind toyed briefly with the idea of stepping from the locker and joining in on the fun. He doubted Mike would really object, given the way he'd practically forced his own wife to blow him the night before. Plus, after hearing Pam's fantasy about him back in the room, maybe she'd go along, but the chance that Pam would flip out, tell Amy and worse yet, his parents, was still too much of a risk to take. Or maybe he could just make his presence known to make them stop, but again, he couldn't be sure how that might play out, so he opted for what seemed to be the safest decision of silently peeping through the vented door while he settled once again for self-satisfaction with his own hand.\n\nPam had decided back in the massage room, as Mike worked his strong hands over her body, in a progressively inappropriate fashion, that it was growing increasingly necessary for her to seek release from this all-consuming arousal threatening to rule her every decision. She had almost achieved relief with Beth, but no matter how incredibly enjoyable that had been, with time and hindsight she had gained some perspective and knew it was just too risky on many different levels to let that happen again. It was a risk to their friendship, and if Ron had come in and caught them, a risk to her reputation, and subsequently a risk that Amy might ultimately find out as well. \n\nStill, her body felt as if it was poised to spontaneously combust from the arousing heat surging through her. If she didn't take advantage of this opportunity with Mike, the tempting situations her devious friend kept orchestrating with Ron might prove too much to withstand. For her sanity and the sake of her relationship with her own daughter, Pam needed to be fucked by a real penis, specifically one that didn't belong to Ron. So with little internal resistance, she'd grabbed Mike's hand and led him to this little changing room for her much needed release.\n\nNow completely nude, she allowed him to position her until she was reclined, her legs with no choice but to straddle the long wooden bench, her glistening pussy open and available to the handsome, yet virtual stranger. Mike wasted little time, and his lips quickly descended to her simmering vagina. Even though the rules Beth had set out for them were very clear that he was not to have intercourse with Pam. He'd long ago rationalized that Beth was not going to do them any harm, and was only hanging the video over their head to manipulate them into her demented sex games. So now, with Pam laid out before him, he fully intended to fuck her, but wanted to go down on her until there would be little doubt that she'd be ready for his dick. Her bald pussy was gorgeous, extremely wet and noticeably hot to his touch. \n\nRon stared on as Mike devoured the object of his desire. Pam was squirming and moaning as he mercilessly sucked and tongued her swollen clit. Her oil-glistened body looked phenomenal, so lean and defined as she stretched back, extending her toned arms above her head to grasp the wooden bench, and surrendered to this man's apparently talented lips. \n\nPam could feel her previously elusive orgasm steadily building, and reached down to more tightly pull Mike's face into her sex. As her hips began to buck in rhythm with his actions, he suddenly pulled free. He pulled her up to her feet before she could even protest, and for the first time she noticed his towel had fallen free so that he was naked as well. Pam's eyes darted down to his cock, and was pleased to see it standing fully erect. She couldn't help but compare it to Ron's and was not surprised at the lesser size, but still, Mike was by no means small, and she was fully prepared to let him take her.\n\nMike had been admiring this milf's ass since she first climbed onto the massage table, and gave her no choice as he turned her to lean against the locker and spread her legs until he could position himself with access to her now dripping cunt. He couldn't resist teasing them both a bit, and slid his erection between her legs and along the length of her slick lips. \n\nRon nearly gave himself away, slightly knocking the dumbbells into each other with his feet as he reflexively tried to shift away from the locker door when Pam's face was thrust to within inches of his own. Mike had assertively maneuvered her athletic, yet petite frame, until she was pressed against the door, with her upturned gaze seemingly locked onto the vents through which he'd been peering. As Mike sawed his hard shaft back and forth along her slick lips and swollen clit, teasing her by only allowing his engorged head to briefly press against her tight opening before slipping once again away, Pam's response made it clear she held no suspicion of his presence on the other side of the locker door. \n\n\"Oh God!\" she panted, \"You're being cruel. Do it already!\"\n\nMike found himself enjoying her obvious need, no matter if it was Ron that had ignited her passion, and continued with his teasing actions as he responded, \"Do what?\" \n\nPam couldn't believe he was going to make her beg for it, but it that's what he wanted, she was certainly past the point of her pride preventing it, \"Fuck me! God, I need it. Please, just stick it in and fuck me!\"\n\nRon had moved back close to the vent, staring down at the erotic scene unfolding within arm's reach. Once again, Pam was surprising him with her actions and words. He couldn't believe she was going to get fucked right in front of him. At least he was able to watch, and as his cock throbbed, still coated with the thick lotion, he clutched it to join in, even if it was as a hidden voyeur.\n\nMike was having fun with the tease, but wasn't an idiot. He needed to fuck this hot mom while she, with no uncertainty, wanted him to. He grabbed his shaft and pulled back until his head was once again poised at her tight pussy, ready to impale her. He began to press forward as slowly as he could, clutching her taut hips and gazing upon her perfect ass. His head slid past her tightness and as the next few inches of his shaft gradually followed, he quickly realized that the vice-like grip with which her exquisite cunt clutched at his cock would make this a much quicker event that he'd wish. Deciding to give her the best he could, even if it was destined to be quick, Mike grasped her hips and prepared to slam the rest of his length as hard and deep as possible. \n\nPam sensed what he was about to do, and braced herself for the merciless fucking she hoped he would deliver, when there was a quick knock on the outer door, then almost simultaneously the sound of his wife's voice, \"Mike!...Are you in there? Is anyone here?\"\n\nPam and Mike both jumped at the sound of Lil's voice. \"Ah...you've got to hide!\" Mike urgently whispered as he stepped away, extracting his throbbing cock from the best body he'd likely ever be this close to fucking again. \"Quick, in there.\"",
        "He grabbed Pam's arm and firmly pushed her to the side and opened the locker door. Luckily for Ron, Mike was standing behind the opened door and couldn't see inside. Pam was equally distracted between trying to keep her balance as Mike man-handled her, and glancing to the door, ready to be caught naked with another woman's husband at any second. \n\nOnly when she was shoved inside, and the door quickly shut by Mike was Pam aware another person was already hiding there. Her impulse to scream out in shock and embarrassment was fortunately silenced as she comprehended it was Ron with her, just as Lil entered the changing room just outside the locker. \n\nRon had tried to scoot back when Mike had opened the door, but he could only move so far. Plus, the clutter at his feet complicated his ability to react quickly. So, when Pam was thrust into the cramp space, she also struggled for solid footing, and significant contact between their nude bodies was unavoidable. She had been left with no choice but to straddle the items cluttering the floor of the locker, spreading her legs and effectively making her shorter that her already petite 5'3\". When Mike pushed the door shut, Pam was compelled to mold herself against Amy's boyfriend. \n\nRon, in spite of the intoxicating predicament in which he found himself, was nervously apprehensive as to Pam's reaction. No matter that she'd been begging to be fucked only seconds earlier, she hadn't been begging him. His mind flashed once again to her erotic fantasy of him essentially raping her, but Beth had him convinced that things would turn very ugly for him if he pursued something sexual with his girlfriend's mom. Still, here she was, naked and smashed against him, but the risk was just too much. His uneasiness, however, didn't diminish his erection in the least, but he did his best to remain as motionless as possible. Motionless that is, with the exception of his pulsing cock. Trapped between them it twitched and throbbed as if with a mind of its own, and given the significant difference in their height, his substantial and swollen head incessantly poked and prodded at the underside of Pam's breasts, until it was somewhat encased just within the compressed cleavage created by their unavoidable contact. \n\nPam was as shocked to be in this implausible dilemma as was Ron. Mike and his wife just beyond the door, necessitated they remain silent, which was probably best, as she at that moment, had no idea what to say. She could feel Ron's seemingly ever-present erection sliding against her bottom of her breasts, and eventually she felt the bulbous crown slid tentatively into the valley of her nearly flattened boobs. Luckily, the interior of the locker was quite dark, with the only light streaming through the slats in the door, illuminating Ron's face and shoulders, but further down complete darkness quickly engulfed the rest of them. She was grateful not to have a visual of their intertwined nudity. Other than his overactive penis, Ron to this point had remained completely motionless, so she decided to just stay still as well and wait for a chance to extract herself from this quandary before Lil discovered her presence. Only if he got out of hand would she risk confronting him about his behavior \n\n()()()\n\n\"So...ah, well, I'm glad to see you in here by yourself.\" Lil said as she did a quick inspection of the room. \"Beth told me that you and Pam seemed to really be enjoying your massage, and when you weren't in the other room, well, I just thought...\"\n\nMike tried his best to remain calm, ease his wife's concerns, and at the same time use his towel to conceal the remnants of his still substantial erection. \"No, I mean we walked out of the room at the same time, but I just came in here to get a shower.\" He paused, envisioning the oil covered milf huddled naked in the locker, listening to their every word, when a devious thought entered his brain, one that should help them demonstrate to Beth that they did their best to further torment Pam, as she had requested, even if it was not as she had originally planned. \n\n\"Maybe you should tell me all about your private massage with Ron? I can only imagine how you came to be covered in that thick gel from head to toe.\" Mike said as he began to tug Lil's towel loose just has he had Pam's a few moments earlier.\n\n()()()\n\nPam, still mortified at being molded against her daughter's naked boyfriend, continued to do her best to ignore the reality of the situation. She kept motionless and strained to hear the conversation between the married couple, but given her diminutive stature and the height of the vents across the top of the door, could only make out a word here and there. \n\nShe did manage to hear Mike mention Ron's name, and that Lil was coated in a gel. As Pam strained to hear more, she for the first time noticed that Ron was also coated in a slick gel, far more viscous that the massage oil still covering her own body. As a result of their forced interaction, her skin was growing increasingly slippery as well. The unmistakable throbbing of Ron's super slick erection led it to continually slide against the underside of her boobs. Suddenly, it was as if the fear of being caught by Lil, which had largely consumed her thoughts to this point, was overcome by her body's reaction to Ron's oil covered penis against her nude form. God, she'd been poised to let a virtual stranger fuck her senseless, her body ready to explode, and now out of nowhere, she found herself forced into this perverted position with the ever present penis that had become the sole object of her increasingly demented fantasies. The gorgeous slab of manhood that belonged to her daughter's boyfriend.\n\nFurther, it suddenly dawned on Pam that Ron had been in here the entire time she'd been with Mike, likely hearing her begging to be fucked. She could feel her face redden of embarrassment, and was grateful for the muted light that at least limited the further humiliation of being fully visible to the naked teenager. She wanted to say something to him, something to let him know that no matter how aroused they both might be, this situation was not ok. Of course, they couldn't risk talking, so Pam put her mind to trying to lessen the stimulation factor. She really needed to get his cock away from the valley of her cleavage. The fact that her nipples were incessantly drilling into his slippery yet firm abs was bad enough, but feeling his lovely penis sliding and probing against her breasts had to be as tortuous for him as it was for her.\n\n()()()\n\nLil had hoped Mike wouldn't be upset with the fact that as soon as their massage lessons had ended, the Bahamian instructor had paired her with Ron and whisked them away to a separate massage room. Actually, given the way he'd responded to the chance encounter with Ron the previous night, her husband's perverted interest in what she'd just experienced wasn't really surprising at all. Strangely, Lil was more concerned with her own lack of remorse at her recent behavior, but she managed to dismiss most of her guilt for not feeling guilty to the video-enabled blackmail perpetrated upon them by Beth. And honestly, after what had just transpired, she realized she was just too horny to let her mind work through all this now. Her husband's offer was just what she needed, and she readily helped him remove her towel.\n\nMike guided his wife into the same position on the bench Pam had occupied only moments earlier. He noted how her puffy nipples jutted out at least \u00be inch, so thick and blood engorged they almost looked painful, and certainly appeared to be calling out to be kissed, licked and sucked. He leaned in close and after eliciting a moan from his sexy wife with just one little kiss on her left breast, said, \"Tell me babe, tell me what you did with the kid's big dick.\" \n\n\"Oh my, Mike, your lips feel so good, please don't stop.\"\n\nHe did just that, teasing her further, saying, \"I'll kiss you all over, I promise, as long as you're talking, telling me what just happened. If you quit talking, I quit too.\"\n\n\"Ok, ok, I hope you won't be mad at me, I mean, you know I didn't really have much choice,\" Lil began, \"and, mmm, well, that black girl, Leslie, took me and Ron into the other massage room, only there was no table...\" she paused to moan out her encouragement as her husband worked his lips down to tease her oil coated crotch. \"there was only a big air mattress, and a big bowl of the clear gel...\"\n\n()()()\n\nPam strained to catch what Lil was saying, but continued to have a difficult time hearing given her positioning away from the door vents, plus no matter how motionless both she and Ron remained, her body was steadily reacting to the preposterous scenario in which they'd been thrust. Having already been teased and tempted all day, then to be so close to having Mike offer her the sexual release so desperately needed, Pam's body was once again humming with desire and the heat simmering between her legs was almost unbearable. She knew to stay in this position was dangerous. She tried to narrow her stance, and distance his pulsing penis from her breasts, but the items at their feet prevented her from moving. She kept bumping into what felt to be a leather ball, and given its weighty resistance to her attempts to roll it out of position, she guessed it to be a medicine exercise ball. \n\nSuddenly it dawned on her what she needed to do to free her breasts from Ron's probing erection, while at the same time increase her ability to comprehend what was being said on the other side of the door. Without additional thought as to the consequences of what she was doing, Pam grasped Ron's shoulders with her previously idle hands, and stepped up onto the ball with both feet. This resulted in her entire abdomen firmly gliding up the length of Ron's shaft and swollen, sensitive cockhead, even as her ass slid against the smooth wood of the locker door. By the time she was fully perched on the exercise ball, her face was actually poised a little above Ron's, and her breasts, while safely away from his pulsing member, were resting just below his chin. Even worse, his balls and thick shaft were now lodged firmly against her own sex, the unforgiving tightness of their confines causing her engorged lips to wrap partially around his girth, as if trying to engulf it entirely, while at the same time providing non-stop stimulation to her swollen clit.\n\n()()()\n\nRon stood as if frozen, utterly flabbergasted by this most recent turn of events. He initially thought Pam was actually attempting to maneuver up his body in an attempt to mount his colossal hard-on, but now she'd stopped moving once again. Her breath was washing down across his face, and her boobs were pressed into his collarbone. With her hands still on his shoulders, their position would easily enable them to kiss, if she'd just lean her face downward in the slightest. He was too scared to take any action, knowing their current predicament, no matter how sexually charged, was 100% unintended. Beth had certainly made it clear that Pam did not intend to act on her obsession with his oversized dick, and even with their oil coated crotches continuously sliding to and fro as she struggled with her footing on the leather ball, Ron was not going to make a move on Amy's mom.\n\n()()()\n\n\"So Leslie wasted little time, and seemed to know I'd do whatever she asked of me.\" Lil continued, her breathing growing more ragged as Mike began to lick and nibble on her vagina with more urgency. \"she made Ron remove his towel and lay on the mattress, then told me to drizzle the thick oil up and down his body...oh Mike, your tongue...mmm.\" Lil paused her tale as her husband's efforts on top of the recent interaction with Ron had her quickly approaching an orgasm. \n\nAs he'd promised, Mike pulled free of his writhing, oil covered wife, \"Come on baby, tell me and I'll keep going, tell me everything!\" \n\nLil grabbed Mike by the hair and guided him back to his task as she continued, \"ok, so after I'd poured most of the bowl on him, Leslie started to undress and at the same time told me to lose my own towel. She said she was going to show us the oriental massage called Nuru. It required everyone to be nude...oh god! Mike I am going to cum...please don't stop.\"\n\nHe only paused for a second or two before she tried to continue her tale, even as his lips worked to draw the needed orgasm from her. \"Ahhh, so Leslie tells me to watch as she crawls down...mmm, down next to Ron. Oh Mike, his penis was so big and hard...oh, Oh my...keep doing that...can't you imagine the kid just laying there with his enormous manhood glistening with the massage lotion, staring at two naked women, about to do God knows what to him...mmm...Oh god, you're about to make me cum...\" Lil gasped in frustration when Mike pulled away. He stood and held out his hand. \"Let's trade places, you still look to be coated in enough of that Nuru stuff to give me a firsthand demonstration of what happened next.\"\n\n()()()\n\nPam had been assessing her options when Lil began describing her massage with Ron. She could hear much better now, with her head level with the vents. Even though she was doing her best to remain steady by grasping Ron's shoulders, the continuing grinding of their crotches was unavoidable. Her arousal was increasing by the second, and hearing Lil so graphically describe her interlude with Ron wasn't helping. Pam knew she had to do something quickly to avoid crossing a line. No matter that she and Ron were trapped here, naked, her ability to retain some plausible deniability as to any active sexual response would be greatly enhanced if she didn't actually moan her way through an orgasm resulting from their forced stimulation. \n\nAs she heard Lil and Mike begin to move about, Pam knew this was her best chance to speak to Ron. Looking for the first time into his eyes, she whispered, \"Ron, this is so wrong...we'll talk about this later, but for now, we can't stay in this position. I am going to try and turn to face the door so I can see when we can best escape. I want you to put your hands on my waist to help steady me on this ball, but do not move them anywhere else...understand!\" \n\nWithout waiting for him to respond, Pam began to twist her tiny body, her feet shuffling on the ball as best she could without falling off. Her breasts raked against Ron's upper chest and neck, and her pussy ground across his cock, practically tugging it downward as her lips steadily slid further along its length, until his fat head smashed her pulsing clit before she could escape the pressure. Eventually she'd managed to rotate her slick body 180 degrees while managing to stifle any audible response to the pleasurable maneuver. When she stopped moving, it was apparent to her that while better than before, this position was still fraught with its own temptations. Ron's slick cock was now wedged vertically between the firm bubbly globes of her ass cheeks. His hands remained on her waist, which was okay as it helped her to stay balanced on the ball. Still, she was unable to remain motionless, and as she peered easily through the air vents, her precarious perch on the ball led Pam to unintentionally grind her ass around Ron's steel-like shaft. \n\nPam knew her best course of action was to ignore this inadvertent contact, and focus on the conversation taking place just beyond their hiding place in hopes of finding a chance for a quick escape from this tortuously tempting situation. \n\n()()()\n\nMike was reclined on the bench, his erection straining at an upward angle as his wife's shimmering oil coated body hovered above him. \"So, what did you and Leslie do next?\"\n\nLil could not believe she was in this situation, reenacting for her perverted husband a near adulterous transgression with a teenage boy. But, she couldn't deny her own arousal, and decided to play along with what Mike wanted. \"The first thing she had us do was just slide our own bodies up and down his legs, we didn't make any contact with his, his, you know.\"\n\nAs Lil slide her torso up Mike's thigh, his penis was twitching before her face, just as Ron's had, even if it didn't compare in size. She could see the precum oozing from the tip, evidencing his own excitement. She didn't figure he'd last long, which was good, as they needed to get back to their kids soon. \n\nAs Lil hovered over her husband, now dragging her sensitive breasts across his torso, she said, \"Leslie and Ron both seemed rather obsessed with my most unique features.\" She paused, raising her body to a point that Mike could easily confirm the obvious reference to her puffy areola and freakishly erect nipples as they continued to testify to her escalating arousal. \n\nLil recalled how her husband had responded to her own verbal teasing the night before, during their encounter with Ron, and decided to play once again to his perversions, saying, \"And, well, I hope you won't be mad at me, but, ah, sliding my slick body all over Ron was driving me crazy, especially when I would see his thick penis jerk and twitch, even without being touched. It was so big honey, and did you see how hard he was the whole time we all massaged Pam, the poor boy looked like he was ready to explode.\"\n\n()()()\n\nRon stared over Pam's shoulder, through the vents and listened to Lil describe their recent encounter. This whole situation was so surreal for him, as he stood there naked and motionless, pressed against his girlfriend's mother's equally nude and undeniably perfect body, listening to another woman lustfully retell how she'd help to torment him as part of some twisted massage session. And what was worst, or would it be best, of all, was that her naturally bubbly butt was so tight, high and toned due to her superb conditioning, that the unavoidable molding of their bodies led to her cheeks being pressed so firmly to his pelvis and flat abs that most of his thick prick was essentially gripped within the cleavage of her ass. Only the tip of his swollen, throbbing head managed to escape to the vacant space at the small of her back. To further torment him, even as he maintained his grip on Pam's waist, her footing continued to wobble on the medicine ball, causing her ass to slip side-to-side, and even to some degree, up and back down his shaft as she fought to keep her balance.\n\n()()()\n\nPam, much like Ron, stared on in a state of disbelief as she listened to this stranger describe in detail how she'd seduced Amy's na\u00efve, big-cocked boyfriend. Further, it appeared Lil was going to reenact it by unknowingly performing a live sex show for the hidden voyeurs. Pam was doing her best to remain still and unresponsive to the fact that Ron's penis was now wedged between her cheeks. Her mind flashed back to the night before Amy left, and the way her own daughter had manipulated Ron to rub his dick over her body, until it had actually become trapped in her bra enhanced cleavage, but at least she'd been able to play along by pretending to be passed out. Now, there was no denying this was happening. The best she could do would be to keep her temptations at bay, and make it through until they could safely escape without crossing the line with Amy's boyfriend, no matter how absurd that might sound, given this unbelievable predicament into which they'd been thrust. \n\nStill, the reality was that she was unable to maintain solid position on the ball, no matter how she tried. The result was a near continual undulation of Ron's cock between her cheeks. On top of the recent day's temptations, whether serendipitous or orchestrated by Beth, this forced and perpetual interaction with Ron, or rather Ron's lust inducing cock, accompanied by the activity taking place just outside the locker, was quickly establishing a battlefield between Pam's sex deprived body and her morality anchored conscience. ",
        "()()()\n\nLil was by now making full body contact with Mike, but had yet to specifically initiate direct contact with his cock. The occasional pressure from her thigh or torso was good, but he longed for more, just as he was sure Ron had as well. \"So, what happened next, what was Leslie doing?\"\n\n\"Ok, I'll tell you the rest, but you have to promise not to get mad, ok?\" Lil replied, and upon seeing Mike nod his agreement, continued, \"Leslie had mostly been having me massage Ron by 'innocently' sliding my body up and down his own slick skin, but then she showed me the next Nuru move. She straddled him, and pressed his penis down flat against his stomach. Then she sat on his, well, you know, his pole so that it was trapped between her and his body. We were all completely coated in this thick gel, so it was so easy for her to slide up and down his length. Seeing her get so turned on by basically masturbating against him was super exciting.\"\n\n\"Oh wow, that is so hot!\" Mike chimed in, \"But what were you doing?\"\n\n\"Well, I was sort of transfixed, but then Leslie told Ron to close his eyes so I could massage his face. He did, but I wasn't sure what to do at first. Then Leslie motioned for me...oh honey, are you sure you want to hear this?\"\n\nAs Lil had been speaking, she'd steadily moved around until she could sit on Mike's stomach, just as she'd described having done to Ron. As she wriggled her pussy against him, occasionally sliding over his pulsing head , he moaned out his answer, \"God yes, baby, even if you tell me you fucked the kid, it will be ok, just tell me what happened!\"\n\n\"Oh my Mike, you really are so dirty, aren't you. Just hold tight, ok, and I'll tell you everything. First, I did what she wanted, I leaned over and pressed my super hard titties into his face. He started at once to kiss, nibble and suck on them. Mmm, just thinking about it is so hot. But then, all of a sudden Leslie tugged my hips around, so that I was sitting on his stomach. I kept leaning over so he could suck on my nipples, and I could feel Leslie grinding over his penis.\" \n\n()()()\n\nRon was reliving every word being truthfully told by Lil. He was so engrossed with her words, he didn't realize he'd tightened his grip on Pam's waist and was ever so slightly swaying her hips more than necessary, deliciously increasing their mutual stimulation. He watched intently as Lil slid further back until her pussy, just as she'd described Leslie doing to him, firmly trapped Mike's shaft against his stomach, and she began to convey what had next happened during their massage.\n\n()()()\n\nPam remained transfixed with the activity in the locker room, while at the same time trying her best not to respond to Ron. It was obvious to her he had begun to gently use his hands to further grind himself between her cheeks. Given that she was unintentionally generating a significant degree of friction as she fidgeting around, trying to maintain her balance, it seemed pointless to risk being found in such a compromising position while endeavoring to chastise Ron for his similar, albeit purposeful, actions. Truthfully, she was surprised he'd been able to restrain himself this long, given not only the current situation, but the preposterous amount of teasing he'd endured since they left Nashville. \n\nFeeling his rock hard penis slipping about between her ass cheeks was certainly having an impact on her. In a moment of weakness, Pam decided to have just a scant bit of fun with the poor boy, and she flexed her gluts around his cock. She knew the years of working out had left her with plenty of muscle control, and as soon as she gripped him within her buns she heard and felt his sharp exhale of breath. She kept herself flexed so that the next few seconds of slipping and maneuvering on the ball only heightened his tortured arousal. \n\nPam's own hands had remained pressed against the door in an effort to keep her body motionless. Now, however, with her arousal steadily growing, she decided to slip her right hand between the locker and her stomach, until her fingers rested atop her swollen clitoris. She knew it was wrong, but her body's frustration had to be addressed. As Pam stood there, with Ron's erection slowly but steadily grinding between her cheeks, she deftly strummed her fingers over her engorged vagina. While maintaining her relative immobility, she observed Lil continue to perform for her unseen audience.\n\n()()()\n\n\"Mmm, this is making me crazy...so, ah, then Leslie tugs me back further, until I am sitting on Ron just like I am you right now. He was so thick, I mean if felt like my entire, you know, well, like all of me was wrapped around him. And then Lelise started to push and pull me, up and down his length. Everything, you know, was grinding against him, and it was really pushing me to the edge.\" Lil spoke in urgent, gasping syllables as her body responded to both the recollection of Ron's impressive manhood and the physical stimulation of grinding against her husband.\n\n\"Uh, oh god...well, did you? Did you have sex with him?\" Mike managed to ask, even as he worked hard to delay his own orgasm.\n\n\"Oh baby...what do you want me to say...do you hope that I did, do you want to hear that I took his big, thick, gel coated cock and slid my tight little married pussy all the way down his entire length?\" Lil could barely believe the words that were now pouring from her, but after last night, she know this kind of talk would drive Mike wild with lust. As she waited for him to reply, she maneuvered up just enough to apply a steady rocking pressure directly across the most sensitive part of his penis. \n\n\"Oh god Lil, you did, didn't you...it was too much temptation, I get it. Did he fuck you really good with that big cock?\" Mike grunted, surprising himself as the graphic image of his church-going wife skewering herself over and over again on the teenager's huge prick invaded his brain. \n\nLil kept moving, having pushed Mike past the point of no return, and rapidly approaching her own release, \"Ahhh, Mike, can't you just imagine what I looked like with such a big penis slowly sinking all the way inside...it would just about split my little body in half, don't you think? Can't you just picture me cumming like crazy as soon as it slid in?\" \n\nHearing Lil talk about impaling herself on the teenager's cock was more than he could stand, and Mike erupted, his semen spraying across his stomach and chest. As he continued to spasm, Lil kept writhing about, her pussy stroking up and down his shaft in search of her own orgasm. \n\nAt that moment, there was a banging on the door, followed by Leslie's voice, \"Mike, are you still in there? Your kids are out by the spa registration desk. They say they've been looking for you.\"\n\nMike and Lil were immediately up and scurrying for towels, half expecting Leslie to round the corner as he answered, \"Uh, ok. Tell them I'll be right out, will you?\"\n\nMike began to quickly clean the jizz off his body, and looked to Lil, saying, \"I'll go take the kids to the buffet. You wash off all that gel and come meet us there. And, honey, I'm not mad, you know, about what you did with Ron. I, well, I just...\"\n\nLil silenced him with a lingering kiss, then said, \"Mike, baby. I didn't have sex, well, you know, intercourse with Ron. I was doing the same thing with him as I just was with you but before either of us, you know, finished, or did anything more, Beth burst in and basically put a stop to it. That's when she told me I should go find you and Pam to make sure you two...well you know the rest.\"\n\n\"Really, well, ah, good. I mean, I guess I would have understood, you know, if things had spiraled out of control, but I have to admit, I am relieved. Now why don't you take a shower and I'll get dressed and grab the kids.\"\n\nLil gave Mike another deep kiss, grabbing his hand and pulling it between her legs to feel her dripping heat. \"I can't wait to get you alone again.\" She purred into his lips, and then, just before turning to enter the shower, she decided to play to his recent perversions, explicitly stating what she thought would turn him on even more, \"But, you know, about Ron...when we were together, I knew it was wrong, but I wanted him to fuck me so bad baby, with that huge cock of his. I was so close to giving in, but well, we'll talk about it more later. You hurry and go get the kids, I'll catch up soon.\" Then she stepped from his reach, behind the clear shower curtain and under the hot water in an attempt to wash away the Nuru lotion.\n\nMike gazed in shocked amazement at his astonishing wife. As much as he wanted to join her in the shower, he recognized that now was his best chance to get Pam from her hiding spot and safely out of the locker room. He glanced to the door, indicating with his finger to wait a second and he would let her out. \n\n()()()\n\nObserving the married couple, while at the same time hearing Lil express a similar lust for Ron's perfect cock, the same cock currently ensconced within her taut butt cheeks as she stealthily masturbated had Pam rapidly approaching her own orgasm. When she saw Mike motion to her, she reluctantly retracted her hand from its pleasurable task, and prepared for him to open the door at any second. She wanted to step out as quickly as possible, so that hopefully Ron could let them escape before following behind undetected. \n\n()()()\n\nRon, like Pam, had watched and listened to Lil and Mike. His cock slipping within Pam's luscious ass was ultimately more frustrating than enjoyable, as the nerve laden tip wavered in the small vacuum created by the inward curve of her back above her pronounced ass. Still, to hear them discus so graphically his cock and Lil's desire for it sent an extra bolt of hardness to his twitching erection as it continued to slither between Pam's toned cheeks. \n\n()()()\n\nAs soon as Lil had begun to lather shampoo into her slick hair, Mike quietly opened the locker door. He kept his back to the locker, intently watching his wife to make sure she didn't look over, and therefore failed to notice Ron's presence. He held out a towel for Pam with his other hand and within seconds, she'd wrapped her nude body, shut the door to the locker enough to conceal Ron, and along with Mike, slipped out without being discovered by Lil.\n\n()()()\n\nRon stood there for a few seconds, processing everything that had just happened. As his mind considered how awkward his next encounter with Pam would be, his eyes locked onto Lil. Her body, while not in the same stratosphere as Beth and Pam, was more than fuckable. He couldn't help but recall her final words to Mike, \"... about Ron...when we were together, I knew it was wrong, but I wanted him to fuck me so bad baby, with that huge cock of his. I was so close to giving in ...\" As he further envisioned the way Lil had teased him with her slick body and incredibly erect nipples, he stepped from the locker, his tumescent cock leading the way. \n\nLil's eyes remained tightly shut while the shampoo and Nuru oil cascaded over her face. As her mind recalled the events of the past 24 hours, her body practically buzzed from the resulting sexual excitement that had previously been foreign to her lifestyle. The hot water peppered over her head and she unconsciously allowed her left hand to slip down between her legs, as if drawn there by the unsatisfied yearning Mike, and Ron, had ignited within her. Suddenly, she heard the shower curtain being pulled aside and felt the cool air wash across her wet skin. \n\nRon crossed the small space between the locker and shower in two quick strides. He didn't really know what he was going to do. All he knew was that he had been teased mercilessly for the past hour or so. The naked woman now touching herself in the shower, with a fabulous ass and nipples like he'd never seen before in his young life, had inflicted a substantial amount of the teasing. She'd already given him a blowjob when she thought he was passed out, and had essentially confessed to her husband that their recent massage would have led to them fucking, if Beth hadn't interrupted. \n\nAs he stepped past the open curtain, a still blinded Lil turned, saying, \"Mike? I thought you might come back, but what about the ki...\" Before she could finish her sentence, Ron had dropped to his knees and buried his face in her crotch. The water flowed down her stomach and all around his face as his tongue began to lap at her still engorged lips. She lifted one leg up over his shoulder to allow him easier access and moaned out her approval of his efforts. Ron pressed his face even more firmly into her drenched pussy, locked his mouth over her clit and sucked her gently past his lips as he rapidly tongued from her the orgasm she so badly needed.\n\nLil was doing her best to maintain her balance as her husband ate her with a passion she'd rarely seen from him. Just before she came, she managed to swipe away the last of the shampoo. Her vision was blurred from the water still running over her face, and she only managed to focus on the head between her legs just as the powerful orgasm consumed her. Her body still jerking from lingering 'aftershocks', she languidly watched as Ron stood and took a step back, and only then did the fact that it had not been her husband between her legs fully register. \n\nEven though she was shocked to find Ron had been the one to make her cum, given their earlier encounters, the fact that he'd performed cunnilingus on her wasn't all that shocking. As her adventurous, vacation alter ego directed her vision to his penis, her sensible, conservative, Southern Baptist virtue did its best to rise up in protest, and she said, \"Ron, I didn't know that was, I mean I thought you were my husband. You shouldn't have done that.\" She tried to sound as stern as possible, even as her eyes darted repeatedly from his face to his now throbbing cock. \n\nShe watched his eyes roam over her own body, and realized she'd been standing there, offering him an unobstructed view of all her womanly charms. Strangely, even though they'd shared such an intimate massage and he'd just made her cum with his tongue, the fact that she'd thought he'd been her husband changed things, and Lil felt compelled to at least appear to preserve her modesty. She immediately brought an arm across her achingly hard nipples, and her other hand dropped down to cup her still pulsing and tender vagina. The contact with her own body caused her to flinch ever so slightly, but still she continued to chastise the attractive boy in the shower with her. He remained motionless, with the exception of his hand as it commenced a deliberate stroking of his long, thick penis.\n\nAs he deliberately pumped his still Nuru slickened erection, Lil eventually looked up to Ron's face, and saw the animalistic lust in his gaze. Suddenly it dawned on her that he fully intended to ravage her, and she took a step back, into the corner of the shower stall. The only thing separating her from the teenager she'd help torment for the past \u00bd hour, and his enormous and angry looking penis, was the shower stream splattering on the tiles at their feet. \n\n\"Ah, now Ron, I really think it'd be best if you turned and left, and ah,\" Lil paused ever so briefly as he took just one tiny step closer, \"Ron. I mean it. I mean I know the massage earlier was stimulating for you, but, well, I was just doing as that girl instructed, and...\"\n\n\"I was in the locker.\" Ron interrupted. \"I heard you with Mike. I know you want this.\" He glanced down, directing Lil's eyes once again to his cock, and he took another small step toward her. Ron knew he wasn't going to rape this woman, no matter what had led them to this bizarre situation, but based on his limited, yet remarkably successful experiences, he thought he could tempt her until she'd succumb to her desire for his oversized prick. \n\nLil pressed herself further into the corner, the cool tiles a noticeable contrast to her flushed skin, as she processed what Ron was telling her. \"You were... where?...the locker? This entire time?...Oh my...well, what you heard wasn't, I mean even though I told Mike...\"\n\n\"And I was awake... Last night.\" Ron cut her off, and waited for her to connect the dots. \n\n\"What? Awake? What are you talking...ah...about. I, ah, I'm...not...sure...\" \n\nRon once again broke in, as Lil's denial obviously faded into the realization of what he had said, \"That's right. I pretended to be passed out while you and Mike played your little game, you remember, he convinced you that you had no choice but to make me cum.\"\n\n\"But...well you see...\" Lil grasped for words, but could find no defense. She watched as he stepped closer once again, the shower now pelting him as he stood no more than a foot from her nearly quivering body and puffy, distended nipples. \n\n\"I know you watched me in the dressing room too, so I think we should quit playing this game...I mean just a little while ago you were grinding yourself, naked over my cock. It's time to stop the teasing...\" Ron's voice trailed off as he gently gripped her wrists, then leaned over to tenderly kiss her left breast. He lingered there, water dripping from his hair as his lips and tongue worshipped the ultra-sensitive, puffy areola and abnormally distended nipple. \n\nLil pulled free from his grip, then grasped his head, initially intending to push him away, but the day's temptations and her escalating arousal seemed to now be manifesting themselves in her left breast. This boy's lips felt fantastic, and as she watched him suckle her, she looked past his face to see what seemed to have all the women he interacted with so captivated. His cock looked even harder than during the massage, and she'd thought that impossible at the time. \n\nWhen Ron felt Lil clutch his head tighter to her chest, he knew she was ready. He pulled his lips away with one last, lingering suction to her nipple, until it popped free with an audible smacking sound and an involuntary groan from the married woman. He pressed his erection wantonly against her abdomen and began to kiss her shoulder and neck. She responded with initially restrained whimpers, but as he worked over to the other side of her neck, she let loose a more animalistic moan and dropped her hands down to lightly trace her fingers over the length of his cock. \n\nEven as Ron primed Lil for what they both so desperately needed, thoughts of Pam and the way they'd been forced together in the locker kept invading his brain. And eventually he came to the vision of Mike preparing to fuck Pam from behind while she was pinned against the locker. Ron looked Lil in the eye, placed his hands on her shoulders and turned her to face the tiled wall.\n\nInitially uncertain as to what Ron was doing, Lil soon felt his hands on her hips as he bent at the knees to allow his penis to probe the junction of her legs. She'd given over to the pure, hedonistic need that had overtaken her body, and instinctively raised up on her tip toes to better allow him access. \n\n()()()\n\nLeslie stepped into room #2, not surprised to see Nancy on top of Beth, kissing tenderly in the aftermath of their 'massage'. \"Ahem, Beth, I just wanted to let you know that I think we lost Lil. Their kids just showed up and Mike was in the men's locker room, and left with them, but Lil's not in any of the massage rooms, or the women's changing room.\"\n\n\"What about Pam and Ron?\" Beth asked. \n\nPam is in the shower, and I guess Ron is in the men's lockers, not sure about that though.\"\n\nBeth's sixth sense told her something was up, and she tore herself away from Nancy, donned her towel once again, and went to investigate, as Leslie approached Nancy, still nude on the table.\n\nShe went to the only place Leslie said she hadn't personally checked, and quietly opened the outer door to the men's locker room. Immediately she could hear the shower running, and muffled voices. After pushing the next door open a crack, she could see Ron and Lil in the shower. Her first instinct was to stop Ron from having sex once again, but the poor kid needed some relief, and watching him fuck Lil might be great entertainment and certainly exciting, so she kept quiet and looked on.",
        "()()()\n\nRon admired Lil's ass as he readied himself to take her. It was true she had nowhere near the tight, toned posteriors so often displayed by Pam and Beth, but no woman or girl he'd seen on this island had compared for that matter. Still, for a 40 something mother of three, Lil's body was exceptional. Her ass was still bubbly and round, and was just firm enough to allow an inviting jiggle across her buns as his hands wandered randomly, palming first one cheek, then the other.\n\nHis cock now producing a steady stream of pre-cum, Ron took one hand from Lil's rear and positioned his bulbous head at her entrance. He pressed firmly, and thanks to her own excitement and the oils still lingering with the water on his cock, skin on skin friction was almost non-existent. However, the sheer size of his crown versus the tightness of her pussy led him to pause.\n\nWith her hands braced against the tiles, Lil was ready to be taken by this boy not much older than her own daughter. However, as he pressed into her, she realized the size differential between Ron and her husband was significant. It certainly wasn't painful, but she'd just never taken anyone so large. Lil, however, was well past the point of forgoing this once in a lifetime opportunity, and through halting breaths, said, \"Don't move Ron. Just brace yourself and I'll handle this.\" With that, she pressed steadily against the shower wall while at the same time alternating her tip toe stance to ever so slowly elevate first one hip, then the other, effectively attempting to skewer herself onto Ron's enormous cock. \n\nRon stared on in amazement as Lil's body worked to accommodate his size. As she rotated her hips, she pushed back just enough to ever so slowly allow his head to inch past her snug entrance. After what seemed like 5 minutes, but in reality had to be far less, his blood engorged crown slipped completely inside. \n\nLil had remained determined, the deliberate method with which she was impaling herself onto Ron's penis was tortuously arousing. At last, she'd managed to slip over his oversized tip, and take the first couple of inches of his thick shaft before she paused to acclimate herself to the incredible feeling of fullness. Her pussy spasmed and clutched the oversized cock, and to her surprise, a tremor overtook her with an unexpected yet rather substantial orgasm. \n\nShe wasn't even sure Ron realized she'd cum yet again, and in only a matter of seconds, he was more aggressively stroking in and out, giving her a little more with every thrust. His girth elicited feelings she'd never felt with Mike. As the boy more urgently gripped her hips to his own, the depths he reached, likewise were like nothing she'd ever experienced. After a few awkward minutes, Ron settled into a rhythmic pounding with all he had, and pressed into the shower wall, she did her best to fuck him back. \n\nRon realized he wouldn't last long, especially when Lil started to slam her ass back into him. He gripped even tighter and his strokes became less uniform as his orgasm began to build. \n\nLil had learned on this trip how her husband, and she assumed most men, liked dirty talk, and decided to reward Ron for his efforts as she managed to utter between each increasingly violent thrust of his hips, \"Oh...Yes...Ah...Ron,...you..are...fucking...me...so...good...with...your...\n\nah...your...big...penis...ohhh ahh...your ...big...thick...cock...I ...am...cummiinngggg...!!\n\nHearing Lil's obviously labored attempt to verbalize her pleasure was all Ron needed to be pushed over the edge, and he doubled his strokes, now basically smashing Lil's body into the tiled wall. He screamed out as he came, and drove up into her tight cunt will all his force, effectively lifted her petite frame off the floor. After a last labored thrust, he held her pinned to the wall as his last three eruptions, each diminishing in force, filled her with his spunk. \n\nAfter only a few seconds, Ron stepped away, allowing Pam to settle back onto her feet, and his still hard cock to be pulled free of her well fucked pussy. \n\nLil turned, her legs slowly stabilizing beneath her as she regained her bearings. She'd never, ever, had sex even remotely that intense, or gratifying. Then she turned to face Ron, and saw him standing there, his shimmering penis still completely hard, and that animalistic gleam in his eyes.\n\nAs Ron had stepped back, he was surprised to see that not only was his cock still as hard as ever, it didn't show signs of losing firmness anytime soon. Of course, he had no knowledge of the Cialis he'd been fed the past few days, which coupled with his youthful zeal, seemed to be demanding that he go for round two.\n\n\"Ah, Ron...on my, that was fantastic...but, well, surely you aren't serious?!\" Lil said as she looked from his face to his cock, and back again. She turned off the shower, and pushed him aside as she moved to exit the shower stall. She inadvertently pressed against his erection, but chose to ignore it as she left him standing in there, at the entrance to the shower, and began to towel off. \"Hon, that was amazing, I mean, like nothing I've ever experienced, but, well there's just not time.\" And then, letting her guard down for just a second, glanced once again to his still throbbing cock, and said, \"I only wish there was.\"\n\nWhile Ron had first entered the shower with no intention of raping her, he was now certain that even if Lil said no, once he was inside her, she'd acquiesce to him, or as he was accepting as the reality of the situation, his cock. He didn't bother drying off, and simply stepped past he older woman and began to place a couple of the thick spa towels over the wooden bench. \n\nLil watched Ron move about, his penis still impossibly hard, as she continued to towel off. She was uncertain as to what he was doing, until he turned and snatched her own towel from her hands, and at the same time pushing her back until her legs pressed against the now padded bench. \n\n\"Ron!...What are you doing?\" Lil protested, for no matter how much she might like a second round, she was already feeling guilty, and the longer she was in here, the more likely it might be that Mike would come back looking for her. \"Ron, honey, we can't do this again, I have to go.\" She continued, trying to appeal to his sense of decency.\n\nRon was surprising even himself by his demeanor, for any other time he'd likely turn meekly away and help Lil gather her things, but not now, after the day's events. He couldn't deny the lingering recollection of Pam's fantasy, and the near constant arousal it had inflicted upon him since he'd eavesdropped on her most private thoughts. And now, if anyone deserved to be fucked with or without her consent, it was this woman toweling off in front of him. The woman who had so blatantly teased him during their massage, and for all intents and purposes, practically molested what she thought was a sleeping teenager. Now, he was determined she was going to get fucked a second time, and he was equally certain he'd have her screaming in ecstasy as well. \n\nAs Ron began to push her back onto the bench, Lil fully comprehended he intended this to happen again, whether she agreed or not. Lil started to try and squirm free, but her diminutive frame was of little resistance to his 6'3\" athletic body. And even as she twisted and resisted, Ron's hard cock kept poking into her, causing repeated involuntary glances to the penis that had just delivered her the fucking of a lifetime. \n\nAfter swiftly grabbing her by her right leg with one hand and behind her neck with the other, Ron was able to easily deposit her on her back, her legs splayed over the bench, just as both she and Pam had been at the hands of Lil's own husband. He bent down to better align his erection to her still wet pussy, but to his surprise, Lil only increased her efforts to escape by attempting to push him off balance with her hands. In his peripheral vision, Ron spied just what he needed inside the still open locker. He leaned over and retrieved the jump rope, then scooted up to sit across Lil's stomach. \"Listen.\" He said to her, holding the rope in front of her face, \"I have to fuck you again. I am going to fuck you again. After the way you've teased me, you owe me one more. I know you want it too.\"\n\nLil realized her pussy was now gushing as the teenager's big cock was wavering over her chest. The thought of him taking her 'against her will' was tapping into a long suppressed fantasy that she'd had in her youth, before her religious upbringing had taken hold and ushered such immoral thoughts from her mind. But now, as he threatened to tie her hands, she could think of nothing she wanted more than to be 'raped' by this big cocked teen. \"No, you can't. I have to go before Mike comes back. The only way you're going to fuck me is if you're willing to use that rope!\" Lil began to fight back, even as she hoped she answered his threat in such a way that he'd do exactly what she now wanted.\n\nRon's cock was twitching and throbbing as it wavered over her stomach, and he knew there was no turning back. After he'd seen Mike with Pam, he didn't care if he did come back and catch him fucking his wife. So he grabbed her hands and quickly tied the rope around her left wrist, then forced her arms down below the bench and secured them together. Her resistance had been minimal, and now her entire torso was at his disposal.\n\nLil wiggled and squirmed, but there was no escaping. Ron thought about so many things he could do to her, but really, the main thing he needed was to fuck her once again. He lifted her legs up until he was holding them at a 90 degree angle, and sat on the bench, with his cock and balls pressed against her upturned pussy and sphincter. Not wanting to dally too much, he spread her legs just enough and pressed his cock down until it was poised at her already conditioned opening. He pushed forward, while still sitting on the bench, and after several seconds and steady pressure, his head slipped once again snugly into the grasp of Lil's pussy. He rested her legs against his shoulders and scooched forward until several more inches were ensconced within her. He still had about 3 or so inches left to give her, but while still seated, it was difficult to bury himself fully.\n\nLil, as before, felt his girth filling her up and seemingly pressing against every nerve her pussy possessed. She wasn't quite ready to just give in and offer her consent to him, so she undertook what she knew to be a futile effort to squirm free of his glorious penis. Without the use of her hands, and with Ron clutching her ankles above his head, this resulted in her hips wriggling and writhing about, only increasing their mutual stimulation as she protested, \"Ron, oh my god...ah, please, you have to...ummm to stop before...ahhhh... before ...someone...before Mike...comes back ...umm for ...\"\n\nShe went silent as Ron suddenly spread her legs just a bit, raised up from his seated position, and buried every last centimeter of his cock in her tight cunt. He loved seeing the pure lust expressed so plainly across her face, then he slowly withdrew until just his head remained before slamming back down as if he was trying to use his prick to drill her into the wooden bench. This time he held still, feeling her pussy respond by virtually gripping him like a glove. He looked to Lil's face once again, now contorted as she balanced on the edge of yet another orgasm. Ron leaned further up until he could reach her fascinating nipples, and began to roughly suck and nibble first one, then the other. \n\nWhen Lil felt the boy's lips so aggressively maul her breasts, it sent her over the edge, and her pussy began to spasm and gush all over his plump cock. He wasn't even moving inside her and she was cumming like a freight train, as her disjointed exclamations confirmed. \"OH GOD...Ron...this is so...on my...I've never...ahhhhh\" \n\nJust as the intensity of her orgasm began to subside, Ron started to really fuck her. He pulled out entirely, his head poised for a split second at her gapping entrance before driving back into her. Lil's slick lips and clit were actually pulled inward as his thickness penetrated her. Just as quickly he withdrew yet again, watching at the tight sheath of her pussy looked to be turned inside out each time his fat shaft escaped its grasp. Over and over, Ron did his best to give Lil the fucking of her life. It was certainly the most intense sex he'd experience in his brief, albeit action packed, sexual history. Having just cum in the shower, Ron felt he could hold out for a bit this time, and didn't hold back as he drilled Lil mercilessly, driving her body further up the towel covered bench. \n\nLil had thought his powerful pounding of her in the shower had been something, but now, she was being reduced to a sweaty, babbling fuck toy as this teenager kept making her cum over and over again, each orgasm seeming to transcend the one prior. \" uh...uh...uh...Oh God, Yes...keep ah ...ah..ah...ah...Please...oh ...My GOD!!\"\n\nRon took her utterances as a plea for him to keep fucking her, and for the next five minutes or more he worked his sweat soaked body as hard and fast as he could, concentrating only on keeping up the pace without cumming. He watched Lil, her hands still bound, thrash about beneath him as she continuously gasped and grunted, her hips no longer able to move in unison with his rapid thrusting. Finally, he could feel what was to be the mother of all orgasms building deep within. He kept slamming into the petite milf as she exploded one final, mind blowing time. He abruptly pulled his blood engorged cock free from her velvety channel and for the first time since they'd begun, let her legs drop from his shoulder, splayed out with her feet on the floor. \n\nStill quivering from the lingering intensity of having been so brutally fucked, Lil forced herself to open her eyes. She was presented with an image of Ron's sweaty body, tense and poised between her legs, his hand furiously pumping his tortured looking penis. \"Here...I...CUM!!\" he exclaimed as the first milky rope shot out and struck Lil across the face and neck. His hand never slowed as Ron grunted out four more substantial loads over Lil's ravaged body. The nipples he'd become so enamored of were splattered with his creamy jism. Finally, he coaxed the last drops onto her stomach and scant pubic hair before dropping back down to sit on the bench. \n\n()()()\n\nBeth's body was tingling head to toe, both yearning for, and jealous of, the frantic pounding Lil had just received at the hands of Ron. Still, she remained focused on what she knew had to be done if she had any hope of reeling the boy back within her control. The assertive manner with which he'd taken Lil needed to be squelched, at least until she was ready to unleash him as part of her ultimate fantasy. For now, this scenario should provide her the perfect means with which to completely torment and befuddle her young, big cocked plaything. She removed her soaked fingers from beneath her towel, and stepped into the room.\n\n\"RON!...Oh my god! What have you done?!?\" Beth exclaimed as she burst through the door. Ron jumped from his seat on the bench, shocked at her intrusion. Of course, Lil's physical reaction was limited by her still bound hands and the lethargy still consuming her depleted body. \n\nBeth went to her at once, bending down to untie her hands as she spoke, \"Are you okay?\" she asked in her most sincere and empathetic voice. Before Lil could answer, Beth continued, \"Ron...I mean, I know you've been, well, sort of tempted by certain things on our vacation, but for you to rape this woman, I just can't believe..., I mean, you could go to jail!\"\n\nAs Ron prepared to respond in his own defense, it suddenly dawned on him that perhaps he had, indeed raped her. Since she'd willingly let him take her in the shower, he'd made the assumption she would want him again. She'd certainly responded as if she was enjoying things, but as he thought further, she had told him to stop, even after he'd begun to take her. His mind flashed back to all the sex ed classes during biology, over and over again Mrs. Graham had repeatedly preached that 'No means NO!\" As his mind rapidly processed all these jumbled thoughts, Beth spoke once again, demanding his complete attention. \n\n\"I really just can't believe you Ron!\" then turning her attention to Lil, she was mesmerized by the amount of Ron's semen pooled across her naked torso. She composed herself once again, and said, \"Let me help you up and over to the shower, so you can...ah, get cleaned up.\" As they moved further from Ron, Beth whispered to Lil, \"So, I watched you in the shower with him before, I know you weren't raped. Just keep following my lead for a few more minutes, then you can go back to your family, and I won't mention any of this to Mike, ok?\"\n\nOn still wobbly legs, Lil stepped from Beth, into the shower. She'd heard every word the manipulative woman had said to her, and given everything she'd learned of her so far, was not at all surprised. She nodded her agreement, knowing she just wanted to cleanse her body, then decide how guilty she was going to feel for everything she'd done to lead to this point, and whether or not she'd tell her husband. The sooner they could rid themselves of this woman, the better, so toward that goal, she readily agreed to play along with her till she could escape this situation. Still, as she began to run her soapy hands over her body, images of Ron and the way he'd ravaged her with his beautiful penis invaded her thoughts, and she felt what had recently become a recurring quiver of excitement resonate from her well attended vagina.\n\nBeth moved back over to Ron, where he remained naked, his engorged yet slowly shrinking penis still hanging at about 6 or 7 inches. He had been intently watching her and Lil, and Beth forced her vision up from his glimmering cock, to say, \"Well, I think I talked her out of calling the police, but I hope you learned a lesson. Just because a woman might show some interest in your God-given appendage there, it doesn't mean she will just let you do whatever you want.\" She paused, glad to see fearful regret on his face. \"And you might want to remember that when it comes to Pam, you know, your girlfriend's mother.\" \n\nHearing Beth speak Pam's name further shook Ron's world. He had no idea how he'd be able to face her, much less talk about what had happened inside that locker. \n\nMore to come...\n\n*****\n\nAs many of you know, this chapter had me stonewalled for a long, long time, and then as I finally got some momentum, it just poured out. I initially had no idea where it was going, but I find myself pleased with how it all came together. Hopefully you enjoyed it as well."
    ],
    "authorname": "JackKing",
    "tags": [
        "nuru",
        "tease",
        "tempt",
        "locker",
        "voyeur",
        "massage",
        "vacation",
        "shower"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tempting-vacation-ch-17"
}