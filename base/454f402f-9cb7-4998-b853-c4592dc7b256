{
    "title": "AnimeCon Harem Pt. 10",
    "pages": [
        "\"Can I... can I ask a HUGE favor?\" Stephanie had whispered to Kelly. In an instant, she'd seemed to have her friend's full attention, and the gorgeous girl with the brilliant red hair had leaned in a little closer. \"We're, um, we're running out of time with the room... And, uh. I want to... I want to be with Brian.\"\n\n\"Are you sure?\" Kelly had asked in a hushed tone.\n\nStephanie had taken a deep breath and given a decisive nod, and then all of the sudden everyone was spurred into a whirlwind of motion as Kelly took charge to usher everyone out of the room. With Megan's help, Emily scrambled to snatch up the many various scattered belongings, both of them grabbing everything in sight and shoving it all towards Rebecca carrying the big cardboard box left over from the Calamity Queen dress.\n\nFor her part, Rebecca held the box to one hip, slung the lanyard with the charm on it around her neck, and then looped her free arm through the strap of Emily's bag so that she could shrug it up and carry it behind one shoulder. Kelly haphazardly swept all of her makeup things from the vanity into her purse and unplugged several phones and the phone charger from the outlet with a quick yank. In less than a minute and a half, the girls worked together to strip the room bare, moving in an exaggerated frenzy as if police sirens were closing in while they attempted to loot the place of everything they could steal.\n\nAll at once the four girls were all then out the door and gone, leaving Stephanie alone with Brian in what felt like sudden deafening silence. She slowly swallowed, almost shaking with anticipation for what was to come, and gave his hand another small squeeze.\n\n\"So... what was it you wanted to talk to me about?\" Brian asked.\n\nStephanie didn't answer right away, instead stepping in close and bringing her hands up to his chest. Unable to look him in the eyes, she blushed, toying her fingers along the seam of his shirt between shoulder and collar. They were both damp with perspiration from running together, but she wasn't able to feel self-conscious about it at all.\n\nSomething's very off with our body chemistry right now... Stephanie thought, trying to suppress the giddy compulsion to nuzzle her face into his body. We don't smell bad. Or, we do SMELL, but not like body odor? It's... almost as if our sweat isn't breaking down into acids like it's supposed to. It's like... it's like...\n\nIt was like she was getting a face full of his pheromones. After a few moments that tested her resolve, Stephanie finally pressed her face into Brian. She succumbed to the urgent need to feel the tactile sensation of him upon her brow, her cheeks and lips and chin, to feel the warmth of his body that bled through his jogging attire. She breathed in deeply through her nose, starved for more and more of his unique scent, and the sheer masculine musk of him lit up every receptor in her brain in startling bright pinks.\n\n\"Steph?\" Brian murmured again.\n\nHis arm slipped around her, igniting more and more conflagrations of rippling fire within her as Brian's hand traced down the small of her back to rest in a comfortable position upon her bottom. The firm grasp on her rear felt assertive, possessive, this casual motion communicated his desire for her with so much heady context that Stephanie found herself instinctively reacting to his touch.\n\nShe embraced him fully, relishing how amazing and different the sensation of full intimate contact was from the platonic simplicity of a mere hug. Her small breasts, still held tight within the confines of her compression top, were now quashed up against him. Stephanie could feel her tummy touching his rugged abdominal contours, it felt right, and she even found herself canting her hips so that the curve of her butt more completely filled Brian's palm.\n\nStephanie's breath continued to quicken, her sense of awareness hyper-focused in the moment of reading the minutiae of Brian's body language\u2014every fibre of her being was trembling with burning eagerness to obey any implied instruction he offered. Every delicious detail was committed to memory as an experience to savor forever and ever.\n\n\"Brian... I'm ready,\" Stephanie breathed, finally turning her timid expression up to meet his gaze.\n\nThe vivid, beautiful green in his searching eyes captivated her, eliciting bursting gouts of pink flame from deep within her. Blinding bright embers seemed to dance through her body, hot pink sparks leapt to and fro, and her inner temperatures began to rise dangerously again. Stephanie couldn't help but think that she could stare into his eyes endlessly and never grow bored\u2014something about the way he looked at her, something he saw in her held her spellbound with excitement and glee. She watched and waited, love-drunk on looking up into his eyes while Brian visibly wrestled with how to respond to her.\n\n\"Steph...\" Brian managed out. \"We should maybe talk about this.\"\n\n\"Hmm...\" Stephanie's smile grew wide and she shifted her weight from one leg to the other and back again, sensuously sashaying her hips back and forth. Molten heat was spreading. \"No.\"\n\n\"...No?\" Brian blinked, showing her an incredulous grin. \"Steph, you can't just say\u2014\"\n\n\"No, nuh-uh,\" Stephanie beamed, shaking her head in curt refusal as she clutched her body against his. \"Nope! Nothing to talk about, don't want to talk.\"\n\n\"Steph, believe me, I'm feeling just as totally, overwhelmingly turned on as you are,\" Brian wet his lips. \"Just... I mean, for your first time, things should be special\u2014I want everything to be perfect for you.\"\n\n\"Hmm-hmm...\" Stephanie rose on her feet slightly so that she could plant her lips on Brian's skin right at the base of his neck. She kissed him, slowly, sowing a soft row of kisses up the line of his throat. \"It is perfect!\"\n\n\"I\u2014you know what I mean,\" Brian protested. Seemingly against his will, his traitorous other hand found its way to where it belonged grabbing Stephanie's other buttock, and she squirmed and wriggled in encouragement. \"For your first time\u2014I want everything to be perfect, to have this perfect night for you. When we have hours to spend just\u2014mMmm\u2014just really getting into it, exploring every, uh\u2014\"\n\n\"That sounds... amazing,\" Stephanie agreed with a smile, and the precise little kisses she was placing on him growing a little sloppier with each unsteady breath until she was slurping and nibbling and lapping at him with her lips and teeth and tongue. \"Let's definitely do that\u2014someday. But, today, today... Brian I need you. I need you right now.\"\n\n\"You're... sure?\" Brian couldn't help but squeeze the handfuls of Stephanie's plush ass.\n\n\"I'm\u2014\" Stephanie let out a small, startled gasp as Brian fondled her. \"I'm so sure. Brian\u2014 I love you. I love you!\"\n\n\"I love y\u2014\" Brian was cut off as Stephanie surged up on the balls of her feet to capture her boyfriend in a passionate kiss. \n\nShe needed him. She needed this\u2014as her mouth mashed hungrily against his and her tongue darted into his mouth to slide across his, her entire mind was an inferno blazing out of control. Brian was criminal right now\u2014he was an arsonist, and everything about him kept lighting up entire new fires throughout her body. Stephanie's fumbling fingers pulled upon the fabric of his tee as they made out, and Brian's grip on her bottom was crushing her pelvis against him in such a tantalizing way that she was driven to distraction.\n\nBest of all, Stephanie really did find that she was totally sure about this. It was a satisfying and somehow fulfilling complete turnaround from the fears and uncertainties that had strangled her sexuality prior to this weekend. Brian made her feel safe and secure like she'd never dared to imagine. Kelly inspired in her a surprising sense of adventure\u2014in a lot of unexpected ways. Emily's attitude encouraged her to embrace her feelings, and Rebecca seemed to arrive in timely rescue the moment anything ever went astray. Each of her new companions made Stephanie feel loved.\n\nBut more than anyone else, it was Chloe that made Stephanie feel so completely sure about this. The time she'd been tricked and separated from Brian showed Stephanie what she had to lose\u2014it drove her to confess her feelings to Brian and ask him out. Each encounter with Chloe after that had reaffirmed Stephanie's decision in many ways\u2014 because just as she needed Brian, she now knew Brian also needed her.\n\nIt made all the difference. Stephanie moaned into Brian's mouth as she yanked and tugged his shirt upwards. His hands were likewise pulling up her top, and for a brief moment they were forced to stop their kiss so that they could hurriedly struggle the rest of the way out of their shirts. Roiling with lust and feeling the heat of the moment with brilliant pink intensity, Stephanie then yanked up the sports bra she wore, allowing her naked breasts to spill free as she tore the bra off and flung it away from herself.\n\nBoth of them paused, slightly panting for breath, as they drank in the sight of each other.\n\nThe weight of his sudden attention on her bare chest felt good, in a peculiar sort of way she felt unprepared for. Stephanie had never considered her boobs to be very impressive, but through her burgeoning charm sense she could feel Brian's arousal amp up at the mere sight of them, and they all but perked up with a strange feeling of newfound pride. Brian fucking loved them, was mesmerized by them, in his greedy glances she could feel just how much he wanted to adore and appreciate them\u2014it was so overwhelming that she actually grabbed at them herself in surprise.\n\nO-oh my God! Stephanie's face flushed red. Is this\u2014is this what he did to Emily?!\n\nStephanie hefted her little tits slightly and ran her fingers across the soft shapes while regarding Brian with a shocked smile, feeling the slightly puffy nubs of her nipples catch on her digits as they brushed by. It seemed utterly impossible for her to be nervous right now in this moment. She was tapped into his emotions, and the raw, overpowering attraction for her was like a flamethrower dousing her with a compressed stream of liquid fuel.\n\nThey collided again in a rush of lips and tongue and enthusiastically groping hands before Stephanie even had proper time to appreciate Brian's oh-so-lovely half-naked body, and she vied to make up for it by feeling them directly instead. The fires within her were stoked and felt like they were roaring hundreds of feet high, she felt ready to explode. She relished the way Brian cupped her breasts with a shudder of desire, and she felt her hips reflexively jerk and hump against him while he impatiently clawed at the waistband of the spats she'd worn for running in. Though she'd never had sex, her pussy seemed to have a mind of its own and positively ached for something substantial to grind upon.\n\nThis is\u2014this is really it! Stephanie thought, growing more and more aroused. It's happening!\n\nThe Stephanie of several days ago would be absolutely stiff with terror at what they were about to do. Panicking, at the thought of this unknown and uncharted territory they were blundering into way out here, far, far off the edge of the map. Right now, however\u2014Stephanie knew exactly where she was going and what she wanted. This AnimeCon weekend had been more than an adventure for her, it was a treasure map that led to riches beyond anything and everything she'd dared to dream for.\n\nDisengaging again, Stephanie was quick to peel down the black garment of her spats herself. The spats were a rather brief pair of very form-fitting shorts\u2014a cautious, wary-of-cosplaying Stephanie had packed them in her convention bag just in case she became too uncomfortable or self-conscious wearing just underwear beneath her gijinka dress around in public. As she rolled them down her pale legs and awkwardly kicked her way out of them, they became just another reminder of how far she'd come over the course of the weekend. It felt incredible feeling fresh air down there because she was now sticky with excitement, it was thrilling exposing herself fully to Brian, and\u2014\n\nThe desire pouring off Brian this time was overpowering, and Stephanie swooned into his arms with a squeak as she was swept away in an endless sea of dazzling pink blaze. She bit her lip and clung to his sturdy shoulders as he carried her over to the bed, struggling to retain faculty of her senses. Unable to reign herself in, Stephanie pulled him down atop her when he attempted to place her gently down upon the covers. Their lips locked again and they shared a fierce kiss as her hands scrambled to shuck down the gym shorts he was wearing and remove them.\n\n\"Briaaannnn....\"\n\nAs soon as she clawed the elastic band of his shorts and underwear down, Brian's manhood sprung free and its weight slapped down across her thigh. Startled by the sheer size and presence of it when the meaty pillar was released from its confines, Stephanie withdrew from their kiss to glance down.\n\nShe paused to draw in an unsteady breath.\n\nHer view down between their bodies was endlessly fascinating to her; this intimate moment where their naked anatomies exposed completely to one another. A special scene, a personal one that framed above by the sturdy masculine contours chiseled in the alluring lines of musculature of Brian's arms and shoulders and chest as he held himself above her, then contrasted below by soft feminine swells of her own naked body, her pale skin and flushing with desire beneath him.\n\nBetween them was Brian's dick.\n\nThe reality of that frightened and captivated her in ways that were difficult for her to express, and Stephanie sought out Brian's lips again and began to kiss him with renewed urgency. The sight of penis aroused feelings of both terror and titillation\u2014its shape still remained strange and a little alien to her, but somewhere deep down she was also drawn to it, an unknown and instinctive desire took hold of her whenever she looked at it.\n\nShe felt that it should have appeared vulgar or ugly, because after all it was just an organ, a bodily thing, a protrusion. A swollen shaft, capped by a knobby head vaguely reminiscent of a mushroom. Instead, there was somehow a compelling beauty to its form. The thing wasn't ugly, it was desire made flesh, and it appeared to bulge with delicious tumescent thickness! The crowning flare of its cockhead was majestic, it evoked feelings of desperate wanton need from within her, and as Stephanie's tongue slid against Brian's she couldn't help but reach down there and grasp with careful fingers.\n\nIt's so... it's so big! Stephanie's thoughts fluttered pink as the flames within her were fanned higher and higher.\n\nLast night, when Brian's penis was first revealed, she'd been mesmerized by the sight of it. She'd watched it disappear into Kelly's mouth, and then later followed its magnificent profile with her wide eyes as Kelly pressed it between her breasts. It was just so interesting! Everything about Brian was lovely to look at, but when his private parts were revealed they seemed to completely steal Stephanie's attention.\n\nIncreasingly distracted from the passion of their kiss by her exploring fingertips, Stephanie tilted her head back down again to steal another guilty glance down there. The tip of his erection had leaked out droplets of pre-seminal fluid\u2014Stephanie felt just sure Kelly would soon teach her some raunchy term for it to replace such a clinical descriptor\u2014and her thumb and forefinger were slick with the stuff as they worked over the bulbous, beefy cockhead. \n\nBrian continued to lay sensuous kisses down upon her cheek, the side of her face, and then her neck as Stephanie played with his dick, and even his patient attentiveness just kept fueling that inferno of rising wildfire within her. She had by no means sated her curiosity, however, and she flashed him a giddy smile and continued to examine her object of interest. When she stretched down further to grasp it by the root, warm cockmeat completely filled her hand, and there was something strangely satisfying about that.\n\nIt had heft, but there was also some squeeze to it, and Brian let out an unsteady breath in her ear while Stephanie slowly familiarized herself with taking his fullness in her grip and slowly pumping it up and down. The raw, carnal sexuality of that action made it her favorite, but taking the peculiar shape of his crown between her fingertips and gently pinching until they slipped up off of his tip was her favorite, too. When Brian involuntarily thrust his hips forward, pressing the dick past her fingers to fill her hand again, that became her new favorite, and Stephanie discovered quickly thereafter that forming a ring with her thumb and index finger for Brian to fuck was also her favorite.\n\nIt's... so amazing! Stephanie decided, lunging up again to shower appreciative kisses across Brian's chin and cheek. \n\nThe entire experience filled her with wonder\u2014there were so many exciting possibilities to explore, and she couldn't imagine ever growing bored with any of them! Now that she had Brian's dick in her hand to play with like this, she simply never ever wanted to let go of him. Stephanie wanted to stay right here on the hotel bed, fondling her boyfriend for as long as she could get away with it. Absolutely nothing was going to distract her from\u2014 \n\nBrian traced a middle finger along the slippery arousal of her aching pussy lips and then pushed it inside, and Stephanie promptly forgot what she'd been doing. Blinding pink light suffused her every thought and she squirmed with delight, kicking her legs and feeling herself clamp down on the inserted digit. He was pinning her to the bed, pressing his palm down upon her pubic mound with the perfect amount of tantalizing pressure. All the while, his finger flicked in and out of her wetness, extending at just the right moment and curling ever-so-slightly as he withdrew to reach a spot inside of her she'd never known about.\n\nBrian knew exactly what he was doing, and Stephanie wanted to give him a playful pout to express her frustrations\u2014her own first fumblings couldn't measure up to this\u2014but all that escaped were mewling gasps of pleasure. Stephanie found herself shuddering, trying to jerk and gyrate her hips up for more, awestruck as Brian revealed the beginnings of a mysterious crestline within her mind for her to follow\u2014one that led to inevitable orgasm. Following it higher and higher, Stephanie squealed and wriggled with confused anticipation.\n\n\"Think maybe you're ready,\" Brian teased in a murmur, pulling his finger out of her and then pressing down on the panic pleasure button of her clit.\n\nI'm going to\u2014I'm going to\u2014I'm going to\u2014!! Something was so terribly right about this that she didn't question her own disorienting change in perspective as her mind wheeled and whirled. Stephanie wasn't being mentally consumed by pink flames anymore\u2014she'd transitioned instead to become the pink fire, burning bright and alive and voracious, insatiable. She let out a moan as she hurried to chase after that final ridge of sensation, to race after this incredible feeling he was guiding her towards, to\u2014 \n\n\"Bri-Briaaan!\" Stephanie grabbed at his shoulders and bucked as hard as she could. Her movement mashed her clitoral hood up against him from one direction and then the next, back and forth so that her sensitive nub rolled beneath the pressing pad of his fingertip. She came hard, and in an altogether different way than she had before\u2014a smaller, somehow slapping climax that rushed through her without warning all at once. Rather than building up with inexorable momentum like an unstoppable forest fire like when Brian had gone down on her, or the sordid tsunami she'd ridden out while tapping her senses into Emily's big moment last night, this new one had arrived as suddenly and surprising as stepping on a landmine.",
        "Or, or jumping off a cliff? Stephanie thought to herself in euphoric delirium. Racing up over a ridge and jumping off. Then. Landing on a landmine.\n\nRather than the awe-inspiring fireworks finale orgasm, this was simply an explosive prelude, a quick cum from fingering to fully whet her appetite for what was to come. It felt good. It felt great, and Stephanie loved it. She loved everything about this\u2014how mind-blowingly amazing it felt, that she was sharing this with Brian, how deliciously dirty it made her feel, she loved that there was so much to experience still yet to come\u2014she loved everything about it.\n\n\"Mmmm!!! Mm-Mmmm\u2014Mmmnnn!!!\" Stephanie squeaked out, relishing every tingly little shudder and quake that traveled down her legs in pleasure pangs. \"Brian, I... I...\"\n\nI love you I love you I NEED you I love this I want this I NEED this please show me more give me more I want more of you I want you INSIDE OF ME!\n\nUnable to properly form what she felt into words, she wrapped her arms around his neck and rewarded him with sloppy, languid kisses, stopping only to grin at him and giggle before returning to suckle his lip and taste his tongue and groan with inarticulate contentment.\n\n\"Brian, I\u2014\" Stephanie licked her lips, \"I want it. Want you. I want it inside of me. Please...\"\n\n\"Yeah?\" Brian's voice was husky and low, and Stephanie's charm sense hurried to inform her of the urgency of his growing desire.\n\nOh\u2014Oh, right! Stephanie remembered Brian's penis trapped between them with a sheepish startled jerk of surprise.\n\nReleasing the fistfuls of comforter she didn't even remember latching onto, both of her hands scrambled to regain her hold on his handsome dick. It was still there\u2014of course it was\u2014and Stephanie looked up into Brian's eyes with a giddy, embarrassed, excited smile as she cradled the massive thing in both of her hands. With her left she gripped the base of his shaft, still more meaty dick filled her right, he was warm and so thick as she enthusiastically pumped it up and down, somewhat clumsily beating Brian off between them.\n\n\"Am I\u2014I'm\u2014I'm not doing this right, am I?\" Stephanie stammered out with a nervous laugh.\n\n\"What?\" Brian asked in a distracted tone, pushing himself up to lift his body higher up off of her and give her more room.\n\nMore pangs of intense attraction traveled through her as she watched the musculature of his arms and shoulders, and Stephanie gnawed on her lip. She was messy with sweat and arousal and now she felt more than a little embarrassed as she continued trying to jerk off her boyfriend for the first time. Only her anchoring sense of Brian's emotions steadied her and kept her from becoming uneasy. Perplexingly, his massive well of desire was still there, neither continuing to grow nor beginning to abate.\n\n\"Am I not doing it right?\" Stephanie asked again.\n\n\"It feels good,\" Brian gave her a reassuring kiss. \"There's no right or wrong.\"\n\n\"Yeah, but\u2014you know,\" Stephanie gave him an unsure grin, studying his eyes. \"I want it to be really good.\"\n\n\"It does feel really good,\" Brian promised, kissing her again.\n\nHe wasn't lying\u2014and that made her feel all the more puzzled as she returned his kiss with all the attention she could muster. She wanted him to feel... more than good, and more than really good, but she wasn't sure how to express that, or how much would even ever be enough. I want him to... cum. Want to make him cum. I think?\n\nThe idea of stroking him off until he spurted out sticky warm strands of semen all over her was so salacious and exhilarating that Stephanie's hands began to move faster and faster. Remembering the way he'd came yesterday\u2014came and came and came, shooting pearly-white ejaculate out seemingly endlessly\u2014imagining him doing that but now and all over her, painting her body with his cum... It became an inspiring impetus that worked her mind into a fervid frenzy, and Stephanie's hands jacked him off in a blur of motion.\n\nIt's working\u2014IT'S WORKING! Stephanie realized, flashing an amazed smile up at him. Even without her awareness of his emotions she could tell that it was working in the way his eyes grew hazy, the way his breath accelerated, and the growing tension in the posture of his body that hovered over hers.\n\n\"Wait wait, one sec\u2014\" Brian murmured, taking her by the wrist and stopping her.\n\nThen, he reached down past her hands to cup her glistening sex once again.\n\nWhat? No, no, no fair\u2014! Stephanie thought in frustration, unable to keep from bucking her hips and grinding herself against his palm.\n\nTo her surprise, that was all he did, and she blinked in confusion as he then ran that hand along the length of his penis and then pressed himself back into her hands.\n\nOh. OH! Stephanie felt her entire body flushing with heat as she realized what he'd done.\n\nHis magnificent cock was lubricated now, because he'd slathered the shaft with the syrupy wetness of her own desire. It should have been weird, or maybe mortifying, but instead Stephanie found herself fascinated by how much better it was coaxing her hands up and down him now. It made a huge difference! Her sense of Brian's arousal grew heavily-laden with formless pressure, he let out a soft groan that tickled her fancy and ways she'd never imagined, and he even jerked his hips, rocking himself back and forth in her hands even as she stroked him.\n\nOh my God! Stephanie grinned in amazement. He's fucking me. Well. My hands. Not FUCKING me fucking me. Yet. Just yet. But, this is what it will be like, this is THE MOTION of it, and, and\u2014!\n\nThe power of him thrusting forward startled her, and Stephanie abandoned her attempts to jack him off and simply held them in place. Brian slid in and out of them, pressed up past them until warm, slippery cockhead was nuzzling insistently against her bare tummy in a tantalizing way. Feeling his ball sack swaying to slap against the outside of her one hand, experiencing his primal, frenzied need both in her head and in her hands, Stephanie felt overcome by the moment. She spread her thighs open even wider beneath him, and carefully pressed him down a little lower, guiding the swollen tip of his manhood downward towards her slick entrance. Towards where she knew it could fill that desperate, aching emptiness inside her and join their bodies together in perfect pleasure.\n\n\"Uhh,\" Brian froze, attempting to shake himself out of a growing stupor. \"Fuck, wait. Condom, Steph.\"\n\n\"Condom,\" Stephanie agreed, but she felt absolutely delirious with frantic lust and somehow wasn't able to stop herself from orienting his cock lower and lower. Condom. Right. That's... that's something that we need to use. Even Kelly said so. Common sense to use a condom. Condom sense?\n\n\"Condom,\" Brian repeated, actually having to flinch back from her as Stephanie managed to tease the enormity of his rigid protrusion across the eager secretions wetting her pussy lips. \"Wait, wait wait Steph\u2014we need a condom!\"\n\n* * *\n\n\"Awesome, okay, awesome!\" Emily leaned over the quick illustration Rebecca had doodled into her phone. \"Is all of this to scale?\"\n\n\"Maybe?\" Rebecca pondered. \"Kinda? I don't have a real frame of reference, Emmie.\"\n\n\"S'cool! This is plenty to work with, for now!\" Emily praised. \"Okay, everyone\u2014gather 'round! This is gonna be... uhhh, I guess our first official harem party meeting?\"\n\nRebecca dutifully clapped her hands in a small round of polite applause.\n\n\"I'm just happy to be here,\" Megan said as she clapped along. \"Actually, am I allowed to be part of the meeting? If I'm not part of the harem?\"\n\n\"Of course!\" Emily said. \"You're our control case, we need you here. If all of us are being like, hypnotized or brainwashed or affected or whatever by harem charm magic, how would we be able to tell? We need you here to speak up if you think our thinking is skewed, help give us an outside perspective.\"\n\n\"Wait, I'm actually useful?!\" Megan sounded shocked. \"...And, how brainwashed are we talking, here?\"\n\n\"This isn't gonna be an official harem party meeting,\" Kelly argued. \"Not without Steph.\"\n\n\"That's... okay, fair,\" Emily conceded. \"We'll have our first official meeting later, when she can be here for it. I mean, we need to agree on a cool team name and everything, we'll do that then. When everyone's present.\"\n\n\"We're not going to have a team name,\" Kelly flatly rejected, visibly cringing at the idea.\n\n\"Hey, you haven't even heard my ideas, yet!\" Emily pouted.\n\n\"Um-um-um,\" Rebecca raised a hand. \"Motion to table any and all team naming discussion for that later meeting!\"\n\n\"Okay, motion passed,\" Emily nodded. \"We'll do that, then. After all, Steph might have ideas, too.\"\n\n\"That's not actually how motions work,\" Megan spoke up. \"In parliamentary procedure, a proposed motion needs to\u2014\"\n\n\"Objection!\" Emily interjected, slapping her hands on the chaise lounger.\n\n\"I'm just sayin'\u2014\" Megan shrugged.\n\n\"It's whatever!\" Emily groused, rolling her eyes and letting out a dramatic sigh. \"Anyways, time to talk shop. Dreamscape Geography 101! Dreamscape geography; fact or fiction? Dreamscape geography, a metaphor for interpersonal relationships?\"\n\nA smart phone with a hastily drawn up map sat on the end of one of the chaise lounges for sunbathing arrayed alongside the patio of the hotel's fenced in pool area. Emily straddled the lounger with the cardboard box and small pile of things hastily collected from the room at her back, while Rebecca and Megan sat on their knees to either side of the piece of outdoor furniture so that they could huddle close. Only Kelly was keeping to herself, relaxing back instead on the adjacent lounger and glancing over in amusement.\n\nAs a group, they had waffled for a moment on whether or not to head over to the convention ahead of Brian and Stephanie, finally deciding unanimously to wait on their friends. What exactly those two were getting up to in there had become an animated discussion before Rebecca started chiding them for it, but there were still plenty of other interesting topics for the girls to explore before delving back into the distractions of AnimeCon itself over at the convention center.\n\n\"Rebecca either is this forest, or she explores the forest,\" Emily began. \"Accurate so far?\"\n\n\"Yes,\" Rebecca gave her a serious nod. \"I feel that the forest represents me, but also it exists as something I can navigate. It's very dreamlike.\"\n\n\"Okay,\" Emily used her finger to pan across the image. \"Zig-zagging throughout the forest is a blue river\u2014that's me. I'm blue. And a river. My being threaded throughout the forest\u2014throughout Rebecca\u2014would seem to indicate how close we are. Or, that we're intertwined somehow, 'cause we're good friends. Right?\"\n\n\"Right,\" Rebecca nodded again. \"Good friends!\"\n\n\"Now, you just kinda drew me as kind of a scribble\u2014in the dreamscape, is there any solid indication of where my water originates or terminates?\"\n\n\"Um,\" Rebecca closed her eyes for a moment and furrowed her brow as she seemed to search deep inside herself for answers. \"No? Not that I can tell. You do definitely flow in a direction... but in the dream state, that doesn't translate to mean anything, really. When I follow the path of the river, there is no beginning or end\u2014but, it's not like you're in a loop, either.\"\n\n\"Okay, yeah\u2014very dream-like, so far,\" Emily said. \"How big a river would you say I am?\"\n\n\"Not big!\" Rebecca reported, wincing when she saw Emily's expression fall. \"Err, that is, I mean\u2014not huge. Normal-sized, for a river? Too big to jump across, but not so big that I couldn't throw something to the other side.\"\n\n\"Wait, I'm small enough that I could throw something to the other side?!\" Emily appeared aghast. \"That's like, barely even a river! Am I just a creek?!\"\n\n\"Well, no. You couldn't throw something across, silly,\" Rebecca gave her a helpless smile. \"I'm really good at throwing things!\"\n\n\"...I really hate you, sometimes,\" Emily facepalmed. \n\n\"But I love you, Emily!\" Rebecca protested in a sweet little voice.\n\n\"Moving on, the for-sure fixed feature we have is Kelly, way over here.\"\n\nEmily zoomed in on the edge of Rebecca's scribbled-in trees to where she'd drawn what looked like a small volcano. While the simple forest of trees were done in the color brown and the river drawn in blue, the entire crater had been illustrated in bright red.\n\n\"How big is Kelly, in this?\" Emily asked. \"Is this to scale?\n\n\"I... don't know,\" Rebecca said. \"It's not clear.\"\n\n\"Well, can you throw something across her?\" Emily retorted.\n\n\"I don't know,\" Rebecca replied after a moment of thought.\n\n\"What do you mean?\" Emily asked. \"Actually try it, try throwing something over her.\"\n\n\"Mmm, no,\" Rebecca shook her head in confusion. \"It doesn't work like that. It's a dreamy sort of thing. Even when I'm there I'm not completely there.\"\n\n\"Could you jump across her?\" \n\n\"I don't know. I don't think so?\"\n\n\"So, she's at least kinda big.\"\n\n\"I don't know. Reply hazy.\"\n\n\"Since you can obviously also jump so freakishly far.\"\n\n\"Reply hazy. Ask again later.\"\n\n\"Rebecca, you drew her way over here off to the side\u2014am I right in assuming that your forest does not surround Kelly's crater?\"\n\n\"That's... right,\" Rebecca answered after a moment's thought. \"Kelly's crater feature is adjacent to the forest, but not within or inside the forest itself.\"\n\n\"Kelly?\" Emily probed. \"Anything you'd like to add?\"\n\n\"I'm not a crater, for one,\" Kelly frowned. \"Not really. I'm just the bit in the dead center of it. The crater, it's... stuff around me, but it isn't me. Stuff displaced by my impact. I feel like it also represents... I dunno, keeping you and Rebecca at arm's length right now.\"\n\n\"That makes sense!\" Emily said, flicking back through the app's draw tools so that she could paint bucket the color of the crater to a neutral gray. With a few quick taps, she switched back to red and scribbled some red in the center. \"Rebecca, what's the crater boundary like for the forest? And, is the river separated from the crater by forest, or is there interaction?\"\n\n\"Hold on,\" Rebecca said, closing her eyes and retreating into herself to focus on the dreamscape again. \"Uhhm. It's complicated? Kelly\u2014you said earlier that your representation was starfall?\" \n\n\"Uhh, it was stars,\" Kelly clarified slowly. \"I think my initially... keeping myself aloof, holding myself back from getting closer to people, that represented me being out in space. Alone. Then, I got drawn into stuff, this orbit... and I couldn't escape, came crashing down.\"\n\n\"Wait, you were stars, plural?\" Emily tapped her lip. \"But now, you're just one fallen star?\"\n\n\"I don't fucking know, Emily,\" Kelly said in exasperation. \"It's like a dream. It doesn't always make consistent sense, alright?\"\n\n\"Hmm,\" Rebecca mused thoughtfully, closing her eyes in concentration. \"Kelly, I feel like... you're definitely still keeping yourself apart from Emily and I. Dream-speaking, at least. The displaced... earth? Material? From your impact is still very raw, and my forest doesn't encroach upon your direct surroundings. That may change as we grow closer? Maybe?\n\n\"Likewise, this crater caldera formed around you creates an uplifted rim of displaced material\u2014Emily's 'river' isn't able to flow into the impact basin and fill it with water. Or, maybe she can? I don't know, she goes downhill and uphill, Emily's Emily, she doesn't make a lot of sense. I can feel that there's a place for her there, in the basin. If we take the dreamscape geography as a metaphor for our interpersonal relationships...\"\n\n\"I'd... what, I'd flow into Kelly's direct surrounding space because I'm... impressionable?\" Emily made a face. \"I'm not that impressionable. Right?\"\n\n\"It could also mean you'll fill in something I lack,\" Kelly guessed. \"I think we're going to become close. Maybe I'm the impressionable one?\"\n\n\"Seems... doubtful.\" Emily quirked her lip. \"Wait wait, do you think that or do you know that? From your... prophecy thingamawhatzit.\"\n\n\"Maybe?\" Kelly said.\n\n\"Aggh, whaddya mean, maybe?\" Emily groaned. \"You don't like, have to be super cryptic about that stuff. Just lay it out, whatever you know.\"\n\n\"Okay, listen\u2014my life's fucked,\" Kelly revealed. \"Out of options, burned all my bridges, got into some bad shit and fucked everything up. Brian offered to... try to help me. Set me up at his place for a bit, maybe... talk your mother into mentoring me somehow, or something.\"\n\n\"Whooooa fuck,\" Emily's hands shot to her temples. \"Seriously? You're moving in with Brian? You guys want Mom to... holy shit. Holy shit. I mean, yeah that's brilliant, but\u2014why didn't anyone bring this up earlier?!\"\n\n\"I mean,\" Kelly frowned, looked down at the surfacing of the pool area. \"I don't know. It's weird. Weird and I don't like it, don't like really relying on people, or taking handouts, or forcing myself into your life or anything like that. Super uncomfortable. They kinda just sorta talked me into it somehow, last night.\"\n\n\"So, you'd say you're acting out of character to how you'd normally be?\" Megan jumped in. \"Like you were maybe influenced or affected by something?\"\n\n\"I guess?\" Kelly fidgeted. \"It's\u2014I don't know. It was like, back then before, whether or not I was right about everything was... more important than what was actually going on? Or something. I can't fuckin' explain it. Don't even want to. Fuck.\"\n\n\"Mrs. Emily's Mom is very nice,\" Rebecca assured Kelly. \"I think she'd be a great mentor figure for you, and, whatever's going on, she'll be able to help you get somewhere. For sure. She's helped me tons and tons!\"\n\n\"She did?\" Emily blinked. \"What? How?\"\n\n\"Is it true that she's an actress?\" Kelly questioned. \"That she played Hannah Hudson on Criminal Lives?\"\n\n\"Ugh. Yep, that's her,\" Emily made a face. \"Hate that show, could never ever stand to watch her in it.\"\n\n\"What?\" Kelly asked. \"Why?\"\n\n\"She's too good at acting? I guess?\" Emily threw her hands up in disgust. \"It's like, you see her all your life as Mom, and then you see her one day on TV, and she's someone else. She's not Mom, she's in love with some guy who's not Dad, she's this whole other gross person but wearing my mother's face. Traipsing around in her body. Unnatural. It's like\u2014thanks, I hate it!\"\n\n\"Huh,\" Kelly remarked.\n\n\"I do see Emily's perspective,\" Rebecca murmured. \"But at the same time, I think that just makes me admire Mrs. Emily's Mom's dedication to her craft even more. She's really amazing when she\u2014\"\n\n\"Thanks, I hate it!\" Emily said again, crossing her arms.\n\n\"Why are you referring to her as Mrs. Emily's Mom?\" Kelly arched an eyebrow.\n\n\"Because that's who she is,\" Rebecca blinked. \"She's Mrs. Emily's Mom.\"\n\n\"Wait, Criminal Lives like that old cop show?\" Megan interjected. \"The soap opera thing?\"\n\n\"It was a TV drama, not a soap opera,\" Emily sighed. \"But, yeah, yeppers, that's the one.\"\n\n\"That's so cool...\" Megan mouthed. \"She's your mom? You do kinda look like her!\"\n\n\"Yeah, except without her good looks and great figure,\" Emily scowled. \"But, otherwise? Yeah, totally!\"\n\n\"No, I meant\u2014\"\n\n\"I think you're hot, Emily,\" Kelly said, creating an awkward moment of silence.\n\n\"Uhhh,\" Emily floundered. \"Thanks, I think? Just...\"\n\n\"Wait, would you have thought she was hot before, or is this a new thing?\" Megan inquired. \n\n\"I was bi before, but no,\" Kelly answered. \"Wouldn't have thought of her as my type. More and more though, it's like I can see myself being really open to... you know. More types. Petite little Latina bitches with cute faces and dirty minds.\"",
        "\"Uhhhhh\u2014\" Emily looked mildly alarmed.\n\n\"Goodness!\" Rebecca covered her mouth, trying not to laugh. \"Goodness Gyratos!\"\n\n\"So, that's a magic charm thing! Right?\" Megan turned from girl to girl for support. \"Totally has to be. Right?!\"\n\n\"I think so, yeah,\" Kelly said, eyeing Emily carefully. \"I'm not like, against it, though.\"\n\n\"You wouldn't be, that's the point,\" Emily countered. \"That's how brainwashing works.\"\n\n\"Could be?\" Kelly shrugged. \"I don't buy into that stuff too much, though. I mean, I almost flipped out on Brian yesterday when we were having pizza. We'd argued about stuff earlier, too, I even bailed on them a bit to go take care of some of my own stuff instead. Don't feel super compelled by some magic power or anything like that.\"\n\n\"You do, though,\" Emily argued. \"You totally do feel compelled. I mean, the whole overpowering attraction thing. That's a compulsion right there. You say you almost flipped out on Brian\u2014maybe back before, the old you would have flipped out him. Well? Would you have?\"\n\n\"I...\" Kelly paused to consider it. \"I dunno? Steph was there, too, so I don't think\u2014\"\n\n\"Stephie's super duper fucking charmed,\" Emily shot back. \"Like, head over heels. Eyeballs deep. Pink hearts in her eyes, the whole shebang. C'mon. When I brought up that maybe we were getting mind-controlled or whatever, she was like 'that's fine. This is fine.' Thought that being charmed was still way better than going back to how she was before.\"\n\n\"I get what you're saying, but also\u2014that's valid for her,\" Kelly said. \"She's right to say that either way. You never saw her on Friday, back before her hair turned pink. She was totally different, was this... super-shy little fucking blonde girl with a really bad stutter and a crippling case of social anxiety.\"\n\n\"Her stutter wasn't that bad,\" Megan huffed. \"I've known her for longer than any of you\u2014I'm her best friend!\"\n\n\"Nah, it was really bad, sorry,\" Kelly shook her head. \"And, friends? You were like, her only friend, I saw her address book in her phone\u2014there were like five entries total.\"\n\n\"We're, we're working on that!\" Megan blustered. \"I got her to come to the convention, I got her to cosplay! She's not that shy, she just needs\u2014\"\n\n\"\u2014She just needs a little bit of magic in her life, and some support\u2014yeah, that's us\u2014who love her and want the best for her,\" Kelly interrupted. \"Right?\"\n\n\"Her stutter wasn't that bad,\" Megan insisted, crossing her meaty arms.\n\n\"Kelly are you arguing in favor of us getting charmed?\" Emily questioned. \"Because if that isn't indicating brainwashed bias already for you, then\u2014\"\n\n\"Fuck it, then. Yes, I am,\" Kelly admitted. \"Like I said, my life's all kinds of fucked. You know what Brian said when I laid it all out for him? He said it was like I was heading towards a bad end. He was fucking right. I was. Am I supposed to see living this charmed life instead as some kind of bad thing? For any of us? Steph's so much better off with Brian, I'm better off with Brian, what about you, Emily? Don't you think you'll be better off with Brian\u2014with us?\"\n\n\"Uhhhhhh, shit,\" Emily flailed her arms and spun to face Megan. \"Control, control case! Control, tell us why being mind-controlled harem slaves is bad!\"\n\n\"Being mind-controlled harem slaves is bad!\" Megan called out.\n\n\"No no, like tell us why\u2014\"\n\n\"Emmie, I don't think you have to worry so much about it,\" Rebecca pointed out with a sleepy smile. \"Look at you\u2014your hair's just as blue as Kelly's is red and Stephanie's is pink. But, you still have the free will to doubt things, to argue against being a... mind-controlled harem slave.\"\n\n\"Well yeah, but that doesn't count!\" Emily pouted. \"I've been crushing on Brian for forever, obviously I'm totes gonna be his harem slave no matter what. That was always my thing. I was just making a case for you guys, since I'm the brains of this here\u2014\"\n\n\"Except, you weren't his harem slave?\" Kelly countered. \"Crush or not, seems to me like you were dicking around getting nowhere at all with Brian\u2014'till you got charmed. Am I right?\"\n\n\"Uhhhhh,\" Emily seemed at a loss and abruptly turned to Rebecca. \"So yeah anyways, Rebecca I noticed you didn't draw Stephanie's fire on the map, was there a reason for\u2014\"\n\n\"Am I right?\" Kelly repeated with a smirk.\n\n\"Kelly, be nice,\" Rebecca scolded. \"She was trying... just. Well, she's very Emily sometimes.\"\n\n\"Wha\u2014what the, what the hell's that supposed to mean?!\" Emily exclaimed in a fluster. \"Rebecca\u2014\"\n\n\"It's your name, Emily silly!\" Rebecca explained with a sleepy smile. \"I couldn't think of how to draw Stephanie in, because it never seems like she's in the same place. She just kind of roams around, always moving. Like a wildfire. She's not as big as the forest, but she has a lot of intensity, the same way Kelly does. I think that may matter more than attributing size in the dreamworld, because\u2014\"\n\n\"Say that to begin with!\" Emily jumped to her feet in aggravation. \"Here I am trying to figure out what's even\u2014so you're saying things rank by intensity in the dreamworld, and Steph's the intensest?\"\n\n\"'Intensest' is definitely not a word,\" Megan chuckled.\n\n\"Neither is 'scare-ified,'\" Emily retorted, sticking out her tongue.\n\n\"Actually, I think 'intensest' is a real word,\" Kelly added. \"Isn't it?\"\n\n\"Hmm-hmmm...\" Rebecca closed her eyes and fell deep into thought again. \"Kelly might be the most intense by a little bit\u2014but, she has the smallest area. Stephanie's forest fire is maybe... one tenth of my area, but she's also very very intense. I have the largest area by far, but absolutely no intensity at all. Emily, your little river is pretty lively, so I'd say\u2014\"\n\n\"What?\" Emily cocked her head in disbelief and bewilderment. \"No, no, that doesn't make any sense at all. You're like, by far the most intense person I've ever met.\"\n\n\"I... what?\" Rebecca's eyes fluttered back open in surprise. \"No, I'm not!\"\n\n\"When you're\u2014you know what I mean,\" Emily made striking gestures. \"When you're in your gung-ho sword valkyrie of death mode. You're one hundred percent the most\u2014\"\n\n\"Yeah yeah yeah!\" Megan agreed. \"Like when you guys were fighting in the hall, Rebecca stormed in and like, threw you aside, slammed that Chloe girl to the ground and had pinned her right away\u2014\"\n\n\"Oh,\" Rebecca blinked. \"I... never even thought to try\u2014\"\n\n\"Think I might've just made a kinda big discovery,\" Kelly interrupted, clawing a brush through her hair and then examining the tines. \"This stuff doesn't come out.\"\n\n\"What doesn't come out?\" Emily asked. \"The color? Or the hair itself?\"\n\n\"The hair itself,\" Kelly answered. \"Look, watch...\"\n\nThe scene girl carefully portioned out an almost invisible single strand of brilliant red hair, twirled it around her fingers like dental floss, and then pulled it taut. The gathering of girls watched with interest as the hair pinched the skin of her fingers at the applied tension. The single strand refused to break, even after Kelly's hands began to tremble from the amount of force she was trying to use.\n\n\"Yeah\u2014nothing,\" Kelly said, staring intently at the hair. \"Pretty sure we can't separate even a single hair of the new color stuff from our heads. Emily, there's a little disposable lighter in my purse somewhere, can you\u2014\"\n\n\"On it!\" Emily chirped, lunging forward to unzip the purse.\n\nAfter a quick moment of rifling through jumbled cosmetics and junk, Emily found the lighter. She flicked it in her hand until a little flame appeared, and Rebecca let out a small noise at the sight.\n\n\"Well, fuck me,\" Kelly murmured, holding out a strand of bright red hair to the open flame of the lighter. Nothing happened.\n\n\"Do you know the one thing that makes hair completely fireproof?\" Kelly smirked, glancing at Emily.\n\n\"Uhhh. I don't... think so?\"\n\nKelly moved the lit lighter back and forth, drawing the flame across the hair, but there was no result. The single strand remained an unflinching persistent line even when held continuously through the little tongue of flame. When she released it, the hair swayed back down to join her other locks of red.\n\n\"Me either,\" Kelly said. \"It all burns. Hell, wet hair held up to a flame like this will still burn up in a split-second. Even the thickest human hair is like, one five-hundredth of an inch wide, so there's no way it can stand up to open flame, like... ever.\"\n\n\"What does this mean?\" Emily asked, stunned. \"Could it be the lighter's just not... hot enough, or something?\n\n\"Hell if I know?\" Kelly laughed. \"Doesn't explain why I can't snap a hair with my fingers then, now does it? Wish we had a pair of scissors. Hey, maybe it's just the red\u2014you want to see if your blue burns?\"\n\n\"Kinda?\" Emily looked uncertain. \"But, also kinda not? Like what if my thing is waterproof hair instead since I'm blue and water? We like, don't even know if the special color hair even grows normally anymore or whatever. For all I know I could be stuck with damaged hair for forever.\"\n\n\"I bet you'd just rub in Brian's cum like shampoo, since it's all magic,\" Kelly suggested with a smirk. \"Right? Really lather it in there, and\u2014\"\n\n\"\u2014Kelly?\"\n\nStephanie's voice startled all of them, and all four girls twisted over to see Stephanie across the pool area from them, leaning partway out of Brian's hotel room door. The tufts of her pink hair were askance, she was blushing furiously, and a slight sheen of sweat was visible on her pale skin.\n\n\"Kelly, um\u2014can we see you for a moment?\" Stephanie sounded incredibly embarrassed. \"If you're not busy? Is your purse out here?\"\n\n* * *\n\n\"My purse? Yeah\u2014here,\" Kelly called back, grabbing her purse and rising up off the lounger. Keeping her cool always came easy to Kelly, but an excuse\u2014any fucking excuse\u2014to escape these girls and this awkward and meandering conversation came as an enormous relief.\n\nKelly was thoroughly adapted towards fighting upwards in a social hierarchy, and this different group dynamic was making her feel directionless, amorphous. Uncertain as to just how the fuck to express her own persona in the absence of all the scene clique social pressures that shaped her temperament in the first place. She couldn't jeopardize things with her usual aggressive antagonism, because things were different. There was no reason to constantly assert her presence in conversation here, and more than once Kelly found herself forcibly reining herself in and lapsing into silence. There was no real need to establish herself as baddest bitch. \n\nIt was a strange feeling.\n\n\"Everything alright?\" Kelly asked, crossing the pool area and letting herself out through the surrounding courtyard gate to meet Stephanie at the door to Brian's room. \"What do you guys need?\"\n\n\"We, um. I think I... gave you back that condom that you gave me, last night. To use,\" Stephanie said in a small voice, her face flushed red. So, I was wondering if you maybe had any other ones...?\"\n\n\"Oh, shit,\" Kelly remembered. \"Yeah, sorry\u2014wasn't even thinking about this when I needed one last night! Here, here.\"\n\nEmbarrassed herself at her own lapse\u2014she'd been completely desperate for dick in the heat of the moment and simply demanded Stephanie grab her a condom from somewhere\u2014Kelly snapped open her purse and hurriedly rummaged for the familiar packet shapes. There turned out to be two remaining, still connected to each other along one edge. Two rubbers left, and there's two of us girls here... no, NO. This is Steph's moment. Gotta let her have this. Especially after Emily and I hogged all the Brian last night.\n\nStephanie opened the door wider and stepped back, ushering Kelly into the room. Obliging her by following after, Kelly couldn't help but notice Brian laying on the bed with only a sheet draped over his midsection. The ambiguous scene conjured all sorts of sordid imaginings about what he and Stephanie had been getting up to, and Kelly couldn't help but give Stephanie another look. Dressed in only that nightshirt from the previous night\u2014the one that Stephanie definitely hadn't been wearing earlier and had probably been hurriedly shrugged on mere moments ago\u2014Stephanie gave her a shy look in return.\n\n\"Take 'em both,\" Kelly pressed the condom packets into Stephanie's hands. \"You guys might need them.\"\n\n\"Thank you so much,\" Stephanie said with a weak smile. \"And\u2014sorry again.\"\n\n\"No, totally my bad,\" Kelly fought the urge to nose in and make some suggestive remark or sneak another leering peek over at Brian. She was feeling incredibly antsy, right now. \"You guys... doing okay?\"\n\n\"Yes, it's been so...\" Stephanie paused beside the doorway, quirking her head and searching Kelly's expression. \"Kelly? What's wrong?\"\n\n\"Nothing's wrong,\" Kelly assured her. \"Have lots of fun with Brian. Give him some kisses for me, alright?\"\n\n\"Kelly...\" Stephanie frowned. \"You're\u2014anxious?\"\n\n\"No? Anxious?\" Kelly blinked. \"I'm not anxiou\u2014wait a minute, you can do your thing from a distance, now?!\"\n\n\"Kind of?\" Stephanie gave her a worried look. \"A little bit? Just little hints and traces, it's like following smoke to a fire. Kelly\u2014what's wrong?\"\n\n\"Uhhh\u2014fuck,\" Kelly made a face.\n\nShe'd never considered how troubling Stephanie's magical power could turn out to be\u2014 Kelly hadn't realized exactly why she was anxious until Stephanie pointed it out. Once it got pointed out, that made her focus in on exploring the errant feeling, which only made her feel even more tense and uneasy, because she hadn't had a chance to broach some of these sensitive topics with Stephanie yet.\n\n\"Was just\u2014I really wanted to check on you. I guess,\" Kelly admitted. \"Was getting a little jealous. I mean, I know you wanted to be alone with Brian for this, and it's totally your turn for some action, but\u2014\"\n\n\"I know you're not jealous\u2014I can tell,\" Stephanie asked, raising a hand to gently trace Kelly's brow. \"May I?\"\n\n\"Uhhh. Okay, yeah,\" Kelly felt a pang of relief at not having to explain herself. \"Please. Go for it.\"\n\nAfter only a moment's uncertain hesitation, Kelly latched onto that elusive sentiment her future self had dangled in front of her\u2014the sense of fond familiarity, the longing ache of total love she felt for Stephanie. Kelly opened herself up, and Stephanie poured in. It was the blinding pink brilliance daybreak within her mind all of the sudden, and Stephanie's beaming brightness seemed to light up every dark corner and illuminate every hidden recess of Kelly's brain. The sensation of pink fire flooding her mindscape and intruding into very private portions of her mind would have had her recoiling in shock at the sheer spectacle of it, but not anymore\u2014this was her Stephanie.\n\n\"Kelly!\" Stephanie exclaimed with a surprised breath, looking at Kelly in amazement. \"Um. Your feelings for me, they're... um. Your feelings for me are really, really strong. It seems like, anyways. Did... did something happen?\"\n\n\"I'm... in love with you,\" Kelly confessed in terror. Fuck me, I just came out and said it. Blurted it out. After giving them the whole fucking 'NAH, I DON'T DO LOVE' spiel like, yesterday. Fuck fuck fuck, FUUUUCK.\n\n\"It, um, it has to do with my power,\" Kelly quickly added. \"Yeah, I have a power too now, sorta. But, it's not even because of the power, really. I just\u2014Stephanie, I love you. I'm in love with you.\"\n\nIt didn't matter that Kelly was able to keep most of her composure, because Stephanie was still connected to her, in under her skin and beneath any facade she could put up. Tapping directly into Kelly's emotions right from the source. The mortified feeling, the wash of guilt and fear, that spike of terrible anxiousness that threatened to bring her to tears in this moment\u2014Kelly knew that Stephanie was reading them all.\n\nJesus, and two fucking days ago, SHE was the stammering mess, The absurdity of their reversal of roles really beggared belief, and Kelly didn't know whether to laugh or cry thinking about it. No, not a reversal. We equalized, somehow? I was just SO goddamn proud that I knew what was what. Even when that was putting me on a path towards porn where I was for sure gonna wind up back getting trashed every day on whatever substances there were to abuse, and now it's like... I gave away that excess confidence to Stephanie, and now we're both... it's...\n\n\"Kelly, it's okay!\" Stephanie rewarded her with a huge smile. \"I love you too! I'm\u2014you're, you're, you've made me so happy with this! I love you!\"\n\n\"You do?\" Kelly asked, feeling dumbfounded. \"Really?\"\n\nShe mentally reeled as her sense of that pink fire expanded again and again and again to fill everything in sight with fiery emotion, almost if Stephanie was resolute on confirming all of those feelings to her. In response, that metallic meteorite in the center of Kelly's mindscape was practically vibrating, so red-hot with searing joy that the crater walls about her began to glow and liquefy into magma.\n\nI love her. She loves me. I love her and she loves me. We love each other, Kelly's mind raced with jubilation. This is love.\n\nIt felt like more than just a major accomplishment and a personal milestone for them, it felt to Kelly like she was on the cusp of another grand epiphany.\n\nI helped give Steph some of my confidence, Kelly thought as she captured the shorter Stephanie in a crushing hug. But just now, when she gave it BACK to me\u2014it was MORE. Just from her having held it, from having been a part of it. Like, I was always skeptical of the whole 'two people being more than the sum of their parts' stuff, but... it's real, isn't it? It's love. I'm totally, hopelessly in love. And maybe not even just with Stephanie...\n\nTo his credit, Brian appeared only surprised and concerned by Kelly's sudden outburst of emotion.\n\n\"Sorry, Brian,\" Kelly laughed, giving him a guilty glance over Stephanie's shoulder as she wiped tears with the edge of her hand. \"Randomly interrupting like this, when you guys're tryin' to... you know. I'm going, I'm going.\"\n\nFeeling more flustered and elated and giddy all at once than she remembered ever experiencing, Kelly gave Stephanie one last squeeze and then released her, turning to make her escape. She didn't get anywhere at all. As Kelly felt herself being tugged to a stop she realized that Stephanie had taken her by both of her wrists and wasn't letting her go anywhere.\n\n\"Baby,\" Stephanie looked up at her with a sweet smile of adoration. \"Kelly baby. Why don't you... won't you please stay with us and help? If you want to?\"\n\n* * *\n\n\"Vwaif a mwinute!\" Emily abruptly stood up. \"Vwhe twotally\u2014\"\n\n\"Don't talk with your mouth full, Emily,\" Rebecca reminded her friend in an absent-minded tone. \"Eating etiquette is\u2014\"\n\n\"Vwhe twoh\u2014\" Emily quickly swallowed her mouthful of food, \"\u2014she totally went in there with them, and then they closed the door! They're gonna be in there all banging together, without us!\"\n\n\"No no no, you stay. Sit!\" Rebecca instructed, guiding Emily back to the poolside lounger before the little Latina could attempt to rush over to the hotel room door. \"They're having a thing. A moment? You don't want to interrupt, it feels like it could be important!\"\n\n\"They're just in there having sex without me!\" Emily pouted, dropping heavily back down onto her seat. \"I want to have sex. I haven't gotten laid properly in hours!\"\n\n\"...Hours?\" Megan regarded her with wide eyes. \"Like, you mean\u2014\"\n\n\"Don't be greedy, dearie,\" Rebecca teased her, dotingly patting Emily on the head. \"There's this big Kelly and Stephanie commotion in the dreamscape. I think they're having a thing.\"",
        "Rather than immediately return to their discussion after Stephanie interrupted them to call for Kelly, Emily had remembered the food cartons\u2014or rather, Emily's tummy growling had reminded them of breakfast. The three girls had placed the take-out cartons on the foot of the lounger, distributed wrapped plastic cutlery, and popped open the styrofoam containers so that they could dig in. Kelly had been gone for less than a minute, and Emily thought it'd be funny if after just turning away for that one moment, Kelly would come back to find them all just casually having breakfast without her all the sudden. \n\n\"I want to have a thing too, though,\" Emily playfully griped, stabbing her fork so that it stood up in her eggs and taking up her coffee again. \"I wanna have all the things!\"\n\n\"What do you mean they're having a thing?\" Megan asked Rebecca, taking a sip of hot cocoa to clear her throat. \"What does 'having a thing' look like, in your dream thingie?\"\n\n\"Welllll,\" Rebecca mused, making a thoughtful gesture with her fork. \"I suppose kind of like they're making a volcano?\"\n\n\"A volcano?!\" Emily nearly spit out her drink. \"They're making a volcano together, and without me?!\"\n\n\"It's very prettiful!\" Rebecca nodded cheerfully. \"With all the pink and red erupting out together. They're\u2014oh. Oh. Oh, my.\"\n\n\"What?!\" Emily demanded. \"What's happening?!\"\n\n\"They're\u2014oh, oh my goodness,\" Rebecca commented, raising a hand to cover up a small grin. \"They're\u2014it's nothing, Emily. Eat your food.\"\n\n\"I'm going over there,\" Emily decided, standing up again.\n\n\"You sit your hiney right back down, young lady!\" Rebecca gestured in mock anger with her utensil. \"They're having a moment, and I don't want you going and wrecking it!\"\n\n\"I want to have a moment, too!\" Emily protested in exasperation, plunking herself down again. \"I wasn't gonna wreck anything...\"\n\n\"Ummm, what kind of moment are we referring to?!\" Megan giggled. \"Like, a scene fades to black sorta moment?\"\n\n\"It's quite a bit more colorful than that, I'm afraid,\" Rebecca said with a sly laugh. \"They're\u2014oh. Oh, goodness!\"\n\n\"Now you're just messing with me, aren't you?!\" Emily growled. \"Aggh, just you wait. Soon as I figure out whatever the hell my magic charm power is, I'm gonna use it to play pranks on you. See how you like it.\"\n\n\"You were going to do that anyways,\" Rebecca pointed out.\n\n\"Well, yeah, but\u2014\" Emily paused. \"Wait. Wait a minute. Do you think you can help me figure out what the fuck my charm power is?\"\n\n* * *\n\nKelly was entranced watching Stephanie excitedly draw both arms up to peel off the nightshirt. As the girl's garment was removed, she felt her eyes lingering on the bare skin that was revealed, the plush pale contours, and then traveling up the graceful curve of the girl's arching back. Before she could even savor the sight, Stephanie was already moving on, bouncing over to join Brian on the bed. The pink-haired cutie hurried to flip back that bit of bedsheet that preserved Brian's modesty, and his giant dick bobbed back and forth. Magnificent manhood\u2014thick, fully erect, and flushed with ardent color.\n\nStephanie, this...\n\nStephanie wrapped her thumb and forefinger around its base and then turned to look back over her shoulder at Kelly with an expectant grin, as though she was simply excited to share this amazing discovery. There was an innocent energy that Stephanie brought to the bedroom, an energetic zeal that even managed to fill Kelly with eager excitement simply on Stephanie's behalf. Along with many other much more complicated feelings.\n\nYou're so... BEAUTIFUL! Arrgh! Kelly yanked her own shirt up and carelessly tossed it aside. I just want to... I just want to...!\n\nIt wasn't something she could articulate into words, an experience so novel that she refused to entertain it with a cliched expression like I've never felt this way before. It was vexing, it was wonder and awe, it was a brilliant pink flame that illuminated etching scars of yearning across Kelly's psyche that had been all but invisible before. Melancholic throbs of infatuation traveled through her in pangs at the mere sight of Stephanie's excited smile. The simple perfection of Stephanie's beaming happiness now elicited a stifling sense of frustration and lovesickness that were completely new to Kelly. Fuuuck me do I have it bad. What does a person even DO with feelings like this?!\n\nKelly's attention naturally wasn't limited to just Stephanie, either.\n\nAs Brian stroked through Stephanie's pink tresses and then continued to play his fingers down the girl's neck and along her back, he looked every bit the picturesque gentle and doting boyfriend\u2014tender and endlessly compassionate. Kelly hadn't exactly expected Brian to fumble around feeling Stephanie up or grope and manhandle her in a rough way, but confirming Stephanie was being treated with proper affection still came as an enormous relief. Kelly watched as Stephanie lowered her fluffy pink head down into Brian's lap to try putting her lips on a cock for the first time, pleased to find Brian's first reaction was to gently brush the girl's bangs out of her eyes. \n\nWith how indescribably important Stephanie was to her right now, Kelly was more than just touched that Brian seemed so adept at reading the unspoken mood and treating her Stephanie so romantically\u2014Kelly felt moved. His significance in this couldn't be understated, because he was at the heart of it all, the center, the fulcrum from which Stephanie and Kelly revolved in this decadent dance of personal transformation. Stephanie's eyes were now bright with confidence and pink with raw lustful sexuality, and Kelly burned red with newfound appreciation for the underpinning love that tied them all together. Their having exchanged positions with one another over the course of the weekend filled everything with meaning to Kelly, amazed her with a heightened context that was completely fascinating.\n\nBut then seeing her wiggle her butt back and forth like that brings me right back to so fucking turned on that I can't even function, Kelly thought, kicking her way free of her pants as she observed the pair of lovers in a dreamlike daze. Fuuuuck me. I just want to bury my face in her pretty pink pussy and gobble her up forever and ever.\n\nStephanie looked up at Brian for reassurance, and then tried lowering her head down into his lap to take him into her mouth again. Kelly fidgeted as she watched Brian trace his fingertips over Stephanie's naked shoulders, because he was displaying more self-control than she felt right now. He was encouraging but not pressuring Stephanie, and that really meant something. Kelly's first time couldn't have been more different.\n\nOkay, okay, Brian, Kelly thought in exasperation. 'Nother point in your favor.\n\nThinking back on the conversation they'd had Friday night, Brian didn't seem like he was being dishonest or coddling Stephanie by holding himself back right now. Rather, he was patiently pacing himself because that was an honest part of him. He was treating Stephanie with love as the girl explored her first real foray into sex. That care and control\u2014that was just a major part of who he was. They were qualities that had never held any importance to Kelly before, but seemed to quickly be rising in value now. \n\nFuck. I'm kinda in love with Brian too, aren't I? Kelly mused as she climbed up onto the bed after them. Like\u2014I TRUST him. Not even just with putting myself in his hands, because I'm a fuckup and even if things go south I can deal. I trust him WITH STEPHANIE.\n\nThat was a big deal.\n\n\"Hey there, Kell,\" Brian greeted her with a half-smile.\n\n\"Hey there, handsome,\" Kelly winked at him.\n\nShe settled down and made herself comfortable beside Stephanie, with each of them partway draped over one of Brian's thighs so that they had easy access to this show's centerpiece\u2014that magnificent dick of his. The moment it was right there in her face again Kelly had to fight from giving in again, because the urge to impose herself between Brian and Stephanie so that she could lavish that cock with attention was overpowering.\n\n\"I wanted Kelly to be with us for... for my first time,\" Stephanie admitted sheepishly, giving the tip of his penis a doting kiss, suckling it between her lips, and playing her tongue across it. Kelly couldn't help but wet her lips as she watched. \"I hope that's okay?\"\n\n\"You\u2014mmm\u2014you know no one can say no to you, Steph,\" Brian teased, running his hands through her pink hair again.\n\n\"Am I\u2014am I being selfish?!\" Stephanie smiled, smacking yet another wet kiss atop his crown.\n\n\"Steph...\" Brian's voice had a husky, sexual quality to it. \"I love it when you're selfish\u2014 I want you to show us just how selfish you can be... and what you want to be selfish for.\"\n\n\"I want you,\" Stephanie declared, taking him into her mouth partway, closing her lips around him and stroking him with languid bobs of her head so that the flare of his crown kept popping in and out of her mouth.\n\nKelly felt such a brief, conflicting flash of jealousy that it was like whiplash\u2014directed at both Brian's dick that she wanted to steal away from Stephanie, and then in the other direction at this adorable Stephanie that she wanted to keep all to herself. Speechless, Kelly nuzzled in closer to them both, taking comfort in the fact that they'd both chosen to include her in this. At that her tiny tangle of tension seemed to dissolve, wicking away to be consumed by the growing ardour of combined affection and arousal that tickled its way down her tummy towards her pussy.\n\n\"Ohhh fuck Steph, that feels amazing,\" Brian breathed, reaching out to grab the back of her head but stopping himself and instead grasping a fistful of comforter.\n\n\"She's a natural!\" Kelly gloated, flashing a grin and feeling a little more proud than she probably should have. \"Can I... hey, can I help?\"\n\n\"Hmm...\" Stephanie thoughtfully hummed with Brian's cockhead still in her mouth, glancing at Kelly with a mischievous look\u2014as though debating whether or not she wanted to share her new toy after all.\n\nGeez, Steph... Fantastical fantasies of Stephanie sexually dominating her flicked throughout the redness clouding Kelly's mind for a startling moment, and Kelly did a mental double-take at herself in surprise.\n\nUhhhh wait what?\n\n\"Okay!\" Stephanie agreed in a playful, matter-of-fact tone. As if to say of course I'll share with you, silly! I love you and want you to have everything! Her mouth was already upon Brian again, but her lovely blue eyes seemed to speak volumes.\n\nBreathing out a strange sigh of relief, Kelly reached in to assist, grasping Brian's dick in her hand. She couldn't help but marvel again at his size, because he was big enough for Steph to have fingers around him at his base and part of him in her mouth and there was still plenty of real estate left for Kelly. Hell, if I don't mind crowding in a li'l bit, I can probably get BOTH of my hands on him here.\n\n\"Brian... your dick is stupid big,\" Kelly commented with a restless sigh, giving him a firm squeeze and then carefully pumping her grip up and down until she was stroking him off right into Stephanie's mouth. \"Like... fuck, man.\"\n\n\"It's not that big,\" Brian protested.\n\nAs if prompted by Kelly's motions, Stephanie started hesitantly attempting to also slide her finger and thumb that were around him up and down, giving Kelly her first opportunity to provide some insight.\n\n\"Wrap around him tighter, way tighter,\" Kelly advised, adjusting the ring Stephanie was making with her fingers more firmly around Brian's circumference. \n\n\"It's\u2014\" Stephanie paused to inhale after taking her mouth off of Brian's dick, \"\u2014it's not, I'm not holding it too hard? I don't want to hurt him...\"\n\n\"No, no, you're totally fine,\" Brian assured her. \"That feels great.\"\n\n\"When it comes to these things, it can never be too tight or too wet,\" Kelly whispered, arranging Stephanie's full hand on Brian's manhood and ensuring she was grabbing it with some amount of force. \"Liiiiike this!\"\n\n\"I'm not hurting you?\" Stephanie asked again, looking up at Brian with an unsure smile.\n\n\"You're not hurting me,\" Brian promised, stroking her cheek.\n\nWith tentative, shy little motions at first, and then with steadily increasing confidence, Stephanie watched the sight of her own hand moving up and down to jack Brian off as though it was hypnotizing her. \n\nFeeling rather beguiled herself, Kelly couldn't help but lean in and capture the girl's lips, and in no time at all the two girls were turned towards each other and heatedly making out, savoring and celebrating this sexy moment with a passionate kiss. Kelly's hand joined Stephanie's on Brian's dick, and after a brief awkward moment they managed to work out a great rhythm together. The wet sounds of their sloppy kisses, the faint fapping noise of them beating Brian off, and his increasingly unsteady breathing began to fill their dimly-lit hotel room.\n\n\"Ohhh fuckk,\" Brian gasped, straining not to jerk his hips. \n\n\"He liiikes it,\" Kelly drawled, giving Stephanie one last peck on the cheek. \"He's getting close.\"\n\nWith new enthusiasm, Stephanie swallowed the tip of Brian's dick that was exposed by their hands, and Kelly forcibly slowed the movement of their wrists so that they weren't energetically bashing Stephanie in the nose with the frenzied motion of their pumping.\n\n\"Steph\u2014Stephhh,\" Brian groaned, and a quiver went through his body as he approached orgasm.\n\n\"Stephie Sunshine,\" Kelly warned in a soft voice. \"He's gonna cum. Do you want him to cum in your mouth?\"\n\nStephanie hurried to disengage, grinning at them in surprise. She then stared for a long distracted moment, spellbound, at the strand of saliva that connected her lip to the newfound object of her affections. \"Um, um, I don't know! ...Do I?\"\n\n\"Do you?\" Kelly challenged.\n\n\"I don't know!\" Stephanie giggled. \"Which way is best? It doesn't\u2014I mean, the thought doesn't bother me, at all. But... will he still be able to... you know? Afterward?\"\n\n\"Uhhh,\" Brian was still straining to regain his wits. \"I think I can maybe\u2014\"\n\n\"After what we saw last night? Um, probably?\" Kelly darted in to lap the gossamer of wetness trailing from Stephanie's lip into her own mouth\u2014and then drawing that into a surprisingly sordid exchange with Stephanie, a kiss of muffled gasps and shivers, of tongue and saliva playing into and across each other. Mmmm-mmm-mmmm...\n\n\"I mean,\" Kelly stopped to catch her breath. \"Actually...\"\n\n\"Actually...?\" Stephanie panted.\n\n\"Actually, we might have to get him off first. Before you try riding him,\" Kelly said in a husky voice, giving that dangerous penis a sidelong glance. \"Like... you saw how much fuckin' cum he nuts out. If we don't get him to cream out a big sudsy load first\u2014or maybe a load or two\u2014he'll totally fill that condom the whole way up. Like a water balloon or something. Round.\"\n\n\"C'mon, it's not that much,\" Brian said, shaking his head. \"You're exaggerating a bit.\"\n\n\"You like, doused me yesterday,\" Kelly countered. \"And then pumped like, gallons into Emily an hour or two right after that. It was a lot.\"\n\n\"It wasn't gallons,\" Brian sputtered. \"Geez. It... had just been a while. Since I'd, you know\u2014\"\n\n\"Oh, that backed up, were you?\" Kelly teased, playfully arching an eyebrow.\n\n\"Not that much came out that second time with Emily,\" Brian said defensively. \"There wasn't\u2014\"\n\n\"Are you fucking kidding me?!\" Kelly asked, sharing an incredulous look with Stephanie. Both girls burst into giddy laughter at remembering the veritable pool of warm spunk.\n\n\"\u2014There wasn't even like, any mess on the comforter when we were done!\" Brian finished. \"It wasn't that much.\"\n\nSteph and I were like, snuffling our faces in it like piglets together. Gobbling and slurping up every little bit we could find like junkies. Yeah, and the rest either got absorbed by our bodies while we were fucking, or disappeared into thin air, or something. Because he has some kind of magic cum.\n\n\"There was... quite a bit of it,\" Stephanie decided with a wry smile, her face completely red. \"As the um, the neutral third party for that\u2014\"\n\n\"See? See?!\" Kelly laughed.\n\n\"I don't know what to tell you!\" Brian said with a good-natured smile, shaking his head. \"I could... maybe probably go a couple times right now? I don't even know what's up with my, uh, refractory period, this weekend. It's like\u2014\"\n\n\"Like you could just fuck and fuck and fuck us nonstop?\" Kelly supplied in a helpful\u2014or maybe hopeful\u2014voice.\n\n\"Well geez, there's no need to be crass,\" Brian rolled his eyes.\n\n\"Yeah, there's no need to be crass!\" Stephanie echoed with a cheeky grin.\n\n\"Stephanie?!\" Kelly's mouth fell open at the unexpected betrayal. \"What the actual fu\u2014whose side are you fucking on, here?!\"\n\n\"Sorry!\" Stephanie giggled and rocked on the bed so that her shoulder bumped into Kelly's. \"I was just kidding! I'm having\u2014this is just so much fun, with you two. This is perfect. I love this!\"\n\n\"Ergh, you little bitch!\" Kelly exclaimed, rising up on one elbow so that she could reach back and slap a hand firmly on Stephanie's nearest ass cheek. \n\n\"Eek!\" Stephanie squeaked.\n\n\"What's gotten into you, huh?\" Kelly asked in mock disbelief. She left her hand where it had landed, cupping and squeezing that delectable ass cheek. \"Maaybe it's Brian that's gotten into you? Or maybe 'cause he's about to be, soon?\"\n\n\"Uh\u2014umm,\" Stephanie squirmed and wriggled at the enthusiastic attention on her buttocks.\n\nTo their surprise, Brian's dick jolted at Kelly's words, giving a provocative twitch that drew their attention, turned both their heads and caused them to break into shared laughter once again.\n\nWhat... the fuck, Kelly leaned in and devoured his dick, slobbering attention all over his cockhead while Stephanie began jerking her hand up and down his length this time. It's like we're both getting high off of this. How is this so fucking great?\n\nSex, even great sex, had always fallen into a certain range of different moods for Kelly. Lazy, languid, almost bored sex. Angry sex where they weren't partners, where they were instead individuals were selfishly hate-fucking each other. Then there was also urgent sex\u2014like last night. This is just getting to be... FUN sex? Just Steph and I, giddy with excitement and having a blast with Brian? I mean, I've fucked while high before, used to do it all the time. But, it never had THIS kind of feeling.\n\nIt's too... happy? Kelly wrestled Stephanie's hand out of the way so that she could sink down deeper on Brian's cock, guiding his length deep into her throat.\n\n\"Oh, wow!\" Stephanie seemed awed and impressed at seeing Kelly's skill up so close, and even that had Kelly feeling great. \"How on earth do you...?!\"\n\nThe whole entire experience was too weirdly happy, with beaming smiles and delighted kisses and taking honest exuberant joy at each other's performance\u2014just feeling genuinely thrilled and pleased with each other. Giggling, having a great time, Kelly felt sure they were just inches away from either starting to make drunken silly faces at each other or swooning and confessing their love.\n\nIs this mood coming about from how weirdly in tune with each other right now? Is it a magic charm thing? Or is it, like\u2014 Kelly coiled her tongue around Brian's shaft as best she could and pressed down on him, feeling the head of his dick just barely easing in and out of her frantically constricting throat. Because there actually IS this love here, maybe we're really\u2014fuck, gotta pay attention...",
        "Focusing on dampening her own gag reflex for several twinging lunges of her head, she finally managed to relax and take him in deep, possibly deeper than she'd ever taken something before. Fuuuck me he's so fucking thick...\n\n\"Kelly\u2014oh my God!\" Stephanie exclaimed, tapping Kelly's shoulder in alarm.\n\nSatisfied with her effort, Kelly gingerly withdrew, pulling up and back to release what felt like miles and miles of cock that had completely stuffed her throat. She let out a small cough and sputtered spit down her chin when she finally got him the whole way back out. Then Stephanie was there for her, rubbing her back in a supportive way and comforting her with proud little kisses.\n\nWhoa...\n\n\"Kelly are you okay?!\" Stephanie fretted. Not even waiting for an answer, Stephanie showered her with more little smacking kisses, even scooping up and stealing the thick strand of saliva Kelly had released.\n\n\"Fuck,\" Kelly murmured with a weak smile. \"Sorry. I swear, I was doing that better yesterday. It's\u2014\"\n\n\"You're fine,\" Stephanie promised with a kiss. \"You're amazing. You're\u2014I love you.\"\n\n\"I love you,\" Kelly promised, tilting her head for another kiss\u2014 she just couldn't get enough of Stephanie's kisses right now. Maybe she'd never ever be able to get enough of them.\n\nThe softness of her lips, the wetness of them, the eager reciprocation, the cute little noises of pleasure she could sometimes win out of Steph, the pinkness of her lover's uncertain but increasingly\u2014surprisingly\u2014bold little tongue, the raw desire that transmitted between them like the energy current of a live wire jolting them with emotional stimulation\u2014Kelly could never, ever get enough of it. From the way Stephanie responded, she was convinced over and over again that Stephanie couldn't get enough, either.\n\nShe was still kissing Stephanie when she felt Stephanie stir on the bed, readjusting herself to lift her naked hips up a bit so that a hand could creep down towards\u2014 \n\n\"Mmm, no no no, Steph,\" Kelly grinned. \"Why don't you let me take care of that? You play with Brian, and you'll have him all the dick to yourself, and I'll play with you!\"\n\n\"Yeah?\" Stephanie breathed, looking at Kelly with dazed eyes. \"Y-you're sure? I'm\u2014Kelly, I'm really wet...\"\n\n\"How wet?\" Kelly teased.\n\n\"I'm, I'm really wet,\" Stephanie confessed with a pleading look, almost trembling with how horny she had become. \"I'm wet. So wet. Kelly baby... please...?\"\n\nRocking back to sit on her heels behind Stephanie, Kelly showed a wide smile in sheer appreciation of the incredible view. Right in front of her, Stephanie was rising up onto her hands and knees, arching the lovely line of her back to present her luscious ass. It was a submissive posture, accentuated by the timid smile Stephanie wore when she peeked back over her shoulder towards Kelly. Stephanie was definitely wet, and not just a little bit, either\u2014her pussy was practically sopping. The sight of the girl's shy little snatch as it steadily oozed with lubricant and the comely way the shape of her thighs rose to meet it was spellbinding, and\u2014Kelly blinked rapidly in confusion as an uncanny sense of deja vu gripped her.\n\nWait. What? Kelly thought in a slight daze.\n\nDistracted once again by how inviting the glistening lips of that pussy looked, Kelly lowered herself in close, placing both hands upon either side of Stephanie's butt. She wet her lips as she squeezed, appreciating the plush curvature, and let her fingertips trace a smooth outline across those supple cheeks before gently parting them. The blushing slit just between and below them slowly blossomed open with a small wet sound at the motion to reveal pretty pink folds. Kelly inhaled deeply through her nose\u2014Stephanie's musky scent was pure aphrodisiac to her, the heady smell of her sex amped up the excitement already filling the air and seemed to welcome Kelly to freely indulge in her basest desires. \n\nHas this...? Kelly tried to concentrate, but the elusive inkling seemed to waver in and out of her focus as she struggled to make the connection. Isn't this...? \n\nPutting the errant thought out of her mind, Kelly instead nuzzled her face right into the sensual heat of Stephanie's soaked pussy. Intent on and eager to prove the sincerity of her feelings, Kelly slowly french-kissed the slippery silken folds, working her lips against Stephanie's slick labia and pushing her tongue inside her lover, reveling in the naked intimacy of each tactile sensation\u2014the messy warmth of arousal on Kelly's nose and cheeks and chin. The first startled exhalation Stephanie released and then each subsequent little squeak and tiny squeal as Kelly gripped Stephanie's soft thighs and pressed her mouth closer just made her more and more horny.\n\nHave we already... been here before? Just like this?\n\nThe distant red streak in the sky far above was still nothing more than a tickle in the back of her mind for several long moments as Kelly enthusiastically lapped at the pussy being presented to her. Brian had meanwhile been reclining back beside them and simply enjoying the show, but when he finally roused and started to shift on the bed, the prominent protrusion of his penis standing out immediately captured Kelly's attention. Before she'd even pulled herself away from Stephanie's private parts, Kelly reached over to grab Brian's cock\u2014then power and motion crackled in the back of her mind, sparks began to fly, and although no one present was in position to notice, red light flickered in the depths of Kelly's pupils.\n\nSomething big was happening.\n\nOh shit. Oh shit. I KNEW this was familiar. This is... THAT moment! Kelly remembered, nearly gaping in surprise. From back then! That random fucking sex fantasy that struck out of nowhere all of the sudden!\n\nRaw need raced through Kelly in shaky tremors at the realization, and she pounced partway over Stephanie's naked bottom to capture all of that criminally unattended cock into her mouth before Brian could get the rest of the way up. There was just too much here to appreciate all at once! Kelly was compelled to grope across his rugged abdominal contours with her free hand as she grasped for support, one of her breasts dangling freely between them while the other was squashed up against Stephanie.\n\nIt wasn't just my imagination, back then. Kelly fought to deliberate through the overpowering red haze of lust that was enveloping her mind. Wasn't some stray perverted thought or flight of fancy, was it? It was an activation. Of my charm\u2014power\u2014whatever. Thing.\n\nSome future Kelly living out this moment had sent back this specific scene of debauchery using her charm power thing. It was a trick. A pied-piper song, the promise of improbable kinky sex to lead that old Kelly by the nose into the hotel room with Brian and Stephanie. Sort of. The one she sent wasn't EXACTLY the same as this. Steph was still wearing panties at the start of that one\u2014here she already had them off. Brian was sitting positioned a little differently. But, it's still right here and now, it was still this same basic moment. From some timeline or another.\n\n\"Holy fuck,\" Brian exclaimed, grabbing at Kelly's shoulder for balance. \"Kelly\u2014holy fuck\u2014\"\n\nIt wasn't some subconscious accidental fluke that swayed my choice. It was some future me back then\u2014and now it's come around to MY turn, right here and now. Because now I know JUST what I have to dangle back in time to lure the Kelly of two days ago into all of this and bring us all together. And... yeah, I have to. I absolutely have to make sure it happens.\n\nShe wouldn't\u2014couldn't\u2014let any of them escape this threesome that had started to feel like less of a possibility and more of an inevitability. It completely needed to happen, and although Brian and Stephanie had been performing admirably thus far, she refused to let either of them hesitate on this for even another single instant. Kelly could feel the weighty draw of her send singularity spiralling ever closer\u2014she needed them to fuck, needed their nude bodies thrusting against one another in a tantalizing trifecta, humping and wrestling each other in an orgiastic tangle fucking crushing press of flesh. They needed to fuck and fuck and fuck, to lose themselves in rough, completely out of control sex.\n\nFor more reasons than just to bait past Kelly in with this, Kelly's mind whirled with red light. For... every fucking reason. Everything about this weekend, everything feels like it leads to this. It has to fucking happen!\n\nAfter all, it was something she'd promised Stephanie back on Friday night.\n\nKelly took the perverse shape of Brian's rigid dick in hand and steadily jerked him off, guiding him in close to their bodies, even tapping the crown of that girthy slab upon Stephanie's offered butt in meaty slaps. The motion elicited tiny sounds of excitement from the trembling pink-haired girl, and Stephanie twisted to give them both an open-mouthed expression of thrilled surprise, practically panting with delight as her eyes fell on the dick spattering dewy droplets of precum spattering across her own bare skin.\n\n\"Briannn,\" Stephanie pleaded. \"Kelly baby\u2014please!\"\n\nLosing herself again into that lust-induced trance, Kelly drew both of her lovers close, slinking and sliding her body down lower so that she could alternate between lapping greedily at the nectar of Stephanie's blushing honeypot and sloppily blowing the meaty cock she worked in her hand. There was also that nagging compulsion that there was something important she was supposed to do, though.\n\nSomething specific, and her muddled attention turned high up above herself in her mindscape to the black expanse dotted with stars up above. There was a weird dreamy, ethereal quality to that night sky right now, and as she searched within herself there\u2014there was the presence of another Kelly. A different Kelly, the old Kelly was seemingly still up there, shooting on by out in space all on her own like a passing comet.\n\nThe... fuck? Kelly understood very little about actual astronomy, and even less about the potential implications here. Is that\u2014is this\u2014is she REAL, though? Or just some kinda trick of the light, like how distant starlight takes all those eons of travel to become visible to us? A half-forgotten phantom lingering around to haunt me.\n\nShe felt real.\n\nIn fact, the more she zeroed in on that Kelly, the more uncomfortable she became. Though she continued to swap between eagerly going down on Stephanie and vigorously fellating Brian, Kelly's emotional state fell into a feedback loop for several disorienting moments. Feeling both her current and past self simultaneously was... unsettling, paradoxical, and in her dreamscape, the fallen meteorite that was planted snugly in the cradle of its crater caldera was starting to shake, vibrating through some strange force of magnetism. Resonating, maybe, in response to the Kelly from the past that was somehow up there in space passing by far overhead.\n\nOne moment Kelly was attempting to choke herself on the length of Brian's enormous dick, and then the next she lunged in the other direction to softly moan into the wet folds of Stephanie's quivering pink twat with crazed kisses and haphazard licking stabs of her tongue. It was a dizzying back and forth, as if completely torn and unable to choose between her two prizes, because they were both oh-so succulent and enticing and saturated her brain with throbbing red light. Kelly twisting back and forth in increasingly short intervals. She crammed as much of Brian's erection into her mouth as she could, slobbering Stephanie's secretions and her own saliva up and down that glorious shaft, then switched back to relish that incredible pussy\u2014each savory dish perfectly complemented the other.\n\nUhhh yeah okay right. RIGHT. Here we go.\n\nAs it turned out, attempting to engage with her distant past self was less like calling out with a message, and more like zooming in at extremes through a metaphorical telescope. The past in its entirety could only be likened to space. It fell away from her fast, it was really, really fucking big and expansive, and all the individual little moments within were tiny beyond compare. It seemed like any little shift, any tiny lapse in her concentration would lose her specific spot tracking this past Kelly's trajectory, and then she'd never be able to find her again.\n\nFuck fuck fuck. Okay... I've hopefully... got you? Locked in? Connected?\n\nThis intrusion into her past self on the extreme periphery of her senses was crazy\u2014she was already almost a stranger to Kelly. It had been Friday night, back when she knew next to nothing about Brian and Stephanie. The irreplaceable positions they held in her heart here and now were just emptiness over there on that side. A bleak, barren, and silent void, the vacuum of emotional nothingness because of the way past Kelly rebuffed anyone and everyone from getting close to her.\n\nConfronting that emptiness again hurt.\n\nThey were only a few days removed from each other, but she was such a drastically different Kelly\u2014a cocky scene chick, casually chilling against the wall of the convention center hallway. Aloof and detached from the situation, as always. The girl had been wavering back and forth, weighing the merit of Brian's offer for her to room with them.\n\nSure, yeah he was cute, but he also kinda put off these lame harmless beta guy vibes\u2014the realistic part of her doubted he would even wind up getting anywhere with the stuttery weeb girl who was crushing on him. Let alone satisfy Kelly's needs. He'd probably cum in his pants before she could even get them off of him, and that would be that! Although, on the other hand... Kelly also didn't really want to crash out here in public sprawled out in the hallway overnight. It was a tough call to make.\n\nBrian isn't some toothless fucking beta male dude\u2014he just needs a hand to help him climb up out of his pit of fucking suffering! the present Kelly couldn't help but fume at her past mindset. And, Steph isn't some shy fucking little nobody girl\u2014she's, she's EVERYTHING you oblivious fucking ignorant pretentious scene cuntwaffle! Argh!\n\nThe current Kelly wanted to reject this, to shudder with revulsion at how cold and alone and utterly unfamiliar this particular past Kelly felt by force of contrast. A large part of her wanted to just not bother intervening at all, to bid this old Kelly good riddance and just leave the bitch to her own devices.\n\nNo... no, that wouldn't be fair, Kelly furrowed her brows as she attempted to shove her tongue between Stephanie's pussy lips in deep probing stabs. There was no fucking way vagina was supposed to taste this incredible, and as she suckled up every bit of flavor she could she feared it might be addictive. Oh. Uh. Yeah, wouldn't be fair, not with me basically getting handed this good karma here from that future Kelly. Not passing it on in turn would be... bad. Right?\n\nThere was just so much Kelly wanted to convey to her past self, but so frustrating little that she knew prior Kelly would get. She'd simply wanted a hook up back then, her past self wasn't interested in or open to any complications or development whatsoever, and would have laughed in the face of salvation.\n\nGoddamn fucking IDIOT.\n\nKelly's fallen star had long since become firmly embedded in the earth, but now it was trembling as if it would break free, and her impact area was glowing red magma in the heat of this moment. She was delving deeper and deeper inside Stephanie's delicious tight little pussy with enthusiastic slurps of exploring tongue when that fervor of unhinged and uncontrollable lust started to redshift again and completely pushed out all coherent thought. Kelly switched, trailing a strand of saliva as she turned and slid her mouth around the warm thickness of Brian's dick, bobbing her head and hollowing her cheeks with suction. \n\nPursing and then puckering her lips, Kelly locked her brandy-brown eyes with Brian and released inch after inch of his penis with a slow, provocative movement until his engorged cockhead popped free of her mouth with a smacking smooch. The heady smell of sex pervaded the air, and in no time at all the room filled with lewd squelching sounds, Brian's ragged breathing and Stephanie's mewling little whimpers of ecstasy, and the occasional fleshy slap of Brian's meat spanking against Stephanie's ass cheek whenever Kelly needed to gasp for breath.\n\nIt was just about time\u2014Kelly really couldn't hold back any longer, and judging from appearances, her partners had been pushed to the absolute brink. Steph's legs were involuntarily shaking with raw desire, and the imminent need for release pulsed through Brian's tremendous cock. They were both close, so close! She'd done everything she could, and even the tiniest bit more would push them over the edge and be too much. Kelly pointed the head of Brian's dick right into the slippery cleft of Stephanie's slit so that the tip ever-so-slightly parted those flushed lips and withdrew.\n\nOblivious to the fluid smeared down across her own chin, Kelly couldn't help but immediately start frigging herself, fingertips frantically flickering over her own reddened clit that had been positively pining for attention. She came almost right away and in twitching jerks\u2014she might as well have been rapidly toggling a lightswitch for all the strobing flashes of blinding light that rocked through her mind.\n\nThat didn't stop her, however, and she continued to strum a wet mess of herself as she lost her balance and abruptly fell back on the bed beside Brian and Stephanie. Something about this scene was so completely and utterly captivating, waiting with bated breath for that first momentous stroke to plunge into Stephanie. Kelly had done everything she could to work them up\u2014and more\u2014and now as she furiously masturbated even the anticipation itself was getting her off.\n\nWill they try to fight this-this-this point of fucking no return?! She wanted to watch that first momentous stroke plunge into Stephanie, she needed to be here witnessing it happen. All it should take from Brian was a single glance down at that glistening pussy and the dangling string of wetness right in front of that poised penis. All he had to do was push forward ever so slightly, and that eager glimmering pink orifice would gladly swallow up every bit of that dick. Stephanie, after all, was trembling with need, just a tiny twitch away from spasming into uncontrollable orgasm herself.\n\nAre they still capable of putting up resistance, or are they just helpless, prisoners to this passion, longing for that incredible thing to plunge deep into\u2014?!! A series of tiny climaxes shuddered through Kelly like turbulence, and she felt her jaw go slack and one of her eyelids droop as all cognizance fell away and she drifted into a dizzying dreamlike stupor. \n\nThe personal significance of this moment she was sharing with Brian and Stephanie blurred and bled into feeding the insatiable red within her, and her awareness of the situation seemed to deepen, senses stretching out in all directions until she felt almost painfully overextended. Her subconscious blundered on, grasping at the intangible stretches of elapsing time and carefully collecting and consolidating them into the cherished moments she needed to share. \n\nFinally, when a not-quite-all-there Kelly imagined she had gathered up all of intended concepts with her nebulous spectral fingers, she as a result had somehow gotten a complete\u2014well, something. The something was less than a whole moment, maybe, but definitely more than just a memory, and it burned with power and energy like she was clutching a newborn star. It was some indescribable thing she'd taken firm hold of that immediately made her waking mind realize she was completely out of her depth and had no idea what to actually do with it.",
        "I\u2014have no fucking idea how to send memories back in time to the other me! It's too much. It's too much! Searing bright supercharged reds grew too hot for Kelly to behold as magic and emotion melded together into scintillating plasma that threatened to overwhelm her. The temperature grew obscene, the glare of light rose to blinding incandescence, and the thrum of oscillating vibration from before took on a dangerous pitch, red phasing and transforming and flickering between states.\n\nUhhh fuck oh fuck oh fuck! How the fucking fuck fuck did future me DO this?! Kelly thought, beginning to panic as the impossibly brilliant starstuff of captured memories began to deform outwards as if it was about to explode. The moment, this entire short sequence of sexy events captured by her charm power to send\u2014simply could not be contained, and Kelly mentally scrambled to find a safe way to release it before it melted her brain. No, no no no, shit, fuck! I'm losing it!\n\nThere isn't any time! Kelly's thoughts fizzled and crackled into distortion.\n\nShe knew she needed to immediately shunt the detonating moment off to some aimless fucking anywhere, heedless of the consequences! Taking a deep breath\u2014Kelly fired. The condensed starstuff blasted upwards towards the fleeting shape of her past self in a beam-like pillar of pure red brilliance. Sweaty but satisfied with her expended effort, Kelly sagged back onto the sheets, looking on with an adoring gaze of worship right as Brian pushed forward, thrusting into Stephanie.\n\n* * *\n\nThe moment he slid into her, the thoughts and concerns turning over in Brian's head evaporated, vaporizing into forgotten steam in the face of an intense pink heat. Stephanie let out a small sound and seemed to shiver, and all at once he realized that his thighs and groin were pressed up flush against her soft skin\u2014he was all the way in, completely embedded inside of her. Brian blinked in dazed wonder, unable to process his thoughts for a moment, and let his gaze wander up her naked back in appreciation.\n\n\"You... okay?\" Brian asked, forcing himself still. To say it was difficult to think would be a massive understatement.\n\n\"What?\" Stephanie asked in a confused and somehow distant voice.\n\n\"Does it hurt? Are you okay?\" Brian tried to keep the worry out of his voice.\n\n\"It's a much. Lot. Very,\" Stephanie babbled, and it took Brian a moment of deliberating to make sure he was hearing her right.\n\n\"It's so much,\" Stephanie clarified with a tiny laugh, taking a breath. \"You're very\u2014big. It's a lot. Gimme... one second.\"\n\n\"Am I hurting you?\" Brian frowned. There was nothing flattering about being told he was big if he was too big, because then\u2014\n\n\"I'm okay!\" Stephanie squeaked. \"It was just. Uncomfortable? But, in a really really good way. I'm really fine now, I think!\"\n\n\"Uncomfortable... in a good way?\" Brian repeated, trying not to sound like he doubted the contradiction she presented. Stephanie was definitely stretched tight around him, and the sheer engulfing constriction on his manhood was positively strangling. Maybe this wasn't a great idea. We could've... I dunno, worked up to her taking me in all at once or something, we could\u2014\n\n\"It's good!\" Stephanie promised. \"I'm good. Just needed to, um. To adjust, and... now I think everything's perfect. Everything's perfect\u2014I love you.\"\n\n\"Okay,\" Brian paused. \"I love you. You're sure?\"\n\n\"I think... I think so,\" Stephanie sounded thoughtful. With a slow, careful movement she wiggled her hips back and forth, and because he was firmly trapped inside of her, his body moved with her. The action seemed to delight her, however, because the little giggle that followed seemed to travel through her body into his and their intimate connection seemed to deepen somehow. \"I think so! Yeah, yes. I'm\u2014I'm ready, I'm so ready.\"\n\nThere was a weirdly pleasant moment of vertigo when Stephanie turned to glance back and give him a beautiful excited grin, as if he was feeling her turn himself. The room spun a little, and it was like he could feel every tiny bounce over her dangling breasts and her shifting the weight of her hands on the bedspread traveling directly through her body to transfer into his. \n\nAs gingerly as he could, Brian started to ease his way back out of Stephanie's perfect pink pussy. It was more difficult than he imagined\u2014the tightness of her slippery walls seemed to squeeze down on him as if intent on literally wringing his cum out of him. Frighteningly enough, they nearly did. He pulled almost the entire way out of her, and then without hesitation immediately pushed back in, sinking home into that perfect fit again.\n\n\"AuhhhmmmhhHhh\u2014!\" Stephanie exhaled, her fluffy pink hair bouncing as she bucked beneath the force of his thrust. \"Brian oh my God!\"\n\nThe motion felt so good that for a moment Brian felt like he was experiencing psychedelic pink flashes of light, and he nearly toppled over onto Stephanie. Steeling his nerves, Brian fought his way back out of Stephanie again and then finally managed to rock his hips in an unsteady rhythm, each time teetering and wavering on the brink of completely losing himself.\n\nHoly fucking fuck.\n\nIt probably wasn't the most particularly flattering comparison in his mind, but the sensation of actually driving himself into her was like sinking into soft clay. Pressing in was slick and fluid, with no resistance at all. Withdrawing, however, was monumentally difficult because like trying to pull a stuck boot out of soft clay\u2014Stephanie simply wasn't willing to let go. The slap of flesh and suction squelch sound their intense coupling made was even tugging at the perverse parts of his brain with an overwhelming urge to simply fuck her harder and harder.\n\nPicking up the pace, Brian slammed himself into Stephanie, relishing every little detail from how messy with wetness she was to the way her body rocked on all fours to the little panting exclamations she made. It would have been easy to forget about Kelly entirely, with her still lying where she'd collapsed on the bed beside them, but the gratitude he felt warranted her more consideration as bits and pieces of half-formed thoughts sparked and collided around his mind.\n\nTheir situation together had taken on unexpected depth after realizing that for all of the effort Kelly had put in, she was intent on assisting them but not joining them, per se. The distinction was subtle but held a lot of significance to him, because it was a display of sheer dedication, resolution to serve them without taking any real action for herself, and it changed the way Brian looked at her.\n\nThe first impression Kelly had made throughout the weekend was that she was cocky, proud, haughty and more than a little self-absorbed. To his surprise, Kelly really wasn't here for a threesome, she was here just to thoroughly arouse them for each other, and when they were ready\u2014more than ready\u2014she withdrew. Seeing her forcibly reign herself in and work so hard simply so that they could have an amazing first time without her was actually pretty meaningful. It definitely made Kelly being here with them when he took Stephanie's virginity just feel right.\n\nHer presence bolstered his confidence in another additional way, as well\u2014Brian was feeling very new to the polygamous relationship thing and a stubborn voice in the back of his head insisted that being with one girl was like betraying the others. The sliver of self-doubt first became apparent in his brief time alone with Kelly yesterday, but had been alleviated somewhat when contrasting the time he shared with everyone later that night. It had been like being freed of a shackle, because everyone was there and part of it together, so it wasn't like cheating at all.\n\nNaturally, it was impossible for him to elucidate on all of these things and work through them in his head right now however, because every iota of his attention was ensnared in the sensation of fucking Stephanie. Beyond their physical joining\u2014which was sheer unbridled bliss\u2014their union hit even harder on an emotional level. This wasn't about the thrill of scoring\u2014this sex was shared penultimate intimacy, a celebration of what they'd achieved in discovering each other. It was a clear victory within a certain personal struggle he'd been wrestling with.\n\nThe fretful part of him that worried their relationship might be moving too fast had been locked in total war with the impatient part of him that thought it wasn't moving fast enough. After all, their love was more real than anything he'd ever experienced, so what purpose would hesitating serve? Soon they would have to separate, because the convention weekend was already drawing to a close. For a while at least they would have to go back to where they lived apart from each other, back to their ordinary lives, and it was going to be rough. \n\nStephanie is... this is her first time, she's new at this, Brian struggled to even mentally categorize this moment in this weekend. New at this, but she has a... nnnghh, this HUNGER for it. For more. And yeah, she really brings that hunger out in me, too.\n\nUnlike in fantasies where the inexperienced virgin girl inexplicably jumps to perform any and all positions and techniques, Stephanie seemed very content to simply hold herself as still as possible on her hands and knees and let Brian fuck her. He felt a little torn on that\u2014part of him wanted to give her some more encouragement, some positive reinforcement letting her know it was okay to try anything she wanted to do\u2014but then, the rest of him was also just completely satisfied with fucking her right now like this and in all honesty never ever wanted to stop.\n\nShe felt fucking amazing.\n\n\"Ohhh my God Briannnn\u2014!\" Stephanie squealed in delight as he pounded into her with more force.\n\nSex with Kelly had been exciting because of the sheer physicality she brought to the bedroom\u2014he may have been fucking her, but she was actively fucking him back, neither submissive nor dominant and instead simply the both of them exerting themselves as much as possible to get each other off. Intercourse with Emily was completely different simply because of their contrast in size\u2014Emily was a full foot shorter than him and had a petite figure. She was tiny, her unusual and possibly suspicious skill at kegel exercises meant she could grip him impossibly tight, and a not insignificant part of him had been worried he might break her. Which was probably part of the dynamic, because Emily was submissive with a naughty rebellious streak\u2014she begged to be broken. Being with Stephanie right here and now was incredibly new and exciting in a very different way, a different kind of making love than he'd ever had the pleasure of partaking in.\n\nDown there Stephanie felt... incredible, as if her silky soft crush of compression was intent on capturing the flared crown shape of his cock because Stephanie could grip. Several times as he thrusted he was forced to clamp his hands on Stephanie's plush rear simply to pull himself back out of her\u2014otherwise, when he rocked his hips back he tugged Stephanie's entire body back with him.\n\nHell, if I was wearing a condom she'd probably pull it right off of my\u2014OHHH FUCK FUCK FUCK!\n\n\"Steph,\" Brian panted, doing his best to go completely still. His dick twitched on a threatening hair-trigger as if warning him not to dare attempt pulling out. \"Steph, Steph\u2014\"\n\n\"Hmm? Hm?\" Stephanie roused in bleary confusion, turning to look back over her shoulder at him.\n\n\"All of that and we still\u2014\" Brian almost couldn't help but laugh, \"\u2014we stopped and went and got Kelly and we still forgot to get the condom on.\"\n\n\"Oh, shit!\" Stephanie blurted out, covering her mouth with one hand as her eyes went wide.\n\nYou're WAY too fucking cute when you actually swear, Brian thought, and his dick throbbing dangerously in agreement.\n\n\"Do we need to\u2014should we stop?\" Stephanie asked. \"Are we still okay?\"\n\n\"Yeah, yeah,\" Brian assured her. \"We're fine. Didn't cum or anything yet. We just need to grab one real quick.\"\n\nHe carefully began to extricate himself, gently taking Stephanie's perfect buttocks in his hands so that he could push their bodies apart\u2014when Stephanie instead followed him, shimmying back and refusing to let him escape. So surprised he lost his balance, Brian fell back off his knees and onto the bed beside Kelly. Stephanie came down atop him, spreading her thighs slightly as did so and taking his dick deeper into herself then he'd thought possible.\n\n\"Mmm\u2014mh!!\" Stephanie squeaked. \"S-sorry! Are you okay?\"\n\n\"Yeah, I just\u2014\" Brian laughed, struggling to restrain himself as his dick twitched and pulsed again within her. \"Yeah I, uh, you're just so damned tight...\"\n\n\"Sorry,\" Stephanie giggled, wriggling slightly on top of him but not getting up. \"Sorry! Um. Should we... stop and put on a condom?\"\n\n\"I mean... yeah, hah. Unless you want to possibly have kids,\" Brian warned her. It took conscious effort not to grab her by the waist and thrust deep into her, and his hands refused to obey and slid their way up Stephanie's sensuous hips anyways. Ohhh fuck.\n\n\"I... no, I definitely don't want to have kids yet,\" Stephanie murmured after a moment of consideration. \"Right? Unless... it's with you? Brian... you and I would make really cute babies...\"\n\n\"Uhhhhh,\" Brian mouthed in alarm. He was only now realizing how much peril he was in\u2014both for the fact that she was entertaining the idea, and because that dulcet sweet voice of hers was making him consider it. He didn't even know which was more dangerous right now, because maintaining coherent thought at all was a herculean accomplishment in and of itself. \"Steph...!\"\n\n\"I'm... just kidding!\" Stephanie let out a weak laugh, adjusting her legs so that she was straddling him more comfortably but not pulling up off of him. \"Sorry! I thought it would be\u2014is it okay if I tease you like that, sometimes?\"\n\n\"It's just, uh,\" Brian swallowed, \"a little dangerous right now while you're\u2014\"\n\n\"Oh, I know!\" Stephanie gushed in agreement, undulating on top of him in a way that made his entire body tense up. \"Like, it was really scary thinking about it at all, at first. But then, instead now it's... it's different. Is that\u2014is that weird?!\"\n\n\"Steph,\" Brian pleaded in as calm a voice as he could muster. \"Steph, put the gun down. Put the gun down, and let's talk.\"\n\n\"Ohhh, I'm sorry!\" Stephanie exclaimed, rising up off of him in alarm and letting him slip out of her. \"Sorry, sorry. Brian\u2014 I'm so sorry. We'll use a condom! I didn't mean to\u2014\"\n\n\"It's okay,\" Brian assured her with a laugh, recovering his fluids-covered dick that had been momentarily held hostage. \"It's okay, you're fine.\"\n\n\"I was just kidding,\" Stephanie promised with an earnest expression. \"Do you want to use a condom?\"\n\n\"Um,\" Brian paused, because his Chloe-honed sense for detecting questions with hidden meanings was nagging in the back of his mind all of the sudden. He decided to play it safe and carefully return her question to her. \"Do... you think we should use a condom?\"\n\n\"I... don't know!\" Stephanie answered with an uneasy smile. \"Maybe? It was, it was um it was really nice just starting off like that without one, and...\"\n\n\"This is kinda what we get for moving so fast with our relationship,\" Brian said with a wry smile, rising up onto his elbows and pulling Stephanie a little closer. \"These are the kinda things we should've discussed to death already.\"\n\n\"Yeah,\" Stephanie's expression fell slightly, looking wistful and a little sad and dismayed and frustrated all at once. \"Are we okay?\"\n\n\"We are,\" Brian promised, kissing her forehead. \"So. Kids?!\"\n\n\"It's too sudden!\" Stephanie said with an unsure look. \"Right? Or, I don't know. The idea of having kids\u2014of becoming a mommy\u2014wow. It honestly never even really occurred to me, and then when it did, it just... it hit really hard? Because. We're actually doing this. Doing... it. Making love. Having sex. And it's so amazing. I was thinking, um, my mom had always said that I should never... be with a guy if I wasn't okay with having his children because there's always that risk\u2014chance. I mean chance. Risk would be like if I didn't ever want to have your, um, and I think I do? With you? If you want? Not right now this time, but\u2014\"\n\nIt was rare for Stephanie to have so much to say all at once, and Brian found that watching the pink-haired cutie blurt things out continuously was strangely enticing. As if he was witnessing glimmers of an older Stephanie\u2014the Stephanie from way back years ago before her closest friends turned on her and she folded up and retreated deep into herself\u2014coming back to life. He was too fascinated to interrupt.\n\n\"So, so it's this thing, it's this thing and in the back of my mind it always meant never, because like, obviously I'll never meet a guy like that. But, then I met you and\u2014um, wow. This is just. It's just... wow. You make me think about sex a lot, all the time, and then I got to thinking about maybe someday in the future what if we had a family together? Living with each other? What if... we were a mommy and daddy together? Not right away! Just, you know\u2014a someday. Someday. And, it's... the thought of that seems so perfect and amazing that it just, it hit really hard and I'm sorry. I didn't meant to, to scare you, or freak you out, or\u2014\"\n\nBrian leaned in and stole her lips with a mesmerizing kiss, and she beamed happiness and relaxed into him. They suckled and kissed and shared that feeling of solidarity for a long moment before breaking apart again. When they did she looked relieved.\n\n\"I can't believe I just\u2014\" Stephanie blushed intensely. \"Um um forget I said any of that, I, I just\u2014\"\n\n\"I'm not against any of that,\" Brian said honestly, hoping that his sudden inclination wasn't a heat-of-the-moment thing he would regret later. \"Just. It's something we need to discuss together. A lot.\"\n\n\"You're not against... being together with me like that?\" Stephanie squeaked out. \"Having a\u2014being a family together?\"\n\n\"I'm not against it at all,\" Brian replied with sincerity, looking up and down the awestruck girl who made him happier than he'd ever imagined possible. \"It's actually scary how uh, how compelling the idea gets the more I think about it?\"\n\n\"Yeah, I\u2014yeah,\" Stephanie agreed in a breathless voice, grabbing onto him as though afraid he would suddenly disappear and letting her fingers climb up his body to toy with his hair. \"It's so scary how strong this is! But this is\u2014we're, um, this is real?\"\n\n\"Condom this time, though,\" Brian chuckled. \"I'm not against starting a family with you, in the future. But, I definitely want you completely all to myself for a long, long while.\"\n\n\"That's okay!\" Stephanie exclaimed in a giddy voice. \"I feel the same way, I think. It was just\u2014it was just this random thing that popped into my mind, I'm so sorry! I'm surprised Kelly didn't yell at us!\"\n\n\"Yeah, she uh...\" Brian glanced over at Kelly's resting form beside them, appearing all the more beautiful and serene as she slept. \"She really tuckered herself out. I want to make it up to her, later.\"\n\n\"Me too!\" Stephanie agreed. \"She's\u2014I love her.\"\n\n\"You know what she'd probably say about the whole... kids thing though, right?\"\n\n\"I think... maybe I do,\" Stephanie said softly, stroking her fingers through Brian's bangs. \"We'll talk. It's something all of us need to talk about, I think? All of us in this... all of us that are in this together. But, for now... do you want to maybe keep going? With the condom, this time!\"\n\n\"Yeah, of course,\" Brian said, drawing her into another sweet kiss. \"I love you.\"",
        "\"I love you!\" Stephanie's smile bloomed outwards again in an angelic expression that made his entire body feel like it was filling with pink light. \"Just a few minutes ago, I didn't think it was humanly possible to want you any more than I already did.\n\n\"But... I was wrong. I was so wrong.\"\n\n* * *\n\nStephanie decided to insist on fitting the condom onto him, and she took in the sight of his glistening dick with rapt attention. She felt more comfortable staring at the thing now, more familiar with it after having experienced it in some small amount. It represented his gender, it was the most intimate part of him, and being made to fit perfectly into her most intimate places seemed to deserve some reverence.\n\nIt does seem less alien to me now, Stephanie thought as she broke the condom wrapper and took the strange rubbery latex ring out. I feel like I recognize it more, understand it in better ways. It's not that it's looking more handsome to me\u2014I'm just understanding it more. But... it also just looks more and more handsome.\n\nAfter a short moment of determining the correct orientation of the condom, she put it to Brian's crown and carefully started to slip and roll the protective covering down his length. Pink flames of agitated excitement licked up through her as she got it on the whole way, and the notion that now they could fuck without any restraint at all appeared, despite the obvious fact that forgetting the prophylactic earlier already hadn't stopped them from acting with total disregard.\n\n\"I-it's on,\" Stephanie wet her lips. \"I think?\"\n\n\"Yeah,\" Brian confirmed. \"We're good.\"\n\n\"How do you want to...?\" Stephanie's eyes slowly climbed up his naked body to meet his gaze as distracting towers of fire rose up within her again.\n\nHe answered with lips and tongue and Stephanie swooned into him because that was always the right answer. Her mouth seemed to melt into his and it felt like she was venting brilliant pink plumes of excess lust out into him. At the same time, Brian's desire continued to feed into her, explosively flammable feelings tinged with the excited inclinations of what he wanted to do to her, flavors of lust and aching need that lit her up inside with continuous little reactive bursts of emotion.\n\nThey tumbled down onto the bed like the collapse of a burning edifice\u2014Brian atop her\u2014and glowing embers danced up into the air on swirls of pink smoke. Hands found her breasts and grabbed them possessively, his every ungentle touch a backdraft rush of fresh air to her hungry fire, and Stephanie mewled and quivered into their kiss as he plucked at her nipples. She was fighting to get at least one of her legs out of the way so that she could open herself up to him, her hands were clawing at his back, and the pinch of his fingertips twining about the sensitive swollen nubs felt so good that it hurt and all she could think was that she wanted him squeeze them even harder, to tweak them, pull them, lavish them with the tactile attention they desperately craved.\n\nFinally she managed to free herself enough to spread her thighs wide for him, and her hands scrabbled down to reach between them. They needed to be joined in every way, she absolutely needed him inside of her for this moment to be right, and as their kiss finally broke so that they could both gasp for breath, Stephanie managed to line up the rigid extension of him. Brian pushed inside her without hesitation and it was magic. She shuddered and her vaginal walls clamped down around him in response but still gave way as he inexorably slid deeper and deeper inside of her until she was completely molded around his shape.\n\n\"Auhhhh\u2014!\" Stephanie let out a sound as she let her tangle of pink hair flop back against the bed, and she rewarded Brian with a brilliant smile.\n\n\"Stephhh,\" Brian let out a husky murmur that was the new most beautiful thing she'd ever heard.\n\nThey both paused for a moment to simply enjoy the feeling of being connected to one another, and then Brian reared back slightly, taking care to arrange Stephanie's raised thigh in front of him while her other was trapped down beneath him. Their new position was sexier, more thrilling somehow, because facing Brian she could see what he was doing to her\u2014and what she was doing to him\u2014so she became both captive audience and total prisoner to their act of consummation.\n\nBrian drew back with a tilt of his hips, pulling partway out of her, and then shoved himself back inside of her with a thrusting jerk that slapped across Stephanie's senses like a blast wave of pleasure and satisfaction. She'd just made up her mind to speak up and tell him how amazing that felt because it was incredibly important that he knew how effective this particular angle and position and motion were\u2014when Brian hauled back and drove himself home into her in another massive thrust that rocked both of their bodies. And again. And again.\n\nStephanie's mouth fell open and she could only regard him with what must have been a stupefied look as he slammed into her over and over and over. It felt too good, it was too much all at once every single time, and the act was continuous. The blazing conflagration within her was stirring up into a maelstrom of flame that wreathed all of her senses, he was fucking her harder and harder, his body clapping against hers with the sheer force of it, and Brian wasn't stopping.\n\nThe physical piledriving piston motion of him pounding into her forced her to spread both arms out across the bed for balance, it had her small breasts bouncing and her pink tresses swaying back and forth and it was pressing little gasps of pleasure out of her. The wildfire of color inside of her was growing more intense, was graduating into a roiling inferno of heat and hunger and Stephanie wasn't sure she would ever be the same again after this.\n\n\"Bri\u2014 Bri\u2014\u2014Bri\u2014aaaaann\u2014\u2014!\u2014\u2014\u2014!\u2014\u2014\u2014\u2014!\"\n\nPink light guttered and danced within the depths of her pupils as Stephanie panted with delight. They were doing it. She knew that they had been doing it before, but now they were really, really doing it. Having sex. Fucking. Their frantic coupling was already intense enough to shake both of their bodies and rock the hotel bed, but tapping into Brian's emotions was stirring Stephanie up even more.\n\n\"Brian, that\u2014that feels so good\u2014!\" Stephanie exclaimed as he fucked her with all the strength he could bring to bear. \"Briaaannn\u2014!\"\n\nIt was bright now inside her head\u2014so bright that the empathic connection that linked them seemed to reveal more and more of him to her. Desire streamed into her so thick it was almost physically palpable, and flavors of yearning, possessiveness, scarcely-suppressed masculine dominance exploded in brilliant firework displays. More than anything, attraction, appreciation, and an enormous feeling that could only be described as love poured into Stephanie like jet fuel, accelerants feeding into her until her flames were nearly apocalyptic.\n\nSo pretty...! Stephanie thought in a well-fucked haze. Is all of this...?\n\nWhen she really focused, the flowing currents of each of his emotions followed distinct pathways, and when she thought to take it all in at once for perspective and witnessing him in his entirety... Stephanie could almost make something out. A larger picture, a meaningful... something. Rational structures that seemingly shaped the twists and turns or each individual emotion she felt him express.\n\nShe couldn't understand what he was thinking\u2014that didn't seem to be her gift\u2014but as she traced the sweeping drafts of his feelings, a framework pattern of some sort was roughly discerned. Her sense of Brian was now sprawled out like a labyrinth, it was wondrous and intricate but also baffling to her, completely unlike the more natural representations of Emily and Rebecca and Kelly. There was a fascinating beauty to the broad complexity of his mind, packed full of convoluted interworkings she had no way of understanding.\n\nHe's so... contained, Stephanie thought, bewildered and interested and not at all sure what it meant seeing him in this fashion. All she knew was that she wanted to see more and more.\n\nOr, maybe constrained? It's like... like when you read between these emotions to see their overall placement, the parts of him I can't see are made up of boxes and angles and lines and there's some kind of GEOMETRY to it! It's like there's a hidden construct that I can't quite grasp, I can only feel out its shape by the drafts of airflow that feed into me. But, even then it's this weird mazelike... SOMETHING, and some of his emotion just has nowhere to go and goes into these cold, inert little dead-ends. It's so... PECULIAR.\n\nBrian's thrusting into her was satisfying to extremes she would have considered exaggeration before having experienced this for herself, and something about this grand moment had stoked the pink fire within her up to new heights where she could see Brian's inner self laid bare. This glimpse deeper into him was mesmerizing, and the immediate conclusion to draw was... that Brian wasn't elemental in nature. Not in the dreamscape, at least. It was difficult to tell at first, but he definitely couldn't be summed up by fire or water or even earth or stone or mountains or a concept like area or territory.\n\nNo, Brian is... he's a city!\n\nThe revelation took Stephanie's breath away, and her mind whirled and flared, burning to decipher what every nuance of this meant.\n\nBrian is like... the abstract concept of a city, untethered from ideas like population or permanence. I think, Stephanie thought to herself in a semi-delirious daze. He's like... he's like a place. A place that becomes MORE than just a place, in the same way that a HOME is more than simply a house. He has these avenues, avenues that bring many disparate things to come together and become something greater, a place for them to belong. For us to belong. Belong not in the sense that we are owned, but in the sense that this is the place to call our own.\n\nThat's what Brian is\u2014a someone to call my own. He completes me. Us, Stephanie let out a small whine of pleasure as he drove in particularly deep, pressing down into her with the weight of his entire body. W-we complete each other. All of us\u2014 Kelly, Emily, even Rebecca!\n\nStephanie felt overcome with emotion at the thought and wanted to wrap everyone up in the heat of her love endlessly. I could maybe burn upon many different things out in the unknown wilds\u2014but Brian gives me MEANING, makes me MORE. I want to light up and explore every corner of his city, I want him to become our home forever and ever. Right here, just like this. Here with him, I can be the fire that forges raw starmetal into something TRANSCENDENTAL. I can help boil the waters pure for him so that she can complement everyone's particular unique design in her own ways. And with this just ENDLESS supply of timber that we've\u2014uh\u2014\u2014that we've\u2014\u2014\u2014\u2014!\n\n\"Ohh fuck oh fuck right there don't stop don't stop please, please right there\u2014\" Stephanie found herself crying out, and she completely lost track of the beautiful series of metaphors she just begun to grown so enamored with. \"Right there, right\u2014HARDER, HARDER\u2014OHH FUCK-K! FUCK ME FUCK ME fuckmefuckme oh yesss FUCK-K\u2014KK!!!\"\n\nHer lover obliged and became even more generous, slamming into her so violently hard that when she began to cum it was just pink flashes and terrible, delicious heat. Stephanie moaned and shuddered and rocked out the onslaught with an inarticulate scream, clutching onto his gorgeous shoulders for dear life as he delivered a few last pounding strokes of finality. She clenched and quivered as he joined her in orgasm, relishing the feel of the shaft embedded within her as it flexed and pulsed.\n\n\"Hnnng\u2014oh my God,\" Brian breathed out as he shuddered into her. \"Steph\u2014!\"\n\n\"MMmmhh,\" Stephanie barely managed a noise of agreement. \"Brian\u2014Brian, I\u2014!\"\n\nWith a small groan he wavered back and forth like his balance was out of alignment with the tilt of the Earth, and finally fell onto the bed beside her. Then they simply naked in each other's arms, chests rising and falling with exertion as they each reached out for one another. She couldn't see anything amiss or out of the ordinary, but felt just sure that heatlines must be rippling off of their bodies and into the air. The moments just after sharing this climax with Brian were both serene and surreal in the beautiful clarity of everything.\n\nThey were together; this was happiness.\n\n\"That was... incredible,\" Brian struggled out his words.\n\n\"Incredible,\" Stephanie huffed in agreement, touching her cheeks to realize that she was smiling so hard that her cheeks felt strained. \"Amazing. Incredible.\"\n\n\"Yeah, just... yeah,\" Brian murmured, combing fingers through her bangs to gather her now very unkempt pink tresses up and out of her eyes. His apparent inability to articulate well in this moment somehow made him even more endearing to her. \"Whew. Incredible. I was already close, but Jesus when you started swearing... I think I just lost it.\"\n\n\"Swearing?\" Stephanie blushed, blinking at him in amusement. \"I wasn't swearing!\"\n\n\"You weren't?\" Brian only managed to give her a muddled look. \"No, you definitely were. You said\u2014what did you say?\"\n\n\"I have no idea!\" Stephanie giggled, leaning in to give him a rather sloppy kiss. \"It was too incredible.\"\n\n\"Yeah, definitely,\" Brian smiled at her, tracing a hand down her cheek. \"Was it okay for you?\"\n\n\"Was it okay?!\" Stephanie blew a raspberry and kissed and licked at his lips, finding herself still too out of breath to lock into the deep sort of kiss she felt he deserved. \"It was a lot more than okay!\"\n\n\"I meant\u2014you know, did it hurt at all?\" Brian's concern was evident on his brow, and she hurried to kiss that away, too.\n\n\"It felt too good to hurt,\" Stephanie promised.\n\nTo her own surprise, she really meant it. It had hurt a little, at first, but then it had also felt so amazing that the hurt was absolutely so smothered beneath pleasure that she wasn't sure she'd have been able to find it again even if she set her mind to look for it. \n\n\"You're\u2014you're amazing.\"\n\n\"I love you,\" Brian said, pulling her even closer until she was crushed up against his bare chest.\n\nIt was exactly where she wanted to be, and snuggled herself in even closer, burying her face into his neck. Stephanie felt overwhelmed, because she wasn't sure exactly what all it was that she felt, only that it was too much to just be called love.\n\nIt was mania, it was obsession. It was the veil of heartache she'd been carrying for so many years lifting, and the belief that it would never have to weigh her down or dampen her flame again. The pink light she'd resolved to share with him forever burned so bright that there wasn't any room for darkness or doubt. Everything was just so straightforward and clearly illuminated\u2014Stephanie could feel the way he loved her, and the sheer conviction of it became a foundation so impossibly broad that she couldn't fathom ever questioning this. She felt that just now they'd opened up to each other in new ways again and again and that each time they found that they fit together like they'd always been meant for one another.\n\nA city, Stephanie mused, turning the discoveries over in her thoughts and finding them more and more to her liking. I can't wait to tell the others! A city and a fire. A river and a forest. A star, stolen down to earth. I don't know what any of it means, except that it all means so much to me that I could cry. All of you do. I love you.\n\n* * *\n\nRebecca felt another tremble working its way down her body and she turned away from her friends. Her hands were already buried in the lap of her tunic, but if another wave of that coursed through her it would look less like she was sitting next to the lounger in a somewhat awkward position and more like she was\u2014 \n\nOhh no no no no stop stop STOP! Rebecca squealed to herself. Not fair! NOT FAIR! You, you GUYS. It's\u2014you're\u2014how do I stop um um RECEIVING?! What you are doing is PERSONAL and it's just just just spilling out EVERYWHERE and please please please please\u2014!\n\n\"Oh, man. Oh, man this is rich. This is too rich,\" Emily's eyes were practically glowing with glee as she stared down into her phone. Her digital keypad was open and she was tapping in words at bewildering speed. \"Posting your victim bullshit on my AnimeCon forums? Where you have uhhh let's see, two posts? This is your second post, while I have hundreds and hundreds of posts in the community boards and AnimeCon people actually know me there? And you somehow think you're gonna just go uncontested on all this?!\"\n\nTrying and failing to focus on what Emily was doing\u2014because it was surely really interesting if she could just pay attention\u2014Rebecca gnawed on her lip and tensed her shoulders again. Another flash of pink heat boomed in her mind like a gout of fire, and then another, and no matter how much Rebecca mentally withdrew that firestorm just kept spreading and spreading.\n\n\"Rebecca?\" Megan asked, putting a hand on her shoulder in concern. \"Are you alright?\"\n\n\"I'm okay!\" Rebecca squeaked out in a small voice. \"Just\u2014need to visit the ladies room soon!\"\n\nWhat she actually needed to do in the privacy of a ladies room was in fact pull back the hanging edge of her tunic, shove down the viking trousers and the smallclothes she wore beneath and masturbate with wild abandon. Rebecca's middle two fingers needed to issue frantic relief to this overwhelming pink feedback she was unintentionally receiving. Rampant arousal was issuing throughout the dreamscape forest like choking clouds of thick smoke, because Stephanie was getting fucked. Stephanie was getting fucked, and whatever her charm power was, it seemed to be throwing sensual secondhand signals through Rebecca's body that were making her clammy with sweat.\n\n\"You're on the A-Con forums too, Emily?\" Megan took out her own phone. \"What's your name on there?\"\n\n\"I go by 'Cerulean,' for Cerulean Cosplay,\" Emily said, still distracted by tapping out a lengthy response into her phone. \"You should get in on this thread, too. Chloe barfed up this completely bogus sob story, think she's trying to get Brian removed from the con.\"\n\n\"Ugh, Chloe again?\" Megan made a face. \"I don't even know her... but the more I hear, the more awful she seems.\"\n\n\"Oh my God\u2014you have no fucking idea,\" Emily groaned in exasperation.\n\n\"My username is 'Megan-no-Megane,'\" Megan revealed. \"It doesn't actually make sense in Japanese, it's just a pun 'cause\u2014\"\n\n\"'Cause you don't actually wear glasses?\" Emily guessed. \"Niiice.\"\n\n\"Um um I'm going to go find a ladies room!\" Rebecca exclaimed, squirming up to her feet.\n\nThe phantom sensation was rolling across her in a steady throb now, and Rebecca could almost physically feel Stephanie being fucked. The invasive pink flames had spread throughout vast swathes of the dreamscape forest and each tantalizing lick and lap of pink upon her naked branches was illuminating the rich browns of Rebecca's native charm color and causing some sort of reaction.\n\nOh no no no no you stay away from my um, my\u2014\n\n\"Uhh, okay,\" Emily gave her a curious look. \"You alright?\"\n\n\"Gotta go, gotta go!\" Rebecca called out in a small voice as she fled towards the hotel lobby. Surely there's a public restroom SOMEWHERE here\u2014there, there HAS to be!\n\nThe forest fire wasn't burning her, and what it was transmitting through the oaken trunks and bared branches wasn't heat\u2014it was emotion, it was primal expressions of lust that were absolutely overpowering in their natural simplicity. The joy of really great sex strummed through Rebecca's mind in a steadily increasing cadence she knew all too well, and she nearly stumbled as she threw open the hotel's poolside door and escaped inside.",
        "You\u2014you you guys are going to be in so much trouble!! I'm\u2014oh please please yesss no STOP STOP\u2014I'm going to be, to be so cross with you both! When I get my finge\u2014um, my hands on you! SO MUCH TROUBLE!\n\n<blockquote>\n\nPart 11 will be posted soon as I see Part 10 go live!\n\nHuge thank you to my supporters for making my writing possible! Aihnman, alethiophile, andy may phan, Angel Sworn, Anonguy, Aodean, Bill Johnson, Brian Czisny, Caleb, Chris, Conner Nay, Davin Taddeo, faraday, Garen McGhee, godoffaer, I. Ronical, jb qspam, Jeanie6754, jmundt33a, Joel Robinson, Julius Cheeser, JustAChair, Kibbleguy, KingofClubs8129, Kimu Taka, kognar, Lety Does Stuff, Luke Mofford, Miss Stephanie, Montugar, MountHermon, Mundane, NyarlathotepB, Overlord_Grimm, Paul Wirtz, Phillip Rayne, QuietDistress, Scarnem, Th1Alchemyst, The Epitome of Eccentricity, TiAM325, Tomas Wood, venef, Vowron Prime, William Foster, YellowLotr and especially Foxy!</blockquote>"
    ],
    "authorname": "FortySixtyFour",
    "tags": [
        "cosplay",
        "first time",
        "threesome",
        "oral sex",
        "handjob",
        "cunnilingus",
        "magic",
        "meta"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/animecon-harem-pt-10"
}