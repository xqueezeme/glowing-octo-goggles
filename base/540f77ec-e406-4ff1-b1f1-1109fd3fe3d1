{
    "title": "When Worlds Collide Ch. 12",
    "pages": [
        "Cedar ran her eyes over the open ground of the evacuation site and tried to pierce the boundaries of the trees in the distance. She was looking for any sign of vampires. Not that she would see them if they were there. They could move so fast they would be on her before she had time to realise it if they chose . But still she looked because there was something so fundamentally arrogant about the bloodsuckers. They wanted you to see them coming. They were so sure of themselves that she wouldn't put it past them to slowly walk out of the trees and stroll casually towards the series of caves she was sitting in front of.\n\nShe shifted slightly as Millie came to the cave mouth and stood at her side. \"You shouldn't be out here, Millie,\" she said quietly. \"The others are checking out the perimeter just inside the tree line. They'll be back soon.\"\n\nThe Alpha Bitch snorted in annoyance, her hands resting on her stomach, her cobalt eyes staring off into the distance. \"I hate this endless waiting, Cedar,\" she answered softly. \"The not knowing. I feel so helpless and I want to be doing something.\"\n\nThe blonde woman swung her head around and smiled gently. \"You are doing something, Millie. The others are so much more settled because you're here. They feel safer having their Alpha Bitch around.\" It was true. Although frightened about their families back at the compound, the elders had rallied considerably having Millie in their midst. The children were smiling a bit more as their Alpha's mate moved among them, spending a quiet moment with each group, admiring their paintings or model constructions that were being used to keep them occupied .\n\nMillie sighed deeply and stroked her stomach lightly, her eyes clouding in worry. She knew what Cedar said was true but she still couldn't help the way she felt. All her family were back at the compound. Jared was back at the compound and she wanted to be with them, just in case the unthinkable was to happen.\n\n\"Millie, you do know you can't shift,\" Cedar suddenly said, her gaze intent on her Alpha's face. Millie's startled expression made her curse out loud. \"No one told you?\" she groaned out loudly. \"Luke or Jared never thought to bloody mention it?\"\n\nMillie stared at her perplexed, her hands tightening suddenly on her stomach. \"Because I'm pregnant?\" she whispered with a horrified expression on her face.\n\nCedar nodded. \"You can't shift in your first trimester. It's exceedingly dangerous to the babies and can accidentally abort them. It's fine once you hit your second trimester. I can't believe neither of them thought to tell you that.\" Her tone was furious, a deep frown on her face.\n\nMillie laid a hand on her shoulder to soothe her as she digested the news, her initial shock dissipating. \"The circumstances haven't really been conducive to lending time to sitting down and discussing more mundane pack matters.\"\n\nIt was Cedar's turn to snort, clearly still angered. \"This is hardly mundane, Millie. Luke should have mentioned it even if Jared was too wrapped up with the vampires for it to enter his mind.\"\n\nMillie smiled slightly and sighed again. \"Perhaps they were waiting for my second in command to instruct me in the more female aspects of being a pack member,\" she said slightly dryly. She tried to soothe the blonde woman even as she shivered inside. If something bad were to happen here she wouldn't be able to help if she couldn't shift. \n\nThe sight of three large wolves coming out of the trees brought both of their attention back to their immediate surroundings. The wolves raced over to the waiting women. All three shifted to human form and Cedar noticed immediately her brothers' anxious expressions. \n\n\"Vampires,\" Connor said tersely. \"At least three scents. There could be more.\"\n\n\"Millie, get inside,\" Aaron ordered softly. \"Keep Jen inside, no matter what happens.\" His eyes flickered to the cave briefly where his mate was currently helping to amuse some of the younger children. He wanted her to be safely inside when the vampires came.\n\nCedar was stripping off her clothes, a deep frown on her face. Her heart pounded in fear as she looked at her brothers. \"Three,\" she echoed. With one vampire maybe they would have stood a chance but three?\n\n\"They're playing with us too,\" Brody growled angrily. \"They're letting us know they're there, giving us time to get back and warn everyone else. They're arrogant bastards; sure they're going to be able to take us out easily.\" Her eldest brother actually looked insulted by the vampires' behaviour. Still, he was just like Aaron, always thinking he was indestructible.\n\n\"Cedar, let me lead, \" Aaron said urgently. \"I know what Rafe said but you know Jared and Rafe are the only two who can best me in a fight.\"\n\nShe stared at her youngest brother and shook her head. \"You will stay at the cave, Aaron,\" she said firmly. \"Guard the children, guard Millie and Jen.\"\n\nAaron growled furiously at her. \"I have more experience,\" he argued.\n\n\"You have your orders,\" Millie said firmly. \"Both from Rafe and also from Cedar. No one doubts you, Aaron. You're just needed in a different capacity today.\"\n\nHe growled again and lowered his head to hide his fury from the Alpha Bitch. He knew he had to do what they said but it infuriated him not being in the first line of defence. If anything happened to Cedar or his brothers he would never be able to forgive himself that he hadn't helped them as he should have. It was on the tip of his tongue to start arguing again but then Jen came out of the cave.\n\n\"What's happening?\" she asked worriedly seeing their tense faces. Aaron took one look at his mate's frightened face and strode over to her, wrapping his arms around her tightly.\n\n\"The vampires are coming,\" he said quietly, feeling her shiver in his arms. \"Go inside with Millie. Stay there, Jen. I will be right here at the cave mouth. No one will get past me, sweetheart.\"\n\nShe clung onto him for a moment, fear coursing through her body and then she straightened and looked into his face. \"Don't get hurt again, Aaron,\" she whispered softly.\n\nHe leaned down and kissed her gently, stroking his fingers in her hair. \"I'll try not to,\" he sighed. \"Now inside.\" He shooed his mate back into the cave and turned to Millie. \"You too, Millie.\" He watched them go back inside and then turned to watch the tree line, waiting for the vampires to break through. \n\n\"Love you,\" Cedar said quietly, not looking at her brothers. She couldn't look at them, too afraid to see the worry on their faces. She wanted to remember them as she was used to, laughing blue eyes, shaggy blond hair, play fighting with each other like overgrown kids. Those were the memories of her brothers she would always hold dear.\n\nAaron's arm slid around her shoulder and he kissed her on the top of her head. \"Love you too,\" he said quietly, Brody and Connor echoing him with their own quiet declarations. The three vampires broke the trees and began to slowly walk towards them.\n\n\"Shift,\" Cedar whispered as she watched death approach and prayed that someone would come to save the children, to save Millie and Jen. The siblings shifted and headed towards the approaching enemy.\n\n_____\n\nAlexei raced through the trees, surprised to find the scent of Graves' crew so fresh. They should have been at the evacuation site well ahead of him. He wondered who Graves' had sent. If he was lucky it would be Aben. He always liked to toy with his prey and had a flair for the dramatic. Alexei could be in time to stop the slaughter if Aben was running the show.\n\nHe entered the clearing just as the wolves were almost on top of the three vampires. He blurred, circling Graves' crew and coming to stop in front of the approaching wolves who snarled viciously at him. \"Oh, give me a break,\" he said drolly turning his back on the wolves and looking at the three vampires.\n\nAben, as he'd hoped and two younglings. There were only four wolves of fighting ability at the site. They would be slaughtered. He pinned the two younglings with a cold, hard gaze, seeing them flinch. He smiled slowly. They were barely a couple of decades old. Easy to influence for an elder of his standing.\n\n\"Go,\" he said quietly. \"I grant you another chance at life. You have three seconds to decide.\"\n\nAben hissed loudly, his hand coming up in a halting gesture. \"Hold!\" he barked furiously. \"If you listen to him I will kill you myself once I have taken care of this traitor.\"\n\nThe two younglings appeared torn, looking at each other and then back at both elder vampires. It was as if they couldn't decide which one to listen to. They watched the blond vampire carefully as he began to laugh softly as he met Aben's icy glare with more than a hint of amusement in his eyes.\n\n\"You always did think above your station, Aben,\" Alexei laughed softly. \"I've been wanting to kill you for a long time but didn't want to answer to the Council for it. Now I don't have to.\" He turned back to the two younglings and smiled softly.\n\n\"I was one of three who took out Janick's coven,\" he said silkily. \"I'm sure you will have heard the tale despite being so young. I give you this one last opportunity to leave. It is your judgement call who is the most lethal out of myself or Aben. Choose wisely.\"\n\nOne of the younglings broke, turning and flying back towards the trees. Aben reacted just as Alexei had expected him to, he turned to deal with the fleeing youngling leaving just the other youngling before him and the snarling wolves.\n\nAlexei shook his head as he kept the youngling's gaze pinned with his. Even for one so young he could still kill the wolves. And he had given the other youngling his word, that she would have the chance of life if she left. He never broke his word, ever. He had a split second to make a decision. Allow Aben to kill the youngling and save the pack or find some other compromise.\n\nHis gut reaction was to leave the wolves to their fate. He could stop the worst of the death when he came back but something was teasing his nostrils, some unknown spicy scent getting under his skin. He turned his head slightly, looking at the golden coloured wolf whose eyes were fixed on the youngling. Lemon grass, sweet and spicy and very appealing. He shook his head again and growled softly, his eyes once more going to the youngling. \n\n\"Go for the chest cavity and the limbs, it will disable him enough to put you on an equal footing,\" Alexei said softly before he took off after the other two vampires.\n\nThe wolves sprang instantly, ripping into the vampire and then spinning away from his grasping talons. Brody attacked again, hooking his claws deep into the youngling's chest and ripping down as Connor caught his left arm in his strong jaw and pulled fiercely. Cedar circled behind the vampire, raking her claws down his back as he fought to escape her brothers' assault from the front. The youngling shrieked and fell to his knees, thrashing wildly at them but managing to miss with each frantic movement.\n\nThe blond vampire had told them how to defeat a vampire! Cedar was stunned even as she sprang back at the youngling and ripped her teeth into the back of his neck. Connor's powerful jaws wrapped around the front of the vampire's neck almost colliding with Cedar's.\n\nThe vampire was frantic, jaws snapping wildly as he tried to sink his teeth into Connor's fur but Brody jumped and gripped his hair yanking his head back, leaving him completely exposed to the other two wolves.\n\nA long guttural cry of agony ripped from the youngling's mouth as Cedar and Connor's jaws tightened into powerful clamps around his neck. Brody yelped in surprise when he realised his siblings had severed the vampire's head and he was holding it in his mouth by the hair. He tossed it away with a loud growl and threw his head back and howled in victory.\n\nCedar shifted immediately, running back towards the cave. \"Aaron, have Millie try and get through to the compound,\" she yelled. \"Try Annie or Lacey's cell phones. Let the pack know how to take down the vampires!\" She was still stunned that they had taken out the vampire with no injuries at all. Why had the blond one told them how to do it? It didn't make sense. For centuries the vampires had had the upper hand against the packs. Now they would be more evenly balanced with their natural enemy. \n\nAlexei caught up with Aben and the youngling just as he was about to sever the girl's head. He was on the dark haired elder before he could do so, sinking his fangs into his neck and digging his talon's into his throat. The two elders crashed into the trees as Aben flew backwards, trying to dislodge Alexei, but the blond wasn't the Council's best enforcer for nothing.\n\n\"Did you really think you stood a chance against me, Aben?\" Alexei growled softly, ripping an arm almost causally from the other man who screamed in agony and fell to the forest floor. \"I don't even need to break a sweat to kill you,\" he continued walking around him, grasping his head in his powerful hands.\n\nAben glared balefully up at his executioner his lips curling in a sneer. \"I didn't think I'd see the day when you of all people would kill your own kind to protect dogs, Alexei. How much thought did you put into your decision to turn traitor to our people?\"\n\nAlexei smiled softly, his brown eyes twinkling with amusement as he ripped Aben's head from his body in one sharp movement. \"None at all, Aben,\" he answered the severed head before he tossed it away with a disgusted sigh and turned to look at the youngling. The girl was healing, her eyes bewildered as she stared up at him.\n\nGod she was so young, possibly just past her teens when she was changed to this life. Her green eyes were frightened, her shoulder length brown hair wild around her face as she waited to see what he would do. Alexei sighed again and crouched down beside her running his eyes quickly over her injuries. He held his wrist out to her. \"Drink,\" he commanded quietly. He watched shock cross her face for an instant and then she sank her fangs into his wrist and pulled at his blood. He let her feed for a minute or so and then pulled his wrist back.\n\n\"Why?\" the girl whispered, lying back and letting his older, more potent blood rush through her system, healing her quicker.\n\n\"You had the sense to leave,\" he answered sitting down beside her and resting his back against a tree. \"You obviously are not just another mindless drone kicked out by Graves and his cronies. Plus, there is only one thing about me that anyone can truly count on in this life. If I give my word, then I keep it. It is a wise lesson to learn, youngling. If you give your word, no matter what it is, you stick by it always.\"\n\nShe considered his words silently before she nodded her head as she pushed herself back up to a sitting position. She looked at Aben's dead body. \"That is what he didn't understand,\" she remarked softly. \"He called you traitor but you were simply keeping your word, given to someone else.\"\n\nAlexei arched an eyebrow at her, a genuine smile crossing his lips as he gave her an approving look. \"You learn fast, little one,\" he sighed. \"I gave my word to protect the pack. It doesn't matter how distasteful I find the task. I do as I promised I would.\"\n\nThe girl was silent again for a long time and then she sighed softly and frowned. \"He Sired me,\" she nodded at the dead vampire. \"What do I do now?\" She looked expectantly at Alexei who also frowned deeply at her words.\n\n\"Don't look at me,\" he growled in irritation as he saw a hopeful look in her eyes. \"I do not have the time or the inclination to mentor a youngling to maturity. You may stay with me for now if you can give me your word to not harm the pack, but after that you must find another to mentor you. My brother Andrei has a club which our kind frequent. I am sure he can find someone who is willing to take to you on.\"\n\n\"Thank you, elder,\" she answered with a bright smile crossing her face. \"I give my word to help you protect the pack until your assignment is concluded here, then I will speak with your brother about helping me find a new mentor.\"\n\nAlexei watched her for any sign of deception and found none. She really was fiercely intelligent for a youngling, not only intelligent but keen to be moulded and shaped into a decent vampire. She would go far among their kind if he or Andrei could situate her with the right mentor. \n\nHe snorted suddenly and rolled his eyes. Why the fuck was he even getting involved with her at all? She was a bloody youngling. He usually ignored them with a vengeance but somehow being around Caleb's youngling so much was messing with his usual thought processes. It was hard to view younglings as non entities when both Caleb and Demetri fussed over the little redhead so much and treated her like she was something truly precious. Demetri was also ready to Sire his human which would mean another youngling being raised and treated as an equal. It was unnatural and irritating as hell and it was starting to rub off on him, much to his annoyance.\n\n\"Come, we need to go back to the pack. Make sure they are okay.\" He stood abruptly, holding out his hand to the girl and watching her intently as she accepted it slightly nervously but rose to her feet. \"What is your name?\" he asked her as he let go and turned to head back to the evacuation site.\n\n\"Emily,\" she answered trailing behind him. She watched his powerful back intently as he moved with such grace and beauty. He really was a huge, intimidating elder and she knew she was lucky to be alive. Most probably she would be dead now if any other vampire had arrived to protect the dogs. She owed him and she wouldn't let him down. \n\nShe wasn't so old that she had lost all of her humanity yet, no matter how much Aben and Graves had tried to beat it out of her. She could look at the dogs and see them as people with thoughts and feelings. It was easy to promise to protect them because it was fundamentally against her nature to hurt anyone, especially when she was still human. \"I don't know your name,\" she finally said.\n\n\"Alexei,\" he growled softly as they broke the tree line back into the open ground. His keen gaze quickly took in the dead youngling and the wolves standing before the cave entrance. They all appeared to be accounted for and he stifled down a sigh of relief. He had saved them as he had been tasked to do so. But he had told them how to kill his kind. He had no illusions that the information had been transmitted back to the compound already. If the Council found out what he had done he would lose his head instantly.\n\nBrody and Connor growled loudly when the two vampires reappeared in the distance. They were still in wolf form, though Aaron and Cedar had reverted to human form and dressed again. Millie and Jen had come once more to the cave entrance and they all stared at the vampires with distrustful gazes.\n\nCedar pursed her lips and rolled her shoulders. \"Stay here,\" she said to her brothers as she took a step forward.\n\n\"What do you think you're doing?\" Aaron growled grabbing her arm and pulling her backwards.\n\nShe turned slightly annoyed eyes to him and pulled her arm away. \"We can either stand here and stare at each other or one of us can go over there and talk to them,\" she said coolly. She looked to the Alpha Bitch for backup and saw her frown deeply. \"Millie, you can't go. It's too dangerous for the babies. I think a woman better go because these lot have too much testosterone at the moment. I don't think Aaron wants Jen heading out there so that leaves me. Plus, Jared put me in charge of all of your safety so it's my call.\"\n\nAaron growled loudly at the mention of his mate going even as Jen stepped forward squaring her shoulders. \"I've stood toe to toe with Graves before,\" she said in a strong voice. \"I'm not afraid to stand toe to toe with another vampire.\" Her expression was fierce.",
        "\"I will tie you up for the next five decades before I let you anywhere near those vampires,\" Aaron barked angrily, slipping around his sister to collect his mate in the steel band of his arms. \n\nJen shot Cedar a quick smile which Millie caught. The Alpha bitch struggled to contain her own slight smile. She almost felt sorry for Aaron. Jen was learning quickly how to temper his more dominant side and she had a feeling he would not go down quietly. \n\nMillie sighed and nodded to Cedar. \"They're obviously not here to hurt us,\" she agreed. \"Most likely Caleb or Demetri sent the one who told us how to defeat the youngling. If he's brought the girl back to the camp then he must be confident she isn't a threat.\" She smiled at her second, pleased with her choice for Loretta's replacement. Cedar Alexander was an amazing woman with a sharp, keen intelligence. She would be excellent in the coming months as they slowly pieced the pack back together after the events of this night.\n\nCedar could feel her Alpha's approval and she couldn't help the feeling of pride which settled over her. That she had earned Millie's respect so quickly was all she could hope for. That she had protected her Alpha's mate was the most worthwhile achievement she had made in her long life so far. Probably the only thing which would surpass this would be finding her mate and having her own babies. But that seemed such a distant longing now, probably one she would never achieve. \n\nSquaring her shoulders again, Cedar turned her gaze back to the two vampires and started walking towards them.\n\nAlexei watched the she wolf approach with strong confident steps. His lips quirked slightly at her boldness. She had a mane of long blonde curls which blew lightly in the breeze, her chin tilted defiantly as she closed the distance to them. He turned his head slightly to the girl at his side. \"Go gather some wood,\" he ordered. \"Lots of it. We need to burn the dead. Anything you hear spoken today is to remain here. If you repeat anything I will kill you myself. Are we clear on this?\"\n\n\"Yes, Alexei,\" Emily answered softly, bowing her head slightly in respect, shooting one final glance at the approaching wolf and wondering what the elder was so concerned about that he felt the need to issue his threat. What would she hear that he didn't want repeated? She turned and disappeared back into the trees to do as he ordered.\n\nAlexei turned his eyes back to the approaching wolf, her scent catching the breeze and tickling his nostrils. He stifled down an irritated groan. Lemon grass. He had expected as much when he had told the wolves how to defeat his kind. That spicy scent had attracted him enough that he wanted to meet the wolf who produced it. He had known she would be a female because female scents were the only ones that caught his attention. \n\nAlexei Romanov was attracted to a dog and it was enough to turn his stomach. Younglings and now dogs. His world was shifting precariously and he was off balance, not a position he was used to being in and not one he was happy to tolerate either. If Andrei found out about this he would never hear the end of it.\n\nThe she wolf was before him now and he ran his eyes quickly over her face. She was stunning with her cerulean blue eyes and wide, generous lips. She was regarding him with a certain amount of distrust but that was to be expected. He kept his own expression carefully neutral as his body started to hum with excitement at her intoxicating scent. He was old enough to ignore it though. Fucking a dog was most definitely not on his To Do list anytime in the near future. It was an interesting turn of events but not one he was willing to examine too deeply at the moment.\n\n\"You saved us,\" Cedar said quietly staring up into the beautiful face of the blond vampire before her. \"Millie reckons either Caleb or Demetri sent you here. Is she right?\" She struggled not to swallow as his brown eyes bored into hers. He was very skilled at keeping his emotions hidden, but then, she doubted he had any. Most vampires didn't, which was what made them such immoral killers. When he spoke, the rich, deep timber of his voice washed over her and her wolf suddenly howled loudly, catching her completely off guard.\n\n\"I was tasked to protect the pack,\" Alexei answered coolly. \"I have done so. The girl is a youngling, Sired into the wrong coven. She has potential to learn and is of no threat to your pack. We will remain here and remove the dead, keep watch just in case any more vampires come but intelligence said there were only the three assigned to the evacuation site.\"\n\nCedar nodded slowly, fighting with her wolf to behave as she took a deep breath to assimilate his words. \"You told us how to kill your kind,\" she remarked curiously. \"Why would you do that?\"\n\nAlexei snorted and looked away, checking to see if the youngling was close. \"It will be my head if the Council finds out,\" he replied, not answering her question.\n\n\"I figured as much,\" Cedar said with a little smile tugging at her lips. He was clearly unhappy about the turn of events. He had unwittingly placed his safety in the hands of the pack and he didn't like it one bit. \"I will speak with the Alpha bitch. I am sure she will convince the pack not to discuss your lapse in judgement.\"\n\nHe turned back to her a flicker of surprise in his eyes. \"You are not the Alpha bitch?\" He had expected her to be. She certainly gave off the prideful confidence of a dog high up in the pack hierarchy. Not that he knew that much about dogs but he was learning fast. He suddenly remembered the conversation from earlier, when Caleb's youngling had mentioned the Alpha's mate. The Alpha bitch was pregnant and he scented no young in the bitch before him.\n\nCedar inclined her head to the left slightly and looked at him with more than a hint of amusement in her eyes. \"I am her second,\" she conceded. \"I am in charge here though. If you are a friend to Caleb and Demetri then the pack will do nothing to endanger you. I am sure of that. My Alpha is an honourable leader and counts Caleb as his family.\"\n\nAlexei regarded her intently for a moment, her scent really starting to get under his skin the longer he was in her company. \"This is intolerable,\" he suddenly growled loudly turning and walking to the tree line just as the youngling appeared with her arms full of wood. He took it from her and sent her scurrying off for more.\n\nCedar watched him as he began to arrange the heavy stack of wood into the beginnings of a funeral pyre quite a distance away from her. His anger was palpable and she couldn't stop another small smile from crossing her face. Something about the vampire called to her wolf. His irritation sent a shiver of delight through her.\n\n\"Why did you agree to help in the first place if you hate us so much, vampire?\" she called loudly even though she knew he could hear her if she spoke more softly. His head snapped up and he shot her a baleful look before he ignored her and went back to his task.\n\nShe smiled again and turned to head over to the fallen youngling. She nodded to Brody and Connor who ran forward in wolf form. They grabbed a leg each and tugged the dead vampire towards the funeral pyre as Cedar retrieved the head and arm lying close by. \n\n\"Go back to the cave,\" she instructed her brothers as they released their burden and glared furiously at the vampire who was ignoring them. Connor chuffed loudly and she reached down and laid a hand on his head. \"He is not here to hurt us, Connor. Return to the cave. I will be there shortly.\"\n\nAlexei was simmering angrily as he tried to get his thoughts in some semblance of order. The longer the she wolf stayed close to him the more he wanted her. Her voice was like sweet music to his ears, her little smiles offering such promise of what a full smile could do to her already beautiful face. He knew she thought he was angry about his safety being in pack hands. But that was not the reason for his anger. His attraction to her was what fuelled his rage. \n\nHis eyes narrowed as she touched one of the wolves with such familiarity, her voice soft and affectionate as she spoke to him. Was he her mate? He dampened down the sudden desire to rip the wolf apart. It had come from nowhere and quite literally stunned him. What the fuck was going on?\"\n\nThe wolves departed just as the youngling appeared again and the she wolf headed over to her. Alexei tensed, watching the youngling intently to see how she would react to the wolf, ready to kill her if she tried to hurt the other woman.\n\n\"Hi, I'm Cedar,\" he heard the she wolf say gently as she reached to help relieve the youngling of her burden.\n\n\"Emily,\" the youngling replied with a cautious smile.\n\n\"Thank you, Emily,\" Cedar smiled softly. \"We know you were in an impossible position with little or no time to make your decision. The pack thanks you for choosing in our favour though you probably just found grumpy over there more terrifying than the vampire you came with.\" She nodded her head back towards Alexei who was unable to contain his snort of irritation at her words.\n\nEmily looked at the other woman with an expression of shock on her face. \"Alexei is an elder,\" she whispered in a scandalised tone. \"He commands respect.\"\n\nIt was Cedar's turn to snort loudly. \"Respect is earned in a pack. It is not conditional on how long you have walked the planet. If you're an idiot at fifty you're still likely to be an idiot at three hundred and fifty.\" She smiled as she looked back at Alexei. She had a name for him now, one he hadn't appeared to want to divulge before now. \"Plus, he is grumpy. Look at that scowl on his face.\"\n\n\"If you have finished gossiping like an old woman, return to gather more wood, Emily,\" Alexei ground out curtly, his eyes flashing dangerously as he regarded the two women to his left. He smiled when the youngling visibly paled and scurried away again. That was the kind of reaction he was used to, how he expected others to treat him. It made him feel better, more balanced.\n\n\"You really are a total bastard, aren't you, Alexei?\" Cedar commented coolly, her disapproving eyes boring into his. \"She's just a child, confused and unsure of her place in the life she now finds herself in. Your anger is at me, not her. Does it make you feel better to abuse those that cannot stand up for themselves?\"\n\nHe rose to collect the wood she was holding, leaning down as he did so, taking a moment to inhale her sweet and spicy fragrance. \"She needs to know her place in our hierarchy. Just because your pack rules differently does not mean that it is the right way. We are not kindred spirits, little bitch. I am not your friend nor do I want to be. I cannot punish you for your disrespect for I will be breaking my word to Demetri if I do so. But I warn you not to push me. When this is over, I will have no constraints on me anymore. And I will come for you, little bitch. You will be very sorry for baiting me. This is your only warning. I suggest you heed it.\"\n\nHe forced himself away from her, thoughts of how delightful it could be to punish the little minx for her teasing whirling in his mind. Grumpy! Him? If anyone else had called him grumpy he would have ripped their throats out on the spot. Well, anyone apart from Andrei, Demetri and Caleb. Those three were probably about the only ones he'd allow to laugh at him like that. He expected to scent fear from the she wolf but instead he heard soft laughter behind him.\n\n\"Does that mean we have a date?\" she laughed softly and he growled loudly, dropping the wood and blurring so quickly he was in her face before the wood had finished hitting the ground. \n\nHis hand shot around her neck, his grip firm but surprisingly gentle as he leaned down to hiss in her face, his fangs bared. The softness of her fragile skin stunned him and his thumb moved slowly, stroking against her throbbing pulse in an almost helpless gesture. This close her scent was overloading his senses and for a moment he was frozen on the spot as he heard loudly angry snarls of running wolves in their direction.\n\n\"You only get one warning, Cedar,\" he breathed softly. \"You just used it up. Go back to your cave, little bitch. Take your little dogs with you. If you come near me again I will punish the youngling for your disobedience.\" He released her and stepped back, his expression cold and hard as he stared down at her.\n\nCedar watched him intently, holding her hand up as her three brothers neared, snarling their fury that the vampire had laid hands on her. Her heart was thudding loudly in her chest but it was not with fear. Her wolf was ecstatic, howling furiously, prowling in agitation at the dominance shown over them by the vampire. Stunned disbelief clouded her mind as she stared up at Alexei and prayed her expression was calmer than her whirling thoughts.\n\n\"It's okay,\" she said soothingly to her brothers. \"Alexei and I just had a slight difference of opinion.\"\n\nAaron shifted, moving to his sister's side, inspecting her neck intently before he growled loudly at the blond vampire. \"If you ever lay a hand on our sister again, we will kill you, vampire,\" he hissed furiously. \"I don't care if she pushes you to distraction and you feel she deserves it. Nothing will stop us bringing you down if you harm her in any way. I don't care whose fucking friend you are.\"\n\nThe other two wolves shifted and Alexei ran his eyes quickly over them, noting the same blond hair and blue eyes. The one she called Connor was not her mate then but her brother. The familial resemblance was very plain to see. He suddenly relaxed and smiled, a genuine smile that actually touched his eyes for once. \"So she has a habit of pushing people beyond their endurance,\" he remarked lightly, picking up on what Aaron had let slip. He watched the other man's eyes darken as he opened his mouth again to defend his sister but clearly didn't want to be caught in telling an open lie.\n\nAlexei laughed and shook his head. \"Take her back with you,\" he sighed. \"She is testing my patience and I have no wish to kill her siblings just because she is being a pain in the ass.\" He turned his back on them and went back to his task of preparing the funeral pyre, listening intently as they began to move away. \"Oh and Cedar, we do have a date,\" he called over his shoulder not bothering to turn around to see her reaction.\n\nSoft tinkling laughter filled the air. \"I'll look forward to it,\" she quipped before her scent finally began to fade and he knew the wolves were gone. He turned his head slightly, watching the three males talking agitatedly to the she wolf as she nodded as if agreeing with them. He smiled slowly, suddenly anxious for the war with Graves to be over with so he could come back and meet again with the teasing little minx who was starting to really get under his skin in a very uncomfortable way.\n\nEmily reappeared with more wood and he turned his attention to the youngling, looking at her with Cedar's words still ringing in his ears. \"That should be enough,\" he said almost gently. More gently than he was accustomed to speaking to another person. \"Light the fire and put him on it.\" He gestured to the dead youngling. \"I'll retrieve Aben's remains.\" \n\nHe turned and headed into the trees, smiling as he headed towards his end goal. Cedar. Her name trickled over his mind like a gentle caress and his big body hummed with excitement. Life had suddenly become impossibly complicated but so full of unknown possibilities. \n\nCedar listened as her brothers castigated her in turns, Brody was yelling at her, Connor impatient with her, Aaron trying to be the voice of reason. Her wolf howled in glee, her body thrummed with nervous energy as she walked away from the beautiful blond vampire. She was so screwed it was unbelievable but she couldn't help smiling. \n\nShe had found her mate at last. The fact that he was a vampire complicated things immensely but there was nothing she could do about it. Alexei was her mate and she was sure he would not be a very willing one. She would have to work hard to lure him to her. He was already interested. Did he think she didn't notice him scenting her? Did he think she didn't notice the way he had looked at Connor when she had touched him in wolf form? \n\nThe beautiful blond vampire was hers and he was just going to have to come to terms with it. She frowned suddenly, her footsteps faltering slightly. There would be no babies for her. Vampires could not father children and there had never been a Were/Vampire mating that she was aware of. The two species were such natural enemies that they had never before worked closely with one another for anyone to develop any kind of feelings for the other. \n\nHer Alpha would probably not be very pleased either at the turn of events. She couldn't ask Alexei to live within the pack. It would be too much for him with his natural prejudice against Weres so she would have to leave the pack. Those facts saddened her greatly as she looked surreptitiously at her brothers. She couldn't imagine not being part of a pack anymore. She hoped her family would understand. The vampire was her mate. She couldn't not be with him even if it meant giving up everything.\n\nCedar turned to look back and saw Emily tossing the dead youngling onto the lit funeral pyre. The little brunette looked up and waved. She returned the girl's gesture and then went back to allowing her brothers to tell her what a complete idiot she was.\n\n_____\n\nDemetri Bozic stepped out of the house and strode into the centre of the compound stepping over bodies almost gracefully without even looking downwards. His long talons clacked impatiently against each other to a staccato beat which seemed to ring loudly in the night air. \n\nSlowly the noise seeped into the Weres surrounding him. They stilled, sensing something evil within their midst, instinctively moving away from him. Jared's head whipped around, his eyes narrowing as he took in Demetri's statue like stance as he stood scenting the night air. \n\nJared shifted, his expression one of concern as he took in the cold blank mask surrounding the vampire's face, the completely black eyes devoid of all life. He turned hurrying towards the house just as Caleb stepped outside. \"What the fuck is going on, Caleb?\" he demanded.\n\nCaleb's eyes were intent on Demetri, watching his friend carefully as he laid a hand on Jared's shoulder. \"Keep your people away from him, Jared. Graves managed to slip a vampire into the house from around the back. Mara almost died and Annie was badly wounded. Lacey shifted and hurt her leg but she's fine, just a bit confused on how to shift back. If you could send someone in to help her.\"\n\nJared nodded, clicking his fingers at the first available Were and sending the man running inside the house with a quickly barked order. He turned back to Caleb. \"Annie will heal?\" he asked quietly. \"Mara, she won't die will she?\"\n\n\"Annie will be fine and so will Mara once she has some time to heal from our blood but Graves has pushed Demetri over the edge. I don't think he will hurt any Were but I can't bet any of your people's lives on it, Jared. He is only vampire at this moment, there is no humanity inside him.\"\n\n\"I can hear you,\" Demetri hissed quietly his head turning slightly to the right to look back at them.\n\nCaleb met his gaze with a level one of his own. \"I wasn't attempting to keep my conversation secret from you,\" he remarked dryly. \"I am merely filling the Alpha in on the current situation.\"\n\n\"This ends, Caleb,\" Demetri said in almost a chanting voice. \"Tell the pack to move their injured inside. Gather our people. I want numbers, how many of Graves' army is still alive. No one touches Graves. He is mine.\"\n\nA low growl sounded close by and Rafe appeared next to Demetri shifting to human form as he stood almost face to face with him. \"What gives you that right, Demetri?\" he growled as Caleb moved swiftly, coming to stand beside Rafe, readying to get him out of the way if Demetri snapped.",
        "Demetri's black eyes swung to Rafe's and he watched him silently for a moment before he nodded his head slowly, his eyes suddenly reverting to their normal deep green colour. \"He has tried to take both of our hearts from us,\" he whispered softly. \"Lacey and Mara and also Annie who we hold jointly in our hearts. You can run with me if you can keep up, Rafe. I will even let you play with me but I will not let you slow me down.\"\n\n\"Agreed!\" Rafe growled softly his eyes swinging to his Alpha, waiting for Jared to order him to stand down. Their eyes locked for a long moment and then Jared nodded his head, silently giving his second his permission to do what he needed to do.\n\nRafe smiled a truly chilling smile, turning back to Demetri just as the vampire once more reverted to his more feral state, his eyes going black and his head tilting to the side as he scented the night air again. \n\nAndrei strode out of the trees, his brown eyes flashing with excitement, his smile widening when he saw Demetri's feral state. \"This is going to be fun,\" he laughed softly. \"Graves has about forty vampires left, the humans are all dead. We have about fifteen left in the forest not counting us.\" He nodded his head at Caleb's crew standing just inside the tree line.\n\n\"None of Graves' army leaves here alive,\" Demetri said coldly. \"I don't care if they surrender. They die. Anyone who is uncomfortable with that can leave now. If you stay you are in agreement.\" The vampires didn't appear bothered but some of the Weres looked to their Alpha for guidance.\n\nJared's expression was hard and unforgiving. \"They came to our land and have killed our pack members. They deserve no mercy for the death and destruction they have brought to my pack. I will find no fault in any pack member who wants to reside inside the house until this is over. But I will not hide while our vampire allies clear up our problem for us.\" Loud growls rumbled through the pack.\n\nCaleb frowned. \"Jared, these are vampires, not humans. Your losses are pretty low at the moment but that will change when the pack comes into contact with vampires.\"\n\n\"Alpha, Millie just called from the evacuation site,\" Mitch Fielding called, running from the house. \"They were attacked by three vampires sent by Graves.\"\n\nJared paled, fear running through him. \"Millie?\" he ground out.\n\n\"They are safe. A vampire showed up and protected them.\" He looked like he had more to say but Caleb interjected.\n\n\"We sent Alexei to protect them, Jared,\" he told his friend.\n\n\"You knew and you didn't tell me my mate was in danger?\" Jared growled furiously.\n\n\"There was nothing you could do about it, Jared,\" Caleb said quietly. \"It was faster to send one of us when we found out about the danger. The attack happened on the house before I had time to find you and let you know what was going on.\" He watched his friend carefully seeing some of the anger die in his eyes but not all.\n\n\"Even more reason why we will not hide from this fight, Caleb,\" Jared grated out through clenched teeth. \"He attacked the children. He sent his crew to slaughter the weak and the defenceless.\" He turned and strode away towards the house, his body rigid with his fury.\n\nMitch hurried after him, waiting until they were out of earshot. \"Alpha, wait,\" he said in a loud whisper, pulling Jared away from the house because there were two other vampires inside. \"Millie said they know how to kill the vampires.\"\n\nJared listened intently as Mitch related the conversation in quiet, hushed tones. He smiled coldly. \"Excellent, Mitch! Get everyone shifted back to wolf form. I'll alert the pack when the vampires can't hear.\"\n\nHe hurried into the house, doing a quick check on Lacey who was back in human form wrapped in a throw from one of the couches. \"Your clothes are upstairs still if you are uncomfortable,\" he said to her quietly, aware she still had issues with nudity.\n\n\"I know,\" she whispered softly. \"But I don't want to go up there, Jared.\" Her haunted gaze slid to the stairs and Jared's followed hers, a deep scowl crossing his face when he saw the three dead Weres on the landing. He didn't have time to address the issue though, there was a war to finish, one they could now participate in with some hope of winning.\n\nJared strode to the hall cupboard and pulled it open. \"Take what you need from here,\" he told Lacey, showing her the stock of sweatpants and tops folded neatly inside. \"We tend to keep a few stock items here at the main house and also at the community centre, just in case we need them. It's not uncommon for people to lose their clothes around the compound in a moment of exuberance.\" \n\nHe left her to chose something and approached the sitting room. Mara was lying on one of the sofas, Rhianna resting on the floor beside her. There was an enormous, red haired vampire sitting in one of the chairs close to them. The man looked up then looked at the two women. When Rhianna smiled at Jared the vampire turned back to the window, looking outside as if bored.\n\n\"You okay?\" Jared asked crouching down beside the two woman. Mara was still very pale but appeared to be healing from whatever injuries she had sustained. She managed a weak smile. \n\n\"I've felt a lot worse,\" she answered. \"Think most of my bones have healed now, just the last couple of ribs to go and I should be fighting fit again.\"\n\n\"If you need more blood, tell me,\" Rhianna said quietly. \"My wounds have healed thanks to Nors. I can afford to give a bit more blood if you need it, Mara.\"\n\nThe brunette shook her head slowly. \"No, I'll be fine, Annie. You've done more than enough as it is.\" She watched her friend's brow furrow in a deep scowl and she reached out a hand and touched her curls lightly. \"It is not your fault, Annie. You can't blame yourself for Sandro's actions.\" Her friend nodded and her expression cleared but she could see that the little redhead wasn't totally convinced. In time, she would come to see that she wasn't accountable for her injuries.\n\n\"The wounded are on their way in. That won't be a problem will it?\" Jared asked his eyes on the big vampire in the chair.\n\n\"Nors will be fine, Jared,\" Rhianna said reassuringly. \"Won't you?\"\n\n\"As long as no one tries to harm any of my charges, I will be the perfect gentleman,\" Nors growled softly his eyes never leaving the window.\n\nJared took that as the best he was going to get. No one entering the house would have any cause to try and hurt anyone inside it. He was actually quite relieved the vampire was there. He wouldn't need to worry about leaving the house undefended.\n\nJared turned and went to head outside as Lacey limped to the sitting room doorway. \"Your leg?\"\n\n\"It's healing fine,\" she answered. \"I thought it was broken but Mitch said it was just badly sprained. There is hardly any pain anymore.\" Her eyes met her Alpha's. \"Rafe?\" she whispered softly.\n\n\"He's fine, Lacey. Worried about you but I will let him know you're fine. Just stay inside and help with the wounded if you can.\"\n\nJared finally left the house as people began to move inside. He shifted immediately to wolf form and quickly began transmitting his plan of action to the pack members who were going to finish the battle at his side.\n\nCaleb watched the wolves. He knew something was up, something they were hiding from him. He turned to Rafe and raised a questioning eyebrow but the big man shrugged his shoulders. He wasn't in wolf form so he had no idea if anything crucial was being discussed.\n\nSighing Caleb turned to Andrei, Rhianna's words suddenly coming to mind. \"Andrei, do a sweep of the back of the house. Sandro entered from there. Check and see if there are any wounded Weres that need help.\" He didn't hold out any hope that anyone survived the vampire's attack but there was no harm in checking. Plus, he had promised his woman he would see to it and he wasn't about to let her down. She had been through enough tonight as it was.\n\nAndrei nodded, turning and heading off in the direction indicated. Demetri seemed rooted to the spot at the moment, trying to find Graves' scent through everyone else's. He had time to do this quick side trip before they finally moved off for the last stance against the invaders.\n\nHe rounded the back of the house, his keen gaze taking in three dead Weres beneath the shattered window on the first story. He didn't need to approach them, he could smell they were dead and he detected no heartbeats. He turned to leave when a sound attracted his attention. It was a weak, dull thud, the sound of a laboured heartbeat further off to the left, closer to the tree line.\n\nHe crept forward quietly, his eyes settling on the broken form of a wolf, lying at the base of a tall tree. The Were was still alive but barely. Ensuring there were no enemies near, Andrei approached and knelt down before the wounded animal. How it was still alive was a complete mystery to him. It looked like just about every bone in its body was broken. There would be no magical Were healing for the wolf.\n\nPursing his lips he toyed with his options. He could leave it until it died or he could give it a mercy kill. He knew he'd been ordered not to accidentally kill any Were but this was doing the wolf a favour. He would be putting it down, sparing it the pain it was so obviously in. Making up his mind he leaned down, baring his fangs close to the wolf's neck. The sharp tangy scent of cinnamon assaulted his nostrils and he blinked slowly in surprise, raising his head slightly as the wolf opened its eyes to look up at him.\n\nLoretta forced her eyes opened, trying to breath through the pain. Her head was on fire, excruciating jolts of pain flashing periodically through her tired mind. She couldn't feel her body for which she was grateful. Her back had broken when she hit the tree, cutting off most of the pain she felt but the harsh throbbing in her head was more than agony. She didn't know how long she had lain there. All she knew was someone was close so she forced her eyes open.\n\nShe stared up at the vampire with his fangs bared, ready to bite her and she wanted to weep with relief. 'Do it!' she screamed in her head, praying for him to bite quick and deep and put her out of her misery. She tried to tell him to when he paused and watched her with an almost curious expression on his beautiful face, but she was still in wolf form. Using the last of her reserves she pushed her wolf down, knowing she was losing the strength of her beast and the pain would be even worse, but this was the only way she could communicate with the vampire.\n\nLoretta shifted, a tortured scream escaping her lips as the fire in her head blazed brightly. \"Do it,\" she whispered weakly. \"Please. Just do it.\"\n\nAndrei stared at the woman before him, her face a mask of agony, her entire body covered in black and blue bruises. She was so badly bruised it was hard to tell she was naked as she lay broken before him. Her whispered plea surprised him. Her pain must be unimaginable if she pleaded for death. He leaned forward again, his fangs grazing the side of her neck and the haunting scent of cinnamon assaulted him again and he found he couldn't bite her.\n\nPuzzled he sat back, staring at her as her eyes followed him, accusing him. Why couldn't he bite her? She wanted him to. She didn't want to suffer anymore but every time her scent washed over him he just couldn't do it.\n\n\"Bastard,\" she hissed, her breathing sounding tortured, her eyes full of tears as she glared at him. \"You get off on watching others suffer?\"\n\nHer words infuriated him and he reached for her, pulling her broken body into his arms, his head descending once more to her neck. His hands ran down her back, his thoughts in chaos as he traced her spine until he found the point of the break. He stroked the area lightly, knowing she couldn't feel his touch. He couldn't kill the she wolf. Three times he had tried to and each time he couldn't complete the kill. He was confused, angry. Never before had he been unable to complete a kill. Why he couldn't do so with the Were in his arms he didn't know.\n\nGroaning in irritation, Andrei turned her over until she was laying face down in his lap. He lengthened his talons and drove one pointed nail deep into her back. She didn't move or make a sound as her blood began to pool out of the hole in her back, his finger feeling around inside until he found the damaged area. Withdrawing his finger he ripped it open with his fangs and plunged back inside, allowing his blood to mix with hers, rubbing the break, searching to the damaged nerves and coating them with his blood. \n\nWhen he was satisfied he had done enough to heal the break, he withdrew his finger and leaned over and licked at her back. Her sweet blood exploded onto his tongue and he stifled down a groan. She tasted so good. His fangs wanted to sink into her soft skin but he controlled himself, closing the wound on her back and selfishly licking up her spilled blood. He'd done her a favour by starting the healing process on her back. It wasn't much for her to donate a little of her own blood for his enjoyment.\n\nAndrei reluctantly raised his head, licking his lips clean before he turned her over and shifted her down his lap until her head was cradle in the crook of his arm.\n\n\"What have you done?\" Loretta growled as her body exploded in a massive wave of pain and she struggled to hold back sobs as her legs began to twitch involuntarily.\n\n\"Healed your back,\" he answered, holding her tightly. \"But it's our little secret okay? If the Council finds out I'm running around healing Were bitches I'll be in deep trouble.\"\n\nShe bit her lip not to scream out loud with the pain, her breath coming in deep panting rasps. \"Why?\" she ground out. \"You should have just killed me like you were going to.\"\n\nAndrei ripped his wrist open and pressed it to her mouth. \"Drink, it won't kill you,\" he ordered softly. \"It will stabilise you until your own healing abilities kick in. This is another little secret just between the two of us.\" He pressed his wrist tightly against her mouth so she couldn't ask anymore questions he just didn't have the answers to.\n\nShe fed from him reluctantly but she did drink and he closed his eyes and allowed himself a brief moment of enjoying the purely erotic feel of her soft lips sucking against his wrist. He knew his actions were madness. Letting the Weres know that vampire blood could heal them was not a smart move but there was something about this feisty, brave little bitch that called to him on a deep level. He was loathe to let her die so the only option he had was to heal her.\n\nLoretta drank, feeling the pain beginning to lessen, her limbs no longer twitching. She stared into the face of the vampire as she sucked at his blood. His eyes were closed and his beautiful face was almost serene, as if he was taking some kind of personal enjoyment out of her drinking from him. Part of her wanted to be offended that he was getting off on her pain even if he was trying to help her. But another part of her, her wolf part was suddenly rumbling deeply as his blood sent liquid fire through her veins and the pain was soon down to a dull ache.\n\n\"Enough,\" Andrei whispered without opening his eyes, gently pulling his wrist from her mouth. \"Rest for a moment.\"\n\nLoretta licked her lips clean, closing her eyes and relaxing in his strong embrace, her body getting stronger with each passing moment. She wasn't up to running through the trees anytime soon but she was healing at a faster rate than was the norm for a Were. \"Thank you,\" she said softly, feeling him lean down and run his nose against the side of her face, inhaling deeply as he did so.\n\nHe moved, lifting her gently into his arms as he stood up. \"Tell no one, little bitch,\" he said softly staring straight ahead as he strode swiftly around the side of the house.\n\n\"Loretta!\" Rafe yelled, hurrying over to them and reaching to take the injured woman from the vampire. \"You okay, sweetie?\" he asked softly, his brown eyes full of concern as he cradled her gently.\n\n\"Don't schedule me for any training exercises for a couple of weeks,\" she said drolly, managing a weak smile. \"I'll be fine though, with a bit of rest.\"\n\n\"Rafe,\" Demetri called softly and the big man hesitated for a moment before Andrei took the decision out of his hands. \n\nThe vampire reached for Loretta and took her back from the Were. \"I'll make sure she gets safely inside,\" he told the other man, looking down at the woman in his arms with a slight smile on his face. \"Loretta,\" he laughed softly. \"You strike me more as a Rose, all beautiful on the outside but prickly as a thorn on the inside.\"\n\n\"Drop dead,\" she grumbled but there was no heat in her voice and her lips threatened to twitch into a smile. \"So what do I call you, apart from asshole, that is?\"\n\nAndrei threw his head back and laughed loudly as he continued on his way to the house. \"Who told you my nickname?\" he countered without answering her question.\n\n\"Andrei?\" Rhianna gasped jumping up as he entered the house with a badly wounded Loretta in his hands. \"Oh God, Loretta, are you okay?\"\n\nAndrei laid her down on the other sofa in the sitting room as the youngling moved slightly stiffly over to the pretty brunette and gently stroked her hair back from her face. \n\n\"I'm going to be just fine, Annie,\" Loretta sighed staring up at the brown haired vampire who set her wolf to prowling with agitation. Her lips twitched into a smile as he broke her gaze and turned away. \"Thanks, asshole!\" she called with a little laugh.\n\n\"Anytime, Rose!\" he countered with a laugh of his own as he strode back out of the house without a backward glance.\n\n\"Private joke,\" Loretta answered Rhianna's unspoken question before she closed her eyes and allowed the welcoming comfort of the sofa to soothe her aching body. Andrei. She smiled slowly and fell instantly into a much needed sleep.\n\nRafe returned to Demetri's side as Andrei took Loretta into the house.\n\n\"I've found him,\" the vampire whispered in a cold, chilling voice. \"If you're coming then you'd better shift now because I'm not waiting for you.\"\n\nRafe shifted instantly as Demetri took off into the night. He caught the vampire's scent and followed it. Demetri might be able to move faster than him but his skills at tracking had yet to let him down. \n\nDemetri's movement seemed to trigger something in the other vampires, without a word they all transformed and turned, heading into the trees. Caleb looked at Jared with narrowed eyes, knowing the wolves were up to something. He considered asking but then shook his head. This was their compound, their pack which was being attacked. They had the right to do as they saw fit.\n\nCaleb took a deep breath and let go. If Demetri was going deep then so would he. He was aware of Andrei coming to his side as he released his humanity completely, his eyes turning completely black, his thirst for blood driving him from his very core. He turned his head, saw Andrei had transformed too and they smiled coldly at each other before they blurred into the trees.\n\nJared watched the vampires leave and chuffed loudly. The pack knew what to do, how to take down the enemy vampires. Each and every member had taken a moment to scent their allies while they all stood waiting for Demetri to act. The likelihood of any accidents happening was remote. He howled loudly and the wolves disappeared into the trees, ready to kill as many vampires as they could get their teeth into.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "weres",
        "mating",
        "war"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/when-worlds-collide-ch-12"
}