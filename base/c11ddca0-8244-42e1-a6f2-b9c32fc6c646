{
    "title": "Dream Drive Ch. 09",
    "pages": [
        "Author's Note:\n\nEdited by Expoh, AnnabelleFalls13, Michael Scott, and Zald.\n\n<center>****</center>\n\nIt had been a good handful of hours since Jackson had gone with Shaka into the mountain. Chaki was sitting at the campfire outside her family's tipi. Landri sat with her. Palla was sleeping inside.\n\nThe night was cold, so they brought out a blanket to cover themselves. It was sewn from the skins of two coyotes that Chaki's father had baited and killed: one a mix of tan and white, the other mostly brown. She rubbed the fur idly. It was soft. It reminded her of his warmth.\n\nShe glanced up. Her father's war jacket hung from the top of their tipi; it looked streaked with black and red from the light of the fire. She didn't like the sight of it in the dark, and turned her eyes away.\n\nHer bond with Jackson pointed toward the mountain, but not long after he'd left, it had changed. She could barely feel him. It was as if she could see him in the distance, standing a mile away on the plains, but they were so far that even their loudest shouts could only be faintly heard. The little nuances of his soul - the steel walls, the heated core, the crumbling patches of rust \u2013 all of it was gone.\n\n\"You should try to get some sleep,\" Landri said.\n\nChaki shook her head.\n\n\"He'll be fine. Shaka will protect him with her life.\"\n\nChaki nodded.\n\nLandri embraced Chaki with an arm, bringing her close. \"Jackson is strong. He'll be back in the morning, and I'll finally have you out of my tent.\"\n\n\"Mmm-hmm.\"\n\n\"Come,\" Landri said. \"Perk up.\"\n\n\"I'm just...\" Chaki reached for their bond.\n\nShe felt nothing. Her eyes widened. She hunted desperately, reaching a mental hand into the place her essence sat. A sick feeling began to rise in her throat.\n\nAnd then it was there, a tiny, golden thread. She clutched it as if holding her essence, ready to draw a rune. She was afraid to let go.\n\n\"He's never been this far away before,\" Chaki said. \"If something happens, then I won't be able to \u2013\"\n\n\"He will speak with Shakhan,\" Landri said. \"He will learn of his mission. He will return here. And that will be that.\"\n\n\"Yes.\"\n\nThat was what Chaki said, but she didn't think it would be so simple. If Jackson had to leave...would she leave with him? He already seemed to be thinking about that day, considering a future in which they would have to support one another in conflict, in violence, if need be.\n\nIt was madness. Leap away with a warrior on an adventure, leave everything she'd ever known behind - friends, family, her life on the plains. What would her tribe do without their next spirit guide? Shaka was still strong, but she was aging. Would she have time to train another in Chaki's stead?\n\nA wind blew. Chaki pushed close to her mother. Landri used one hand to fix the blanket around them, shielding them from the cold air. The firelight flickered. She could hear the sound of hooves in the distance.\n\nThe hooves rapidly grew closer. A heavy, rhythmic thud in the grass.\n\nCloser.\n\nChaki and Landri exchanged a glance.\n\nA horse galloped into view from the darkness. In an instant, it blew past them, smashing straight through the campfire and sending coals flying. Chaki brought the blanket over their faces; she could feel the flecks of heat batter against them.\n\nThey heard the horse give a pained and tired whinny. Wood snapped, crunched. Chaki threw the blanket off. Their tent was half-collapsed, trampled by the horse. The animal reared up, eyes wide, wheezing big, slavering breaths. And then it took off again, running deeper into the camp. \n\n\"Palla!\" Landri shouted. \"Palla!\"\n\n\"What \u2013 who \u2013 what's \u2013\" Chaki saw motion under the tipi's leather. Palla batted his way free and stuck his head out. \"What happened? Is it a storm?\"\n\nLandri sighed in relief. \"Thank goodness.\"\n\n\"There was someone on that horse,\" Chaki said. \"I'm going after it!\"\n\nShe took off at a run. Strewn possessions and torn-up tent stakes followed in the wake of the maddened beast. Other people were gathering, throwing open their tents to see about the commotion.\n\nWhen she caught up to the animal, it had crashed into yet another tent. Now it was bucking, kicking up its rear legs again and again. Chaki watched the animal carefully, trying to look for some way to get close, but it was too unpredictable. Its face was wild; it seemed unfocused. Was it in pain?\n\nHer eyes widened. There was a person tied to it \u2013 a small figure, swathed in black, strapped to the horse like a human saddle.\n\n\"Surround it!\" shouted a voice. \"If it tries to run again, use force!\"\n\nHanta was there, along with Vuntha and several of the other men. Yukatan was leading them. The elder's head was bald to the night, having rushed from his tent without his headdress.\n\nThey circled the horse with their spears. The horse kept bucking, but it stayed in place, torn between dealing with what had it panicked and keeping away from the sharp spear points.\n\nThe elder crept closer. The horse had stopped for a moment; its great bulk stretched as it heaved air. As Yukatan reached for its reins, he had to lower his spear \u2013 and immediately the horse lashed out, whipping its head at him. The elder was sent tumbling backward.\n\nChaki and Vuntha grabbed him under the arms and quickly drew him away, setting him back on his feet. He brushed himself off and set his spear again. Hanta called from the other side of the horse. \"Elder, are you alright?\"\n\n\"I'm fine!\" he said. \"Chaki, can you calm it? Like Shaka?\"\n\n\"I will try.\" Chaki gripped her soul tight and began to draw runes. Simple pictures, one for slumber, one for calm, one for horse. Bright gold lines arranged themselves into pictograms in front of her. She walked forward, holding them out like a shield, and pushed her magic into the spell.\n\nThe horse stopped bucking. Its eyes focused on Chaki, but its breathing was still labored. \"It's alright,\" Chaki said. \"I am a friend. You're in a safe place now.\"\n\nShe slowly touched the flank of the horse. It whinnied, skipped with its feet slightly. She laid her head on its side. \"Shh. It's okay. You will be fine.\"\n\nThe horse's breathing began to slow. She glanced at Yukatan and nodded. Yukatan held up three fingers; he and two others lowered their spears and approached.\n\n\"There is a metal spur stabbed into its hind,\" Hanta said. \"I can see the blood.\"\n\nYukatan and the third man \u2013 Boonta, Chaki saw - worked to untie the person on the horse. \"What is the meaning of this?\" he said. \"Why didn't they simply ride?\"\n\n\"Chaki, can you prepare it for pain?\" Hanta said. \"I want to withdraw the spur.\"\n\n\"I'm running out of essence,\" she said. \"Wait until they are away.\"\n\nYukatan and Boonta slung the unconscious rider off the horse and carried them out of their circle. Chaki drew an extra few runes. Her essence immediately started draining faster. \"Now,\" she said. She ran her hand along the horse's mane and spoke softly. \"Please tolerate this. It will hurt, just briefly.\"\n\nHanta's hands were quick. The horse jerked, whinnied. Chaki hugged its neck, whispering soothing words near its ear. Once Hanta was clear, she stopped her push into the spell.\n\nThe horse's legs began to tremble. With the source of pain removed, it promptly laid down in the grass. Foam ringed its lips; it had been running for a long time. She released her runes, then drew new ones, expending the last dribble of her essence to seal the gash. It was just a patched scab, really, but better than leaving it totally open. The horse laid its head down in the grass and closed its eyes.\n\n\"It's a woman!\"\n\nChaki gave the horse one last pat, then hurried to where they had set down the stranger. She was a tiny, thin girl. Streamers of yellow-blonde hair played from her head and over the grass.\n\nChaki kneeled next to her. \"I know her. I know this girl.\"\n\nEveryone looked at Chaki. \"Explain,\" Yukatan said.\n\n\"She is an acquaintance of Jackson Vedalt.\" Chaki remembered when he looked her up, back when they visited Earth. Ray-something...Rachel! That was her name. She was the person he'd met in the rattok cave. \"Which means...\"\n\nChaki peeled the black glove off the girl's left hand. Unlike Chaki's neat tattoo, her mark of Shakhan was a twisted, spidery thing - like Jackson's \u2013 melted into the flesh.\n\n\"She came from the iron men,\" Boonta said. His eyes were wide; his jaw was set tight. \"She's wearing their clothing.\"\n\n\"She is a warrior of Shakhan, like Jackson,\" Chaki said.\n\n\"Then she's just as dangerous,\" Boonta said.\n\n\"Jackson is our friend,\" Vuntha said.\n\n\"My point exactly,\" Boonta said. \"We don't need any more friends like him, unbalanced fools that flaunt their powers.\"\n\n\"Enough, Boonta,\" Yukatan said. \"You've made more than enough trouble on that front.\" Somewhat cowed, Boonta sat back on his heels and huffed. \"Chaki, what's wrong with her? Why doesn't she wake?\"\n\nChaki inspected Rachel more closely. Her eyes were red, puffy, as if she'd been crying. Her eyelids were shifting. Chaki peeled one of them back. Rachel's eye twitched erratically, like someone in a deep dream, but it was too fast, too strong. She went to check her pulse.\n\nChaki's fingertips were shocked with a harsh stinging pain. She drew back, hissing. A wooden collar tucked under Rachel's clothes flashed with embedded runes. Rachel's body tensed, then fell slack.\n\n\"This collar is embedded with magic,\" Chaki said. \"It struck at me when I grew close. Perhaps they were holding her prisoner with it?\"\n\n\"Why would they do that?\" Vuntha said. \"Collar a human, of all things?\"\n\n\"The iron men treat people like animals, when it suits them,\" Chaki said. \"I experienced it firsthand.\"\n\n\"And what if she was acting like a wild animal?\" Boonta said. \"They might have collared her for their own safety. I don't trust Shakhan's power in the hands of outsiders.\"\n\n\"You sympathize with the iron men too much,\" Chaki said. \"No one should be treated like this.\"\n\n\"Regardless of the reason why,\" Yukatan said, \"it was done. Chaki, what is the collar doing to her?\"\n\n\"I'm not sure,\" Chaki said. \"Keeping her like this \u2013 a feigned sleep?\"\n\n\"That makes sense,\" Hanta said. \"She couldn't remove the collar, so she tied herself to her horse and forced it to run. She knew it would put her to sleep when she tried to escape from her masters.\"\n\n\"Which would indicate,\" Chaki said, looking at Boonta, \"that she is no friend of theirs. Perhaps she was trying to reach Jackson.\"\n\n\"We can't trust her,\" Boonta said. He moved to the center of their group. \"Not until she explains herself, anyway.\"\n\n\"She is Jackson's friend,\" Chaki said. \"He spoke well of her.\"\n\n\"And sacred law dictates that all those not of the tribes that approach the mountain shall be killed,\" Boonta said, \"but I'm not advocating for her execution, am I?\"\n\n\"Then what are you advocating?\"\n\n\"This is a matter of Shakhan,\" Boonta said. \"We must wait for Shaka and the other spirit guides to advise us.\"\n\nChaki stood and faced him. \"I think I'm perfectly capable of \u2013\"\n\n\"You're an apprentice,\" Boonta said. He looked at his father. \"We should isolate her in a tent, and set a guard within it. When Shaka returns, she will know what to do. As it is my idea, I am happy to take the first watch.\" Boonta lowered his head. \"I believe I have a great deal of ground to recover in Shaka's eyes. Please allow me this, that I might begin, in that regard.\"\n\nYukatan nodded. \"Your suggestion is a good one.\"\n\nWhat Boonta said wasn't unreasonable. They didn't really know Rachel; they didn't know if they could absolutely trust her. But it didn't sit right with Chaki. She saw a river snake maneuvering about for some sort of advantage. Yukatan only saw his son trying to make amends.\n\nChaki looked at Hanta for help. Hanta caught her gaze, then duly cleared his throat. \"Perhaps, as Boonta has strong feelings concerning the matter, I or another might make a better guard?\"\n\n\"Are you saying my son is unable to calmly watch a slumbering girl?\" Yukatan asked.\n\n\"I'm not commenting on his ability,\" Hanta said, \"only his state of mind and spirit.\"\n\nBoonta scowled. \"My mind is sound, hunter, and my spirit sounder still.\"\n\n\"Is that so?\" Yukatan said. \"It seems to me that my son is in an especially poor state of being, considering that talking back to his elders is exactly the kind of idiocy that he needs to correct. Starting now!\"\n\nBoonta winced. Chaki watched as the deliberation wound its way across Yukatan's features. On one side was his son; and on the other side was his son. She did not like Yukatan much, but she respected him. She did not envy his position.\n\nYukatan looked at Boonta. \"I will trust you with this responsibility. You will guard the girl. You will not do anything further to sully yourself.\"\n\nBoonta didn't hide a tight smile. \"Yes, Father.\"\n\n\"And perhaps, for demonstrating that you possess more wisdom than Shaka currently believes, she will not skin you alive when she returns.\"\n\nBoonta's expression faltered. \"Yes, Father.\"\n\n\"Set her in my spare tent,\" Yukatan said. \"Check through the camp, and make sure all were unharmed. Chaki?\"\n\nChaki's teeth were still grinding from Yukatan's pronouncement, but she managed a nod. \"I will heal anyone who was hurt.\"\n\n\"Thank you. Hanta and Vuntha, come with me. We need to gather the elders.\"\n\n\"So late?\" Vuntha said. \"This might wait until morning. Rested heads are better.\"\n\n\"It can't wait,\" Hanta said, starting after Yukatan. \"That horse was dead tired from running, but it couldn't have come across the entire plain.\"\n\n\"What does that mean?\" Vuntha asked.\n\n\"It means,\" Yukatan said, \"that she was probably not alone.\"\n\n<center>****</center>\n\nTell'ad's throat worked, but no sound came out. He lay on the ground inside Hale's tent. His face was pushed into a pool of churned up grass and his own bile. He'd long since vomited up everything else.\n\nHe was in a strange state of being. Hale had done something to his collar, forced his mind to stay aware when he normally would've blacked out. He'd gone so far into the pain that it had stopped hurting. It wasn't unlike running one's hands under scalding water for so long that the sensation simply faded. Even though the flesh started to poach like an egg, the nerves had made themselves hoarse shouting at the arms to move, and their voices grew weaker and weaker.\n\n\"How long,\" Hale said, pacing back toward him, \"have you concealed this from me?\"\n\nTell'ad really did the best he could, but the air wouldn't come out.\n\nThe pain lessened slightly, which was bad, because that let Tell'ad feel it again. His jaw clenched up. His teeth hurt from being ground together for so long.\n\nHe'd gone back to his tent and tried to ride it out, but eventually one of his men had come looking for him and saw him twitching on the ground. And then Hale started wondering where Rachel was.\n\nHale's face came into view. He'd knelt on the ground. \"How long, commander?\"\n\n\"Hour,\" Tell'ad managed. \"May...two.\"\n\n\"One or two hours?\" Hale said. \"Your pain tolerance has really gone up over the years.\"\n\nHale stood again, then delivered a sharp kick to Tell'ad's groin.\n\nPain exploded between his legs, amplified by the effect of the collar. Tell'ad could feel his thoughts scramble up. His vision warped and swam. The rest of his senses were drowned by the volume of pain.\n\nHe only vaguely heard Hale's voice. \"Captain Hammond!\"\n\n\"Yes sir.\"\n\n\"Rouse the troops. We're attacking immediately. How long to the mountain?\"\n\n\"Three hours if we push, but the men will be tired.\"\n\n\"Give them a half hour break after the first two hours. Double rations for breakfast. I don't want surprise ruined by exhaustion.\"\n\n\"Yes sir.\"\n\nFootsteps. Tell'ad felt his clothes shift \u2013 Hale had grabbed them. Their eyes met again, his against Hale's cold, hunting gaze. \"If my plans for Rachel are upset by this one last little rebellion of yours,\" Hale said, \"I will make you beg to feel like you do now. You won't deny me a second time, Kaid! Do you hear me?!\"\n\nTell'ad was flung back to the grass. He rolled once, limbs lifeless, eyes squeezed shut against the pain.\n\nFor a moment, the name Hale shouted swam in his head. He saw faces \u2013 he knew them as his family. There was a girl, a young woman. Delicate of frame, with shining blonde hair down to her waist. His sister.\n\nAn odd thought rose up from the pain like a piece of driftwood bobbing to the surface. Lady Ransfeld reminded him of his sister.\n\n<center>****</center>\n\nJackson's Statistics:\n\nStrength - 100 +10 (+10%)\n\nVitality - 185 +19 (+10%)\n\nAgility - 50 +3 (+5%)\n\nCompulsion - 0\n\nPersuasion \u2013 0\n\nSpirit - 80 +20 (+25%)\n\nHealth \u2013 248.00/248.00\n\nEssence \u2013 120 + 151\n\nCarry Weight \u2013 28.4/59.0\n\n<center>****</center>\n\nJackson ducked under the archway leading out from the portal room. His silvery rune cast a small orb of light around him. The sigil floated where he'd drawn it, moving relative to his position, like a little moon orbiting planet Jackson.\n\nThe walls were black, and the floor under his feet was black, and the ceiling was black. It felt like walking through space. He brushed his left hand on the wall. It felt cold, but smooth. \n\nHis spear was in his right hand. The Energy Conversion Cannon dangled from his belt, the strange grey gun with a claw-butted barrel. He had full health, plenty of essence on-hand, and more essence stored into the gemstones in his pockets that Chaki had charged up for him.\n\nChaki was more than happy to temporarily become his personal essence charging station. He couldn't use the light blue essence he acquired from her to increase his base stats, but it freed him up to use the dark blue essence he'd earned from slaying enemies to do just that while still keeping a reserve for his special attacks.\n\nHe had put another 40 essence into Spirit, hedging against bleeding out anything extra. Considering he was going somewhere serious, he also wanted the added benefit of extra magic resistance. That left him with 127 essence, so he added 7 to Agility, nicely rounding it out at 50 points and his total dark essence at 120 points.\n\nHe decided to keep 120 as a reserve. It was a lot to have on hand, but Jackson still hadn't felt much benefit from his base statistics. Vitality definitely helped him during the mountain games, but he was still exhausted relatively quickly, panting his lungs out as he ran from one place to another. Magic couldn't overturn a lifetime spent tinkering on desks with a few points here and there. His skills \u2013 both active and passive \u2013 had proved far more useful in terms of immediate survival.\n\nStill, he probably would have dumped all the essence he had into his attributes if it wasn't for the fact that charging his essence crystals had been extremely tiring on Chaki. The efficiency was low, so she had to push far more essence in than what he received in return. At one point, they'd felt something weaken in their bond - not as if it was fading away, but a flickering, like a flashlight turning on and off. Jackson urged her to rest, and the bond returned to normal after she'd sat down and had something to eat.\n\nJackson hypothesized that a tiny bit of Chaki's magic was used to keep the bond active, and repeatedly dumping and gathering essence drained her past her ability to maintain it. The game's screens had been clear that a bond could only end with death, so it was probably just a transient condition. All the same, he didn't want to push it, or her, too far. Chaki wasn't one to complain; despite looking more than a little haggard, she'd wanted to continue. He'd insisted she'd done enough until she gave up asking.\n\nIf he was honest to himself, he felt a tad guilty. He hadn't intended things to go that far. Even if the bond was fine, she wasn't a machine. Cycling essence through herself over and over like that wasn't healthy.",
        "It was similar to what happened after Shakhan took his need to sleep away from him. He went several days without resting, spending the entire night grinding up his skill levels. Even though he wasn't physically tired, and his mind was alert, he'd still felt used up and stressed out.\n\nThere was something else aside from the body and mind that needed consideration. Shaka had claimed that the heart needed rest alongside the body and mind. Jackson didn't particularly care for that kind of foggy explanation, but he didn't have any other way to describe it.\n\nGiven the circumstances, Chaki had more than fulfilled Jackson's expectations. He had his 120 dark essence and another 151 light essence; a formidable sum. He also had the essence crystal he'd claimed from the rattok mage. He wasn't sure how much essence it contained, but since the smaller versions from the rattok warriors held 50 each, it was a pretty safe bet that it was 100 essence or so.\n\n371 essence. That was almost as much as everything he'd invested into his statistics so far. He was as prepared as he could be for whatever was down here.\n\nJackson mentally corrected himself. He was in a place called the City of Demons. There was no prepared. Complacency would get him killed.\n\nThe walls of the hall opened abruptly opened into a great cavern. He stopped there, peering ahead.\n\nA short shelf extended past the edge of the tunnel walls. He could barely see it, just a hint of a glimmer - the reflected light of his rune. There was no railing. Past that, a drop into ink-black darkness.\n\nA single beam of light cut through that void, as though a spotlight was situated high on a wall in the distance. It burned through the dark and down past his perch. Here and there, he could see vague shapes, the points of more structures, but the light was swallowed up before it had a chance to illuminate anything.\n\nJackson considered his runes. He could try putting actual essence into some sort of light spell, but he'd have to enchant something, either his clothes or his spear. Glowing pants that constantly used up essence didn't sound very appealing, and they probably wouldn't help all that much.\n\nIt might also attract attention. He probably didn't want attention from whatever was in this place. It was quiet right now, but that could change very quickly.\n\nJackson sighed, then looked about for a way down. The shelf turned into stairs that wrapped around the edge of a tower. The tunnel he'd just come through was actually an enclosed bridge, arcing from the portal room to the tower he was on now.\n\nWithout anywhere else to go, Jackson started down. His moccasins were soft on the black stone. He kept a hand on the wall for balance, and to stay as far away from the edge as possible. He took the stairs one at a time.\n\nIt was absolutely silent.\n\nJackson could hear his ears ring a bit. He would have expected his movements to echo into the empty space, but the sound was engulfed and suppressed.\n\nThe position of the distant ray of light gave him a sense of his progress. It was blocked from view as the stair curled around the outside of the tower, then appeared again as he stepped down in circles. Eventually, as his angle dropped, he could see the profile of another tower against it, and the bridge going off into the dark; and then, the roofs of other buildings, more towers, spires, and steeples.\n\nHe wasn't sure how long it had been when his feet touched flat ground. He appeared to be in some sort of square. The black stone made a perfectly flat floor; there were no cracks, nor mortar. It seemed as though it was all one piece, black concrete poured into a giant mold all at once and allowed to set.\n\nHe started forward. For a moment, he felt lost \u2013 the bubble of light from his rune was weak to the point that he couldn't see more than a few feet. He used the distant beam to keep his bearings.\n\nAfter what might have been a few dozen yards, Jackson came to another wall. There was an opening ahead, with walls high to each side, like a spindly alley. He might actually feel a little bit at home if it wasn't for the oppressive darkness. The stuff sat on him, pushed at him. It didn't like him, and Jackson didn't much care for it either.\n\nHe glanced at the light. He could still see the origin point, a tiny speck far above. The lower half of it was now blocked by walls and pointed roofs. He was definitely in some kind of city. No demons as of yet.\n\nThe place felt dead - dead in the way someone who had just died was dead. There was no smell, no real telltale sign - but the way the corpse lay, limbs slack, a bland glaze over the eyes, made it frighteningly clear.\n\nJackson's spine shivered. The hairs on the back of his neck stood on end. He couldn't see a thing. Something could be right next to him, and he'd have no idea. His hands felt sweaty on his spear.\n\nHe tightened his grip, then spun, swinging the tip into the darkness behind him.\n\nNothing. No sound but his own breathing.\n\nHe didn't feel safer. He felt worse.\n\nJackson swallowed. He made sure his grip was firm, then gathered his voice. \"Is anyone there?\"\n\nThe sound went a few feet and died. Jackson's lungs felt tired just from that effort. There was no energy allowed in this place. Anything that violated the stillness was pushed back.\n\nJackson turned and jogged into the alley. He glanced up again. He didn't have any goals, any direction. He'd half-expected Shakhan to pipe up and say something. Maybe the light was indicating something important?\n\nThe walls were tight on either side of him. He caught glimpses of a few openings, a few windows. He imagined eyes in all of them, watching him. He hoped he imagined them.\n\nThe city was disorienting, maze-like. There didn't seem to be a pattern. He'd turn a corner only to immediately hit another intersection. He'd run along a path for a good while to find that it was a dead end. The first time it happened, he drew the energy cannon and turned on a dime, but there was nothing. There was always nothing.\n\nHe kept the gun out.\n\nMaybe he could have gotten a sense of things if he could see it, but with the darkness, he couldn't even tell if he was where he'd been before. He tried scuffing the stone a few times, scratching it with his spear \u2013 no good. No marks, no chips. He stopped after a couple tries, afraid of breaking the point of his weapon.\n\nProgress was slow, but with a steady reference point, it was progress.\n\nThe sense of being watched increased the closer he got to the light. He felt like a rat in a lab, stared at by creatures he couldn't comprehend that were observing his progress but not bothering to interfere. Yet.\n\nAnd then, he could see it \u2013 the point on which the light was shining. It was a beacon in the distance, the light at the end of his tunnel. He sprinted down the alleyway.\n\nHe burst into an open space \u2013 another square. The light flooded over everything, washing out the black in favor of a dull grey. Jackson jogged to a stop and put his hands on his hips, catching his breath. He checked behind himself, looking at the alley leading back between two tall, featureless buildings.\n\nHe almost felt silly. There hadn't been anything following him the entire time.\n\nHe could have sworn something moved in the dark just then.\n\nHe wiped his hand across his face and blinked a few times, but he couldn't see anything. He backed a few more steps into the pool of light he stood in, away from the edge. He'd come out of ruins infested with cannibalistic rat creatures not once, but twice. Even if there was a demon down here, he could handle it. He was a superhuman.\n\nAfter coaxing himself back into confidence, Jackson moved deeper into the light. The ground was carved with another mural, the same motif he'd seen in several places. The roots of the great tree hugged the center of the square, joined together to form the trunk, and then split into winding, curling branches that wove around the rest of the stone. An inverted pentagram was set into the middle of the trunk.\n\nNormally, there would be a claw at the base of the tree, nestled amongst the roots. Instead, there was a pedestal, sticking up from the center of the square - a claw-shaped pedestal. Artistic flair, I guess..\n\nAs Jackson grew closer, he could see a small crystal hovering inside the cupped prongs of the claw. He leaned in to examine it. It reminded him of the gem-flower. It was about the size of his fist.\n\nWas he supposed to take it?\n\nJackson felt a wave of paranoia. He'd already encountered his share of ancient automated security systems. He looked around, taking in the empty black buildings at the edges of the square and the murky depths of the streets and crooked lanes leading between them. There were no other lights; no clues or hints. The city was empty. This was his destination.\n\nIt was only then, looking into the darkness that masked the rest of the metropolis, that he realized finding his way back to the portal room would be completely impossible. He could wander out there for days.\n\nFuck it. Jackson stowed his gun in the loop on his belt. He worked his fingers a bit, taking a few breaths and keeping on his toes. He grabbed the crystal and pulled.\n\nIt didn't move. It felt very cold under his hand, almost like ice. Jackson frowned, then pulled again. The crystal was locked in place, held over the pedestal by some invisible force. He set his spear down and used both hands. It didn't budge an inch.\n\nJackson sat on his haunches and sighed, rolling his spear in his fingers. He touched his essence and focused, as Shaka had taught him, but he couldn't sense anything. \n\nHe stood, considering the crystal. It did look reminiscent of the gem-flower, but it was a different color. That had been blue; it brimmed with energy. This crystal was colorless. It didn't feel like anything. So, maybe it needed energy?\n\nJackson gripped his essence again. The power balled up inside his body rose to meet his will, ready for action. He put a hand on the crystal and pushed into it, as if filling up one of the gemstones he'd brought from the pawn shop.\n\nThe crystal suckered onto him like a leech and drank from his spirit. Jackson tried to pull away, break off the connection, but his skin was sealed to the stone. His essence bar ticked down at a rapid rate. He set a foot against the pedestal and grabbed his wrist with his other hand, pulling back as hard as he could.\n\nThe suction broke. Jackson toppled backward, his spear clattering down next to him. He sat up and checked his status. It drained him of exactly 100 essence, leaving him with 171. \n\nThe crystal glowed and began to spin. Grey light sparked out from its sides like glowing embers flying from a grindstone. The crystal whirred faster and faster, until it was rotating so quickly it appeared to be spherical.\n\nEnergy burned down through the claw-pedestal in thin white lines. It spread over the square, under his feet, expanding in concentric circles. It rushed over the mural of the tree, washing it with white light. Symbols appeared around the mural and between the rings surrounding the claw. Jackson backed up, trying to take it all in.\n\nIt was like watching a dusty bank of servers putter to life, lights blinking here and there, rusty cooling fans starting to beat at the air. He recognized many of the runes, but there were plenty he didn't.\n\nFor a moment, Jackson wondered what would have happened if he didn't have 100 essence on hand. The more he thought about it, the more he decided he was better off not thinking about it that hard.\n\nOne of the lights was a bit different than the others. Jackson turned his head, but the flickering light turned with him, staying in the corner of his vision.\n\nIt wasn't part of the mural. The little indicator near his bars was blinking like crazy.\n\nThe hunter.\n\nJackson put his back to the pedestal and scanned the square. The alleys were still dark, quiet. His indicator flashed even faster, faster. It was getting closer. He turned about, trying to keep a bead on all the roads. He couldn't see anything.\n\nThe indicator turned solid white. Jackson gripped his spear in both hands.\n\nHe heard something above the whizzing rush of the crystal. He looked up.\n\nThere was a black blur. A hand \u2013 a claw \u2013 swept in and punctured straight through Jackson's neck, cupping his skull. It pulled him across the square, dragging him along the stone. As they approached the outer edge, it released him, throwing him into the side of a building.\n\nJackson struck the corner of the house. The air was knocked out of him; he hit the ground in a tangle, rolled over once, twice, and came to a stop.\n\nJackson turned onto his hands and knees and fought for his breath, grunting and wheezing to get the feeling back into his chest. His spear was nearby; he snatched it back. His gun was gone \u2013 there, lying in the middle of the square between himself and the pedestal.\n\nJackson rubbed his neck as he stood. He'd lost 66 health \u2013 more than enough to kill him in one shot if he hadn't upgraded his Vitality. Then again, if he wasn't changed by Isis, that attack would have decapitated him.\n\nHe heard the sound again \u2013 the flapping of wings. The creature \u2013 some combination of bat and gargoyle - alighted in the center of the square. It stood on two short legs that ended in talons. Its back was hunched sharply; its wingspan was at least twice the size of its height. Two long, spindly arms stretched out from its torso, ending in blade-like claws that clicked on the ground. Its skin was a gnarled, sickly grey, and he could see black veins where it was stretched thin at the wings and joints.\n\nThey stared at each other for a moment, neither moving.\n\nJackson ran for his gun. The hunter spread its wings and flapped once, propelling itself forward at high speed. As they both closed the gap, Jackson turned his head and screamed a War Cry. A ripple of force left his mouth.\n\nThe hunter swept out a claw. A pentagram appeared in front of it. The black shape expanded, twisted, and swallowed up Jackson's attack.\n\nJackson barely had time to be surprised before they collided. The hunter clotheslined him with its outstretched arm.\n\nJackson was sent reeling back across the stone. His health dropped by another 15 points. This time, he turned his fall into a roll, coming up with his spear ready.\n\nThe hunter didn't press the attack; it had taken up its hunched position again, keeping itself between him and the crystal. The power in the square continued to glow and hum. It spread to some of the buildings at the edge; Jackson felt like the whole place was starting to light up. That couldn't have been just from his 100 essence. He was just the catalyst for something bigger \u2013 something the hunter didn't want him to finalize.\n\nJackson went for the gun again. The hunter hopped into the air and sped toward him.\n\nJackson changed direction, angling back toward the pedestal. The hunter flapped its wings rapidly, pulling up short, then coasted across the square to make it back before Jackson.\n\nJackson turned again. Before the hunter could react, he had the gun in hand and was stepping backwards, keeping it aimed squarely at his foe. Sucker.\n\nJackson compiled what he knew so far. This creature was far stronger than him; a direct confrontation was not a good strategy. It was fast, but it had trouble changing direction. It could cancel his special abilities. It definitely did not want him to get back to the crystal. It prioritized that above him retrieving the cannon.\n\nJackson's finger hesitated on the trigger. The hunter was keeping to its defensive position, watching him with ugly eyes set in a skull-like face. It probably had some idea that he was holding a weapon, but it wasn't wheeling around trying to avoid his aim.\n\nThe gun could use health, or essence. But what if the hunter canceled the attack again?\n\nIf it worked, Jackson would be in a bad way, but the hunter would probably be worse off. If the attack failed, he'd have sacrificed either all his essence or almost all his life force for nothing. And then he'd be easy pickings.\n\nIt was a bad matchup, one Jackson had been afraid would show up eventually \u2013 something with an ability that could counter magic. It wasn't called a hunter for nothing.\n\nJackson shoved the gun into his belt. He couldn't risk everything on a coin flip. If he died like that, Shaka would hunt him down in the afterlife and lecture him for all eternity. And then Chaki would get started on him.\n\nJackson switched into his Defensive stance. His hands glowed blue. He inched forward, closing the distance. The hunter bared its fangs and made a warning growl, a stuttering rumble in the back of its throat.\n\nJackson tried to think about what the hunter had done to use its anti-magic. It had moved its arm. Drawing a sigil? No. But was the gesture important? He needed more details.\n\nJackson looked up. He had 167 health left, 146 essence. His cheapest skill was Power Thrust \u2013 5 essence for an extra-strong attack. Time to abuse it.\n\nJackson drew his feet together and walked forward, keeping his spear in close. The hunter spread its arms, flared its claws, and shrieked at him. Jackson leveled the tip of his weapon.\n\nThe hunter flapped its wings, launching off its perch and sweeping toward him. Jackson's speartip glowed white as he thrust it forward.\n\nThe hunter saw the skill's glow. It swept its claw out again, moving its arm as if hurling the ability toward him. The black pentagram ate into the white light and vanished.\n\nJackson knew that was coming \u2013 he was already drawing back for another thrust. The hunter whipped its other arm, canceling his magic with another pentagram, then flapped forward.\n\nJackson threw himself to the ground. Claws raked across his back, draining a bit of health, but he was back on his feet in an instant.\n\nJackson reached out a hand as the hunter peeled up and around to for another pass. He called out his new ability \u2013 Spear Wall.\n\nGrey light flared in front of the hunter's flightpath. The spear-shaped bars of energy crossed over one another like the wall of a cage. The hunter swung wildly to avoid it. It clawed at Jackson as it flew by but missed by a wide margin.\n\nJackson grinned. 116 essence left. That would be plenty.\n\nThe hunter swung high above the square, then rounded back for another strike. As it flew toward him, Jackson cast his Spear Wall. The hunter threw a black pentagram, and the wall was eaten away, vanishing in time for the hunter to fly through. It flapped its wings faster.\n\nJackson cast another Spear Wall, and then a third, almost precisely behind it, eating through another 40 essence.\n\nThe hunter canceled the second wall with its other arm. Jackson had time to appreciate the panic in its eyes right before it smashed head-on into the one remaining. The bars shattered, and the hunter shrieked. It dropped like a stone, the ridge of one of its wings bent and cracked backward. It hit the square hard.\n\nEven with that impact, its talons were digging in, trying to stop its momentum. They found purchase in the lines of the mural.\n\nJackson was already in a dead sprint for the pedestal. The hunter loped forward, using its arms, legs, and one good wing to move as fast as it could \u2013 faster than Jackson. They converged in the center of the square.\n\nThe hunter was going to make it first.\n\nJackson lifted his spear and dug it into one of the carved branches in the stone. Using that as leverage, he pushed himself forward, leaving his weapon behind and throwing himself into a full body lunge straight for the crystal.\n\nThe hunter twisted sideways, bringing up its arm. Jackson stretched out his hand toward the crystal. They seemed to hang there for a moment, Jackson flying forward, the hunter whipping its claw through the air, trying to cut him off. Jackson squeezed his eyes shut.",
        "He expected a blow to the face, a hard landing on stone \u2013 but it never happened. He opened his eyes, then blinked several times. He couldn't see anything. He tried moving his arms and legs, and was greeted again by the odd sensation of floating. His stomach flopped uncomfortably; he swallowed back the sensation in the bottom of his throat.\n\nI'm getting sick of the teleporting.\n\n<center>****</center>\n\nThey'd been lucky \u2013 Rachel's horse had knocked over three tents, but the biggest casualty was a deep scratch on Kannu's arm. Chaki used a bit of essence to heal her. Normally, she wouldn't waste it on such a small injury, but, thanks to the bond with Jackson, she could afford to be more generous.\n\nPalla had an aching back from where one of the tent stakes had struck him, but it wasn't anything a few minutes of stretching wouldn't fix. Their neighbors helped Chaki and Landri fix their tipi back to the ground, and soon enough, he was back inside and sleeping soundly. Landri joined him to take her own rest.\n\nChaki knew she should try to get some sleep, but with Jackson and Shaka inside the mountain, sleep had never been more distant. She remained outside, meditating near the fire.\n\nShe watched the flames, held her essence, and breathed. The smoke smelled good. Out on the plains, they had to burn whatever they could find, but the Three Hills tribe had brought entire sledges filled with sweet-burning red pine.\n\nHer essence bar filled at an incredible rate. She could feel the change as well, that familiar sensation of returning potential, energy condensed and swirling inside of her. What used to take her days now only required a few minutes of focus.\n\nWith her magic restored, Chaki climbed to her feet and turned away from the fire, looking down the path toward the center of camp. The elders were probably already meeting about Rachel's sudden and chaotic arrival. And now, Boonta was alone with her in a tent.\n\nChaki didn't like it. She needed an excuse to visit.\n\nShe grabbed a bison-heart pouch from where it hung on the side of their tent and made for the river. She filled the pouch with water, then walked back through the camp with a quick stride. Making sure Rachel wouldn't be dehydrated in her unconscious state seemed like a pretty good reason to intrude.\n\nThe tent erected near the elder's large tipi was small, something a newly married couple would use having just left their respective families. At the moment, Yukatan was using it to store his spare wealth; what he didn't hold in horses within the herd was kept in the form of bison skins and wolf pelts.\n\nChaki called out and pushed the entrance flap aside at the same time. \"Boonta, I'm bringing water for Rach \u2013\"\n\nShe stopped, the pouch held in both hands in front of her. Her eyes widened.\n\nRachel was lying face up on a blanket, still in her enchanted slumber. Boonta was kneeling next to her, one arm tucked behind his back. Sweat rolled off his face. Chaki could see rips and tears in Rachel's black leather, exposing the pale skin beneath.\n\nBoonta's lips moved up and down. He swallowed, looked at Rachel, then up at Chaki. \"What is it? What are you doing here? She hasn't moved.\"\n\n\"Boonta,\" Chaki said, \"what are you holding?\"\n\n\"I'm not holding anything,\" he said. \"Why do you say that?\" he brought his hand forward and turned both his palms up.\n\nChaki threw the pouch at him. Boonta flinched, then grabbed for the container before it hit his face. Chaki darted around the side of the tent.\n\nThere was a knife lying on the ground behind him.\n\nChaki's mouth dropped open. \"By the One-Above. You were trying to kill her.\"\n\n\"That's not \u2013\" The pouch dropped through Boonta's fingers and rolled across the ground. \"I can explain this. It's not what you \u2013\"\n\n\"Then you were trying to have your way with her?!\" Chaki shouted. \"A defenseless girl?!\"\n\n\"It wasn't \u2013 I \u2013\" Boonta's eyes were wild. His tongue stuttered over itself.\n\nChaki marched forward. \"I knew it. You rat. You disgusting snake!\"\n\nBoonta grabbed the knife and lunged for Chaki, tackling her at the waist. Chaki tried to scream, but the air was knocked from her lungs; it turned into a high-pitched grunt. Boonta raised the dagger and jammed it down into her chest.\n\n\"I tried to stop her,\" he shouted. He ripped the knife free, then stabbed Chaki again, and again. He mashed his other hand over Chaki's mouth, stopping her from calling for help. \"The collared woman woke up and attacked you. Killed you! I told them, I told them not to trust her, I knew she \u2013\"\n\nBoonta's hand froze in the air. He looked at where he'd punctured Chaki's hide dress with his knife. \"You're like him.\" He grabbed her wrist, and twisted it, bending her hand to look at Shakhan's symbol. \"You're like them. You're one of them.\"\n\nBoonta dropped the knife and put his hands around Chaki's throat. He was crying, now, sniveling.\n\nChaki grabbed his wrists, pulling at his hands, but he was far stronger. She had only been dazed from his tackle, but the choking was far worse, worse even than the sensation of a knife sinking into her stomach. Her health, having gone down in heavy chunks, now began to tick downward.\n\nChaki tried to call out, to say anything, but it came out as choked gasps, and then she was out of air. It felt like her throat was being crushed.\n\nShe flung her hands up into his face. She dug a nail into his nose and pulled it up. Boonta made a pained noise and twisted his head away, shaking her where she lay on the ground.\n\n\"I loved you,\" he said. \"I love you. Why did you pick him?! You bitch.\" He slammed her head into the dirt. \"You fucking bitch! I should have had you. You \u2013 you could have had me!\" He slammed her again. \"I hate that I still love you. I hate it. I hate you!\"\n\nChaki shifted her hips, trying to throw him off, but he was a lead weight made out of muscle. She kicked and scrabbled her feet on the dirt, but she couldn't get purchase.\n\n\"This is all his fault,\" Boonta said. He kept his head back, out of her reach. \"Jackson Vedalt. I'll kill him. When he comes back, I'll kill him! Jackson Vedalt!!\"\n\nThere was a scream - a hard, throat-ripping scream that tore into the air. Chaki thought it was her own voice for a moment, but she could still feel the pressure stopping her from taking a breath. Boonta looked back over his shoulder, his hands around Chaki's neck loosening.\n\nRachel was awake. She was rolling on the ground, clawing at her neck. She screamed as if her entire body was on fire, over and over without pause.\n\n\"Shut up!\" Boonta shouted. \"Shut up you fucking \u2013\"\n\nBoonta's words cut off in a mangled cry as Chaki leaned up and dug her fingers into his face as hard as she could, digging into whatever she found with her nails. She found something soft, and Boonta shoved her away. She rolled across the ground, coughing and desperately filling her lungs with air.\n\nBoonta stood back up, a hand on his face. He hesitated for a moment, then went for the tipi's flap. Chaki grabbed him by the ankle, and he tripped forward, hitting the dirt on his stomach. She climbed over him, then slammed the heel of her palm into his head, pushing his jaw into the dirt. She got to a knee on his back, lifted it, and slammed it down. Rachel's screams peeled over them.\n\nBoonta grunted, and then he rolled, pushing her off. They both got back up and rushed for the entrance. Whoever made it out first would tell the story.\n\nHanta shoved in under the flap. \"What in the name of the sun-burned demons is \u2013\"\n\nBoonta and Chaki slammed into him at the same time. Their collision took the entrance flap off its pinnings; they fell into a kicking pile of limbs and cloth.\n\nChaki used her elbows to pry herself free, getting her head out of the mess. \"Hanta, Boonta \u2013\"\n\nBoonta's hand caught Chaki in the side of the face. She nearly bit her tongue off.\n\n\"Hanta,\" Boonta said, \"the girl woke up and started to attack us! She tried to choke Chaki!\"\n\n\"What is going on here?!\"\n\nChaki felt herself being lifted up. Hanta brushed off her shoulders. Yukatan was standing next to him, still without his headdress, his eyes reddened and tired by a long night. \"Chaki, is that screaming the girl? What is this?\"\n\nBoonta shouldered his way in front of her. \"Father. The girl almost killed Chaki. She got my knife away from me when I wasn't looking. Things were almost \u2013\"\n\n\"That's not true!\" Chaki said. \"Boonta tried to kill her, and me!\"\n\n\"What?\" Boonta asked, aghast. \"What are you talking about? I just saved your life!\"\n\nWhen she saw Boonta's face, his expression, and heard those words, the bold-faced lies of a man that tried to force his way with her, something inside Chaki snapped.\n\nShe rushed at Boonta, leading with her fist. She caught him off-guard and socked him straight in the eye.\n\nBoonta reeled backward. Chaki fell on top of him. \"You damn, disgraceful, Shakhan-cursed liar! You tried to kill me!\" Boonta covered his face with his hands as she rained down her blows. \"You piece of shit, you slime off a worm's ass, you angel-damned horse-fucking little shit-headed bastard!\"\n\nChaki was pulled backward. She fought against the arms that were on her, kicking, scraping to get back and beat Boonta into the dirt until his mouth was so disfigured he couldn't speak ever again.\n\n\"Chaki, calm down!\" Vuntha's voice, shouting in her ear. \"Calm yourself! Chaki!\"\n\nChaki realized she was digging her nails into Vuntha's arms. She released him. Vuntha steered her back a few steps, then gingerly let her be. Her breathing came ragged though her throat, part from the lingering soreness, part from the sheer rage that was keeping every part of her as tense as a bowstring.\n\n\"What has gotten into you two?\" Yukatan shouted. His gaze swiveled between where Boonta was picking himself up, wiping the blood from his nose, and where Chaki stood. \"I can't turn my back without the two of you arguing and fighting. Yes, your relationship ended poorly. It ends poorly for many in the tribe! Act your age!\"\n\n\"Elder Yukatan.\" A new voice, deep and ponderous, joined what was quickly becoming a large gathering. It was Kunaya \u2013 the elder of the Three Hills. His hard face observed the scene from within the recesses of his headdress. Despite the hour, he'd apparently taken the time to strap the hundred feathers around his head for the meeting. \"What is the meaning of this? What is that screaming?\"\n\nAs he said the words, Rachel's screams cut off. Everyone exchanged glances. Hanta ducked into the tent. \"It's fine,\" he said. \"She's asleep again.\" He reemerged. \"Chaki, what happened in there?\"\n\n\"I would rather,\" Kunaya said, \"hear an opinion from someone who is of calm mind and sound judgement.\"\n\n\"He lied to his father's face!\" Chaki shouted. \"My elder's face!\"\n\n\"I didn't lie,\" Boonta said. \"I can't believe you're doing this. Even when I take blows for you, you do everything you can to destroy my honor. I don't give a damn if Jackson isn't who you'd thought he'd be. You can't have me back!\"\n\nChaki growled and took a step forward. Vuntha grabbed her shoulder. \"Chaki, get a grip!\"\n\nChaki pushed Vuntha's arm away, but she stayed where she was. She met Boonta's stare. \"I'm not going to stand here and let you feed them horse shit!\"\n\n\"To reiterate,\" Kunaya said, \"I'd rather hear an opinion from someone who isn't acting like a crazed wildcat.\"\n\nThe insult made it through Chaki's anger. She glanced about. Everyone was staring at her.\n\nAs she took in the gazes, she realized what it must have looked like. Her barreling out of the tent, then attacking Boonta, who didn't fight back, and then her screaming her head off at him. She bit down on her words and took a step back, deferring to Kunaya without a response. She couldn't talk back to the most powerful man under the mountain and expect to have her words heard.\n\n\"Boonta,\" Kunaya said. \"I know you as impulsive, and proud. But in your impulsiveness, you are honest.\" Chaki clenched her hands so hard her knuckles turned white. \"What happened?\"\n\nEveryone turned to look at him. Boonta cleared his throat. \"I was sitting in the tent, watching the girl. Chaki came with a pouch of water, saying we couldn't have her dying of thirst before the elders returned.\" Boonta gave a grudging shrug. \"I thought that was a good idea \u2013 I didn't know how long the girl had gone without water.\"\n\n\"And then?\" Kunaya prompted.\n\n\"We got into an argument,\" Boonta said. \"She claimed she wished to dissolve her promise of marriage with Tatanka Ska, and take up with me again. Apparently he wasn't up to her expectations.\"\n\n\"That's the stupidest thing I've ever heard,\" Vuntha said. \"Chaki would throw herself off the mountain first.\"\n\n\"Is this how the Windseekers work out their problems?\" Kunaya said. \"Interruptions, flinging vile words at one another like mud? Honestly, Yukatan, get these children either under control or out of my presence. I was not in the mood to be roused to talk about some vagabond girl tied to a horse, and I'm not in the mood for this petulance.\"\n\n\"And neither am I,\" Yukatan said. His gaze fixed on Vuntha, and then on Chaki. \"You will have a chance to speak after. Be. Silent.\"\n\nVuntha swallowed and looked at his feet. Chaki just kept staring at Boonta.\n\n\"Get to the point,\" Kunaya said.\n\n\"In short, I didn't agree to take up with her again,\" Boonta said. \"I tried to warn her about him from the start, but she made her choice, and a relationship isn't something to be turned on and off at her whim. Things became heated. I think the girl woke up and slipped my knife from my belt while we spoke, and stabbed Chaki. I managed to get her off and take the knife back, and then something happened with her collar. The girl started screaming, rolling on the floor, and she dropped the knife.\" Boonta gingerly touched his broken nose. \"Chaki wasn't finished with me, even after I stopped her throat from being cut.\"\n\n\"Chaki was stabbed,\" Yukatan said. \"Why is she standing?\"\n\n\"She's like Tatanka Ska,\" Boonta said. \"The knife didn't harm her. But she was still lucky. A warrior marked by Shakhan probably knows ways around their magic.\"\n\n\"Alright,\" Kunaya said. He glanced at Chaki. His eyes were not pitying. \"And your story?\"\n\n\"I came in with water,\" Chaki said. \"And I found him, kneeling over her, stabbing the girl with his knife!\"\n\nBoonta raised his palms. His voice was incredulous. \"Why would I kill the girl I just said we shouldn't kill? That we should wait for Shaka, that I'd help guard her? That doesn't make any sense!\"\n\n\"Does she have injuries?\" Kunaya asked.\n\n\"She's also like Jackson,\" Chaki said. \"A warrior of Shakhan.\"\n\nKunaya nodded. \"Then there's no evidence of a stabbing?\"\n\n\"No,\" Chaki said. \"There are tears in her clothing, where the knife was used to cut.\"\n\n\"There are tears,\" Boonta said quickly, \"but they were already there, from her being tied to a saddle. Her clothing was ripped before she got here. They were probably made worse when I fought her off.\"\n\n\"Is that true?\" Kunaya asked Yukatan.\n\nThe elder frowned. \"I took her from the horse. But...I don't remember either way. It was dark, and I wasn't looking for it.\"\n\n\"I helped you untie her, remember?\" Boonta asked. \"I saw it clearly enough. And I was sitting in the tent for twenty minutes before now.\"\n\n\"That's rather convenient for you, isn't it?\" Chaki said.\n\n\"Chaki,\" Yukatan said. \"Do not.\"\n\n\"I was there, too,\" Vuntha said. \"There weren't any rips in her clothing. Boonta made that up!\"\n\n\"Jackson Vedalt's best friend in the tribes,\" Kunaya said, \"defending his woman while he is away. Is there anyone in this story that is unbiased? Anyone at all?\"\n\n\"Look at this,\" Chaki said. She drew her dress out slightly. \"Look at the slashes! Boonta stabbed me! I would have died, if not for this.\" Chaki raised her hand, showing Shakhan's star-mark.\n\n\"This is ridiculous,\" Boonta said. \"That's from where she stabbed you!\"\n\n\"It's from where you stabbed me, before you gave up on that and tried to choke me to death!\" Chaki shouted. \"And her clothes didn't rip in the saddle. There will be cuts, like that from a knife, not frayed rips!\"\n\n\"I was fighting her off!\" Boonta shouted back. \"Of course I cut at her when I got my knife back!\"\n\n\"You tried to murder her!\"\n\n\"Why in the name of all the angels and the One-Above,\" Boonta said, \"would I try to kill the girl I volunteered to guard? I don't give a damn about her! I'd just as soon she never came here!\"\n\n\"You hate Jackson Vedalt,\" Chaki said. \"You hated him as soon as you saw him, because you think he took me from you. And you thought that if you could kill her, you could kill him.\"\n\n\"Unbelievable,\" Boonta said. \"Your lies twist faster than a wind spirit's cyclone.\"\n\nChaki was about to shoot right back, but Kunaya cut her off. \"It seems,\" the elder said, \"that given our...alternative testimonies, this becomes a case of competing motivations. On one hand, we have Boonta, who \u2013 as I have so recently heard from his father \u2013 showed restraint in requesting that we wait for the spirit guides before passing judgement, even though the girl is a stranger in sight of the mountain.\" He looked at Chaki. \"On the other hand, a young woman who is clearly in the thick of her emotions.\"\n\n\"Elder Kunaya,\" Chaki said, trying to control the tone of her voice \"I have only respect for you, and so I will not lie. My emotions are not fully under control. But if you think Boonta is some great paragon of wisdom and self-restraint, then you should better exercise recent memory!\"\n\nA very uncomfortable silence fell over the crowd. Everyone remembered Boonta's tantrum after his fight with Vuntha, and how he'd shoved Shaka away, but no one had spoken of it.\n\nChaki felt as though ropes of social decorum were stretching her limbs in different directions. She'd insulted the elder's son in front of the elder - in public. Worse still, she'd done it in front of another tribe's elder \u2013 and not just any elder, but the leader of the largest tribe of the Three Hills, and by extension, the entirety of the plains. And she'd laid down a not-so-subtle criticism of the very same's observation skills.\n\nTo her own amazement, she found that she didn't care. She felt an exhilarating rush at telling this man, with his overstuffed headdress, pretentiously butting into their tribe's personal matters, exactly what she was thinking. I wonder if this is how Jackson feels all the time.\n\nKunaya stared at her, sizing her up. Chaki stood without shame and stared back, waiting for his words.\n\n\"Elder,\" Kunaya said, \"it is your tribe, not mine. What is your judgement?\"\n\nYukatan put a hand on the bridge of his nose and sighed. He rubbed his palm over his face. \"Why do you two do this to me?\"\n\n\"Perhaps I might make a suggestion, so that we can all get back to sleep,\" Kunaya said.\n\n\"Please do.\"\n\n\"Separate them until their heads have cooled,\" Kunaya said. \"When all has had time to settle, perhaps we can be honest with one another, and agree to put this behind us. Riotous emotions can make bad ideas seem like good ones.\"\n\nChaki felt everyone give her a glance after his last sentence. Kunaya was building the situation against her, labeling her as the unstable girl that would act out if she didn't get her way.\n\n\"You said we needed a scouting party,\" Kunaya added. \"Let Boonta take this new task. Let his thoughts air themselves outside of camp for a time. That aside, it's important that we deal with this issue quickly, but we shouldn't overreact. Even their largest trading caravans rarely have more than a few dozen people. They're likely stopped for the night. Boonta's party should be small, so that they may move without detection. We ascertain their location and their numbers for now, and we may better decide how to move upon them in the morning.\n\n\"We're all tired, now,\" Kunaya said. \"Use the night to gather information, and when the sun's light shines, I think we'll all see a little bit clearer. If you have some of yours scout to the east, I'll have mine go south and west. The Dust-Gatherers can take the north side of the mountain.\"",
        "Heads were nodding. It was the second time in one night that dozens of people had been roused from their tents by a violent disturbance, added to everyone's weariness from the celebrations and the feast. Kunaya's words were resonating.\n\n\"Wise words, elder,\" Yukatan said. \"Boonta. You will take Vuntha, and Katran. Ride into the plains and scout for five miles east. Wake me when you return if you find anything.\"\n\n\"Yes, father,\" Boonta said. \"Though...\" He wiped a bit of blood from under his nose. \"I am not in the best condition, at the moment.\"\n\n\"Chaki,\" Yukatan said, \"if you would heal him.\"\n\nA dozen responses burst into Chaki's head at the thought of healing the nose she'd just broken. I'd rather eat slugs. I'd rather burn under the sun. I'd rather become the consort of a demon. I'd rather dance naked in front of the spirit guides from every tribe.\n\nInstead of speaking, in what Chaki believed was perhaps the greatest display of personal willpower she'd ever mustered in her entire life, she drew the runes and flung her will toward Boonta. It was a simple task; his nose cracked once, then shifted back into place.\n\n\"Thank you, Chaki,\" Yukatan said.\n\nChaki's words were as stiff and formal as she could make them. \"By your will, elder.\"\n\n\"Boonta,\" Kunaya said, \"a word, for a moment.\" He gestured out through the crowd, and led Boonta a short distance away.\n\nYukatan looked over all of them. \"The rest of you, sleep. And if there is anything more like this tonight, I'll feed you to Shaka.\"\n\nEveryone took off in a hurry at that pronouncement. Yukatan sighed heavily, then looked at Chaki. \"Girl. What in the name of Mother Earth is going on between yourself and my son?\"\n\n\"Elder,\" Chaki said. She drew herself up, trying to put as much of the mature spirit guide into her voice as possible. \"I swear to you, by all the spirits, and the angels, and by the One-Above.\" She raised her mark. \"I swear by Shakhan, and on my oaths as a woman who seeks to guide the spirits of our tribe, I have not lied to you this night. Your son has lost his mind, and I fear for his soul - as much worth as it has left.\"\n\nYukatan looked at the back of her hand, and then back at her. She could see it turning behind his eyes, his hesitance, decisions torn between what he wanted to see and what he was afraid was true.\n\n\"Did Shaka tell you what he almost did to me?\" Chaki asked. Yukatan said nothing. Chaki moved closer to him. \"She told you. You did nothing then, and I did not speak of it further, because you are my elder - the elder my father chose. But if you continue to do nothing, then nothing good will come of it. If Jackson wasn't there to save me that night, Boonta would have \u2013\"\n\n\"Go!\" Yukatan shouted. Chaki leaned away, blinking. Yukatan took a long breath. \"Go to sleep, Chaki. I will consider this further in the morning. Hanta, you watch the girl.\"\n\nChaki watched Yukatan retreat into the night. She willed him to turn around, to change his mind, but he didn't.\n\nShe turned to Vuntha and Hanta. \"Do you believe me?\"\n\n\"I don't want to believe it,\" Vuntha said, \"because apparently I'm going out scouting with a madman in a few minutes.\"\n\nHanta squinted. \"There are bad spirits out this night. Once Shaka returns, the truth of this will find its way free.\" He hesitated, looking back at Chaki. She could see the question on his face. The only people that knew about Boonta's actions were Yukatan, Shaka, Jackson, and Vuntha, but she was sure that Hanta was taking a rather good guess as to what she'd meant. \"Chaki,\" he said, \"you should probably get some sleep.\"\n\nVuntha lingered with his father. Chaki walked alone through the camp. She ran through the events in her mind's eyes, over and over, and with each repetition she experienced the same boiling anger and confusion. Why couldn't they just see it? Why couldn't Yukatan just admit what Boonta was and be done with it?\n\nPlease hurry back, Jackson. Shaka.\n\n<center>****</center>\n\nKunaya all but dragged Boonta by the collar once they were out of sight. He pushed them through the tents, leading them to one of the muddy roads that had been churned up by hundreds of footsteps between the encampments. This late at night, it was empty; they were distant from the closest tipis to either side of them.\n\n\"You test my patience, boy.\"\n\n\"The girl was with that man,\" Boonta said. \"Tell-something.\"\n\n\"Commander Tell'ad.\"\n\n\"Exactly,\" Boonta said. \"She saw my face. I had to make sure she didn't wake up. Chaki said she was Jackson Vedalt's friend. She would have told them about the \u2013\"\n\n\"Enough,\" Kunaya said. \"I realize your position. But she was already unconscious. Even if she wakes, that collar keeps her unable to speak. Even if you managed to kill her, what would you have done with the body? Carried it out through the middle of the camp? Covered it with a cloth and hoped no one came to check on you?\"\n\nBoonta licked his lips. His eyes hunted for answers in the mud at his feet.\n\n\"You should have consulted with me before taking such a risk,\" Kunaya said. \"Understand that I have extricated you from your own foolishness for the last time.\"\n\n\"Yes, elder.\"\n\n\"I've managed to maneuver you into a key position.\" The elder stepped up to Boonta and clasped his shoulder. He leaned in close. \"You will be alone with Vuntha and Katran while scouting. Lord Hale's armies are almost upon us. You know what must be done?\"\n\n\"Yes, elder.\"\n\n\"Good. Go do it.\" Kunaya slapped his shoulder again. \"My own tribe is readying itself as we speak. Once it starts, ride around the edge of the conflict and find us. We will head southwest, then circle around to the other side of the mountain.\" The elder turned and walked off.\n\nThe green stone in Boonta's pocket felt heavy. He dragged in a long breath of cold night air. This was it. This was the moment.\n\nHe rubbed his hands together and glanced around. He felt watched. He scanned the dark places between the tents on either side of the foot-churned path. There was nothing. Just the wind and the dark.\n\nHe went to fetch his horse.\n\n<center>****</center>\n\nKatran gave a great yawn. He took a swig of water, then settled back on his horse.\n\n\"Vigilance,\" Vuntha muttered.\n\n\"Shut up, pebble.\"\n\n\"I don't like you either,\" Vuntha said. \"Let's just do this and go home.\"\n\nKatran snorted, shrugged, and flipped his reins a bit.\n\nThey rode close together, their horses plodding across the grass. Vuntha led slightly; Katran was behind and to the left. Boonta was further back on the right, completing a rough triangle.\n\nThe plains were dark. The stars weren't out; the sky was cloudy. A wind was driving the weather in from further west. It felt cold \u2013 a winter gust, heralding the end of autumn.\n\nVuntha drew his fur cowl tight around his neck. \"I thought,\" he said, \"you might have changed your attitude, after fighting with Jackson.\"\n\n\"Tatanka Ska is strong,\" Katran said. \"I respect him. But I don't recall you two getting married, so until then, you'll have to earn your own honor, pebble.\"\n\n\"I did beat Boonta.\"\n\n\"You tricked him.\"\n\n\"I used his assumptions against him.\"\n\nKatran made a considering huff. \"How...calculating, of you. You sound more like Tatanka Ska every day.\"\n\n\"I think he's having a bad influence on me,\" Vuntha said.\n\n\"At least you have a sense of humor,\" Katran said. \"Nothing worse than a dry pebble.\"\n\n\"My name is Vuntha.\"\n\n\"Oh, yes, how terrible of me to forget. Has it been five miles yet?\"\n\n\"A bit further,\" Vuntha said. \"Unfortunately.\"\n\n\"It'll be sun up by the time we make it back,\" Katran said. \"I'm going to be tired on the day of my wedding. I already asked Malaki to move it back, but she refused.\"\n\n\"Why?\" Vuntha asked.\n\n\"Chaki and Tatanka Ska are to be married tomorrow,\" Katran said. \"She doesn't want our pairing to be an afterthought to theirs.\" He heaved a sigh. \"Women. They'll sacrifice anything for the sake of appearance.\"\n\n\"Enough already,\" Boonta muttered. \"Your complaints make me sick.\"\n\n\"The fiercest warrior of the Windseekers speaks,\" Katran said. He raised his head to the night. \"Beware, spirits! The mighty Boonta shall brook no complaints.\"\n\n\"Shut up.\"\n\n\"Are you jealous that you're the only one not getting married? Perhaps you'll be single forever.\"\n\n\"Shut up, Katran!\" Boonta shouted.\n\n\"Keep your voice down,\" Vuntha said. \"Did you forget we're scouting?\"\n\n\"But doesn't that sound like a romantic legend?\" Katran said. \"A warrior alone, against the cold and the bison \u2013 ah, I forgot. Boonta doesn't have to hunt. His father is the elder.\"\n\n\"Katran,\" Vuntha said. \"That is enough.\"\n\n\"Don't instruct me in anything, pebble,\" Katran said. \"You'd be nothing if Tatanka Ska didn't rescue your dignity from the mud. Why he bothers, I do not know.\"\n\n\"Perhaps because he knows about something called honor,\" Vuntha hissed. \"And loyalty.\"\n\n\"Loyalty?\" Boonta said. \"What makes you think Katran knows about that? He only cares about a good fight. Like a rabid dog.\"\n\n\"And you only cared to use me as your tool for your pathetic little vendetta against your betters,\" Katran said. \"Did you think me your friend, Boonta? I knew you'd get me my battle against Tatanka Ska, and you did. The tribes will never forget the day I withstood a warrior with the blessing of Shakhan for hours with naught but the strength of my limb and will.\"\n\n\"You know nothing of strength,\" Boonta said.\n\n\"Who was it that lost in the first round to a pebble?\" Katran said. He started laughing again. \"Who pushed aside his own spirit guide because he could not bear the weight of his own weakness? Oh, yes - I remember his name! It was the elder's son, Boon -\"\n\nA sharp grunt cut off Katran's words. Vuntha glanced over his shoulder, about to shout Katran down before he gave them away to the dark with his mocking bravado.\n\nKatran had a knife sticking out of his side.\n\nKatran slowly looked down at the wound. His head turned in confusion at the wet patch of blood staining his jacket. He slumped off his horse and tumbled to the grass.\n\nBoonta jammed his heels into his horse and charged at Vuntha out of the darkness, leading with his spear. Vuntha threw himself from his mount, rolling across the ground and back up to his feet. Boonta's spear struck Vuntha's horse, stabbing it in the neck. Boonta wrenched his weapon free as the animal screamed and went wild, scampering into the night.\n\nBoonta wheeled his horse and faced Vuntha. \"And now there is no ring, and no rules to stop me.\"\n\n\"Boonta,\" Vuntha said. He gripped his spear tighter. \"What is the meaning of this?\"\n\n\"The meaning?\" Boonta's face distorted into a sick expression. \"You and your demon-fucked honor. Your whole family is a pathetic group of showboating warriors. Your father is just waiting for mine to die so he can take over the tribe! Second-guessing his every decision!\"\n\nVuntha grappled with Boonta's words. \"That isn't true. You know that isn't true.\"\n\n\"When I'm finished with you,\" Boonta said, \"you'll be dead, and everyone else will be my peasants, and they'll slave for me for the rest of their lives. And it won't be this half-rule my father is satisfied with, running around like an exhausted parent trying to shepherd idiots. Real rule! Real power! And anyone that insults my name - I'll have them bound and sold as slaves!\"\n\n\"Slave?\" Vuntha shook his head, confused \u2013 and then it hit him. His eyes widened. \"You sold us out to the iron men! That's how they captured Shaka and Chaki in the first place. They're out there, aren't they?! You were trying to kill Jackson's friend before she could tell us! You betrayed us to those honorless rats!\"\n\n\"I betrayed you?\" Boonta said. \"I, betrayed you?! Chaki threw everything she had with me away after a few days walking alongside some white-skinned freak of nature! And you think I don't know what you and the others say about me? Lazy Boonta, the elder's son, relaxing in the shade of Yukatan! And Malaki \u2013 she passed me up for Katran, and now even Katran himself mocks me. You heard him \u2013 showing respect for that earth-cursed mongrel that did nothing except luck into his powers and stumble his way across the plains! You're the ones who betrayed me! All of you!\" Boonta kicked his horse into a gallop, leveling his spear at Vuntha.\n\nVuntha had seconds until he would be impaled or run down. He couldn't fight a man on horseback alone and exposed on the plains. But his toes had been searching while Boonta had been ranting. He bent down and came up with a new weapon.\n\nVuntha chucked the rock at Boonta's horse as hard as he could. It struck the animal in the nose, skipping across its face. The horse promptly pulled up, tossing its head and turning away sharply. Boonta fought against it, trying to bring the animal back under control.\n\nVuntha ran up and jammed his spear into the horse's flank. He lodged it between the ribs and twisted. The horse made a screaming, high-pitched whinny, and bucked hard. Boonta was thrown clear off his mount and fell to the grass.\n\nVuntha winced as he pulled his spear free, hoping the injury wouldn't be fatal to the creature, but he hadn't had the luxury of being picky with his target. The horse ran off into the dark, as confused and pained as the first, still bleeding from its side.\n\nBoonta rose off the ground with his spear. He gave his head a hard shake, then stalked forward. Death was in his eyes.\n\nVuntha focused on his breathing and set himself defensively. Tiring Boonta out had worked before. It could work again.\n\nBoonta lunged, extending his spear with a one-handed thrust. Vuntha slapped it to the side, backing away at the same time. Boonta kept thrusting, and Vuntha gave up his ground.\n\nBoonta chased after Vuntha with a flurry of thrusts, determined to skewer him. Vuntha stepped away from what he could and blocked what he couldn't dodge. There was no rush - he had an entire plain to work with. Focus. Don't get caught. Let him rage.\n\nAfter another missed attack, Boonta growled and sprinted forward. Vuntha back-stepped faster, trying to keep his distance. Boonta's thrust had a short range, but it came in fast, powered by both his arms.\n\nVuntha deflected it to the side, but not hard enough. The spear tip nicked his upper arm. It was barely a deep scratch, but it distracted Vuntha for a moment too long.\n\nBoonta was in his face, past his guard, turning his spear over in his hands. He whipped the butt of his weapon up from below. Vuntha blocked with the shaft of his own spear, stopping it from hitting his chin.\n\nBoonta jabbed forward under the block, catching Vuntha in the throat. Vuntha coughed and stumbled backward. His feet caught on something in the dark; he wobbled, then fell on his back.\n\nBoonta kicked at something \u2013 whatever Vuntha had tripped on \u2013 then marched forward. He thrust his weapon down.\n\nVuntha batted the attack aside. Boonta's spear struck the dirt.\n\nBoonta drew it back in half a second and aimed another attack at Vuntha's stomach. Lying on the ground, Vuntha couldn't get his spear back around in time to block. He tried to roll away, but the thrust was coming in too quick.\n\nBoonta grunted, then tripped; his feet were suddenly working hard, trying to keep his balance. His spear thumped into the ground next to Vuntha's ear. Vuntha kicked out, shoving Boonta back the other way, then rolled to the side and up to his feet, bringing his spear to bear.\n\nKatran was up on one knee \u2013 he'd been the obstacle that Vuntha had fallen over. He'd pulled the knife out of his body and used it to slash at Boonta's legs. Boonta backed away, looking at Vuntha, then Katran. His left leg had a limp; Vuntha could just barely see the sheen of blood in the dark.\n\nVuntha glanced at his sudden ally. \"Can you move?\"\n\nKatran nodded. He held the knife in one hand; his other was pressed on his wound. A dark stain was growing under his fingers. \"I can move long enough to kill this honorless bitch!\"\n\nBoonta turned and ran.\n\nVuntha and Katran exchanged a glance. Vuntha took off after him. Katran tried to keep up, but he couldn't run in his condition.\n\nBoonta made it to the closest horse \u2013 Katran's mount. It had wandered away somewhat, startled by the fighting, but unharmed. Boonta slung himself on the animal and ushered it into a gallop, riding out into the east.\n\n\"You coward!\" Katran shouted. \"Traitor!\" After the last word, he broke into a fit of pained coughing.\n\n\"Katran!\" Vuntha ran back and supported him under the arm. \"That looks bad.\"\n\n\"Need a spirit guide,\" Katran said. He clung to Vuntha's shoulder. His breathing was pained and sporadic. \"Have to ride back, tell them.\"\n\nVuntha nodded. \"Lie down, keep your hand on it. I'll run and see if I can find a horse. I don't think I got Boonta's too badly.\"\n\nKatran made an affirmative grunt. Vuntha lowered him back to the ground. Katran lay on his good side, holding the wound tight and squeezing his eyes shut.\n\nVuntha scanned the horizon for the horses, cursing the clouds for blocking the moon. He squinted. He could almost make out a silhouette of a horse in the distance; it looked like it was walking toward them.\n\nMore movement. Vuntha blinked. He crouched, and rubbed his eyes. He wasn't sure if he was seeing it, or if the thick of the dark was swimming in his eyes.\n\nIt was from crouching that he realized. The ground moved under his hands - a vibration, like that from horses or bison. Hanta had showed him that trick many times. Feeling the intensity of the earth's vibrations was a good way to gain your bearings if the herd was out of sight.\n\nThis one was different; regular, rhythmic, pounding. Like a drum.\n\nA tiny green light shot up a few yards into the sky. Vuntha's eyes followed its arc. Just before it fizzled away, he saw them, illuminated against the night \u2013 rows and rows of faces.\n\nVuntha ran back to Katran. \"We have to move!\"\n\n\"What?\" Katran protested with a groan as Vuntha lifted him up. \"What's going on?\"\n\n\"The iron men are coming! We're in their path!\"\n\nVuntha shuffled Katran along as fast as he could. The sound drifted over the air a few moments later \u2013 the heavy fall of footsteps in time. The march of men going to war.\n\nVuntha nearly dragged Katran across the ground, desperate to get around the hazy line of men and horses. He tried to stay as low as possible. Katran worked to move his feet, but it wasn't much help. He grunted at the position he had to bend with his stomach injured.\n\n\"Keep quiet!\" Vuntha said.\n\n\"It hurts,\" Katran growled.\n\nVuntha didn't dare risk more words. They were almost around the edge of the line of soldiers. The final group of men flanking the end were clad from head to foot in spiked armor. They held massive, hooked spears. Their feet clamped into the ground with the sound of iron.\n\nAnd then they were past. Vuntha pulled Katran flat to the ground. Whether it was thanks to the dark, or the big helmets obscuring their sight, the two scouts went unnoticed.\n\nThe darkness that had just been his foe when searching for the horses had become his greatest ally. Vuntha sent a silent prayer to the One-Above for denying him what he wanted in exchange for what he needed.\n\nThe thick column of men roared by. Vuntha realized how they'd come up so suddenly \u2013 they were bent in a half-jog, their equipment and supplies jostling in great packs and canisters dangling from their backs. They weren't using torches \u2013 they couldn't, if they wanted to stay hidden \u2013 but, even with the thick dark, there were no sudden surprises out on the flatlands. They'd be at the mountain before the sun rose.\n\nVuntha heard hooves. He ducked his head back down. A group of horses galloped by on their opposite side; he could hear them talking, exchanging strange words in a guttural tone. More horses followed behind the main march of the soldiers, and then a long column of wagons. Considering the distance they'd had to come, they must have brought plenty of supplies. That was the quiet protection of the plains; outsiders couldn't easily survive in the open without bringing all the food they would eat, not to mention the struggle to find sources of water.",
        "\"Stay down,\" Vuntha whispered. \"I'll be back soon. You'll know me by the red sparrow's call.\"\n\n\"Red sparrow,\" Katran repeated. \"What are you going to do against so many?\"\n\n\"Steal one of their horses,\" Vuntha said. He slipped into the darkness.\n\n<center>****</center>\n\nBoonta squeezed the green stone that was in his pocket as he rode his horse into the night. There was no answer. He squeezed it again, and again.\n\n\"That's the third time you've bothered me,\" came a voice that was not Tell'ad's. The accent was far thicker than that of the commander. \"I hope you have something important to say.\"\n\n\"I ride for you now!\" Boonta shouted at the stone. \"I tried to kill the others, but they were two against me alone. They lost their horses in the fight!\"\n\n\"Then we can still catch them. Where are you?\"\n\n\"Headed toward where...\" Boonta trailed off. Suddenly, men were in front of him, thousands of them arranged in neat and orderly rows, spears held in the air. \"I'm right in front of you.\"\n\n\"I'll send a signal. Stay where you are.\"\n\nA green light flew up. Smoke trailed behind it, as if a green torch had been tossed into the sky. It didn't go very high before falling, then vanished before striking the ground.\n\nBoonta's horse snorted and stamped as the wall of men approached. He patted its mane and tightened his hold on the reins. The line of men stormed closer. Boonta raised his arm, then waved it over his head trying to draw attention to himself, but the soldiers didn't halt. He drew back in his saddle, bracing himself.\n\nJust as it seemed they would crash together, the men moved around him. Boonta watched in wonder as they flowed about him like water, without even pause. It was only then that he realized those out to the sides had spread to make room for those in the center.\n\nAnd then, they were past him, their lines merging back together as if nothing had happened. Boonta was suddenly amongst horses. He could hear the wheels of wagons. Men turned their faces to look at him, taking him in and muttering to themselves.\n\n\"You're Tell'ad's spy?\"\n\nBoonta turned his horse to the source of the voice. A man flanked by several iron-clad cavalrymen was watching him. Even in the night, his face was pale. The rest of his body seemed to merge with the dark. Boonta realized his hair and his clothing were black \u2013 or some dark color. It was hard to tell.\n\nThe man didn't look like much next to the warriors. He wasn't very tall, even on his horse, and he had an average sort of face. But his eyes were bright and cold as the night.\n\n\"I am,\" Boonta said. \"Where is he?\"\n\n\"He's...\" The man trailed off. \"I do not know the word. He is not able to speak right now.\"\n\n\"Fine,\" Boonta said. \"Who are you?\"\n\n\"I am Lord Riegart Hale, Regent Select of the Emperor Adrian Kalgradis and governor of the Western Kingdom, Steroth,\" he said. \"You are...Buntha, yes?\"\n\n\"It is pronounced Boonta! And I am son of Yukatan, elder of the Windseekers!\"\n\nThe man picked through his words with a precise air. \"Do not raise your voice to me. Your lineage is not relevant in the empire. Remember, if you will, that you and yours came to me to lift you out of the mud.\"\n\nBoonta was not in the mood for insults, but he bit down on his anger and took a long breath. \"I just came from a fight,\" Boonta said. \"I injured their horses. They aren't far behind me, just two of them.\"\n\nHale nodded. He looked to one of his guards and spoke words in their language \u2013 garbled, ugly sounds with too many consonants. The guard, who - Boonta noted - had a colorful plume on his shoulder, turned and shouted orders. A group of horsemen broke off and rode around the column of marching soldiers.\n\nHale clicked at his horse and snapped his reins. His men did the same, and they started forward again behind the soldiers. Boonta tightened his knees on his horse's flanks, prodding it forward.\n\nHe had a chance to glance at the wagons. Some were packed with sacks and crates, but one of them held people. They were bound in chains that were bolted to the transports, hunched over under the canvas. Boonta couldn't see them too clearly in the dark, but they didn't look excited to be along for the ride.\n\nI'll have servants like this man. Obedience, like this man. I just have to be patient. He breathed slowly, trying to purge the tension from his body.\n\nFaces swam into place over the forlorn looks on the chained slaves \u2013 everyone who'd mocked him. Hanta, Vuntha, all of the warriors. And Jackson Vedalt. He'd put him in a collar, like that yellow-haired bitch, and make him watch as he took Chaki back. When he was a knight, and Jackson was rotting in a castle dungeon, Chaki would come back on her knees. He smiled as he imagined the look on Jackson's face.\n\nHale spoke without looking at him. \"I've been in contact with Kunaya. He informed me you'd be coming just earlier. It wasn't a clean kill, but at least you stopped them from getting back to your camp.\"\n\n\"It was two against one,\" Boonta said.\n\n\"And you had...\" Hale paused, shook his head. \"They did not know you were coming against them, is what I mean to say.\"\n\n\"One of them is one of our best warriors,\" Boonta said. \"I stabbed him in the gut, and I nearly killed the other.\"\n\n\"I'm sure it was a terrific battle.\"\n\nBoonta realized his left leg was throbbing. He looked down \u2013 it wasn't life threatening, but he was still bleeding. The pain was coming back as his adrenaline faded. \"I'm injured. Is there anyone that can treat me?\"\n\n\"Concerning your prowess,\" Hale said, ignoring his request, \"I'm a little disappointed. Kunaya promised better. But we'll correct the problem shortly.\"\n\nBoonta took another slow breath. He already wanted to throttle this Hale. Tell'ad had his arrogance, but he didn't ooze it from every pore like this one. \"Just run them down,\" Boonta said. \"They have nowhere to hide. It's miles yet to the mountain's foothills.\"\n\n\"Actually,\" Hale said, \"I was talking about you.\"\n\nBoonta realized there was something around his neck. There was a soft click. He whipped his head back.\n\nBoonta saw a man in black robes on a horse. His hood was pulled low, and he was already steering his mount back behind the column. When his horse's hooves hit the ground, there was no sound - no warning to give him away.\n\nBoonta reached up. As soon as his hands touched what was there, a blue light flashed, and he felt a shock spike through his fingers and up his arms. He drew back, cursing.\n\n\"Kunaya said he'd give me a formidable warrior as a gift,\" Hale said, \"but I think I have something like a wild dog. More bark than bite.\"\n\nBoonta brought his head back to try and see the object on his neck. He couldn't get enough of an angle, but he could feel at it with his chin. It was a stiff wooden collar. The same that the girl had worn.\n\n\"I am not a dog,\" Boonta said. \"Take this off! Now!\"\n\nBoonta felt fire burning in his chest, as if acid was welling up from his stomach. He clutched his abdomen and leaned forward on his horse. His mount snorted and skipped forward as it felt Boonta's knees press in.\n\n\"I told you not to raise your voice to me,\" Hale said.\n\n\"You said I would be given a title!\" Boonta said. He fought against the pain, pushing his concentration into his voice. \"Land!\"\n\nHale made a strange face, then leaned over and said something to his men in their tongue. He pointed at Boonta. They chuckled and laughed, looking at Boonta with pitying faces. Mocking faces.\n\n\"Take this off me!\" Boonta shouted.\n\n\"You're disobeying me again.\"\n\nThe burning in Boonta's gut was joined by the feeling of a hot iron twisting into his back. He screamed; his hands dug into his horse's flesh. The animal whinnied and turned in a circle, bucking; distracted by the pain, Boonta fell off the side and onto the ground. He curled up in the dirt, his face and muscles clenching up as if he could push the pain out if he tried hard enough. It only burned hotter.\n\nAnd then it was gone. Boonta tried to breathe. His abdomen ached from the pain.\n\n\"That's the proper place for a dog,\" Hale said. \"Don't make me discipline you a third time.\" Boonta felt a jabbing on his legs and lower back, spikes prodding him forward. \"Get up and walk.\"\n\nBoonta climbed to his feet. His horse was already being led away by the reins.\n\nHe looked around. A sea of faces and words he couldn't understand surrounded him. He was alone, and now he was collared, to be flogged with whips he couldn't see at the whim of this man.\n\nBoonta ran for his horse.\n\nHe almost made it before the pain stopped him. It sliced across the backs of his legs, digging through the wound Katran had already made. His ankles went numb. He tripped over himself and fell face-first to the ground. His nose took the impact straight on. It felt like a blade jammed into the center of his face.\n\nAs Boonta turned over in the dirt, he realized the blonde girl had been unconscious not from some magical slumber, but from the pain.\n\nHe could never go back to the Windseekers. He would never have lands, nor servants. Kunaya had sold him as a slave.\n\n\"It won't be like that,\" Boonta said. \"It won't!\" He repeated the words aloud, over and over. \"It won't. It won't.\" He turned his face up and shouted at Hale through his tears. \"I will not be your dog!\"\n\nThe pain started low again, then climbed up through his spine. It felt like the numbing sting of a limb that had fallen asleep \u2013 only worse. It spread out from his back, down to his hips, up to his shoulders, the bite of fire ants wrapping all over him.\n\nHale's words were as calm and clinical as ever. \"The sensation will stop when you bark like a dog.\"\n\nBoonta shook his head. The pain increased in intensity. It traveled down his arms and pricked his fingers, first with needles, and then with knives, digging in under his fingernails and peeling them back. He took in a breath, growled, breathed again. He pushed his nose into the ground, using his own injury to distract himself from the more severe pain.\n\n\"Barking, not growling,\" Hale said. \"Like this. Woof-woof.\"\n\nBoonta felt his legs twitch. He wasn't moving them \u2013 his body was acting on its own. His thoughts felt jumbled and pinched. The pain washed everything out. His mind begged him to give up, to let it go, to make it stop. His heart refused to bend.\n\nBoonta dug his nails into his palms, using the biting pain to break through the stinging. He slammed his forehead into the dirt. He rolled over and folded his arms and ground them together, fighting against the collar's enchantment.\n\nAnd then the pain got worse, and his heart started to bend.\n\nBoonta's instincts overrode his will. His throat rebelled against his control. He made noises in the dirt, spluttered and indistinct.\n\n\"What?\" Hale said. \"I couldn't hear.\"\n\n\"Woof.\" Boonta sprayed the sound out between his teeth. \"Woof!\"\n\n\"A little louder.\"\n\n\"Woof! Woof! Woof!!\"\n\nThe pain vanished. His nerves cried out in relief. His stomach churned, unable to cope with the alternation of everything at once and then nothing at all.\n\nHe felt drool on his mouth. Boonta tried to clean his lips only to taste a clod of dirt. He spat onto the ground.\n\n\"I always do enjoy that moment,\" Hale said. \"The instant when the tough ones throw away their pride.\" He looked into the distance. \"We've wasted too much time already. Walk, dog.\"\n\nBoonta slowly got up. He looked at his skin. There was nothing \u2013 no cuts, no injuries that would speak of that kind of pain. He could hardly believe it was gone.\n\n\"Don't fall behind,\" Hale said. \"It'll start again if you get too far from me.\"\n\nThey had dropped a short distance behind the column. Boonta had to jog to keep up with their horses. He ran after them with dead eyes and a cold, numb weight in his chest, deathly afraid of the wooden thing that was clasped around his neck.\n\n<center>****</center>\n\nVuntha heard shouting - Boonta's voice. He couldn't pick out the exact words of the conversation, but it didn't sound happy. \n\nHe slinked between the wagons at the back of the army. The latter half of the army's column had suddenly stopped. The guards were facing forward and mumbling amongst themselves. Vuntha couldn't understand their words, but it sounded like they were guessing at what was holding them up.\n\nVuntha noticed a horse being led back from further up \u2013 Katran's horse. Why would they take Boonta's mount away? Some kind of dissention? Good.\n\nVuntha followed the soldier leading the horse. He kept low, darting behind the backs of the wagons and crouching against the wheels. He peeked inside each one as he went. Most were filled with sealed containers and barrels made of wood and bits of metal. Another held stacks of spears; yet another contained piles of pointed metal rods that vaguely resembled arrows, but they seemed a bit too short to fly very well. Vuntha thought they might be crossbow bolts. He'd only heard of them from Hanta.\n\nThe man leading Boonta's horse reached a wagon near the edge of the train. Six horses were hitched to its front - more than the rest of them. It had three drivers, one man holding the reins with two armored guards seated alongside. More horses lined up along the wagon, tied to pegs on its undercarriage.\n\nThe men exchanged words. Vuntha crouched on the opposite side from them, trying to keep as small and still as possible. Katran's horse was tied off near the back. It still had Katran's belongings \u2013 his saddlebags, quiver, and bow, all strung on the horse's flank \u2013 and most importantly, their warning horn.\n\nVuntha glanced into the wagon. He sucked in a sharp breath.\n\nThere were people under the canvas. They were naked; their ankles were chained to the inside wall of the carriage. Their shoulders were bent; their heads were lowered. Collars hung from their necks. Their skin hung as well, drooping from their bones, as if the fat and muscle had been sucked out of them.\n\nVuntha had seen that before, during a bad winter in his childhood. Hunting had been poor. Food was stretched thin, and so too were the people.\n\nOne of the slaves looked up.\n\nSunken eyes in a gaunt face stared at him. Vuntha stared back. Slowly, he lifted a finger to his lips. The slave swallowed, then gave a single nod.\n\nVuntha exhaled. He glanced around for a moment. He didn't know when the wagons would start moving again. He needed to take the horse and go. But he couldn't leave these people like this, hopeless and abandoned.\n\nVuntha slipped his knife from its sheath. The slave flinched, but settled when Vuntha turned the blade, offering the hilt. The slave met Vuntha's eyes again, and this time, there was a little life in them. The man took the weapon and tucked it behind his back.\n\nVuntha wasn't sure what the slave would do with the weapon. He couldn't cut through his chains, after all. In the worst case, if his state became unbearable, he had a way out of this world and into the next.\n\nVuntha nodded a farewell, then went around for the horse. The beast snorted a bit, then rubbed its nose on him in a sort of greeting. The other horses stamped at the unfamiliar scent.\n\nVuntha fumbled with the rope. His hands seemed coated in sweat; his fingers kept sliding off the frayed fibers. He'd never had so much trouble with a knot in his life. He'd never had thousands of men that wanted to kill him a stone's throw away, either.\n\nThe slack fell loose, and the animal was free. Vuntha led it away as quickly as he dared, away from the carriage and into the dark. He heard another shout \u2013 louder. Boonta again.\n\nA few yards back from the wagon, Vuntha mounted up and started the horse out and wide behind the back of the army. He swept his eyes about for scouts, but the only people in his sight were turned toward the spectacle that had them stopped.\n\nHe reached Katran without incident. Vuntha dropped down and helped him up. \"I thought you were dead when I heard that \u2013\" Katran grunted. \"- scream.\"\n\n\"Brace yourself,\" Vuntha said.\n\nVuntha shoved Katran up onto the horse. Katran let out a pained moan, but cut it off short, grinding his teeth together. Vuntha swung up on the horse in front of him.\n\nThere was a shout in the distance. Vuntha heard hooves. A red light flashed from the direction of the wagons. The darkness was chased away by maroon light.\n\nVuntha jammed his knees into the side of the horse. It whinnied, then leapt into a sprint. A chorus of gallops thudded in his ears, warning him of others fast approaching. More lights flickered from behind them.\n\n\"Turn the horse left!\" Katran shouted. \"Now!\"\n\nVuntha didn't question it. He jerked the reins and jabbed in with his right knee. The horse darted left.\n\nA wind rushed by Vuntha's ear. An orb of fire flew past them, staining the grass with an orange-yellow glow. It struck the ground where Vuntha would have been if he'd kept straight.\n\nThere was a sound like a hundred drums smashed together. The orb exploded, throwing up a gout of flame and smoke. Vuntha pressed down close to the horse and urged it through the debris. The animal was in a wild-eyed panic, but it obeyed.\n\n\"Can you use your bow?!\" Vuntha shouted.\n\n\"I'll try!\" Katran said. Vuntha heard the snap of a bowstring a few seconds later. \"Shit!\"\n\n\"What?!\"\n\n\"I missed!\"\n\n\"Just keep firing!\"\n\nVuntha could see the line of soldiers; they'd caught up to the front of the army. There was another light amongst the marching men; blue, this time. More horses peeled out of formation to chase them.\n\nKatran fired again. \"That's one!\"\n\n\"How many left?!\"\n\n\"Twenty or so!\"\n\n\"Is there more magic?! What's the blue light?!\"\n\nKatran scanned the scene behind them. \"It's getting bigger. I don't know what it is!\"\n\n\"Keep watching it!\"\n\n\"It's coming!\"\n\n\"Which way?!\"\n\n\"I don't know!\"\n\nVuntha glanced over his shoulder. The light shifted as it crackled toward them, blue, then purple, indigo, back to blue. It seemed to warp the air around it, a single bolt of lightning summoned from the clouds.\n\nThe spark split in three, then shot forward. Vuntha pushed his knees into the horse as hard as he could.\n\nThe first bolt exploded near their pursuers. A soldier and his horse were blown forward so fast they flew past Vuntha and Katran, crumpling over the dirt like ragdolls. The smell of singed hair and metal slag rose over them.\n\nThe other two bolts exploded just behind them. Vuntha braced himself against the heat and clods of dirt. A rock smacked him in the shoulder and bounced off his head, slicing a gash across his temple. One of the saddlebags was gone \u2013 and with it, the warning horn.\n\nVuntha shook away the pain and worked to keep the horse under control. \"How many?\" he shouted.\n\n\"About the same!\" Katran shouted back to him. \"No more lights! I think they can't aim at this distance!\"\n\n\"Why aren't they firing arrows?!\"\n\n\"They don't have bows!\" Katran said. \"Horsemen with no bows! Just like the stories!\"\n\nVuntha and Katran raced across the plain. They left the main body of the army behind, but they were rapidly losing ground to the riders. Their horse was trained for life on the move, but it was carrying two people at full gallop.\n\nVuntha looked back just as one of Katran's arrows took a man straight through the eye. The soldier slumped in his saddle, dragging his horse sideways and into another. Their mounts collided and slammed down into the grass at full speed.\n\n\"Nice shot!\" Vuntha said. I don't think I could have made that in the dark.\n\n\"Eyes forward!\" Katran shouted.\n\nThere was shouting from the pack of horsemen. They split into two groups and spaced themselves further apart. Half of them swung to the left, losing ground in the chase, but setting up for a pincer attack. The other half stayed close behind, keeping the pressure on their quarry.\n\n\"They're going to surround us!\" Katran said.\n\n\"There's nowhere to ride!\" Vuntha said. He set himself and tried to think. They had a good number of arrows left. They both had a knife. Katran's spear was rattling in its holster next to him. Strong weapons, but nothing that could turn the tide.",
        "\"I'm slowing us down,\" Katran said.\n\n\"We'll be fine!\" Vuntha shouted. \"Keep shooting!\"\n\n\"Vuntha! They are going to kill us!\"\n\nVuntha urged the horse onward, but it was starting to tire. The cavalry was closing in.\n\n\"Hey,\" Vuntha called. \"You used my name!\"\n\n\"Ah,\" Katran said. \"You're no pebble.\" The sound of hooves rumbled in Vuntha's ears, almost cutting out Katran's voice as it turned quiet. \"I shouldn't have complained about my wedding. Now I'll never be wed.\" He lowered his face, drooping on the horse. \"Tell Malaki I'm sorry.\"\n\n\"Katran!\"\n\nKatran let himself fall from the horse, tucking in his arms and legs. Vuntha had only tried that move a few times in his life, and never at a full gallop. He would never have dared doing it while injured.\n\nBut Katran was the best of the Windseekers.\n\nVuntha kept his gaze over his shoulder, watching as the warrior hit the ground. Katran let his momentum play out, rolling over the plains like a human ball. And then he was up, stopped on a knee. He raised his bow and fired as fast as he could draw arrows.\n\nThe horsemen behind them dropped like flies. Katran took them down as easily as targets, one after another, striking his marks despite the near-darkness. Some of his shots flew wide, but he made up for it with his rate of fire.\n\nAnd then his quiver was empty.\n\nKatran raised his knife, his final defense against an oncoming horseman. At the last moment, he threw it \u2013 but his torso buckled from his wound, and he missed. Vuntha turned away as Katran was run down.\n\nVuntha steered his horse away from the flanking group, escaping into the hole Katran had opened. Without a second rider, his horse ran with renewed speed. The cavalrymen were clad in heavy armor, and their horses had to be tired from a long journey. He quickly made up the lost ground. \n\nVuntha blinked hard against the wind. His hands were white on the horse's reins. He had to make it back.\n\n<center>****</center>\n\n\"...and then we lost him in the dark.\"\n\nHale rapped his knuckles on his saddle and sighed through his nose. Things were not going well, and it hadn't even started.\n\nHis newest acquisition was barely worth the collar; far too unstable to be trusted with anything out of sight. On top of that, the scout the dog failed to kill had managed to escape. More frustrating still \u2013 somehow, after more than two decades under his control, Kaid Tell'Andran had scraped up his will like moldy jam from the bottom of a broken jar, resisting him just long enough to ensure Rachel's escape.\n\nHe was sure Kaid didn't remember anything. Hale had pushed those memories out with pain. And yet there Kaid was, denying Hale in almost the exact same way as before, like it was some sort of instinct that had been bred into him. Animals, his whole damn family. They would have seen Steroth burn before bowing to the emperor.\n\n\"Your orders, my lord?\" the man asked.\n\nHale looked at him. \"The scout is lost, but we can still hit them before they organize. Roe, Hildan!\"\n\nThe two mages rode to him, clad in their rune-marked black robes. Ren lowered his hood respectfully. \"My lord?\"\n\n\"Take the full cavalry. Use your Lightning matrices. One charge.\"\n\n\"Just one, my lord?\"\n\nHale thought for a moment. \"Take a second only if an opportunity presents itself. Avoid casualties and keep them under pressure until we arrive.\"\n\n\"Yes, my lord,\" he said. \"What of their own mages?\"\n\n\"Their spirit women are busy with some ritual inside the mountain,\" Hale said. \"Even with the scout giving them warning \u2013 no. No, this is a good thing. You'll arrive before they have a proper defense.\" He started to smile. \"Ride hard, but don't attack outright; give the horses a chance to rest and let the barbarians form up. Let them think they've just barely beaten our surprise. Then, you strike. They have nothing to counter you with.\"\n\n\"As you say,\" Ren said. He looked into the distance. Even in the dark, laid thick by the clouds, one could see the mountain. It was blacker than black, looming over them like a spike driven into the earth. \"What is it, my lord?\"\n\nHale eyed the mountain. He'd felt it several days earlier, but this close, all his mages could sense it. Some power within it was stirring, like a beast scratching at the inside of its cocoon.\n\n\"We'll find out soon enough,\" Hale said.\n\n<center>****</center>\n\nChaki didn't bother wasting time trying to get back to sleep. She wandered through the camp in an attempt to bleed off her frustration. Her wandering became a forced stride, and her stride transformed into a march that involved stamping her feet into the dirt as hard as possible.\n\nAfter doing several circuits, she made it back to the tent in which Rachel was once again sleeping. Hanta was keeping a fire lit outside in vigil while waiting for the return of his son. He slid a sharpening stone along one of his knives, working it to a razor edge with fine, evenhanded strokes. She stood there a moment, watching him, getting her breath back.\n\nHanta glanced up when she sat down opposite him, then returned to his knife without a greeting. He understood the reason for her wakefulness. Even if he hadn't been assigned to guard Rachel, he'd probably be doing the same with Vuntha out scouting in the dark.\n\nChaki folded her legs beneath her and watched the fire. Her thoughts swirled like the flames, flickering between worry for Jackson and a seething, riotous hatred for Boonta.\n\nBoonta. Chaki realized her hands were clenched up where they rested on her knees. She forced them to relax.\n\nShe wafted between punishments in her head. Exile was too good for him. Maybe she'd rig him to the top of his own tent, upside down, and see how long it took for him to die from the blood pooling in his head. Maybe something less complicated - dig his heart out and throw it into the nearest fire.\n\nShe took another breath. Those were not the thoughts of a spirit guide. She wasn't a child any longer. Yet, for that very same reason, Boonta deserved a grave sentence for his crimes.\n\nHer fingers had balled up again. She shook her hands loose and sighed.\n\n\"You sound like Jackson,\" Hanta said. Chaki looked up, watched him work on his knife for a moment. The better the edge, the more easily it would puncture iron armor.\n\n\"What makes me sound like him?\" Chaki said. \"Sighing?\"\n\nHanta nodded. \"That boy is like iron that's been fired, cooled, fired again, cooled again. Very hard, but brittle. His sighs...they're like this.\" He slid his whetstone across the knife, applying soft pressure, and the sound that slipped from the knife was almost like a sigh. \"Each one sharpens him. But if you work the edge too hard, it becomes vulnerable. It chips, cracks. In battle, the whole blade might snap.\"\n\nChaki put her head in her hands. \"I know. But what does \u2013\"\n\nSomething thumped on the ground next to her. \"Oil that,\" Hanta said.\n\nChaki picked up the two objects. One was a leather sheath, for the knife he was sharpening, and the other was a small leather container with a cloth stuffed in the mouth. The container held a mix of seed oil and rendered bison fat.\n\nShe glanced at Hanta. He hadn't bothered looking up. But she knew that his brusque request was not rude; he simply trusted her to take care of it without further instruction.\n\nShe withdrew the cloth, wiping the excess oil on the inside of the lip of the container. She rubbed it onto the outside of the sheath, then worked the oil into the hide with her bare fingers, almost as if she was massaging a muscle. It was simple, straightforward work.\n\nWhen oiling leather, a little would go a long way, but it needed frequent care and attention. Every bit had to be well coated to protect it from drying out. If that happened, it would begin to crack and tear. Leather was too difficult to produce to waste it so casually. \n\nHer father taught her this, when Palla was too young and he needed a spare hand. How to maintain the tent. Care for a horse. Sharpen a knife or an arrow.\n\nAnd the bison \u2013 he taught her everything about that animal. How to cut the animal to preserve the largest portion of the hide and the fur. Which parts to butcher, and which parts to leave for the scavengers. How to make containers from the organs of the bison \u2013 bladder, stomach, heart. How to separate the sinew into string, and weave the string into thread or bowstring. How to grind the hooves into powder and use it to create glue. How to thank mother earth, and give prayer to the soul of the bison in exchange for everything it had given.\n\nAnd when he died, she went to Hanta, and Hanta kept teaching her. How to use that bow. How to fight with a spear.\n\nFinished with the sheath, she set it aside, a bit away from the fire. Fire would dry it too quickly; the leather needed time to absorb the oils.\n\n\"Feeling better?\" Hanta asked. He checked his knife against the firelight, then set the tools aside.\n\n\"A little,\" Chaki said.\n\n\"People are like leather,\" Hanta said. \"A little care, more than \u2013\"\n\n\"- a little often,\" Chaki said, finishing the sentence with him.\n\nHanta smiled. \"You always were a quick learner. But it's true. Don't try to hold it all in, Chaki. You'll tear, crumble at the seams. A little oil now and then \u2013 everyone needs some. Even Shaka, if you can believe it.\"\n\n\"I don't know if I can.\"\n\nHanta's smile turned into a grin. \"That leathery old woman has absorbed her fair share of oil. But don't tell her I said that.\"\n\n\"The part about her leathery skin, or her being old?\"\n\n\"Both.\"\n\nA little smile wormed across Chaki's lips. \"Hmm. I think...she appreciates Jackson.\"\n\n\"More than you know.\"\n\nChaki looked at Hanta; he wasn't looking at her, but out into the dark. His eyes were distant.\n\nChaki thought about her teacher and mentor. Her second mother, Shaka. She had no children. Her husband died before Chaki was born. Shaka's past was a thing that was not spoken of in the tribe, but Chaki could make educated guesses. Jackson might be filling a hole that Shaka had quietly carried for a long, long time.\n\nHer thoughts turned back to the present. Chaki took a breath, then spoke. \"I just...I can't believe no one else called out Boonta.\" Chaki pointed over Hanta's shoulder. \"He attacked me right in that tent. The only person that defended me was Vuntha.\"\n\n\"You accused him of murder,\" Hanta said. \"Attempted murder, at least. That's a serious crime. Much more so than him showing disrespect to his elders, even to a spirit guide. You can't expect the tribe to hoist him from his leggings at your word alone.\"\n\nChaki put a hand on her chest, just below her neck. \"I don't know him anymore,\" she said. \"He tried to choke me to death, Hanta. His eyes \u2013 if you saw his eyes, you'd understand. He hates me. Hates us. Something's terribly wrong in his soul. His spirit is unbalanced.\"\n\nHanta folded his arms. \"We will find the truth of this, and if Boonta is guilty of what you've claimed, then we will punish him appropriately.\"\n\n\"Do you believe me?\"\n\n\"I do,\" Hanta said, \"because I must. Though I hope Boonta is not beyond saving. He wasn't born selfish and petty, as he is now. He can still be the man he was meant to be. I can see it in him.\"\n\n\"I can't,\" Chaki said.\n\n\"Do not judge so quickly, Chaki. Kunaya may be arrogant, but he did make a good point. Everyone's heads were hot.\"\n\n\"He tried to take my innocence from me, Hanta,\" Chaki said. \"When I was near the creek, away from camp. He tried to force me.\"\n\nHanta's face darkened. \"So...that's what happened. Why didn't you say anything then?\"\n\n\"Jackson stopped him,\" Chaki said. \"And \u2013 I had no evidence. Nothing but our word. We told Shaka. She said she would speak to Yukatan. And now, nothing has happened, and I am again only with my word. Yukatan is afraid to condemn his son.\"\n\n\"Damn,\" Hanta said. \"That boy...that fool of a boy.\"\n\n\"What are you waiting for, Hanta?\" Chaki asked. \"Why won't you tell Yukatan what he's like? Kunaya means to turn everyone against me because he is close with Boonta. I could hear the intent within his words.\"\n\n\"It's not so simple,\" Hanta said. \"If I come out against Yukatan's heir, he'll perceive it as an attack on himself, his family and authority. I have no wish to start some kind of feud.\"\n\n\"If Yukatan cannot see the forest for the trees,\" she said, \"then he isn't fit to guide us through it.\"\n\n\"You should be very careful with words like that,\" Hanta said. \"Our tribe has already been pressed into the southeast hunting grounds after last year. Why do you think Boonta's situation has been allowed to fester? We can't afford disturbances in our leadership, not now.\"\n\n\"If we don't afford them now,\" Chaki said, \"we'll never be able to afford them at all. I can't walk in the daylight next to that disgusting, murderous rat any longer!\"\n\n\"There isn't \u2013\" Hanta paused. He rubbed two fingers across his eyebrow, then set himself. \"You have your point. I will take in Boonta more closely. I will refocus him on his training until some judgement can be passed. And it will be passed. But you will keep your opinions to yourself. Inflaming people against Yukatan will not solve the problem of Boonta. Even if he is blind in this matter, he is a good leader.\"\n\nChaki wasn't happy with that pronouncement, but at least he'd met her halfway. She folded her arms and nodded. \"I will do as you say. But I won't let \u2013\"\n\n\"Stop,\" Hanta said, raising his palm.\n\nChaki closed her lips and blinked. Hanta held his hand out still, his head cocked to the air.\n\nAnd then she heard it. Hooves - galloping.\n\nVuntha burst out of the darkness, bringing his horse off the main path and to their fire. He slid off his animal and ran toward them, stumbling. He caught himself against the ground with his hands and kept going.\n\nHis shoulder had a gash; blood ran down part of his arm. An angry welt marked his forehead. More blood was dried around his eye. Bits of mud spotted his clothes.\n\nChaki and Hanta were on their feet in an instant. They steadied him as he reached them. Chaki reached inside and grabbed her essence, using her free hand to draw runes in the air. She shoved her power into them, and the healing spell flowed into Vuntha, sealing his cuts. The welt shrunk, then faded.\n\n\"Spirits,\" Hanta said. \"What happened? Where are the others?!\"\n\n\"Boonta,\" Vuntha said. He was exhausted from the ride \u2013 though not as exhausted as his horse looked. \"Betrayed. He betrayed us. Katran is dead. Iron men are coming.\"\n\nHanta ran back and grabbed the horn resting on the side of Rachel's tent. He blew into it, moving his lips to form two different notes. He drew another long breath, and played the notes again.\n\nChaki knew the warning very well. Every man, woman, and child of the People-Under-The-Mountain knew it. Imminent danger.\n\nThe horns of other Windseekers sounded first, repeating the call; and then their neighbors, the Dust-Gatherers. The horns echoed their two-note song in the valley of the foothills under the mountain. The sprawling camp woke up like an anthill churning to life. Fires flared up, islands of light blossoming in the darkness. Chaki could hear shouting in the distance.\n\nHanta blew his horn again once the first wave of warnings had died out, indicating where it had started. Warriors flocked to him. Some of them were only half-clothed, but all of them brought their spears. A few came mounted, quivers and bows strapped to their horses. Their small campfire and Rachel's tent was surrounded by a surging crowd in less than a minute.\n\nYukatan shoved his way through the gathering. \"Hanta! Vuntha?\" His eyes darted. \"Where is Boonta? Where is my son!?\"\n\n\"Boonta sold us to the iron men,\" Vuntha said.\n\nThe crowd began to settle. Everyone exchanged glances. Yukatan's face screwed up in confusion. \"I don't understand. What happened out there?\"\n\n\"Katran!\" came a shout. Malaki pushed in behind the elder. \"Katran!\" She looked around the circle, searching for her betrothed.\n\nDrana was right behind her. The shorter girl ran past, flinging herself toward Vuntha. Vuntha grunted, hugged her, then moved her aside. \"I have to tell them, Drana.\"\n\n\"I was afraid,\" she said.\n\nVuntha kissed her cheek, then stepped into the ring of warriors. \"The iron men are coming in force, with an army. They'll be here in less than a half-finger of the sun. I think they were going to try and surprise us, kill us in our sleep.\"\n\n\"But what of Boonta?\" one man asked.\n\n\"He betrayed us,\" Vuntha said. \"He stabbed Katran in the back, then tried to kill me. I held him off, and Katran didn't die so easily. He fled when both of us went for him. I barely escaped their riders.\"\n\n\"Where is Katran?!\" Malaki shrieked.\n\nVuntha lowered his head. \"Boonta injured one of our horses. I couldn't find it before the iron men were on top of us. Katran said two riders to one mount would get us both killed.\" He looked up at Malaki, meeting her gaze firmly. \"He died with honor, shooting them down so I could escape. He killed at least ten before he fell.\"\n\n\"No.\" Malaki fell to her knees. She cupped her face with her hands. Silence hung over them.\n\n\"My son, a traitor?\" Yukatan said. \"Boonta wouldn't - there must be some mistake. Vuntha, are you \u2013\"\n\n\"He screamed at me about how he'd make us all his slaves!\" Vuntha said. \"He tried to kill me! There was no mistake! If you hadn't had your ears stuffed with pride, this wouldn't have happened!\"\n\n\"Vuntha!\" Hanta said. \"He is your elder!\"\n\n\"He's an idiot!\" Vuntha shouted. \"Every single person in the tribe knew what Boonta was, except him, because he refused to acknowledge it! Because blood was more important to him than his people! And now.\" Vuntha patted his shoulder. His cut was healed, but the scab lingered. \"Now we bleed instead. Is it enough yet, elder? Are you going to listen to Chaki now?\"\n\n\"You will recant those words,\" Hanta said, \"or you are not my son!\"\n\n\"Hanta!\" Yukatan said. They all turned toward the elder. The man was staring at Malaki. \"Vuntha has spoken true.\"\n\n\"Elder...\"\n\nYukatan's face was clenched tight. Tears fell from his eyes, sliding down his cheeks. \"Once, I can look away. Twice, I should not have looked away. And now, thrice...Vuntha's words are hard, but they are true.\"\n\n\"Rally yourself, Yukatan,\" Hanta said.\n\n\"For what purpose?\" he said. \"I was blind. Spirits...my son. My only son has set our enemies on us, in this most sacred of places. I have no honor left.\"\n\nChaki felt the sharp and heady relief of validation as the elder admitted Vuntha was right. But now \u2013 with Katran dead, and Yukatan in this state \u2013 that feeling was stamped under a rising sense of dread. The iron men were coming.\n\nAnd then she had a worse thought \u2013 the realization that she was the kind of person who would first feel satisfaction at being right, rather than pity for a man who lost his son to heartless wolves. She turned away, hiding her expression from the fire, concealing it within the dark. She couldn't bear the thought of others seeing her face.\n\nHere it was, welcoming her with open arms \u2013 revenge. Boonta discredited, revealing himself as a traitor. And all she could see was the night. She was no spirit guide. She was just a selfish girl, daydreaming.\n\nSomething sparked at her from the darkness. The bond with Jackson. A gold line like fine, twisting fire. She could tell he was still far away, but for some reason, he seemed incredibly close.\n\nShe grasped the bond with Jackson for a moment, feeling it in her hands, using the distant warmth to firm her resolve. She was not a girl. Not anymore. She was Jackson's North Star, Polaris, the great light that guided men across oceans as vast and empty as the plains. And she had to be that light, now more than ever. \n\n\"Yukatan,\" she said, turning back to the fire. \"We need our elder now more than ever.\"\n\n\"I am not fit to lead,\" he said. \"You tried to tell me hours ago, Chaki. But I \u2013\""
    ],
    "authorname": "Over_Red",
    "tags": [
        "dream drive",
        "virtual reality",
        "sci-fi",
        "fantasy",
        "action adventure",
        "magic",
        "video game",
        "cyberpunk",
        "romance",
        "thriller"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-ch-09"
}