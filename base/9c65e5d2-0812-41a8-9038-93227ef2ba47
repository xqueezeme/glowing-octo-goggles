{
    "title": "Chris' Adventures Ch. 02",
    "pages": [
        "The next morning he woke up with a hard on in his lingerie and started stroking, thinking about the dream he had last night. A replay of last night's activities online and the conversation they had ran through his mind. He began to stroke thinking about being taken by a friend while he was dressed up, his ultimate fantasy. After his little cam session with Jeff last night he was still turned on. The thought of being fucked by someone he knew was both a turn on and a bit frightening. It was just a fantasy of his. One that he played out lots of times online. \n\nBefore he could get any farther though he stopped. He wanted to save his load for tonight when he had lots of times to play with Jeff online. Right now he needed to get showered and get to work in the yard. \n\nAs he was cleaning the dishes he looked out the window over the sink and saw his neighbor Rob. He began to wonder if Rob might be open to a little fooling around with him. They ran together a lot and he knew Rob had a great body, he'd checked it out on more than one occasion. He'd seen Rob look at him too but wasn't sure what he was thinking. \n\nChris knew what he was thinking about, getting those tiny running shorts off of each of them and seeing what Rob was packing. The problem was he wasn't sure how to go about figuring out if Rob was into that sort of thing. As far as he could tell Rob wasn't into that. Or maybe he was just too dense and not picking up the signals Rob was tossing his way. He stood there for a few minutes while finishing the dishes and running through a fantasy in his head, his cock growing in his shorts, when the phone rang and brought him out of his little daydream. \n\nHe picked up the receiver and said hello. After no one said anything after the third hello he hung up. \"Damn telemarketers\" he thought. \"Ruined a perfectly good daydream for me. Well I may as well get to work now.\" He put on an old pair of running shoes, forgot about the shirt, it was too hot out already, and headed to the garage to grab some tools and the wheelbarrow. \n\nRob saw Chris come wheeling around the corner of the house with his wheelbarrow ready for some yard work just like him. He knelt there at the edge of his landscaping and eyed his shirtless body. Last night while prowling chat rooms for some fun he stumbled on the discovery that his Chris loved to dress up in lingerie and wanted a real cock. He wasn't sure how to tell Chris the he was Jeff from the chat room last night. It was apparent they both wanted the same thing, except that his wife knew he liked cock and Chris' didn't. At first he was shocked, he never knew that Chris was into that sort of thing, but knowing that he was into it was an incredible turn on. Such a turn on that he said he wanted to play again tonight. Before he could think about it any further Chris waved, and called over to him. \n\n\"Hey Rob!\" Chris called. Chris was standing at the fence that separated their yards and watched as Rob got up and came over to the short, white fence that separated their yards. He looked a little hesitant when he came over for some reason and he could swear that Rob was looking him up and down like he was thinking of something, but he shook it off. \n\n\"Hey Chris, how's it going? Managing without Christy this weekend?\" His laugh seemed nervous to him and Rob wasn't looking right at him, like he was trying to avoid eye contact. \n\nChris stifled moan thinking about what he did last night and what he had been thinking about and laughed. \"Yeah, barely.\" He shot back with a hint of sarcasm in his voice. \"I think I'll be okay another night. How about you?\" \n\n\"Doing well. It's been good to have some down time without the wife around. I can do what I want for the weekend, lay around in my underwear, eat Cheetos, and surf the net\" He chuckled and smiled at Chris trying not to look to anxious. He wasn't sure what he should say, or if he should say anything. \"Going to take care of some things around the house today.\" \n\n\"Any plans for tonight?\" Chris asked. \n\n\"No, just going to sit around and watch a movie and relax.\" Rob answered evasively. At least until it's time to play with you again. He thought to himself. \n\n\"Same here.\" He replied. \"What an exciting life we lead right? The girls are away and all we're doing is yard work, watching movies, and surfing the web.\" He laughed, knowing that his night was going to be as fun as last night, even without his wife. \n\nRob decided to test the waters a bit, see if Chris wanted to get together. \"Want to come over and watch a movie? Have a guy's night in?\" Rob asked. He was looking Chris up and down, hoping that he didn't notice. He was wondering if the same thoughts he was having were going through his head. His cock was stirring in his jeans thinking about what happened last night, thinking about Chris in lingerie, thinking about how he took that dildo so easily, and thinking about how he'd like to be the one filing Chris' ass instead of the dildo. And now they had a date again tonight online. \n\n\"Maybe.\" Chris saw Rob staring at him and it made his cock hard in his jean shorts. He hoped that Rob didn't notice. \"We'll see how I feel after working in the yard all day.\" \n\nThey said their goodbye's after talking a little more and continued with the yard work. As they worked Chris though more and more about Rob and how he was looking at him as they talked earlier. Could he be into guys? Chris thought. Should I explore this possibility? In the end he shook it off as fantasy. The last thing he wanted to do was come on to Rob and be humiliated. After finishing up in the yard he went inside to eat and take a shower and indulge in his fetish while thinking about Rob. \n\nA couple of hours later Chris stepped out of the shower he toweled his freshly shaved body off and went to the closet where Christy kept her lingerie. At 6'4\" he towered over his wife who was 5'8\" so he always used her old thigh high hose, and other hose that went with her garter belts that she still wore, but the rest of her lingerie he fit into okay. Her waist and chest were about the same size as his, him having a thin runners build helped. Of course she had bigger breasts so that helped in the chest. Her baby dolls and camisoles were sometimes a little short on him but he didn't care, it still felt good. Teddies were another issue. His torso was longer than hers and he didn't fit into them as well so he had actually bought a couple of his own and kept them stashed in his closet on a high shelf. \n\nAfter poking around for a few minutes he settled on a satin and lace baby doll that came down to his hips, a jade green all satin garter belt, and some black sheer hose. Then he rummaged through her panty drawer and pulled out a pair of satin bikini panties that would hug his already stiffening cock. Dropping the towel he got to work. \n\nFirst he clipped the garter belt around his waist and adjusted the straps to hang lower than on Christy, he would have to remember to readjust them or she might suspect something. This one was one that she still wore from time to time. Rolling the hose he pulled them on his legs one at a time, relishing the feel of the silk on his freshly shaved legs. He moaned as he smoothed them out and clipped them one by one into the garter belt. The hose always made him feel so sexy. He loved to slip his cock into them and jerk off while Christy watched. Sometimes he would rub his nipples with them or tie the other end of the hose around his cock and balls in a makeshift cock ring, making them stick out and his cock even harder as he stroked and telling Christy how much the feel of the hose turned him on. All the while Christy would dig her fingers deep into her pussy and watch. She always got off on it but for some reason was never thrilled with the idea of him wearing them, he just couldn't figure it out. Was it the fact that she'd never actually seen him in them? At least he could enjoy what he could with her. There was something about slipping them onto his shaved legs that was even better. It was a good thing he swam and ran somewhat competitively. He could pass off his reasoning for wanting to shave all over as part of his sport. As for his cock being shaved, she just liked it that way. Feeling his smooth skin encased in the hose made his cock twitch. He then pulled on the satin panties and tucked his cock inside and slipped the baby doll over his head. The feeling of the lace and satin against his nipples made him moan. \n\nTo finish off the look he grabbed the same red wig from last night and headed to the bathroom to apply some makeup. When he finished he looked in the mirror and blew himself a kiss. He did a much better job tonight since he wasn't rushed. If he didn't take a close look then in passing he'd swear that he was looking at a woman. \n\nHe walked back into the bedroom and dropped the blinds. He didn't want to get caught all dressed up. At least not yet. The thought of being seen by Rob was a turn on. He could have sworn that Rob was looking him over in the yard earlier as they talked. The thought of getting caught at this point turned him on and he was beginning to want it more and more. Like he was telling Jeff last night, at this point it's just a fantasy that turns him on incredibly and he's not sure he'd go through with it given the chance. He looked at the clock, 6:30. He had a half an hour before Jeff was going to meet him in the chat room they were in last night. He made the best of it by getting out all his toys. He rummaged through the storage under the bed and pulled out the double ended dildo that he and Christy used with each other, a large butt plug, the nipple clamps, and his huge 8\" vibrator. And a bottle of lube for good measure. A shiver ran up his spine as he looked over the toys that he had laid out before him. He was excited to use them in front of the camera for another man. \n\nThe last thing he needed to do was get the laptop and camera out and ready. He got the laptop open and the camera up and focused on him. He wasn't concerned about being seen this time since he'd shown himself off for Jeff last time. After he was all settled in on the bed he logged into the chatroom and waited. While he waited he chatted with some regulars in the room about a little bit of everything. \n\nRob finished up in the yard later than Chris did. The sun was setting in the late autumn sky by the time he got inside and started to clean up and wondered what he should do tonight. He quickly reheated some leftovers and mulled his options over. On one hand he could say nothing to Chris and carry on like everything was normal. Which could get more difficult as time went on, especially if they kept up their little chat room affair. On the other hand he could come clean tonight while chatting and see where the chips fall. After their talk last night they both got off on what they were doing. And the fact that Rob knew that the Chris he was talking to was his next-door neighbor excited him. He had a potentially wiling partner right next door. It was a question of whether or not they would follow through on all their talk last night. \n\nHe quickly finished his dinner and went upstairs while he kept running over scenarios in his head. While doing this he stripped and hopped in the shower. He soaped up his taught athletic body and stroked his hardening cock. All this thinking about Chris in lingerie and what was to happen tonight had him so horny. He stood there washing up and rubbing his cock for a good ten minutes imagining all the things he and Chris would do tonight, or could do tonight if he revealed who he actually was. Then his alarm on his phone went off and reminded him that he had 15 minutes to get ready for his \"date\". He washed off, hopped out of the shower and toweled off his smooth body. \n\nHe too wanted to slip into some lingerie for tonight so he rummaged through the things that his wife had bought him over the years. He settled on a red satin and lace open crotch teddy Patty had gotten him years ago. He loved how it hugged his ass and his cock could either dangle free or he could tuck it in. after pulling it on he got out the laptop and started to log into the chatroom. By this point he'd made up his mind. He was going to let Chris see who he was. With Patty gone for one more night, who knows, he may end up over there before the night is over. Rob looked out the window and saw that a light was on in Chris and Christy's bedroom across the yard and the blinds were closed. He could see Chris moving in there due to the shadows but couldn't make out exactly what he was doing. \"Good.\" He said. \"Chris is ready to play.\" \n\nChris had been chatting with a guy about lingerie when he saw \"Lingerie Hubby\" pop up in the in room char bar. He didn't even bother to start a text chat but went right to video/voice. He clicked the button and waited. After a few seconds Jeff's video feed came through and Chris was greeted with the sight of Jeff in a crotchless teddy with his huge member hanging out, half hard, swinging freely between his legs. \"Ohhhh my. That looks lovely Jeff.\" Chris gushed. Before Jeff could respond Chris spoke again. \"Do you like what I'm wearing? He got off the bed and twirled for him while stroking his cock and rubbing his ass for the camera. \n\nHe heard Jeff moan as he twirled and watched as his cock grew stiffer by the second. Watching it harden was making him incredibly horny. He kept it up as he watched Jeff squirm in his seat. It grew and grew as it got harder until it was standing at attention and Jeff was now massaging his balls and the base of his cock. \"Ohh Christy. You look so sexy. God I'd love to be over there with you.\" \n\nRob was getting so turned on watching Chris. It was especially hot knowing that he was right next door. \"What would you like to do to me?\" Chris asked over the video link. \n\n\"Oh I could think of all sorts of things to do to you.\" Rob stroked his cock and rubbed his chest as he talked. \"I'd love to feed you this huge monster.\" He wiggled his thick cock at the camera. \"Watch you suck it and try to deep throat it. Then I'd fill your ass with it. I know you can take it. I watched you last night with that dildo so I'm sure you'd have no problem.\" Chris was back on the bed now and moaning with delight. His ass was turned to the camera and the panties pulled aside. He was fingering his ass, getting it ready for what Rob assumed was a toy. He watched as Chris looked over his shoulder at the camera and winked. \n\n\"Mmmmm that sounds so hot.\" Chris groaned. I'm up for the challenge of taking that monster in my throat. And then my ass.\" He wiggled his ass at the camera for Jeff. Reaching over he grabbed the long thin double ended dildo and waved it at the camera as he sat up for Jeff. \"Let me get some practice on this thing.\" He saw Jeff's cock jump at the sight of the double ended dildo and a low moan escaped his lips as Chris took almost 7\" of the phallus in his mouth. He pulled it out and then swallowed again and then pulled it out with a loud pop, much to the delight of Jeff for he could see Jeff was now stroking his cock in earnest and thrusting his hips up and down, fucking his own hand. \"Mmmm I wish you were here. I'll bet my mouth would be better than your hand any day.\" Chris reached around and gave his ass a loud smack and winced/moaned. \"Mmmmm would you spank me while you fucked me Jeff?\" \n\n\"Oh yesssss.\" Jeff hissed. \"And call you dirty names. You liked that last night didn't you?\" \n\n\"Uh-huh.\" Chris said into the camera. \"I love it when someone talks dirty to me. Especially when they tell me what to do.\" He blew a kiss at the camera and licked his lips in anticipation of what was to come. \n\n\"Ohh well in that case why don't you stroke that cock and deep throat your dildo for me. Pretend it's my cock.\" Came the reply from the other end of the camera. \n\nRob watched as Chris knelt on the bed in full view of him and stroked his hard cock up and down. Instead of taking the double ended dildo Chris grabbed the thick vibrator next to him and licked it up and down, teasing the head with every stroke at the top. \"Oh my god\" Rob groaned as he watched Chris open wide and start to swallow the huge shaft. \"I'll bet you suck better than my wife.\" \n\nChris groaned and Rob watched as he worked the shaft in his throat inch by inch until he was taking a good 7\" into his mouth. \"Mmmm that's it. Take that cock like a real slut.\" He egged him on. \"Suck that fat shaft, pretend it's mine. You know you want my thick cock in your mouth don't you?\" Chris nodded and rubbed his ass. \"Ohhh. Now swat your ass as you suck.\" Rob watched as Chris raised his hand and brought it down on his ass with a loud smack which resulted in Chris jumping a bit and then moaning. \"Again.\" Once again He saw Chris swat his ass and this time he kept going. Rob stroked his cock faster and squeezed harder. After a few good smacks Rob told him that was enough so he stopped. \n\nChris looked into the camera, smiled, and cooed softly as he deep throated the dildo for Jeff. It was so hot having his mouth filled and hearing Jeff tell him to smack his ass. And Jeff was right, he did want to suck that cock of his if it was here. He was so turned on he'd do anything at this point. After a couple of minutes he pulled off the dildo with a wet smacking sound and smiled. \"Mmmmm, not as tasty as yours I'll bet. I need that huge thing here so I can taste a cock for myself.\" He giggled. \"I'm so horny right now I'd do anything you want me to if you were here.\" Jeff moaned loudly at that and gripped his cock tighter. \n\n\"Oh really? You'd do anything?\" Jeff asked while humping his hand and pinching his nipples through the teddy. \n\n\"Oh yessss.\" Chris hissed. \n\nJeff stroked and was silent for a minute. Chris watched him stroke his cock and grunt, wondering what he was thinking. \"Shove that double ended dildo in your ass honey. I want to see how much of it my little slut can take.\" Chris moaned and sat up to lube his ass and dildo. \"Turn around for me I want to see it slide into your ass.\" \n\nChris obediently turned around and pulled the panties aside to reveal his smooth ass and puckered and lubed hole. He bent over for the camera and took the dildo in his hand and teased his ass with it. He watched the camera feed and saw that Jeff was pumping his cock furiously now and groaning, like he was straining to keep from cumming. Chris thought he would explode any time now too. He eased the huge toy into his waiting ass and let out a loud moan. He loved the feel of being filled up with his toy. It was so big and it stretched his ass wide that he felt like he'd be torn apart. \n\n\"Oh yeah, that's it baby. Take my cock.\" Rob grunted. He was holding out trying to delay his orgasm for as long as he could. \"Ride that dildo like it was my cock in you.\" He watched as Chris sat up, ass facing the camera and sank onto the dildo, taking 10\" of it in his ass with ease. \"Ohhh my God that is so hot.\" Chris gasped and grunted on the other end of the camera. Rob could imagine the look of ecstasy on his face as he sank onto that huge toy. With any luck it would soon be his cock buried in that ass. \n\nHe turned around to wiggle his ass at the camera, pulling the back of the teddy into the crack of his ass, making him moan. \"Would you like to slide into this hot ass too?\" He asked. \n\nHe watched as Chris sank onto the dildo. \"Ughhhh. Very hot baby. I'd love to return the favor after you fucked mine.\" That sent a shiver up Rob's spine. He needed to get over there now before they both blew their first load. \n\nHe turned back to the camera and thought about how to go about this. Then an idea hit him. The window facing Chris' house was within short reach so he leaned over and pulled up the shades. With the light on he was now in full view of Chris' bedroom window. ",
        "Chris saw Jeff turn back around and reach for something off camera, moving out of camera shot for a few seconds, and wondered what it was. When he came back into view he didn't have anything new in his hands. \"Where'd you go baby?\" Chris asked. \n\n\"Just making some adjustments.\" He said. \"You look so beautiful with that toy in your ass Chris. How I wish I could be over there and filling you instead.\" \n\n\"That would be nice wouldn't it?\" Chris sighed as he laid back on the bed for Jeff and slowly stroked the dildo in and out of him. \n\n\"Would you really like that?\" Jeff asked. \"Have your fantasy of getting caught by a friend come true.\" Chris detected a note of excitement in his voice and wondered what Jeff meant when he said friend. \n\nHe looked at the camera with a bit of puzzlement and wonder. \"At this point yes. I want to feel the real thing. He stroked his cock. I could have sworn my neighbor was checking me out this morning while we were both working in our yards. I wonder if he'd be into having some fun with me. Or maybe my imagination is just running wild with all this hot playtime lately.\" \n\n\"I've wondered the same thing.\" Jeff said excitedly Chris noticed he was no longer stroking his cock and had the office chair turned sideways. \"Maybe he's watching you now. Did you remember to shut your blinds?\" \n\nChris wondered how he knew that the blinds faced Rob's house. He looked over and they were mostly shut. Hopefully Rob wasn't upstairs. If he was going to get caught he wanted to set it up himself. To kind of steel himself for the shock. \n\nRob watched as Chris looked over at the blinds. \"I should go check. Don't want to be found out to soon.\" He giggled as he slipped the dildo from his ass and went to close the blinds entirely. Rob watched on the camera and out his window as Chris went to the blinds to look out. When he did, he stood up so Chris could see him in all his glory. \n\n\"Oh my God!!\" Chris exclaimed as he peeked through the blinds and then back at the laptop screen. What he saw in the camera screen and the window were the same, but from a different angle. He stood there frozen for a moment in fear and then collapsed on the bed and turned bright red under the wig and make up. Jeff waved at him out the window and then zoomed out with the camera so Chris could see him. \n\n\"Hi there Chris. I'm guessing you know who I am now.\" Chris could see that it was definitely Rob looking back at him. Never in his wildest dreams did he think that this would ever come true. Yet now here he was, all dolled up, dressed in lingerie and had laid himself bare for someone who he thought was a stranger and it turns out it was his neighbor. \"You look a little shocked.\" Rob rubbed his cock as he stood there and watched Chris. \n\n\"Um, oh, yeah. Oh God.\" Chris' mind was reeling. He was breathing a little heavy now, wondering what to do next. \"So, um, Jeff, I mean, Rob..\" Chris wanted to take the leap but he was hesitating. \n\n\"Yes?\" Rob replied. \"You.. You want me to come over?\" He asked the question they both wanted to. \n\n\"Yesssss.\" Chris gushed. He fell back on the bed and sighed. His head was swimming with all sorts of scenarios as he turned his head to the laptop and watched Jeff turn off the camera and the screen go blank. \n\nAfter Rob turned off the camera he threw on a pair of sandals and grabbed a robe so he could scurry between the back yards unnoticed and yet ready to doff the robe when he got into Chris' house. He put the robe on and tied it up as he walked down the stairs and out the back door. It's a good thing they both left their lights off in the back so none of the other neighbors could see what's going on. Not that they would anyway, he thought. We've got enough foliage back there to cover up anything. He crossed the yards and came to Chris' back door and knocked. He stood there for a few seconds and knocked again. He began to wonder if Chris was going to answer. Before he could knock a third time the door opened and Chris grabbed him by the hand, pulled him into the house and quickly shut the door behind him. \n\n\"Hi there neighbor.\" Rob said. \"So where do we go from here?\" He looked Chris up and down standing there in a satin robe that came to his knees, covering up the beautiful lingerie he had on. \n\n\"Hi there Rob.\" Chris said, standing there in the kitchen, still a couple shades of red. \"So, I take it you liked the show I was putting on?\" \n\n\"Um, uh, Yes.\" Rob hesitated, this was pretty big. He wanted it but it was still a bit unnerving, being that it was his neighbor. \"You, you couldn't tell by what I was doing? I did come back for a second date after all.\" He chuckled. \n\nChris giggled a bit nervously. \"Yeah... You did. So when did you figure out it was me?\" \n\n\"Last night. I wasn't sure at first but when you zoomed out so I could see the bedroom I knew. I've seen you're bedroom a few times.\" Rob shot back. \n\n\"You have?\" Chris asked incredulously. He wondered what he was getting at. \n\n\"I've seen you and your wife in there a few times. It was pretty hot. You two should close your blinds more often.\" \n\nChris let out a wry smile. \"Oh, uh yeah. I leave them open on purpose sometimes when we have sex. The thought of being seen turns me on. And it turns Christy on a bit too. I never knew that we'd actually been seen.\" He squirmed in his robe, his cock getting hard again knowing that Rob had seen him and Christy fucking. \n\n\"I kind of figured that out. You were quite the showoff on camera.\" Rob replied. \"So, why don't we go into the living room? I'm sure we'd be more comfortable in there.\" \n\n\"So your wife doesn't know you do this?\" He asked as they walked to the living room. \"Makeup and everything? Ever tried a dress?\" \n\n\"Oh, uh, yeah\" Chris blurted out. \"As far as I know she doesn't know. What I told you last night was all true. She definitely doesn't know that I use her makeup. And no, I've never tried on her dress. Well, at least not accomplished it. She's shorter so her dresses on me wouldn't look quite right.\" They walked around the corner form the back door and into the living room, Chris swayed his ass as they went. This whole thing was beginning to excite him and he wondered where it would go. \n\nHe sat on the couch and before he could invite Rob to do the same, his neighbor plopped down right next to him. Their legs were touching and the sexual tension between the two of them was palpable. It was a question of who was going to make the first move. \n\n\"So what should we do now?\" Rob asked, his leg rubbed against Chris' hose covered leg and it sent a shiver up his spine. \"Mmmm, I love the way your legs feel in those hose.\" \n\n\"Well, I guess both of us know what the other wants. We covered that pretty well last night.\" Chris chuckled. His heart was racing, he couldn't believe what was happening. \"With both the girls gone we've got all night and tomorrow to play you know. Speaking of them, did Patty put you up to this? You said she knew that you had been with guys before but not since you've been married, and that she had been encouraging you to look.\" \n\nRob leaned over and stroked Chris' thigh, moving higher until he came into contact with his panty covered cock. Chris stiffened for moment. \"Relax Chris. We both want to do this don't we? I know I do. And no she didn't. I'd been chatting in rooms like you, looking but never finding anything.\" He rubbed Chris' cock through the panties, making him moan. \"I never figured I'd find a willing partner right next door though.\" \n\nHe looked at Chris with hope in his eyes. \"You are a willing partner, right?\" \n\nChris laid back on the couch and pulled open his robe to reveal the lingerie he had on and to give Rob better access to his body. \"Oh yes. I want this so bad. We can have all sorts of fun now.\" He thrust his groin at Rob as his hand snaked inside the panties he was wearing. \"Ughh yessss. This won't be the only time this will happen will it?\" He gasped. \n\n\"I hope not.\" Rob sighed. He took in all of Chris' body with his eyes as he felt another cock in his hands after a long time going without. He couldn't wait to feel it in his mouth and his ass, it had been so long, too long. Without another word he let go of Chris' cock and shrugged it off the robe he was wearing. Instead of grabbing it in his hand again Rob leaned over and began to kiss and lick Chris' hard cock that was now sticking out of the top of the tight bikini cut panties Chris had on. He heard Chris gasp as his mouth closed around the head of his cock. Rob licked what he could and then sucked the head into his mouth. Tilting his head up Chris' cock slid out the top of the waistband and he engulfed the entire shaft making Chris moan and squirm with delight. He bobbed up and down in Chris for what seemed like forever while he stroked his cock. It felt so good to have a hard shaft in his mouth again but he wanted to see Chris suck his first cock. He pulled off and gave Chris' cock one last lick before he looked up at him. \"Was it as good as you thought it would be?\" \n\nChris was starting at him through half closed eyes. He had watched as Rob expertly went down on him. First licking up and down the shaft and then opening wide and swallowing him. The sensation of another man's mouth on his turgid member was amazing. He thrust into Rob's mouth as he took more and more of his shaft down his throat. He gave better blow jobs than his wife, and that was a hard thing to do. When Rob asked him the question he was brought back to reality. \"Yes!\" came the enthusiastic reply. \"That was incredible. Even better than Christy.\" \n\n\"Oh really?\" Rob smiled. \"That's no mean feat. Patty and I have seen her go down on you and you looked like you were enjoying it quite a bit.\" He saw Chris blush. \n\n\"I told you should close your blinds.\" He chuckled. \"But now I want to see how good you are. See if those years of sucking a dildo have paid off.\" Rob laid back on the couch and his huge cock hung there for Chris to take. \n\n\"Oh my God! You're even bigger in person than on camera. \"Chris reached out a shaking hand and wrapped it around Rob's shaft. His index finger and thumb didn't touch. And it was a good ten inches long. \"I'll bet Patty loves this monster. It feels so good.\" He stroked up and down Rob's shaft eliciting moans from Rob. \n\n\"Oh yes she does. It's always such a turn on to see her petite frame take my cock in her tight pussy. But she can't take all of it. She says I'm too big. But tonight you get to feel it.\" Rob said. \n\nHe looked up at Rob. While they were talking Chris had gotten off the couch and was now between Rob's legs ready to worship his first cock. \"I can't wait. And I'll do my best to take it \"He stroked Rob's cock up and down with both hands and even then he barely covered the whole length. He wasn't sure how much of this monster he was going to be able to take in his mouth let alone his ass. It was bigger than any toy he'd ever had. But he was going to give it his best shot. \n\nRob reached down and stroked Chris' wig as he ground his hips back and forth as Chris stroked him. He then brushed Chris' hands aside and took his large cock in his hand and began waving it in front of Chris' face. \"You want this don't you? You want it bad.\" Chris just nodded and leaned in. Rob pulled his cock back and wiggled a reproachful finger at Chris. \"Ah-ah-ah. Not yet. You need to beg for it.\" He then slapped Chris in the face with his cock. \n\n\"Uggghhhhhhh.\" Chris moaned through glazed eyes as Rob slapped his face with his huge cock. Being treated like this was such a turn on. Having to beg for it and being humiliated was making his cock rock hard in his panties. \"Yesssss,\" he hissed, \"I need your cock. I need it in my mouth.\" He looked up at Rob and opened his mouth. \"Please fill my mouth with your cock, I want it bad.\" he begged. \n\nAfter saying that, Rob lowered his cock to Chris' lips and he kissed the head. Waves of pleasure washed over him as he tasted his first cock, and oh what a cock it was. As he kissed and licked the head and shaft he admired the bulbous, mushroom shaped head. It was smooth on his lips. The shaft was thick and veins were bulging. As he drew his tongue over each ridge the veins made he left a trail of slick saliva that made the shaft glisten by the lamp light that was next to the sectional sofa. He heard Rob moan when he reached his wrinkled and clean shaven ball sack and started licking them. Opening his mouth wide he took them in and began sucking while he stroked Rob's cock. Rob was now groaning and grinding his hips into Chris' face pushing against his mouth and thrusting into his hand and Chris was more than happy to oblige by opening wider and stroking faster. But now he wanted to take that beautiful shaft in his mouth. He released his grip on Rob's shaft and balls and smiled up at him. \"Mmmmmm, now to see what I can fit in my mouth.\" He leaned over, opened his mouth, stuck out his tongue, and before he could close the space between them, Rob pushed his cock into his waiting mouth. \n\nHe watched as Chris opened his mouth and took the head of his cock in. Slowly Chris worked his mouth down the thick shaft. Rob was in awe as Chris bobbed slowly up and down on his cock, eventually getting a good eight inches in his mouth and throat. \"Oh man Chris,\" Rob gasped. \"You could give Patty a run for her money.\" Chris popped off him, looked up and smiled. \n\n\"How was that?\" He grinned. \"I thought it was heavenly.\" Chris couldn't believe that he was able to get that much of it in his mouth. All those nights practicing on his toys must have paid off. \n\n\"Ooohhhhh. Yes it was. Even my wife can't do that.\" He looked down and saw that Chris' other hand was stroking his cock in his panties. \"So how about you come up here and rub that cock on mine?\" Chris sat up higher on his knees and pulled his cock back out of his panties and leaned in to rub the head of his cock against Rob's. \"Mmmm I missed this. I wish I had known about your predilections a lot sooner Chris.\" Rob leaned back into the couch and let Chris explore the new found pleasures of being with another man. As he watched Chris rub their cocks together he pinched his nipples through the stain and lace teddy making him moan loudly. \n\nChris stroked their shafts together and watched Rob pinch his nipples through teddy he was wearing. Oh so he liked it too Chris thought to himself. He let go of their cocks and leaned in, closing the gap between their upper bodies. Now their groins were grinding against each other, both cocks rubbing flesh on flesh on satin and lace. The feeling was heavenly. Chris lowered his head and licked Rob's nipples through the teddy. That elicited a low moan so he went further. He opened his mouth and sucked one nipple in and then bit down gently. This made Rob stiffen up and let out a guttural moan. \"Ahh yessss. That feels so good!\" Chris heard him say. \n\nRob loved what Chris was doing to his nipples. He moved back and forth from one to the other. Pinching and biting them, driving him up a wall. \"Ohh god yesss, you keep all that up I'm going to cum all over the two of us now.\" \n\nChris stopped what he was doing and looked up at Rob. \"Well we don't want that. At least not yet.\" He looked Rob in the eyes and leaned in and kissed him. It was a spur of the moment decision. He hadn't planned on kissing Rob but it felt so right. He opened his mouth to let Rob's probing tongue into his mouth. It felt so good to be rubbing cocks together and kissing another man, especially while he was all dolled up. He felt Rob's hand snake behind him and grab his ass, pulling him in even closer. He pushed back against Rob and kissed him deeper. After a few minutes he pulled away from Rob's kiss and spoke, \"Oh my, that was, was, different.\" Chris drew in a deep breath and sighed. His head was swimming with all the new sensations he was feeling. \n\n\"Well I hope it was good.\" Rob replied. \"I loved it. I've loved everything so far. And I must say you make a lovely looking woman.\" He looked Chris up and down taking in all his curves and his done up face. Rob was enjoying this very much. Chris was a dream come true, and living right next door. He thought to himself, now he had a lover right next door that he could trust, and they could play just about any time that they wanted. He was sure that Patty wouldn't mind. It was a question of keeping Christy from finding out. He knew Patty wouldn't say anything and he wondered if she would want to join in. Based on What Chris had said last night it was questionable if Christy would approve. But right now he wanted to move on to more pleasurable concerns. He pushed Chris back on the sectional sofa and asked, \"How about a little 69ing? Let's pleasure each other at the same time.\" \n\nChris smiled as he pushed Rob back on the sectional sofa, \"I like that idea.\" Without saying another word he turned around and wiggled his ass at Rob. He straddled Rob and scooted back so his cock was hanging just above Rob's lips. He took Rob's huge cock in one hand and moaned, \"Mmmm I want this in my mouth again before you fill my ass with it.\" A muffled moan came from between Chris' legs when he said that and then he felt Rob's mouth swallow him with ease. He grunted and lowered his head to Rob's shaft and licked up and down, teasing the head before sucking it into his mouth. The soft head felt so good between his lips. He sucked and licked just the tip for a minute or so, making Rob moan around Chris' cock. He opened wider and worked more and more into his mouth. It took some doing but he managed to get more of it down his throat than last time and he gagged, but he loved it. He felt like such a slut having his mouth full of cock and his own in another man's mouth, but it felt so good. He started to bob up and down on Rob's huge shaft, making gagging noises when he would reach as far as he could go. \n\nRob was still amazed at how much cock Chris could fit in his mouth. If he kept it up he was going to explode any minute. He was easily able to suck Chris deep in his mouth. He bobbed up and down, letting Chris grind his hips into his face. Soon he had a rhythm going with the motion of Chris's hips and they were in heaven. He could tell that Chris was enjoying it because he would suck harder as Rob did the same. Rob let his hands roam up Chris' legs and over his panty clad ass. He looked so sexy with his cock hanging out of the panties while they still covered his tight ass. He couldn't wait to fill it with his cock. \n\nChris pulled off Rob's cock and moaned. \"Ohh baby yess. That feels so good. Keep it up and I'll fill your mouth with cum.\" \n\nRob pulled off Chris' cock. \"Go ahead Chris. Remember, we've got all night. We can always got for round two.\" \n\nChris licked Rob's cock. \"Mmm, I like that idea.\" He opened wide again and sucked Rob's shaft back into his mouth. He felt Rob do the same and began working at a faster pace. Rob's tongue darted over his head as he bobbed and it was driving him crazy. An orgasm had been welling up before Rob stopped sucking and now it was so close. He wasn't sure he could hold out until Rob came. \n\nRob sucked faster and harder, wanting Chris' load in his mouth. It had been so long since he'd had a man shoot his load down his throat and he was aching to feel it now that he was here with Chris. They rubbed their lingerie clad bodies against each other as he sucked faster and faster. One of his hands snaked under the band of satin fabric that covered Chris' ass and he teased the tight hole he found there. \n\nChris groaned around Rob's cock when he felt a finger penetrate his ass. Having something in his ass while getting a blowjob was one of his favorite things. Christy knew it too. She had blown him on more than one occasion while he had a toy in his ass. The sensation pushed him over the edge. He let go of Rob's cock, tensed up, and grunted as his orgasm started to wash over him. He let out a low guttural moan as the first shot of cum erupted from his cock. He felt Rob's mouth clamp down on him and suck harder and swallow shot after shot of cum erupting from his pulsing shaft. When he had shot his last load he gasped and pulled from Rob's mouth. \"Oh God Rob, that was the best blowjob I've ever gotten.\" ",
        "\"I'm glad you liked it.\" Rob said as he licked his lips. \"Wow, you shot a massive load. Either that or I'm out of practice.\" He said as some cum dribbled down his chin. \n\n\"Well I hope you get some more practice after tonight.\" Chris turned around and kissed Rob, tasting his cum on another man's lips. \"Now how about I finish you off?\" \n\nRob watched Chris crawl to the floor of the living room from the sectional and he swung his legs to the floor. \"Crawl over here and finish what you started baby. I'm going to shower you with ah huge load.\" \n\nChris obediently crawled between Rob's legs and started to lick and suck right away. He stroked the long veiny shaft with one hand and licked it with his tongue in a rhythm that had Rob squirming. Giving this much pleasure to another man was an incredible turn on. He knew he could do it with a woman but to know that he could please a man just the same was hot to him. He flicked his tongue on the underside of the bulbous head in his lips, eliciting a moan from Rob. \n\n\"Ahh yessss. That's it you cock slut.\" Moaned Rob,\" Take that cock and worship it until it covers you with cum.\" \n\n\"Ohh but what if I want to swallow it all?\" Chris gushed. \n\n\"I have other ideas for you.\" Rob grinned. \n\nA groan escaped Chris' lips as he opened wide and swallowed Rob's turgid shaft. He bobbed up and down getting it deep in his mouth again. As he did he heard Rob groan and comment about how he could give Patty a run for her money with his cock sucking skills. He popped off his cock and smiled. \"Maybe we should have a contest some time. See who sucks better.\" Before Rob could answer he swooped back down onto his shaft and sucked even harder. Being watched by Patty would be an incredible turn on. He'd always thought Patty was hot and to see here naked watching him suck her husband was kinky and apparently Rob thought so too. \n\n\"Mmmm that would be hot. I think she'd be up for that.\" He grunted as he stiffened. \"Oh god yesss. Suck that cock you whore. I'm going to cum.\" He shook a bit and then let out a moan as the first shot hit Chris in the back of the throat. He watched as Chris swallowed like a pro and didn't flinch. He shot his second wad and Chris swallowed it greedily but then he pulled out of Chris' mouth. The next spurt shot out and landed on Chris' face and chest. Ropes of cum shot form Rob's cock and the arced through the air hitting Chris on the face and chest. He watched in fascination as Chris opened his mouth and caught some of each shot while his hands rubbed it into his neck and chest through the lingerie. \n\nBy the time he was finished shooting, Chris' face was covered in cum. It felt so good to have another man's cum on his body and in his mouth rather than his own. \"Wow that was a lot of cum he gasped.\" Chris licked his lips, wiped cum from his face, and licked his fingers clean. \"Mmmmm, so tasty. And so much. I can't wait to have some more.\" He got up and kissed Rob, snaking his tongue into his mouth and mingling the aftertaste of each other cum together. Rob grabbed him and pulled him down on the couch as they made out. Kissing and rubbing each other in the afterglow of some incredible sex. \n\nChris was the first to break the kiss. \n\n\"I should go get cleaned up for round two. \"He got up and headed upstairs to the bathroom. \"Don't go anywhere.\" He blew a kiss to Rob as he disappeared from sight. \n\n\"Oh I won't. I'm not going anywhere tonight.\" \n\nChris hurriedly walked to the bathroom and cleaned up his cum stained face. Did that mean Rob wanted to stay the night? Actually sleep with him after they had their fun? The thought was somewhat off-putting despite what they had just done. He figured they would have their fun and then go their separate ways until they wanted to have some hot sex again. The excitement and high of getting fucked by a guy wearing off and then coming back down. But at the same time it intrigued him. Especially if they were still dressed in lingerie. That made the thought of sleeping with him more enticing. As he mulled this turn of events over he applied fresh makeup to complete his appearance. He headed into the bedroom, pulled off the cum soaked baby doll, and tossed it on the floor as he rummaged around for new top. He found what he was looking for at the back of the drawer. It was a satin and lace camisole top with spaghetti straps. Unlike the other that Christy had this one was tight fitting and only came down to her hips. He wondered how far down it would come on him. \n\nHe didn't want to hide his shapely ass under any lingerie for Rob because he knew what was coming next, getting his ass filled. He pulled the top over his head and squirmed into it. It was a bit tight on him but the sensation of being hugged by the satin and lace was exquisite. The top came down to just below his waist and showed off his smooth stomach, even though there was a slight bulge there he thought he still looked sexy. Before heading back downstairs he changed one more thing. He hooked his fingers in the panties and tugged them off. Getting o the back of the lingerie drawer again he pulled out a pair of crotchless panties that had not seen the light of day in years. Christy would never know they were even missing he thought if he decided to keep them in the closet with some other things he kept from her. Once he had them on he pulled his cock out through the satin slit in the front and admired himself in the mirror. \n\nRob waited patiently in the living room while Chris was upstairs getting cleaned up. That was so hot. Never had he thought this would happen, yet it did, and it was incredible. He couldn't wait to tell Patty what happened. And he couldn't wait to suggest to her that the three of them should get together the next time Christy was out of town. As he thought about the fun the three of them could have together footsteps came clicking down the hardwood stairs. He wondered what was going on so he turned around. What he saw was a beautiful sight. Chris had redone his makeup and the top he was in hugged his chest and waist, making his ass look all that better. But what really made the look were the heels that Chris was wearing. \"Um, wow!\" was all he could manage. \n\n\"You like it?\" Chris asked as he descended the stairs and stood there, legs apart, cock dangling between. The heels really accentuated his already tight legs. \"I've had the heels for a couple of weeks. This seemed like a fitting time to get them out. I wish I had thought of it sooner.\" His hands roamed over his body while he looked deep into Rob's eyes. He could see the lust and longing building behind that look. He's sure that his face had a similar look as he walked over to the front of the sectional and turned his back to Rob, He then bent over at the hips to show off his long taught legs and satin covered ass. The panties split far enough that his asshole was exposed to Rob so he had a good view. He heard Rob let out an appreciative whistle and then he felt Rob's hands rubbing and squeezing his ass. He pushed back against Rob's hands and moaned. \"Mmmm you want that baby? I want to give it to you.\" Chris waved a bottle of lube he'd been palming at Rob. \n\n\"Yes I do.\" He enthusiastically replied. \n\nHe stood up and turned to face Rob, looking into his eyes again. \"I know this is going to sound silly, considering what we've already done, but did you mean what you said? About not going anywhere tonight?\" \n\nRob looked up at Chris, he wanted so bad to fall asleep next to him tonight. It felt so right after so long. \"Yes, I did.\" He pulled Chris close and kissed him passionately as they ground their hips together, stiff cocks rubbing against each other and the lingerie they were both wearing. \"Now how about you let me fill that ass?\" \n\n\"I can't wait.\" Chris said as he pulled away and sat down on the couch again. He pulled a pillow off the backrest of the couch and tossed it on the floor. \"There, now I've got more room to lean back. He laid back and spread his legs, and beckoned Rob to get between him. \"Now fuck me with that hot piece of meat baby.\" He was so turned on at what was happening. \"I want to see you fuck me.\" He spread his legs wider and massaged some lube into his already stretched asshole as Rob got into position. \n\nRob moaned watching Chris smear lube on his tiny pucker and then gasped as a finger slipped inside. \"I can't wait. I've been dreaming about this since last night. I just didn't know at first that the hot ass belonged to you. He took Chris' hose covered legs in his hands and pulled himself closer to Chris and Chris closer to the edge of the couch. Chris' ass now hung over the edge of the sofa. Rob watched as Chris reached down, wrapped his hand around his throbbing shaft and stroked some lube on it and lined it up at the tight entrance. Rob pushed Chris' hand away and took his cock in his own hand and teased Chris' tight pucker. \"You want this honey?\" Rob asked. He could feel Chris' ass pulsing in anticipation of the coming invader as he pressed forward. He swatted Chris' ass with his huge cock. He wanted to see Chris beg for it, see how bad he wanted it. \n\n\"Yess baby, \"Chris moaned, \"Give me that hard cock. I need my naughty ass filled so badly.\" \n\n\"That's my good little slut, beg for it, beg to have your slut ass filled.\" He teased Chris by rubbing his cockhead over the tight hole offered up to him, making Chris moan. \n\n\"Ahhhh yesssss.\" Chris grunted. \"I need it. I need my ass filled with a real cock. Fuck me like a slut.\" Chris pushed forward a bit hoping to get Rob's cock to slide in but to no avail. Rob pulled back and waved a reproachful finger at him. Then without warning Rob swatted Chris' ass as it hung over the edge of the couch. Chris hissed and ground his hips. \"Ooowwhhhh, mmmmm. Yes, I'm a naughty girl aren't I? Spank me again.\" \n\nRob obliged by swatting Chris' ass again as he leaned forward and pressed his cockhead against the resisting pucker of Chris' ass. \"My little slut likes a spanking doesn't she?\" He swatted his ass again. \n\nChris gasped as the head of Rob's cock pressed his puckered hole and his hand came down on his ass. He tensed up a bit and relaxed, feeling the head start to push into his ass. \"Ugghhhh, mmmmmm\" He groaned in pain and pleasure. He took a deep breath. \"You are bigger than any of the toys I've ever used baby.\" He was getting into feeling like a woman, calling Rob baby. \"Go slow.\" He willed himself to relax some more and felt Rob's cock slowly open him up and slid in. \"Ohh yessss, it hurts so good.\" Chris hissed as his ass closed in on the invading head now ensconced in his ass. He was so big, bigger than any of the toys he had and he hoped he could take it all. He wanted to so bad. \n\nRob gasped at how tight Chris' as felt. \"Oh wow. This feels great. It's been so long since I've had another man's ass wrapped around my cock.\" He slowly eased forward, watching Chris' face contort in a mix of pain and pleasure. Inch by inch he buried his thick shaft in the tight hole that was Chris' ass. After a couple of minutes Rob had his thick ten inch cock buried deep in Chris' ass and it felt incredible. Patty never let him do her like this and to feel how tight he was compared to his wife's pussy almost drove him over the edge to cumming right there. \"Mmmmm, Chris. You feel so good. Tighter than my wife.\" \n\n\"She have a tight ass too?\" Chris cooed. \"God you're so huge! I can't believe that you're all in there.\" He wiggled his ass and moaned as he felt Rob pulse deep in his bowels. \n\n\"Noooo. She won't let me in there.\" Rob grunted as he felt Chris' ass squeeze his cock. \"I'm already to long for her pussy. There's no way she would let me in her ass.\" \n\n\"Well, you can have mine any time it is free.\" Chris smiled up at him and thrust his hips back and forth, making Rob's cock slide in and out just a bit. \n\nRob groaned when Chris started to move his hips. He responded in kind, moving his hips back, almost pulling out, and then slowly sliding back in again. The feeling of Chris' ass pulling him in like no pussy could excited him. \"You want more of this again? After tonight?\" \n\nChris began to thrust in time with Rob's movements and nodded. \"Oh yes. This feels so good. I assume you want me to return the favor?\" A low moan escaped Rob's lips when he said that. \n\n\"Oh yesss, Chris.\" He thrust in and out, picking up the pace as he felt Chris relax a little more and thrusting became easier. \n\nChris reached between them and took his cock in hand and stroked it. The feeling of a real cock in his ass had him harder than ever before and he was stroking slowly, hoping to return the favor for Rob. His other hand pinched his hard nipples through the camisole he was wearing. He always loved it when his wife licked at bit his nipples when they were in bed but now that he had a cock in him it was even better. The sensations he was feeling were incredible and he started to groan and thrust at Rob harder and faster. Through half closed eyes he could see Rob reach down and grab his hips to hold him close as his cock pounded into his stretched hole. Then Rob leaned over and began to lick and bite his nipples through the top, making him gasp. The short, sharp sting of pain was exquisite and ebbed into a feeling of immense pleasure. \n\n\"God yes!\" Chris exclaimed. \"I love that, keep going.\" \n\nRob thrust harder at Chris, plowing his ass now and biting hard on each nipple, moving back and forth from one to the other. He felt Chris' legs wrap around his ass and urge him on as they fucked. Soon they were thrusting and gyrating like animals on the couch. After a few minutes though Chris pushed him up. \"How about taking me dogystyle honey? Take me like a horny slut.\" \n\nRob grinned. \"That's my girl. My little slut is really getting into it isn't she?\" He asked as Chris slid off his cock and rolled over on the couch. He waved his ass in the air and draped his torso over the back of the couch. The sight looked even more inviting when Chris reached back and spread his ass cheeks and said to dive right in. \n\n\"Yes, can't you tell?\" He looked back at Rob, cock in hand, lining up with the offered target. \"I love it when Christy talks dirty to me in bed.\" \n\n\"Ohh.\" Rob reached out, grabbed Chris' hips and teased his loose hole. \"Beg for it then. Beg for it like a slut.\" \n\nHearing Rob call him a slut over and over turned him on immensely. He wiggled his ass and hissed through his teeth \"Oh baby, please. Please slide that huge cock in my waiting ass. I need it bad.\" Without saying anything Rob pushed into his ass in one stroke, burying his cock to the base in one stroke. \"Ughhh,\" he gasped. \"Yesssss. Fuck my tight hole. Use me like a cheap whore.\" He groaned. He thrust back at Rob, wanting him to fuck him harder. \"Fuck me like my wife can't.\" \n\n\"Oh yes Chris! Take it!\" Rob grabbed Chris' hips and thrust hard into his ass. Making their balls bounce back and forth hitting each other. \"Take my monster cock like the slut you are.\" \n\n\"Yes! Yes!\" Chris exclaimed as he looked back as Rob. \"I'm your slut now.\" He was in heaven as Rob filled his ass with that huge cock of his. Being stuffed with a real cock was so much better than a toy. \n\nTo be continued..."
    ],
    "authorname": "curiousone43",
    "tags": [
        "cross dressing",
        "fetish",
        "lingerie"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/chris-adventures-ch-02"
}