{
    "title": "Tomboy Ch. 02",
    "pages": [
        "Be sure to read \"Tomboy\" before starting this story. Things speed up more at the end of this chapter. Everyone in the story is at least 18 years of age. Copies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author.\n\n* * * * *\n\nTom was in the basement listening to CDs when the doorbell sounded so his grandmother Bell had to answer the door. \n\n\"Yes, may I help you?\" \n\n\"Err..hi...is Tom here?\" Nancy asked as she pushed the short skirt down as low as it would go on her naked thighs. \n\n\"Who may I say is calling?\" Bell asked. She wasn't bashful as her eyes moved down the tight halter top and down to the very short skirt. \n\n\"Karen.\" \n\n\"Wait here,\" she said sharply as she closed the door without bothering to show her in. \n\n\"TOM!\" Bell yelled at the top of the basement stairs. \n\n\"Yes Grandma!\" he yelled back. She was hard of hearing. \n\n\"There's a Karen at the door looking for you,\" she said. \n\n\"OK!\" he yelled. Shit he looked at the mess in the basement room. \"Tell her I'll be there in a few minutes.\" He grabbed his dirty underwear and tee shirt and pushed them under the sofa cushion. \n\nBell walked to the door and opened it. \"He said to wait. How old are you?\" she snapped at the young blonde girl. \n\n\"Eighteen ma'am,\" she answered. \"I love your dress. It is so pretty.\" \n\n\"This ol'thing.\" Bell smiled. \"It's a little long don't you think?\" The older woman's eyes moved down to the ultra short skirt on Karen's thighs. \n\nKaren knew the woman was judging her from her clothing. She wished now she had worn more conservative clothing. She was lost for a reply.\n\n\"Karen!\" Tom said as he pushed around his Grandma. \"Come in.\" \n\n\"Grandma we will be in my room,\" Tom yelled back at her. As they walked down the stairs Bell grabbed her grandson's arm. \n\n\"Can I talk to you a minute?\" \n\n\"Sure,\" he said feeling the pain in her strong grip. \n\n\"That girl is a hussy,\" she whispered. \"I can see it in her eyes.\" \n\nTom laughed. \"Grandma she is not a hussy.\" He didn't even know what a hussy was. \n\n\"I'm not happy with you and her being alone downstairs.\" \n\nTom laughed and pulled his arm from her grasp. \"If I need help I'll call for you.\" He turned and closed the door behind him. \n\n\"I don't think she likes me,\" Karen said sitting alone on the sofa. \n\n\"She doesn't have to like you. I do,\" he said as he sat next to her. \n\n\"You do?\" she said smiling and moving closer to him. \"I wasn't sure after you left my house so abruptly.\"\n\n\"I don't want to come between you and Jo,\" he said. His eyes noticed her hard nipples pressing out the front of her halter top. \n\n\"It's just a sister thing,\" she said. \"Were cool with everything,\" she lied. \n\n\"I really like Jo and don't want to mess up our friendship. I was surprised when you said she was gay.\" \n\n\"Yeah I shouldn't have said that,\" Karen whispered. Her body turned until her lips were only a few inches from his. \"She's not really gay.\" \n\nTom laughed. \"Nice try.\" \n\n\"She's not.\" Her mouth pressed forward until their lips brushed. \n\n\"Yeah right,\" he said with his mouth barely touching hers. \n\nThey were so locked into each other they had not heard the door open or the footsteps. \n\n\"Would you kids like to have some cookies?\" Bell asked as she stood with a plate of chocolate chip cookies. \n\nKaren almost jumped off the sofa when she heard the woman. She was scared to death of her. \n\n\"Grandma, you should knock before you come into my room,\" he said upset. \n\n\"Why? Were you doing something you shouldn't be doing?\" \n\n\"No ma'am,\" Karen said as she pushed her skirt down and moved away from Tom. \n\n*****\n\nJo took her time heading home from Tina's while thinking about the past few days. Normally her day started and ended with basketball but now all she could think of was Tom. She closed her eyes and could see him standing naked before her. She hopped the last few feet up to her door. \n\n\"Hi Mom!\" she smiled. \n\n\"Why are you so happy?\" \n\n\"I don't know,\" she lied. She grabbed a large celery stick in front of her mother and chomped down on it. \"Where is Karen?\" \n\n\"She said she was going to that new boy's house,\" Jo's mother said. \"Why?\" When she turned around the room was empty and Jo was gone. \n\n*****\n\n\"I thought she would never leave,\" Tom whispered as he moved closer to Karen. His hand dropped to her bare thigh and moved swiftly up to the hem on her skirt. She grabbed his arm. \n\n\"I'm afraid she will come back.\" \n\nTom smiled as he jumped up, ran up the stairs and locked the door. When he returned to the sofa he saw Karen lying on her back with her head on the small pillow. Her legs were squeezed tightly together. \n\n\"Getting sleepy?\" he asked as he picked up her feet and placed them on his lap. As he lifted them he peeked under her legs and saw the black panties she had worn before. \n\n\"Yes,\" she giggled. \"Why don't you wake me up?\" Suddenly his fingers began to tickle her feet. \"OH STOP!\" She laughed as her body wiggled back and forth trying to get away from his fingers. \n\nTom laughed as well and was happily surprised to she her skirt now up over her panties. He stopped tickling and just stared at her exposed undies. \n\n\"Do you like them?\" she giggled as she slowly opened her thighs causing the black silk to stretch across her blonde mound. Her fingers fished into the small pocket on her skirt and held up a small square-shaped shiny object. \n\nTom gulped when he saw the condom. He didn't have any more excuses. \"Are you sure?\" \n\n\"Yes I want you to be the first,\" she said as she raised her hips to allow her fingers to push her black panties under her hips. She tossed them aside and again offered him her virginity. \n\nTom slowly pushed down his shorts and fumbled in his boxers for his hard-on. Although he was a virgin he had put on rubbers before just to make sure he knew what to do when the opportunity arrived. The time was suddenly now. \n\nKaren watched as he ripped open the condom and stretched it over the huge tip. Her pussy was dripping wet so she knew she was ready to finally become a woman. \"Hurry,\" she said. He pushed the condom wrapper under the cushion and smiled. \n\nTom moved up between her legs and aimed the latex lance at her maidenhead. He pushed and heard her moan. He pulled away. \"Are you OK? \n\n\"No wait let me get my breath,\" she said. The pain was overbearing because he was so big. She took ten big breaths and again lay back ready. \n\nTom moved slower this time and pushed gently against her hymen. \n\n*****\n\nGrandma Bell looked at the clock and realized almost twenty minutes had passed since she was down in the basement. The apron hit the table before she walked to the door and found it locked. She smiled as she grabbed the tiny key. Before she opened the door the doorbell rang. \n\n\"Hi Jo,\" she said smiling. It was the tomboy girl who was there yesterday. \n\n\"Is my sister here?\" \n\n\"Karen is YOUR sister?\" Bell asked with a surprised look. \"Yes she is downstairs with Tom.\" \n\n\"I need to get down there,\" Jo said looking nervous. \n\n\"I was just thinking the same thing,\" Bell said as she let Jo in. As soon as she unlocked the door Jo bolted down the stairs. She froze when she saw Tom's body poised to enter her hussy sister. \n\n\"STOP!\" Jo cried out. \n\nKaren and Tom both turned to see Jo standing at the base of the steps and Bell's feet slowly coming down the steps. \"Shit,\" Tom said as he quickly jumped up and pulled up his shorts over his hard shaft. Karen moved up and looked for her panties but didn't have enough time to find them. She pulled down her skirt and sat back just as Bell's head looked under the basement ceiling. \n\n\"Jo arrived so I let her come down,\" Bell said smiling. \"I wonder how that door got locked.\" \n\nBoth Tom and Karen's faces were bright red from the excitement of almost fucking and almost getting caught. \"Tom can I see you a minute upstairs please?\" Bell asked. She turned and walked up the stairs not waiting for an answer. \n\nAs soon as Tom walked away the sisters went at each other. \n\n\"You're such a whore,\" Jo said as she moved towards Karen. \n\n\"If you touch me I'll tell daddy,\" Karen said holding her hands up to protect her. \n\nJo held back her anger and picked up the balled up panties next to the sofa. \"Maybe I'll show him these and let him know how easy they come off?\" \n\n*****\n\n\"I'm ashamed of you,\" Bell said as they sat at the kitchen table. \"I never thought I would ever say that to you.\" \n\n\"Grandma, I'm sorry,\" he said with his head looking down. \"I don't know why I did it.\" \n\n\"Tom you have to be stronger and be aware of girls like her.\" \n\n\"I know.\" \n\n\"Do you want to tell her to leave or should I?\" \n\n\"I will,\" Tom said. \n\n*****\n\n\"You know you don't have a chance with him,\" Karen said smiling at Jo as they waited for him to come back. \n\n\"If he wants you he can have you and I'll leave,\" Jo said trying her hardness not to pull her sister's hair out. She heard and saw Tom's footsteps coming down the stairs. Jo stood ready to leave. \n\n\"Tom, I'm sorry I'll leave,\" Jo said as she walked by him. \n\n\"No,\" he said grabbing her arm. \"Karen has to go.\" \n\n\"What?\" Karen asked. \"You want me to go?\" \n\n\"Yes,\" he said firmly. \n\n\"Well I've never...,\" she said as she grabbed her panties from Jo's hand. \n\nTom watched her walk up the stairs while taking aim at her bare buttocks under the short dress and glimpses of her damp pussy between her thighs. \"And you won't with me,\" he said. \n\n\"I should leave too,\" Jo said feeling happy she had stopped them before he entered her but sad because he was probably mad at her for doing it. \n\n\"No please stay,\" he said. \"I need a friend right now.\" He opened his arms and pulled her body into his. \n\n\"Careful your Grandma may come down,\" Jo giggled. \n\n\"She's not worried about you,\" he laughed. \n\nThat's the problem she thought. Somehow she needed to be someone Tom would make love to. \n\n\"You want to watch \"Love and Basketball?\" he asked as he moved over to the DVD and popped in the movie. \n\n\"Sure,\" Jo said smiling. \"It's my favorite movie.\" \n\n*****\n\nTracy looked at the map and tried to drive through the dense city traffic at the same time. She wanted to surprise Tom and spend a couple of days with him until Clarkton High School started back But the biggest reason was that she had gotten intimate with another boy at the school dance last weekend and now had mixed feelings. She thought she loved Tom but after Saturday night she now was not sure. \n\n\"Hurry up!\" she yelled at the stalled traffic in front of her. \n\n*****\n\nTom and Jo tossed a mini-basketball back and forth as they watched the movie. \n\n\"Your sister told me something interesting today,\" Tom said.\n\n\"I don't think I want to know,\" Jo responded. \n\n\"She told me you were not gay.\" \n\nJo caught the ball and just held it wondering now what she should say. \"She did huh?\" She tossed the ball back to him. \n\n\"That's all you have to say?\" \n\n\"It's something I don't like talking about,\" Jo said. If she told him she was straight it would mean she had lied to him and she didn't know how he would take it. \n\n\"We're friends. I hope you can talk to me about such things.\" \n\n\"I've got to go to the bathroom. Be right back,\" she said. \n\nAs soon as the bathroom door closed Jo stood and put her back to it. She realized she had to tell him the truth. She hesitated as she thought of how she would say it. \n\n*****\n\nBell was dozing off in her favorite chair and was dreaming of Errol Flynn when the doorbell sounded again. \"What now?\" she said as she moved slowly to the door. Since her family moved in with her she had lost out on a lot of her naps. \n\n\"And who might you be?\" Bell asked the cute young dark haired girl on her porch. \n\n\"I'm Tracy, Tom's girlfriend from Clarkton. I thought I would surprise him.\" \n\n\"Sure why not,\" Bell laughed. She didn't need to watch her soap opera today because she had a live one right now in her house. \"He's in the basement so go on down.\" \n\n\"Can I use your bathroom first?\" Tracy asked. She wanted to fix her hair and makeup. \n\n\"Sure,\" Bell said as she returned to her chair. \n\nTracy walked out of the bathroom and popped in a breath mint before she walked down the stairs. \n\nTom was lying on his back on the floor while tossing the ball up over his face when he heard someone coming down the stairs. \"I'm being good Grandma,\" he laughed. He continued to watch the ball go up into the air when he saw legs walk up to his head. He saw thin bare legs who were definitely not his Grandma's and forgot about catching the ball. It landed on his face. His eyes moved up the smooth legs to the short skirt and then up under it to the black crotch of the panties. \"Karen?\" he said as he sat upright. \n\n\"No it's not Karen,\" Tracy said while not smiling. \"Who is Karen?\" \n\n\"TRACY!\" Tom said totally shocked to see her there. \"What are you doing here?\" \n\n\"I thought I would surprise you,\" she said still not smiling. \"Who is Karen?\" \n\nTom was thinking of how to answer that when the bathroom door opened and Jo's face popped out. \n\n\"Tom I'm not gay,\" she said looking downward. \n\nTracy looked at the girl and back at Tom. \"Is this Karen?\" \n\n\"Who the fuck are you?\" Jo asked as she glared at the cute stranger. \n\n\"Who the fuck are you?\" Tracy glared back as they moved eye to eye. \n\n\"WAIT PLEASE,\" Tom yelled. \"Tracy this is Jo. Jo this is Tracy.\" \n\nNeither of them said a word as they stood wondering if they should just go at it.\n\n\"Tracy is my girlfriend from Clarkton,\" he said grabbing Jo's arm and pulling her away.\n\n\"Oh that Tracy,\" Jo said. She held out her hand. \n\nTracy still was upset for finding another girl in the basement and having Tom call her Karen and did not shake Jo's hand. \n\n\"Who is Karen?\" She asked as she turned to look at him. \n\n\"She's one of the basketball players at the park,\" Jo lied quickly. \"We all play hoops together and she was just here with us.\" \n\n\"Just basketball right?\" Tracy asked. \n\n\"Sure....yes just basketball,\" Tom said as he hugged her into his body. He peeked over at Jo and winked. \"Thank you,\" he mouthed without making a sound. \n\n\"I guess I'd better be going,\" Jo said as she watched their hands move over each other's back. \"If you want to play some hoops let me know.\" \n\nTracy waited for the door to close before she placed her lips onto Tom's. Their tongues mingled for a couple of minutes before she broke away. \"I've missed you so much,\" she said. \n\n\"Me too,\" he whispered back. Here he was again with a cute girl in his room with a chance to go all the way. But his Grandma was upstairs. \n\nTracy moved away from him and sat on the sofa. \"So tell me what you've been doing since you got here.\" \n\nTom thought about having Karen jerk him off and Jo rubbing his penis with her elbow but said, \"Not much really. Just been playing some basketball. How was the dance?\" He sat down next to her. \n\n\"It was good,\" she said. \"Jennie broke up with Matt.\" \n\n\"You're kidding,\" he said. \"They've been going out longer that us. What happened?\" \n\n\"They didn't want to be tied down when they went to college,\" she said. \n\nAgain the door opened upstairs and Bell came down carrying a tray of cookies. \"I hope you want some of these,\" she said after sitting them on the small table in front of the sofa. \"It's good to see you two being good,\" she commented as she walked back up the stairs. \n\n\"What did she mean by that?\" Tracy asked as she bit into a delicious chocolate chip cookie. \n\n\"Who knows?\" he said. \"She's getting old.\" \n\n\"I HEARD THAT!\" Bell yelled just before she closed the door. \n\n\"Do you think she will mind if I stay over tonight?\" Tracy asked as she moved closer to him. \n\n\"I guess you can sleep on the sofa upstairs,\" he said smiling as her hand moved to his thigh. \n\n\"I was hoping to sleep down here with you,\" she whispered. Her fingers moved slowly up his thigh while stopping to give it a gently squeeze every three or four inches. \n\n\"That would be nice,\" he whispered. His hand moved over back and down to the top of her curvaceous ass. \"But I don't think the family will approve.\" \n\n\"What can we do now?\" her fingers moved over his large bulge. \n\n\"That, and this,\" he said as his fingers moved down to cup her smooth buttocks. He realized she was wearing a thong which was a first for her. \"What's this?\" His fingers pinched the thin strap moving down between her ass cheeks. \n\n\"Why don't you find out?\" she giggled. She let go of his rod and stood in front of him. Tom's fingers trembled while moving up over her bare knees to her delicate thighs. The short skirt offered little resistance to his exploring fingers heading north under the thin material. He couldn't wait to see her womanly treasure as he pulled the vee shaped panties down over her hips and out from under her skirt. He noticed the crotch was damp but didn't say anything. \n\nTracy kicked her panties to the side and leaned over to pick up the front of her skirt. She knew he had not seen her vagina and smiled as she looked at his face as the material caressed her flesh as it moved upward. \n\nTom had only seen Karen's blonde bush and was not prepared for his girlfriend's neatly trimmed dark pubic mound. \"God you are so beautiful.\" His hands moved with a purpose towards the target identified by the glistening moisture. \n\nTracy's knees were so weak she had to sit down next to him. She leaned back on the sofa as his fingers explored her slit. He rubbed her clit and she moaned. His mind remembered the feel of Karen's pussy as the fingertip moved downward to her virgin...suddenly his finger dipped into the opened hole waiting for him. He stopped. \n\n\"Tom I...\" she said seeing his shock. \"I should have told you first.\" \n\nTom moved his finger deeply inside of her feeling a hot pussy for the first time. Suddenly he pulled it out and sat back on the sofa. \"Who was it?\" \n\nTears fell from her eyes as she looked down not wanting to see his face. \"It doesn't matter. I love only you.\" \n\n\"Fuck Tracy, I leave for two weeks and you fuck somebody.\" Tom quickly thought about how close he was to do the same thing that same morning. \"At least tell me who it was.\" \n\n\"Don't be mad,\" she said pulling her skirt over her exposed bush. \n\n\"I've over mad,\" he said. \"Just tell me who it was.\" \n\n\"It was Jack.\" \n\n\"My cousin Jack?\" \n\n\"Yes, but it's not like you think.\" \n\n\"How can fucking my cousin not be like I think?\" \n\n\"It wasn't like that,\" she said sobbing. \n\nTom took a breath and tried to calm down. \"OK tell me the way it was.\" \n\n\"It was at the dance and I was all alone. Jack came over and we just talked for almost an hour mostly about you.\" \n\n\"Keep going.\" \n\n\"When the dance was over we went to the coffee shop and talked for another hour. That's when he told me how much he liked me but since we were going out he never pursued it. He had tears in his eyes so we left and drove around town for a while. We ended up at Eagles Point.\" \n\n\"He took you there and you didn't say anything?\" Tom remembered it as the city's make out place.\n\n\"He said we were just going to talk some more. Since you left I've been so lonely and being with him made me feel better.\" \n\n\"Yeah a whole lot better,\" he quipped. \n\n\"When he first kissed me I was in shock and told him no. We talked some more and he kissed me again. I tried to resist but I was so lonely and.........\" she sobbed. \n\n\"Tell me the rest,\" Tom said. He wanted to know it all so when he beat the shit out of his first cousin he could remember everything. \n\n\"And...then we did it.\" \n\n\"You just did it? You just pulled up your skirt and down your panties and he stuck it in?\" \n\n\"You make it sound so cheap. No it was not like that at all. We kissed for a long time and he touched my breasts and then under my dress. I touched him too.\"",
        "\"I think I like my version better,\" he said. \"Continue.\" \n\n\"We climbed in the back seat and he undressed me. I was only going to let him touch me until he kissed me down there.\" She looked at her lap. \n\n\"He sucked your pussy?\" \n\nShe glared at him. \"Sorry, he said. \n\n\"Yes and before I knew it he was pushing his thing into me.\" \n\n\"He raped you.\" \n\n\"No I could have stopped him but...I don't know why I didn't.\" \n\n\"He did use a rubber right?\" \n\nAgain Tracy looked down. \n\n\"Shit Tracy he might have knocked you up.\" \n\n\"He didn't, I got my period last week.\" \n\n\"Thank God for that,\" he mocked. \n\n\"Tom I love you not him. Please forgive me.\" \n\n\"I need to go for a walk,\" he said. \"I'll ask Grandma if you can stay tonight.\" He moved up the stairs. \n\n*****\n\nJo was shooting foul shots when she heard the gate open. She turned to see Tom standing there. \"Whatsup? Where's the girlfriend?\" \n\n\"Back at the house,\" he said while holding his hands out to catch the ball. \n\n\"Something's wrong....\" She said as she grabbed the rebound and threw a hard bounce pass back to him. \n\n\"Yeah it's complicated.\" \n\n\"If you need someone to talk to let me know,\" Jo said trying not to look happy that something was wrong with his relationship with his girlfriend. \n\n\"Hey what did you say to me when you came out of the bathroom?\" \n\n\"Me say something?\" she laughed. \"I can't remember.\" She turned and swished a twenty foot jumper. \n\n\"Did you see Karen when you went home?\" Tom asked. \n\n\"Yeah she's OK. She's already thinking about her next conquest.\" \n\n\"I was almost a casualty,\" he laughed. \"Jo, may I ask you a question.\" \n\nJo dribbled between her legs. \"Shoot.\" \n\n\"Let's say you've been going out with a girl,\" he stopped and smiled. \"And, you two have been saving yourself for a better time.\"\n\n\"Gotcha,\" Jo said as she stopped dribbling. It was getting interesting. \n\n\"And, one of you doesn't wait and does it with someone else?\" \n\n\"She cheated on you already?\" Jo asked trying not to smile. \n\nHe took the basketball from her hands. \"Yes.\" \n\n\"Fuck man, I feel for you. What are you going to do?\" \n\n\"I was hoping for some advice.\" \n\nJo resisted telling him to dump her. \"If I was you...\" she started, \"I would sleep on it to make sure I did the right thing. You do love her right?\" \n\nTom hesitated. \"I thought I did two weeks ago but I'm not so sure now.\" \n\n\"Because she did it with someone else?\" \n\n\"No that hurt but I was already thinking about it before today.\" \n\n\"Sleep on it,\" Jo said smiling. \"Just don't sleep with her,\" she thought. \n\nTom dropped the basketball and hugged Jo into his arms. \"It's good to have a friend like you.\" \n\nShe pushed her body into his until her breasts crushed against his chest and her thigh pushed against his loins. Suddenly he pushed her back.\n\n\"We don't want that to happen again do we?\" he laughed while looking down at his front. \n\n\"No,\" she lied as she picked up the basketball and dribbled. He tried to steal it from her but her skills kept him away. She dribbled around him and laid the ball in. \"Ya better get her off your mind before you play for the team,\" she laughed. \n\n\"What girlfriend?\" he laughed as he did a cross over dribble leaving Jo in her tracks. His six foot three frame flew up over the rim for a two-handed dunk. \n\n\"Show off,\" Jo said while admiring his lean waist as the shirt moved upward. \n\n*****\n\nWhen Tom returned to the house Tracy's car was gone. \n\n\"Where did she go?\" Tom asked.\n\n\"She said she was going back to Clarkton,\" Bell said. She said to give you this. Bell reached into her apron to take something. She held out her hand and opened it. \n\nTom's mouth dropped when he saw it. In her hand was the condom package he had hid under the sofa cushion downstairs. \n\n\"Anything you want to tell me?\" Bell asked. \n\n\"No,\" he said as he turned to walk downstairs.\n\nTom waited to give Tracy time to arrive at her home and called. Her mother answered and told him she came home but said she did not want to talk to anybody. She asked Tom what was going on but Tom avoided the answer. \"You'll have to ask her that question.\" He hung up and fell asleep. \n\nWhen the phone rang it was dark in the basement so he had a tough time finding it. \"Hello,\" he managed to say still drowsy. \n\n\"Hi,\" Tracy said. \n\n\"Tracy, why did you leave?\" he asked already knowing the answer. \n\n\"When I found the condom wrapper next to your underwear I freaked out but after driving home I realized we both had sex with other people so maybe we could forgive each other and start again.\" \n\nTom shook his head trying to get awake. \"Tracy I didn't do it. I was about to do it when my Grandmother came downstairs.\"\n\n\"Karen?\" \n\n\"Yes. But it doesn't matter if I did it or not because I was going to do it. I don't think things will work out with us after this.\" Tom heard her sniffle and waited for her reply. \n\n\"Promise me you will come home once before we go away to college,\" she said sadly. \n\n\"I promise,\" he said. He wanted to get back to Clarkton if nothing more than to beat the shit out of Jack. \n\n\"Before I hang up I want to know why that girl said what she did when she came out of the bathroom.\" \n\n\"Oh that was Jo,\" he laughed. \"What did she say?\" \n\n\"She said she was not gay. What did she mean by that?\" \n\n\"She said that?\" Tom asked. \"Are you sure?\" \n\n\"Well I was upset but some things you don't forget.\" \n\n\"Someone told me she was gay so I guess she wanted to set the record straight.\" \n\n\"Well I knew she wasn't gay just from the way she looked at you when she left us,\" Tracy said. \n\n\"Na, we are just friends,\" he laughed. \n\n\"Maybe you think so,\" Tracy said. \"Call me next week.\" \n\n\"OK,\" Tom said before they hung up. They did not say they loved each other. \n\n\"Shit,\" Tom said a loud. Did Jo like him? \"Na,\" he laughed. \n\nAgain the phone rang. It was Billie who invited him to a team party the following night at his house. Billie's parents were gone. \n\n*****\n\nIt was after breakfast the next morning when Karen was sitting on her bed and Jo knocked and entered. \"Stay away from me or I'll scream,\" Karen said. \n\n\"Relax,\" Jo laughed. \"I'm not mad. I was wondering if you would help me with something.\" \n\n\"Me help you?\" Karen asked surprised. Normally Jo thought she was useless. \n\n\"Yes, would you show me how to put on makeup?\" \n\nKaren tried not to laugh but couldn't help it. \"Ha, ha,...you're kidding right?\"\n\nJo glared at her. \n\n\"OK sorry,\" Karen quickly said. \"Come with me.\" She stood and walked to her dresser and turned on the makeup light. \"Sit down.\" \n\nFor the next 45 minutes Karen showed Jo everything she needed to know about makeup. When she was finished Jo looked in the large mirror and gasped. She didn't recognize herself. \"One last thing,\" Jo said. \"Can I borrow one of your dresses?\" \n\n\"Holy shit you are really in love,\" Karen laughed. \"Sure.\" She walked to the closet and opened it up showing her tomboy sister a lineup of about 30 dresses. \"Take your time trying them on.\" \n\n\"Thanks,\" Jo said smiling. Maybe her sister wasn't so bad after all. \n\n\"My underwear draw is over her in case you want to want to go all the way,\" Karen grinned. She again saw Jo's glare. \"I mean 'all the way' getting dressed.\" \n\n\"Is there a party I don't know about?\" Karen asked as Jo tried on about nine of her dresses. \n\n\"Billie's house for the basketball teams only.\" Jo pulled down a slinky black silk dress and smiled. The basketball players will shit when she walks in wearing this dress. \n\n*****\n\nTom waited as long as he could before leaving for the party. He couldn't wait to see Jo and to ask her about the \"I'm not Gay\" comment. He would also get to meet all of the basketball team members both girls and boys. When he arrived at Billie's house he was the second one to arrive. On the sofa was a tall but very cute girl whose name was May. They hit it off right away. \n\n\"I heard about you,\" May smiled. \"A cute guy who can shoot.\" \n\n\"Thanks,\" he blushed. \"What position do you play?\" \n\n\"Any position you want me in,\" she laughed. Again he blushed. He was not used to the forwardness of these city girls. \n\nSome more players arrived and Tom got to meet them. He was aware of Calvin's coldness right away because Calvin was the highest scorer on the team and had a chance to make all-city and possibly get a scholarship. Calvin also played Tom's best position which was the number two guard. \n\n\"You might get some time at the 3,\" Calvin said cocky. \"Ellis is only six foot and has problems guarding the bigger small forwards.\" \n\nTom thought about telling him how he was going to take his position but decided to save it for another day. He met Ellis and realized he was about the biggest asshole he had ever met. The boy thought he was all-world in basketball and girls and probably wasn't in either. Tom was going to ask where he got his cheap cologne from but held back. \n\nTina arrived with another girl named Maggie who was one of the starters. She was pretty shy so Tom didn't get much of an impression of her. Jan was the last started who needed to lose about 50 pounds to look good. She said it was her playing weight to get rebounds. A half hour later most everyone was there and the booze and dancing had started when the door opened and Jo walked in. \n\n\"No fuckin way!\" Tina yelled when she saw her best friend in a clinging black dress. \"That can't be JO!\" \n\nJo blushed and smiled as everyone stopped moving and just stared. She looked like her sister Karen in short hair but even better. \"What's everyone staring at?\" Jo cracked. \"You never saw a girl before?\" \n\n\"Yeah but we didn't know you were a girl.\" A guy named Allen joked. \n\nJo looked immediately to find Tom, who Billie said was coming, but she didn't see him. As she walked across the room Ellis grabbed her hand. \"Care for a dance?\" It was the first time Ellis and Jo had even talked. \n\n\"No thanks Chump,\" she said pushing him away. She moved up to Tina and whispered. \"Where is he?\" \n\n\"You came a few minutes too late,\" Tina whispered back. \"He was dancing with May but I don't know where they are now.\" \n\n\"Shit,\" Jo whispered. \"Help me find them.\" \n\nAs Jo passed the punch bowl she picked up a glass she knew had some booze in it and gulped it down. It was the first alcoholic drink she ever had. She smiled and picked up another one. If she was going to be intimate with Tom tonight she knew she needed some help. \n\nJo and Tina went opposite ways searching the first floor and met again at the base of the stairs. \"Do you think they went upstairs?\" Tina asked. Before she got an answer from Jo the sexy black dress moved up the long stairway. \n\nOnly one bedroom door was closed so Jo slowly cracked it and saw two figures lying together on the bed. \"Tom?\" she asked as she walked into the room. \n\nMay was the first to turn towards them. \"Holy shit is that Jo?\" \n\nJo could see May's blouse completely unbuttoned and the girl's pink bra on display. From under the girl's body popped up Tom's head and face. \"Jo?\" He looked at the silhouette figure in the doorway but could not see her face in the dim room. But he did see the shape suddenly turn and walk back out. \n\n\"Was that Jo?\" he asked May who quickly turned and planted her lips back on his mouth. Tom went brain dead again as her soft warm body pressed down onto his own. \n\n\"Sorry Jo,\" Tina said as they walked back downstairs. \"Men are bastards.\" \n\n\"Yeah,\" Jo said as she walked directly to the punch bowl again and downed three more glasses of spiked punch. \n\nEllis was standing in the corner staring at the girls to decide which one would be his conquest that night when he felt a presence next to him. He turned to see Jo smiling at him. \"Don't hit me,\" he said jokingly. \n\n\"Hitting was not what I had in mind,\" Jo said giggling. The few drinks had quickly lowered her shyness around guys. \"Didn't you want to dance with me?\" \n\n\"Sure,\" he answered as he took her wonderful body into his arms and pulled her soft breasts to his chest. This would be his greatest conquest if he could fuck Jo Thompson. He would be famous in the gym shower room for years. His hands roamed slowly down her back expecting her to smash him in the face any minute. \n\nJo was messed up as they danced closer and closer together. She could see the other dancing couples touching each others asses and rubbing their legs between each other's thighs. Normally she would deck any boy who tried to do the same to her but Tom had fired up things inside of her she didn't know existed. She closed her eyes and pretended it was Tom's hands which were now cupping her round buttocks. \n\nHow many dances and drinks she had were lost in her drugged mind as she continued to melt her young virgin body to Ellis. She didn't stop him when his fingers snuck up between their bodies to caress her soft breast and to toy with the hard nipple. Nor did she mind when his lips found hers and his tongue danced with her own.\n\nTina tried to keep an eye on Jo and had lost her for a few minutes. She slowly walked around the dim lit room until she saw Ellis and Jo in the corner. She gasped when she saw the shoulder strap of her dress down her arm and her bra pushed down enough for her naked breast to be exposed and his lips on her nipple. \n\n\"Jo I need to talk to you,\" Tina said as she grabbed the drunken girl's arm and pulled. \n\n\"Hey leave us alone,\" Ellis said as he grabbed Tina's wrist and pulled her away from Jo. \n\n\"She's fucking drunk, Ellis. Leave her alone,\" Tina said forcefully. Ellis was at least a foot taller and a hundred pounds heavier. \n\n\"Tell her to go away,\" Ellis whispered to Jo who could barely open her eyes. \n\n\"Gggg.........ggoooo...\" she grunted before her eyes closed again. \n\n\"See, she wants you to leave,\" he said as he pushed her back four feet. \n\n\"I'll be back,\" Tina said totally pissed. She needed some help and looked for Billie. \n\n\"He's over there,\" Jan said to Tina. Tina looked and saw him passed out on the sofa. She moved back to tell Ellis to leave Jo alone again and saw them missing. Shit. As she moved up the stairs she saw Ellis's back going into one of the bedrooms. \n\nTom's pants were undone and his hard shaft was pointing upward as May's hot pussy was about to engulf it. She had told him she was on birth control and to forget about a condom so he did. His mind was also fuzzy from the punch but he knew he was about to become a man any second. Flashes of Jo kept coming back and he suddenly imagined it was Jo's body on top of his. As her hot and damp pussy folds pushed against his tip the door suddenly opened. \"Not again,\" he moaned as they stopped to see Tina standing there. \n\n\"Christ Tina leave us alone,\" May cried out just before Tina's hands pushed her off of his body. Tina stared down at the huge one-eyed monster sticking up at her. She suddenly snapped out of it. \n\n\"Tom you have to help Jo NOW!\" Tina said not waiting for an answer. She grabbed his arm and pulled him off the bed until he landed on his ass on the floor. \n\n\"Fuck,\" he groaned as he stuffed his hard-on into his pants and followed Tina out the door. \"I'll be right back,\" he said to a pissed off May. \n\n\"Jo is in there with Ellis. She is smashed and he is about to fuck her,\" Tina said with a panic look on her face. \n\n\"Damn, how do I get myself into these messes?\" he said before he pushed open the door and saw a startled Ellis on the bed with his pants and boxers down around his knees. Jo's lifeless body was lying under him with her eye's closed, legs spread wide apart and her blonde pussy opened for his invasion. \n\n\"Get the fuck off of her,\" Tom yelled as he grabbed Ellis's arm and jerked him off the bed. He flung him around until the boy crashed against the door. OUCH!\" Ellis cried out as he held his head. \"I'm going to kill you,\" Ellis said as he tried to stand. \n\nTom stood back as Ellis tried to ram him but the pants, which had fallen down around his ankles, tripped him and he fell face forward again striking his head. This time he stayed down. Tina jumped on his back and started pounding her small fists against his back. Tom laughed and pulled her off. \"I think he has had enough.\" \n\n\"Don't look,\" Tina said to Tom as she pulled Jo's sexy panties up the unconscious girl's legs and over her still virgin pussy. She pulled her dress down and turned to Tom. \"You have to help me get her to my house.\" \n\n\"But,\" he started to say realizing that May's pussy was waiting for him in the other room. \"Forget it,\" she said. His arms moved under Jo's body and he carried her while Tina led the way down the stairs. \n\n\"She better stay at my house because her parents will kill her if we take her home like this.\" Tom carried her to Tina's car and put her in the back seat. \n\n\"Come with me to help carry her inside,\" Tina said not asking if he wanted to or not. \n\nTom had given up on being with May and hoped he would have another chance. He kept peeking back at Jo's body in the black dress to make sure it was really her. God she looked good. \"Won't your parents say something?\" he asked Tina. \n\n\"They are gone for the weekend so the house is mine,\" Tina smiled as she thought of a way to get Jo and Tom together. \n\n\"Carry her up to my parent's room,\" Tina told Tom. She followed them and directed him to the right room. \"Lay her on the bed.\" \n\nTom did and stared. \"God she looks good.\" \n\n\"You know she is not gay right?\" Tina asked. \n\n\"I just found out today.\" \n\n\"You also know she likes you a lot.\" \n\n\"Someone else told me that today but I didn't believe her,\" he replied. \n\n\"Help me get her dress off,\" Tina said as she moved to the bed. \n\n\"I...I...I don't think I should do that,\" he said nervously. She might get pissed if she finds out. \n\n\"I won't tell her and I'm sure you won't,\" Tina laughed as she pulled she dress straps off of her shoulders. \n\nTom hesitated until Tina turned and gave him a look. \"Come on.\" He did. \n\n\"Lift her hips while I pull the dress off,\" Tina ordered. She smiled as he stared at Jo's filled lacy bra and matching panties. When she reached to release Jo's bra Tom said, \"You are taking off her bra too?\" \n\n\"She doesn't normally sleep in a bra,\" Tina grinned. The cups pulled off her pure creamy white orbs with light pink nipples. \n\n\"Tom...er.Tom...,\" Tina said laughing. He was mesmerized by her firm treasures. \"Pick up her hips again.\" He did and stared at her flat stomach as the golden panties moved down over the trimmed corn silk mane. \n\n\"I'll be back with something to wear for her,\" Tina said smiling. She would make sure she took a few minutes for him to really appreciate her naked body. \n\n\"You are so beautiful,\" he whispered. He sat moving his eyes up her muscular but tender thighs covered with tiny blonde hairs. One of her legs was open just enough for him to see the pink folds of her thin pussy lips and the small rise of her clitoris resting at the top. He knew this was wrong seeing her like this but he remembered that she had seen him completely naked in his room. And she had lied to him about being gay. \n\n\"I'm glad you are not gay,\" he whispered. His eyes now moved north up and over her firm breasts. He wanted to touch them so bad but knew Tina would kill him if she came back and saw him doing it. Finally his eyes moved up to her cute face now covered with makeup. He realized he liked her better without the paint. \n\n\"Well what do you think?\" Tina asked as she walked back into the room carrying a fresh pair of panties and a thin strap tee shirt. \n\n\"I still can't believe this is Jo,\" he said. \n\n\"I think you have brought Jo out of her shell. Help me,\" she said giving him the panties and shirt. \n\n\"You want me to dress her?\" \n\n\"Sure why not?\" Tina asked. She glanced down at the large bulge in his pants. \n\nAs Tina held up Jo's legs and hips Tom pushed the silky underwear slowly up her thighs until it covered her yellow forest. He savored the soft touch of her skin each time he accidentally touched her. Tina held Jo's body in a sitting position as he pulled the tight tee shirt down over her breasts. Again his fingers touched her softness. ",
        "While I call Jo's parents why don't you call yours to tell them you are sleeping over at Billie's house?\n\n\"I'm not planning on sleeping over at Billie's house,\" he laughed. \n\n\"I know,\" she laughed back at him. \"You are sleeping over here.\" She turned and left the room. \n\n\"But...\" he started to say before he realized she was gone. He picked up his cell phone and called his Grandmother's house. \n\nHe waited a few minutes and then saw Tina walk back into the bedroom wearing the same type things Jo had on. Panties and a tight thin strapped tee shirt. \"Don't get any ideas,\" she laughed when she saw his eyes on her skimpy panties. \n\n\"Do you have any pajamas for me?\" he asked with a smile. \n\n\"Nope I guess you will just have to wear your boxers.\" Tina pulled the covers down the king size bed under Jo's body and then up to cover her. \"Are you getting under?\" Tina giggled as she slid under the covers on the other side of Jo. \n\n\"She's going to be pissed in the morning,\" he said while removing his pants and shirt. He picked up the covers and held them high enough to see both girl's near naked bodies and he was not going to be able to do anything to them. Life sucked. \n\n\"Tell me all you know about Jo,\" Tom said to Tina in the dark room. \n\n\"When Jo was born her father wanted to have a boy. When Karen came out first he was disappointed and when they discovered there was another baby he again waited for a boy but discovered Jo was another girl.\" \n\n\"So Jo became his boy and Karen the girl,\" he said. \n\n\"Yes, Jo not only became the boy she was as good if not better in sports than most if not all the boys in the neighborhood. If she was taller she could play on the boy's team.\" \n\n\"Do you think she will get a scholarship?\" he asked. \n\nTina laughed. \"You don't know do you? Shit Jo has been offered a ship by UCONN, Notre Dame and Tennessee and that was as a junior.\" \n\n\"She didn't tell me,\" he said as his arm brushed against Jo's. \"Does she have the grades?\" \n\nAgain Tina laughed. \"She's been accepted at Princeton and Yale.\" \n\n\"Is there anything she is not good at?\" he laughed. \n\n\"Yes.......boys. She has tried her whole life to be a boy and suddenly she now wants to be a girl. I think tonight was the first coming out as a girl for her.\" \n\n\"I wish she would have gotten to the party a little earlier,\" he said. \n\n\"I'm sure she felt the same way when she saw you and May. May is the slut of the team by-the-way.\" \n\n\"I seem to have a magnet for those types of girls.\" \n\n\"OHHH!\" Jo moaned as she turned her body to the side until her arm hooked over Tom's chest and her breast pushed into his arm. \n\n\"I think I should sleep somewhere else,\" he said feeling his prick expanding again. \n\nTina laughed. \"Just keep it cool. Try to get some sleep because I think you might need it.\" \n\nTom closed his eyes and tried to forget the soft breast pushing into his body. He knew it was wrong but he couldn't help it as he slowly moved his hand up to the soft cushion until he touched her nipple. He smiled as he played with it until it was rock hard. \n\n*****\n\nJo thought she was dreaming about Tom again. It was the same dream she had for the past few days. She was lying in bed next to him as they touched and kissed. Her leg and arm was wrapped over his and his fingers touched her body. \"Oh Tom,\" she moaned as her fingers found his grand salami and she stroked it. \n\nTina heard the moan and peeked over at Jo's body which was now wrapped over Tom's. Her fingers had found his long shaft and she was jerking him off. She had hoped her plan to get them in the same bed would work out and now it was. She was the best cupid in town. \n\nTom didn't know if she was awake or asleep as she rubbed up and down his shaft. Right then he didn't care as he moved his fingers over her stomach and down under her panties. He found her small hard clit and rubbed it at the same motion her fingers were touching his shaft. \"Now Tom now!\" she cried as she came. \n\nTina tried to go back asleep but couldn't because of what was going on next to her. She wished it was her hand jerking him off but it wasn't. She smiled as her fingers moved down over her quivering stomach and into her own panties. She found the little man in the boat and petted his head over and over again. \n\nTom woke up first and tried to remember if he had dreamed about them touching each other or if it was real. His head lay on the pillow just watching Jo's chest rising and falling as she slept. \n\nJo felt sick to her stomach as she opened her eyes. Through the haze was someone's face and eyes looking at her. She closed her eyes tightly and again opened them. \"TOM! What are you doing in my bed?\" she asked as she pulled the covers up to her chin. She quickly picked them up and peeked under to see if she was naked or not. She saw the tee shirt and panties. \"DID WE....?\"\n\nTom laughed. \"No we didn't.\" \n\n\"Why are we in.........\" she realized she didn't know where she was or whose bed they were in. \"Where are we?\" \n\n\"You're in my parent's bed,\" Tina said smiling next to her. \n\n\"Oh God, I feel sick,\" Jo said as she pulled back the covers and jumped off the foot of the bed. She made it to the bathroom just in time. \n\n\"Are you OK?\" Tina asked as she kneeled down next to Jo by the toilet. \n\n\"No, I'm not fucking OK. I hope someone tells me why I wake up in bed with Tom on one side and you on the other.\" Suddenly she threw up again. \n\n\"Do you remember anything from last night?\" Tina asked. \n\n\"Last night. I remember wearing a dress and dancing with somebody and........\" She spit out some chunky juices and continued. \"Nope that's it. What is Tom doing here?\" \n\n\"He carried you to my house because you passed out at Billie's.\" Tina said. \n\nJo slowly stood up, washed her face in the sink, and looked at herself in the mirror. \"God I look like shit. I feel like shit too.\" \n\n\"Why don't you take a shower and then you will feel better?\" Tina asked. \n\n\"Good idea,\" Jo said. \"Tell Tom not to go. I need to tell him something.\" \n\n\"That you love him?\" Tina giggled. \n\n\"Maybe,\" Jo giggled back. \"Just don't let him leave.\" \n\nShe watched Tina close the door and turned on and adjusted the water. She quickly undressed and moved under the warm water. She smiled as she thought of Tom waiting for her in the large bed. Maybe this would be her chance to tell him how much she cared about him. Her soapy fingers moved over her hot stomach. \n\nAs she placed her face upward into the warm spray she heard the door open and then the shower door. \"Tina leave me alone right now,\" she said. \n\n\"I'm not Tina,\" Tom's voice said behind her. \"Do you care if I join you?\" \n\nJo froze in excitement. He was in the shower with her and probably naked. \"Sorry about getting sick,\" she said as she was a lost for words. \n\n\"I wasn't feeling too well myself,\" he whispered as he took the soap from her hand and lathered up his fingers. \"Care if I wash your back?\" \n\n\"No,\" she giggled. Her body was on fire as his fingertips gently moved over her tender shoulders and down under her shoulder blades. \n\n\"You looked beautiful in the dress last night,\" he whispered. The soapy hands moved up under her armpit and gently over her naked breasts. His hard shaft pushed up against her bare ass. \n\nFor the first time Jo felt like a female. \"Tom I have to tell you something...\" she said as she turned and faced him. She saw his smile and his eyes looking down at her naked front. \n\n\"I....ah...,\" she saw his mouth coming towards hers and tried to tell him she loved him but he was too fast. \"I...Lo..\" His kiss was a hot flame as their body's again pressed together. Their hands and fingers raced to explore areas never before touched by anyone but themselves. He pulled his lips from hers. \"Tom I...\" he smiled and put his finger on her lips. \"I know....me too.\" \n\nHis fingers pulled her round ass towards his body until his shaft rested against her pubic mound. She opened her legs and guided his hard prick under her until she was almost sitting on it. It was now pressed hard against the length of her virgin slit. \n\n\"I've never...\" she whispered in his ear as she nibbled on it. \n\n\"Me neither...\" he whispered back. \n\n\"Do you wanta?\" she asked now gasping to breath. \n\n\"Do you?\" he panted as he pushed his prick into and out of her tight thighs. \n\n\"Here?\" she asked as she felt the two of them slipping on the shower floor. \n\n\"No the bed...\" he laughed as he pulled back and led her out of the shower and into the bedroom. They stood naked hand in hand looking at Tina who was reading a book on the bed. She glanced up and saw them standing dripping wet naked. \n\n\"I guess I should leave now huh?\" she giggled as she stood and walked by him. She glanced down at his long shaft. \"Jo you are a lucky girl.\" \n\n\"Call me Josephine,\" she giggled as she jumped on her back on the bed. \n\nTom walked over and looked down at her body. Finally he was going to get laid and it would be someone he really cared for. \"What about protection?\" he asked realizing he had not brought a condom. \n\n\"I just had my period,\" she giggled. \"Can I get on top?\" \n\n\"You want to be the boy again?\" he laughed as he moved onto his back. \n\n\"No, I want to do it at my speed,\" she whispered as her legs opened and her hot dripping pussy pushed down on his shaft. \"Plus I'm better One on One than the zone.\" \n\nJo grabbed a strong hold onto his shaft and rubbed it up and down her slit. She knew she had to take her time for it to fit because it was so big. Her fingers explored his length and cupped his sac of jewels. This was something she wanted to remember for a long time. Again she pressed down and felt her hymen give. \"Just a little bit more\" she thought. It was the first time she wished he was a little smaller. \n\n\"Are you OK?\" Tom asked when he heard her moan deeply within. \n\n\"Yes,\" she giggled. She had always been a finisher and she was going to finish this. Suddenly it gave way and the tip of his shaft slid into her. \"You're in,\" she giggled again even though it gave her some pain. She took a deep breath and lowered her hips another two inches. \n\n\"God you are so big,\" she moaned. His hips pushed up slightly until he pushed in another inch. \"Wait,\" she groaned. \"Let me do it.\" \n\nThe hot tunnel and the fact that his prick was finally in a girl's body was too much for Tom. He tried to hold back but the pleasure was too much. \"Jo...oh God...I can't stop....IT!\" He screamed as he shot his hot load deeply up into her. \"OH SHIT!\" he cried out as his body trembled and exploded. \n\nJo smiled and watched a guy climax. He looked so cute with his face all crunched up. She knew there was no chance for her to catch up to him so she slowly moved her pussy up and down the four or five inches he was inside of her. His hot juices were making it easier and easier for her. \"Touch me,\" she moaned as she got closer and closer and felt him getting soft. \n\nTom knew where she meant and quickly found her hard clit. \"Yes right there,\" she screamed. Although he was soft he was hard enough for her to keep fucking him. \"Tom...OH GOD TOM...\" she cried as she climaxed. \n\n\"I never knew it would be so good,\" Jo whispered in his ear as her spent body lay on his. His prick was still inside of her. \"I'm sorry about lying to you about being gay,\" she said seriously. \n\n\"That's OK, because I'm glad it is not true,\" he laughed. Her hot pussy was stirring up some life in his shaft again. \n\nJo felt the expansion in her love canal and moved her head up to look into his eyes. \"Why Tom I didn't know you cared.\" \n\nTom felt her pussy open wider and his shaft push in deeper than before. \"Oh I care Jo, I care a lot,\" he moaned. \n\nJo's athleticism took over as she learned to pump her pussy up and down his shaft to give him the maximum pleasure. \"Do you care about me more than my sister?\" His shaft was sunk at least seven inches now. \n\n\"Yes,\" he groaned as her inner muscles milked his prick. \n\n\"Or Tracy?\" \n\n\"Oh God yes,\" he grunted. He moved his lips up to capture her pink nip. \n\n\"Or May?\" \n\n\"HELL YES! I LOVE YOU!\" he screamed. \n\nTina smiled as she ate her Captain Crunch. \"He loves you girl and it's all because of good ol' Tina,\" she said as she read the back of the box. With ten proofs of purchase labels she could get a Frisbee. \n\nEnd of Chapter Two. \n\nI've been working on some other stories but the emails have begged me to do another Tomboy. I sped it up at the end because poor Tom was about to go nuts. Now the kids start school and basketball games so I'm sure there will be a lot more fireworks. Send me your emails and don't forget to vote. Sorry I didn't say the first chapter was to be continued. "
    ],
    "authorname": "Slickman",
    "tags": [
        "karen tracy",
        "bell asked",
        "tracy tom",
        "back clarkton",
        "smiling karen",
        "tom waited",
        "tina held",
        "opened tom",
        "skirt karen",
        "leave tom"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tomboy-ch-02"
}