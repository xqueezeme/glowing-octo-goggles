{
    "title": "An Angel's Fix Pt. 09",
    "pages": [
        "* * *\n\nThe trip overseas failed to progress beyond talk and dreams. The drummer for Tales of The Blind developed bronchitis, causing the cancellation of the summer tour. Other conflicts nixed taking the trip as a vacation. Joe was called away to Denver to help button up Carter's encryption technology, and Ashley went with him. She still insisted she wouldn't fly in anything with a propeller, as those aircraft tended to be cramped and reacted more harshly to turbulence. She hated 'puddle jumpers' to begin with, and memories of her bad experience only reinforced her refusal to board one ever again. Carter sent the corporate jet for Joe, and Ashley didn't give accepting the flight a second thought.\n\nThe rest of their summer now open, Jill and Jasmine decided to knock out a couple more courses. The law required them to take a certain number during summers before they graduate, anyway. Taking a full summer load this year, they could coast the next two years with only 2 more summer courses remaining.\n\nKim had been talking to Jon from time to time throughout the year, and had been looking forward to spending a little time with him in person. Of everyone in the house, she was disappointed the most when the tour was canceled. Jasmine and Jill found it odd that Kim was grinning when they saw Joe and Ashley off. They were befuddled when Kim said bye to them after the corporate jet took to the air.\n\n\"Where are you going?\" Jasmine asked when Kim grabbed a bag she stowed in the back of Jill's SUV.\n\n\"Tennessee to see Jon,\" Kim said with a grin. She turned to hike across the landscaped medians that separated general aviation from the main terminal.\n\nJill stopped her by grasping her arm. \"Does Ashley know?\"\n\n\"Why should she? I'm just her agent, and we're on vacation, now.\" Her eyes fell. \"Apparently we have been since spring,\" she added in a mutter.\n\nJasmine stepped around to block Kim's path. \"You know you're more to her than just her employee! What's going on that you feel like it has to be secret?\"\n\nKim read the concern in Jasmine's eyes and felt bad. It was the precise reason she didn't tell Ashley about this little venture. If Jasmine and Jill were concerned, Ashley would have been forbidding, at least until her personal reasons were forced into the public. \"It's embarrassing,\" she said simply.\n\nJasmine wasn't one to let things be, nor did she have the best leash to control her mouth. \"What did you do? Fart while screwing someone? That's no reason to leave the area unannounced! It's happened to me, and you just giggle with him or her and keep on going!\"\n\nJill crinkled her eyebrows, looking at Jasmine like she was insane.\n\nKim had an identical expression. \"What?! No! No, I haven't had sex in months.\"\n\nIt dawned on Jill what this was about. \"I get it now. Have fun, Kim.\"\n\n\"Get what?\"\n\n\"Jazz, if you felt there might be a chance you could get it on with a hot rock star, wouldn't you go?\"\n\n\"Jill, I'm not like that anymore!\" Jasmine saw Jill's eyes flick toward Kim. \"Oh.\" Then she gasped when it hit her, too. \"Ohh! You think you have a shot to tangle in Jon's sheets, and telling us or Ashley might jinx it!\"\n\nKim crossed her arms, frowning at them. \"Very good Jasmine. Thank you for telling me that I'm horny. As if I didn't already know!\" She pulled out her phone and glanced at the screen. \"I gotta check in. See y'all in a week. Love yas!\"\n\nAshley sensed a change the moment she returned after the trip with Joe. \"What's been going on?\" She eyed Kim's more upright posture and sparkle in her eyes with suspicion.\n\n\"Kim snuck out and had week-long sex with Jon in Nashville,\" Jasmine piped up, grinning with satisfaction of spilling gossip.\n\nThey were wheeling the luggage from the plane to Jill's SUV, and Ashley considered the consequences of the blunt statement. Kim cringed from the expected backlash while shooting fireballs with her eyes at Jasmine.\n\n\"Oh. You could have told me you were going to see him, Kim. But, good for you. Jazz, you shouldn't tattle on your friends.\"\n\nJoe had the benefit of spending the last two weeks with the new, calm Ashley. The girls did not and their mouths hung open at her unexpectedly sane response.\n\nThey shared with each other the events of the past two weeks over dinner. The only one not to have spoken was Kim, and she fidgeted when expectant eyes turned to her.\n\n\"So how was Jon?\" Jasmine tone teased Kim, but she really was curious, as Kim was tight-lipped since they picked her up from the airport a few days ago.\n\n\"Jasmine!\" Ashley barked. \"Be nice to her. What's got into you?\"\n\nKim replied before Jasmine could. \"She's jealous.\"\n\nThe statement touched a nerve, and Jasmine's eyes watered before she jumped out of her seat and dashed upstairs.\n\nAshley sighed and looked at Kim. \"Okay, what's really going on?\"\n\nKim took a deep breath and released it in a long sigh towards the table. \"I didn't go to Nashville to see Jon.\" Looks of serious doubt shot her way from everyone, including Cindy. \"Okay, I did go to see him, but it wasn't all just one long string of orgasms like you think. I've been talking to him for a while now, and I mentioned that I thought it was weird that Matt seemed to be shutting us out. Jon had said that the grapevine was buzzing about something happening there at Fell Off the Truck. When you played with Trail Springs that time, their whole band seemed down, except for when they saw you again.\"\n\nAshley looked torn, as this conversation seemed doomed to longevity and deserved her attention, but she also wanted to make sure Jasmine was okay. Joe caught it and got up, putting his arms around her chest from behind. \"I'll see what's up with her,\" he said with a kiss to the top of her head.\n\n\"Thanks, babe!\" she smiled after him. Then she looked at Kim. \"So things seem weird, you were saying?\"\n\nKim nodded. \"Right. Things aren't adding up. Matt hasn't put down any plans for you in the near future, your assigned band won't call you back, and no one seems happy.\"\n\n\"Well, probably because Matt watched me shove Slick-back.\"\n\n\"I thought that too, but it doesn't explain him assigning that creep to keep Trail Springs on a tight leash. Jon said nothing that's happening is normal. That's why he invited you to tour with them.\"\n\nJill spoke up. \"I don't understand. Wouldn't playing with someone at a different label be a conflict of interest? Contractually, speaking.\"\n\n\"Yeah.\" Kim's voice was very small.\n\nAshley's eyes narrowed. \"What did you do?\"\n\n\"I didn't like this whole arrangement,\" Kim said while shrinking in her seat. \"It felt all wrong. That album, while it's good...I just know you weren't happy with it.\"\n\n\"I wasn't.\" Ashley glared at Kim, but her voice was calm. \"What did you do?\"\n\n\"I sort of convinced Jon to buy out your contract.\"\n\nCindy joined Ashley in disbelief. \"What?!\"\n\n\"Ashley, this is the right move, trust me. Please?\"\n\nAshley took a deep breath and blew it out. \"So, you left in secret to work out the details so that I wouldn't try to stop you.\"\n\n\"Yeah, something like that.\"\n\nCindy stood in a rage. \"So, you...you...SLEPT with him to seal the deal?! Wait, no, that's not what I'm mad about. UGH! KIM! You can't just sell out your boss because you have a bad feeling!\"\n\nKim's shoulders slumped. \"I know that's what it looks like. That I slept with him in some kind of deal. But it's not. I care for him, and I wanted him for him. The sex was not part of the deal.\"\n\nCindy glared at her. \"That's besides the point! If you think your boss's well-being is in trouble, you have to talk to her! Don't just change her livelihood on your own accord!\"\n\nAshley held up her hand. \"Kim, I hired you to look out for me and keep me on track. I trust your instincts. But, yeah, let me have some input the next time you make such a big deal.\"\n\nCindy and Doug were shocked that Ashley seemed so submissive, and expressed as much.\n\nBut, Ashley was inwardly relieved this had happened. \"Cindy,\" she said calmly. \"Banks buy and sell mortgages all the time and without permission needed of the homeowner. Yes, Kim went a little crazy, but she's right. I was unhappy there, and I did want to leave.\" She paused a moment to consider things. \"So what now? Do I have to give up school to sing for or with him?\"\n\nKim shook her head. \"He likes you, and he knows your talent. You are now an independent contractor working for him. Er, at least you will be when you sign the papers he's sending over in the morning. The arrangement is that all your work for the period of your original contract belongs to him. He will pay you generous percentages, and there is no minimum for you to do. In fact, you could do nothing during that time and there'd be no penalty. Of course, that would also mean no pay. He wants you to have the freedom to get your degree without stressing you out. He wants you to choose your own band, to have your own choice of music that you perform. In fact, in buying out your contract, all the stuff you've done so far is his, so you'll still get your royalty checks. They'll just be from his account.\"\n\nJoe stepped into the bedroom and found Jasmine curled up in a ball. He sat at her feet. \"Did I fly through a portal into another dimension or something? What is going on? Why are you picking fights with Kim again?\"\n\n\"I'm frustrated, Joe!\" Her voice was muffled against her arm. \"We've been trying this thing for months, and it's not working!\"\n\nHe stroked her calf. He and Jasmine shared many secrets through the years, some still current, and they had become even closer since Ashley still allowed and even encouraged their periodic date nights. Flirting with her was fun, and they occasionally let it evolve to some pretty heavy petting. They always stopped themselves short of making love, but some sessions resulted in climaxes, a few of which Ashley enjoyed watching. It was a deep, deep friendship, and Joe was disheartened to see Jasmine this upset. More than that, she seemed to be in pain.\n\n\"Jazz, dear, we knew going in that this would be a long-shot. There's a long way to go before we've reached the last of possibilities.\"\n\n\"I know that!\" she shot back. Jasmine regretted being that harsh, but she couldn't help it. \"But, I... part of me hoped that I could go in, get it on the first or second attempt, and be the hero. It's just not happening, Joe. I'm failing and I hate that.\"\n\n\"You're not failing. For all we know, I might be the one lousing this up. But why are you mad at Kim? Were you hoping to snag Jon yourself?\"\n\nJasmine sat up, her pretty face wet with tears. She wiped her cheeks against her arms and rested a glare at Joe. \"Jealous, humph. I'm not jealous of Kim or for Jon. It's just that everyone has a boyfriend or husband, and I ...can't.\"\n\nThe statement rang home to Joe. She said 'can't'. It was clear she didn't mean 'can't find a guy' or 'can't find the time.' It was an assertion that she had forbidden herself from getting attached to someone. \"Please don't feel like that. You can...\" He wasn't sure how to finish that statement.\n\n\"No, Joe! You'd have to pry me from you and Ashley with a crowbar. I love you guys too much.\" Her eyes fell. \"But, I also miss being able to have someone to myself. I'm over playing around with bad boys. You and Ash broke me of that, and now I love messing around with either or both of you. There's just something to be said about the thrill of getting to know someone and have it work out so that they become yours. I know I'm not making sense. I'll figure it out, but I just need everyone to be patient with me.\"\n\n\"Did you want to stop?\"\n\nShe knew what he meant, and sighed. \"What? And rid Ashley of a chance? No way. I'll keep trying with you.\"\n\n* * *\n\nThings settled out for them after a while. They went back to school. In addition, Ashley resumed her informal playing in the rundown amphitheater, Jasmine gained proficiency in her video hobby while continuing her work as album designer, Jill picked up an internship at the state capital complex on top of cheering, and Kim took a more proactive role with the teens Cindy assisted. Joe played football. He didn't start for the team, but being a third-string quarterback had it's perks, at least in his eyes. He got to play -- a LOT -- for the scout team. His main task, and one he did exceptionally well, was to watch footage of upcoming opponents and mimic the quarterback's style of play. His aptitude was great enough that the coach often credited the defense's successes to the scout team, and even mentioned Joe by name once. Joe had the gameday duty of holding up a towel to block views of coach hand signals from TV cameras, and perform a field head count on every play.\n\nHe was impressed that Ashley flew to see his away games, usually with Jasmine, but sometimes on her own. She didn't mind flying anymore, but ensured it was always jet service. Perceived threats to her family had quieted down, and Sam was now the only security member assigned to them full-time. He always booked a seat a couple of rows back from them. She'd catch Jasmine glancing his way on the flights, and volunteered to swap with him for at least part of the trip so the two could catch up with each other personally.\n\nThen it happened, the game that put Joe's name on the lips of many sports analysts and therefore the map of college football. They were away at Clemson in a vital match-up near the end of the season. Both being in the same division, having just one loss in conference play, the winner would play in the conference title game two weeks away. The contest was hotly debated with almost no scoring. The Tigers made a last push, getting close enough for their kicker to bounce an improbably long try over the crossbar. It left only seconds on the clock.\n\nThe last few games had taken a toll on the usually deep corps of FSU receivers. Three were already on injured reserve before the game, another went out with a concussion early in this half, and one more was lost to a twisted knee on the previous series. The thin hope of running back the kickoff for a touchdown evaporated as the ball sailed over the back of the endzone. During the TV time-out, the coach huddled the team to run down the prayer of a play. An assistant coach called Joe's name and nodded toward the huddle. Joe grabbed his helmet from the bench and glanced at the scoreboard on his way to the huddle. 3 -- 0, and only 5 ticks remaining.\n\nThe huddles broke and the home crowd came to life one more time, putting teeth into the stadium nicknamed \"Death Valley\" for the frightening loud atmosphere. Ashley and Jasmine stood quiet in the middle of the friendly visitors section. Their disappointment and almost dread of an early season end contrasted against the electric home cheers that were willing their team to hold one more time. Jasmine nudged Ashley.\n\n\"Hey, doesn't Joe wear number 6?\" She had to cup her hands around Ashley's ear to be heard. Then she pointed at the field.\n\nAshley looked and was surprised that his jersey was indeed one of the players lining up. \"But what is he doing in the slot?\"\n\nJasmine shrugged. \"He does have good hands.\" The two would normally snicker and squirm at the unintended double meaning, but not tonight.\n\nJoe stepped up to the 25 yard line and checked in as a receiver with a point to the referee. He set himself and turned to face the ball on the scrimmage line. The ball snapped, and the play was a disaster before it even began. The crowd roared as the ball went sailing over his quarterback's head. Joe sprinted back to recover the ball. He was the first player to reach the ball, but didn't catch up with it until near his own goal line. Defensive linemen were on his heels, so he allowed his momentum to carry him into the endzone before he circled back in the right direction. He waved down field, trying to get the other two receivers and tight end moving. He pulled up at his 22 and ducked, feeling the pressure from behind him. A linebacker went sailing over him. The receivers were covered, and he scrambled, trying to keep from getting tackled. Joe somehow stepped out of a sure leg tackle, thinking about running it himself. The landscape before him wasn't favorable, as the safety and cornerbacks had recovered from the initial confusion. He caught the eye of the teammate that had lined up next to him and pointed towards the far corner of the field. Joe had to backtrack to keep from getting hit, then spun out of another near-tackle, set his feet and launched the ball.\n\nAshley and Jasmine were holding onto each other by now, frazzled by the stress of seeing Joe under so much duress. It seemed that the ball was hefted in desperation, it's velocity and altitude making it unlikely someone would be around to catch it. But unlike Jasmine and most of the crowd, who stared at the tight spiral streaking across the sky, Ashley had kept track of what was happening on the field. She clutched at Jasmine.\n\n\"OhmyGod, ohmygod, ohmygod,\" she fired off rapidly, watching the player in white and gold sprint for all he was worth two strides ahead of the one clad in all orange. \"Oh my God!\" she yelled when the receiver held out his hands. \"Don't drop it!\"\n\nScreams of despair shrieked from around the stadium while Ashley and Jasmine joined their neighbors in a mighty cheer when the ball settled neatly into the receiver's arms deep in the endzone. Joe glanced around at the field and, unbelievably in all the confusion and desperation of the busted play, there were no penalty flags. His team stormed in from the sideline and soon he was buried under a mountain of happy bodies.\n\nThey stayed in Tallahassee for Thanksgiving, as the Noles were playing their rival game at home against Florida that Saturday. Ashley texted the team an invitation to have dinner with them. Kim had done a good deal of research and loaded the numbers into Ashley's phone, even the coaches. The broadcast message stated that while everyone was welcome, only the first 20 through the door would receive plates. They had a double oven, so two turkeys could be prepared, but making enough sides, salads, and dessert for 20 was about the limit of their abilities and counter space. 14 players showed, three of them brought their girlfriends, and one brought his wife. Ashley and Joe were almost relieved to meet another married couple as young as themselves. It was a happy gathering and the players agreed with each other that if Joe had a restaurant, he could make a killing. Not that he needed to, as demonstrated by the amazing penthouse.\n\nJoe started in the slot receiver position for the remainder of the games. The coach needed someone to step up and fill in the injury-riddled spot. He and the receivers' coach watched Joe work through drills during the week, and found him to be a more than capable possession receiver. Joe just didn't drop balls. The decision was a good one, as Joe averaged 130 yards a game, and was key during big third-down plays. Doing whatever he was asked to help wherever he was needed, he became known as \"Workin' Joe\" to the team, and after winning their bowl game, an assistant coach even presented him a power company hard hat. He said with a wink that Joe was the best UTILITY player he's worked with. The team groaned in good nature at the pun.\n\nTheir quarterback announced he would leave for the draft that spring, and fierce competition for the vacated starting spot began during the spring drills. Joe put his hat into the ring, unable to shake his natural gravitation toward leadership. Scouting reporters had already put him as the favorite to take the helm. They based their prediction on his high school record, along with the brilliant scramble and 80 yard strike he threw in his first game, despite the broken play that was supposed to be a Hail Mary pass, with Joe running a decoy route. But in the world of young elite athletes, nothing was a given.",
        "Ashley took advantage of the pressure relief Jon provided to her. He had come down to see Kim, and to welcome Ashley personally to his endeavor. Aside from occasional chats to see how she was doing in school, or productions she was invited to join, he was refreshingly hands-off with her. She concentrated on school, learning all she could about her craft. When Jon asked if she wanted to sing with them during spring break, she readily agreed before he could give her details. Ashley was eager to assert her willingness because he asked, and not ordered as Matt had last year. Giddy that she had a job she actually wanted to play, Ashley gave her thanks, said a goodbye, and hung up before Jon said anything more. Her phone rang again a few moments later.\n\n\"Ashley, what are you doing?\" Kim asked when Ashley answered.\n\n\"Hey Kim! I just said yes to singing with Tales of the Blind!\" Ashley exclaimed while doing excited hops. \"But I think you knew that.\"\n\nKim shook her head. \"I do. But what's important is what do you know about your gig?\"\n\n\"I'm playing with a hot band and it's this spring break.\" She sat on the couch and fretted, not able to figure out the life lesson Kim was obviously trying to teach from the other end of the line. \"What else do I need?\"\n\n\"For one, you need to not hang up on the guy who's giving you the information,\" Kim said pointedly.\n\n\"Sorry, I was excited!\"\n\n\"I know, and Jon said he'd rather be cut off in happiness than anger. Anyway, they're doing a tour to make up for last summer.\"\n\nAshley rolled her eyes. \"Uh huh. I pretty much figured that out.\"\n\n\"Oh, so you do know it's in Europe.\"\n\n\"Europe?!\"\n\nJill and Jasmine were snacking in the kitchen and looked like two dogs who suddenly heard a bell in the next room. If they were wearing tags, Ashley would've heard them jingle as their heads snapped toward her in attention when she repeated the destination. \"Europe?\" Jill murmured as a smile expanded from her lips.\n\n\"Yeah,\" Kim affirmed. \"They're blitzing through half of what they planned before Larry got sick. Five nights, five shows, five cities. Can you handle that?\"\n\n\"You bet!\" Ashley affirmed.\n\nThe Tales chartered a jet for the trip, taking themselves and loved ones on the plane. The roadies, stage, lighting, and sound crews flew commercial. Ashley was encouraged to bring whom she wanted, so her parents, Joe, Jasmine, Jill, Kim, Cindy, and Doug were all able to come. Ken did not have a passport, and did not show desire to come anyway, which seemed odd to Ashley. \n\nThe first stop was London and it was readily apparent how grueling the trip would be. There was time for a late lunch, but immediately after was sound check, then the retreat into dressing rooms to get ready for the concert. Ashley appeared in the hallway just before showtime and was surprised when Jon gathered the band around for a ritual of meditation they used to sharpen their focus. They took their places on stage without her amid shrill screams and whistles that merged to a unified yell as the first chords were struck. The band performed a couple of songs before pausing so Jon could thank their host country and apologize for the cancellation before. Then he introduced Ashley as a protege he was taking under his wing.\n\nShe took the stage as the band played the intro to \"Ashley's Song,\" smiling at the polite applause. She followed Jon's advice and let herself sing and dance without thinking about what to do. The song's conclusion was met with warm cheers, and the band continued into \"Windowless Pains,\" the hard-hitting piece with an alternative rock edge from her album last year. A few in the crowd recognized the song and whistled appreciatively during the introduction. The band stayed \"home\" and Ashley found it easier to get into the song without the worries of crashing into one of them on the fore-stage. In a finale, she fell to her knees and flopped her head forward on the last note, allowing her red mane to hide her face from the crowd. There was a breath of time that she worried about getting a non-response from the crowd. Then, Ashley's heart did a flip when the crowd's appreciation neared what they had been giving the Tales' first two songs.\n\nThe show continued with her on stage, sometimes giving acoustical guitar backup, others singing with Jon in duets. The band exited to rowdy cheers and Ashley beamed at the praises of \"killing it.\"\n\n\"One thing, though,\" Jon said while hugging her from the side. He looked down past her white silk blouse and designer jeans that her parents bought for her costume. \"Where are your shoes?!\"\n\nAshley glanced down at her bare feet. \"Oh,\" she giggled. \"I tripped and hurt my ankle the last time I did a concert. I'll never do that again.\"\n\nHe shook his head. \"Whatever floats it, I guess. Just know that the stage is clean, but I can't say the same about the floor or halls backstage.\"\n\nShe shrugged out of the hug and went to the stage steps, stepping into some flats she had tucked under there. \"Got it covered, Jon.\"\n\nHis assistant came over and gave a quick \"good job\" to the band and to Ashley. Then he urged them to hurry so they could make it to Berlin before reaching too far into the morning. Ashley was tired and slept against Joe's shoulder on the plane. Jon was keyed up from performing, so Kim kept him company. She wondered how their stage could possibly be ready in Germany by tonight. Jon explained that the tour was taxing on the performers, but the crews behind the scenes had far more work. They realized it would be impossible to set, breakdown, move and set a whole stage in under 24 hours. So the crew divided in half, and a second stage and the lighting and sound equipment for the tour were rented. While the first performance took place, the second crew was setting up the other stage. In this manner, the crew would leapfrog each other to the finish. The main expense in doing things this way was leasing the two 'lorries', or semi-trucks to haul the equipment. Kim asked if it would be more efficient to just rent the equipment from each host site. The answer was yes, but they would have no idea of the equipment condition until they reached each one. \n\n\"We wouldn't want your pretty boss to fall through the floor, would we?\" he asked to make his point.\n\n\"Hmph, is that why you're having us along? So you can stare at Ashley?\"\n\nHe smiled at her. \"No, she's the perfect addition. High energy, a heart for entertaining, and a voice that locks everyone's attention. As for looking...unless they're blind, who wouldn't look at her? Red hair, white top, blue jeans. She's the personification of the American flag! Of course people are going to look.\" Jon could tell that Kim understood, but was waiting for him to grab her bait. \"But, I did bring you so I could stare into those beautiful eyes whenever I'm not on stage.\"\n\nKim's body relaxed and her eyes softened in contentment. \"Good,\" she said with a smile, happy with Jon's flattery. She hooked her arm around his and leaned her head against his shoulder. Their relationship status was still new, and Kim figured an icon like Jon was practiced at making girls feel special. The comment seemed sincere, and regardless, Kim thought, I'm sitting here now, not some ditzy tramp. That had to account for something.\n\nTwo hired vans were waiting for them upon landing, and once all the luggage and instruments were loaded, the driver of Ashley's van said in his thick accent, \"Good morning! Welcome to Germany.\".\n\n\"Guten Morgen,\" Ashley replied without thinking. \"Wie geht es Ihnen?\"\n\nThe driver looked pleasantly surprised. \"Very well, thank you,\" he replied in his native language.\n\nThe two conversed on the way to the hotel, none of which the rest in the van understood. She was questioned by her dad at the hotel about how she could speak another language so well. Ashley shrugged and said that she took introductory courses required for her voice classes this year. Jill chimed in that she had figured that Ashley picked up common phrases, but didn't realize she was fluent. Ashley's only theory was that the sorority's help with software and tutors must have helped. Joe, himself surprised at her proficiency, kept quiet about the theory a doctor had related to him about her sudden aptitude after the plane crash. The group headed to their rooms to sleep, and alarm clocks set to get ready sounded all too soon.\n\nThat night's concert was performed in much the same way as the previous night, with the exception of one detail. Jon learned through Kim of Ashley's ability, and he asked if she could translate for the crowd. She agreed, and while it wasn't necessary as much of the crowd spoke English, the gesture was a big hit.\n\nThere was another mad dash to get to Spain, and directly after the show, they raced to Paris. They had finally caught up to the ribbon of time, and were afforded a few hours to see something of the city. Ashley decided on the most obvious attraction, the one that is embroidered, stamped, painted, or photographed on nearly every piece of tourist trinket related to Paris, France. The Eiffel Tower. Jasmine, majoring in architecture, had another idea and whined in asking Ashley why the clich\u00e9 tourist spot. Ashley's response was they could fill the time in one spot without rushing around, as well as be able to see all of the Paris attractions, technically. Jasmine was clearly disappointed, so Sam offered to take her where she really wanted to go, the Notre Dame cathedral. Jill opted to go with Jasmine, winking as she used the ruse of playing \"chaperone.\"\n\nMost of the band members were still sleeping after a late night of drinking, so Ashley, Joe, her parents, Cindy, Doug, Kim, and Jon joined the line already forming for tickets to the top. The view at the first level was already spectacular, as at 121 feet, it was the maximum level allowed for most buildings in Paris. When they reached the top, it was breathtaking. Ashley took a lap around the observation deck, her arm hooked into Joe's, then stopped at a point that was her favorite view. She detached herself from Joe and peered at the river that led toward the cathedral. The spring air was rather chilled at this height, and a breeze played with her hair. Ashley was happy she wore an oversized light sweater this morning, and pulled the edge of her sleeves halfway down her hands before crossing her arms on top of the rail.\n\n\"So, what do you think?\" Joe asked as he propped his elbows next to her.\n\nAshley swiped a misbehaving strand from her face, moving it so that it would trail slightly behind and to the right of her, next to the rest. \"It's peaceful,\" she said in a sigh that surprised even her.\n\nHe looked at her. \"You seem disappointed. Paris isn't what you thought?\" A hand drifted of its own accord to stroke her cheek. The colors of her hair, face, and black sweater contrasted against the homogeneous gray backdrop of the city below them. A thrill struck through his heart that had been dulled by hard work and everyday routines. She is so beautiful, he thought.\n\nHer head tilted into the breeze against his fingers, and she closed her eyes, relishing the contact. \"I don't know,\" she murmured. \"I mean, this is Paris! City of lovers, the most romantic place on Earth! Supposedly.\"\n\nJoe took her hands from the railing, warming them in his, and at the same time, encouraging her to face him. When she looked to his face, he asked rhetorically, \"So then why are you so disappointed?\"\n\nAshley sighed and gave a sad and confused smile. \"Exactly. I've dreamt of coming here with you on our honeymoon...don't give me that look. Yeah, we had a vacation in Hawaii. I wanted a honeymoon. Just you, me, and nothing to do but have fun. Either in a hotel, or out and about seeing the sights; it wouldn't matter what we did, as long as it was what we'd feel like at the time.\" She slipped her hands from his to move them around his waist. Touching her forehead to his chest, she said, \"I guess in my imagination, we'd come here on my own credit.\"\n\n\"But this is your own credit. We wouldn't be here if it weren't for you...\"\n\nShe cut him off by holding him tighter so she could absorb the view with her cheek resting comfortably against the firm padding of his chest. \"...No, I mean my own band, my own money, everything. I don't want to debate this. I'm just saying why I think I'm disappointed when I shouldn't be.\"\n\nAshley tilted her head up and they kissed, just as the other three couples did. It seemed like it would have been a sin to leave the top of the tower without one.\n\nJasmine toured the cathedral through the viewfinder of her video camera, while Jill followed her directions to nearly fill the memory card of the pro still camera Jasmine handed her. Both marveled at the intricate sculptures that seemed to cover every inch of stone and the wondrous stained windows that provided an almost spiritual light to the interior. A couple of hours passed before Sam approached them to recommend heading to the underground transit that would carry them back to the group.\n\n\"So...\" Jasmine started to wonder aloud once they were sitting in the subterrarian train.\n\n\"Sew, a needle pulling thread,\" Jill quipped with a grin.\n\n\"Har har,\" Jasmine flatpanned. \"So...What's going on with you, Jill? You seemed far too...happy to go on this trip without Ken.\"\n\nJill shrugged. \"I had a passport, and he didn't. It's as simple as that.\"\n\nJasmine glared at her. \"I don't think so. He had a chance, and he dragged his feet until it was too late.\"\n\n\"Don't pry, Jazz. Not everything is always purple ponies and cotton candy.\"\n\n\"What do you mean by that? Are y'all splitting up?\"\n\n\"I don't know.\" Jill blew out an aggravated breath. \"There's nothing to say anything is wrong. But, I just have a feeling. I've been busy, he's been distant, sort of.\" She shrugged. \"I just felt I needed some space. That we needed some space.\"\n\nJasmine shook her head slightly. \"Heh. Well, the Atlantic Ocean should be enough.\"\n\n\"Yeah,\" Jill answered softly. \"You'd think.\"\n\nThe Paris concert unfolded in the same manner as the previous two, with the crowd cheering especially strong when they heard Ashley speaking in their native tongue. It was a wild success, and like before, they rushed to the airport to make for Rome. If Ashley knew the other romance languages well, she excelled at Italian. Many of her previous voice lessons featured Italian songs, so Joe figured that language would be especially natural for her. She chatted the driver up on the way to breakfast, commenting on the particularly aggressive nature of Roman motorists. Her dad asked in surprise exactly how many languages she knew, which she answered honestly that he now heard them all. Then he commented that she could make a great linguist for some government agency, or corporate powerhouse. Ashley knew he was just making harmless conversation, but she wondered if he still didn't wish a different career for her.\n\nIt was so odd, waking to eat a late lunch, working on getting ready with only munching snacks for dinner, performing late into the night, hopping on a plane, then in a hired car to the hotel, and eating breakfast before heading to bed. Today, they'd only seen the sliver of Rome that was between the airport and the hotel, and it was in early dawn. However, after Ashley stepped into the room from breakfast, Joe kicked the door shut and caught her up from behind, planting wicked kisses down the side of her neck. She willingly stopped mid-stride and allowed his affections.\n\n\"Hmm...something has you in a mood,\" she purred as she tilted her head to make her neck even more vulnerable.\n\n\"We saw the world's most romantic city, and you were so beautiful on that observation deck, hair all unruly and shit.\"\n\nThere was a lick along her artery and she gasped. \"Romance gets the big, bad football player horny?\"\n\n\"Well, you do. Why do you say 'horny?' Why not 'amorous'?\"\n\nAshley gave a giggle. \"What's pressing against my hiney is not what I'd call amorous. I'm not mad... I just know by the way you talk crass... 'and shit'... that you've gone yards beyond just affectionate.\" She brought a hand up to play with his hair while his mouth continued to play with her neck and collar. \"Besides, I think that Rome is the most romantic,\" she said with a smirk.\n\nRome brought out the best of Ashley, as her laughter, energy, and overall bounce kicked up a few notches. Maybe it was because she had been able to talk to Joe alone the day before, the little romp just before bed, or maybe just because this city had more variety in colors and buildings than France did. Whatever the reason, her fuel tank seemed to have freshened up, and she ran with it. They had a few spare hours in the afternoon again, and since it was not enough to see a single ruin or attraction, they all split up to peruse the shops local to their hotel.\n\nThe crowds of all the concert nights brought energy, but this last one had a stronger heartbeat. The sequence was the same as the others, with Ashley providing translation from off-stage until Jon brought her on two songs in. Filled with confidence, she surprised the band by stepping forward out of turn near the end. Speaking for a few minutes in her fluent Italian, she thanked Tales of The Blind for allowing her to \"tag along,\" as well as sharing a few humorous tales from earlier in the tour. Then she thanked the crowd for the band, sincerely expressing appreciation for their support, not only for buying tickets, but for the robust cheering throughout the concert. Then asking for their patience, she let them know she would repeat everything for the benefit of the band and their friends. She inhaled a long breath for show, turned to the band and said, \"I told them and you, 'THANK YOU!'\" Ashley turned back to the crowd with a mischievous grin that said she was finished. The arena erupted with laughs followed by whistles and cheers that rewarded her humor. The concert ended with her performing a backflip timed to the final chord and drum beats, the band bowed to the screaming and they exited the stage amid a deafening ovation.\n\nAshley had just pulled on her street jeans and was reaching for her shoes when there was a knock on her dressing room door. \"Come in!\" she called.\n\nThe whole band plus her usual crew came through the door. \"Ashley SMITH!\" Jon bellowed, making her jump. \"What the HELL do you think you were doing?!\"\n\nHer smile evaporated. \"I...I was just playing with the crowd.\" Then in a small voice, \"It felt right at the time.\" She was bewildered, his voice was sharp, but no one moved to defend her. And, there didn't seem to be any frowns.\n\nJon shook his head and broke into a wide smile. \"I'm not talking about tonight, or even this whole week. YOU were amazing!\"\n\n\"Um, thank you?\" She was still trying to piece the puzzle together.\n\nHe continued, \"Which brings me to my question. What were you thinking, joining that confused ramble called Fell Off The Truck?\"\n\n\"I don't...They offered me a contract?\" She hesitated between words, unsure of what the right answer could be. She finished tying her shoes and stood to meet this challenge.\n\n\"Well,\" Jon began while stepping to her and wrapping her in an enthusiastic hug. \"I'm glad Kim stayed in touch with me and got me to invest in you. You are so much better and deserve to be treated way better than they could have.\"\n\n\"Thanks,\" she said while releasing him.\n\n* * *\n\n\"What an amazing trip!\" Jasmine enthused in the elevator to the penthouse.\n\n\"Yeah, thanks so much for taking us,\" Jill added.\n\n\"Well, thanks for coming along,\" Ashley answered. \"I still can't believe Cindy's pregnant! I'm so excited for her!\"\n\nJoe nodded. \"I just can't believe she waited to tell us until the flight back.\"\n\nJasmine picked up her bag as they approached their floor. \"I'm sure she didn't want anyone fussing over her during the trip.\"",
        "The doors opened and they filed out. The home had certain lights on low, and Ashley recognized her own house lighting program of 'romantic setting.' Dishes with the remnants of a meal were on the dining table, and an empty bottle of wine along with two glasses were resting on the glass coffee table.\n\nConfused, Jasmine started to issue a command, \"Molly, lights --\"\n\nJill slapped a hand over her friend's mouth, cutting her off. Jasmine followed Jill's stare to her bedroom door. A soft glow peeked out from around the edges. \"I don't close my door when I'm not in there,\" Jill reminded them. She set her duffel on the floor and made her way up the stairs to open her door. Jill crossed her arms over her chest once she opened the door and leaned against the frame. \"Fuckin' figures,\" she said under her breath.\n\nJasmine was a step behind and her mouth fell open for a second at what she saw. Ashley guessed what happened and stepped to the side, giving an open path to the elevator. Joe twitched forward to run up and see what was going on, but Ashley stopped him with a touch on his arm. \"This is Jill's fight,\" she said simply.\n\n\"GET OUT!\" Jasmine screamed at the top of her voice. \"What the hell is wrong with you?!\"\n\n\"Jazz, just let them go,\" Jill said with emotional fatigue, still not moving from the door frame. She wanted to make the exit as difficult as possible, and intended to make them brush by her as they departed.\n\nJasmine ignored her. \"You DO NOT come into our house to FUCK behind your girlfriend's back!! Get your shit and GO!\" There was a slight pause. \"I don't want to hear it! GO NOW! You can get dressed in the elevator!\"\n\nSam had arrived with the rest of the luggage, and upon hearing Jasmine's growling screams, drew his weapon and lurched for the stairs. Ashley stopped him by putting her arm out. Naked, Ken and a brunette Barbie stumbled past Jill and wobbled down the stairs. His dick still glistened from the girl's lubrication.\n\n\"Sam, would you drive them home?\" Ashley asked. \"I wouldn't mind if they hurt themselves driving drunk, but I want to keep everyone else out of harm's way.\"\n\n\"Sure thing, Miss Smith,\" he answered while hitting the elevator button.\n\nThe disgraced pair stopped in front of Ashley. \"I'm sorry,\" Ken slurred.\n\nAshley shook her head. \"I'm not the one you should be saying that to.\" Her eyes glared into his and she held out her hand. \"Key,\" she demanded evenly.\n\nIt didn't matter whether he gave it to her or not; her very next step would have been to delete his RFID tag from the authorization list, anyway. Ashley wanted his embarrassment to sink in, as he had to dig through the jumble of clothes in his arms to find the fob they had given him last year. He finally produced it and laid it in her hand, then entered the elevator with his fling. Sam tapped the garage button, but Ashley darted her arm in, swiping down the columns of buttons, lighting up every floor.\n\nRaising an eyebrow, she said, \"Better get dressed quick. Chances are someone will see you every time the doors open.\"\n\nThey were already scrambling with their piles when the doors closed and took them away.\n\nJill rubbed a hand over her face and motioned Jasmine out of her room. She closed the door and said, \"I'm gonna have to buy a new mattress, now.\" With that, she walked around the corner of the rail and into the guest room, closing the door softly behind her.\n\nShe used the guest room every night until her new bed arrived the next week. The night before the bed swap, she did send off her old one by indulging in a favorite solo fetish. Ashley had caught her by coming home early, but surprised Jill by joining in her usually embarrassing vice.\n\n* * *\n\nThe spring game was a couple of weekends later, a scrimmage between offense and defense that was a chance for veteran and new players alike to show their merit to the coaches. Free for students to watch and a small fee for others, it was an opportunity to quench those who were football-starved. With three guys vying for the top quarterback spot, the green \"no-touch\" jerseys were off, contributing to the game-like atmosphere. The girls arrived early, sighing with desire as they watched the muscles ripple during warm-ups.\n\nAshley smiled with pride when Joe appeared in the first quarter, but held a little disappointment when he lined up in the slot. He had told her he was still practicing that position, but she didn't like that he was hedging his bets. Three receptions and 40 yards later, he was withdrawn from the game before the second quarter ended. Her main interest off the field, Ashley watched the cheerleaders, noticing Jill was in form, now paired up with a different partner. Jill seemed to ignore Ken, but he stole glances her way. Ashley rolled her eyes at his unwillingness to let go.\n\nThe crowd atmosphere was that of a large picnic, hundreds of conversations taking place, with sporadic cheers urging on the bigger plays. Ashley and Jasmine engaged with the sorority sisters, catching up on the latest gossip. Near the end of the third quarter, a commanding voice boomed from the field, \"Ready!\" Audience and players snapped to attention, much like a stagecoach team would when their handler took the reins. Ashley's heart skipped a beat at the familiar voice, and seeing number 6 behind the center confirmed her hope. \"Come on Joe!\" she called out.\n\nHis squad frustrated the defense when they were on the field, and a few errors (some by Joe) created entertainment as he worked to make something positive happen. Jasmine remarked that he looked like a squirrel dodging traffic on two of the plays. Overall, his squad scored the most -- two touchdowns and a field goal -- during the game. The group around her congratulated Joe through Ashley on his productive performance, even though it was off-script at times.\n\nA statement by the coach after the game said that the team showed promise, but had a long way to go. When asked about who might start at QB in the fall, he replied that each of the three could, but a decision might not come until after summer workouts.\n\nJoe returned home later that night, finding Ashley on the sofa, sitting Indian-style while chewing on a pencil. \"Hey,\" he said while coming up behind her, twirling her ponytail.\n\n\"Hey back!\" she replied with a smile, tilting her head back like a kitten enjoying attention. \"You were great today.\"\n\n\"Thanks!\" He played with her hair a bit more, then stopped and shared a kiss with her when she turned toward him. \"Whatcha workin' on?\"\n\nAshley turned back to her notebook and fretted her eyebrows. \"Oh, just toying with a mock journal for an idea I had.\" She sighed after a moment. \"It's stupid, really, but I just wanted to have fun with it.\"\n\nHe reached down and softly played with her neck with his fingers before replacing them with his lips. \"I know of something else you could have fun with,\" he murmured into her collarbone.\n\nShe closed her notebook on her pencil and dropped it on the seat next to her. \"Ooh. Do tell,\" she groaned. Ashley let out a squeal of glee when he plucked her off the sofa and carried her up to their room.\n\n\"Ugh, Jill's been smoking so much lately, I can smell it in here,\" Jasmine huffed as she dropped into her chair in the studio.\n\n\"Well,\" Ashley said, almost disinterested. \"she's just blowing off steam after what happened. As long as she does it outside, she's free to do what she wants.\" Ashley donned some earphones, ending the conversation.\n\nJasmine turned to ink her latest album assignment with her colored pens, but grew frustrated by the soft humming coming from Ashley. It irked her that she couldn't hear the rest of the music. Whenever she did her job designing these covers, it helped to listen to music. Oddly, it never was from the band she was working on, rather she listened to Ashley singing, or playing her guitar or violin. Lately, she had pitched a couple of ideas to Joe, who in turn referred to Carter's innovation team. The six tiny high-definition cameras now suspended from the studio ceiling were the result of one of the ideas. She'd used those to film Ashley playing her violin as part of a test, but hadn't been able to replay the recording as she intended yet, since the media was still in development. Jasmine replayed the scene in her head now, picturing Ashley in her white blouse, faded jeans, and bare feet, playing a tune to which Jasmine had yet to find lyrics or accompaniment. That tune didn't match the one Ashley was humming now, either, and it became a distraction.\n\n\"What are you working on?\" she asked in irritation.\n\nAshley moved one of the bulky cans from her ear to her cheek. Unhappy with that placement, she moved it to behind her ear, where it promptly began sliding further back. She blew at the hair that had dislodged in her fumbling movements and settled for holding that piece in her hand away from her ear. \"Something for school,\" she said, still awkward in holding half the headset.\n\n\"What's for school?...argh!\" Jasmine's toes curled in frustration. \"Could you take that thing off, please?! It looks ridiculous any way you have it!\"\n\nAshley took the clunky studio phones off and set them down on her desk. \"You gave them to me for my birthday last year,\" she pouted.\n\n\"Yes, and I bought them for listening, not a fashion piece. So, what's this school project?\"\n\n\"Testy today, aren't we? Did Aunt Flo come to visit?\" Ashley teased.\n\n\"That's not fair!\" Then under her breath, Jasmine mumbled, \"in so many ways.\"\n\nAshley cocked a seductive grin. \"Aww, I told you I don't mind if it's a little messy. They have these new things called showers and washing machines.\"\n\nJasmine bristled. \"That's not what...grr...never mind.\" She looked away to collect herself, then back to Ashley. \"What is this project? I don't remember you saying anything before that there was another one.\"\n\nAshley knew her girlfriend was referring to a project she'd turned in a week ago. \"Well, Professor told us about a contest a studio was holding. If we enter it through him, he'd grant us extra credit for Music Comp. I.\"\n\n\"But you're acing everything, why do you need extra credit?\" Jasmine interrupted.\n\n\"If one of us wins the contest, that person gets to CLEP out of Comp. II and III.\"\n\n\"And you think you have a shot at skipping two classes for credit?\"\n\nAshley scoffed. \"You don't?\"\n\nOops. Jasmine blew out a breath at being caught at getting carried away in an argument. \"Well, school's over in two weeks. I mean, given enough time, I believe you could write a winner for anything.\"\n\nAshley smirked at both pointing out Jasmine's current bitchiness, and at the flattery. \"Thank you,\" she said with a tip of her head.\n\n\"So, when do you have to turn it in?\"\n\nAshley looked at the ceiling as if accessing her internal calendar. \"Um...Thursday. He's gotta have time to review the pieces and score them for the extra credit before he submits them for us on the deadline Friday.\"\n\nJasmine shook her head. \"That's really short notice.\"\n\n\"Well, big challenge equals big reward, right?\"\n\n\"I guess. What's it for?\"\n\n\"A studio.\" Ashley attempted a deadpan, but then giggled at Jasmine's annoyance. \"Ahem. Apparently, someone bought Blizzard's concept and script. We were told that the movie is rendered, but fell flat for the test audience. The studio believes the music wasn't right, so they're trying a contest.\"\n\nJasmine raised an eyebrow. \"Mystic?\"\n\nAshley cocked her head. \"Yeah, how did you know? I thought you didn't like sci-fi fantasy geek stuff.\" Ashley paused while thinking about something. \"Which is odd, since you really know your way around tech stuff.\"\n\nJasmine bit her lip. \"I might have sold some things to their production. Mostly art stuff like promo posters...\" She ducked the pencil Ashley threw at her. \"Hey! I didn't say anything because I didn't think they could pull it together. In fact, I still don't if they're opening a contest to the general public.\" Jasmine watched Ashley twirl a new pencil between her fingers while she digested Jasmine's information. There were more than a few times that a bow went accidentally flying mid-twirl when Ashley got bored, and Jasmine wondered when this pencil might take its escape. \"So, what do you need in three days?\"\n\nSure enough, the pencil fell to the floor, and Ashley let it stay there after a glance of frustration. \"A written or digital hardcopy of the music, as well as a recording of the piece. I figure a video performance would be a good bonus.\"\n\nJasmine sighed while shaking her head. \"Is that all?\" she said, voice dripping with sarcasm.\n\nAshley clicked her mouse a few times, then detached a thumb drive from the front of her computer. Holding up the USB stick, she said triumphantly, \"Yup. You already produced it over Christmas, as well as taped me playing and singing it. I was just making sure it was what I wanted to submit.\"\n\n\"You twit!\" Jasmine gaped in playful astonishment. \"You could have just told me you were finishing up. I was thinking you had to do all this from scratch.\"\n\nAshley shrugged. \"And you could have told me you were working with this studio. Now, I'll never know if I'll get picked on merit or who-you-know.\"\n\nJasmine thought about that briefly. \"I haven't talked to them since I sold the promo graphics, and I doubt that they know you know me. But if it'll make you feel better, just tell your professor to submit it using a name only he would know. He's gotta look at it anyway, right?\"\n\nAshley followed that advice, telling her professor that she wanted it submitted anonymously, under the guise that her husband's name still occasionally made the news. The professor agreed, and since other students seemed shy about giving names out, he depersonalized all the entries. Ashley's was labeled 'Florida State Student #4.'\n\nHe announced the next week that a few entries were impressive, and he singled out two of the students by saying they had gained enough credit to raise their grade a whole letter. Late that week was an even bigger announcement: \"Number 4 and Number 7\" had been chosen for the short list. A webcast would announce the winner. There was a stir of excitement after that class, as it was now possible that one of their classmates could effectively skip two semesters of music writing. Two of them making the short list also guaranteed free pizza, since Ashley had sworn on submission day that she would throw a pizza party on the last day if any of them were awarded fourth runner-up or higher.\n\nMusic Composition was rescheduled the last day of the semester to coincide with the winner announcement by webcast. Ashley made good on her promise, directing three delivery people to dole out the pizza she had bought for each classmate. Sodas were passed around, pizza boxes opened, and the silvery white screen lowered from the ceiling. The professor plugged the projector cord into his laptop, and after a few clicks and keystrokes, the screen displayed a slowly spinning logo graphic of the studio. The din of over a dozen conversations filled the classroom until the professor called for quiet when the graphic dissolved to reveal a young woman who was the epitome of sunshine.\n\nIn the welcome speech, the self-introduced public relations assistant reviewed how the project and contest came to fruition. She went over some figures related to the project, including numbers of animators, voice actors, support staff, and man-hours put into the effort so far. It didn't escape Ashley that the happy girl glossed over the fact that the movie rights had been purchased far into the preparatory groundwork. Even so, she was excited by the possibilities that were presented through a special preview arranged for the contestants who were watching. The CG animation was amazing, the characters seemed lifelike, and the plot tease sucked her into wanting to know more. The only missing piece was glaring: there was no music.\n\nThe girl cheerfully acknowledged the trailer was missing an important thread that would pull everything together, and enthused that the team believed they had found that piece. She spilled right into the results. Fourth runner-up was a girl from a school with an unfamiliar name. Third runner-up was a guy from UF. Their classroom cheerfully booed the mention of their rival school. The Bronx cheer fell away when the second runner-up was announced as Florida State Student #7. A heartfelt cheer went up for the girl and she received hugs and high-fives from the adjacent students. The room quieted while the speaker drew out the suspense, overly enthusiastic in assuring the choice between the top three was very tough.\n\n\"Ashley!\" a boy down the row prodded.\n\n\"Yeah, Ashley should get it!\" said another.\n\nThe room picked up a chant of her name, and Ashley was amused by the team spirit, since no one but the professor had heard what she submitted. Well, Jasmine had. She played with the mixing board over Christmas break, using Ashley's new piece as fodder for trial and error. The result astonished Ashley with a work that was polished enough to have come from any big name recording studio. Jasmine had become a self-taught producer.\n\n\"To announce the winner,\" the speaker said, and the local room quieted again. \"We decided to demonstrate our choice by replaying the trailer.\"\n\nTheir classroom groaned in frustration, and the screen flicked to the trailer once again. A soft violin sang beneath the narration at first, and Ashley broke into a wide grin. The action scenes that were void of speech now had the accompaniment of a riveting and powerful refrain. The music backed off in intensity for the closing of the trailer, returning to the smooth violin instrumental. The students looked at the professor as the trailer ended, and his smile was splitting his face from ear to ear. He nodded to confirm their suspicion and said, \"It's Ashley.\"\n\nA loud cheer of happiness filled the room, and Ashley was swarmed by a hug that seemed to include everyone in the class. In the background, she could hear the girl congratulating \"Florida State Student #4\" followed by a general thank you to everyone who submitted entries. It took her a few minutes to navigate the hugs and kisses on the cheek until she reached her happy professor.\n\n\"One of the best contemporary works to come across my desk,\" he said while wrapping her up in a tight hug. \"Congratulations, Ashley.\"\n\n\"Thanks!\" She backed out of the embrace that was a hair too personal for comfort. Adding a sly grin, \"I guess I won't be seeing you again.\"\n\n\"Yes, yes, Ashley. I'll put in the paperwork for your credit. But, I'll be around, and I'm sure we'll see each other off and on. Doubt you'll need it, but I'm always here if you want to bounce things off of me.\"\n\nAshley kept her smile, but gave a curt nod. \"I'll keep that in mind.\" She picked up her full pizza box and went back to the front to hand it to him. \"Thanks for the A,\" she smiled as she turned to leave.\n\n\"You earned it!\" he called after her. Then, once alone he said under his breath, \"you're good enough to take my position.\"\n\nBack home, they had a large celebration dinner with Ashley's parents and the couple that was Cindy and Doug. It was late to accommodate the two and a half hour drive and time for showers and changing, but that didn't dampen the mood any. The occasion was three-fold: Ashley's huge win, Kim's graduation with an AA degree in business, and Cindy and Doug becoming parents-to-be. There was much fodder for conversation, but heads turned when Mrs. Roberts posed a question.\n\n\"So, when's the date?\" she asked.\n\n\"Oh, I'm due sometime in September or October,\" Cindy breezed.\n\nAshley's mom shook her head. \"I mean the engagement.\"\n\n\"Mom!\" Ashley didn't really want belief imposing to mar the dinner that had been so nice up to now.\n\nDoug chuckled. \"The engagement was about two days long. We're already married!\"",
        "Ashley double-checked herself. No, there was no ring on Cindy's finger...oh, now she saw the one on Doug's. Her heart fell in disappointment.\n\nCindy caught everyone looking at her left hand, so she held it up. \"It's already starting to swell at times, so I took it off until after delivery. Why the long face, Ash?\"\n\nAshley snapped out of it. \"Sorry. I'm happy for you two, really. I just...I guess I missed my chance to play for your reception.\"\n\n\"Yeah, Ashley, that's why you should be disappointed,\" Jasmine baited with sarcasm. No argument was snagged so she continued, \"Never mind missing the chance to witness the event or be there to congratulate them.\"\n\nCindy smiled to disarm the tension. \"A small, quick trip to the courthouse made sense for us. We didn't feel any need to show off. I know I don't like being the center of attention. Besides, I like to think that y'all already gave us the gift of that trip through Europe.\"\n\nAshley couldn't help but feel disappointed that she missed out on an event. She felt that not having a band she could count on played no small part in that. They were staying home the first half of the summer, since Joe would have to return to Tally for two-a-days the second half. There was a trip to southern California for a photo-op with the studio, so that nixed taking first summer session classes, anyway.\n\nThe meeting with the producers before the photo-op was interesting for her, since they said they were looking for music to fill the rest of the movie. Her title track could be threaded out for a unifying theme, but they were also looking for other music to fill in a few scenes. She surprised everyone by stating that she had everything they needed. It turned out that when Blizzard launched the trial balloon press release that she had seen last year, she was toying with some pieces in her head for fun, pretending at the time that she indeed was working on the project she greatly desired. When each song was described, the producers felt they had stumbled upon a goldmine. Everything they needed and imagined, but failed to reach in their first run, was now right in front of them, in Ashley's head. When asked how long she needed for a finished score, Ashley was confident in answering that she could get it back to them in about a month. Kim dropped her jaw, but didn't say anything contrary.\n\nAs they jetted back home, Ashley told Kim that she needed a band she could trust. Kim went over some options that she and Jon had come up with, anticipating the need eventually. After much debate, Ashley said she wanted to pull together her own members, and Kim began planning out auditions. She set up ads as well as a number of Tweets to pitch the event over the next two weeks.\n\nFive days, one hundred fifty-six interviews and auditions in, Ashley dropped her head on the table, frustration washing over her. If the interview went well, the musical talent was lacking. If they could play a lick, they either had the personality of a doorknob or so much charisma that Ashley had trouble getting \"sorry\" squeezed into their verbal stream.\n\n\"Oh God,\" she groaned into her arm on the table. \"Maybe I got lucky with Reena, Mike, Jim, and Paul.\" \n\n\"I don't know,\" countered Kim. \"That guy...\" she referenced a few sheets back \"...Jason seemed promising.\"\n\nAshley still had her head nestled in her arms. \"Sure. Him and who else? I really liked the chemistry I briefly had with Reena and crew.\" She closed the manila folder that held the few possible 'yeses', which really felt like 'passes.' \"Well, I was pushing it by keeping the auditions up this long. There's a deadline coming up. I guess I'll just go home and do the best I can to record the tracks. Maybe later we can try again.\"\n\nA door opened to the auditorium she rented. \"Hey Ashley, how go the auditions?\" Reena's voice was chipper, although Ashley detected a hint of staging.\n\nAshley slumped in her chair. \"Hey. Did you come to laugh at my misery?\"\n\nReena entered, followed by the rest of her band. \"That well, huh?\" Ashley grunted her response. Reena stood in front of the table. \"Well, your Twitter feed said you were still holding auditions today.\"\n\nAshley got up and moved around the table to properly greet her friends with hugs. \"Well,\" she sighed after the last embrace. \"I was. But, it all was hopeless, so I'm hanging it up for now. We were gonna get a bite before heading home, you wanna come with?\"\n\n\"Actually,\" Reena asserted her voice to stop Ashley from spinning away and heading out. \"I know you were hearing individuals, avoiding having to break ingrained habits and all that. But, I was hoping you'd allow us to play together for you.\"\n\nAshley tilted her head as she worked to comprehend what Reena was suggesting. \"You...what? What exactly are you... what?\"\n\n\"We'd like to audition for you.\"\n\n\"I know what y'all can do. You don't have to play just to play.\"\n\nKim had finished packing her briefcase. \"You want to audition for the project? Ashley, this is your answer! With them, you'll finish before the weekend.\"\n\n\"True, and I wouldn't have to ask Jon to have Tales help me.\"\n\nKim's face fell slightly. \"Well, there's a reason I didn't pitch that to you. They're recording for their new album the next few weeks.\"\n\nMike edged forward, and Reena took the hint. \"Actually,\" she said for the second time. \"We were hoping to audition for a permanent place at your side, Ashley.\"\n\n\"Whaaa?\" Ashley gaped in surprise.\n\n\"Yeah, what's going on?\" Kim asked.\n\nReena sighed. \"Is that late lunch invite still open?\"\n\nAshley treated them to Olive Garden, the table seating her and Kim, as well as the Trail Springs band. A few people gave double takes when they recognized Reena and her bandmates. Over tea and salad, the story took shape, and through the entrees, it was clear that Jon buying Ashley out was a real blessing. Mike kicked it off by revealing that Matt had fired him, the replacement being prettier. And far less talented, Reena added. She hired Mike directly as an advisor. Paul was next, and Reena had tried to put her foot down, but Matt threatened to drop the band entirely, retaining royalty rights and leaving them with nothing. They had been recording their second album during this, and the upheaval was causing frustration and bad blood. Paul was hired by Reena to replace an equipment manager who walked out, but things were not the same as when they started. Matt started in on Jim, nitpicking and harping on the littlest things about his appearance. He seemed unwilling to fire Jim outright, since Reena would probably find a way to keep him around. Instead, he worked to get Jim to quit. By now, it was obvious that Matt had his eye on Reena, who had talent and the look that matched his true vision for Trail Springs.\n\nAshley looked at each of them while she finished a bite of pasta. Their broken faces said more was coming. \"So, hit me with the heavy stuff,\" she said finally.\n\nReena sighed. \"Matt sold his label...\" Ashley and Kim's jaws dropped. \"...Yeah, I know! An investment corporation snapped it up, and they're worse than him. Looking back over the last year, I guess Matt was trying to help me prepare for this. Anyway, they took over and everything is about pure image. A lot of acts were dropped, many more were changed to the point that all the original members were replaced with fairer faces.\"\n\n\"The Pinheads?\" Kim asked.\n\nReena let out a sympathetic chuckle. \"Watercooler talk has it that they were given to you as a one-time training and polishing project. Shortly after we did that prom, they were split up and plugged into different acts, all part of that image thing. Ashley, I hope you don't feel like you failed with them. They were never yours. I never did hear what the long term plans were for you, but I think Matt intended to use you to groom lookers for other bands...at least until you left college.\"\n\n\"Wow, I'm glad he had so much faith in me,\" Ashley growled.\n\nReena smiled at her. \"Aww, I think you should consider that a compliment. That you're strong enough to coach others.\"\n\nAshley returned the smile weakly. \"Yeah, but I've found out that coaching others doesn't get you the big bucks...or recognition.\"\n\nMike pushed his empty plate back. \"Well, that's why we're here. We did pretty good when we were together, but so many places just want bands that look good on TV. Even when things were rolling, and we opened for a couple of arena tours, it just wasn't...I don't know...\"\n\n\"Fun.\" Reena finished. The other three nodded. \"We missed playing with you. You were so much fun to work with. And, it just felt like everything clicked. You knew what we would do, we knew what you were going to do. We fed off each other.\"\n\n\"Yeah, we did,\" Ashley agreed. \"But y'all left me once,\" she reminded them, unable to shake wanting to protect herself. \"You wanted fame and fortune. I haven't exactly burned up the charts.\"\n\n\"Yet,\" countered Reena. \"Yeah, we had that, and it wasn't anything. There was no point if we were just going through the motions to keep the label off our backs.\" \n\n\"Not to mention that weasel Julip,\" spat Paul.\n\nIt was time to close the deal. \"Look, Ashley,\" Reena said. \"We want to have fun again, to just play for enjoyment.\"\n\n\"Well, I don't know how much playing time we'll get. I still have two years left in college, and I don't know what's going to happen after this project is done. Plus, Joe has a good shot at starting, so I want to be at every game, and be home for him to unwind in me...\" She blushed. \"I mean with me.\"\n\nReena's gaze didn't stray, and her smile was steady. \"You meant IN, and that's fine. We're patient now, willing to do whatever you ask. Even if it means extended periods of doing nothing.\"\n\nAshley's mind was made up; Kim could see that and held her breath, hoping the choice was one she was hoping for. \"What were you needing to make this happen, then.\" Ashley wanted to wrap this up. Joe was out with Jasmine on one of their 'dates,' and a tinge of possessiveness had Ashley wanting to be home before too much temptation took place.\n\nReena's face relaxed a bit, feeling the goal was near. \"We know Jon took you under his wing and bought you out. We were hoping you'd take us under yours. That you'd buy our...well, my...contract from Fell Off The Truck.\"\n\nAshley blew out a breath. \"How much would it take?\"\n\nReena's eyes lowered, knowing the amount involved was the hardest part of asking. \"They want 1.5. If you take the rights to what's already finished and published... well, you're looking at 4.\"\n\nAshley's eyebrows went up. \"Wow, you ARE doing better than me. By about three times.\" She looked at Kim, who understood the unsaid question. Kim nodded without speaking. \"That won't leave much to play with, once the deal's done. There won't be planes or tour buses for a while.\"\n\n\"We're okay with that,\" Reena swallowed hopefully.\n\nAshley smiled at her. \"Then welcome back! Kim will find out what's involved, and I'll have Jill and her study group fine-tune the details. Thank you guys so much!\"\n\nJasmine was in a snit again, which was odd to Ashley, since she used to be all fired up after these dates in a different direction. Jasmine closed herself off in one of the guest rooms, so Ashley had the bed, and Joe, to herself.\n\n\"So you figure one and a half million is worth getting your career on track?\" he asked her.\n\n\"Well, four would burn up everything I saved, and the account will be bone dry. But not for long. They'll really help me get that project done in time, and it'll sound even better.\"\n\n\"It's not a bad idea, Babe. They have recognition in Country, you've got talent in rock and pop...you could become a true crossover artist.\" He paused to play with her nipple while thinking. \"Your account wouldn't have to be dry. I could...\"\n\n\"No, Joe. Thank you, but I want to make this MY career.\"\n\n\"Okay. Well, anyway, today I was considering getting a decorator to do up one of the guest rooms as a nursery for Cindy and Doug.\"\n\n\"That's nice, but wouldn't it be better for Cindy to decide what to do with a crib?\"\n\n\"It is my house...\"\n\nAshley patted his hand that was playing absently with her breast. \"Sure it is dear. I'll let you do whatever you want with it.\" She accompanied the statement with a sly grin.\n\nJoe shook his head. \"Fine, what do you suggest, then?\"\n\n\"Give her a budget -- a sizable one -- but still a bucket of money to redo one of the rooms of her choosing. I imagine a new mother would want her hand in building a nest. A budget would do a few things. She'd still know that we're in charge of the house, but that we're renewing our desire for her family to live here. It would be an awesome baby shower gift, and she could feel comfortable in how the nursery was made, be it herself, or a contractor she picks out and hires.\"\n\n\"Damn, you are so much better at gift-giving,\" he said with a kiss on her nose.\n\n\"That's why you keep me around, huh?\" She grinned and proceeded to wrap her body around him.\n\nHe shifted to accommodate her. \"Oh, I can think of a few other reasons.\"\n\nKim rented a recording studio in nearby Mobile, and on the way there, she cornered Jasmine about her mood swings. There was a heated exchange, but Jasmine finally convinced Kim that her cycles were off from the spring trip and finals at school. With threat levels back to at least truce, they got down to business. Reena and the band picked up Ashley's songs quickly, and improvements between takes were exponential. Ashley drove them hard, keeping Jasmine busy behind the sound board. There was not one complaint voiced among them, even though they missed lunch.\n\nAshley was given a number of statistics regarding the film to aid her in building the score and soundtrack. A folder covered in Post-Its reflected how Ashley organized her thoughts. Most people would take a look at her process and think it was a cluttered hot mess, but for her, each note could be studied, conquered, and then physically plucked off her to-do list. One yellow square stated the total movie needs: 2 hours, 1:45 music, 5 fight scenes, 2 flight scenes, 1 flight/chase scene, 3 romance/love scenes. Another note had details on the song she was currently refining in her head: Fight scene #2, 4 minutes, climax at 3:02 mark. She closed her eyes, listening to the newest version in her head, comparing it to the ticks of the clock on the wall near her. She hummed the tune, while Reena and the others patiently and softly picked and tapped practice measures. Ashley was satisfied with the new edition and pulled them together to demonstrate what she was aiming for.\n\nSometimes she played her guitar, sometimes she sang, and sometimes she even tapped out the rhythm on Jim's drums. Whichever way she picked always seemed to be the most effective to get the vision transferred from inside her head to inside theirs. Kim being present at Ashley's previous recording with a band couldn't help notice the stark difference in this one. There were no arguments, no shouting, no backhanded comments. Only a team push for perfection. A few runs later, Jasmine gave a weary smile while holding her thumb up. Ashley smiled as she pulled that note off her folder, crumpled and tossed it to the floor.\n\n\"Hello?\" Kim answered her phone.\n\n\"Hey. Where are you, Kitten?\"\n\n\"Hey Jon,\" she cooed. \"I'm at the recording studio.\"\n\n\"Still? Going that well, huh?\"\n\n\"Actually, it's going awesome! You should hear this stuff coming out. They've finished six pieces so far.\"\n\n\"Six in one day...I should have you in charge of our sessions,\" he laughed.\n\n\"No, I wouldn't know where to begin. Ashley's the one in complete control here. All of them are troopers.\"\n\nJasmine piped up. \"Yeah, well, this trooper needs to pee bad.\" She hit the booth microphone. \"Ash, hon, I need a short break, or you'll need to pay for a new chair, too.\" Ashley nodded.\n\n\"They're taking a break, finally,\" Kim said into her phone.\n\n\"Good. How long y'all gonna be?\"\n\n\"I think Ashley wants to push until about 10.\"\n\n\"Then a little food might help those troopers last until then.\"\n\n\"Yeah, I know it would help this one.\" There was a pause and she finally caught on to his unsaid suggestion. \"So...that's why I'll be heading out for some burgers. Great idea, Jon!\"\n\nThe recording phase was mostly finished after one more long day. Jasmine estimated it would take two more days for her to mix the cuts and sound levels to her liking, so they all returned on those days in case she wanted to re-record certain snippets. Ashley decided to while away some of the time by playing around with Jim's drum set. She started out playing different rhythms on the snare, then following some tips from Jim, she played slow cadences using all the instruments. Her reactions to mistakes were purposely exaggerated to humorous effect, bringing several peels of laughter from the group. Jasmine's voice would interrupt from time to time, asking for a certain refrain or verse to be played. She'd inform them what she was looking for -- a little faster or slower, more pronounced emotion, or even play a piece all the way through one more time just to see how that would turn out. They did what she asked without question, almost always earning a thumbs up on the next try. Taking breaks from drums, Ashley had also come up with a game. She had Kim write down six stereotypes, then using a random dice app and a random jukebox app, Kim would read out a song to perform and what 'style' to play it with. Ashley's portrayal of \"Redneck Jesus warrior sings Rhianna's S&M\" was so entertaining that Jasmine took a break to watch. Ashley gulped before every 'embarrassing' lyric, and threw in so many 'oh Lawd's' Kim was doubled over, Jasmine found an urgent need for a bathroom break, and the band could barely play on.\n\nDespite the occasional distraction from the goofing off in the recording booth, Jasmine was true to her timetable when sometime Thursday afternoon, she hit the intercom and declared she felt everything was done. They all crowded into the control room and Ashley said she wanted to hear the final product. Not a word was said as they listened to the title track Phoenix, the instrumentals named Fall, Ashes, and Rising. Hearts raced when they heard her flying chase song Soar, and they melted for the romance ballads Many Moons, Dare, and Love at Heartspeed. \n\nThe last instrumental faded to finality and Reena whispered in awe, \"That's way better than anything we've put out.\"\n\nAshley shrugged. \"You helped me perform it.\"\n\nMike shook his head. \"No, this is genius. You brought us to a level I never thought we could be. It's almost like I don't recognize who's playing.\"\n\n\"Jazz, this is publish-ready,\" Kim gushed. \"I feel like I've seen the movie, and the music is still with me on the way to the car. Where did you learn what you did?\"\n\nJasmine smiled, happy at a sense of accomplishment she hadn't felt in a long time. \"I've been playing around with that mini-board I gave Ashley a couple of Christmases ago. This one let me fine tune the levels much more, though.\" Accolades didn't mean anything, if the one who needed to be impressed wasn't. \"What do you think, Ash?\"\n\n\"It's exactly as I had it in my head. Thank you.\"\n\nThe remark didn't lose any importance in the understated delivery. This was high praise coming from Ashley. If there was anything that could have been done better, no matter how minute, she would have made it known. Politely, of course, but something would have been said, and they'd be setting up to fix it or try it another way. Jasmine beamed, knowing she had achieved Ashley's high standard.\n\nThe final version files took up nearly every data bit of Jasmine's 32 gig thumb drive. Once those were copied, she ejected the removable hard drive Kim had purchased. That contained the master recordings, the primary version that Jasmine had copied to the USB, as well as two alternate versions. Jasmine mixed three versions, each with differences that were subtle, but changed the way each felt. The primary was the one Jasmine liked best. After securing the data devices in her briefcase, Jasmine declared, \"I don't know about y'all, but I'm ready for a drink!\"",
        "Ashley stated simply, \"I'll be ready for one once all this is approved and paid for.\"\n\nOnce home, Jasmine played the final cut for Joe, Jill, Cindy, and Doug. They all gawked at Ashley after the last song ended. Jill found her words first. \"Are you SURE you want to give this to THIS project? I mean, the trial audience walked out of the first screenings, for Christ's sake!\"\n\nOne of Ashley's eyebrows lowered in a fret. \"I've seen their trailer. This music matches the film, I'm sure of it... Well, mostly. We'll see what they think.\"\n\nJoe came up behind Ashley and wrapped his arms around her tummy. \"I think Jill's questioning whether the film will match the music. Quality-wise. Every song, and I mean EVERY song, that just played would kick the current Top 10's ass.\"\n\nAshley looked around the room, and every head was nodding. Cindy was crying, the belly bump causing a flood of hormones that made the normally-reserved woman now wear her emotions on her sleeve. This one looked like a happy cry. \"Thanks, y'all. Yeah, I want to do this. There's this feeling that this is going to be the key to my career. Good or bad, this will tell me which way it's meant to go.\"\n\nJon flew down the next day, after Kim insisted that he needed to hear what his investment could do. Ashley thanked him for the studio rental money, and he handed Jasmine an over-generous check for her work in the studio. Jasmine thanked him enthusiastically, inwardly snickering at her new definition of 'friend with benefits.' She played the soundtrack for him, and he voiced compliments of elation and wonder. After, he and Jill worked on writing the proposal. Jon watched Jasmine send the package over the file-sharing service she used, then took them out to dinner.\n\nThe response came back at noon the next day with mixed results. \"Good thing you lowered the sample rate before you sent it,\" Jon told Jasmine. He was referring to a trick she had performed to minimize the file size. It would play well over decent computer speakers, but was missing the full range of levels that would be required of a digital movie theater. \"I'd hate to think a studio would steal music, but this is lowball enough that it could have been a possibility.\"\n\nThe response was that the music was exactly what the project music supervisor was looking for, but the requested amount was unobtainable. They'd already spent most of their soundtrack budget on the failed pieces. The counter offer was only $30,000. The email closed by heaping large amounts of praise on what was submitted, and regret that payment could not be more.\n\n\"That's like a third of what I could get for one song in a movie,\" he said. \"I could see this amount if this was for a video game, but not a full-length film score. Ashley, I suggest you take the contest prize for Phoenix, and withdraw the rest.\"\n\n\"You're a big name. Of course you'd expect to see more,\" she said. \"Whereas I'm still mostly unknown. But, I want to do this. I believe this movie will be a huge success. It's like Elysium met Titan A.E. with a couple of World of Warcraft races sprinkled in. This is the movie geeks like me have been wanting...more like lusting after. Star Wars, Star Trek, and the Marvel movies give sips, but we leave with a touch of disappointment. This is going to be different. I can feel it.\"\n\nJill had an idea and pitched it. Jon agreed it was worth a try, if Ashley was set on this project. Their final proposal demanded the entire remainder of the music budget, including the music track production budget, since it was felt Jasmine had completed a finished product. There was a reminder that Ashley had timed all the pieces exactly to their specifications, so no further work was necessary, aside from synchronizing it to the movie. Knowing the screenings foundered with the first score, bonuses were built in that were tied to performance benchmarks. Those marks seemed outlandish, and Jon especially doubted the $750,000 bonus for a number 1 movie debut would be paid. The biggest potential stumbling block of the proposal was that all rights to the soundtrack release would be retained by Jon. That would give him control over everything made off the single releases, as well as the soundtrack itself, should the 'nerd' population be as eager as Ashley was expecting.\n\nJon made a mini-vacation of the visit, staying with Kim in her room through the weekend. His jaw dropped when the proposal was accepted in whole on Monday. He and Ashley signed the contract, and Jasmine stuffed into the FedEx box with it another thumb drive that contained a copy of the master files for the final version of music. A few days later, the band got together for a day at the beach, a day made a bit happier by the few thousand Kim had just paid each of them -- their shares of the contract payment. Shortly before they were to return to Tallahassee for the 2nd summer session, an email to Ashley seemed to promise that her hunch was right. The movie's soundtrack had been synched to her music, and the newest trial showing yielded far better results. The audience's answer to what they liked the most was overwhelmingly the music.\n\nAshley and Kim had a business lunch before Ashley left to figure out what was next for Kim. Ashley made it known that she was happy with Kim's ability, and wanted to know what Kim planned to do. Kim loved what she was doing now, it was a dream job working for a dream employer. Ashley nodded and said it was Kim's choice, but if she planned on staying with Ashley, further courses were unnecessary. Kim originally had wanted to move back with them at this stage, having obtained an AA with good marks would allow her to attend FSU now, but life threw a bit of a curve ball in the form of Jon. She openly discussed what was on her mind with Ashley, and through the conversation, she decided to stay with Cindy and Doug at the house. Ashley agreed that Cindy would welcome some extra help getting ready for the baby.\n\nAshley picked up 2 more courses, finishing her liberal arts requirement, and thinking of getting ahead to allow either an early finish, or easy senior year. There was a two week break before fall semester. The movie was now titled Phoenix, a change producers said was more in line with what the movie was about. Jasmine had all but bared her teeth when she heard, upset more that they were taking their cue from Ashley's feature song without further compensation, than at having to redo the poster artwork. She was paid for the hour it took her to do that, after all. Thank God for Photoshop and its layers technology. Ashley shrugged the name change off, taking it as a compliment. Phoenix had been pushed back mostly for the delay in working out the soundtrack, but the new date was also a calculated strategy to coincide with the start of most high schools. The theory was that students would talk about the release, and peer pressure would get groups forming to see the film. Trailers were being posted on YouTube, shared on Facebook, and discussed on Twitter. Critics who had been invited for previews were lukewarm, calling it \"empty entertainment,\" but hinted that the score was the saving grace of the film. Ashley being songwriter and performer, Jasmine being music producer, and Jon being essentially Ashley's label, were invited to the red carpet preview in New York. \n\nEven Ashley was surprised by the buzz back at school. The whole campus seemed to be talking about the release of Phoenix the next week. She was even asked to play a song from it when she toyed around in the amphitheater. The figures from the opening weekend were impressive for not being a summer release, and the largest bonus ended up getting paid out. Soon, requests were reaching her and Jon for the release of Soar. The song was released as a digital single on the music supersites the Tuesday before the second week, renewing the demand for tickets at the box office.\n\nThe movie indeed turned out to be the break Ashley was hoping for, gaining her recognition across the country. Interviews were conducted over her cell phone, and pictures of her and Joe on the red carpet in New York were widely distributed. The university events office asked her to perform at the opening football block party. \"I'm ready for that drink now,\" she triumphantly told Jasmine after finishing that phone call.\n\n\"Well, you did turn 21 today,\" Jasmine offered.\n\nWith all the hubbub, Ashley had forgotten her own birthday. \"You set up the block party, didn't you?\" she accused.\n\nJasmine tapped her tablet interface and put down the stylus. \"No, and neither did Joe nor anyone else, before you start. This is all you. Now go call Kim and Reena to let them know.\"\n\nJoe's world had picked up the pace, as well. In addition to traveling with Ashley, Kim and Jasmine to New York for the debut, he had to make a trip to Colorado. It was a quick shot there and back to nominate Commander Roberts as a replacement for the retiring military liaison. The meeting was an attempt to overcome claims of nepotism, since Joe felt Ashley's dad was a good match for the work. The meeting was a success. The two-a-days in Tallahassee were grueling in the high heat and humidity. The competition was fierce, and Joe stayed after most practices to work on timing with a few eager receivers. Ashley seemed a distant distraction with their schedules continuously filled up by their own separate ambitions, not that he wanted things to be that way. Many nights he tried to come up with something that could change so they could get lost in each other again, but he enjoyed the challenge of playing, she enjoyed her music, and they both enjoyed seeing each other happy. \n\nOnly a week to go before the opening game, and a decision still was not made for the starting spot. When asked about it by reporters, the coach said they would try someone and if things didn't go well, they weren't afraid to pull him and try someone else. The first game was at home, and was also the one Ashley was scheduled to perform at the block party. Kim posted tidbits and reminders a couple of times a day through Ashley's Facebook and Twitter accounts. Ashley chatted with Reena on Monday to square things away, and then surprised everyone by tweeting herself the announcement that she would do a free jam session with Trail Springs at the amphitheater Thursday afternoon. Many were surprised to find out Trail Springs was playing for her now, and her own star was rising quickly, so the students were excited about the treat.\n\nReena and the band met her after class that afternoon, and there were already over a hundred people milling around the amphitheater. The former Trail Springs members were mobbed with autograph requests, and the crowd continued to expand. A couple of frowning campus officers approached Ashley saying that an organized assembly required a permit from the university. She convinced them to write her a ticket, and she'd pay the fine to the university tomorrow. Then she asked if any of their friends were off-duty and would like some extra cash to help make sure things didn't get out of hand. Ashley didn't feel it was needed, but it did make the officials more comfortable in not making her disband the crowd.\n\nHer heart jumped when her phone rang and displayed that one of Joe's coaches was calling. Practice was going on now, and a fear that something happened crashed into her mind. But the call was good news, so she slung her guitar over her shoulder and began thanking the crowd for turning out. Her first announcement was that she was cited for not obtaining an assembly permit. They could play, but she warned against any rowdiness, as it would result in her shutting this freebie down immediately. She jokingly said that this jam session was shared for free, but if anyone wanted to contribute toward the $250 fine, offers wouldn't be turned down. Next was a shameless advert for the block party the next night. Ashley said the $5 admission to see the concert was worth it, especially now, since the coaches were going to let her announce the starter selection. Someone called out the question, and she answered honestly she didn't know who it was and wouldn't until tomorrow afternoon. She looked at Paul in a signal, and he started rapping a rhythm on her guitar case, as the drums would have been too much to walk over to this site.\n\nAshley and her band entertained the crowd with the informal session, mixing in pieces from Trail Springs, the movie, some cover stuff, and taking shouted requests. Some of the amusement was in the form of light banter between the band members. \n\n\"You squeaked your violin,\" Mike chided during one of the exchanges after they had finished one of Trail Springs' hits.\n\n\"I did not,\" Ashley cocked her chin up in defiance.\n\nThe audience chuckled.\n\n\"Yeah, you kinda did,\" affirmed Reena, accompanied by Jim and Paul nodding with grins.\n\n\"Well, if I did squeak, and I'm not saying I did -- it was an artist's discretion. Not an accident,\" Ashley said with exaggerated mock pride to great effect.\n\nAn advance team from ESPN was walking the campus for \"fluff\" shots (short clips to fill in between commercials and broadcast) and were drawn by the large crowd. They set up and recorded the last half of the mini concert.\n\nEarly the next afternoon, the coach called her, first warning her to put on a poker face. Ashley affected the instructed neutral look, and Jill walked beside her toward their last classes, none the wiser. \"Who was that?\" Jill asked.\n\n\"Coach Barry,\" Ashley answered plainly. \"Letting me know who's starting so I can announce it tonight.\"\n\n\"Not Joe, huh?\"\n\n\"I didn't say that.\"\n\n\"So it is Joe.\"\n\n\"I didn't say that, either.\" Ashley allowed a coy grin.\n\nJill texted Joe that the verdict was in, but Ashley wasn't letting on who won. Ashley's phone blew up with Joe and Jasmine pestering her until it finally went quiet when he started practice and Jasmine entered class. Ashley's advanced vocal class ended and she met Jill to drive her back to the penthouse. Reena was there with the band, munching on some cut veggies. She asked Ashley if there was good news today, clearly hinting she wanted to know about the decision. Ashley popped a celery stick into her mouth and grinned when she said she got an \"A\" on her first quiz of the year. Jasmine had arrived in time to hear the answer, and all groaned when Ashley wouldn't reveal what she knew.\n\nJasmine and Ashley worked together to get dinner made while Joe came home and went straight for the shower. He returned downstairs and hugged Ashley from behind while she stirred a pot. \n\n\"Hmm, someone wants something,\" she smirked when he kissed her neck.\n\n\"I can't love you without you accusing me?\" He sounded hurt, but there was guilt, too.\n\n\"Well...\" she sighed. Ashley wondered how they could get back to being the cute 'handsy' couple without it feeling baited after spending the last two years almost indifferent to each other outside of bed.\n\nAt first it was funny when everyone tried to trip her up at dinner, and Joe was playing the cute kid at Christmas. But, it wore on her and she finally barked at them to drop it. She and the band left directly after finishing their meal to set up, leaving the others to clean up. Once set up, there was a quick sound check. Ashley had taken to recording these checks by placing her phone in the middle of where the crowd would be. She replayed the recording, and asked for a few adjustments, both in what played from the speakers and through her earpiece. A few repetitions later, things were at least satisfactory, but she wished for Jasmine's ear. That girl had a knack for getting things right on the first try.\n\nNight was falling, and soon the start time was rushing at them. The ESPN crew were informed that the announcement would be made at this small concert. Besides, what the producers saw of footage last night was very promising. They had four cameras in place when the emcee greeted the crowd. Ashley and band kicked things off with one of Trail Springs' bigger hits, followed by Windowless Pains from when she was with the Pinheads. A few more songs went by before they began performing the now ultra-popular Soar.\n\nAshley took a break at this point, turning her back to wipe her face with a towel that laid near Jim's drum kit. \"Y'all having fun?\" she asked the crowd, and received a loud response. She toyed with the crowd a bit, introducing herself, each band member, and announcing most of the team was in the crowd. Of course, both finalist quarterbacks were at the side of the stage, and she mentioned this as well. \n\n\"So, here's Dare, a single getting released week after next,\" she said with a grin. \n\nThe crowd groaned, the most vocal coming from Joe and the other quarterback.\n\nShe put her hand up, grinning from ear to ear. \"Okay! Okay! Before that, from your reaction, I guess most of you know I've been asked to announce who will be starting tomorrow night.\" She looked back at Jim, who promptly began a dramatic and clich\u00e9 drumroll. \"The starting quarterback for your 'Noles is...Joe Smith!\"\n\nThe crowd cheered happily, and Joe shook his now-backup's hand. Ashley waved him over and gave him a warm hug. Then she winked at him when Mike started the chords for Dare. She sang to him sweetly while her band poured their hearts into the music. Although the ballad was about two souls performing an ultimate dare in trusting each other completely, the lyrics could be interpreted as a congratulations to him for daring to aim high in returning to football, even though he had no need to chance the injuries associated with the sport. \n\nJoe, for his part, was joyful to have been chosen, then embarrassed to be spotlighted. The unease was temporary, as his beautiful wife singing just for him calmed the deepest raw nerves even he didn't know he had. Ashley's delicate hand lightly holding his was like an anchor holding him to the spot on the stage. His attention was fixed on her, enjoying every note that emanated from her throat. A separate small part of his thoughts turned to when his parents were in that wreck. Sure, Ashley adored the Smiths and held no small amount of gratitude for their hospitality. But, when he got that fated call, she made sure she was by his side, even though she had no personal responsibility to do so. She risked graduation by flying off with him to the hospital in Denver. Yet, she didn't think twice. Ashley just did so, and thank God. Joe didn't know how he could have possibly dealt with the shock of their accident, then the torturous news of their passing without her there. She grounded him, tethering his multitude of thoughts and emotions to what needed to be done. Without any words, much less preaching, she had the ability to calm and consolidate even his most private frayed ends.\n\nThings have seemed...how could he put it...so separate lately. She worked unbelievably hard at getting to this high point with her music. He worked as hard at getting back into football. But they both loved what they were doing, and loved each other as much to allow them to follow their desires. He missed the sweetness of initial courtship: the flirts, the cuddles, constant touches and linked arms and hands that deal with the insecurities of young love. He looked down to the hand that held his with the airy touch of a butterfly. A mere heartbeat seemed enough to break contact, yet it held him firm. He didn't know what, but somehow he'd have to change something to reconnect. He felt the project's success would be that something.. It just had to work, but there were so few chances left, he knew.\n\nThe ballad ended to much applause, and he felt her fingers twitch in their preparation to release his. Quickly, he clutched them to affirm his gratitude for her token performance to him. Ashley smiled and enveloped him in a warm hug. They whispered their profession of love to each other and she squeezed his hand, almost feeling the inward thoughts he had. \"I'm not so sure you'll still love me after this,\" she said to him before turning back to the crowd.",
        "\"My husband, Joe,\" she said for the benefit of those whose heads were in the sand, \"has other talents. Who wants to hear him sing?\"\n\nThere was a cheer from the crowd, Joe's backup turned and walked away from stageside, and Joe groaned while seemingly try his best to become smaller.\n\nAshley patted his arm. \"Aww, sweetie, we'll throw you a softball.\" She winked and turned to Jim who immediately began striking the distinctive beats of the B52's hit \"Love Shack.\"\n\nJoe knew instantly he'd been had, this was staged and probably because Ashley wanted to show off 'her man'. He shook his head and began sing-speaking his part. Ashley and Reena did their parts playfully, and Joe admitted their version sounded really good. The crowd ate it up, becoming a sea of smiling faces and dancing bodies.\n\nJoe had made a sizable contribution through the alumni association the year previous, though not because he felt the school needed the money. The amount gained him two spots in the reserved 'Gold' parking section of the stadium. It also scored dibs on several seats in one of the sky boxes, but since Ashley enjoyed feeling the pulse of the crowd and insisted on sitting with her sorority sisters, Joe would purchase the tickets for every game and hand them to the new sorority president. He liked how she allocated them. Usually she doled them out as rewards for volunteer work, and held raffles for two rival games to supplement the sorority's 'playtime budget' that was set aside for dances and other events.\n\nToday, he used Ashley's truck to back a rented trailer grill into one of the spaces. Not wanting to attract attention, he hurried and his rush did nothing to help his rusty backing skills. Ashley grinning from the passenger seat only increased his frustration. Back and up, back and up, he kept missing his mark.\n\n\"Want me to do it?\" Jill had followed in her SUV to tote supplies, as well as Jasmine and Kim, who had come over for the debut game. They had left a few minutes later than Joe and Ashley, allowing Kim to finish a lengthy phone call to her Jon.\n\nThe fact they had caught up before Joe even parked irked him. \"I got it, Jill!\" he snapped.\n\nJasmine leaned out her window. \"Aww, are you so nervous you can't put your unit in the hole?\" Her taunt was loud enough to have carry, and a few heads turned in the lot.\n\n\"SHUT UP JAZZ!\" That came from both Joe and Ashley.\n\nJill put on her SUV's four-way flashers in the middle of the aisle, which Joe took as further embarrassment. She got out and walked to Joe's window. \"I'll spot you. Where I point is where I want your ass to go.\"\n\nAshley's eyebrows shot up. \"Excuse me?\"\n\nJill rolled her eyes. \"Ass-end of the trailer. My dad used to have me spot him with the boat trailer.\"\n\nHer directions had the grill in its spot quickly, but a fluff crew had been quicker. They set up in time to film Joe winding down the hitch prop and decouple the truck. \"Didn't know I'd be doing a spot for 'This Old Tailgate,'\" he quipped. The camera crew laughed, but kept filming the rest of their setting up. Once the truck was in place next to the grill, the canopy set up, charcoal lit, and coolers laid out, Joe gave Ashley a kiss and she wished him luck. The crew angled for a quick interview, but Joe reminded them of the media ban the coaches placed on the players. Ashley, however, was fair game, and she obliged their curiosities. Joe was excited, looking forward to the year, the tailgating was new for them this year since they hadn't any outside obligations on weekends this year, she was pleased with the success of the movie and the performance of her single so far. Asked about her dad being selected to work with Carter, she answered that she was looking forward to a good game this evening. The interviewer rightly took this answer that she wouldn't be lured into fueling supposed controversies.\n\nThey had invited the sorority house members to their party, and a few girls and fewer couples showed. They didn't turn away anyone who asked for a burger, and as the lots filled up, Jill was getting busy at the grill. Reena and the band showed later, grabbing the last few burgers from Jill before the girls started packing things into Ashley's cab. Someone asked Ashley if she could play a song, but she hadn't packed her guitar and made note to bring it next time. People lost interest and moved on to other various tailgates, so the ladies moved the canopy over her truck bed, where they relaxed and chatted. A broadcast intern found them, holding a folder. She asked Ashley to sign her permission to use footage from the night before. After a phone call to Jon from Kim, Ashley signed the rights. Another question had Jasmine using her phone to copy the Soar file from her file website to a specified address. Ashley was handed a check for $250, but Ashley and the others agreed that if ESPN used it in their broadcast, the exposure would reap a far greater amount.\n\nA muffled cheer from around the corner of the stadium signified the GameDay cameras had turned on for their last broadcast before the start of their game. Jim, Mike, and Paul took down the canopy and stashed it in the truck. Her vehicle locked, Ashley led the others toward the gates.\n\nJoe had gone straight from the parking lot to the practice facility and waited for the receivers and tight end he'd asked to come early. He picked up a ball and carried it while he paced around the indoor facility, still a bit awed that he was chosen to play for this elite team. A few assistant coaches were already there, greeted him with a nod or mumbled hello. He replied to both with a 'hey' and a smile. He had no illusions about being friends with them. In elite programs as this, until you showed something special, players were merely unpaid interns, no matter how much media talked up one of them. Sure, Coach had an open door policy, and several players used it -- just show up and hang out to play video games or whatnot. Joe knew such a policy was rare in college sports, almost non-existent in fact. He didn't take advantage, mostly because he felt he had to prove his worth first.\n\nTrue to the firm agreements with teammates, his catchers showed near the appointed time. They jogged a couple of laps, stretched, then Joe began running plays with them. Plays above high school level relied heavily on timing. Ball snap, 2, 3, or 4 steps back, throw, catch. That's how it's supposed to work. Joe wanted to fine tune that precision he'd learned the last year and this summer, and he wanted to feel how fast each receiver was running today. He matched his internal timer to their routes, and after about 8 throws to each, the imaginary target he visualized in the air to launch the ball toward was dead on. Joe polled them after a while, but all were satisfied with the timing and ball placement, so they sat in a loose circle to kill the time left before pre-game meetings.\n\n\"Man, every time I see you, you got a ball in your hands,\" said his tight end. \"What is up with that?\"\n\nJoe smiled. \"Well, I figured I'd use an old-wives tale. Eat, sleep, walk with a ball, and it becomes part of you. It makes sense, the more you handle this thing, the more your body adapts to it, and it almost feels smaller after a while, as you get comfortable with it. I don't sleep with it, or eat...but I try to hold one as often as I get a chance.\"\n\n\"Yeah, you didn't have one last night at the concert,\" one of his receivers pointed out. \"Your old lady killed it, by the way.\"\n\nJoe chuckled at the Old South idiom. \"Ashley is special.\"\n\nAnother receiver piped up. \"That she is. Speaking of 'special', what is up with her not wearing shoes?\"\n\nJoe related how she tripped during a performance, because one of her band members wouldn't stay in his assigned spot and wrecked her ankle further by performing on the injury for Phantom of The Opera. Now, she won't perform with shoes to avoid another mishap. He used the parable to remind them to keep their assignments. Joe considered himself lucky none of them brought up his singing. As they got up to head to the meeting, Joe invited them over for lunch tomorrow.\n\nOne of the story lines for this game was their opponent, Duke. They had a surprising year last season, and football gurus were touting the team as favorites for the conference top spot. The head coach used the primetime kickoff of this game to his advantage. Throughout the day, four top tier teams fell to far lesser schools. He played clips of small school athletes jumping in celebration after felling Goliaths. The videos were to be viewed as a reminder to never underestimate an opponent. Speeches, instructions, fundamentals reminders were given before the quasi-ceremonial walk to the stadium locker room in shirts and ties.\n\nJoe smiled and nodded to the fans who watched them file into the stadium, gave an extra smile and wave to the camera that focused on him. They suited up, listened to a few assistants, went to the field for team drills and warmups. He looked up and waved at Ashley and company in their usual spot. The team returned to the locker room, hung out, listened to the coach give his game motivator, said a team prayer, and filed out to the tunnel. Joe endured a few glances his way, and knew some of them expected him to say something. He didn't. Many started chanting something or another to hype themselves up, but he stayed out of the group jumping. It just didn't suit his personality.\n\nThe energy of the crowd could be felt as they took the field, and it was hard not to get wrapped up in the charged atmosphere. Joe kept telling himself, \"just managing a team\" over and over, working to keep the jitters to a minimum. Their touted defense produced three captains for this opening game, and they represented for the coin toss. Duke won and elected to defer. Joe was surprised that he was anxious at knowing his appearance was only moments away.\n\nThe coach had some words for him during the kickoff, mostly to the effect of relax, we've practiced for this. Joe nodded and before he knew it, the PA was announcing him as starting quarterback. He trotted out with the rest of the offense to wild cheering. They huddled, and all eyes were on him.\n\n\"So, what do you think of all this?\" one of the senior linemen asked, referring to the excitement of their first game of the season.\n\nJoe gave a single chuckle. \"Grab your punch cards, guys. It's time to clock in.\"\n\nTen smiles appeared and as many \"hell yeahs\" were said. The reaction made Joe comfortable and settled him down, oddly enough. He repeated the name of the play that was scripted for this series, and they marched to their positions. The script was conservative, designed to test the Blue Devils' run defense, as well as their route coverage. Three runs and a short pass, Joe's squad had two first downs and were nearing the 50 yard line. Still on the script and each short play successful, they hadn't huddled since the opening play. Joe scoped the defense, decided they were still guessing, and didn't audible. He waited for his veteran line to communicate their blocks to each other, then caught movement in his periphery. Corner blitz coming. Leaves a linebacker or safety to cover that receiver. So, they figured out who's running decoy, Joe thought. He tapped his hip, an instruction for the running back to pick up the blitz, then called for the ball. The play was intended for a quick-crossing tight end to be primary receiver. Joe had already decided to reverse the checkdown order, wagering it would be a linebacker covering the abandoned receiver. One step into his dropback, Joe confirmed his hunch was right, the big defender was chasing down the decoy fly route. By the time Joe released the ball, his receiver was already a step and a half ahead.\n\nAshley, Kim, and Jasmine found their seats in the sparsely populated student section. A pledge was also early and commented on the thin attendance. Jasmine told the freshman that most of the students were still partying, and assured her it would be full before three minutes into the game. \n\n\"I thought you'd still be at the House party, or at least our tailgate,\" Ashley commented, filling her role as an 'Elder Sister' keeping tabs on pledges.\n\nThe girl almost cowered in fear. \"I..uh...I thought we were excused if our parents were visiting.\"\n\nAshley laughed lightly. \"It's okay, you are. Where's your parents sitting?\"\n\n\"Oh, um...they should be a few rows above the band.\"\n\n\"Nice. I'm jealous.\"\n\nThe girl was puzzled. \"Jealous? They're horrible seats, almost on the rim.\"\n\n\"Well, if Joe weren't playing, I'd be watching the band.\"\n\nJasmine scoffed. \"You'd want to be conducting the band.\"\n\nAshley shot a look. \"That too...what's gotten into you, Jazz? You've been so abrasive lately.\"\n\nA big huff came from Jasmine. \"I'm tired, horny, and hungry,\" she quipped. \"And not in that order.\"\n\nAshley was about to chide Jasmine for not grabbing a late burger before they packed up, or for not playing in bed with her as much lately, but a gasp from the pledge at Jasmine's 'horny' blurt reminded Ashley that not all ears in range knew about her and Jasmine. \"Well, why don't you have a fling with Sam? I've already told you you could.\"\n\n\"I can't.\"\n\n\"Why not?!\"\n\nKim was getting uncomfortable with the squabble. \"I'm gonna sit with Reena,\" she said as she got up.\n\n\"Because I've already promised...\" Jasmine ignored Kim's abrupt departure.\n\n\"Promised who?\"\n\n\"Joe,\" Jasmine said quietly.\n\n\"JOE?!\" Ashley's face was red now.\n\nThe freshman followed this soap opera with wide eyes. She couldn't help herself when she asked, \"Who's Sam?\"\n\nAshley's flamed eyes were locked on Jasmine when she pointed toward the rail near the field. \"Sam is my and Joe's bodyguard.\"\n\nThe girl followed the point to a young built man dressed in a polo while he was scanning the bleachers. \"Oh nice!\" The bodyguard comment finally rang some bells, but one more piece was needed. \"So, who's Joe?\"\n\n\"My HUSBAND,\" Ashley fired toward Jasmine. \"He's starting today.\" The tone was even until she asked, \"Been taking things a bit far on your play dates?\"\n\n\"NO!\"\n\n\"Then, promised him what?\"\n\n\"I wouldn't sleep with anyone until the project was over.\"\n\nAshley relaxed but shook her head. \"Strange project to include abstinence. Maybe you'll tell me about it sometime?\"\n\n\"Of course, as soon as there's a result.\"\n\nTheir single audience member was wholly wrapped in the drama, especially once she figured things out. \"Wow, you're Ashley!\"\n\nAshley giggled. \"And you're Julie! We've met at the start of Rush Week.\"\n\n\"No, I mean you're Ashley, Ashley! Soar? Rightside Down? Ashley's Song? Ashley Smith, married to Joe Smith, heir of Carter Electronics, and recently named starting quarterback?\" She met Ashley's gaze that revealed nothing. \"Oh come on, I can't be wrong! I didn't get it at first, cuz every time I've seen you, it's t-shirt, shorts, and pony tail.\"\n\nJasmine smiled, the tension gone. \"I'd like to think she's Phantom's Christine Ashley.\" She looked at her girlfriend. \"I still say that was some of your best work.\"\n\n\"Thanks!\"\n\n\"So, it's true!\" Julie looked about to be sick suddenly. \"Wow, I've never talked to a famous person before.\"\n\nAshley let out a flattered sigh. \"And you still haven't. I'm not famous. At least I don't think...ooh here they come!\"\n\nThey watched the players trot out and form up for the team stretches and drills. Ashley waved her fingers in reply to her husband's acknowledgment. The girls affected silly grins when the players bent over in a stretch. Ashley said to her younger 'candidate,' \"this is why I come early. My favorite part of the games.\"\n\nJulie giggled. \"I see.\"\n\nThey watched with rapt attention as the team ran through their choreographed agility drills. Dropping down, flopping over to their right, to their left, jumping to their feet. The marching band shouted a count with each movement. The team broke out into their warmup stations, Ashley followed Number 6. She sighed as she watched.\n\n\"His balls are so pretty,\" she mused.\n\nJulie burst a laugh through her nose. \"Isn't that kind of personal? College is turning out way different than I imagined.\"\n\nJasmine giggled. \"Well, what you're thinking, too. But Ash is talking about the spirals he's throwing.\"\n\n\"Oh,\" Julie blushed. \"Of course.\"\n\nThey watched in silence the rest of the warmups and drills, focusing on their team, and oblivious to the opponents. They cheered with the rest of the growing crowd when a sharp whistle had the players jogging for their tunnel.\n\n\"Joe look nervous?\" Jasmine asked.\n\n\"I can never tell when he's in uniform. He looked loose, though...\"\n\nAshley was interrupted by someone in a FSU polo. Seminole Broadcast Network wanted an interview to fill some air time at the half. She agreed, and the undergrad gave details before leaving. Ashley sat next to Jasmine, all animosity gone now.\n\nJulie was starstruck now. \"See? You ARE famous! So, where's Trail Springs?\"\n\nAshley fought the urge to correct her and say they were now her band. \"Over there, 'round the corner.\"\n\nShe squinted into the sun setting just above the stadium edge. \"Oh wow,\" she croaked when she recognized their tiny faces. Their sorority began arriving around them. \"Hey guys,\" Julie said to them. \"You know who this is?\"\n\nRobin, the new president glared. \"Looks like Ashley and Jasmine to me. And, we missed you at the house tailgate party.\"\n\n\"I...uh...\"\n\nAshley stepped in. \"I already covered it with her. Julie's parents are in town. She came here right after their family lunch, right?\"\n\n\"Exactly,\" the girl confirmed.\n\n\"I like her,\" Ashley grinned. \"She's cute, and I have a feeling she'll be a great addition.\"\n\nRobin sized her up and looked around at her established members. \"Ashley wants a new pet, any objections to Julie?\" There were none. \"Very well, Julie is hereby upgraded from pledge to full sister. Welcome, Julie!\" The girls squealed their happiness and hugged the dumbfounded new member. \"As she is now your pet project, you're responsible for her adhering to the rules, Ash.\"\n\n\"I know. Bill me for her dues.\" She hugged her new 'sister' with a smile. \"Your ass is mine now,\" she giggled.\n\nJulie looked worried. \"Uh, what does being your 'pet' entail?\" The earlier conversation entered her mind, and Ashley's relationships seemed to be twisted through more than a few people.\n\nAshley retrieved her phone from her shorts waistband and snapped a picture of Julie. She tapped out a number of keys. Several phones around them chirped, and Jasmine and Julie checked the alert. Ashley looked with amusement at Julie. \"You follow me?\"\n\nJulie looked down at her phone to hide her embarrassment. \"Yeah, you were the first person I 'followed' on Twitter.\"\n\nJasmine gasped \"Oh my God!\" and went to work on her phone.\n\nThe phones chirped again.\n\nAshleyRockerts: Hey y'all! Got a new pet! (Julie's pic).\n\nJazzNotes: @AshleyRockerts Watch what you tweet. You twit.\n\nJazzNotes: Welcome to the Sisterhood, Julie! Thx @AshleyRockerts 4 the recruit.\n\nJulie was laughing. \"You two are so funny! And, thanks!\"\n\n\"Just my way of saving her ass,\" chided Jasmine.\n\n\"That's not all you watch,\" smirked Ashley. The comment was rewarded with a warning glare. Ashley ignored it and tapped out a tweet relating her excitement of her hubby's imminent debut. A text from Kim demanded to know what was going on, and Ashley tapped out an explanation. \"So...rules...\" she said while working her phone. \"Number one: attend all required events. Number two: be on-time or early for those events.\"\n\n\"I was with my parents,\" Julie whined in exasperation.\n\n\"I know. Just saying.\"\n\n\"What else?\"\n\nAshley grinned when she hit send and tucked her phone back in her shorts. \"Do my homework.\"\n\nJasmine swatted her arm. \"I don't think you want a freshman writing a 15 page paper on contemporary music's influence on society. She's joking, Julie.\""
    ],
    "authorname": "photodad",
    "tags": [
        "fantasy",
        "friends",
        "romance",
        "music",
        "18 year old",
        "lesbian",
        "softcore",
        "novel",
        "long story",
        "wetting"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-angels-fix-pt-09"
}