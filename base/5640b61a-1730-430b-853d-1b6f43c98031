{
    "title": "The Lady of the Manor Ch. 03",
    "pages": [
        "The Lady of the Manor -- Chapter 3\n\nThomas, the Viscountess and Claire enjoy an afternoon of intimacy. This chapter starts exactly where Chapter 2 stopped. I hope you enjoy it. It will be the last in this series. As always, comments and feedback are very welcome.\n\nSylviafan\n\nThe Viscountess Baythorpe and I continued to look at each other, me with a slight grin on my face, Caroline's face red with embarrassment but otherwise impassive.\n\n'Are you suggesting some sort of group sex Thomas?' she asked, eventually. 'A threesome?'\n\n'Yes,' I said, simply. 'Or rather what I'm saying is that if you wanted to try that, I think Claire would go along with it.' In fact I wasn't so sure. It was one thing for Claire to say those things while we were making love, it was quite another for her to actually indulge in a threesome with her female, aristocratic and considerably older employer. But one bridge at a time.\n\nCaroline's breathing had become faster and shallower and I could feel her heartbeat against my chest. She was clearly affected by the idea but how she would respond I couldn't tell.\n\n'I don't know,' she said, at length. I stroked her hair and kissed her lips and she smiled and traced the line of my sternum with a red-tipped finger. 'I'm not against the idea, in principle, in fact it's a very exciting thought. I've never... touched another woman in that way. Some of the older girls at boarding school were at it like knives every night, though I never did. But it has been one of my fantasies over the years.'\n\n'So shall I talk to Claire?'\n\n'I don't know,' she said again. 'In some ways it would be easier if it were just your girlfriend and I didn't know her. The idea of... well of having sex with Claire terrifies me.'\n\n'She's very fond of you. She'd never do anything to hurt or embarrass you.'\n\n'I know, but I would be embarrassed. And I know she's a lovely looking girl and with a great figure and I bet she looks terrific naked and... oh God, Thomas, I want to say yes but I'm frightened.'\n\nIt occurred to me, and not for the first time, that I was entering an emotional minefield and I needed to tread carefully and respect the mores and sensibilities of the two ladies involved in this little rural drama. If it all went tits up, Claire would probably be out of a job and Caroline would be deeply hurt. I was toying with the idea of calling the whole thing off when Caroline raised herself on one elbow and looked down at me.\n\n'Right, I'm a bag of nerves and my stomach is churning but yes. The answer is yes. Talk to Claire. I want this more than I'm frightened of it, I think. She hugged me tightly. 'It will be alright, won't it?'\n\n'It'll be wonderful,' I said, my cock hardening at the thought of being on this bed with Claire and Caroline. Watching them make love. It was a scant half-hour since I'd pumped my load into the Viscountess's anus but now I was rigid again, my glans tender, an angry purple red. 'But right now I've got something to take your mind off things.'\n\nI got to my knees and parted Caroline's legs. Her pussy was still gaping and pink, the pubic hair slick with her secretions and mixed with the lubrication I'd used on her rosebud. I knelt down and entered her and she groaned and wrapped her stockinged legs around mine and I kissed her as I thrust into her and she responded, mashing her lips against mine, pushing her tongue into my mouth, raking her scarlet nails across my back. I flexed as her nails bit into me and pushed harder and she started crying and said: 'I love you!'\n\n'I love you too,' I replied, automatically, although when I thought about it later I realised I probably did love her. But right now I was desperate to have my orgasm; it was maybe my seventh of the weekend and my body was showing some understandable reluctance. I pumped furiously and Caroline had another climax and screamed and writhed beneath me as I staggered past the chequered flag and squirted my final trickle of semen into the Viscountess's cunt.\n\nWe slept like the dead that night, together in her big four-poster bed, not stirring until the sunlight hit the big east facing window and the shadows of the night retreated to their corners. Then it was time for me to leave, before Claire arrived for work.\n\n'I'm not looking forward to seeing her today,' admitted Caroline, sitting in bed with a cup of tea while I pulled my clothes on. 'I mean it'll be a huge elephant in the room, her knowing about us.'\n\n'So the sooner we're all in it together the better,' I smiled.\n\n'I suppose so,' she said, reaching for her cigarettes.\n\n'You're smoking more,' I observed.\n\n'I'm nervous. And don't nag.'\n\n<p align=\"center\">***</p>\n\nThe following Friday I went round to Claire's flat in Bath and she cooked us lamb tagliatelle. She also told me about her week at Baythorpe Manor.\n\n'Talk about awkward. We could hardly make eye contact and that's really not like Caroline, or me. In the end we just tried to avoid each other.'\n\nWe were watching a film and finishing off the bottle of Chianti that we'd started over dinner. My arm was around Claire and she was snuggled up to me, her legs slung over my lap.\n\n'What did she say when you told her about us?'\n\nI thought for a moment: 'she said \"bloody hell\".'\n\nClaire looked at me. 'And what did she say when you told her I knew about the two of you?'\n\n'\"Fuck\".'\n\n'That's what she said, \"fuck\"? Well I've never known her use that word before.'\n\nThe film finished at ten and we watched the news for a bit then I started kissing Claire and cupping her breasts through her blouse and she got up off the settee and tugged me in the direction of the bedroom where we stripped without much ceremony and climbed in under the duvet.\n\nClaire felt warm and firm and rounded in my arms and my desire rose as I kissed her and tweaked her nipples. She cried out as I took one in my mouth and gently bit down on the little rosy nub. My right hand was parting her thighs and exploring her glorious silky black bush, my fingers seeking her labia, pushing the outer lips apart, sliding into her wetness, finding the centre of her pleasure and stroking it with my fingertip. While I gently masturbated her I told her about last Sunday evening and how I'd used the riding crop on her Ladyship and then taken her roughly from behind, and how I'd then told her to strip and had tied her down and fucked her pussy and her mouth and her anus.\n\nClaire gasped, red-faced and aroused. 'You had anal intercourse with the Viscountess? Does she like it?'\n\n'Loves it. She comes when I do it.'\n\nClaire came at that moment as I masturbated her. She said afterwards that it was one of the strongest climaxes she'd ever experienced. As her orgasm shuddered through her I knelt up and slid into her velvet depths and took her slowly but firmly; long, slow, hard thrusts. Withdrawing until my glans almost slid out then sinking all seven inches back in. Claire gasped beneath me, open mouthed and open eyed, her hands on my shoulders, nails digging into my muscles.\n\n'Go on, fuck me you dirty arse-fucking bastard. Give it to me hard!'\n\nI'd never seen Claire so aroused. There would never be a better time.\n\n'I bet you'd like to join Caroline and me in bed, wouldn't you,' I grunted down at her as I thrust into her tight, black-haired cunt. 'I bet you'd like her Ladyship to lick your juicy slit wouldn't you. And then kiss you so you could taste your juices on her lips--'\n\nIt was too much for Claire. She screamed and bucked her hips wildly as her second climax swept over her in a tidal wave of pleasure. I'd been visualising the things I'd been saying and now I exploded inside her, jet after jet of hot spunk pumped into her sopping twat, erotic visions flickering through my brain like sheet lightning.\n\nAfterwards I lay back as Claire mopped herself up with some tissues from the bedside table. Then she rolled over and lay against me, her head on my chest, her raven-black hair tickling my nipple.\n\n'You certainly know how to turn a girl on, Tom. All that stuff about Caroline. Bloody hell! And you really fucked her up the bum, too?'\n\n'Yes. And she's up for a threesome,' I said, quietly.\n\n'You are joking!'\n\n'No, I'm not.'\n\n'With me?'\n\n'With us, yes.'\n\n'You've discussed it!?'\n\n'Briefly. She's never done anything like it before, she's as nervous as anything but she's really, really turned on by the idea.'\n\n'Christ, so am I!'\n\n'Have you ever been with a woman before?' I asked, intensely curious.\n\n'One or two little fumbles. Nothing serious.' She looked up at me. 'So how is this going to work? I mean she's my employer, in case you'd forgotten.'\n\nI'd thought about this quite a lot but now I paused, pretending to consider the matter. 'I think,' I said, slowly, 'that the best way for it to work is if I'm in charge and telling you both what to do. I think that'll be the best way to avoid too much awkwardness.'\n\nClaire laughed. 'And it's the best solution for your male ego, right?'\n\nI laughed too and kissed her mouth. 'Well if you've got a better idea...'\n\nShe was silent for a few minutes. 'No,' she said at last, 'I haven't.'\n\n<p align=\"center\">***</p>\n\nCaroline and I didn't sleep together that next weekend but I did see her on Sunday afternoon at a garden party thrown by the tedious Margery Jameson whom I'd met at Baythorpe Manor the first time I'd been invited there and who now invited me to all her charity events and fundraising campaigns. I usually found an excuse not to go, but I knew the Viscountess would be attending on Sunday so I went and endured Margery's blethering about the Womens' Institute for half an hour before I saw Caroline and excused myself.\n\nMs Jameson's garden was large and parts of it were quite wild so Caroline and I were able to find a bit of peace and quiet on an old wooden bench behind a clump of laurel bushes.\n\n'Don't keep me in suspense,' said Caroline as soon as we'd sat down and she'd lit a cigarette. 'What did she say?'\n\n'Oh, she said the over sixties Bring and Buy was a great success and they're going to hold another one before Christmas.'\n\n'What!? No, not what did Margery say, idiot. What did Claire say?' She laughed and dug me in the ribs.\n\n'Claire is very, very much up for it,' I smiled at her.\n\n'Is she? Oh God, now I'm really nervous.' She drew hard on her cigarette and took the smoke down deep into her lungs. 'How's it going to work?' she asked, echoing Claire. So I told her and she smoked another cigarette and finally relaxed a bit, or at least enough to join the rest of the party.\n\nAs we walked across the lawn to the other guests on the patio I said quietly: 'did you mean what you said the other day, about loving me?'\n\n'Yes,' she said simply. 'Did you mean it too, or was it just a reflex action?'\n\n'No,' I said, I meant it too.'\n\n'What about Claire?' asked Caroline, a touch cattily I fancied. 'Do you love her too?'\n\n'We've only been going out for a few weeks. But yes, I think I could fall in love with her.'\n\nCaroline smiled that lovely wide-mouthed smile. 'Life could get quite complicated for you couldn't it, Thomas darling.'\n\n<p align=\"center\">***</p>\n\nD Day was the following weekend, on the Saturday afternoon. The week inched by, deliberately slowly it seemed. During the day I found it difficult to concentrate at work and found myself staring out of the window, lost in erotic thought. In the evenings I was torn between an intense desire to masturbate and a wish to save it for the weekend. I did order some more stuff from the online sex shop, which I discussed with Claire but not with her Ladyship. It arrived on Friday.\n\nClaire knocked on my door just after midday on the Saturday. It was the end of a hot, dry spell and there were black cumulonimbus clouds hanging over the fields and a distant rumble of thunder, which I tried not to interpret as a bad omen. She was dressed in jeans and a roll-neck sweater but she had an overnight bag with her and she disappeared into my bedroom, emerging half an hour later, transformed. She had made her face up with care and with more than her usual minimal amount of make-up. Her eyes seemed huge within the eyeshadow and liner and her face, with its high cheekbones, looked long, and sensual, framed by her raven-wing hair. Her full lips were a tarty scarlet and she'd painted her fingernails to match. But it was her lingerie that I couldn't take my eyes off: she was wearing black, seamed stockings with a matching suspender belt and black silk french knickers. Her legs were one of her best features and encased in black nylon they looked like the legs of a woman on a Pop-Art poster. A black, lacy bra and black patent high heels completed the picture. She looked divine. She clearly didn't feel one hundred percent comfortable.\n\n'Is this a bit too much do you think?' she asked, doubtfully.\n\n'No way. You look ravishing. Her Ladyship will be drooling over the Axminster.'\n\n'I feel a bit self-conscious. And that's before we've even got there! Will she be dressed in stockings too?'\n\n'Oh yes.'\n\n'And you've talked to her and she wants us to do those things? Spank her and tie her down and everything?'\n\n'Yes,' I said again. 'Relax.' Although I was almost as nervous as Claire. 'Let's have a drink before we go. That'll help.'\n\nI opened a bottle of Merlot and poured two generous glasses and we sat in my tiny sitting room and sipped them in silence. Actually I sipped, Claire gulped, draining her glass in about three mouthfuls. I went to pour her some more.\n\n'I'd better not, I'm driving.'\n\n'I'll drive,' I said, filling her glass, and she gave me a relieved look.\n\nWith the bottle three-quarters empty, we looked at each other, hugged and got into Claire's car for the drive to Baythorpe Manor; Claire was now wearing a black cocktail dress over her stockings. The journey was short and in no time we were standing together under the portico and ringing the bell. Caroline, the Viscountess Baythorpe, answered the door about thirty seconds later. She too was wearing a black cocktail dress and I saw the two ladies eye each other. We exchanged tense hellos and went in and Caroline shut the door and we stood looking at each other for a moment, uncertain what to do.\n\n'Come upstairs,' said Caroline, leading the way. 'I expect that we could all do with a drink. I know I could.' Following her up the wide staircase I could see Claire looking at her Ladyship's legs and rear end. Caroline too had been careful with her make-up, and at fifty-eight it was always going to be more of a challenge than for Claire in her early thirties. But she looked good, exuding a sensual and sexy mature aura, her ash-blonde hair shining, her lips a dark red and her nails a rich plum colour.\n\nInside her rooms she asked what we wanted and Claire opted for gin and tonic. I asked for a whisky and water. There was evidence on the coffee table that Caroline had started the party early: an ashtray with three or four butts and a tumbler half full of a clear liquid and with a slice of lemon. As Caroline put our drinks in front of us I stood and pulled her towards me, roughly, putting my hand behind her head and forcing her mouth against mine. I wanted to start off as I meant the afternoon to progress. Behind me Claire watched silently, wide-eyed. The Viscountess tasted of gin, cigarettes and mouthwash.\n\n'You've been smoking, haven't you?' I said, sternly. It was a bit of a stupid thing to say with the ashtray on the table but it was all part of the game.\n\n'I'm sorry, Thomas, I was nervous.'\n\n'Go and brush your teeth. And bring the handcuffs back with you.'\n\n'Yes,' whispered Caroline, and disappeared through her bedroom door.\n\nI looked around at Claire who had already finished her industrial strength G&amp;T. She smiled a bit uncertainly.\n\n'It's fine,' I reassured her. 'Just go with the flow and follow what I say and do.'\n\nI drank my whisky and the bedroom door opened and Caroline came back in with the pink metal handcuffs and handed them to me.\n\n'Are you going to spank me, in front of Claire?'\n\n'Yes, I am. I told you about the smoking, didn't I? Do you think Claire wants to taste tobacco on your breath when she kisses you?' Caroline gulped as I manacled her hands together in front of her and marched her over to the big sofa in the middle of the room and told her to bend over the back of it.\n\n'Please, Thomas, not in front of Claire,' she whispered as she bent over the sofa back, her legs straight, the seams of her stockings perfectly vertical.\n\nI ignored her again and pulled her black woollen cocktail dress up over her buttocks exposing her silky panties over the black suspender straps. Pulling the panties down over her arse cheeks I motioned to Claire to come and stand next to me.\n\n'That's what an aristocratic backside looks like, Claire. Much the same as yours, isn't it?' I stroked one of the buttocks and Caroline flinched so I brought my hand down in a ringing slap on her bare flesh. The Viscountess squealed but I held her down with one hand on the small of her back and slapped her again, on the same cheek.\n\n'Please stop, Thomas,' she whimpered.\n\nClaire looked at me enquiringly and I grinned. 'Your turn.'\n\nI had expected Claire to deliver a light tap but she surprised me by matching my blows with two of her own of equal power, on the other buttock. We spanked her three or four more times on each cheek. Claire's breath was coming in short gasps and Caroline was squealing and struggling, her buttocks a bright pink, with clear hand marks. I yanked Caroline's panties roughly back up and pulled her upright, gripping her by her upper arm and walking her into her bedroom, Claire behind me. Inside I released the handcuffs and told her to strip to her stockings and garter belt.\n\nClaire had told me that she had never been in Caroline's bedroom, but instead of looking around, her eyes were fixed on her employer as she reluctantly, and with some additional smacks on her bottom, unzipped her dress and pulled it over her head. Claire was transfixed as Caroline unclipped her bra and let her modest breasts swing free before peeling her panties down over her stockinged legs. Then she stood before us, clad only in stockings and suspenders, one arm across her breasts, one hand hiding her bush, staring at the carpet in front of her, the picture of a nervous and subdued lady of the manor, about to be ravished by her staff.\n\nThe bondage straps and buckles were already on the bedposts. Caroline must have fitted them earlier; there was no way she'd leave them in place all week to be discovered by her maid when she cleaned the room.\n\n'Right,' I said briskly to Claire, 'strap her Ladyship down on the bed and make sure she's tightly secured.'\n\nClaire barely hesitated. It was clear that she was very excited. Her pupils were dilated and her breathing rate was heightened; pink spots glowed on her cheeks. She took the arm Caroline was holding in front of her breasts and pulled her to the big four-poster bed with its wine-red drapery. Neither lady said anything as Caroline climbed onto the bed and obediently lay down on her back, one hand still covering her pubic bush. Claire got onto the bed with her and secured straps around her employer's slim ankles before clipping them to the straps on the bedposts. Caroline put up some resistance to stop Claire from pulling her hand from between her legs but it was a token effort and a minute later both the Viscountesses arms were secured above her head and Claire was going round the buckles and pulling each one tight so her Ladyship was spreadeagled on her bed..\n\nI helped Claire off the bed and started to undress her, slowly and tantalisingly, aware of Caroline looking at us, unable to move. I unzipped her dress and let it fall to the floor, rustling over her stockings. She stepped out of it and shed her high-heels and I kissed her and reached around to unclip her bra. Cupping her small, rounded breasts I suckled on one nipple and Claire moaned, crying out as I gently bit down. On the bed Caroline was enthralled, breathing quickly and flexing her thigh muscles as though to stimulate herself.",
        "Leaving Claire's breasts I knelt and pulled her french knickers down before burying my face in her glorious black snatch, running my tongue up her slit, grasping her buttocks and pulling her labia into my face as she held my head and moaned softly.\n\n'Sit down,' I told her, pointing at the bedside chair.\n\nShe sat quietly as I undressed and stood before her naked, moving close so that my erection was in front of her mouth. Leaning forward, she took my engorged shaft in one hand and slid her scarlet lips erotically over my glans. There was a wantonness about her that made me think she was playing to her audience. The thought excited me even more and I glanced at the figure on the bed, who could see everything. Her eyes were wide open and her red lips parted. There was a dab of saliva on her chin and she was breathing in ragged gasps, her chest heaving, her limbs pulling at the restraints.\n\nI let Claire fellate me softly and slowly for a few minutes, her velvet lips sliding over the purple head of my cock, occasionally taking two or three inches of my shaft inside her. Her hand cupped my ball sack, her red nails scratching lightly at the crinkled surface. Then I disengaged and pulled Claire up from the chair, turning her to face it and telling her to bend over. She put her hands on the arms and knelt on the seat of the chair, her glorious butt pointing at me, her silky black pubes visible between her legs. I gripped my cock and parted her bum cheeks, entering her slowly but firmly, again aware of the scrutiny from the bed. Both Claire and Caroline moaned as I slid in; the one from pleasure the other from anticipation.\n\nI fucked Claire with long, deep strokes, hearing the faint slurping noises of our secretions, as I pistoned in and out, and Claire's increasingly loud cries. The intense erotica of our threesome and the way it was working out was all getting a bit too much for me and I could feel an orgasm rising to the surface of my cortex. I was about to stop when I realised Claire was having a climax. She wouldn't normally orgasm so easily in this position, without additional stimulation, and I thought the additional stimulation in this case was her employer strapped to the bed next to her while she was being fucked. I felt her cunt muscles spasm around my cock as I struggled not to blow my load into her.\n\nAfter her climax had subsided I did stop and, pulling Claire up, I kissed her tenderly on her lips and stroked her hair.\n\n'Was that good?' I asked.\n\n'Oh yeah!'\n\n'Now I want you to go and straddle the Viscountess's face because I know she's dying to lick you out and I think it's about time the two of you got up close and intimate.'\n\nAgain, Claire didn't hesitate. She climbed onto the bed and knelt over Caroline's face, one hand grasping one of the bed posts. Then she spread her legs and lowered her herself onto the Viscountess. Caroline lifted her head to meet Claire's cunt and buried her face in her sopping pussy, pushing her tongue deep into Claire's labia, licking upwards to her clit. The effect was electric. Claire threw her head back and gave an animal growl, bucking her hips back and forth, mashing her fanny over her employer's face. Caroline made muffled squealing noises as she slurped her estate manager's juices.\n\nI couldn't take my eyes off them; It was the most erotic thing I'd ever seen. Claire's tits jiggled as she rode Caroline's face. Caroline was straining at the straps, trying to lift herself higher, to get deeper into Claire's cunt.\n\nMy plan was to lick Caroline's pussy while she was eating Claire out but now Claire went off script. Climbing off her employer she walked past me and out of the bedroom to the overnight bags we'd left in the sitting room. Going to mine she unzipped a side pocket and pulled out the strap on dildo and its harness that I'd bought that week. She walked to the bed and clipped the harness around her waist, passing a strap between her legs while Caroline watched mesmerised from the bed. Then she clipped the big black latex dildo, with its simulated glans and veins, in place and climbed onto the bed, kneeling between her Ladyship's legs.\n\nI watched fascinated as Caroline gasped 'oh yes! Yes! Yes!' and Claire guided the tip of the dildo to her employer's cunt and slid the whole eight inches of veined latex inside her. The Viscountess tried to arch her back to meet that first, deep thrust but she'd been strapped down too tightly. Claire paused, with the dildo inside her employer up to its harness, her hands flat on the bed, either side of Caroline's head, looking down on her. And Caroline looked back, her eyes wide, her mouth slightly open, her breathing fast and shallow. As I watched, Claire moved her hips back slowly, withdrawing the phallus a few inches before thrusting it back in, then repeating the movement, building up a steady rhythm, the dildo sliding easily in and out of her Ladyship's cunt, a faint squishing noise discernible over Caroline's groaning.\n\nThen Claire kissed her. Just leaned down, still pumping her hips, and kissed the Viscountess on the lips. I saw Caroline's mouth open to receive Claire's tongue and then they were both working their lips against each other, mashing their mouths together in this final act of intimacy. I just stood there staring, caught between a feeling of redundancy and fascination at this display of raw lesbian passion, Claire thrusting in and out, their mouths locked together. Caroline said afterwards that she had a huge orgasm as her female employee started kissing her but with their mouths locked together and her Ladyship retrained so tightly, it wasn't obvious.\n\nBut I wasn't to be left out for long. Claire broke the kiss and dismounted the Viscountess, climbing off the bed, the dildo waving in the air, and kissing me deeply, her tongue flicking into my mouth. I could smell Caroline's scent on her, almost taste that last cigarette she'd smoked before we arrived.\n\nI put my arms around Claire and crushed her to me, feeling her nipples against my chest. We kissed for long moments, both highly aroused, my erection pressed against the harness, feeling the dildo, slick with cunt juices, against my thigh. Eventually Claire broke the kiss and smiled slowly at me.\n\n'I think it's about time her Ladyship had a double penetration.'\n\nOn the bed Caroline looked at us, her eyes still wide. 'You mustn't both go in me at the same time. You'll hurt me.'\n\nI ignored her and smiled back at Claire. 'Yes, an excellent suggestion.' There was some feeble struggling from the figure on the bed. 'Which hole do you want?' I felt lightheaded at the thought of what was coming.\n\n'I'd love to fuck her bum,' said Claire, gesturing down at the dildo, ''but I might hurt her with this thing. You do her arse and I'll fuck her pussy. Claire was really wired; I'd never heard her use language like this before.\n\n'Right, unstrap her,' I told Claire, trying to reassert my authority. She obeyed me and loosened all the Viscountess's straps and unclipped her ankle and wrist restraints. Caroline lay on the bed limp, still spreadeagled, not moving. Claire lay down next to her employer and I crawled onto the bed and grabbed a handful of Caroline's Ash blonde hair, forcing her to sit upright.\n\n'Ouch! You're hurting me, you bastard!'\n\nI rolled her smartly over onto her front and spanked her arse a few times. 'Don't talk to me like that! Now get up and get Claire's cock inside you.'\n\nShe rose slowly and lethargically and swung a stockinged leg over Claire's supine figure. Then, grasping the latex prick she spread her thighs and lowered herself down onto it, guiding the bulbous tip to her sopping slit, easing herself down and letting go of the phallus, taking it all inside her.\n\n'Now bend over,' I ordered her. She complied, supporting herself on her arms, a hand either side of Claire's head. Claire took this opportunity to cup the Viscountess's breasts, her thumbs circling the stiff nipples. Caroline groaned again as Claire raised her head and took one of the little nubs in her mouth, sucking and licking.\n\nI leaned over to the bedside table and grabbed the bottle of lube. Squeezing a dollop onto my fingers I smeared it around Caroline's little crinkled and puckered anus.\n\n'Not both of you together, please Thomas. You'll damage me.'\n\nI ignored this again; she hadn't mentioned the safety word and we all knew this was part of the game, feigning reluctance to enhance her arousal, bringing herself to a fever pitch of excitement. Underneath her, Claire was now biting gently on Caroline's nipples making her squeal and wriggle, impaled on the big latex penis. She squealed louder as I slid first one, then two fingers into her rectum, pushing in to the second knuckle, working her sphincter open. Claire's hands were on Caroline's hips, her red-tipped fingers playing with her suspenders, sliding her fingers under the straps. It was supremely erotic and I breathed deeply to try and calm my racing heart.\n\nKneeling between Claire's legs I put one hand on Caroline's back, forcing her down onto Claire and used the other hand to guide my dripping and iron-hard erection to the Viscountess's arse. She froze as the tip touched her rosebud and I started rubbing my swollen glans around her sphincter, pushing gently.\n\n'Please don't,' she gasped as I increased the pressure. Then she squealed again as Claire bit down on her nipple and I pushed harder and felt her muscle ring start to open and allow me in, the sphincter stretching wide to accommodate the thickest part of my cock. With my cock head in her anus I paused to let her get used to my entry. Then I continued, slowly, firmly, millimetre by millimetre, feeling the big latex dildo through her rectal wall. Then I was in, right in, up to my pubic bone and Caroline was moaning softly and rocking backwards and forwards, feeling the two intrusions move inside her as she moved back and forth. I let her ride us, her moans getting louder, Claire still sucking and biting at her tits. The Viscountess came explosively, shouting obscenities and ramming her arse backwards and forwards, her clit mashed against Claire's pubic mound. Her climax seemed to go on and on, her anal sphincter spasming around my shaft. Then it was over and she collapsed onto Claire, who put her arms around her and kissed her cheeks and stoked her hair. I could have dismounted then but I wanted an orgasm too. Caroline groaned as I started fucking her bum in earnest, pulling out six inches or so of rigid meat and thrusting it back in, looking down at my cock going in and out, her arsehole stretched obscenely around my girth.\n\nWith this universe of stimulation and eroticism I didn't last long, unsurprisingly. Within a couple of minutes the tingling in my cock and balls was flickering up my spinal column to my brain and bringing waves of pleasure crashing through my cortex. I pumped and pumped, jets of hot spunk searing into Caroline's rectum, adding to the lubrication. Then I was done.\n\nI pulled out gently, trailing a string of spunk which swung down onto Claire's thigh and stocking top. Caroline climbed off Claire, the big phallus flopping out of her cunt onto Claire's stomach, semen still leaking from her pucker. Claire got off the bed and took the harness off and I lay down and opened my arms and Caroline came in one side and Claire the other and we lay there on the big four-poster, awestruck and silent about what we'd just done together. The Viscountess was the first to speak.\n\n'Thank you both, so much. Words can hardly describe how you made me feel.' She started crying and I held her tight and kissed her and whispered to her that I loved her and hoped Claire wouldn't hear.\n\nWe lay there in spent ecstasy for nearly an hour, dozing and hugging each other until Caroline had to get up to use the toilet. She disappeared then and came back with drinks and her cigarettes and we drank and hugged some more and life was very, very good.\n\nSucking the smoke of her first cigarette deep into her lungs, the Viscountess looked at us, her mascara a mess from her tears and her lipstick smeared by Claire's mouth.\n\n'I want this to happen again,' she said.\n\n'So do I,' smiled Claire. 'Very much. And maybe,' she looked down at her hands, 'maybe one time it could be me that was tied down on the bed.'\n\nLater on we showered and went down to the kitchen to forage for some supper and afterwards we sprawled on the settee in front of the television. We didn't say much, but not out of awkwardness; we were all, I think, replaying the afternoon's bedroom drama in our heads. About eleven o'clock the Viscountess yawned and declared that she was ready for bed and Claire and I followed her into the bedroom. Then it was a little bit awkward again because none of us knew whether we were going to have sex again. In fact we didn't. We were all exhausted, physically and emotionally, and moments after turning the lights out all three of us were in a deep sleep, Claire to my left and Caroline to my right.\n\n<p align=\"center\">***</p>\n\nI was woken by the sound of a mug of tea being put on the bedside table next to me and, opening my eyes, I saw Claire, fully dressed, smiling down at me. In the bed beside me Caroline was struggling to sit up, bleary eyed and disorientated.\n\n'What time is it?' I asked.\n\n'Just after seven. And I'm going to have to leave you two lovebirds and get back to my flat. My mother's coming over later this morning and she'll have a fit if she sees the state of the place.'\n\nShe bent over and kissed me on the lips. 'I'll see you on Wednesday.' Then she went round to the other side of the bed. 'And I'll see you tomorrow morning, Caroline.' She leaned over to kiss the Viscountess who surprised me by taking Claire's head in both her hands and kissing her hard and passionately for about ten seconds. Claire was smiling as she broke the kiss, evidently not bothered by her Ladyship's morning breath. Then she was gone and Caroline and I were looking at each other.\n\nThen I was reaching for the Viscountess, my penis hardening and she was reaching for me. We kissed and I could taste the sourness of her breath but my lust for her was overwhelming and I slid my tongue between her parted lips regardless. She lay back down and I lay down with her, cupping a breast and circling the nipple with my thumb. Caroline sighed as I traced her chest and stomach, my hand moving down to part her legs, cupping her pubic mound and squeezing gently, massaging her labia through her bush. She wrapped her arms around me and kissed me deeply, mouth open, tongue inside me, sucking my lips, tasting my saliva. She sighed again as my forefinger slid between her outer lips to explore the rising wetness inside. Then I was on my knees and she was lifting and opening her legs wide in invitation and I was pushing my cockhead against her, feeling her pubic hair on my glans and a slight resistance before I slid in up to my balls and she was writhing beneath me and urging me on with thrusts of her hips.\n\nI took her slowly that Sunday morning, enjoying the sensation of my cock inside her velvet cunt and the sight of her beneath me, hair in sleepy disarray and face bare of make-up, pale and lined but beautiful, to me.\n\n'What did you think of yesterday?' I teased her as I slid in and out.\n\n'You know what I thought.'\n\n'Tell me,' I pressed.\n\nEven during our act of sexual intercourse, the Viscountess went visibly pink with emotion or embarrassment. 'It was the most exciting thing I've ever done,' she said, simply. 'Nothing else has ever come close. I've imagined, fantasised, I suppose, about what it would be like to be touched by another woman, to touch another woman, and taste her... But the reality was so much more, so much stronger than I'd imagined.'\n\nThis admission of arousal was having a similar effect on me but I made no effort to stop. Instead I increased the speed and power of my thrusts and Caroline responded by locking her legs over mine and bucking her hips to meet my thrusts. We came at the same time, as far as I could tell. A welter of thrusting and gasping and flesh against flesh as I shot my spunk into her titled cunt and collapsed over her, breathing heavily.\n\nBy that time the tea that Claire had made was cold, but I drank it anyway while Caroline mopped up the trickle of spunk leaking out of her with a handful of bedside tissues.\n\n'What did you think of Claire suggesting that she should take the submissive role one day?' I asked.\n\n'Oh God, yes. I'd love to try that. Can we do that next time do you think?'\n\n'Yes, if Claire agrees...'\n\nCaroline rolled over towards me and started kissing me, her hand, with its plum-coloured nails, stroking my chest, and I wondered if she wanted round two already.\n\n'Thing is, Thomas, I'd really like to try taking the dominant role, like Claire did yesterday.\n\n<p align=\"center\">***</p>\n\nI went over to Claire's flat on Wednesday -- it was becoming a routine, but not dulled by familiarity.\n\n'How was it going to work on Monday?' I asked, uncorking a chilled bottle of Chablis.\n\n'Interesting,' replied Claire, getting a couple of glasses from the cupboard. 'I was nervous as hell but Caroline was just the same as always -- friendly, warm, a bit reserved.'\n\n'That aristocratic breeding, I suppose,' I said.\n\n'Until,' continued Claire, 'she and I were alone in my office. Then she hugged me and said how wonderful it had been on Saturday and how special you and I had made her feel and how much she was looking forward to next weekend. Did we say we'd do it again next weekend?'\n\n'Well Caroline and I discussed it on Sunday. I said I'd talk to you about it.'\n\n'Sounds like it's a done deal.'\n\n'Is that ok?' I asked, aware that I had glibly assured Caroline that it would be ok.\n\n'Of course it's ok. I can't wait!'\n\nI poured the wine and we sat down on Claire's settee and clinked our glasses together.\n\n'And how did it feel,' I asked, 'with another woman?'\n\n'Oh dear. You men are so predictable!' She smiled to take any sting out her remark. 'Yes, Tom, it was highly arousing, very, very exciting. I said I'd had a few fumbles in the past but that was just a bit of kissing and cuddling. Nothing like getting licked out by another woman or fucking them with a strap-on dildo. And the fact that it was my employer just made it better. The even more forbidden fruit I suppose. And God! Didn't she like it up her arse!'\n\n'Yes,' I agreed. 'And this weekend she suggested that she take the dominant role and you take the submissive one. How would you feel about that?'\n\nClaire was silent for a few minutes, sipping her wine. 'Why not?' she said, at length. 'We've got that safety word, and you're there if it gets out of hand. Not that it ever would -- Caroline's not like that.'\n\nI grinned. 'I suspect we're beginning to see a side of the Viscountess that nobody's ever seen before. But no, she'd never do anything to hurt you.'\n\n'I wonder what she's got in mind,' said Claire, getting up and heading for the bedroom.\n\nI followed her in and we undressed each other, with much kissing and caressing. When she was naked I sat her on the edge of the bed and knelt before her. She leaned back on her elbows and lifted her legs, putting her feet on the edge of the bed and exposing her raven-black bush to me with its golden labia and hint of pink inside. I put my hands on the backs of her thighs and pushed, tilting her cunt up to my tongue, and started licking her in long strokes, starting from her perineum with its fine covering of silky hair and ending at her clitoris in its little hood at the top of her inner labia. Claire grabbed handfuls of the duvet and moaned as my tongue penetrated her vagina, licking up the clear, sweet, musky secretions, burying my nose in her sopping pussy, inhaling her scent. Then up to her clit again, flicking the tip of my tongue over it and sucking it into my mouth. Claire fell back on the bed with an animal growl and grabbed my hair with both hands, forcing my face into her cunt. Risking suffocation I licked and sucked her little nub until her first climax washed over her and she cried out and pushed my head away. I got up and hoisted her unceremoniously into the centre of the bed then sank my rigid meat inside her glorious black-haired twat and started fucking her with long, solid strokes. She urged me on, her hands on my hips, nails digging into my flesh.",
        "'Turn over,' I gasped, and she complied, kneeling before me, her buttocks milky-white, her sopping pubic bush visible between them. I knelt behind her and, taking my cock in one hand, found the entrance to her vagina and thrust in, the whole seven inches. Claire groaned deeply and pushed her hips back to meet my thrusts. I held her hips, using my thumbs to part her buttocks, exposing her anus, with its circle of wispy black hair; the only girl I'd ever known with a hairy arse! I'd never tried to penetrate Claire's rectum. Wasn't sure if she was up for it. But it occurred to me now that it could well be on the Viscountess's agenda. The thought excited me further and I came suddenly, vision blurring, senses dulling, hot spunk pumping through my prick into Claire's cunt.\n\nMy juices spent, my cock soft, I helped Claire to her second orgasm by sucking and biting her nipples while she masturbated herself. Her climax seemed to go on a long time and afterwards she flopped back on the bed, her head turning to me.\n\n'I was thinking about next Saturday as I came.'\n\n'Me too,' I admitted.\n\n<p align=\"center\">***</p>\n\nThis time Saturday seemed to come around very quickly. As before, Claire came to my cottage first and changed into stockings and suspenders and a tight dress, dark red this time. As before I opened a bottle of red wine and Claire had two big glasses to settle her nerves. And as before I drove us over to Baythorpe Manor in her car and we rang the doorbell and waited.\n\nThe Viscountess opened the door and, as luck would have it, she was wearing a dark red dress too and I could see the two ladies eyeing each other again.\n\n'Come in,' said Caroline, stepping to one side to let us past. 'Nice dress,' she said as Claire passed her.\n\n'Thank you, your Ladyship.' Claire always called Caroline by her given name. Clearly the game had started.\n\nWe went up to Caroline's private rooms where she ordered Claire to pour drinks. Claire obeyed and set the drinks down on the coffee table in front of the settee. We were all still standing.\n\n'Mmm,' Caroline examined Claire in detail, looking her up and down. 'You look good today. Not too tarty.' She reached out and, taking her upper arm, pulled Claire towards her. She examined Claire's face close up, stroking her hair. Then, suddenly, she grabbed a handful of her black hair and jerked Claire's head back, causing her to cry out. 'Yes, I think we're going to have a lot of fun today, the three of us.' She pulled Claire's head towards her and kissed her, thrusting her tongue between her employee's unresisting lips.\n\n'Now get that dress off. And your bra.'\n\nShowing some signs of reluctance, Claire unzipped the red dress and let it fall to the floor. She picked it up and folded it and then hesitated.\n\n'And the bra, I said,' snapped Caroline.\n\nClaire reached behind and unhooked her brassiere then shrugged it off, exposing her pert, upturned breasts, the nipples deep pink and hard.\n\n'Right, let's have a drink.'\n\nWe all sat down, Claire half naked and embarrassed, or excited. Her face was flushed and she was staring at the carpet. After a few minutes Caroline ordered Claire to get refills. 'And while you're up you can get the handcuffs from the bedroom.'\n\n'Why?' asked Claire, softly. 'I haven't done anything wrong, your Ladyship.'\n\n'I'll decide what's right and wrong. Now get the handcuffs!' Claire disappeared into the bedroom and Caroline winked at me. 'How am I doing so far?'\n\nClaire came back in with the pink metal cuffs, which Caroline fastened around her wrists. 'Now stand there while Thomas and I finish our drinks.' Claire stood silently, looking at the floor, or maybe the handcuffs. Draining the last of her glass Caroline stood and regarded her employee. Then she took her by the upper arm again and marched her around behind the settee, their high heels clacking on the wooden floorboards.\n\n'Bend over,' she ordered, then reinforced the order by forcing Claire over with a hand on her shoulder. Claire bent over the high settee back, her legs straight, her backside pointing at the ceiling. A picture of humiliation. 'Now you're going to find out what it feels like to be spanked.' The Viscountess yanked down Claire's panties exposing her bum cheeks with their black suspenders and buckles. She positioned herself to one side and started stroking Claire's left buttock, building up the tension. Claire started whining softly and Caroline told her to shut up. 'I haven't started yet.'\n\nThen she slapped Claire, hard. The noise was loud, shocking and Claire squealed in what sounded like real pain. A second slap followed, like a rifle shot and Claire cried out again. 'That hurt, you bitch!'\n\n'Don't you speak to me like that young lady.' Caroline's hand rose again and she spanked the other buttock once, twice, three times. Both Claire's cheeks were now bright pink but Caroline carried on, administering another four or five smacks before pausing and caressing Claire's tingling flesh.\n\nI sat in silence as Caroline stroked her employee's arse cheeks and Claire whimpered quietly. Then, taking up a cushion from the settee and placing it on the floor, Caroline knelt between Claire's legs and used her hands to part her bum cheeks. She leaned forward and started licking, but not Claire's vagina, her target was higher up, more exposed. The Viscountess was licking Claire's anus. I watched in fascination as she rimmed the little crinkled rosebud, spreading her spit around it before pushing the tip of her tongue inside. In and out. In and out, then rimming again, plastering the fine black hairs down with her saliva. Then she stood up.\n\n'Get up,' she told Claire, helping her upright. She took a clump of Claire's hair in her hand again and kissed her savagely, her tongue, so recently in Claire's arse, now pushing into her mouth. I half expected Claire to resist but she didn't, she kissed Caroline back, their mouths mashed together, spit leaking down their chins. I was dry-mouthed and amazed by what was going on in front of me. My penis was iron-hard and I could feel it leaking into my underpants.\n\n'Take her into the bedroom and strap her down,' Caroline told me.\n\nI walked Claire through into the bedroom, leaving the Viscountess behind in her sitting room. 'Are you ok?' I whispered as we approached the bed.\n\n'Very ok. Although she didn't half wallop me!'\n\nThen Caroline was in the bedroom with us and I concentrated on getting Claire onto the big four-poster bed and securing her wrists and ankles to the bedposts, pulling them tight so that her freedom of movement was practically zero.\n\n'Now unzip me, Thomas.'\n\nCaroline had certainly got well and truly into the role of the dominant bitch with her two sexual playthings. Scrambling off the bed I did as she asked and she let the dress fall to the bedroom floor and stepped out of it.\n\n'Now my bra and panties.'\n\nI unhooked her bra and took it off, then I knelt and pulled her french knickers down over her stockings. Her cunt was directly in front of my face and I leaned forward to kiss and lick it. Caroline put her hand on the back of my head and pushed my face into her snatch, flexing her hips and rubbing her labia over my mouth and nose.\n\n'Does it taste nice, Thomas? As nice as Claire's?'\n\nI couldn't answer, having a mouthful of her cunt lips but it was a rhetorical question anyway. A few seconds later she thrust my head aside and told me to fetch the strap on dildo; Claire watched silently from the bed as I went to her Ladyship's dresser and took out the harness and the big, black, latex penis.\n\n'Put it on for me,' she ordered.\n\nI lay the harness on the floor and she stepped into it. Pulling it up over her stockings I slipped the strap between her legs and clipped the belt in place. The latex dildo slotted into its flange and there stood the Viscountess, in stockings and suspenders, a big black cock protruding from her loins. I expected Caroline to get onto the bed, but she surprised me by going to the table by the window and picking up her cigarettes and lighter. Sitting down in the chair by the bed she lit up and inhaled deeply, crossing her black stocking clad legs, the dildo sticking straight up.\n\n'Now lick Claire's pussy and tell me who tastes the sweetest.'\n\nShe continued smoking as I knelt between her estate manager's legs and started eating her cunt. Long, hungry strokes, sucking up as much juice as I could, slurping her secretions down, aching for some release myself, my penis an iron pillar between my legs. Claire responded by trying to buck her hips to meet my tongue but all she could do was to flex her thigh muscles. She threw her head back and panted and gasped as my tongue found her clitoris and my forefinger slid into her cunt hole. Sensing her imminent climax I took my lubricated finger from her cunt and slid it into her anus, right up to the second knuckle. She screamed as she came and shook her head from side to side.\n\nCaroline watched and smoked. 'Now fuck her. But don't come yet.'\n\nI didn't need a second invitation. Getting up on my knees I pushed my whole length in and started screwing Claire with long, hard thrusts, leaning down to suck and bite her nipples. Claire's face was bright red and tears of passion were running down her cheeks.\n\n'Fuck me, fuck me. Fill me up with your spunk! She screamed as I pumped into her.\n\nBy the bed, Caroline ground out her cigarette and stood up. 'Ok, my turn.' I dismounted Claire, reluctantly, allowing Caroline to take my place. 'Put your cock in her mouth while I fuck her.' The Viscountess's language had descended into the gutter but the cut-glass accent still remained, adding an extra piquancy to the expletives.\n\nI straddled Claire's head and she raised her mouth and took my cockhead inside her, masturbating me with her lips with short, sharp motions, sucking at the engorged tip. Behind me there was some grunting then Claire gagged as her employer thrust the big dildo into her sopping twat. I could hear the liquid noises as the latex went in and out and Caroline's rasping breaths. Too much smoking, I thought, inconsequentially. She wouldn't last long. I was right, but Caroline had other ideas. Withdrawing she told me to go to the drawer in the dresser and fetch the tube of lubrication.\n\n'What are you going to do to me?' Claire's voice was unsteady.\n\n'I think it's time you experienced the delights of a double penetration, like you both did to me last Saturday. And I think you're right, Claire, the strap on is a bit big for your arse, at least for the first time...'\n\n'Oh Christ,' said Claire. 'Don't hurt me!'\n\nI returned with the tube of jelly and was told to unstrap Claire. 'Now turn her over and get some of that lube up her arsehole. Claire rolled over onto her stomach. I unscrewed the cap of the tube and squeezed a big dollop onto my fingers, spreading it around the crinkled little pucker with its fringe of hair. Working the jelly in I slipped first one finger into her rectum then two, gently sliding them right in while Claire gripped the duvet in both hands and stifled a scream.\n\n'That's enough,' ordered the Viscountess. 'Now lie on your back, Thomas, so Claire can straddle you.' I lay down and Claire swung a leg over my torso. 'No, facing me.' Claire turned around and straddled me again. 'Good. Now lower yourself onto Thomas's penis.'\n\n'It'll hurt too much,' said Claire, quietly. 'He's too big.'\n\n'You didn't complain when he put it up my bum on Saturday. Just get on with it.'\n\nClaire reached between her legs and grasped the shaft of my cock, lowering herself and guiding me to her most private and tightest of holes. She flinched as my glans brushed her anus then, seeming to accept the inevitable, she lowered herself further, pressing the end of my cock into her rosebud. I felt the pressure of her pushing down on my cock and the shaft was starting to bend when her sphincter suddenly opened and the head of my cock popped in. It obviously hurt Claire and she cried out in pain. Caroline moved to hold her, putting her arms around Claire and stroking her face and hair.\n\n'Has it started to go in?' she asked. Claire nodded, dumbly. 'Good, then just relax. The hard bit's over.\n\nI felt her muscle ring slide down over the widest part of my glans and slowly, slowly down my shaft. The feeling was unimaginable. Super erotic. My stomach was churning with excitement. He rectum felt tight and red hot and, at the same time, past the constricting sphincter, soft and open, lightly enveloping my erection.\n\n'Now lean back,' said Caroline. I supported Claire's shoulders as she leaned back, bracing herself on her arms. The Viscountess was fascinated as Claire's anus, with my cock buried deep inside, was revealed to her. 'God, it's right in! How does it feel, Claire, darling?'\n\nClaire's breathing, which was ragged and uneven as she was inserting my cock into her anus, was now slow and even. 'It hurt, but just the first bit. It feels ok now. More than ok. Very big and tight and... erotic. Really erotic.'\n\n'Now I'm going to make it feel even better.' Caroline knelt down and buried her face in Claire's cunt, parting her labia with her tongue, seeking the pink flesh inside, lapping up the clear, musky fluid. Occasionally I felt Caroline's tongue stray lower and touch the root of my penis and lick around Claire's obscenely stretched sphincter. I began thrusting, slowly and gently and Claire helped by riding me up and down, fucking my cock into her arse and rubbing her slit against the Viscountess's face. I reached around and took Claire's nipples between my fingers and thumbs and squeezed hard. It was all too much stimulation and she climaxed again and I felt her arse ring spasm and that was it for me as an orgasm crashed through my body and I pumped jet after jet of hot spunk into Claire's anus.\n\nThen it was over. Caroline helped a limp and sated Claire off my cock and we all got off the bed and Claire and I went into the bathroom to wash and Caroline took off the strap on and went to fetch a bottle of champagne. And afterwards we lay on the bed and drank a vintage Bollinger and we were happy and relaxed and life was still very, very good.\n\n<p align=\"center\">Epilogue</p>\n\nThat's about the end of the story of me and Viscountess Baythorpe and Claire Downing, which all started with that chance encounter in a field entrance about three years ago, now.\n\nOf course, a lot has changed since then but one thing that's stayed the same is our Saturday afternoon threesome. It is simply indescribably good, and we all take turns at being the dominant one. But those Saturday afternoons are numbered because Claire, who's now Claire Bailey, is pregnant with our first child.\n\nWe got married about a year after the events related in this series of stories. As a wedding present Viscountess Baythorpe gifted us the lodge house to live in. She also changed her will so that Claire and I will inherit the lot; the house, the grounds and about fifty mill in equities. Viscount Baythorpe, on his sheep station in Australia, isn't going to be too happy when he finds out but c'est la vie. Claire has sold her flat in Bath and I've rented out my cottage on the edge of the woods. I did finally get around to finishing the refurbishment, despite all that sex!\n\nCaroline has had a profound impact on my life and on Claire's. We both love her very deeply and will name our child after her providing it's a girl of course; we're still very traditional out in the countryside -- in some ways.\n\n<p align=\"center\">The End</p>"
    ],
    "authorname": "Sylviafan",
    "tags": [
        "mature",
        "stockings",
        "rimming",
        "anal",
        "oral",
        "threesome",
        "strap on"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-lady-of-the-manor-ch-03"
}