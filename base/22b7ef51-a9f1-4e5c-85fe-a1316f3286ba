{
    "title": "Meara and Oakley Ch. 05",
    "pages": [
        "It's 10 o'clock in the morning and I'm up making breakfast.\n\nTwo years into our marriage, I stopped cooking for Xavier. Which was a pretty big deal, considering I come from the type of family where food equals love. Or, at the very least, affection. \n\nXavier never even noticed. \n\nBut, this morning, in spite of the previous long day and night, I'm up and at 'em, tearing up the kitchen in an effort to make us the best damn breakfast Oakley has ever tasted.\n\nHe appears just as I've finished pouring our coffee, completely dressed, save for his button-down which hangs loosely from his hand. He's got his boots on and laced up. The sight of those gives me pause. Causes the smile that had been plastered across my face to falter.\n\n\"You made breakfast,\" he says as he saunters into the room. His eyes move over the place settings, and the matching plates piled high with pancakes, sausage, fried potatoes and scrambled eggs. \n\nI swallow around the sudden lump of emotion which has risen in my throat. I didn't think he'd be ready to go so soon. \n\nMy feelings probably read on my face because he curls an arm around my waist and pulls me close.\n\n\"You look like you swallowed something sour. What's wrong?\" \n\nThe tip of his nose grazes my cheek, my ear, igniting a line of heat directly to my cunt that's in complete opposition with what I'm feeling.\n\n\"You look like you're on your way out the door.\" My voice is soft. My fingers curl uselessly against his chest. \n\n\"I am. I've gotta get back. There's a few things I have to take care of before tonight.\"\n\nI don't know why I'm acting so weird. The guy does have a life outside of here. I can't expect him to lounge around with me all day. Once again, reality smacks me in the face. \n\nI am sad. That's the emotion slithering around inside my chest. It's been so long since I've felt it, I don't immediately recognize the heavy weight of it. \n\nI don't like it. Sure, Oakley had taken a big step in coming to my parents party last night, but did it really make that much of a difference? It doesn't necessarily make us a couple. Right...?\n\nI pull away from him, my head bowed to hide my face, but he drops the shirt and uses both hands to pull me back in.\n\n\"Aren't you gonna ask me what's happening tonight, Meara?\"\n\nI don't like his light tone. I don't like that he's making me feel like a love-sick cunt. All I want to do is trash all this food and crawl back into my bed. \n\nGod, I'm such an idiot.\n\n\"Meara?\"\n\n\"Nah. Whatever it is, you have fun, ok?\" My voice sounds thick and strange to my own ears.\n\nI twist in his grasp, needing to put some distance between us, and he simply laughs. My eyes shoot up to his face. If this fucker is laughing at me, I will scratch his eyes out.\n\n\"You're so damned moody,\" he says, smiling, eyes bright in the rays of sunlight filling up the kitchen.\n\n\"Did you just call me 'moody'?\" Rage spikes through me. It snaps sharply along my spine.\n\n\"I did.\" \n\nHe's taunting me. Teasing me. In this moment I very much prefer dark and brooding Oakley. That asshole knew how to keep his mouth shut at least.\n\n\"Listen here, fuck face-\" I begin, but whatever I am about to say is cut off by Oakley's lips on mine. I'd like to say I struggled. I do not. I open immediately, moaning at the warm, wet taste of him, and the thick, dominating slide of his tongue. I moan helplessly, wantonly, because, damn, the man can kiss, and arch against him. \n\n\"That's more like it,\" he says when he pulls away. I've softened considerably. The cheat.\n\n\"Dick.\"\n\n\"Mmhmm,\" he grumbles, pushing said appendage against my hip. He's already rock hard and my fingers ache to curl around it. \n\nHe moves us backward and uses strong arms to cage me in against the counter. He bends low. Forces me to meet his gaze. His hair shifts around his shoulders.\n\n\"Now that I have your attention,\" he drawls. The humor bleeds from his face slowly. He's all serious now, and I don't know what to make of it.\n\n\"My brother wants to meet you.\"\n\nMy heart thumps solidly at his words, kicking and knocking wildly behind the bars of my ribcage. I don't know if it's excitement or apprehension. Can't really tell the difference. And the grave look on Oakley's face isn't helping me decide between the two. \n\n\"I don't... Is that something...you want?\" I ask.\n\nHe licks his lips and I try to concentrate on what's going on rather than the lingering taste of him on my tongue. He seems so uncertain right now. This is reality. This is us outside of quiet nights and cold beers. Sex doesn't seem to be an adequate buffer any longer.\n\n\"I...\" he begins, his eyes cutting away briefly before coming back to me. \"There's a lot you don't know about me. I just don't want to put you in an uncomfortable position. But,\" he pauses. Slicks his thumb across my bottom lip. \"If we're doing the whole family meet-and-greet thing, then... My brother is someone I'd like you to meet.\"\n\nI slip my hands along the bare skin of his forearms. \n\n\"Forgive me if I sound like an asshole, but, you don't seem so sure about that.\"\n\nHe sighs. \"I like the way you look at me, Meara. I don't want any of that to change.\"\n\nFucking riddles.\n\n\"Why would it?\"\n\nHe looks as if he's about to say something, but then decides against it. He dips his head for another kiss, this one slow and easy as if he's savoring it, then steps back, putting a bit of distance between us. \n\n\"Come out with me tonight and then we can talk.\"\n\nI'm used to Mysterious Mr. Oakley. I know he would never put me in a position where I would feel unsafe. I'm okay with whatever's beyond that. So, I nod, using all my willpower to keep my smile in check. I'm actually pretty excited to learn more about this man.\n\nHe turns away to grab his shirt and I lift my foot to nudge his leg while he puts it on. \n\n\"I slaved over a hot stove all morning to make you breakfast and you're slinking out on me.\"\n\nHe scoffs. \"Two things: I don't 'slink', and I promise to spend a couple hours making it up to you.\"\n\nI shouldn't cream as much as I am over those words. \n\n\"Walk me out.\"\n\nIt's not an order, but I salute him before sliding past him and leading us to the front door. \n\nOnce outside, he brings me in close. His lips slide along the curve of my jaw and I'm tempted to say 'Fuck it' and beg him to stay. \n\n\"What should I wear tonight?\"\n\nHe chuckles. Pats my hip with his left hand.\n\n\"That's a trick question, right?\"\n\nI laugh, throwing my head back and pressing my body firmly against his.\n\n\"Only if you answer wrong.\"\n\nHe rolls his eyes. \"Wear something comfortable.\"\n\nHis hair shifts over my hand where it rests on his shoulder. I turn it and allow the silken strands to sift across my open palm. He smells like my soap. My shampoo. I love it. \n\nFrom my peripheral vision, I'm aware of a car slowing down in front of my house. I think nothing of it until said vehicle comes to a complete stop and it's engine is cut. The air seems quieter now that the engine has ceased it growling.\n\nI turn my head to look at it more fully. \n\nThe car doesn't look familiar. It's all black, the tint on the windows so dark I can't make out who's inside. But I don't have to guess for long. \n\nAs if we were in a scene in a movie, the drivers' door opens and I think if I were capable, I'd probably shit a whole entire brick. \n\nWhy the fuck can't I just have one single moment of happiness and peace? \n\n*****\n\nBecause when it rains, it pours.\n\nBecause I did something to someone in a previous life and karma is coming back to bite me in the ass.\n\nBecause the Fates truly hate me.\n\nBecause I can't have nice things.\n\nWhatever the reason, any of them would explain why Xavier Tiller is high-stepping his happy ass up my front walk.\n\nI don't even know what to say. Can't find the proper words to encompass every emotion running through me at the moment.\n\n\"Hey, babe. Miss me?\" \n\nI can't see his eyes behind the impossibly dark tint of his sunglasses, but I know he's leering at me. \n\nThe right words finally come shooting out of my mouth.\n\n\"What the fuck are you doing here, Xavier?\"\n\nOakley tenses in my arms, his entire body going rigid and on high-alert. \n\nXavier is practically pouting and I hate that I used to find that shit so endearing.\n\n\"Seriously, Meara? Is that necessary?\"\n\nI slip out of Oakley's grasp and move to the top of the stairs, halting any forward progression Xavier had intended to make. My stomach feels tight. There's a pulse beating out a staccato rhythm above my left eyebrow. \n\n\"What do you want, Xavier?\"\n\nHe slips his sunglasses off and tucks them into the collar of his shirt. His dark eyes meet mine. There's a sly look about them. He glances at Oakley, then back at me.\n\n\"I've been calling you.\"\n\nI lift my hands in an open gesture. \"I would have answered if I wanted to. Obviously, I didn't want to. Again, what are you doing here?\"\n\nOakley must make some movement behind me because Xavier's gaze flicks to him, his face scrunching up as if he's smelled something foul.\n\n\"This your new guard dog?\"\n\nI hate him. I hate him so much. I have no clue what I had ever seen in him. The sight of him brings about a seething rage inside me.\n\n\"Maybe,\" I say. \"Want me to sic him on you?\"\n\nXavier scoffs and rolls his eyes.\n\n\"Did you get the flowers?\"\n\nFinally, Oakley speaks up, his voice low and underscored with a sort of malice that both scares and excites me. \"She did. They're dead.\"\n\nI want to laugh. I want even more for Xavier to be gone. I cannot possibly fathom why he would make a two hour drive to come see me when I've made it perfectly clear that I never want to see his lying, sneaking ass ever again.\n\nBefore he can say anything else, I cut him off. \"Xavier, I'm not giving you any money. I don't owe you shit. Please, please, in the name of all that's unholy, please get back in whoever's car you borrowed and be on your way. I don't even want to know why you're here. I don't care why you're here. Leave. Now.\"\n\nHe stares at me a long moment, anger bleeding into and filling his dark eyes. It adds a faint rose tint to his otherwise olive complexion. To think, I used to believe he was the most handsome man in the world. The sight of him now makes me sick. Makes me hate myself for ever falling for his crap. \n\nHe doesn't speak for a long time. Then, \"Grampa Tiller died. I thought you'd like to know.\"\n\nThis does give me a moment's pause. Only a moment. \n\n\"I'm sorry for your loss. Get off my lawn.\"\n\nHis jaw tenses, the color rising higher in his cheeks. He gathers himself easily enough. Shaking off whatever horrid thoughts he's thinking about me, he takes his sunglasses, flicks them open and slides them smoothly back onto his angular face.\n\n\"Thanks. Glad to see you're still such a bitch.\"\n\nOakley's past me and down the stairs like a shot. So fast that by the time it registers and I take off down the stairs after him, he's already got Xavier dangling by the collar of his shirt. \n\n\"Shit! Fuck! Oakley, drop him!\"\n\nXavier is huffing and puffing, trying to break free of the much larger man who looks like he'd much rather kill him than let him go. His fingers dig uselessly into Oakley's forearms while his sneakered feet scrabble for purchase. His face is crimson now. His sunglasses are crooked.\n\n\"Say it again,\" Oakley growls. \"Go ahead. Call her a 'bitch' again. Please, do it.\"\n\n\"Meara, get this asshole off of me!\"\n\nOh, my God, I shouldn't find this so funny. Cool, calm and collected Xavier looks like he's the one about to shit a brick.\n\nI'm hopping up and down beside the two, trying to get Oakley to focus, but I can barely speak around my own laughter.\n\n\"Oakley! Oakley, drop him. It's ok! Holy shit, I can't breathe! Fucking drop him!\" I swat his arm and he releases Xavier, who goes skidding over the ground before righting himself.\n\n\"I should file assault charges against you, asshole!\" Xavier screeches. He fucking screeches. It's priceless.\n\nOakley takes a menacing step forward and Xavier jerks back. \n\n\"Try it,\" I say. \"Technically, you're trespassing.\"\n\nXavier gives me wide eyes, then narrows them. He looks about to say something else, but I slide in beside Oakley and lay my hand on his arm.\n\n\"Goodbye, Xavier. Feel free to never come back.\"\n\nHe spins on his heel, muttering curses under his breath while smoothing his hands over his clothes. Oakley and I watch him get into his car and, without so much as a parting honk, he peels away and is gone just as fast as he came.\n\nI turn to Oakley who is glaring after the car, tense and glowering. \n\n\"That was awesome.\"\n\nThis gets his attention. \"What?\"\n\nI fold my hands beneath my chin and flutter my eyelashes at him. \"My hero,\" I sing-song, which only gets me another hard glare.\n\n\"This isn't funny, Meara.\"\n\nI fail to see how it isn't, but I know when to keep my mouth shut. Mostly. \n\nOakley's eyes move down the road. Xavier is long gone, but his appearance has obviously made a lasting impression.\n\nI take a step closer and, if at all possible, Oakley seems to grow more tense. He mumbles something, something which sounds very much like, \"This is a bad idea\" and I grow rigid, heat setting off dancing flames just below the surface of my skin.\n\n\"Oakley, that guy's a dick. Hopefully, he learned his lesson.\" \n\nI'm apparently not doing a good enough job at placating him because those dark greens snap to me like they're on a tether. \n\n\"You don't get it.\"\n\n\"No, I don't. Enlighten me.\"\n\nHe stares at me a long moment, his green eyes sharp and full of fire. He doesn't speak and neither do I. I don't understand how everything changed so quickly. Sure, Xavier popping up was unexpected and I didn't expect Oakley to go all caveman on him. Maybe...\n\n\"Do you think I still want that douchebag? Is that why you're pissed?\"\n\nHe sighs, long and hard, the weariness of the world in that one sound. Then, \"I've gotta go.\"\n\nI blink at him. \"Wait. What?\"\n\nHe's moving, storming off toward his truck before I've even had the opportunity to form a complete thought.\n\nNo 'Goodbye'. No 'I'll call you'. Just the rumble of his truck as he takes off down the road.\n\nWhat the fuck just happened here?\n\n*********\n\n\"Where in the world do you think you're going?\"\n\nElla is standing in the doorway of my office, hands on her slim hips and a look of vague interest on her pretty face.\n\nI blink at her, then return my gaze to the spreadsheet opened on my desk top.\n\n\"Um, nowhere at the moment.\"\n\nShe takes three long strides into the little room, and comes to a stop directly in front of my desk. She looks pretty in a lightweight burnt-orange cowl neck sweater and dark blue slacks.\n\n\"I mean, when you are ready to go, where are you going?\"\n\nI sigh. I don't know what she's doing here and I really don't want to know. I'd only stopped by to finish up my order sheets. From there... Well, I hadn't really come to a solid decision.\n\n\"Don't play dumb with me, Meara Elise. You don't wear make-up and skinny jeans to come to work. Spill it.\"\n\nWhy? Why can't I have a normal little sister who's completely self-involved and couldn't give two shits about me.\n\nShe arches a thin, perfectly manicured brow at me. \"Hot date with Oakley?\"\n\nI don't know what emotion reads on my face, but she straightens to her full height and stares down the delicate line of her nose at me, her gaze full of smug knowing.\n\n\"Let's not play this game again,\" she says. \"Just tell me.\"\n\nI sigh again. It seems it's all I've been able to manage over the last couple days. Ever since Oakley went barreling off, all pissed and grumpy.\n\nTwo days have passed and I haven't heard from him. Haven't seen hide nor hair of him at the bar, or lounging in the shadows of my porch when I return home. Xavier continued his telephonic assault and I, finally, caved and changed my number. He hasn't shown his slimy face again, so that's some consolation. \n\nBut, the one person I want to see has effectively cut any form of communication. \n\nI'm pissed. And hurt. Pissed at myself for letting down my guard and letting Oakley in; pissed at Oakley for being so mysterious and vague and not giving any explanation for his apparent freak out. \n\nBut what could I have really expected? I spent a little over six months fucking someone with the intention of not getting to know him. And, for this very reason. Getting to know someone forms attachments that can be hard to sever later on down the line. \n\nI'm hurt because I actually freaking like him. He makes me feel safe. Wanted. My family likes him. He's fucking hot. He doesn't try to make me feel inferior. He makes my heart beat. I get excited when I see him. \n\nBut, he'd jetted at the first sign of trouble, even after he'd stood in the line of fire that is my family. Which makes no sense to me.\n\nI want to write him off and simply say fuck it, however, my heart, my stupid beating heart wants a damn explanation. \n\nI must have gone too far inside my head because Ella raps her knuckles against the shiny surface of my desk.\n\n\"Talk to me, Mimi.\"\n\nI fold my arms across my chest and settle back heavily in my chair.\n\n\"Xavier stopped by my house two mornings ago.\"\n\nElla's face twists in irritation and disgust. \"Why?\" she says and all her feelings for my ex are encompassed in that one syllable.\n\n\"Exactly. He says his Grampa died, but that can't be all of it. I don't really know and I don't really care.\" I shrug. \"I mean, there wasn't much time for an explanation after he called me a 'bitch' and I stopped Oakley from throttling.\"\n\nThis tickles Ella. She laughs loudly, clapping her hands. The sound is sharp within the small office. \n\n\"That's perfect. That's what he gets.\"\n\nI throw up my hands. \"And that's what I thought, too, but Oakley? Not so much. He was pissed.\"\n\nElla shakes her head. \"Why?\"\n\nI wish I had answer. I don't. \n\n\"I don't know. He took off. I haven't seen or heard from him in two days.\"\n\nElla sucks her top lip between her shiny white teeth. \"Do you think he's pissed that Xavier showed up? I mean, it's not like you invited him.\"\n\nI offer another noncommittal shrug. \"I don't know, but I don't think so.\" A memory hits me and I suck in a slow breath. \"Before the party, he showed up at my house with a busted lip. I tried to ask him about it, but he got all guarded and defensive. Told me to leave it alone.\"\n\nElla's dark brow furrows. \n\nNoise echoes from beyond the office door, voices rising and twining in what I hope to be jubilation. I can't deal with anymore bar brawls right now.\n\n\"Do you think he's into something... illegal?\" She wavers on the last word. Her innocence always amused me. I'm glad Davis and my antics over the years never touched her. I almost envy her for it.\n\n\"I don't know!\" Nervous energy shoots through my and I channel it into tapping my boot against the leg of my desk. \"Which highlights the fact that I still know next to nothing about this man. He might have a bike shop in Denton. He might not. Oakley might be his real name. It might not.\"\n\nFrustration forms a hard knot in my stomach.\n\n\"He has a brother he wants me to meet.\"\n\nElla lights up at this. \"Well, that's good!\"\n\n\"It was. I think that was the plan before Xavier showed up. Once Oakley went all caveman on him, those plans went out the window. I've texted him to let him know I got a new number, but it's been radio silence.\"\n\nElla plops down into the only other seat in the room, a slimsy chair opposite mine on the other side of the desk. It creaks faintly under her weight.\n\n\"Well, geez, Mimi. I can't figure this one.\"\n\n\"Me either, babes.\"\n\nHer eyes move over me, over the white tank with the picture of a hip hop Bruce Lee emblazoned across breasts. And she was right. I'm wearing black skinny jeans along with black ankle boots. The heel is moderate. The buckles on them remind me of Oakley. This outfit is 'dolled up' for me.",
        "\"So, where were you going?\"\n\nI've been honest so far. Why stop now?\n\n\"I was going to Denton. To that bar we went a couple months back.\" I don't have to add that I'd been hoping to run into Oakley.\n\nShe nods, understanding, and I'm grateful she doesn't make me say the words out loud. I feel desperate enough as is.\n\n\"I wouldn't advise chasing after him.\"\n\nI blow out a harsh breath. She is right.\n\n\"Mainly because he's waiting for you at the bar.\"\n\nMy heart jumps to my throat, excitement and nervousness causing my voice to come out rough and strained. \"What the fuck, Ella? Why didn't you say that? You're such an ass!\"\n\nShe smirks, shrugging as if she doesn't care that I could strangle her and feel no remorse about it.\n\n\"You never tell me anything. I have to trick you. And I'm all out of lasagna.\"\n\n********\n\nElla offers to show Oakley back to my office. Of course I threaten her first. Wouldn't be right without one good one.\n\nIn the short time I'm left alone, I vacillate between an array of different emotions. \n\nIt's been two days. Oakley could be here to break things off with me. Or, he could have come to apologize and explain. I don't know for sure. What I do know is that my heart is beating a mile a minute and my stomach feels both hollow and heavy. \n\nIf I'm going by my lack of very basic knowledge about him, I should run for the hills. He could be a psychopath. Or a crossdresser. Actually, that's kind of funny to think about. \n\nHowever, if I'm honest, if I'm really and truly honest... I'm not ready for it to be over. And that feels weird to me.\n\nMaybe I'm crazy. Maybe I'm a sucker for the bad boys. Hell, maybe my ass has just been lonely. Whatever it is, I like him. I fucking like him. I like the way he smells. I like the feel of his hair on my skin. I like the sharp glint in his eyes when I'm being an utter smartass. I like the way my chin fits into the curve of his shoulder when I'm resting against him in the darkness. \n\nI like that he's protected me. I like that he cares about my safety, which is evident in both the Carter Ludlow and Xavier incidents. \n\nBut, he's waffling and I don't like that at all. \n\nEasy Sunday mornings have gone the way of the dodo. We're in the muck and grime, now. And I don't know what I'll find, or even if Oakley is ready and willing to reveal any of the answers to all these burning questions I now have bouncing around in my brain.\n\nI don't know what to do. What does it say about me that I want to keep him around so badly? Someone I barely know, but whose presence I've come to crave, and whose absence has already become rooted into my awareness. \n\nThe heavy, advancing sound of his boots across the hardwood floors snap me back to the here and now. I lean back against my desk, aiming for aloof and ambivalent, though I'm just trying to keep my legs from shaking.\n\nWhen he appears in the open doorway, my pulse seems to spike even more. He's dressed in his leather jacket and his dusty boots, hair free-flowing and deliciously tousled. The sight of him always does something to me. \n\nBut my attraction to him doesn't equal automatic forgiveness. I'm easy, yeah, but not that easy.\n\nHis eyes meet my mine briefly, then shift to take in the layout of the office. It's small, cluttered and slightly cramped. Nothing exciting, though it holds his attention for several long, nearly unbearable seconds.\n\n\"What did you mean?\" I ask when the silence becomes intolerable.\n\nHis eyes flick back to me, his dark brow furrowed. \n\n\"When you said you didn't want the way I looked at you to change?\"\n\nHis eyes soften a bit, his brow smoothing out slowly. He rakes a hand back through his hair and takes a few steps into the office.\n\nAnother long moment stretches between us before he breaks it.\n\n\"Ryan.\"\n\nThat's all he says. I just stare at him. I don't know what that means. Should I?\n\n\"What?\"\n\n\"Ryan. It's my name. First name, actually.\"\n\n\"Um... ok...\"\n\nHe slips his hands into his pockets. Shoves his shoulders back a bit as if he's fortifying himself against what will come next. \n\n\"When I was 25, I was convicted of aggravated felony assault. I went to prison for 9 years.\"\n\nFelony assault. Prison. Nine years. \n\nNot at all what I expected to hear.\n\nThe words echo and repeat inside my head. They're sharp and heavy. I'm not sure what to make of them. I open my mouth to speak, and nothing comes out. I don't know what to say.\n\nOakley's eyes grow stormy, a bit of gray bleeding into them spring green. I can see his jaw working beneath the slight shadow of his beard. \n\n\"That,\" he murmurs. \"That look right there. That's what I didn't want to see, Meara.\" He scrubs both hands down his face and angles his big body away from me.\n\n\"What a minute! What face did I make?\"\n\nHe turns, clearly frustrated.\n\n\"Horrified.\"\n\nI throw my hands out. \"What did you expect?!? You come in all 'Hi, my name is Ryan. I'm a convicted felon.' No lead in. No warning. Just boom. I mean, you had to have an idea how that was going to play out.\"\n\nHe shakes his head. Doesn't meet my gaze.\n\n\"Oakley, I only have what you've been willing to give so far.\"\n\nHe scoffs, shaking his head wearily. \"I could say the same about you.\"\n\nHe's got me there. I've held my own secrets, doling them out only when necessary.\n\nI let out a slow breath. \"Show me yours and I'll show you mine?\"\n\nThis gets a laugh out of him. Rough and half-hearted, but a laugh nonetheless. It makes me want to wrap my arms around him. To scale his big body and bury my nose in his wind-scented hair.\n\nSilence reclaims the space around us, drifting like early morning fog. \n\nHe cares what I think about him. Worries that his past will taint what I think of him. How I feel about him. Hell, I don't know if it will, but... I want find out.\n\nI take a small step forward, slowly, carefully and lift my hand to him.\n\n\"Hi, my name is Meara Kincaide. Single. Gloriously and happily divorced. Business owner. No kids. And you are?\"\n\nHis eyes travel from my face then down to my outstretched hand. A best passes. And then another. Finally, he closes his long fingers around mine. Gives it a single small shake. His skin is warm and rough where it connects with mine. \n\nHis voice is low when he speaks, softer than I've ever heard from him, and the tension is gone. This makes me happy, fills me with a flickering sort of relief.\n\n\"Ryan. Ryan Oakley. 40 years old. Never married. Business owner.\" He pauses, smoothing the pad of his thumb over the slightly protruding none of my wrist. \"Convicted felon.\"\n\nThis is nice. This is the gentle ease I've enjoyed with him. I can't judge him. At least not for what he's done. My mind has already formed my opinion on him, though I'm extremely curious to hear the story.\n\n\"So... Ryan, huh?\" I ask, quirking an eyebrow at him.\n\nHe uses my hand to pull me, step by step, close to him. A thin smile curves one corner of his delicious mouth.\n\n\"Yes. Ryan.\"\n\nIt feels so good to be pressed against him like this again. Feeling his strength. His heat.\n\n\"Yeah, I'm not calling you that.\"\n\n******\n\nIt's only right that we return to the familiar - sharing cold beers on my front porch. \n\nThe sun is setting, bathing the world in swaths of vibrant red and deep purple. The air is warm. It smells like sunshine and earth. It's quiet. Peaceful. Lovely. \n\nWe're sitting on the glider. Oakley welcomes my legs thrown carelessly over my lap. He said he likes my boots. His fingers dance over the smooth leather. What is with this man and my shoes?\n\n\"So how did you get the busted lip?\" I ask. It seems an easier place to start.\n\nOakley drags his hand through his hair, an amused smirk appearing on his handsome, scruffy face.\n\n\"My brother.\"\n\nI laugh. While I've threatened to maim Ella an innumerable amount of times, outside of childhood spats I haven't done any serious damage. Lately. I know with boys, it's different.\n\n\"What for?\"\n\nHe allows his head to roll on the back of the glider, peering at me from beneath the dark fringe of his lashes. \n\n\"You, actually.\"\n\nI choke on the sip of beer I'm in the process of swallowing. A bit dribbles down my chin and before I can swipe at it with the back of my hand, Oakley uses a long finger to clear it away. He casually sucks it off his finger and I bite down on the groan that rises in the back of my throat, knowing full well of what those lips, that tongue, are capable.\n\n\"He'd been hounding me to meet you. Said I was hiding behind my past to keep from... moving forward with you.\"\n\n\"He's known about me for some time, huh?\"\n\n\"Since the night your window got busted out. He was one of the guys I was with.\"\n\nI nod, feeling like somewhat of an asshole. I hadn't been very forthcoming about our relationship. It had taken nosey ass Ella to pry the information out of me. \n\n\"So, the busted lip...\"\n\nOakley sighs, his eyes moving over my face. They settle briefly on my lips, then flick back up to mine.\n\n\"I told him about the invite to your parents' party. The guy nearly ripped my head off when I said I wasn't going.\"\n\n\"Why was it such a big deal?\"\n\nOakley's hand drifts up my shin. His fingers curl beneath my knee, tickling just a bit as they flex and release. He doesn't speak for a long moment. His eyes are downcast. He appears to be concentrating on his task, but I get the feeling he's unwilling to meet my gaze.\n\n\"You're out of my league, Meara.\" His voice is low, tinged with a hint of something I can't quite put my finger on - something that tugs and pulls at a soft spot inside my chest. \n\nOut of his league? I can't imagine what would make him think such a thing. Wonder if I've ever done something to make him feel that way.\n\nHe continues before I can ask.\n\n\"You're kind. And tough. And beautiful. Smart. Put-together. Nowhere near the mess I'm used to. Me? I almost beat a guy to death.\"\n\nI lay my hand over his. Give it a gentle, reassuring squeeze to show him that I'm neither afraid nor disgusted by his admission. \n\nHe lifts his eyes to mine finally, and the pain is so strong, so deep, and flares so bright and clear in their beautiful spring green depths, that my breath stalls in my throat. \n\n\"I nearly killed a guy because a pretty girl broke my heart, and the guy she used to do it thought it was funny.\"\n\nHe laughs shortly, low and bitter. \"And the worst part is, I never regretted it. Until now. Until you. You deserve so much better than a guy like me. But, damn it, you've gotten under my skin and I can't fucking shake you loose.\"\n\nThis is probably the sweetest, most heartbreaking confession I've ever heard. I should probably feel some measure of concern or alarm. Something. \n\nI don't. \n\nI can't pinpoint the exact moment I fell for him, when his presence became more than just sex and the merging of flesh. But, somehow, some way, it has. I've grown accustomed to the sound of his voice in those early morning hours, the weight of his arm over my hip, and the warm tickle of his breath on the back of my neck.\n\nI like that he rarely smiles, but when he does, it's like sunshine after a storm, clear and startling bright, filling me with warmth and light. I like the smell of his skin, the mixture of leather and earth that clings to him. I like the way his big body seems to take up so much space, and the way I seem to fit perfectly against it. \n\nI like that he makes me feel safe and protected, warm and wanted despite of, or in spite of, my big mouth and my stupid temper; how he can tell me to shut the fuck up with nothing more than the quirk of one dark eyebrow. \n\nIn all this time, the only anger I've seen from Oakley is when he'd been ready to maul Xavier for calling me a 'bitch'. In hindsight, I definitely shouldn't have laughed, knowing what I know now. \n\nOakley has protected me since the moment he met me - first by tossing Carter out when he'd gotten too aggressive; then, by seeing me home almost every night after; and, finally, by removing my ex-husband from my front lawn. I have never felt unsafe with him. I don't think I ever could. It's crazy, but I can feel it in my gut. It's knowledge. It's a soft of certainty that pulses thinly inside me. \n\nAnd, that's what he's afraid of. That I'll fear him. Fear him enough to push him away. That I'll see a brute instead of the big bodyguard I've held in my arms so many nights. \n\nI wrap my fingers around the wrist at my knee and pull him toward me. He resists at first, but I tug again and again until he gives in. I press my lips lightly to his. \n\n\"I would never hurt you, Meara,\" he murmurs softly, though no less urgently. \"I need you to know that.\"\n\n\"I trust you, Oakley,\" I say. \"I trust you more than I've ever trusted anyone in my life. I don't care what came before. I don't know that guy. He's a stranger. Who I know is this guy in front of me.\" I trail the backs of my fingers down his cheek. Smile as he leans slightly into my touch. \"I like him. I like who you are now. With me.\"\n\nThere's more, yes, more that I need to know, but I'm ok with this for now. We've talked enough. \n\nHe releases a heavy, relieved breath, warmth fluttering over my skin across the short distance separating us. He tilts his head to the side, and presses his mouth firmly against mine. It's a chaste kiss. Just the lingering pressure of our lips. Touching. Caressing. He's gentle. Perhaps, trying to prove a point. To reassure me that I have nothing to fear from him. \n\nBut I need more. Harder. Hungrier. \n\nAs gracefully as I can manage, I raise up and shift my body until I'm straddling his hips. His hands automatically go to my thighs. His strong fingers knead the soft flesh, causing me to moan and grind over him, pleased to find him already hard beneath me. He opens to the slick slide of my tongue, suckling briefly. I catch his bottom lip between my teeth and give it playful nip.\n\n\"Meara,\" he moans. And I love the way my name sounds wrapped up in his rough basso. The edges of it aren't so smooth and pretty now. Somehow he manages to fill each syllable with his need and desire. \n\n\"Let's go inside,\" I say. \"I think we've talked enough for now.\"\n\nHis hands slip behind me. He gives my ass a firm squeeze. \n\n\"You sure?\"\n\nMy response is another winding roll of my hips. I'm done talking. I want this man inside me. Above me. Behind me. \n\n\"Don't make me repeat myself.\"\n\nHe growls, the sound seeming to echo in the warm evening air. \"Mmm... but you sound so good when you beg.\"\n\n\"Asshole.\" But there's neither bite, nor venom in the epithet. \n\nHe wraps his arms around my waist and, once I'm pressed securely against him, surges to his feet. A startled yelp slips past my lips and I circle my arms around his neck. I shouldn't be surprised by his speed and strength. In fact, it excites me.\n\nWe're moving suddenly, Oakley's long strides carrying us across the porch. He opens the door without having to look. Steps past the threshold. Paces swiftly, surely, down the short front hall. I figure he'll head for the living room, more accurately the couch, but he heads up the stairs and to the bedroom. \n\nHe drops me on the bed and I flounder on my back while I begin to strip out of my clothes. He stares down at me as he toes off his boots, then unclasps his belt. His eyes are almost glowing with his desire as they drink in the steady rise and fall of my breasts and, once I've toed off my boots and shimmied out of my jeans, the wide swell of my hips and the curve of my thighs. \n\nFuck, do I like the way he looks at me, as if he's a hairsbreadth away from losing full control and devouring me whole. I wonder if my own face reflects his hunger, though I'm certain it does.\n\nThe removal of his shirt reveals the swirls and slashes of ink adorning his strong arms and the broad expanse of his chest. I want to taste him, to run my tongue over each intricate, looping pattern. He is beautiful in the lowering light, a dark and towering work of art that leaves me breathless and shaking slightly. \n\nI swallow and rise up on my knees. \n\n\"I win,\" I say, referring to the fact that I'm bare ass naked and he's still almost completely dressed. I unbutton his black jeans and shove them over his hips. His cock springs up, tall and smooth and, still on My hands and knees, I take him in my mouth, drawing him in and sucking deeply. \n\nHis hips rock, shoving him to the back of my throat, and he lets out a long hiss. \n\n\"Shit, Meara,\" he sighs.\n\nI pull back, trailing my tongue along his length, leaving him slick and straining.\n\nI graze my teeth over his stomach and smile into his skin. Dipping low, I take the head of him between my lips and tease.\n\n\"Fuck my mouth,\" I murmur, before swallowing him down again. \n\nHe wastes no time. One hand curls over the back of my neck, the other cups my chin. He strokes long and smooth, grunting when he hits the back of my throat. I allow him to use me, to control the rhythm and the depth. My pussy drips, tightening in anticipation. When he releases his hold long enough to drag his blunt nails up my spine, I hum around his thrusting cock, arching my back for more. \n\n\"Look at you. My beautiful, dirty girl,\" he says, and the way he whispers it heightens my arousal, as if it's a secret that only we share. \n\nA shiver races through me and I lift a hand to cover his, lace my fingers through his, urging him to move faster, to use his cock to brand me as his. He begins to move faster, rougher, and I flatten my tongue, moaning as he bobs me over his dick.\n\nI want to see his face, to see the desire etched on it, to watch his mouth as they form those filthy words, but I concentrate on breathing, on the throbbing of my clit in time with his thrusts. My moaning becomes high and frantic, full of lust and need. I want him to come in my mouth; I want him to come in my cunt, to bury himself deep, to fill me to bursting. \n\nPerhaps sensing this, he pulls away and I'm left panting for only a few brief moments before he turns me toward the head of the bed. I feel the roughness of his jeans against the back of my thighs as he moves in behind me. One large hand snakes over my hip, then roughly cups my pussy. An arm slung around my shoulders pulls me upward.\n\n\"You're mine, Meara,\" he says harshly, urgently, in my ear. Two fingers slip into my cunt, and I cry out as I grasp at his forearm. His fingers plunge deeply, spearing into me, then curling as they retreat. It feels so fucking good but it's not nearly enough and I grind my ass into him.\n\n\"Is that what you want, baby,\" he asks. \"To be mine?\"\n\n\"Yes,\" I gasp out. There is no hesitation in me, only need for the only man at my back, his cock pressed hot and hard against the top of my ass. I nod wildly, sucking in a sharp breath. \"I want to be yours, Oakley,\" I sigh.\n\nWith a growl he releases me and I fall forward, bracing myself on my forearms. His hands circle my hips and he drives into me in one sharp thrust. \n\nThere is pain, but it's nothing compared to the pleasure, so sharp and complete that it seizes the air in my lungs. My back bows inward, forcing my tits into the mattress and my ass even higher and, when the air comes back to me I wail loudly, \"Fuck, Oakley!\"\n\nAnd he isn't playing around. He fucks me hard and deep, pushing my body forward until he's almost completely left me, then pulling me back with rough tugs on my hips. He is fucking himself with my entire body, and it's so damn hot.\n\nI can hear him over my own needy moans, chanting a gruff string of filth that has me clenching and squeezing around him. \n\n\"Fuck, yes... Meara... You always feel so fucking good. So fucking perfect.\"\n\nI dig the heels of my hands into the mattress and push back into him, and his rhythm falters. I take advantage of it and turn the tables, using him now as he had just done me, showing him with my body just how much I want and need him. ",
        "The pleasure rises, coiling and tightening in my belly and as I start to come, he flattens his big body over mine, pressing me further into the mattress. His hands remain at my hips, pinning me in place as he continues to drive into me.\n\nI am wailing, cursing, possibly crying, it feels so fucking good, and I'm still coming, bucking under him. His breath is harsh at my ear. \n\n\"Keep coming, baby,\" he growls. \"Don't stop coming for me. My girl never stops coming for me.\"\n\nI couldn't if I tried. \n\nHe pounds into me and the pleasure rises and holds. It snaps through me, makes me claw at the bedspread. I am overwhelmed. My vision blurs at the lack of oxygen, both from the weight of Oakley and the deep dicking he's giving me. My cunt is a vice, a hot, wet vice, and he is practically lunging to force his cock into me over and over, battling against the tightness of my sheath. The next orgasm blindsides me and my entire body seizes in sharp pleasure. \n\nHis moans and grunts are intoxicating. In them, I can hear his want, his need for me. He's on the verge and eager, barely restrained.\n\n\"Oakley... Baby... Please...\"\n\n\"Mmph...Mmph...Mmph...\"\n\n\"Come... Please, come... I need it...\"\n\nA hand tangles in my hair, holds me effortlessly in place, makes me feel every inch of this claiming.\n\n\"Fuck, Meara...fuuuuck...!\"\n\nHis thrusts grow erratic. Sharp.\n\nI lick my lips, squeeze his dick even tighter. \n\nHe comes, growling and cursing, driving deep, and I take him, howling my pleasure with him. \n\nHe flops down beside me, breathing fast and hard through his nose. My body is jelly, soft and warm, and I can do nothing but stare at him from beneath my lashes. I can't say how long we lay there, but I'm in no hurry to move. Satisfied doesn't hold enough weight for what I feel.\n\nHis eyes are soft when he turns to gaze at me, and the look in them stops my heart. His gaze is full of awe and love, and no one has ever looked at me in such a way. \n\nAs girly as it is, as warm and delicious as I feel in this moment, I don't stop the mist of tears that well up in my eyes. Something in my chest, something tight and hard-edged, suddenly melts away, and I know, for certain that cutting this man loose will never be an option.\n\n\"Come here,\" Oakley murmurs. His hand clasps my shoulder and he pulls me close. He places a gentle kiss to my temple. His skin is slick and hot against mine. He holds me tightly.\n\nWe lay that way a long time, a tangle of hot, sweat slick limbs. As I begin to drift off, Oakley readjusts us so my back is pressed into his chest. He pulls the edges of the blanket around us, the cloth and his strong arms enough to keep any chill at bay.\n\n\"Meara.\" \n\n\"Hm?\"\n\n\"Thank you.\" It's a whisper, low in the warm stillness of the room.\n\nHe can't see it, but I'm sure he can feel my smile against the curve of his arm.\n\n\"You're welcome.\" I place a kiss in the crook of his elbow, and add, teasingly, \"Ryan.\"\n\nHis response is a sharp pinch to my already sensitive ass cheek. \n\n\"Little witch.\""
    ],
    "authorname": "Erisjade16",
    "tags": [
        "black woman",
        "white man",
        "bwwm",
        "interracial erotica",
        "interracial romance",
        "biker",
        "love",
        "lust"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/meara-and-oakley-ch-05"
}