{
    "title": "Writing With Your Audience In Mind",
    "pages": [
        "Hello,\n\nI have been reading stories posted to this site for about a year. I must admit, I found the range of subjects fascinating, and the range of quality astounding.\n\nSome of the authors who post here are excellent writers with vivid imaginations and superior skills. Others are not quite as good, but who, with a little patience and a great deal of editing, could become much better.\n\nThere is good information and advice about writing already available on this site, and I would like, hopefully, to add to that body of work.\n\nBefore I go any further let me refer you to the 'Writer's Resources' section of the site and recommend that you familiarize yourself with this valuable resource. \n\nIf you are truly desirous of improving your skills, I seriously recommend a good book on basic grammar. Your bookseller can direct you. Buy one, read it cover to cover, and refer to it often. The advice regarding English grammar available on this site is conflicting, and sometimes incorrect. Therefore, you would be well served to research this subject independently.\n\nYou can use incorrect grammar in your dialogue because your characters may be poor grammarians, with good plot related reasons. Your narrative sections, however, are written as your voice. Poor grammar shouts 'poor writer.' Good writing demands good grammar.\n\n********\n\nWhat follows now are my personal thoughts about writing erotica and how I approach the subject when I write a story.\n\nWriting erotica is a little different than writing for other genres. An erotic story focuses on intimate, personal interactions between people. I believe that what makes a story erotic is not the descriptions of characters having sex, but the reader's ability to relate to the characters, as if s/he were part of the story and therefore part of the action.\n\nFor me, the best way to accomplish this is to develop realistic, interesting characters. I try to do this through description and dialogue, mostly dialogue. I also go to great lengths to make my writing readable. By readable I mean a natural flow with short paragraphs and easily identified dialogue from my characters.\n\nRealistic characters are easy to create. They are all around you. They may even be you. The trick is to give enough information about your characters so your readers can form a mental picture of the person you are writing about without overloading your story with excessive details.\n\nA brief description is better than a detailed one. Your readers will automatically fill in the details from their own experiences. Just give them the basics and they will create a mental picture of the person they want to 'see.'\n\nFor example, here is the description I wrote for the title character of the 'Amanda' series:\n\n\"She was wearing a white T-shirt, baby blue shorts, and white sneakers with those short quarter socks. Hers had a blue trim that matched her shorts. From behind, she looked very athletic. Her long blond hair was tied in a ponytail that hung to the middle of her back. She had a slender waist, narrow, almost boyish hips, and a world class tush. Her legs were long and well muscled.\"\n\nIf you remove the description of the clothing, all that is left is:\n\n\"\u2026she looked very athletic. Her long blond hair was tied in a ponytail that hung to the middle of her back. She had a slender waist, narrow, almost boyish hips, and a world class tush. Her legs were long and well muscled.\"\n\nA bit later in the story I add:\n\n\"She was cute, with a kind of perky look. Maybe it was the blonde bangs, maybe it was the warm, friendly smile, or her clear, healthy complexion.\" \n\nThe actual description adds to only five lines, but every reader has a mental picture of a cute, athletic girl with bangs, and that image becomes the character for them. Now when they think of Amanda, they are thinking of someone they know, or may want to know, and they relate more closely to both the character and the story.\n\nIf you read my stories you will notice I hardly ever describe the male character, the storyteller. I do this so the reader can substitute any male image they want. If a man is reading the story, he can cast himself as the main character. If a woman is the reader, she can choose her own special guy to play the role. Either way, the reader can more easily identify with the characters.\n\nDialogue is the most important part of character development, at least in my opinion. What your characters say can provide a great deal of information about them.\n\nAn example from 'Amanda:'\n\n\"At a break in the discussion I said, \"I get the feeling you're not a high-school drop-out.\"\n\n\"Not high-school, not college, not medical school, not three years of internship, not two years of additional training in internal medicine.\"\n\nJust like that, you know she is a physician specializing in internal medicine, and she is not afraid to let you know it. In fact, you can tell she is proud of her accomplishments, and of herself.\n\nNow, I want to discuss 'realistic.' (I know that Wm_Sexspear \u00a9 recommends against starting a sentence with 'now,' but sometimes I think it is appropriate.)\n\nIf you want your readers to identify with your characters, your characters must be realistic, everyday people. Resist the urge to create supermen and superwomen, unless it is really necessary for the plot line of your story. Guys with fifteen-inch cocks are few and far between, and ejaculating women do not exist. Try to stay within the bounds of reason. For that matter, what difference does it make to know the size of a guy's penis? Size is not nearly as important as what he does with it.\n\nSure you can embellish a little, we all do it. Just try to stay on this side of the realism line. Again, your readers want to be able to identify with your characters, so create realistic characters.\n\nWhat about the tense you use for your story? I use the past tense, with an occasional aside in the present tense, like when I described the Signature Room in 'Amanda.'\n\nI recommend you use the past tense. You are telling a story about something that happened, not dictating events as you are experiencing them. The past tense is more common for story telling and your readers are more accustomed to it. Why break with literary tradition?\n\nWhen you have multiple characters in your story, remember that the last mentioned character is doing the present action. An example from 'Thank You Sis' may help explain this.\n\n\"With that Liz and Jill jumped up and there were more hug all around and then Pam and Joie left. They said they understood when I didn't offer to walk them to their cars.\"\n\nLiz, Jill, Pam, and Joie are all mentioned, but it is Pam and Joie who are the subject of 'They' in the second sentence. Pam and Joie were the last names mentioned.\n\nThis is very important to remember when you are writing a scene with more than two characters. If you do not make the proper references, your readers will become confused and will have to stop and reread your words. This creates a break in the flow, and frustrates your audience. You may have to rewrite sections like these a few times to be sure you will be understood.\n\nWhen to use contractions is another touchy area. Personally, I think contractions are never allowed in good writing, except in quoted dialogue. People use contractions when they speak, so it makes sense to use contractions when quoting them. However, virtually all good writers avoid contractions in the narrative parts of their work.\n\nFinally, about paragraphs. A paragraph should contain only one subject, and for stories intended to be read for entertainment, they should be short!\n\nAlso, dialogue starts a paragraph. Every time! When a character talks, start a new paragraph. When another character answers, start a new paragraph. Please.\n\nIf a character is giving a long monologue, start a new paragraph every time there is a change of subject. For example:\n\n\"I want to tell you about John. He's the biggest guy I ever saw.\n\n\"Oh yeah. What do you think about those articles in the paper yesterday?\"\n\nOne speaker, two subjects, two paragraphs. Also notice the quotation mark is missing from the end of the first paragraph. If it is the same person speaking, just use quotation marks at the beginning of each paragraph until their dialogue ends. That way, your readers will know it is the same speaker.\n\nAlways remember that writing for someone is not the same as speaking with them. When we are face to face, or even on the telephone, we have voice tone, and/or facial expressions, plus the chance to ask for more information, or even explanations. When we write, our readers have only our words on the paper or the screen. If those words do not accurately convey our thoughts, there is no way for our readers to ask for clarification, and our message is lost.\n\nWriting is the art of converting to print what is in our minds, such that a reader will be able to recreate our mental images. This is not easy to do. To do it well takes careful thinking, careful editing, and careful proof reading.\n\nI wish you good writing, high votes, and positive feedback.\n\nRegards,\nChicago Bob"
    ],
    "authorname": "Chicago Bob",
    "tags": [
        "pam joie",
        "past tense",
        "hung middle",
        "remember writing",
        "good writing",
        "boyish hips",
        "writing erotica",
        "mental picture",
        "liz jill",
        "world class"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/writing-with-your-audience-in-mind"
}