{
    "title": "Living with Omega Theta Pi",
    "pages": [
        "This story was inspired by the Japanese movie Tsubaki. It's also a sequel to \"The Renaissance Faire.\" Some material from the prior story is repeated here. You don't really need to read the prior story to follow this one, but it might help a bit. The current story includes a number of themes, such as reluctance (spanking), exhibitionism, and voyeurism. However, I believe it most comfortably fits within the section of First Time, as that is the most consistent and predominant theme, particularly in the final two scenes. All of the characters in this story are at least eighteen years old.\n\n- - - - - - - - - - - - - - - - - - -\n\nOmega Theta Pi was no Delta Nu (see \"Five steps to Delta Nu\"). Omega Theta Pi was by far the most conservative sorority on campus. The girls of Omega Theta Pi prided themselves on their high moral compass, a devotion to the good life, to purity and wholesomeness in all matters of womanhood. The girls were not necessarily virgins, but there was nothing promiscuous about an Omega girl. She was a clean and virtuous \"girl next door.\" Joining Omega Theta Pi was a commitment to purity, modesty, and self-control. Some of the girls even wore purity rings. It took a very special young lady to be an Omega girl.\n\nThe girls of Omega Theta Pi were very much like the Tri Pi girls of Faber College, although they did share one key similarity with the boys of Delta Tau Chi. Of course, they were not irresponsible, scurrilous, defamatory, academic sloths, like the boys of Delta Tau Chi. They were in fact very, very responsible, hard-working, upright, and polite young ladies.\n\nWhat they did have in common with the boys of Delta Tau Chi was a dire financial condition. In fact, they were at risk of going under. Omega Theta Pi, like many other campus associations, had been hit hard by the financial crisis and unlike Delta Nu they did not have the connections to get a bailout from the US government (see \"A field trip for Delta Nu\").\n\nIt also didn't help that their membership was falling, due in part perhaps to their devotion to purity and wholesomeness. The Omega Theta Pi sorority was by far the most disciplined, a fact of great pride to Miss Wormer, the Housemother. However, once a prospective pledge witnessed the requirements of and discipline provided by Miss Wormer, it was not unusual for her not to pursue membership any further.\n\nIt's not like this hadn't happened before, although the previous crisis had been a long time ago. Back in the late 1960s and early 1970s Omega Theta Pi had been reduced to renting out rooms. Like many other fraternities and sororities they were experiencing a dramatic drop in pledges. College students back then were not embracing the traditional campus activities that had been so treasured by their parents. The only way to survive was to receive at least some income by charging students for room and board and even then they didn't have a lot of takers. Just living within a sorority or a fraternity was a source of embarrassment for many undergraduates.\n\nThose rebellious hippie days were now long over, but the sorority was facing once again a very difficult financial deficit. They had managed to obtain quite a bit of income through their involvement in the Livingston Renaissance Faire (see \"The Renaissance Faire\"). Stacie and Pamela had been particularly successful, and were rewarded by Miss Wormer with seats of honor by her for dinner for the whole next week. But the income from the fair had provided only a temporary relief (Stacie though was thinking of proposing to Miss Wormer a more regular \"kissing\" booth). They needed a more permanent, ongoing, reliable source of additional income.\n\nIt was though rather embarrassing for Omega Theta Pi to be reduced to renting out rooms, particularly in contrast to the luxury life of Delta Nu. But, in times like this one has to appreciate that nothing tastes sweeter than swallowing one's pride, and pride most certainly does not pay the rent.\n\nIt might have seemed obvious that they would decide to rent rooms to other young ladies. But in the wisdom of the Panhellenic Council, the governing body for sororities, renting to women would undermine the recognition one receives in being a member of the Omega Theta Pi. If a girl wanted to live at Omega Theta Pi she should want to be a member of the sorority. Nonmembers of the sorority should not gain access to the house, and to the many advantages and privileges of living within the bosom of Omega Theta Pi. In contrast, renting to male undergraduates would not involve any conflicts of interest or compromise to the integrity of the sorority.\n\nOf course, there were some potential complications of renting to young men, and these probably do not need to be spelled out. They are perhaps rather obvious. So the Panhellenic Council indicated that they wanted Omega Theta Pi to do a test run with just one young man for one semester. If no difficulties or problems arose, they could rent additional rooms to more young, respectful men in the spring semester.\n\nThe girls were disappointed, at least with respect to having to wait a full semester before they could rent out the empty rooms. Most of the sisters supported the ban against renting to females. They agreed with the Panhellenic Council that it just wouldn't be right to open the doors to girls who weren't even members. What is the point of a private club if it's open to the public? Plus, what if one of the girls was prettier than them? It was unlikely that she would be prettier than all of them, or even most of them, but it just wasn't right to have a \"civilian\" in the house who was more popular with guys than even one of the sisters, and probably because she was willing to do things with them (if not then she really should join the sorority). It just wasn't right.\n\nIf it was just one guy staying with them though it was sure going to be a difficult selection. It turned out that a lot of guys were interested in the room. The girls were surprised and very pleased. Perhaps they should not have been because college enrollment often goes up during economic downturns, and with the financial downturn there are also many students seeking any way to save money. This boded very well for their ability to fill all of the rooms in the spring semester.\n\nThey interviewed 27 guys for the one available room. The girls were all a twitter with the process. It was like rush week but with a very interesting twist. The girls narrowed it down to four possible guys: one was on the football team (split-end), two were pre-med, and one of them was simply dreamy. All of them were very good-looking, and the last one most of all. He reminded many of the girls of Keanu Reeves. It was a very difficult choice.\n\nBut, Miss Marion Wormer, the Housemother, made it easy for them. She vetoed all four precisely because the girls were almost drooling over them. Imagine having one of those guys living in the house! There was no way the sorority would make it through the semester successfully. Issues of jealousy would be rampant. Untoward incidents would abound.\n\nThe girls were committed to a moral, chaste life, but it often took a stern hand on the part of Miss Wormer to remind them of their dedication. If \"Mr. Dreamboat\" moved in Miss Wormer wouldn't be surprised if at least three of the girls were pregnant by the end of the semester! Well, that was perhaps being too cynical, but she was understandably concerned that at least a few of the girls would compromise the reputation and honor of the sorority when confronted by such a daily, immediate temptation. They were good girls but they were also young ladies with natural urges, and Miss Wormer knew what young men such as those four were like. She knew that it was not in the best interests of the welfare of the girls of Omega Theta Pi to tempt them unnecessarily.\n\nMiss Wormer picked instead Albert Pence. Albert wasn't entirely unattractive. He wasn't grotesque by any means. One could say that he was appealing in some respects. With the right light he could even be said to be kind of cute. But, he did wear glasses, he was rather skinny, he did apparently struggle with pimples, and he was not a smart or fashionable dresser. He was really kind of a dork.\n\nAlbert did have lots of interests. Foremost among them was his membership within the Livingston Geology Club. He was also a member of the boys' choir (soprano). He was an avid stamp collector, and had even served as the treasurer for the Livingston Philatelic Club the prior year. He was also a member of the Livingston chess team. But, he wasn't a particularly good chess player. He got beat by the member of the Templeton team last month, and she (Melissa) was apparently their worst player (see \"A very spunky lady\"). Geology was really his forte, his passion.\n\nA loud groan of disappointment swept through the den as Miss Wormer announced her decision. Albert was at or close to the bottom of the list for every girl. This was a terrible, terrible choice! Miss Wormer angrily clapped her hands to silence the girls' protestations. She let it be known that if this young man was not welcomed with open arms into their family they ran the risk of losing their charter.\n\nThe girls agreed to accept his presence. He was, after all, the key to their survival.\n\nAlbert, on the other hand, was really pleased to hear that his application had been accepted. He found the apartments near campus to be way too expensive, and as a junior he no longer qualified for a room in the dorm. Plus, he really liked the idea that breakfast, lunch, and dinner would be provided. He really hated to cook, and couldn't afford restaurants, even fast food. He especially liked that the Omega meals would be very healthy, well-balanced, and nutritious, pretty much like his mother used to make.\n\nHowever, as a resident of the Omega Theta Pi house he would have to adhere to the same rules as the sorority sisters. It would not work at all well if some residents of the house were treated differently from others, and there were quite a few rules. For example, breakfast, lunch, and dinner were served at designated times and a sister risked not being served if she arrived late. No elbows on the table while eating. Napkins unfolded only after Miss Wormer unfolds hers. Don't blow on the soup to cool it. Soup spoons begin at the edge of the bowl and move toward center (tip the bowl only slightly when it's almost empty). Cut enough food only for the next mouthful. Do not talk with any food in the mouth. There were quite a few more dining rules as Omega girls had to learn faithfully Miss Manner's Dining Etiquette.\n\nNo snacks could be taken from the kitchen after 10:00PM. On school nights lights had to be out by 11:00PM. No guests allowed in the house after 9:00 PM. Sisters had to be back to the house by 9:00PM on a school night, and 10:00 PM on Fridays and Saturdays. No kissing of a date on the porch for longer than a few seconds (the cheek is preferable). Sisters had to maintain a minimum 3.0 GPA (i.e., B average). No smoking anywhere in the house or even on the surrounding grounds (no drinking anywhere goes without saying). No dirty laundry on the floor. No lewd or lascivious pictures within any bedroom. No artificial devices for self-abuse. No dating of a sorority sister's boyfriend for at least two months after any break-up. A few of the rules would not apply to Albert but he was expected to adhere to the rest.\n\nThe first week for Albert was a bit of a struggle. The dining rules were particularly difficult to master. However, that wasn't the most difficult problem. What was worse was that he could tell that most of the girls were not especially happy about him being there. They were cordial and friendly, but not enthusiastically or sincerely welcoming.\n\nThe girls did treat him oddly. It was like they weren't really sure they wanted him there. It was nice to have his room and board money, and they knew that if his stay did not work out then they would not be able to have the number of male guests really needed for the financial survival of the sorority, but he just wasn't a guy that anybody actually wanted around. He was just kind of, well, uninteresting and pointless as a man. He just seemed like an intruder, an awkward guest, if not an unwelcome guest. Nobody felt terribly comfortable with him, nobody wanted to get to know him.\n\nAlbert felt like he was something of a curiosity, a stranger in a strange land, like he was a walking exhibit at a zoo, always being looked at with some curiosity, and so often feeling like he just didn't belong, like he had wandered into the wrong house and the people living there were not telling him to leave but were just tolerating his presence as best they could.\n\nIn the first week he kept a pretty low profile. He ate his meals quickly, albeit he was scolded for that, as one shouldn't finish one's meal ahead of the host or the majority of persons at the table. He avoided the recreation room (where all the girls would chat and watch television in the evening), and he retired to bed very early.\n\nMiss Wormer did provide him with some slack in regard to the rules, as there were so many (the pamphlet, \"Rules and Regulations of Omega Theta Pi,\" was more like a small book than a pamphlet). He would not be expected to have appreciated and absorbed them as fully as a true member of the sorority. But, there were also a number of special rules just for him. For example, there was just one bathroom on each of the second and third floors. The house had been built as a sorority and did not include a men's room on the bedroom floors. There simply would be no need for them. There was a small bathroom on the main floor that male guests could use, but it did not include a shower and would certainly be inconvenient for Albert, whose bedroom was on the second floor, halfway down the hall (Stacie and Pamela's rooms were on the third floor).\n\nAlbert was informed by Miss Wormer that he would have sole access to the bathroom on the second floor beginning at 5:00 AM but he must be finished with it by 5:30AM. It was a considerable amount of time, more than he really needed in the morning, but it was terribly, terribly early. Prior to moving into the Omega house the earliest he would get up would be 7:30AM and that would only be if he had an 8:00AM class. But, he did understand Miss Wormer's point that they simply could not have all of the girls waiting on him in the morning, many of whom could miss their classes. He was told that if everything worked out alright they would bring in more men, perhaps even reserving the entire second (or third) floor, and the respective bathroom, for the male guests.\n\nThere was, though, a plus to the schedule. The shower room was quite large, having two rows of four shower heads, and he had the entire room to himself for that half hour. He eventually gave into the temptation of turning all the showers on at once, filling the room with intense blasts of hot, steamy water, and then sliding back and forth across the slippery tiled floor on his butt. It was good clean fun, as long as he made sure to get out of there by 5:30.\n\nThe bathrooms on the second and third floors were otherwise off limits to him, forcing him to use the small one on the main floor, including even for his evening ritual before going to bed. He felt quite silly the first night walking around on the main floor in his pajamas, particularly as he was going to bed so early. None of the girls were themselves yet dressed for bed, and they giggled as he walked by in his pajamas with his toothbrush and toothpaste, making his way to and from the main floor bathroom. Once he was back in his bedroom he shut the door with considerable relief. He would stay up longer studying, eventually hearing the sounds of the girls making their way to and from the bathroom on the second floor. He wondered if they were in their pajamas as well, or perhaps even nighties, but he dared not go out there.\n\nHe considered sneaking a peek out his door. He did have access to the hallway up until the point of lights out. He had a technical right to be there. But, he feared getting caught and embarrassing himself. What would Miss Wormer do if she caught him acting like a peeping tom? He could perhaps just stroll out of the room, like he needed to go to the bathroom or something. His heart raced as he thought about that, but perhaps as much out of fear as excitement. He might actually offend or upset some of the girls and then it could get even worse for him.\n\nA couple of times he did have a strong urge to pee as the 11:00 lights out time approached but he decided that he would just have to hold it until morning, although one time he finally broke down and peed into an empty cola bottle, which he hid in his closet, his heart racing when Miss Wormer stopped by shortly after 11:00PM for her bed check. Imagine getting caught with a cola bottle of pee in the closet! He would most assuredly get into trouble for that.\n\nMiss Wormer was indeed a taskmaster and a stern disciplinarian. Omega sisters would earn demerits for each rule violation they committed. On Sundays the sisters would meet to discuss sorority business and affairs. The meeting would end with a counting of demerits and the implementation of each respective punishment.\n\nNo member of the Livingston College faculty had yet implemented the methods of the New School that were practiced at their sister college, Templeton (see \"Disciplining young ladies\"). Miss Wormer though was herself old school but to her that in fact included some of the methods of the New School. As she would say, \"spare the rod and spoil the child.\" She did not take this saying literally, as she would never use a rod to discipline one of the sorority girls. She felt that would be unnecessarily cruel and harmful. But, a prudent spanking can go a long way toward developing a more responsible and disciplined young lady.\n\nIt did not take long for Albert to discover the benefits of a good spanking.\n\nAs a resident of the house he had to adhere to its rules, and therefore also attend the Sunday meeting. He could not cast an official vote on matters concerning the sorority, but he could participate in matters concerning household functioning, and that included the counting of demerits and the resulting punishments.\n\nThe latter at first proceeded innocently enough, as most of the girls had earned enough demerits for only minor reparations, such as having to wash dishes, clean the laundry room, or weed the garden. But, when it eventually came to Shelley Darlington, she had apparently earned quite a few more demerits.\n\nMiss Wormer, the sisters, and Albert were meeting in the basement recreation room. The couch had been pulled back and the room was filled with rows of folding chairs. At the head of the room was a small platform upon which the girls occasionally did skits, plays, and shows (fashion night was always very popular, as the girls pretended to be New York models). Miss Wormer was sitting in her chair of authority on the platform, facing the girls. She called Shelley to come up onto the stage.\n\nShelley knew what this meant and she proceeded quite slowly and reluctantly, her eyes glued to the floor, not wanting the embarrassment of any eye contact with her sisters, as well as to avoid seeing the stern irritation within the eyes of Miss Wormer.\n\nWhen she finally arrived on the stage Miss Wormer directed her to sit down in the empty metal folding chair that was next to her. Shelley did as she was told, her hands clasped demurely within her lap. Miss Wormer got up from her more comfortable easy chair and reached for her purse, which was sitting on a small side table.\n\nAlbert's eyes widened with interest. Shelley Darlington was a very pretty girl. She had in fact been chosen by the girls to represent them in the Livingtston Renaissance Faire. She had lovely wavy blonde hair that hung just past her shoulders, a very perky pointy nose, twinkling brown eyes beneath full fluttering lashes, rosy red cheeks and the cutest little dimples.",
        "\"Now, Miss Darlington, I wonder if you would explain to me, and to your sisters, what this was doing within your dresser drawer.\" She pulled from her purse a small pink vibrator.\n\n\"Mother Wormer!\" Shelley exclaimed in shock, looking away from the offending object, as if its bright pinkness was painful to the eye (the girls at times referred to Miss Wormer as \"mother,\" albeit she was just the Housemother). She brought the fingers of her hand to her lips in embarrassment. Was there anything more shameful than to have your little helper be displayed to the entire sorority? Actually, there was, and that was to have it displayed to a boy!\n\nGasps could be heard among the girls within the audience, and a number of heads quickly turned to look at Albert, who was sitting in the last row. He did not feel comfortable taking a closer seat, and he wondered why so many of the girls were now furtively looking back at him, a few of them with little grins, some looking quite anxious and concerned.\n\nThe girls had thought about all the fun it would be to have a guy living in the house, particularly if he was a big handsome young man. They had not really worked through in their minds all of the potential problems that might also arise.\n\nShelley though didn't really need to worry, as Albert didn't understand what all the fuss was about. He could clearly see the object in Miss Wormer's hand. He was in the last row but there were only about five rows of seats. In any case, he didn't know what it was. It was shaped like a really small obelisk (he estimated only about six inches) or a really large bullet.\n\nThen, he had an epiphany as he remembered seeing one of those things once in his parents' bedroom, sitting out on his mother's dresser. It's a muscle relaxant! His mother said she used it to help with back pain. It vibrates and she moves it around and around on a muscle strain. He subsequently asked to use it himself when he twisted an ankle, but his mother said it was broken. In any case, he couldn't really get why Shelley was embarrassed about it. His mother though had also seemed rather flustered when he found hers.\n\nMiss Wormer explained, \"You know, Shelley, that these are not acceptable devices for young ladies of good moral standing. Would you like your parents to know you have something like this?\"\n\n\"Please, Mother Wormer,\" Shelley pleaded, \"this is so embarrassing.\"\n\n\"Yes, yes, it is. You at least appreciate that you should indeed feel ashamed for having such a thing. Have you in fact been using this?\"\n\nShelley's face turned even redder, if that was possible. How do you answer such a question? It would be so embarrassing to say \"yes,\" but clearly such a ridiculous lie to say \"no.\" Why else would she have it? Well, maybe not so ridiculous. She turned to look up at Miss Wormer, who was standing to her left. \"No, no, ma'am, I haven't, honest.\" It was a very bold and risky lie. Quite a few more demerits are awarded for lying to Miss Wormer. In fact, many of the girls had experienced more punishment for a failed cover-up than they would have received for the original crime. That was always a very important lesson: better to admit your crimes than to try to hide them.\n\nMiss Wormer waved the vibrator at Shelley. \"Do you really expect me to believe that, young lady?\"\n\n\"Oh, but Mother Wormer, I just got it. I mean, it's not mine. I was hiding it for a friend. She asked me to keep it for her, just a couple of days ago. I knew I shouldn't but I really didn't want her to get into trouble.\"\n\n\"You were hiding it for one of the Omega girls?\"\n\n\"Oh no! No! Certainly not, no, no.\" It's a tangled web one weaves when one deceives. \"It was for this friend who still lives at home. Her mother found it and she was so upset and so I said I would keep it for her, just temporarily, until she figured out what to do.\"\n\n\"Her mother gave it back to her?\"\n\nOops. That didn't make sense. \"Yes, yes, um, she told her to throw it away herself.\"\n\n\"So, you're helping this friend to deceive her mother, to explicitly intentionally disobey her mother's instructions.\"\n\nWell, once again, the cover-up didn't really work that well. She shamefully bowed her head and confessed, \"It's mine, Mother Wormer. I'm sorry, really I am.\" Now Miss Wormer knew, all of her sorority sisters knew, and even that boy Albert knows, that she has been using a vibrator. She felt so, so embarrassed.\n\nOnly a couple of the girls though were at all troubled by that. Most fully understood the interest, if not the need, and a few of them had their own such helpers (which they vowed now to hide even better). Miss Wormer though was quite troubled by it. A good, decent, purity girl doesn't masturbate, and certainly not with artificial devices. It was not real sex but it was clearly a very slippery slope and one that Shelley was on the verge of sliding down.\n\n\"Well then, I think you know what you must do, Shelley.\"\n\n\"Yes, Miss Wormer.\"\n\n\"Why don't you get up from the chair, turn it around, and assume the position.\"\n\n\"But, Miss Wormer,\" Shelley exhorted. She lowered her voice to a whisper, \"Albert Pence is here.\"\n\nMiss Wormer looked out over the rows of girls, spotting Albert sitting at the back, looking quite attentive. \"Yes, well...\" she said aloud as she pondered the situation, tapping the vibrator in her hand.\n\nThe girls in the audience sat breathlessly, wondering what Miss Wormer would do.\n\nShe eventually turned back to Shelley. \"Yes, well, you girls wanted young men to become residents of the house and participate in all the relevant activities.\"\n\n\"I know, I know, but geeeez; this?\" First it was losing her dress in the Dunk-a-Wench at the Renaissance Faire (see \"The Renaissance Faire\"), and now this? It just didn't seem fair. \n\nMiss Wormer though was not moved. She returned the vibrator to her purse. \"You apparently felt immodest enough to secretly harbor a device for self-abuse. I don't imagine you should claim some sort of modesty now. And, besides, I think it will only serve to help with the lesson. Now come on.\" She loudly clapped her hands to emphasize her impatience over Shelley's dilly dallying. \"Let's not waste any more time.\"\n\nWith Miss Wormer's reference to self-abuse Albert suddenly understood what the device was used for. His face flushed with embarrassment at the realization that he had been looking at a girl's masturbatory tool, and had been doing so in the presence of so many other girls. He immediately began to imagine Shelley using it, his heart rate accelerating at the thought, and then even more so as he watched Shelley slowly get up from her chair and turn it around. Was he about to witness what he was thinking was about to happen?\n\n\"Oh Mother Wormer,\" Shelley again pleaded, one last time, for some consideration. This was really so humiliating.\n\nMiss Wormer again though just clapped her hands, her face stern and unmoving.\n\nShelley bent over the back of the chair and grasped hold of the seat with her hands, presenting for the sisters of her sorority, and the young man, her bottom.\n\nIt was a very wonderful sight for Albert. He now wished that he had taken a seat in the front row, and certainly vowed to be sure to arrive on time next Sunday in order to get a better seat. But, he really wasn't very far away and was treated to a very pretty picture of Shelley's cute perky bottom so wonderfully outlined by the thin, soft, loose fabric of her skirt falling across its curves.\n\nBut, apparently, that wasn't the end of it. Miss Wormer reached down and took hold of the hem of the young lady's skirt and pulled it up her thighs and over her bottom, to hang it down across her back. The only consolation, if it could even be said to count as one, was that the skirt now draped across her head, effectively hiding her shamed face, which Shelley further hid by letting go of the seat to cover her face with her hands.\n\nThe girl just couldn't believe it. It was always quite embarrassing to be presented in such a way to the sisters of one's sorority. The shame was diminished somewhat by the fact that many of the other girls had been punished this way as well. It was obviously though much more disgraceful and scandalous for a boy to be now witnessing this!\n\nShelley didn't know how she could possibly look Albert in the eye after this, after having to show him her pantied bottom.\n\nAlbert was indeed very appreciative. He had no idea that this would be one of the benefits of renting a room at Omega Theta Pi. He was in fact ecstatic at his good fortune. If asked, and he was by Miss Wormer, he was not at all experienced with girls, and so he was quite surprised at having been chosen among so many more successful, attractive, and desirable male applicants. Miss Wormer had inquired explicitly into his sexual history, much to his discomfort. Apparently the fact that he had little to no experience had not been a problem (on the contrary, it was a big plus in Miss Wormer's mind).\n\nIn any case, he had not before seen a girl presenting her bottom like this to him. Well, she wasn't really presenting it to him in particular, but it sure looked that way. Albert's penis quickly began to swell within his briefs.\n\nShelley wasn't wearing the most provocative panties one could own. Miss Wormer would not allow that. \"Scanty panties lead to raised skirts,\" she would say. She even conducted surprise panty drawer inspections to enforce the policy.\n\nShelley's panties were just yellow cotton hipsters with a violet trim, decorated with little violet hearts. But, to Albert, they were terribly exotic and alluring. He had not seen anything like this before. Her derriere looked so round, so luscious, poking out from the stage. Plus, his eyes fixed as well on that little bulge between her thighs, just below where the apparent crack of her bottom ended. It was Shelley's sweet, adorable cunnie pouch very clearly outlined in tight yellow cotton. One of the hearts even appeared to be very centrally located, as if it was there just to provide a bit of affectionate decoration for her femininity.\n\nAlbert crossed his legs. He glanced around to see if anyone was noticing him. He felt such a strong need to shift his swelling cock into a more comfortable position. But, there was no way he could as girls were still glancing back at him.\n\nEveryone found his presence to be quite uncomfortable and troubling, and they continually wondered how he was reacting, what he was doing and thinking. The few girls sitting in the same row as him were stealing peeks out of the corners of their eyes.\n\nAlbert decided that he would have to tough it out, at least with respect to shifting his swelling cock. It was a sacrifice that he was willing to make, but he did at least rest a hand in his lap as nonchalantly as possible. The bulge would otherwise be really quite noticeable.\n\nMiss Wormer sensed the discomfort of the girls over Albert's presence, which only affirmed her decision to have him remain. It was very evident that in the future the girls would be much more reluctant to earn sufficient demerits for a spanking. His presence was really very, very helpful. The stakes were now clearly raised. In fact, she raised them a bit further. She reached for the waistband of Shelley's panties and in one smooth, professional motion she pulled them down to her knees. \"Keep the panties at your knees, Miss Darlington,\" she instructed the girl.\n\nGasps could be heard among the girls and Shelley groaned with mortified abasement. Her position was just so obscene: her naked bum poking up like some animal presenting herself to be mounted. She parted her legs so that she could hold the panties at her knees but she knew in doing so she was providing Albert an even better peek at her naked cunnie.\n\nIt was only natural for Shelley's panties to be pulled down. The spankings were normally bare bottom. Not doing so would have been rewarding the miscreant girl because of Albert's presence, allowing the punishment to be less than it should. If anything, Albert's presence should strengthen the punishment, not weaken it.\n\nAlbert instinctively smiled, causing a few of the girls to blush, vicariously sharing Shelley's embarrassment.\n\nIt was in fact more than just a peek. Albert had a really good view of Shelley's lovely sweet pussy, even at his distance, and he was entranced with the sight. It was his first real live exposure to a girl's naked cunnie lips and it was all that he could possibly imagine. It just looked so pretty, so sexy, so alluring. Shelley did not shave down there but nothing was hidden. He could see very well the soft lily white mound, lightly speckled by a thin growth of delicate hairs, and parted by such a deliciously graceful cleft. It was really quite striking how something so simple could be so enticing. He wiped the smile from his face, drawing upon all of his strength of character to look like he was largely dispassionate and disinterested, as he felt the swelling bulge of his knob pressing against his thumb in his lap. He very lightly, very subtly, caressed the tip of his crown with his thumb, just ever so discretely rubbing his thumb around and around, his eyes glued to the girl's exposed cunt.\n\nThe chances of Albert being seen though, being caught playing with himself, were diminishing as fewer girls were now stealing glances at him, finding the experience rather embarrassing for themselves as well. After all, Shelley was one of their sisters. They imagined how difficult it would be if it was one of them up there, and they vowed to behave much more properly in the future. Many of the girls also crossed their legs, or squeezed their thighs together, feeling a strong need to keep their own pussies as covered and hidden as possible.\n\nMiss Wormer moved over to the other side of Shelley. It was the more natural side to provide a spanking. She first explained, \"Now, this won't be very many spanks, Miss Darlington, given that you did in fact confess your crime. But, I think it's important that you appreciate that we can't have such things in the house.\"\n\nShelley removed her hands from her face to respond, \"Oh, Miss Wormer, I only did it once!\"\n\nIn saying that Shelley only further embarrassed herself, and excited Albert.\n\nPlus, it was obviously a pathetic lie, like saying you only took one puff, or just one sip. It only made Miss Wormer reconsider her promise to go lightly.\n\nSmack!\n\n\"Yeow!\" Shelley squealed. It wasn't a hard spank, but the first one was always quite startling.\n\nSmack! Smack! Smack! Smack!\n\nAs the spanks rained down upon Shelley's bare naked bottom so did the appeals for mercy and kindness pour from her mouth. \"Miss Wormer, please!\" \"I'm sorry!\" \"Not so hard!\" \"I'll be good!\" \"I won't do it again, never!\"\n\nSmack! Smack! Smack! Smack! Smack!\n\nAll of the girls were now squirming in their seats, imagining their own bottoms receiving such a treatment. A few of the girls though were feeling a little warm between their thighs, Pamela in particular (see \"The Renaissance Faire\"). Getting a spanking was quite embarrassing, but a few would have to admit that they did actually kind of enjoy it. They even engaged in little private spanking parties, which were quite difficult to arrange as it was not easy muffling the sound of a spanking.\n\nSmack! Smack! Smack! Smack! Smack!\n\nAlbert felt like his eyes would pop out of his head. Shelley's girlish little round tush was taking on such a pretty rosy sheen, like blush was being applied to her cheeks. Her squirming and prancing were also just so enchanting and enticing. It was like she was doing a little provocative dance for him, intentionally trying to get him all excited so that he would dash onto the stage and mount her. Plus, all that sashaying, all that skipping and romping, was providing him with occasional peeks down into her crack, the big one, the one that hid the girl's sweet little puckered rose bud.\n\nSmack! Smack! Smack! Smack! Smack!\n\nHe was going to have to immediately jerk off when this done. There was simply no way he could not, although he also knew that he should try to force himself to put it off for awhile, as it might just be a bit too obvious, him rushing back to his room. And, he did wonder how he was going to possibly get up from this seat and still keep his erection hidden. Next time he would bring with him some books to hold in front of him.\n\nSmack! Smack! Smack! Smack! Smack!\n\n\"Mother Wormer! My gracious! Please! I'm so, so sorry!\"\n\nMiss Wormer stopped. She had not planned on spanking the young lady for very long. And, it wasn't really the physical component of the spanking, the stinging, that was the primary deterrent. It was more the public shame and embarrassment, and she imagined the presence of Albert in the audience had provided quite a bit more to this lesson than any additional spanks could possibly do. His presence had provided a very unexpected bonus, which was quite ironic as she had expected the presence of a boy in the house to be more disruptive than beneficial to further developing the young ladies' moral character and chaste purity.\n\nShe stepped away from the girl's bottom. \"You can pull up your panties now, Miss Darlington.\"\n\n\"Thank you, ma'am,\" Shelley gratefully responded, the contrition so clearly evident in her voice. She quickly reached back, grasped hold of her panties, and yanked them back up, her long skirt falling back down over her bottom as her hands struggled a bit beneath it to get her panties back into their best proper and comfortable position. When she felt ready she turned and quickly made her way back to her seat, her face as red as an apple, her bottom a slightly lesser pink.\n\nThe meeting soon ended and Albert immediately extricated himself from the room, an advantage of being in the last row. The girls didn't seem to notice his hurried exit, or at least they didn't mind. They were avoiding eye contact with him.\n\nAlbert made his way quickly to his bedroom, knowing full well what he was going to do. Jerking off though was also a bit difficult at Omega Theta Pi.\n\nOn the one had it added to his sexual excitement to hear the giggling and tittering of the girls outside his door while he was playing with himself. He could imagine them all in their PJs, their boobies bouncing and wiggling without their brassieres, perhaps even visible through a sheer nightie.\n\nBut, none of the bedroom doors within Omega Theta Pi could be locked. Who locks their bedroom doors within a home? Security within the house was fully covered by the lights, camera, and locks on the front and back doors. There was no need for any further security within the house. Miss Wormer also insisted that the bedrooms remain unlocked to allow her ready access for bed checks and any other impromptu inspections she might feel would be useful.\n\nWell, that made it a little risky and unnerving for when Albert wanted to masturbate. Imagine getting caught by Miss Wormer doing that! Or, perhaps, some girl might just innocently open the door, mistaking his room for someone else's (although there was a clear sign posted on his door to avoid any such accidents). Albert therefore typically waited until after bed check to take care of business, when he felt far more secure in having full privacy.\n\nDisposing of his cum rags though was a bit awkward. He couldn't just put them in his wastebasket or any other one in the house (if discovered, whose else would it be?). He couldn't flush them down the toilet (his mother once complained that the toilet was getting clogged much too often, and it was quite embarrassing when a plumber informed her that it was getting clogged with paper towels). So, he would use one of his socks. When he was done he would bury it in his dirty laundry basket. Given that he would be doing his own laundry it should be a pretty safe system.\n\nThis night, though, he couldn't wait until after bed check. He did wait awhile, but when he began to hear the girls going to and from their bedrooms and bathroom, himself lying on the bed in his own PJs, thinking about Shelley's spanking, he just couldn't wait any longer.",
        "He did though get off the bed and move to another location. Anyone stepping into Albert's bedroom would first see the two dressers along the wall to the right. As one turned left the two twin beds against the wall to the left would come into view. What would be seen last would be the corner of the room immediately to one's left. One in fact had to step a bit into the room to see that corner as there was a large closet along the wall shared by the hallway, which blocked the view to the left for a couple of feet into the room.\n\nAlbert positioned himself in that corner. If Miss Wormer suddenly came in he probably would have time to hide the evidence. He reached into his pajama bottoms and pulled out his stiff dick, which he had considerable trouble keeping down ever since the spanking. And, it felt so, so good to finally have it clenched in his hand. He considered squirting some lotion on it. It felt really good to jack off when it was all slippery and slick. But that way was also a bit noisier. It was not terribly missed though as he soon generated sufficient pre-cum to fully enjoy the feel of his foreskin sliding on and off his swollen crown.\n\nHe closed his eyes and recalled the sight of Shelley's deliciously bare pink bum, fleshy feminine mound, and that intoxicating, mysteriously enticing slit, all the while hearing in the background the sounds of the girls wandering in the hall, likely all dressed in their bedtime clothes, perhaps many of them even partially undressed, perhaps so even in sheer nighties.\n\nAn erection can provide a young man with considerable courage to do things he normally wouldn't do. It was like he has been energized, filled with the testosterone needed to boldly go where a young man normally feared to tread. Perhaps it is what makes young men brave and courageous.\n\nAlbert decided that he had enough with hiding in his bedroom after 10:00PM. It was his right to be in the hallways up until 11:00PM! He was no longer going to act like a scared little boy, intimidated by a bunch of girls. He was going to assert his rights as a member of this house!\n\nHe did though first remove his PJ bottoms to put on his tightest pair of jockey briefs. They were in fact too small for him. He used them for when he was swimming in his loose cutoffs and trunks. It provided extra-protection against his parts becoming visible through the wet, clinging cotton, and it should work well for a comparable concern tonight.\n\nFeeling emboldened, fearless, and very aroused, Albert opened the door to the hallway and stepped out. Of course, bravery can sometimes lead to rather foolhardy decisions, especially when fueled by one's testicles. Thinking with one's cock isn't always the best thing to do, but it can also be so difficult to resist.\n\nThe immediate effect though was entirely reinforcing. Up and down the hall was a bevy of girls in various states of nighttime dress, or more accurately undress. It was a veritable cornucopia of feminine delights. He cursed himself for having waited so long to do this.\n\nHe was a bit self-conscious about being in his pajamas but that was quickly dispelled by the sight of so many girls in theirs. It was like he had joined their pajama party, and any boy would certainly enjoy that.\n\nHowever, it was more like he was crashing their pajama party. The girls were clearly not expecting him. His presence was met with sudden squeals of alarm and quick dashes to bedrooms or to the bathroom, like young hens scattering from a fox entering the coop. But their departure was not so quick that Albert could not see a few pairs of breasts bobbling and wiggling beneath flimsy nighties, panty clad tails wagging behind them as the girls scampered off. He had indeed been correct that some of the young ladies wore nighties to bed and he was even treated to a few very clear displays of perky round white boobs. If only his eyes were cameras. He so much wanted to burn these images into permanent memory, as he figured the girls would be much more careful and discrete in the future when they entered the hallway for their nighttime rituals.\n\nSome of the girls did not immediately scamper off, largely those wearing more modest pajamas, but they were still very, very pleasing to the eye. It did not appear to Albert that they were wearing brassieres or perhaps even panties beneath their pajamas.\n\nHe wondered if they knew he had an erection. Of course they didn't, but they had to suspect, didn't they? He could see that despite their best effort to act as if they didn't care he was there they were still a bit nervous and uncomfortable. He had gone from being the one taunted and teased to the one feared and respected. Well, maybe not respected, but he was clearly now more on the offensive than the defensive.\n\nHe wished his PJ bottoms had a pocket in them so he could casually slide his hand in and play with himself. It was rather uniquely pleasurable to walk down the hallway, sporting a giant erection amidst this bevy of young ladies dressed only in their nightclothes. He would have enjoyed simply peeking at them through a crack in the door, voyeuristically enjoying his little peep show, but he was in fact walking among them. He felt now more like a rooster (than a fox) as he strolled down the hall considering who might be his mate for this evening, admiring the charm of their intimate bedtime apparel.\n\nThe girls who had not dashed off tried to just ignore him, pretending that his presence was of no real concern, but it was clearly disconcerting. Many instinctively checked or adjusted their hair, realizing that they had not put on their best presentation, not having expected a man to be around. Others grasped their pajama blouses, as if they worried that they might just spring open. Very few of them made eye contact, none of them sustained it. Albert now felt like the lion of the forest, fully in command of the terrain.\n\nSome of the girls crossed their arms to provide a bit more cover, particularly those who were not wearing brassieres, fruitlessly hoping that the boy would not notice how much their titties were jiggling. Just when you wanted your bubbies to behave, to be hidden, they appeared to dance and prance, just begging for attention. If their boobies were children they certainly needed to be scolded, told to sit still, but there was nothing the girl could do about it, as any little movement set them off.\n\nAlbert suddenly stopped when he reached an open doorway into another bedroom. It was the bedroom of Sandy and Theresa, and Theresa was standing in front of her dresser mirror. She was deep in thought, studying herself in the mirror, clearly contemplating, pondering, something to do with her body, which was currently not well concealed. Theresa was wearing only her brassiere and panties, which were really quite lovely, despite Miss Wormer's rules. She was wearing violet cotton panties with pink lace trim colored with yellow daisies. The matching brassiere was also very flattering, as the half-cups nicely pushed up and together her full round boobs, which stuck out well from her chest.\n\nYes, it must be her brassiere she was studying. She cupped each of her breasts in her hands as she contemplated the fit. She lifted them up further and turned her body first a bit to the left, then to the right, observing how they looked from various angles. It wasn't clear whether she liked or disliked what she saw, as her expression remained dispassionate, objective, and focused, concentrating her attention so intently on her bubbies, considering all angles. She should though be quite pleased at what she saw for they appeared so full, so round, so perky. She even leaned forward a bit, to see how much cleavage was revealed, her bottom thrusting out as she did so, becoming so nicely curved and provocatively suggestive.\n\nAlbert clearly liked what he saw from the open door. He glanced up and down the hall. The girls were largely avoiding him, trying to ignore him. He pretended that he was studying the sign on the wall next to Theresa's room. It concerned what to do when the fire alarm went off. He was simply being a responsible member of the house by closely studying the rules and guidelines for fire safety. But his eyes were actually focused elsewhere. He was now very much the voyeur, watching something he knew that he was not supposed to see.\n\nClearly Theresa was not used to having a man in the hallway, otherwise she would have shut her door. Albert had been at the house for sometime but until now had kept to himself within his room after 10:00 PM. Theresa naturally assumed that tonight would be no different, but she was clearly wrong. She even shook her shoulders a bit to see how her bubbies wiggled and bobbled within her brassiere, causing Albert to smile with appreciation.\n\nAlbert so wished he could touch himself right now. He again glanced left and right down the hall. He sure didn't want to take a chance getting caught peeping into a bedroom at a partially undressed sorority sister. That would most assuredly be a major rule violation, at least for him. Heck, it might even be against the law! But, he wasn't really sure about that. He wasn't peeking into her window. He wasn't trespassing. If you noticed a girl undressing through an open window while standing on a public sidewalk, would that be against the law? Well, the legality of it didn't really matter. He did know for a fact that Miss Wormer would be very upset about it. With considerable reluctance he moved on.\n\nHe didn't really know where he was going. He wasn't even heading in the right direction for the bathroom that was on the first floor (the one he could use). When he reached the end of the hall, at the entrance to the bathroom the girls were using, he glanced at the door. He was tempted to step into the room, at least for a moment, knowing that he would be faced with at least a few girls that would likely be totally naked. He could perhaps claim that he had momentarily forgotten about the rule but, again, his better half maintained self-control and he avoided any such temptation. He did pause there a bit, hoping that the door would open, providing a quick peek inside, but when Molly came up to the door to let herself in she made sure that she opened it just enough to allow herself to squeeze through, giving him a quick glare of disapproval.\n\nHowever, immediately after Molly entered the bathroom Shelley exited, speaking to a girl behind her as she did so about how embarrassing the spanking had been, particularly with Albert sitting there, not aware of the danger she was approaching. If she had she would have pulled the towel around her before she left the room, rather than deciding at the last minute to make some adjustments as she was opening the door. From Albert's perspective it looked like she was intentionally opening the towel up for him to show off her young, shapely and entirely naked body, and what a pretty one it was.\n\nAlbert's mouth fell open in shock at the sight of those fresh firm round wiggly boobs, openly displayed in front of him, and the very stiff nipples, fresh from their invigorating shower, standing up so proudly. But, of most interest was the darling cleft between the girl's thighs. It was Albert's first frontal view of a young lady's cunt and his dick yearned lustfully to get a closer look, albeit the current one was still very, very fetching. Albert's eyes were transfixed and he stood frozen in place, like a deer caught in the headlights of approaching round, bright, shining breasts.\n\nIt was a comparison that was not far off the mark as Shelley continued to step forward as she began to drape the towel around her but then stepped right into, colliding with, the frozen Albert, the towel falling from her hands. \"Albert!\" she exclaimed in shock. Her hands first went to her mouth with startled surprise at the unexpected presence of the boy in the hall; her body, her breasts, colliding with him.\n\nAlbert, ever the gentleman, did not smile with glee at the girl's misfortune, although he had every right to do so, having made actual contact with a naked breast for the very first time. It wasn't much of a contact, just a bump on the side of his arm, but the first time is always so special, so memorable: the touch, the feel, of a soft, squishy, pliant boob.\n\nHe immediately bent over to retrieve her towel. \"Here, Shelley, let me get it.\"\n\n\"What?!\" Shelley recovered enough to now hide herself as best she could with her hands, one hand going to her delicate cunnie, the other to her boobs. They did hide the very best and most important specific parts but there was still much to be seen and the pose was itself rather endearing. It made it so very clear how embarrassed, vulnerable, and exposed she felt. First the dunking booth at the fair, then the spanking, and now this. She just couldn't catch a break.\n\nAlbert paused only briefly as he retrieved the towel lying at the girl's ankles, looking up at her, smiling sheepishly. He did so much enjoy the view. She just looked so darling, so vulnerable, so sexy. It's not too often he had been this close to a naked girl before. Actually, never before, and he would so much prefer to stop and fully savor the moment. But, he did in fact share Shelley's embarrassment. He was not a predatory male, one who enjoyed taking advantage of girls without a shred of guilt or self-consciousness. If he was he would have been in this hallway the very first evening. And, he would stretch out this moment as long as possible, perhaps suggesting a kiss for the return of the towel. Instead, it had taken his balls churning to maximum arousal to draw him out among the enticing array of feminine delights and he did feel sorry for the girl.\n\nHis face flushed red as he handed Shelley her towel, not appreciating that she didn't really have any available hands to take it from him.\n\nShelley released just a couple of fingers from her boob, not wanting to break entirely free from her breast.\n\n\"Oh, yeah, sorry,\" Albert quietly responded, recognizing that she couldn't really let go of her breast to retrieve the towel. He hung it on her outstretched fingers, one of which he noticed was adorned with a purity ring. For one brief moment he was within an inch of a girl's naked boobs. He briefly made eye-to-eye contact but then looked away, perhaps feeling now almost as embarrassed as her.\n\nOnce he draped the towel on Shelley's fingers he quickly extricated himself from the mutually embarrassing moment and made his way rapidly back down the hall, back to his room. He realized that he had perhaps taken this too far. While he did have a right to be in the hallway he was most certainly not behaving in a manner that Miss Wormer would likely appreciate. He was clearly trying to take advantage of the situation, and that just wasn't right. The evident embarrassment in Shelley's eyes had woke him up. \n\nBut, once he was back in the privacy of his own room he quickly made his way to his bed. He felt so excited, so aroused. He had to have immediate relief. He was pulling down his PJ bottoms and briefs as he approached the bed, and then simply turned around and fell back onto the bed, clutching his hard stiff dick in his hand. Perhaps never before had his cock so much enjoyed the feel of his master's hand gripping it around the shaft. He rapidly slid his fist up and down, thinking about Shelley's bare naked boobs and cunnie lips.\n\nMaybe it would be better to take his time, but constraint and patience were no longer options. He just wanted to cum, and to cum hard.\n\n\"What is that you are doing, young man!?\"\n\nIt was Miss Wormer, standing in the doorway to his bedroom, with a very shocked and displeased expression on her face, to say the least.\n\n\"Miss Wormer!\" Albert exclaimed, immediately leaping from the bed, bending over to reach for his PJ bottoms and briefs. He had never been caught jerking off before, not even by his mother, although he had come close quite a number of times. There was perhaps no worse of an embarrassment for a young man than this.\n\n\"I'm sorry, um, I was, um...\" Is there anything one can say that would undo the damage? What could one possibly say?\n\nApparently one of the girls had gone to Miss Wormer to complain about Albert being in the hallway, possibly even peeking into Theresa's bedroom. Miss Wormer immediately proceeded to Albert's room to further educate the young man. She had already estimated a substantial price in demerits for that behavior (although she would certainly first consider his side of the story) but the total count now went up considerably.\n\nMiss Wormer only rarely knocked on the girls' doors when she arrived at their bedrooms. There was no need to knock if they weren't doing anything that they shouldn't be doing. She provided Albert with equal consideration, and when she discovered thereby that he was in fact openly masturbating on the bed she was glad that she had not knocked, providing the young man an opportunity to hide his self-abuse. It was especially troubling to her to realize that he was probably doing it precisely because of his inappropriate and disrespectful behavior within the hallway.\n\n\"Young man, do you realize how objectionable such behavior is within a sorority house?\"\n\n\"Yes ma'am!\" Albert quickly responded. \"Absolutely, really, I am so, so sorry,\" he added with as much sincerity in his voice that he could muster, struggling to get his briefs and PJ bottoms untangled with one hand, the other trying to hide his erection. If he just took his time and used both hands it would not have been terribly difficult. But, he really didn't want to have Miss Wormer see his stiffie again, and it's not that easy to pull up briefs and pajama bottoms with just one hand when one is panicked.\n\n\"I imagine that you are sorry that you were caught. Do you take some pleasure in exposing your erection to the Housemother?\"\n\n\"Oh gosh, no, ma'am,\" he pleaded, the briefs and PJ bottoms now up to his thighs.\n\n\"Release that penis from your hand this instant, young man! I will not have you abusing yourself right in front of me! My gracious, the impudence!\"\n\n\"Oh ma'am, no, no. I didn't mean...\" But he knew better than to defy her. He let go of it, letting it be exposed once again. \n\nMiss Wormer strode up to him and firmly took hold of his stiff cock. She shook it like she would shake a pointer or ruler as she sternly lectured a student. \"I suppose you were planning on going back out into the hall to show this thing off to the girls?\" \n\n\"Oh, gosh, no, ma'am! I would never do that!\" Albert was a mix of emotions, truly embarrassed at getting caught jerking off, but not really ashamed for having done so, and frankly enjoying the fact that his hard cock was now being grasped in a woman's hand. It wasn't the way he imagined the first time a woman would hold his cock, but any ship in a storm.\n\nMiss Wormer continued to shake his hard dick, although in doing so she was sliding his foreskin on and off his swollen knob. \"Your mother may have allowed you to do this at home, young man, but you're now a guest of Omega Theta Pi, and this is not the way to show due respect to the sisters of this sorority. Would you agree?\"\n\n\"Oh yes, ma'am, absolutely. I definitely fully absolutely agree.\" It was so odd, so confusing. On the one hand he wanted the lecturing and scolding to end, as well as the embarrassment of standing there with his PJ bottoms and briefs still at his thighs, but he did enjoy the feel of his cock in Miss Wormer's hand. No young man would miss that Miss Wormer was actually quite pretty. She was certainly an imposing woman, a bit tall, with a consistently cold, detached, and stern demeanor. But Albert could also not help but notice her rather prominent breasts, her bright red lips, and her large, round pretty green eyes beneath her spectacles. If someday, somehow, one got her into some lingerie, with a bit more make-up, and a bit more wave to her hair, she would in fact be gorgeous.",
        "\"Do you have any explanation for yourself, Mr. Pence?\" She stopped her stroking, but still held firmly onto his dick.\n\n\"No, ma'am,\" he quietly responded. He could perhaps suggest that all that stimulation from the spanking, which had in fact been provided by Miss Wormer, had made it just too difficult to resist. But somehow he felt she would not find that explanation compelling.\n\nShe kept her eyes firmly fixed on his, not looking at his cock at all, not actually acknowledging its presence, seeming to be oblivious to the fact that it was still tightly enclosed in her fist, while her thumb softly circled around and around the swollen crown. \"Well, you have earned your place in next week's disciplinary session, young man. You most certainly have.\"\n\n\"What?!\" His face rose up to look the Housemother in the eyes, the shock and concern clearly evident in his eyes. \"Me?\"\n\n\"You apparently don't seem to mind exposing yourself in the presence of our virtuous young women. Let's see how you feel about that next Sunday.\" She let go of his dick and quickly departed the room, letting Albert to stand there alone, his stiff cock yearning for more attention while he contemplated his eventual punishment.\n\nContemplate he did, and for the entire week. He reverted to his more inhibited, reserved, and self-conscious withdrawal around the girls, avoiding the hallway entirely after 10PM, keeping to himself as best he could during breakfast, lunch and dinner. He could not avoid sitting next to a girl but he could avoid eye contact and conversation.\n\nThe girls soon became aware of Albert's predicament, as the number of demerits earned by each house resident are daily posted, and it was clearly evident on Monday that Albert had instantly moved all the up and over the threshold for a spanking. The girls on the second floor wondered how the young man could have earned so many so quickly, but when word spread that he was caught peeking through Theresa's open door, they figured he deserved it.\n\nShelley also wondered if it was for her towel falling down that also earned him demerits, but she really didn't think so, or at least she hoped not. He did have a right to be there. It was her own fault that she had left the shower room without first wrapping herself in the towel, and she had bumped into him. Plus, he didn't try to take advantage of it by withholding the towel. He had given it right back to her. He could've just stood there and laughed at her. Lots of boys would probably have done that. She wondered if she should perhaps speak on his behalf to Miss Wormer, but she also feared that she would get into trouble for leaving the shower room with herself so exposed. That would itself earn her some demerits.\n\nWhen the fateful evening finally arrived one could cut the air with a knife. Albert was again sitting in the last row, not really wanting to be noticed, but knowing that tonight he would be the major show on stage. Nobody else had earned enough demerits for a spanking, the girls having been especially well behaved after Shelley's embarrassment.\n\nThe meeting droned on for some time, or at least it seemed that way to Albert. He was reminded of when he had to give an oral presentation in his philosophy class. He really, really hated to give speeches. He probably should take a speech class to get over his anxiety but just the thought of a class devoted to what he so very much feared froze him in panic. In the philosophy class he sat there waiting for his turn, counting the minutes, if not the seconds, his anxiety level increasing as his moment of truth slowly approached, all the while running through his head all the things that would likely go wrong. In the end it did help to imagine the audience being naked when he finally gave the talk. That had been a suggestion of his mother. Otherwise he felt he would probably have crumbled and melted under the heat of their piercing eyes. Well, that technique wasn't going to help him tonight as it would be him that would in fact be naked. Only partially so, but the most important part.\n\n\"Alright then, Albert, why don't you please come up here for your punishment.\"\n\n\"What?\" He had been so deep in thought that he had stopped listening to Miss Wormer. \"Oh! Yes, ma'am, yes, certainly.\" He slowly took the walk of shame to the stage, his eyes fixed on the floor, avoiding all eye contact.\n\nThe girls tittered with amusement. Their hearts were all racing, wondering what would happen.\n\nMiss Wormer clapped her hands to scold them into silence. \"There is nothing amusing about this, young ladies. Nothing amusing at all.\"\n\nThey got the message, but their eyes were wide open with apt anticipation. Was Miss Wormer really going to do this? Apparently so, but it was so unbelievable.\n\nMiss Wormer explained as Albert stepped onto the stage. \"As you young ladies know, there is a level of decorum and moral character that is expected of an Omega Theta Pi girl and,\" she added, turning to look at Albert standing meekly beside her, his eyes focused on his feet, \"for our guest residents as well. We appreciate Albert Pence staying with us, helping us in our time of need, but we can't have the young men taking advantage of this opportunity, peeking at us in our undies in order to masturbate their penises.\"\n\nFeminine gasps could be heard throughout the audience. Well, they now knew full well why the young man was going to be punished. Some of the girls blushed at the thought of Albert beating off to the memory of having seen them in the hallway in their nighties. Shelley couldn't even look at him, staring now down at her toes as she realized what Albert had done, actually masturbating at the memory of seeing her naked. Gross! Of course, she had been thinking about Brad Pitt when she had used her female helper, but at least he wasn't someone she knew, someone with whom she saw on a daily basis. Again, so gross!\n\nAlbert's face turned beet red and he avoided any eye contact with the girls or with Miss Wormer.\n\n\"So, what do you have to say for yourself, Albert.\"\n\nHe replied very, very softly, \"I am so very sorry, Miss Wormer, really I am.\" He probably could not have been more sincere.\n\n\"Yes, well, I imagine you will feel even more sorry in just a short while. Now, if you wouldn't mind, down with your pants and underpants.\"\n\nAlbert did now lift up his head to look at Miss Wormer with one last plea for consideration, but she did not budge. She just stood there, arms crossed, her face stern with resolve, her green eyes fixed on his through her spectacles.\n\nHe started to turn his back to the girls but she shook her finger and said, \"Tsk, tsk.\"\n\nShe wanted him to drop his pants and briefs facing the girls? Shelley hadn't had to do that. Was this really fair?\n\nMiss Wormer explained. \"You apparently had no consideration for Shelley when she dropped her towel.\"\n\nShelley looked up in surprise. Apparently she had found out about that as well. She hadn't told Miss Wormer about it. Now she wish she had spoken on his behalf, at least about that. She was totally embarrassed at the thought that he might have been masturbating thinking about her, but the fact that he saw her really wasn't his fault. But, still, he did deserve to be punished for masturbating, didn't he? He was though kind of cute.\n\nAlbert sighed with frustration. It wasn't his fault that she dropped the towel. But, it was true that he was essentially staked out at the bathroom door, waiting for precisely any such opportunity. Still, he suggested, in his defense, \"I picked up the towel for her.\"\n\n\"Perhaps, but you did not look away when Shelley's femininity was exposed.\"\n\nShelley blushed. Did Miss Wormer have to be so specific?\n\nAlbert had to admit that she was right about that.\n\nIn the absence of a response, Miss Wormer continued. \"Yes, just as I thought. Well then, I believe it is entirely appropriate and correct that your punishment involve the same lack of consideration you gave her.\"\n\nHe knew this would be bad, but he had not imagined that it would be this bad. He began to slowly undo his belt. He couldn't believe he was doing this, undressing in front of a room full of girls, all of them with very expectant grins on their faces. But, he had agreed to any such discipline by Miss Wormer when he signed the contract for his residence within the sorority. He just didn't think at the time that it would really happen.\n\nWhen he got his button undone and zipper down he hesitated.\n\nMiss Wormer though would not tolerate further delay. She stepped up to him, grasped hold of the waistband of his pants and briefs, and with one smooth motion pulled them both down to his knees, where they naturally fell on their own the rest of the way.\n\n\"Miss Wormer!\" Albert protested and quickly covered himself with his hands, although that might not have been really necessary as his shirt was sufficiently long in front to provide adequate protection.\n\nMiss Wormer would have none of that as well. She sternly commanded, \"Raise your head, young man, face your house mates, and clasp your hands behind your head. Do it quickly now or we will just have to add on a few more demerits.\"\n\nAlbert had no interest in digging himself in deeper. He did as she instructed, raising his head up to face his audience of bright eyed girls, clasping his hands behind his head.\n\nIn raising his hands the front of the shirt rose a bit, but not enough to do any real harm. Miss Wormer though reached around him and raised the front of his shirt herself, well past his waist.\n\nGasps, squeals, and all sorts of exclamations could be heard, and Miss Wormer did nothing to squelch them. She felt it important for Albert to hear, and see, their reaction.\n\nIt really wasn't much to see. Albert's penis was as limp as it could possibly be. Well, perhaps it would shrunk even further after a cold swim, but his anxiety had done a pretty good job. He was most certainly not presenting himself in his best light. His uncircumcised penis was resting uncomfortably on his balls like a scared little baby worm, hiding within its comforter.\n\nTo many of the girls it was rather cute, although some of them found it a little queer, squirly, or silly looking. It was definitely not the intimidating, scary, threatening cock that they had been anticipating. The gasps and squeals quickly turned to tittering and giggling.\n\nMiss Wormer smiled with approval at the shift in the girls' reactions but she warned them, \"It won't always look so innocent, young ladies. If you had seen it in the state in which I came upon it, well, believe me, you wouldn't be giggling.\"\n\nThe laughter stopped as they imagined that.\n\nIt wasn't that the sight of a penis, even an erect one, was entirely foreign to them. Many of them were not virgins. However, most of them had taken vows of purity (some to the point of wearing a purity ring, such as Shelley) and some had even taken this pledge before ever going all the way. Very, very few of them were currently sexually active, and those that weren't hadn't been for sometime, and so it was quite a sight to see, and imagine.\n\nAlbert did wish he could get a bit erect. That would help diminish its diminutiveness, but he certainly wouldn't want to develop a full erection. That would be nice, if the girls were in fact impressed, admiring its strength, stiffness, and perhaps even it's size. But, he would imagine that Miss Wormer would not be particularly pleased with such a display.\n\n\"Albert, why don't you hold your shirt up for me.\"\n\nIt was clearly a rhetorical question, or more accurately a command. He did as she \"asked.\" He felt his face grow warmer as he stood before the girls, his pants and briefs at his ankles, holding up his shirt to exhibit his currently rather pathetic member. \n\n\"Now you see, girls,\" Miss Wormer explained as she gently cupped his balls in the palms of her hand. \"These are the young man's testicles.\" She bounced them a bit with her hand. \"This is where he makes his sperm for your babies.\"\n\nThe giggling, tittering, and now whispering increased. The young ladies clearly knew all of this already, but it was rather fun and funny to watch Miss Wormer play with the young man's genitals while instructing them on the facts of life.\n\n\"A man's testicles can be very sensitive and vulnerable. If you're attacked or for whatever reason want to get control of a man, a good kick or hard squeeze can really put him to his knees.\"\n\nAlbert flinched, wondering, waiting, for her to demonstrate. But, fortunately she apparently decided that no such demonstration was really necessary and, as in the case of all of her girls, she had no interest in actually inflicting any serious pain on the boy.\n\n\"Now here, of course,\" she said, delicately picking his penis up with just her index finger and thumb, \"is his little penis.\"\n\nDid she have to say it was little? Wasn't that already very clear. Albert shut his eyes. He would face the girls but he didn't have to look at them, or at least he didn't as long as Miss Wormer didn't notice his eyes were closed. Her attention was focused elsewhere.\n\n\"Now Albert, you see, still has his foreskin.\" She slid it off to reveal the crown.\n\n\"Oooooh,\" a few girls exclaimed with evident interest, leaning forward in their chairs, wanting to get a better look. The girls in the front row smiled with delight. It wasn't really news to them, but it was still a nice little show. It was a heck of a lot better than any of their classes, or even television.\n\n\"It can go on and off,\" she instructed, sliding the foreskin on and off the crown, \"on and off, on and off, on and off,\" continuing to demonstrate.\n\nAlbert winced. It was a very, very pleasant feeling, and if he could relax, ignore the fact that he was being humiliated, and perhaps intentionally so, he could in fact develop a degree of swelling that would at least make him look more impressive. He was again reminded of how pretty Miss Wormer was, her firm breasts pressing into his back as she softly, gently, slid his foreskin on and off, on and off. This really wasn't much different than how we masturbated himself.\n\nBut, she stopped to ask, \"Do you keep yourself good and clean there, Albert?\"\n\nMany of the girls laughed.\n\nMiss Wormer turned her attention to the girls and said, in a rather scolding tone as she even waved Albert's penis at them, like it was a teacher's pointer, albeit a rather small and soft one. \"There is nothing funny about the importance of keeping yourself fresh and clean. More than a few of you have come to me with questions about your own feminine hygiene. Need I remind you?\" She made eye contact with a few girls in particular, who quickly looked away.\n\nThat threat silenced them all.\n\n\"That's what I thought.\" She turned her attention back to Albert. \"So, young man, are you keeping it clean under your little hood?\"\n\nKeeping his eyes closed he barely whispered, \"Yes, ma'am.\"\n\n\"Every day?\"\n\nGeeeez, when will she stop this?! He dutifully nodded.\n\nShe let go of his penis. \"Well, alright then, Albert. You can let go of your shirt and get into position.\"\n\nAlbert turned around, a bit awkwardly with his pants and underwear tangled around his ankles. He was though grateful at least for the closing of the \"Albert little limp penis show.\" He turned the chair around so that it was facing away from him, as Shelley had done, and bent over to grasp the edges of the seat. This was better than displaying his penis, but it wasn't a lot better.\n\nIt became even more troubling when Miss Wormer raised up his shirt and tossed it over his back, revealing to the sorority girls the young man's bare naked bottom. The tittering and giggling returned. Yes, Albert felt, very humiliating indeed.\n\nMiss Wormer shifted around to his left side.\n\nSMACK!\n\n\"Yikes!\" Albert leaped up, letting go of the seat of the chair to clutch his butt with both hands. \n\n\"Back over the chair, Albert,\" Miss Wormer admonished him. \"Gracious, even the girls aren't that much of a sissy.\"\n\n\"Yes, ma'am,\" Albert quietly responded, realizing that he had embarrassed himself further by acting like such a wimp, and being called one. \n\nMiss Wormer though had given him a pretty hard smack, or at least one that was harder than she had applied to Shelley. She thought that perhaps she should spank a boy harder than she spanked a girl. She now realized that was a mistake and she would back off a bit.\n\nAlbert resumed his position and even reached back to lift up the shirt himself.\n\n\"Well, that's a good boy, Albert. Here, let me help you keep yourself steady this time,\" she suggested and reached under him to lightly grasp his penis and testicles within her left hand.\n\n\"Keep your legs together, Albert,\" she instructed, as she softly fondled him.\n\n\"Yes, ma'am,\" he replied, clasping his thighs together, effectively hiding from view his testicles, as well as Miss Wormer's hand.\n\nThe girls were disappointed, and would have been even more so if they knew that their Housemother was playing with Albert's penis and balls.\n\nMiss Wormer's heart raced a bit. She wasn't really doing this to help keep him still. If she wanted to do that she would wrap her left arm around his waist. It was more that the feel and the sight of the young man's erection the other night had stirred up an interest she could not ignore. She was naturally shocked and appalled by the sight of his erection, but like any woman she was also more than just intrigued. She had not seen any man's erection in a number of years, and certainly not a young man's, and the experience had brought back quite a few memories, many of which were really rather nice. Her sleep for the rest of the week had even been a bit troubled, often interrupted by some rather disturbing dreams.\n\nAlbert was himself unsure how to react. \"Uh, thank-you, ma'am,\" was all he could muster to say. It was a nice gesture, perhaps, but it did feel rather odd to have her holding onto him there, particularly since she wasn't just holding, she was rather clearly feeling around.\n\n\"Now, you let me know if you feel I'm spanking you too hard, Albert,\" she said sympathetically, shifting her hand away from his testicles to just his penis, taking it within her fingers to softly stroke and caress it, again moving the foreskin slowly on and off the crown.\n\n\"Um, yeah, sure,\" Albert awkwardly replied.\n\nMany of the girls in the audience raised their eyebrows. Miss Wormer had never asked them to let them know if they felt she was spanking them too hard. But, then again, she had smacked him rather hard the first time. Albert was new to all of this, and a guest in the house. He perhaps deserved some consideration.\n\n\"I just don't want to unduly hurt your cute little bottom,\" Miss Wormer added, giving him a few pats on the behind while she stroked his penis.\n\nThe girls giggled at that, feeling that perhaps she was being sarcastic and demeaning.\n\nPerhaps she was, but it really wasn't very clear. She did in fact consider his boyish tush to be quite cute.\n\n\"Thank you, Miss Wormer,\" Albert replied, his breathing a little rushed as he felt his penis begin to swell within her fingers. He didn't much care though for the reference to having a \"cute little' bottom,\" but when a pretty woman is making you hard it was really hard to be critical.\n\nSmack! Smack! Smack!\n\n\"Yeow!\" Albert exclaimed. The spanks weren't nearly as hard as the first one but he was so inexperienced with being spanked and he had been so lulled with her fondling and stroking that they did take him by surprise. The startling stings were so unnerving that he couldn't help wriggling and prancing a bit, as if he was deliberately trying to entertain the girls with a little bottom dancing. But, he did do his best to keep his thighs tightly pressed together.\n\nSmack! Smack! Smack!\n\nAll the while Miss Wormer kept her grip on the boy's hardening cock. He was slipping around a bit within her hand but she didn't mind. It in fact offered her the opportunity to more explicitly feel, fondle, and stroke the young man's stiffening dick",
        "Smack! Smack! Smack! Smack! Smack! Smack!\n\nIt wasn't long before Albert settled down, or at least stopped dancing around. Nevertheless, with each smack he thrust forward involuntarily, or perhaps it was voluntarily, for in doing so he was essentially fucking Miss Wormer's fist with his now fully stiffened dick.\n\nSmack! Smack! Smack! Smack! Smack! Smack!\n\n\"Now let this be a lesson to you, young man, that you are not to take advantage of the consideration and kindness of Omega Theta Pi graciously allowing you to reside within her domicile.\" She shifted from stroking him to softly caressing his slick swollen knob with the tips of her fingers and thumb. It was an excruciatingly delightful sensation.\n\nSmack! Smack! Smack!\n\n\"Oh no, ma'am! I won't, I promise,\" he gasped. How so very strange it was, being stung and shamed on one side while being treated and thrilled on the other.\n\nSmack! Smack! Smack!\n\nShe reached down and gently cupped, fondled, and tickled his soft, tender little balls. \"These are modest and pure young women, Albert, many of whom have vowed to be chaste until their marriage.\"\n\n\"Yes, ma'am,\" he acknowledged, squirming a bit. His balls were pretty sensitive.\n\nSmack! Smack! Smack!\n\nThe girls were all smiling, entranced with the sight of their Housemother giving the young man his punishment, spanking his bared naked bottom, which squirmed and wriggled at them. For some it was quite amusing, for others it was more than that. A few of the girls crossed their legs, squeezing their thighs together. For all of them it was just plain fun.\n\nMiss Wormer scratched her long fingernails gently up and down the young man's stiff shaft. \"The girls must be treated with respect!\"\n\nSmack! Smack! Smack!\n\n\"Absolutely, ma'am! I will, I will, I promise.\" Albert was now actually enjoying the spanking, or was he? He couldn't really tell. He sure as heck was enjoying the Housemother's tantalizing fingers. His mind and body were consumed within his intensely aroused state, which absorbed as well the experience of being publicly spanked, as if that was also exciting him. He couldn't really tell.\n\nMiss Wormer gripped his cock hard within her hand and firmly stroked it, sliding the foreskin, as well as her fingers and palm, on and off the swollen knob.\n\nSmack! Smack! Smack!\n\n\"Yes, Miss Wormer, yes,\" he gasped, not appreciating that she hadn't actually said anything.\n\n\"With dignity!\"\n\nSmack! Smack! Smack!\n\n\"Oh yes, ma'am!\" Albert squealed, feeling so confused, so wonderful, so embarrassed, so close to cumming.\n\nSmack! Smack! Smack!\n\nShe fist fucked his cock while he in return fucked her hand. \"With chaste, celibate, and proper decorum!\"\n\nSmack! Smack! Smack!\n\n\"Yes, Miss Wormer, I really do promise,\" he vowed, feeling himself about to explode within her hand, but knowing full well that would most assuredly be a very, very big mistake.\n\nMiss Wormer suddenly stopped. Perhaps it was the stinging within the palm of her right hand, or the full realization that she was wantonly jerking off the young man with her other hand, or simply because she knew she was too confused and agitated to continue any longer, not knowing how this would in fact end. It was, most assuredly, the first time she had spanked a boy...well, at least the first time within Omega Theta Pi. \"Yes, well, now...\" she quietly mumbled, regrettably releasing her grip on the young man's stiffened cock.\n\n\"Thank you, ma'am,\" Albert responded, with considerable sincerity. He was not though thanking her for the spanking, just for ending it, or at least making him so excited, so aroused, in the process. A big hard part of him did want her to continue, although now that she had stopped he knew that it was clearly best not to take this to its inevitable fruition.\n\n\"Yes, well, you're welcome, Mr. Pence. I'm pleased that you appreciate the benefits of your disciplinary punishment and, well, you can stand up now.\"\n\nAs he did so his rather agitated state of excitement became quite visibly evident, at least to Miss Wormer. When he was bent over it was hidden from view by the shirt hanging down, but now that shirt was prominently sticking out.\n\nAlbert bent over again to pull his briefs and pants, but Miss Wormer had an inspiration.\n\n\"Well!\" She announced with exaggerated outrage, \"I see that perhaps you hadn't learned much of a lesson at all! It would seem to me that you just can't control yourself for one minute!\"\n\n\"Miss Wormer?\" Albert looked at her with such fright, such confusion. Doesn't she realize that she did have a bit to do with this herself?\n\nMiss Wormer took the young man by the waist and turned him around so that all the sorority girls could witness for themselves his disrespectful behavior. What better way to demonstrate to the young ladies how dangerous and shameful boys can be.\n\n\"Miss Wormer!\" Albert yelled in protest but there was really nothing he could do, at least nothing that would not result in either further punishment or having to move out, and he most certainly didn't want to do that. Frankly, he did want another opportunity within that hallway (albeit this time he would be much more careful and discrete).\n\nOnce he was fully turned Miss Wormer did not hesitate to again pull up his shirt, lifting the curtain on a full erect cock for all the girls to see.\n\nMany gasped in shock, a few looked away, others covered their eyes, but even they peeked out through parted fingers. It wasn't that they were necessarily complete strangers to such a sight (although a few of them were). It was just so shocking to have an erect penis poking out at them on the stage, right in their own sorority, put on display by their Housemother. They girls were mesmerized by the show.\n\nSome could now see Miss Wormer's point. It was rather scary and intimidating, like a big weapon, a truncheon, thrusting out from the young man's body, a blunt sword he would indeed use on a girl, thrusting it into her, piercing her most vulnerable feminine spot. Many of the girls instinctively clenched their thighs together in defense, albeit as well in response to the feel of the warmth brewing within.\n\nDespite its threatening appearance, it also had a rather alluring charm. Many felt surprisingly attracted to it, like it was some sort of magic scepter or wand that was hypnotizing them, entrancing them, seducing them. A few of the girls licked their lips, not entirely sure why they felt suddenly so thirsty, so hungry, so yearning.\n\n\"Girls!\" Miss Wormer exclaimed, \"see for yourselves: this beastly, barbarous, boorish, brutish male organ. This is what drives the young man to do depraved, disgusting, and degrading things to virtuous young women like yourselves. Look closely, study it closely, and keep its image seared into your brain or someday you will lose your purity, your youthful innocence, your maiden charm.\"\n\nThey did indeed study it closely, very closely, many of them leaning far forward in their chairs. Shelley wondered if perhaps it might be helpful for Albert to walk among them so they could study it even more closely, but that, of course, risked actually making contact with it, and Miss Wormer would most certainly not approve of that.\n\nMiss Wormer though had a better idea. It would be most compelling if the girls witnessed the young man's ejaculation, saw how the penis spewed forth its disgusting ejaculate upon reaching an orgasm. That would quite assuredly be a lesson they would not soon forget. She stepped behind Albert and, pressing her breasts into his back, she reached around and grasped hold of cock once again, sighing into his ear as her hand made contact with the stiff, smooth, steel skin of his boner.\n\n\"Girls, I want you to watch closely at what a young man would do to you if you gave him the chance.\" She began to softly and smoothly stroke Albert's cock.\n\nGasps, whispers, and titters swept through the room, eyes opening wide in shock, as well as avid, rapt interest. Miss Wormer was masturbating him! Right in front of them! Some girls' mouths fell open in shock, others smiled broadly, still others giggled, and a few turned their faces away in embarrassment and anxiety.\n\nAlbert was not circumcised and the precum was making a soft slushing sound as the Housemother was drawing his foreskin on and off the swollen purple crown with her fist tightly gripping the shaft as she slid it up and down.\n\n\"Miss Wormer,\" Albert gasped. He didn't know if he should be happy and grateful or now even more ashamed and embarrassed. It was clearly her intent to shame him, but such feelings were being so thoroughly overwhelmed by the more base and fundamental wonderfulness of feeling a woman giving him a handjob and, perhaps most importantly, his very first one. How can he not enjoy that! He certainly would not have expected it to occur under such circumstances, but one can not always fully predict what the future will hold.\n\nIn fact, the more the housemother stroked him the more he enjoyed it, even the fact that she was doing it in front of all of the girls. Perhaps some of them did find it all rather disgusting, gross, and appalling, but what did he care? He could see that many of them looked intrigued, even excited. A few were in fact smiling, clearly enjoying the show, clearly appreciating what he had to offer. What really is so bad about being jerked off in front of a group of chaste and innocent sorority sisters? Frankly, the more he thought about it the more he liked. Miss Wormer might be doing it to humiliate and shame him, but he was feeling quite the opposite. He was feeling rather proud and pleased, fully appreciating the opportunity to introduce the girls to the strength, the power, and the glory of the male cock.\n\n\"Look closely, girls,\" Miss Wormer instructed as she stroked him more fiercely, more vigorously pumping his dick like she was trying to pump water from a well, \"at what young men do with these disgusting, dirty, big hard penises!\"\n\nAnd he then suddenly gushed a full load from his dick, shooting out from the stage into the first and even second row of the feminine audience.\n\nSqueals of disgust, fright, and anguish were now suddenly heard as the girls in the first couple of rows tried desperately to duck to safety, turning away, throwing their hands up. It was as if he was spewing painful and deadly napalm, when it was only just harmless gloppy cum.\n\nAlbert sighed with satisfaction, relief, and delight as he watched the first glob splat onto the face of a girl in the second row, the full stream tailing behind the initial bullet landing across the hair of the girl in front of her.\n\n\"Miss Wormer!\" the two girls screamed in protest, feeling now themselves so debased, just as she predicted they would.\n\nMiss Wormer was as surprised as the girls. She had not expected that the young man would ejaculate with such force. She figured it would just be some pathetic and disgusting dribbling out of the tip, but she had forgotten the strength and vigor of a young man. Still, she immediately appreciated how effective it was at making her point. She had been disappointed and concerned to see that quite a few girls seemed to be enjoying the show rather than being appalled and disgusted at the sight of Albert's erection, but even these girls were now repelled and disgusted at the possibility of and, for some, the actuality of being sprayed with the young man's slimy seed.\n\nShe shifted the direction of his cannon, frenetically stroking his cock as he continued to shoot out bullets and streams of thick, sticky, gloppy cum onto girls to the left and then swinging it back sharply to the right, doing her best to hit as many of the young ladies as possible. \"Yes! Yes!\" Miss Wormer exclaimed, \"Yes, you see now!\"\n\nMore girls in the first couple of rows began to squeal and protest. \"Stop him! Stop it! Miss Wormer!\" They begged their Housemother for protection but there was really no escape as she kept shifting the direction of the spewing gun, effectively splatting each and every shrieking girl within the first couple of rows.\n\nIt was by far the best orgasm Albert had ever had, which is really quite appropriate for the very first one at the hand of a woman. What had started out as abject humiliation had turned into a magnificent triumph, being swept away by the blissful waves of his climax while watching his mighty spray of gism rain down upon squealing pretty girls.\n\nWhen it appeared that Albert had little left to provide, Miss Wormer squeezed out the last few drops onto the stage and then sternly ordered him to get his pants back on and go to his room to meditate on what he had done to the girls.\n\nBefore he did though he paused to appreciate the sight of the young ladies frantically checking to see if and where they had gotten hit by his cum, some of them busily trying to clean it off without actually touching it, others frantically wiping it from their faces, looks of disgust on still others as they ineffectively tried to get it out of their hair. He did though catch a couple of the girls sneaking a quick sniff, being rather curious about its aroma. One girl even had a little smile on her face as she licked her lips.\n\n- - - - - - - - - - - - - - - - - -\n\nAlbert wasn't punished for squirting his cum all over the sorority sisters. It was, after all, mostly the fault of Miss Wormer. But, she did double and triple check on his status each of the following evenings, which made it quite difficult to get any further peeks in the hallway, or bask in the memory of his punishment in the late evening hours. Each time he recalled Shelley getting spanked, seeing her little woman's helper, seeing her lose her towel and, most enjoyable of all, ejaculating all over the girls, there came an erection, but he was reluctant to do anything about it. He halted the use of his socks, as Miss Wormer was now even rifling through his laundry basket when she did a spot inspection of his room, clearly looking for evidence of self-abuse.\n\nBut, he would not have seen much if even he had explored the halls. The girls were being much, much more careful about the doors to their rooms, and were dressing considerably more modestly as they went to and from the bathroom.\n\nThe girls were also unsure how to act around Albert. For those who had been in the first couple of rows, some looked upon him with annoyance and disgust. Others, however, felt more embarrassed than annoyed. They avoided his eyes, not wanting him to recognize that she was one of them that got it on her face or hair. However, many of the girls now had some empathy for the young man, as he had been publicly spanked like most of them had. They could see how embarrassing and humiliating it had been for him, at least up until the very last moment when he squirted all over some of the girls. He did seem to enjoy that, but it wasn't really his fault. Miss Wormer had made him do it. She was the one holding the gun. Others were even intrigued by the young man. They kind of wished he would get in trouble again, deserving of another spanking and perhaps even followed by another demonstration by Miss Wormer of that \"disgusting\" male ejaculation. A couple of girls in fact planned to sit in the front row just for that very reason.\n\nBut, two weeks passed with no further spanking, of anyone. Albert was disappointed by that, and so were the girls (in Albert not being spanked). Miss Wormer though was very, very pleased that her last two disciplinary sessions had been so successful. She wondered if perhaps she should write an article about this for the Panhellenic Press, the newsletter for sorority Housemothers.\n\nShe did, though, kind of miss not having a reason for disciplining Albert. She even found herself hoping to catch him in some major rule violation that would warrant another spanking, motivating her to check on him more frequently, including even inspections of his dirty laundry basket, hoping to find the smoking gun or, more accurately, wet rag. But, after repeatedly coming up empty she wondered if perhaps she should in fact back off, give him more space, let him start to feel more comfortable. Criminals who know they are under surveillance will obey the law. It's when they feel relaxed and free to do what they want that their natural tendencies and predilections will again surface.\n\nOne evening Albert heard a soft knocking on his door. He was studying. It was about 930PM. He opened the door a crack. He knew it probably wasn't Miss Wormer. She wouldn't knock. But, nobody else had ever knocked on his door.\n\nIt was one of the girls, Kari Ann, a very pretty little minx with large green twinkling eyes, even larger spectacles, perky nose, rosy cheeks, and rather little titties. They were barely noticeable beneath her loose white blouse. \"Albert,\" she whispered to him. \"Are you busy?\"\n\n\"Uh, no, no, not really. Is there something wrong?\"\n\n\"Well, I was just wondering if you could help me. I dropped a hair brush down behind my dresser and it's just too heavy for me to move it. I was wondering, well, Tammie and I were wondering, if you could perhaps see if you could move it for us?\"\n\nThere was, of course, no way he could refuse the request, but he did feel a bit of pressure. He was not a strong man by any means. He was probably stronger than Kari Ann, but perhaps not so strong as two girls together. If the two girls couldn't push the dresser aside how could he expect to do it. However, perhaps the three of them could do it, but imagine failing. How emasculating would that be. Perhaps Miss Wormer would spank him for being such an inadequate male. That would be adding insult to injury. \"Yes, yes, of course, I would be happy to...to try.\"\n\n\"Oh that's so sweet! Wonderful! Come then, follow me.\"\n\nAlbert followed Kari Ann down the hall. Her room was some distance from his own. His eyes were fixed on her swaying bottom beneath her white pleated skirt as they made their way down the hallway. Why is it that girls' bottoms swayed like that? Was it instinctive? It was certainly quite enticing, even on a girl so innocent in appearance as Kari Ann. Perhaps even more so, as she probably didn't realize how flirtatious she appeared.\n\n\"Not much further,\" she reassured him in that soft, high, feminine voice, speaking to him over her shoulder, apparently oblivious to the fact that his eyes were fixed on her bottom as they made their way down the hall.\n\n\"That's fine,\" he reassured her. He was being quite sincere about that. It was a nice little dance she was providing, and about the only one he was being treated to lately. He was even a bit disappointed when they finally reached her room. His apprehension returned. He followed Kari Ann into the room.\n\nHe was greeted by the sight of Shelley, as well as Tammie and Penny, all sitting on the two twin beds. There were four girls in the room. The four of them couldn't move the dresser? He then noticed that the girls were looking at him kind of funny like. It wasn't really that unusual for them to be doing so, but something seemed different than before. \"Is, um, this the dresser?\" he asked, pointing to the first one on his right.\n\n\"Actually,\" Kari Ann said, now standing behind him, quietly shutting the door. \"There was something else we wanted to ask of you.\"\n\n\"There was?\" Albert wondered what that could be. He wasn't good at fixing things, but why wouldn't Kari Ann want to tell him in advance what it was? He could feel his heart beginning to race. A part of him knew that it wasn't just to fix something, or anything else that was easy to say. He glanced around at the girls, waiting nervously for some explanation.\n\nTammie spoke up. She was a very cute girl, with a long red pony tail, freckles, and a very adorable smile, albeit she wasn't smiling right now. She had a rather nervous expression on her face. \"Um, well, Albert, we were just wondering, well, um, you know, well, what was it like for you to get spanked, like that, in front of us, all of us, you know, girls.\" It wasn't really what she had wanted to say, but it was breaking the ice.",
        "\"Yeah, well, actually, it was kind of embarrassing.\" He averted his eyes. He felt embarrassed admitting it.\n\n\"I can imagine!\" Kari Ann said supportively from behind him. She stepped around him to take her place on the nearest bed.\n\n\"I don't have to,\" Shelley noted.\n\nAlbert looked over at Shelley, and felt more than just a little embarrassed at having enjoyed so much watching her get spanked, at least at this particular moment he did. \"No, you don't,\" he acknowledged, although he wouldn't mind seeing it happen again.\n\nTammie asked, \"Did you enjoy seeing Shelley get spanked?\"\n\n\"Tammie!\" Shelley protested, not so much on Albert's behalf because it was such a personal question, but really on her own behalf as she didn't really want to hear his answer.\n\nIt was a very difficult question. Albert knew that to deny his enjoyment would be a rather obvious lie, but to answer truthfully would really be very embarrassing to Shelley. If she wasn't in the room he probably would have been quite comfortable admitting it. Well, maybe not comfortable but he would know the answer he would provide. He didn't say anything, pretending that Shelley had effectively vetoed the question.\n\nShelley turned to Albert. \"You didn't see me at the Renaissance Faire, did you?\" As soon as she asked the question she regretted it, as she didn't really want to know the answer to this question either, or at least know that he had.\n\nThis question he could answer comfortably. \"No, no I didn't,\" he answered, shaking his head as he answered, but wondering what the heck he had missed. He hadn't even gone to the fair. A Renaissance Faire was not his thing. He was on a rock hunt with his friends that weekend.\n\nPenny spoke up, on Tammie's behalf. \"Well, he must have enjoyed it. I certainly enjoyed seeing Albert get spanked.\"\n\nIt was Kari Ann's turn to protest. \"Penny!\" The fact was, all four girls had enjoyed seeing Albert get spanked. It was why they had called him down to Tammie and Kari Ann's room. It was just difficult to admit, to him. Their giggling though said quite a bit.\n\nAlbert was surprised but he knew he really shouldn't be. Are girls really that different? Well, actually some are, and these girls certainly were. He had not himself taken a vow of purity. But that doesn't mean that they can't enjoy the spectacle of a boy being spanked, particularly when it's thrust before them. He smiled sheepishly, and wondered if they had enjoyed as well him shooting his cum out over them. His face grew redder. He admitted, \"Yeah, I enjoyed it too,\" but then looked quickly over at Shelley and apologized, \"I'm really sorry, Shelley.\"\n\nShe looked away. It was nice to hear Albert apologize, but it was still embarrassing to look at him, knowing what he saw, and that he apparently did indeed enjoy it.\n\n\"Yes, well,\" Tammie interjected, \"I know how you can make it up to her.\"\n\n\"How's that?\" Albert asked. He would like to do something.\n\nTammie's face reddened before she even asked, but someone had to finally cross the line. \"Let her give you a spanking.\"\n\n\"What?\"\n\n\"Sure!\" Penny agreed, smiling at the thought of it. \"It's only fair, very fair, really.\"\n\n\"What's fair about it?\" Albert disagreed. Shelley got a spanking because of her misbehavior. \"I haven't done anything to deserve a spanking.\" He immediately realized that wasn't true. \"Well, I mean, I got my punishment.\"\n\n\"Not for everything,\" Kari Ann noted.\n\n\"What?\"\n\nTammie explained. \"You got a spanking for, um, well, you know, for peeking into Theresa's room and doing that, thing, with your, um, thing.\" She blushed as she said it.\n\nPenny finished Tammie's point. \"But not for looking at Shelley when her towel fell down. And you even got to see her...um.\"\n\n\"Penny,\" Shelley again complained. She was in full support of the girls' intentions but must they keep reminding everyone of how she had been so embarrassed?\n\nPerhaps the girls had a good point. The demerits that led to the spanking had not included the incident with Shelley's towel falling off. \"Yeah, well, Miss Wormer brought up the towel when she was, um...punishing me and it clearly got factored in.\"\n\nIt was a good rejoinder, and the girls felt stymied.\n\nAlbert though did have an idea. \"What if I got to spank one of you?\"\n\n\"What?!\" \"No way!\" \"Are you kidding?!\" The room was filled with the sound of girls expressing outrage, shock, and indignation.\n\nAlbert just shrugged. It seemed like a fair deal. \"If I'm going to be spanked for no good reason that one of you should be.\"\n\nThe girls were momentarily quiet, contemplating the proposal. They really didn't have the authority to just demand that he let himself be spanked. In fact, they would get into serious trouble if he reported this whole episode to Miss Wormer, although it would be the word of four girls against one guy, and they would have to assume that Miss Wormer would take the word of four sorority sisters over a male guest in the house. Still, they weren't too sure that they wanted to go that route. He might just be willing to take his chances with Miss Wormer and they were not entirely certain of the outcome.\n\n\"Which one?\" Kari Ann asked.\n\n\"Kari Ann!\" Penny complained. It wasn't like they had agreed to the proposal, although it was certainly true that she leaned toward accepting the proposal. She had three chances in four of not being the one to be spanked.\n\nAlbert asked, \"Do we have a deal?\"\n\n\"I don't know,\" Tammie replied. \"Who is it going to be?\"\n\n\"You have to decide if you're willing then I'll let you know.\"\n\nIt was like Russian roulette. If they agreed then one of them would be spanked.\n\nAlbert in fact made it even easier. \"I will say that it won't be Shelley. That really wouldn't be fair, would it.\"\n\nShelley smiled in appreciation. That was awfully nice of Albert. She was now fully in support of the proposal, but then she immediately wondered if she had lost out on something that might have been kind of fun, then just as quickly scolded herself for having such a thought.\n\nThe hearts of Penny, Kari Ann, and Tammie fluttered with anxiety. Albert had not made it easier for them to agree. He had in fact made it harder as the odds now fell to one chance in three. It was still though pretty good odds. \"Okay,\" Kari Ann said, quickly followed by Tammie and Penny. They then waited anxiously for Albert to let them know who would be spanked, giggling nervously, adjusting their skirts, avoiding eye contact with Albert.\n\nAlbert wouldn't base the decision on simply who was the most appealing or attractive. They were all pretty comparable in that regard. It would be real, real good fun to spank any one of them, although it might be nice to have them all bend over, raise their skirts, and have the decision based on which had the cutest bottom or the prettiest panties. But, he decided to base the decision on something more appropriate. \"Whose idea was this originally?\"\n\nPenny, Shelley, and Tammie all immediately pointed to Kari Ann.\n\n\"Girls!\" Kari Ann squealed in protest. \"That's not fair!\" Her face turned red and her hands went to her bottom, holding onto her cheeks as she sat on the bed, as if she would never let go of them to submit to a spanking.\n\nWhy did he have to pick her, she wondered. Sometimes life is so unfair! She considered refusing to go through with it, but that would be breaking a promise, plus her friends might be quite upset as they would not then be able to spank Albert. And, besides, Shelley was one of her best friends. She could hardly back down after what Shelley went through. \"Who goes first?\" she asked, her voice a bit tremulous.\n\nThat was a good question. They could perhaps be spanked at the same time, sort of like group sex, if spanking could be counted as something sexual. But, that might be rather awkward. \"You first,\" Albert asserted.\n\n\"Why me first?\" Kari Ann protested.\n\n\"Somehow I'm not too confident that you'll go through with it once you girls have had your turn.\"\n\nIt was a good point. She hadn't actually thought of reneging once they had finished spanking Albert, but she might very well have gotten away with it. Kari Ann sighed deeply. \"Well,\" she said softly, \"let's get this over with.\" This was so, so embarrassing. She had been spanked by Miss Wormer in front of her sisters before, but this was clearly very, very different. This was being spanked by a boy her own age! \"Where should I stand?\"\n\n\"Actually,\" Albert suggested, \"I think it would be nice if it was over my lap. I can sit on the edge of the bed.\"\n\nPenny immediately got up and shifted over to the other bed, leaving Kari Ann alone on the first bed.\n\nKari Ann felt quite literally abandoned by her friends, sitting by herself, waiting for her punishment. She clasped her hands in her lap and looked off to the right, away from Albert, who came over to sit down on her left.\n\nAlbert could feel himself getting erect already. He was not, of course, looking forward to his own turn but perhaps spanking Kari Ann would well compensate for any embarrassment and humiliation he might soon suffer. He had so admired Kari Ann's bottom as they had been walking down the hall, and now he would be able to provide it with his full attention as it gave him a very delightfully enticing dance.\n\nKari Ann turned back to look at Albert sitting next to her, waiting patiently with a smile on his face.\n\nHe patted his lap, his smile growing larger.\n\n\"Ooooooh,\" Kari Ann groaned with reluctance as she got to her knees on the bed, next to Albert, facing him. She had at first felt that she would find the presence of her friends to be supportive, but now that she was about to lay across Albert's lap their presence made it all the more humiliating. It was even their fault that she had to do this!\n\nShe looked over at her friends. Penny and Tammie had gotten up from the bed so that they could have a better view. She warned them all, \"You better not tell anybody about this!\" She gave them her most stern and authoritative expression.\n\nIt wasn't really much of a threat, but they weren't planning on telling anybody about this anyway. That could just wind up getting them into trouble. \"We promise,\" Tammie reassured her.\n\nKari Ann leaned forward and positioned herself across Albert's lap. She covered her face with her hands, as if by not being able to see anything she was herself hidden from view. Well, at least they couldn't see her sense of shame (although that was itself evident by the covering of her face). It was indeed shameful as she knew that Albert was getting a very good look at her bottom, which she was poking up at his face. She wasn't doing that to be intentionally provocative. It was just that she felt so uncomfortable about actually lying across his lap, where his thing was.\n\nAlbert though took her raised bottom as an invitation to raise her skirt.\n\nAs soon as she felt her skirt begin to rise up her thighs Kari Ann released her hands from her face, her eyes opened wide, and she exclaimed in protest, \"Albert! What are you doing?\" She reached back with her right hand to grab the hem, pulling it back down.\n\n\"You can't expect the spanking to be over the skirt,\" Albert explained.\n\n\"He's right,\" Penny agreed. \"We certainly don't want him to be able to keep his pants up.\"\n\nKari Ann knew this was true. Protesting was just a natural reaction to a boy trying to lift her skirt. \"Ooooooh,\" she again groaned as she let go of her skirt and returned her hands to her face.\n\nWith a big grin Albert resumed raising the girl's skirt up over her bottom, which was such a wonderful treat. At that moment he would agree to be spanked every night if he could do this each time. Kari Ann had such a pretty perky bottom, and so cutely wrapped in her pastel pink panties, decorated with little violet flowers. It was just so pretty, and so terribly enticing. The panties tightly hugged the girl's bottom, as well as her cunnie pouch, which appeared to be almost flirting with him, peeking out from between her clenched thighs.\n\n\"Goodness, they're really very pretty, Kari Ann.\"\n\n\"Thank you,\" she quietly whispered through her hands. It wasn't like she was wearing them for his interest and pleasure, but it seemed only natural to express her appreciation for the compliment.\n\n\"Lift your bottom up higher,\" he instructed her.\n\n\"Ooooooooh,\" Kari Ann groaned in protest. This was just so terrible! How did she get herself into such a position. Her friends so much owed her big time! But, she did lift her bottom up higher, knowing but not really wanting to know why.\n\nThe girls giggled nervously as they watched Albert slip his fingers into the waistband of the girl's panties. They all felt so relieved that he hadn't picked them, although Shelley wasn't sure exactly how she felt. She did feel bad for Kari Ann, was embarrassed for her. But, she couldn't help but feel also a bit jealous, which she felt was really very weird.\n\nAlbert pulled Kari Ann's panties down, although struggling a bit with them, which embarrassed him in front of the girls, who continued to giggle. He wasn't so sure they weren't giggling at his clumsiness. But, once the panties were down to Kari Ann's knees it was clear that it was well worth the effort. There before his eyes, just inches away, was a naked girl's bottom, all for his own pleasure and play, and it was as darling and fetching a bottom as he could possibly imagine. He was not a butt man, but perhaps this might convert him. He particularly liked the very vivid tan line, starkly separating that which so often was open to the public from that which was very, very private. It was like Kari Ann's bottom was shining within a spotlight, all lit up for his pleasure. It was just so pure and lily white, proclaiming its intimacy, its innocence, yet with that enticing, inviting crack splitting it down the middle, which he could part if he wanted to really embarrass the girl. He so wished he could just caress and fondle her butt, but he knew that he was limited just to a spanking.\n\n\"Are you going to just stare at it or are you going to spank it?\" Penny teased.\n\nKari Ann removed her hands from her face to give Penny a glare, although she would herself prefer that he just get on with it.\n\nSmack!\n\nHer face shot up and her expression quickly turned to shock as she felt Albert's hand give her a good smack on her butt. \"Albert!\" She protested, but to no avail.\n\nSmack! Smack! Smack! Smack!\n\nHer bottom felt so soft and springy, and he loved how it jiggled with each smack.\n\nSmack! Smack! Smack! Smack!\n\n\"Stop! Please! Wait, wait!\" Kari Ann squealed, her legs kicking, her fists pounding the bed.\n\nSmack! Smack! Smack! Smack!\n\nAlbert didn't know when he last had so much fun. Well, actually, that wasn't really true. Shooting his load out over the girls was clearly tremendous fun, but this moment certainly made up for any embarrassment he experienced that night and the frustration since that night.\n\nSmack! Smack! Smack! Smack!\n\nPlus, he noticed that as Kari Ann wiggled her bottom and kicked her legs, trying desperately but in vain to avoid the spanks, she was giving him repeated peeks down into her thighs. He could actually see her sweet little cunnie mound! His dick became fully swollen within his pants. This was so darned cool! He had not imagined that living with sorority girls was going to be this much fun.\n\nSmack! Smack! Smack! Smack!\n\n\"C'mon, now, Albert, please! That's enough. Stop it now!\" It was becoming more difficult to keep her bottom raised up, avoiding contact with his crotch.\n\nSmack! Smack! Smack! Smack!\n\n\"Girls, please, make him stop!\"\n\nRegrettably, for Kari Ann, she was getting no sympathy from her friends, who were now laughing hysterically at the sight of their sorority sister being quite rudely treated by the young man. Sometimes one's worst enemies are one's friends.\n\nAlbert though did stop. His hand was stinging a bit as well and he wanted to pause to admire the prettiness of Kari Ann's now rosy red cheeks.\n\n\"That was real mean, Albert,\" Kari Ann complained, but thankful that it was over.\n\nAlbert though fully intended on doing another round, but before he started again he couldn't help but have at least a little feel. He rested his hand softly on Kari Ann's bottom, which now felt so warm, as well as so deliciously curved and soft.\n\nKari Ann didn't protest. It was much better than getting spanked, and when he started to even caress her bottom it actually felt kind of nice, like he was soothing away the sting.\n\nThe other three girls stopped their giggling and just watched, feeling now a bit uncomfortable, like they were witnessing something that should be quite private.\n\nA soft little whimper escaped Kari Ann's lips.\n\nAlbert was encouraged enough to slide his fingers down Kari Ann's crack. He didn't try to enter down inside, but just enjoyed the flirtatious tickling caress, sliding all the way along, past where it ended, continuing on to the even more precious destination: Kari Ann's honeypot. His dick twitched with lust as soon as he made contact with the soft, feminine mound and delicate sweet slit.\n\n\"Albert!\" Kari Ann leaped off Albert's lap and stood before him, her panties falling to her ankles, her hands covering her cunnie from view and from any further impertinency, although it wasn't really necessary as her skirt fell down in front as well. \"That was not part of the bargain!\"\n\nThe other three girls again giggled, although this time a little nervously. \n\n\"Sorry,\" Albert apologized, albeit with no sincerity. He was grinning. He had touched his first cunnie lips. It wasn't for very long but he did at least get a brief feel. He would remember that for quite some time.\n\n\"Okay,\" Shelley said, \"now it's your turn.\"\n\nWell, Albert thought, maybe it wasn't such a good deal after all, now that his fun was over.\n\nPenny, Tammie, and Shelley rushed Albert, pulled him up from the bed and frantically worked on his belt, button, and zipper while Kari Ann pulled up her panties, her back turned to Albert.\n\nIt was Albert's turn to protest, ineffectively. \"Hey! Wait! C'mon, girls!\"\n\nBut, they wouldn't be denied. They were in part concerned that they didn't have an awful lot of time left. Miss Wormer was unlikely to check on them before lights out. But, she might instead check on Albert's room, and would most certainly wonder where he was. Plus, they were just very anxious to get started. Watching Kari Ann get spanked had worked up their anticipation and excitement.\n\nOnce Albert's pants were undone Penny and Tammie each looped their fingers over the waistband of his slacks and his underwear, and pulled them both down at the same time.\n\nOut sprung Albert's erect dick.\n\n\"Oh my goodness!\" Shelley exclaimed, pointing at the young man's stiff cock.\n\nKari Ann turned around to get a quick glimpse as well. Penny and Tammie stepped back in surprise, their hands going to their mouths, stifling their exclamations of shock.\n\nAlbert quickly covered himself with his hands, as Kari Ann had just recently done herself. If they had been a bit more patient he might have lost the erection before he got his pants and underwear pulled down, but he was still fully excited by the spanking of Kari Ann.\n\n\"Geeeez,\" Kari Ann exclaimed, \"that happened 'cause you were spanking me? Gross!\"\n\n\"Sorry,\" Albert quietly apologized, this time with more sincerity, although he felt that they really shouldn't be so surprised. He had told them that he had enjoyed seeing Shelley get spanked. What did they think he meant by that?\n\n\"Take your hands away,\" Shelley ordered, but almost as quietly.\n\n\"Are you sure?\" Albert asked, but knowing full well that he didn't really mind. If they wanted to see it then he most definitely would be glad to show it to them. His reluctance was perhaps just a concern about again upsetting them.\n\n\"Yeah,\" Shelley whispered. \"Let me see it.\"",
        "Albert did as he was told, albeit with some remaining reluctance and trepidation. He wasn't yet sure it was going to be well received.\n\nBut, now that the initial shock was over the girls affect changed. \"Oh my goodness,\" Shelley softly exclaimed as the young man's stiff cock came back into view.\n\n\"Wow,\" Penny quietly responded.\n\n\"You're not kidding,\" Tammie added.\n\nKari Ann looked back over at the door to their bedroom. She stepped over to the door to lock it. It was against house rules to lock the door. They would be in big trouble if Miss Wormer discovered that it was locked, but it would be far, far worse if she suddenly opened the door to see that the four of them were playing with a boy's boner.\n\nAnd that was now on every girl's mind. Not Miss Wormer appearing, but instead the opportunity now standing up before them. Their interest in a spanking had been trumped by something far more intriguing.\n\n\"Can we touch it?\" Penny asked politely.\n\nIt might not seem necessary to ask a guy such a question, particularly when he is clearly so very excited. But that had not been part of the deal, and Kari Ann had made it quite clear that such contact was not part of her agreement. Plus, the four girls all felt a bit intimidated by its presence.\n\nAlbert could readily perceive their intense interest, as well as their timidity. The shoe had suddenly shifted to the other foot. \"Well, as long as I don't have to have the spanking.\"\n\n\"Absolutely,\" Tammie agreed.\n\n\"Hey!\" Kari Ann complained.\n\n\"Yeah, that's not fair,\" Shelley agreed. The whole point of this was to be able to spank Albert, extracting at least some measure of revenge. It didn't seem fair that he could avoid that just because he has an erection, although she did have to admit that she would herself prefer to play with it than to spank his butt. But, it was a matter of principle, wasn't it?\n\n\"Yeah, well, sometimes life isn't so fair,\" Albert said with a smile. He never imagined his cock could command so much power. He was actually going to get out of the spanking because he was willing to let four pretty girls play with his cock? They clearly didn't know boys very well.\n\n\"C'mon, Kari Ann,\" Tammie pleaded, \"be a sport. We want to play with his penis.\"\n\nKari Ann, still standing by the locked bedroom door, sighed in resignation.\n\n\"You can play with it first, Shelley,\" Penny offered. Shelley was the most deserving, having been twice embarrassed by Albert, but the offer was more for her own benefit, feeling nervous herself about actually touching it.\n\n\"Okay,\" Shelley tacitly agreed.\n\n\"Why don't you lie down on the bed,\" Tammie suggested.\n\n\"Not on mine!\" Kari Ann protested. \"He's going to probably squirt off his thing, and he's not going to do it on my bed.\"\n\nShelley and Penny blushed at the thought of that happening. Of course he would, wouldn't he? That would be so cool!\n\n\"Okay, okay, he can use my bed,\" Tammie offered. It wouldn't be fair to have Kari Ann be the one who was spanked plus get her bedspread splattered with boy stuff. She wasn't too sure she cared for that herself, but as Kari Ann's friend and roommate she should make at least some sacrifice as well.\n\nAlbert stepped out of his pants and boxers, and stepped over to the other twin bed, enjoying the fact that the girls were following every swaying movement of his stiff dick. He was feeling pretty darned proud of it right now. He got onto the bed with a big grin on his face, basking in the delight of having four girls so fascinated by, and enamored with, his equally big, and stiff, hard dick. He lied back on the bed, with his head and shoulders propped up against a pillow and the headboard.\n\n\"Okay, Shelley,\" Tammie said. \"Go ahead.\"\n\nShelley could feel her heart racing. Maybe it wasn't such a good deal being the first one. She wasn't even too sure what she should do, and she certainly didn't want to embarrass herself in front of her friends. She slowly stepped up to and then onto the bed.\n\nAlbert spread his legs apart so that Shelley could get up close. His dick twitched with arousal as the girl made her way up the bed. There is perhaps no better anticipation than watching a pretty girl crawl across a bed toward your stiff naked cock. Albert held it with his thumb and finger at the base so that it would stick out toward her.\n\nShelley's large brown eyes widened as she drew closer to Albert's boner. It did look rather fierce and threatening, the crown so swollen red, like it was inflamed or something. When she got close enough she timidly reached out with her left hand and wrapped her fingers around the shaft. \"Oh my,\" she softly gasped. She didn't think it would be so hard and thick. She briefly wondered how it in fact got so hard. Was it like a stiff muscle or something?\n\nAlbert sighed with deep satisfaction. The hand of Miss Wormer had felt exceedingly wonderful, but this was different in its own special way; this was the hand of a sweet, innocent, apprehensive girl. He never felt so strong, so manly, so powerful. He was so proud of his cock and he smiled as he looked down to enjoy the sight and feel of her little feminine fingers wrapped around his shaft.\n\nShelley began to tentatively slide her fist up and down the shaft, admiring how slick and long it was, and how Albert's foreskin slid on and off the crown. Her lovely eyes twinkled with delight. \"It's like it's playing hide and seek,\" she giggled, her cute dimples appearing in her cheeks as she smiled. Thinking about it this way did make it much less intimidating.\n\nIt wasn't how Albert would describe it but as far as he was concerned Shelley could describe it any way she wanted, as her sliding fist sure felt awfully, awfully good.\n\n\"Let me see what it feels like,\" Tammie asserted, getting onto the bed, to Albert's left.\n\n\"Hey, but I just got started,\" Shelley protested.\n\n\"Don't be so selfish, Shelley,\" Tammie complained. So much for the agreement to let Shelley go first, but it is difficult to stick to contractual arrangements when it came to exploring a stiff naked penis for the first time. Tammie forced Shelley to make room for her hand as well.\n\n\"Mmmmm,\" Albert moaned as he now felt two girls' hands handling his cock. Two was definitely better than one. This was a truly unique experience.\n\nAnd it wasn't too long before there was another. Penny crawled onto the bed as well, on Albert's right. \"Here, let me have his balls,\" Penny suggested, reaching down between his spread thighs to slip her hand under there, taking hold of the boy's tender nuts within her little feminine fingers. \"Oooooh,\" she cooed, \"they're all soft and squishy.\"\n\n\"Penny, you shouldn't call them that,\" Shelley scolded her. \"That's so dirty.\"\n\nThe other girls though just laughed at Shelley's inhibition. \"What's that you're holding onto, Shelley?\" Tammie teased her friend.\n\n\"It's his penis,\" Shelley asserted.\n\n\"It's his cock,\" Tammie corrected her.\n\n\"Shut-up!\" Shelley responded, not willing to be so needled. Shelley knew full well that cock was a much better word, but she didn't really feel comfortable using it in front of Albert.\n\nAlbert had at first lurched at the touch of Penny's fingers on his nuts, as it was rather surprising and shocking. He rarely touched his balls when he masturbated and hadn't appreciated how sensitive they were, plus he naturally felt a bit defensive at the thought of someone else, even a girl, grasping hold of them, recalling in particular Miss Wormer's suggested use for them. But, once he got over the shock he settled into the pleasure of now having three girls exploring his cock and balls.\n\nAnd, it didn't take long for Kari Ann to join in. \"C'mon, make room for me,\" she complained, pushing her way in between Penny and Shelley. It hardly seemed fair that she was the last one to join in, given she was the one who got the spanking. Plus, there was little room left for her. She settled for the boy's thick, round knob, which was hardly second best, as it was perhaps the most intriguing spot: so swollen and shiny and purple. She tickled the crown all over with just the tips of her fingers, giggling at how soft and moist it felt.\n\nIt was quite the sight, and feel, for Albert, so many girlish fingers running up and down and around and everywhere all over his cock and balls. It had been tantalizing enough just to feel the fingers of one girl's hands, Shelley's. Now there were four of them, dancing and prancing all over the place. It was perhaps fortunate that none of them was stroking him hard, as he would likely have just immediately exploded. They were instead using largely just the tips of their fingers, in part to allow room for each other, in part feeling a bit tentative and inhibited.\n\nTheir hesitancy though was diminishing as their pretty faces were slowly leaning in closer and closer, trying to get a better look, finding the sight of this masculine bludgeon to be so curious, so fascinating.\n\nTammie suddenly shocked them all, including Albert, by leaning in all the way, pushing Kari Ann aside to very briefly plant a little peck of a kiss right on the tip.\n\n\"Tammie!\" Shelley protested. \"That's disgusting! You shouldn't put your lips on his thing!\"\n\n\"Why not?\" She argued. \"I just wanted to see what it would feel like.\" She had in fact wanted to see what it tasted like, but she didn't really want to admit to that.\n\n\"Because!\" Shelley asserted. She hesitated and then added, \"because that's where he pees and squirts. Goodness, gracious.\"\n\nThe girls all laughed. Shelley was so, so inhibited, although she wasn't so inhibited to remove her fingers from Albert's penis.\n\nKari Ann bent over and planted a kiss herself, this time lingering a bit longer.\n\n\"Kari Ann!\" Shelley protested, this time letting go in shock at the bold and frankly wantonly obscene behavior on the part of her friends. She was quite willing, and interested, in exploring Albert's erection, but she most certainly didn't want this to turn into some sort of filthy, dirty sex game.\n\n\"It tastes good,\" Kari Ann exclaimed in defense, her face though blushing with the lewdness of what she had done. She also did not in fact actually get a good taste, having kept her tongue within her mouth. She wasn't about to go that far.\n\n\"Let me, let me!\" Penny asserted and bent over to plant her own kiss on the tip of Albert's knob.\n\nPenny kept her lips planted even longer than Kari Ann's. It was like each of them was slowly but surely working their way farther into a dangerous pool of water, first one taking a dangerous step forward, then the other. Penny even went so far as to cautiously, carefully, slip her tongue out from between her lips to really get an honest taste of it, albeit not so far that her friends would be able to see it.\n\nAlbert gasped with lustful excitement at the feel of a girl's tongue on his swollen, yearning knob. They weren't frenetically stroking him but he did feel a sudden urge to perhaps cum.\n\nOnce her tongue made contact it took all of Penny's willpower, her bravery, not to suddenly pull away, as if she was touching a dangerous hot metal rod, which was not too far from the truth. She was so glad that she held tight though, as it didn't really taste so bad, not at all what Shelley was suggesting. And, it really wasn't the taste that interested her, that pleasured her. It was just the fact that her tongue was on a boy's penis, a boy's cock. Her face reddened at that thought and she then pulled away, wiping her lips as she did so.\n\n\"Did you actually lick it, Penny?\" Shelley asked, noticing Penny wiping her lips.\n\n\"No, no, of course not,\" Penny replied. \"His knob is just kind of wet now.\"\n\n\"Eeeeeuw,\" Shelley exclaimed. It was just like she had said. He's got some stuff coming out of it and Penny got it all over her lips.\n\nAlbert was now squirming with his intense arousal, his dick being so deliciously tortured by the girls' wriggling fingers and now soft, feminine lips. He had once tried himself to get his cock into his own mouth. He was not proud of the attempt and would never admit to it to anyone, but this was most certainly much, much better. His breathing accelerated and he gripped the blankets tightly with his hands, not only as an expression of his excitement but also to help restrain himself from reaching out and grabbing hold of Penny's bottom or Tammie's boobs. His dick was straining within the girls' hands, yearning for another kiss, hopefully one long enough to give him final relief.\n\nTammie obliged him. She bent over and engulfed the entire knob into her mouth.\n\n\"Oh my goodness,\" Shelley exclaimed, covering her face with her hands, but keeping her fingers spread far enough apart that she could still see what was going on.\n\nAlbert moaned with pleasure, feeling his crown become absorbed into Tammie's mouth, while still feeling the fingers of Penny and Kari Ann caressing, fondling, and tickling his shaft and balls. It was like he had his own private harem, something that any boy would probably dream of having yet never imagining that it would ever become real. \"Girls, please,\" he gasped, seeming to be pleading for them to stop but in fact asking them to never stop.\n\nTammie did not hesitate to bring her tongue into the action, thoroughly exploring, caressing, and washing every inch, curve, and lip of Albert's swollen plum. She was surprised herself at what she was doing, realizing that she was actually tonguing the knob of a boy's cock, something she knew was very, very dirty, yet it just seemed so playful and innocent, being shared with her friends, not really actually having sex with the boy, just goofing around.\n\n\"Wash it real good,\" Penny encouraged her, giggling as she brought in both hands to more firmly grasp and stroke the shaft of Albert's cock, wanting to again see him shoot his stuff, perhaps right into Tammie's mouth, which would be a good joke indeed.\n\n\"Wait, wait,\" Albert gasped, now feeling himself getting real, real close, wanting to warn the girls, Tammie in particular, that it could happen at any moment.\n\n\"Oooooooh,\" Kari Ann cooed, looking into Albert's squinching eyes as she continued to caress and tickle his nuts, bouncing them around on her finger tips, lightly scratching them with her fingernails. \"I think he's going to do it, girls.\"\n\nTammie was duly warned but she did not back away. She did not back down. On the contrary, she squeezed tightly onto Albert's shaft with her lips, just below the lip of his crown, sucking on his knob as she pressed her tongue as hard as she could against it.\n\nPenny's strokes became faster and faster, trying her best, her hardest, to pump out Albert's stuff.\n\n\"Oooooh,\" Albert groaned as he thrust up his pelvis, pushing his cock deeper into Tammie's mouth, and then suddenly feeling that wonderful sense of fundamental inevitability followed by a large glob of cum blasting forth from his cock onto Tammie's tongue.\n\nAs it hit her tongue Tammie pulled away, in part because she was frankly quite ambivalent about taking a boy's cum into her mouth. She wanted to have a bit of it, just a polite taste, but not a mouthful. She was not about to take the whole load into her mouth, and certainly not in front of her friends.\n\nShe smiled though as she pulled back, feeling the big, thick, sloppy wad of boy cum slosh around in her mouth. When she did finally have sex with a boy she knew it was going to be awfully, awfully fun.\n\nTammie pulling away was also appreciated by her friends, including Shelley, as they would now be able to see Albert cum, and up close.\n\nAnd, they were not disappointed.\n\nThe second wad shot straight up high into the air. \"Ooooooo,\" \"Ahhhhhh,\" the three girls exclaimed in wonder and awe at the power and distance of the eruption, like it was an impressive fireworks display.\n\nKari Ann though quickly pulled away, recognizing the danger she was in, that some of it was very likely to fall back down onto her hand, wrist, or arm. She definitely wanted to see Albert shoot off but she wasn't quite sure she wanted him to do it on her. \"Hold on!\" though she squealed at Penny, wanting to be sure that someone controlled the blasting cannon, keeping it aimed in a safe direction, away from her, and hopefully falling back on Albert rather than her bedcover.\n\nKari Ann was indeed fortunate as the second explosion was following by many additional bursts and sprays of thick, sticky, ropes and wads of cum. They did not shoot up quite so high as the second one, but the girls were duly impressed with the rapidity of bursts and the volume of gism that was released. It just didn't seem to want to stop, repeatedly spitting and squirting globs and wads of thick, viscous white spunk.\n\nPenny moaned with fear and confusion as she held firmly onto the shaft, despite the fact that much of the stuff was falling back down onto her hands and wrists. She knew though that the responsibility of keeping Albert's rapidly spitting penis under control was hers and hers alone.\n\nAlbert fell back into the bed and enjoyed the sight and feel of his dick shooting off. Any and every orgasm just feels so, so wonderful, and perhaps doubly so when it is being watched with such glee, wonder, and even fear by the pretty eyes of four girls. This was probably his best orgasm to date, and he wanted to fix into his memory the sight and feel of it so that he could recall it again, perhaps that very evening.\n\n\"Oh fuck,\" he gasped with base pleasure and blissful release, using language that was perhaps a bit disrespectful of the girls within the room, but they did probably feel he could be excused, being so clearly under the influence of such a powerful, overwhelming, and impressive orgasm.\n\nThe last spurts just popped out barely an inch from the tip, then slid back down the shaft to Penny's soaked fingers. Now that he was apparently done Penny gingerly removed her hands, which were now a sticky, filthy mess of boy cum. She held them up, and turned toward Shelley, offering them to her. \"Would you like to lick it off?\"\n\n\"Eeeeeuw,\" Shelley exclaimed in disgust, slipping away off the bed, not even wanting any of it to touch her. How could Penny even suggest such a thing, she wondered.\n\n\"I'll have a lick,\" Kari Ann said, much to the surprise of all three girls. She leaned forward, stuck out her tongue, and licked up a big, thick drop hanging off of Penny's fingers.\n\n\"Mmmmmm,\" she sighed with pleasure as she considered the texture and taste of the boy's cum. \"Just like ice cream,\" she announced.\n\nTammie laughed, knowing full well that it did not taste like ice cream.\n\n\"You lie!\" Penny retorted, but still not daring herself to have a taste, at least not in front of her friends.\n\nTammie got off the bed and opened a dresser drawer. She perhaps had instinctively opened her panty drawer. She briefly considered it but she was not about to have Penny clean the cum off her hands with her panties. She pulled open another drawer that had some handkerchiefs and handed one to Penny.\n\nPenny, with some reluctance, cleaned off her hands and then let it drop onto Albert's wet, slimy, slackening penis, which he cleaned off as well, feeling now rather embarrassed and self-conscious, as were all the girls. Everyone was doing their best to avoid eye contact, not knowing what to say.\n\nWhen Albert was done cleaning himself off he got off the bed, handed the handkerchief back to Tammie, who gingerly accepted it, carefully holding it with only her finger and thumb, worrying a bit about keeping this hidden from Miss Wormer until she was able to get it cleaned, but as the girls watched Albert depart she brought it to her nose, just to get a brief sniff. She smiled. It was actually kind of nice.\n\n- - - - - - - - - - - - - - - - - - -\n\nThe next day Tammie, Penny, and Kari Ann felt more comfortable and relaxed about it, even smiling knowingly at Albert whenever they passed him in the hall, as well as during meals, taking turns sitting next to him. Shelley also made eye contact, but would then quickly look away, her face reddening.",
        "All of this body language did not go unnoticed by the other girls, nor by Miss Wormer, who was wondering if perhaps something quite untoward was going on. She had even met Albert the previous evening as he was making his way down the hall, back to his room, just in time for the curfew, a rather guilty look on his face. At the time she attributed it to some apparent wet soda stains on his shirt, for which she immediately gave him a couple of demerits. But, that guilty look was still there during the next day's dinner. Miss Wormer wondered if perhaps she should again keep a close watch on this young man.\n\nAlbert kept to his room that evening, sensing correctly that there was potential trouble in the air with Miss Wormer, and not wanting to bump into the four girls. Well, that's not really true. He actually did want to do that, and even more than simply bumping into them. Just thinking about that made his cock swell within his slacks, and he knew full well that he would jerk off to that memory eventually, albeit not tonight. He felt it was best to keep a low profile for at least a few days, with Miss Wormer's antenna up so high.\n\nMiss Wormer had stopped by twice that evening, just to say hello, so she said, but obviously to check up on him. He was relieved to find that the girls had not come back, and come 11PM he breathed a sigh of relief, although also wishing that one of them had.\n\nBut, later that night, he awoke to find someone gently pushing on his shoulder.\n\n\"Albert, Albert, are you asleep?\" she softly whispered.\n\n\"What?\" He groggily responded, rubbing the sleep out of his eyes. What time was it, he wondered, and who the heck was this?\n\n\"Oh, thank goodness you're still awake. I didn't want to disturb your sleep.\"\n\nIt was Shelley. He didn't point out the obvious that she was indeed disturbing his sleep. \"Shelley, what are you doing here?\" he suddenly wondered. She was not only in his room but after hours. This was a most serious house violation indeed!\n\nShelley sat down on the edge of the bed, forcing him to move over a bit to make room. \"I just had to talk to you. I couldn't sleep.\"\n\n\"Shelley, we could get into real, real serious trouble,\" he whispered, as loudly and assertively as he dared.\n\n\"Oh, Miss Wormer doesn't come around after 11...or at least not too often she doesn't.\" She knew she was taking a chance, perhaps a big chance, but it was one that she felt she just had to take. \"Penny's asleep. She won't wake up, and even if she does I stuffed some pillows under the blanket to make it look like I'm still there. Miss Wormer doesn't ever actually go into the room or wake anybody, she just takes a quick look.\"\n\n\"Yeah, well, what about my room!\"\n\nThat was a good point. Shelley glanced at the door. She hadn't locked it behind her, as that would itself be a serous violation. What if Miss Wormer suddenly opened the door? \"Here, let me get under the covers with you, on the other side.\" She crawled over him on the bed. \"If she comes around I'll just duck underneath. She won't be able to tell. You're bigger than me and so she won't even notice me.\"\n\nAlbert didn't say anything. He wasn't so sure this was an especially good idea, and he was very doubtful that Shelley was right about being sufficiently well hidden, but how could a healthy young man deny a girl sharing his bed?\n\nShe did smell so sweet as she got under the covers. A girl's perfume is really so, so nice. Plus, he had to admire her pajamas. They were pink cotton with sleeping kittens, puppies, bunnies, and teddy bears sprinkled all over them. Perhaps they weren't Victoria Secret erotic lingerie, but they had their own adorable charm. He could feel his dick instantly swelling within his own pajama bottoms and he slipped his lower body a bit away from her to make sure that she had all the room she needed, which wasn't that easy in one of the relatively small twin beds.\n\n\"Goodness,\" she whispered as she got situated beneath the covers, \"it's kind of cozy in here, don't you think, Albert?\"\n\n\"Yeah, sure, I guess so,\" he replied, feeling very confused as to what was going on. He asked, \"What, um, did you want to talk about?\",glad that he had used mouth wash that evening, as their faces were rather close together, even having to share the one pillow. He had never felt this intimate with a girl before. Well, that evening with the four girls was pretty darned intimate, to be sure, but that was more playful. This seemed more serious, more personal.\n\n\"Um, well, you see,\" she said, her pretty brown eyes looking so shy and uncertain, her long lashes fluttering with nervousness. \"Well, it's just that, um, I wanted you to know that I'm not really mad anymore.\"\n\n\"Oh! Okay, that's good to hear, that's good.\"\n\n\"You know, about you enjoying seeing me get a spanking.\" She averted her eyes away from his when she mentioned the spanking, \"and the towel falling off...you know.\" She left out the fact that he saw her little woman's helper. That was just too much to even acknowledge.\n\n\"Oh yeah, yeah, sure,\" he replied. He was very glad to hear that she was no longer upset, but was now worried that she might detect his growing erection at her reminding him about the spanking and towel, plus being in bed with him, which would likely just reopen the wound that apparently had healed.\n\nThey were quiet for awhile. Albert wondered what more there was to say. He eventually said, \"Well, um, maybe you should be getting back...Before Miss Wormer comes around.\"\n\n\"I heard the television downstairs. I think she's watching a movie.\"\n\n\"Oh.\"\n\nThere was again an awkward silence. Albert had the crazy thought that perhaps she was in his room, in his bed, for another reason, other than just to reassure him. He glanced down at the front of her pajama top, noticing how it fell across one of her round, curved breasts. His dick swelled further. He wondered if he could touch it. Maybe she even wanted him to? But, of course, if she didn't then that would be like assault or something. Imagine her screaming, running from his bedroom in fright, telling Miss Wormer that he had assaulted her. He tore his eyes away from her breast, realizing that he had been looking at it too long. His face flushed when he returned his gaze to her eyes, which were looking right at his.\n\n\"Albert?\" Shelley quietly asked.\n\n\"Yes?\"\n\n\"You know it wasn't really fair that I got left out, you know, um...yesterday.\"\n\n\"Left out?\"\n\nShe again averted her eyes. \"You know what I mean.\"\n\nAlbert really didn't. He had to think about it for awhile, and then he got it, or at least he thought he might have. \"Oh...yeah.\"\n\nShelley spoke in her most quietest voice, \"I thought maybe we could try it again?\"\n\nAlbert's cock was now straining within his pajamas. He still wasn't 100% sure what she was referring to, or at least he definitely didn't want to get it wrong, but if he was right his cock was apparently dying to get at it. \"Well, um, sure, I guess.\"\n\nShelley smiled bashfully and playfully wacked him on the chest. \"Well, goodness gracious, don't get all excited about it now.\"\n\n\"Oh, yeah, no, I mean, I think it would be great!\" All she had to do was to see his cock and she would see how excited he was.\n\nShelley took a deep breath, the front of her PJ top rising up, which did not go unnoticed by Albert. \"I was thinking that, well, like, maybe I could do what Tammie did...you know.\" She had been appalled by her friends, but as soon as Albert left the room she had second thoughts. It was all that Tammie, Penny, and Kari Ann could talk about for the rest of the evening, and she hadn't even put her lips on it.\n\nWhen she went to bed that night she had thought a great deal about it, and even had a dream about it, which was a little embarrassing. She dreamed that she was on a date with Albert, and he asked her to do it for him, to put it in her mouth. She was rather shocked by the idea but she was also intrigued, and it wasn't like it would be like they were having real sex.\n\nHe undid his pants for her, reached in, and pulled it out. She was disappointed to see that it was really, really small, but then realized that he didn't yet have an erection. All guys are small when they're limp, she figured. She put it in her mouth and began to lick at it, like Tammie said she did, and then it began to grow, and grow, and grow, and grow. In her dream Shelley didn't want to let it out of her mouth, not wanting to make Albert upset, but it just kept getting bigger and bigger and bigger, until it was just so hard to keep it inside. Its continued growth eventually forced the ridiculously thick knob right out of her mouth, like a balloon forcing its way out of a pipe. \"Oh my goodness,\" she exclaimed as she saw its size, perhaps as big as her fist. It was now much too big to get back into her mouth and it was still getting bigger and bigger, and then it suddenly jerked and a large glob of cum blasted from the slit, just inches from her eyes, and she awoke just as it was about to smack her right in the face.\n\n\"Oh my goodness,\" she had quietly exclaimed in her bed, her heart racing. She rolled over, wondering if she had wakened Penny. She hadn't, but she then could feel how warm, even hot, she felt between her thighs, and how wet. It wasn't that easy falling back asleep. She so wished Miss Wormer had not confiscated her little helper. All through the next day Albert's penis was pretty much all that she could think about.\n\nAlbert was now finally confident about what Shelley was saying. Perhaps he should have been sooner but one doesn't want to make a mistake at a time like this. He reached out and placed a hand on her waist, squeezing it reassuringly. \"I would really love that, Shelley,\" he affirmed, and this time making sure that it was with more obvious enthusiasm.\n\nShelley sighed again, this time feeling more relaxed. She returned her soft brown eyes to his. \"It's not like we'd be actually having sex, or anything. We can't do that, you know.\"\n\n\"Oh, no, no, definitely not.\"\n\nShe smiled. \"Goody.\" She had such cute dimples when she smiled. She reached out and caressed his cheek. \"You won't tell anyone, will you?\"\n\n\"Nobody. Absolutely not. Not a single person.\" She looked so cute, so adorable.\n\nShe continued to caress his cheek, wondering what to say or do next. \"I'm kinda a little nervous about it,\" she admitted.\n\n\"That's okay. We're not in any hurry.\"\n\n\"You're so sweet.\" She smiled, her dimples again appearing.\n\nBut, she still didn't do anything. Albert wondered if perhaps he should do something. Maybe he should pull back the blankets? Let her see his erection? Or, perhaps like he just said, let her take her time? He gently caressed her waist with his hand, being careful not to appear too aggressive or sexual. Just being affectionate, reassuring.\n\n\"And,\" she added, \"there's something else.\"\n\n\"What's that?\"\n\n\"It's kinda hard to say, Albert,\" she said, her eyes again averted.\n\n\"It's okay, Shelley. You can tell me. I won't tell anyone. I promise.\"\n\nShelley again took a deep breath, much to Albert's pleasure. He wondered if perhaps he could get her to take off the pajama top.\n\n\"I was thinking that, well, maybe, you know...You could do it too, you know...\" She added very quietly, \"for me.\" Her face became beet red with that request.\n\nNow Albert was confused again. Are girls always this obtuse? Why can't she just say clearly and explicitly what she wants to say? Assuming he understood her correctly so far, that she wanted to put her mouth on his cock, like Tammie had done, he would agree to virtually anything she might say or want him to do. She didn't have to be so scared or vague about it. \"Um, you want me to do it too?\"\n\nShelley quickly recanted her suggestion, or more like her request. \"That's okay, I'm sorry. I shouldn't have said that. You don't have to.\" Her face flushed again with embarrassment over making such a suggestion. It was a pretty dirty thought.\n\n\"No, no,\" Albert quickly corrected her. He could see that she was now all flustered and embarrassed, and there was really no need for that. \"I was just confused. I didn't understand.\"\n\nShelley slid up against him, to bury her face in his chest, but then instantly noticed his erection pressing out the front of his pajamas, against her abdomen. \"Albert!\" she exclaimed with surprise, and much louder than was safe, \"You're already all stiff and hard. My gosh!\"\n\nHe tried to pull away, to separate their bodies, but he was already on the edge of the small twin bed. \"I'm sorry, really Shelley. It's just that...\"\n\n\"Shhhhhh,\" she reassured him, resting a finger on his lips. \"That's okay. I think it's wonderful that you're all excited about it.\" She reached down with her left hand and grasped hold of it through his PJs. \"Oooooh, it's all so big and hard,\" she said, as she squeezed and fondled it through his pajamas, particularly the knob.\n\nAlbert wanted to ask her to stop, as he might not be able to control himself for very long, and the bigger fun was still ahead. But, he didn't want to give her the impression that he didn't want her to touch him and, of course, he very much didn't want her to stop because he was most certainly enjoying it very, very much. He could admit to her that he was worried he might cum too quickly, but he didn't really want her to know that. He tried distracting her, \"What was it that you wanted me to do?\"\n\nShelley felt more emboldened. Perhaps holding the guy's boner in your hand gives you more courage, more confidence. Still, she again averted her eyes and said, as she fondled and caressed his knob with her fingers, \"I was thinking, well, if I put my mouth on your thing you could put your mouth on mine.\"\n\nWhoa! That's what she was thinking? Well, of course, that was precisely what she had said, but he just couldn't believe it. She wanted him to do that? \"Really?\"\n\nShe withdrew her hand from his cock, feeling again like it was a big bad mistake to have suggested it. \"It's kind of a disgusting idea, isn't it. I thought it was.\"\n\nAlbert though pressed his body, and his cock, against hers, gave her a kiss on the cheek, and said, \"I think it's a really, really great idea, Shelley,\" with very evident enthusiasm.\n\nShelley blushed deeply. She was so, so happy, and so, so embarrassed, now that it was clear what they were most definitely about to do. \"Now, you know,\" she softly confessed, \"I've never done it before, you know...kissed a guy down there.\"\n\nAlbert smiled. \"Neither have I.\"\n\n\"What?\" It was her turn to be briefly confused.\n\n\"I mean,\" he clarified, \"kissed a girl, down there.\" It was then Albert's turn for his face to turn red. He had provided that information rather impulsively, and now regretted the admission that he was so inexperienced.\n\nShelley giggled at the confusion. She was surprised to hear that he was comparably inexperienced, as he didn't even wear a purity ring. She didn't give it much thought though as she was now quite excited. She suddenly sat up in the bed, onto her knees, letting the covers fall way, her breasts notably wiggling beneath her pajama top. \"Okay, how should we do it?!\"\n\nHe considered pointing out that he had just said he had never done it before. It wasn't like he was confident about how best to do it. But, Shelley didn't wait for an answer anyway.\n\n\"I guess we should get our pajama bottoms off. Kind of hard to do it with them on,\" she giggled. She just couldn't believe what they were about to do. She hesitated though in pulling down her PJs.\n\nShe wasn't sure why she was so shy. He had already seen her there, twice in fact. And, she had already seen his, and even touched it. But, this time it would be more intimate, particularly as she was going to kiss his while he kissed hers. She trembled with excitement. \"Let's pull them down both at the same time,\" she suggested.\n\n\"Uh, yeah, sure,\" Albert agreed, getting out from under the bed covers as well.\n\n\"Here,\" she suggested, getting onto her feet, \"stand up. That way we can pull them all the way down.\"\n\n\"Yeah, okay,\" Albert agreed, feeling somewhat like he was being carried along here, not really having much control over it. As he got to his feet on the bed he glanced over at the closed, but unlocked, door. It would be so, so bad if Miss Wormer suddenly opened that door now.\n\n\"Oh Albert,\" Shelley giggled, \"It looks so cute to have your PJs sticking out like that!\"\n\n\"What?\" He looked down. Loose pajama bottoms do not do a particularly good job in hiding erections, and he had to admit that his stiffie was quite the sight. He covered himself with his hands and again apologized. \"Sorry,\" he softly mumbled.\n\n\"No fair hiding it,\" Shelley admonished.\n\nThat was certainly true. He pulled his hands away, causing himself, and Shelley, to blush.\n\nShe was blushing not out of embarrassment but because it just looked so, so big, and so, so dirty and naughty. \"Alright,\" she breathlessly suggested, \"on the count of three we both pull them down. Okay?\"\n\n\"Yeah, the count of three.\" He was actually quite anxious to pull his down, feeling he looked so silly with his PJ bottoms sticking out.\n\n\"One...two...\" Shelley hesitated. This would probably be the point of no return. With a deep breath she finally said, \"Three,\" and yanked her PJ bottoms down, her eyes fixed on his, his eyes fixed on hers.\n\nShelley got to see the most during the process of pulling the PJs down and stepping out of them, as Albert's stiff cock was sticking out so far. Plus it even bobbed into view, having first gotten caught on the elastic waistband, getting pulled way down, and then quickly swinging back up once it was freed. \"Oh my goodness,\" she giggled as she watched it bob and weave.\n\nThey both stood there for a second, studying each other's personal, private parts, while pulling their own PJ tops out of the way. Albert had seen hers before, once when she was spanked and again briefly when she was coming out of the shower. But, he wouldn't think that he could ever grow tired of it. It was perhaps not much to see: a delicate little cleft splitting a very small little pouch between her thighs, covered by very dainty, sparse curls. He was again reminded of how something so plain, so simple, could be so enticing, so enchanting. \"Wow,\" he said, 'You really are beautiful, Shelley,\" he whispered.\n\n\"Shut up,\" Shelley said, but she very much appreciated the compliment. She was feeling rather self-conscious, being reminded of the fact that he was so closely ogling her naked feminine spot. She had herself been concentrating on the sight of Albert's big, thick, stiff manly tool.\n\nShe asked Albert, \"Are all guys really this big?\"\n\nHe knew full well that most were even bigger, but he just shrugged, appreciating the compliment.\n\n\"Okay, well,\" Shelley finally suggested, \"we should get started. Why don't we, um, well, we could both lie down, you know.\" Her face became redder and redder as she tried to complete the instruction. \"I could lie down, with my head, my um, face, at the end of the bed, facing that way. Well, not facing that way, but down there, my feet facing the top of the bed, and you could be just like opposite, facing each other.\" She sure hoped that was real clear because she didn't want to explain it again.\n\n\"That sounds good,\" Albert agreed, now feeling pretty good that she was taking charge, which did make some sense as this was all her idea.\n\nThey both got into position, on their sides, facing each other, but quickly found it to be rather awkward. One arm and hand was either being crushed beneath them or sticking out awkwardly (and Shelley was even left-handed), and it wasn't really clear what to do with the leg that was on top. Each felt that they should get it out of the way of the other person, but positioning it was again awkward.\n\nAlbert finally asserted a suggestion. \"Here, why not instead, maybe, if it's alright with you, I mean, well, I could lie on my back and then you lie on top of me.\"",
        "\"Great!\" Shelley quickly agreed, very much wanting to abandon her original plan.\n\nAlbert shifted over, onto his back. \"Okay,\" he instructed, \"you can get on top of me.\"\n\nShelley gingerly got into position, on her hands and knees, well above Albert. She found it really quite disconcerting, as her bare naked pussy was now right above Albert's face. He had a really good clear view of it, and he was clearly staring at it. \"You don't have to stare, you know,\" she chided him.\n\nAlbert looked down his body, at Shelley's face. She was bent over a bit, looking back at him from between her legs. He smiled at her. \"Well, I gotta see what I'm doing, you know.\"\n\nShe smiled back. \"I guess so,\" she admitted.\n\nIn this position Albert could also see up into Shelley's pajama top, as it was hanging down away from her body. He couldn't see much but he could see a bit of her two boobs hanging naked inside. He again wondered if he should suggest that they also take off their tops, but he couldn't really come up with a good reason for doing that and, besides, it was probably best to remove as little of their clothes as possible. If they heard Miss Wormer coming down the hall they would have to get dressed quickly. It would be real, real, real bad for the both of them if Shelley was caught in his room, but certainly much worse if one of them was undressed. They could at least claim that nothing had yet happened.\n\nAlbert returned his eyes to Shelley's pussy. It was indeed a very lovely view: a girl's cunt poised before his eyes, about to be lowered down to rest right on his face. He had heard that some guys don't like to make love to a woman this way. At the moment he could not possibly understand why. It looked like such a deliciously erotic pie. He really didn't want to wait any longer. \"Okay, Shelley, bring it down.\"\n\n\"Oooooh,\" Shelley groaned, finding this so awkward, so weird. She was essentially going to sit on a boy's face! It had been difficult enough having Albert see her while she was getting spanked, and then coming out of the shower room. Now she was going to lay her cunnie right on his face? That just seemed so obscene, so wrong. But, of course, that was why her cunnie was also getting so warm, so moist. She most certainly hoped that he didn't notice that. Goodness, imagine actually having a drip fall on him? She began to slowly lower her cunnie down to his face.\n\nIt was like walking into a very, very cold lake. Some persons will just dive in, getting over the shock in one jolting moment. Shelley much preferred the baby steps approach, taking one short step at time, getting used to that one, and then taking another. Her approach though did drag out the anxiety, the apprehension, for a much longer period of time.\n\nAlbert though didn't mind. His smile just grew bigger and bigger as Shelley's sweet, moist honeypot got slowly closer and closer. He licked his lips as it came within inches of his face. He had never seen one this close before. It was just so remarkably sexy and alluring, yet it was just this little pouch of a mound, split by a delicate thin crevice, which was now parted somewhat with her thighs separated on either side of his face. He could now even see a bit inside the lips, witnessing her inner wet, pink juicy feminine flesh.\n\n\"Oooooh,\" Shelley again groaned, pausing just at the very end, just before her lips would be planted on his. It felt like she was just about to sit on something very painful, very hot or very cold, yet she did know that it was most likely going to feel so very, very good, albeit very, very dirty and naughty. She looked back at him, as best she could past her hanging pajama top. \"I don't want to smother you,\" but immediately regretted that remark, perhaps implying that her cunnie was inordinately fat.\n\n\"I'll be fine,\" Albert reassured her. Perhaps he should just reach up and grab her by her bottom and forcefully pull her cunt into his face. But, he knew it was best to let her take her own good time.\n\nDrawing upon all her courage and strength, Shelley gently, softly, laid her cunt onto, against, Albert's face.\n\n\"Oh my,\" she gasped as contact was made, blood rushing to her face, her heart rate accelerating. It just felt so erotically exciting. She covered her own face and allowed her knees and thighs to relax, letting gravity rest her cunt onto Albert's mouth and lips. She could even feel his nose poking the bottom of her mound. This was just so dirty!\n\n\"Oh!\" she softly squealed as she felt Albert's tongue begin to work on her lips, exploring its way around, tickling and licking its way all around and up and down her slit. \"Oh my goodness,\" she whispered and instinctively began to squirm and wriggle her cunnie against his face.\n\nAlbert was delighted. The aroma and taste were not what he had expected, but it wasn't the least bit aversive. He found it instead appropriately natural, raw, and lustful. He wasn't too sure what he should do, so he just gorged himself on her soft fleshy lips and folds, rubbing his own lips hard against her, trying to get his tongue as deep and far up inside her as he could, his face becoming awash with Shelley's feminine fluids.\n\nShelley removed her hands from her face, needing them to brace herself on the bed as she lewdly and shamelessly grinded her cunt against the boy's face. She most certainly didn't miss her woman's helper anymore as this was so much better.\n\nAlbert even eventually discovered Shelley's little stiff button. He instantly recognized what it was and he knew that he should give it due attention. He reached up with his hands and grasped hold of Shelley's perky little butt cheeks to help press his lips and tongue as hard as he could against her clit, as he rubbed and massaged them against her feminine nub.\n\n\"Albert,\" Shelley gasped, \"that's so good, that's so nice,\" and then realized that she had been simply ignoring him, or more precisely his thing.\n\nIt wasn't easy to ignore as it was sticking up right there in front of her eyes: Albert's big, thick, stiff penis. She had been intimidated by it before. It did look rather fierce, and even angry, with that big red swollen knob. But, in her lustful state of mind she so much wanted to devour it. It just looked so irresistible, so potent, so beckoning. Without further hesitation she dropped her face down and absorbed the big juicy masculine plum into her mouth, immediately bathing every inch with her hungry, yearning, craving tongue.\n\nAlbert gasped into Shelley's cunt, the sound though entirely muffled. He considered breaking his lips away to let Shelley know how appreciative, even how grateful, he was that she was doing that for him. He knew that as a purity girl this was really well out of character, something her friends would probably not understand, and it was most certainly something that was hugely fantastic.\n\nBut, he couldn't really free his face even if he wanted to. Her warning that she might smother him was not in fact terribly far from the truth, as she was crushing her now sloppy wet cunt deep into his face.\n\nHe expressed his appreciation instead by caressing, squeezing, and pawing her butt cheeks as he continued to work on her clit, at times nibbling and softly chewing that pointy little nub with his lips, at other times massaging and mauling with deep hard pressure. He wondered if perhaps he could also somehow work a finger up inside her cunt as he continued to slavishly devour her clit with his mouth, but he wasn't so sure that would in fact be possible.\n\nShelley could feel herself getting closer and closer. She began to pump and hump her cunt against the boy's face, as if she was in fact fucking his face with her cunt, as she now fucked as well his cock with her own face, plunging her face up and down on the cock, all the while working her tongue on the shaft and crown, using one fist to keep it steady, as well as to stroke it.\n\nA couple of times she even pressed the tip of his cock against the back of her throat, seeing how much she could actually fit into her mouth. She couldn't get her lips all the way down to the bottom of the shaft, but she did get it in pretty darned deep, causing her a couple of times to reflexively gag or cough. But, in neither instance did she, would she, actually withdraw her mouth totally free. Just as Albert was devoting his lips, mouth, and tongue to her clit, she would most certainly do the same for his cock.\n\nWhenever Albert felt the tip of his cock touching Shelley's resistant throat he felt a sudden urge to cum. It would be so nice to cum deep down into Shelley's mouth. Yet, he also wanted this to last as long as humanly possible, which really wasn't much longer at all. It just felt too awfully fantastic, way too stimulating, way too arousing. Self-control was just not realistic, not feasible.\n\nThe room was now filled with the rather loud and lecherous sounds of slippery wet mouths slurping on a cock and cunt. It was perhaps even so loud that they would be unable to hear Miss Wormer coming down the hallway, and perhaps so loud that it could be heard by anyone standing outside the door. But, frankly, it wasn't like either one of them was making any effort whatsoever to listen for her.\n\nAlbert suddenly realized that there was a hole that was open to him, to a finger, and he let go of Shelley's butt cheek with his right hand to draw his finger down that delectable crack of her butt to reach her little puckered rosebud. It was a risky move. It was very unlikely that Shelley was actually into or interested in anal sex, but he wanted to at least touch it, to tickle it, at least just a bit.\n\nShelley was not particularly cognizant of Albert letting go of her bottom, or even the exploration of his fingers down the crack of her bottom. There were far too many other wonderful feelings to pay attention to, to bask in. But, when she felt the tip of Albert's finger make contact with the tingly nerves of her very sensitive anus, her eyes opened wide and she suddenly felt her climax sweep across her body.\n\nHer cunt began to quiver and quake with the spasmodic contractions of her orgasm. Additional fluids flowed from her cunt, washing onto Albert's face. She softly whimpered and moaned into his cock, which she did continue to lick and pump despite being caught up in the overwhelming bliss and joy of her climax.\n\nAlbert did sense that Shelley was climaxing. He wasn't entirely positive. He wasn't at all experienced as to the signs, but he did hear the sudden whimpers and moans through her clenched lips, wrapped so tightly around his cock as her tongue continued to work on his knob, and he then gave himself over to his own.\n\n\"Shshhly\" he garbled into the wet shuddering lips of her cunt, expressing perhaps a warning that he was about to cum, or else just an expression of appreciation.\n\nShelley didn't actually hear him, but she hardly needed an announcement, as she became fully aware of his orgasm by the twitch of his dick in her mouth and the sudden arrival of a big, globby wad of cum on the tip of her tongue. \n\nShe instinctively pulled away, drawing her face entirely off his cock, only to receive a wet sloppy splat right on the tip of her nose. In her lustfully drunken state of mind she quickly returned her mouth to his cock to receive the rest of the bountiful treasure upon her tongue, against the insides of her cheeks, and even deep, deep down inside, Albert's cock continuing to jerk and spit globs, wads, and ropes of viscous, sloppy, thick, hot cum.\n\nShe didn't mind taking him in the mouth, not in the least. On the contrary, it just felt so right to feel Albert squirting his stuff into her mouth as her cunt trembled and quivered within its own bliss, releasing her own moisture onto his face, and some onto his tongue, into his mouth.\n\nShe was though surprised at how much he had, and how long it took for him to finish. She perhaps shouldn't be, as she had seen him do it twice before. But, this time she was more personally, intimately involved, and for a moment she did wonder if she would be able to get all of it into her mouth. Still, it was just so cool to be climaxing while a boy, while Albert, was exploding his stuff into her mouth. It just seemed so right, so lovely, so fulfilling.\n\nWhen he was finally finished, she gently squeezed and milked the shaft to draw the rest out. She knew it would not be good to let any of it spill onto the bedcover, another reason for taking all but one splat into her mouth, although that type of careful planning was not the actual reason for having him cum in her mouth.\n\nShe did struggle a bit at swallowing it all down. It was just so thick, perhaps even sort of gooey like. Still, it didn't really taste at all bad. She was surprised at that. It was perhaps a bit saltier than she would like, but it was nevertheless a very sexy and delightful late night snack.\n\nThey both did not move for some time, albeit Shelley was considerate to draw forward a bit, so that her cunnie was no longer smothering Albert's mouth. It was now resting on his chest, just below his face, which offered him a really nice view of her dripping, wet, swollen cunnie, and puckered little red butt hole. He softly blew on them both.\n\n\"Stop it!\" she giggled from down the bed, but not actually trying to prevent him.\n\nWhen she felt she had enough strength and composure, Shelley carefully raised a leg and pulled herself off his body, turned around, and snuggled up against him, once again sharing a pillow.\n\nAlbert notice the glob of cum still resting on her nose. He scooped it up.\n\nShelley stuck out her tongue, a little grin on her face. \"Gimmie, gimmie!\"\n\nAlbert smiled and wiped it onto her tongue.\n\nShe drew it into her mouth, savoring the last final drop. \"Mmmmmmmm,\" she sighed with a deep fulfilled satisfaction. \"You taste good, Albert.\"\n\n\"You did too, Shelley,\" he agreed.\n\n\"Shut-up!\" she whispered, her face reddening as she snuggled into the crook of his neck.\n\nThey lay like that for a bit, both basking in the blissful peace of their orgasms' resolutions, as well as the warmth of their affectionate, loving cuddle.\n\nShelley finally broke the silence, \"Wouldn't it be nice to just stay here all night long? Together?\"\n\nIt would indeed, but suddenly they could hear the steps of Miss Wormer, coming down the hall.\n\nTo be continued...\n\n- - - - - - - - - - - - - - - - - - - - -\n\nI very much hope that you enjoyed this story! I am working on the sequel, but I am certainly open to suggestions and proposals. And, if you did like it, then please do take the time to cast a vote. You may not realize how shamefully reinforcing that is. "
    ],
    "authorname": "Charles Petersunn",
    "tags": [
        "her first time",
        "reluctance",
        "spanking",
        "exhibitionism"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/living-with-omega-theta-pi"
}