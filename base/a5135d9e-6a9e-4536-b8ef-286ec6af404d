{
    "title": "Storm of Shadows Ch. 10",
    "pages": [
        " Thank you for all your messages. I appreciate it has been a long time since the last chapter published. Work commitments and problems with my eyesight have made writing extremely difficult recently. I hope you enjoy the latest chapter. \n\n<p align=\"center\">Chapter Ten</p>\n\nDarkness covered everything. It was insidious, blanketing all light, all memories, all sense of time. How long had she been here? Was it a day, a week or even a month? She didn't think it was any longer than that. She remembered the concept of light, and she was fairly certain that if darkness had been all that she'd known for a year or more then the memory of light would have faded. Sensory deprivation did that to a person. It confused time and place. It messed with the mind until you didn't know which way was up or down, or who you were any more.\n\nShe knew her name was on the tip of her tongue. She could reach for it but it would only slip away again as it had so many times before. The creature would arrive and there would be the barest of sensation at her right side and then oblivion would creep back in. So, this time she didn't reach for her name. The crushing disappointment of almost getting there only to have it snatched cruelly away again would be too much to bear.\n\nSomething did feel different this time though. The clarity was stronger, and she was sure that she could sense a presence to her left side. Someone was with her, someone lay close and he was important to her. He! She was aware of his gender and his presence. That hadn't happened before. Perhaps she was becoming immune to whatever drug was being administered or maybe something had happened to their abductor and he couldn't come back to knock them out again. \n\nWhatever it was it gave her the first tendril of hope that she could remember having. She reached with her mind, stretched as hard as she could, trying to force the clarity to come quicker. Her name...rain. It was raining? Why did the weather play on her mind when she was so close to remembering? Her name was almost in her grasp, she almost had it...rain. No, not rain, but Rayne. Her name was Rayne! Sarayne, and the warmth that was starting to become more pronounced to her side could be no other than Gard, her mate.\n\n\"Gard! Gard! Wake up. Hear me!\" \n\nThe mental shout she sent towards the presence was nothing more than the faintest of whispers. She was far too weak for her telepathy to work, and just because she was becoming more aware, that didn't mean that her mate was. Silence greeted her, and the tiny spark of hope that had started to blossom began to fade. What did it matter that she knew who she was, and remembered Gard? If he was deep in the drugged oblivion that had surrounded them for so long, there was nothing she could do to escape. Even if she could move and was fully lucid, she would never leave her mate behind. As he would never leave her behind if their roles were reversed.\n\nThe only thing Rayne could do was wait, and hope that their abductor did not return. If he stayed away long enough then maybe Gard would shake off the drugs too and they could escape together. It was a tempting thought, one that fanned the tiny flames of hope once more. If she called to Gard every so often perhaps he would hear her. Maybe they would soon be free.\n\nThe shuffling sound of approaching footsteps sent a shaft of dread right through Rayne. No! He was coming back, he was going to drug her again, and they would forever be held in this captivity.\n\n \"Gard! Please wake up! Gard!\" \n\nSomething flickered, a gentle fluttering against the surface of her mind.\n\n \"Gard?\" \n\nThe presence was there and it was male and so very familiar. However, it wasn't her mate. It didn't have the same scent and colours that wrapped her up in his love. This presence was dark, and it was brooding. It was midnight shades and deep dark caramelised cinnamon. Moreover, it was love...so much love and loss that her heart broke and she knew she had to stop a telltale tear from leaking from her closed lids. \n\nOh God no! Not him! They had everything else that she loved, but they couldn't have him...they couldn't!\n\n \"Run!\"  She screamed the word out with every ounce of mental power that was available to her, even as the sharp sting of a needle told her that her time was up.  \"Run, Kothi, run...please son!\" \n\nThere was no answering call, but the presence was still there, alert, angry, and oh so feral as it slowly began to fade away as the darkness thickened. Rayne's heart slowed, memory evaporating as the drugs took hold, but her mother's love fought on, gave her a final moment of lucidity.  \"Agony...oh Agony...run my child.\" \n\nShe couldn't fight it any more, couldn't hold onto the spark that tried to keep her centred in the conscious world. Rayne let go, sank down into the abyss once more as the softest of voices danced inside her mind...\"Mother...\"\n\n<p align=\"center\">~~~~~</p>\n\nThe wave of nausea crashed over Natalia so strongly that she couldn't halt the groan that ripped from her throat as cramp clenched inside her abdomen. She was vaguely aware of Dara speaking her name, however her eyes swung to the dark cloud in the seat opposite her, her breath catching at the rigid body language of the male before her. \"No...\" she croaked the word out, even knowing it was too late.\n\nAgony rose like a spectre of death, fangs elongating and dark black talons curling from his fingertips.\n\n\"Get everyone out of the carriage.\" The voice was panicked but authoritative, Dara issuing instructions, even as she moved closer to the impending danger. She didn't look to see if Dante and the others followed her instructions, though Natalia could hear the others in their party moving quickly away from them.\n\nIt was a small blessing that there were hardly any humans in the train compartment. Something about their presence had seemed to warn them off when they entered the carriage and most had moved to other ones, a handful of the braver ones staying at the bottom end away from the group of wolves, hybrids and vampires.\n\nNatalia couldn't drag her gaze away from the death in front of her...because that's what Agony was in that moment, the true embodiment of death. \"Kothari...Kothari listen to me. You need to take control. You need to stop him. \" How she knew that was what was needed was beyond her, she just said the first thing that crossed her mind, that felt right.\n\nLong talons lashed out, ending a millimetre from her face, halted by a smaller hand. The hand wasn't gripping the wrist tightly though. It was clear Dara had reacted instinctually to protect her, but despite the feral state Agony was in, he had reined in his movement, as if conscious somewhere that he could hurt her badly if he didn't.\n\n\"Mother,\" hissed out of his snarling lips. \"Mother!\"\n\nIt was the last thing Natalia had expected him to say, and it appeared it was to Dara too, though she recovered more quickly from her surprise.\n\n\"Agony, I know something has happened that is distressing you, but you need to stand down, before you end up derailing this fucking train.\" Dara snapped the words out, giving a gentle push against the wrist that rested in her hand. There was an audible sigh of relief as he didn't fight the movement, his shaded eyes turning to stare at her before he swung back towards Natalia.\n\n\"He can't help her,\" he spat out, fury lacing his tone. \"You call for a boy who cowers in grief, when I am the only one who can save her.\"\n\nNatalia fought not to shrink back against his rage, knowing from pack life that it would be viewed as a sign of weakness and none of them could afford to be perceived as weak when Agony was so close to losing control. He appeared to be ignoring Dara for the most part, concentrating on Natalia, so she tried to keep his attention while the others made sure everyone else was safe.\n\n\"Well at least he wouldn't out the entire paranormal world and potentially kill us all including every human on this train because he was having a temper tantrum.\"\n\nShe was ready to pass out from the nausea and fear that was threatening to overwhelm her, but she pushed on, knowing that there was only a small window open to get through to him. \"You brought me here to warn you of impending danger, Agony. If you don't sit down and behave I am going to throw up all over your pretty black clothes, you're making me so ill.\"\n\nFor a moment, she thought she'd pushed him too far, and then he slowly sat down, some of the menace easing from his body language. It was only as he sat that the nausea began to die down, and Natalia relaxed a little, her gaze going to Dara's concerned face. \"It's okay.\"\n\nDara didn't appear too sure, and say down beside Agony, her arm brushing against his in a gesture that was so clearly pack related. She was seeking to soothe him as she would a pack member, though Natalia doubted that Agony would succumb to pack when he was this wound up.\n\n\"What happened, Agony? Is Rayne okay? Were you able to contact your parents?\" Dara asked, quietly, as the rest of their team slowly returned, each sitting down nearby but no one interjecting into the conversation.\n\nHe watched the others sit, his expression blank, and then he sucked in a deep breath, held it for a few seconds, and slowly exhaled. \"She was there for a moment, but was very weak in mental contact. She called to Kothari...told him to run. Then she told me to run, as if I would even consider it.\"\n\nA ghost of a smile flashed across Dara's lips at his derisive tone, as if she couldn't help being amused despite the tense situation, and then her expression turned thoughtful. \"Don't you see that this is good news, Agony? We're clearly headed in the right direction, and there has been contact with Rayne even if it has been brief. Yes, there is strong danger ahead if she told you to run, but we've known that all along, and we can be prepared for it. This isn't a bad thing that has happened, but a good thing. We are getting closer with each passing moment.\"\n\nDara's words appeared to have the effect that she'd been working for, as Agony relaxed further, his brow furrowing in a thoughtful frown. \"We need to plan for when we arrive at Bra\u015fov. I am sure I will be able to pick up my parents scent there when we arrive. It is getting harder to maintain control, Dara. The closer I get to them, the harder it will be to maintain any sliver of civility. I will destroy all who have laid hands on my parents. I suggest you work out what you need to do to keep collateral damage to a minimum.\"\n\nNatalia had no doubt in her mind that what he meant as collateral damage was the people travelling with him. That should have terrified her, but for some strange reason she felt calm. Perhaps Agony was not as far gone as he believed he was. On the other hand, perhaps it just meant that no matter what happened in the future, there was no direct threat to her own life. That didn't mean that the others would come out of everything unscathed, and that was a worrying thought. \n\n\"There will be no collateral damage,\" Dara said firmly, a sternness crossing her pretty features that Natalia had never seen before. \"We are all here for the same reason and you will not go AWOL again, Agony. You might not like being pack but you damned well are pack. We work together as a team and that's what makes us stronger. Yes, we will plan, but we will plan to make sure that we bring home Gard and Rayne together...all of us. So, you better get that into your thick skull or I will call Rafe right now and tell him to send over Demetri and Kal to deal with your sorry ass. Am I making myself clear?\"\n\nNatalia didn't know what to expect, but she certainly hadn't expected laughter. Agony actually threw his head back and barked out a loud laugh, startling everyone who had been imagining a more volatile response. \n\n\"You think I am afraid of Demetri? Yes, he is impressive, but I could kick his ass with one hand tied behind my back.\"\n\n\"Maybe you think you could, Agony, but I am sure Kothari remembers the story of what Demetri and the Romanovs did to a coven that pissed Demetri off,\" Dara retorted. \"I'd like to see you try to take on Kal, though. Now that would be an interesting match to watch.\"\n\nIn reply, Agony closed his eyes and rested his head against the seat, his body language making it clear that the conversation was over.\n\n\"I take it we have an agreement?\" Dara pressed.\n\n\"Fine...draw up your little plan. I will point out the flaws when you've finished.\"\n\nIt was the best she was going to get, so she stood up and moved back to the other side of the carriage. Pulling out her phone, she dialled Rafe, and quickly filled him in with the latest developments and their estimated time of arrival at Bra\u015fov.\n\nNatalia's curiosity was piqued, and she tuned out the others, keeping her gaze on Agony. \"Who is Kal?\"\n\nFor a moment she thought he wouldn't answer her, but then he sat forward, leaning his arms on the table between them.\n\n\"There are 7 of us...those you call V\u00e2rcolac or hybrids. Lily and Kallum Romanov, Cassia and Dara Romanov, Liam Eriksson, Elina Alexander, and me... Agony.\"\n\nHis sudden chattiness was surprising however, she couldn't resist interjecting. \"Don't you mean Kothari?\"\n\nHe let out a long sigh, as if he regretted his decision to answer her, but then he continued. \"Whatever...those are the 7 V\u00e2rcolac born of the recent matings between vampires and shifters. My mother Sarayne is V\u00e2rcolac, though her animal is a black panther. When she mated with my father, I took her animal, as the others have taken the wolf as their animal from their parents' matings. We are pack and Rafe is our Alpha, though this generation of V\u00e2rcolac are something more, we have our own internal hierarchy, though it isn't a true pack. Kal talks the most sense out of the V\u00e2rcolac so we tend to heed his words when he speaks.\"\n\nIt was the first real conversation between them, and Natalia was fascinated by what she was learning. \"Why didn't Kal come to get you then, when you came to Europe? Wouldn't it have made more sense to send him rather than Dara? You argue with her all the time, and sometimes I doubt that you will listen to her even when she is talking sense.\"\n\n\"He stood no chance of tracking me. I hid my scent and masked all my pack bonds when I left. We V\u00e2rcolac can become invisible to most when we want to.\"\n\nThat didn't make sense because Dara had clearly found him. Her expression must have given something away because he sighed again and she could imagine his eyes rolling behind the dark shades with which he screened them. \n\n\"I let Dara find me.\"\n\nNow that did sort of make sense, but not a lot. She was confused and couldn't understand the distinction between Kal and Dara. \"Why?\"\n\nHe could easily have ignored her question but after a long pause he chose to answer. \"Kothari has always had a special bond with her. He needed that connection to remain sane, to keep him anchored, when our parents vanished. In addition, Dara is not as fragile as she may appear and is a formidable beta. Do not be fooled by my apparent lack of confidence in her abilities. I wouldn't even choose Kal over Dara to fight at my side because no one in our pack understands me quite as she does. It isn't always about who is the strongest, Natalia. Often, it is about who you trust the most to have your back.\"\n\nNatalia was aware that Agony was being more open with her than he probably was with most people and she was afraid to say anything more in case she broke the fragile spell between them. However, she couldn't contain her curiosity. \"Is Dara Kothari's mate?\"\n\nAgony rose up, his lips tightening in a straight line. \"Stupid human,\" he muttered, striding down the train carriage to sit half way down as if he couldn't bear to be in the same area as her. \n\nHis abrupt departure was puzzling, and Natalia glanced at Dara in confusion. She knew the older woman had likely been listening to their conversation.\n\n\"Leave it,\" Dara said, a small sigh escaping her. \"Kothari thought so for some time but realised recently that he was wrong. He's still touchy about it.\"\n\nNatalia nodded, sitting back to think over everything she had learned. Kothari and Dara had a close bond but were not mates. For some reason she felt a sense of relief about that though she couldn't understand why. It wasn't as if she was interested in the hybrid. The mere thought of it was just ludicrous. He had been going to kill her mother for goodness sake. Okay her Ma had been in the process of going rogue and would have murdered innocent humans if she had been able to, but that was beside the point...wasn't it? \n\nIt didn't take away from the fact that Agony believed he was separate from Kothari, and was prone to turn into a homicidal maniac when pissed off. No woman in her right mind would be interested in a man like that, especially not a human girl like her who was nothing special. No, she was not interested in the infuriating male who was sulking a handful of seats away from her. The information she was getting from him was just helping her understand her current predicament and where her mother was now headed to Stateside to keep her safe until she could join her.\n\nNatalia closed her eyes and let the gentle lull of the rocking train seep inside her soul. They had another hour before they reached their destination, and things turned hectic again. It was probably best if she tried to take a light nap until they got there and discovered whatever was waiting for them. Forcing Agony out of her mind, she drifted off, shutting out the feeling that concealed eyes were boring into the back of her head.\n\n\"They went this way.\"\n\nAgony could scent his parents even though it was a while since they had passed through Bra\u015fov. The scent was very faint but it pointed in the general direction they had taken. He knew that once they passed into the mountains looming in the distance tracking them wouldn't be as easy as he hoped, but for now, he knew which direction they needed to go.\n\nTurning to view the others it was all he could do not to let out a loud sigh. They were clumped together like a tourist party, their appearance, and numbers, unusual enough that human heads were turning in their direction. \"Do we have to look so obvious?\" \n\nLouis nodded at the group of vampires he'd brought with them, and they immediately dropped behind the main group, blending in a little better with the people milling along the sidewalk.\n\n\"You go ahead. We'll follow close behind,\" Dante said, hooking Mila's arm through his and raising an eyebrow at Louis.\n\n\"Fine.\" The dark-haired coven leader nodded his agreement to remain with them, though it was clear that he wasn't that impressed with not being in the main group. He was used to being in charge so it was hardly surprising that taking a back seat didn't sit well with him.\n\n\"So which way do we go, Agony?\" Now that they were on Romanian soil, Dara wanted to try to find Gard and Rayne as soon as possible. It was unsettling knowing they were so close to something dangerous which they knew nothing about.\n\n\"Can I ask a question before we do anything?\" Natalia interrupted, her tone pensive. \"If Rayne is V\u00e2rcolac, and was captured here, what's to say that the same thing isn't going to happen to us?\"\n\nAs it was a valid question for a human to pose Agony wasn't too irritated by it. He looked down at the girl who he considered inferior as a species, but surprisingly insightful as a person. \"Lack of surprise, Natalia. My parents are two of the most powerful people to walk this planet, but they were not anticipating encountering a being stronger than they were. We, on the other hand, now know that whoever is out there is not only intelligent and resourceful, but they have great power. We are anticipating a powerful attack, and therefore, we have a better chance of countering that attack.\"",
        "When she nodded but her expression remained doubtful, he considered trying to convince her some more, and then decided against it. His feet itched to begin the ascent into the mountains, the tantalising scent of his parents becoming a beacon drawing him to them.\n\n\"Dara, the pull I feel is great,\" he said quietly, taking a half step forward. \"I need you to watch our backs just in case whatever overcame my parents comes looking for me and I don't recognise the danger until it is too late.\"\n\nThough his tone was solemn, the blonde V\u00e2rcolac laughed, amusement dancing across her face. \"I have never known you to overlook anything, whether you call yourself Agony or Kothari. I will be on alert anyway because I don't know how to do anything else, however you will know of any danger at the same time I do, Agony.\" \n\nFor the barest of moments something alien assaulted him, a sharp gnawing feeling, an instant of doubt. Never in his existence could he remember ever feeling uncertain, and he didn't like it one bit. The moment passed as quickly as it arrived, and he inclined his head at his friend. He knew Dara would protect the others if he was unable to, and that was good enough for him to start forward. He was conscious of Natalia meeting his step with only the barest of hesitations, his lips curling into an involuntary smile. She really was very brave for someone so fragile. Perhaps he should stop fighting Kothari so hard and pay more attention to the girl. \n\n<p align=\"center\">~~~~~</p>\n\n\"They're here, Rafe.\" Aaron Alexander popped his head around the study door long enough to utter the three words and then disappeared again. \n\nThe Armand-Hanlon alpha looked up from the report delivered by one of Jared's betas on the lone wolf movement within the city, and placed it on his mahogany desk. It hadn't seemed that long since Dara had called to update him on what was happening in Europe, however a glance at the clock on the mantle of the fireplace showed that he'd been sat at his desk for more hours than he cared to admit. \n\nThe remains of dinner sat off to his left and he remembered Lacey coming in with it and admonishing him to eat. A warm smile curved his lips at the thought of his mate, and he once more wondered how she put up with his overworking all of the time. He truly had lucked out that night so long ago when he had looked through the security cameras of the nightclub, and was stunned breathless when he'd seen the vision with long platinum blonde hair. His life had never been the same since then, and he wouldn't have had it any other way.\n\nRising wearily from his seat behind the desk, the tall Alpha ran a hand through his tussled shaggy brown hair, and headed outside to meet the refugees sent to him from protection. If what Dara suspected was true and the grieving wolf was one day going to be Kothari's mother-in-law, he had to do everything in his power to make sure that she didn't go rogue. He didn't ever want to be the position of telling Kothari's mate that they had to perform a mercy killing to keep everyone safe.\n\nStepping out of the large Alpha mansion in the middle to the secluded forest, Rafe Hanlon got his first look at the wolf called Ava, and the small child that had accompanied her. The woman was skittish, unsure, a hint of panic in her eyes as she clutch the young girl close. Aaron was talking to her quietly, however she wasn't responding to his second in command which was highly surprising. Aaron had successfully pulled two wolves back from going rogue. He knew that first hand, because he was one of them. Aaron was the pack's most experience beta and could probably take that last step up to be an Alpha, though it appeared that it wasn't something he wanted to be.\n\n\"Ava,\" Rafe called, putting as much authority into his voice as he could muster. Perhaps she would respond to the fact that he was an Alpha. It was at least worth a try.\n\nSkittish eyes turned toward him, and for a moment he thought he would get through to her, and then, her gaze turned inward again, and a sinking tightness settled in the pit on his stomach. He really didn't want to be put in the position of performing a mercy kill. He would if he had to, but there had to be a way to save the wolf, there just had to.\n\n\"Ava, this is Rafe, the Alpha we told you about.\" \n\nIt was only when the blond vampire spoke that Rafe paid any attention to him. It wasn't that he hadn't known he was there, because he was aware of everything around his pack. He just knew that this was Joshua. Caleb, and Demetri and Pietro had all vouched for him, so, there was no need to be concerned about his presence. He was a friend.\n\nThe woman backed into the vampire's chest, clutching at the child protectively. \"Home,\" she whimpered, her fear escalating. \"Tali needs to go home.\"\n\nThings were going from bad to worse, and Rafe didn't know how to countered Ava's rising terror. Her big eyes were beginning to lose the small spark of sanity they contained, her grip on the child becoming harder as the little girl exclaimed in pain. He would have to protect the child at all costs. If that meant ending the she-wolf then so be it.\n\n\"Move out of the way, Joshua.\"\n\nThe blond vampire stiffened at the female voice, spinning around defensively as Liam and Thereasa joined the group. \"I thought you were dead, Thereasa.\" His tone was conversational, but his stance was tense.\n\n\"Sorry to disappoint you,\" she countered, a half smile on her face. \"You've travelled a long way for a hat,\" she remarked, alluding to their meeting not so long ago, when she had slipped inside his mind in Europe, to steal the fedora that contained the vampire scent she'd needed to track the V\u00e2rcolac stateside. From his expression it was clear he was still annoyed about it, though she didn't appear too bothered.\n\n\"Step aside, Joshua. I will not hurt your charges. If anything, perhaps Liam and I can save the wolf before she loses whatever semblance of sanity she still retains.\"\n\nIt was clear he didn't trust her, and Liam fought to keep a scowl from his face. It was difficult enough in their pack for Reasa to earn any trust. He was unhappy that a stranger could come onto their lands, and get away with questioning her too.\n\n\"Let Liam and Reasa do what they can,\" Pietro del a Rios called as, he too, arrived in the meeting area. \"I never did get a chance to thank you properly for all you did for me in Europe, Joshua. Please come to our home and meet my mate Cassia.\" He qualified his statement by standing side by side with Thereasa, smiling at her to show that they had come to terms with their previous difficulties.\n\nPietro's appearance seemed to sooth the other vampire, and his defensiveness lessened a bit, though he still cast a sceptical glance in Thereasa's direction.\n\n\"A lot has happened since Europe,\" his friend continued, beckoning him to follow him to his home. \"Let's get you caught up on the developments before Caleb drags you away for a debrief.\"\n\n\"They are safe with us, Joshua.\" Rafe nodded his agreement. \"I give you my word on that.\"\n\nWith such strong positive reinforcements, it was hard for the European vampire to continue his distrustful stance, so he finally relaxed, turning to Ava and giving her a reassuring smile. \"These people will help you, sweet one. Do not be afraid. You are safe and Tali is safe here. They will care for you until you are well enough to return to your Alpha.\"\n\n\"Home,\" Ava gasped out, the little girl giving a pained cry as she gripped her a bit too hard.\n\nRafe took an involuntary step forward, but Thereasa intervened first. She quickly scooped the child out of the woman's grasp, handing her expertly to Liam who had moved at the same time. Ava screeched out aloud, lashing out at the vampire, who deftly caught the raised arm, and gripped the woman's neck to keep her immobile. \n\n \"Be easy, Ava,\"  Thereasa said, both mentally and out aloud.  \"You are unwell at the moment, and don't understand what you do. This is no fault of yours. Shifters are genetically programmed this way. However, it doesn't need to be this way. We can work together to help you become well again so that you can take care of the child. You wouldn't wish to accidentally hurt the young one, when you are unwell.\" \n\nThe shock of hearing someone inside her head as well as speaking out loud was sufficient to still Ava's struggles, her eyes going wide. Thereasa used that shock to delve a little deeper into the tortured wolf's mind, ruthlessly shutting out the overwhelming grief that cascaded through the broken mind she encountered.\n\n \"We will care for Tali for you. We will feed her, clothe her, ensure that all her needs are met until you can once more take over those duties. You know you are not capable of that right now. You know it is best for Tali. Let us help make you well again, Ava. You have been so brave, so strong fighting this awful pain on your own. Let me help take some of that burden from you, brave wolf. Let us bring you home.\" \n\nLarge tears pooled in Ava's eyes, slowly trickling down her cheeks. \"Home.\" She gulped out the words. \"There is no home.\" An anguished wail erupted from her lips, a cry so full of melancholy that the child in Liam's arms burst into tears.\n\n\"He's gone...oh God he's gone.\" Ava cried out the words, the words containing so much pain her voice sounded raw. \"Let me go too, vampire,\" she begged, her tortured gaze swinging to Rafe. \"Alpha, let me go too...please let me go too.\"\n\n\"No!\" the little girl screamed out, struggling in Liam's embrace. \"I promised her. I promised. You can't leave me. You can't go to the forever sleep. I promised, Mama. I promised.\"\n\nThereasa saw the child's words register through the wolf's grief and she ruthlessly pressed on, knowing there was a finite amount of time they had to give her some will to live.  \"I know it hurts. I know the pain feels insurmountable, Ava. I am in your mind. I can see it, feel it, taste it with every tear you cry. I am astounded that you've stayed with us so long. A less strong wolf would have faded away long ago. However, you're still here, Ava. You're still fighting. You're not alone and you have something precious to live for. Live for Tali, Ava. Live for your child. It won't be easy and the pain won't miraculously vanish, but let me help you find a way to work through the agony. Let me help you find a way to live for your daughter.\" \n\nThe she-wolf still wept, but the sobs didn't sound as harsh. \"Tali. For Tali...\"\n\n \"Come with me, Ava. Come to our special room that will help you heal. I promise I will not leave you. Come, brave wolf.\" \n\nAn audible sigh of relief sounded from the compound as Ava allowed Thereasa to lead her towards the medical building that contained the pack's safe rooms, Aaron in close attendance. \n\nLiam cuddled the little girl close, quietening her terrified outburst. \"it's okay now, little one. We will take care of Ava. She will be fine. You have been very brave. Now it is time to let us take over the burden you have had to bear.\"\n\n\"I promised, Tali,\" she hiccupped. \"I promised that I wouldn't let her Mama go to sleep forever like Mama and Papa did.\"\n\nRafe stroked the child's back, aware that she had recently lost her parents to a vampire attack, and was almost as vulnerable as Ava was. Dara had said the child's name was Pippa. It was important to establish her identity to her so that she didn't get caught up in Ava's grief and begin to believe that she was her daughter. \"We will look after Ava, Pippa,\" he said with quiet authority. \"We will look after you too.\"\n\nLiam felt a little hand tangle in his auburn hair, and met his Alpha's gaze. \"Pippa can stay with me until Ava is feeling better.\" His gaze told Rafe that he would work inside the child's mind, helping her to come to terms with her own grief as Thereasa worked with Ava, a bond of trust having been formed there already so it was best that he left the she-wolf to his mate. Rafe nodded his head in silent agreement, and the V\u00e2rcolac headed to his home with the little girl.\n\nTo say Rafe was relieved was an understatement. He had been doubtful about them being able to help Ava when Dara first mooted the idea, but they had to take a chance, as it was the only option open to them at the time. Perhaps everything would work out satisfactorily, only time would really tell.\n\nJoshua followed Pietro to a modest sized home deeper into pack lands. He thought back to their time in Europe, of how convinced he was that the other vampire would die from the terrible poisoning he'd suffered at Thereasa's hands. It was gratifying to see the other male so obviously healthy and happy, despite the scars than ran down one half of his face. What he couldn't understand was why Pietro hadn't killed Thereasa but instead, appeared to be friends with her.\n\n\"It's a long story,\" Pietro chuckled, as if he was reading Joshua's thoughts. \"What do you think of the house? We just finished it last week. We split our time between the pack and the club. I wanted something that I had built myself. Rafe appeared to understand that and was happy to donate this patch of pack lands to us.\"\n\nIt was a great looking place. Not large but with room for expansion should children appear on the horizon. Joshua knew enough to know that now Pietro had mated to a V\u00e2rcolac he had the potential to become a father. The concept of children was entirely alien to him personally, but the Romanovs and Erikssons appeared to have thrived as parents so there had to be something of worth in it.\n\n\"Looks nice,\" he commented, casting his vampire gaze around the area and stopping when he saw a chimney stack. \"You're not too isolated from other pack members either.\" Security was always something in the forefront of Joshua's mind.\n\nPietro followed his gaze, a wry smile crossing his face. \"That's Liam and Reasa's place. It seems I have my own personal bodyguard in that vampire, or perhaps it's a V\u00e2rcolac mated thing where they move out, and need to be close to each other. I could be wrong about the latter though. Lily seems perfectly happy up at the Praetorian Compound.\"\n\nJoshua's deep blue eyes met his friend's, curiosity shining deep within. \"I guess I need to hear this long story.\" He followed Pietro into the house, pausing to admire the fresh white hallway before joining him in the cosy living room that had a refreshingly light and airy contemporary feel. He moved to one of the pale cream leather sofas, accepting the glass of red wine Pietro handed to him.\n\n\"Well, as you can see I recovered from my near death experience,\" the other male said, sitting across from him and sipping at his own glass of wine. \"I was surprised to return here and discover that my mate was one of Alexei's daughters. I was equally as surprised to learn other facts that I believe Caleb has told you already.\" He raised an enquiring eyebrow, not willing to go on until he had confirmation.\n\n\"Yes, I know about the attack on the V\u00e2rcolac and the punishment meted out. That was the last that I heard on that subject though. I had expected Thereasa to have taken her own life once she realised she was human. I can't begin to imagine the trauma to a vampire's soul to go from being everything to being nothing.\"\n\nPietro nodded, his near death experience and mating with Cassia giving him an even stronger zest for an immortal life. He had always secretly admired Thereasa's will to live even when he had hated her. He hadn't been so sure he would have been that strong had their roles been reversed. \n\n\"It turned out that Reasa was Liam's mate, and the only one here that could save his sanity. He was quietly going insane with his high-level empathy. Elina held it at bay as best she could, but he needed someone with the skills of Reasa, someone who could teach him how to protect himself. She not only taught him how to protect himself, but together they managed to rebuild a dozen shattered vampire minds that Liam had inadvertently damaged when Reasa was stripped of her immortality.\"\n\nJoshua couldn't contain his shock. It had been astounding to learn that the Vampire Queen could strip a vampire's immortality. It was even more astonishing to learn that Liam and Reasa were strong enough to repair destroyed vampire minds. Perhaps there was some hope for Gard and Rayne, and the others in Europe after all. If the V\u00e2rcolac were that strong...hell, he had experienced Dara's strength himself in Europe and Liam sounded like he far exceeded her skills, they actually may stand a chance at defeating whoever was out there. \n\n\"Yes, I know,\" Pietro continued, a smile crossing his face. \"I think we were all as shocked as you are at the time. They did it though, and then we were all left with the sticky problem of two V\u00e2rcolac mating with two people who hated each other. Well, I hated Thereasa. She was learning the hard way that her actions had drastic consequences.\"\n\nPietro sat forward, twirling the glass stem in his hand, the shadow of a frown marring his brow. \"I was so full of hate, Joshua. I have never hated anyone more than I did Reasa. I was scarred, damaged, broken by her actions. I knew that my hate hurt Cassia and Liam. I tried so hard to learn forgiveness, but I just wanted to ram my talons in her now human neck, to bathe in her blood as the life leeched from her eyes. I didn't know then what we know now. We had no idea of the power that was out there.\" His voice trailed off, his gaze riveted to the blood red wine in the glass.\n\n\"Your reaction is understandable,\" Joshua finally said. He could understand Pietro's base urges completely, and the dilemma that placed him in now that he was mated and part of the pack. To be honest, Joshua didn't know if he would have held back the way his friend had.\n\n\"Cassia wouldn't let me give into the self-pity,\" Pietro continued. \"She saw the scars and she loved me despite them. I tried to fight the mating pull, but I knew it was impossible. I still hated Reasa, still waited for her to betray the pack, as I knew she would. And she did...I was elated, vindicated. I knew that I had the proof of her deceit. I followed her into the forest expecting the worst. What I discovered was that she was sacrificing herself to save the pack. Michael, the one who had directly poisoned me had blackmailed her out of the pack's safety. He was here to kill her and she was a fragile human. Still, she went to what she believed was her death. My instincts kicked in, I fought the vampires even as I called for Cassia to come. One of them had bullets laced in the Amort poison. He fired at me, and Reasa threw herself into my arms, taking the poisoned bullet meant for me even as she knew she wasn't immortal anymore.\"\n\nJoshua could envision the scene playing out, surprise etched across his face, surprise and also a touch of admiration for the woman who would sacrifice everything to make things right. \"Sweet Jesus,\" he whispered.\n\n\"I know,\" his friend agreed. \"It was a sobering thought to me too. Reasa was dying in my arms. In that moment, the hatred evaporated, and I found myself begging her to stay alive long enough for the pack doctor to save her life. She was dying and I was alive because of her. It was just wrong. Anyway, things became chaotic after that, the vampire queen got involved, and gave Reasa her immortality back. She healed, and we talked. By then there was the first inkling of something bigger being involved in what was happening, but nothing had really been discovered. I had found it in my heart to forgive Reasa, and in doing so the last of my own anguish melted away. I was finally able to fully appreciate this wonderful new life I have with Cassia and the pack.\"\n\n\"I didn't realise it had become so bad here stateside. I thought everything was still contained in Europe.\"\n\nPietro gave a humourless laugh, throwing the last of his wine back before setting down the glass. \"Yes, so did we, I guess. We are a tremendously arrogant species, my friend. My arrogance led to my capture and being poisoned. We presumed that once we were back here that the danger wouldn't follow us, but it did. I now believe that I was poisoned deliberately by whoever our enemy is. They wanted to see how we would react, what we would do in that circumstance. Michael's mind was not his own. Reasa spoke the truth when she said that their goal had only been to get information about why I was there. Michael's master had other ideas.\"",
        "Joshua nodded, his gaze flashing with outrage. \"Yes, I agree. I think they wanted someone senior to come to Europe. They wanted to watch how you interact, who your power players are, how you would defend yourselves. Everything has been one big fact finding mission to discover where you are vulnerable. I believe taking Gard and Rayne was strategic too. They haven't been killed because that would bring everyone to Europe and whoever is out there isn't ready for that yet.\"\n\nPietro rose and took their glasses back to the drinks cabinet. He refilled them, returning to take up his previous position. \"I agree with you, Joshua. When Freya and Nors found Michael his mind had been totally wiped. Even Liam wouldn't have been able to recover anything from the husk that was left behind. Our enemy is intelligent and resourceful. What we've learned recently shows that. Now I fear for Kothari and Dara being alone in Europe. If they are lost too, we've lost four of our strongest players here.\"\n\nIt was a valid point and one that Joshua had also thought about, and then disregarded after he had seen what Kothari was capable of in Europe. \"Arrogance can be anyone's downfall, Pietro, including our enemy's. I think they believe they have already conquered Europe and now it's time to turn their attention stateside. What they haven't considered though is that Europe and stateside might work together.\"\n\nHe let his point sink in briefly and then continued. \"Dara and Kothari are not alone. They have three of the most powerful vampires from Europe with them who I know for certain are not under anyone's sway. Dante and Mila have been tracking all the anomalies happening there for centuries. Dante was the one who brought the initial stirrings of something being wrong to my attention. I have seen the aftermath of Agony's rage too, my friend. When this is all over, you will all need to sit down and work out how you contain that boy, because he is the most lethal being I have ever come across in my long life. I would rather dance with a feral Demetri than a non-feral version of Agony.\"\n\nHis warning about the young V\u00e2rcolac didn't appear to phase Pietro. \"Kothari will never be a danger to those he calls family or pack. I can't say the same for anyone he considers an enemy, but then, would either of us do any different if those we cared about were endangered?\"\n\nAgain, it was a valid point; however, Joshua was still unsure about just how manageable Kothari/Agony was. He would have to bow to the judgement of his friend and Dara's reassurances. He wasn't afraid to admit to himself that the younger male made him uncomfortable though. There was just something about him that, quite frankly, scared Joshua silly. \n\nHe didn't voice further comments on the subject though. He finished his wine and then excused himself, promising to return later to meet Dara's sister, and check in on how Ava and Pippa were doing. He had a meeting lined up with Caleb, one for which he couldn't be late. His chat with Pietro had been very enlightening. Knowing how insular newly mated couples could be, he wanted to be sure that Pietro's speculations on the situation in Europe had been shared with the Triumvirate or the Ancient Council at least.\n\nIt didn't take him long to reach Caleb's white mansion. It was the first time he'd been there, and he took a moment to admire the stunning home, marvelling at how dissimilar vampire lifestyles were on the two different continents. In Europe they still hid themselves, and kept human contact to the minimum where possible. Here the vampire nation lived freely among the millions of humans roaming around them, luxuriating in their wealth and hedonistic lifestyles. Not that he considered Caleb and Demetri as truly hedonistic since they had found their mates, but prior to that...yes they had lived a flamboyant lifestyle. \n\n\"Joshua, come in.\" Caleb's deep voice echoed in the open doorway, his striking flame-haired mate standing close at his side.\n\n\"Welcome to our home, Joshua.\" Rhianna smiled as she beckoned him forward. \"Come give us news of the children, and anything else we need to know about the situation in Europe.\"\n\nIt was hard not to smile back at the petite redhead, and he accepted her invitation, stepping inside to see Demetri and a dark haired beauty already sitting in the living room. He greeted Demetri with a warm embrace. Their time in Europe saving Pietro's life had been the start of a strong friendship and he was happy to see the volatile vampire once more.\n\n\"It's a pleasure to meet the woman behind the voice,\" he smiled at Mara Bozic. This was his first time meeting her in the flesh, though the moment she spoke he would have known who she was immediately. He could still remember the sound of her talking to Demetri as he bled humans to feed his dying friend. She was exactly as he expected her to be, beautiful and friendly but with a core of steel running deep within. Only a strong woman could tame a vampire such as Demetri Bozic, and Mara was just such a woman, and a member of the Vampire Council.\n\nAs they settled down, he quickly caught them up on everything he had witnessed in Europe. He explained what had happened at the Armand-Hanlon compound though Rhianna had nodded as if it wasn't news. It probably wasn't news to them, Rafe was Rhianna's brother after all, so he probably updated them on most things that were important. Finally, he relayed his interesting conversation with Pietro, watching as thoughtful expressions crossed their faces.\n\n\"I knew we shouldn't have kept Pietro out of the loop,\" Demetri muttered with an irritated growl. \"He's far too good to be languishing in a pack doing nothing.\"\n\nMara chuckled, rolling her eyes in mock exasperation. \"The poor male is newly mated, Demetri. I can assure you he is far from doing nothing at the moment.\"\n\nThe dark-haired vampire grinned, giving his mate a saucy wink. \"I wasn't referring to that kind of nothing,\" he quipped back, causing a wry smile from everyone. \"You know what I meant. He has far too sharp a mind for us not to take advantage of it.\"\n\n\"Demetri's right,\" Rhianna agreed, her expression turning thoughtful. \"Pietro did spend a quarter of a century in Europe getting a feel of the place. His observations could be crucial, and from what he's come up today, something we should probably consider. I'm heading over to the pack tomorrow. I will find some time to meet with him and see if he has any other insights. I think he should be present at any further strategy sessions we have. Perhaps a fresh pair of eyes can see something else we might be missing.\" \n\nHer mate nodded his head in agreement, his expression just as thoughtful. \"If whoever is orchestrating this has been watching how we react to any attacks against one of our own, so far he has will have seen a single reaction to each event. Demetri went to retrieve Pietro. Dara and Kothari have gone to retrieve Gard and Rayne. I think it's time we stop being on the back foot, and we start acting proactively. It's time to do something unexpected.\"\n\nHis golden brown gaze swung to Demetri, a glint of humour in their depths. \"How do you fancy another trip to Europe?\"\n\n\"Tell me where you need me,\" his best friend answered, a feral glint in his dark emerald gaze.\n\n\"Your wife needs you here, husband,\" Mara countered, frowning at him before turning to give Caleb a reproving glance.\n\nDemetri grinned, tilting her head up to lightly brush his lips against hers in a soothing kiss. \"You are going to have your hands full with Council business for weeks, my love. You know the shit is hitting the fan there, and I only irritate the other Council members when I threaten to rip their heads off if they don't listen to you.\"\n\nShe considered it for a moment and then she returned his smile. It was hard to argue with the truth. \"Fine, you're right. You do get in the way of Council business, and I can't be troubleshooting your outrageous behaviour all the time. I would just prefer that you don't go there alone. I'm presuming Caleb is suggesting you shadow Dara and Kothi, rather than meeting up with them.\"\n\nCaleb knew it wouldn't be too much of a problem to persuade Mara of the necessity. Since she'd immersed herself in the world of the Vampire Council, politics and strategy had quickly shone as one of her stronger points. \n\n\"Freya should go with you,\" he announced. \"She has intimate knowledge of Europe and how the European covens work. If anyone is tracking the V\u00e2rcolac then it shouldn't be that difficult for you to spot them. Both of you excel at tracking.\"\n\nIt was a good plan watching the watchers. It could possibly flush out their main adversary, and it was something Joshua wanted to be a part of too.\n\n\"I can go with them,\" he volunteered. \"Dante and I made arrangements to keep in touch before they headed to Romania. We have an old established tracking system known only to the two of us. I could track him even without a scent or sighting.\"\n\n\"Dayton is not going to be happy,\" Rhianna sighed. \"You know he hates having Freya out his sight. Perhaps it wouldn't be bad to have a stateside wolf's perspective on what the shifter situation is like in Europe? It is something we're going to have to address once all this subterfuge is dealt with.\"\n\nCaleb snorted, amusement flaring in his eyes. \"Should I leave it up to you to suggest to Rafe? He isn't going to like one of his pack over there without his protection.\"\n\n\"He already has four of his pack over there. Freya and Dayton will make it six. They are older and more experienced than the children, and they will have Demetri and Joshua with them too. I am sure it will be less of an issue than you anticipate it will be.\"\n\nPut like that, it made sense. Joshua lingered a little longer, and then excused himself to return to the Armand-Hanlon pack. He wanted to make sure Ava and Pippa were okay, and he had promised Pietro he would stay with him and Cassia overnight.\n\n\"We'll all meet at the pack tomorrow,\" Caleb said as he walked him out. The others stayed inside so they had a little time together. \"How extreme is Agony?\" Joshua had sent Caleb an earlier text saying he would need some private time.\n\n\"He single-handedly took out an entire coven, Caleb. If Dara hadn't caught up with him when she did there is no telling how much more damage he would have done.\"\n\nThe Ancient's expression was troubled, a sight Joshua was unaccustomed to. \"What about the girl Dara mentioned?\"\n\nHe shrugged, not really having a good answer. \"If she turns out to be his mate then maybe she can pull him back. To be truthful, I don't honestly know, Caleb. I just thought it was something I should bring to your attention. You know the boy better than I do. All I'm saying is be aware of the possible danger. If Agony truly goes rogue...well I don't know if there is a power on this planet that will ever be able to stop him.\"\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "werewolves",
        "vampires",
        "hybrids",
        "paranormal romance",
        "love",
        "mating",
        "urban fantasy",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/storm-of-shadows-ch-10"
}