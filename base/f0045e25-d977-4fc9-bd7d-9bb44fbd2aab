{
    "title": "Trust Ch. 03",
    "pages": [
        "From that moment onward Iona sought out this Russ called Long Sword. The images he had spun created a need so great that she could physically feel the man she wanted most.\n\nWith Iona's exhaustive imagination, she could feel Kieren's resting on top of her. The press of his awe-inspiring body against the softness of hers felt real\u2014skin on skin, moist from exertion. Behind her closed eyes, she could actually feel his hands squeeze her breasts with appreciation, his tongue flick one dark tip before the lips she yearned to kiss drew from it with need. His pull was strong and the feel of his teeth proved his hunger. \n\nHer Kieren progressed upward after laying kisses between her bosom's warmth. Iona welcomed the pain of him marking her neck. Strong hands moved across her back, feeling more than just the surface of her skin but who she truly was. His cock, solid and promising, glided across the head of her clit-lubricated with her own quintessence. The push at her entrance made her gasp. The smoothness of his thrust made her exhale.\n\nEvery quiet moment became dedicated to these thoughts. As her fantasies claimed her body and mind, the ripeness of her breasts made her hardened nipples visible behind the face of anything she wore. In secret, Iona slid her hand between her thighs. She dipped her fingers past her pussy's lips and then brought those same fingers to her tongue to taste this sweetness her thoughts encouraged. She yearned for her lover's touch, to see him lick his lips in expectation. She wanted to see his response when she fed herself to him, to see his reaction to her delectable flavor.\n\nIona felt the heat of her own wanton desires. Her thoughts of him held power. She could smell the perfume of their lovemaking.\n\nIn Kieren's ear she whispered, \"Please never leave me.\"\n\nIn hers he whispered, \"I never left you Iona.\"\n\nThe smoothness of his voice caused shivers as his words echoed in her mind. Just as her imagination mounted, reality set in.\n\nKieren's other words replaced the imagined endearments.\n\n\"What would possess you to believe that I would bother myself with the thought of fully using something that has no use? How could something empty and broken hold anything for me? Of what satisfaction could you possibly give? When I need comfort or warmth I go where it exists.\"\n\nSadness would then grip Iona. The sudden shift of thought caused dizziness and the start of tears.\n\nFor all these feelings, Iona thanked Russ and cursed him. Her mind sought him to declare both.\n\nRuss proved to be quite promiscuous and less committed to Iona's safety. As a show of great appreciation for his favors, women delivered honey coated breads, pies, and homemade sweets of various kinds to the Longhouse. The impression was that their innocent offerings were for all the men that dined. The so called gifts were never distributed equally. They found their way to Long Sword's table. If so inclined, he shared. \n\nBesides finding him to be an enormous whore, Iona learned that he was a fierce warrior noted for his stealth. He was said to have a blade so swift that it was only detected after its purpose was completed. His aim with the bow was revered. Taught by Kieren from a young age, Long Sword was often compared to Kieren but fell short. This was the cause of many arguments and challenges between the two men; Kieren always triumphed. Russ' love and respect for his brother ran deep. The two were like one, yet always at battle. No one dared intercede; they were quick to join forces. To be the source of their focus could prove painful.\n\nIona often found Russ in the process of indulging his appetites. His preferences varied, some of the young women were quite fleshly and others could be easily blown by the wind. From their sounds, the women were more than grateful for his attentions.\n\nRuss was never shocked or embarrassed by Iona's intrusions. While licking the smoothness of whoever's neck, he would wink as if Iona and he were in cohorts.\n\nIona would lick her tongue at him.\n\nRuss warned her once. With a sly smile, he told her that he might put that tongue to use.\n\n\"You would fancy something so nauseating,\" Iona returned with a disgusted look on her face.\n\nThis brought nothing but laughter. \"You would find the touch of my tongue more talented than the touch of your hand.\"\n\n\"So you would like to believe,\" she threw back at him.\n\n\"Remember little flower,\" he said, his face somewhat sober, \"you are the one seeking me out, not the other way around.\"\n\n\"You can...\"\n\n\"I know,\" Russ interceded with a grin, \"kiss the curve of your brown ass.\"\n\nIona was suddenly paralyzed when he moved closer and lowered his head to whisper in her ear. She could feel the heat that was him.\n\n\"Unlike the others, your request for kisses only brings me nearer,\" he told her. \"I would enjoy what you offer. Keep in mind, a kiss would not be enough for a man like me. I bite.\"\n\nIona attempted to slap him, which only brought more laughter. She stamped off in a huff.\n\nRuss watched her walk away. He knew the truth of his words. The exploration of his thoughts caused his groin to tighten.\n\n\"Kieren needs to return for what is his,\" he whispered to himself.\n\nLong Sword became Iona's new source of entertainment. She was certain of her hate for him, at least until she saw him next. Their exchanges resulted in an attempted slap and a frustrated Iona. She never failed to curse him while walking away, which of course he laughed at.\n\nRuss had always found Iona entertaining. Her sultry lips could be sweet one second and salty the next. Her wit was quick. Her craftiness was endless. No one made him laugh as quickly as she did.\n\nHe saw the fire in her eyes, even as she sat freezing in the cage they found her in. The memory of her past situation still moved him. He would never find it amusing. His brother's interest in the girl was no mystery to him. Russ had immediately felt her pull as well. The day she stood gazing at the sea truly weakened him. He had seen no fire in her eyes as she passed. Despair emanated from her like the smoke of a dying flame. Russ had sent Gunner to distract her. It was not the orders of his brother he feared. He had feared her loss.\n\n********************\n\nOne day the hunt for Long Sword held little interest for Iona. Like her he seemed distracted and Iona barely noticed when he disappeared. An incurable restlessness overwhelmed her. Something was there in her mind, but just beyond her reach. Her skin became overly sensitive. Every shift in the air could be felt by the slight hairs on her arms. But, there was no wind in the leaves of trees. In spite of the sun's heat, she would find herself shivering. There were moments when she felt the brush of water against her legs. Familiar things became strange. Grooves and smooth surfaces became more detailed. The need to touch and be touched plagued her. She feared that her mood was evident. Those around her seemed to sense it. Their interactions with her were odd. There was an unknown influence drifting. She was both elated by it and in fear of it.\n\nEvery minute passed slowly. At the end of the day she felt exhausted, but the rise of the moon brought no relief. Iona's dreams were disturbing; she tossed and turned. In her dreams, waves of water crashed against her as Kieren watched. She tried to tell him that she could not swim. Her words were lost. The touch of his hands soothed her. He tasted of salt. Her delights became nightmares as the sea filled her lungs.\n\nHis whisper was in her ear. It was soft and loving, but its intent broke her heart.\n\n\"Never forget what I say to you today, for I shall not.\"\n\nWrapped in sorrow, she rose in the earliest part of the morning. The need to watch the sun eventually rise settled upon her. Its birth always gave her hope.\n\nBefore entering the main hall, familiar sounds brought her to a halt. There was moaning of the most sensual kind. A woman purred with words of adoration. The man responded in harsh tones, low enough to be hushed by the slight crackling of the hearth. What came next was unmistakable. The man groaned with satisfaction as he obviously gave the woman what she begged for. She was immediately silenced.\n\nThe sound of his satisfaction made Iona long to be the cause. The erotic humming of the woman only increased that desire. This man had to be truly gifted. The woman was apparently gifted as well. She stopped to ask him if he missed what she was doing. A sound rose from him in confirmation to compliment her efforts. Iona wished to see the technique of this woman. Russ rarely responded in such a way. Not once did he tell the woman to quiet down. This was unique. If Iona wished to win Kieren's attentions, she would need to have such techniques.\n\nIona dropped to her knees so that her shadow would not reveal her presence, and crawled forward. She could see the bottom half of Russ's bare, muscular legs spread. Positioned between his legs was a woman on her knees. She had to be taking him in her mouth. She would grasp the cheeks of his firm ass and pull him into her.\n\nIona crawled out further and hid herself under one of the tables.\n\nTheir movements stopped. When the woman protested, Russ hushed her. He was obviously surveying the large hall.\n\nIona held her breath. Little passed Russ when it came to her trickery. Too, he had a certain sense about things. As if by magic he could appear and disappear without sound; but, no one could claim having done the same to him.\n\nIona was relieved when they continued. She was on the verge of passing out.\n\nDamned Russ, she thought.\n\nFrom her new position, Iona could see the other woman taking him deep within the cavern of her mouth. She could not completely devour him and her lips were stretched wide around him. Pulling back she then dipped her head to lick and suck his full sacks. The flat of her tongue also licked up the underside of his cock with care. It appeared to have the most rewarding of flavors. As she did that, one hand encircled and messaged his hardness.\n\nIona caught sight of him fully erect. For the first time she realized that Russ was quite capable of splitting a woman in two. In her shock, she mistakenly made a sound.\n\nThe man pulled the woman off of his cock by the hair and quieted her protest. Once again he combed the room for movement.\n\nIona stayed perfectly still and held her breath once more.\n\nSuddenly he growled, pulling so firmly on her hair that she remained stationary. He began to fuck her mouth at his own pace. Iona thought him to be too rough. This was so unlike Russ. The woman gagged before encouraging him with the pull of her hands. He showed no generosity or consideration as he pursued his satisfaction. \n\nIona loved the way a man's ass flexed as he drove into a woman. She could clearly see him from the side and that dent his flexing created. As the speed of his motion increased, Iona grew wet. His harshness was as exciting as the act itself.\n\nShe had promised to not touch herself anymore. Besides finally admitting it to be an improper habit, it only seemed to increase the hunger of her nature\u2014thanks to Russ. Watching him fuck the mouth of the woman only made Iona's body desperate for fulfillment. Iona's clit was swollen and pulsating. Her breasts grew firm. They pleaded for touch. Iona's imagination became alive and combined with what her eyes saw. His rhythm became her rhythm. She wished it was Kieren fucking her with such vigor. She imagined the feel of him against her tongue, him hitting the back of her throat and slipping further. Even the pain of him roughly pulling her hair made her want him more.\n\nIona's need for Kieren was so strong that he could have her any way he pleased. If his desire was to fuck her as he did before, she would bend over and spread her ass to receive him. Her surrender would be complete. Even his abuse would be welcomed because she was already his. He was what she lived for. Each plunge deep inside of her would only bring him closer. Having him inside of her, for him to flood her with his spirit was her craving. This was the only way she could reclaim her own. He was the only one that could place her heart back in its place.\n\nIona had to cover her mouth as she crested in unison with him. It was so important that they not hear her sounds intermingle with their own.\n\nHe asked the girl something in a gruff undertone. The woman obviously could not speak. He pulled out of her mouth and his cum, thick and continuous, spouted out on her face and into her hair. Iona almost missed it; she was so caught up in her own pleasure. The woman held her head back, opened her mouth and stuck out her tongue to receive the last surge. He did not deny her request.\n\nThe woman then laughed in satisfaction and Iona immediately recognized the sound. It was Astrid. She had laughed enough at Iona to be easily identified. Astrid did not bother to wipe her reward away before she stood. Iona gained great satisfaction in the fact that Russ had aggressively fucked Astrid's mouth, especially since she had spoken so ugly to Iona.\n\nAstrid appeared to be begging again. He pushed her away. She teased him by working him with her hand. There was no need; he was still somewhat full as if he had not emptied himself. He could easily fuck her if he chose.\n\nIona was amazed that was possible. But then again, it was Russ\u2014 big whore.\n\nIona repositioned herself and rose up on her knees to get a better look. Astrid raised one leg resting it on a table. The woman was bold and desperate. She was trying to force him into her.\n\nHe was not interested, or so Iona thought. Iona stood in time to catch him pulling Astrid's leg up further with his arm, lifting her entire body with the other, and dropping her on top of a table. While she was on her back, he grabbed her ankles dragged her toward him until her ass hung slightly off the edge. He pushed her knees toward her chin. Her feet rested against his chest as he pressed forward, lifting her ass up to meet his cock. When he jammed himself into her, Astrid grunted. He ignored her sounds. He rammed himself inside her and began aggressively fucking her\n\nIona enjoyed the fact that he seemed not to care for Astrid's comfort as he propelled deeper. She could hear the sounds he made with every push.\n\nAstrid's voice rose as disgusting words left her lips. Even with those words she still could summon the hunger of any man, Iona thought.\n\nRuss fucking Astrid, of all people, angered Iona too. He could have any woman in the village and surrounding settlements. Why would he slum with the pigs?\n\nShaking her head, Iona then positioned herself so that she could easily be seen. This necessity allowed her the upper hand in teasing both Astrid and Russ later. She would clear her throat once he was finished with his assault.\n\nAs usual, Russ had his hair knotted at the top of his head. He was tall but lifted Astrid into him as if her weight was nothing.\n\n\"Is this what you plead for?\" he growled, lifting her higher and increasing the arch in her back. There was an unusual bass to his voice.\n\nAstrid kept saying yes until her final outburst...\n\n\"Kieren.\"\n\nIona quickly put her hand to her mouth and suddenly felt light headed. She did not feel faint, she felt like emptying her stomach.\n\nKieren slammed himself into his lover once more before pulling out and spilling across her middle. He stood up fully and stretched his back in all his magnificence. Iona had never seen his hair that way. Maybe that was why she did not recognize him at first. Now it became more than apparent. Russ could be compared to Kieren, but in no way could he replace Kieren in form.\n\nHow could she be so stupid? Astrid was who he had chosen upon his return. Astrid was where he came for warmth. Who was the pig now?\n\nIona gagged into her hands before bending over and loosing herself. A sensitive stomach had never been an issue with her. She hated that, of all times, her body chose now to reveal a weakness. She was shamed by the immediate look of recognition Kieren gave right before she bent over.\n\n\"Iona,\" Kieren began to plead.\n\n\"Step away,\" Brenna demanded. \"Do not lay one finger on her.\"\n\nIona felt the comfort of Brenna's hand rubbing her back. She did not want to stand straight and be seen this way by either Astrid or Kieren.\n\nBrenna shielded Iona with her body, leading the girl out of view.\n\nKieren, still naked, came to the opening leading to the kitchen.\n\nIona did not have to see him; she could feel his pity as Brenna led her away.\n\n\"Iona,\" he called out.\n\n\"Kieren,\" Brenna yelled back at him, \"you are an ass. You are an ass with no sensitivity. Was there not a better way to let her know of your return? This house is large but not enough for your uncontrolled maleness.\"\n\n\"The bitch came to my bed,\" Kieren declared in his defense.\n\nHe then realized how weak he must sound.\n\nBrenna replied. \"Then that is where you should have fucked her.\"\n\nBrenna had only emphasized what Kieren thought of himself. Again he had lost his honor in the eyes of Iona. He had added insult to insult, therefore guilt on top of guilt. His return was only due to Brenna's encouragement in regards to the girl. Brenna had sent a message that Iona missed him and her feelings for him was not weakened by whatever misdeed he had committed but grew. Kieren had come to make his appeal and, if possible, gain Iona's favor.\n\nHis opportunity was now lost.\n\nKieren had been angered beyond compare with Iona the night he degraded her. Pride had taken him beyond reason. Even in his fury he knew himself to be wrong. He could not look into the faces of those most concerned. He could give them no explanation. He left them, his ship and his home. He did not leave without issuing orders with consequences clearly understood.\n\nHe realized the completeness of the words he whispered so harshly into Iona's ear. If they had been spoken to a man, that man would guard his life with fear. Iona was no man. She was a woman of distinct sensitivity, sensitivities that required more than he could offer. He was ill equipped for the emotions she drew from him. Kieren had believed himself to be her greatest threat.\n\nHowever as he drifted further away from her, Kieren's anger dissipated. By the time the desire for her presence consumed him, he was beyond the point of return. Once again he related to Iona's state. When trapped, she reacted as any soul would. She clawed her way free. He had reasoned that Iona wanted freedom; she just had no idea what she wanted to be free of. \n\nAnger then intensified towards himself. Kieren felt heartless and it showed. His hunger for the fight escalated. He gambled with his life to dull pain. His aggression frightened his men. Upon realization that the legends were truths, Kieren's enemies died with their eyes still open.\n\nFor Kieren his feats offered no diversion.\n\nWhen Kieren received Brenna's message, he was drenched in the blood of others.\n\nHis War Ship was pulled alongside of another. He had been the first to leap onto the other vessel and immediately claim lives. With Kieren taking the lead in the attack, there was little effort needed from his men.\n\nHis men now gathered the cargo of the defeated and transferred it to a close by kn\u00f6rr, one of Kieren's ships primarily made to carry cargo. Kieren had summoned it earlier, so sure that the hunt would be brief. The chill of the North winds whipped around him and made his blond hair wild. He looked every bit the fearsome Viking. Men rested on their knees before him, begging for life. It had become a common scene and carried little interest.\n\nKieren had welcomed Brenna's message.\n\nNow, the matter was exasperated by his lack of forethought.\n\nAstrid had immediately sought him out upon word of his arrival. Kieren could not be found. In the darkness of night she slipped into his Long House and with familiarity found his private area. The knowledge that he would be naked and the idea of experiencing him made her pride irrelevant. Her will had always been strong and because of the convenience, he had tasted from her often. Although constantly reminded that there was no future to be found with him, Astrid felt that he would eventually realize that they were two of a kind. Kieren was undeniably the alpha male and she the alpha female. No one was capable of handling him as she did.",
        "Before she fully entered his area, Kieren's knife was at her neck. With realization, he cursed her. Normally her pressing would be accepted, even amusing. At times she was quite pleasing. Months of wrestling the sea had its toll. Despite his respected qualities, Kieren was just a man.\n\nHowever, his current needs were specific; they were for Iona. He had no desire to hurt Astrid, but she only responded to force. When her arms wrapped around his neck and she went for the feel of his lips, he had no choice but to fit her wrists with the force of his grip and turn his face away. Her protests fell on deaf ears. He grew tired of this common dance between them. With her hands clasped before her and her back to him, Kieren led her to the door.\n\nAstrid was aware of Kieren's weaknesses. Some men lost themselves between the softness of generous bosoms. Others appreciated the feel of a curvaceous bottom. Although having an appreciation for both, she knew that Kieren's needs had more of an animalistic nature. She turned quickly and pressed herself against him. She knew just how to raise his ire, how to blind him with his cravings and the anger that merged with it. \n\nThat was why she had dropped to her knees before him earlier. What man could resist the feel of a woman's mouth? It gave much pleasure and required little commitment. From that position, Astrid had shared her best attribute. She wanted to give him more.\n\nKieren's interest in her was always primal, if there was interest at all. He treated her with no sweetness. She needed none. Kieren was not crude to women-generally. With Astrid, her preference was crudeness. It was the only thing she had respect for. Iona witnessing his perverseness left Kieren with great shame.\n\nAs Kieren watched Brenna lead Iona away, Astrid laughed and gathered her wrap.\n\n\"Why do you bother with the child-like sensitivities of that slave girl? This woman's warmth is always available and knows well how to please you. I know this because I feel how your body reacts. I am the only one that defeats your self-inflicted constrictions. She is a child knowing nothing about the needs of a warrior.\"\n\n\"She is neither a slave nor a child. She is under my care. I'll have you watch your damned tongue Astrid.\"\n\nAstrid pressed her clothed body against his bare one and held his cock in her hand. \"I am under your care as well.\"\n\n\"You are under the care of many I assume,\" he said while looking down at her face. \"There is no need for mine. And, there is none given. This between us has little meaning.\"\n\nKieren's words were sometimes harsh but Astrid gave them no weight. For the first time however, Astrid found him flaccid in her hands. It was something she did not think possible, not just because of her expertise but his virility.\n\n\"You are a man that requires a full woman, not an imitation,\" Astrid purred while attempting to solve this rare challenge.\n\n\"If your words are true,\" he spoke in such a way that drove his point to finalization, \"she is my full woman. You are the imitation.\" \n\n\"Your heartlessness offends me Gulbrandson Kieren,\" she snarled at him. \"You forget yourself and your breeding. You seem to have overlooked your obligations. Your concerns are missed placed. The house of your father and the line of your family rest on your shoulders. The weight of matters does not include the taint of a Bl\u00e5menn whore. I would hate to see your father give you nothing but the sight of his back as he denies your existence.\"\n\nWeariness that accompanies long travel came over Kieren. He had no desire to go in this direction with her. She greatly misunderstood the flow of things.\n\n\"Woman you choose the wrong threats. We shall end this conversation. See your way to the house of your father. Take your fine breeding with you.\"\n\n\"Are you going to let me walk alone in the darkness Kieren?\"\n\n\"Do not pretend that this is your first time and I will not. Let us part while still on speaking terms.\"\n\nKieren found his way to his private area and fell naked across his large bed. It had been a long time since he had a full night's sleep. He had Iona's anger; he also had her presence among what was his. She was safe from harm. For now that was the extent of his capabilities. \n\nAfter cleaning Iona off, Brenna had a hard time calming the poor child. The girl would not take the warmed drink that would calm her stomach or one that would calm her mind.\n\n\"Why does he not want me?\" Iona pleaded.\n\n\"Sometimes what a man needs and what a man thinks battles within him,\" Brenna explained. \"Men away at sea for long lengths grow weak. They do not think.\"\n\n\"Kieren has no weaknesses and his mind is untainted.\"\n\n\"All men have weaknesses. Kieren is best at keeping his to himself.\"\n\nIona rose out of her seat.\n\n\"I'm going to him,\" she said through tears. \"I'll show him my warmth and gratify him. I should have been wise like her. I should have come to him in the night. I should have been the one to please him.\"\n\n\"No.\" Brenna's grip on Iona's arm was solid. \"Never reward a man for failing you.\"\n\n\"Can't you see,\" Iona cried out, \"it is myself that I reward.\"\n\n\"Child,\" Brenna said, hugging her close, \"you are the reward he must earn.\"\n\n\"I am nothing.\" Iona slumped into the arms of the woman she loved like a mother.\n\n\"If that was true, you would not be here. You would not be within the safety of all that is his.\"\n\n\"I am just a slave in his household.\"\n\n\"If you felt that to be true, you would have freed yourself long ago.\"\n\n\"I have nowhere to go.\"\n\n\"That is because you are where you belong. This is your home.\"\n\n**************\n\nOnce again, no one had to tell Iona when Kieren left. She simply felt his absence. No one bothered her. Brenna sat with her for a while, but dared not speak. Shielded by her bedding, Iona faced the wall. The realization that she did not matter to him reopened old wounds. New blood flowed from them. She was sure that she would be emptied soon.\n\nKieren had delivered her to safety. She imagined more. She had always known that she did not qualify for him. It was time to settle with what she had been given. It was more than she had before\u2014maybe more than she deserved. No happiness came without sacrifice. This she knew for sure. The part that belonged to Kieren must be sacrificed. She needed to cut it away. But there was no energy left to perform what was needed.\n\nIona sunk into a deep depression.\n\nFor several days Brenna brought Iona food and drink. Each time, she passed Russ. He held vigil outside of the girl's door.\n\n\"You must do something,\" he demanded in a hushed voice.\n\n\"What?\"\n\nIn his concern for Iona, Brenna found Russ to be more irritating than the yowling of new born.\n\n\"She's been in there far too long. She doesn't eat. She doesn't sleep. I hear little movement.\"\n\n\"Stop hiding in pathways like an apparition and go to her yourself if you have answers,\" Brenna demanded. \"I have none. You are the mighty Long Sword. You are the one Kieren has chosen to care for her. Then care for her. Reach out your sword and cure her from this sadness. You men cause it. It would be nice if you men cleaned up your own messes. The reality is sorry. You are incapable of taking care of yourselves on dry land. Why should you be expected to care for someone else? Do you not have someone to attack or raid? See yourself to it then. This is not one of your ships. This is my domain. You are of little help here.\"\n\nBrenna shoved him out of her way and returned to her kitchen. The girl must grieve in her own way.\n\nRuss felt like something needed to be done. Iona's time for mourning was over.\n\nWhen the freezing water hit Iona's face, she immediately sat up in the bed with a squeal. She was wiping at her eyes when another pail of ice cold water washed over whatever the first drenching missed.\n\n\"Time to stop your kvetching and get your ass out of bed,\" Russ barked. \"There are things to be done and you are not earning your keep.\"\n\n\"I hate you,\" Iona screamed.\n\n\"Now that's the delightful little brat I've come to love.\"\n\n\"I do,\" Iona said through gritted teeth.\n\n\"Of course you do,\" Russ teased. \"All women do. That's why I consider it my utmost duty to take them on one by one, sometimes by twos. That way I can effectively place myself in their good graces. It is a hard task to undertake, but I am fully equipped to handle it.\"\n\n\"Don't you touch me.\"\n\n\"Believe me little flower when I tell you that your petals have an odor. The thought of reveling in them holds little interest to me. Get your ass up and bathe or I will do it for you. Put on some clothing or I will do that for you as well. I'd love to wash that infamous bottom of yours.\"\n\n\"As a matter of fact,\" he said as an afterthought, \"I might just get in the bath with you.\"\n\nRuss began removing some of his things. The curses that came out of Iona's mouth made him laugh.\n\n\"I'm offended,\" he told her, raising his foot to slip off a boot. \"I have women begging to wash me all the time. I offer you the pleasure of my hands upon your wet body and you turn your nose in the air. You lack sense woman. I will help you gain a richer understanding of what clean is.\"\n\n\"Get out of my room,\" Iona shouted.\n\n\"Is that a no?\" He stopped undressing.\n\n\"Yes.\"\n\n\"So it is a yes.\" Russ continued to remove his clothes.\n\nBy the time Brenna arrived a drenched Iona was held up in a corner with wet covers pulled to her. A bare chested Russ was undoing the front lace of his britches. \n\n\"Russ,\" Brenna exclaimed in shock.\n\n\"I am attempting to clean up a man's mess the only way I know how. As of yet, she does not appreciate my efforts; but, I shall give it the best of tries. I'm feeling quite lucky today.\"\n\nBrenna pushed Russ out of the doorway and threw his things at him.\n\n\"Do you not grow tired of your boyhood games?\"\n\n\"Have you no confidence in me Mistress Brenna?\" Russ cried out in mock distress. \"Feel free to watch if you doubt my competency. I have much to prove and lots to share.\" \n\n\"Brenna,\" Iona said with relief, \"he is mad.\"\n\nBrenna looked at the girl and placed her hands on her thick hips.\n\n\"So does that mean I'll be washing you little lady or do you think you can handle it yourself? Most likely your experience with me will not be as pleasing as one with Long Sword. My guarantee is that you will be spotless. And, I will not be getting in that tub with you.\"\n\n\"I can refresh you in ways you have never imagined,\" Russ shouted from the passageway. \"I can bring profound peace to the mind as well.\"\n\n\"Shut up,\" both women shouted back.\n\n***************\n\nIt was easy to tell when Russ took over the duty of guarding Iona. To be undetected was definitely not his goal, to Iona or anyone else. At first Iona was irritated. She soon found him incapable of taking offense. He simply ignored her complaints. He followed her around as she returned to her duties. He insisted on holding her things in the square as Iona fulfilled the requests of Brenna. Sometimes he just walked and talked beside her. Iona tried to ignore him. It had little effect. In within all of this, he managed to flirt with every woman that came near him. Iona had the funniest feeling that some purposefully followed him.\n\n\"Don't you have someone to comfort in their time of need?\"\n\nRuss looked around and dramatically bent his head in recognition to one of the women.\n\n\"Why do you think they follow?\" He bit into the fruit he had continuously tossed in the air. \"They have already been comforted. Does my voyeur not recognize them?\"\n\nIona rolled her eyes.\n\n\"Perhaps I should comfort you. Then our roles would be reversed. I would lead and you would follow,\" Russ teased.\n\nIona sped up in an attempt to leave him behind.\n\n\"Your legs are too short for that little flower.\"\n\nAfter a time, Iona enjoyed his teasing. He was quite the prankster. He played games with the children when they came to her for their words. Sometimes with him she felt like the child. He had a way about him that immediately made him familiar. Her mental walls just disappeared. She had almost forgotten how to truly laugh. With Russ it returned easily.\n\nWith his attentions, Astrid's followers increased. Russ purposefully agitated them at every opportunity. His hand at the small of Iona's back would cause whispers. He often slipped his arm around her shoulders and whispered one of his stories in her ear. If something was particularly good in the market he would feed it to her. When he caught her fingering finery, Russ purchased it for her. \n\nIt was he that broke the line of separation in the Longhouse. Brenna did not like her to eat in the kitchen and encouraged her to eat with the many that gathered. The men dominated the area, but a few women and children sprinkled the loud crowd. All ignored Iona. She chose a corner table. It became her permanent table. \n\n\"Watch that old bastard come,\" Russ scoffed, sitting down beside her with a pie in one hand and his plate in another. \"No matter what the situation, Gunner cannot be outdone.\"\n\nJust as predicted Gunner came and sat on the other side of her. There was no love lost between Gunner and Iona. She felt small and uncomfortable between the two men. They ate heartedly from their plates until there was no more. Then they began picking at Iona's plate randomly-as if she was not present. She slapped Gunner's hand and the room quieted.\n\nGunner paused before breaking into a rare laugh.\n\n\"I see you are still bold,\" he said.\n\nGunner then reached to dig into Russ' pie. Russ moved it out of his reach.\n\n\"The maker of that pie is most likely like Iona,\" Gunner said in seriousness. \"She cannot cook.\"\n\n\"You shall never know the sweetness that a woman offers old man, in or out of the kitchen.\" Russ's voice was more serious than usual.\n\nIona became fearful. The men grew louder in their accusations and attracted the attention of many. If there was to be a brawl, Iona was in the wrong spot.\n\n\"Virgins may find your sword long,\" Gunner returned, \"but I find it failing to reach a suitable length and usually limp when drawn. This would explain your uselessness in battle.\"\n\n\"That is because your eye sight has left you,\" Russ threw back at him. \"You would be more effective in battle if your foul face was not constantly straining to see the perfection of mine.\n\n\"My eyes are as sharp as my sword and I carry the face of a real man. Unfortunately that is something a boy finds unfamiliar.\n\n\"As your age sharpens nothing but your tongue, my young eyes see the wholeness of your mind slipping away.\"\n\n\"There may be truth to those words. Be careful that I do not forget myself and slit your throat. My aim will always be perfect due to natural abilities, unlike your practiced failures.\"\n\nAnd so it went between the two after eating their meals with Iona captured in the middle. It did not end until one grew heated and stormed away. Gunner was often the winner; his demeanor rarely changed. His expression was generally uninterested. Insults easily rolled off his tongue.\n\nSometimes they made Iona laugh with their challenges and sometimes they made her yearn for her loneliness.\n\n***********************\n\nBefore the start of the day meal, Russ convinced Iona to free herself from her duties and escape with him. He knew that her duties were created to keep her busy.\n\n\"Why would I do that?\" she teased. \"I've been devising a plan to escape you.\"\n\nIona was bringing out filled jugs to sit on the tables.\n\n\"I bet you have,\" he laughed. \"Only this time you have met your match. You lack the skill to escape me.\"\n\n\"I am a woman of many skills you have not yet experienced.\"\n\n\"I doubt that,\" he said removing a container from her hands. \"Here is your opportunity to prove yourself, if you can.\"\n\nIona could never resist his challenges.\n\nShe laughed as she trailed behind him through the trees and towards the river. She knew that he moved at a slower pace to accommodate her. But by the time she reached their apparent destination, Iona had to catch her breath.\n\nShe stretched out on her back appreciating the sun and woolen blanket beneath her. Iona was certain that Russ had stolen the blanket from someone's bed.\n\nRuss laid on his side and watched the sun light up Iona's face. He watched the rise and fall of her chest. He had long since noticed that she was well endowed, but just enough to cause a man to wonder how they would feel in his hands. He knew that her nipples were considerable than most when aroused\u2014which happened often. He imagined them firm against his tongue. Russ was a man that truly appreciated the power of nicely formed breasts. He was often a victim to this power. He also wondered what crossed her mind when hers hardened and begged for attention. The cause was not always him.\n\nShe was something of a mystery to Russ. She could look so innocent at times and yet too knowing at others. Often times, he longed to kiss her full lips. They were made to be kissed. He deterred his thoughts now by touching the long twisted strands of her hair\n\n\"I would like for you to do this to my hair,\" he said while twisting one around his finger.\n\n\"It does not take well in your kind of hair,\" she replied without opening her eyes.\n\n\"My kind of hair,\" he declared fingering several. \"Hair is hair.\"\n\n\"You have crossed seas and experienced many people of different natures. Truly you do not believe that? I have only experienced a few and realize that not to be true.\"\n\n\"I have,\" he agreed, \"even of your shade. My explorations have taught me to not determine anything based on heredity, to do so is not wise. Besides, your hair still proves to be unique.\"\n\n\"I am unique,\" she smiled.\n\n\"That you are.\" Russ traced her lips with his index finger.\n\nIona quickly opened her eyes to find him smiling devilishly. She moved her head slowly to the side to escape his touch.\n\n\"I still wish for you to put your twists in my hair.\"\n\n\"Your hair is too thin.\" She closed her eyes once more.\n\n\"My hair is long, thick and much desired,\" he informed her playfully.\n\n\"And who has told you such?\" she laughed \"Could it possibly be some voluptuous woman with your head between her thighs?\"\n\n\"Possibly,\" he laughed as well, \"she would have the best view and opportunity to touch.\"\n\n\"You are so bad Long Sword,\" Iona teased.\n\n\"I am a man of many skills that you have not experienced yet.\"\n\n\"Do your own words fail you when your blood leaves your brain and fills your private parts\" Iona replied. \"Is that not the uncontrollable habit of men like you?\"\n\nThe seriousness that suddenly crept in his voice caused Iona to look into his eyes.\n\n\"Men like me? I can assure you that I have no uncontrollable desires.\"\n\n\"Hmm...,\" Iona smiled. Finally she had discovered his weak spot. \"I've often seen the loss of control in your eyes as your libido is set free.\"\n\n\"Oh you have no idea what my eyes hold. No woman would be able to stand, let alone walk if my libido was to run free.\"\n\nIona sensed that she may lose this battle of innuendos. He was much better at it than she.\n\nRuss then smiled.\n\n\"Besides beautiful flower of mine, who has the bigger libido here? I do not withhold mine. I satisfy it. Isn't that much better than the forced containment of passion for passions sake? Does it not build up inside of you? Does it not threaten your judgement? I've seen the look in your eyes. Your thoughts are easily read, as is your body.\"\n\nIona's countenance fell. She was first embarrassed and then angry.\n\nRuss stood and began to remove his clothes without any regard for her.\n\nWas it an inbred fault that constantly caused both brothers to shed clothing with no consideration, Iona thought? His cock was at half-mast, perhaps readying itself for what Iona assumed his only form of entertainment. She was determined not to be his toy.\n\nRuss made no motion toward her.\n\nStanding where the earth met the water, Russ turned to look at the girl.",
        "\"Your turn,\" he said, walking backwards until the lowest section of his body was covered.\n\n\"I cannot be seduced by the clearness of those blue eyes,\" Iona finally said, trying to convince herself. \"I'm afraid that I know the whore in you and your tricks. Unlike yours, my eyes do not lie with false virtue.\"\n\nRuss roared with laughter.\n\n\"I shall make no mention of your worldliness and you shall make no mention of mine. Let's enjoy the day, the water and the company.\"\n\n\"I believe I will just sit here and witness your enjoyment Sir.\"\n\n\"What is there to fear Mistress Iona? Disrobe and join me in the water. It is cool and refreshing.\"\n\n\"I am cool and refreshed right where I sit.\"\n\n\"You fear me or you fear the water, which one is it?\n\n\"I fear nothing, which includes you,\" Iona hissed.\n\n\"Prove it.\"\n\n\"Your motives are quite transparent. I shall not be moved by your challenges.\" Iona laughed this time.\n\n\"You have nothing I have not seen before. You can attest to that.\" Russ began to float on his back. \"My appetites do not include you.\"\n\nIona watched. She was unsure but thought she could see his cock rising out of the water.\n\n\"Hmm...\" Russ continued to look at the sky. \"Could it possibly be that it is yourself that you do not trust?\"\n\n\"You have never been a threat to me.\" Iona snorted in disgust. \n\n\"It must be so. You watch me with interest and yet feign...what was that...yes, virtue.\"\n\n\"I feign nothing. If so, who are you to judge me?\n\n\"I do not judge,\" Russ returned while still looking at the sky. \"Your words and actions reveal much.\"\n\n\"Words and especially my actions prove nothing but self-respect.\"\n\n\"Then let us debate no more. You must remove your clothing and enjoy the water\u2014with your self-respect in hand.\"\n\n\"I see no need to remove my clothing to enjoy the water.\" Iona rose to her feet.\n\nRuss laughed.\n\n\"You cannot swim in that attire. You would sink to the bottom.\"\n\nIona considered his words carefully. Then she began to disrobe.\n\nThe water was cooler than what she had thought and her descent was slow as she adjusted. When she looked up, Russ was upright and staring at her with those blue eyes. His face revealed no humor. As he moved closer, Iona thought of going back to her clothes and ending this madness. The water was only to her knees. She could move swiftly, grabbing her clothes before he reached her\u2014but she did not.\n\n\"You are truly beautiful,\" Russ said in earnest. \"I see now what has perplexed my brother so. I would find you irresistible too.\"\n\nIona covered her breasts and turned her back to him. She was beyond nervousness, she was scared.\n\nRuss stood behind her for just a moment before the meeting of their bodies. He was warm against her skin. She was soft and stirring against his.\n\n\"You have nothing to fear.\" His voice was low and assuring. \"Neither I or the waters will harm you.\"\n\n\"I fear nothing.\"\n\nHe placed his hands on the curve of her shoulders and fought the desire to cup her breasts and pull her closer.\n\n\"Maybe that is why you shiver beneath my touch.\"\n\n\"The water is cold; that is the cause.\"\n\n\"I can teach you to swim,\" he whispered in her hair, just above her ear.\n\n\"How is it that you know I cannot swim?\"\n\n\"Must I repeat myself?\" he continued to whisper. \"I am a man of many talents.\"\n\nRuss loved the smell of her dark hair. He was the one to choose the perfumed oil that Kieren had gifted her. He was the one that made sure that more was placed in her room.\n\n\"Does that include reading minds?\"\n\n\"Possibly\"\n\nIona felt something stirring inside of her.\n\n\"Turn to me.\"\n\nFor just a moment, she felt a pull in his voice that only Kieren triggered. It left her unable to deny him.\n\nIona turned slowly.\n\nRuss took her hands. He pulled her gently forward. As the water began to rise, he could see the distress in her brown eyes.\n\n\"I have you,\" he assured.\n\nWhen the water covered the tops of her breasts, he cupped one side of her face. The other arm wrapped around her body.\n\n\"Wrap your legs around me,\" he commanded as he raised her and pressed her against his body.\n\nIona obeyed while also wrapping her arms around him tightly. She rested her head at the crook of his neck\n\nRuss moved further into the water with both arms wrapped securely around her.\n\n\"Never trust the water, but show it love as well,\" he warned.\n\n\"You are like water,\" Iona spoke without thinking; then she immediately regretted her words.\n\nShe had felt his cock hard against her before wrapping her legs around him. If she dared loosen her hold, she could possibly feel it between her legs or possibly feel it inside of her.\n\nIona realized that the water was too deep for her to stand safely now. She also realized that she was in a compromising position.\n\n\"Maybe you are right,\" pulling his head back a little.\n\nIona pulled back a little as well. They looked into each other's eyes.\n\n\"Can you trust me?\" Russ whispered against her lips.\n\n\"I think not.\"\n\nIona placed her lips on his. The motion was natural.\n\nWith that, Russ cupped the back of her head with his hand and pressed her lips into his as his tongue discovered her sweetness.\n\nHis next movements were smooth. Iona hardly noticed, with her tongue hungrily discovering his sweetness. Russ laid her gently on the blanket. Her legs were still splayed open as he slid his hand down her body and between her legs. He dipped his finger into her wetness and smoothed what he found there across her firm nub.\n\nIona moaned.\n\nWhen he knew that he had hit that spot, Russ began to manipulate her with expertise. He could feel her body's reaction. When Iona began to move herself into his hand, Russ knew that he had her. Her moans became desperate.\n\nHe squeezed her breasts. It was he that moaned with pleasure this time; it was all he could manage as their fullness fulfilled every fantasy. He could not stop at this point if he wanted to, and he did not.\n\nHe sucked on her hard and tight nipple, flicking them with the tip of his tongue as he did. He nipped at them with his teeth\u2014careful not to show any favoritism between the two. Their darkness both amazed him and made him hunger for more. Not just the contrast of her skin against his, but the contrast between her skin and the dark circular areolas fascinated him. Her nipples were even darker. He drew from them. She was a delectable desert he had been denying himself and now surrendered to its call. Her body immediately replied to every lick, every pull, and every nip.\n\nThen he moved down her body with his tongue. That same tongue parted her pussy's lips as his fingers parted her outer lips. The pinkness of her pussy was mind-altering. He dug deep inside her and then drew the flat of his tongue up her wet path to the head of her sensitive nub. Her taste was intoxicating. He moaned once more as he indulged himself several times. The last time came with its own reward. He sucked that sensitive nub between his lips and flicked it. He continued by starting at the base and dragging his lips upward as his tongue dance.\n\nThe direct stimulation was more than she could bear. Iona's moans were accompanied with a shortness of breath. Never before had she felt so sexually overwhelmed. This feeling was new and altered any envisaged thoughts of what it was to be truly pleased. Her entire body felt unable to be contained by her skin. Even after the first detonation, Russ continued his attack. She pulled at his hair but he was relentless. Her clit was too sensitive at this point. The finally was a climax that shattered her body into a million iridescent pieces. It hit her harder than the first. She pulled tightly on his hair. Arching her back, she cried out.\n\n\"Oh...Kieren.\"\n\nRuss froze.\n\nIona did not notice; she was so lost in what she felt. Her descent from the heavens gradually receded.\n\nThey never touched the Skyr (a buttery cheese), griddled bread and shelled walnuts in the basket Russ had commandeered.\n\nIona's legs felt weak and unstable as they walked back to the village in silence. Long Sword claimed that he had duties he must attend to.\n\nTo be continued..."
    ],
    "authorname": "avrgblkgrl",
    "tags": [
        "viking",
        "slave",
        "warrior",
        "white male",
        "black female",
        "oral sex",
        "straight sex",
        "wm/bf",
        "romance",
        "anal"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/trust-ch-03-6"
}