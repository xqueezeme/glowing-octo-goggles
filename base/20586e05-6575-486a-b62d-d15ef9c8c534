{
    "title": "Only You Ch. 03",
    "pages": [
        "\"Alright kids, just give me one more big smile...there we go!\" Tegan smiled down at the laughing kids who were too busy shoveling way too pricey cake into their cute mouths to pay her any attention. \n\nIt was a slightly overcast day in Central Park and Tegan was on a job. She was supposed to be walking around, snapping pictures for the Westing family; Upper East Side royalty. Tegan had gone to the same private school as Cabot Westing. Cabot had married young, the wife of an ambitious senator wannabe. Tegan was surprised when Cabot contacted her to photograph her daughter Aspen's birthday party. \n\nIt was a hellish assignment. Central Park was overrun with sugar-induced two year olds. It was all Tegan could do to not to pull her hair out. She was tired of chasing after kids, tired of framing the light, and worst of all, she couldn't get Derek Ryan out of her mind. \n\nJust thinking about his hands, his mouth, his breath warm on her neck made her ache for some alone time. She was ready to leave to prepare for their date, but Cabot was nowhere to be found. She needed to let her know the pictures would be done in a few days.\n\nHer phone rang and she hurriedly fished it out her jeans pocket. \"Hey you,\" she said, trying to mask the tremor of excitement in her voice. \n\nA deep chuckle greeted her. \"Hey gorgeous,\" Derek replied. \"What are you up to?\"\n\n\"Just finishing up with this job.\"\n\n\"Mmm. And what are you doing afterwards?\"\n\n\"I dunno. Maybe knock over a bank. Pick up a drug habit, the usual.\"\n\nHe laughed loudly. \"You're a wild one, James. You'll never guess where I am.\"\n\n\"Um, I have no idea.\"\n\n\"Guess.\"\n\n\"Empire State Building?\"\n\n\"Fuck no. I wouldn't be caught dead at that tourist trap.\"\n\nShe laughed. \"Well, then where are you?\"\n\n\"Mm, right behind you.\"\n\nTegan whipped around and gasped. He was indeed right behind her, cell up to his ear, the same half smile on his lips. \"What the...how did you know I was here?\" she asked. \n\n\"Drea told me. That doesn't look like 'happy to see me' face,\" he said with a mock pout. \n\nHe looked so sexy doing that, she thought. He did look hot today. Jeans ripped in an artsy fashion paired with a navy blue t-shirt with his company's logo on the front, the blue of the shirt matching his eyes. \n\n\"I am totally happy to see you,\" she replied. She snapped her phone shut and hugged him. When he tried to cup her ass, she squealed. \"Derek! There are kids around!\"\n\nHe laughed loudly. \"Aww, come on Tegan J. You need to be bad once in a while.\"\n\nShe didn't bother to mention that letting a guy stroke her to a star-blazing orgasm in the bathroom of a swanky club was as bad as she got. \n\n\"Be more bad. Check.\" She kissed him lightly on the lips. When she tried to pull away, he grabbed her tighter, his tongue sliding into her mouth before she could protest. \n\n\"Mm, Derek.\" She gently shoved him away. \"Down boy.\" \n\nThe sound of someone clearing her throat made them both turn. \n\n\"Tegan James. I sincerely hope I'm not interrupting anything.\" Cabot Westing was standing in front of the pair, a slightly amused expression on her classical face. \n\n\"Cabot! I am so sorry.\" Tegan felt her cheeks flush. Damn you Derek and your sexy self. \n\n\"Mmm-hmm. Don't mind us. I'm just having a child's party.\"\n\n\"I apologize. This is Derek Ryan. He's a friend of mine.\"\n\nCabot extended her hand and Derek could smell the breeding, right down to her casual designer wear complete with pearls and Chanel No. 5. \"Charmed I'm sure.\" Her eyebrow rose in surprise. \"Ryan? As in Dex Ryan?\"\n\nDerek smiled tightly. \"One in the same. He's my brother.\"\n\nCabot seemed impressed. \"Well. Tegan, nice one. Anyway, thanks so much for helping me out today.\"\n\nTegan smiled. \"No problem Cabot. I'll be getting the pictures to you no later than Tuesday. See you later.\" Grabbing Derek's hand, they walked out towards the street. \n\n\"Are you okay?\" she asked. \"You seem kind of antsy.\"\n\n\"I'm good.\" He turned to her, all sense of irritation gone. \"How the hell do you know someone named Cabot?\"\n\nTegan grinned. \"I went to school with her.\"\n\n\"Oh my god!\" he gasped. \"Don't tell me you're a private school girl!\"\n\nShe nodded. \"Since I was about six years old.\"\n\nThe grin on his face was positively lascivious. \"Do you still have the outfit?\"\n\n\"So, you really have a dirty mind.\"\n\n\"Baby, it's one of my best qualities. So, where are we going today?\"\n\n\"Um.\" Tegan was finding it hard to think straight. He was rubbing his thumb idly across the top of her hand. It was sending tiny sparks all over her body. \"We can go hang out at my house for a little bit. Then I have something planned for us.\"\n\n\"Ohh,\" he said, pulling her close to him. \"Something dirty?\"\n\nIt was Tegan's turn to smile roguishly. \"You never know.\"\n\n********\n\nThey rode the subway to Tegan's Village apartment, hands entwined the entire time. They traded stories about their lives. Tegan told Derek about growing up on the Upper East Side with her mother and stepfather. Her real father had exited the scene when she was five years old. Her mother had married Harlan James, an investment banker from old money. \n\nIt was a big scandal for Harlan's family. They had vehemently opposed to their handsome white son marrying a black woman beneath his class level. And she had a child, gasp! But Harlan loved Catherine and treated Tegan like his own. \n\nShe had played the role of an Upper East princess, graduating from her snooty prep school with honors. She was accepted to Columbia University and went for three years before promptly dropping out. \n\nHer parents were understandably furious, but Tegan knew that college just wasn't for her. She was bored, more interested in exploring the world around her than studying to be a doctor. \n\nDerek was surprised she was telling her so much about her life. He had taken her to be very stand-offish, preferring to listen rather than talk. It was refreshing to see her look so relaxed. He had watched her some time before calling her, observing the way she moved while taking pictures. Like her DJing, it was natural and graceful. She was simply beautiful. \n\n\"Okay, this is it\" she said as they stood in front of a warehouse type building. \n\n\"This is pretty cool\" he remarked. \n\n\"Yeah, it used to be some type of meat-packing warehouse. Some company bought it over and turned it into high-priced apartments. Welcome to New York.\"\n\nThey rode the elevator up with Tegan secretly praying she left her house in some sort of order. She wasn't used to having people at her house. She always visited her parents in their penthouse apartment and was always at Drea and Teddy's. \n\nShe realized with a shock that it would be the first time a guy would set foot in her space. The very thought was exciting and mortifying at the same time. \n\n\"So, are we just going to stand outside and observe the door?\"\n\n\"Huh?\" Tegan looked at Derek, who was staring at her curiously. \n\n\"I mean, it's a nice door but I'd kind of like to see what's going on inside.\"\n\nLaughing she unlocked the door and pulled him inside. \"Welcome to my humble abode,\" she said with a dramatic arm sweep of the room. \n\nDerek stepped inside and uttered a low whistle. \"Whoa, nice digs.\" It was a large, open space; high walls that led up to exposed steel beams for the ceiling. A large panel of windows on one wall gave an excellent view to the city below. There was a tiny kitchen in one corner and a walled off portion that Derek supposed was her bedroom. \"This is such a New York apartment.\"\n\nTegan laughed. \"Yeah. Excuse the clutter. I'm an organized mess kind of girl.\"\n\nHe took in the stacks of movies, books, and music scattered about the apartment. It seemed to be in a haphazard manner, yet neatly organized. He chuckled. Even in mess, Tegan James seemed like a walking contradiction. \"I can definitely see that,\" he remarked. \"So what are doing at your house?\"\n\nTegan glanced at her watch. \"Well, it's 6:30 now. We've got about three hours before the real fun starts. I'm going to change out of these clothes real quick. You can watch TV while I do that. Then we can head out to catch a bite.\"\n\n\"Ms. James what exactly do you have up your sleeve?\"\n\nShe smiled. \"Like I said, be a good boy and you'll find out.\" She walked down the short hallway to her bedroom. \n\nDerek flipped on the television, but turned his attention to her collection of stuff. There were tons of photographs on the walls. He noticed that even the walls were art. Some had copper and metal sheet plates hammered on them, while others were painted a deep red and splattered with different colors. \n\nThere were several pictures of Tegan, Drea, and Teddy. He stopped at the picture with Tegan and someone he guessed to be her mother and stepfather. Her mother was definitely beautiful. \n\nShe was tall and thin, her high cheekbones and the elegant curve of her neck giving her a regal look. They shared the same light brown eyes and glossy dark hair, although her mother's was done up in a tidy chignon while Tegan's was its usual shaggy, layered state.\n\nHer stepfather was a nice-looking guy with wavy brown hair and kind hazel eyes. They looked like a happy family. \n\nDerek was drawn out of the moment by a soft stream of curses. He walked over to her room. \"Babe, are you okay?\"\n\n\"I'm...fine. Just finishing up.\"\n\nHe walked over to the kitchen area. Opening her stocked refrigerator he grabbed bottled water and took a sip.\n\n\"Derek?\" she called out.\n\n\"In the kitchen, babe.\" He heard the clipped tones of her shoes as she walked towards the kitchen. What he saw next nearly made the water shoot from his mouth. \n\nShe was dressed in a short pleated black miniskirt, the bottom of which barely reached mid-thigh which gave him a glorious view of her sepia toned skin. She was wearing a red short sleeved button up shirt, the top two buttons undone to reveal some sexy cleavage. \n\nBut what really set him off were the boots. Those fucking boots, his body screamed. Long, black stiletto boots that zipped up to her kneecap, a pair of black tube socks with two white stripes peeking out from the top.\n\n\"Dear Lord,\" he managed to gasp out. \"Sweet dear Lord.\"\n\nShe smiled. Her lips were glossy and she wore smoky black eyeliner and shadow. \"I take it you like the look?\"\n\nHe was gripping the water bottle so tightly he feared it might snap in two. His body was practically begging him to take her on the dining room table, wanting nothing more than to drive home between her lovely dark thighs, the soft leather of the boots wrapped around his waist...\n\nDerek cleared his throat. \"We should leave. Right now.\"\n\n********\n\nTegan was beaming. Derek had almost spent himself in his pants when he saw her. She knew the night was going to be fantastic after that. She had grabbed a black summer cardigan and her camera bag before he practically frog-marched her out of her own place. \n\nThey had grabbed a quick bite to eat at Sal's Deli, which was a couple of blocks from Tegan's apartment. Tegan loved the restaurant for their good eats and good service. The way Derek kept staring at her made her slightly uncomfortable but so hot at the same time. \n\nAfter dinner, they walked around some more. She showed him the small park she liked to take pictures in and a couple of her favorite stores. One of the last places they visited was her favorite haunt, Ducky's Records. She had discovered the little gem a few years back and now she was one of Ducky's most loyal customers. \n\nShe introduced Derek to Ducky Tavares, the namesake. He was a retired member of Iron Will, a semi-famous punk band from the old-school days. Derek liked him instantly. Ducky was a punk rock brat through and through, from the straight-edge tattoos and snobbish music tastes. He was a decent guy and thoroughly loved Tegan, especially when she argued with him about music.\n\nDerek played the part of dutiful tourist. He was charmed by all the things that she held dear in her little existence but he was growing a little impatient, wanting to get on with the rest of the night, especially with the festivities he planned for later\u2014mainly involving her on all fours while he fucked her from behind. Watching her walk, her lovely ass swaying in that short skirt, especially when the back rose up when she flounced...god, she was driving him crazy and she didn't even realize. Damn, how he loved that. \n\nIt faintly occurred to him that he had gotten up this morning and hadn't even bothered to dial Lottie. In fact, she called him twice during his tour of the Village with Tegan but luckily his phone was on vibrate. Part of him thought he should at least give Tegan a heads-up about the state of his dating life, but the majority, the part he clearly was listening to was shouting a big 'Hell No'. \n\nAs they left Ducky's promising the old man they'll return tomorrow, she grabbed his hand once more and pulled him across the street. \n\n\"Tegan, as much fun as it's been to watch you walk in that miniskirt...I have to ask\u2014where the hell are we going tonight?\"\n\nShe stopped in front of a black building. \"I have a slight confession,\" she said. \"I have a mini-job to do tonight. A friend of mine is having a performance at this club and she wanted me to snap some shots. Is that okay? I know it's not a real date, but...\"\n\nHe silenced her ramblings with a short kiss. \"It's okay, luv. Really. Just being around you is enough for me. Besides, I can think of a way for you to make it up to me.\" He winked dramatically. \n\nTegan gulped nervously. So he did want to sleep with her! This was perfect. She pointed up to the sign outside the building. \"Okay, this is it.\" \n\nDerek looked up at the sign. It was a silhouette of a woman arching her back. Next to that in tasteful neon lighting were the words \"La Salon Rouge\".\n\nHe shot her a quizzical look. \"The Red Parlor? What exactly is this place?\"\n\nA coy smile played on her full lips. \"You'll see,\" she said as she pulled him inside. \n\nThe door opened up to a dark hallway, illuminated only by softly light wall sconces. The hallway gave way to a large room filled round tables decorated in red and black lace and silk. There was a large stage with a deep red velvet curtain. All along the walls were black wall sconces. \n\nDerek felt he was inside some twisted Gothic novel brought to life by Tim Burton. There were already people filing into the area. He noticed most of the tables were occupied. The guests ranged from men in expensive business suits to guys and girls with piercings and tattoos. \n\nTegan walked over to a table near the front but off to the side in a darkened corner, which had a tiny white card with 'reserve' etched on the front. \"This is us,\" she said as she removed her cardigan. \n\nThey sat down and as a raven haired girl approached . She was extremely pale and wore blood red lipstick and dark eyeshadow. Her hair was in retro curls and she wore a red and black lace corset and garter with matching low cut panties. She was really pretty, reminding Derek of that burlesque girl Dita Von Teese. \n\n\"Hey Tegan,\" she drawled. Her voice was husky and tinged with an accent Derek couldn't recognize. \n\n\"Hey Syn. I'm still helping you out tonight, right?\"\n\nThe woman nodded. \"Absolutely. I'm thinking about using the snapshots for my portfolio.\" The woman's violet eyes gazed at Derek and her red lips parted to reveal white teeth. \"And who is this one? He's dreamy.\"\n\nTegan laughed as Syn sat boldly on Derek's lap. She stroked his chest and batted her long lashes at him. \"Syn, meet my friend Derek.\"\n\nSyn winked at Derek who smiled cheekily at her. \"Hello Derek. I take it you're the recipient for the special prize tonight?\"\n\n\"I have no idea what you're talking about gorgeous, but I'm definitely game.\"\n\nSyn chuckled. \"Oh, I like him T. He's a shameless flirt.\"\n\n\"You have no idea, Syn.\"\n\nShe bounced off Derek's lap. \"Well, as much as I'd like to stick around I've got to prepare for the show. See you in a bit,\" she said, giving Derek a sexy wink over her pale shoulder as she walked away. \n\nDerek was flabbergasted. \"Show?\" he asked, turning to Tegan who was setting up her camera. \"What kind of show?\"\n\nTegan stared at him. \"La Salon Rouge is a burlesque house, Derek.\"\n\nHis signature half smile turned into a full-on grin. \"Holy shit, seriously?\"\n\n\"Sure. Can't you tell by the atmosphere?\"\n\n\"And here I thought it was just a very sexy reading parlor.\" He chuckled. \"You have a very odd perception of first date etiquette.\"\n\nTegan shrugged. \"I was never one for normal.\"\n\n\"I'm slowly beginning to understand that. So, I take it Syn is a dancer?\"\n\n\"You would be correct.\"\n\n\"And is Syn her real name?\"\n\n\"As far as I know. Her full name is Synister La Rue.\"\n\nHe laughed loudly, drawing looks from the other patrons. \"I officially love your friends. You're a weird ass girl, you know that?\"\n\nShe smiled. \"Yeah, I know. Now if you'll excuse me I'm going to get ready to take some shots. Have fun ogling the talent.\"\n\nAs she rose to get up, he caught her hand, drawing her closer to him. His hand traveled up her skirt to cup the one thing he'd been fantasizing about since the night before. \"The only talent I want to see is what you've got under here,\" he said. His voice was barely a whisper, but Tegan felt his words echoing through her body as his hand stroked her ass. \n\nHer knees dipped when he gave her a playful, but sharp slap that made her pussy throb with need. \"You need to behave yourself, sir.\" She tugged his curls, lifting his head \"We don't allow that kind of touching here at Le Salon Rouge.\"\n\n\"Oh yeah?\" he challenged. His hands dipped lower, pushing aside her panties and reaching in to give her pussy a light but pressured squeeze. \"And who the hell's going to stop me from taking what I want?\" His blue eyes blazed with a desire so fierce it sent shivers down her spine. \n\nTegan was well aware of the fact they were in front of people, and even though the corner where they were was kind of hidden, there was still a chance people could see. \n\n\"Derek...\" she trailed off.\n\n\"Hmm?\" he replied lazily as he continued to squeeze her pussy lightly.\n\nHer hips began to grind involuntarily against his hand. \"You...n-need to stop.\" Her hand was still clasped tight in his curls.\n\nThe smile on his face was positively devilish as he pulled away. \"Whatever you say, Tegan J.\" His tone was deceptively bright but she could see the lust in his eyes yearning to break free.\n\nTegan let out a ragged breath. \"You are so bad.\" She smoothed down her skirt and tried to collect herself. \n\nAs she turned to leave, he gave her bum a sharp slap. \"Don't I know it,\" he whispered. \n\nTegan grabbed her camera and moved away from the table as quick as possible. \n\nDerek smiled to himself. He was definitely going to have a nice time tonight.\n\n********\n\nHe was still beaming as they walked back to Tegan's apartment. \n\n\"That was seriously one of the hottest things ever!\" \n\n\"I'm glad you liked it,\" she said. \n\n\"Are you kidding? What man wouldn't like a bunch of half naked gorgeous women prancing around on stage to gothic rock?\"\n\nTegan laughed. \"It's kind of something you have to get used to. I used to be so nervous around the girls. They're just so beautiful and sexy; they can make a normal girl feel a little inadequate.\" She didn't know why she was telling him this. Dammit, now he's going to think I'm some insecure basket case. \n\nAs they got to Tegan's building, Derek stopped her. Smiling, he took her in his arms and kissed her gently. \"Babe, you're just as lovely as those girls.\" He kissed her once more. \"In fact, you're even better. Know why?\"\n\nTegan shook her head. He loved the na\u00efve way her whiskey-colored eyes stared up at him. \n\n\"Because you don't know how sexy you really are. That, and you can dance for me anytime you want.\" The lopsided grin was back.",
        "She laughed. \"Hmm, maybe I'll take that into consideration. Now let's go up so I can take advantage of you.\"\n\n********\n\nTegan sat on the couch, nervously sipping the beer she just opened for herself. She was hoping the alcohol would give her a huge nerve boost. I can't believe I'm going to have sex tonight, she thought nervously.\n\n\"Penny for your thoughts?\" Derek said. \n\nShe smiled. \"Um, just thinking about some things.\"\n\n\"Like dancing for me?\" his hand rested on his thigh. \"Because that would be so hot.\"\n\nShe shoved him lightly. \"Can I ask you something?\"\n\n\"Ask away.\"\n\n\"Why me? I mean, of all the girls in the club that night...why did you choose me?\"\n\nShe downed a huge gulp of beer, anxious for his reply.\n\nHe was thoughtful for a moment. \"Well aside from the fact you seemed like the easiest one...you had a kickass sense of humor. Plus, you played a song for me. That definitely counts for something.\"\n\nTegan shot him a quizzical look. \"I suppose that's kind of a compliment.\"\n\n\"Why me?\" he countered. \n\n\"Your ass,\" she said unashamedly. \n\nDerek let out a generous burst of laughter. \"Wait, seriously?\"\n\nHer wry smile let him know the answer to his question. \"Why, you naughty minx!\"\n\n\"What? You've got a really nice ass. Plus I love your hair.\" She ran a gentle hand through his silken ringlet-like curls.\n\n\"I should feel offended. You only like me for my manly but sexy attributes.\"\n\n\"Well, you did say you thought I was easy.\"\n\nHe shot her a dramatic look. \"I said I should feel offended. Actually it's kind of hot you find me hot.\"\n\nTegan rolled her eyes. \"You are so corny.\"\n\n\"One of my finer qualities.\"\n\nTegan tucked one leg underneath her, an act that made her skirt rise slightly. If she had been paying attention to Derek's face, she would have seen the lusty flash in his eyes as he caught a glimpse of her inner thighs. He could barely suppress the groan that threatened to betray his cool outer persona. \n\nThe smallest things were driving him fucking crazy, especially when she kept reaching up to touch his hair. Each tug of his raven curls or when her fingertips touched his scalp, it made his whole body sizzle and his cock twitch. He had to adjust himself often to mask his growing arousal.\n\n\"Derek? Derek, are you alright?\"\n\nHe snapped to attention, his blue eyes trying not to focus on the buttons of her shirt. She was leaning forward, the top two buttons undone showed off her bountiful breasts while a third button was nearing its breaking point. \n\n\"Wha...?\"\n\n\"Eyes up here buddy.\" Tegan lifted his chin, forcing his eyes to hers. \n\nDerek tried a mega-watt smile. \"Why do I feel like I'm about to be spanked?\" His eyes grew hopeful. \"Is there going to be spanking involved?\"\n\nTegan laughed. \"You are something else.\" She brought his face close to hers, her lips resting softly on his. \n\nDerek groaned and slid his tongue gently into her mouth. Cupping her face in his hands, he deepened the kiss, surprise at his sudden need to further explore her mouth. She was too far away. He brought her closer, sitting her on his lap with her legs dangling off the side of the couch. Tegan was feeling a tad uncomfortable, and he could sense it.\n\n\"What's wrong, baby\" he said as his lips moved to her neck, sucking the soft and scented skin. \n\n\"Am I...I'm not going to crush you am I? You're like eight pounds.\"\n\nHe laughed and the sudden warm blast of air on her neck made her shiver. \"I'm a big boy Tegan. You won't break me.\"\n\nShe grinned. \"Wanna bet?\" She ground her ass softly into his crotch. Derek shut his eyes and felt his head tip back. Tegan moved her hips harder this time. His hands palmed her ass, giving each cheek a slap. \n\n\"Bad girl,\" he moaned. \"Now you have to do something to make up for teasing me.\"\n\nTegan grinned. \"Like what?\"\n\nHis navy eyes sparkled. \"Dance for me, baby. I want to see you dance.\"\n\n\"You first,\" she countered. \n\nDerek grinned. \"Is that a challenge?\"\n\nTegan nodded. \"You bet your hot little ass it is.\"\n\nHe gently lifted her from his lap and rose to his feet. \"You got yourself a competition, baby.\"\n\n\"And I get to pick the music.\"\n\n\"Only fair. You are the DJ after all.\"\n\nTegan walked over to a stack of vinyl. She sifted through the albums, looking for the perfect song. She grinned broadly when she found it.\n\n\"Aren't you going to let me see what I'm dancing to?\" he asked. \n\n\"Nope,\" she replied. \"You'll just have to wait and see.\"\n\nShe put the album on the turntable. She dropped the needle and returned back to the couch, anticipation running through her veins like lustful adrenaline. \n\n\"I've always wanted to dance to this,\" she remarked. \n\nHe was standing there with a bit of hesitance. His hands were shoved deep into his pockets and he shuffled from one foot to the next. \n\nAs the song started up, he looked at her, his eyebrow raised in an almost appreciative fashion. \n\n\"You've always wanted to dance to this?\" he remarked. \n\nTegan shrugged nonchalantly. \"Rob Zombie is hot.\" She pointed at him. \"Now I believe you owe me a dance, Ryan. Time to pay up.\"\n\nDerek gave a 'what the hell' gesture and began to move his hips somewhat awkwardly. \n\nTegan fought a giggle. He looked so clueless, but it was so cute. Plus, Rob Zombie's Pussy Liquor was such a badass song to dance to. She felt so raunchy, yet sexy every time she heard it.\n\n\"Whoo, take it off baby!\" she hooted. \n\nDerek shot her a smoldering look as he brought his blue t-shirt over his head and flung it right at her. \n\nShe was surprised. He had looked so skinny, but he was actually pretty built. He had the beginnings of abs. His low slung jeans made his deliciously hot hip lines show. There was a set of blue stars on either side of his hips that made her pussy pulse hotly. Fuck, tattoos? Could this boy get any hotter?\n\nDerek noticed her eyes go hazy as she stared at him. I'm going to give her one hell of a show, he thought. Licking his lips, he unbuckled his belt and ripped it out of his pants.\n\nTegan whooped appreciatively. \"Ow, ow!\" With her index finger, she made a downward circular motion. \"Turn around, sexy. Let me see that fine ass of yours!\"\n\nHe grinned as he played with the button of his pants. \"God, you sound like those horny old ladies at male dance revues.\"\n\n\"Hey now, hush it up. Talkers don't get tips. Now shake it for Mama!\"\n\nTegan was shocked at herself. She was getting way too into this; but it was nice to let loose. And she was really getting turned on, watching him sway and move for her.\n\nDerek unfastened his pants. Turning around, he slid his pants down slightly. Tegan let out a yelp of protest. \"All the way, sailor!\" Her heart was racing as she took in more of him. There was another tattoo, a biohazard symbol between his shoulder blades. \n\nHe dropped his pants quickly and she got a lovely view of his underwear clad behind. He was wearing red boxer briefs and when he turned around to face her, she could see the beginnings of an erection. From the preview, Tegan could clearly tell that the main show was bound to be a blockbuster. \n\nWhen her eyes finally made it to his, there was a mirror look of lust in them. She looked down at herself. She was gripping the arm of the chair tightly, her legs opened and he could definitely see her underwear. She was thankful they were black otherwise he would have noticed they were soaked thoroughly.\n\nThe song was still playing in the background as he pulled her to her feet. \"Your turn,\" he said huskily. He flopped on the couch, his legs splayed.\n\nTegan began to swing her hips, her eyes fighting not to focus on his growing erection. She was nervous. She was the only person who had seen her naked in...well, she didn't want to admit that.\n\nClosing her eyes, she allowed the sensual griminess of the song to guide her limbs. Arching her back, her hands traveled up her body, stroking her sides, running up her arms, and finally cupping her breasts,\n\nHer legs moved farther apart, as her hips swayed from side to side moving with the beat. She shook out her hair and her brown fingers started to undo the buttons to her shirt, letting it fall to the floor. \n\nTegan pinched her nipples through the satin of her black bra. Her pussy was positively crying out for release. \n\nHer eyes were still shut as she slid her skirt over her hips and down to the ground. She was left standing there in her underwear. As her hand traveled to her panties, she heard him speak.\n\n\"Tegan,\" he said tightly. \"Open your eyes, baby.\"\n\nShe looked at him. The room was quiet. She realized the song had been off for some time. \n\nHis eyes had that primal look from before. His boxer briefs were tented, and she could see his hand inside, moving slowly against his cock. \n\nHer lips suddenly felt dry, and her tongue reached out to lick them. Derek's eyes followed her tongue and he tugged his cock harder. \n\n\"Come here,\" he commanded. \n\nShe slowly walked over to him. Instinctively, she got on her knees in front of him. She reached for the waistband of his underwear and slid them off. \n\nA small gasp fell from her lips. She hadn't really seen a cock in real life. Donnie didn't count because it was too dark for her to really anything.\n\nHe was thick and about as long as her hand. It was pink with a purplish top that was oozing pre cum. There was a small patch of hair at the top of his cock; other than that, he was completely shaven. \n\nTegan stared up at him; her dark amber eyes were the perfect balance of innocence and pure impishness. \"Derek,\" she whispered. \"I'm not really an expert on this.\" She bit nervously on her bottom lip, the flash of silver from her lip ring peeking out.\n\nHe smiled warmly at her. \"Don't worry, baby. I'll steer you around the curves.\" His body was on fire. He needed to feel her near him. \"Just reach out and touch him,\" he said. \"He won't bite.\"\n\nAs her hand reached out, he cleared his throat. \"Speaking of\" he added. \"Under no circumstances are teeth ever okay.\"\n\nTegan laughed. \"I'll try and keep that in mind.\" Her fingers trailed lightly, barely touching the smooth skin. When she gripped him gently, he uttered a low moan. She nearly snatched her hand back. \n\n\"Did I hurt you?\" she asked. \n\nDerek shut his eyes and breathed slowly. \"No, baby. You're fine.\" He didn't want her to know he had been close to cumming on her hand just from that light touch.\n\nTegan leaned forward and planted a soft kiss on the mushroom-like head. Her tongue licked the underside of his head before she took it into her mouth. \n\nDerek groaned and grabbed her head as his hips rocked forward. She opened her mouth wider to accommodate him. Tegan started to bob slowly, using her thumb and forefinger to jerk him off. She wasn't exactly sure about her movements, but she tried to listen to the sounds he was making when he liked something. \n\nWhen her tongue lapped at his balls, Derek let out a low moan. Smiling, Tegan took them into her mouth. His fingers twisted into her hair and she groaned, the vibrations of which sent tiny sparks shooting out from all directions, making Derek intake short gasps of air. \n\nHer eyes went to his and he knew he was going to cum. Damn, those eyes. The naughtiness of her actions and the na\u00efvet\u00e9 of her looks made him dizzy with lust. He felt that familiar tightening as she continued to tongue his sac while her dark hand moved along with smooth, quick strokes. \"Tegan, I'm gonna cum.\"\n\nHer mouth went back to his cock, her warm mouth back on his hardness making his hips jerk. \n\nShe looked up at him once more before whispering softly. \"Please come in my mouth.\"\n\nDerek growled, releasing his seed into her waiting mouth. Tegan swallowed it eagerly. She licked at his head and cleaned the rest of him until he gently moved her away, his cock too sensitive for any more of her attention. \n\nTaking her hand, he brought her from her knees to sit next to him on the couch. He kissed her deeply, taking her bottom lip into his and sucking it hard. Tegan whimpered, her pussy begging her to touch it, to give relief to the fire now burning inside. \n\nHer fingers dove into her panties, stroking her soaking sex. She gasped her surprise when she felt him push her fingers aside and take over, his fingers curling inside her pussy and hitting that wonderful hidden spot. \n\n\"Oh fuck,\" she mewled. Her head rested on his shoulder as she humped his fingers. \n\n\"I want to be inside this pussy so bad,\" he growled. \"But first, I want to make you feel as good as I do.\" He forced her to look at him, while his fingers pumped her. \"Do you want me to fuck you, Tegan?\"\n\nWhen his thumb pinched her clit, she nearly cried from pleasure. \"Yes, please.\"\n\nDerek grinned at her polite answer. \"Well. Then I suggest you cum quickly for me, baby girl. I don't know how much longer I can last.\"\n\nHis fingers thrust deeper into her. Tegan let out a small wail. Her body twisted to the side as she draped her top half over the arm rest. Her gaze drifted back to him. His knees were in the couch as his fingers were slowly pushing her over the edge. With his free hand he pushed back the dark curls that fell into his face. \n\nDerek moved closer, practically lying on top of her with his fingers still inside. She could feel his cock swelling once more as he kissed her side. Tegan looked down at him, his blue eyes studying hers. His wicked smile was sudden and fierce. \n\n\"You're going to look so fucking nice on the end of my cock.\"\n\nTegan felt her eyes roll as her body fell into ecstasy. She climaxed with a low moan, her body shuddering. He slipped his fingers out of her wet pussy and brought her close to him. \n\nShe kissed him roughly before seizing his hands and sucking his fingers into her waiting mouth, tasting herself on him. She decided she liked that.\n\n\"Please fuck me,\" she said to him softly.\n\nShe got to her feet shakily before unclipping her black bra. Her large D cup breasts bounced free and Derek gulped audibly. She slid her panties down and stepped out of them. It was he could do but stare. He knew she was pretty, but as she stood in front of him the only word that came to mind was beautiful: the smoothness of her sepia skin, her glorious breasts with the dark-capped nipples, the cinch of her waist and her slightly rounded tummy giving way to generous hips and the ass he couldn't get enough of. He was reminded of that phrase 'shaped like a Coke bottle'. And right there, at the meeting of her thighs was the treasure he'd been dreaming about. Wondrous layers of chocolate and vermillion he couldn't wait to feast on. A thin strip of hair was all she had on her mound. \n\nTegan was becoming increasingly shy; she was standing stark naked in front of him, save for her black boots. As she moved to cover her breasts, he stood up and stopped her. \n\n\"Don't\" he whispered. \"You're too beautiful to hide.\" Wrapping his arms around her waist, he brought her closer. He covered her lips with his, enjoying the feel of her silken skin against his, the soft scent of roses and lilies making him feel at home. \n\n\"Take me to bed,\" he said.\n\nTegan took his hand and nervously led him down the short hallway to her bedroom. They sat on the bed and Tegan unzipped her boots. Derek kissed her once more, his hands traveling to her breasts, rubbing her nipple with the flat palm of his hand. \n\nHe pushed her gently back on the bed, their mouths still connected. He could her trembling slightly under him. \"Are you okay?\" he asked. His blue eyes searched hers and could see the discomfort in them. \n\n\"I...\" she started. Dammit, how can you tell they guy you're about to have sex with you're a virgin? It's not like you can exactly blurt it out.\n\n\"What is it? Do you not want to do this? We can stop.\" He was hoping to God she was planning to move forward with it, however selfish it sounded. It was like having this nice big present snatched away without warning. \n\nDerek started to move away when she pulled him closer. \"No, don't go. It's just...I've never done this before.\"\n\nHe stared at her incredulously. He knew she was innocent, he didn't realize how much she was. \"You're a virgin?\" He supposed the shock was evident in his voice because she turned her head in embarrassment. \n\nRealizing his mistake, he kissed her cheek. \"Tegan. Baby, don't be ashamed. It's just...it's a little shocking is all.\"\n\n\"Why? It's not surprising that no one wants to bang the big girl?\" There was a hint of bitterness in her tone.\n\n\"Their loss,\" he said firmly. \"Because now they'll never have a chance to be blessed with the gift you're about to give me.\"\n\nTegan turned back to him, her light eyes brimming with tears. \"Are you sure you want to do this?\"\n\nHe chuckled and brushed a dark strand of hair from her forehead. \"I should be asking you that.\"\n\nShe smiled broadly. \"I'm sure. I want you to be my first.\"\n\n\"Then I am honored, luv.\" He pushed her to the top of the bed, resting her head on her pillows. He spread her legs before positioning himself at her entrance. \"It's going to hurt for a bit. Let me know if it's too much.\" His cock was twitching with anticipation as he neared her dark core. \n\n\"Are you sure you want this, Tegan? Once I start it's going to be really fucking hard for me to stop.\" He could hear the almost desperate tone in his voice.\n\nTegan propped herself up on her elbows. She smiled at him. \"I'm a big girl, Derek. You won't break me.\"\n\nDerek's mouth rose in his signature lopsided grin at his words being thrown back at him. He lifted her knees slightly as he eased his cock into her warmth. He felt her tense underneath him and he brushed back his curls. \"You good?\" he asked, his blue eyes studying her. \n\nTegan nodded. \"I'm fine, no worries.\" She breathed deeply, and tried to stop her heart from thumping erratically. He leaned down to kiss her before plunging true, breaking her hymen and burying himself inside her. She groaned loudly, tears spilling down her cheeks. Her hands grabbed at his strong arms. \n\n\"I'm sorry, baby\" he said as he kissed her tears. He stopped moving so she could adjust to the sudden invasion. \n\n\"It's okay,\" she breathed. \"Nothing like getting it out of the way, huh?\"\n\nThey both laughed. \"Are you ready?\" he asked. \n\nShe nodded. \"I want you to fuck me, Derek.\" His hips began to move again. \n\nTegan closed her eyes and tried to focus on the pleasure now sweeping through her body. Things had moved past discomfort into happy with each stroke of his cock. It felt as if he was trying to go deeper with each plunge. A low groaning sound filled the room and Tegan realized it was her. She had never heard something like that before. It sounded so...primal.\n\nShe found her hips rising to meet his thrusts, her back arching her nipples as if in offering. Derek obliged, tonguing the dark bud before taking it completely into his mouth. Tegan sighed, her fingers clutching at his dark hair once more. \n\nDerek's head was spinning. He looked down; her eyes were shut tightly, her mouth slightly open, little cries of pleasure tumbling out. He leaned close to her ear. \"How do I feel?\" he asked. \n\nHe felt her tremble underneath him. \"S-s-so good,\" she breathed out. \"So fucking good.\"\n\nDerek grinned. \"You want more?\" He punctuated the end of the sentence with an even deeper stroke, arching upwards.\n\n\"Ohhh, fuck.\" Her legs spread even wider.\n\n\"Tell me, tell me what you want Tegan J.\"\n\n\"I want more. Faster, please.\"\n\nHe slid out of her wetness and plunged in once more. Grabbing the headboard with both hands, he fucked her hard. He watched her writhe beneath him, her brown legs wrapped around his waist, her beautiful breasts pointing heavenward. Beads of sweat rolled off his face and fell on her stomach.\n\nTegan's hands clawed at his chest as his cock thrust hard into her pussy. She knew she was going to be sore as hell tomorrow but it was definitely worth it. Her body felt on fire, and she knew at once the only cure was him. ",
        "There was a heat stirring inside her, starting from her toes and slowly creeping up to her belly. Tegan pulled him down to her, clutching his shoulders as she kissed him hard. \n\n\"Derek, I'm gonna...\"\n\n\"Cum with me,\" he moaned. One last hard stroke had him growling out her name and for the second time that night, Derek spent himself inside her. Tegan pussy clenched his cock as she came with a loud whimper. Her arms and legs wrapped around his body, enveloping him in such softness he nearly cried out.\n\nShe peppered his face with kisses as he rolled over, taking her with him. When she tried to move off him, he held her in place with his arms. \"Oh no you don't. I want you near.\"\n\nTegan sighed as her heartbeat tried to calm itself. She felt so wonderful. Her skin buzzed all over and her legs felt a little numb. She chuckled softly to herself.\n\n\"Uh, normally that's not what I guy wants to hear after having sex.\" He settled on his side and snuggled up to her back.\n\nTegan rolled over to face him. \"No, not that. You were wonderful. Thank you.\"\n\nHe smiled, tucking his arm under his pillow. \"I should be saying that to you.\"\n\nHer hand reached out, entwining her fingers with his. \"So say it then, Ryan.\"\n\n\"Thank you, Tegan James.\" His smile was illuminated by the moonlight streaming in through the curtained window. \"You saved me the trouble of getting myself off.\"\n\nTegan slapped him playfully. \"How romantic. You say that to all the girls you deflower?\"\n\n\"Well I normally don't make it a habit of banging virgins. It's kind of messy, with all the tears. Plus, you're the oldest virgin I know. Do you know how hard it is to find virgins these days? At my age, I'd have to sleep with schoolgirls and I believe that's illegal no matter what side of the pond you're on.\"\n\nThey both laughed. \"You mean I'm the first virgin you've been with? What about your first time?\"\n\n\"I was fourteen and she was sixteen and the sister of one of my mates. She kind of attacked me in a broom cupboard during a birthday party.\"\n\n\"Oh, you bad boy. Macking on the older women.\"\n\n\"I'll thank you not to sully my good name. She practically raped me. Turned me into a sex-crazed pervert.\"\n\nTegan rolled her eyes. \"You were fourteen. All boys that age are that way. Besides you clearly came out on the better end.\"\n\nHe nodded. \"True. You know something? You are a first for me.\"\n\n\"Oh really? What am I?\"\n\nHis face got serious as he leaned closer to her. \"You're the first fine piece of chocolate ass I've ever had.\"\n\nTegan laughed loudly as he grabbed her as nibbled at her neck. \"Ahh! Let go of me, perv!\"\n\n\"Nope. You're stuck with me for a while.\"\n\nShe got serious for a moment. \"Dammit, now that makes me think.\"\n\n\"About what? How I look like Adam Brody's extremely fit British brother?\"\n\nShe grinned. \"No, but now that you mention it...that's hot.\" \n\n\"I know. So what is it, then?\"\n\nTegan didn't want to mention that he was only here for a short amount of time. He was leaving in two weeks, moving on to California to showcase his website. He didn't even live in the same country! All at once she felt a little foolish. She knew this thing wouldn't last. Well, it didn't make sense to spoil the time they had with trivialities. \n\nShe plastered on a smile. \"I don't know if I want you in my bed tonight. You might snore.\"\n\nDerek's blue eyes twinkled. \"You'll just have to let me know. Why are we still up anyway? Don't you know guys usually pass out after a really good shag? You're keeping me up, virgin.\" He shoved her playfully.\n\n\"Hey! I'm not a virgin anymore, thanks to you buddy. Plus, I wanna talk some more. I'm not here just so you can get your jollies.\"\n\n\"Speaking of jollies let me know when you're ready for round two.\" He inched closer to her. \n\n\"Nuh-uh, Ryan. I'm going to need recovery time. Some dirty old man fucked me like he was going to break my back.\"\n\nDerek winked. \"Heartless bastard. He should know better. Maybe he was distracted by those sexy boobs of yours.\" He cupped a heavy breasts in his palm. \n\n\"Shameless flirt,\" she said. \n\n\"Tart\" he replied.\n\n\"So are you!\" she shot back.\n\n\"Touch\u00e9. I am a flirtatious tart. I just hope one day God will forgive me for all my sexy sins.\"\n\nTegan laughed. She loved the banter between them. It felt so right, lying in bed after great sex, joking with the hot man who brought her to amazing heights of pleasure. This is how things should be, she thought. \"You know, you never really mention your brother.\"\n\nDerek was silent for a moment. \"I don't particularly like to. Especially not after sex, you cheap bint. Now I'm all paranoid you were thinking about him during.\"\n\nTegan shook her head. \"Honestly, I think I've seen only one of your brother's films. Besides,\" she said as her fingers brushed against his lips. \"I think gamer boys are hotter anyway.\"\n\n\"Don't go trying to seduce me, Ms. James. I'll have you know I'm not that kind of boy.\"\n\n\"Oh really,\" she teased, her hand reaching down to cup his mild erection. \"That's not what I hear.\"\n\nHis blue eyes darkened as she began to pump his cock. \"Tegan J., don't start something you can't finish.\"\n\nShe kissed him gently. \"Baby, I plan to go all the way.\"\n\n********\n\nTegan woke to the sun streaming through her grey curtains and a huge smile on her face. \n\nYou just had sex you skank, her brain chanted. With a guy you barely know!\n\nIt was nearly 11:30. She and Derek had spent the rest of the night alternating between sex and talking until the early lights streaked through the dawn sky.\n\nPerfection was the only way to describe it. There, in darkness of her room, she connected with a man on a level beyond the pleasure he ripped from her body with each orgasm. \n\nShe turned, watching him sleep soundly. He was facing her, his hand tucked underneath his cheek, his unruly hair curling out over the pillow and into his eyes. She realized then he looked so young and almost cherubic. \n\nTegan's hand traveled to her pussy and touched it gingerly. She winced slightly. Maybe an all-night marathon wasn't the bed of ideas. She couldn't help it, he was so cute\u2014with the accent, and the eyes, and the hair sweet Lord the hair!\n\nApparently her body couldn't grasp the sore concept because she was getting hot just thinking about Derek. Despite the dull ache between her legs, her fingers idly stroked her pussy as she breathed sharply, a mix of pleasure and ache. \n\nShe nearly jumped out her skin when she felt his lips on her shoulder. \n\n\"You don't have to do that as long as I'm around,\" he whispered. His voice was heavy with sleep and lust.\n\nDerek reached out and pulled her on top of him. \"Derek...\" she moaned in protest. \"No more, at least for now.\" She still straddled him, despite her body's warning.\n\nHe groaned, his hands clasped behind his head. His blue eyes stared up at her, giving her the biggest puppy dog look he could muster. \"You can't just leave me like this. Blue balls are quite dangerous to a man's health luv. I could die if you don't fuck me right now.\"\n\nTegan shot him a look. \"Nice try, Ryan. Points for the look though.\"\n\nDerek grinned. \"Hey, I tried. What do you say, Tegan J? Why don't you give me a proper good morning greeting?\"\n\nShe grasped his cock and was about to lower herself down when a jingling of keys halted her movements. \n\n\"What?\" he asked. \n\n\"Shh,\" she said. She listened for a beat before cursing loudly. \"Dammit. Perfect timing.\"\n\n\"Tegan?\" a voice called out from the common area. \"Are you here?\" It was Drea. \n\n\"Is that a man's shirt on the floor?\" a deep voice she recognized as Teddy's asked. \n\nDerek giggled. \"Mum and Dad are home. We are so busted.\" He slapped her ass, making her pussy rub against his cock. \n\nTegan fought a moan. \"Quiet. They'll hear you.\"\n\n\"T, we already know you're back there. You've got five minutes to get out here or we're coming in.\" She heard Teddy guffaw. \"And tell Derek to get his fine ass out here too.\"\n\nTegan leapt off him and scrounged around for something to throw on. She settled on a pair of short blue shorts and a white tank top. She ran an errant hand through her hair. \"How do I look?\" she asked. \n\nHe propped himself on his elbows and stared hard at her. \"Like a gorgeous girl who's been shagged silly for the past nine hours.\"\n\nShe groaned. It'll have to do for now. As she turned to leave she noticed he was still in bed. \"Get up,\" she hissed. \"They already know you're here.\"\n\nHis devilish smile was back again. \"Aren't you forgetting something?\"\n\n\"What?\"\n\n\"Well, I seem to have divested all of my clothing in an impromptu strip show and all my clothes are currently out in the living room.\"\n\nTegan groaned. \"Shit.\"\n\n\"Never fear, my potty mouth paramour. I'll just MacGuyver myself something.\" He rose from the bed, giving her a nice view of his erect cock before wrapping her black bed sheet around his waist. \n\nHe grinned happily at her, clearly pleased with himself. \"Ta-da!\" \n\n\"That'll have to do,\" she said. \"Come on.\"\n\nThey walked out into the living room as Drea and Teddy clapped loudly. \"'Bout damn time!\" Teddy shouted.\n\nTegan knew if she could turn red her face would be like a tomato. \n\nDerek was beaming. \"I've never had a round of applause before. This is just amazing.\" He walked over to the couch and picked up his jeans. \n\nDrea's eyes followed him. \"So, I see last night was good. Care to share, T.?\" Her green eyes sparkled with amusement. \n\nTegan grabbed Drea and pulled her towards the kitchen, with Teddy behind. \n\n\"Oh stop, I was just teasing.\"\n\n\"I know,\" Tegan replied. \"It's just that you guys have perfect fucking timing.\"\n\n\"Oh really?\" Teddy asked. \"Were we about to interrupt Round Two?\"\n\n\"More like Round Ten.\"\n\n\"Goddamn!\" They shouted in unison. \n\n\"I know,\" Tegan said excitedly. \"He fucks like a champ but I am so worn out.\"\n\n\"Oh honey, you need to sit down and rest. Maybe get some fluids in you other than Little Ryan's.\" Drea said, laughing loudly.\n\n\"Jesus, does he have another brother?\" Teddy said, pretending to fan himself. \n\n\"What happens now? I mean where do we go from here?\" \n\n\"You have fun,\" Drea replied. \"You enjoy the company of a great guy for the short time you're given.\" Before he goes back to his cokehead girlfriend, she added silently.\n\nTegan sighed. \"You're right, Drea. I know we're supposed to hang out today, but I've got to get some sleep before we do anything.\"\n\nTeddy nodded. We understand girl. We've all had those nights. I'm just glad you finally got yours.\"\n\n********\n\nDerek dressed hurriedly and slipped into the bathroom while they were talking. He fished into his pockets for his phone, which had been on vibrate. There were several calls: a couple from Matt, one from his brother, another from Angie, and two from Carrie. \n\nHe decided all of that would be dealt with later. Right now there was something else on his mind. Derek dialed the number quickly. \n\nHis bare foot tapped against the cool tile while he waited for the person to pick up. \n\n\"'Ello?\" a groggy voice answered. \n\n\"It's me,\" he said quietly. \n\n\"Gorge? Is that you?\"\n\nHe sighed. She had been using again. \"Yes, Lottie. It's me.\" He gritted his teeth at the use of that awful nickname. It was short for gorgeous, but it always sounded like someone on an eating binge.\n\n\"What time is it?\" she asked.\n\n\"It should be around afternoon time on your end.\" He sighed. \"Listen, Lots I'm calling because I...I really feel like a prat to do this over the phone but, well we know this 'us' thing isn't working out. And it's pointless to be holding on innit? So why don't we throw the towel in?\"\n\nThe phone was silent on the other end and he was afraid she hung up the phone in anger. \n\nA loud snore told him his answer. \n\nShe had fucking fallen asleep on him. \n\nDerek had reached his limit. \"Bugger this,\" he spat as he snapped the phone shut. He was officially done. \n\nShoving his phone back into his pocket, he ruffled his hair and smiled at his reflection in the mirror. \n\n\"You're all hers, now.\" "
    ],
    "authorname": "nerd4music",
    "tags": [
        "first date"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/only-you-ch-03"
}