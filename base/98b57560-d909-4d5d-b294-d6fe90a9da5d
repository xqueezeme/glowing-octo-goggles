{
    "title": "Aspen Grove",
    "pages": [
        "[This story has no explicit sex in it. If descriptive sex is why you want to read a story, read a different story. This story is about making a difference with, by and for friends. It's just a story, until you and I make it true.]\n\nNone of what happened was planned, at least not by me and certainly not by Ron. Ron turned seventy on May the twelfth last year. Everyone living in the Aspen Grove section of the Colorado Sunset Hills Retirement Community attended the party for him. He and Emma, his wife of almost fifty years, had lived in Aspen Grove for three years and had made lots of good friends.\n\nWhat happened started at the party. At the birthday party he danced with Emma and just about every other woman in our community. He didn't dance any of the fast stuff fast but he danced. The party lasted hours and we all had a good time. He didn't want presents for himself. He wanted every body to bring a present to the party for a game he thought of. The presents were to be wrapped and for either a male or female. It would be embarrassing for a man to open a present and inside find perfume. \n\nEach person would choose from the tables covered with presents and that was their birthday present from Ron and whoever actually brought it. No one put a price limit on the game and we were not to put our name on the outside of the gift.\n\nI thought long and hard about what I could give that would mean something to the person who got it and wouldn't break my small bank. In the end I made a gift certificate on my computer and put it in a shoe box, put a marble inside so it would make noise if someone shook it, wrapped the box in green paper and took it to the party. The gift certificate was for two days of companionship. For two days of the person's choosing, I would be with them. Go for a walk? If that's what you want, you've got it. Sit on the porch and watch the grass grow? I'm there. Whatever.\n\nThere were almost thirty people at Ron's birthday party. None of us knew how sick he was. Well, probably Emma did, but she didn't say how sick he was. We all noticed he had lost some weight and that he had a little less white hair, but that doesn't always mean you have three weeks left.\n\nAfter we ate everyone gathered for the celebration. Ron gave us the rules again for his game. When he gave the signal we all went to the tables and picked a package and came back to our seats. Then he would call on one person. That person could open the present they picked or trade someone for the present they picked and open that one. If they opened the present they picked they got to choose who was next. If they traded the person they traded with went next.\n\nHe looked over the crowd and he picked Carl White, his bridge partner whenever Emma wasn't. Carl switched with John Tinker and opened what he took from John. He got two decks of very nice playing cards in a fancy box. John went next and opened what Carl had traded him, and smiled, it was a nice bottle of wine in a fancy box. He picked Carolyn to go next and she opened the box to find a gift certificate for a massage at the spa. There were plenty of offers to trade. She picked who went next and we all enjoyed seeing what people had made, bought or given. I was thinking a lot about the small thing I had given. It wasn't, in my thinking, as good as some of the other gifts. I spent some time regretting that I hadn't splurged and bought something.\n\nWhen there were five presents left I noticed mine was one of the five. It sat on Marge Wilson's lap. Henry Carter had opened his gift and picked Marge to go next. She traded my present to Francine and opened the present she got from Francine. It was four movie tickets to our local AMC Theatre. Francine shook the green box, heard the marble I had put inside rattle around and traded the box with Ken. She opened the box he had been holding and found a bus pass good for a month. Ken traded my green box to Pam and got tickets to the next bus trip to Las Vegas. That left Emma and Beth. Pam looked at the box and traded with Beth. Pam got a gift certificate for thirty dollars at our local market. Beth held the green box and said, \"Seems no one wants to open this one. It must be intended to be yours, Emma.\"\n\nEmma gave up the silver wrapped box from her lap. Beth opened the silver package and got a gift certificate to one of the restaurants in our area.\n\nEmma looked at the green box and said, \"Green has been my favorite color for all my life. Thank you, whoever gave me this.\" She opened the box and read the certificate. She dropped the box on the floor and rushed out of the room crying. All of us sat stunned. Me, most of all. I made Emma cry. I had no idea how my gift could or would make anyone cry.\n\nRon followed her out of the room. Sandy had been sitting on her other side and she picked up the box. She read what I had written and looked up at me. Tears ran down her cheeks.\n\n\"How did you know?\"\n\n\"Know what?\" I was in the dark.\n\n\"Ron is dying. This is his last birthday.\" Sandy said. The room was silent. No one moved. \"I thought that Emma, Ron, Beth and I were the only ones who knew.\"\n\nBeth said, \"No wonder none of us could open it. It was for Emma.\"\n\nThe party broke up. Sandy, Emma's best friend, stayed back to be with Ron and Emma. I stayed. I didn't know what to do but I stayed. When Emma and Ron were ready to go home I walked with them. Emma held Ron's hand and carried the green box in the other. Sandy walked with me and held my hand.\n\nWe got them home and settled. Emma kissed my cheek and said she would wait to use the certificate. Sandy and I left and I walked her to her apartment. She held my hand and said, \"Of all the presents Emma got the best one.\"\n\n\"I don't know about that.\"\n\n\"She's been living with Ron for almost fifty years. When he's gone she will need companionship more than she ever has. You gave her the prefect gift. She burst into tears because she is terrified of being alone.\"\n\nAt her front door she kissed my cheek and I walked home. I wondered how I gave the gift I gave and how it got traded enough to end up with Emma. I didn't have any answers.\n\nTwo days later I saw a hospital bed being delivered to Ron and Emma's place. I went over and Ron was thinner and weaker. He was in the bed and a nurse was checking his vital signs. She was from the hospice care provided through the Colorado Sunset Hills Retirement Community. I helped bring some chairs into their bedroom so visitors could sit. There was room for four chairs. One was always Emma's.\n\nA week went by with an almost constant stream of people in and out of their home. We moved the hospital bed into the living room and borrowed some chairs from the club house. Now as many as ten people could visit with Ron and he could watch their 60\" TV. Like all their friends I was there for part of almost every day. Every time I went to visit Emma was sitting on Ron's right side, holding his hand. When we moved the hospital bed to the living room the guys from Aspen Grove came and put the queen bed back in the bedroom. Emma cried when she looked at it.\n\nEvery time I saw the queen bed it was made. I figured Emma for one of those people who always makes the bed as soon as they get up. In a conversation with one of the nurses she shared with me that Emma never slept in the queen bed. She squeezed into bed with Ron and held him all night long, every night.\n\nAt eleven one night my phone rang. The nurse told me Ron was gone. I dressed and went over. I held Emma's hand as the hospice people and the people from the coroner's office took Ron away. They were gentle and ever so careful with him and with Emma's heart. When they were gone Sandy looked in on us and saw that I was on duty. Beth came by, as did four or five others, but when they saw I was there, they went home.\n\nI sat on the couch and held Emma all night. At about three she fell asleep and I think I did too. Sometime about dawn we were both awake and went into the kitchen. We made breakfast together. Toast, coffee and some jelly.\n\nWe went back into the living room and Emma started crying. Walking into the room she saw the empty bed and that was enough. She came into my arms and sobbed. After standing crying for a few minutes she walked us to the recliner that everyone knew was where Ron sat to watch movies and football before he was sick. She pushed me into the chair, tilted it back and crawled into my lap where she cuddled in and cried herself to sleep. I didn't know what to say, so I didn't say anything.\n\nAt ten three guys came and took the bed. I signed their paperwork. Emma just wasn't there enough for details like that. She and Ron had planned and paid for everything before he started hospice care. A woman from the mortuary came by and finalized the time for the service and burial. I said I would let everyone know. She left me with paperwork showing directions, date and time.\n\nAt eleven, Sandy and Beth arrived together. They brought lunch. They fed Emma almost like she was a toddler. I ate the sandwich they brought me and drank the iced tea. They stayed for a while and Sandy thought I ought to go home and get a nap. When she said it Emma started to cry. She said, \"Don't go. Don't leave me.\"\n\nBeth said, \"Sandy and I will stay with you.\"\n\nEmma looked at me and said, \"Sleep here. Don't go.\"\n\nI went in and took a nap on the queen bed. Beth stayed until five and then she woke me so I could be with Emma. At six Carolyn and John brought dinner to us. They stayed until eight and went home. Emma and I talked until after eleven. Actually, Emma talked and I listened. She talked about life with Ron. \n\nShe started drifting to sleep after eleven. I recommended she go to bed. I told her I would stay right there on the recliner. She went into their bedroom and did her ritual. She came back out wearing a long green plaid flannel nightgown. She stood in front of me for a long time looking at me.\n\nHer hand reached for mine. When she had it she said, \"Hold me.\"\n\nI stood and held her. It was if she was so fragile she might break. She backed up a little and I released her. She took my hands and led me to the queen bed where she sat and began unbuttoning my shirt. I started to say something and she put a finger to my lips. Then she finished unbuttoning my shirt and tossed it to a chair. She undid my belt and unzipped my chinos.\n\nThe last woman to do that had been my wife, the night before her heart attack six years before.\n\nI finished the job and stood before her in my boxers. She turned and crawled into bed. She held the covers open for me. We didn't talk. I got in and she molded herself against me. I know we slept but I also know we spent most of the night just holding each other.\n\nIn the morning there was a knock at the front door. We didn't hear it. Beth and Sandy came in and found us asleep holding each other. They backed out and came back two hours later. They made breakfast and made enough noise that we woke up and got out of bed. I dressed and Emma went into the bathroom for her morning ritual.\n\nIn the kitchen Beth kissed me good-morning and so did Sandy.\n\n\"We saw you two sleeping.\" Sandy said.\n\n\"I don't know what to say.\"\n\n\"God, don't feel bad! If someone had been there for me like you're here for Emma I would have come back to the living lots faster than I did.\"\n\n\"All I've done is hold her and listen.\"\n\nBeth got up and kissed me. \"Silly man, you say that like it wasn't much! It is everything. She had counted on you from the day of the birthday party. You promised her you would be here for her.\"\n\n\"Would one of you do me a favor?\"\n\n\"Name it!\"\n\n\"Go to my place and get me some clean clothes. I don't think leaving Emma would be Ok.\"\n\nThey took my keys and left. While they were gone Emma came out and ate breakfast. \"Where are they?\"\n\n\"Went to get me some clean clothes for today.\"\n\n\"I hope they bring you your clothes, Beth's and Sandy's would be too small for you.\" She smiled. Her sense of humor was coming back. She ate a good breakfast and we were at the sink doing dishes when Beth and Sandy returned. I thanked them for the clothes and went to take care of a shower, etc.\n\nEmma sat them down and talked to them. She was sad, aware of the hole in her life and that it would hurt for some time... and she was back. They asked about finding me in bed.\n\n\"The most comfort I've had in the last three weeks was knowing that Nick would be here for me. He held me all night long on Ron's recliner after Ron went. He didn't make me talk. When I cried, he cried. He helped me cry! Last night we were on the couch falling asleep and he sent me in to get ready for bed. When I came out of the bathroom in my flannel nightie I saw an empty bed. I went to him and he held me. I took his clothes off and I pulled him into bed. He held me all night long. I miss Ron. Nick doesn't breathe like Ron. I got up once in the night and when I got back in bed Nick just gathered me close and held me. He didn't wake up.\"\n\nWhen I came out feeling clean and fresh all three women kissed me. Beth's kiss was much more than a quick kiss. I didn't ask what they meant. I just enjoyed receiving.\n\nThe next day was the funeral. Emma went with me to my place and picked out what she wanted me to wear to the funeral. We carried my stuff back to her place and after she was ready I got ready. Everyone who had been at the birthday party was at the funeral. The three grown children of Ron and Emma were there. Their son took me aside at the gathering after the funeral and warned me not to try to move in on his mother. I asked him if he was going to take care of her.\n\n\"I pay her rent and stuff! Yeah, I'm taking care of her!\"\n\nSandy and Beth came and sat with us. They had heard him.\n\nBeth said, \"Where were you the night your father died?\"\n\n\"At home. I didn't come because there was nothing for me to do.\"\n\n\"Nick, sat up all night holding your mother while she cried. All night!\"\n\nSandy added, \"And where were you for the three weeks your father was in bed dying? You weren't here. You were the one Emma called when Ron needed hospice care. She asked you to tell Jennifer and Janice. You waited until three days before Ron died to tell them. Except when Ron and Emma slept at night we all were here. Not only were you to busy to come, you robbed your sisters of being with their Dad the last days of his life. And now you want Nick to stop being here?\"\n\n\"You have some nerve.\"\n\n\"I wanted to be here! I have a company to run! I have bills!\"\n\n\"You have excuses. I hope they keep you warm at night. Your excuses haven't helped your mother at all. Nick has. He's not after her money. He's not after anything except to be comforting to her. You could take lessons.\"\n\n\"I want to protect her.\"\n\n\"From what? Love, companionship, caring people?\"\n\n\"No, from getting hurt.\"\n\n\"Don't you think it hurt when her husband of fifty years and your father is dying and you and your sisters don't drop everything and be here?\"\n\n\"But, she understands why I wasn't here.\"\n\n\"When she would have been sitting on the couch all alone watching the ambulance drive away with Ron's body in it how much good is understanding that being here wasn't important to you?\"\n\nAll three of us got up and walked away from him. Emma was surrounded by people. Her daughters had flown in from London and New York. They sat at either side of her. They stayed for two days. Her son went home before the gathering was over. \n\nDuring the two days I rested a lot. Holding Emma took a toll on me emotionally. That's not a complaint. I'd do it for every one of my friends. Sitting on my front porch the second afternoon I saw the daughters take their mother out. They left in a cab. Three hours later they came back and Emma was smiling. I decided that being the companion for any and all my friends was my new career. My mission for the rest of my life.\n\nThe next day Emma called Beth and Sandy. They went to her and the three talked for a couple hours. Then, they came to see me.\n\nWe sat in the shade on my small patio. Emma started the conversation.\n\n\"Nick, I cannot thank you for what you gave me. There aren't words or actions that would even come close.\"\n\nBeth put her hand on Emma's arm and said, \"Emma shared something with us this morning. She wants you to know about it but it is still too hard for her to say. It took her a long time this morning to tell us. The last thing that Ron said to her was that he loved her and that she shouldn't worry, Nick would be there for her.\"\n\nSandy spoke, softly. \"A couple days before Ron left he and I were alone for a few moments. He asked me if I would help you care for Emma. He said that knowing the three of us were here for her made leaving easier. She was loved and cared for.\"\n\n\"I don't know what to say.\"\n\n\"Then listen. We have learned something here. Being alone sucks! Being loved and cared for is better. From now on, in our community, we are the companions. In sickness, loss, bad weather, or death we will do just what we did. Somehow we did what was the right thing. It hasn't been a week and Emma can laugh.\"\n\n\"Deep inside I'm still bleeding, still in pain that all of us have been through. And, I'm back because of the three of you. We can do this for all the people we love. Can we agree to be the companions?\"\n\nI nodded. We all did. We had lunch together. I went to play bridge in the afternoon. I listened. Harvey was hurting. His son had been in rehab for a drug and alcohol problem and Harvey had his hopes up that the man would get his life in order. He found out his son had been arrested in Chicago for drunken disorderly conduct.\n\nWhen the bridge time was up I called my team and we went over to Harvey's. Sandy stayed with him until ten that night and I went and sat in his living room until two in the morning. We talked. Not much but as much as Harvey was up for. \n\nEmma brought breakfast and Sandy spent a couple hours with him. We traded off for days until Harvey sorted out his feelings and dealt with the powerlessness of wanting someone else to change. Then he came back to us. We knew he was back when I went over to have breakfast with him and he had showered and shaved on his own.\n\nA week went by and we didn't hear of anyone needing the team. On Saturday night at just after nine my phone rang. I heard Beth's voice.\n\n\"I don't need the team. I don't want the team. I want and need you, Nick. I need you to come here and hold me, help me cry.\" She hung up. I walked to her home. Before I knocked she opened the door. She had already been crying. Curt's picture was not on the wall. It was on the coffee table with a box of tissues.\n\nWe went to the couch and sat together. She held my hand, looked at Curt's picture and cried. I realized that today was something big for them. I didn't need to know what it was. I needed to feel her loss. I had one of my own. I had that empty space that will not get filled. I touched my the hole in my soul and we cried together. We never said a word. \n\nAt dawn she went into the bathroom and washed her face. She went into the kitchen and made a Spanish omelet for both of us. Her coffee is always good so I was thankful for a good meal and that the crisis was over. She led me to the door and kissed my cheek as I left.\n\nAt home I took the phone off the hook and went to bed. When I got up at three to pee I put the phone back on the hook. When I came back to the bed it rang.\n\nBeth said, \"Yesterday was six years since Curt died. Every other year I had thought about dying. Every other year I cried and hurt and didn't share it! Last night you were there! You helped me cry! I love you for that.\"\n\nShe hung up. I hadn't said anything except, \"Hello.\"\n\nAt seven the phone rang again. The voice was Beth's. \"Have you had dinner?\"\n\n\"Nope.\"\n\n\"Then come over. It's ready.\" She hung up again.\n\nThe door was open. She was standing just inside in jeans and a sweatshirt with a torn open neckline. It may have started with a crew neck but somehow now it was bigger. She had the table set and the wine poured. It was delicious. I said so.",
        "\"I love having someone to cook for. Cooking for just me sucks! Maybe I can cook for you sometimes?\"\n\n\"Can I buy the ingredients?\"\n\n\"Sometimes.\"\n\n\"Then I accept. Do you think our friends will talk?\"\n\n\"I hope so! I haven't been the subject of the gossip mill in months.\"\n\n\"Is that why you closed and locked the door when I came in?\"\n\n\"Yes, partly.\"\n\n\"And, the other part?\"\n\n\"I might forget to lock the door before we go to bed.\" She blushed and looked at her plate. I blushed and stayed quiet while I thought about what to say.\n\n\"If we go to bed, you will probably be disappointed. I haven't been able...\"\n\n\"I'm not saying I want you to jump my bones! It would be nice but, what I really want is what I saw when we looked into Emma's bedroom and saw you holding her as you both slept. We backed out and left. We both went home and cried for the two hours. We have missed the holding much more than the sex. I want the holding tonight.\"\n\nI sat looking at the tears sliding down her face. I thought about how waking up with Emma in my arms had felt so good, so right and how my head had told me that it was wrong. Now I was being told that Beth wanted that gift and she wanted it from me.\n\n\"Can I at least help with the dishes, first?\"\n\nHands started stacking dishes and we smiled at each other. At the sink she washed and I dried. We were done just after eight. \n\n\"Nick, will you kiss me?\"\n\n\"I can do that and I'd love to.\" She stood close and we kissed.  Most people in their twenties and thirties will not get what kissing between people our age is like. The fire isn't out! It just isn't the same fire that it was when we were younger.\n\nI have no idea how long we stayed in the kitchen. I have no idea who undressed who in the bedroom. I do remember that we slept in skin. We both got up twice in the night to pee. The second time we held each other and talked for a long time. We kissed more and fell asleep again. In the late morning the phone rang. Beth picked it up and I heard Sandy say, \"Did he stay?\"\n\nShe handed me the phone and said, \"It's for you.\"\n\nI said, \"It's early to wake people.\"\n\n\"Would you come to my house for dinner?\"\n\n\"Only if it includes breakfast.\"\n\n\"Bacon or sausage?\"\n\n\"Sausage.\"\n\n\"Pancakes or eggs?\"\n\n\"Pancakes.\"\n\n\"Dinner is at seven, cowboy.\"\n\nI smiled. It was going to be a great summer. "
    ],
    "authorname": "Scorpio44",
    "tags": [
        "no sex",
        "touching",
        "mature",
        "sharing"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/aspen-grove"
}