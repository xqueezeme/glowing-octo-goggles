{
    "title": "The Haunted Whorehouse",
    "pages": [
        "This is my first attempt at Erotic Horror and I guess it is more erotic than horror actually. It is a slow build to the climax but has some teasers spread out. Well, I think that is all I have to say except that it is intended for the 2016 Halloween Contest. I'm not really interested in contests - especially not when it is decided by personal tastes -- but I'm still learning about Literotica and the best way to learn is to try it, right? So here we go.\n\nHalin24\n\n- - - - - - - - - -\n\nA car rolled into the small town - rather a village by definition but the people living there insisted that it was a town -- and continued down the main road to the other side. The town was the centre for dozens of farms and in the summer some tourists showed up to visit one of the ghost towns that lay sprinkled around the area, so no one took any real notice of the unknown white Volvo at first. It moved slowly as if the driver was looking for something but the woman behind the wheel knew exactly where she was going. She had only been there once before, many years ago when she had been a ten years old girl, but that visit was still etched into her memory.\n\nIt had been on a family vacation and they hadn't stayed for more than a few hours. The property had been in the family for something like 150 years and when her father had inherited it from his mother it had been deserted for several years. One of the last things the old woman had done was to have the house renovated and to some extent modernised. It hadn't been appreciated by her son who called it a waste of money, but his mother had insisted that it was an important part of the family history. The old woman had always followed her own paths in life.\n\nNow the woman in the car was the sole owner and on her way to take possession. When she and her brother had inherited the house after their parents accident her brother had complained much like their father had. He was three years older than her and had made up his mind on that trip years ago and it wasn't favourable.\n\nHe had wanted to sell at once but she had refused. As equal part owners he could have forced the issue but at that time blood had turned out thicker than water, or perhaps it was simply that he didn't think it would be possible to sell it.\n\nWhen their dad had tried to sell right after he got it he couldn't and therefore he had rented it out. No one had stayed for more than a month and all of the tenants had left in a hurry. That had been the reason for their visit at that one time: to lock up the house for good. Her father had cursed a lot and her brother had expressed his dislike, but she had fallen in love with the three storey wooden house on the hill and had asked if they couldn't move there. 'Never in my lifetime!' her father had spat out and that was the end of that suggestion.\n\nWhen her brother had made a new attempt to sell the house last year he had found a buyer. The offer had been scandalously low but he wanted to take it anyway. She had offered to buy him out for the same amount to keep it and now it was hers alone.\n\nWhen she reached and entered the small dirt road that only served that one house, she had half a mile left to drive. She was already on her own land and that was noticed by a few citizens. The road was well within sight from the outskirts and the news started to spread: someone had driven up to the Old Whorehouse!\n\nThat was what it was called among the elders though younger people had other names for it too.\n\nWhen she parked the Volvo close to the porch and got out several pairs of binoculars were directed that way. She walked around the house glancing up at the embellishments she remembered so well. The paint was worn and had flaked in places, a few windows on the lower floor were broken and the garden was in desperate need of tending. Still she recognised the beauty from her memories and knew this was what she wanted now that she had withdrawn from her old life.\n\nShe unlocked the front door and opened it, leaving it open after she had entered to let the breeze circulate the stale air inside. The furnitures were still there, covered with dust sheets. She remembered those too: old style with a lot of green plush and dark polished wood. Another thing her grandma had arranged, buying old furnitures and have them renovated, or new copies made. She hadn't realised it as a girl but it must have cost a fortune.\n\nShe had all the time in the world and knew what she wanted to spend it on: get the place back in shape and live there happily ever after.\n\nAfter moving her few things inside from the car she started cleaning out the basics, going over the kitchen, a ground floor bathroom and a small room to sleep in. That took the first day to achieve and it was midnight before she entered her sleeping bag.\n\nShe was dead tired but still wide awake, listening to the sounds of the house, feeling the slight gust of wind from one of the broken windows. It felt comfortable in a strange way to lay there in a house that seemed to be alive. The gusts from the window was as if the house was breathing, the sound of wood against wood like creaking joints in a human. She giggled to herself at her imagination but eventually she fell asleep from exhaustion.\n\nWhen she woke up it was still dark around her and the sleeping bag was unzipped all the way. She lay more on top of it than in it and since she always slept naked she was cold. No wonder she had woken up, she thought.\n\nWhat surprised her was the tingling feeling down below, the arousal she knew so well. Moving her hands down her body she also noticed that her nipples were erect and hard, and reaching her groin she was swollen and soaking wet. Well, why not? This had been a whorehouse a long time ago so why not let her fantasy work along that line. Think about what must have taken place in the house back then, how many women that had been fucked, maybe at this very spot even.\n\nOne hand got busy rubbing her clit and entering herself alternately while the other moved to touch her breasts. When she closed her eyes she saw women and men in old clothes laughing, kissing and touching. Hands moved over bodies, clothes came off, beds were entered.\n\nIt was hot, it was hard, it was basic lust and craving, and she was part of it. Faster than ever before she reached her peak and came hard when a cold breeze swept over her bare skin from thighs to shoulders. It was like nothing she had experienced before, coming from an icy wind, but that was just a passing thought as she calmed down again, entered the sleeping bag and zipped it all the way up. Within another minute she was asleep once more.\n\nAfter breakfast the next day she drove into town to buy paint, tools and supplies. Entering the hardware store she noticed that she received quite a few glances and a salesman arrived at her side before the door had closed.\n\n\"Hello there! New in town? Looking for anything in particular? I'm Henry and will be happy to help you in any way possible.\" the man stated.\n\nShe looked him over. More than sixty years old, above 300 pounds, under five-foot-five, almost bald and with gold gleaming in his mouth when he smiled. Yep, he would probably do anything for her, she thought, a pity that she didn't need any help. For him at least.\n\n\"I think I can manage this by myself but thanks for offering your services.\" she smiled her most seductive smile \"Yes, I am new in town, just moved in yesterday actually. I have been here once before, many years ago though. I'll give a holler if I need any help.\"\n\nWith that she walked away from him, leaving him looking at her ass in her skintight jeans. She didn't see his stare but knew it was there anyway: it happened all too often, especially with older men.\n\nShe had no problem finding what she needed and then rolled her cart to the check-out. There he was again, his eyes on her cleavage that the chequered shirt offered. Next his eyes would move down to her hips to finally stop at her crotch she knew, and they did. Men!\n\nWith an obvious effort he managed to lift his eyes to her face as he spoke.\n\n\"Found what you needed, miss...?\"\n\nHe wanted to hear her say if she was married or not and also get her name. Couldn't he at least be a bit imaginative? Oh heck, let him hear it, it might make his day.\n\n\"Mrs, and my name is Marie. Yes, I found what I wanted for now. I'm sure I will be back sooner or later.\"\n\nWhile he registered her purchases he continued fishing for information but revealed a greater knowledge than what was appropriate.\n\n\"So you have bought the Old Whore..., sorry, the old house on the hill I mean? Haven't been occupied for many years now, must need a lot of work.\"\n\n\"Actually I have moved into a house that my family has owned since it was first built more than hundred and fifty years ago, but yes, it needs a lot of work. I'm in no hurry though, I'll let it take the time it takes and be happy with that.\"\n\nThat confused him somewhat: it had been said that the whorehouse had a visitor yesterday, one that had stayed the night, a woman driving a white Volvo. This woman drove a car like that and was new in town: what other houses were there that was 150 years old? And still she hadn't agreed to the suggestion that it was the whorehouse.\n\n\"Your husband, is he hard at work with the house while you are here to buy tools? Any children old enough to assist?\"\n\n\"No, you might say that my husband is resting a lot, and there are no children. I will do most of the work myself I think or hire help. Like I said, I'm in no hurry.\"\n\nHenry finally finished and mentioned what she owed and she paid with cash. There was no need to let him see a credit card with her last name.\n\nMuch the same took place at the paint shop and the supermarket, the main difference was that the supermarket let her be until check-out and the paint shop would deliver what she had bought and rented that same afternoon.\n\nAfter that she made one more stop, at a private house that she got the address to from an old letter from her grandma. She parked out on the street, walked over to the front door and pushed the doorbell. It took some time before the door was opened, and to her surprise it was a man her own age that stood in front of her.\n\n\"Yes?\" was all he said but not in an unfriendly way, more like devoid of any feeling at all. She also noted that his eyes stayed on her face instead of moving down her body.\n\n\"I'm looking for a Mr James Canfield.\" she told him.\n\n\"That's me though I'm always called Jamie. Who are you and what do you want? I have no memory of ever seeing you before.\"\n\n\"My name is Marie Montgomery and I got this name and address from my grandma, but you can hardly be the man that used to help her with the house. You are much too young, can't have been more than a couple of years old back then if you were even born.\"\n\n\"And who is -- or was -- your grandma?\"\n\n\"Sorry, her name was Jane Matthews.\"\n\n\"Matthews. Matthews... Oh, the Old Whorehouse on the hill! Yes, you are right, I'm not that James Canfield, that was my grandpa, dead for ten years now.\"\n\n\"Have you taken over his business by any chance? I could use some help making sure the house is sound before I start painting.\"\n\n\"No, I haven't. His company was sold and the new owner joined it with his own to corner the local market. Prices has gone up 500% since then. I paint myself.\"\n\n\"Oh, well maybe you can help me anyway then. I'm not too comfortable with heights and it is a three storey house after all.\"\n\n\"I don't...\" he started to protest but she cut him off.\n\n\"Perhaps you can have a look at the woodwork anyway, you must know a lot about things like that if you paint, right? Scaffolding too no doubt. I pay well for any help like that.\"\n\n\"Miss Montgomery, I...\"\n\n\"Mrs, but call me Marie. Please, the more I think about it I doubt that I can do the higher work myself. Please?\"\n\nHe sighed but relented.\n\n\"Yes, I can help you, but you have to be aware...\"\n\n\"Thank you! I understand if you can't do this at once and it is no problem. I plan to take it a bit at a time so anytime you are free suits me fine.\"\n\n\"That's not a problem. I can start tomorrow if that is what you want. What I was about to say was that I'm not a professional...\"\n\n\"Yeah, I understand: you are not a professional carpenter, but that doesn't matter. All I want is an opinion if the roof and walls will crumble next week or not. I don't really think that they will but I want someone to have a look. Grandma trusted your grandpa and said he did quality work that would stand for a hundred years if it got some TLC once in a while.\"\n\n\"He did and it will, but sure I can have a look anyway.\"\n\n\"Wonderful!\"\n\nThey agreed on payment and she left him staring after her. Once more his eyes stayed on her head, as if trying to see inside it. When she drove away he shook his head, returned inside and closed the door.\n\nMarie cleaned several more rooms in the huge house and received the paint and scaffolding she had ordered. She stayed in the small room behind the kitchen that night too and once again she woke up laying on top of the sleeping-bag, freezing and horny. A cold draught teased her skin like a lover with ice cold hands. It made her shiver but she couldn't decide if it was from the cold or the arousal. More like a reflex her hands moved around to sate her lust and the result was the same as the night before.\n\nShe felt well rested when she woke up in the morning. It was funny since she had actually slept only five hours as compared to her usual eight, and still she was full of energy and wide awake. Must be the clean air and working hard that did it, and perhaps the sex relaxed her too.\n\nJamie arrived at nine in an old pick-up truck and they started their inspection in the basement, working their way up. Nothing was found that raised any questions and the rest of the day he worked on the scaffoldings while she started to clean the second floor rooms.\n\nHe left at six to return the next day to finish that part of the job, and Marie stopped early too to move into an actual bedroom on the middle floor with a real bed. It was a huge bed with three feet high bed poles. The bedspread was the same green plush as the furnitures and there were some decorative pillows in the same material, but they smelled of dust and Marie removed them to be washed.\n\nStill it felt good to lay down in a real bed between clean sheets and not in a sleeping bag on the floor. In this room the double windows were intact and her last thought before drifting off to sleep was regret that the cold draught wouldn't teas her body that night.\n\nStill it was the cold that woke her up some time later though. The sheet and cover was off to one side and she shivered from the effect. Something was different though and the realisation made the hair on her entire body stand on edge.\n\nThe cold she felt was local and moved over her body! Spots the size of palms, one moving over her breasts and the other between her legs. Her own hands moved to those same places but found nothing except that cold feeling. Then it shifted to new places, her other breast and one inner thigh.\n\nShe adjusted her hands to those places and once again felt the cold before it moved away. She gasped as a nipple was pinched and something cold entered her pussy. Her reaction was immediate and she moved her hands once more, but still without any more result than before. The nipple was released and the whole breast was groped. The cold inside her got deeper and seemed to grow in size and she screamed as much from fear as from the arousal it caused.\n\nShe knew she had a nightmare, or maybe she should call it a weird dream. Anyway, she had to wake up. Rolling towards the side of the bed with the intention to fall on the floor to achieve that she found that she couldn't. Two cold... something... pressed at her breasts and forced her to lay back down.\n\nThen a bigger cold something spread over her entire body and her legs were spread against her will. She screamed again as a cold rod entered her all the way and this time she knew that it was both fear and the orgasm that caused it: she had come from being used sexually against her will by something cold that wasn't even there since it was a dream, and it wasn't over yet.\n\nWaking up in the morning light was a relief for her. No sign of cold anywhere on her body but she was still naked and uncovered. Her lower region was sore but in a good way. What had she done to herself during her dream to feel that way? She recognised the feeling, sure, but it had only occurred after intense fucking before, never from self stimulation. She hoped she could figure it out so that she could do it again.\n\nAfter getting ready for the day, Marie continued her cleaning until a car horn announced Jamie's arrival. Erecting the scaffoldings were finished and he started painting the barge boards while she turned her attention to the frames around windows and doors. Not much was said while they worked but when they sat down in the lilac arbour for a simple lunch she spoke up.\n\n\"I'm really grateful for your help Jamie. I don't know what I was thinking when I thought I could do this all by myself, heights and all. And you being a professional painter too. I was really in luck that you were free to do this.\"\n\n\"Well, like I tried to tell you at my house I'm not this kind of painter but you never let me finish. I'm an artist, painting on canvas. Mostly portraits in water colours but when I feel like it I do landscapes too. I do know how to paint a house this way too but it is not my profession.\"\n\n\"Oh... I'm sorry, I guess I was rude interrupting you. Please forgive me. I guess it is in my personality to get riled up when I'm nervous and it hit me right then that I was in need of help with the painting too, not only the inspection. If you want to quit I will understand.\"\n\n\"No, not at all, I will do what we agreed on. Actually I appreciate the chance to have a closer look at the house. It has always fascinated me with the decorations, the huge porch and high windows on the ground floor. I suppose the high placed windows were logical considering the purpose of the house.\"\n\n\"You mean keeping what was going on away from prying eyes? Yeah, that figures. I fell in love with the house the first and only time I saw it as a girl. Of course I didn't understand its history then, I just knew I wanted to live in it. It took me twenty years, but now I am here to realise that dream.\"\n\n\"Yes, it's beautiful, and laying on the hill looking out over the town makes it stand out even more. I have made a few paintings of it from down there. It is hard to believe the stories when you see it in full daylight like this but the kids has stayed away after the first couple of break-ins just after the last tenants left. What the tenants said before leaving was laughed at but the kids stopped laughing soon enough.\"\n\n\"What stories? You sound as if the place was haunted or something.\"\n\n\"That's exactly what that family said before they drove away that time, and that is what those kids said that broke in to smoke pot out of sight. Like I said, everyone laughed at them and suggested that the ghosts came out of the smoke. Even so, it became a test of faith among kids to come here alone to prove themselves, not least among the girls, but I haven't heard of anyone actually getting inside the house for the last fifteen years.\"\n\n\"You're joking, right? No one believes in ghosts today!\"\n\n\"Of course not, but I'm serious anyway: the kids are scared of this place no matter what they believe may be true.\"\n\n\"So what do these ghosts do then? Hurt or kill anyone entering? I have stayed here for a few nights I have to remind you.\"\n\n\"This was a whorehouse many years ago, remember? That is what they say, that the whores and their clients are still here and continue doing business. People are suddenly stripped naked with cold hands caressing them. A couple of girls and the wife of the last tenant claimed that they had been raped by ghosts. They didn't see anything and couldn't stop what was happening but they said they felt it for real and couldn't escape. One guy said the same thing, that he was undressed and abused by a woman he couldn't see.\"",
        "Marie's expression turned serious as she heard that and it didn't escape Jamie.\n\n\"Come on, don't tell me you believe in that after all? Have you experienced anything?\"\n\nWhat he had said seemed to fit with her dreams but they were only dreams, and anyway she wasn't prepared to discuss her sexuality with him so she lied.\n\n\"No. Not at all. I was thinking how everything is sexualised these days, even ghost stories apparently. In this case it has been positive though if it has kept the house safe from vandalism. Four broken windows is quite enough but I shudder to think about if the furnitures had been smashed as well: grandma spent a fortune to renovate and return everything to the original look as far as she could get it.\"\n\n\"I would love to see it all at some time, I haven't visited a whorehouse before, must be a sight to see.\"\n\n\"It is and I will invite you when I'm finished. Just don't expect any whores, I won't provide them.\" Marie laughed.\n\nWith that they returned to their painting.\n\nMarie was surprised how slow the work progressed. After two weeks they weren't even halfway on the outside and Jamie explained it:\n\n\"All the decorations takes a steady hand and with different colours the paint has to dry in between. It is actually a bit like painting a picture at times, though with a preset canvas. The porch will be a hell of a job since it is closer to a visitors eyes, every detail clearly visible. Three more weeks I figure until we are done with the outside. I have been wanting to ask you, and I hope I'm not entering your private sphere, but how much time do you have? When are you returning to work.\"\n\n\"Returning to work? Oh, that's not a problem, I am retired. This will be my job now, taking care of the house.\"\n\n\"Retired? At your age? Sorry, but that is hard to believe. You can't be more than 25 or so. Are you a stock broker or something then?\"\n\n\"No, no, nothing like that and I am 32, not25, but thanks anyway.\" she smiled.\n\nIt was their usual lunch break and they sat on the lawn in the sun. The late May sky had cleared and the sun was warm if not scorching. Perfect weather for working outside and they both wore cut off jeans shorts and t-shirts.\n\n25 she thought. Either he was overly diplomatic or half blind. She had retired herself because she felt too old for her job, competing with kids no older than 20. She could afford to quit, so why keep going against the odds? Her husband hadn't liked what she did either...\n\nHer new life had become a routine. The sexual dreams every night that kept her sated, waking up invigorated every morning, cleaning the house until Jamie arrived and then painting the house and the outhouses.\n\nThe breaks spent at different places in the garden, always talking about this or that. It was comforting to feel normal and the work showed progress, if slowly. Being outside in the sun was nice and Jamie was good company.\n\nAnother week passed and then one morning her phone rang while waiting for Jamie's arrival. It was him and he sounded upset.\n\n\"It's Jamie.\" he said \"I can't come to work today, don't know how long this will take. There was a fire at my house, in the garage, but it spread fast and I have to find some place else to stay while they fix that as well as the smoke and water damage. The car is ruined too.\"\n\n\"Oh God, are you okay? Were you there?\"\n\n\"I was there, asleep when the alarm went off. Yeah, I'm okay, some minor burns but nothing worth mentioning. My life is turned upside down though, a lot of damage to the house, my things soaked with water and smelling of smoke. Pretty much total chaos. A lot of work to get things straightened out. I'll call you when I'm ready to continue on your house.\"\n\nMarie was shaken by the news. She had experienced a home fire herself years before and could well imagine how it was for him, but she was lost for words at the moment. Jamie finished the call before she got her head into gear.\n\nAfter walking around the house for a while, getting nothing done, Marie got the car keys and left. Fifteen minutes later she parked at his house and could see the damage for herself. A fire engine was still there and the crew seemed to inspect the ruins of what must have been the garage and the car to make sure it would not reignite. Jamie stood on the pavement talking to a man, so Marie got out of her car and walked over to them.\n\n\"... will cover all your expenditures for damages, moving and so on, but this will take time.\" the man said to Jamie as she reached them \"Show receipts for anything and we will transfer the money in a day, or if you want to do some of the job yourself you only specify it and report the time it took. Within reason of course.\"\n\n\"Thanks, but my first priority is a place to stay and to save what I can of my belongings. Can you help in any way with that? There isn't exactly an abundance of houses available in the area.\" Jamie replied.\n\n\"We have nothing prepared, no. All we can do is to pay for expenses and recommend people for you to contact. You could rent a caravan as a first step.\"\n\n\"That won't be necessary Jamie.\" Marie cut into the conversation \"I have a huge house and you can move in there. The stable is empty and can house your things until they are cleaned and dried.\"\n\nJamie turned around, not aware until then that she was there.\n\n\"Marie? When...\"\n\n\"I can rent a trailer to transport your stuff and help you load and unload if you want to do it yourself. Otherwise you just hire the help and I will drive you around where you need to go. Just tell me what you need me to do.\"\n\n\"You don't...\"\n\n\"Are you from the insurance company?\" She asked the other man and he nodded \"This won't be a problem, right? You still cover his expenses if I house him at my place?\"\n\n\"Of course. It makes no difference to...\"\n\n\"Great, let us get started then Jamie, time's wasting.\"\n\nThe two men stared at her when she turned around and walked back to her car. Then they exchanged a look between them and Jamie shrugged his shoulders before he followed her. He knew her well enough by then to recognise her determined mode, and in truth it would save him a lot of trouble to accept her invitation.\n\nThey rented a trailer and moved some of the more delicate things, like his paintings and other art, while hired hands took care of the rest. It took them all day and the stable was quite full after the furnitures had been spread out inside to allow them to 'breathe'. His clothes were for the most part only smelling from the exposure to the smoke and hung outside in the breeze to ventilate.\n\nExcept for dinner Jamie spent all that first evening with his art, looking for damage and moisture on the canvases and setting them out to air. At dinner he had his chance to speak to Marie, hopefully with her in her normal, less determined, mode.\n\n\"Marie, thank you for all the help, storing my things and letting me occupy the top floor in your home. It is very kind of you and I appreciate it more than I can express, but you didn't have to do it really.\"\n\n\"I know, I became obnoxious again, didn't I? Decided for you and not letting you say what you thought. I'm sorry Jamie.\"\n\n\"No. Well, yes you did but obnoxious is too strong a word for it. I am very grateful anyway and you helped a lot even though I would have managed anyway. What I am wondering is how a soft-spoken and timid woman like you can change into a totally different person who control any situation with confidence?\"\n\n\"It's not confidence, rather fear. In this case though I knew what it was about, I have had a house fire myself years ago and remember all those details that took so much time. I can't help with them since I don't know what they are for you, but I can be a friend and try to help. I think I owe you that. Anyway, this house is big enough for both of us so why not let you stay here?\"\n\n\"You don't know me very well, I could be a sex-crazed murderer for all you know and you invite me to stay under your roof.\"\n\n\"I have been around you long enough to take the chance. I may know more than you think and if I should be wrong I can defend myself.\"\n\n\"Okay. Anyway, thanks for everything. I won't disturb you more than necessary. May I borrow your car tomorrow, with you as my chauffeur? I want to buy a car to not be dependent on you and then there are a few of those details you mentioned to take care of. If things work out I might be able to continue painting the house in the evenings at least.\"\n\n\"Sure, anytime, and the paint can wait if you have other things to do.\"\n\nOn the top floor Jamie had trouble falling asleep that night. He was tired enough to sleep standing up but with what had happened his mind was on alert. A new place with its own sounds, a new -- or rather very old -- bed that was huge but not as comfortable as his own. There were many things that kept him awake but finally he drifted off.\n\nHe woke up with heart pounding some time later, shivering from something cold moving over his chest. It had a soft feel, teasing him, but he was unable to identify it. He reached for the bedside lamp to turn it on but was stopped by that cold... something, that pulled his hand back to his side and in under his body. It was then that he realised that the covers were off and so were his shorts that he always wore in bed. He learned it by something wet and cold closing around his cock.\n\nThe old truth that cold was the best way to get rid of an erection didn't seem to apply this time. Instead he got even harder, harder than he ever had experienced before, and he gasped as that wet cold pressure started to move up and down.\n\nThen it stopped and disappeared for a while but when it returned it covered more of his body: the outside and top of his thighs, crotch, abdomen and -- a few seconds later -- two places on his chest as well as his lips.\n\nIt felt like... yeah, someone straddled him with hands on his chest and lips against his, but cold as death itself. He tried to roll away but was firmly held down as if by a great weight. He tried to get his arms out from under him but they were pinned.\n\nOnce more something closed around his cock, all the way down on it. Still it was as cold but not as wet as the first time, and then it began moving up and down. He felt the cold on his thighs and abdomen move at the same rhythm as the pressure on his chest changed too. A cold point pushed his lips open and slipped in to touch his tongue.\n\n'Christ, some... thing is riding and tongue kissing me!' he realised, and it was effective too: he was about to come at any moment. Surely it couldn't be Marie, she would have had to lay in an ice packing for an hour to be so cold, and anyway why would she force him? A word would have been enough to convince him. She was a solid person too and this... thing was only cold touches without substance. His thoughts turned to the stories he had heard about this house, about sexual ghosts: fuck if it wasn't true after all!\n\nHe came hard from the ride but to his surprise his warm cum landed on his chest and belly. Of course, something without substance couldn't contain it, could it? Then again, it had held his arms and forced them down, and he sure could feel the pressure on his body. No wait, he couldn't feel the pressure any more, not even the cold. What the fuck just happened? Had he woken from a dream after coming or what?\n\nMarie wasn't aware what went on upstairs, she had enough with the new development of her own dreams to care anyway. Nothing was covering her body once again but this time there was a cold pressure on top of her and that cold rod that pounded her was relentless. What felt like fingers of ice had hold of her shoulders and pushed her down with every stab inside her. How could it arouse her this much to be used like that? She hadn't asked for it and not taken any initiative for it to happen. She was a passenger taken for a ride, a shivering cold and exhilarating ride that would soon make her come.\n\nShe gasped and moaned from the treatment, rising higher and higher towards the climax. Her body started to clench up, her breath caught in her throat for a second and she erupted with clenched teeth to hold back a scream.\n\nNo more had her body relaxed again when the cold pressure disappeared, but only long enough for her to sigh from relief that it was over. Then the cold returned and the icy rod was back inside her. God, a ghostly gangbang dream, that was all she needed! Didn't need, she corrected herself but changed her mind again as another orgasm took her.\n\nAt breakfast Marie and Jamie sat silent in their own thoughts, glancing at each other once in a while.\n\n\"Have...\" they both finally said at the same time to break the silence, and stopped abruptly.\n\n\"You first.\" Jamie offered, happy to hear her voice at last.\n\n\"Have you slept well? I mean, after the fire and everything, and in a new place and a new bed?\"\n\n\"I had some trouble falling asleep and woke up one time but I feel very well rested I must say. And you?\"\n\n\"Fine, I wake up once every night too, or if it is a dream, but I sleep very efficiently here. Any strange dreams?\"\n\nWhat was she aiming at? It was almost as if she knew about... but no, she couldn't, could she?\n\n\"Define strange to me please. All dreams I can remember has been weird one way or another so I can't really say what qualifies.\"\n\n\"You know, freaky things, ghosts and stuff. Remember what you told me about the stories regarding this house? Things like that would likely pop up in your dreams now that you live here.\"\n\n\"I also told you that I didn't believe in those stories so that ought to disqualify me from having any dreams along those lines. Is that what you dream about after I told you?\"\n\n\"Not really. Well, sometimes I do but most of the times I can't remember my dreams.\"\n\nWas that a lie or the truth, she asked herself? If the sex was her dreams it sure was a lie but it seemed so real that it almost had to be true. But that would mean that ghosts existed. Or that she was insane. or...\n\nShe realised that Jamie was speaking to her again.\n\n\"...go look for a car. If you want you can stay here and I will come get you when it is ready to be picked up. Might be more fun to stay here than to look at cars and wait in offices.\"\n\n\"No, I'll come with you, no problem. Might actually be fun to meet some people in town, I bet the gossip about me is juicy.\"\n\n\"I think you may be right about that, and now I will be a central part in it too. But neither of us will hear a word of it.\"\n\nJamie got a car that day and took care of a few other things of importance. A couple of drying fans was rented for the stable to hurry up the drying, textiles were sent away to be cleared of the smell.\n\nThey returned to the paint job a week later, at least part time, and finished the outside. Jamie asked Marie if she would mind if he painted pictures of some of the rooms in the evenings. It was after all what he did for a living and the house had many motifs to offer.\n\n\"You go right ahead. No need to ask permission for anything, you live here too you know.\"\n\n\"Thanks, but I prefer to ask anyway since it is your house.\"\n\nSo he started with the saloon -- or huge living room as it now was -- and spent several hours on it before he sighed and sat passive, looking at the canvas. Marie entered from the kitchen right then and noticed his expression.\n\n\"Anything wrong Jamie? You look a bit exasperated.\"\n\n\"Well, yeah. This room looks fantastic in itself, sexy, erotic, but it is dead. There should be men and women here to give it life. Women in fancy dresses or in there underwear, even naked. It is an old whorehouse after all and the furnitures suggests so too, but without women it isn't.\"\n\n\"But can't you add some women out of memory? Surely you have seen films with a setting like this?\"\n\n\"Yes of course I have, but the problem is to make it look natural. Dimensions, shadows, positions, details that I can't even remember if I don't see them. Take you right now as an example. The light from the chandelier highlights your hair and face but casts shadows under your...hmm... bust. You're wearing jeans shorts and a t-shirt, who knows how an old fashioned dress would reflect the light and cast shadows? I can't do it justice without living people.\"\n\n\"Can't you hire a couple of models then?\"\n\n\"Out here? In the middle of nowhere? No way! I have tried to get someone to pose for me before, fully dressed and in public that is, and got nothing. I don't think it would be easier in here dressed as whores... Then there is the dresses, I don't have any and they would be expensive to get, just as models from out of town would be.\"\n\n\"Well, give it up for tonight Jamie. It's getting late, perhaps we can think of something tomorrow.\"\n\n\"Yeah, right. Very likely...\"\n\nAfter a stimulating night for both of them (as usual and separately) Marie had a suggestion.\n\n\"Jamie, I think we should have a look up in the attic.\"\n\n\"What for? We checked that as well as the roof and basement before we started to paint and it looked alright.\"\n\n\"I know, but that was not what I was thinking about. Grandma was very interested in the history of the house as I have told you. She renovated the house and got suitable furnitures. There are several chests in the attic, I saw them when we were up there, but I haven't looked inside them yet. Perhaps there are time typical things there that may help.\"\n\n\"Okay, if you think so I don't mind but I strongly suspect that all we will find is moths and dust.\"\n\nThey went up to the top floor and Jamie opened the hatch in the ceiling to the attic and pulled down the ladder. With electric torches in hands they climbed the ladder and stumbled on a chest almost at once. Letting their torches move around they noticed many more as well as a few knapsacks.\n\n\"Perhaps we should bring them downstairs instead of opening them up here?\" Marie suggested \"If they contain anything useful we can't leave it up here and if not we should throw it away.\"\n\n\"Good point. It might also prevent us from swallowing more dust than necessary. Go fetch a rope and bring it up here so that we can lower the chests without climbing the ladder.\"\n\nAn hour later they sat in one of the bedrooms on Jamie's floor with the first chest open between them. Old books filled it and opening one it was dated 1879.\n\n\"Not exactly up to date but wow!\" was Jamie's comment.\n\nThe next chest contained a pair of revolvers and framed photographies. Some portraits, some group photos, all of them of women. On the back of each a name and a year was scribbled.\n\nThe first knapsack they opened made Marie gasp for breath -- as much for the dust released as the contents. Dresses, old style. She picked up the first holding her breath and held it up in front of her. It was full length, reaching the floor, and wide. The shoulders were bare but the sleeves long. It sure was generous revealing a lot of bust and the waist had lacing at the back to narrow it and lift the bust even more. The colour was was a dull red, probably hampered by the dust.\n\nThe next was almost identical but blue with white trimming and the last one had short sleeves and was yellow.\n\n\"Oh my God!\" she exclaimed \"These can't be originals, can they? I mean, they look almost new to me except that they need washing.\"\n\nJamie took a closer look at the red dress and suddenly laughed.\n\n\"Machine wash 140F, no tumbling.\" he said and shook his head \"I don't think so, no.\"\n\n\"Well, that is a relief in a way. I would be afraid to clean them otherwise. So grandma ordered time typical dresses to be made too.\"\n\nTheir continued search resulted in more dresses, underwear, shoes, hats and accessories.\n\n\"I think this will solve your problems with the painting Jamie.\" Marie said after they had brought all the clothing down to the wash room.\n\n\"In what way? I agree that the clothes fit in with the rest, but there are no bodies in them, still no life.\"",
        "\"You'll see. Tomorrow perhaps, or in a couple of days.\"\n\nThat was all she said about it but she smiled happily.\n\nJamie spent most of the next day at his house to oversee the repairs. From the look of it there was no progress at all: on the contrary the floor had been removed and some walls opened to check for water damage.\n\nWhen he returned to the house on the hill late in the afternoon he found two rental cars parked beside Marie's Volvo and in the lilac arbour Marie sat with four other women. They were all in their early thirties and they all wore the old dresses they had found in the attic. Jamie stopped short as he saw them and stared open mouthed.\n\nAs he stood there the front door opened and three men exited. Two of them wore cowboy outfits as seen in many westerns, the third had a stylish old fashioned suit on, a revolver at one hip and a star on his chest.\n\nFor a second Jamie thought he had lost it in some way, then Marie laughed and got to her feet.\n\n\"Jamie, these are old friends of mine and also... co-workers you might say. Lisa in the red dress, Yolanda in the blue, Amanda in the yellow and Sandy in the brown. The 'sheriff' is Carl, Lisa's husband, the guy with the blue scarf is Ben, Sandy's fianc\u00e9e, and the last guy is Bruno.\"\n\nNods, waves and 'hellos' from them all, but Jamie was slow to respond.\n\n\"Now you have bodies in the clothes, life. It is up to you to decide what you do with it and you have at least a week, though not 24 hours a day.\"\n\n\"But... how? Why? Who?\"\n\n\"The 'who' is me. I called them the same evening you got frustrated with your painting and invited them to come and visit. 'Why' should be obvious: to add people to the painting. I also missed them, it's been a year since last time I saw them and they didn't protest when I asked them to come here and play cowboys and whores. 'How' doesn't matter, does it?\"\n\n\"No... no I guess not. Well, this was a surprise. A shock actually.\"\n\n\"A shock? You wait until we start to undress baby!\" Yolanda giggled and stood, put a foot on the chair she had sat on and pulled the dress up to reveal her entire right leg.\n\n\"So, Jamie, do you want to direct us or should we improvise?\" Marie asked when they had gathered in the 'saloon' after dinner.\n\n\"I... maybe you better improvise and then I can adjust it if needed?\"\n\n\"Sure thing. You heard him, guys and dolls.\"\n\nJamie watched fascinated as Carl stood leaning against the bar with Lisa pressing her front against him, breasts pushed up to the degree that they almost popped out of the dress. Yolanda draped herself on a couch with dress hitched up high, Amanda sat backwards on a chair in profile, showing splendid legs. Ben sat on a couch with Sandy on his lap. Marie, who wore a black dress with red trim, stood behind the bar with Bruno groping a breast outside the dress.\n\n\"Drinks anyone?\" Jamie asked \"Anyone smoke? No need to light a cigarette, but hold one. Or a cigar.\"\n\nMarie brought out some bottles and glasses as well as cigars, and the others selected what they wanted and returned to their previous positions.\n\n\"Uh, Marie? Is it okay with you...?\" Jamie asked, nodding at Bruno's hand on her breast.\n\n\"Sure, he has had his hands all over me plenty of times before. Would you prefer if I bared the tit? Or both and Bruno grabbing them?\"\n\n\"Eh... no, no that's okay. Only wanted to make sure you were comfortable. Yolanda? A little less thigh perhaps?\"\n\n\"No problem. If you don't like them...\"\n\n\"No, no. I do like them but I think back then it was more teasing than bluntly showing. Maybe I'm wrong. Okay, hold your positions while I outline them.\"\n\nIt took time but Jamie enthusiastically continued to fill the canvas. The clock passed nine, ten. A break was called then to limber up and 'powder noses', then they proceeded. Eleven o'clock, midnight.\n\nA clock chimed somewhere and Marie and Jamie looked in the direction of the sound, than at each other. Neither of them had heard it before. The clock they knew about, but it had never been activated.\n\nYolanda's dress came to life as the last chime toned out. It was pulled up over her head and off, her underwear being removed almost at once and she screamed as her legs were separated.\n\nSandy fell sideways off of Ben's lap and all their clothes flew from their bodies. Ben sat where he was but started to moan loudly. Sandy was turned around, kneeling on the couch beside Ben with her ass in the air.\n\nClothes were flying everywhere for a moment and then when they were all naked the lights went out and all they could see were faint glows near each and every one. Marie lay on the bar counter with legs spread wide. She recognised the cold against her body, one spot on each breast, another between her legs.\n\nJamie lay on the floor and felt the wet cold surrounding his cock. He knew as well as Marie what would happen and from the sounds around him all the others would get a comparable experience.\n\nWhen the light returned they lay all around on couches or the floor. The sound of moaning and gasping for air seemed to echo around the room, interjected by Yolanda's chanting:\n\n\"Oh my God. Oh my God.\"\n\nShe was the first to move, sitting up on the couch but still with legs spread wide.\n\n\"What the fuck happened? I have never experienced anything like that, not even in 'Yolanda's marathon'. And the way I came from it: fucking awesome!\"\n\n\"Marie!\" Bruno almost screamed \"Did you lure us here for group sex? You should have told us you know, Lisa and Carl, Sandy and Ben: they might not want others to screw them. Just because we were all in the business doesn't mean that we all are like Yolanda.\"\n\n\"What the fuck do you mean by that: 'like Yolanda'?\" Yolanda demanded to know, no longer sounding exited but insulted.\n\n\"We all know that you are a sex addict, that's what I mean.\" Bruno replied calmly.\n\n\"Sex addict? Just because I love sex...\"\n\n\"Stop it!\" Lisa screamed and dead silence fell over the room until she continued \"That wasn't ordinary sex or gangbanging or whatever. Did anyone feel a face? A whole body?\"\n\nSilence once more and then Amanda spoke.\n\n\"Marie, it wasn't any people involved in fucking us, was it? It was some kind of ploy, machines or something. Like a Halloween prank on a much larger scale, right? No living person can be that cold, even their cocks were like ice.\"\n\nSilence.\n\n\"Marie, it's alright to pull pranks on us, we can take it.\" Lisa pressed on \"Had it been real people fucking me I would have been pissed, no matter how many times or how hard I came, but tell us about it. How did you do it?\"\n\nMarie lost it all of a sudden.\n\n\"I didn't do anything! I have no idea what it is or how it works, but I should have guessed that this could happen. Now I know that I should have guessed it. I've been fucked in my dreams every night since I moved in! At first it was touches, like a teasing breeze, once every night, now I get gang-banged instead. I dream that I wake up freezing and is used. No body, only cold spots and a cold rod inside me and I come again and again. Then I wake up feeling great but a bit sore in the morning.\"\n\nYet again silence fell over them. This time it was Jamie who broke the silence.\n\n\"That is what has happened to me too since I moved in, but I have an idea about it, and I think Marie does too although she is afraid to say it out loud: ghosts.\"\n\n\"Ghosts?\" Ben chuckled \"That's a good one! Why not aliens with bodies of interstellar gas?\"\n\n\"I'm not saying it is the truth or easy to believe but the fact is that people has said that they were raped by ghosts here some twenty years ago, and this was a whorehouse in the 19<sup>th</sup> century.\"\n\nAll eyes turned to look at Jamie and all but Marie seemed to expect a laugh and a 'Fooled you!' from him. They didn't get it, his face was serious.\n\n\"Let's get dressed and I will tell you the story. Marie can tell you about her family history to confirm some of it, then I would like to know a bit more about you all. 'Yolanda's marathon' and 'sex addict' was mentioned as well as you all being 'in the business' before. Not that I care or need to know but if I tell you crazy stories about haunted whorehouses it seems fair that you explain a thing or two to me too.\"\n\nSome clothes were easy to find and get, others had been spread to strange places like a pair of thong panties inside a bottle of scotch -- not opened yet. That seemed to comfort Marie in a strange way.\n\nWhen they were all dressed again -- except for some items like those thongs -- they sat down on the couches, close together, and Jamie and Marie told their stories. They also elaborated their previous experiences in the house. After that Marie turned to Jamie.\n\n\"I told you that I am retired and you asked if I had been a stock broker or something. I didn't give you a straight answer but it was far from it: I have worked in the porn business and so have the others. Some were hardcore porn actresses, some nude models for men's magazines. It doesn't matter who did what but that was what we did. The money is good but it can be a tough life and at least girls has a relatively short career before younger girls take over.\"\n\n\"No need to be diplomatic about my career.\" Yolanda cut in \"I did hardcore and 'Yolanda's marathon' was a video where nine guys did me, one after the other. Not much pleasure to be honest, I faked orgasms all the time as is practice. Tonight I didn't fake even once.\"\n\n\"Anyway,\" Marie took over again \"I was contacted by an old man who wanted a younger woman to show off and I thought 'what the heck'. He was rich, too old to get it up more than once a week and didn't want any kids, so I married him and quit the business two years ago. I had earned enough to get by and when my husband died after nine months I inherited his money too.\"\n\nShe looked awkward, embarrassed, but no one else seemed to care, not even Jamie.\n\n\"Okay, thanks for telling me but like I said it doesn't matter to me. I guessed that it was something like that anyway. You have all done porn and I have started to believe in ghosts so I guess we are kind of even in being out of the ordinary. At least you should have the experience of sex relevant for what happened tonight.\"\n\n\"Experience?\" Sandy snickered \"Well, kind of. Let's cut the crap here. I was a nude model 'only', didn't do hardcore at all, but sure I got banged by photographers and others. Sometimes willingly, other times not so much. Like Yolanda said it wasn't much pleasure for sure but tonight it was. Even so I wasn't willing, Ben is the only one who can have me now.\"\n\n\"I'm sorry Sandy.\" Marie apologised \"I should have said something, anything, but I couldn't convince myself that what happened to me wasn't dreams.\"\n\n\"Not your fault honey. I can't believe what happened even now, but the thong in the bottle is hard to explain. I looked at the bottle when you served the drinks and was about to ask you to open it and give me a shot, but I went with the wine instead. I saw it wasn't opened and there was no thong in it then.\"\n\n\"Yeah, I saw it too.\" Carl agreed \"The question is, what do we do? Ghosts or no ghosts, from what you two say we will probably be fucked every night if we stay here.\"\n\n\"Not a problem! I'll stay and cherish every minute of it!\" Yolanda assured him.\n\n\"I'll stay too, at least for a while.\" Amanda said \"Cherish is too strong a word, I want to decide for myself, but I sure am curious.\"\n\nBruno was next.\n\n\"I have nothing better to do so I'll stay. I would prefer to see the gal, at least if she's pretty, but it could be a lot worse.\"\n\nLisa and Carl exchanged looks, and so did Sandy and Ben. Then they nodded.\n\n\"If it is ghosts that use us it isn't a problem. Had it been people of flesh and blood I would have left at once never to return.\" was Lisa's comment and the other three nodded again.\n\n\"Well then, let's call it a night. Or morning perhaps: what time is it?\" Marie wondered.\n\n\"Five thirty.\" Ben replied \"Not likely that there will be any more sex now, right?\"\n\n\"No, I don't think so.\" Jamie answered \"I have woken up at this time a few mornings after being used and nothing has happened.\n\n\"Don't be too sure Ben, maybe I should make sure that you remember what I can do to please you!\" Sandy joked, or was it a joke?\n\nEveryone laughed anyway as they left for their rooms.\n\nThe following days they visited ghost towns during the days, joking about not being fucked as they did, finished the painting in the saloon and started on new settings in the evenings, making sure to stop before midnight, and spent the nights in their rooms. At breakfast they compared their experiences and Jamie got more comfortable talking about it.\n\nThe two couples -- Lisa and Carl and Sandy and Ben - returned to their homes after ten days, returning the rental cars since the other three decided to stay longer and would manage with Marie's and Jamie's cars.\n\nThe sets for the paintings became more intimate and less clothing was used. Different bedrooms were used as well as different combinations and numbers of models.\n\nA theme at breakfast conversation became if the sex got more intense or not, if their counterparts were more 'there' than before. Amanda thought she had seen a hint of a face above hers and Bruno swore he had seen a tit. Proof was hard to find of course and none of them trusted their own senses.\n\nYolanda came up with an idea for an experiment of a slightly different kind.\n\n\"Bruno, why don't we start fucking a few minutes before midnight and see what happens? We know that we get undressed and used, man or woman doesn't matter. But if we are already doing it, will it stop them or will they stop us and take over? I'm curious and really want to know. Are you willing to assist?\"\n\n\"Stupid question: of course I am! You're a good lay any time and it is an interesting question. Tonight then, anyone want to watch?\"\n\nThe others shook their heads.\n\nBruno and Yolanda borrowed Jamie's car to go sight-seeing again that afternoon. Jamie suggested a new painting with Marie and Amanda naked together in bed. Marie snickered ironically.\n\n\"I have no objection, but frankly Jamie, why don't you do as Yolanda and say what you really want instead of ogling us? I doubt that it was common for two women to fuck each other 130 years ago so calling that a time typical illustration would be a stretch in my opinion.\"\n\nAmanda giggled as Jamie blushed.\n\n\"I think you hit the nail on the head there Marie.\" Amanda teased \"Is it you or me he want to screw I wonder?\"\n\n\"Both of us of course!\" Marie replied \"Any guys dream, if only he could stay hard for as long as it would take, is two or more women at once and making them beg for mercy. Isn't that the truth Jamie?\"\n\nHe squirmed like a worm on a fish-hook, not knowing where to look, but stayed silent.\n\n\"Alright,\" Amanda told him then \"Marie has already agreed to do this set, but if you want me to do it you have to tell me: is that what you want, to fuck us both at the same time? Whatever the answer you have to convince me, and don't even think about lying.\"\n\nHe tried to avert his eyes from contact with theirs, but like a magnet is drawn to the opposite pole he was drawn to the two women present. Finally he nodded.\n\n\"Yeah,\" he sighed \"after that first night in the saloon and what you told me about your previous careers I have thought about it quite a bit. Please understand that I don't look at you as objects but I wonder what it would be like. All of you were, are, beautiful, sexy, but Yolanda is simply too much. The two of you are calmer, not vulgar like her, at least until now. I feel more comfortable around you so if I would try anything like that it would be with you.\"\n\n\"Good, then we will give you a show now and tonight we will do like Yolanda and Bruno, start to fuck before midnight and see what happens, but a threesome.\"\n\nAfter that declaration from Amanda she started to undress and Marie followed suit. Jamie gathered his wits as well as his painting gear and they moved to Marie's bedroom to get started on painting number seven.\n\nAfter dinner that evening Marie went upstairs to have a closer look at the old books in those chests brought down from the attic. The clothes and other attire had held her focus together with the sex and talk about sex until then, but this was a good time to examine the books while waiting for their experiment to begin.\n\nMost of them didn't interest her more than noting the authors name, the title and printing year but further down she found a newspaper, discoloured and frail. The date said November 4<sup>th</sup> 1891 and among the articles one mentioned 'the scandalous behaviour of Ms Montgomery 5 days prior'. The mention of the name sent a jolt through Marie and she eagerly read the rest.\n\nMs Diane Montgomery had been seen in her underwear at noon that day in front of her house together with several of the women staying in her home. To make things worse they had undressed further until the Sheriff had put an end to it and made them go inside. Now was the time to drive them out and follow the Lords bidding, wasn't it?\n\nAt the bottom of the chest, under that newspaper, Marie struck gold: diaries written by Diane Montgomery, Celia Montgomery and Anne Montgomery. Whoever they were -- she didn't recognise the names -- she was convinced that they must have been related to herself one way or the other. If nothing else their last name suggested it clearly.\n\nThere were more than a dozen of those diaries and she brought them down to the saloon together with the newspaper.\n\nMarie and the others leafed through that treasure and read excerpts out loud when they found something interesting or funny. All three authors had apparently had sharp tongues and what they wrote were no less pointed, often with ironic twists.\n\nFrom the few excerpts they read they found that the newspaper editor, the church minister, sheriff and judge - among many others -- had been clients of the house. Not officially of course, they used a back door out of sight both on the outside and inside, but still there were frequent visits from them and all seemed to be noted in the diaries naming the girl who served each one.\n\nAn hour before midnight Yolanda withdrew to her room with Bruno, and soon after Amanda and Marie pulled Jamie to his feet.\n\n\"Time to warm up.\" Amanda said smiling with an expectant glint in her eyes \"In your bed or here?\"\n\n\"His bed.\" Marie decided in Jamie's place \"I'm curious about his nightly visitor. Even if it seemed to be crowded here that first night I'm hoping to meet her, whoever she is. A foursome with her perhaps?\"\n\nJamie didn't resist as he was towed up the stairs.\n\nIn his room Marie undressed him while Amanda ran her hands over his body and nibbled his earlobes from behind. He stood frozen in place, letting them do to him whatever they wanted. When his underwear fell to the floor and his erection was exposed Amanda's hands moved down his body to take hold of it.\n\n\"Not bad.\" she commented \"Not porno size but definitely nothing to be ashamed of. The question is if it has the stamina? Do you want to start Marie?\"\n\n\"Oh yes, let's see if he is trigger happy.\"\n\nMarie kneeled in front of him and started to lick along the shaft from the balls to the head. His dick twitched on contact and stood even firmer. Jamie gasped and pushed his hips forward. Amanda tickled his neck with soft kisses, and his shoulders shot up automatically in response.\n\n\"Definitely sensitive.\" Amanda giggled \"You better let him unload at once so he calms down a bit.\"\n\nMarie acted on the suggestion and took him deep in her mouth, tongue outstretched and moist lips gliding along the skin. She gagged once and took him down her throat to Jamie's fascination, her lips touching his balls. That was all it took and he erupted, stabbing further down her throat with hands on her head.",
        "Marie let him finish and then moved back enough to let the softening dick slip away, licking it as it withdrew. Standing up she then locked on to his lips and shoved her tongue into his mouth.\n\n\"Get onto the bed Jamie. What you saw earlier today was nothing compared to what you will experience now. You will be hard again soon enough.\" Amanda whispered in his ear.\n\nHe had no more than laid down before his two companions started to kiss and touch each other. Buttons came undone one at a time, strings were untied. Their clothes were loosened and moved out of position. A tit popped out from a dress, Amanda's, and Marie cupped it with a hand, rubbing fingers over the hard nipple.\n\nMarie withdrew her arms from the sleeves and pulled down her dress to the waist, exposing both her breasts. Amanda put her face between them, a hand on each and pushed them together. Backing away a few inches she moved her head sideways, tongue sticking out and licking its way before her lips latched on to a nipple and sucked hard. Marie gasped and a shiver ran through her body.\n\nSeemingly to get away from the attention she sank back on her knees, the nipple between Amanda's lips stretching before it plopped out. Marie lifted Amanda's dress skirt and dived in under it. A pair of panties came into view around Amanda's ankles moments later and it was her time to gasp.\n\nBy then Jamie's erection was on the rise again, sooner than he ever thought possible. Marie turned Amanda and her self around and pushed Amanda down on the bed, lifting the skirt she was under up over Amanda's head to reveal her face pressed against Amanda's pussy.\n\nJamie inched closer and put his hands under Amanda's skirt on both her breasts and massaged them gently.\n\n\"Jamie, take over eating her.\" Marie ordered standing up \"Sixty-nine her, you on top.\"\n\nHe lay down on elbows and knees with his face where Marie's had been a moment ago. Moisture glistened on Amanda's swollen lower lips and he licked along the slit at the same time she licked over his cock head. Both of them drew in ragged breaths.\n\nLooking up he saw Marie remove her clothes and get onto the bed. There she lay on her back.\n\n\"Move over to me now and let Amanda undress. Five minutes to midnight, as soon as Amanda is ready we start for real.\"\n\nJamie moved to lick another slick slit with Marie licking his shaft once more. Amanda didn't waste any time stripping and rejoined them.\n\n\"Roll us over Jamie and continue eating me. Amanda will ride you into oblivion if we aren't disturbed.\"\n\nAnother change of position and Marie sat up over his face while Amanda straddled his hips, entering him in her as she sank down.\n\nHis dick had no more than bottomed out when the lights went out and his nightly visitor got involved.\n\nMarie felt her breasts being cupped and held up and the nipples pinched hard by cold hands and fingers. Other cold fingers ran lightly over her back down the spine, making her shiver excitedly. At the same time Jamie took hold of her clit with his teeth, lightly but very noticeable, and she gasped violently.\n\nAmanda had another experience. She felt something cold separate her pussy lips above where Jamie's cock entered her. The cold moved up and down, teasing her. Another cold touch on her ass spread her ass cheeks wide. The cold moved to her back door, pressed against it, and Amanda groaned and leaned forward until she encountered Marie's body. On contact Amanda's nipples were also pinched and held against Marie's.\n\nAmanda felt her back door open up little by little, the cold entering her, expanding and going deeper. She yelled into Marie's face, locked nipple to nipple as they were by the cold, and pressed down hard on Jamie's cock. Both holes filled up, one by Jamie and the other by the expanding cold, it felt like she would split. Moving her upper body caused her nipples to stretch and pull at her breasts. The cold touching between her pussy lips concentrated on her clit.\n\nOver stimulation! Too much input from everywhere! She couldn't breathe because of it and panic took over her mind. Amanda started to move feverishly to get away from it all but her nipples were locked onto Marie's, her pussy was filled by Jamie's cock and her ass...\n\nShe erupted without further warning, a strangled growl leaving her mouth. In a feeble attempt to steady herself she threw her arms around Marie and pulled them together. Her hips sank down, taking Jamie as deep as he could get, for another firm position.\n\nHer body trembled, her pussy clenched on the cock inside, her ass joined in trying to strangle the cold intruder, her nipples ached still being pinched even though pressed into Marie's breasts. It was like nothing Amanda had ever felt before and in the midst of it things got worse: Marie came too.\n\nMarie couldn't see her friends orgasm explode in her but she could feel it: the torso trembling against hers, the arms gripping her, the fingers clawing her back. Jamie also geared up on his attack on her pussy because of it, lapping her clit like a crazed dog while stabbing fingers inside her faster and faster.\n\nMarie grabbed her friend the same way she was held herself and pressed her pussy down on Jamie's face. The rush of release hit and she screamed. Jamie continued working her and she wished he would stop. It was too much, too intense, too sensitive, but she couldn't stop him, clinging to Amanda for her life as she was.\n\nHer lower body was wet and warm, convulsing against the lapping tongue and the fingers moving inside her. Would it never stop?\n\nJamie's tongue suddenly stopped and so did his fingers. His face moved under her and both Marie and Amanda felt through their bodies how he went rigid and they also heard a 'Fuck!' followed by a long groan as he lifted his hips and came deep inside Amanda's pussy.\n\nMarie was the first to move. She simply fell to the side, breaking the bond with Amanda as she fell. She moved her legs free of Jamie and then lay still, panting hard.\n\nWithout Marie's support Amanda leaned over forward until she lay on Jamie's chest. The cold on nipples and clit and in her ass had disappeared but Jamie's semi hard dick was still inside her pussy. She was exhausted, they all were.\n\n\"Re...open...my...house.\" a gravely voice said from above \"Give...us...customers! Give...us...sex! Open...whorehouse...for...us...to...work...in!\"\n\n\"What? Was that you Marie?\" Jamie asked in surprise.\n\n\"No... not me. Still catching...my breath.\"\n\n\"And it wasn't me either.\" Amanda added.\n\n\"Who the fuck was it then?\"\n\n\"Diane perhaps.\" Marie panted \"Or Celia. Or Anne. Or another of the Montgomery whores. What does it matter? We were told what they want anyway and it might be better to distribute the work-load more evenly. I'm not sure I can take these fucks for the rest of my life.\"\n\n\"Amen to that.\" Amanda replied softly and rolled off from Jamie. Before long they were asleep, cuddling together.\n\nAt breakfast five people sat around Marie's kitchen table, eating and talking about the night. All of them were sore but invigorated, and Amanda was fascinated by that. After they had recapitulated the nights events she asked about it.\n\n\"How can we sit here feeling strong and well rested, sore but still ready for another day? Shouldn't we feel like crap, hardly being awake after a night like that?\"\n\n\"Maybe we should but that's how it's been all the time since I moved in.\" Marie answered \"I've been used every night and still I haven't been tired. That's one reason why I thought that it happened in my dreams. I can't explain it but that's the way it is.\"\n\n\"What about what that voice said? Will you open the whorehouse again now?\"\n\n\"Not a regular whorehouse at least. I quit the porn and so did the rest of you, Jamie excluded since he wasn't in the business in the first place. No, I have moved on from that and have all the money I need. Then again, a haunted whorehouse served by ghosts could open as a Haunted House. What the ghosts do is none of my business, is it? If they scare people by screwing them or say 'boo' doesn't matter much as long as all visitors accept to take the consequences. If they don't they're not welcome.\"\n\n\"Sounds like a plan to me.\" Marie agreed \"Need any help? A guide perhaps, or a receptionist? A night clerk?\"\n\n\"Oh yeah, I need help to figure things out first of all. Interested?\"\n\n\"Is good sex a drug? Of course I'm interested!\"\n\nJamie, Yolanda and Bruno nodded agreement\n\n- - - - - - - - -\n\n\"The Haunted Whorehouse, good morning. My name is Amanda, what may I help you with?\" a pleasant female voice answered when I called the number a female friend of mine had recommended.\n\nI had mentioned that I felt alone and depressed and needed to get away for a while. After 30 years being married to the same woman, the only one I had ever loved, I was alone. In a way it had been a blessing when Annie finally passed away, relieved of the constant pain and dependence on others for the slightest thing. Even so she left a huge emptiness within me, in my heart and soul.\n\n\"I know just the right place for you!\" my friend had said enthusiastically \"I've been there myself and it is beyond anything you can imagine. I won't say any more than that, but try it.\"\n\nI Googled it of course and wasn't impressed. It sounded like Disneyland or something, fake ghosts in a fake house with fake effects. Not my kind of thing and I told my friend that the next time I saw\n\nher.\n\n\"No, it's nothing like that! I admit that it sounds that way but I promise that you won't be disappointed once you get there.\"\n\nShe sounded convinced and I trusted her judgement so I made the call.\n\n\"My name is Ed White and I would like some further information before I decide whether to book a room or not.\"\n\n\"My pleasure Mr White. Anything in particular you want to know?\"\n\n\"Yes, a friend recommended The Haunted Whorehouse to me to get over a depression after I was widowed. The thing is that I despise amusement parks and such and especially badly faked haunted houses. Cord pulling chairs over the floor, loudspeakers saying 'Boo!' every other second: it annoys me terribly.\"\n\n\"Oh, I see Mr White. First of all I want to express my deepest sympathy for your loss. Then I want you to know that we have a 'money back' clause for all bookings. It says that if you can discover any kind of fraud or fake we will refund all expenses for your visit, from the moment you left your home until you got back there. In the eight months we have been open we haven't paid a single dollar back. No one has even asked about it after their first night.\"\n\nI didn't know what to think about that. Hard headed businessmen that disregarded that clause perhaps? Well, maybe they were simply really good. I decided to take a chance on that.\n\n\"Okay, if you say so. Do you have a room next month? For a week?\"\n\n\"Before we go into that I have to make it clear that we insist that you have a life insurance and no heart condition Mr White. And that you are an adult.\"\n\n\"As for an adult I have been for 34 years now so that is a 'yes'. For the rest the answers are 'yes' and 'no' respectively. Why, do you scare people to death or what?\"\n\n\"No, Mr White, we do not scare people to death but there are other reasons. I also want to point out that being in a relationship with jealousy involved might cause problems. Since you are a widower I suppose that is not a problem?\"\n\n\"No.\"\n\n\"I apologise for making that question, but I have to make sure. Now, about a room for a week next month. We are actually fully booked the next six months but you are in luck. The owner of this place is about to get married soon and will be away on her honeymoon. Her private rooms are available for a slightly higher price if you are interested.\"\n\nI accepted the offer and now I am on my way there. I wonder what it will be like? "
    ],
    "authorname": "Halin24",
    "tags": [
        "whorehouse",
        "ghost stories",
        "ghosts",
        "renovation",
        "old times",
        "group sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-haunted-whorehouse"
}