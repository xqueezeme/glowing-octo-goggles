{
    "title": "Falsely Accused Ch. 06",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 22 - The Verdict\n\n\"... not guilty.\"\n\nPeter Gordon almost collapsed with relief. He turned to Mike G. Todd and they hugged. Then Peter turned to me, tears running down his young face as he hugged me. \"Thank you, thank you, sir.\" he sobbed. He hugged Teresa, too, as I congratulated Mike on a job very well done.\n\nThe look on Jenna Stiles's face was of ugly bitterness at losing. D.A. Krasney looked more sad than bitter. The looks of utter hatred on the faces of the women behind them were almost shocking in their intensity. And their looks were at me, and Teresa. Needless to say, they got a 'Teresa Cunt' look back at them.\n\n*BANG!* *BANG!* *BANG!*\n\nThe Judge was working his gavel as he demanded order in his Courtroom. Reporters had rushed out, knocking each other over to get the news out first. Everyone else had started murmuring as the 'not guilty' verdicts of the other counts were also read.\n\n\"Mr. Gordon, you are free to go.\" declared the Judge. \"Members of the Jury, you are released, and the Court thanks you for your service. This Court is adjourned.\" He banged the gavel and left for his Chambers.\n\n* * * * * * * * * * * * * * * *\n\n\"This is John Hardwood, KSTD Five-Alive News!\" said the untrustworthy and visibly angry reporter. \"In a shocking denial of justice for women, Peter Dwayne Gordon was found not guilty of raping Kendra Luskin! I have with me Police Deputy Chief Della Harlow. Commander, what do you think of this shocking verdict?\"\n\n\"It's a miscarriage of Justice, John.\" said Della Harlow. \"Commander Troy's misogyny and his zeal to blame the woman has succeeded, and women everywhere know that their rights, their safety, and their voices have been trampled upon. Raped women will get no help from Commander Donald Troy's Police Force if he can help it!\"\n\n\"Oh... here is State Attorney Jenna Stiles!\" said Hardwood, abandoning Della. \"Ms. Stiles, do you have a comment on this shocking verdict?\"\n\n\"We must respect the Jury's decision.\" Jenna said. \"I obviously did not do an adequate job of prosecuting this case, and I apologize to women everywhere for failing to bring justice to all of them...\"\n\n\"Ms. Stiles did her job very well.\" said a voice. Cindy Ross had come up behind her, and was now taking over the microphone. \"She did her best, but this case wasn't the one, and our System of Justice worked like it was supposed to! People should know that those women who truly are abused and brutalized will find their attackers arrested by me and prosecuted by Ms. Stiles. The fight for Justice and for Women's Rights will continue, and the Town & County Police Force will be the front lines of that fight for Justice...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded reporterette. \"The verdict is in! Peter Dwayne Gordon has been found not guilty of all the charges against him!\"\n\nBettina: \"Women are beginning to chant, and are gathering in larger numbers. The TCPD is already deployed, keeping the protesters well away from the Courthouse complex. And I have Captain Teresa Croyle of the TCPD here. Captain, what do you think of this verdict?\"\n\nTeresa took Bettina's microphone, which was broadcasting over speakers to the crowd on Courthouse Square as well as over the airwaves.\n\n\"I understand,\" Teresa said to them, \"the emotions that women feel in a case such as this. But what you must understand is that a false accusation like the one in this case does all of us women much more damage than anything else, and women's rights were protected today, not harmed but protected, by the Jury in this case!\"\n\nTeresa was not finished: \"Additionally, Commander Donald Troy has been relentlessly attacked for his investigation of this case and his quest for true Justice... not just for the Defendant, but for the rights of all of us women, rights which were besmirched and damaged by this woman and her false accusations. If you are a woman hearing my voice, you should be praying thanks for a great man like Commander Troy fighting on your behalf...\"\n\nPart 23 - Aftermath\n\n8:30pm, Friday, September 8th. I was standing on the deck of The Cabin. I could see the light of a train coming out of the western horizon. The sound of a band was drifting up to me; County High had a home football game tonight, while Town High and Booker T. Washington High had away games.\n\nThere was a celebration of sorts going on inside. Mike G. Todd had brought Peter Dwayne Gordon up, as The Cabin was a safer place to be than most anywhere else. Also at the party were Todd and Teresa, Cindy and Callie, Joanne and Seth Warner, Chief Griswold and his wife, Chief Moynahan, my mom Phyllis, Eddy the Bounty Hunter, Laura, Molly, and of course all the kids and two outstanding dogs.\n\nI heard someone come out of the house and onto the deck. It was Teresa. And the two outstanding dogs.\n\n\"We've got some people on standby,\" Teresa said, \"but there's no reports of any violence or protests. I'm kind of surprised.\"\n\n\"Looks like the money to pay the protesters dried up.\" I said. \"With the case overwith, and with me reinstated, looks like they're backing down. Oh, have a seat.\"\n\nTeresa sat down in the chair to the left as I sat down on the loveseat. Buddy went to Teresa, and Bowser over to me, and they got the skritchins the were expecting. Someone had someone trained, I thought to myself...\n\n\"So these protests are all funded?\" Teresa asked.\n\n\"Oh yes.\" I said. \"The people that gin them up are paid, anyway. They get the ball rolling, then the so-called 'Useful Idiots' come in and keep the momentum going.\"\n\n\"And speaking of that, my insubordination hearing is on Monday.\" said Teresa.\n\n\"I know. I'll be there.\" I said. To my utter shock and disbelief, the I.G. had sent Harlow's complaint of Teresa's insubordination to a Board of Inquiry. \"I am going to flog them; well, verbally at least.\" Teresa gave a little grin at that one.\n\n\"By the way,\" I said, \"that was an awesome speech you gave today. You running for political office?\"\n\n\"I just might... for Sheriff.\" said Teresa. \"I'm still pissed at Daniel Allgood for suspending you like he did.\"\n\n\"So am I.\" I said. \"You'll have competition for Sheriff... I get the idea that Loran T. Michaels is going to run, and Della Harlow is going to run against Daniel. Then again, maybe I'll run. You're doing pretty well with the red crowbar as it is... in the Police Boxing Matches, breaking down riots and busting up Harlow...\"\n\n\"Heh.\" said Teresa. \"No, that crowbar belongs in your hands, sir. You're not really running for Sheriff... are you?\" I just arched my eyebrows...\n\n* * * * * * * * * * * * * * * *\n\n\"Is Jenna pissed at you for that last TV incident?\" Callie asked Cindy, partly to generate trouble.\n\n\"Not really.\" Cindy said. \"I think she got it. She told me she wants to talk about something in a few days, after all this dies down.\"\n\n\"That altercation the other day in front of Priya was the real barrrrrn-burner.\" said Chief Moynahan.\n\n\"And a very good plan.\" said my mom Phyllis.\n\n\"Of course.\" Callie said, grinning her beautiful grin. \"It was your son's plan.\"\n\n\"What?!\" gasped Cindy. \"I thought it was your plan!\"\n\n\"Yeah, that's what he told me to tell you.\" Callie said, grinning her beautiful grin some more. \"He called me and told me about everything before I talked to you when I got home, and he had everything figured out.\"\n\n\"He always does.\" said Molly. \"I'll bet he knows why Kendra Luskin tried to set up Peter, too... but he won't say.\"\n\n\"That's because retribution is coming... for someone.\" said Todd.\n\n* * * * * * * * * * * * * * * *\n\n\"So, young man,\" Chief Moynahan said to Peter in the front room, \"what are you planning to do nowwww?\"\n\n\"I don't know, sir.\" said Peter. \"My father is making sure I don't find a job anywhere near here... or anywhere in the State.\"\n\n\"You were doing some polling work for Senator Nunn, weren't you?\" asked Chief Griswold. \n\n\"Yes sir.\" said Peter. \"But even though I was acquitted, I'm still toxic to any public person.\"\n\n\"Nonsense!\" said Chief Griswold. \"I happen to have a few political connections. You might have to move to the City or Midtown, or maybe Washington, D.C... but we'll find you something...\"\n\n\"What about you, Mike?\" asked Moynahan. \"Women's groups are very angry at you, right now.\"\n\n\"And they're going to be a lot angrier.\" said Mike with a grin. \"I was talking to Don earlier...\"\n\n* * * * * * * * * * * * * * * *\n\nWhen Teresa and I came back inside, the dogs hurried upstairs to where the children were. My mother looked up at us and said \"Don, I have one question: what is going to happen to Kendra Luskin?\"\n\nI understood her question, as did everyone. \"I don't know.\" I said. \"I've been trying to find something to pin down on her, but I'm not having any luck.\"\n\n\"How about filing a false Police report?\" asked Molly. \"Or making a false allegation against any one of these men? What she did put these men through the emotional wringer, and damaged their lives and careers.\"\n\n\"And she likely will do it again.\" said Laura. \"This is the first time she's been found out and defeated.\"\n\nI pulled up the hardback rocking chair and sat down, feeling my back begin to hurt as this issue stressed my mind. \"I know.\" I said. \"There are a lot of problems, though. First, filing a false report is not even a felony offense in this State. She wouldn't even get jail time. And the whole 'false allegation' thing is complicated by the fact that the companies involved made settlements, and it's a 'he said, she said' type of thing... proving a criminal allegation would be difficult, if not impossible. In fact... in this Gordon case, we just created reasonable doubt. We never proved anything.\"\n\n\"Wow, so this bitch goes free... and can do it again.\" Teresa said. I just looked at her and nodded.\n\n* * * * * * * * * * * * * * * *\n\n\"My God, I just cannot believe it.\" said Kelly Carnes. She took a big gulp of wine.\n\n\"I know.\" said Thomas P. Cook. \"I mean, the case was weak, but the Iron Crowbar is the luckiest son of a bitch on the planet.\"\n\nThey were at Cook's home, along with trusted reporter John Hardwood, Malinda Adams, Della Harlow, Holsom 'Hal' Briggs of 1st Precinct, and Scott Peterson of the Sheriff's Department. State Senator Katherine Woodburn had been invited, but had refused to come; she did not like to hang out with losers.\n\nPeterson said \"I did everything I could to get the Sheriff to come down on Moynahan for that announcement to reinstate Troy, but he just said he was going to let it go.\"\n\n\"It was that protest where Teresa Cunt came out with that damned red crowbar.\" said Kelly Carnes bitterly. \"That's when Moynahan began pushing back on the Board of Inquiry stalling. If that protest hadn't happened, no one would've seen the need to bring the Iron Crowbar back.\"\n\n\"I've put her up on insubordination charges.\" said Della Harlow, her voice dull though bitter.\n\n\"That'll be swept aside.\" said Cook. \"Our effort to delay the outlining of the chain of command backfired, as well. We should've acted, to make sure you were in charge in Troy's absence. But I did think we'd have more time...\"\n\n\"Spilt milk.\" said Malinda Adams. \"By the way, where's Katherine Woodburn?\"\n\n\"She's going to be meeting with other State-level people tomorrow.\" said Cook. \"She is very angry that the Iron Crowbar was reinstated as quickly as he was, as are her colleagues in the State Legislature. They were going to go to the State Supreme Court to get the permission to convene the Legislature, and oust Jared.\"\n\n\"Why couldn't they do that anyway?\" asked Adams.\n\n\"I don't know.\" said Cook. \"I was told that that was the plan, that Troy had to be neutralized as a Law Enforcement entity, and only then could we go after Jared. I don't see it, so maybe it's above our pay grades.\"\n\n\"What do we do now?\" asked Briggs. \"The entire TCPD is so solidly behind Troy and Croyle that we have no chance to create divisions within the ranks. And Ross is back in the good graces of her Detective Division.\"\n\n\"They're more cohesive than ever.\" Kelly Carnes said. \"They think Troy walks on water.\"\n\n\"Yes.\" said Cook. \"But the silver lining to the cloud is that we were able to sneak in and get that eminent domain order from the Courts, and I'll soon be developing a new block of apartments... after demolishing the houses on the grounds now. And Troy was too occupied to raise any public ire about it.\" His face relaxed into a mold of pleasure as he thought about what was to come soon.\n\n\"I'm loving that, especially kicking those old homeowners out on their sorry asses.\" said Hardwood. \"Meanwhile, Della, we need to get together on a public campaign against Teresa Cunt, to gin up some public sentiment against her for her hearing.\"\n\n\"That will be no problem.\" said Della.\n\nPart 24 - Karma\n\nMonday, September 11th. Neither Bettina nor Hardwood had mentioned the World Trade Center and Pentagon attacks from 2001. How quickly we've already forgotten, I thought to myself.\n\nAnd how quickly the damage to Peter Dwayne Gordon was forgotten. Neither Bettina nor Hardwood had discussed the aftermath of the trial. Bettina did mention that Professor Marvin Milton was released from the Hospital, and continuing his recovery at home. Myron and Mary were back at work at Headquarters as the ladies of the Veasley Community Center (including my mom) took turns staying with Professor Milton.\n\nMeanwhile, Hardwood talked almost exclusively about the Guardians of Justice and the failure of the FBI to discover who they might be, then Hardwood attacked Governor Val Jared with malicious lies and smears that the Nazi Ministry of Propaganda would've been proud of. Yes, I am comparing the Mainstream Media in America today to the Nazi Ministry of Propaganda. The Press has their First Amendment rights; I have mine.\n\nAnd then... it seemed like an electric current began running through the Headquarters building. Deputy Chief Harlow made a point of escorting Kendra Luskin through the hall, ostensibly to pick up her things that had been taken into evidence, via the very circuitous route of Harlow's office. And just as I was going from MCD to my office with Cindy.\n\n\"Well, if it isn't Commander Troy.\" Luskin said acidly as she saw me. I turned to look, feeling the anger welling up inside me as she continued: \"I guess you won this one, Commander. But you know what they say... you can't win 'em all.\"\n\nThere was no doubt in my mind that she was going to do it, that she was going to entrap and falsely accuse someone else of raping her, and maybe destroy that person's life. I knew that right now I had only one way of stopping her, of permanently stopping her. The red crowbar was whispering to me as if it were the Crowbar Katana...\n\n\"Don't do it, Commander.\" I heard Cindy whisper. She could sense what I was about to do. I knew she would try to stop me, but she would be too late if I moved fast enough...\n\n\"Hold on there, Ms. Luskin!\" said a voice.\n\nI looked up to see FBI Special Agent in Charge Jack Muscone coming down the hallway. With him was FBI Special Agents Martin Nash, Lindy Linares, and Julius Jefferson.\n\n\"Kendra Luskin,\" said Jack, coming up to her, \"I have a Federal warrant for your arrest, for interstate fraud, illegal money wire transfers across State lines, and RICO violations.\"\n\nLindy already had Kendra pushed up against the wall. \"Kendra Luskin, you have the right to remain silent. If you waive the right to remain silent, anything you say can and will be used against you in a Court of Law...\"\n\nAs they took Luskin away, I stood immobilized. I admit that I was as stunned as I've ever been. It was almost as surreal as those moments at the tea ceremony with Takaki Misaki after the helicopter crash...\n\n\"Well, Don,\" said Muscone, \"we can't let people like her continue to accuse innocent men of crimes they didn't commit, now can we?\"\n\nI exhaled, knowing what was being done, and somewhat on my behalf. \"Thank you, Jack. Thank you.\" \n\n\"It's like Tanya's favorite movie, The Godfather,\" said Jack, \"I do a favor for you, maybe one day you can help me out in return, eh?\"\n\n\"Yeah... yeah.\" I said, nodding.\n\nI barely remember walking into my office after the FBI Agents were gone with their captured perp. Della had looked furious, and had retreated to her office. Cindy, of course, followed me into mine. I sat down, numb with shock... and relief.\n\n\"Good timing, huh?\" Cindy said. \"You were about to spill blood out there.\"\n\n\"Yes...\" I said, still in a near trance. \"Yes, I was. I was about to kill that bitch. Literally.\" Then I remembered that the office might be bugged, and I looked up at the light in the ceiling. Cindy grinned, pulling her activated bug killer out of her pocket.\n\nI said \"Was it you that got them over here just in time?\"\n\n\"No, it wasn't me.\" said Cindy. \"All I'm going to say is that my father and I made a deal... he got the information on Luskin, and I gave it to Lindy, who took it from there.\"\n\n\"What was your part of the deal?\" I asked.\n\n\"You'll see, in time.\" Cindy said, and I knew she was just loving keeping me in suspense like I so often did to her. But I did not let her see if it was bothering me or not. I just nodded.\n\n\"Okay, that's one big, big problem solved...\" I said, then went into a reverie on what the next problem was...\n\nPart 25 - Chains Of Command\n\nAt 10:00am, Monday, September 11, Teresa got into my Police SUV and I drove her to City Hall. We went into the chamber of the Board of Inquiry, where Chief Moynahan awaited us... as did Deputy Chief Della Harlow, to give her testimony against Teresa.\n\nThe Commissioners of the Board were the same three that heard my case just a few weeks before. The one named Finneran was his usual anti-Police self. I'd taken the time to learn about him after my hearing; the man was a card-carrying member of the American Socialist Party, the Green Party, and NAMBLA.\n\nDella was called first, and gave her statement. Mr. Fitzgerald had tough questions for her, especially questioning her orders to put Police into harms way. She denied that her orders would do that.\n\nThen I was called to the stand. I was asked about the chain of command, and I gave what the military does (follow your direct chain of command, even if someone else outranks your boss) and what we do by position in the TCPD. Finneran blasted that the TCPD was not the military. \"Just because you and your Chief were military officers doesn't make you right. Commander Harlow outranks Captain Croyle at all times!\" he all but screamed.\n\n\"You're contradicting yourself.\" I said. \"In the TCPD, it's by position, not rank, especially at the top levels. This was clarified by rulings during the Brownlee-Ross situation some time ago. Captain Croyle cannot be insubordinate to Harlow because Harlow has no authority over Croyle. Period.\"\n\n\"But further,\" I said, \"and speaking as a military veteran who has some experience in tactical battle situations, Harlow's orders would have put our Officers in a position to be ambushed... just as I was ambushed at the Psychology Building earlier. Captain Croyle was very correct to countermand Harlow's harmful and in my opinion unlawful orders.\"",
        "Chief Moynahan was called to the stand and reiterated what I'd said. \"Commander Troy's military experience, while good, is nowhere near my own. And that order by Harlow to go into that parking lot trap was one of the most irresponsible and dangerous orders that I have ever encountered.\"\n\n\"But Chief,\" said Finneran, \"you do agree that Commander Harlow, in her capacity as Acting Commander in Troy's absence, had every right to give that lawful order... don't you?\"\n\n\"I do not agreeeee.\" said the Chief. \"First, there is no such thing as 'Acting Commander', like Troy was 'Acting Chief' for a while. Second, if there was an 'Acting Commander', it would be Captain Croyle, not Ms. Harlow. That is the chain of command, unless and until the Council dictates otherwise.\"\n\n\"Why is that?\" asked the lead Commissioner.\n\n\"Because I said so,\" said the Chief, \"in the absence of a clarifying ordinance from the Council.\"\n\nLast, came Teresa's turn. And Finneran turned 'both barrels' on her.\n\n\"Captain,\" said Finneran, \"you do agree that Deputy Chief Harlow outranks you, don't you?\"\n\n\"No sir.\" said Teresa. \"Her rank may be higher, but we don't have 'outranking' at Captain and above levels. My boss is Commander Troy, and then Chief Moynahan; they outrank me. The Deputy Chief does not, unless the Chief and Police Commander are both dead.\"\n\n\"Or incapacitated.\" said Finneran.\n\n\"I stand by what I said... both would have to be dead.\" Teresa replied.\n\n\"Commander Harlow gave lawful orders to the SWAT Team.\" said Finneran. \"What makes you think you're good enough to countermand her orders? She has more years of experience than you do.\"\n\n\"I don't accept the premise of your question that her orders were lawful.\" Teresa replied (having been prepped by me for such questions). \"Furthermore, her experience in paper pushing might be more than mine, but I'll put my experience in firefights, leading Vice Detectives and SpecOps Officers, as well as learning from Commander Troy, Chief Moynahan and Chief Griswold, against Commander Harlow's total lack of tactical experience any day.\"\n\nThe decision came down before the end of the day. Teresa was cleared by a 2-1 vote of the Board. The Board also made a strong statement that the Council needed to clarify the Police command structure by passing an ordinance...\n\n* * * * * * * * * * * * * * * *\n\nAt 2:00pm, Deputy Chief Della Harlow was called into the Chief's office. I was sitting on the sofa to one side, solely as a witness. The Police Captain's Union rep was also in the room. Della was not invited to sit down. This was formal.\n\n\"Deputy Chief Harrrrlowwww,\" drawled the Chief. \"your record with this Police Department up to the last few months has been a very good one. Citations for excellent work in Administration, good leadership of those under you in Admin positions. Star of Gallantry, unusual for an Administrator. And the Orange Order... that's a great honor for anyone, as it is voted upon by your peers.\"\n\n\"And then we have... the last few months.\" continued the Chief. \"Statements you have made to the Press have been unprofessional, and they have been detrimental to this Police Force. You have accused a good Detective of being a racist when he has exhibited no reason to be called such a thing. And you've been sticking your nose where it does not belong... in Operations.\n\n\"Last, but not least, it is my considered opinion as your Police Chief and as a former military commander that your orders would indeed have put my Police Officers in harms way. And your order for Officers to stand down instead of rushing to Commander Troy's aid was directly responsible for necessitating his actions to use deadly force to protect his family and another Police Officer.\"\n\n\"Sir, I object to that.\" said Della. \"Commander Troy's actions were his own, and I believe they were excessive and overly violent. I strongly refuse to allow myself to be held to blame for him shooting another person to death.\"\n\n\"Noted.\" said the Chief. \"My opinion, which is the one that counts, is that your actions contributed very directly and heavily to that perp's death. The bottom line, Commander Harlow, is that I am re-evaluating my Police Force, particularly its command structure. And you will no longer be a part of that command structure.\"\n\n\"I'll fight that like hell.\" said Harlow. She turned to the Union Rep. \"Consider this my grievance.\"\n\n\"The Captain's Union has already discussed this with the Chief, the I.G. and the Sheriff.\" said the Rep. \"We do not intend to contest the Chief's actions.\" Della's eyes showed anger, but not surprise, I noted.\n\nThe Chief took it back up: \"Now Commander Troy, bless his heart, thinks you're a good Administrator, and actually suggested in writing that you be given an Admin situation either here or somewhere else in County Government. He's a good man, and he wants to put people where they will serve themselves and the People the best. He suggested a transfer, or a demotion to Captain, and continued service as a capable Administrator.\"\n\n\"What I've had to explain to him,\" said the Chief, \"is that actions such as yours, Ms. Harlow, are not acceptable... to the point that you cannot be allowed to remain in this Police Force, either in your current position or a lesser capacity. Even if bygones were bygones, your continued presence is a problem, a cancer within my organization.\"\n\n\"Soooo,\" said the Chief, \"you have one of four choices: you can attempt to find a place in which to transfer, and I can tell you now that your chances of that are nil; you can resign; you can do nothing and be relieved of duty by me, and the process to fire you will begin immediately; or you can accept what Commander Troy begged me to do, to offer you early retirement but as a Captain, and a pension based upon a Captain's salary. Again, Commander Troy is being far, far more generous that I wanted to be...\"\n\n\"How long do I have to decide?\" asked Harlow, knowing that the machinery was now in motion against her, as she'd attempted to put it in motion against the Iron Crowbar.\n\n\"Twenty four hours.\" said the Chief. \"Or more accurately, end of first shift to-morrrrrrow. You're relieved immediately, of course.\"\n\nDella would consult with attorneys and the Union the next day, but would ultimately accept the early retirement.\n\nPart 26 - Sins of the Father\n\nMonday, September 11th. The sun had set over the ridgeline and it was growing dark as Teresa, Cindy, myself and Chief Griswold sat in his backyard around a fire in his iron pot. Mrs. Griswold and my mother had gone to dinner with some of the ladies of the Veasley Community Center.\n\n\"So what is it about that Deputy Chief's position?\" said Griswold. \"First Brownlee, then Harlow going bad on us. Harlow was always really good, until just recently.\"\n\n\"Brownlee was always bad.\" I said. \"Harlow... well, she started letting her politics guide her more than her professionalism. After the surprise re-election of Governor Jared, the division between those on opposite sides of the political fence has grown wider, and with fewer people in the middle. Harlow was bitter about Jared's re-election, then she became more bitter when her attempt to destroy Teddy Parker by calling him a racist didn't work.\"\n\n\"So she's gone more and more off the rails, politically speaking,\" I continued, \"and my support of Jared infuriated her even more. So she started trying to get me kicked to the kerb, especially after this rape case came along. And she's not the only one: a lot of people in this State and even this Nation are letting politics rule their actions, and they're getting burned because of it.\"\n\n\"I dunno.\" said Cindy. \"She was at the Hospital the night Luskin walked in... I'd say she was already part of the plan, which suggests she was part of it long before that night.\"\n\n\"That's Iron Crowbar thinking, there, Green Crowbar.\" I said. \"No wonder you have your own crowbar.\"\n\n\"Stoppit.\" Cindy replied. \"So... who is going to be the next Deputy Chief?\"\n\n\"You want the job?\" I asked. Seeing Cindy's look of shock, I said \"I'm not kidding. I know your father has been showing you all the books of his operations, for the day you'll inherit it. You've been handling admin-type stuff as a Captain for a while now, as well. All you need to do is oversee the people in the positions beneath them, let them handle it.\"\n\n\"Nooooooo thank you.\" said Cindy. \"I am very happy where I am.\"\n\n\"So who's the next Deputy Chief?... and don't ask me to do it.\" said Teresa.\n\n\"I couldn't pry you out of your job with a red crowbar.\" I said with a grin. \"You're exactly where you are supposed to be. But to answer the question, there's not going to be anyone in the Deputy Chief slot, at least for now. We might put Captain Aaron in it next year, or not. But Holloway is only breveted a Lieutenant, no way she's going there. Briscoe is not being considered, he was a Harlow supporter and may not be reliable.\"\n\n\"What about Briggs?\" said Teresa.\n\n\"Nice try.\" I said, knowing what Teresa was suggesting. She'd love to have Irwin as Precinct Captain and Rudistan as the Precinct Lieutenant. \"But Briggs is going nowhere except into retirement, eventually.\"\n\n\"Speaking of that,\" Cindy said, \"did you know that as Medal of Valor recipients, we can retire at any time, and as if we have the full 20 years, with half-pay of the position we retire at?\"\n\n\"I did hear that.\" I said. \"I checked to see if I would get double half-pay, in other words full-pay, for having two Medals... but it was 'no go' on that.\"\n\n\"Thank God.\" said Teresa. \"You'd be bored in retirement, sir.\" I understood what she was really saying.\n\nI chuckled. \"Yes, I would be. Just like Chief Griswold here is bored.\"\n\n\"Son,\" said the Chief, \"fishing is never boring.\"\n\n\"No sir,\" I replied agreeably, \"but everything else is.\" The Chief's eyes cut towards me, but he said nothing.\n\n\"Well,\" said Cindy, \"I for one am glad this whole Luskin-Gordon rape case is ovah. God, did I fuck things up.\"\n\n\"Yes.\" I said. \"It was a very bad plan on your part from the start.\"\n\n\"Whaaa?!?!\" Cindy gasped. Teresa also looked shocked. The Chief looked as if his hand had been caught in the cookie jar.\n\n\"Child, please.\" I said jovially, \"You are not dealing with an Agency of the Weak Minded. I admit I was slow, and it took a while, but I finally realized you had to have known exactly what you were doing when you deliberately created legal loopholes for Peter Gordon the night he was arrested. Hell, I sent you back to the Police Academy over that stuff, and you still did it.\"\n\n\"I should've known you'd figure it out.\" said Cindy.\n\n\"What?!\" gasped Teresa, looking at Cindy. I was peering hard... at Chief Griswold.\n\n\"Yes, it was my idea.\" admitted the Chief, not liking being watched by my baleful eye. \"The Governor and I are not unaware of what is going on around us. We and some friends got wind of a plot to take down the Iron Crowbar with this trial. I explained things to Ms. Ross, and she agreed to create the legal loopholes in case the Iron Crowbar couldn't get the charges thrown out.\"\n\n\"We never thought it would go to trial.\" Cindy said. \"I couldn't believe Jenna was so dumb to not see right through Luskin's false claims.\"\n\n\"That's why the plan was bad.\" I said. \"Jenna was not and is not dumb, but she has an unholy zeal about women's rights and rape victims not being taken seriously by Police. Bettina's not exactly impartial on that, either. They were both truly bitter that I was looking into Luskin, though I think they now understand why. But of course Jenna was going to take it all the way to trial.\"\n\n\"I will never again pretend to think I can be the Iron Crowbar at schemes like that.\" promised Cindy.\n\n\"That's because I don't scheme.\" I said, which got me a 'look' from Teresa. \"I just fuck up other people's schemes when they try to do me wrong.\"\n\n\"Yeah, we should've thought more about that one.\" said Griswold.\n\n\"Y'all should've trusted me.\" I replied. After a pause, I said \"Ladies, would you give me a moment alone with the Chief?\" The women got up and went back to the house.\n\n\"Uh oh.\" said the old Chief. \"I think I'm about to get a crowbar beatdown.\"\n\n\"A verbal one, for sure, Chief.\" I said. \"Your plan was really bad, sir. Especially the part about having the Sheriff suspend me without pay.\"\n\n\"Damn, nothing does get by you.\" the old Chief muttered.\n\n\"I know, I know,\" I said, \"you thought it would give me time and some cover to find out about Luskin's other false accusations. You thought I'd be able to run with the FBI guys for a while... but then I beat the shit out of that traitor Dana Fox and turned in my FBI Consultant badge. But you didn't have to have Daniel suspend me for me to find out about Luskin. I would have, anyway.\"\n\n\"You're right.\" said the Chief. \"I'm sorry. I made mistakes. I owe you one.\"\n\n\"Yes, yes you do. You're going to make it up to me, Chief.\" I said, then leaned over towards him. \"And just wait until I tell you how...\"\n\n* * * * * * * * * * * * * * * *\n\nOnce back home at the Mountain Nest, I helped put Carole and Jim to bed, then went downstairs and accepted a drink from Laura as she sat down beside me.\n\n\"So.\" she said. \"Melina and I were thinking about getting together for dinner this Saturday. We think you and Daniel need a chance to mend some fences.\"\n\n\"We've been doing that a little too much,\" I said, \"and our esteemed elected Sheriff has not gotten the message about things. Besides, Saturday is out, for other reasons.\" I told her the reasons.\n\n\"Okay, Friday, then.\" said Laura. \"But really, for the good of family as well as the Police and the County, y'all need to do this.\"\n\n\"You know...\" I said, thinking about it, \"maybe you're right...\"\n\n\"Uh oh.\" Laura said. \"I get worried when I hear you talk like that.\"\n\nI grinned. \"Well, maybe you'll be less worried when I talk like I like best: honey, lets to go to bed.\"\n\n\"Ooooo, yes, I do like that better.\" Laura said. We headed upstairs to our bedroom...\n\n* * * * * * * * * * * * * * * *\n\nShe was drop-dead gorgeous. Tall for a woman, even taller in the beige high-heel pumps she was wearing, her body a perfect, saucy, hourglass shape, her hair a thick mane of honey-blonde, gently curly strands over her shoulders and down her back, and full lips that invited kissing, or fellatio. Her breasts were augmented by the best of plastic surgery, but did not have that totally artificial look that many porn starlets had. Her thighs were toned, and her calves very shapely.\n\nOnly her eyes were wrong: they were dark brown, and if one looked into them, one saw lifelessness. But they were practically hidden under makeup and mascara.\n\nHer name was Racquel, and she was one of the hottest prostitutes in the State. Her beauty and fame rivaled the late Cherie Ward. She could command $5000 an hour for sex, and men would eagerly pay it in order to sample her sexual talents and enjoy her body. And then they would come back for more, hopelessly addicted.\n\nTonight, she was in Senator Samuel Russell's suite, Room 1822 of the Marriott Grande Hotel in the City. He was sitting behind the desk, reading the information that she had brought him in the sealed envelope. She was one of several couriers between Russell and BigAgraFoods.\n\n\"Hmm, so we have a leak in our operations.\" said Russell. \"Seems that certain elements of the FBI are not getting the message that a United States Senator has told them to back off their investigation. So, my dear, anything else?\"\n\nRacquel stood tall in front of the desk and said \"BigAgraFoods has a gift for you. Me. They paid for an hour.\"\n\n\"Well, then, come sit on the desk.\" said Russell. He watched as Racquel slid out of the top of her dress, the let it slide down her luscious body to the floor. She came around the desk as Russell watched her, loosening and removing his necktie. \n\nShe sat on the desk and lay back, knowing what the Senator wanted. She pulled her legs up and back, exposing the swollen labes of her well-used pussy. Russell wasted no time in bending over and sliding his tongue along Racquel's slit, probing deeper and deeper with each lashing until he was face-deep in her sodden quim.\n\n\"Mmmmm...\" Racquel moaned, pretending to enjoy being eaten by the 'distinguished' Senior Senator from the State. In reality, she thought, this guy was boring as hell in bed. He had a great looking wife, she thought, wondering how that poor woman endured the Senator's lackluster performance...\n\n* * * * * * * * * * * * * * * *\n\nShe had crouched down and sucked Russell's six inch cock as he finished undressing, then he led her to the leather sofa against the side wall of the room. She lay down, naked except for her high heel pumps, spreading her gorgeous legs in obscene, wanton invitation, and invitation no straight man could refuse.\n\nRussell mounted the hot blonde prostitute, and his throbbing, six inch cock had no problem finding her honey hole. He groaned as he felt his cock sink into her, nuts-deep in pleasure. After he ground his hips around to stir her pot, he began thrusting into her with short, stabbing strokes. Racquel expertly matched his rhythm, working to give him the maximum sexual pleasure possible.. but also working to get him off and finish this boring fuck.\n\n\"Oh yeahhhhh, you are so fucking hot.\" Russell gasped as he looked down at the blonde beauty. He began fucking her harder, and she wrapped her long, luscious legs tightly around him. He began thinking to himself that powerful men like him had access to the best pussy like this, while men lesser than himself could only dream about fucking a hot bitch this beautiful, having legs like hers wrapped around him as he enjoyed her hot, wet snatch. It's definitely good to be a powerful U.S. Senator, he thought to himself as he drove harder into the beautiful prostitute's pussy.\n\nHe was not wearing a condom, exposing himself and any other women he would fuck to possible diseases, but he knew that a woman like Racquel did not fuck low-life trash, but only men that could afford her excellent services. Again he thought of how good it was to be a powerful Senator, getting to fuck women like this while common men had to settle for less beautiful, less hot women...\n\n* * * * * * * * * * * * * * * *\n\nI guess I'm special, too. I was watching Laura as she rode me, grinding her magnificent ass around my iron-hard cock as she impaled herself on it again and again and again. Her big, milk-filled breasts bounced heavily on her chest above her quivering, firm abs, and she groaned as I reached up and fondled her big tits, pinching her long, rock-hard nipples. I wasn't sure how I was so blessed to have a woman like this as my wife and the mother of two wonderful children, and I wasn't going to ask, nor complain... \n\nAnd she was a 'hubby watcher', too... double the luck, I thought to myself as I felt her cunt clutch my cock as she moaned in a deep, soulful orgasm...\n\n* * * * * * * * * * * * * * * *\n\n\"Uhhh!\" Senator Samuel Russell groaned as he began firing jets of hot, sticky cum into Racquel's hot, clutching cunt. She had endured his boring fucking, and was now pretending to come with him, working her cunt muscles to milk his sperm out of his balls and his cock.\n\nOnce finished, Russell kissed her on the cheek, as she turned her head to avoid letting him kiss her luscious mouth. He stood up and she sat up and took his softening penis into her mouth, cleaning their mixed juices off of his cock and balls.\n\n\"That was good, baby.\" he said. \"You should take a job with my staff, personal assistant, you know?\"\n\n\"I make more money now.\" Racquel said as she began dressing. Russell was getting dressed, also. She knew she had to stay in the room until he left, and that one of his Security people would escort her out.",
        "Moments later, the Security man was carefully checking her small purse for any cameras, recorders, or transmitters. There were none, and her cell phone was shut off, as it was expected to be. Once it was determined that her clothes, jewelry, and high heel pumps were also not serving as transmitters, she was allowed to leave.\n\nFools, she thought to herself as she headed to the rendezvous point to meet her contact. The technology in her purse, that fed a cellphone that looked to be shut off but wasn't, was the very best the Central Intelligence Agency had to offer... and like Marie and Cherie Ward were sisters, Racquel was the older sister of Professor Laura Fredricson's gorgeous blonde assistant Laurie...\n\nPart 27 - Left Bleeding on the Battlefield\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Wednesday, September 13th, from in front of City Hall. \"Fox Two News has learned that Police Deputy Chief Della Harlow has opted for early retirement instead of disciplinary charges that would've seen her demoted and possibly transferred!\"\n\nBettina: \"Chief Sean Moynahan has announced that he is restructuring the leadership of his Police Force. Commander Don Troy remains Police Commander and overall second-in-command of the Force, and most of the Captains will remain at their current positions for the time being. Chief Moynahan stated that the Deputy Chief position will not be filled until next year at the earliest, and that he, the Chief, will personally oversee Administrative operations for the time being.\"\n\nBettina: \"In other news, Fox Two News has learned that State Attorney Jenna Stiles is considering another run for District Attorney against Gil Krasney, and Solicitor Miriam Walters is likewise considering a run at D.A. Both Loran T. Michaels and Della Harlow are considering campaigns for Sheriff against Daniel Allgood, who has yet to comment on his plans to run again. And Mayor Larry Vaughan, the People's Choice, has announced that he will not run again for Mayor, but is being courted as a Republican challenger to U.S. Congressman Gerald A. Condor of our 1st District, who is a Democrat.\"\n\n* * * * * * * * * * * * * * * *\n\n\"The American system versus the Canadian and British parliamentary system.\" said Cindy in MCD as we watched Bettina's broadcast. \"The Election Day for Parliament is not set in stone nor the Constitution...\"\n\n\"The British don't even have a written Constitution.\" I said. \"They are the only country in the world that can get away with that and remain a Free People.\"\n\n\"God save the Queen.\" said Cindy. \"Anyway, the American system is great... but we have set dates for Elections... and because of that, it seems that the political cycle never ends.\"\n\n\"And as long as we have people throwing money at the politicians,\" said Teresa with considerable cynicism, \"we will have political cycles.\"\n\n\"That's true on the national level.\" said Joanne. \"And the State. But on the local level?\"\n\n\"Just wait until you see the Mayor's race start up.\" I said.\n\n\"What are you running for, Commander?\" Theo Washington asked me, flashing his 'movie star handsome' grin. He was trying to start 'trouble' for the ol' Police Commander.\n\n\"The potty.\" I said as I headed for the back door. \"I gotta get this coffee out of me before I leave for Midtown... Ross, Croyle, try to keep the Police Force out of trouble while I'm gone, okay? Send Rudistan to his room if you have to.\" Rudistan rolled with it, grinning as everyone laughed...\n\n* * * * * * * * * * * * * * * *\n\nChief Griswold was riding shotgun in my Police SUV as we drove towards Midtown. \"So what's this about, Crowbar?\" he asked.\n\n\"All of the others that Luskin accused are taking her to Court.\" I said. \"That leaves one person left: Quint Danielson. I'm trying to get some Justice for him.\"\n\nWe arrived at the State Capitol, where I was allowed to park in the area for Law Enforcement vehicles. Going in, we were ushered into the Governor's Office. Chief Griswold had made the appointment on my behalf.\n\nA few minutes later, the Governor came in. I was shocked by his appearance. He had lost weight, and looked gaunt. His face was haggard, and he looked exhausted as he shook hands with us.\n\n\"Governor,\" I said, \"are you letting the Press get to you?\"\n\n\"I could tell you that I'm not as young as you, Commander.\" said Jared. \"But it's not that. It's not the Press, either; they're just pieces of shit. What is killing me is how it's affecting my wife. She can't stand seeing me attacked like this, and it kills me to see her in so much pain.\"\n\n\"You don't have to take this shit, you know.\" growled Griswold.\n\n\"She won't let me resign, either.\" Jared said. \"And she's right... we walk away now, and the Press will say it's because every lie they've told about me is true. And it will be a fatal loss for the good people of this State, the Grassroots that we're fighting for.\" I nodded.\n\n\"You've endured political attacks before, Governor.\" I said. \"So what is it that is really eating you up?\"\n\n\"Not much gets past the man, Val.\" said Griswold.\n\n\"Is that why you both came down today?\" asked the Governor.\n\n\"No.\" I said. \"But since I'm here, why don't you let me help.\"\n\n\"They were going to convene the Legislature to impeach me.\" said the Governor. \"And the U.S. Chamber of Commerce, which strongly supports illegal immigration, has been pressuring Republicans whose campaign ads they paid for to agree to convict me in the State Senate. Now I wouldn't even mind that, except for one thing: Graham Collins. Commander, you have no idea how deeply corrupt that man is. You'd rather have Jack Lewis as Governor than him.\"\n\n\"I dunno about that.\" growled Griswold.\n\n\"I do.\" said Jared. \"Collins had money in Pine Valley, through intermediaries and layers of legal entanglements. He was getting kickbacks for developments near the City, the ones that ended up digging up those bodies the Black Velvet killer buried. And he's got his hands in Thomas P. Cook's pockets, too... siphoning off money out of your County, Commander. He's going to primary Senator Richard Nunn, who he despises. And he wants to be Governor as a stepping stone to that.\"\n\nI took an envelope out of my trenchcoat pocket. \"Here's an idea you can try.\" I said. \"At the least, you'll expose the U.S. Chamber for what they truly are.\" The Governor opened the envelope, read what was on the paper inside, his eyes wide with shock, then put the envelope in his suit pocket.\n\n\"So,\" said the Governor, \"what can I do for you?\"\n\n\"You know about the rape case in my County?\" I asked. The Governor nodded. I said \"There was one man she got put in prison. He had no prior record, he's a decent guy, and he was framed by her. I'd like for you to pardon him.\"\n\n\"Quint Danielson?\" asked the Governor. It was my turn to be surprised.\n\n\"Yes sir.\" I said.\n\n\"You're not going to like my answer, Commander.\" said the Governor. \"I cannot do as you ask. I will not pardon him, nor commute his sentence.\"\n\n\"Governor...\" I said, \"he's a decent man. I checked hard into him, I talked to him in prison. He did not commit that rape; Luskin falsely accused him, too. He deserves a pardon.\"\n\n\"Within the extent of your knowledge of him, you are right.\" said the Governor. \"But there are some things you don't know, and I will not tell you those things. Danielson can ask for a new trial. I can tell you now that he will not get one. He will remain where he is, and you'll have to trust me that it's for his own good.\"\n\n\"I don't see how prison is for his own good, when he did not commit the crime.\" I said. Then it dawned on me. \"What is it, Governor? What is this secret about him? Why was he framed? I know why the others were; he's the only one that does not fit the pattern. What's going on?\"\n\n\"Like I said,\" said the Governor, \"I won't say. It's not my secret to tell. And it's so damaging that if you do find out what it is... and with your abilities you will find out... then you will understand, and you will agree with me.\"\n\nI shook my head, then stood up. \"Governor,\" I said severely, \"I cannot believe you're going to leave an innocent man bleeding on the battlefield. Good luck to you, sir; you're going to need it.\" With that, I walked out of the room.\n\n\"He doesn't understand.\" said the Governor. \"Grizz, you've got to---\"\n\n\"Val,\" said Griswold, also standing up, \"you and I have been friends for a long, long time. But Don Troy... well, let me just say that when I was forced to retire, I left my Police Force in the hands of the one man I trusted, much like a father leaves his business to his son. That is what Don Troy means to me. I'd suggest you either trust him with your secret... or face the consequences when he finds out on his own. Good luck, Val. Like Don said, you're going to need it.\"\n\nAnd with that, Chief Griswold left the room, and a friendship of decades, in his wake.\n\nPart 28 - Friends and Family Plan\n\nThursday, September 14th. Laura and I went to Daniel and Melina's home, with Carole and Jim in tow. Carole was very excited to see her cousin Patricia, and little Daniel and Jim found things to do, as well... mostly things that caused 'trouble' for their parents.\n\nThere was no hiding the tension among the adults, though. Melina had told Laura (who told me) that Daniel had also not really wanted any fence-mending with me, but was doing it for his wife's sake. Dinner was mostly the women talking about the kids.\n\nAfter dinner, Daniel and I went onto the back deck, looking over the city from the northeast angle, and lower than The Cabin.\n\n\"I know that it was Chief Griswold that asked you to suspend me,\" I said, speaking first and getting right to the point, \"and I understand his reasons why. But I don't agree with him, and you did not have to do it. You, like him, should have trusted me, and should not have done that.\"\n\n\"To be totally honest,\" said Daniel, \"I didn't need a whole lot of persuasion. I don't know if you're aware of just how tense things were, among the people I have to deal with on a regular basis. I know you acted for your family, but if I had not have suspended you, things would've ratcheted up even more.\"\n\n\"I don't agree.\" I said. \"They still ginned up a riot after I was suspended, trying to take down Teresa, too. They saw their actions had worked once, and tried to do it again. If you'd held the line, they would've hesitated, and then lost.\"\n\n\"Maybe. Anyway, you were right about Luskin.\" said Daniel. \"If Moynahan hadn't have intervened on your behalf, you might still be suspended and waiting for a Board of Inquiry... but he did act, and it's all in the past now.\"\n\n\"No, it's not.\" I said. \"The FBI, or Jack's team to be precise, arrested Luskin. But the people behind the whole plot are still out there, and planning their next move. And there's still the situation of me not knowing if I'm going to be able to continue to do my job, with you looking over my shoulder like you're doing.\"\n\n\"Do your job properly, and there's no problem.\" said Daniel.\n\n\"I was doing it properly... and still got suspended without pay before a Board of Inquiry had even convened.\" I replied. \"And that's all on you, Daniel.\"\n\n\"So what do you want me to do?\" Daniel asked, seeing that he was going to lose any battle on these issues. \"Resign as Sheriff?\"\n\n\"No.\" I said. \"Finish out your term.\"\n\n\"What, are you going to run against me?\" asked Daniel.\n\n\"What if I do?\" I asked, my eyes boring into Daniel's. I saw his surprise, then his thoughtfulness.\n\n\"If you do,\" he said, \"do me the favor of telling me beforehand. I won't run against you. We might split the vote, then Michaels or, God forbid, Harlow might win. If you want the job that badly, I'll stand aside.\"\n\n\"What will you do?\" I asked.\n\n\"I don't know.\" said Daniel. \"Find a Police Force somewhere. City I.A. needs a lot of help.\"\n\n\"Oh, you don't want to leave here, and neither does Melina.\" I said. \"And Carole loves Patricia. No, Daniel, you love being a politician, and that is what you should do. Oh, and by the way, I have no desire to be Sheriff; I am happy doing what I am doing, and I'm doing the most good where I am. No, I'm not running for Sheriff... and you won't be, either. You are going to be 'Mayor Allgood' in a little over a year. The best people in their proper places, I always say.\"\n\n\"And Sheriff? Your boss's boss? Got a plan for that?\" asked Daniel.\n\nI chuckled. \"Don't you know by now that I have a plan for everything?\"\n\nPart 29 - Clan of the Crowbar\n\nOn Thursday afternoon, I had gone into Teresa's office, having her sit back down as she stood up.\n\n\"What are you doing Saturday evening?\" I asked.\n\n\"I think Todd and I are staying in with the kids.\" Teresa said.\n\n\"Good.\" I said. Then I said more formally \"I would like for you to be my guest at a chanoyu, the Japanese Tea Ceremony.\" I extended her a scroll, which was the formal invitation.\n\n\"Why... thank you, sir.\" said Teresa. \"I'd love that. Where and when?\"\n\n\"The Buddhist Center on Campus.\" I said. \"They have a chashitsu, a tea house.\"\n\n\"I'd be honored, sir.\" said Teresa. \"I'll let Todd know...\"\n\n\"He already knows.\" I said. \"I called him to make sure you were free for the evening. You, I asked; him, I just told.\" Teresa laughed at that.\n\n* * * * * * * * * * * * * * * *\n\nOn Saturday afternoon, I arrived at the Buddhist Center, where I was shown the tea garden, a mostly open space, and the tea house, which was a small one-room chamber with a small kitchen in back. It would be perfect for the ceremonies.\n\nI had been studying the tea ceremony with Takaki Misaki's daughter Mariko, with the Buddhist monks of the Buddhist Center here on Campus, and I'd read the manuals and practiced. Now was not the time to dishonor myself by failing in the rituals.\n\nThe first part of the ritual was cleanliness. I began cleaning the front area, raking down the garden stones, cleaning the steps and the tea house by hand. Once finished, I used the Center's bath facilities to clean up and get dressed. I was wearing a black kimono with a red sash, and a red overmantle and vest, whose front sashes tucked into the belt.\n\nThere was one addition. I had created an insignia for my clan, which had been required after Takaki Misaki had given me the Crowbar Katana and it's companion short sword. I had taken six long, thin, red diamonds that came together in the center, not quite touching, in a flower pattern that formed a hexagon-like symbol. The background was black, and the edges and circle surrounding the six diamonds was gold. The background behind the entire insignia, if needed, was red,.\n\nThe Imperial Clan of Japan, that being the Emperor and his family, was the sixteen-petal chrysanthemum, and many people know the Tokugawa symbol, a circle with three leaves growing inward in a triangular shape, with intricate lines between. The Takaki clan symbol was similar, but was four such leaves pointing inward, representing the four points of the compass, the symbol of the Intelligence services. The CIA shield also has a sixteen-point compass, as an example. The Takaki had long been spies and the Intelligence services to Shoguns and to the Imperial Family, and now served the Japanese Nation in that capacity. \n\nThe red of my six-petal pattern also represented Iron, and there was some chemical basis for the symbol as well. And of course, the hexagon was part of my heritage from my maternal great-grandparents, remindful of the six-pointed Star of David that is now in the Flag of the State of Israel...\n\nI put a small banner with the Troy Clan symbol on it near the hearth. Banners are vertically long and horizontally thin; larger banners are ten to twelve feet high and two feet or so wide...\n\n* * * * * * * * * * * * * * * *\n\nSundown, Saturday, September 16th. Teresa Croyle entered the courtyard of the tea garden and walked across to the tea house. She was wearing a black silk kimono with a silk red sash; it was a gift from her host.\n\nShe washed her hands at the small pool of water in the stone bowl, seeing the character on the towel next to it: \u5fe0 , which means 'loyalty'. She saw the tall red banners on either side of the tea house, with the gold circle and the red diamond petals radiating from the center, not quite touching, against the black background. An impressive Clan symbol, she thought.\n\nThe garden was lit with Chinese hanging candles, which would float like hot air balloons if not tethered down. It was nearly a fairyland of lights and candles.\n\nEntering the tea house through the short door that even she had to crouch down to access, Teresa came into the room and saw me sitting cross-legged in the host's spot in the light of candles, my swords laid to one side. She bowed and I returned it, and she sat at the spot reserved for the first guest.\n\nA formal tea ceremony like this one is preceded by dinner. I had chosen steak and asparagus, which I knew Teresa liked, and which I liked as well. As we ate, I explained the reason for giving her the ceremony.\n\n\"In all of this for these last few weeks,\" I said, \"I observed that one personal was totally and unwaveringly loyal to me, and that person was you. I am very grateful to you, and we could not have succeeded without your faith.\"\n\n\"I'm honored.\" said Teresa. In a chanoyu, host and guests were equal, so she did not have to say 'sir'. \"And my loyalty to you has been earned many times over by your loyalty to me. I would not be here without you, and it.\"\n\nOnce the meal was over, I began the formal chanoyu. Taking a porcelain tea cup, that had a bluish tinge to it, I carefully scooped some of the green powdered tea in the silk-wrapped tea caddy into the cup with a wooden spoon. Then I used a larger wooden spoon, a cup on the end of a stick, to take hot water from the pot on the brazier, and added it to the powder, then stirred it with a whisk. I formally offered it to Teresa, who correctly turned the cup in her hands three times, then drank from it in sips.\n\nThen I took the cup that Misaki had given me, the one used in that field after my victory over Raymond Kyle Westboro, and made tea for myself, drinking it formally, knowing that every movement was to be observed and graded and judged.\n\nAs I made Teresa's second cup of the green tea, I felt myself going into a 'zone', a seemingly higher place, a place of peace. I had heard and read that cha-masters had sometimes reached this level of inner peace, but I was no master and had not expected to achieve this. I allowed the feeling to wash over me as I offered Teresa her cup of tea, then made and drank my own. In time, a third cup for each of us. Then the chanoyu was over.\n\n\"It's all... so beautiful.\" said Teresa, looking around in almost childlike wonder, and I realized she was in her own zone.\n\n\"Yes.\" I said quietly. \"Thank you for being my guest.\"\n\n\"Thank you for being my host.\" Teresa replied.\n\n\"I do have one more thing to ask of you.\" I said. \"You have been loyal to me, and you have been greatly helpful to me, such as going to save Laura despite your recent surgery. Would you accept becoming part of Clan Troy?\"\n\n\"I...\" Teresa said, faltering. She bowed low, to hide the tears that had come to her eyes. \"I would be greatly honored. Arigato! Arigato... but... what about my upcoming marriage to Todd?\"\n\n\"It will be a joining of clans.\" I said. \"Todd formally joined the Takaki some time ago, as did Teddy Franklin and some others. But despite your work with them, you are still your own person. I would be honored if you became a part of my clan.\"\n\n\"I accept, and am greatly honored to be a part of Clan Troy.\" Teresa said, bowing again.\n\nI tapped a small gong near the small banner. \"Laura-san, she has accepted.\" I said. Laura's voice came from behind the wall, acknowledging my words.",
        "* * * * * * * * * * * * * * * *\n\nA few moments later, Teresa exited the tea house, and gasped. The open space in the tea garden had been transformed. Eight tall banners of the Troy Clan surrounded the space. Inside it was a podium with a large metal bowl. Mariko and Laura were by the podium; Mariko in a white kimono with navy blue patterns of the Takaki insignia, Laura in black, wearing a gold necklace with a gold and red-enameled Clan Troy insignia.\n\nWatching from the front entrance outside the circle were Todd Burke, Teddy Franklin, and two Japanese men, all wearing white kimonos with navy blue Takaki symbols. Todd also wore a dark blue overmantle vest, and he was wearing swords.\n\nMariko led Teresa to the left side of the podium as one looked from the front, and me to the right. Modern technology was used; Laura injected a small amount of lidocaine into my left palm. I then took my short sword and used the tip to cut a small slice in my hand. I held my hand over the metal bowl on the podium, letting my blood drip into the bowl.\n\nI then passed the short sword to Teresa, formally, and after the lidocaine was applied to her hand, she made a cut and let her blood drip into the bowl with mine. Laura then took the metal icon from her necklace and put it in the bowl, then added two more such medallions with the six red diamond petals. Mariko poured some sak\u00e9 into the bowl, which had some lighter fluid mixed in. Then a long stick match was lit from a nearby torch and used to set the contents of the bowl on fire.\n\nAfter the fire died out rather quickly, the medallions were removed and dried off, and allowed to sit for a moment to cool. Laura took her medallion out, reattached it, and put it around her neck. Then she took a gold necklace, attached a medallion to it, and put it around my neck. She then prepared a third necklace, and handed it to me with a bow. I stepped up to Teresa and put it around her neck. Teresa and I bowed to each other, then we bowed to the others, and the ceremony was over.\n\nTeresa was in tears. \"This is... this is the first time I've truly had family since the night Alexis died... my first marriage wasn't a family situation... Amy's time with us was so short...\"\n\n\"Amy's Spirit is with Clan Troy.\" I said. \"Welcome to your new family.\" Teresa hugged me, and I returned it.\n\n* * * * * * * * * * * * * * * *\n\nWe went to The Cabin to celebrate as my hired workers cleaned up the Buddhist Center. Laura had secured the porcelain cups, and Teresa would be presented with the one she'd used, while mine would go back to its honored place next to the tea caddy and my swords in my office in The Cabin...\n\n\"Where's Cindy?\" Teresa asked. \"And is she part of the Clan of the Crowbar?\"\n\nWe were on the deck of The Cabin, drinking hot sak\u00e9 and cold green tea. Todd and Laura were with us, as was Chief Moynahan and my mom, who had kept kids and had their own in-house supper date.\n\nI had resolved to get a fire pot like Chief Griswold's for the deck, but it wasn't here yet. So we were in the dark, looking over the twinkling lights of the Town. I love this view, I thought to myself.\n\n\"She and Callie went to her father's compound for the weekend.\" I said. \"As to her status, she's family... but she declined to become part of the clan. In the clan sense, she's part of her father's 'clan', though it's not a clan like the Oda Clan and the Takaki Clan in Japan, and the Troy clan here.\"\n\n\"I love the insignia you created.\" said Teresa, looking at the icon on her necklace. Then she said \"By the way, I was meaning to bring this up: I don't believe for a minute that Cindy didn't really believe Peter Gordon was guilty, no matter what she did at Chief Griswold's request.\"\n\n\"Why do you say that?\" I asked. I noted Laura peer at Teresa.\n\n\"She's my best friend, and soul sister.\" said Teresa. \"Cindy and I have spent more time together than we spend with our respective families. We talk together, eat together, complain about our bosses together...\" The Chief and I laughed at that one.\n\nTeresa continued: \"So when we were arguing and she said she thought Peter Gordon was guilty, I believe she was telling the truth. She thought he was.\"\n\n\"She did get pretty into it, until the Press started trying to use her against me.\" I said.\n\n\"I'll take it up a step.\" Teresa said. \"When Jenna was kidnapped, Cindy was beside herself, and almost broke down when it was confirmed that Jenna was brutalized. And Cindy was upset when Callie was kidnapped, though Callie came to no harm.\"\n\n\"But this case,\" Teresa said, \"really got under Cindy's skin. Having Peter chained to the table in the Interrogation Room was not part of Chief Griswold's plan; that was Cindy's doing. And she gave the D.A. the information very willingly and before you could stop her, Don. She wanted Peter indicted.\"\n\n\"I don't disagree.\" I said. \"So what are you getting at?\"\n\n\"And her childhood...\" said my mother, getting it.\n\n\"Yes, ma'am.\" Teresa said. \"Cindy said she dated guys in Canada, then became a lesbian. And she's not bisexual; she does not have any sexual interest in men. At all. Now she may have become a lesbian anyway...\"\n\nI was dumbfounded as I caught on. \"Are you saying...\" I started.\n\n\"I don't know for sure,\" said Teresa, \"and I'm not asking. But I just wonder if Cindy acted and reacted the way she did... because she herself was date-raped when she was up in Canada.\"\n\n\"And learning all those martial arts... so something like that could never happen again.\" I said as things fell into place. \"You think her family knows? I asked. \"Her mom's story and Molly's story have never suggested that.\"\n\nLaura said \"I don't think they know. But Dr. Eckhart... well, it explains a few things about him, too. I think Teresa might be right.\"\n\n\"It could also have been an unsuccessful attempt to rape her.\" said my mother. \"But the psychological effects would be the same... as well as her learning the martial arts. That's a very valid point.\"\n\n\"Yes, that is indeed Iron Crowbar thinking, there, Teresa.\" I said. \"I may never get the red crowbar back if you keep this up.\"\n\n\"No sir, that is yours.\" said Teresa. \"And like I said, we'll never prove it. I'm not asking...\"\n\n\"Neither am I.\" I replied. \"And Laura, and Mom, if either of you know or find out, I don't want to know. Ever. At all.\"\n\nPart 30 - Cleanup on Aisle 5\n\nMonday, September 18th. Cindy and I headed to Laura's office in the Psychology Building in my Police SUV. As I parked, I looked around warily. There were no groups of students. There were men in suits, wearing sunglasses and nearly invisible ear pieces. The deduction was easy to make: the Deputy Director of the FBI was in the house.\n\nGoing to Laura's office, we were admitted by her beautiful assistant Laurie. Inside the office, three men and Laura rose to greet us. One was Special Agent in Charge Jack Muscone. Another was the Deputy Director.\n\nThe third man was wearing a full three-piece suit with vest, not unlike what the Deputy Director often wore; I suspected a thin layer of kevlar was in that suit. The man himself was tall and lanky, and like the DepDirector, I could feel the aura of power emanating from him, reaching out to capture my mind... and I felt Cindy's mental resistance. Hmmm, I thought to myself...\n\nThe man was introduced as the Executive Assistant Director of the FBI's National Security Branch. Laura said \"I've known him for many years, and he was the EAD for the FBI's Science and Technology Branch, my counterpart in the FBI. He's one of the 'good guys'.\" With a voucher like that from my wife, how could I not trust the guy? I thought to myself.\n\n\"Good to meet you, Commander.\" said the EAD, his voice not loud but strong and confident. \"I am extremely impressed with the work you have done in this State the last few years.\"\n\n\"Thank you, sir.\" I said, shaking his hand. \"This is my Captain of Detectives, Cindy Ross.\" Cindy shook hands with the man as he complimented her record, as well. It was obvious that he'd read up on us.\n\nLaura had us all sit down on the two sofas. The EAD and DepDirector had instinctively taken the sofa whose back was to the windows, putting them in shadow and me and Cindy in the light. Jack sat beside them, and Laura beside me.\n\n\"What this is about,\" said the Deputy Director, \"is that before I retire, officially at the end of the month, but in reality at the end of this week, I wanted to introduce you to Jack's new boss, and also tell you of the plans for Team Lazarus.\"\n\nThe DepDirector said \"It is obvious to the FBI Director and others at his level that Jack's team is not an ordinary one. Their experience, and some of it working with you, has given them a level of knowledge and ability that most of our teams just don't have. So they're going to remain a separate, special unit, as they were under me, and they will work on special projects of the highest priority to Washington.\"\n\n\"I'm glad they're not breaking up Team Lazarus.\" I said.\n\n\"That will depend on one very important thing.\" said the EAD. He held up two FBI Consultant badges, and you do not need to be the Iron Crowbar's mother to figure out that my and Cindy's photos were on them. \"They need the very best Consultants working with them. I want you back working with Jack and his team.\"\n\nJack knew his future depended on our answers, at least my answer, and he said \"It's like Vito Corleone, Don.\" He was reminding me of the favor done in arresting Kendra Luskin before I'd had a chance to smash her head in with my crowbar.\n\n\"You're making me an offer I can't refuse.\" I said in a gravelly voice. I took the FBI Consultant badge from the EAD. Jack looked considerably relieved.\n\n\"Miss Ross?\" asked the DepDirector. Cindy was looking conflicted.\n\n\"What happened to Dana Fox?\" she asked. If the EAD was surprised by her question, he did not show it. Perhaps his vision was a few steps ahead of mine... like my mother's always was.\n\nJack's voice was derisive as he said \"He's been transferred. He's now working on the legendary 'UFO team', and mostly from Alaska and California.\"\n\n\"Why wasn't he fired?\" Cindy asked. \"One of my Detectives's father-in-law was beaten nearly to death----\"\n\n\"I'm going to have to ask you to accept that Fox was not actually behind that,\" said the DepDirector, \"though he was pushing the investigation into Professor Milton, and crossed some lines in doing so.\" Cindy looked at me. I just looked back at her and shrugged.\n\n\"There is one other thing that I have a problem with.\" Cindy said. \"Calling my father a 'subversive', investigating him illegally without warrants, and hounding him for years. I knew my father long before I knew he was my father, and I have seen what a good, kind and honest man he is. And I've learned a few things about 'loyalty' and 'honor', especially over the last month.\"\n\nCindy then looked the EAD straight in the eye. \"So 'no'... I'm not going to come back to the FBI as a Consultant, not right now. I think Jack and his team are great people, but my level of trust in the FBI overall is not too good right now. I've imagined what I would've done if it had been my father beaten the way Professor Milton was, and I'm not convinced it won't happen to my father going forward. Prove me wrong, and maybe I'll reconsider in the future.\"\n\nJack was looking worried again. The DepDirector nodded thoughtfully. The EAD looked over at Laura, who said \"You've got my husband back, at least. That's a deal worth taking.\"\n\n\"She always was smarter than me.\" said the EAD, to me.\n\n\"That's why she married this man, sir.\" said Cindy, pointing her thumb at me. The EAD nodded.\n\n\"I'm the lucky one on that one.\" I said, taking my wife's hand in mine. \"Well, sir, keep Team Lazarus intact, and I'll consider who might be a good consultant to succeed Captain Ross, though she's irreplaceable.\"\n\nAs we left, I shook the DepDirector's hand. \"Have a great retirement, sir.\" I said. \"Check in on Chief Griswold from time to time... he'll teach you everything you want to know about fishing, and more.\"\n\n\"Thank you, Commander.\" said the DepDirector. \"And I'm going to miss working with you and Jack and his team. And thank you for taking out Superior Bloodlines...\"\n\n* * * * * * * * * * * * * * * *\n\nDo I even need to say where Jack, Cindy, and I ate lunch, while Laura took the DepDirector and EAD to the Cattleman's Club? And do I even need to say what Jack ordered?\n\n\"I understand how you feel, Cindy.\" said Jack, after polishing off his second double-cheeseburger. \"But I do hope we'll get you back one day.\" Cindy nodded but said nothing, as her face was full of fish and chips at the moment.\n\n\"So what happened to Luskin?\" I asked.\n\n\"Once she realized we had the proof to put her in prison for ten years or more,\" said Jack, \"she pretty much confessed to everything... all the false rape and sexual harassment accusations, including a few you didn't find out about, as well as some other things she did.\"\n\n\"Why did she do what she did?\" asked Cindy.\n\n\"I'll bet you this lunch that Don can tell you.\" said Jack.\n\n\"And you get to pay, Jack.\" I said. I turned to Cindy and said \"I'm working on the proof with Jack and his team, but we're not quite there yet. I do know that Luskin was working for U.S. Senator Samuel Russell on a lot of things. Peter Dwayne Gordon's father is a big Russell supporter, and was bitterly angry at his son for working on Conservative campaigns like Bill Nunn's and Val Jared's. I'd say it was Peter Gordon working for Jared that got Lawrence Gordon worked up, and therefore Russell had Luskin set up Peter. And in the case of some of the others... Tate, Stevens, et. al... they also supported Grassroots Conservatives or Russell's political opponents, such as Stevens supporting Zack Millner. The only one I haven't figured out is Quint Danielson.\"\n\n\"Luskin said Russell was directly behind that one, too.\" said Jack. \"But she said she didn't know why. She just did as she was paid to do, and set him up.\"\n\n\"Wow, a father hating his son so bad that he would do that.\" said Cindy. \"Even Teresa's father didn't treat her that badly.\"\n\n\"Until the night Alexis died.\" I replied, remembering Teresa's story of her father's ugly words on that Christmas Eve.\n\n\"Well, Don,\" said Jack, \"did you realize how close my team was to being broken up when you were asked to come back to us?\"\n\n\"Yes.\" I said. \"And I considered saying 'no', then getting Martin as my MCD Lieutenant. But you did arrest Luskin, despite a lot of people wanting the whole thing to be dropped. And we've been a pretty good team all these years. Like Vito Corleone says, we might be doing each other favors for quite a while.\" Jack chuckled and nodded.\n\n\"I have one question.\" said Cindy. \"Who is the guy you said I knew when you told that story to Parker?\"\n\nI smiled. \"Your dad didn't tell you?\"\n\n\"He said it wasn't his secret to tell.\" Cindy replied. I noticed Muscone thinking, then suddenly get it.\n\n\"I think I know.\" Muscone said. \"Few men like him work for free... unless they feel something personal about it. And Eddy the Bounty Hunter not only worked for free on this case, he gave us a lot of information about Luskin.\"\n\n\"That's Iron Crowbar thinking, there.\" I said. \"Here, hold this.\" I handed him the red crowbar. Cindy gave me one of 'those' looks as she realized the answer to the riddle.\n\n\"Damn, this does feel good in the hands.\" Jack said as he examined it. \"I see why you carry it. Can I use it on Cindy to get her back as a Consultant?\"\n\n\"Takes very special people to beat me with that Crowbar.\" Cindy said. \"And they already have.\" She was referring to me and Teresa in the past two Police Boxing Matches. \"Anyway, Jack, give it time, and show me I can trust your organization again...\"\n\nPart 31 - Epilogue\n\nU.S. Senator Samuel Russell and Town Councilman Thomas P. Cook came into the dark inner room of the building north of the City, very near the State Line. The chair behind the desk at the far end of the room turned, and the woman looked at them with disgust and contempt in her eyes.\n\n\"You failed.\" she said.\n\n\"Ma'am,\" said Cook, \"we tried. We did what you said, but---\"\n\nThe woman held up her hand, stopping Cook's words. \"I gave you,\" she said, \"an excellent plan, a brilliant plan, to destroy both the Iron Crowbar and Governor Val Jared... and you two somehow managed to totally fuck it up.\"\n\nRussell and Cook stood silently, wondering if their deaths were imminent.\n\n\"So!\" said the woman, \"we will just have to make a better plan, and I will have to use more competent people to implement it. As for you two... Cook, you have real estate dealings to make. I'll take 50% of your profits, and consider yourself leniently dealt with. Now get out of here.\" Cook turned and left. Quickly.\n\n\"Senator,\" the woman said once they were alone, \"we have a really ugly mess now. It's going to come out about BigAgraFoods, and your involvement in the cover-up of Wheeler's death. You're going to be fighting for your political life for the rest of your term.\"\n\n\"Do you want me to resign?\"\n\n\"Hell no!\" the woman snarled. \"Jared would appoint a Grassroots Conservative to the Senate in your place. Once we get rid of him, then we shall re-evaluate your worth to us in your current position. In the meantime, get some good, really good lawyers. Now get out of here.\"\n\nRussell also quickly exited, feeling lucky to be left alive... and knowing the woman might change her brilliant mind at any time. He also realized that his position as a Senator, and as a living person, might depend on Val Jared remaining Governor... oh, the paradox that karma was setting up for him...\n\n* * * * * * * * * * * * * * * *\n\nWednesday, September 20th, 11:45am. I came up to the small house in the old subdivision in the northern part of Town. Some houses had already been demolished. A bulldozer sat ready to take down the one where a crowd was gathered, including some Police. \n\nThe house had been condemned under eminent domain, the second-worst flaw in the United States Constitution (the worst is a lack of meaningful term limits upon the United States Congress). Thomas P. Cook had bought the land of the entire subdivision under some sketchy circumstances, and he was going to build apartment complexes, enriching himself greatly. The old woman that lived in the house was evicted, ordered by the Court to be out by noon today.\n\nSeveral members of the Veasley Community Center were here to take their friend to her new home. One of them had called Cindy when the bulldozers arrived early and were going to take down the house before noon. Mr. Davis had wheeled his wheelchair in front of the bulldozer in a final stand, even though Mr. Davis was visibly very ill. Cindy had brought me along.\n\n\"This is an outrage!\" shouted old Mr. Davis as he sat in his wheelchair, shaking his fist at Thomas P. Cook, who was laughing, all of this being recorded by a KSTD news camera. \"You're a dirty bastard, Cook!\"\n\n\"What are you gonna do about it, you old coot?\" laughed Cook. He stopped laughing; indeed, it became silent everywhere, when a red crowbar suddenly appeared in front of his chest, followed by the large man holding the crowbar getting between him and Mr. Davis. \n\n\"He's going to watch me beat the living shit out of you.\" I growled at Cook, my eyes boring down into his. It is possible that the KSTD camera was experiencing 'technical difficulties' at the moment.\n\n\"Go ahead, hit me.\" said Cook. \"It'll be all over TV.\"\n\n\"And it'll make me very popular.\" I replied. \"Now get your worthless ass off this property----\"\n\n\"I have a Court order, Troy!\" Cook shouted. \"At noon, this house is going to be razed to the ground, whether or not that old bitch is still in there!\"\n\n\"Captain Ross!\" I called out.",
        "\"Sir!\" said Ross.\n\n\"What time is it?\" I asked loudly.\n\n\"Eleven-fifty, sir.\" said Cindy.\n\n\"I'm going to execute this warrant personally, Captain.\" I said. \"If Cook or any of his construction people step onto this property before noon, you are authorized by me to shoot... them... dead. Do I make myself clear?\"\n\n\"Yes sir!\" Cindy said enthusiastically. Cook backed off to the street, knowing that I meant it and that she would do it. I turned and went inside.\n\n* * * * * * * * * * * * * * * *\n\nThe home had belonged to Lewis Grissom, a combat veteran of the Korean War, with the Purple Heart and the Bronze Star among his many medals. As I entered, I saw his widow in the living room. The house was empty, but the old woman had waited until the very last minute to take the last of the framed photographs off the walls and the fireplace mantle.\n\n\"Oh, hello Commander.\" she said as she saw me come in. \"I was not expecting you. It's very nice for you to come personally.\"\n\n\"It's my honor, Mrs. Grissom.\" I looked at the top photo in her hand, a photo of the Grissom's at their wedding, her in her wedding dress, him in the uniform of an Army Sergeant. \"Your husband was in the Korean War, wasn't he?\"\n\n\"Yes, he was.\" the old lady said wistfully. \"He was one of those that held out at Chosin after the Chinese entered the war. He and his men saved Korea. And he survived, but his feet were frostbitten very badly. For years, when he'd take off his work boots at the end of the day, his socks would be soaked in blood. I washed a lot of socks... and knitted a lot of socks, too.\"\n\nShe looked around the house, sadness in her eyes. \"He built this house for us with his own hands. We raised our children here. I never thought... that I would outlive the house.\"\n\n\"Where are your children?\" I asked.\n\n\"Ah, they're in Boston and Cleveland.\" said Mrs. Grissom. \"I didn't tell them about this... they'd just get upset, and there's nothing they can do about it...\"\n\nAfter a moment of silent contemplation, I said \"I'm sorry, ma'am, but it's time to go.\"\n\n\"Yes.\" said the old woman. I carried the pictures for her, and she took my arm as we went to the door. As we came onto the porch, the old people gathered gave her a round of applause. She'd held out as long as she could, but could not overcome the power of Government hell-bent on destroying her home to help enrich a dirty businessman.\n\nMrs. Grissom was helped into a car, and at 11:58am was driven away to her new lodgings in the retirement community where several of the other old people lived. Everyone began dispersing, except for Cook, the construction crew, and the KSTD News team.\n\n\"All right, guys,\" I said to the Police Officers waiting and watching solemnly. \"You can go.\" They went to their cars as Cindy and I went to my SUV. As we got there, I heard voices, and turned to see Thomas P. Cook and John Hardwood, laughing and joking.\n\n\"Uh oh.\" said Cindy. \"I've seen that look on your face before.\"\n\n\"Cindy...\" I said, feeling righteous anger welling up inside me, \"I don't care how long it takes nor what I have to do. But I am going to take that son of a bitch Cook down. I'm going to find something on him, and I'm going to put him in prison... if it's the last thing I ever do...\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar",
        "blowjob"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/falsely-accused-ch-06"
}