{
    "title": "Hearts of Warriors Ch. 18",
    "pages": [
        "Sorry it took me a bit longer than anticipated to get the next chapter up. I didn't mean to leave you hanging (literally) for that long LOL. \n\nSo I have good news and bad news. The good news is I have the next two chapters written and will be doing a couple of minor tweaks before shipping them off to the ever delightful mikothebaby for editing. The bad news is Hearts is now complete and the last two chapters close out this part of the story, Lily and Mac's journey.\n\nI know, I know, there are so many new threads woven into Hearts, so many teasers to other characters and their untold stories. They will come, I promise, but not in this tale. \n\nI hope you enjoy the conclusion of Hearts :)\n\n*\n\nAcross the area, the V\u00e2rcolac stopped, turning to face the direction of the mountains.\n\n\"LILY!\" Kallum's cry was agonized, terror filling his soul as he opened his mind to connect with his sister.\n\nHe heard Liam cry out beside him, Karn swearing loudly and yelling something he couldn't understand. He was vaguely aware of Liam falling to the ground, clutching at his head. Karn was rushing to him as he rolled over to his side, three Praetorians following closely.\n\n\"Make it stop! Make it stop!\" The redheaded V\u00e2rcolac writhed in agony as emotions cascaded over him, assaulting him from every direction. The sound of his cries was almost as heart breaking as the screaming going on inside Kallum's mind.\n\n\"Elina, help Liam now!\"  Kallum bit out the order, his mind focused on his sister, as one by one, the others joined him in their mental link, feeling Lily's terror as she fell. He spared a fraction of a second looking back at his friend, wishing he could help in some way but knowing Lily needed him more.\n\n\"Karn, get the others back from him. He's overloaded. Elina's on her way.\" He turned and began to speed away from the compound.\n\n\"Where the fuck are you going? What's going on?\" Karn roared after the departing figure, signaling men to follow the V\u00e2rcolac though he knew they had no hope of keeping up with him. But Kallum was already out of earshot and it was Liam who answered him.\n\n\"Lily's dying,\" he sobbed, anguish in his voice. \"Lily's dying...\"\n\nKarn's heart stopped for a handful of beats and then he was roaring at the other Praetorians. \"Find her! Protect the V\u00e2rcolac!\" He couldn't leave Liam unprotected to find out what had happened to Lily, and Kallum had said Elina was on her way to help her cousin, so he had to stay at the compound.\n\nKallum heard Liam's words resounding in his mind and denial raged through his soul. \"No!\" he screamed, speeding through the trees towards his sister's last known location, knowing he was too far away to do anything but refusing to believe he was losing her. Within his mind he heard his mother screaming and the roar his father let out as they realised what was happening.\n\n\"No! Save her, Kal. Save her!\" His mother's pleas broke his heart and sent an added burst of speed pulsing through him.\n\n\"Lily. Lily.\" He sent to her repeatedly, willing her to respond as he raced up the mountainside. Resounding screams filled his mind as everyone cried out to his sister. It was too late, he knew it was, and yet he kept running, faster and faster.\n\n*****\n\nTime seemed to move in slow motion, Lily's fall from the mountain taking an eternity. Mac was in her head, crying out to her. She could feel his grief; feel his heart breaking as she fell slowly through the air. Kallum called to her, Dara and Cassia, her parents, Elina, Rafe and Annie. They were all there in her mind, reaching out in terror but all she could hear clearly was Mac.\n\n\"Live!\" One word called repeatedly. She wanted to live for him but surely even a V\u00e2rcolac couldn't survive a fall from this height. Even if she did, she would lose the baby.\n\n\"I'm sorry. So sorry.\"\n\nWhy was it taking so long to fall? Each second seemed to last an hour, drawing out the terror in her heart, the anguish of listening to all the emotions crowding her mind. Was it cowardly to want oblivion? Lily collided with an overhanging rock, banging her head hard. The impact hurt, blood beginning to flow from her head, blurring her vision as dizziness over took her. Her vision swam sickeningly then darkness descended.\n\n\"Lily! Stay with me, Lily, please, stay with me!\" Mac's anguished cry was the last thing she heard.\n\n*****\n\nKothari snarled, rage suffusing him as he connected telepathically with Lily. He was with her as she plummeted down the mountain, so close and yet he felt as if he was so far away. He had been halfway up the mountain, still in panther form, when he heard her scream and looked up to see the disaster playing out above him.\n\nLinked with his fellow V\u00e2rcolac, he could hear them screaming to their friend, the sound of Dara's agonised crying more than he could stand. If there was one thing on the planet that he just wouldn't tolerate, it was knowing she was hurting. He had a split second to act, to co-ordinate his timing. He would have done it for Lily regardless, but he was more motivated to succeed because his angel was weeping. He had to be in time. He just had to!\n\nLily's chaotic thoughts suddenly disappeared from his mind and fear pulsed through his body, his and everyone joined with him. He knew she hadn't reached the bottom yet because she hadn't passed him. He could still see her above him and a little to to the left.\n\nMac was screaming from above, his words echoing in the valley. Kothari had never heard such pain from someone before, couldn't begin to imagine how much Mackenzie's heart was breaking being powerless to save his mate. He put on a burst of speed, sighting an outcropping on the other side and just beneath him. If he timed this right... \n\nLily's form was limp as it neared, moving at incredible speed. Could he do it? He had no idea, but he was the closest so he had to try. He tensed, waited for a beat of five and then sprang forward. His body slammed hard into Lily, pushing her sideways with a speed almost as fast as her descent downwards. They both spun fast towards the outcropping. It looked like they might make it.\n\nKothari shifted in mid-air, wrapping one arm around Lily as soon as he did, the other reaching for the bushes on the small ledge. He caught them and twisted his body, slamming into the rock face with his back, dangling precariously. He was able to take the brunt of the impact as Lily groaned, consciousness beginning to return. Blood was pouring from a deep wound in her head, her face a mask of red. \n\nShe hung limp in his grasp, their combined weight too much for the feeble roots on the ledge. They began to come away, causing Kothari to hiss loudly. \"Move, Lily! Grab the ledge. These bushes can't support both our weight.\"\n\nThe sound of his voice seemed to shake Lily further into consciousness. Her eyes fluttered open blindly, and then the roots snapped further, forcing them to drop a few inches.\n\n\"Lily, I can't hold us both!\" Kothari yelled.\n\nLily scrambled in confusion, reaching up blindly and finding the hard edge of rock just as the bushes gave way. They rent from the rock in a sickening sound, sending Kothari downwards. \"Kothi!\" \n\nThrowing out her free hand, Lily reached for him, catching his shoulder as he fell. For a moment, only Lily's grip on the rock was what held them suspended and then Kothi's hand snaked up and grabbed the ledge. He pulled himself up quickly, landing agilely in a crouch and grasping Lily's arms tightly to pull her up beside him. There was just enough room on the ledge for both of them. For a moment, they simply sat there leaning against the cold rock face, breathing hard, the sounds of their thumping hearts loud in their ears.\n\n\"Kothi. Oh God, Kothi.\" The words stammered out of Lily's mouth, fear and disbelief making her voice quiver. The sensation of falling was still surrounding her, Mac screaming her name as the ground gave way, everyone's screams resounding in her head.\n\n\"It's okay, Lily. You're okay.\" Kothari pulled her trembling body into his arms as shock kicked in and she began to shake and sob. He could sense Dara in his mind along with the others, she was still weeping for Lily. He had to reassure her.\n\n\"I've got her. She's fine. A little shaken up but she'll be okay.\" He sent the message down all mental bonds, feeling the collective sigh of relief that went up from everyone. \"Give her a little time. She's a bit shocked right now.\"\n\n*****\n\nKallum reached Mac just as his message came through. The Praetorian was on his hands and knees screaming for Lily at the cliff's edge. He had never seen Mackenzie so out of control before, a wildness to him that was frightening. \"Kothi has her, Mac,\" he called; afraid they'd lose the vampire over the edge of the cliff too he sounded so desperate.\n\n\"The black thing? I saw something black crash into her and then they were out of sight.\" Wild eyes met his, pleading in them. \"She's okay, isn't she? Please say she's okay.\"\n\n\"Lily, please Lily, tell me you're okay.\" He sent the message down their mate bond. His heart wouldn't stop pounding, fear an acrid taste in his mouth. Lily had to be okay. Anything else was just unimaginable. His vision swam from the tears falling, the horror of watching her fall playing in vivid colour in his mind.\n\nKallum nodded, his own heart barely starting to beat normally at the scare they'd had. He couldn't begin to imagine how Mackenzie felt watching his mate fall. \"She's fine, a little scared but unharmed. Just give her a moment. She took a knock to the head.\" He did his best to reassure Mac even though his protective instincts were now rearing up and his eyes turned hard as he regarded his sister's mate.\n\nNow that Lily was safe, the adrenaline was fading and leaving endless questions in its place. His sister had almost lost her life and she'd been alone with her mate at the time. It was unheard of for mates to hurt each other but there was always a first time for everything. Lily had told him Mac didn't want to have any children. Had the vampire tried to get rid of the baby? He hated thinking like that but he had to know. \"What the hell happened, Mac?\"\n\nMackenzie shook his head, trying to calm his heart and shake the image of Lily falling from his mind. He'd never been so scared in his life watching the ledge crumble and his Lily vanish before him. He dragged a shaky hand through his hair as he stood up, not oblivious to the subtle accusation in Kallum's voice.\n\nHe didn't blame him. If Lily had been alone with someone else when she fell, he would be equally as suspicious and demand answers. \"She was too close the edge. She was coming to me and then it just crumbled beneath her. I couldn't get to her in time, Kallum. I tried, but I just couldn't get to her.\"\n\nThere was so much guilt in his tone that Kallum softened. Everyone had just had the fright of their life and they needed to let everyone work through that. Mackenzie's expression, the anguish in his eyes and voice as he spoke told him all he needed to know. He hadn't tried to hurt his sister. It had been an accident and the main thing was Lily was safe.\n\nHe leaned over the ledge and looked down trying to sight his sister and his friend. \"They're further down than up. I'll tell them to make their way down and we'll meet them at the bottom.\"\n\nHe turned to find Mac already heading for the trail down. Shooting a quick message off to Kothi, he followed him, jogging to catch up. \"It'll take them a little while to get down. Lily needs to get herself together before they can start. Take your time, Mac. This has been a shock to all of us.\"\n\nHe reached down his bond to his parents. \"Mom, Dad, Lily's fine. Let her have a bit of time to recover from the fright. I'm sure she'll be in touch soon.\" \n\n\"Who do I need to kill?\"  The cold determination in Andrei's tone was frightening.\n\n\"No one, Dad. The ledge crumbled, it was an accident. I'll ask Karn to get some of the Praetorians up here to check the place out and make sure no one gets too close to the edge again.\" \n\nKallum broke off contact with them, sending his mother a soothing kiss. That would hold them for a while and give Lily and Mac some space. It was plain the vampire needed to be alone with his mate judging from the speed that he was moving and the expression on his face. \"Is now a good time to say congratulations?\" He deliberately injected humour into his voice, trying to lighten the sombre mood.\n\nMac shot him a quick look and then stopped, taking a deep breath. \"If I hadn't been such an ass none of this would have happened,\" he ground out.\n\n\"You need to stop that before we get to Lily, Mac. She needs you, her and the baby both. Wallowing in guilt will not help the issue. We can all look back and think if only we'd done something differently. The thing is we didn't and events happened. Let's all just be grateful Lily's safe.\"\n\nHe clapped him on the shoulder and walked past him, turning to look over his shoulder. \"Though, if my sister throws herself off a cliff again to get away from you, I am going to rip you to pieces. Just thought I should let you know that.\"\n\n\"If Lily ever does anything like this again, I won't even put up a fight, Kal.\" Mac continued on down at his side, his thoughts solely on Lily, and how he could make this up to her. ~~~~~\n\nThe compound erupted into a hive of activity. One moment it was silent and then next vampires and V\u00e2rcolac alike were racing around. The tall, brown-haired hybrid took off into the trees with a trail of people following in his wake. Reasa watched them go, moving silently through the trees towards the back of the house where they'd come from.\n\nLying on the ground was the red-haired hybrid, a blond vampire standing protectively over him issuing instructions to more vampires. The men and women listened and then took off into the surrounding trees in formation, clearly protecting the outer perimeter of the compound.\n\nWhat the hell was going on? The male on the ground didn't appear physically injured and there was nothing to indicate why the place had erupted into a panic. Reasa knew they hadn't found her. She was still alive and that wouldn't be the case if they had. No one was even coming in her direction but something was clearly wrong.\n\nIn the distance, wolves began to howl and the sound sent a shiver through her. The wolves would be immune to the poison, which meant she had to act now while everything was in disarray. If the Weres arrived too soon then she would fail in her mission.\n\nThere was only one vampire still within distance of her mark but he looked vicious. She would have to take him out first and that caused her a moment's pause, but it didn't last long. He was protecting the abominations. He was therefore collateral damage. Reasa pulled the gun from her waistband and sighted down the barrel at the blond vampire.\n\nLiam struggled to close off the emotions assaulting him. The pressure in his head was mounting and he knew if he didn't stop it now something awful would happen, something much worse than Lily falling from the mountain. He slammed up mental barriers one at a time. It was slow and painful, closing each compartment in his mind, shutting down his own emotions as he did, but he had to do it to protect everyone.\n\nStray thoughts started to bleed into his head, no...not thoughts; emotions. They weren't coming from any mind he knew but there was something faintly familiar about it. Hadn't he sensed it earlier, that strange itch he'd had at the back of his head?\n\nIntent. So powerful, so focused, so determined. \n\nLiam stiffened, shock rippling through him. Kothari was calling out that he had Lily, but he couldn't stop to think about that. Evil was near and it had a specific target in mind and it wasn't him!\n\nKarn tensed the instant he saw Liam go still. He started to turn, sensing danger close by somewhere on the left. \"Brandon!\"  Even as he called telepathically, he knew that whoever was out there was already moving to hurt the V\u00e2rcolac. \"The compound's under...\"\n\nHe didn't get a chance to finish his warning. Liam suddenly rose so swiftly, he was a blur of movement. The air rippled as the man vanished and morphed into an enormous russet wolf. Something whistled through the air towards Karn, and then the wolf sprang, throwing him to the ground and covering his body like a shield.\n\nReasa fired the silenced gun. It should have taken the vampire down but the abomination changed into a wolf just as she pulled the trigger, barrelling into the blond. The bullet hit the wolf square in the back and it went down hard, pinning the vampire to the ground.\n\nHeart pounding in her chest, she jumped from the tree running at full speed across the yard towards them. She still had to time to complete her mission; the vampire was helpless under the weight of the wolf. Talons bared, she raced for the wolf, screeching in denial as another wolf appeared from nowhere, sailing through the air to crash into her, spinning her away.\n\nReasa's talons sliced down the side of the attacking wolf but it was a glancing blow, the animal rolling and twisting on the ground to come back at her in a fury of teeth and fur. The sounds of more wolves and returning vampires told her she had failed, but she wasn't going out without a fight.\n\nHer leg kicked out, catching the wolf in the stomach as it dived at her again. She used all of her strength to boost the animal as far away from her as possible, her sharp eyes searching for the dropped gun.\n\nThe multi-coloured animal attacking her had to be a V\u00e2rcolac. Reasa's talons were tipped in vampire venom and the animal was still coming at her. A normal Were would be dying in agony by now even from the shallow wounds inflicted. If she could reach her gun, she could poison this one as well before she died. She dived for the weapon as the wolf sprang again.\n\nLiam felt fire racing through his back as the bullet struck home. He fell on Karn, effectively pinning him down but not being able to move as the shock of being shot stunned him.\n\n\"Liam, move. I can't get up.\" Karn pushed with all his strength but the wolf was too heavy even for him. \"Liam, move!\" He cursed loudly as he felt the other man's blood start to leak on him, fury exploding inside him. He'd failed! He was supposed to protect the V\u00e2rcolac and Liam was injured, possibly poisoned.\n\nA startled yelp had him turning his head and he saw another wolf attacking the female vampire who'd breached their security. The wolf's exotic markings of red and golden streaks on brown fur told him who it was that had just been injured. Elina! More fury erupted, enough that Karn found the strength from somewhere to roll Liam from him and get to his feet just as Praetorians and wolves appeared in the practice yard. \"Protect Liam!\"\n\nHe was aware of Brandon and the others rushing to the fallen V\u00e2rcolac's side as he headed towards the battle taking place. The vampire had broken off and was heading towards the weapon she'd used on Liam. No way in hell was she going to use that weapon on Elina. It would be over his dead body. Karn leapt after the female, tackling her to the ground and driving his fist into her stomach as they rolled in the dirt. Talons wreaked havoc within her body as she shrieked in agony and the wolf joined the melee going for her throat.\n\n\"No!\"  Liam screamed, struggling to get to his feet. \"Elle, save her! Please, save her.\" \n\nElina's head swung away from the assassin, wolf eyes blinking in disbelief as she watched her cousin in wolf form approach on shaky legs, falling and trying to drag himself forward. \"She tried to kill you, Liam. Have you gone mad?\"  The fury within Elina needed an outlet. Someone had dared harm her cousin and that couldn't go unpunished. She could hear the woman screaming as Karn ripped at her flesh and the sound filled her with joy.",
        "\"Elina, please!\"  Liam's mental voice broke, his body aching with the effort to get to the woman. \"Please, Elle, please!\" \n\nShe could not deny him. His distress was absolute and it had nothing to do with his injury. All his focus was on the woman who had tried to kill him, his goal only to save her life. It made no sense to Elina but if it was what Liam needed then she would protect her when he could not.\n\nReasa's vision swam, her body a mass of agony from the vampire's talons. She'd put up as much of a fight as she could but her blood loss was too great, her adversary a more skilled fighter than she. Through tears of pain, she saw his talon's descend towards her neck and knew this was the killing blow. She had tried and failed but at least she had tried.\n\nElina crashed into Karn, knocking him from his position straddling the vampire's body. He was so stunned at the unexpected assault that for a moment all he could do was stare at her in surprise. Then his rage took over and he sprang towards her. \"What the fuck are you doing?\" \n\nShe remained in wolf form but he knew she could answer if she chose to but she remained mute, her position in front of the female making it more than clear that she was protecting the assassin. \"Shift, Elina, now!\"\n\nThe wolf bared its bloodied teeth, growling furiously, its hackles up and Karn's rage intensified. \"She has to be put down. You know the penalty for an attack on the pack or the V\u00e2rcolac. She shot Liam and probably poisoned him. He's your cousin for fucks sake! You're supposed to protect him not the person who's tried to assassinate him.\"\n\nPrivately Elina agreed with him but Liam's pleas were still echoing in her head. He wanted the woman saved so she would save the woman for now. Justice could be meted out later when wiser heads' prevailed.\n\nThe Praetorians ringed them, Lacey appearing at Liam's side and kneeling before him. She slipped on a proffered T-shirt to cover her nudity from shifting from wolf form, and surveyed the scene. Liam was recovering from a gunshot wound, the damaged area healing as she watched. A frown crossed her face and she glanced towards the wounded female vampire. \"Was the bullet poisoned?\" Silence greeted her words as everyone waited to hear the answer. \n\nReasa wheezed out a pained breath, laughter bubbling up from her throat. \"Yes. The abomination will die. What blood are you going to transfuse it with, vampire or Were? Too much of either will have a negative effect. You can't save it as you did Pietro.\"\n\nElina growled turning on the vampire with hate in her eyes. Liam had wanted her to save the other woman but her taunts were a death sentence. She couldn't remain alive after what she'd done to her cousin.\n\n\"He heals,\" Lacey said, her voice quiet as Liam rose slowly to his feet, the air shimmering as the man appeared. He was still unsteady but he was feeling stronger by the moment.\n\nSilence reined in the compound as the full import of Lacey's statement sank in. \"The V\u00e2rcolac are immune?\" Karn's stunned words broke the silence.\n\n\"It appears so,\" Liam answered, walking over to Elina and placing a soothing hand on her head. She whined softly and rubbed against him, bathing him in her scent and seeking comfort that he was indeed okay. He dropped down beside her and hugged her tightly, sending a private thought down their bond. \"Thank you, Elle.\" \n\nIt was said with such emotion that she rubbed against him again even though she knew she had to make him see sense. \"I have no idea why you wanted her life spared, Liam, but you must know that this is only a temporary reprieve. The triumvirate will not tolerate this attack on you. The pack won't, our parents won't. Her life has only been spared for a short time. Justice must be served.\" \n\n\"Then they must be made to see sense, Elle. She can't be harmed, not ever. If they want to kill her then they will have to go through me first.\"  \n\nElina shifted form, staring into Liam's eyes. \"Why protect her, Liam?\" She asked the question aloud but he answered her privately.\n\n\"She's my mate.\"\n\nIt was the last thing she expected to hear and she could only stare at him shocked for another long moment before she threw her arms around him and hugged him tightly. \"Oh, Liam,\" she whispered, tears gathering in her eyes. \"I'll do my best to help but her crimes...\"\n\nShe couldn't finish what she was saying. They were in an impossible position. If the woman wasn't punished, then word would get out and there would be more attacks against them. If the punishment Caleb had decreed so many years ago was enacted and she was put to death -- then they would likely lose Liam completely as he went rogue.\n\n\"What are we supposed to do with her?\" Brandon asked, staring at the recovering vampire. He had wanted to go to Lily but his place had been at the compound. He wanted some resolution to what had happened at the compound so he could find out if his friend was okay.\n\nEveryone looked to Karn who was glaring at Elina's back. \"Put her in the holding cells in the basement. We can sort this mess out when Mac and the others get here.\" He strode over to Liam and Elina. \"Are you sure there isn't any damage from the poison?\"\n\n\"I feel stronger by the minute,\" the redheaded V\u00e2rcolac answered, his gaze watching the caramel-skinned woman with hate in her eyes as she looked back at him.\n\n\"In that case, the next fucking time you put yourself in danger to protect my ass I'll make sure you rue the fucking day you do it! Are we clear on that? And what the fuck happened to Lily? Is she okay?\"\n\nLiam's eyes tracked his mate, watching her being bound with chains of steel and led away towards the house. \"The poison would have killed you, Karn.\" He broke his gaze and turned to the irate vampire. \"Kothi got to Lily in time. She's okay.\"\n\n\"You didn't know it wouldn't kill you!\" Karn yelled furiously, his pale blue eyes icy cold despite his raised voice. Inwardly, he was breathing a sigh of relief but the fact two of the V\u00e2rcolac had almost lost their lives on his watch was fuelling his fury no end. No, make that three as Elina bloody Alexander thought she was some kind of superhero.\n\nLiam chose to ignore him, his focus once more totally on the woman moving away from him. He had to go to her, had to talk to her and try to find out why she felt the way she did, why she couldn't see that he was her mate.\n\n\"Today has been a distressing day for all of us,\" Lacey interjected, her voice calm and soothing. \"The threat has been neutralised, both Liam and Lily are fine despite their trials. Let's all calm down and take some time out until we can all get together and decide what our next course of action is going to be.\"\n\nKarn wasn't finished, not by a long shot, but he knew he was in over his head at the moment. He needed to calm down so he could think rationally and give Mac time to return and deal with the wolves that appeared to be put on the planet just to drive him insane.\n\nHis gaze fell on Elina again and the cold burn of anger ignited deep. She met his gaze defiantly and his beast stirred, quietly impressed with her arrogance. Neither looked away as everyone started to head into the house. \n\nIt was only when Liam moved that Karn took the three steps necessary to get to her side. \"You shouldn't have done that, Elina Alexander. Once, yeah I'll let you get away with once, but not twice, Missy. You will rue the day you interfered with my job of protecting the V\u00e2rcolac.\"\n\nIf he'd expected her to shrink from his fury, he was in for a long wait. She smiled slowly, but it was without warmth, her eyes cold. \"Oh, I think you'll find it was you who made the mistake today, vampire. You allowed Liam to be harmed. No one allows my cousin to be hurt without there being consequences. Believe me, we will continue this, only now is not the time. I'll let you know when it is.\"\n\nShe turned and walked away, fighting down the rage that wanted to consume her, calming her wolf who wanted to bite the stupid vampire and show him who was boss. One day soon, they would have a reckoning and she had no intention of coming out the loser. She was very much her mother's daughter and Karn would know that when the time was right.\n\n*****\n\n\"Mac.\" His name burst from her lips the second she saw him all but flying the last few hundred yards down the mountain trail. Lily threw herself into his arms, tears streaking the blood on her face as her mate crushed her tightly to his chest. \"I'm so sorry, Mac. Please forgive me.\"\n\n\"Shhhh, Lily. Don't say anything. Just let me hold you.\" Mac was shaking, relief warring with the terror still infusing him. He could feel Lily's tears on the side of his neck and knew she could feel his. How the fuck had they come to this? Where had everything gone so wrong and what could he do to make it right? \n\nLily had almost died. They had almost lost their child, an innocent brought into the world by love and who hadn't had a chance yet to experience all the wonders out there to live. \"Lily, oh God, Lily, when you fell and I couldn't get to you in time...\" Mac's voice broke, anguish in every word.\n\n\"It wasn't your fault,\" she whispered, automatically soothing her mate because she couldn't stand to hear the anguish in his voice. \"None of this was your fault. I should have stayed at the compound, Mac. I wasn't thinking straight and I panicked and ran. I should have stayed and talked to you, but I was feeling so ill, I wasn't thinking rationally at the time.\"\n\n\"If I hadn't told you about Sophia then you wouldn't have had the need to run. You would have come to me, we could have talked things through, and I'd have seen what a precious gift it was you were giving me. I let you down when you needed me, Lily. The fault is mine.\"\n\n\"For what it's worth, if you'd both talked to each other none of this would have happened but that's a moot point anyway,\" Kallum interjected, running a hand down Lily's back to soothe himself more than her. He could see she was safe and knew that whatever the future held for his sister, it could surely only be good after everything that had occurred.\n\n\"This is mates business,\" Mac growled, his more dominant nature exerting itself as the shock of Lily's accident began to wane.\n\nA loud snort from Kothari's direction had all eyes turning to him. His customary dark glasses hid his eyes but his expression was eloquent. \"If this is the crap you have to deal with being mated then that's something I have no intention of experiencing.\" He half-smiled at Lily as he spoke, giving her a short nod. \"And again our Liliana causes havoc. I want to be a fly on the wall when Andrei gets through with you, not to mention Rafe. You're in trouble again.\"\n\nLily paled, feeling queasy again, not just because of her pregnancy, but also at the thought of dealing with her father and Alpha. Her Dad would be okay once he got over his fear but Rafe...she had muted her bond and he'd warned her what the consequences of that would be.\n\n\"Leave her alone, Kothi,\" Kallum admonished, his eyes narrowing as he looked back at their friend. Lily didn't need any additional stress right now which was why he'd tried to buy her more time from his parents checking in with her. She needed to be with Mac and alone.\n\n\"Yes, behave!\" A cool female voice said from the trees and Rayne strode into the small clearing, exuding a quiet confidence that seemed to lower some of the anxiety surrounding them. She gave her son a stern look, trying not to smile at his rebellious expression. He had always been a handful as a child and was even more so now, but there would always be a part of him that acceded to his mother no matter how old he was.\n\nShe shifted her gaze and gave Mackenzie a reassuring smile as she held out her arms to Lily. \"You gave us all one hell of a fright, Liliana.\" She waited for Mac to release his mate so she could give her a hug. He did so reluctantly.\n\nKothari conceded to his mother, only slightly annoyed at the reprimand. He could scent his father close and dialled back his natural tendency to try to stir things up. There had been enough excitement happening today as it was. It was time to withdraw and work out what the connotations of today meant for him on a personal level.\n\n\"While this little drama was playing out here there was an attack on the Praetorian compound,\" Gard announced, coming to stand beside his mate. He ruffled Lily's hair, his gaze fixed on Mackenzie's face who turned to stare back up the mountain towards his domain.\n\n\"What happened?\" The words were bit out tersely, fury starting to radiate from the vampire. Someone had attacked the V\u00e2rcolac while Lily's life was at risk? That was unacceptable!\n\n\"The European vampire slipped inside during the chaos of Lily's accident,\" Gard continued. \"Lacey let Rafe know what was going on. Liam was shot with a poisoned bullet.\"\n\n\"Oh my God!\" Lily cried out, as Kallum and Kothari tensed at the news.\n\nGard held up his hand to quiet them. \"He's fine. It appears the V\u00e2rcolac are immune to the poison. Speculation is that is because of your hybrid D.N.A. From the scant information Rafe has been able to get so far, Mallen is of the opinion that possibly the were gene blocks the harmful effects. This poison appears to only target vampire D.N.A. Everyone at the compound is fine though Karn appears to be a bit put out with the day's events.\"\n\nMackenzie couldn't decide what to do. He wanted to spend time with Lily, to make sure she and their child were okay, and yet, his duty pulled him to the compound, to find out what happened and how to make sure it didn't happen again. His indecision was plain for everyone to see.\n\n\"The vampire's still alive at the compound,\" Gard told him. \"She's in the holding cells but it's not deemed safe to take Lily back there yet, not in her current condition. The likelihood of the vampire being able to hurt either Lily or the child is small but there's no harm in taking precautions. Freya has offered the use of her cabin. I trust you don't want to be separated from your mate right now?\" He arched an eyebrow, his lips quirking in a small smile at the deep frown on Mac's face.\n\n\"I swear Kothi gets his teasing from his father,\" Rayne sighed, shooting a reproving look at her mate. \"Go spend some time with your mate, Mac. Sometimes family has to come first. We're heading up to the compound and will assist Karn. Caleb and Annie were on their way to brief the Council but have decided to put it off considering what's happened. It's going to take a bit of time for everyone who needs to be there to get up to the compound. There's time for you to be with your mate.\" She was concerned at how pale Lily looked and nodded her head in her direction.\n\nMac's grey eyes took in Lily's pallor and there was no decision to make. \"Call us if you need anything.\" He collected his mate in his arms and cradled her tenderly. Ignoring everyone, he took off towards the secluded retreat so he could spend some much-needed time with his woman.\n\nAs soon as they had left, Kallum turned cold eyes on Gard. \"Why does she still live?\" Like Mackenzie, he was furious that someone had breached their defences and tried to harm Liam. Death was the only punishment for that crime.\n\n\"Liam had Elina save her.\" It was Rayne who answered.\n\n\"Why the hell would he do that?\"\n\nA sad smile crossed Rayne's face, concern in her deep green eyes. \"The vampire is his mate.\"\n\n\"Oh, fuck!\" Kallum groaned as Kothari's loud laughter filled the valley.\n\nTo be continued... "
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "hybrids",
        "mates",
        "love",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/hearts-of-warriors-ch-18"
}