{
    "title": "The Locker Pt. 03",
    "pages": [
        "Author's Note: This is a work of adult fiction. It is a story of sexual fantasies and fetishes. These sexual practices are not for everyone, but those of us who delve into them understand the allure. The characters in the story certainly do. If you enjoy this story and the fetishes involved, great. If not, please forget the whole thing. \n\nA much longer chapter, this time...\n\nRead Chapters 1 & 2, first.\n\nSteve had unlocked the belt and arranged another date for the next day, Sunday.\n\nCindy slept in, only waking when her bladder began screaming for release.\n\nShe staggered into her bathroom, only half awake. It was then there that she remembered what she was wearing.\n\nShe almost had an accident as she stripped off the latex panties and removed the plugs. What was I thinking? She asked herself. I've never, ever been this horny or this slutty.\n\nBut it did feel good, she admitted to herself, really good. And sexy. And it was defiantly something she'd fantasized about, but never tried.\n\nShe was still thinking along those lines as she stepped into the shower. As she washed, she began to feel herself. Her pussy demanded attention, but the more she rubbed and massaged her clit and vagina, the more she realized that her body missed the plugs. \n\nWhen she finally got her orgasm, it wasn't nearly as pleasurable as the ones she'd gotten from the chastity belt. Thinking about it, it occurred to her that the belt's plugs gave her orgasms as good as any she'd had with any of her boyfriends.\n\nThe situation was both fascinating and scary. It was also worth exploring further.\n\nFinishing up, she started dressing for today's date with Steve. She picked out a nice bra and panty set, to go with a pretty, but short dress. \n\nSteve called at 10:30, to make sure she was awake.\n\n\"Great, I'll be over in a while. How about you try wearing some of the latex today?\"\n\n\"Hmm, I already have.\"\n\n\"Have what? Tried the latex on?\"\n\nOh, oh, she thought. Too much information.\n\nEmbarrassed, she replied, \"sort of,\" then after a pause, \"forget it. I'll think about it. See you in a half hour. Bye.\"\n\nSteve was excited and very pleased with the way things were going with Cindy. \n\nHe had dated a lot since the divorce, finding a woman who liked sex wasn't difficult but he hadn't found one who had similar tastes in sexual fantasies and fetishes. Robin had been close to perfect, but he got carried away with her and pushed her too far. He knew that now. \n\nHe scolds himself for losing control of his emotions and letting his fetish fantasies get out of control. He promises himself that it won't happen again.\n\nCindy, thinking about Steve's request, walks into the bedroom with all of the latex. Much of it was still spread out on the bed.\n\nShe starts to get turned on just looking at the stuff. She'd often fantasized about wearing latex & rubber, but had never tried it, until last night, that is. \n\nIn the past, when she'd surfed the Internet looking at all of the latex options, she'd always gotten very turned on, but all of the nice stuff had been just too expensive, for her limited means. Her X had never been interested, either.\n\nShe picked up one of the cat suits, God it was sexy. She could only imagine how it would feel. The warmth, constriction and the smoothness of it, all seemed very appealing. But she couldn't see herself wearing it out in public. Impishly she thought, at least not now.\n\nShe picked up a black body suit. Now this looks interesting. A dress would cover it up, or at least most of it. \n\nIt was like a one-piece swim suit, although it included a high, round neck, short sleeves and a zipper from the neck down to the waist, in back. The fascinating part was that it also had a zipper from front to back in the crotch. Access to her privates would be easy...\n\nCindy used a little bit of lube to make it easier for her to slither into the thing. It was tight but stretchy. She struggled to get the zipper closed, but eventually got it pulled all the way up to the nape of her neck. \n\nThe latex felt great, just as she'd always dreamed it would. As she rubbed her hands up and down her torso, her pussy called to her. She unzipped the zipper over her crotch, and started to finger herself, but stopped when she realized that Steve would be there soon. With a sigh she closed herself back up.\n\nShe admired herself in the mirror. The latex felt great and it looked fantastic on her as it compressed her body and cupped her breasts.\n\nI'm going to have to try out all of this stuff, she thought happily. A fun project for another day...\n\nNoticing the time, she picked out a slinky, knit T-shirt dress with a cowl neck and slipped it on. She then grabbed a pair of sandals with 3\" heels, and moved into the living room.\n\nJust as she finished putting on her shoes, Steve was at the door.\n\nAs soon as she lets him in, he hugs her and kisses her, again deeply and passionately. She enjoys it and returns the passion.\n\nAfter a few minutes, they step back, and Steve examines her dress.\n\nLooking disappointed, he simply asks, \"Latex?\"\n\nShe smiles, \"Yes, I have some on. Wanna see?\"\n\n\"Of course,\" he said with a big smile.\n\nCindy grabs the hem of her dress and peels it up to her neck. Steve looks her up and down, appraisingly, \"wow.\" He lifts his hand in the air and spins his finger, so she does a twirl for him.\n\n\"Oh, that's really nice. You look great! But I think you need more.\"\n\n\"More? Like what?\" She asks skeptically.\n\n\"Wait here,\" Steve walks into the back bedroom and returns a few minutes later with several items in his arms.\n\n\"Stand still and I'll help you with these.\"\n\nNervous, she pleads, \"Steve, I don't know. I've never worn latex before, and this already seems like enough for my first time.\"\n\n\"Oh, come now, how does that lovely body suit feel?\"\n\n\"Really nice, actually,\" she admits with a smile.\n\n\"Well then, this will make it feel even better, now lift your arms up.\"\n\nWith a nervous sigh, she does as instructed. Steve immediately wraps a latex under-bust corset around her waist, and begins lacing it up in back. As he pulls it tighter, Cindy feels uncomfortable and she starts having trouble breathing. She feels her waist being compressed more and more. \n\nJust as she starts to complain, Steve says, \"You're looking fantastic. Just a little more, relax and go with it. Please.\"\n\nCindy, gives in and waits for him to finish. A few minutes later she feels him tying off the laces, and zipping a flap up over the cords.\n\n\"OK, come,\" he says as he pulls her by the arm into her bedroom and the floor length mirror she has mounted on the wall.\n\nWhen she gets a look at her compressed body, she's momentarily stunned. \n\n\"See,\" Steve says pleased, \"you do look fantastic. You have the shape of a swimsuit model.\"\n\nCindy can only agree with him. She does look good. The corset has trimmed her waist, pushed up her boobs and emphasized her hips. Her waist looks tiny and the others look bigger.\n\nAlthough she is still feeling uncomfortable, and having trouble breathing, she likes it. It's another big turn-on and her shape is now closer to the one she's always dreamed of having.\n\n\"OK, you're right,\" she admits, \"I do like it, but it's going to take some getting used to.\"\n\n\"Yes, but you will get used to it, Robin did, and you look better than she ever did.\"\n\nCindy liked hearing that.\n\nEscorting her back into the living room, he said, \"all right then, let's take care of the shoes.\"\n\nOh god, Cindy thought, what's next? \"What's wrong with these sandals?\"\n\n\"Well, they are pretty, but not tall enough and not sexy enough, and they certainly don't go with your under-garments. Sit please.\"\n\nWith a heavy sigh, Cindy sat on the chair that Steve indicated. She had a little trouble flexing at the waist as the corset was limiting her ability to bend and twist.\n\nSteve knelt in front of her like a shoe salesman, removed her sandals and began pulling a tall latex boot up her right leg. He continued, on and on until her foot finally hit bottom. \n\nCindy was amazed, fascinated and scared, too. The boots were thigh high and had crazy-tall, narrow heels.\n\nAs Steve started lacing them up, she started protesting, \"I can't walk in these things!\"\n\n\"Oh, come on. Sure you can. Robin did. Admit it, they're very sexy, aren't they?\"\n\n\"Well, yes they are, I guess, but...\"\n\n\"No 'buts', give them a try. Haven't you ever fantasized about wearing stuff like this?\" Steve said as he continued to lace them up her leg.\n\nCindy nodded, reluctantly. She had to admit to herself that they were very sexy in a fetishist kind of way, and she had dreamed of stuff like this. She wasn't sure if they should be considered high-fashion or slutty, so she decided to go with high-fashion. \n\nWhen he finished with that leg, he tied off the laces and proceeded to the left one.\n\nOnce he had both of the tall boots in place, he helped her to her feet.\n\n\"They can be locked on, you know,\" he said, smiling, \"how kinky would that be?\"\n\nIgnoring him, Cindy worked on standing and balancing in the tall spikes. The rubber seemed stiff, like the corset, and it both helped support her ankles and restricted her from bending her knees.\n\nAlthough her feet hurt, it wasn't unbearable, but she wasn't sure how it would be an hour from now. \n\nHolding onto Steve's arm, she took a few tentative steps. She found that she could walk, but not well.\n\n\"Robin had to focus on walking 'heel-to-toe', one foot in front of the other, with small strides. With the thigh bands on, the length of her strides were limited anyway.\"\n\n\"Hmm, how tall are these heels, anyway?\" she asked, preoccupied with keeping her balance and walking carefully.\n\nSteve smiled, \"Oh, they're five-inchers. Not too tall,\" obviously pleased.\n\n\"Well, that's higher than anything I've ever worn!\" She said, as she let go of his arm, and moved along on her own.\n\nAs she walked slowly around the room, she gained a little confidence, and stepped through into her bedroom and the big mirror. When she got a good look at herself, she was stunned with how very sexy she looked. With all of the latex in place she suddenly realized how turned on she was. As she continued to admire herself, she didn't notice that Steve was watching from the doorway. \n\nVery aroused, she reached down to her latex-covered pussy and started to rub herself.\n\n\"Ahem,\" Steve said quietly, snapping her out of her reverie. She pulled her hand away, hugely embarrassed. \n\nSteve laughed, \"I brought out one more item, that I think would be appropriate. I'll let you decide, although I want you to know that I would be very pleased if you would use it.\"\n\nWith that he set a small box on the night stand, next to her, and left the room.\n\nCindy opened the box to discover a soft, latex dildo.\n\nOh, my God, she thought, he's a sex fiend. But as she looked at the thing, and considered her current state of excitement, she started actually considering the move. \n\nShe picked it up and looked it over. Before she knew what she was doing, her other hand began unzipping the crotch of her body suit. When she did realize, she giggled and reached into her nightstand drawer for some personal lube. Bravely, feeling like a wonton slut, she inserted the thing in her wet pussy and zipped the suit back up, before she could stop herself.\n\nIt felt good, really good. She decided it was too enjoyable to not wear it, so she sauntered out to Steve with a contented smile on her face. \n\n\"Are we done?\" she asked. \"Can we go now?\"\n\nSteve looked at her and nodded. He picked up her dress and handed it to her, with a slight bow.\n\nHe couldn't help himself, though, \"Are you, ah, wearing that last item?\"\n\n\"Never you mind,\" she scolded, \"perhaps you'll find out later,\" she replied, smiling suggestively, as she pulled her dress on over her head.\n\nSteve was really impressed. She looked great. The dress shaped itself to her now more curvy body and the boots lifted her ass and looked really sexy as she walked around.\n\nAgain, she had trouble getting into the car, the stiff corset made it hard to bend and sit, and the boots too were inflexible, making it difficult to bend her knees or flex her ankles. \n\nIt helped when Steve moved her seat and reclined it so she was leaning back. It seemed awkward, but it was more comfortable.\n\nHe drove to a very nice restaurant, where they had a pleasant time eating and talking. The more time they spent together, the more they seemed to like each other.\n\nCindy was confirming everything Robin had said about him. She liked it all, including the kinks. Even the ones that Robin thought were too much.\n\nSteve, as he admired Cindy, suspected that she was much more sexual and kinky than Robin had been. She seemed to accept and enjoy the fetish wear, that he loved so.\n\nAlthough the food was great, Cindy complained that with the coreset squeezing her so, she couldn't eat much. She had an additional Marmosa, to compensate. \n\n\"This thing may help my diet. If I reduce my waist, the belt won't be so tight,\" she said, rubbing around her sides.\n\n\"Sounds good to me,\" Steve said, with an enthusiastic nod.\n\nAfter the meal, they walked slowly over to the nearby movie theater, window shopping along the way.\n\nOf course, people stared at Cindy's shapely body and sexy outfit. The men gawked in admiration. Some were very obvious, their bulges giving them away, it made Cindy giggle. It seemed that about half of the women were also enchanted. A few others were seriously offended, and Cindy overheard terms like 'slut' and 'whore', which upset her. Steve, aware how these mutterings were getting to her, helped by muttering back, 'spinster' and 'prude', which made her laugh out loud.\n\nAt the theater's box office, they picked out a racy romantic-comedy. Cindy was relieved when they sat in the comfortable chairs. Her outfit was driving her to distraction. The plug in her pussy had her vagina juicing, and the feel of the latex and the compression of the corset felt almost too good to be ignored. The boots though, as sexy as they were, were hurting her ankles and feet, so she was happy to lounge in the theater's comfortable chair.\n\nThey enjoyed the movie immensely. And it contributed to their ever-increasing arousal.\n\nWalking back toward the car, Cindy groaned, \"I can't go much farther, my feet are killing me. Can we go home so I can take these boots off?\"\n\n\"You need to get used to them,\" Steve said with a sly smile.\n\nCindy just groaned in response, but Steve picked up on the implication that she might accede to his request.\n\nHe thought for a moment, \"why don't we go to my house, I'll take them off and give you a nice foot massage. I've been told that I'm pretty good at it.\"\n\nCindy stood close, and then reached up and cupped his face, giving him a deep kiss that got him very excited. \"Yes, I may even provide the answer to your question.\"\n\nSteve was confused, \"which question was that?\"\n\n\"Why, the one you asked before we left my house, silly.\"\n\nWhen he still looked confused, she whispered, \"did I insert the dildo?\"\n\nCindy laughed as Steve's smile grew and grew, until it consumed his whole face. \n\nThey walked hand in hand, back toward his car. Several times Cindy had to tell him to slow down as she was having trouble keeping up in her boots.\n\nShe was better able to get into the seat this time, but she still found it uncomfortable, although she was happy to get off of her feet.\n\nSteve's house was in a gated community, not too far away. It was large, modern and obviously expensive. It was set back from the road, with a lot of trees and mown grass in front.\n\nThe inside was nicely decorated, relaxed and masculine. Obviously assembled by a professional designer.\n\n\"Nice place, and big\" she commented as she looked around, \"just you in here?\"\n\nSteve laughed, \"yes, it's just for me.\"\n\n\"A lot to take care of.\" She replied, still admiring the furniture, artwork and colors.\n\n\"Well, I have to admit I have a housekeeper. Emma, comes in Monday thru Thursday. She's been with me for a long time, since before I met and married Robin. She took care of our home then, too. She handles all of the cleaning and laundry, and prepares dinner for me on those days, too.\"\n\nCindy looked at him, speculatively, \"Wasn't that a bit, ah, difficult when Robin was in fetishwear?\"\n\nSteve smiled, \"not really, Emma just ignored our games. I think she's a little kinky herself. She's also ten years older than we are, and we didn't exactly run around naked, during the day, while she was in here.\"\n\nThey settled on a leather couch in the great room with drinks, a nice Chablis for Cindy and expensive Scotch for Steve.\n\nAs soon as Cindy was settled, Steve knelt in front of her and unlaced her boots. She groaned as he pulled them off her sore and sweaty legs, and moaned in pleasure as he started massaging her feet. \n\nAs advertised, he was very good at it, and after a few minutes she laid back further and closed her eyes, enjoying the attention and the relief.\n\nProbably 20 minutes later, she was feeling good, \"that was so nice. Come here,\" she ordered, trying but failing to bend forward and grab him. Her corset had prevented it, though.\n\nSteve leaned forward until he was right in front of her crotch. Reaching up he began unzipping the opening over her pussy. Cindy, agreeably, pushed her hips up so he could open it far enough.\n\n\"Ah, you did wear the plug, I see. Good for you.\"\n\nCindy giggled, \"yes I did and it's been driving me crazy with lust all evening.\"\n\n\"Well let me see what I can do about that.\" \n\nSteve then pulled the latex opening open as far as he could, exposing her bald pussy and began kissing and licking her already hot clit and lips. He paused for a moment as she reached down and removed the dildo.\n\nCindy, already so turned on she could hardly stand it, was in ecstasy. She quickly started moaning, twisting and pumping as she grabbed the back of Steve's head and gently held it in place. She had a super orgasm, just as enjoyable as those delivered by the belt.\n\nAfter she'd calmed down a bit, Steve crawled up her body and she nudged him onto his side next to her, as she opened his pants and worked his raging cock out. She then pulled him back on top of her as she directed it into her wet vagina.\n\nAlthough he was close to exploding, he held off for quite a while, as they slowly and lovingly built their rhythm. \n\nAfter a while, he couldn't hold out any longer and his pace quickened until he came. Cindy, happily, quickly followed suit and orgasmed, herself.\n\nAfterwards, they lay quietly entangled and satiated. Both of them feeling the first stages of love for each other.\n\nHaving calmed down, they both stripped and moved together through his large master bedroom and into his huge shower enclosure. There they had fun intermixing washing with kissing and hugging, their wet and soapy bodies slipping and sliding against each other and along the shower tiles.\n\nThey followed that up with a simple dinner, with only bath towels masking their nudity.\n\nFor dessert they stumbled into his big bed for another round, although this time it was more energetic and wanton. It left them sweaty and exhausted.\n\nThey would both have been happy to sleep there and then, but with repeated apologies Steve explained that he had to leave early on a flight to LA. He'd be gone for the next several days, returning on Thursday.\n\nThey were both tired and disappointed as he drove Cindy home.\n\nWhen they reached her house, she invited him in, and they found the energy for more kissing and cuddling.\n\nSteve sighed as he broke away, \"I really have to go, but as soon as I get back, I want to see you again.\" \n\n\"As soon as you get back, I want to see you again,\" Cindy replied, breathlessly.\n\nThen he reached out and held her at arms' length, \"have you been enjoying yourself?\" He asked, smiling and looking at her, lovingly.",
        "\"Yes,\" she mumbled as she caressed his cheek.\n\n\"The fetish wear hasn't been too much?\" he asked gently.\n\nShe stepped forward into his arms and rested her head on his chest, \"No, it's been really fun. I don't think I've ever been this turned on, for this long a time. I'm loving it.\"\n\nHappy, Steve bent down and kissed her again.\n\nWhen next they paused in their necking, he said, \"then wear the belt again for me, while I'm gone. It will keep you interested in me, and just the thought of you locked away will keep me dreaming of you.\"\n\nCindy was stunned. Did he really expect her to agree to that torture, again? Well perhaps 'torture' wasn't the right word, but still...\n\nShe curled up in his arms again, hugging him tightly, and actually thought about the proposition, crazy as it sounded. \n\nSteve stayed quiet, awaiting her answer. Hoping and praying that she would acquiesce and play along.\n\nCindy was trying to be analytic, but she was so enamored with the guy and with the highly charged sex that she had been living with for the last few days that it was very hard to think with her head. Her body wanted to answer 'yes'. \n\n\"Please, I'm begging you,\" he said, echoing her words from the previous day.\n\nThat drew a smile from her.\n\nCindy's head and heart seemingly argued back and forth for several minutes before her heart won out and she sighed, \"yes\".\n\nSteve was overjoyed. He was quickly falling for Cindy. He loved her face, her body, her personality and her kinky attitude toward sex. \"Oh God, I think I love you,\" he blurted out, surprising both of them.\n\nCindy giggled and kissed him again, long, deep and passionately.\n\nWhen they came up for air, she said, with a sad smile, \"well it's getting late and you have to get up early, so let's get this over with. The chastity belt, I mean,\" breaking into a giggle.\n\nThey untangled themselves and headed into her bedroom where the belt had been left.\n\n\"Hmm, I see that you've been charging it, for future use.\"\n\nCindy was a little embarrassed, \"Actually, I'm not sure why I plugged that evil contraption in, but I suppose it was a good thing I did.\"\n\nSteve unplugged it and once again knelt down in front of his victim. \n\nLooking up into her pretty face, he gushed, \"I'm still surprised and delighted by how well the belt fits you. It's a miracle, really. We had to take a bunch of measurements before we ordered it. Your body must be pretty much identical to Robin's. What great luck.\"\n\n\"Yes, what luck,\" Cindy said, facetiously, \"if it hadn't fit me, I wouldn't be in this predicament.\"\n\n\"Is it so bad? I think it's great!\" \n\nCindy paused, then smiled, \"perhaps,\" she said as she reached down and began lubing the plugs before they slowly slid the belt into place. She moaned as they hit bottom, and then shivered.\n\nAs soon as it was in place Steve closed the belt and it locked.\n\nFor a moment, Cindy thought; what have I done? But the feelings in her pussy and ass, quickly answered the question for her.\n\nSteve then held up the bra.\n\nCindy hesitated for a minute, and Steve just shook the thing without saying a word.\n\nAgain, her body reminded her about how nice the vibrations felt on her nipples, so she gave in and slipped her arms through the straps and adjusted her breasts into the cups. Steve went around behind her back and snapped the buckle together, locking it. He then plugged its cable into the belt.\n\nWhen he reached for the collar, Cindy baulked, \"must I? It's embarrassing walking around in public wearing that thing. I just know that everyone is thinking 'there goes that sex slave slut', and what about my friends at work?\"\n\n\"Well, I thought you had next week off, so work won't be a problem,\" and with that, he reached up and slipped the collar around her neck. Cindy didn't resist, so he closed it, locking it in place. \n\nAfter plugging it into the bra, he grabbed the last component, the thigh bands.\n\nCindy really didn't want to be stuck in those things again. They made moving around so very difficult, and she'd have to sleep in the damn things for four nights.\n\nShe looked pleadingly at Steve, and he seemed to waver for a moment, but then he bent down and held the two bands so she could step into them.\n\n\"Shit!\" was her only response as she stepped, resignedly, into the bands and let Steve slide them up her legs and insert their support chains into the slots in the belt.\n\nSteve then pulled out his phone and checked the master control app. \n\n\"OK, you're all set with Program 20. It should keep you occupied until I return and unlock you. If you have a real emergency, call or message me. But it had better be a real emergency or there will be some punishment involved.\"\n\n\"Oh really,\" was all she could think to reply. The thought of her past experiences with the thing's punishment shocks was daunting. \n\nSteve laughed, as he saw the flash of fear on her face. \"You'll be fine. Don't forget to charge the battery. Those shocks are automatic.\"\n\nHe then gave her a huge hug and farewell kiss and headed for the door.\n\nCindy stood still, surprised with herself for allowing him to lock her up. She really shouldn't have gone through with it. And now she was stuck for the next four days and nights.\n\n\"I'll call you every night, my love,\" he said as he closed the door behind him.\n\nThat night Cindy had a tough time sleeping, not only because of the belt but because of the bra, collar and thigh bands, too.\n\nShe tried all of her normal sleeping positions and several others, but finally found that she could only get reasonably comfortable if she laid flat on her back. That had never been her favorite pose for sleep, but it appeared that it was now her only viable one.\n\nShe also found that the little dangling display and the power cord were also a pain. The power cord got tangled around her legs, as she moved under the sheets and the display, even though it was small, flopped around as she shifted positions.\n\nShe was just crawling, tiredly out of bed in the morning, when her phone rang.\n\n\"Hi Cindy, it's Robin, I had a dream about that damn belt last night and it got me thinking about you, so when I got up, I checked the app on my phone and saw that it was still locked. Are you still wearing that thing?\"\n\nStifling a yawn, Cindy replied, \"Oh, hi Robin, yes I am wearing it again. I have to admit, I find it kind of fun. It sure as hell turns me on, and the orgasms are fantastic.\"\n\nRobin, surprised, prompts for details about the 'again' statement. They talk for an hour, as Cindy explains and Robin questions.\n\nIn the end, Robin warns her to not get carried away with wearing the thing and letting Steve control her through it. She's obviously still upset by her past experiences.\n\nThey continue their discussion for several more minutes. Robin is not surprised that Cindy likes Steve, but she remains astonished that she has put the belt back on, and with the bra and the damned collar too. \n\nCindy admits that she's apparently much more into sexual fetishes than Robin was, so she's actually enjoying herself. Robin can tell.\n\nAs the call draws to a close, Robin warns one last time. \"Wear the belt if you like, but stay away from the other programs with numbers over 20. Those are a bitch; truly torturous.\"\n\n\"Too late,\" Cindy says with a chuckle, \"it came set on 21.\"\n\n\"Oh, that's right. I forgot. I'm not sure what Steve was thinking when he set those up, but they drove me crazy, and finally ended our marriage.\"\n\nAfter that they said their final goodbyes and hung up, again promising to stay in touch.\n\nThe call did have one significant note for Cindy. After all of the talk, she came to realize that she is actually enjoying the belt and does indeed want to continue wearing it...\n\nAfter breakfast Cindy was still tired and frustrated from her difficulty sleeping. Wondering if there was something she was missing, she decided to call 'ChastiWife' to see if Justine could help.\n\nShe dialed the number and explained her dislike of the small display to her friendly 'expert'.\n\n\"Oh, didn't I tell you?\" Justine said, \"If you look just to the right of the place where the cable enters the top of the belt there is a small hole. You can push an unbent paperclip into that hole and it will release the cable so you can pull it out and remove the display. Keep in mind though that you'll have to plug it back in when you need to recharge your belt.\"\n\n\"Great, that will help. Thanks. While I have you on the line, it seems like after the plugs have driven me to orgasm, they change to the lower speed, like they are programmed to do. But I don't understand how the program times it so perfectly, that is, shifting from high speed to the lower speed.\"\n\n\"Of course, Cindy. The belt has a built-in sensor suite that can tell when you starting your orgasm and when you finish. I don't know all of the technical details, but the device measures things like heart rate, blood pressure, muscle contractions and fluid release to make its determinations.\"\n\nCindy was impressed, \"oh wow, this thing is really sophisticated, and kind of fiendish.\"\n\n\"By the way, the slower speed is called 'arousal mode' - it's designed to keep the wearer aroused, but not take them to orgasm. And 'fiendish' is a good description,\" Justine added with a chuckle.\n\nCindy laughed, \"I was thinking of it as the 'slow torture' speed.\"\n\nJustine then laughed, \"that's about right.\" \n\n\"I do have one more question. I'm only curious. Are there any other add-on components to the belt that we haven't talked about?\"\n\n\"Well, let me see. I'll look up your records, again.\"\n\nAfter a pause, she continued, \"Cindy, we've covered the items your owner has ordered. There are a couple of options that were not purchased. There's an additional module for the collar that provides a couple of other capabilities. It locks on and provides ear plugs and a microphone. The owner, through the management app can then hear what the wearer hears and says, and can talk to her through the earphones. \n\n\"Oh man, I'm not sure how I feel about that,\" Cindy said.\n\n\"I understand Cindy. Some owners use the capability to give the wearer instructions and then through the collar's shock capability, or the breast and belt shocks too, enforce desired behaviors. It can be rather controlling.\"\n\nJustine continued, \"There's also an attachment for the belt that turns it into more of a corset. It connects between the belt and the bra molding them into a single piece. It has to be custom sized, of course, usually to the desired, reduced waist measurement. Because it's all metal, it is very restrictive. Wearers can no longer bend or twist their torsos.\"\n\nCindy replied, in awe, \"that doesn't sound like anything I would ever wear, anything else?\"\n\n\"Yes, one more thing. There's another collar that's smaller and less obtrusive than the one you currently have. It's only about 3/4 of an inch tall and doesn't have a ring. It doesn't include the no-speech option, but can still deliver a punishment shock. Cindy, that's the last of it.\" After a pause she continued, \"do you have any other questions?\" \n\nCindy thinks for a few seconds, \"I think that's all. Thanks for the information, Justine, you're always so helpful. Goodbye.\"\n\nCindy spent much of the rest of the day in the house, doing little and waiting for the next session with the belt.\n\nAs she lounged on the couch watching the TV, distractedly, she thought about her situation. She had a love-hate relationship with the belt. Well, mostly love. Without a doubt the orgasms it delivered were fantastic. The long sessions of slow stimulation. kept her very horny, which was good in a way, but also frustrating. \n\nBeing locked and controlled in this fashion by Steve was exciting and the personal fantasy fulfillment was too.\n\nThe inconvenience, though, was annoying and wearing the belt and all its accessories in public was embarrassing and nerve-racking. \n\nAdditionally, she really liked Steve, as a person, a man and as a sexual partner. It might even be closing in on love.\n\nShe still wasn't sure where the whole relationship was heading, but she decided to go with the flow and see where it took her.\n\nDuring the day she had two delightful orgasms compliments of the belt.\n\nShe also became more proficient using the bathroom. Every time she peed, she still felt like she should take a shower afterwards to make sure she was clean. The thigh bands contributed to her concerns as they prevented her from spreading her legs wide enough to get full access to wipe herself.\n\nWhen she took a shit, she had trouble juggling the plug, wiping properly, lubricating and reinserting the thing. All in all, she hated that aspect of the belt. The damn bands also made that task more difficult and messier, too.\n\nLater in the afternoon, Cindy got bored and decided to do some much-needed grocery shopping. She continued to worry that the belt might start up and push her to an orgasm at some inopportune time, but decided to risk it. She'd have to get used to the situation, if she was going to wear the thing as much as Steve seemed to like.\n\nIt was just cold enough to justify a coat, so over her dress she put on jacket and a scarf to hide the collar and headed out. \n\nThe thigh bands were really maddening. The small steps she was forced to take were annoying. Stairs were difficult and driving with the bands was problematic, but not impossible with her car's automatic transmission.\n\nWhile she was stopped at a traffic signal, the belt did start up, giving her a fright, but it was only in the 'arousal mode'. That was bad enough, but not as bad as a public orgasm. It was still a major distraction, though. It made it hard to concentrate, as she was constantly preoccupied by the feelings in her breasts and groin. \n\nIn fact, she almost had an accident when she lost focus and drifted into the adjacent lane, receiving an angry honk from another car.\n\nIt was hard to think while she was in the store, too. She couldn't remember several of the things she was supposed to buy, and had to stand around until they came to mind. It was frustrating and embarrassing as she was sure that several other shoppers, who gave her strange looks, thought that she was either high or just plain stupid.\n\nShe was humiliated, when she got to the cashier and had to make small talk and produce correct change for her purchases. It was a silly struggle, that shouldn't have been.\n\nAs she drove home, the belt finally stopped torturing her.\n\nAfter dinner, the belt started up again. Laying on her bed, she enjoyed that session immensely. She had another mind-blowing orgasm, and even enjoyed the slower speed vibrations as she took a long, hot shower afterwards.\n\nWhen Steve called that night, Cindy complained about never knowing when the belt would kick in and take her to orgasm. She explained that she was constantly afraid that she'd make a scene in public, or get in a car wreck.\n\nSteve said thoughtfully, \"I understand, give me a few minutes and I'll call you back.\"\n\nAbout 15 minutes later Cindy answered her phone.\n\n\"OK, here's what I've done, \"Steve said, happily, \"I just set the belt to 'Program 28'. \"It is similar to the program that's running now, but this new one will give you a 5-minute warning, before it moves to high speed. So, when you feel the belt start up at 'arousal speed', you'll know that you need to prepare for the next step.\"\n\nCindy thought for a few minutes, \"I only just learned that term, today: 'arousal speed'. I was calling it 'slow torture speed'\"\n\nSteve laughed, \"that's kind of the intent.\"\n\nCindy harrumphed, as she thought over the change, \"OK, I guess that will work, but why only 5 minutes? Can't you give me more time?\"\n\n\"Nope, that's all you get. It should be enough time to pull your car over, or find a private spot, like the ladies' room.\"\n\nShe thought about it for a minute and decided that it could work, it was certainly better than what she was saddled with now, \"oh, all right, that will work, I guess. Thanks.\"\n\nThey talked for a while longer before hanging up. Cindy went to bed feeling a little better about the belt. She was also pleased by Steve's responsiveness to her request. He wasn't a mean man.\n\nAgain, it was difficult getting comfortable in bed, that night. The thigh bands were maddening. Always having to keep her legs together was just not normal, especially in bed.\n\nEventually, resentfully, she drifted off to sleep.\n\nThe next day was more of the same. Cindy didn't want to go out, even though she knew now that she wouldn't be totally surprised by the belt kicking in and embarrassing her in public. \n\nFeeling lonely, she sent a text to Robin, asking if they could meet for dinner. Cindy wanted to learn more about the belt, Steve and his fetishes.\n\nRobin replied that she couldn't that night, but would be happy to get together the next, after work. They made arrangements to meet at a restaurant mid-way between their two homes.\n\nCindy then got to work on household chores, until the belt started up in the slow torture mode. It allowed her to get comfortable before the main event. This time the front plug stayed at the slow speed, while the rear plug and the nipple vibrators came on high. \n\nWithout the front plug's full participation, her orgasm was good, but not great.\n\nAfter lunch the belt came to life again. She got comfortable, anticipating another orgasm, but this time the thing stayed at arousal speed. It was a false alarm! Cindy was frustrated and disappointed. I wonder if Steve thought of that when he changed the programming?\n\nThe rest of the day was spent watching the TV. She found a sexy movie on Netflix, and made herself even more horny.\n\nShe continued laying around, had another belt-driven orgasm and then went out to buy some clothes with turtle-neck collars that she could wear to hide the metal band around her neck.\n\nWandering around in the mall made her anxious. She was constantly looking for places where she could hide if the belt started up. As she walked around, taking the required small steps, she sensed that people were staring at her. \n\nHer collar wasn't completely hidden, it peaked out from behind her scarf, so she was embarrassed whenever she had to talk to the sales staff. She bought a couple of turtle-necked sweaters, and a dress with a high shawl collar, that would cover it reasonably well. \n\nShe made it home without any issues. Cindy felt that she was becoming better accustomed to moving around while wearing the bands. That relieved some of her anxiety.\n\nThat night's call with Steve was the day's highlight. They talked and joked for a couple of hours. Just talking to him calmed her down, and made her more comfortable with her get-up.\n\nWhen she complained about the false alarms, though, Steve was unsympathetic. \n\nHe laughed and said, \"that's part of the deal, you'll just have to live with the frustration, until I get back.\n\nWednesday was pretty much a repeat of the previous two days.\n\nCindy worked around the house, relaxed, watched TV and took a much-needed nap, before getting ready to meet Robin.\n\nShe had a long drive across town in traffic and, sure enough about half way there, the belt kicked in with the five-minute warning. Cindy quickly exited the freeway and pulled into a strip mall's parking lot, as far away from other cars as she could. She laid her seat back as far as it would go and hoped no one would see as she writhed and moaned while the belt got her off.\n\nAs soon as she was done, and the belt was in arousal mode, she carefully got back on the road.\n\nThe delay made Cindy a little late for her meeting with Robin. She hurried as best she could into the restaurant and hunted among the tables for her friend, finding her in a booth off to one side.\n\nAs Cindy maneuvered into the booth's bench, she apologized for being late.",
        "Robin, having seen Cindy's movements and her expression, guessed what was wrong.\n\n\"No need to apologize, let me guess. You had to stop because the belt kicked in, and you're wearing the thigh bands, right?\"\n\nHumiliated, Cindy nodded, yes.\n\nRobin, continued, with a knowing smile, \"and it's still in arousal mode too, correct?\"\n\n\"Yes, the thing drives me a little nuts! I don't appreciate the way the belt's controlling my life, but I love the orgasms it delivers.\"\n\n\"It looks like you're wearing the full package, too.\"\n\nCindy reached self-consciously to her neck, \"can you see the collar?\"\n\n\"Just a little, the sweater covers it pretty well. I could tell by the way you walked that you have the thigh bands on.\"\n\nRobin paused for a minute and gave Cindy an appraising look, \"the sweater doesn't hide the prominent nipples of the bra, though.\"\n\nAt that, Cindy turned bright red. Damn, she thought, I can't win.\n\nAfter that their conversation settled down to a more normal discussion between friends.\n\nThey shared a nice bottle of wine, and ate a couple of salads. \n\nThe two women also shared more of their life experiences, and Robin passed along more information and insights on Steve. Nothing Robin said about him was particularly negative or off-putting to Cindy. \n\nRobin apparently, wasn't seeing anyone, at least not yet. After her experiences with Steve, she wasn't sure what she wanted in a partner, or even what she wanted sexually. She had enjoyed some of their shared fetish fantasies, and did want to explore those further, but she was unsure how to find the right guy with the right level of kinkiness. \n\nShe was surprised that Cindy had agreed to wear the belt for the full four days that Steve was gone. That equaled the longest period that she had ever worn the thing, and it had taken months before she had gotten to that point.\n\nThey spent a while talking about the other fetish items that had been stashed in the boxes from the storage unit. Robin confessed to liking the latex cloths, the corsets and the sexy shoes much better than either the belt or the bondage cuffs and the associated games in restraints. \n\nCindy admitted that she too was interested in those same things, but hadn't had a chance to play with them, yet.\n\nAfter dinner, while they were enjoying coffee, Cindy mentioned that she couldn't complain about the belt's ability to get her off, and that she was pleased at the way it phased down the pulsing vibrators soon after she hit her peak. \n\nRobin nodded, \"yes the sensors are really well designed, they do really seem to be able to tell when you start and when you're done. Has Steve ever set it to stop your orgasm? He did that to me for a while and it drove me off the wall.\"\n\n\"Wait, what?\"\n\nRobin giggled, \"I guess not. Well, since the belt can sense when you're starting to orgasm, it can be programmed to shut down the vibrators and even deliver a punishment shock, when you're getting close. It can also torture you by ramping up and then shutting you down over and over, as often and as many times as it's programmed to do.\"\n\n\"Oh my God! That's diabolical. Did Steve really do that to you?\"\n\n\"He sure as hell did. He thought it was great fun. He got me so horny and frustrated that I cried and agreed to do anything he wanted, after that.\"\n\nCindy was shocked, \"that's scary,\" although, secretly, she admitted to herself that the thought of that type of torture was intriguing and was getting her pussy wet, behind it's shield.\n\nRobin sighed, \"before that, there were times when I actually enjoyed the belt. I agreed to wear it on many of our kinky weekends. That torture was one of the last straws, ruining our marriage. I just couldn't take it anymore. That, and the shocks, of course.\n\nCindy thought, hmmm I wonder if I can take it, it could be fun...\n\nSoon thereafter they called it a night. They hugged and kissed lightly as they parted outside the restaurant. \n\nRobin, oddly enough, never having felt the belt's metal bra, from the outside got a thrill out of the experience. Giggling, she reached up and copped a feel before they parted. Cindy laughed.\n\nThey promised each other to get together again soon, and often, as the both enjoyed the other's company.\n\nBy the time Cindy finished her drive home, she had missed the call from Steve. She called him as soon as she finished her bathroom chores, even though it was late.\n\nWhen he answered her call, she apologized and explained that she was out with a girlfriend, but didn't mention that it was with Robin, not wanting to start anything.\n\nSteve was a little surprised, and pleased, that she had gone out, socially, wearing the belt and its other components. He's encouraged by Cindy's acceptance of her confinement, and her growing confidence in being out in public wearing all of the belt's parts.\n\nHe questions her on the belt's behaviors, how many orgasms and if she had any further issues. She admitted that everything was going well enough.\n\nFrom his tone and questions, Cindy could tell that he was pleased. Not to mention aroused.\n\nThe call didn't last long as he had to get some sleep before his final meetings and the flight home.\n\nBefore he hung up, though, he asked her to pick him up at the airport. Not only that, but he wanted her to meet him at luggage claim.\n\nCindy, wasn't exactly thrilled by the thought; all of those people, all of that exposure made her nervous, but she was dying to see him, so she agreed.\n\nThursday was all about waiting anxiously for Steve's inbound flight. \n\nCindy did laundry, watched sexy movies on TV, and relaxed. In the afternoon, she checked her work email account and saw that some tasks had begun to pile up, awaiting her return. That got her worrying about going back next week. What would Steve ask of her? She couldn't wear the metal into the office! She couldn't see how she could explain it to her friends, there. She'd die of embarrassment! The humiliation would wreck her.\n\nAfter a light dinner, she put on a silky blouse and a short skirt, after a little thought she added a pair of high heeled boots, pulled from the boxes and donned a jacket for warmth. Then she headed out to the airport.\n\nJust as she parked, the belt started up and gave her the five-minute warning. She sat in the car, in the dark airport parking garage while the plugs and breast vibrators came to life and took her to orgasm. This time she didn't enjoy it as much as in the past as she was distracted by the people walking past and by her desire to get it over with so she could meet up with Steve.\n\nAs soon as the belt reset to the post-O arousal speed, she got out of the car and staggering slightly, walked slowly to the elevators to the terminal.\n\nNaturally, the elevator was packed and she grew worried that in the close contact they might realize what she was wearing. As it was, she was certain that her collar was, at least in part, visible to the casual observer.\n\nShe spotted Steve near a luggage carousel as she made her way through the crowded terminal. He was focused on finding and grabbing his luggage so she was able to sneak up on him from behind. She hugged him and pushed her metal covered breasts into his back, giggling, \"hello, lover, am I ever glad you're home.\"\n\n\"I bet you are,\" he said turning and kissing her passionately. \"Are you so happy because you want out of the belt, or because you want to make crazy love to me?\"\n\nShe looked at him with a devilish gleam in her eye, \"well, I know there's a right answer here, but I'm not sure what it is.\"\n\nThey both laughed and backed away from each other. Standing hand-in-hand, they waited for Steve's bag to show up.\n\n\"You look wonderful, and I love the boots. Nice touch,\" he told her as they scanned the carrousel. \n\n\"Thanks, I figured you'd especially like the boots,\" she replied with a smile.\n\nSteve was able to grab his bag, and as they headed out to the car park another question occurred to him. \"Did I feel a vibration when you pushed your breasts against my back? Steve asked, casually.\n\n\"Yes,\" Cindy admitted, sheepishly, \"the belt kicked in just as I parked.\"\n\nSteve just smiled.\n\nHe was excited and very pleased with the way things were going with pretty Cindy. She did indeed seem to be enjoying herself. He was captivated by her. She certainly wasn't complaining as Robin had. Perhaps she was the one. His soul-mate, his fetish soul-mate, that is.\n\nAs Cindy drove away from the airport, Steve questioned her on how her week had gone. Cindy was at first, nonchalant about the experience, but the more Steve pushed her, the more she admitted to the worries, frustrations and pleasantries that the belt had forced upon her.\n\n\"You seem to have done very well, though. You're walking and even driving like you've become very accustomed to wearing the belt and all of its extensions. I'm proud of you, and very aroused, too.\"\n\nSteve's compliments made Cindy feel better about her situation.\n\n\"Well, where to? Your place or mine? I can't wait to get this thing off and screw your lights out,\" Cindy said as she reached over and massaged Steve's cock, which began to harden immediately.\n\n\"Oh, how about my place. I need to check and make sure all is well, and I want you to spend the night with me.\" \n\nCindy was happy to hear that.\n\nAs soon as they got through his front door, Steve had her in his arms and they were kissing like long-time lovers.\n\nEventually, they staggered into his bedroom, and began to undress each other.\n\nSteve unlocked the belt and all of its parts and they showered together. Steve was smelly from the long flight and Cindy wanted to clean under the belt and bra. They washed each other, giggling like a couple of kids, especially when they worked on each other's sex parts.\n\nSteve massaged the soreness that the belt and its components had visited on her. He rubbed a soothing body lotion into the few spots where the belt had rubbed her wrong.\n\nThey then moved into his bed where they spent a happy and passionate night, falling asleep in each other's arms after several shared orgasms.\n\nThey slept soundly, only waking when the sun was well up. They again enjoyed a fun shower accompanied by a lot of body contact, before dressing. Cindy in last night's dress, with nothing on underneath.\n\nAfter a leisurely breakfast, they went back to Cindy's place, where Steve dressed her in latex head to toe. Cindy had been looking forward to experimenting more thoroughly with those items since she had first seen them. Latex had always been one of her fetishes, and she had really enjoyed the last time she wore that material.\n\nSteve went all in, and helped her don a full, black catsuit, with a corset tightly laced over the top. He spent a lot of time smoothing the latex on Cindy's body, making sure it fit perfectly and that there were no wrinkles or air bubbles. Cindy thoroughly enjoyed the attention. Thigh high boots with tall heels were added before a tiny red dress pulled from a box, completed the outfit. The dress covered very little and her latex-covered body was on full display. Of course, she wound up with a dildo and a plug sealed inside her body, too.\n\nCindy found the latex to be very erotic, compressing, warmth and shaping. She felt very sexy, and slutty.\n\nSteve also grabbed several other things from the boxes, cramming them into a large bag that he retrieved from Cindy's kitchen before he escorted her out to his car. She hoped she didn't run into any of her neighbors, looking as she did.\n\nSteve first drove to a grocery store, of all places. He had to almost drag her out of the car, but he was insistent and she finally cooperated. He then paraded her around the store and picked up a full cart of groceries to fill his refrigerator and cupboards, empty after his trip.\n\nCindy was mortified to be out in such a public place, dressed as she was. She complained, in urgent whispers, for much of the time. \"Let's go, this is embarrassing. Take me home.\"\n\nSteve, for his part, was enjoying himself. Cindy looked fantastically sexy, and he was enjoying showing her off. The customers were mostly women, anyway. The few men were, as expected practically drooling as they stared at her. \n\nHe knew that she was upset, but consoled her, explaining that pretty, sexily dressed women always drew attention. \"I would have thought that you would be used to men's salacious looks, as pretty as you are\" he prodded her.\n\nShe liked the compliment, but remained upset. \"I've never been out dressed like this, before. I feel like a slut!\"\n\n\"No, you're not a slut. You're a beautiful woman dressed in sexy clothes. And you're driving your lover crazy with lust.\"\n\nHis statement caught Cindy's attention. \"are you my lover?\" She asked as she stopped in the aisle and looked him in the eye. She was unsure what answer she expected, or wanted to hear, but it seemed like a good question to ask.\n\nFor a minute Steve was surprised by her challenge, but the answer came to him easily, \"yes, you are. I do love you. Even though we've only known each other for a short time, I'm crazy about you. I think you're my perfect mate.\"\n\nAt first Cindy was too shocked by his words to react, but then she forgot everything around them and grabbing him, she kissed him for all she was worth.\n\nSomeone down the aisle actually started applauding. They broke off the kiss, and smiling sheepishly moved on to the checkout line, hand in hand and anxious to get somewhere private.\n\nSteve broke speed records getting to his house, and they rushed through the unloading and grocery storing process in a frenzy, before running, giggling like children into the bedroom, and onto the bed.\n\nSteve stripped as they ran, but he stopped Cindy after she had removed her dress. The latex would stay on.\n\nThe zipper over her pussy was open in a second and the wet dildo was removed and dropped somewhere in the bed as they kissed and hugged and within minutes screwed.\n\nCindy enjoyed several orgasms in rapid succession before Steve finally exploded in her pussy.\n\nShe got up and ran into the bathroom, dripping. She came back with a warm wash cloth and after washing off his cock she took it into her mouth and under her ministrations it surprisingly, quickly came back to life. She then rode him to another couple of orgasms before he had another one of his own.\n\nThey collapsed after that, Cindy laying on top of him in her slick latex covering. \n\nThey dozed off whispering 'I love you' back and forth to each other.\n\nA couple of hours later Cindy, still sprawled on top of him, nudged Steve awake, \"I'm hungry and sweaty. Can I get out of this outfit and can we fix something for dinner?\"\n\nSteve yawned and mumbled, \"sure we can eat, but I'd like you to stay in the latex. You're a fetish dream and I want to enjoy looking at you, feeling you and making love to you all day and all night.\"\n\nCindy sighed in resignation, \"how can a latex covered girl say no to that,\" she said as she leaned back onto him and kissed him.\n\nThey kept that up until Steve rolled Cindy off onto her back, \"stay there.\" \n\nHe left and, just like Cindy had done a couple of hours ago, came back with a warm cloth. He carefully spread her legs and washed his come off of her tender pussy and then carefully reinserted the dildo, which slid in easily on the fluids still remaining inside her. After that he zipped her up.\n\nAs he crawled out of the bed, he asked, \"are you up for one more piece of Latex?\"\n\nCindy, still slightly dazed, simply nodded, not really knowing what to expect. What else could there be?\n\nSteve retrieved the bag he'd brought back from her house and pulled out a fist sized wad of latex. As she watched he opened it up until she could see that it was a hood, that matched the catsuit she was wearing.\n\n\"This piece will complete your outfit. If you're going to be a latex doll, you have to get used to wearing a hood like this one.\"\n\nOh God, she thought, she'd seen things like that on the Internet, and had indeed fantasized about wearing one, but had never dreamed it would come to be. The thing was kind of intimidating, but she just couldn't say 'no' to trying it.\n\n\"OK' she said, hesitantly.\n\n\"Good, and thank you. I'm sure you'll look fantastic in it, and I think you'll love the feel of it. Now gather your hair into a pony tail, high on your head.\"\n\nCindy did as told.\n\n\"Now we need to pass it through this hole as we hold the front of the hood to your face.\"\n\nIt was kind of a struggle feeding her full and longish hair through the two-inch hole on at the top of the hood, but eventually they had it.\n\n\"Good, now I'm going to place the hood on your face. There are two short nose tubes that will slide up your nostrils, they won't hurt, but they will probably tickle a little. Once they're in place, we can adjust the eye and mouth holes. When they're situated correctly, I'll be able to pull it tight and zip it up the back.\"\n\nCindy sat quietly as Steve took care of that step of the fitting. She felt the cool latex on her nose, cheeks and forehead, as he worked it into place. It got tighter and again tighter as he worked on it, and then she heard the zipper start to move.\n\nThe thing got tighter and tighter as the zipper moved to the nape of her neck and then down the back of her neck. The feeling was both strange and fabulous. It was tight and smooth and warming.\n\n\"You can open your eyes now. I just have one more step, and then you can go look at yourself in the mirror and straighten out your hair.\"\n\nCindy opened her eyes and she could see just fine, but she couldn't see what Steve was doing under her chin and around her neck. When she heard a familiar 'click' she thought she knew. And she wasn't particularly happy about it.\n\n\"Done,\" he said.\n\n\"Wait, what was that click?\" She asked, tentatively. As she spoke, she could feel the latex shifting and pulling and restricting the movement of her jaw. It was an unusual feeling, but not unpleasant.\n\n\"That was the lock that secures the hood in place.\"\n\n\"That's what I was afraid of. But why?\"\n\n\"Well, with this set-up, the hood's collar secures both the hood and the suit's zipper, so neither of them can be taken off. You'll wear the latex until I let you out.\"\n\n\"But, when will that be?\"\n\n\"I don't know. We have all weekend to figure it out. Now go take a look in the mirror.\"\n\nHe then turned away and grabbing the bag he turned to put on some clothes. Cindy noticed that the bag was far from empty, and that made her nervous, not knowing what other kinky surprises he might have for her.\n\nCindy crawled off of the bed and walked, still in her boots, into the bathroom.\n\nShe gasped when she saw herself. The shiny latex, covered her head like a second skin. The two eye holes were cut on angles to give her kind of a cat's eye shape. The mouth opening was just large enough to surround her lips, and the tightness seemed to push them out and make them look puffy. The nose holes, because of the tickly tubes showed no skin at all, but she could breathe through them just fine. Her hair stuck out the top through a small cuff and looked like a horse's tail, especially after she combed it out.\n\nShe realized that the neck was thicker than the rest of the hood and it made it hard to twist or tilt her head.\n\nFeeling the back, she could tell that the lock did hold the collar in place and somehow also held the zipper pull that opened the catsuit. As Steve said, she wasn't getting out until he unlocked her. Of course, she could probably cut herself out of it, but that would be a crime that she didn't think she could ever commit.\n\nGetting over her concerns, she concluded that the hood did complete the outfit and that it was as erotic as she had always dreamed it would be. \n\nIn fact, as she rubbed and massaged her latex covered head and body her pussy began to pulse and throb, and as one hand made it down there and she started to massage herself, she started on an orgasm. Surprised, she collapsed onto the commode and rode it out to its happy conclusion.",
        "Good God, she thought, what am I becoming?\n\nShe answered herself - a sex crazed, latex and chastity belted nymphomaniac!\n\nWith that, she pulled herself together and slowly walked out to the kitchen. \n\nAs she neared that room, she thought she could smell something cooking, but the tubes up her nose, only seemed to allow the smell of latex to enter. That odor was becoming something she was really enjoying.\n\nAs she walked in, she saw that Steve had pulled on a shirt and jeans. Hearing her heals tapping on the tile floor, Steve turned and froze in place, \"you look fantastic!\" He took three quick strides away from the stove and grabbed her head with one hand on each side. He caressed the latex for a few seconds as he looked into her eyes and then he kissed her like she had never been kissed before.\n\nIn response her knees grew weak, and she might have collapsed had the stiff boots not held them stiff.\n\nWhen he pulled away, he took a deep breath, \"I love you. You're the girl of my dreams. I may just keep you in latex, forever.\"\n\nCindy, happy and content, said breathlessly, \"I love you too. And I love the latex. I may just stay in it forever.\"\n\nShe giggled as she continued, \"but I'm afraid I'd miss my chastity belt and bra.\"\n\nSteve laughed. Overjoyed that Cindy would say those things. \"And what about the collar and thigh bands? Would you miss them too?\n\nCindy laughed at that, \"perhaps.\"\n\nStill hugging each other Steve lead the way back to the stove where he had some lasagna dish warming. \n\n\"There's some French bread in the cabinet, over there,\" he said pointing, and I have some nice wine in the wine fridge, just there.\" \n\nWith Cindy's help they were soon sitting down to eat.\n\nShe found that eating in the hood wasn't too difficult, but the constriction of the hood made it hard to open her mouth wide and chew her food.\n\nSteve spent much of the meal gushing about how great she looked.\n\nPart way through, he stood up, \"I forgot another part of your outfit,\" and walked over to retrieve his bag of tricks.\n\nHe pulled out a pair of latex opera gloves and presented first one, and then as she finished slipping it on, the other. He had to help her get both of them tightly settled on her hands and up her arms up to her elbows.\n\nCindy didn't say anything as she donned the tight gloves. \n\nWith them on, she found that her fingers were kind of stiff and unwieldy, but she did like the look of them.\n\nAs she admired them, it occurred to her that she was now completely covered in latex. From head to toe. The thought gave her another sexual rush, and she could feel her pussy clenching around the dildo inside her.\n\nSteve just watched and admired her. \n\nWith a conscious effort she sighed and forced herself to relax and finish her meal.\n\nPicking up her fork and eating the last of her bread, with the latex confining her movements was also exciting, and contributed ore to her arousal.\n\nCindy struggled but her black latex hands finally finished their work.\n\nWhen Steve too was finished, he got up, \"we'll just leave these things here, for now.\"\n\nAs he helped Cindy up, he walked her into the living room, explaining that he wasn't ready to go back to bed. He needed more time to recharge.\n\nThey stood as he turned on the TV and searching, found a semi-erotic movie to watch.\n\nAs they settled onto the couch, he again reached into the seemingly bottomless bag and pulled out another bit of latex. Cindy couldn't see what it was.\n\n\"We'll just watch. Since there's no need to talk, I think this is in order.\"\n\nAs soon as Cindy opened her mouth to question his meaning, she felt something pushed in between her lips. She struggled a bit, but Steve held her and soon she realized that he was pushing a cock-gag into her mouth. It slid in only a couple of inches, not enough to cause a gag reflex, before a panel at its base covered her lips and he pulled straps behind her head and buckled them securely in place.\n\nWhen Cindy's gloved hands reached her mouth all she could feel was the flat latex panel, smooth over her lips. As she explored the thing, she identified a small hole in the gag's center through which she could blow, or suck.\n\nWhen she tried to talk, to protest, she could only make animal sounds. Grunts, mumbles and whines.\n\n\"Shhh,\" he said, \"let's just relax, I want to cuddle with my beautiful latex lady. Be good and keep quiet.\"\n\nCindy was kind of pissed. She loved the latex, all of it, the feel and the look of it, the hood felt extraordinary and she was really turned on, but she thought the gag was too much. \n\nAs she sat quietly, leaning against Steve he began running his hands up and down her body, onto her neck and head, over her breasts and onto her crotch, over and over he rubbed and massaged her whole body. \n\nIt felt wonderful and she enjoyed it immensely. \n\nLaying like a dolly, as he worked her over, she began to explore the gag with her tongue. As Steve's ministrations made her hotter and hotter, she began to slowly suck on the thing, as if it was his lovely cock. The more aroused she got, the harder she sucked. \n\nSoon, Cindy's orgasm hit hard, seemingly as much from Steve's attention as from her own mouth work. She moaned, twitched and twisted, against him.\n\nSteve, of course, realized that Cindy had hit her peak, and he slowly brought her down. She was panting and seeing stars as she tried to gulp air through her nose and the small mouth hole. Her tight corset didn't help either. \n\nAs she regained her breath and her head started to clear she began to contemplate her situation. Her head was in a stupor, overwhelmed by all of the emotions running through her mind and body. Most of them were good, but some of them were disconcerting, at best. She was, laying with a man she'd only known for a few weeks, playing some serious fetish sex games. And they were seriously professing their love for each other! \n\nShe admitted to herself that Steve was a great guy in all respects, just as Robin had said. And their love for fetish sex seemed to be right in step. They both seemed to like the same kinky stuff. He was even just a little dominant, just as she was just a little submissive. She was concerned about how dominant he might really be. She knew that as submissive as she might be, she didn't like pain or heavy bondage. She didn't imagine herself to be a masochist. \n\nShe had the urge to slow things down. To back away a little bit, just to make sure that the relationship was heading in the right direction. But as she thought about how things had been going these past weeks, she knew deep down that she didn't want things to slow down. She was enjoying them too much as they were. She really wanted to continue to explore their well-matched fantasies in more depth.\n\nWhy not, she decided...\n\nSteve was holding her and massaging her, soothingly. When he saw that she had calmed down and caught her breath, he asked, \"thirsty?\"\n\n\"Uh huh\" she mumbled through the gag.\n\nHe slipped out from under her, and headed off, leaving her half laying and half leaning on the big couch.\n\nA few minutes later he returned with her wine glass, refilled, and a straw that he evidently had ripped off from McDonalds. It was still in the wrapper, which he removed and tossed aside. He then slid the thing into the hole in the gag. It wound up sticking out comically, like an insect's proboscis.\n\nCindy sat up, chuckling, and dipped her straw into the wine glass and then by sucking hard, she was able to pull in a sip of the liquid. \n\nSteve watched, amused by the sight. \n\nWhen she had drunk enough, she passed the glass back to Steve and he pulled the straw out of her face and set them both aside. He then settled back onto the couch, comfortably, and resumed watching the movie.\n\nCindy stretched out and laid her head on his lap. She tried to watch, too, but she soon turned restless. It annoyed her that she couldn't really even hear the movie through the latex covering.\n\nShe was tired of the gag, and the hood too for that matter. She knew, though, that with everything locked on, she had to wait for Steve to let her loose. She couldn't even beg, with the frigging gag in her mouth.\n\nThinking hard, she devised a plan. She pushed up and looked up at Steve, drawing his attention. Then she tapped her gagged mouth on his cock, gently, a couple of times and whined, like a puppy. Looking up again she saw that he was starting to get the message. When she laid her head back down on his crotch, she could feel that his cock had certainly gotten it. It was getting nice and hard.\n\nKnowing that he was getting the message, she began opening his belt and zipper, fumbling a bit with her latex gloved fingers. Soon he was helping and his jeans and underwear were laying on the floor.\n\nIt was then that Cindy's plan came to fruition. Steve unlocked the straps and carefully pulled the gag out of her mouth. It was wet with her saliva and the remains of the wine. \n\nAs soon as the gag was out, Cindy let out a sigh of relief, and took a deep breath before settling her mouth on his growing penis.\n\nThat elicited a sigh from Steve and he laid back to let Cindy work.\n\nShe gave him a fine blow job, first licking and sucking him to full hardness. She found that he apparently also loved the feel of her latex gloves on his cock and balls. Once he was ready, she took him into her mouth and easily brought him to an orgasm.\n\nShe felt that swallowing his cum was a reasonable price to pay for being rid of the gag. She swore that she wouldn't be wearing it for a while.\n\nOnce Steve had calmed down, she got up, rinsed her mouth in the kitchen and again retrieved a warm cloth to wash Steve's sticky cock. \n\nShe saw that he was happy and content as he pulled his clothes back on and settled back onto the cushions. She joined him, feeling much better.\n\n\"I'm not crazy about that gag,\" she said, calmly, \"with it, not only can I not talk, but I can't suck your cock. Can we avoid that thing in the future?\" \n\nSteve didn't really give her an answer, so she let it slide. Hopefully he got the message.\n\nWhen the movie finished, they watched the local news and then went off to bed. Cindy was still locked into the latex, and it looked to her like Steve had no intention of letting her out. The thought of spending the night in the latex outfit actually turned her on. It was just another part of her own fantasies of latex encasement and imprisonment. \n\nSteve, sexually spent, was happy to sleep with his latex covered lover. That had always been one of his fantasies. Sleeping with a girl locked in latex. He had only done it a couple of times before with Robin, but she had never consented to wear the whole outfit, including the hood and boots.\n\nThey both fell asleep, happy and sexually fulfilled.\n\nAfter their busy day, they slept in, only waking when they had to relieve themselves. \n\nCindy struggled through the process. The gloves made it difficult to grasp and open the zipper for her crotch and the corset prevented her from bending to easily reach her pussy. By the time she was finished she was hot and frustrated.\n\nAfter they rejoined in bed and cuddled for a while Steve spoke up, \"I'm hungry, how about you?\"\n\nCindy stretched, then mumbled, \"me too.\"\n\nHow about we go out for brunch, I know just the place.\" \n\n\"Fine,\" she said, before punching him on the chest, \"but I think I need to get out of the latex. I'm hot and sweaty and stiff.\"\n\nWhen Steve didn't readily agree, she continued. \"Please. Don't make me beg.\" Then with a sly smile she continued, \"but if you want me to, I will.\"\n\nHe laughed and kissed her, \"OK, OK, I know you feel the need for a shower, and I'll be happy to help.\"\n\nThey spent the next hour, slowly stripping the latex off of Cindy's slick body and then washing each other in Steve's big shower.\n\nLeaving his bathroom, Cindy looked around for her clothes. The latex was all in a pile next to the bed, as was her skimpy dress. \"I'm not sure I can wear those,\" she said, gesturing.\n\n\"Not to worry, Steve said, \"I brought along an outfit for you from Robin's old collection.\"\n\nHe stepped out of the room leaving her wondering what he had selected.\n\nSteve returned, pulling a pretty, little black dress out of the bag he had carried last night. He also pulled out a pair of silver, ski-high heeled, strappy sandals.\n\n\"I think you'll look fantastic in this dress,\" he said as he handed it to her.\n\nTaking the dress, she looked at it,\" it does look nice, although it's awfully tiny.\"\n\n\"Oh, I'm sure it will fit you, it fit Robin really well.\"\n\nCindy shook her head, \"I wasn't talking about the size. I was referring to it being awfully skimpy. Look how short it is, and it's awfully low cut too. It will hardly cover me.\" \n\nSteve smiled devilishly, \"well, that's the idea. Try it on, please.\" \n\nSighing Cindy pulled it on over her head and straightened it. \n\nAs she suspected, it hardly covered her ass and pussy, and her cleavage was on full display.\n\n\"My God,\" Steve gushed, \"you look fantastic. I'll help you with the shoes, so we can head out. If we don't leave soon, I'll be dragging you back to bed.\"\n\nCindy could see by the state of his cock that he wasn't kidding.\n\nShe laughed, \"Oh really, I thought you were hungry. And what about underwear? If I go out like this, I'll probably be flashing everyone in the restaurant.\" \n\nAs she was protesting, Steve was gently maneuvering her into a nearby chair. As she sat, he could see that she was right, her pretty pussy was practically on full display. How great is that, he thought.\n\nCindy watched resignedly as he knelt in front of her and placed the shoed on her feet, wrapping the straps up to her ankles and then closing their buckles with a snap. \"Well?\" she asked, drawing the word out.\n\n\"Well,\" he said. You've been locked up for so long, in the belt and the latex, I thought you would enjoy being unfettered.\"\n\n\"Unfettered?\" She asked facetiously, \"is that what you call it?\"\n\n\"OK, how about, free? Now give me a minute to get dressed and we'll head out.\"\n\nAs he dressed, Cindy examined herself in a full-length mirror, mounted on the wall. She did look sexy, and underdressed. She knew that going out like this would be a humiliating adventure, but fun none the less. It certainly wouldn't be as bad as last night's latex visit to the grocery store with all of the perverts drooling over her.\n\nCindy spent the whole trip worrying about showing her privates to everyone nearby. Getting out of the car, walking into the restaurant (a nice and elegant one), sitting at the table, visiting the ladies' room, and waking out of the place. \n\nThe meal was fine and the service excellent, as was her flirting conversation with Steve. \n\nThe meal went well and Cindy was relieved when they finished and go into the car. She hadn't made a scene or flashed any of the people in the restaurant, at lease none that she knew of.\n\nDuring the drive home she realized that she felt, somehow, incomplete. It took her a while to understand that it wasn't the revealing clothing or lack of underwear that was giving her the odd vibe. It was the lack of restrictive clothing and underwear that had her body feeling strange. She was surprised to realize that she missed the plugs and the constriction of the belt and its accessories. Yesterday, in the Latex she hadn't felt this way, but that outfit had delivered its own kind of bodily restraint.\n\nAs she inventoried her body, she came to the conclusion that her breasts missed the warmth and strict support of the metal bra, her pussy missed the dildo that filled her and even her ass hole missed the plug that stretched it so. Most of all she missed the vibrations and the orgasms that the thing delivered. She also seemed to be longing for the anticipation and the nervousness that the things programs forced on her.\n\nShe didn't know how to react to these revelations. She understood that much of it was the wonderful achievement of her long running sexual fantasies. She was actually living a lot of the things she had only dreamed of on quiet nights and during her numerous masturbation sessions. But her conventional self, kept whispering in her ear that it was wrong. That all of this sex and kink was too much.\n\nHer body, though was getting too much pleasure, not to mention fantastic orgasms, to stop this adventure, at this point. She just had to ride it out to see where it would take her.\n\nWhen they arrived home, they settled into the living room and watched a football game as they cuddled on the large and comfortable couch. \n\nWhen she tried to slip off her heels, she realized that she couldn't. The straps' latches were actually tiny locks. When she looked up, she saw Steve watching, with a small smile. \"Really?\" she said. \n\nHe just nodded and kissed her. Passion took over and they spent several minutes playing with each other's tongues, before pulling apart to catch their breath.\n\nThey tried to get back into watching the game but after a short while, their interest in each other overrode their interest in the game and they made slow, sensuous love on the spot. Her skimpy dress made it easy.\n\nAfterwards, while lying in each other's arms, she sighed, \"Damn, I have to go back to work tomorrow. This has been a fantastic sex fantasy vacation, but now it's back to the real world for me.\"\n\nSteve bent down and kissed her, \"I want you to wear the belt again, next week.\"\n\n\"Oh Steve, I can't.\" \n\n\"Of course you can. You just spent most of this week in it. And correct me if I'm wrong, you enjoyed it, didn't you? And just the thought of you wearing it drove me nuts. I was hard the whole time.\"\n\nCindy thought for a moment. \"You're right I did enjoy it. And the orgasms it gave me were fantastic. But it's just not practical for every-day wear, especially at the office.\"\n\nSteve wouldn't let go of the idea, and Cindy started to waiver. She really had enjoyed wearing the belt, and it had kept her aroused, and she did learn to live with it. But wearing it to work, where she had to deal with her colleagues, and customers, and managers, up close, was just plain scary.\n\n\"I can't wear the collar, I wouldn't be able to hide it and let's face it, it is a slave collar, not just a piece of jewelry.\"\n\n\"Didn't you hide it while you were out last week?\"\n\n\"Yes, I did, but that was just for an hour or two, with strangers, and wearing a scarf was not too out of line with my coat.\"\n\n\"OK, no collar, you don't have to wear it. Just the belt, the bra and the bands,\" Steve says, relenting.\n\n\"No, I can't wear the bands, either.\"\n\n\"Why not?\" Steve says sighing, getting a little frustrated.\n\n\"I can't see myself walking around the office with the limited stride that they require. People will notice and what could I tell them? My boyfriend makes me wear these things to torture me?\" \n\nAt that point it strikes her that she's caught up in a debate about which parts of the belt she will wear, and which she won't. That it has become a forgone conclusion that she will wear the belt next week. How did that happen?\n\n\"Cindy, you know that the bands are not evil torture devices. They ensure your security, and add a little bondage to the mix.\"\n\n\"Yes, yes, I understand, I think, but I just can't. Please don't make me.\"\n\nAs soon as she said that, she realized how petulant she must have sounded, and how submissive. She was, in effect agreeing to wear the belt, while giving him the power to make decisions for her. Shit!\n\nSteve though didn't seem to pick up on it. He just surrenders again to her request.\n\n\"OK, OK, you don't have to wear the thigh bands. I can understand why they might be a problem. So, you'll just wear the belt and bra.\" He does understand that he's pushing her pretty hard, but he's already so aroused he's about ready to jump her bones this very minute.",
        "Cindy sees that she's backed herself into a corner. Her two big arguments have been addressed, and now it's either agree or back away, possibly ruining their budding relationship. She admits to herself that she does love wearing the crazy belt. That it feeds her own fantasies and fetishes as much as it seems to feed Steve's and that she's also very much aroused by the prospect of wearing the belt long-term.\n\nShe's excited by the challenge too, and the exquisite danger she'd be putting herself into, by wearing it in the office.\n\nAs she's been holding her internal debate, Steve's just been sitting, waiting for her. When she notices, she blushes and sighs, and whispers, \"OK\".\n\nSteve's delighted. \n\nHe grabs, kisses her and gushes \"I love you,\" surprising both of them. They wind up making love, yet again, with Steve giving her a first orgasm with his tongue and mouth and then a second with his hard cock.\n\nLater, after a simple home-cooked dinner Steve drives her to her house, still in her LBD and sandals.\n\nThey're both exhausted, so he uses a tiny key to unlock the shoes as she slips the dress off over her head. \n\nThen it's time for the belt. She wanted to shower first and make sure she was clean, inside and out, but she knows that he's anxious to leave, so she passes on it. He follows her into her bedroom and watches as she self-consciously, lubes up the plugs and dons first the belt and then the bra. He helps by plugging the bra's cord into the belt.\n\nAs soon as everything is in place, he checks the Master App, \"Great, you're good and secure.\"\n\n\"Which Program?\" She asks nervously, afraid that he might have set it to something new and torturous. \n\n\"Program 28, of course, the one we ran last week.\"\n\n\"All right. But when are you going to let me out?\" Again, worried about what she's gotten herself into.\n\n\"I'm not sure. We'll just have to see,\" he replies giving her a wink that does nothing to allay her fears.\n\nContinuing he says, \"now you're set, so I'll head out. What time will you be done with work, tomorrow?\"\n\n\"I'm usually done around 5:30, and it takes me a half hour to get home.\"\n\n\"Why don't you meet me at O'Riley's Bar & Grill on Steven's Creek Road? You can come straight from work. I'll buy dinner and drinks, and you can tell me how your day went.\"\n\nCindy was hoping to meet up at one of their homes so she could get out of the belt and perhaps have sex, but didn't feel like begging, so she agreed.\n\nAfter a lengthy good night kiss, Steve headed out and Cindy took a nice hot bath. She went straight to bed afterwards, spending the first hour worrying about work in the belt tomorrow, and what she should wear.\n\nDespite her concerns she slept well and woke in the morning as ready as she could be for her day. \n\nShe performed her normal routine, toilette, washing, makeup, hair and dress. She selected a conservative dress, that seemed to hide her metal belt and bra well. \n\nThe drive to work was uneventful and she was able to slip into her office without having to deal with anyone.\n\nAs expected, she had a lot of work to catch up on, after two weeks off. So, she just focused on that. She was interrupted several times by friends and colleagues stopping in to say 'hi', or to ask about some work task that was awaiting her attention. \n\nAround 9:30 the belt came to life with the five-minute warning. She hurriedly got up and slipped into a stall in the lady's restroom. The belt did its thing and per usual she enjoyed her orgasm, until someone else entered the room and went to an adjacent stall. Cindy had to remain still and quiet as the feelings died down and the belt switch to arousal mode. It was hell.\n\nAs she expected, when she got back to her desk, with the belt and bra still vibrating and torturing her, she had trouble focusing on her work. The documents and spreadsheets all seemed to be gibberish. Eventually the vibrations stopped and, sighing, she got back to being productive.\n\nShe stayed at her desk during lunch eating the brown-bag food she had prepared at home. The afternoon passed as had the morning, with only one interruption by the belt. The arousal mode session lasted more than an hour, so she got frustrated and angry, which helped her focus a little, and she was able to make some progress on her tasks during that interval.\n\nWhen it came time to leave, she was more than ready to head to the restaurant.\n\nSteve, he was all smiles when they met up. He gave her a big hug and kiss as they found an empty table and ordered drinks.\n\nAt his prompting she described her day. Complaining about the difficulty concentrating while the belt was in arousal mode. She also told him of the two sessions when the program kicked in. How she hid in the bathroom and how someone interrupted her first orgasm.\n\n\"But how were the orgasms? Were you able to enjoy them under those circumstances?\" He asked, enthusiastically.\n\nCindy didn't like his tone, \"yes, you know I did. I gave up trying to fight the feelings a long time ago,\" she said indignantly.\n\nSteve ignored her attitude, \"good. I'm glad.\"\n\nThey paused as their drinks were delivered. The alcohol helped Cindy relax a bit. \n\nThinking, Steve asked, \"isn't your company in one of those big office buildings, downtown? I wonder if there isn't somewhere else in all that space that might give you some privacy, so you could better enjoy your big-O's.\"\n\n\"I don't know,\" Cindy said, shaking her head, but she made a mental note to explore a bit, tomorrow.\n\nAfter that, their food arrived and they made small talk as they ate and drank. \n\nCindy wanted to ask Steve to go home with her and unlock her, but she was too tired and too resigned to try. And she didn't want to get into the habit of begging for release.\n\nAs they were finishing their food, the belt gave its warning and she stiffened and groaned. Steve glanced over, \"is it starting?\"\n\nShe just nodded.\n\nSteve shifted his chair over so he could sit right next to her, and hold her as the vibrations started up and she tried her best not to make a scene. It was difficult, and a couple of times she moaned quietly in response to the waves of pleasure. The place was too noisy for anyone to hear, although she did notice a couple of people glancing at her curiously.\n\nWhen the belt finally shifted to torture mode, they finished their food and ordered coffee. \n\nAfter only a few sips, Steve said, \"you look tired. I know I am, why don't we just call it a night?\"\n\n\"OK, you're right, I am tired and it's been a hard day,\" Cindy agreed. Just the thought brought on a yawn. \n\nSteve paid and they walked out to the parking lot, together.\n\nAfter kissing farewell, Cindy asked, \"tomorrow?\"\n\nSteve sadly replied, \"I can't. I have a business dinner with a client that will last until late.\"\n\nCindy was crestfallen.\n\n\"How about Wednesday night? I'll pick you up at your house at 6:00. We'll go out for a quick dinner and then go back to your place.\" Steve said.\n\n\"OK, that sounds good, but you have to know I expect to be let out of the belt.\"\n\n\"Well, I suppose we can do that,\" he said, feigning reluctance. \n\n\"Damn right we can do that, mister!\" She replied, poking him in the chest.\n\n\"In fact, if you're a good girl, I can stay the night. I don't have to be into work until mid-morning.\"\n\n\"If I'm a 'good girl'?\" poking him again. \"I'm locked in your frigging belt, aren't I? I'm crazy about you, aren't I? Damn right, I'm your good girl.\"\n\nWith one final poke she broke out laughing and he joined her. \n\nThey stole a final kiss before climbing into their respective cars and driving off.\n\nCindy was bummed that she wouldn't be getting out of the belt until Wednesday night, but pleased that Steve would be spending that night in her bed.\n\nTuesday at work was a repeat of Monday, except she had a couple of meetings and one of them occurred while the belt was still in arousal mode. The distraction caused her to miss a couple of points and give incorrect answers to some questions. \n\nAfter the meeting, she was mortified when one of her nosey colleague's questioned her about her lack of focus. Prepared, Cindy confides that she has a new lover, and that she was caught daydreaming about him. Cindy knows that the office gossip will spread the word and that it will explain to some extent why she's not been fully focused on her work.\n\nAfter lunch, she also found some time to explore the building, looking for a 'quiet space' like Steve suggested.\n\nShe got lucky when she discovered that the entire 7th floor of the 27-story tower had just been vacated by the tenant. The whole floor was vacant and although the offices were secured the open hallway included a 'maternity room' for new mothers to pump their breasts. It was cozy and comfortable and had a door that could be locked on the inside. Perfect! \n\nShe had no idea how long it would be available, but for now, she could scuttle down there whenever the belt started up. It actually started her looking forward to the next session.\n\nLater, near quitting time, the program kicked in and she was able to make it into the elevator and down to 7 with a few seconds to spare. Her orgasm, in the privacy of the maternity room was wonderful. She returned to her office in a really good mood and was even able to do some work during the arousal mode period.\n\nAt home, she relaxed and had a salad dinner before crawling into a hot tub to soak. She was feeling relaxed when the belt kicked in with the warning signal. She just continued to lay there, in the hot water as the belt took off and gave her a really excellent orgasm. It was only afterwards that she realized that only the breast and anal vibrators had ramped up to high speed. The one in her pussy had stayed at arousal speed, but regardless her orgasm had been great.\n\nSleep came quickly after that, and she awoke in the morning feeling good. \n\nShe completed her morning rituals in record time and headed out to the office, already looking forward to the evening's session with Steve.\n\nThe day went pretty well, until she caught one of her male coworkers staring at her breasts. As soon as she got back to her office, she checked her front and saw that the dress she's wearing doesn't do a good job of hiding the prominent steal nipples of her chastity bra. Damn!\n\nCindy decides that in the days to come she'll have to cover her imitation nipples with Band-Aid patches to smooth out her profile. One more thing to deal with. Shit!\n\nThe belt kicks in three times during the day. Each time she heads down to the 7th floor for an enjoyable, private session.\n\nShe makes it home at the end of the day to find Steve waiting in front of her house.\n\nAfter she parks her car, he follows her in, and waits for her as she uses the bathroom.\n\nHe hugs her and they kiss as she joins him in the living room. \"Hungry?\" he asks.\n\n\"Yes, for food and for you.\" \n\nHe barks a laugh, \"well let's do dinner first and then I'm all yours, and you're all mine.\"\n\nCindy reaches for her purse and coat, but Steve stops her.\n\n\"Let's put on the rest of the belt. Where are the collar and thigh bands?\"\n\n\"Oh hell,\" she replies a little exasperated, \"they're in my bedroom.\"\n\nShe allowed him to put the collar around her neck and the bands up her legs. \n\nOnce they were in place and plugged in, Cindy put her dress back on and commented, acidly, \"satisfied?\"\n\nWith a big smile he replied, \"very.\" Before ushering her out the door and to his car.\n\nCindy had a little trouble readjusting her stride to the thigh bands restrictions, but it quickly came back to her.\n\nSteve drove quickly to a nearby restaurant and they were seated at a small table in the quiet little place.\n\nCindy immediately noticed that several of the other diners were staring at her. She could tell that their attention was on her collar. She was embarrassed, but could do little about it, so she just ignored the attention and focused on the menu.\n\nShe enjoyed the dinner, as did Steve, but both of them were anxious to get back to her house, and her bed.\n\nA short time later they were back at Cindy's house, and Steve used his Master App to unlock the belt.\n\nCindy stood, naked as he slowly removed, the various parts, and as soon as they were all lying in a pile on the floor, the two of them were in bed, kissing and hugging.\n\nThey enjoy great, and loving sex. She only debates with herself for a few seconds before admitting that Steve is better than the belt, but not by much...\n\n\"You know, despite the things you do to me, I think I love you,\" she whispers, while they cuddle in bed after their two-hour session of making love.\n\nAfter they shower, he puts the belt with collar and bands on her and they cuddle in bed. \n\nShe asks, \"Doesn't my hardware bother you. Get in your way?\" \n\n\"Yes, but I love it so, it turns me on so much, that I'm happy to deal with it,\" he replies, dreamily.\n\nShe mumbles, \"I'm the one who has to deal with it.\" But he's already asleep.\n\nThey spend the night with him naked and her secured, and plugged in, too.\n\nIn the morning, Steve unlocks the collar and thigh bands and watches as Cindy gets ready to head out to work.\n\nWhen Cindy puts the Band-Aid pads over her nipples, Steve asks about them. \n\nCindy explains and he protests. \"That's not part of the deal.\"\n\n\"What deal?\" Cindy says. \"I can't walk around with these nipples sticking out.\" \n\n\"Of course you can. They look great, and sexy as hell. All of the men will love them.\"\n\n\"That's the problem, \"she says adamantly, \"at work, I don't want 'sexy'. And what would happen if some letch tried to cop a feel? How would I ever explain my steal plated boobs?\"\n\nBoth of them crack up laughing at the thought.\n\n\"I guess you're right. OK, I won't fight you on that. But there is one other aspect of your wardrobe we need to work on.\"\n\nAs he says that he walks into the other bedroom and returns with a pair of shoes. They're tall red pumps with 5-inch spike heels and ankle straps.\n\nCindy immediately starts to protest, but Steve holds up his hand to silence her. \"No arguments. These will go with your dress and will look fabulous.\"\n\nAlthough she's not enamored with the idea, she knows how sore her feet will be by the end of the day, she is turned on by the sexy shoes and the thought of wearing them. \n\n\"Oh, all right.\"\n\nSteve kneels down and slides them on her feet, closing the ankle straps with their small buckle. The snap they make reminds Cindy of the strappy sandals she wore the other day. \n\n\"Hey, do these lock like the sandals?\n\n\"Yup.\"\n\n\"When will I be able to take them off?\"\n\n\"Well, before bed, of course. I'll be here again, this evening.\"\n\nThey kiss goodbye as they head out to their respective cars.\n\nIn her office, Cindy works diligently and is only interrupted once in the morning by the need to head down to the 7th floor. She enjoys the break, now more comfortable with the process and the safe environment. Her orgasm feels great and despite the continued, arousal mode vibrations, she's able to get right back to work.\n\nShe's both pleased and concerned by that. She is happy that it's no longer impacting her productivity, but is she becoming complacent with arousal mode? Is her body losing some of its sensitivity to the vibrations? Could the same happen with her orgasms? God! That would be awful!\n\nLater, she bumps into the same nosey co-worker at her lunch break. She comments on Cindy's numerous trips to the bathroom. Cindy explains to her that she's seeing a doctor about some 'plumbing' issues, and asks the woman to maintain her privacy on the medical issues. The woman agrees, but Cindy is sure that word will spread, and actually help to cover her kinky secret.\n\nThat evening, Steve is again waiting for her when she pulls up at her house.\n\nOnce they're in the door, Steve first apologizes for the short notice, and then tells her that he has tickets for tomorrow night's symphony performance, downtown. He invites her to attend with him, and asks if she's ever been to the Symphony. \n\n\"Only to Christmas concerts when I was younger, I haven't been to Symphony Hall in years.\" \n\n\"Well, do you want to go?\"\n\n\"Sure, I'd love to, but isn't it a semi-formal affair? I mean doesn't the audience dress up for those classy concerts?\"\n\n\"Yes they do, I usually wear my tux,\" he says grandly.\n\n\"Well, in that case, I'm afraid I don't have anything to wear, at least nothing that I can wear over the belt and bra.\"\n\nHe smiles, \"or the collar and bands?\"\n\n\"Yes, or the collar and bands,\" she sighs.\n\n\"Can't I go without the belt?\"\n\nHe shakes his head. \"Definitely not. We'll go out and find something tonight,\" he says, \"Actually, I think I know just the place. Let's finish getting you properly dressed and get going.\"\n\nCindy again allows him to lock on the collar and thigh bands, protesting that they'll make it impossible to try on dresses. He brushes off her objections, before requiring her to also don a pair of high heels.\n\nCindy again protests. \"My feet already hurt from wearing those things all day.\"\n\n\"Sorry, but you need to be in shoes like you'll be wearing with the dress.\"\n\nCindy, resigned to her fate, walks to his car in full fetish mode.\n\nSteve drives straight to a dress shop where, he explains, he and Robin had seen a perfect dress for such an occasion, but hadn't bought it as the divorce squashed their plans. It's a very sheik and up-scale store. Cindy's never been there, as she never had the money for the high-fashion stuff they sell.\n\nOnce inside, Steve searches and finds the particular dress he had in mind. He's relieved to see it's still on the rack. He pulls it out and shows it to her as a salesgirl walks up. For a moment Cindy is bothered. She just knows that the woman is staring at her collar, but is looking, stunned at what Steve is showing her.\n\nThe dress is breath-taking. It's a long and high-necked sheath covered in silver scales, larger than sequins, about the size of quarters. The scales are apparently made of aluminum so they aren't too heavy, but because of their weight, they'll maintain the dress' shape even over her chastity belt and bra. The collar will be visible, but the silver of the dress almost merges with it, and the dress draws attention away from that 'accessory'.\n\nCindy can understand why it hasn't sold, when she sees the price tag.\n\n\"It's fantastically beautiful, but way too expensive,\" she tells Steve. \n\nHe ignores her comment and urges her to try it on. The salesgirl, joins the discussion and encourages her too, pointing to their changing room.\n\nCindy can't resist, and takes the dress into the private changing cubicle. She emerges a few minutes later to much acclaim, from Steve, the saleswoman and a couple of women who wandered in while she was changing.\n\nSteve stands and stares, grinning from ear-to-ear, as she models the dress. \n\nCindy can see in the mirror that she looks fantastic. But she's still concerned with the price tag.\n\nWhen Steve tells the salesgirl, \"we'll take it.\"\n\nCindy responds, \"Oh Steve, are you sure? It's so much money.\"\n\n\"I'm sure,\" he says, \"and we'll take that cape, too. You'll need something appropriate to cover up and keep warm when we're outside.\"\n\nCindy sees that he's pointing to an elegant, black velvet cape, like a princess might wear to the ball, hanging on an adjacent rack. Oh. Dear God, she thinks, I'll be the bell of the ball. Every girl's dream. \n\nShe giggles, delightedly when she realizes that she'll be the princess locked in a chastity belt.\n\nSteve thinks she's just happy with the pretty dress, and smiles at her, possessively.\n\nIn minutes, the dress and the cape are wrapped, paid for and loaded into Steve's Beemer. \n\nCindy is blown away. She'd never imagined she would ever wear such a beautiful and expensive dress.\n\nSteve takes her to a little Italian restaurant and they eat while Cindy gushes about the dress, and Steve tells her how wonderfully beautiful she looked. ",
        "Cindy is so enamored with the dress that she forgets the collar she's wearing, and doesn't even notice the looks it's drawing from the other patrons.\n\nWhen they get home, Cindy immediately jumps on Steve and rides him back onto the couch. She strips off his clothes as she kisses him. Once he's naked, she works her way down to his ready cock and gives him a mind-altering blow job. \n\nAfter he recovers, she drags him to bed and still wearing her chastity outfit she wraps herself around him and they slowly fall asleep.\n\nCindy's final, happy thought is, 'I guess I can be bought with pretty things.'\n\nIn the morning, Steve unlocks Cindy's belt and short on time, she immediately heads into the bathroom to get dressed.\n\nSteve has breakfast waiting for her when she comes out, dressed, made-up and ready for work.\n\nAs she gobbles some food and drinks her coffee, Steve wanders into the second bedroom and comes back with a pair of black leather boots with the normal sky-high heels.\n\nThese will go great with that dress, he declares. \n\nCindy sighs, as he bends down, removes her 'sensible' shoes and slips the boots up her legs. \n\nAt least they don't lock on, Cindy thinks as she heads for the door.\n\nHer day at the office progresses as normal, these days. She enjoys two belt induced orgasms before lunch, while hiding on the 7th floor. Otherwise, she gets her work done, despite the time spent in arousal mode.\n\nShe eats a quick lunch and continues working until her mid-afternoon team meeting. Partway through the discussion the belt gives her the warning of an impending orgasm session. She's frustrated that she'll have to bail on the meeting, but she knows that she has no choice. She excuses herself and rushes out leaving her colleagues to finish without her.\n\nShe makes it to her quiet space just in time, but her enjoyment is ruined by the circumstances and she only barely reaches her climax.\n\nShe's relieved when she returns to her office and no one comments on her disappearance.\n\nThe day finishes with no further drama.\n\nShe leaves work a little before normal quitting time as Steve is picking her up early so they can prepare and make it to the performance on time.\n\nWhen they meet up at her place, they quickly pack most of the boxes' contents into his car and head to his house for the weekend.\n\nAs soon as they've unloaded everything, they grab a quick dinner, sitting in his kitchen and start to get dressed for their evening.\n\nCindy puts a lot of work into her hair and make-up before slipping on the new dress. She's pleased when she performs her final review in the mirror before meeting Steve in the living room.\n\nSteve is stunned by the sight when she walks in. \n\n\"My God, you're beautiful! The dress is absolutely stunning, and so are you. Your makeup is perfect, too. I love that look. You should wear it more often.\"\n\nCindy smiles, 'Thank you kind sir, and you look grand yourself.\"\n\nHe's in a sharp Tux and does look very handsome. \n\n\"And this is too much make-up for everyday-wear.\"\n\nSteve looks her in the eye, \"I don't think so. I'd love to see you like that every day.\"\n\nThey drive quickly downtown and arrive at the hall in good time.\n\nWalking in to the grand hall, she's nervous, but feeling beautiful. The collar is her main concern.\n\nWhen she removes the cape at the coat check window, all heads in the vicinity turn and the buzz of conversation dies out. \n\nAt first, she's embarrassed and blushes, but as she looks around, she realizes that everyone is staring in admiration. \n\nSteve bends over and whispers in her ear, \"it's the dress and you, not the collar, that has them transfixed. I doubt if any of them even notice it.\"\n\nThe crowd is mostly older, and well dressed. But it seems none are as beautifully turned out as she is, or as handsome a couple as the two of them.\n\nThey work their way to their seats, in the center of the big auditorium. Cindy's thigh bands make her nervous as she shuffles along the skinny aisle between the rows of seats, but the short steps she's become used to, help. Everyone else has to walk like that too.\n\nShe sits next to a well-dressed older woman, probably in her 60s, but looking good for her age. They nod to each other and smile.\n\nCindy is still aware that she is a center of attention. Men and women around them are turning to stare and whisper to each other. Cindy's confidence grows, and she's growing more comfortable with the stares. \n\nWhen the lights dim and the concert begins, she's relieved, and can focus on the music. Steve holds her hand possessively.\n\nNever a big fan of classical music, she finds that in this setting, in this dress, with this man, the live concert is delightfully enjoyable.\n\nUntil, that is, the belt kicks in with the warning vibrations. She panics, realizing that there's no escape. No way she can leave her seat during the performance. The intermission is probably a half-hour away.\n\nShe whispers urgently to Steve, \"the belt!\"\n\nHe looks at her and nods, \"Sorry, honey, you're just going to have to ride it out.\" \n\nHe holds her hand tighter and pulls it into his lap, away from her crotch, where he suspects it might wind up in her attempts to control the feelings she'll be suffering through.\n\nWhen the heavy vibrations start up. She holds the other arm rest in a death-grip, and begins to squirm and shudder. Thank heaven, her moans can't be heard over the sound of the orchestra. \n\nThe woman next to her finally grabs her forearm, drawing her attention. The elegant lady whispers, \"hold on, dear,\" and gives her a squeeze.\n\nCindy is terribly embarrassed, but somehow relieved by the support provided. Does the woman know what is happening? What Cindy's going through. How could she? How can Cindy ever explain it to her?\n\nCindy struggled through her orgasm, for many torturous minutes. The belt didn't stop until she did finally climax, but the situation kept it small and unfulfilling.\n\nAfter it subsided, and the belt settled into the arousal mode, she was able to relax a bit and catch her breath.\n\nThe lady patted her and took her hand away. She had stayed focused on the stage and the music throughout.\n\nAt the intermission, they glanced at each other and the lady smiled and nodded. Cindy mouthed 'thank you', and the whole event was seemingly forgotten as she turned to converse with her husband.\n\nCindy followed Steve out to the lobby where he bought her a Martini at the bar. She gulped it down. \n\n\"I thought I was going to die, either by the repressed feelings or in embarrassment. Can we go? If it happens again, I'm sure I won't have a seizure.\"\n\n\"Oh nonsense. No one noticed. It was dark, and they were all focused on the stage and the music.\"\n\nThankfully the belt didn't bother her again and she was able to enjoy the second half. The lady in the next seat paid her no further attention.\n\nAgain, they drew stares as they walked out, stopping for her cloak and his coat on the way. Cindy actually enjoyed being the 'bell of the ball'. The feeling was delicious.\n\nThey arrived back at Steve's house a half-hour later.\n\nCindy was still on her high from the wonderful evening, and she was horny as hell!\n\nSteve was too, but he was also enjoying the sight of the beautiful Cindy in the sexy dress. He gets drinks for them both and they relax on the couch, talking, reviewing the evening. Cindy mentions the music and the elegance of the crowd. All Steve talks about is how stunning Cindy was, and how everyone else obviously agreed.\n\nAfter they finish their drinks they sit quietly for a few minutes and then, looking at each other they say, in unison, \"to the bedroom,\" laughing.\n\nSteve quickly strips down while Cindy carefully takes off the beautiful dress, and hangs it up in Steve's closet. She's happy to be rid of its weight, but comments, \"I'll probably never get an opportunity to wear this again.\"\n\n\"Oh, I think we can find other events. You look too gorgeous in it to let it go to waste.\"\n\nWhen she returns from the closet, Steve is nowhere in sight. She hears him in the bathroom, so she sits on the edge of the bed waiting for him. When he comes out, he smiles at her and says, \"your turn,\" indicating the bathroom door.\n\nShe looks at him, \"ah, the belt?\"\n\n\"Not now, meet me in the bed,\" he says as he crawls under the sheets.\n\nCindy can't believe it. What's he thinking? Confused and disappointed she walks into the bath and uses the facilities before returning, and climbing into the bed.\n\nSteve, rolls over on top of her and kisses her. She returns the kiss but remains unsure of what's going on.\n\n\"Did you know that I can unlock the dildo in your pussy?\" \n\nCindy, muddled, says \"I think I heard something about that from the ChastiWife girl.\"\n\n\"Well I can, and I just did.\" \n\nHe slides down her body until he's kneeling between her legs. She watches as he reaches between her legs and she feels him do something before the dildo slides out of her vagina. She moans as she feels suddenly empty. \n\nSteve then repositions himself, pulls her up by the hips, down onto his thighs and slides his hard cock into chastity belt's opening, replacing the dildo with his prick.\n\nCindy immediately feels the vibrators in her breasts and anus come to life. They feel good, but she's missing the vibrations in her pussy.\n\nWhen Steve starts pumping in and out of her, through the hole in the belt she understands what he's up to. She's not going to get out of the belt, she's not getting a belt-generated orgasm, Steve is screwing her while she remains locked in the belt!\n\nShe enjoys the feelings, and she feels the cock in her pussy, but the belt doesn't allow any contact with her clit, so she's not feeling as much as she wants or needs. It's frustrating and disappointing. She's so horny and isn't able to orgasm.\n\nSteve is loving it. It's so kinky, he senses that Cindy isn't feeling it, but he sure is. His cock is inside her and poking through the belt at the same time, and he can feel the vibrations emanating from her plug too. \n\nShe feels him stiffen and explode into her, but she's not excited enough to orgasm, herself. It reminds her of younger days when teen-aged boys blew prematurely. No satisfaction.\n\nBut things get really weird, when Steve pulls out, he immediately pushes the dildo back inside her. As it locks in place it comes to life and joins the vibrators in her breasts and ass to push her to the orgasm she missed with Steve's cock.\n\n\"What the hell,\" she mutters, before the feelings start to take over and she orgasms.\n\nSteve watches fascinated, still kneeling between her legs. \n\nWhen Cindy starts calming down, he slides over and lays down next to her. He reaches over and kisses her cheek as she catches her breath.\n\n\"How was that?\"\n\nShe turned her head and looked at him. He could tell that she was unhappy, and he was afraid that he'd once again gone too far with his lover.\n\n\"I didn't like it. It seemed like you were just fucking the belt, not me. And then the belt gave me an orgasm, not you.\"\n\nFeeling bad and scared, he reached up and stroked her cheek. \"I'm sorry honey. I thought it might be fun. I've never tried that before and I didn't understand how it would go.\"\n\n\"You never did that to Robin?\"\n\n\"No, we never tried it. She wouldn't allow it.\" \n\n\"Why do it with me, then?\"\n\n\"I guess I thought you might be able to enjoy it. You're sexier and kinkier, than she was.\"\n\nHe paused, \"we don't have to ever do it again, if you don't want to. Really, I'm sorry. Please forgive me.\"\n\nCindy kept him hanging for a few minutes, partly to torture him, \"OK, I forgive you. It was just kind of weird. I'm not sure if we'll ever do it again, but I did enjoy it, kind of.\"\n\nJust to emphasize her point she turned onto her side, giving him her back and tried to relax, with the belt humming away in arousal mode.\n\nSteve, feeling lucky, like he had just dodged a bullet, let her be.\n\nBefore long, exhausted, from her busy day and night Cindy drifted off to sleep, just as the belt itself shut down.\n\nSteve, once he heard her breathing steady down into sleep, relaxed and fell asleep himself.\n\nThey sleep really late. \n\nSo late, in fact that the belt kicked in, unusually early, and she wakes Steve as she moans and rolls around in the bed. He just watches with an appreciative grin on his face.\n\nAfter her orgasm, they hug and kiss until the arousal mode phase completes. Then he finally unlocks her and sends her to the shower, while he makes breakfast.\n\nAfter the leisurely meal, he leaves her in the kitchen, sipping coffee and watching the morning news shows, while he heads down the hall to the back of the house.\n\nWhen he returns, he kisses her and as he grabs her hand, says simply, \"come.\"\n\nFollowing him down the hall, \"where are we going?\" She asks, curious. Anticipating something sexual and fun, she starts to get aroused.\n\n\"You'll see.\" Is all he says. \n\nThey enter a back bedroom, dimly lit with candles and a small bedside lamp, turned low. Quiet music plays in the background.\n\nShe doesn't resist as Steve cuffs her, nude and spread on a rubber sheet on the guest bed. The cuffs are leather and padded and she winds up unable to move, laying on her back. Fully at his mercy.\n\nFor the next three hours Steve works on her beautiful body. Torturing her. \n\nHe massages her entire body slowly and sensuously with warm vanilla-scented oils. Then he shifts to tickling her with fir mittens. She moans and giggles, and groans. She twists and turns and shakes as he works on her like a surgeon.\n\nHe moves on to kissing and nibbling her everywhere. Concentrating, of course, on her nipples and pussy. She comes several times. Unable to move, it's a new experience. \n\nCindy loves every minute. The restraints feed her bondage fantasies and Steve's tortures drive her wild.\n\nHe spends more time with a vibrator. Passing it over her breasts, torso and pussy. Again, eliciting more orgasms from her over-stimulated body. \n\nWhen she's exhausted and thinks she can't take any more, he strips off his shorts and fills her with his hard cock. Unable to move she can only squirm and gasp as he slowly pumps into her, until he begins to increase the speed of his thrusts and climaxes. \n\nThey lay for quite a while catching their breaths and calming down from their sexual high.\n\nEventually he crawls out of the bead and gets cleaned up. He returns and releases her before heading out to the kitchen to rustle up some lunch. Cindy, feeling like she just ran a marathon, staggers into the shower and leans against the wall under the hot spray. \n\nShe loved the session and can't believe how wonderful it was. She's also fascinated by how much she loved the bondage, at least like that!\n\nThey eat in the nude, and then relax and warm themselves in front of the fireplace, cuddling under a large, soft blanket.\n\nWhen Steve leads her back into the bedroom and begins wiping down the rubber sheet with a damp towel, she stands there with her arms crossed, watching and wondering. What now?\n\nShe says, \"Not again, I'm not sure I'm ready for another session like that one.\"\n\n\"Oh, this will be different,\" he says a bit ominously.\n\nCindy shivers, in fear and excitement.\n\nThis time he straps her down, laying on her belly.\n\nShe continues to tremble in fear and anticipation.\n\nSteve works over her back like he did her front with oils and fur, kisses and nibbles and vibrator for the next couple of hours, it seems like forever to Cindy. Being held by the bondage, unable to see anything that's going on is even more frustrating and seems even more arousing than before. \n\nShe yelps as he slaps her ass, it stings, but it also arouses her, somehow. She's never been able to understand how pain and pleasure could mix, especially during sex, but she begins to get an inkling as she lays there. It only lasts a few minutes, a few swats before he resumes the sensuous massage.\n\nAs Cindy comes down from yet another orgasm, Steve grabs a pillow and works it under her hips, raising her ass up off the bed. He then maneuvers the vibrator between her legs and into her pussy. The vibrating, there, quickly gets her excited, yet again. \n\nShe then feels Steve begin applying lube to her rear hole. Cindy had never allowed a guy to fuck her there, even though she had fantasized about it. She didn't hate the idea of having her rear penetrated, after all she'd been wearing plugs back there for weeks, but she had never been able to figure out why a guy would want to use a woman's ass hole, when a perfectly good vagina was available.\n\nIn her dreams she had pictured it as a kind of submission game, where the woman becomes just a sexual object, being used for pleasure by a man, but not getting any herself. Giving but not talking on the woman's part.\n\nBut, in her current state she couldn't do much about it, and was excited to give it a try.\n\nWith the vibrator buzzing away in her pussy, she was sure that she'd be able to get off just like Steve would. And it fed her submissive side too!\n\nAs he gently thrust his hard cock into her ass, a little at a time, pulling out and pushing in in a slow rhythm, she felt no pain, at all. Her rear hole had apparently been sufficiently stretched by the plugs in the belt and the latex panties, too.\n\nShe felt Steve hit bottom, LOL, and actually began to enjoy the feelings from both her pussy and her ass, as he began pumping in earnest.\n\nSteve is really loving it. He had only taken a couple of women in the ass before, and he had really enjoyed it when he had. There was something about using a girl's ass for sex that really turned him on. He wasn't exactly sure why, but he sensed that it had something to do with dominance and submission. He knew that he was dominant, not in the hogtie and whip 'em model, but in the taking control of the relationship mode, and he suspected that Cindy was mildly submissive. Submissive enough for his desires.\n\nAs he pumped into her ass he couldn't hold out for long and quickly climaxed, filling her with his cum. \n\nCindy felt him stiffen and let go and that pushed her over the edge. She orgasmed from the vibrations in her pussy and the feelings in her ass, too.\n\nSteve collapsed and laid on her back for quite a while. She enjoyed the warmth of his body and the left-over feelings from the sex.\n\nWhen he did stir, it was to unlock her arms and legs;' roll her over and kiss her repeatedly and fervently. Cindy returned the passion. She had never, ever felt this good. Today's sessions, combined, had been the most mind-blowing experience of her life.\n\nA while later they crawled out of the bed and took a shower, together. Steve lovingly washed her whole body, massaging the faint marks on her wrists and ankles and carefully rubbing soothing creams into her tender pussy and ass.\n\nThey had a simple dinner and a lot of wine before heading for bed. \n\nSteve had one more surprise for Cindy who was truly exhausted from the day's events. She was surprised when he brought out another latex item.\n\n\"More?\" She said, \"I'm absolutely worn out.\"\n\n\"Just a little,\" he replied as he lubed up the two plugs in the panties.\n\nShe was surprised that they were the very same panties that she'd worn the night he'd released her from the belt. She's never told him about wearing them.\n\nShe played the rag doll and allowed him to pull them up her legs and gently insert them into her holes. They did feel good, but she wasn't too interested. Again, her body seemed to appreciate being filled by the plugs, but she was too worn out to be aroused.\n\nThey crawled into bed and Steve kissed her while exploring her latex-covered crotch with his hands, eliciting a couple of moans and squirms from her. They didn't keep that up for long before, exhausted from the day, they fell asleep with little fanfare, comfortable with each other.",
        "During the night, Cindy woke up and realized that the plugs felt really good. She almost woke up Steve for a good screwing, but decided that she still didn't have the energy, just the arousal.\n\nShe rubbed herself for a while before drifting back to sleep.\n\nWhen Steve woke up, he found Cindy laying on her side facing him, with her head propped up on her elbow. \n\n\"Good morning,\" he said, smiling.\n\nShe reached over and kissed him, several times. Lovingly.\n\n\"How about another latex day?\" he asked.\n\nCindy smiled, \"love to.\"\n\nHe got up and wandered into the other bedroom where he had stashed the things from the locker.\n\nAs he left, Cindy ducked into the bathroom. She stripped off the latex panties, used the toilette and washed herself. \n\nBefore she was finished, Steve wandered in.\n\n\"For proper effect, can you make up your eyes, nice and dark and put on some nice, red lipstick before you don the latex?\"\n\nCindy suspected that meant she'd be wearing the hood, again. The thought got her excited. \n\n\"OK\"\n\n\"I'll be ready when you come out,\" he said, turning away.\n\nCindy dug into her make-up kit and outlined her eyes, heavily in black and then added dark, smokey eye shadow, darker in the creases of her eyes. She added false eyelashes and another coat of mascara before putting several thick coats of bright crimson-red lipstick on her lips.\n\nShe also put her hair up into a high pony tail.\n\nWhen she emerged, Steve whistled, \"wow\".\n\nShe smiled and walked over to the bed where he had the latex catsuit laid out. \n\nHe helped her spread baby powder all over her body to make it easier to slide on the material.\n\nWhen she reached for it, Steve stopped her, \"first the opera gloves,\" he said.\n\nCindy knew that by putting them on first, she'd be stuck with them for the duration. \n\nAs she slid them on, she realized that they were different from the ones she'd worn last weekend. These had their thumbs welded to the gloves, next to the index fingers. With them on she wouldn't have 'opposable thumbs'.\n\nUnderstanding the implications, she looked slyly at Steve, who just smiled back, innocently.\n\nHe helped her smooth them up her arms, to the elbow.\n\nThe body suit was next and eventually it was in place, zipped closed and the wrinkles smoothed out. \n\nCindy was already very much aroused, her pussy already dripping.\n\nSteve then presented her with the dildo and the plug, along with a tube of personal lube.\n\nCindy clumsily used both hands to open the tube and spread the lube on her rear and the plug. Again, both hands were needed to insert the thing into her anus.\n\nShe could already see how things were going to go for the rest of the day, with her hands restricted like they are.\n\nCindy didn't need any lube for the dildo, it slid in easily. \n\nSteve zipped up her crotch as soon as the plugs were settled in place. Cindy would never be able to open the zipper in those gloves.\n\nThe tall boots were next. The same ones she wore last week. \n\nSteve laced them up laboriously and snuggly, as she sat on the edge of the bed.\n\nAs she was standing, trying to settle her feet into the boots Steve picked up a severe black leather corset. This was not the same one she wore last time. That one was made of latex, and wasn't as frightening.\n\nSure enough, as soon as it was around her waist Cindy could tell that it was heavily boned and much stiffer than the last one.\n\nSteve worked and worked on the lacing, and Cindy moaned, groaned and panted as it compressed her waist and lungs. \n\nAfter several minutes, he paused so she could get used to the pressure. \n\n\"Take a break, only a little more.\"\n\n\"More?\" she gasped.\n\nShe took the opportunity to massage her waist and stomach, but felt little with the heavy and strictly boned thing wrapped around her.\n\nAfter a few minutes, Steve said, \"OK, arms up,\" and pointed to the nearby door frame.\n\nCindy stretched her arms up, over her head and grabbed the trim over the doorway.\n\nSteve then restarted on the laces, pulling them tighter and tighter.\n\nCindy went back to groaning and gasping.\n\nBefore long she was protesting in agony, \"please stop, please.\"\n\nSteve gave one more tug, \"OK, you're there,\" he said, and tied off the laces. He pulled a flap over them, sealing them closed. Through her agony, Cindy heard the snick of a lock.\n\n\"Locked?\" she panted.\n\n\"Of course. You're in until I let you out.\"\n\nThe only thing left was the hood. \n\nCindy was ready for it, and even looking forward to it. Her latex fantasies had always been important to her, and she had loved their last session. Of course, last time she had her hands and the corset was not as severe.\n\nAs he approached with the same hood as last time, she begged, \"please, no gag this time.\"\n\nSteve smiled, \"no we won't use that gag this time.\"\n\nHearing him, and the way he phrased his reply, Cindy was worried that he had something else in mind. Something as evil as the other one. It sent another shiver down her stiff spine.\n\nSteve worked the latex hood over her head, arranged her hair, and closed the zipper down the back and to the bottom of the stiff collar before locking it. \n\nCindy knew that she was absolutely locked into the latex covering until Steve decided to let her out. And she was thrilled about it.\n\nFinished dressing her, Steve took a tube of polish and rubbed it all over her lovely black body from top to bottom, avoiding the corset and her eyes.\n\nHe spent a few minutes with her hair brush, teasing out and arranging her pretty blond hair into a proper mane, before he escorted her over to the full-length mirror, to show her how good she looked.\n\nCindy almost lost it, just looking at herself. She was the perfect picture of the latex goddess she had fantasized about, and often masturbated too over the years. \n\nHer waist was tiny and practically immobile. Her breasts were pushed up and looked huge in comparison to her middle, and they moved up and down as she panted. Her hips also looked wider.\n\nThe time she spent on her makeup also added to her look. Her eyes were as sexy as her body and her red lips were framed and looked full and luscious.\n\nShe could see Steve standing behind her smiling, widely. Shifting her view, she could see his hand rubbing at his erection.\n\nCindy turned and hugged him, tightly. He responded, wrapping his arms around her stiff body, crushing her latex breasts to his chest. \n\n\"You look so fantastic, I'm afraid I'm going to cum in my pants,\" he said.\n\n\"I look like the latex slut I've always dreamed of, and I feel like it too,\" she replied, \"now that you have me like this, now what?\"\n\n\"Well, we have all day and all night. You're not getting out of that glorious outfit until the morning. So for now, let's have breakfast.\"\n\nCindy was hoping for sex, but hungry, she decided that she'd settle for something to eat, although she knew that she wouldn't be able to each much, with the corset squeezing her so.\n\nIn the kitchen she found that she couldn't sit at the table, she couldn't bend enough to sit on the chair. She wound up perched on the edge of one of the bar stools at the counter island. \n\nSteve just smirked at her struggles.\n\nShe watched and they chatted as he prepared eggs, bacon & toast.\n\nShe sipped at a cup of coffee. Cradling the cup in her two, thumb-less hands.\n\nAll the while she is so turned on by her outfit and her predicament that she is almost losing her mind.\n\nAs with any of her fetishes she couldn't understand why it turned her on so, but it certainly did, and she was happy to let the feelings control her. After the days in the chastity belt, the latex was the perfect desert.\n\nShe didn't know what Steve had in mind for the rest of the day, but she couldn't wait to get to the phase where she got fully and totally fucked. Over and over.\n\nIt's a struggle for Cindy to eat with no thumbs. She found it challenging and frustrating. Both of them found it arousing. \n\nSteve watched her every move, loving the way she looked in the latex, as much as he loved her struggles. The idea that she was totally under his control also drove him crazy with lust.\n\nHe wanted to take her to bed immediately after breakfast, but he decided that he wanted to play with her for a while first.\n\nWhen they were finished, Steve walked her out to his garage and loaded her into his car. She was scared to death, afraid of going out in public in her latex skin, her head in the hood. She had no idea where they were going and Steve wasn't saying.\n\nSteve had to do her seatbelt for her as without the use of her thumbs she couldn't line up the buckle.\n\nShe was relieved when she realized that the tinting on the car's windows would make it difficult for anyone to see her. She hadn't really noticed it before, but it was important to her now.\n\nAs Steve drove though the city streets, Cindy began to relax a bit. Although she still had no idea where they were going, she at least didn't have to worry too much about being seen while they drove along.\n\nShe immediately got frightened again when Steve pulled into a Starbucks drive-thru. He ordered two coffees over the speaker and then pulled up to the window to pay and get their drinks. As he rolled down his window, he said, \"sit as you are, please.\"\n\nCindy knew what was going to happen, but she was powerless to do anything about it. \n\nAs soon as his window opened and the server looked into the car, Cindy heard a gasp, followed by a giggle. She immediately began blushing in embarrassment, although no one could see the color of her cheeks.\n\nThe girl said, \"That will be eight, twenty-three, please.\" \n\nAs Steve counted out the cash, the girl continued, \"That's a lovely companion you have there, sir. I love her outfit; she looks like the perfect rubber slut.\" She giggled some more, \"I'll be right back with your drinks.\"\n\nWith the girl gone, Steve said, \"don't worry, she has no idea who you are. With the mask you're anonymous to anyone and everyone who sees you. And don't' tell me that one of your fantasies didn't involve exhibitionism.\"\n\nCindy realized he was right, on both counts, no one would ever recognize her, and she had dreamed of exposing herself in public, many times in her past.\n\nWhen the girl came back, she had another worker with her. It was a young guy. He stared and chuckled as they passed the cups through the windows.\n\n\"I bet that bitch fucks like a race horse. Wish I could get a piece of that,\" he yelled.\n\nCindy was horrified, and humiliated, and somehow aroused too.\n\nSteve responded, laughing, \"in your dreams, kids.\" Before rolling his window back up and driving away.\n\n\"Well that will certainly make their day, and I bet you'll be famous around there for weeks to come.\"\n\nCindy just sat in her seat and carefully sipped her coffee, having to hold the cup with both hands.\n\nAs they drove away, she marveled at her reaction to the little show. The encounter had turned her on. She had actually enjoyed it when those two had admired her sexy body and lusted after her. Perhaps she was a 'rubber slut', like the girl had said.\n\nCindy took another sip of her coffee and tried to relax.\n\nSteve drove for an hour, leaving the city behind, until he came to a small side road, where he turned off.\n\nAs the car turned, Cindy saw a sign saying something about a county park, but she didn't get a chance to read it any further.\n\nThey traveled about a mile back into the woods, along a deserted road. The trees were mostly bare as it was now late into fall. There was no one about, that she could see. Not even any cars on the deserted road.\n\nAs they pulled into a small, empty parking lot, Steve explained. \"This is a nice little park, well maintained by the county, but not well known. I discovered it a couple of years ago. It's great for walking and communing with nature. I figured that at this time of year it would be deserted.\"\n\nAfter parking in an empty slot, he got out and walked around to Cindy's door. He had to unlatch her seat belt before he could help her out. He grabbed a blanket from the back seat before he shut the door and locked the car.\n\nOf course, Cindy was absolutely terrified. Fully encased in sexy latex, nothing else, her body on full display and standing out in the open, for anyone to see.\n\n\"Please Steve, take me home,\" she begged.\n\n\"Oh no Cindy. We're going for a nice walk in the forest and if we're lucky we'll find a nice spot to lay out for a bit.\"\n\nHe grabbed her by the arm and began leading her slowly down a black-topped pathway.\n\n\"See they've even surfaced the walkway, so you can step easily in your heels.\"\n\nCindy was moving carefully and scanning fretfully about to see if there was anyone else around.\n\n\"Relax honey, I doubt if we'll run into anyone, and even if there are, you're completely covered and, anonymous, remember?\"\n\nThey continued to walk along the uneven path for quite a while. Slowly Cindy began to relax, and even enjoy the fresh air, tinted with the smell of the latex tubes sticking up her nose. She even started to get aroused again, parading around as she was started to seem sexy and slightly dangerous.\n\nEventually they came to a little side trail and, warning her to watch her step, Steve led her off into a copse of evergreens. Cindy stumbled a bit as her spike heels dug into the gravel of the path. Steve helped support her.\n\nJust inside the trees they came to a tiny meadow with the remains of the summer's grass, sprinkled with pine needles, it was a pretty little spot. \n\nSteve stopped and spread the blanket and then helped her get down onto the blanket. It was a struggle for her as she couldn't bend her knees very well in the boots and the stiff leather corset prevented her from twisting or bending much at the waist. She wound up laying on her back, propped up on her elbows.\n\nSteve wasted no time in getting down onto his knees between her outstretched legs. There, he undid the zipper on her crotch and pulled out her dildo, slipping it into a baggie he had carried in his pocket. \n\nHe then wasted no time in bending down and beginning to kiss and lick her naked pussy.\n\nCindy sighed and laid back flat on the soft ground, staring up into the trees and sky.\n\nThe longer he licked, the more relaxed she became, until she was focused solely on that point of her body. She started to moan and thrash a bit, feeling better and better. Before long she felt her orgasm approaching and she drew up her legs and pushed her heels into the ground, as she reached down and clasped her latex covered hands onto the back of Steve's head. She screamed quietly as she hit her climax, and heard a bark in response!\n\nA minute later a big Golden Retriever was in her face, and she screamed for real, in shock.\n\nSteve was surprised by the dog too, and turning he saw a woman, obviously the mutt's owner, standing among the trees staring at them. \n\nAs he sat back onto his haunches, Cindy pushed herself up on her elbows and the dog began licking her face and mouth. But only for a second, because as soon as he got a whiff of her crotch, he moved to bury his head in her aroused and wet sex.\n\nCindy and Steve both grabbed and tried pushing him away, but he was adamant and refused to leave.\n\nThe woman in the trees immediately cried out, \"Sammy, get over here. Come Sammy, right this minute,\" as she ran forward toward them.\n\nWhen she was only a few feet away she stopped suddenly upon seeing the woman in latex laying underneath Steve and Sammy.\n\nHer hand went to her mouth and she turned red in embarrassment.\n\nNeither Steve, nor the woman could see how red Cindy was, under her hood.\n\nAfter a minute, the woman took another step forward, and never taking her eyes off of Cindy, grabbed Sammy by the collar, and dragged him away. Not before she had gotten a good look at Cindy's entire latex-covered body and her exposed and glistening pussy, Cindy noticed, distraught.\n\nThe woman apologized profusely as she dragged the dog away. When she finally got Sammy's leash on, she turned back toward the couple and with a self-conscious smile, called back, \"beautiful outfit, enjoy yourself,\" before disappearing back into the trees. \n\nSteve turned back to Cindy with a goofy grin on his face.\n\nShe looked up and sighed, before she started giggling. Steve started giggling too, and before long they were both laughing out loud. They laughed like that for what seemed like several minutes.\n\nAs they started to calm down, Steve, still chuckling, said, \"now that's a story we won't ever be able to tell our kids about.\" \n\nThe comment started them both laughing together again.\n\nAs she laughed, what he had just said struck home. He actually said 'our kids'. My God, he must really be getting serious about their relationship. The realization seemed good and right to her, and made her very happy.\n\nAs their laughter wound down, Steve mumbled, \"I think we're done,\" and started to open the bag with Cindy's dildo.\n\nShe looked at him craftily, \"oh no we're not mister, I want more. I want that cock of yours inside me, right now.\"\n\nSurprised and thrilled, Steve's cock started rapidly coming to life. He opened his pants and it sprang out almost fully ready for action. \n\nCindy laid back as he shifted to lay down on top of her and plug into her still wet pussy.\n\nAs soon as he was in, he began thrusting and their pent-up feelings quickly exploded into a perfectly timed, joint orgasm. Both of them sighed in contentment.\n\nThey laid there for a few minutes, not moving, as they enjoyed the afterglow. As soon as Steve rolled off of her, Cindy started giggling again.\n\n\"What's so funny,\" Steve asked.\n\n\"Perhaps we should have invited them to join us for a foursome,\" Cindy said before breaking into a fit of laughter. Steve started giggling, \"I'm not sure about you but my fetishes don't include animals,\" before breaking into laughter, himself.\n\nCindy couldn't let it go, \"OK, a threesome then, the woman looked kind of hot.\"\n\nTheir laughter continued for many miutes.\n\nEventually they calmed down, and Steve reinserted Cindy's dildo before zipping her up. He closed up his pants as he stood.\n\nHe had to help her stand and as she did, she felt the squishy wetness insider her pussy, and it turned her on again.\n\nSteve grabbed the blanket and they walked arm in arm back down the trails to his car.\n\nIn a happy mood they headed back into town. Cindy no longer cared about being out in public in her latex. She focused on the anonymity of the situation, content that to anyone who saw her she was just an unknown woman in latex.\n\nWhen they got back to Steve's house, she submitted to a thorough cleaning, with Steve using damp towels to clean the grass, leaves and dirt off of her body. Her boots had suffered the most, with the spike heels being covered in dirt and mud.\n\nOnce she was spotless, Steve went over her one more time with the polish, leaving her shiny and sexy once again.\n\nHe had no intention of letting her out of her latex outfit, and truth be told, Cindy didn't really want out. She did love her latex fetish.\n\nThey ate and relaxed in front of the TV for several hours before Steve said, \"I think you owe me one.\"\n\n\"One what?\" \n\n\"Well I ate your wonderful pussy this morning, and so did Sammy, for that matter.\"\n\nWhen they stopped laughing, he continued, \"but you haven't yet reciprocated.\"\n\nShe looked at him devilishly for a minute, \"well I don't know. I didn't realize this was a tit-for-tat relationship, and my orgasm was cut off when your male counterpart, barged in.\"\n\n\"My male counterpart? Are you implying that I'm a dog?\"\n\n\"Oh no, you're a cuddly puppy. My cuddly puppy. But I'm still not sure I owe you, and my mouth is tired from all of that laughing,\" she said with a smile.\n\n\"Humph,\" he said, as he got up off the couch and walked off, leaving her wondering what was going on.",
        "He came back a few minutes later with something hidden behind his back.\n\nSitting down next to her, he ordered, \"open up.\"\n\nCindy didn't like where this was going. \"Oh no, you promised, no gag.\"\n\n\"This isn't that gag, now open up please.\"\n\nSkeptically, but still willing to play along she opened her mouth. \n\n\"Wider.\"\n\nShe sighed and opened her mouth as wide as the latex allowed.\n\nWith that, he stuffed something red and rubbery into her mouth, and reached around behind her head to close the straps that held it in place. \n\nWhen Cindy tried to close her mouth, she couldn't. The thing held her wide open, covering her lips and teeth but was otherwise hollow. She tried to push it out with her tongue, but the straps held it firmly in place.\n\n\"Wa his his?\" came out a she tried to ask what he had done to her.\n\nSteve laughed and helped her to her feet. He walked her over to a wall mirror so she could see herself.\n\nShe was stunned to see that he had strapped some sort of silicone ring gag in her mouth that looked like a pair of bright red lips that formed a big 'O'.\n\nShe looked like she was a sex doll ready to give a guy a big blow job.\n\nShe tried to cuss him out, but the sounds she made sounded silly, even to her.\n\nShe was also dismayed when she realized that, unable to close her mouth, she was starting to drool like some slobbering mutt.\n\n\"Come,\" Steve said, as he grabbed her from behind and practically carried her back to the couch.\n\nHe sat her down, on its edge and pushed her back into a leaning position before straddling her on his knees and opening his pants. He then simply plugged his already straining cock into the opening provided. \n\nCindy was overwhelmed by the whole thing. In part she was upset by being used in this fashion. But she also seemed to be turned on and her pussy was leaking from the very same thing - having her mouth used with no option in the matter, by the man who she was falling in love with.\n\nAs Steve started gently thrusting in and out, she tentatively put her tongue to work licking and tickling the head of his cock. \n\nHe moaned, and picked up speed. A couple of times he bumped into the back of her throat and she had to swallow to stop from gaging. \n\nShe reached up and grabbed his hips to exert some control and her fingertips poked into his ass as he moved.\n\nIt wasn't too long before he exploded in her mouth and she did her best to swallow it all.\n\nWhen he pulled out though, a lot of his cum, mixed with her saliva dribbled out onto her chin and chest.\n\nSteve backed away and ran off to get a cloth to clean her up, leaving her with her mouth still locked open by the silly sex gag.\n\nWhen he returned, she pointed and grunted. He laughed and reached around her head to unlock the thing. When he pulled it out, she gasped, and a bunch more fluid came out. Making a bigger mess.\n\nAs Cindy worked the pain out of her sore jaws, he proceeded to clean up all of the drool.\n\nWhen he was done, he gave her a big kiss and whispered, \"I love you.\" \n\nThen without another word, he started the process of removing Cindy's latex skin. He unlocked her hood first, and stripped it off of her sweaty head. \n\nWhile he was unlacing her boots, Cindy rubbed her face and head and said, \"I'm not sure I like that gag either.\"\n\n\"I'm sorry, are you sure? Your tongue added a lot to my experience and I sure enjoyed it.\"\n\n\"That's why I'm not sure. I do like sucking and licking your cock, but being treated like a sex object, a hole in which you can insert your cock to get off whenever you want. Is kind of hard to accept.\"\n\nShe paused for a few minutes, thinking, before she continued, \"although I must admit, I have fantasized about that very thing, being a sex object for my man.\"\n\nSteve paused in his task, unlacing her boot, \"Cindy, I love you and I love playing fetish games with you. If you don't like something tell me, and I'll black list it.\"\n\nCindy smiled shyly, \"I love you too, and I will tell you when something feels too wrong, but let's not get hasty. Don't black list that gag, quite yet.\"\n\nSteve smiled, \"deal,\" and kissed her before going back to stripping her.\n\nOnce the last piece of latex, the gloves were off, they ran happily through the master bedroom and into the shower. After a lot of washing, giggling, and touchy-feelie they dried off and crawled right into bed, as they had to get up early in the morning so he could drive her home in time for work.\n\nThey cuddled and kissed for quite a while before settling down into each other's arms, warm, and content.\n\nJust as she was starting to doze off, satiated and exhausted, Steve interrupted her. \n\n\"You'll wear the belt next week, again, won't you?\"\n\n\"Oh God,\" she groans, \"If I must.\" \n\n\"You must.\"\n\nEven though she's reluctant, Cindy's turned on by the thought. Is this the way my life is going to be from now on? Am I going to be in the belt constantly, day-in and day-out, forever with this man?\n\nShe falls asleep with that thought the focus of her dreams.\n\nEarly the next morning, they took a quick shower, he locks her back into the belt and bra and they threw on their clothes.\n\nSteve then drove her home and dropped her off, to start another week in her chastity belt.\n\nTo be continued...\n\nFrom the Author: Please comment on my stories. All thoughts, positive or negative are welcome. If negative, please extend the courtesy of providing constructive criticism. Thanks."
    ],
    "authorname": "ChangeYourPassword",
    "tags": [
        "latex",
        "mf",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-locker-pt-03"
}