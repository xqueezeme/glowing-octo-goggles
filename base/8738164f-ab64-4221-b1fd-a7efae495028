{
    "title": "Pool Boy Ch. 39",
    "pages": [
        "Alexis had left for our condo in the city a day earlier than originally planned. I had assumed that a 'playtime' with Rachel was superseded by the Orgy this past weekend. My assumption was incorrect and Rachel and then Mitch showed up for 'playtime' as scheduled. They were disappointed that Alexis was already gone. I did my best to entertain them. After they left, I fell asleep on the bed with my clothes on. I had a fitful night's sleep. I kept waking up reaching for Alexis. I finally got up and took my clothes off and crawled under the covers, but I started dreaming of Alexis. It was more of a nightmare really. It started out with Alexis grinning and then laughing. I love her laugh. It's like the spontaneous laugh of Julia Roberts in the movie, 'Pretty Woman' when Richard Gere snapped the hinged jewelry box shut just as she reached to touch the necklace. Then my dream turned to a nightmare as I relived the terrified look on Alexis' face when the rapist had the knife to her throat. In my dream, I leaped for the knife as I had done in real-life but Alexis and the knife were going away from me as fast as I was falling. The knife was always just out of reach. The vision in my nightmare went on a loop. I snapped awake and sprang to a sitting position and realized I was yelling \"NOOO.\" \n\nI got out of bed trying to clear the dream from my mind hoping I wouldn't go back to it when I went back to sleep. I walked around the 'palace'. I came back to the bedroom and walked into Alexis' huge walk-in closet. I could smell her. I sat down at her dressing table looking back at her hanging clothes in the darkness. A pleasant memory replaced the ghoulish one and I smiled to myself. I went back to bed concentrating on the pleasant memory and fell back asleep.\n\nWhen the alarm went off at five I groaned and rubbed my eyes. I should have showered last night. I reeked of sex. I should have showered that morning, but I didn't. I still reeked of sex. Alexis had been gone a day and already I've turned into a slob. I made myself a cup of coffee and sat down bare-assed in a breakfast nook chair. I didn't even bother looking for something to eat; I already knew there was nothing. I was hungry, so I dressed, grabbed my previously packed suitcase and garment bag containing the suit I bought in Las Vegas and headed for the van. I had this morning's practice and then I was heading home.\n\nI stopped at my favorite fast-food restaurant for the full breakfast. Dean was there with Josie and they waved me over with my tray. Like me, Dean was heading out right from practice. He was going home with Josie for Christmas day. He was as nervous about meeting Josie's parents as Josie was excited. He had to make his way back though to leave for the bowl game. Josie did too as a member of the SH5. They were flying with the team and Cheerleaders. Coach Hannah still wasn't happy about the SH5 going but she was keeping a very low profile these days.\n\nPractice was more fun today as we walked through numerous offensive plays that our coaching staff had schemed out. I was pleased that I was included in a few of them. I was a better defensive player but I liked playing offense whenever I got the chance. After practice I was so excited about getting on the road that I didn't take a shower. I yelled out \"Merry Christmas\" to my teammates as I headed for the locker room door. A chorus of \"Merry Christmas, Meat\" came back.\n\nI was careful about speeding but thoughts of Alexis were pushing me faster and faster. At one point I looked down at the speedometer and I was going ninety. I took my foot off the accelerator and coasted down to seventy and continued at that speed. \n\nWhen I pulled into the parking garage and pulled in to one of our two assigned parking spots, I noticed Olivia's Mercedes parked several spots away with Sophia's Mercedes parked right beside it. I jumped out to the ground and slammed my door. I didn't waste a second getting my bags out. I headed directly for the elevator. I got my condo keys out of my pocket on the way up and when the elevator door opened I had the key ready to open the door. \n\nI got the key in the lock but I didn't have a chance to turn the knob before it flew open. Alexis flew into my arms. She threw her arms around my neck and wrapped her legs around my waist. She was kissing me everywhere she could reach. I returned her passion as I carried her just like that into the foyer. I found the edge of the door and slammed it behind me. I looked over her shoulder and saw Olivia and Sophia standing in the living room. They were grinning broadly at our display of passion.\n\nAlexis pulled back from my lips and sniffed the air. She said, \"Good God you stink. You're on your own for a couple days and you turn into a caveman. Go take a shower.\" She tried to get down but I wouldn't let her go. Her legs were dangling trying to reach the floor. I reached around her and scooped her up in my arms. Her arms went back around my neck. Without a single word to our guests, I turned toward the hallway to our master bedroom, which had been Dee's bedroom. I searched for Alexis' lips and resumed our passionate embrace. She responded in kind. I hip-checked the bedroom door open and carried Alexis through the massive room to the bathroom. I nudged open the glass shower door and while still holding Alexis in my arms leaned in and turned on the water.\n\nI let Alexis drop her legs and while still fully clothed I pushed her up against the tile wall and continued our passionate kissing and fondling. In spite of the stench radiating from my body she was getting as hot as I was. She reached down and unzipped my pants and pulled my raging hard cock out into her hand. I picked her up again and moved, fully clothed, under the shower head. Alexis squealed as she looked up at the cascading water. That gave me easy access to her neck and I went in for the 'kill'. In seconds she was so horny that she yanked her shirt open and the buttons seemed to fly off in slow-motion in every direction exposing her braless tits. Her chest was heaving as she gasped air into her lungs. I bent down and sucked each one of her tits into my mouth and then flicked my tongue on each nipple. \n\nI pulled my head back and whispered, \"God, I missed you,\" as I resumed my attack on her neck.\n\nAlexis groaned hard and whispered, \"I can see that.\" She wheezed out a moan as I kissed my way around her ear and flicked my tongue there. She humped her hips into me like she was sending a message, \"Hey don't forget about me.\"\n\nI put her down and ripped off her soaking wet shirt and dropped to my knees and unzipped her jeans and pulled them down. It was a struggle getting her out of her wet skinny-jeans. If it took any longer than it did I was going to rip them off her. I bent low and pushed my face into her crotch and licked my tongue across her clitoris. She groaned and arched her back as she looked directly up into the water. I pulled back and looked up at her. She had a wild-eyed look of passion on her face. She grabbed the neck of my shirt and tried to pull me up so she could get her hands back on my cock. I resumed my attack on her tits as I stood back up and Alexis grabbed at my shirts and ripped it open. Buttons pinged off the tile walls. She leaned forward and kissed each of my nipples, which were as hard as hers. She was seething air through her clenched teeth. She had my cock in both hands like she was shaking my hand and was furiously stroking it.\n\nI'd had enough of the preliminaries and I picked her up by her waist and set her down on the end of my granite hard cock. She made a quick adjustment with her hips and then slid slowly down to my balls. Her eyes bugged and her breath caught in her throat as she opened her mouth to let out a silent scream. Then her lungs burst every ounce of air out and she gasped as she increased her attack on my lips with hers. \n\nI started rocking my hips to drive my cock in and out of her pussy. She was rocking hers to get as much of my cock as she could. She broke away from my lips and gasped a breath of air in and pulled her face into my neck as we thrust our hips into each other and then rocked back to repeat.\n\nOnce we started, neither of us said a word. There wasn't enough air to try. I had her pinned against the tile wall with the water falling directly on our heads. I was pummeling her pussy with my cock and she groaned hard as she humped back at me using the wall as leverage. She pulled her head back from my neck and looked up at me. Her mouth had formed an \"O\" and water was spraying down into it. She spit the water out as she groaned between gasps, \"Fuck, Baby. I'm cumming. Oh Jesus am I ever cumming.\" She humped up on my cock and I felt her muscles contract and then release as her pussy started clenching hard on my cock.\n\nI pulled her back from the tile wall and moved us down to the floor under the showerhead. She knew the drill. I found my position kneeling as I sat back on my heels. Alexis was hooked on my cock like a coat on a coat-hook. She continued to pulse through her orgasm and was groaning non-stop now. I had total control as I pushed and pulled on her hips sliding her pussy on and off my cock. Then I felt my balls boil over and cum rocketed up my cock into her pussy. She screamed at the sudden extra hardness of my cock and the power of my ejaculation. She dropped her head down on my shoulder and kept muttering, \"Oh Fuck. Oh Fuck. Oh Fuck.\"\n\nThe combined effect of my ejaculation and her clenches was squishing cum out of her pussy and down my shaft to my balls and finally the tile floor. When we were done, we didn't move a muscle except for our heaving chests. I gently kissed her lips, which was quite a contrast from the savage attacks we had shared moments earlier. \n\nWhen she could talk, Alexis said, \"Holy Shit Baby. This 'I-missed-you' sex is incredible. Whew.\" I felt her pussy clench on my cock and her shoulders surged back taking her face away from mine. She said, \"Fuck. Tremors keep rolling through me.\"\n\nI noticed movement outside the shower. Olivia and Sophia were standing in the doorway from the bedroom to the bathroom. When they saw that their presence was known, Olivia said loudly, \"Mother-fucker; that was so hot.\" She was waving her hand at her face like a fan. Sophia put her hand on Olivia's shoulder and whispered something to her. We couldn't hear over the sound of the shower spray. Olivia said loudly, \"We'll wait for you in the living room.\" They turned and left. \n\nAlexis softly pressed her lips to mine and said, \"I love you Baby.\" I kissed her back. My cock was softening inside Alexis she humped herself closer to me to delay the inevitable. A minute later it fell out of her pussy to dangle down between my thighs and she frowned and pouted her lower lip.\n\nI kissed her lower lip and said, \"I love you more than I ever thought possible.\" Her frown morphed into a smile. Her eyes sparkled and she kissed me firmly and passionately. The water was getting cooler and we had to move. She slid off my lap and I stood up. I pulled her up hard into my arms.\n\nShe kissed me again and said, \"You still need a shower.\" I laughed and grabbed the shower gel and quickly lathered myself from head to toes. Alexis worked on her favorite area while I washed the rest of me. I was trying to ignore her hands jerking on my cock but my cock had other ideas and was back up again. I rinsed myself off in even colder water and turned the shower off. We toweled off as we stood in the shower. I maneuvered my way around to stand behind her as I used my towel to cup her tits in the terry-cloth material and pushed my hard cock against the slope of her back to her perfect butt-cheeks. She giggled as she felt it flexing against her.\n\nAlexis dried me off spending quite a while drying my cock and balls. She stepped out of the shower and grabbed her robe and pulled it on. She wrapped a towel around her blonde hair. She took me by the cock and led me from the bathroom into the bedroom. All I had to wear was the stinky clothes I came in wearing. My bags were still in the van. I resisted her pull trying to go back to get my robe off the back of the bathroom door. Alexis pulled harder and said, \"You won't need that.\"\n\nI had no idea what she was going to do with me but my heart began to pound as she towed me down the hall to the living room. She pulled me over to the sofa and pushed me down. She released my cock and said, \"Ladies; he's all yours.\" She looked at me and said, \"I'll get dressed and go get your bags from the van.\" I didn't bring much as we would only be here a day and a half before we had to go back to get ready for the trip to the Bowl game in California. Neither of us had ever been there.\n\nAlexis headed back to the bedroom leaving Olivia and Sophia basically drooling over my bouncing cock. I checked them out too. They were both dressed in very expensive and sexy outfits. Olivia sat in a chair across from me. Her right leg was draped over her left thigh. She was bouncing her high heeled foot. Sophia sat in another chair across from me with her legs spread wide enough for me to see that she wasn't wearing any panties. That made my cock jump and both women giggled at the movement.\n\nThey were being coy just to tease me. I decided to tease them back. I sat back in the sofa and let my back push into the cushion. I draped my arms along the back of the sofa and lifted my right ankle to my left knee. My stiff cock was pointing at the ceiling. I manually flexed it several times and Olivia and Sophia giggled every time.\n\nOlivia was keeping her cool as she continued to bounce her foot and look at my face. Sophia was not. She was staring at my cock bouncing in my lap. She started biting on her lower lip and her breathing became ragged. She tore her eyes away and looked at Olivia as if she was the official starter. No one said a word. It was like a kid's game where the first one to talk lost. I knew I couldn't lose so I nonchalantly asked, \"So, how is your Penthouse working out. I can't wait to see it. Do you want to go now?\" Olivia smiled; probably at the vision of me riding up to the Penthouse in the elevator in the nude. Sophia looked back at Olivia still biting her lip.\n\nI could see that Sophia was getting frantic. She burst out of her chair and crawled across the floor and pulled my right leg to the floor and set her tits on my thighs as she grabbed my bouncing cock and stretched her lips over the crown and pushed her lips down my shaft. She stopped and adjusted and then took half my cock before she gagged. She wrapped her hand around my shaft at the point that she had gagged and frantically began sucking my cock. She used one hand to jerk my shaft below her gag point. I groaned hard and muttered, \"Fuck Sophia. You suck a mean cock.\" She batted her eyelashes and grinned around my cock without even slowing down. She was looked right into my eyes to see my reactions and she grinned with every groan I made.\n\nOlivia's foot continued to bounce. She hadn't moved a muscle other than that one foot and a little smile. I was trying to figure out what she was thinking. This was odd behavior for her. Sophia pulled off my cock and turned around on her hands and knees and wagged her ass at me. One hand came up between her legs and her fingers dragged through her pussy. \n\nI got the message and I leaned forward and slid off the sofa to my knees. Sophia was looking at Olivia and she was expecting my cock but she got my tongue instead. She shrieked and pulled forward as she turned to look back at me. I curled the edge of my tongue into a spear and rimmed her anus. She shrieked again. Then I dragged my tongue down through her pussy and flicked the tip on her clitoris. She jumped and then said, \"Fuck me Hunter. I don't care where; just fuck me.\"\n\nI moved my hips up close to her ass and pushed me cock into her pussy. She dropped her forehead to the floor and looked between her dangling tits to watch my balls bounce off her pubis and then withdraw. She groaned, \"Oh my gaawwdd. I love your cock.\" I pumped my hips at a steady pace for several minutes. I looked over at Olivia and her cool demeanor was starting to crumble. She was biting her lower lip as her huge tits were lifting and falling as she was taking in deep breathes. Her fingertips, gripping the arms of the chair were turning white. Her foot wasn't bouncing anymore.\n\nI figured that Olivia had bet the farm that since I had just ejaculated in the shower, Sophia couldn't get me off before she had her own orgasm. Then Olivia could finish me off while Sophia watched. It was a reasonable bet, except now she wasn't so sure it was a winning bet. It wasn't like I would go soft and Olivia wouldn't get anything. With a naked Olivia around I could cum a dozen times and still be able to get my cock up for her. She was that stunningly beautiful.\n\nI continued fucking Sophia at different paces and with long and short penetrations. I could feel that familiar feeling in my balls. I could easily cum when Sophia's orgasm grabbed her as evidenced by Sophia's muscle contractions. I started my short-stroke piston-fuck and she pulled her head up and screamed as her climax crashed over her. Her pussy was grabbing my cock with surprising pressure. I pushed my climax back and reduced my pace to slow, long, full-length strokes. I kept it going like that until her quaking pussy stopped pulsing. \n\nI looked over at Olivia. She had relaxed considerably. She had won the bet and when Sophia pulled forward off my cock and collapsed to the floor gasping for air, Olivia stood up. She undressed like she was in a burlesque show. Only the music was missing. When she was completely naked, except for her heels, she came over and pulled me up to my feet. She pushed me back to the sofa and I sat down. She pushed her body between my knees and turned around and bent over at the waist pushing her ass into my face. I rimmed her anus like I did Sophia and then I dragged my broad tongue down the length of her pussy. She lurched hard from the touch. She arched her back as I approached her clitoris and she flinched hard when I touched it.\n\nOlivia bent her knees and dropped her ass toward my lap. She looked down between her legs and reached down and guided my cock to her pussy as she dropped lower. Once the crown of my cock was in her pussy, she released her hand and dropped the remaining distance. Her face scrunched into a mask that could have been either pain or pleasure. She put her hands back on my chest and lifted each leg, one at a time up over my knees and planted her heels in the cushions on either side of me. She braced her locked elbows to create a pivot point as she fucked my cock by lifting her pussy up and down my shaft with her legs. She pushed her torso to sit up straight and balanced on her feet and ran one hand down over her pubic mound and laid her fingers along my shaft so she could feel it move in and out of her. She shook her head vigorously and groaned.\n\nOlivia was getting tired so I put my hands under her butt-cheeks to help hold her up. I couldn't resist the opportunity to slide one thumb over to her anus and stick it into her. She lurched from the sudden attack and pulled her pussy off my cock and it snapped forward. She frantically grabbed for it like it was her life-line and stuffed the head back in. She groaned hard as she sank all the way down again. She pulled her hand back up my shaft and started fingering her clitoris. She was very careful with it because of the sensitivity. \n\nSophia had recovered from her orgasm and she noticed that Alexis was sitting silently in a chair at the other end of the sofa. She had one leg over an arm of the chair and she was strumming her fingers in her pussy. When Sophia looked over at her and smiled it got my attention and turned my head to look too. Alexis' eyes were closed. Her mouth hung open. She had one hand up her shirt on her tits. I had no idea how long she had been sitting there. I could feel my orgasm approaching slowly.",
        "Sophia got up on her hands and knee and crawled over between my knees. Olivia saw her coming and grinned at her as she was in a constant moan of \"AHHHHHH's.\" Sophia pushed her face into Olivia's sex. From there she had a number of targets and she started with my balls. She scooped one testicle with her tongue and guided it into her mouth and tugged on it. Olivia's pussy was sliding down my shaft right onto the bridge of Sophia's nose right on her clitoris. Olivia groaned with each trip down my shaft. Sophia released my testicle and then went after target number two. She lapped her broad tongue along my shaft, following Olivia' pussy as she pushed herself up. I groaned hard and my orgasm crept a little closer. Sophia's third target was Olivia's clitoris and she got her tongue on that as Olivia was dropping down my shaft as Sophia was lapping her way up.\n\nThat drove Olivia over the top and she let out a scream, \"FFFFUUUUCCKKKKKK. I'MM CUMMINNGGG.\" She couldn't drive her legs anymore and she dropped hard on my shaft. I wanted to keep stimulation on her pussy so I started rocking my hips under her. Sophia dragged her tongue out of Olivia's pussy and down my shaft and sucked the other testicle into her mouth and that was it for me. I groaned as every muscle in my body from my toes to my face cramped and released hard as I fired eight or ten long powerful ropes of cum into Olivia's spasming pussy. She was screaming. I was grunting and groaning. I grabbed Olivia' huge tits and pulled her back against my chest so she wouldn't fall forward and hurt herself. \n\nAfter a struggle, Olivia was able to extract her high heels from the cushions and extend her legs down over the top of mine. Her hand was in her sex drilling her fingers into her pussy. Cum was leaking past her fingers and Sophia began lapping up whatever she could get. Alexis appeared out of nowhere with a towel and dropped it on the sofa beside me. Then she knelt down on the sofa and put her lips to my ear and whispered, \"Nice job Baby. They both needed that. They've missed you.\"\n\nI took the towel and pushed it between Olivia's thighs. She pulled her hand out and stuffed it in deeper. Olivia let out a long, contented sigh as she placed her hands on mine as I gently clutched her 'fun bags' like a kitten knitting their claws into a soft pillow. She snuggled her head into my neck and turned to kiss me on the cheek.\n\nMy cock was softening quickly and Sophia finally just pulled the rest out of Olivia's pussy and sucked it into her mouth and cleaned it with her tongue. She then rubbed it all over her face. Alexis sat there beside me on the sofa and watched. \n\nSophia released my cock and let it hang down over my balls. She stood up and moved back to her chair. Olivia stuffed the towel deeper in her sex and leaned forward forcing my hands off her tits. She spread her legs around mine and I helped her stand. She pulled her clothes on and sat back in her chair with the towel still between her legs.\n\nAlexis move over and kissed me and said to the room, \"Don't forget. We're supposed to all be over at Dee and Jarrod's for Christmas Eve. We have three hours to get ready.\"\n\nOlivia spoke up and said, \"I can drive us. Don't forget that you're all coming to our Penthouse early Christmas morning.\" I was glad all those plans had been worked out. I was anxious to see Jarrod's mansion and Olivia and Sophia's Penthouse, eight floors above us. Olivia looked over at me and said, \"I've invited your parents and Thia so we will all have to behave ourselves tomorrow.\" No one complained; at least not out-loud. I was surprised about Thia. She never came home for Thanksgiving and Christmas. I guess she wanted to get her batteries charged. The schedule around the Bowl game was really a problem. I couldn't see how I was going to be able to get home for Christmas with them and have Christmas with Alexis' mom and head back to campus the morning after. Olivia's invite solved that problem but I hoped that no one was upset about it.\n\nI was the only naked person in the room so I got up and went down the hall to the master bedroom. My bag was on the bed. I found a change of clothes and pulled them on. We spent the rest of the afternoon catching up on everyone's lives. Olivia and Sophia's life in the country was history and they were fully embracing the city life. They had the money to dress the part and from what I could see from their wardrobe today they would fit in perfectly. I wanted to know about their love lives and Sophia made it clear that nothing worthwhile was happening on that front.\n\nOlivia said, \"We've been out of the dating scene a long time and we're feeling a little rusty. There are tons of guys out there and I swear I've met all of them, but whoa there's nothing out there. Including you today, I've had sex with umm. Let me see; one guy.\" Sophia burst out laughing and nodded vigorously.\n\n\"It's true. Same for me,\" Sophia said.\n\nAlexis said, \"You guys are going to have to come visit us on campus. We can fix you up with a ton of young college guys that would freak to be with you two.\" Alexis giggled as she remembered Olivia's penchant for sweaty male bodies and continued, \"Imagine; a couple sweaty, hunky football players submitting to your every desire.\" Sophia looked at Olivia and a look of lust passed between them. Alexis saw their looks and said, \"Hold on, let me get your coats.\" Everyone burst out laughing.\n\nOlivia asked about our sex lives and not with each other. They knew enough about us to know we were not limiting our sex to each other. Alexis was ticking off the count on her fingers and mumbling names as well. She was making some of them up but she wasn't far off. We told them about the party/orgy we had hosted last weekend. Sophia wanted to be invited to the next one.\n\nThe visit finally broke up. The women wanted enough time to make themselves beautiful. I was amused because any one of them could run their fingers through their hair, without makeup and pull on a burlap sack and they would be beautiful. Yet they would all require a minimum of two hours to get ready. I walked Olivia and Sophia to the elevator and Olivia slid a security card into a slot that would direct it straight to the Penthouse level and open in their foyer. 'Pretty swanky,' I thought.\n\nI found Alexis in her walk-in closet sitting at her dressing table in the nude. She was concentrating on her makeup. Alexis wasn't a big hair-do person. She didn't frequent hair salons and she usually just let her hair dry naturally after a shower. Her shiny, naturally wavy blonde hair had grown past her shoulders. She probably would have kept it shorter like when I first met her if I hadn't asked her to let it grow. She actually liked the look she got from simply running her fingers through her hair. It was kind of the Meg Ryan look. I never saw her use a comb and only occasionally a soft bristle brush.\n\nI stood there and watched her for a while. I could watch her all day every day. She was putting on mascara. She didn't do that often but when she did, her gorgeous aqua-blue eyes popped. She was flicking the brush up her eyelashes when she noticed me in the reflection of the mirror. She smiled at me and kept doing what she was doing. I didn't move and she said, \"What?\"\n\nI shrugged my shoulders and said, \"Nothing. I just love looking at you. I missed you.\"\n\nShe smiled as she finished up with her eyes. She batted them at me. \"I missed you too. I'm glad the University is letting the SH5 fly on the plane to California. We won't have to be apart as much.\" We knew we wouldn't be able to share a room at the hotel but we had figured out how to get around that before. \n\nAlexis picked up a big knobbed soft-bristle brush and started brushing it over her cheeks. She said, \"I'm excited that your parents and Thia are coming tomorrow. I couldn't figure out how we were going to get to visit them tomorrow without spending the day on the road. Don't worry. Everyone will be on their best behavior.\" She giggled and continued, \"I guess that will just cause tonight's party to be even more...umm.. you know.\" A vision of Emma, Dee and Jarrod with Olivia, Sophia, Alexis and me writhing around on a bed flashed through my mind and my pants suddenly got tight in the crotch again. Alexis saw my reaction in the mirror and giggled as she said, \"I see you're getting ready.\"\n\nAt the prescribed time I called the Penthouse and told Sophia we would be waiting at the elevator and three minutes later the elevator doors opened. I was dressed in a powder-blue, open collared, button down shirt with a sport jacket, gray dress slacks and black dress shoes. I looked like the poor relative compared to Olivia, Sophia and Alexis. They were wearing cock-tail style dresses with hemlines several inches above the knees and they were stunning. Alexis said, \"You two are gorgeous,\" as we stepped into the elevator. Sophia scanned Alexis from head to toe in her sparkly strapless dress and whistled before saying, \"I thought we were too until the elevator door opened. Girl you take gorgeous to a whole new level.\" Alexis blushed at Sophia's compliment and then lifted her hemline to show off her garter belt and nylons, sans panties. Olivia moved toward Alexis and stretched up to kiss her. Always aware of their lip-gloss, they pecked each other's lips lightly. Sophia did the same accept her kiss lingered a little longer. \n\nOlivia moved over to me and offered her cheek. She puckered her lips on air beside my cheek and I kissed her high on the cheek near her earlobe. She trembled a little as I slowly exhaled into her ear. Sophia offered her cheek too and I nibble lightly on her earlobe. She trembled too and moaned softly as she pulled back giving me a sultry look. She took my hand in hers and placed it on her left breast over her heart. She said, \"Do you see what you do to me?\" I could feel her heart pounding like a jackhammer.\n\nI guided her hand down and placed it on my crotch. My boner was pushing hard against my zipper out of sight under my sport jacket. She looked up at me and grinned. I said, \"Do you see what you do to me?\" She giggled and rubbed her hand over the bulge for a moment. The elevator doors opened at the garage level.\n\nThree middle aged men were standing right in the doorway like they would fall into the elevator when the door opened. We nearly collided with them as we were stepping out. Common etiquette is for those on the elevator to get off before those getting on entered, so they backed away from the door. They instantly realized that it was a good move. It gave them several more seconds to ogle the three beautiful women in my company. Their jaws literally fell open as Olivia stepped out followed by Sophia and then Alexis. The ladies avoided their stares but I didn't. I walked by them smiling. Their eyes followed me out as if trying to assess what I had that they didn't. As we walked toward Olivia's Mercedes, Alexis poured it on for the guys as she strutted her cat-walk. Her amazing ass twitched from side to side with each long stride. My cock ratcheted up to a new level of hardness. I heard one of the men behind us say, \"Fuck, I hope they're not just visiting.\" I could feel their eyes on our backs until we were out of sight.\n\nOlivia drove up to the security gate of the gated community that Jarrod and Dee and now Emma lived in. She stopped and waited for the guard to step out of the gate-house. She gave her name and who we were visiting. The guard flipped through the pages on his clipboard, looked into the car at each of us and said, \"Merry Christmas folks,\" as the gate lifted in front of the car. The houses in this community were huge; bigger than the Oak Ridge houses they had left behind but much smaller than Rachel's mansion. Jarrod's house was the biggest of the houses we passed. I would classify it as a mansion too. I stared up at it slack jawed as Olivia parked in the driveway. Dee's Porche Carrera, Emma's Mercedes S560 and Jarrod's Maseratti SUV were parked side by side. I'd never seen a Maseratti before but I recognized the trident emblem on the grill. Olivia's Mercedes E400 didn't look out of place.\n\nThe driveway was ringed with brightly lit Christmas trees. Every light in the house must have been on. A huge lighted Christmas wreath was displayed on the front door which must have stood ten feet tall and eight feet wide. Jarrod answered the doorbell and Emma and Dee were standing in the middle of the foyer anxious to greet us. Dee was almost bouncing with excitement, Emma was more reserved but she had a huge grin on her face. They were dressed in fancy, glittery cocktail dresses too.\n\nIn the foyer we all hugged and kissed each other. \"Merry Christmas\" was heard from everyone. Jarrod pushed the visiting out of the foyer to the huge living room on the front-left side of the house. There were trays of hors d'oeuvres on every table between chairs and sofas. A huge fireplace was ablaze with sprigs of spruce and Christmas ornaments along the mantle and stockings hung down. Sconces were lit on every wall. A huge ten foot Christmas tree stood in the corner. It was spectacularly decorated. There were a few wrapped packages underneath.\n\nJarrod asked about drinks and motioned for me to help him in the kitchen which was at the back of the house. We walked through a huge ten foot coffer-ceilinged dining room with a mirror finished mahogany table with twelve chairs and china cabinet and serving tables to get to the most incredible chef's kitchen I had ever seen. Something delicious was sizzling in one of the built in over/under ovens. Liquor bottles ran along the ten foot center island. I took a seat on one of the stools. I chatted with Jarrod while he made the drinks. He noticed that I was marveling at his prowess with the drinks. He said, \"I was a bartender in college.\" I hadn't known that.\n\nI went to grab a beer out of the huge subzero built -in refrigerator but there weren't any there. He turned to see what I was doing and said, \"Oh. Sorry. The beers are in the top-right drawer under the counter. He pointed the way. I was confused by his directions. Drawer and Refrigerator didn't go together. I pulled out the under-counter drawer expecting to find silverware or the like but it contained only ice-cold twelve ounce cans. There were a total of six identical drawers; three above three. I pulled open the one beside the cans after I had pulled a couple of beers out. It contained fresh vegetables. Each of the six drawers was a refrigerator. I had never seen nor heard of such a thing. \n\nI popped the top of one beer and handed it to Jarrod. I did the same for me. We clinked the aluminum cans and said 'Merry Christmas'. Jarrod pulled down a silver tray from one of the cabinets and loaded all the drinks on it and carried it in one upraised hand to the living room. Dee was giving Alexis the house tour. Olivia and Sophia went along too, even though they had been here many times. Emma didn't take the tour and she came over and hugged herself up close to me. She was careful not to get makeup on my jacket. She stretched up to give me a kiss and I bent low to receive it. She apparently wasn't concerned about the potential damage to her lip-gloss as she kissed me hard with passion. I returned her kiss in kind. We sat down and chatted about what was going on with each other. Jarrod just listened.\n\nWhen the rest returned to the living room, they were gabbing a mile-a-minute. Alexis was giddy with excitement about how beautiful Dee's home was. Dee and Emma were dressed every bit as classy - maybe the word was 'rich' - as Alexis, Olivia and Sophia. Jarrod was dressed pretty much the same as me. From my upbringing, it seemed odd to dress so fancy for a house party, especially with just family; if we were going out somewhere, then sure. This lifestyle would take some getting used to. Jarrod raised his can in the air in the universal signal for 'do you want another' and I nodded. He got up and left and returned a minute later with two more beers.\n\nThe ladies picked up their drinks and everyone toasted \"Merry Christmas and a Happy New Year\". I was personally happy to hear none of that PC crap, 'Happy Holidays'. Glasses and aluminum cans clinked together and everyone took a sip.\n\nWe all sat and chatted. We had all been together a month ago for Thanksgiving but still a lot had happened since then. Emma wanted to show Alexis and me her guest house. As we followed Emma, Dee yelled, \"Dinner in twenty minutes.\" Emma looked back and acknowledged. We walked to the back of the house and out the back door. It was cold out but we were only going fifty feet to her guest house. The front door wasn't locked and we walked right in. Alexis and I turned around in a slow three-sixty scan.\n\nWhen I turned back toward Emma to say how beautiful her place was, she was already on her knees grabbing for my zipper. Alexis giggled and said, \"Jesus Mom. You only have twenty minutes.\" My stiff cock sprang out of my pants into Emma's hand. She started jerking on it immediately.\n\nEmma looked up at Alexis and smiled and said, \"I guess I'd better get busy then.\" She bent forward and kissed my velvety crown before she flicked her tongue down the underside to my balls. She sucked one in and pushed it around with her tongue before repeating the same on the other one. She dragged her tongue back to the tip and rolled her lips over the top and struggled to get them over the knob. After a pause at the usual spot, she sank her lips down my shaft and did her incredible throat-job specialty. I groaned and tilted my head back. Alexis was watching my reaction and giggled. She was pulling up the hem of her dress. I knew she was panty-less and she wasted not one second as she pushed her fingers down over her pubis and into her pussy. Her head tilted back the same as mine.\n\nEmma's lips were furiously bobbing up and down my shaft with one hand following along behind. Fifteen minutes later, my hips launched forward and Emma knew she was going to get her Christmas present. She pulled her head back to lock her lips on my glans and started swallowing with the first long shot of pearly white, gooey cum. She started to get behind and her eyes went wide as she pulled her lips back off my glans but held her lips tightly over the 'eye'. She was able to handle it all without messing up her face or dress. Her lip-gloss was spread along my shaft though.\n\nEmma pulled back from my cock and carefully opened her mouth to display her present. Alexis went down to her knees and pushed her lips to Emma's. Emma pushed half of her load into Alexis' mouth and then they passionately kissed each other. When the broke their embrace, they both turned to me and opened their mouths. Emma quickly pushed her fingers to her lips as she started to lose some of hers. She pushed it back in and swallowed. Alexis did the same. She was still furiously fingering her pussy.\n\nI picked Alexis up high in the air and she squealed until I pushed my lips to her pussy and let her drape her legs over my shoulders. She grabbed the back of my head to steady herself. Her pussy was sopping wet and I flicked my tongue across her clitoris and hung on hard as she pulsed her hips into my face and groaned hard, \"Fuck Baby. I'm close. Finish me off. I need it.\"\n\nEmma lifted her wrist and pointed at her watch for me to see. I nodded in response which changed the angle of my attack on Alexis' pussy and she groaned again as she pulsed her hips at me again. I walked toward the front door and pushed her back against it as I drilled her pussy as hard and deep as I could. In another minute, Alexis, with her head tilted back against the door, began thrusting her hips into my face. She moaned, \"Oh fuck. Yes. Yes. I'm cumming Baby.\" Emma appeared beside me with a towel in her hand. She bent down and sucked my softening gooey cock into her mouth and lashed her tongue around the shaft to clean it. She then pulled off and wiped it with the towel.",
        "Alexis' torso had collapsed onto the top of my head. She had her fingers entwined in my hair as she hung on. I lifted her up and she pulled back her legs as I lowered her to the floor. Emma stuffed the towel into Alexis' crotch and Alexis rubbed it all around to dry herself off. Emma glanced at her watch and said, \"We'd better get back.\" I looked at Alexis. Her face was flushed from her orgasm. I'm sure I had the tell-tale signs on mine as well. The gang would know in an instant what we came out here to do.\n\nDee had just walked into the living room to announce that dinner was ready when we walked in. Dee looked over at us and quick as a wink threw up her hands and said, \"Oh for God's sake Mom. You couldn't even wait until after dinner?\" Emma gave her a sheepish little grin and scooted past her to the dining room. As we passed her she just looked at us with a disapproving glare. We both dipped our heads to avoid the heat.\n\nWhen were all seated: Jarrod sat at one end on the long table and Dee headed for the kitchen. Alexis offered to help and Dee accepted. I was seated next to Dee's place at the other end of the table. Alexis's seat was beside me. Emma sat across from me with Sophia sitting in the middle between Emma and Olivia. As usual, Olivia was sitting canted toward Jarrod with her hand in his lap. He was grinning like a Cheshire cat. \n\nEven though Emma had disapproved of Olivia's escapades under the table at Thanksgiving she took advantage of Dee and Alexis being in the kitchen and dropped one shoe and scooched down in her chair so she could plant her foot in my crotch. I massaged her feet and she was obviously enjoying that more than teasing me. She dropped her other shoe and plopped that foot in my lap too. I massaged that one too. Then I ran my hands under her calves to behind her knees. I knew the back of her knees was an erogenous zone for her. I lightly ran my finger tips there and her face flushed as she sucked air into her lungs and held it. Emma's reaction got Sophia's attention. She turned and looked at Emma and then looked across the table at me. She could see my hunched shoulder with my arms under the table. She grinned at me and turned to Olivia and nudged her with her elbow. Olivia figured she was being chastised for fondling Jarrod and she pulled her head back and looked at Sophia as she nodded back over her shoulder toward Emma. Olivia leaned forward and smiled at the sultry look on Emma's face. She nodded to Sophia and grinned and went back to Jarrod's crotch.\n\nDee and Alexis came in with their hands full. A huge pork roast was on one platter. Another was a tray covered in 'twice-baked' potatoes dripping in melted butter. A bowl of sour-cream and chives sat in the middle. A bowl of green-beans and peas and one of sliced baby carrots found their places in the middle of the table. We had all refreshed our drinks. We were ready to dig in but Jarrod wanted to say 'Grace' so we all pulled our hands back into our laps and said \"Amen\" when he was done. I had dropped Emma's legs when Dee and Alexis came in but Emma's flushed neck and chest from my ministrations behind her knees caught Dee's attention and she gave her mother another disapproving look. Emma smiled at me. Their roles were reversed and it wasn't lost on Emma.\n\nAfter dinner, Jarrod was collecting empty plates and glasses and silverware. I felt obligated to do the same and I picked up platters and bowls and trays. The ladies all made fun of the guys clearing the table. We took their ribbing in good nature. We really blew their minds when we came back with a tray of their drinks. They all agreed that they should keep us around.\n\nWe had all agreed that we wouldn't buy presents for everyone, even though everyone but Alexis and I could afford elaborate and expensive gifts. Small, gag type gifts for our 'significant other' were allowed though. I had purchased a small gift for Alexis and the store had wrapped it for me. The store clerk showed me how it worked and I thought it was so great I bought several of them to give as gifts at one point or another.\n\nWe adjourned to the living room and all sat around the tree. Dee agreed to be Santa and find the gifts under the tree and distribute them accordingly. Dee crawled under the tree to get a small package with a bow bigger than the box. Dee was on her knees and elbows reaching for a gift and her sparkly dress crept up over her hips and revealed that she was going commando too. Alexis pointed it out first and Dee waggled her ass at us from under the tree. We all laughed. On her way out from under the tree she pulled all of the small gifts out in front of the tree. There were a total of ten small packages all elegantly wrapped. Dee and Alexis had both bought gifts for Emma and apparently Emma had bought small gifts for both Alexis and Dee.\n\nThey were just silly little gifts like Dee had gifted a gold Maseratti key ring to Jarrod. It was not gold-toned. Jarrod bought Dee a skimpy black lace negligee from Victoria's Secret. We razzed him ruthlessly about buying Dee a gift that he wanted. He turned beet red but accepted the ribbing with a smile. Dee held it up to her body and spread the crotch to make sure everyone knew it was crotchless. The ribbing started all over again. We all laughed as Jarrod's face turned beet red again.\n\nI got my gift and I opened a four inch by four inch by one inch package. Everyone was watching as I held up a huge cock ring. It must have been four inches in diameter. I suppose we could play ring-toss with it. Sophia roared in laughter and said, \"It feels like that's just the right size.\" Everyone burst out laughing. Olivia was vigorously nodding her head. \n\nOlivia and Sophia were apparently on the same page, shopping in the same store. They each got the other a vibrating dildo from the Adam n' Eve Adult Store. Sophia hadn't thought to pre-charge Olivia's gift but Sophia's dildo gave off a soft purring noise when she turned it one. She immediately stuck it under her dress revealing that she wore no panties either. I looked at Jarrod and said, \"I bet that there's not a person here wearing underwear.\" He thought a moment and then reached over and shook my hand. The bet was on.\n\nEmma got a nude colored garter belt and nylon set from Dee and a certificate for a Brazilian wax from Alexis. Emma got laughing and said there was no way she was going to get her pubic hairs yanked out at the roots. Jarrod and I groaned and doubled over at the thought of it. Emma bought the same gifts for Alexis and Dee; a hard silicon strap-on dildo of average size. Alexis' was black and Dee's was tan. The ladies wanted to see them on. Dee stood up and strapped it on and tightened the straps like she'd done it a thousand times. Her tan penis stuck straight out in front of her and she started twerking her hips in a fucking motion. Olivia spoke up and said, \"Well, you're turning me on.\" Everyone burst out laughing.\n\nDee thrust her plastic penis around like she was dueling with a fencing sword and said, \"En garde.\" Everyone exploded in laughter again. Dee let her hemline drop over her dildo and sat down again. The plastic penis formed a tent in the front of her dress which cracked everyone up again.\n\nAlexis picked up my gift and shook it. It made a shuffling noise. She pulled off the paper and smiled over at me. She showed the rest that it was a set of gold-toned glass Ben-Wah balls held together with a vinyl string a couple inches long. She knew what they were but had never tried them before. She opened the plastic box and took them out. She grinned at me and popped the 'balls' into her mouth and then spread her legs. I pointed out 'no panties' to Jarrod. I already knew that. That left Emma and Olivia and of course Jarrod to win or lose my bet. I wondered if he accepted the bet because he was wearing underwear. Whatever.\n\nAlexis ignored the directions included in the box and reached down and stuffed the smaller of the two balls into her vagina. She did the same with the larger one. The larger one was a snug fit. She stood up and moved her hips around but didn't feel anything other than the fact that they were there. She sat back down and the party went on. We each had a couple more drinks and Jarrod and I were back in the kitchen mixing drinks and getting beers. Alexis walked in wagging her hips trying to get something from the Ben-Wah balls in her pussy. She strolled over and pushed herself up to kiss me and suddenly her body pulsed like she had just got an electric shock. Her eyes went wide as she said, \"Oh fuck. That caught me by surprise.\" She wagged her ass again but got nothing. She went back to the living room swinging her hips from side to side the whole way. Apparently, nothing happened. \n\nJarrod said, \"I looked at those for Dee but I had read that they don't do much; just the occasional affect like we just saw.\"\n\nI grinned at Jarrod and said, \"These are different.\" I reached into my pocket and pulled out a small plastic gold-toned fob with a dial and a button. I set the dial on number 1 and pushed the button. A short squeal erupted from the living room.\n\nJarrod looked at me; his eyes wide and burst into a grin and said, \"No fucking way.\" I just nodded and grinned back at him. I put the fob back in my pocket. Alexis came rushing into the kitchen again yelling, \"Holy Shit Baby. These balls just moved in me. Oh my God. The sensation vibrated right through me.\" She stretched up and kissed me. \"Thank you Baby.\" She swished her ass back and forth as she went back to the living room trying to make it do it again.\n\nJarrod said, \"Does it give her an electric shock?\"\n\n\"No. They just move in a pulse or vibration depending on whatever you select,\" I said.\n\n\"We've got to have some fun with this. Give me the fob so you can show her that you aren't doing anything. What do the other dial settings do?\" Jarrod said. I gave him the fob and he read \"pulse\" at one setting, \"multi-pulse\" on the middle setting and \"vibrate\" on the last setting. He left it on \"pulse\" and we went back in the living room and took our seats. The ladies were getting pretty buzzed.\n\nJarrod wasted no time. He had the fob hidden in the palm of his hand he was holding his beer in. He squeezed the can which pressed the button on the fob. Alexis surge up out of her chair startling everyone. Her eyes were wide. Emma said, \"Honey, are you okay?\" Everyone's attention was on Alexis standing in front of her chair with her legs spread unusually wide. She reached her hand down over her dress to her pubic mound.\n\nAlexis said, \"Oh my God. I've got to figure out what makes these things work. I don't know what I did. They just jumped in my pussy. Fuck what a sensation.\" Jarrod squeezed his beer can again and Alexis went rigid again and thrust her hips forward grabbing her crotch through her dress.\n\nSophia looked at Olivia and smiled. Olivia said, \"I think I need to get me a set of those.\" Sophia grinned and nodded. Everyone was watching Alexis as she sat back down again. Jarrod squeezed his beer can again and Alexis' hips launched forward in her chair but she stayed in it this time. Her eyes shut tight as her mouth hung open. Jarrod gave her another pulse and then another. Alexis grabbed her tits through her dress and ground her hips around in the chair. Jarrod turned the dial to multi-pulse and squeezed his beer can. Alexis' hips rocked forward and back several times and we all watched as she rolled into an obvious orgasm.\n\nAlexis grabbed the arms of the chair and rolled her hips around. Her mouth opened again as a long, \"YYYYYUUUNNGGGG,\" exploded from her lungs. Dee, Emma, Olivia and Sophia just sat staring at her with looks of wonder on their faces. Alexis' legs flailed forward and tucked back to her chair several times. \n\nJarrod was having too much fun as he squeezed his beer can again and multiple pulses surged through Alexis. She screamed hard, \"AAAAIIIIIIEEEEEEEEEEE.\" She was all over the chair clutching at her pussy and then her tits and then her pussy again. Now the others were growing concerned for Alexis. I put my hand on Jarrod's indicating he needed to stop. He slipped the fob into my hand and I palmed it into my jacket pocket.\n\nSlowly, Alexis descended from her orgasm. Conversations had obviously stopped as all attention was on Alexis. She finally straightened in her chair and smoothed her dress over her legs and wiped some escaped saliva from her chin and said, \"Fuck. What a ride.\" Everyone looked at each other and then burst out laughing. Olivia looked over at me and said, \"Where did you get those? Holy shit, I've got to get me some.\"\n\nSophia said, \"Can you imagine sitting in a restaurant or someplace public and having an orgasm like that out of the blue? Holy shit.\" \n\nI grinned at Olivia and then at Sophia. Dee and Emma were looking at me. I said, \"Well just hold that thought for a minute. I know we weren't supposed to buy everyone a present but I couldn't help myself.\" I got up and headed for the foyer. I opened the front door and went to Olivia's car. I separated the control fobs from four boxes of different colored glass Ben-Wah balls and brought them inside. I pocketed the fob for the pair of red 'balls' I would give to Olivia. The boxes weren't gift wrapped so everyone knew what they were when I handed them out. Red ones to Olivia, Blue ones to Sophia, Green ones to Dee and Yellow ones to Emma. I made a mental note of what color each one got because the control fobs for each were color coordinated. Their eyes went wide with excitement. I said, \"I can't guarantee that these will have the same effect as what Alexis just experienced.\" Jarrod rolled his eyes at me.\n\nDee and Emma set their boxes aside. Olivia and Sophia weren't waiting. Olivia opened her box and pulled out the linked glass balls and popped them in her mouth. Then she hiked up her dress and sure enough she wore no panties either. That left Emma as the only unknown. Olivia spread her legs and pushed the balls inside her vagina and then ground her hips around in the chair hoping for a reaction. Nothing happened. Sophia watched hopefully and then did the same as Olivia. Nothing happened for her either. Alexis looked at the frowns on their faces and said, \"Nothing happened to me for a while either. It just suddenly grabs you. It's incredible. Give them a chance.\"\n\nApparently, Jarrod had had enough and needed to know whether he or I won the bet. He set his beer down and walked across the room and knelt down in front of Emma. She watched him coming and had a confused look on her face as Jarrod knelt directly in front of her. He was grinning hard as he pushed his hands to the top of Emma's thighs dragging his thumbs along the inner sides. She was still confused but she spread her legs slightly to allow him access. I watched in fascination as I was sure this party was about to go nuclear.\n\nJarrod looked directly into Emma's eyes as she looked into his. Everyone was watching to see what he was going to do. There was total silence in the room. The grandfather clock in the foyer chimed the quarter hour and Jarrod slid his hands higher. Emma's breathing turned ragged as she sucked her lower lip between her teeth and held it there afraid to move. Jarrod's hands stopped moving as Emma groaned out, \"Oh Gaaawwdd,\" as her torso sagged forward and she grabbed her tits as if to stop the forward momentum.\n\nJarrod looked back at me and smiled as he said, \"Well Hunter. It looks like you won.\" Jarrod flipped back the hem of Emma's dress to reveal a small patch of neatly trimmed blonde pubic hair.\n\nDee reached over and swatted Jarrod on the shoulder and said, \"What are you two betting on now; whether or not we're all going commando or not?\" Jarrod grinned and nodded. \"Well, what about you two?\" Jarrod stood up and unbuckled his pants and dropped his zipper. As his pants fell to his feet his erection revealed that he wasn't wearing underwear either. Emma reached out and wrapped her hand around Jarrod's cock and started jerking him off. Everyone else turned to me and Dee said, \"Well? It's time this party got started. Drop 'em there big guy.\" \n\nI stood and dropped my pants and my erection revealed that all of us had gone commando in anticipation of the evening's festivities. Olivia was the first to move out of her chair between my legs. Sophia was moving too but just a fraction of a second too late. Olivia's fingers went around my shaft. Sophia tried to get her mouth into position but Olivia hip-checked her out of the way.\n\nI looked over at Alexis who was concentrating on gyrating her hips around in her chair obviously trying to get her 'balls' to give her that jolt again.\n\nDee dropped to the floor beside her mother and began sharing Jarrod's cock. She was still wearing her strap-on dildo and her dress tented out in front of her. As Olivia stretched her lips over my knob, I reached in my jacket pocket and pressed the fob button for Alexis' 'balls' and multiple pulses rocked Alexis' pussy again as she shrieked and came out of her chair to her knees. Her breath caught in her lungs as her hips throbbed with each pulse of the 'balls'. Sophia crawled on her knees over to Alexis and pushed her back to the floor. She bent forward and stuck her face into Alexis' dripping wet pussy and Alexis let out another shriek as Sophia's tongue found her clitoris.\n\nOlivia was giving me a wonderful blowjob and I couldn't resist pressing the button on her fob. I didn't know what setting it was pre-set to. I assumed it was on 'pulse' but I couldn't look to confirm it. I pressed the button on the second fob. Note to self for future reference: Don't press the button when the woman wearing the 'balls' has your cock in her mouth.\n\nIt turned out that Olivia's fob was set to vibrate and when I pressed the button, her body went rigid and she reflexively bit down firmly. I doubled over in pain. Olivia had a horrified look on her face as she immediately struggled to get her mouth off my cock. She fell back onto her heels and then keeled over onto her side. Her whole body was throbbing. She struggled to get her words out, \"It feels... like... I have... a.. vibrator.. inside... meeeee.\" I fumbled with the fob in my pocket and finally got it turned off. I guess in vibrate mode you have to push the button again to turn it off. Olivia trembled for a few seconds more before rolling onto her back. She spread her legs and used her vaginal muscles to push the larger ball out and then pulled the other one out behind it. \n\nOlivia sat up and examined the 'balls' and said, \"I'm telling you these things were vibrating in my pussy.\" Dee left Jarrod's cock to her mother and crawled on her hands and knees over to take the 'balls' from Olivia. She examined them and saw nothing unusual about them. She hadn't realized that her dress had ridden up so it was above her dildo, which was pointing at Olivia's face. Olivia reached down and took Dee's dildo in her hand and stroked it a couple times just to see how rigid it was. It was silicon and it was very firm with a spiral twist molded in.\n\nI pulled off my jacket and tossed it into the chair I was sitting in. I did the same with my shirt. I kicked off my shoes and stepped out of my pants as I kicked them up into my chair. I bent down and pulled my socks off and I was the only naked person in the room. Clothes were coming off everywhere. In minutes we were all naked and pairing up again.\n\nAlexis and Sophia were in a sixty-nine position with Alexis on top. She had left her garter belt and nylons on as they just added to the vision that she was. Emma was fucking Jarrod as he sat in her chair. Her knees were on the arms of the chair as she sat cow-girl in his lap. She was driving the action with her legs as she leaned back with her hands on Jarrod's knees. Her huge tits sagged off slightly toward her sides. Jarrod's hands were all over them.",
        "Olivia had pushed me onto my back and she was on her knees and elbows sucking on my cock. Dee was giving her strap-on dildo a test drive as she was fucking Olivia's pussy doggy style. It was an erotic sight to see Dee up on her knees with her hands on Olivia's hips driving her pelvis forward and back. Her tits, with erect nipples, were bouncing around on her chest. Olivia was groaning around my cock as her body rocked back and forth as she sucked my cock and aided Dee's fucking motion. \n\nOlivia was the first to go. She had to pull off my cock so she could gasp air into her lungs. Her hips were pulsing on Dee's dildo. Olivia rubbed my cock all over her face as she struggled to get control of her body back. Dee pulled her dildo out of Olivia's pussy and sat back on her heels and Olivia's face went to the carpet and then she rolled onto her side. Her pussy was clenching open and closed like a goldfish gasping for oxygen.\n\nEmma started throwing her body around in Jarrod's lap as she screamed out, \"I'm cumming. Oh Jesus. Yes.\" Emma's orgasm apparently pulled Jarrod over the top and he started humping his hips up into Emma as they climaxed together. \n\nDee was furiously unsnapping her dildo and she hurried over to me as I sat up against the chair behind me. She turned around and squatted as she slid her body down mine to push her pussy onto my cock. She groaned hard as she sank all the way to my balls. She was stuck now. She couldn't move one way or the other. She didn't have any leverage with her legs. She put her hands back on my hips and tried to use her arms to lift herself up my shaft. I put my hands under her butt-cheeks and lifted her on and off my cock. Based on her groans, I guessed that it was working fine. \n\nAcross the room, Alexis pulled her face out of Sophia's pussy and let out a loud moan like she was a wolf baying at the moon. Alexis' hips began twerking. Sophia's hands were locked onto Alexi's tits. She was lifting her hips up trying to find Alexis' face again. Alexis screamed out that she was cumming. I wished that I had the fob in my hand at that moment.\n\nEven though I didn't have the remote control for Sophia's Ben-Wah balls she must have got a reaction from them buried in her pussy. She suddenly humped up her hips up and screeched, \"I'm cumming too. Oh my gawwddd. The balls.\"\n\nI was next. My orgasm crashed in on me like a run-away freight train. The power of it crushed me. Muscles seized and fired everywhere. Even my fingers and toes went into spasms. I fired my hips up into Dee with the first shot. Dee could feel my cock getting harder and when I blew that first shot she exploded into her own climax. She wailed, \"AAAAAIIIIIIEEEEEEEEE.\" Her body contorted and released to her own rhythm as I launched half-dozen ropes of cum into Dee. She wailed again with each one. When I was done blowing my load I realized that everyone else in the room was sitting or laying there watching. Cum was gushing out of Dee's pussy driven by her vaginal clenching, which continued for a couple minutes after I finished. Olivia noticed and grabbed my shirt and stuffed it into Dee's crotch. Dee pushed it in deeper as she laid her head back on my shoulder. I released her butt-cheeks and cradled her tits. \n\nDee turned her head as far as she could and kissed me on the cheek as she gently ran one hand along my other cheek. I kissed her hand as it went by my lips. \n\nWhen we were all up and moving again, Jarrod came over and whispered, \"Can I get the remote for Dee's 'balls'?\n\nI nodded and said, \"I'll have to get it out of the car. I only brought in the red one that I gave to Olivia.\" He nodded and offered a fist pump and I reciprocated. We were all looking for our clothes. Once everyone was clothed, Dee came out of the kitchen with several paper bags and handed them out to everyone to put their gifts in. \n\nJarrod was loading empty glasses and beer cans on a silver tray and wiping down the tables as he went. It occurred to me that Jarrod was a bit of an obsessive neat-freak. I helped him collect the glasses and cans. It took two trips to get everything. The ladies were already giving hugs and kisses to each other. I went out to the car and got the green remote control fob and discretely passed it to Jarrod. He had a huge, ear to ear grin on his face as he pushed the fob into his pocket. We fist pumped again. Alexis, Olivia and Sophia came over and hugged and kissed Jarrod and thanked him for having us. Dee and Emma hugged and kissed me.\n\nWe piled back into Olivia's Mercedes and waved to the security guard on the way out. Sophia sat in front and Alexis and I were in back. Alexis was cuddled up to me with my arm around her shoulders. I kissed her on the forehead. She was concentrating on gyrating her hips apparently still trying to get another jolt from her 'balls'. I reached into my pocket and pushed the button.\n\nAlexis felt the multiple pulses in her pussy and she pulsed right along with them. She groaned and said, \"Fuck. I'm having another one. Jesus I never know when it's going to happen. It's kind of exciting.\" Sophia looked over her shoulders as Alexis quaked her way through the pulses. She smiled at me as I held on to Alexis. \n\nAt home Olivia and Sophia dropped us off on our floor and said, \"Merry Christmas guys. See you in the morning.\" The elevator door whooshed shut. I unlocked the door and pushed it open. Alexis was still a little buzzed and she stumbled into the foyer. I reached out my arm for her to grab to steady herself. She went straight to the bedroom. I went to the kitchen and pushed the five colored remote control fobs onto the top shelf of a cabinet and headed for the bedroom. I got to the hallway and returned to the kitchen. I couldn't keep the gold-toned remote a secret from Alexis any longer. As it was she would probably be pissed off at me.\n\nAlexis was sitting on the edge of the bed with one leg up. She was just about to push the larger 'ball' out of her pussy with her vaginal muscles as I said, \"Hold on just a minute Babe, okay?\" She looked up at me with a confused look on her face.\n\nShe dropped her leg back to the floor and said, \"What's up?\" I handed her the gold-toned fob. She looked at it in my hand for a moment and then stuck her hand out to take it. She said, \"What's this?\"\n\nI sat down beside her and said, \"Push the button.\" She looked up at me and then back at the fob. She pushed the button. The resulting multiple pulses caused her to quake so hard that the fob flew out of her hand. When she settled down she looked at me. I was expecting a pissed off look but I didn't get it. She looked down at the fob on the floor and said, \"That was you?\"\n\nI shook my head and said, \"Not every time. The 'balls' do work but it's not what most people think. Women have used them for a long time. They're used to strengthen vaginal muscles. These have tiny vibrators inside that are controlled by the fob. I found them on the internet. I'm sorry I didn't let you know right away. We wanted to have some fun with it.\"\n\nAlexis said, \"We?\"\n\n\"Yeah. Jarrod and I. He was controlling it when you had your orgasm. He figured you'd catch on and accuse me of doing it and I would show my empty hands while he pushed the button again. You seemed to be enjoying it so much I didn't have the heart to tell you when we were there.\"\n\nAlexis picked up the fob and examined it. She pushed the button again. This time she was expecting the sensation and she just trembled and let out a soft groan. She pushed it again and she reacted the same way. She looked closer and turned the dial to 'vibrate' and pushed the button. She flew backwards on the bed with her legs flailing. She figured out that she had to push the button again to shut it off. She collected herself and looked over at me and said, \"Holy Shit, Baby. I could give myself an orgasm any time I want with this thing.\" She pushed the button again and her body instantly began to writhe around on the bed. She felt like she should be fingering her clitoris but then realized she didn't need to. She was getting used to the sensation now and she settled down and rode the vibrations to a massive orgasm. She pushed the button again to stop the vibrating and I watched her vagina clamping on the 'balls'. \n\nWhen she was able to gather herself, she sat up and leaned over and kissed me on the lips. She said, \"I love this thing but I'd rather be the one in control, okay? I can control my reaction if I know its coming.\" I kissed her back and nodded. She set the fob on her night table and then put her foot back up on the bed and flexed her vaginal muscles to push the larger ball out and the smaller followed close behind. She took them to the bathroom and spent a fair amount of time washing them and then dropped them back in the plastic box they came in. \n\nWe took a quick shower to get the smell of sex off us. As we were getting under the covers Alexis said, \"I assume there is a control fob for each of the other sets of 'balls' you passed out tonight. I smiled and nodded. She said, \"I assume that Jarrod has the green fob for Dee's 'balls'.\" I nodded again. She continued, \"Where are the fobs for Olivia's, Sophia's and my mother's 'ball'?\" \n\nI said, \"In the kitchen.\"\n\nAlexis grinned at me and said, \"Bring them with you tomorrow. Okay?\" I nodded and settled my head into my pillow and turned out the light on my night table. Alexis was quiet for a minute and then said, \"You don't happen to have another pair for Thia do you?\"\n\nI said, \"I do.\" \n\nAlexis was quiet another minute and then said, \"This is going to be fun tomorrow. Especially since everyone knows they have to be on their best behavior with your parents there.\" She giggled and we drifted off to sleep.\n\nWe got up early the next morning because my parents were coming to our condo for breakfast before we all went up to the Penthouse. They had said they would be here by eight o'clock. My dad was a stickler for being on schedule. I guess that's where I get that trait from.\n\nAt 7:58 AM there was a knock on the door. Alexis looked at me and giggled. She didn't have that 'being on time' gene and couldn't comprehend those that did. I opened the door and welcomed them in. They both said, \"Merry Christmas,\" and I said the same. Dad was dressed in dress slacks and dress shoes and a knit pull over and a sport jacket. Mom was dressed in a flattering new dress with a hem an inch or so above the knee. I told her she looked sexy and she frowned at me for a brief moment and then smiled and did a quarter turn modeling pose in each direction. I gave her a wolf-whistle and she smirked at me. I knew she was excited about visiting here with our friends and Alexis' family. Thia had already told me Mom had bought a new dress and had actually let her help pick something out. It was obvious that Thia had pushed Mom's dress code to her limit. Thia was dressed to the nines too. She said her \"Merry Christmas\" to Alexis and me and whispered, \"Will we be able to get together today? You know, like at Thanksgiving?\" \n\nI reached in my pocket and pulled out a small plastic box with black, glass balls in it. I kept the fob. She knew what they were and she smiled broadly as she took the box. I said, \"These might get you started. Merry Christmas, Sis.\" She stretched up and kissed me a little too passionately with our parents standing close by talking to Alexis.\n\nMom came over to Thia and me and said,\"Thia. Tell your brother the news.\"\n\nThia rolled her eyes and said, \"Mom. Stop it with the news.\" Mom was smiling too hard to be affected by Thia's chastising. I looked at Thia waiting for the news. She looked at me for a long moment and then groaned as she said, \"Okay. Okay. I've met a guy. A good guy, I think. I went out with a friend as my wingman and she gave me some hints about what to look for or rather what not to look for. I told her she should write a book.\" I pulled Thia in close and hugged her tight. She whispered, \"That doesn't make any difference about today. Okay?\" I nodded and kissed her on the cheek.\n\nAlexis gave a quick tour of our condo. Dad was reserved as always. We didn't take any offense. Mom and Thia were all gaa-gaa about the luxury, the size of the rooms and especially the view of the city. I noticed that Dad stood back a few feet from the windows just like I did. I was getting used to it now and the pull had less effect.\n\nAlexis called us all to the dining room and she served a breakfast of fried eggs, hash-browns, bacon, sausage, toast and orange juice. She took orders for coffee from the Keurig coffee maker. Dad wanted decaf but the rest wanted high-test. Alexis wanted to hear about Thia's new guy and Thia got more and more excited as she talked about him. She said she tried to get him to fly out here with her but he had made plans for Christmas in the Bahamas with his family. Alexis commented that we should do that next year.\n\nThere was a knock at the front door and I went to answer it. It was Dee, Emma and Jarrod. We hugged all around. I introduced my parents as Jack and Doris to Dee and Jarrod. It felt awkward to refer to my parents by their names, Jack and Doris; I've never ever called them anything but Mom and Dad. They had met Emma before. It was obvious that Dad liked the looks of Emma. His eyes sparkled as he moved to give her a hug and a kiss on the cheek. She 'accidently' dragged her breasts on his chest when they hugged. At least I thought it was an accident. \"Merry Christmas\" was wished by all.\n\nThere was plenty of food left on the dining room table and Jarrod went in and sat down. Alexis brought him a plate and he filled it. Dee came in and grabbed a piece of toast and put a couple strips of bacon on it and folded it in half. She went back out to the living room, sat down and ate it. She was talking with my mom, Doris, who seemed to really enjoy Dee's bubbly personality. My dad, Jack, was chatting with Jarrod. Emma came over and hugged and kissed my mom and said, \"Hello Doris. It's wonderful to see you again.\" She clutched my mom's hand and stood back to appraise her. \"You look fantastic. I love your dress.\" Doris' face flushed a little at Emma's compliment.\n\nWhen everyone was ready and had their fill of breakfast, Alexis called the Penthouse and a couple minutes later, we were standing in front of the elevator door. We could hear the whir of the elevator motor and soon the doors whooshed open. We all got in and rode it straight up to the Penthouse. When the door opened, the luxury of the foyer alone took my parents breath away. I rarely ever heard my dad say anything that he considered unsavory but as he walked into the foyer he muttered, \"Holy Shit.\"\n\nOlivia walked into the foyer and started giving hugs and kisses to all. I introduced my parents, Jack and Doris, to her. Olivia hugged her monster tits hard into my dad's chest and he kissed her lightly on the cheek. Olivia said, \"I'm so glad you could share the holiday with us.\" Olivia and Mom shared a hug and kiss.\n\nMom said, \"We are honored that you invited us. Thank you.\"\n\nDad couldn't take his eyes off Olivia. I totally understood the feeling. Thia knew everyone already from Thanksgiving. She would never forget it. Olivia finally worked her way over to Thia and hugged and kissed her too. Merry Christmas was said by all. Olivia motioned for everyone to come into their Penthouse Condo. \n\nDad was wide-eyed again as his eyes flitted everywhere. The rooms were huge with high twelve foot coffered ceilings with beautiful murals painted in each coffer in the living room. Sophia came out of the kitchen wearing an apron and we went through all the introductions again. I could tell Dad liked the looks of Sophia too. Who wouldn't? Mom wanted to see the kitchen and Sophia was happy to oblige. It turned out to be a bad move. Mom would never be happy with her kitchen at home again.\n\nExpensive paintings that Olivia and Sophia brought from their old homes lined the walls in the living room, dining room, study, library and even the bathroom. Olivia gave the tour of the main part of the living quarters. She didn't include the second floor but stated that there were five bedrooms; each with its own bathroom. The living room had two ten foot northern spruce Christmas trees. They were huge, one on each side of a massive gas fireplace. They both were decorated beautifully.\n\nWe all found seats and started visiting. I was no sooner seated but Thia motioned me into the dining room. She spoke softly and said, \"What are these 'balls' supposed to do anyway? I put them in down in your condo and I haven't felt a thing. I thought it would get me going so when we get together. Well, you know.\" I had forgotten all about the fobs. I had them all in my jacket pocket. I had no clue if any of the women were wearing their 'balls' or not. I could ask but there was another way. I told Thia to wait awhile before we could safely sneak away. She grinned and reached forward and pinched my soft cock in my pants. It reacted immediately and she giggled and turned back to the living room.\n\nSophia was back in the kitchen so I decided to find out if she was wearing her 'balls'. She was standing at the sink. Her apron was tied around her waist. I stood in the doorway and pushed the button on the blue fob. Sophia went rigid and braced herself against the counter-top. Her hips fired forward and then snapped back. Her torso went in the opposite direction as her chin fell to her chest and then snapped back. She let out a groan and wiggled her ass to see if she could make the 'balls' do it again. I played along and pushed the button again and Sophia suddenly bent forward over the sink and gasped. One hand went to her pelvis and the other grabbed at her tits. She recovered quickly and stood there at the sink with her back to me bracing herself with her hands on the edge of the counter-top. \n\nI headed for the living room to find Olivia. She was in the dining room putting the final touches on the place settings for lunch. I selected the red fob, set it to 'pulse' and pushed the button. Her reaction was the same as Sophia's. She let out a low pitched groan as she pitched forward and grabbed the edge of the table. She sucked her lower lip between her teeth and lightly bit down on it.\n\nI went back into the living room and sat down with the black fob hidden discretely in my hand. Thia was talking with Dee when I pressed the button. Thia shot right out of her seat and startled Dee. Mom noticed and said, \"Thia, Honey, are you okay?\" Thia's face flushed. She knew what had happened but not that I had caused it. She nodded to her mother and waggled her hips slightly as she sat back down. I pushed the button again and Thia gritted her teeth and trembled but otherwise weathered the storm without raising undo attention. Dee noticed though and so did Jarrod. He looked over at me knowing full well what was going on. He smiled and I smiled back. Jarrod flashed the green fob in his hand and quickly palmed it again. \n\nJarrod couldn't stand it anymore and he pushed the button on his fob. Dee's hips snapped forward as her face scrunched into a contorted mask. She quickly recovered and mumbled to no one in particular, \"Fuck. These 'balls' are great. I just wish they'd give a warning though.\" \n\nThia heard Dee and said, \"I know what you mean.\" She wiggled her hips around in her chair. Thia noticed Dee's confused look and said, \"Hunter gave me a set of Ben-Wah Balls this morning. I complained to him that they didn't do anything.\" I pushed Thia's button at the same time Jarrod pushed Dee's and they both lunged forward in their chairs.\n\nMom looked over at Thia again and said, \"Thia. Are you sure you're alright. You look a little flushed.\"\n\nThia recovered from the jolt and straightened in her chair and said, \"I'm fine Mom. Maybe it's a little warm by this fire.\" She stood and smoothed her dress as she moved to a chair on the other side of Dee away from the fire. I pushed the button again just as Thia was bending to sit down. She almost went down to the floor as her hips fired again. She caught herself and sat.",
        "Dee leaned in and said, \"Wow, you've really got those 'balls' working.\" Thia looked kind of glassy-eyed at Dee and then she pushed herself out of the chair and walked out of the living room toward the stairway to the second floor and wagged her finger for me to follow. I pushed the black fob back in my pants and followed her. \n\nJarrod grinned at me as I walked by. He knew what I was going to do."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "christmas",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-39"
}