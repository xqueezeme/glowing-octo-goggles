{
    "title": "Happy Birthday to Me Ch. 04",
    "pages": [
        "<p align=\"center\">Happy Birthday to Me - Chapter Four</p>\n\nThis is a continuation of Chapter Three of \"Happy Birthday to Me\" and picks up from where Chapter Three left off, following on from Kam taking Isabelle into their bedroom... If you haven't already read Chapter Three, I'd recommend going back and reading that first, or better yet, start with Chapter One. Hope you enjoy... Chloe\n\n<p align=\"center\"> * * * * * * * * </p>\n\n<p align=\"center\">Ten minutes past midnight\n\nLeaning out of the window to see the dim light outside\n\nLost quiet rainy night kisses passersby\n\nOnce you whispered in the rain:\n\nHappy birthday my loved one</p>\n\n<p align=\"right\">Ten Minutes Past Midnight, Sally Yip</p>\n\n<p align=\"center\"> * * * * * * * * </p>\n\nKam fucked me, slowly now. His cock felt so good easing in and out of me. Long wet slowly sliding thrusts that had me arching my back as I felt him ease in all the way, then ease back out, pausing before sliding inwards again. Smiling down at me, his hands pinning mine to the bed above my head. I was moaning and gasping, eager and willing for my husband to take me, so eager to accept the pleasure he was giving me. But still nervous about what would happen next. \n\nSo excited and so nervous, so filled with anticipation and with fear. The sort of fear you feel as you're about to plunge into something unknown, like your first jump from a diving board into the pool except worse, scarier, more nerve-racking. I knew what Kam wanted. Just before he'd led me into our bedroom, he'd told Jim and Fan where he was taking me and what he was going to do to me. Then he'd asked them to join us. Just now, a few moments before, Kam had told me he was going to fuck me hard while Jim and Fan watched us. While they watched me. And I'd agreed. I'd said yes.\n\nKam knew I was scared. But when he'd asked me, I'd agreed. They'd already seen me naked. Jim's hands had roamed over me while Kam watched, teasing me, driving me half crazy. I hadn't expected that although if I was honest, I hadn't really known what to expect when Jim and Fan came home with us. Fan had told me to go with the flow and I had. But I hadn't expected another man's hands on me to be so exciting. But they had been. I hadn't expected knowing that Kam was watching me as another man touched me would be so exciting. But it had been,\n\nI didn't want to admit it, not to Kam, but I knew. I knew that if that had continued, I'd have let Jim go ahead and take me if he'd wanted to. That knowledge horrified me, filled me with shame and guilt and yet simultaneously, it excited me. Now, as Kam took me, with every sliding penetration, every movement, I couldn't stop wondering if Jim and Fan would join us. I'd never dreamed of doing something like this. Never dreamed of anyone but my husband seeing me naked, let alone seeing me making love. \n\nKam smiled down at me, his smile lighting up my heart, my love. \"Fuck, I love fucking you Isabelle, I love fucking your tight little cunt. I'm going to love fucking your cunt even more when Jim's watching me fuck you.\" \n\n\"Oooohhhhh.\" I moaned as he thrust hard up inside me, taking in the desire and the excitement written across my husband's face. Taking in his cock as he thrust himself into me. That was so good when he did that to me, so good feeling his cock surge thickly up inside me. I loved it when Kam talked dirty to me while he was making love to me. It made me feel so ... so much more like I was being fucked. I liked that. \"Ohhhhhhh,\" I gasped again, squeezing his cock as tihtly as I could while as he fucked me. That felt so good too. I loved Kam so much, I wanted to satisfy him so much, I wanted to excite him and give him what he wanted. Everything he wanted from me.\n\nI knew I was going to let Jim watch us if that was what Kam wanted. I was going to do what he wanted of me, what he demanded of me. If it excited him to have Jim watching while he fucked me, I'd do that. I knew it would excite him to talk about it. Him and me both. \"Tell me,\" I gasped, \"tell me what you want me to do.\"\n\nKam's smile morphed into a victorious grin. He knew I'd surrendered, I was going to do what he wanted. I knew I'd surrendered. Completely. \"Everything ... ,\" he breathed, \"I want him to see everything I do to you ... show him everything ... I want him to see everything you do to me. I want to use you in front of him. I want to fuck you hard while he watches you... like this.\" He pistoned his cock rapidly in and out of me half a dozen times so that I squealed.\n\n\"Like that,\" Kam teased me, \"I want him to hear you squealing and begging to be fucked hard?\"\n\n\"Yes ... oooh yes,\" I moaned, \"Do anything you want to me ... fuck me hard ... use me ... Tell me you want my cunt to service your cock ... anything you want.\" I looked up at him as he began slamming his cock into me. \"If that's what you want, Kam,\" I moaned, \"if you want him to hear me begging you to fuck me hard, I will ... I will.\" I knew I would. I loved it when Kam fucked me hard. Our bed was nice and solid, built to take hard use. Not that Kan had ever used me hard enough, but maybe tonight. Maybe with Jim watching he'd get carried away?\n\nI hoped so.\n\n\"Say it then, Isabelle,\" Kam half growled, \"I want to hear you tell me you want me to fuck you hard.\"\n\n\"Please Kam,\" I moaned, \"please ... fuck me hard ... fuck me hard...\"\n\n\"Louder,\" Kam breathed, his cock ramming deliciously hard into me. \"Say it louder.\"\n\n\"Fuck me hard ... fuck me hard...\"\n\n\"Louder!\" It felt so good. \"I want Jim and Fan to hear you out there.\"\n\n\"PLEASE ... PLEASE KAM ... PLEASE FUCK ME HARD ... FUCK ME HARDER ... FUCK ME HARDER...\"\n\n\"Oh yeah dude, give her your cock man, go on, give Isabelle what she wants ... fuck her harder.\" Jim's voice made my heart jump. He was standing next to our bed with Fan, both of them looking down at us. Fan was smiling, Jim holding her hand, Fan holding his cock. His cock jutted outwards before him, Fan's hand small on him. The sight of that cock filled my body with butterflies. I'd never seen a man other than Kam naked. Let alone naked and so rampantly erect. With such large balls. He looked at me. He looked at me on the bed with Kam and he smiled. I closed my eyes tight, I gasped as Kam moved inside me, now giving me long slow slippery slides of his cock, in and out, drawing all the way back, then sliding all the way inside me. \n\nI knew Jim could see everything. \n\nHe could see Kam's cock where it slid in to me. See me. I gasped. I moaned and then, without anyone telling me to, I did what I knew Kam would want me to do. Cheeks burning, eyes tightly closed, I pulled my knees back further, as far back as I could, showing Jim what I knew Kam would want him to see. My pussy stretched around Kam's cock. My pussy being taken by Kam's cock.\n\n\"Oooohhhhhh.\" I couldn't help it. I couldn't help moaning with excitement at what I was doing, at how I was displaying myself. My body burned with shame, with embarrassment, that black hole of suspense and fear filling my body at the same time as I arched my back in excitement, my hands clutching at Kam's back as he used me. My stomach, my breasts pushed up against Kam, my knees clasped his ribs, my feet rode his hips, my pussy clasped his cock within me, embracing him, squeezing him, clamping down on him. Wanting him.\n\nWhen I felt the bed move, I almost choked. I had to open my eyes again. I did, I opened my eyes and I looked. Fan knelt beside me on the bed, naked. Jim's hands clamped down on Fan's hips, holding her tightly in place as he prepared to thrust himself into her. I shivered with a strange mixture of anger and excitement, watching Fan's face as she prepared to be taken. Watching her as she jerked and cried out softly, a little mewling sob of excitement as the swollen head of Jim's cock pierced her entrance. I could see him in profile, long and thick, the blue veins standing out along the length of his rigid shaft, longer than Kam and thicker. Much thicker. \n\nI found myself wondering how Fan could take all of him inside her. His cock was so big. And Fan was the same size as I was. But she was. I could see Jim's cock slowly easing its way into her.\n\n\"Nnnughhhhh,\" she moaned as he paused. She sank down onto her forearms, her head sinking to rest on her hands. \n\n\"Oooohhhhhh.\" I moaned in exquisite sympathy for her.\n\n\"Nnnuughhhhh,\" she groaned again. \"So big ... So big ... ohh fuck it's so big inside me. ...\" \n\nJim chuckled, looking down at me as he pushed himself all the way into Fan. She looked at me but her eyes were glazed, I wasn't sure if she was really seeing me.\n\n\"Sit back Kam, get your cock out of her, let me see Isabelle's cunt.\"\n\nI knew Jim wanted to see me. I knew Kam wanted him to see me. I lay on my back on our bed unmoving as Kam eased himself out of me. I felt the loss of him as I lay there naked, hands on the bed above my head, breathing hard, my legs spread wide, every part of my body exposed, lying just as I was when Kam withdrew himself from me. My body ached for him to renter me, to take me and use me. I wanted Kam back inside me and at the same time I found myself wanting Jim to look at me, to see me naked, see every part of me. Looking up at my husband as he knelt upright between my legs, his cock so rampantly erect and ready to re-enter me, I could see the desire on his face as he looked down at me. Looking at Jim, I could see the desire and excitement on his face as he looked at me while he moved in Fan.\n\nI saw my husband glance at Jim, seeing the expression on Jim's face. Kam looked away, back down at me, his eyes met mine. I could see the excitement there as he glanced from me to Jim to me. An excitement that my body shared as I lay there, waiting. I wanted Kam to move, I wanted him to take his cock and drive it back into me, I wanted his body on mine, possessing me, making me his. At the same time, Jim's eyes on me, watching me, looking at my naked body, that excited me too. I lay there, unmoving, exposing myself, displaying my naked body to another man, knowing that I was giving my husband pleasure by doing this, knowing that this excited him and gave him what he wanted. It was exciting for me too.\n\n\"Your wife looks fucking hot, Kam.\" Jim's voice send shivers of excitement up and down my body, made my insides clench, making my pussy do a frightened little dance as well as pulse wetly.\n\n\"She is hot isn't she?\" Kam's voice was proud. Proud of me. He looked down at me and smiled. I gasped, my body taut, butterflies warring with scared excitement within me.\n\n\"Isabelle.\" Jim was speaking to me.\n\nI turned my head to look at him, my heart pounding like a rabbits. A timid little rabbit, too scared to flee. \"Yes,\" I gasped.\n\n\"Hold your breasts for Kam, he wants to suck on them.\"\n\nI looked at Kam. He looked down at me. He nodded. Heart pounding, I moved my hands to my breasts, to the sides of my breasts, cupping them, pushing them inwards and upwards, supporting them, offering them up to my husband as Jim had told me too. Obeying Jim as Kam so obviously wanted me too. Kam leaned forward, his hands now on the bed on either side of me, his mouth on one breast, licking, sucking, toying with one swollen nipple, sucking it into his mouth, releasing it, tonguing it. I shivered, moaning, my hips lifting with my need as his mouth on my breast send little ripples to my center.\n\n\"Isabelle ... Isabelle ... look at me...look at me.\" Jim's voice was firm, commanding.\n\nHelplessly, obediently, I dragged my eyes back to him, I looked at this stranger in my bed, as naked as Kam was, kneeling behind Fan, fucking Fan beside me, looking down at me, looking at my naked breasts, looking at me as I held my breasts for my husband's mouth to enjoy. I looked back, my mouth wide open, almost but not quite moaning as Kam's mouth suckled at me. My hands still held my breasts as his mouth moved from one to the other, offering my breasts for my husband's enjoyment, offering my breasts up for a stranger's eyes to look at. \n\nMy husband lifted his mouth from my breast, glanced sideways at Jim. He glanced back down at me, smiling. Jim's eyes held mine for a moment longer, ensuring my husband saw me looking at him, ensuring my husband saw the look on my face. Ensuring my husband heard what he said next.\n\n\"Fan, would you like to watch Kam's cock fuck Isabelle's cunt?\" His smile twisted my insides.\n\nFan turned her head sideways to look around at me. We looked at each other, my face burning. My eyes wide. Each time I thought I was getting used to what was happening, Jim or Kam shocked me a little more. Fan looked at me. She looked at me and then, slowly, she smiled. That slightly wicked smile of hers sending a little frisson through me. \n\n\"I'd love to Jim,\" she half-moaned, \"Isabelle's cunt looks so pretty.\"\n\nJim looked back at me, then at Kam. \"Would you like that Kam,\" he murmured, \"would you like Fan to watch your cock fucking Isabelle's cunt.\"\n\nKam looked down at me, his desires so transparent, so visible. My heart almost stopped. I knew, I knew what he wanted as he looked down at me. I looked back up at him, my mind whirling, spinning. I loved Kam, I'd done all this for him. I was on our bed, naked, Jim and Fan had already seem him fucking me, they'd seen all of me. They were seeing all of me as I lay there. I'd done this to excite Kam, there was no point in stopping now. I looked back at my husband and then I nodded, an almost imperceptible little nod, one that he alone saw. Kam smiled down at me, glanced at Jim, at Fan.\n\n\"Yes,\" he breathed. Nothing more, just a simple yes. Jim smiled. Fan moaned as he moved in her. Moaned again as Jim withdrew himself from her, eased his cock out of her. She moved, turning so that her face was level with my butt, close enough that I could feel her breath on my skin as she panted. Jim moved with her, knelt behind her, level with my head, looking down at me. His cock jutted outwards and upwards, erect, long, hard, thick, bigger than Kam's, much bigger. With Fan kneeling beside me, I could see her pussy, I could see her so clearly, as clearly as I had before in the sunroom when I'd touched her.\n\nNow, she was even more excited, her labial lips pinkly swollen, glistening wet, slightly parted, the small protrusion of her clitoris visible, her kneeling position next to my head making her pussy so visible to me. Jim's cock was equally visible, so close I could reach out and touch him. I could see every inch of him, the rigid hardness, the swollen head, the blue veins along his length, his balls, so large, dangling down. \n\n\"Move your knees back Isabelle,\" Jim breathed. \"All the way back, so that Fan can see your cunt.\"\n\n\"Like this,\" I gasped as I did what he wanted me to. As I obeyed. As I drew my knees back, so aware of Fan's eyes on me, looking at me, making my pussy throb wetly.\n\n\"Yeah, like that.\" Jim took his cock in one hand, guided it towards Fan, his eyes holding mine. I watched as the purple-red head of his cock pushed up against Fan's labial lips. I heard her gasp. I saw her body jerk at that contact. I saw her lips part easily, admitting the tip of Jim's cock. I saw Jim's hands grasp her hips, hold her. I saw his cock thrust slowly into her, his hips moving as he worked his cock into her pussy. \n\n\"Ohhhhh ... ohhh ... Ooohhh ... Ooohhhh ... Ooohhh.\" Fan sobbed as Jim worked his cock into her until, with a last movement, he was buried to the balls in her. His eyes had held mine the entire time he was working himself into her. Watching me. Watching me as I watched his cock enter Fan, sink deeply into her. Watching me as I lay there wanting my husband's cock in me in the same way.\n\n\"You want Kam's cock now, Isabelle?\" Jim asked me. I saw him look at Kam and grin. \"You want it the way Fan just got it?\"\n\n\"Please,\" I whispered. \"Ohhh please ... Please... I want it ... I want it...\" And I did. Very much.\n\nWas I begging Kam or was I begging Jim? It didn't matter. Kam didn't wait. Holding himself up on his extended arms, he thrust, his cock entered me, surged up inside me. He drove his length completely into me. Jim watched. Fan watched. They watched Kam's cock spread my lips, spread me around his thickness, push inside me, then slide all the way into my pussy and fill me.\n\n\"NNUGGGHHHHH.\" My head arched back, my back arched, my breasts quivered under the power of that thrust, a thrust that joined our bodies only at the juncture of my thighs, where Kam's cock penetrated me. He paused in me. Holding himself up on his extended arms. My body slowly relaxed, Kam eased himself back, his cock slowly leaving me. He thrust hard again, my body juddered. Jim watched me, watching Kam's cock using my pussy. He was watching me being fucked, seeing all of me. Enjoying looking at me being fucked just as Kam was enjoying Jim watching me being fucked.\n\n\"Ohhhhhhh,\" Fan sighed. Jim moved in her, easing himself out, out, his cock glistening, shining with her wetness, pausing, easing back slowly inside her. All while he watched Kam fucking me. Fucking me hard, his thrusts driving into me, jarring my body, bouncing my breasts as I lay before them.\n\nMy own gaze alternated between looking up at Kam and glancing up at Jim. He was fucking Fan but looking at me as he did so, watching me. Kam knew, he knew Jim was watching me as he fucked Fan and it seemed to inspire him to fuck me harder. His cock pounded into my pussy, hard and fast, the way I liked him to take me, no longer sliding but ramming in and out of me. And all the time I knew Fan was looking at me, looking at Kam's cock sliding in and out of my pussy the same way I was looking at Jim's cock sliding in and out of hers.\n\nI can't describe in words how that made me feel, seeing his cock moving in and out of Fan, shining with her wetness, so thick and hard and long, her lips stretched around his girth, clinging to him as he pulled back, the way she moaned as he slid into her. Watching Jim take Fan, I knew I must look like that myself and that thought stoked my excitement further. My moans echoed Fan's as my husband's cock used my pussy, my breasts quivering and bouncing in a way that Fan's didn't. My natural shyness hadn't dissipated, I was terrifyingly aware of my own exposure, but my desire to excite my husband, to offer him what he wanted, overrode my fear and my reluctance and my embarrassment.\n\n\"Your wife looks like she's a good little fuck,\" Jim's words were for Kam, his eyes were on me.\n\n\"Oh yeah, she is, she's a great fuck.\" Kam's reply was a long groan of pleasure. \"I love watching her tits bounce while I fuck her.\"\n\n\"So do I.\" Jim's smiled down at me.\n\n\"UUUGHHHHHHHH... UGHHHHHH ... UGHHHHHH.\" He did. They did. So did Jim. Kam was making my breast bounce with every thrust, knowing what he was doing. The looks on his face and Jim's said they both knew.\n\n\"Her cunt sounds really wet ... Fan...?\"\n\n\"Uhhh uhhh yeah ...\" Fan was gasping.\n\nTo Fan. \"How wet is Isabelle's cunt?\" Oh god! How embarrassing. To me, \"Pull your knees back further Isabelle, give Fan a good look.\"\n\n\"She's really wet Jim, she's so wet. I can hear her.\"\n\nOh god! Fan! My face burned. Jim saw, Jim smiled. Kam slowed his pace a little. \n\n\"Let's try this then.\" Jim's smile twisted me inside yet again. \"I want to see your feet in the air Isabelle.\"\n\n\"Uhhhhh.\" I gasped. My knees were already as far back as I could draw them. I raised one foot slowly, then the other, opening myself further to Kam.\n\n\"Good, but not good enough,\" Jim smiled. \"Here, let me.\" His hand snaked out and down, firmly grasping one of my ankles, pulling it back, back further, stretching my leg muscles. \"Tuck your ankles under Kam's shoulder's Isabelle.\"\n\n\"Nnnuuughhhhhhhh.\" Kam lifted one arm around my leg as Jim pulled my ankle back, my other ankle followed and now I found myself with both ankles pinned against my husband's shoulders.",
        "\"Very good Isabelle,\" Jim murmured. \"I like that view.\" I had no idea. Stretched as I was, it was impossible to see what I looked like but I was sure it was obscenely explicit. And Kam's cock was busy now too, busy fucking me. Fucking me vigorously. His face told me he was definitely enjoying this. Me? All I could do was lie there moaning and gasping as my husband had me.\n\nWithout a word. Jim pulled out of Fan, moved her away from me, lay on his back beside me. Fan was sitting back and looking at me now, her face flushed with excitement. \n\n\"Sit on me, Fan.\"\n\nShe did. Oh my god, Fan did. I watched as she knelt over Jim, took his cock in her hand and slowly sank herself down on him, her head thrown back, eyes wide, moaning as she slowly eased herself down until all of him was inside her. How could she do that? His cock was so big? I shivered. I shivered as she began to move on him, her hands on his chest, rising and falling as she fucked him. As she rode him. Kam's weight came down on me, his mouth came down on mine, his hands under me, my legs pinned back, so far back that my feet were beside my ears. He rode me hard, long hard thrusts that made me moan and squeal with enjoyment as I felt him thrusting himself into me.\n\nJim spoke again, his eyes on me. \"Isabelle, I want to watch Kam's cock fuck your cunt while Fan fucks me.\"\n\n\"UUUUGHHHHHH... uughhkay...\" \n\nSo did Kam, I could feel the effect Jim's words had on him. \n\n\"How?\" Kam gasped, pausing for a moment.\n\n\"Isabelle can decide,\" Jim replied.\n\nI looked sideways at Jim, my face burning. He smiled, said nothing. How did he want to watch me? My mind whirled. Spun. \"Turn me over,\" I gasped to my husband, \"I can kneel for you and Jim can watch me at the same time.\" God, how embarrassing. I was telling my husband how to fuck me so another man could watch me. My face burned all over again. My entire body burned. Kam said nothing for a moment, just looking down at me, half-smiling before he eased himself out of me to sit back on his heels waiting, watching me. I closed my eyes and then, in a hurried move, I rolled over and rose. Now it was my turn to kneel on my hands and knees before Kam, my long black hair hanging down to the bed, concealing my face for an instant before I flicked it back to hang on the other side so that I could watch Jim. So that I could watch Jim watching me. So that Jim could watch me.\n\nBehind me, Kam moved closer, nudging my knees wider apart, guiding himself to my wide-open entrance as I knelt for him. I moaned softly as the head of his cock brushed against me. He pushed, sliding so easily into me, slowly burying himself in my pussy, his hands lightly holding my hips. I moaned again, not quite so softly, as his cock filled me. I moaned again as he began to move, a steady sliding rhythm inside me, luxuriating again in the feel of her his cock inside my clasping tightness, taking me, using me the way I wanted to be taken and used.\n\nMy eyes met Jim's as Kam buried himself to the hilt inside me, my mouth forming an \"O\" as I gasped, feeling my breasts quivering under the impact of my husband's body against mine. Jim smiled at me. A smile that carried its own message of lascivious excitement, of enjoyment, of his pleasure at watching me being taken. A smile that made me tighten inside so that behind me, my husband groaned in pleasure.\n\n\"You like that don't you Isabella?\" Jim's question was breathed for my ears, and mine alone. Fan was lost in her own world as she rode Jim, head thrown back, groaning as she sank herself down on him. Behind me, my husband's grunts drowned out Jim's whispered question from his ears.\n\nDid I like this? Did I like Jim watching me while Kam fucked me? I asked myself that as my husband's cock eased in and out of my pussy, every movement sending ripples of excitement and pleasure through me, ripples that found an echo in the embarrassment and excitement of Jim watching me, in the excitement of knowing Fan was riding Jim's cock beside me. I could feel my own growing excitement as Kam knelt behind me, his hands holding my hips, feeling my body quivering and trembling, feeling the flooding slipperiness within my pussy as he continued to move within me at a leisurely pace, drawing out the excitement. And it was exciting. \n\nI'd never felt so exposed, so naked, not even that first time I had timidly allowed Kam to undress me and make love to me. Then, I'd been shy about him seeing me naked. Now, as Kam fucked me, I could see Jim's eyes on my naked body, watching me, listening to my excitement, watching my increasingly jerky and uncoordinated responses. Hearing the little moans and the sobbing cries I began to make involuntarily. I'd never done anything like this before. Never even contemplated doing anything like this. I was finding it both wildly shameful and embarrassing and confusingly arousing at one and the same time. I couldn't understand that? \n\nMy body burned with shame at Jim seeing me naked, at knowing he was watching Kam taking me. At the same time it was also stimulating my excitement, every movement of Kam inside me seemed more arousing. Jim's smiled and his repeated question, \"You like that don't you Isabella?\" brought me back from my introspection. \n\nI looked at him, wide-eyed, my breath exhaled in gasps controlled by Kam's thrusting into me. I couldn't reply, I had no idea what to say. Jim didn't seem to mind, the smile, the look on his face seemed to say that he understood what I was feeling, what I was thinking, my confusion, my shame, my excitement. Everything.\n\n\"Fuck her harder Kam, I want to see her tits bouncing.\" Jim's eyes held mine as he spoke.\n\n\"UUUGHHHHH.\" I couldn't help that grunt as my husband obeyed immediately, ramming his cock hard into me, his pelvis smacking up against the backs of my thighs, my breasts quivering wildly as that impact was transmitted through my body. \"UUGHHHH ... NNUUGHHH ... HHNUUGHHH...\" Again and again.\n\n\"I like that,\" Jim smiled, his words meant for my ears only. \"Do you?\"\n\n\"Yes,\" I gasped, \"Yes ... yes I like it.\" I was having trouble holding myself up, my arms were on losing their strength, I wanted to sink forward and rest my weight on my forearms. But I wanted Jim to see me as well. Why did I want that? I didn't know, but I did, his watching me was doing things to me. Interrupting my somewhat incoherent thoughts, Kam sank back onto his heels, holding my hips tightly, pulling me back with him, forcing me to rise so that I was kneeling upright astride him, my back to him, seated on him, my naked body even more on display than when I had been on all fours. I sobbed wordlessly as his hands lifted me, held me still with just the head of his shaft inside me, then forced me down, slowly impaling me on his engorged length. \n\nMy head drooped forward, my hair fell down, covering my face and my breasts as I watched Jim's eyes focused on the juncture of our bodies. Kam reached in front of me, brushed my hair back over my shoulder. Now I looked down at Jim as he lay on his back, Fan rising and falling on him just as I rose and fell on Kam. Gentle movements that I made at Kam's urging, feeling his cock emerge from me as I rose, then slide back in as I lowered myself. My eyes looked at Jim, watched him, seeing where his eyes looked. Knowing what he was looking at.\n\n\"She looks good doesn't she?\" Kam groaned over my shoulder as I sank myself down on him, feeling him slide up inside me.\n\n\"Fuck yeah,\" Jim smiled up at me. \"I like seeing her cunt wrapped around your cock Kam. She looks nice and tight.\"\n\n\"Oh yeah, she is,\" my husband said, and I could hear the smile in his voice. \"Isabelle's got a nice tight little cunt.\"\n\nJim surprised me then. Without a word, he lifted Fan up, he turned her, turned her onto her hands and knees, kneeling behind her so that he was facing me, almost touching me. Looking down, I could see his cock, inches from me, rigidly erect, shining with Fan's wetness, the head swollen and huge. \n\n\"Watch this Isabelle,\" he said, his eyes on me for a moment. My eyes dropped. Dropped to watch his cock press up against Fan, seeing Fan part for him, take that swollen head inside her body. Hear her groan as his shaft slowly sank into her, all of it. \n\n\"Ohhhhhhhh.\" Was that excitement at seeing what Jim was doing to Fan, or at what Kam was doing to me as I watched. I had no idea but it didn't matter. I was moving faster as I rose and fell on Kam, his hands on my hips helping move me, my breasts quivering as Kam's cock used my pussy. I could sense Kam's growing excitement as he listened to the noises Jim and Fan were making - the cries and moans from Fan, Jim grunting, the slap of flesh on flesh, the rhythmic squeaking of our bed as all four of us moved. My own soft moans, the wet noises from my pussy as Kam had me, Kam's heavy breathing, the wet noises from Fan's pussy.\n\nMy eyes followed the movements of Jim's cock, in, out, in, out, hypnotized by that long thick pale shaft emerging from and sinking into Fan's olive brown body in a steady rhythm. So beautiful to watch, so arousing. And just as I watched Jim taking Fan, Jim was watching me, watching Kam taking me, watching me riding Kam. Jim's eyes looked into mine. He smiled. He smiled and he leaned forward and just like that he kissed me. His mouth met mine, his lips crushed down on mine. Surprised, I found my mouth opening wide to him, his tongue suddenly deep in my mouth and he was kissing me as he fucked Fan. Kissing me as Kam fucked me. Kissing me passionately. And I was kissing him back.\n\nI couldn't stop. Jim's mouth seemed locked to mine, his tongue deep in my mouth, one of his hand's snaked across to cup one of my breasts, cup me and hold me and run his thumb across my nipple as I slowly rode my husband's cock, feeling him inside me while Jim's tongue possessed my mouth. I moaned softly, I moaned into Jim's mouth as he kissed me, as my tongue hesitantly moved against Jim's, danced with Jim's, met Jim's and caressed his as his caressed mine. \n\n\"Oh fuck Isabelle ... yes ... yes...\" Kam's exclamation in my ear sent a shuddering thrill through my entire body so that I moaned again. His hands on my hips moved me more urgently, his cock on the verge of popping out of me as he moved. \n\n\"Uhhghhhh ... Nnngggg ... Uuughhhh ... nnnggggg...\" I was moaning and gasping into Jim's mouth now, helpless between them, my pussy Kam's, my mouth Jim's. Each of them had a hand on my breasts, one each, squeezing and holding them, playing with my nipples so that I squealed. Helpless jelly, I began to sink forward and now Jim released me, released my mouth, my breast. I sank forward, sank to my hands and knees as my husband's excitement grew. Now his thrusts into me became more powerful, his body smacking up against mine with each penetrating drive of his cock into me. His hands on my hips controlling me, holding me, pulling me back onto him. Controlling me. \n\nNow I no longer watched Jim taking Fan. I sank down, onto my forearms, my head resting on the backs of my hands, gasping as my husband's cock thrust in and out of me. My whole mind, every conscious thought, was now centered on my husband taking me, on the pleasure he was giving me, on the pleasure my body was giving him as he took me. Faster. Harder. \n\n\"Please ...oh pleeeease,\" I heard myself moaning, no longer a whispered plea but a clearly audible moaning sob of excitement and need. Now I was pushing myself back onto Kam as he thrust, wanting him so much.\n\n\"On their backs Kam,\" Jim's growl meant nothing to me. \"Let's fuck them both on their backs. Side by side.\" Those words meant nothing until Kam pushed me forward and guided me over, onto my back, where I found myself lying beside Fan. Kam and Jim looked down at us, side by side, the looks on their faces identical. Desire. Lust. Jim moved down onto Fan as Kam moved down onto me. He found me, entered me, filled me hard as my hands clutched at his back. Beside me, Fan moaned, a moan that sounded almost identical to mine.\n\nKam rode me. He rode me hard, driving his cock into me, spreading my legs wide so that my knees and Fan's brushed each others as Jim rode Fan. I wanted more, more more more. I no longer felt any embarrassment or shame. Now all I felt was that overriding excitement, that desire for Kam to have me, to satisfy himself in me, to use my pussy until he came in me. Gazing up into his face, his weight on me, my thighs cradling him, my pussy welcoming his cock, I couldn't think, all I could do was experience.\n\nBeside me, I sensed rather than saw Fan's hands reach down and grip her ankles, pulling them up and back. I saw her then, I saw what she was doing and I did the same for Kam. I drew my knees back, as far back as I could, kicked my feet up, clasped my ankles and pulled, pulled them down and back just as Fan was doing. Kam groaned and instantly I was more open to him than I had ever been before. I felt Kam's cock press inwards deeper than I had ever done. I quivered and groaned, beads of sweat breaking out across my forehead. \n\n\"Nnnughhhhh.\" Beside me, Fan half-groaned, half grunted, then \"Ohhhh please ... please ... Fuck me hard ... I want you to fuck me hard.\" Jim did. I could hear them. I could feel what they were doing through the shared bed, how hard Jim was taking her. I wanted Kam like that too.\n\n\"Kam...\" I moaned, \"Kam ... Fuck me hard ... I want you to fuck me hard...\" I didn't care that Jim could hear me, that Fan could hear me. I wanted them to hear me. I wanted Kam to fuck me hard, as hard as he wanted. I was surprised that I could get this carried away with another couple in the same room a mere foot or two from me. Afterwards, I realized that was exactly why I was so excited, for the first time I was actually naked and being fucked in full view of someone else, but at the time it didn't dawn on me. I was just totally carried away with what was happening to me, pleading with Kam to fuck me hard as my hands gripped my own ankles and pulled them back. Beside me, Fan was almost a mirror image of me, our actions and our words echoing each other. \n\n\"Do you like that Isabelle ... Do you like that?\" Kam groaned, one hand under my butt, lifting me a little, driving his cock into me, my pussy making wet wet noises.\n\n\"Oh yes ... yes,\" I moaned, my hands holding my ankles, pulling them back. I was so open to my husband, so open for his cock to take. I could feel every movement of his cock inside me, feel his balls bouncing against my butt as he filled me. \"Ohh yes ... I love your cock ... Love your cock fucking me...\"\n\n\"Fuck her hard Kam,\" Jim groaned, right beside us. \"Fuck Isabelle hard.\"\n\nKam did. Kam fucked me hard. I could feel his cock swelling inside me, the way it did when he was about to cum. \"Fuck, Isabelle,\" he groaned. \"Oh fuck fuck fuck I love your tight little cunt Isabelle.\" \n\nI could feel his cock spearing into me, impaling me, his pelvis slapping up with each thrust. Beneath him, I spread myself as wide as I could, opened myself to him, giving myself to my husband. With a groan of sheer pleasure that I knew so well, Kam threw his head back, his cock seemed to swell inside me, I felt him throb, felt him as he came inside me. \n\n\"Oooohhhhhhh ... oohhhhh ... oooohhhh\" I cried out as his cum spurted out inside me, welcome spurts that filled my pussy with his semen. My pussy wanted what he was giving me, welcomed his throbbing spurts as he reached his culmination, squeezing him, milking him as I quivered beneath him. But all too soon, Kam rolled off me, breathing like a locomotive. Too soon. Too soon. My body wanted him to continue fucking me. I needed what he was doing to me. Needed more.\n\nFan was moaning as Jim continued to hammer himself into her. I turned my head sideways, looking at her, looking at Jim, their faces, their expressions. The passion, the determination on Jim's face. The eager surrender and excitement on Fan's as his cock plunged into her, his hips lifting and falling steadily.\n\nJim's head turned, he looked at me. He looked at me, then at Kam and he smiled. \n\n\"Hey Kam, if you're finished, you mind if I borrow your wife?\" he grunted.\n\nOh my god! He wanted to fuck me. Jim wanted to fuck me. I almost had another heart attack.\n\nKam looked shocked. Shocked and surprised. Then excited. \"Yeah, sure, go ahead,\" he said. Me, I wasn't sure what I was feeling. Shock, definitely. Surprise for sure. Fear. Excitement. One thing I didn't say was no. There was not an ounce of no in me right then.\n\n\"Stay there Isabelle.\" Jim looked at me. \"Fan's going to kneel over you.\"\n\nHis hands abruptly rolled Fan over, pulled her up onto her knees, eased her around until she was kneeling over me, her knees either side of my head. Looking up, her pussy was directly above my face, mere inches from my eyes, wet, her lips pink and swollen and parted so that I could see the distended little opening that was the entrance to her pussy. I could smell the scent of her. Jim moved in behind her, his balls dangling, almost brushing my face, his cock large and hard and shining with Fan's wetness. I watched, hypnotized, as that swollen and engorged length positioned itself to enter Fan inches above my face.\n\nJim glanced down at me. \"Use your fingers Isabelle, spread Fan open for me.\"\n\nI gasped. I gasped and I did what he asked me to do, my own sex pulsing hotly. I reached up with my hands. My fingertips brushed Fan's lips open, feeling how slippery she was, feeling her shivering excitement. Jim's cock eased forwards, brushing my fingers as I held Fan open, pushing up against her, then entering her, his cock sliding inwards between my fingers. I felt her body react, the tautness in her muscles as he slid into her, the way her body shivered and jerked as he filled her. He pushed inwards, his balls brushing my forehead, my nose, filling my vision, brushing the backs of my hands as he pressed himself fully into her.\n\nHe drew back, thrust again, again and again, fucking her mere inches above my eyes. My own pussy throbbed wetly, Kam's cum oozing from me as I lay there. My pussy wanted a cock, I wanted to be fucked and Kam had finished. It wasn't an unfamiliar feeling, it was one I was used to but seeing Jim's cock, still so hard, so diligently fucking Fan, I was jealous. Those jealous thoughts were interrupted by Jim's voice yet again.\n\n\"That's it Fan,\" I heard Jim growl above me somewhere, \"get him nice and hard so he can fuck Isabelle again, babe.\"\n\nLooking down between Fan and I, I could see Kam. Or at least, his thighs. And his balls. He'd shuffled around. He was kneeling between my legs. Fan was sucking his cock. Oh my god! Fan was sucking my husband's cock right after he'd finished in me. His cock must taste of me. Me and Kam's cum. How could she? How could Kam? How could he let her suck his cock? I should have felt upset. Jealous. Angry. But I didn't. All I felt was a sudden surge of excitement that left me limp. \n\nAbove me, I watched Jim's cock easing slowly in and out of Fan, drawing her lips back as he withdrew, slowly pushing into her, shining with her wetness. His balls brushed across my face as he moved, brushing across my skin. The sight held me hypnotized, his cock so close to me, close enough to touch, right before my eyes. I'd never seen anything, never imagined a sight like this. So sensual, so explicitly sexual, so heart-stoppingly exciting.\n\n\"He's hard now.\" Fan sounded triumphant. \n\n\"Keep sucking on him for fuck's sake.\" Jim's sounded urgent. He was moving faster now, fucking Fan harder, more urgently. I saw him cum almost immediately after his gasped words. I saw his cock throbbing as he pumped his cum into Fan. I heard his grunting satisfaction, heard Fan's muffled moans as he came inside her. I saw his cum oozing out from around his hard thrusting cock, a thin film of white seeping out where her lips clasped the thickness of his cockshaft above my face.",
        "Jim grunted in satisfaction, thrusting hard into Fan's cunt, more cum oozed out, more with every throb of his cock, dripping onto my face now, thick threads that trailed down to my face, landing on my cheeks, my nose, my chin, my lips. As I opened my mouth to gasp, trailing downwards into my mouth, onto my tongue.\n\n\"Ohhh fuck yeah, your turn Kam,\" Jim gasped, abruptly withdrawing his cock from her. His shaft bounced wetly across my face, cum trailing from it in thick ropes. Fan's distended opening, unplugged, suddenly released a gush of thick white cum that poured into my wide open mouth. Surprised, I swallowed without thinking, tasting Jim's semen, salty and bitter. I was licking it off my lips when Jim's hands rolled Fan off me and Kam descended on me in a rush, his cock surging into my pussy, his body pressing heavily on mine, spreading me wide, taking me hard.\n\n\"Uuughhohh .. Ooohh ... ohhhh.\" I welcomed that weight, welcomed Kam's cock. I wanted it badly, I wanted to be fucked and now Kam was giving me what I needed, hard. This time there was no gentle love-making, no slowly sliding thrusts. No, Kam fucked me. His cock slammed into me, my cum-filled pussy wetly squelching as he pounded himself into me. Sobbing with excitement and pleasure, I drew my knees back, crying out as his cock pistoned into me, his pelvis slapping noisily against the backs of my thighs where I cradled him, hearing those wet squelching noises from my pussy with every slamming of his cock into me.\n\n\"Yes ... yes ... yes...\" My back arched, my breasts pushed up against his chest, my body met his everywhere, my hands clutching at him as I my excitement grew. And grew. And grew. Kam's mouth came down on mine, kissing me, his tongue deep in my mouth, a hard and urgent kiss that matched the movements of his cock inside me. His eyes widened a little as he tasted the salty bitter residue that coated my lips and tongue. His pounding thrusts took on a sudden new urgency and power and all of a sudden my own arousal soared.\n\nJim's face was beside Kam, he was lying next to us, looking down at me as my husband fucked me, one of his hands resting on my knee where I'd drawn it back. Kam's mouth lifted from mine, he was breathing in great panting gasps as his hips pounded me into the bed. Jim smiled as I glanced at him, sobbing.\n\n\"Good girl, Isabelle,\" Jim breathed, and then his mouth closed on mine, possessed mine, kissing me hard as my husband fucked me. I wanted more. My feet dropped to the bed, my legs splayed wide, my hips lifted off the bed and I was close, so close. I'd never been closer and I wanted it, I wanted it so much and I was squealing into Jim's mouth as he kissed me. When his mouth lifted from mine I cried out.\n\n\"Cum for me Isabelle,\" Jim breathed, \"cum for me.\" And I felt his hand under my butt, lifting me, pushing me up against Kam, squeezing one cheek hard as his mouth clamped down on mine again. It was enough, his mouthy possessing mined and his hand on my butt, enough to propel me to the top of that suddenly cresting wave inside me.\n\n\"Nnnnaaaaagggghhhhooohhhhhhh.\" I could hear myself wailing into Jim's mouth as my pussy abruptly spasmed around Kam's cock, clutching at him, clasping him, dancing wildly on him as he filled me, as my pleasure soared and soared, higher and higher until I couldn't breathe, I couldn't think. All I could do was experience as that wave took me to an unbearable height before crashing down in a golden flood that washed through me in a surging tide so powerful I thought I was going to die.\n\nKam groaned and thrust hard into me. Even in the midst of that climax sweeping through me I felt him shudder, felt his cock pulsing, felt him grinding against me as his cum spurted into me and that only made it better. Much better. My clitoris pulsed and Kam ground against me again, urging another wave of pleasure to sweep through me as my legs turned to jelly and I collapsed down onto the bed, moaning into Jim's mouth one last time before his lips released me.\n\nI closed my eyes, quivering, trembling, trying to remember how to breath, then sobbing for breath as Kam rolled of me, exhausted. I felt so amazingly good, I felt as if I was glowing. But I also felt shattered, shattered and exhausted and sleep claimed me almost instantly. My last thought was that it should have been embarrassing to have had sex in front of my husband's receptionist and one of his clients. I couldn't think of anything that should have been more embarrassing, but strangely, I didn't feel embarrassed at all. Just satisfied. Very very satisfied. Then sleep claimed me.\n\n<p align=\"center\"> * * * * * * * * </p>\n\nAs it turned out, I found out what was more embarrassing early the next morning. \n\nWaking up naked in bed with your husband, your husband's receptionist and one of your husband's client's, knowing you'd been naked and fucked right next to them the night before. God, had I really done that? Tell me I hadn't.\n\nI closed my eyes tight. \n\nWhen I opened them again Fan and Jim hadn't vanished. They were still there, naked on our bed, fast asleep. Kam was snoring softly. I had no idea what the etiquette was for this sort of thing. I hadn't thought to ask. Not that I would have asked even if I'd thought about it. And I did have to go to work. It wasn't like I was in bed with my boss or one of my clients.\n\nI closed my eyes again, not quite sure what I was thinking as I lay there with Kam on one side, Fan on the other, Jim on the far side of Fan. I mean, I was naked. Fan was naked. Jim was naked. What was I supposed to do? I wasn't sure but I knew I was tired. I was almost asleep again when I felt Fan moving, slipping down the bed. The bathroom door opened, then shut. Now I was alone and naked in bed with my husband and another man. Fan was no longer there. No longer with us. No longer shielding me. It felt ... very different. \n\nKam stirred against me. Turned in towards my back as I lay on my side, facing him. I could feel him, his cock, hard against my thigh. My heart beat faster. Was he going to take me? Now? In the morning light where Jim could see everything. Before I'd even had a shower. I could feel myself, slightly sticky with dried sweat and Kam's cum. I could feel Kam as well. Hard.\n\nMy pussy tightened, I could feel myself growing slippery, my nipples starting to harden. Would I let him? I knew I would if he wanted to. That was why I'd done this with Fan and Jim. To excite Kam. Well, Kam was excited. I could feel that. He'd never done it to me early in the morning before. Never! Mind you, I'd never climaxed before while he made love to me. Not until last night.\n\nI felt Jim stir on the bed. Turn, stretch. I kept my eyes closed, breathing slowly.\n\n\"Isabelle still asleep?\" Jim's voice was a whisper.\n\n\"Yeah, must be tired out,\" my husband whispered back over my head.\n\n\"Well, no surprises there, you sure fucked her hard last night,\" Jim chuckled quietly.\n\n\"So how was Fan?\" my husband whispered back. \"You looked like you were enjoying her last night.\"\n\nJim's chuckle was almost inaudible. \"Fuck, she's good. Talk about a tight little cunt. Mind you, Isabelle was looking pretty wild, that was something, watching you fuck her. You're a lucky man, Kam, if she wasn't your wife I'd be chasing her tail myself...\"\n\nI felt Kam's cock pulse against my butt. I felt really good. Good but embarrassed. \n\n\"So how tight was Fan?\" Kam sounded intrigued. Kam!\n\n\"So tight I thought she was going to circumcise me. Fuck she's good Kam. Amazing. Thanks buddy. That was one hell of a night.\"\n\nKam chuckled softly. A throaty little sound that I liked. \"It hasn't finished yet,\" he whispered.\n\nJim asked my question for me. \"What did you have in mind?\"\n\nI stirred sleepily, moved, eased myself from my side facing Kam onto my back, hearing Jim's sudden intake of breath. I guess he liked what he was looking at. Lying on my back, I was exposed, naked. Completely on display, every inch of my body there for Jim as well as my husband to look at. To see. I kept my eyes closed, my breathing steady, but I wanted to moan and blush and hide my face and spread my legs. I'd deliberately exposed myself to Jim as well as Kam, exposed all of me, naked. I felt very very wicked.\n\n\"This,\" Kam whispered, his hand on my hip urging me to roll towards Jim. After a brief moment's hesitation, I rolled as his hands urged me to, onto my side, my back to Kam, close enough to Jim to feel his warmth, my knees brushing against him. Kam's hand caressed my butt, I felt him slide down in the bed, down behind me, his erection hard against me now, bringing a further flood of wetness to my pussy. What was he planning? What did he mean to do?\n\nHis cock moved, I felt him moving against my butt, the head of his cock nudging my entrance. Was he really? My heart beat faster, I felt that flooding wetness and heat within. His cock nudged at me, my lips parted for him with a sudden slippery ease, the head of his cock eased gently into me, paused. His hand clamped down on my hip, holding me. \n\n\"You liked watching Isabelle being fucked last night?\" He was still whispering.\n\n\"Oh yeah man, fuck that was hot Kam.\" So was Jim.\n\n\"You want to watch her being fucked again?\" He was going to. He was going to. Right in front of Jim. Oh my God! Oh my god! I felt like a teenager again, heart-felt suspense, fear, excitement, confusion. Was I wasn't I was I? I knew I was as I lay there waiting. I knew he was going to.\n\n\"Yeah, I'd love that Kam, I loved watching her tits bounce while you fucked her, your wife's got the most gorgeous pair of tits I've ever seen.\"\n\nJesus. Oh Jesus Kam. Please. No! Yes! No! Yes! Oh no! Oh my god! Oh god he was going to, I absolutely knew that and I was afraid and I was excited and I was melting onto his cock. I could feel him easing deeper into me as I opened to him, as my excitement grew.\n\n\"Yeah, well, watch this Jim.\"\n\n\"NNNUUUGGGGGHHHHHHH!\" My eyes flew wide open in an instant as Kam rammed his cock into me to the hilt, burying his entire length in my pussy in one hard thrust that jerked my entire body, brought a heartfelt groan from deep within me, made my breasts quiver with the power of that ramrodding penetration. It felt so good when he took me like that. I was so wet, so wet and slippery, his cock hammered home inside me, impaling me, filling me, startling me so that I was wide awake in an instant, my eyes looking straight into Jim's as they flew open.\n\n\"Morning Isabelle.\" Jim smiled.\n\n\"HHHNNNUUUUGGGHHHHHH!\" Kam drew back, drew back and thrust himself into me again, bringing a groan from me, juddering my body, moving me on the bed so that my lips almost touched Jim's. The tip of my nose did. My hand flailed wildly, clutching at straws, clutching at Jim, holding him as Kam thrust into me again and again and again. \n\n\"UUGHHHHHH ... NNGGGHHHH ... HHHGGGNNNNUUHHH...\" I was helpless, completely helpless. All I could do was lie there clinging to Jim, facing Jim, my pussy a willingly wet and slippery receptacle for Kam's cock to move within. I was there for Kam to fuck and he was. He was fucking me.\n\n\"You like the way her tits are bouncing round,\" Kam gasped, driving his cock into me again, so hard, so powerful, his pelvis slapping up against my butt and the backs of my thighs. My boobs bounced, quivered, my nipples so hard and swollen.\n\n\"Love it Kam, fuck her harder man, make her's tits really bounce.\" Jim's eyes held me transfixed. Embarrassment. Shame. Humiliation. Excitement. Fear. Desire. Confusion. All warred within me. No, I shouldn't! Yes, I wanted this! Yes yes yes! Oh no! Oh god yes! I was ashamed and embarrassed that Jim was watching Kam fuck me. I was excited. Excited by Kam's fucking me. Excited by Jim watching me. Kam fucked me harder, jarring my body with every thrust, grunting with the exertion of using me hard. His cock drove into me, pulling back until only the head was inside me, thrusting hard up into me for its full length, pausing, drawing back, repeating. \n\n\"Uggghhh.\" I groaned, again and again. \"Ugghhh ... ughhh ... ughhh ... ughhh.\" Short choppy groans to match Kam's short hard thrusts. My nose was brushing Jim's with every thrust of Kam's cock into me, my exhaled breath panted into his face.\n\n\"Fuck you look gorgeous when you're being fucked Isabelle.\" His whisper was meant for my ears alone. One of his hands moved up and cupped one of my breasts, held my quivering boob, played across my swollen nipple, sending a ripple right through my body. He smiled, thumbing my nipple, the sensation riding my nervous system all the way to my throbbing clitoris. My breasts quivered with each of Kam's driving thrusts, those quivers transmitted to Jim's hand where he held me. My fingers dug into Jim's shoulder, clutching at him as I usually clutched at my husband when he took me.\n\nMy eyes looked blindly into Jim's as my husband fucked me.\n\n\"You love it don't you Isabelle?\" Jim breathed, his hand holding one breast, \"you love Kam fucking you hard don't you?\"\n\n\"Uuughhhh,\" I groaned, \"Yuuughhh ... Yes ... yes ... yes ... yeuughhh.\" I gazed into Jim's face, feeling my husband's cock filling me, moving in me, using my pussy. Trying to push myself back on him.\n\n\"You like me watching Kam fuck you too, don't you?\" His eyes held me. Kam's cock impaled me. \n\n\"Uuughhhh,\" I groaned, \"Uggghhh ... Nuughhh ... Yyughhhh...\" I did. To my shame, I did. But I wasn't going to say it. Just thinking about it had my pussy doing a spastic little dance around Kam's cock.\n\n\"Are Isabelle's tits bouncing enough for you Jim,\" my husband grunted.\n\n\"UUUGHHHH.\" Christ, it felt like they were to me. \"UUUGHHHHHH.\"\n\nJim smiled. He smiled and his mouth nuzzled at my neck, licking and sucking and gently biting me. Behind me, Kam grunting even more loudly with every thrust, pressing into me, his cock driving deep. I moaned softly, Jim's lips roaming over my neck, his erect cock jerking and bobbing before me, his hand on my breast, massaging me, cupping and lifting me. Holding my swollen nipple between the light pinch of his thumb and forefinger. My husband was fucking me while Jim was kissing and caressing me, I was caught between two naked and aroused me, my body juddering as I was taken. Jim's hand on my body was becoming bolder now, roaming not just my over breasts but over my stomach, my arms, my thighs. \n\nHis lips trailed across my cheek, his eyes looked into mine as I panted into his face, his hand left my breast to thread through my hair. \"I want to kiss you again Isabelle, I want to kiss you while Kam fucks you.\" He didn't wait for a reply, not that I was capable of one. His mouth met mine, his lips parted mine, his tongue pressed gently inside as I juddered under the impact of Kam's thrusts, knowing Jim could feel what was happening to me through our joined mouths, my sobbing breathes, exhaled into his mouth.\n\n\"Look at me Isabelle,\" Jim whispered when that kiss ended, \"Look at me while Kam fucks you. Look into my eyes...\"\n\nI obeyed. I met his gaze as I met Kam's stroking thrusts from behind and he kissed me again, his hand running feely over my quivering breasts. Now, without thinking, as his hot sweet kisses possessed my mouth, my hand left Jim's shoulder and clasped his cock, held him in my fingers, silky steel hot in my clasp. Hot and hard. My mind wrapped itself around what I was doing as my fingers wrapped themselves around his cock. Kam. Kam's cock was in me. Fucking me. I was holding Jim's cock in my hand. Two cocks. I wasn't sure what to do, but I could feel Kam's excitement. I could see Jim's face. \n\nJim's hand moved down to rest on mine where he clasped me. His fingers wrapped around mine, he moved my hand, slowly, stroking his length as Kam fucked me. I saw his eyes, saw Jim's face, saw the pleasure there, the desire as my hand moved on him, feeling his length, feeling his arousal. When his hand lifted from mine, I continued to stroke him without thinking, not wanting to think about what I was doing, wanting only to do it. To pleasure Jim as well as my husband.\n\n\"Jesus Kam,\" Jim groaned. \"Sweet fucking Jesus.\" His hand was massaging my breast, cupping it, moving it, squeezing my swollen nipple, \"That's so fucking hot watching you two.\"\n\n\"Stop watching and join in Jim,\" Kam grunted, his cock slamming into me, my body juddering, \"You like Isabelle's tits don't you?\"\n\n\"God yes,\" Jim groaned. I remembered his hands on my breasts last night, when I'd been on my hands and knees on the bed beside him, kneading me with one hand while Fan sat on him. Yes, he liked my tits. \n\n\"You want to fuck her tits while I fuck her cunt?\"\n\nMy heart almost exploded. My husband was asking another man to fuck my boobs? How did you do that? I mean, No! No Way! No Kam! No no no!\n\n\"Fuck yes,\" Jim groaned, \"you don't mind?\"\n\n\"Fuck no,\" my husband grunted, his cock burying itself in me yet again. \"I want to watch you fuck her tits while he I fuck her cunt.\"\n\nNo! No! \"Nnnuughhhh!\"\n\nWhat about me? What about asking me? I wanted to say that. But all I managed was another \"Ugghhhhh.\" And I didn't even say that. It was more of a groan. Not even a real groan. Just the breath driven from me by the power of Kam's thrusts into me. It felt so amazingly good. Oh fuck yes, keep fucking me hard Kam, keep fucking me like that. Oh please keep fucking me like that. I didn't care what Jim did as long as he didn't try and actually do it to me. As long as Kam kept fucking me like this.\n\nKam did.\n\nJim didn't fuck my tits. Not right away. His hand left my breast. It ran down my body, stroking my stomach, stroking the base of my belly where my muscles were so tight as Kam thrust into me. Where my hand still held Jim's cock, still stroked him. His hand slid under my knee, lifted my leg up, he looked down. I could see him looking down between us. Looking down at where Kam's cock was plunging into me, spreading my pinkly swollen lips around his girth, pulling back, pulling my inner lips with his cock so that I could see them, so that Jim could see then, then thrusting in again, hard.\n\nMy gaze followed Jim's, looking down, trying to see what he was seeing. I did. I looked up, my eyes met Jim's, we both looked down again, my face burning. Between my legs, entering me at the juncture of my thighs, Kam's cock. The hard swollen length of him shining wetly with my juices as he eased himself out, held himself still, just the head of his cock inside me. I could see myself, see my inner lips clinging pinkly to my husband's shaft, gripping him tightly at the base of his swollen glans, my inner lips pulled outwards by my husband's cock. My labial lips, pinkly swollen, puffy with excitement, glistening wetly, framing Kam's cock as he held himself still, poised to drive his length into me.\n\n\"So fucking pretty,\" Jim breathed. He looked past me at Kam. \"Isabelle's cunt is so fucking pretty.\" He smiled at me. \"Do you shave or is that the natural look?\"\n\n\"Uuughhhhh ... brauughh ...brazilianughhhhh,\" I moaned as Kam eased into me.\n\n\"Nice,\" he murmured in my ear as his hand ran over my stomach. Ran down, down over my thighs, down to my pussy, touching me. Oh my god! He was touching me there, where Kam was sliding into me. I couldn't speak, I couldn't breath, time seemed to stand still as I felt his fingers on my, touching me, exploring as Kam eased in and out of me. \"I'd rather fuck your cunt than your tits Isabelle, but this time...\" He smiled. \"THIS time I'm gonna fuck those gorgeous boobs of yours.\"\n\nTHIS time? What did he mean, THIS time? But Kam's cock drove that though from my mind as Jim eased upwards, his body moving, moving up. His cock moved up. Large, swollen, erect, the blue veins standing out along its length, the head a swollen purple-red as my hand still clasped him. Guided him. Guided him towards my breasts as his hand reached for me, kneaded one breast as his cock slid up between them. I moved my hands, both my hands, held my breasts, pressed them together, feeling his cock between them, seeing and feeling his movements as he fractioned himself against me.",
        "\"Come on her,\" my husband grunted from behind me as he slammed himself into me. \"Come on, fuck her boobs.\"\n\nI rocked myself back on my husband's cock, squeezing my breasts on Jim's cock. Feeling their cocks, inside me and on me. Using me. Both of their cocks using me. I knew I wanted both of them to come. My husband and Jim. I wanted to satisfy both of them.\n\n\"Yes,\" I gasped, \"yes... both of you ... both of you come.\" I did. I really really did.\n\n\"Ohhh Christ, here it comes...\" Jim groaned and then he exploded, his cum bursting outwards, spurting onto my breasts. Spurting? It flooded out. Thick ropes of white semen jetted out between my breasts, spurting upwards to splatter on my neck, my chin, even my cheeks as his cock throbbed and pulsed against me. The amount was unbelievable, glistening over my skin from my breasts to my chin. Even as Jim came in me, I felt Kam's cock driving hard into me, his fingers digging into my hips, pulling me back on him as he thrust hard. So hard. He groaned, pushed hard into me so that I too groaned. Andother thrust and I felt him cum too, inside me, his cock throbbing, pulsing, his cum spurting out inside me just as Jim's cum was coating my skin.\n\nI loved it. I loved the feel of Kam cumming inside me, his cock throbbing and pulsing as he spurted into me. I loved the feel of Jim's cock erupting between my breasts, spurting his cum onto me as one of his hands kneaded my breast. I moaned as his cum spurted out onto me, massaging him with my breasts, feeling his cum lubricating my skin, feeling his cum under my fingers as he jetted his semen onto to. And then they were done, both of them, and I was limp on the bed between them.\n\nJim rolled away from me, his cock sliding wetly off my boobs. Kam withdrew from my pussy, a wet sucking sound, a suddenly empty feeling within me. Breathing in sobbing pants, I rolled onto my back, Jim on one side of me, Kam on the other, both of them looking down at me as I lay there, my breath coming in moaning gasps, my breasts heaving. I was suddenly aware that Jim's cum was all over my breasts, coating them thickly, spattered in goblets across my shoulders, my neck, my chin. So much of it, as if someone had splattered me with a cup of thick cream.\n\nAnd Jim and Kam were both looking at me as I lay there, my breasts and neck coated with another man's cum, my pussy full of my husband's cum. \n\n\"Oh fuck Isabelle,\" I heard the sheer lust and excitement in Kam's voice as he looked down at me. Next second his fingers had scooped a thick dollop of Jim's cum from between my breasts and pushed it into my wide open mouth. \n\n\"Swallow it, Isabelle.\" In a daze, I swallowed, tasting Jim's cum as my husband scraped it off his fingers and onto my tongue, into my mouth. His hand massaged Jim's cum across my breasts, smearing it across my skin, rubbing it over my breasts, scooping up more and rubbing it onto my cheeks, my face, feeding another thick dollop into my mouth. Jim's hand dived downwards between my legs, his fingers scooped my husband's cum from where it was oozing out of my still distended pussy, scooped it up and fed it to me, joining his own cum in my mouth. I swallowed, tasting the bitter-salt taste of their semen, licking my lips as Kam watched. As Jim watched and fed me another mouthful, both of them watching me as I licked his fingers.\n\n\"Fuck, watching this is making me hard, I've gotta go fuck Fan,\" Jim muttered, rolling off the bed and walking into the bathroom. He didn't bother shutting the door.\n\nHis voice was clear through the open doorway. \"Bend over.\"\n\n\"Ooooohhhhhhh.\" So was Fan's moan. \n\n\"UUGHHH ... UUGHHH ... UUGHHHHH.\" So was what came immediately after. I felt happy for Jim. And Fan.\n\nKam moved over me, moved between my eagerly spread legs. I was happy for me too.\n\n\"UUUNNNNUUUUUGGHHHHHH.\" Kam's cock rammed wetly into me, his hands pinned mine to the bed above my head as he entered me hard. My breasts, still wet and coated thickly with Jim's cum, quivered beneath Kam's chest as he rode me. My body above my breasts was splattered with Jim's copious emissions, I could feel Jim's cum on my shoulders, my neck, even under my chin where the power of his culmination had spurted his semen onto me. My mouth was full of Jim's cum where Kam had scooped it up and fed it to me. I could taste it as I swallowed more, I could taste another man's cum in my mouth as my husband fucked me.\n\nI knew it was driving my husband wild. \n\nIt was driving me wild.\n\n\"UUGHHHH ... NNUGHHHH ... NNNNGUUGHHH...\"\n\nOh god Kam, keep doing that, keep on fucking me like that. I knew what was inspiring him. I knew all too well and I didn't mind, I wasn't embarrassed at all. It was just so good. When he scooped another dollop of cum off my body, I opened my mouth wide for him. I felt Jim's cum on my tongue, on my lips, in my mouth, all while my pussy made wet wet sounds as Kam fucked me. Kam kissed me then, kissed me hard, his mouth crushing down on mine, his tongue deep in my mouth, tasting me, tasting the residue that filled my mouth as he fucked me\n\nHis hands slid under my butt, lifted me as he thrust into me, thrusting deep, thrusting hard, my pussy convulsing around him as he took me. I strained upwards against my, my fingers clawing at his back, my feet kicking wildly, unable to control myself. This was better than good, this was fantastic and I loved it and I felt it, felt my climax coming and then it rose and took me in a surging wave of irresistible power. For the second time in my life I climaxed as Kam fucked me. For I knew this wasn't making love. This was fucking. Kam was really fucking me. Using my body. Using my cunt. I felt my body arching beneath Kam, arching upwards, spasming around him and I almost passed out, my vision blurred, darkened.\n\nKam exploded inside me and now, now I cried out, a wordless primal cry that reflected the intensity of my pleasure as my body shook and spasmed and Kam's cum spurted into me, his body heaving wildly against mine in a paroxysm of pleasure. There was a long long moment where we remained, pressed together, both of us shuddering with the pleasure we felt and then I felt him relax, his muscles losing their tautness at the same time as mine. I sagged down limply onto the sweat-soaked sheet, feeling Kam limp on me before he rolled off me, leaving me lying on our bed, glowing, my pussy filled with his cum, my breasts and neck and face coated with Jim's cum, my mouth tasting of their combined cum. My husband kissed me gently, lovingly. \"I better get to work darling, see you tonight. Love you.\"\n\nHe vanished onto our bathroom. It must be crowded in there. I giggled at the thought before I closed my eyes, exhausted. I must have slept for a little while. When I opened my eyes, the bathroom was quiet. I eased myself off the bed, into the bathroom, into the shower. I needed one badly. I was coated in dried cum. It took forever to wash my hair. I hated cum in my hair. But this morning, it didn't worry me in the slightest. I was still glowing from those amazing climaxes. \n\nGod! That had been so good. Even what Jim had done to me, using my boobs and then cumming all over them, even that failed to dent my happiness. I could kind of understand their excitement. I'd been excited by that. It wasn't something I'd ever have thought of doing, I wouldn't have chosen to do that, but if Kam found it exciting, okay, I thought I could probably live with the embarrassment in the aftermath and close my eyes and do that again.\n\nAlthough Kam and Jim scooping up their cum and feeding it to me, now that was a little weird. But if it took Jim and Fan joining us to have Kam do me like that again, well, all I could think was, yes, I was willing. Very embarrassed, but very willing. \n\nI'd never sung in the shower before.\n\n<p align=\"center\"> * * * * * * * * </p>\n\nFan was eating in the breakfast room when I finally staggered out on legs that still felt like jelly. \n\n\"Jim and Kam said to tell you they'd left for work.\" She looked at me. \"Are you okay Isabelle?\" She sounded concerned. That was so sweet of her.\n\n\"Oh god Fan,\" I said, collapsing into one of the chairs and picking up the cup of tea she'd poured for me, \"I'm wonderful.\" I was. I was still glowing, still buzzing from those amazing climaxes, even after a shower and dressing for work. I felt so amazingly good. \"Kam, he just ... wow ... I mean, last night, okay that was exciting but I was, you know, really embarrassed, I mean...\"\n\n\"Yeah, I know...\" Fan said. \"I could see that...\"\n\n\"But this morning, when Kam, you know ...\"\n\n\"Fucked you...\"\n\n\"Yeah, when he fucked me while you were in the shower, Kam, god he really really fucked me and Jim, he, you know, he came all over my breasts while Kam was cumming inside me...\"\n\n\"That's what happened then.\" She was grinning at me.\n\nI shook my head. \"No no no, that's not it...\"\n\n\"Tell me then, okay!\"\n\n\"Stop interrupting me then Fan!\" I smiled.\n\n\"Okay okay, just tell me...\"\n\n\"Fan! I'm trying to, okay... So Kam, he fucked me from behind when I was lying there on my side facing Jim, and Jim, he ...,\" I blushed bright red. It was hard for me to say it, to tell Fan what I'd done. I still felt embarrassed about it, even though it'd been so wildly exciting. I blushed and I swallowed and I told Fan anyhow. \"Jim, he used my boobs with his cock, he, like, held them and slid his cock up and down between them while Kam was fucking me and then he came all over my boobs.\" \n\nI shook my head. \"I've never seen so much cum, Fan, it just came and came and came, there must have been a cup of it and it was all over my boobs and my neck and everywhere, there was just so much of it.\"\n\n\"Yeah, well, when he came in me last night it was like someone turned a firehose on, more than Tom even,\" Fan shook her head, \"I think you got whatever was left over this morning.\"\n\nWe looked at each other. \n\n\"Wow!\" I felt a little breathless. I mean, I'd seen Jim cumming on me, I'd been amazed at how much of it there was. I tried to imagine all that and more inside me. The thought made me weak at the knees. I loved the feel of Kam cumming inside me, his cock throbbing and spurting into me. The thought of all that cum of Jim's? I swallowed. Swallowed and shivered, my insides all clenched up. \"This morning, that was like, about four times more than when Kam cums, and it was all over my boobs and Kam was, you know, pumping his stuff inside me, and then Jim, he still managed to fuck you in the bathroom afterwards.\"\n\n\"Yeah, I know, and there was still lots of it left for me,\" Fan shook her head. \"He's as bad as Tom. Or as good.\" She grinned. \"Whatever... So anyhow, you and Kam...?\"\n\n\"Yeah,\" I was bubbling with excitement. \"So after Jim finished all over my boobs and Kam finished in me, I was lying on my back...\"\n\n\"Completely fucked...\" Fan giggled.\n\n\"Completely fucked,\" I giggled, \"and Kam, he saw all Jim's cum on me and he got totally hard again in about five seconds flat and then he totally lost it. I mean, he just got hard again right away and he didn't even ask me, he just stuck his cock into me and starting fucking me all over again.\" I blushed now. This was the bit that really embarrassed me but I wanted to know what Fan thought. I mean, Fan and I had talked about blowjobs, I knew she gave them, I knew she swallowed. She knew I'd done them with Kam. We'd joked about guys liking that. We'd joked about the taste. But this was different.\n\n\"No wonder you look happy,\" Fan giggled.\n\n\"Yeah, well.\" Okay, I wasn't just blushing now. I was a fiery burning scarlet red. \"Uhh, Fan, Kam, he was fucking me so hard and he scooped up Jim's cum from my boobs with his fingers and he asked me to open my mouth and swallow it and lick his fingers clean and then he fucked me even harder ... he said it really got him excited when I did that. I mean, I was so embarrassed Fan, I wasn't sure I wanted to but I mean, it wasn't like I was giving Jim an actual blowjob or anything.\" I looked at her anxiously. \n\nI'd been so excited at the time, I'd have done anything he wanted, but now I wasn't so sure. I mean, somehow I could accept Jim using my boobs to jerk himself off. I could accept Jim cumming on my boobs, but swallowing his cum? Even if it was Kam that put it in my mouth? It just seemed a bit ... a bit too much like being unfaithful to Kam. \n\nFan sipped her tea. \"Aiiyaaah Isabelle, if it was me, I'd say if your husband did it, it's okay, I mean, it's not like you gave Jim a blowjob yourself or anything. Did Kam say it was okay for Jim to cum on your boobs?\"\n\n\"He told him too,\" I was still blushing. Kam hadn't told me to hold my boobs for Jim though. \n\n\"Okay,\" Fan smiled, \"I think Kam, well, I think he just likes the whole idea of other guys fucking you Isabelle, it turns him on. That was what we talked about yesterday, right?\"\n\nI nodded. \"Yeah.\"\n\n\"Well, I think we just confirmed that hypothesis,\" Fan giggled. \"You definitely know what gets Kam really going. The question now is, were you okay with what happened last night and this morning?\"\n\nI thought about that. I thought about last night, how excited Kam had gotten when we played that game with Jim and Fan. How excited he'd been as we made out with Jim and Fan watching. How excited he'd been when Jim played with me. I'd been excited too, but really, it was Kam's excitement that I found the most exciting. I almost panted as I remembered how hard he'd fucked me when he saw Jim's cum all over my breasts. That'd been so good. And when he was fucking me from behind while Jim was getting off on my breasts, that'd been so amazingly good.\n\n\"I think so,\" I told Fan, \"I mean, I've never done anything like this before.\" I looked at her. \"Don't laugh at me Fan, but before I started dating Kam, I'd only ever kissed a guy before. I mean, I've never done anything with another guy, last night was so ... it was scary Fan ...\"\n\nThen I giggled. \"But this morning, it was so good ... Kam, he fucked me so good, it was just amazing Fan ... I mean, he made me climax twice while he was fucking me ...\" I looked at her, glowing. \"That's never happened before, ever, Fan. And it was so amazing...\"\n\nI looked at her. \"Fan.\"\n\n\"Yeah?\" She was smiling.\n\n\"Is it like that for you? With Tom? With Jim?\" I'd heard her with Jim, I'd watched her. \"Do they both make you, you know...\"\n\n\"Climax?\"\n\n\"Yeah.\"\n\n\"Every time,\" Fan said, \"You mean Kam doesn't?\n\n\"Uhh... no, last night and this morning, that was the first time, ever.\" \n\n\"You poor thing,\" Fan sounded so upset. \"You've been married two years and that was the first time...?\" Now she sounded not just upset but angry.\n\n\"Uhh... yeah,\" I said, \"but last night and this morning, wow, that was so good... I loved it ... I mean, Fan, really, that was so embarrassing with Jim and everything last night and this morning but if Kam does it to me like that, it's worth it, it's just, you know, I'm married to Kam, I don't want another man to do that to me... I don't mind what Jim did, you know, shooting off on my boobs...\" I was blushing. \"Even touching me. Not if it gets Kam doing it to me like that.\" I took one of her hands in mine, squeezed. \"Thank you so much Fan, I mean, I can't tell you what it means to me. You wouldn't believe how good I feel!\"\n\nNow I giggled. \"And you know what, you were so hot last night. I need a few lessons from you, Fan, okay?\"\n\nFan grinned. I guess my happiness was contagious or something. \"Sure, and honestly Isabelle, you were totally hot yourself, Jim was really getting off on watching you, I think he'd like to fuck you too.\"\n\n\"Well, that's not going to happen,\" I said, rather more emphatically than I felt. It'd been exciting when his cock had been fucking my boobs. And that sensation when he came on me. Wow. But I wasn't telling Fan that. Maybe Kam. Tonight. \n\nFan shrugged. \"Well, it was fun, I'm okay doing it again with you Isabelle, really. Anytime.\" She smiled at me, gave my hand a squeeze. \"We can get together ourselves, I'll give you a few lessons if you like.\"\n\n\"Would you mind? Okay.\" I was feeling rather more enthusiastic about this whole thing with her and Jim than I had last night. Wow. Wow wow wow wow wow wow wow. Yes please. I wanted Kam to do that to me again. I wanted to encourage him to do that to me again. I wanted to learn more. Maybe a few lessons from Fan would really help. She certainly seemed to have known how to get Jim going like a Wildman. For a moment I thought of Jim doing that to me instead of Fan but I shut that thought down. Not going there. No way.\n\nFan looked at me. \"Kam said you were going to that banquet on Saturday evening?\"\n\n\"Yeah.\" Banquet. Boring. I'd rather stay home and have Kam make love to me. No, forget making love. I wanted Kam to fuck me like he had this morning. Just fuck me. Hard.\n\n\"Well, Jim's going as well, he's taking me, maybe we could all come round here afterwards?\" She smiled. That smile, that wicked wicked smile of Fan's. My heart did a wild little dance. My pussy did its own little dance, I felt myself suddenly wet. Wet and hot and wanting. Wanting my husband. Wanting my husband to pin me to the bed and pound me down into it the way he had this morning. If having Jim and Fan watch him doing that to me got him excited enough to fuck me like that again, well, okay, I could deal with that.\n\n\"I think we're supposed to be going to Albert's afterwards, he lives upstairs somewhere, I'll ask Kam, I'm sure we could all go to Albert's.\" My heart beat a lot faster. \"And then you and Jim could come back here after.\"\n\nFan gave my hand another squeeze. \"And play Jenga again.\" She grinned.\n\nI blushed. \"Well, I don't mind. I mean, I know what to expect now.\" \n\nI did know, and no, I wouldn't mind playing Jenga again at all. If it needed Jim to cum on my boobs to get Kam to fuck me like that again, well, I could deal with that. It hadn't been as bad as I'd thought after all. Actually, in retrospect, sitting there drinking tea with Fan, it had all been rather exciting. But I wasn't going to think of that. Not right now.\n\nMy pussy tightened. I couldn't help thinking about it. I giggled. \"We could just skip the Jenga and go straight to bed though.\"\n\nFan snorted her tea, choked, spluttered. \"Aiiyaaahhh Isabelle, don't surprise me like that.\"\n\nI laughed. I was going to finish breakfast and get to work. I was already really late and, unlike Fan, I hadn't spent the night in my boss's bed, so I'd better get moving. I wondered if David fantasized about cumming on my boobs the way Jim had. I thought about David cumming on my boobs while my husband fucked me. My nipples were so hard. I looked at Fan, her nipples were pushing her top out. \n\n\"Fan!\" We both laughed. \n\nI wondered what Fan would look like with Kam's cum all over her little boobs.\n\nFan looked at my boobs and now she laughed. \"Isabelle!\"\n\n<p align=\"center\"> * * * * * * * * </p>\n\nNext: Happy Birthday to Me - Chapter Five - the Saturday night banquet proves to be not quite so boring as Isabelle expects..."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "young wife",
        "interracial",
        "foursome",
        "innocent wife",
        "boob fuck",
        "chinese wife",
        "sex",
        "chloe tzang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/happy-birthday-to-me-ch-04"
}