{
    "title": "Contrast Ch. 03",
    "pages": [
        "Author's Note: The story's definitely shaking out to be four chapters, so there's one more after this one. \n\nFor anybody playing catchup: After a chance street meeting, a kind-of-meek white guy and a part-time-college black woman go back to her place and fuck like weasels. Then they agree to begin a just-for-sex, no-names relationship. Their first weekend disappears in a blur of sex. When it ends Sunday afternoon, they try to figure out their schedules, settling on a series of lunch-hour trysts as the only way they can get together most of the week. They decide they have to skip Monday entirely.  \n\n***** \n\nHim \n\nTuesday, I'm waiting in the lobby of the building I texted her about, trying not to tap my foot, trying to nod casually when patients come in the front door and pass me on their way to the primary care practice or the lab office here at ground level, or to the elevators. There's an open flight of stairs on one side of the lobby, and a big potted plant I think about hiding behind so no one will wonder who the pervert is hanging around these medical suites with a hard-on. It's 11:02 when she shows up, backpack across one shoulder. \n\n\"Sign out front says there's gynecologists in here?\" she asks, thumb toward the door behind her. \"I hope you're not planning to get me in some stirrups. Big-time turnoff.\" \n\nMy nerves disappear the second I see her, washed away by heat. She's in a black top with long tight sleeves and a swooping neckline, over a black-and-copper chevron skirt that hugs her curves. Moving in close, I pull her to me and say into her ear, \"No, I picked it for the parking garage. My car's on the fourth floor in a dark corner. You up for semi-public car sex?\" \n\nIt ought to sound cheap and tawdry, saying that. I ought to expect her to go cold, wrinkle her nose. Instead, she does what I somehow knew she was going to do, which is to press herself even tighter to me and give a sexy growl. \n\n\"Only problem with that,\" she hisses, \"is getting outside and to the car before I rip your clothes off and go down on you. I bet the men's room on the OB/gyn floor is closer and emptier.\" \n\n\"Fuck, you are nasty.\" I pull back and look to see if she means it. The expression on her face is completely serious. Completely ravenous, too. \n\nThen she's tugging me by the hand over to a directory near the elevators, the kind with individual slots for changing out the occupant of each office if somebody moves. All the gynecologists' suite numbers start with \"2.\" \n\n\"Whatcha think, stairs or elevator?\" Her hand is still in mine while she asks. I like how it feels. \n\n\"Well, the stairs - too exposed. Somebody will definitely see us. And the elevator's probably got a camera in it, plus that's an awfully short ride to -\" \n\nShe clenches her hand around mine, just shy of hurting, and then for good measure she knocks the side of her sandaled foot against my loafer. \"Asshole. Come on, then. I don't want to wait on the elevator just to go up one floor.\" \n\nThe stairs make a carpet-muffled drumroll as she tows me up them, fast, some of the steps two at a time. There's a pregnant lady with a stroller waiting in the elevator lobby as we get to the second floor. I try to smile casually when she glances over at the two of us rumbling off the stairs, but her expression looks disapproving. \n\nIs it that obvious what we're up to? Or maybe she's against interracial dating? \n\nWe steer our way around her to the floor's beige central hallway, where a double-arrowed sign tells us the restrooms are in the same direction as suites 211 to 220. The hand in mine and the ass and thighs in that zig-zag black-and-copper skirt quickly make me forget the priss-faced pregnant elevator-waiting chick. There's no one in the hall we're rushing down, and even better, it takes a bend at the end, with the restrooms around the corner. We're completely out of sight. She pulls me to her and grinds that body up against mine and locks her lips across my mouth. The way her tongue feels, urgent and probing, shoots adrenaline through my entire body. \n\nIt takes her breaking away and pointing her chin at the men's room door for me to remember we're on a schedule. I duck my head in, listen, see that the stall doors are all open. \n\n\"Ready?\" I ask with a grin. \n\n\"You have no idea,\" she says. \n\nThen we're in, arms around each other, lips merging and gliding, bodies half-dancing and half-stumbling our way across the tiles to the backmost stall. The place has nice bathrooms, granite-tile walls or fake stuff good enough to fool my sex-glazed eyes, with stalls enclosed floor-to-ceiling, no more than a two-inch gap at the top and bottom of the doors. Once we're in the big handicap-friendly one with the lock in place, the visual isolation is perfect, and all we'll have to do is shut up and keep still if we hear the restroom door open in the middle of things. \n\nYeah, shut up and keep still in the middle of things. Wanna bet that's going to be a lot harder than it sounds? \n\n\"Okay, fuck,\" she says quietly, after she's hung her backpack from the stall door's coat-hook, \"how we gonna do this? Right off the bat, I am not getting on my knees in here to blow you.\" \n\n\"Not a problem,\" I say, pointing at my seam-straining erection. \"My coffee stirrer is way past needing foreplay. But I'm good kneeling if you want some.\" \n\nHer head shakes and she hikes her skirt to get at the panties underneath, wriggling loose from them in a flash, one hand keeping the chevron fabric up where it lets me see the black curls of her bush and the hint of labia peeking out below. \n\n\"That kiss would have done the trick even if I hadn't been getting myself all hot and bothered on the ... way over here.\" She drapes her underwear over the top of the backpack - I guess not trusting the coat-hook to be clean enough. \"Why don't you drop 'em and have a seat, and then I'll turn around and have a better seat.\" \n\n\"Kiss me again first,\" I say, stepping close and grabbing the hem of her skirt to keep it up. \n\nHer hands are on her hips. \"Okay. But bitch wants some cock in her, so make it quick.\" \n\nWhen I put my mouth to hers, though, the bossy swagger disappears and she melts a little, though her hands stay at her waist. I move my palms around to her bare ass and she melts a little more, groaning around my tongue. Then apparently she can't take it anymore, and I feel her grab hold of my belt buckle and get it open. Pretty soon my pants are down and my cock is in her hands, teased and toyed by her stroking. \n\n\"You ready to sit down?\" she croons. \n\n\"Uh-huh.\" \n\nI use the aluminum side-rails to ease back and down, slow enough that I don't pull away from either her lips or her hands. She keeps kissing me and jacking me until I'm on the throne, and instead of feeling sullied and sordid at the prospect of a toilet fuck, I really do feel like some kind of king. \n\nBreaking the kiss, she keeps her hands in motion around my shaft, sliding one from root to tip and replacing it with the other, like she's pulling in a rope. Her eyes are carnivorous, and the angle she's leaning at gives me a perfect view of her mahogany cleavage in that tight black top. But I swear there's something on top of the hunger in that stare, too. Something deeper, more vibrant, more encompassing. Fuck, I tell myself, do not fall for this woman. You so do not know how to handle a woman like this. Don't tell yourself she wants to be with you, just be glad she wants to screw your brains out. \n\nWith my knees wide and my ankles trapped in my pants, it's incredibly awkward getting at my pocket to fish out the condom without interrupting the magic she's working with her hands. But I manage it, and she licks her lips and grins once I have it. \n\n\"You're, uh, going to have to stop that for me to get this on,\" I tell her. But her hands keep gripping and sliding, right, left, right, left. \n\n\"I'm having trouble stopping.\" \n\nRight, left, right, left. \n\n\"Jesus, bitch, what am I supposed to make you come with if you keep doing that until I squirt all over your front?\" \n\nHer grin just gets bigger. Right, left, right, left. I groan and clench my hands, the left one into a fist around the condom package, the right one in a death-grip on the metal rail in the wall. \n\nRight, left, right, left ... I'm not that close, but if I let myself go with it, I will be, and soon. \n\nShe stops, both hands wrapped around my cock, squeezing and relaxing, squeezing again. Her eyes are all over my face. The laugh has disappeared from her smile, replaced by ... what? I have no idea what that smile is telling me. But it's deep. \n\nStop it. Stop telling yourself that kind of shit. \n\nSuddenly, she's standing straight up, hands free and glistening with streaks of pre-cum I've been leaking. She licks one palm, slowly, her gaze still on me. \n\n\"Get that on,\" she says with a flick of her eyes to the condom. I hurriedly rip the packet open and obey her as she runs her tongue and lips along her fingers and switches to the other hand. By the time she's got them both clean, I'm slouched in the hollow of the toilet seat, rubbered rod pointing straight up. \n\nShe spins around, hikes up her skirt again, backs into place with a leg to either side of me and her gaze locking on mine over one shoulder. \n\n\"Hang onto this for me,\" she says, indicating the bunched-up skirt about her hips. I do it, freeing up her hands, which go between her wide-set legs, the right hand finding my thigh and the left my cock. Her head drops forward, taking her eyes from my sight as she guides and lowers herself with those hands. \n\nI shift my gaze down to her tilted pelvis and the lips of her pussy, dropping by inches to touch me, to open around me, to swallow me in with a slow, even glide that ends with both her hands on my knees and my lap full of her ass and the beauty of being inside her again blowing my mind. \n\n\"Uhhhh,\" she groans as she takes in the last bit of my dick and settles fully down. The heat and fluid grasp of her cunt make it hard to believe there's a condom between her flesh and mine. Then she starts moving, rocking, and I forget that such a thing as a condom even exists. \n\n\"Jesus, stop for a second, would you?\" \n\nShe freezes. \"What, you don't like that?\" \n\n\"No, no, no,\" I say quickly. \"I'm just going to come like a 16-year-old virgin if you don't let me calm down.\" \n\nShe laughs, and there's relief in that laugh, and it washes away the panic I felt at making her think I wasn't enjoying it. Enjoying her. She wants to please me. It's not just what she can get out of me. God, shut the hell up about that.  \n\n\"So tell me when you're calmed down enough you'll come like a 16-year-old with a little practice.\" \n\n\"I'm good now. I just had to -\" \n\nA perfect, circular motion of her hips makes me gasp. \n\n\"Just had to what?\" she asks. \n\nMy hands clutch at her waist, at the soft black fabric of her top and the softer flesh underneath. \"Never mind. Let's just fuck.\" \n\n\"Now you're talking.\" \n\nShe undulates with the muscles of her legs and her lower back, riding me in strokes of glory and hissing through clenched teeth, \"Yeah - uhh, that's it, that's it ...\" \n\nI try to wrap an arm around to finger her clit, but I'm slouched down and she's leaning forward and all I manage is a handful of her belly, lush and sweet below her lifted skirt. Before I can try to shift for a better angle, she slaps at my wrist. \n\n\"I got it,\" she informs me, still humping powerfully back and forth. \"No - ah - no hands ... needed. You wanna touch something, feel free ... to grab a tit or two.\" \n\nI'm on that in a heartbeat, and then her breasts are surging in my hands as she moves, plush and round, nipples hard enough to feel even through her bra and shirt. \n\n\"Oh, bitch, you fuck so good,\" I breathe, the words barely louder than my roaring pulse. \"So good ...\" \n\n\"Uh-huh. Lemme have this cock. Ah - oh - yes -\" \n\nI can hear our sex rattling the hinges of the toilet seat, echoing in gasps off the tile walls. If anyone comes in, they're going to get an earful. I don't think there's any way either of us can stop. \n\n\"Ngff! Yes!\" \n\n\"Aouhh - baby - your cunt ...\" \n\nHer thighs are sliding over mine now, slick with sweat from skin-on-skin contact and exertion. I can hear her getting close - I'm not sure exactly how, but I can hear it. \n\n\"Yes, you fucking tigress, ride me.\" \n\n\"Oh god ...\" \n\n\"Yes, do it, get yourself there - I'm right behind you.\" \n\n\"Oh god ...\" \n\nFaster and faster, she's trembling with effort and with something else. The nearness of her orgasm makes me glow, builds a rising heat in my belly and in my balls. \n\n\"Yes, come on, come on ...\" \n\n\"Oh ... GOD!\" \n\nHer upper body curls forward and she squeezes and throbs around me, every part of her clenched tight as it will go. Grabbing her waist again, I thrust once, twice, each stroke hammering a squeak from her - and then I come, hard, curling forward just like she did so that my chest is flush against her back. \n\n\"Shit -\" \n\n\"Ye-esss ...\" \n\nFor maybe ten or fifteen seconds, we're clutched together, out of our heads, gasping with the power of our ecstasy. I feel like we're having the same orgasm - that it's one burst of pleasure so large it takes over both our bodies. When we come out of it, she folds forward, panting, head between her knees. \n\nWith one more groan, she says, \"That would totally be worth getting arrested for if someone came in here and caught us.\" \n\n\"No it wouldn't,\" I manage between exhausted breaths. \"If we got arrested we couldn't come back and do this again tomorrow.\" \n\nShe shakes her head. \"Tomorrow I'm fucking you in your car. Only a slut would fuck a guy in the men's room two days in a row.\" \n\n\"So you're saying we'll come back and do this again Thursday?\" \n\nThat gets me a chuckle. \n\n\"No, I was just making an excuse. Next time we come in here, I'm making you screw me in front of the mirror, and if anybody comes in, we're toast.\" \n\nMy cock swells inside her. \"I am so going to some janitor supply company or something and buying a 'closed for repairs' sign for Thursday, then.\" \n\nShe's suddenly quiet. I wonder if maybe something's gone wrong. Just about the time I open my mouth, though, she says, \"Listen ... can I ask you something?\" \n\nOh, shit. Yes. Yes, anything. \n\n\"Uh, sure.\" \n\n\"How long you think we can keep this up?\" \n\nThere's a pounding in my chest before she even finishes the question. I have no idea what to say. No idea what she wants me to say. In the silence while my brain scrambles for an answer, someone flushes in the ladies' room next door. I feel like I'm spinning down the bowl with that water. \n\nBut before I can drown, she steps in and fishes me out: \"'Coz I've got to get on the pill if it's gonna be much longer. This condom shit is for the birds.\" \n\n\"Yeah, totally. The pill. I don't know how those prescriptions work, but have them write a big one. However big you can get them to.\" \n\nShe takes a deep, satisfied breath. Her face is still hidden from my view, but I can tell she's smiling. \n\nI smile too. Suddenly the future, at least for a while, isn't just the future. \n\nIt's our future. \n\nThe idea just about makes me come again. \n\nHer \n\nCar sex in a dark parking garage Wednesday. More bathroom sex Thursday - and he really does get a \"closed for repairs sign\" so we can fuck in front of the mirrors, with my tits hanging out and way more noise than we ought to make. The store calls me for an extra shift Friday night, and I can't turn it down because there's a copay on the birth-control prescription, which I got by showing up early Thursday to one of the gynecologists' offices at our hookup spot. Saturday morning he's got some thing he can't get out of, Saturday afternoon I shop with Niza, then we hang at my place a while. Thankfully, she's going on a date that night and takes off around four o'clock. \n\nSoon as she's out the door, I get my phone and hit \"Fuck-Man\" on my favorites. He answers on the first ring. \n\n\"Hey,\" he says. I can't tell from the connection whether it's a casual \"hey\" or a damn-I-want-to-bone-you \"hey,\" but I want to think he's been sitting there with his phone out, waiting. \n\n\"My thing is done,\" I tell him. \"Is your thing done?\" \n\n\"Bitch, my thing is so done.\" \n\nI guess it was a damn-I-want-to-bone-you \"hey\" after all. \n\n\"You want to get over here?\" \n\n\"Would it be creepy if I said I was already waiting at the coffee shop around the corner?\" \n\n\"Yes. Are you?\" \n\n\"Yes.\" \n\n\"Next time, wait in my parking lot. If you're gonna be creepy, go all in. Now hang up and get your ass to my place and your dick inside me.\" \n\nBeep. The line goes dead. I'm glad, because I'm breathing so hard, no way was I going to be able to keep sounding like I had it together. \n\nI spent the whole shift last night wondering if I'd have the guts to ask him his name today. I spent the whole morning masturbating and imagining him calling mine out with his cock going off inside me. I spent the whole afternoon with Niza wondering how she'd react if she knew I hadn't told her a guy was coming over to fuck me the minute she walked out the door. \n\nShe's been on me so hard to find a man, maybe after she got done throwing a fit, she'd be happy for me. Yeah, maybe. Until she found out he was a white guy. Then she'd totally wig, and after she settled down, there'd be that look in her eyes, the same one from when she first showed up at the Hilliards' place. The \"go-to-hell-because-I-do-not-trust-anybody-in-the-whole-fucking-world\" look. The \"they-said-they-were-putting-me-somewhere-I'd-be-safe-those-goddamnshit-bastards-and-now-they're-putting-me-somewhere-else-and-saying-it-again-so-fuck-you-if-you-think-I'm-listening-to-a-goddamn-word-you-say\" look. It took three months sharing a bedroom and talking to her every day to get that look to mostly go away, and a year and a half and us graduating and leaving the foster program and me still sticking by her for it to finally disappear. I do not want to see that look again. \n\nBut when the knock comes barely a minute after I call him, I stop worrying. \n\nI want what's on the other side of that door - and if Niza won't let me have what I want, it's time for her to grow up. \n\nThem \n\nFour months in, they've done everything that can be done in every corner of her apartment, every position, every orifice, with most of the foods in the refrigerator and a few of the household appliances. None of it is old, and sometimes they go through three or four bouts of straight missionary in a night with no need to change things up at all. She's been on the pill since week three, by which point they'd gone through almost four boxes of condoms - twelve packs, not the little pocket-friendly three-rubber size. \n\nThey are still nameless to each other, supposedly just a cunt and a cock, a pair of legs to be spread and a stiff prick to ride into orgasmic heaven. They laugh and play and grope in between, their conversations almost exclusively about the sex they've had, the sex they plan to have, the sex they've dreamed of having, the gaps in their schedules where sex can be made to fit, and just sex in general. Every few weeks one of them will slide toward the personal - \"We're still good this way, right? Just two people screwing?\" The answer is always something like, \"Shit, we'd be crazy to change anything.\" \n\nBut at work, he can't stop thinking about her face, her expressions, the subtle movements of her lips when she is amused or concentrating or pausing to think about a question. And in class, she keeps imagining where he might be from, what he does for a living, whether he might be having the same kinds of thoughts about her. ",
        "When their calendars align, he's at her place four or five times a week, fucking her for hours on end. When he has to work late, or she's on a night shift, or one of them can no longer put off family or friends, they might go three days without hitting it, but by the fourth they're finding some way to make it work, whether on his lunch hour or in the brief gap between her classes and her job, whether at her apartment or in whatever secluded back room they can find in a business or office building that lies along her bus route. \n\nHe has never come into the same woman so many times, not even Ariel, who'd been his fianc\u00e9e for a brief six months after two years of dating. \n\nSince offering herself up to him that fateful morning, she has achieved more orgasms from intercourse than with all of her previous sex partners put together. \n\nThey both exist in a state of constant amazement that they have found this thing, this treasure, that absorbs virtually their every waking thought. \n\nOn a Saturday morning, they wake up in her bed. \n\n\"Uhhh,\" she moans as she rolls over and cracks her eyes to see sunlight sneaking its way in past the blinds. His hand finds her hip beneath the sheets and slides up it, past her waist, around her ribs to cup one breast. She feels his lips on her shoulder, covers his fondling hand with her own, turns her face to receive a slow, simple kiss. When it breaks, she finds herself staring into his grey eyes. \"Goddamn,\" she says. \"How many times was that last night?\" \n\nHe smiles and kisses her again, their tongues meeting in the less-than-perfect taste of two mouths that have spent an entire night ripening their respective coatings of sex juices. The flavor does not bother either of them. \n\n\"I don't know,\" he says. \"I fell asleep after five. Did you wake me up by sucking my cock in the middle of the night?\" \n\n\"Yeah.\" \n\n\"Okay, so if that wasn't a dream, did I wake you up by getting in you from behind?\" \n\n\"Uh-huh. But I think we both fell asleep without coming. Does that one count?\" \n\nHe counts steps, pressing a different finger into her breast with each one. \"Erection, penetration, motion, moaning. I think that's enough to count as sex even without any orgasms.\" \n\n\"All right, then, that's seven, right? I'm thinking seven's a record. What do we do to celebrate a new record?\" \n\nHe raises an eyebrow. \"We could fuck.\" \n\nThe pulse of his cock against her ass cheek almost makes her want it, but she scoots away instead and sits up at the edge of the mattress to stretch. \"Mmfff. We could, but I am raw and hungry and I need to piss like a motherfucker.\" \n\nHe laughs and raises the sheets to look down at himself. \"I was mostly joking. I think it could use a couple more hours' worth of a break.\" \n\nStanding, she says, \"Then you probably don't want to get in the shower with me, because I will soap the shit out of that thing until whatever spunk is left in your balls squirts onto my tits.\" \n\n\"I don't think there's enough for a squirt,\" he replies, rolling onto his back. \"Maybe a trickle. The rest is inside you already.\" \n\n\"Tell me about it,\" she says, looking down at her sore and cum-leaking vagina. \n\nWhile she's eyeing herself, he's looking at her one tattoo, a full moon nestled in clouds, the whole thing no larger than a quarter, just above her right hip. \"You go ahead and get cleaned up. I'll switch out with you when you're done. Then maybe we can go out for breakfast to celebrate.\" \n\nShe throws a look at him. They don't eat out much, usually just order pizza or Chinese and fuck at her kitchen table while eating it. The fact that he likes mushrooms in both is one of the few things she knows about him. \n\nBut his eyes have closed, so she can't see if he means anything significant in making the invitation. She heads into the bathroom. \n\nBetween her shower and his shower and her hair and getting dressed, it's forty-five minutes before they're ready, and she hasn't put on any makeup yet. \n\n\"We going someplace nice?\" she asks from the bathroom door, waving her compact. \n\nHe loves the way she looks with nothing on her face. The smooth, deep, even color of her skin, nothing on her cheeks to accent their curves, no eye-shadow to vamp her lids from naturally beautiful to carnally provocative. He speaks without thinking. \n\n\"If you're there, it's going to be nice no matter where we go.\" \n\nShe feels herself flush. \"You forgot to put the word 'bitch' in there somewhere, dumbass.\" \n\n\"Okay, you're the one said she was hungry, bitch,\" he tells her, grinning. \"So put the makeup down and let's fucking go eat.\" \n\nOn the way down the stairs, he watches her ass in its tight denim skirt, thinking it may be the same one she wore that first time he saw her. But she's got a lot of denim skirts, as far as he can tell, and the top today isn't the camo tank but a sunflower tube top. That top is the main reason he keeps his eyes on her tush - if he watches her bare, dark shoulders above its golden rim, he's going to grab them and pull her to him and put his chin over her shoulder to stare down her cleavage while he fondles her. \n\n\"Who's driving?\" he asks as they reach the parking lot. He's pretty sure she doesn't have a car, and she's pretty sure he knows it. But their bargain is to keep as much personal information back as they can, so on the rare occasions when they use transportation, he always gives her the opportunity to maintain the uncertainty. \n\n\"You drive,\" she says casually. \"If you're sure we gotta drive somewhere. I'm good with the Mexican place across the street there.\" \n\nHe shakes his head. \"That's where I was heading the day we first met. I got detoured from that place, and I like the detour. I'm damn sure not ready for it to be over.\" \n\nShe feels odd in her chest at the words. He's not saying anything out of the ordinary for them. They're a thing, a fling, a temporary craziness that can't possibly last. And he was emphatic there about not being ready for it to be over. That's good, right? Plus, he was taking her out to breakfast. So why did the word \"detour\" make her feel ... whatever it was that it made her feel? \n\nHe notices she's quiet. She knows his car, she's headed for it through the lot. She's not usually a quiet person. What the fuck, dude. \"Detour?\" Something inconvenient and in the way? What an asshole. He hadn't meant it that way at all - he'd meant that she'd changed something in him and he never wanted to get back to where he'd been going that morning. \n\nHe catches up to her, sneaks a hand around her elbow, pulls back gently to stop her and turn her around. She looks uncertain, but he does not hesitate. His arms go around her and he puts everything he can into a kiss - everything he's not allowed to say, everything he's not allowed to ask. \n\nShe kisses back the same way. It ends when her stomach growls loud enough for both of them to hear. They laugh and get into his car. Sore pussy or no sore pussy, she's wet and electrified as she sits beside him watching the familiar stores and strips and apartment complexes of her street roll by. \n\nBreakfast is unexceptional. He tells her to point out anything that looks good, she stops him at the pancake place two blocks down, not because it looks good but because she's ravenous. She orders sausage, biscuits and gravy, bacon, eggs. He gets a big plate of waffles. They trade bites, feeding each other across the table. There's nothing special about any of the food, they talk less than they normally do when eating, probably because all their conversations are about sex, and there are people in the booths to either side, an old couple behind him and a family behind her. \n\nShe can't remember a breakfast she has enjoyed more. He eats as slowly as he can to draw it out as much as possible. \n\nWhen they're both full and the server has cleared away their plates, he says, \"So we've got all day now. I don't think we can top the new record. What should we do?\" \n\nTell me your name. \n\n\"You know what we've never done,\" she says instead, \"we've never done it to music.\" \n\nHe sips at the last bit of his coffee. Is she deliberately testing the line? \n\n\"True,\" he says, putting the cup down. \"But whose would we use? And you know, for some people, music is pretty personal.\" \n\nThat's the whole idea. \n\nShe shrugs. \"I don't think one CD's going to tell you my life story. Hell, it might even be a CD somebody left in my apartment that's not my sound at all.\" \n\nHe nods slowly. \"Cool. That's actually a really good idea.\" \n\nShe grins, her teeth shining and perfect between supple lips. They pay up, they leave. He's simmering with anticipation - not only has he never done her to music, he's never done anyone with a soundtrack. Ariel was extremely conventional, and he'd only gone to bed with one girlfriend before her. Since then ... nothing had lasted more than a few weeks. Until now. \n\nAs they pull out of the parking lot, she's wondering what she should put on once they get home. He won't want her to read off a bunch of possibilities for them to choose from together, won't want them to be delving with one another into her musical tastes. Or maybe he wants it like I want it, but he can't say so either. \n\nShe's just about worked up the courage to put on her Best of Debussy CD - not sexy enough? too beautiful? too likely to make her cry in the middle? - when she realizes they're passing her complex. \n\n\"Where're we going?\" \n\n\"You'll see.\" \n\nThey pull into a shopping strip. He wheels his aging Nissan into a spot in front of a buy-sell-trade CD shop. Debussy fades from her like a moonset, but ... he's charged up, eager, quickened by some plan that's put a wickedly pleased smile on his face. She lets her disappointment be pulled into curiosity. Is he going to look for some fave of his? What's playing in that head? \n\nThe shop is small, a little dim, just recently opened for Saturday-morning business. The only person in it is the college-age clerk, a wiry kid with glasses, fuzzy hair, and the kind of chin beard only the young or the genuinely eclectic could pull off. The kid looks up from his work sorting jewel cases just long enough to give a casual wave of acknowledgment, then gets back to work. \n\n\"Hey, could we get a little help here?\" \n\nThe kid looks up again at the request, seemingly indifferent about being interrupted and asked to exert himself. \n\n\"Sure,\" chin-beard says, coming round from behind the counter. \"What d'ya need?\" \n\n\"I want you to pick out four CDs for us, any four, whatever you want. The only guidance I'm going to give you is, we want something we can fuck to.\" \n\n\"Whoa.\" The kid's eyebrows go up above his glasses, though the rest of his face remains blank. He reaches up and scratches behind one ear. \"Yeah, uh, lemme see what I can do.\" \n\nShe lets a stifled laugh escape as the clerk moves off. \"You're so bad. Poor kid...\" \n\n\"Okay, so here's the deal,\" he says. \"We can each veto one CD and have him pick something else, but only once. We don't tell him why we're vetoing, we just ask him to put that one back and choose something else. Then we're stuck with what he brings back.\" \n\nShe nods, smiling, then raises an eyebrow. \"What if he's some kind of fucking Lawrence Welk freak, or decides to be a prick and sticks us with a bunch of Barney sing-along CDs?\" \n\n\"Then I won't be able to get it up and our genitals will have a little more of the day to recover from last night.\" \n\n\"Don't you threaten me with not getting it up,\" she says, stepping close and running fingernails down his chest. Her eyes hold his with a fire of promise, though he can't help noticing the dark swells of her breasts within that golden tube-top at the edge of his vision. \"I will make you eat those words and all kindsa other things besides.\" \n\nHe bends and kisses her, gets a hand into the small of her back, bare and cool between the tube top and the waistband of her skirt. His tongue is in her mouth, his other hand slides up her hip and over and up her belly and onto the rich curve of one breast within her top. \n\nThe clerk clears his throat. \n\nHe's brought back four CDs: a collection of swing era hits, Rimsky-Korsakov's Scheherazade, the Basil Poledouris soundtrack to Conan the Barbarian, and something by a rapper whose name is apparently so scurrilous that there's an Explicit Lyrics sticker plastered across it. \n\nScheherazade, Christ, he thinks as the clerk hands the CDs over. It's one of the few classical pieces he really knows, and he's almost certain he should veto it. The raw, mournful emotion of it gets him every time he listens to his copy, and the last thing he'd want would be to break out in tears in the middle of sex with her. But then the tiding, oceanic rhythms of the suite start to flow through his memory, and he imagines their bodies sliding together in time to that beauty, and his throat goes dry and he knows he has to come inside her with this music playing, tears or not. \n\nShe's pissed at the rap CD. She likes her share of hip-hop, but can't stand the hardcore bitches-and-hos gangsta shit. He does get off calling me his bitch, though, doesn't he, she thinks. He loves doing that white on black nasty, I know he does. And it don't get much nastier than this crap. What the fuck, just go with it. \n\nIn the car, though, she makes like she's offended, shuffling through the CDs and holding up the rap one. \"Motherfucking racist little shit. Look at this! Three CDs for the white boy and one for his N-word ho.\" \n\nHe glances at her to see if she's really mad, but he can't tell. \"Why didn't you veto it, then?\" \n\nShe gives him a completely blank face, then raises her eyebrows. \"Well, maybe coz I like it. Or maybe because I just want to see if your nice white weenie gets up for the stuff, or goes limp from it.\" \n\nThere's enough humor in her voice for him to relax. \"We'll see. And anyway, maybe he wasn't being racist. Maybe it's what he fucks his girlfriend to.\" \n\nThat word shivers right through her: girlfriend. \n\n\"What's that mean, exactly?\" \n\n\"Huh?\" They're almost back to her complex now. \"I don't get you.\" \n\n\"His girlfriend. The way you said the 'his,' sounds like you're making a reference to somebody else having a girlfriend too.\" \n\n\"Oh. Oh, you mean was I saying that you're ...\" He knows that without having thought about it, that was exactly what he was saying. He wonders if his face is going red. \"No, I just meant that he must assume we're an item, I wasn't saying I ...\" \n\nShe makes a lazy, overhand wave at him and settles back in her seat. \n\nInside the apartment, she locks the door and asks, \"How we gonna decide what to put on first?\" \n\n\"Here,\" he says, taking the discs. He puts them behind his back, mixes them around. \"Pick a number between one and four.\" \n\n\"Four.\" \n\nHe brings the stack out, peels off the top three as he counts. \"One, two, three ...\" \n\nThe rap disc is on the bottom. \n\nAw, shit, she thinks. \n\nShit and damn, he thinks. He would have vetoed the thing if he hadn't been worried it would look as racist as the clerk picking it out in the first place. \n\n\"So let's go, then,\" she says, taking it from his hand and marching over to the boom box beside her television. \"Where we gonna do this?\" \n\n\"Uh, I'm guessing this is more on-the-couch or maybe on-the-floor music, not in-the-bed.\" \n\n\"Baby, I'm guessing this is up-one-side-and-down-the-other, no-place-is-safe music, and we're going to do some serious migrating while it's on or else we're going to have to shut it off and switch to something else.\" \n\n\"Hit play then, and come over here so I can peel that top off of you.\" \n\nShe hovers her finger over the button and waits, one eyebrow raised. \n\n\"What?\" In his head, he's already yanking that golden band down to pop her full, ripe tits out in the open, so it takes him a second to remember. \"Oh, right. I mean, bitch.\" \n\nShe grins. Her finger goes down. She cranks the volume. \n\nSnaking, looped synthesizers and a plosive, throbbing bass ejaculate from the speakers. She struts toward him, her hips rolling extra-slow as concussive profanity jumps out on top of the ... music. His hands are itching to get at that tube-top. Halfway to him, she stops and turns, pelvis still rotating elliptically at the base of her spine. She watches him over her shoulder, hands going to the side-seams of her skirt, dragging them up, dragging the hem skyward, revealing inch after inch of her sleek, round, brown legs. \n\nOnly in the very back of his mind does it click how fantastically offensive the lyrics of the song are. The rest of him is fully absorbed in the grinding fullness of her ass, circling in front of him to that beat as her skirt climbs higher along those unbelievable thighs. He takes a step toward her, but she puts a hand straight out, palming him into immobility. The hand goes back to the denim of her skirt. Her eyes are narrowed and her lips turned up in a deliriously wicked smile. Up and up and up goes the skirt. \n\nOf course she doesn't have anything on underneath it. Why would she? \n\nThe lips of her cunt wink in and out of view with each slow rotation of her ass, each slurred cycle of the synth loops, each rattling line of n- and ho- and bitch-filled poetry spilling out of the speakers. He can almost see them glistening wetter and wetter every time they surge into view. \n\nShe steps back toward him, languidly, patiently, pushing that beautiful ass closer and closer to him, never breaking its motion loose from the pounding rhythm. She is eight feet away now. \n\n\"Undo your belt buckle.\" \n\nHe does what she says. His cock is begging to be let loose anyway, painfully hard within his briefs. \n\nSix feet away. A bead of moisture actually breaks loose and runs down the inside of her thigh. \n\n\"The button,\" she says. \n\nHe unsnaps it. \n\nFour feet away, just out of arm's reach. She stops closing in, but continues to roll her gorgeous butt and pussy at him, ever-so-subtly squatting lower with each circle. \n\n\"Unzip.\" \n\nHe does. Words hit him suddenly from the boom box: \"Fuckin' you, and fuckin', and fuckin' up your -\" \n\nHer knees are to the ground now, and one hand. The other is spread across her tailbone, middle finger pointing straight down her crack. \n\n\"Get them down.\" \n\nHe shoves his pants to mid-thigh, popping his cock loose so that it waves straight out toward her. \n\nShe licks her lips. \"Ooh, do I like the look of that. Closer.\" \n\nHe drops to his knees, moves one and then the other of them forward. Her ass is still grinding, near enough to touch now, but he doesn't, because she hasn't told him to. She's like a cobra, the music like a snake-charmer's flute, both of them mesmerizing him. \n\n\"Get it in me,\" she says. \"No hands.\" \n\nThey've played \"no hands\" before, but never with her cunt twisting and circling like it is now. He edges closer, his prick jutting stiff and straight toward her. That finger down her ass crack beckons him. His calves slide up along hers. His half-lowered pants make it awkward to get in place. She rolls and rolls and rolls her hips, grinning across her shoulder in a challenge. The music is filthy. It tugs him toward her in throbs. \n\n\"pumpin' this ho-\" \n\nJesus, do people really write these lyrics? \n\nBut even as the thought flits through his mind, it's gone again, and the leering words turn back to noise, below the level of consciousness, as her latest twist of the hips brushes one ass-cheek against his tip. \n\nHe moves one knee forward, tilting his pelvis down on that side, angling his steam-tempered steel rod for her orbiting hole, but only succeeding in jabbing a streak of pre-cum along the juncture of her ass and thigh. He tries circling with her and immediately proves the stereotype about white guys having shit for rhythm. She laughs and drops from a rotation every four beats to one every eight. ",
        "The slower speed lets him get his head against her slit, and suddenly she's swirling him, wetting the tight crown of his cock with each roll of her hips but never quite lining up enough for him to push straight in. He's fighting himself to keep from grabbing her by the waist and jamming his dick all the way up her snatch. She's having a blast, loving the feel of that bulb of his just peeking its way in between her lips as she swivels. His face keeps flipping between frustration that he can't get full penetration and quivering pleasure at the way she's treating his tip. She can't help but cackle. \n\nAt last she relents and drives her ass directly back, engulfing him in one decisive stroke that yanks a startled, stereo grunt from them both. \n\n\"Fuck me hard,\" she gasps. But he's already digging his fingers into her waist and slamming away. \n\n\"Jesus, your cunt,\" he cries out. \"Fuckingholyshit - pussy!\" \n\n\"Bone me, white boy, ngh ... yeah - \" \n\nShe's working her tail hard to gobble his rod into the hungry throat of her vagina. With her head hanging down, she focuses her whole concentration below her waist, to her movements, to her timing, to the scrape of his jeans against her thighs and the slap of his groin against her twat. He feels enormous inside her, and with every thrust he feels even bigger. She can't figure out why it's always like this - he looks pretty average compared to other guys she's had. The music is driving them together in time, words so crude it's like they're being dared to reach the nastiest level of fucking they can get to. \n\n\"Uhhh ... push it ...\" \n\nPistoning in and out of her wet, clutching cunt, he realizes he's forgotten all about her golden tube-top and the sweet brown pillows inside it. Suddenly, he has to have them, and his hands sweep from her waist down under her abdomen to cup and squeeze those tits for just an instant before yanking the elastic fabric back. Her full dark breasts spill loose and make a single swing forward and back before he catches them in his hands, trapping the nipples, hard, long, heavenly, between two fingers on each side. \n\n\"God I love these.\" \n\n\"Mmm-hmm. Tug them. Oooh!\" He's pulling and kneading all at once, not missing a beat with his hips, driving himself forward and into her, groaning at the feel of her body. Over and over, his dick plunges through her sopping wetness, a hard, hot intrusion of flesh through flesh, her yielding creaminess welcoming him, his rigid wonder exulting in the blissful kiss enfolding it. \n\nSuddenly, she drags herself forward, breaking loose and slipping her snatch off of him. \n\n\"Get on your back,\" she pants. \"I need you to suck my tits while I fuck you.\" \n\nHe rolls over instantly. The rapper only gets out an obscenity and a half before she's on him, angling her hips, sinking her cunt to the hilt around him. \n\n\"Uah! Fuck!\" he says, driving up against her as best he can. She's got all her weight on his crotch, though, grinding her clit into his pubes, milking him with a steady, rocking slide of her pelvis. Her mouth is on his, full and wet and tongueing, her back curled, her pussy gripping and sucking at his shaft with greedy muscular contractions. Then she breaks the kiss and leans forward, aiming one nipple straight for his lips. They close around its taut, projecting shape and pull the areola in after it with just the right amount of suction. The tip of his tongue circles and caresses in time with the beat, in time with her gliding hips. \n\n\"Yesss,\" she hisses. \"Suck that tit ...\" \n\nHis swollen pole juts up inside her, pointing at her womb, promising a fertile fountain if she just rides it a little while longer. Her dripping hole glissades around him, demanding his cum with sweet, sweeping oscillations of pleasure. \n\n\"oh,\" he says after a few minutes. \"oh ... OH!\" \n\n\"Not yet, goddamnit,\" she growls, sitting down hard and clamping her pussy muscles fiercely, as though to squeeze his dick so tight nothing can get out. \"Keep sucking!\" \n\n\"Mmm, mmm,\" he hums around her nipple, as close to orgasm as he's ever been without actually shooting his wad. His balls feel like she's trapped them in amber, preserved forever on the edge of delirious explosion. She holds herself in place, a dusky sculpture of unrelenting muscle clothed in soft flesh and skin. Slowly, his almost-orgasm recedes. His mind rises, partly, from the glorious glow in his cock back up his spine to his head, where the sensation of her tit in his mouth ever-so-gradually replaces the feel of her snatch around his shaft at the forefront of his consciousness. \n\n\"You settled back down?\" she asks. \n\n\"Mm-hmm,\" he replies, still suckling. \n\n\"Ready to get on top and plow me with my legs around you?\" \n\n\"Fuck, yes.\" \n\nAs quick as that, she rolls away and worms backward across the carpet to the center of the room. Her legs draw up and open, sliding her skirt up onto her belly to show off the glistening gate of her labia and clit-hood. Raised up on her elbows, she watches him, unblinking. \n\n\"Come on, then. I'm ready to cum.\" \n\nHe takes just a second to shuck his pants and shirt, then crawls up between her luscious thighs. Too tempted to just pass them by, he draws his tongue all the way up and along her right one, leaving a trail of saliva and making her shudder. From there, without warning, he seals his mouth around her pussy and penetrates it with the tip of his tongue. \n\n\"Shit! Oh, fuck,\" she says, bucking up against him. Her hands desperately find his ears and tug him forward - though not before he licks a circle around her clit and spends a moment sucking it between his lips. \"No, no, fuck me!\" \n\nHe alligators forward and buries his cock in her with a single, swift stroke. \n\n\"UHHhh!\" she cries. \n\n\"Oh, bitch, that is good.\" He holds himself in place a moment, both of them moaning in pleasure. Then he starts to pump. \n\n\"Yeahhhhh,\" she says, hooking her legs up and around to pull him in harder with her heels. \"Oh, yeah, fuck me like that.\" \n\nThe blood roars in his ears almost too loud for him to hear the music. The beat is there, though, impelling every thrust of his cock into her, driving the tempo of her rolling hips. \n\n\"Oh, my god,\" he says. \"Uhhh!\" \n\nHer nails drag their way down his spine. Her heels yank at his ass, demanding him deeper and deeper inside her, harder and harder against her. There's a coal-hot glow starting where he rams against her mound; she gasps and concentrates on its heat. \n\n\"Nnf! Nnf!\" He's pounding her as hard as he can. \n\n\"Ahhhh, yessss, fuck me!\" \n\n\"Oh - oh shit -\" \n\n\"Do it! I'm there! Blow it into me!\" \n\nWhite-hot ecstasy spirals her out of her head to the throbbing beat of the music. His cock surges and then detonates inside of her, jetting out torrents of fluid joy, great plumes of seed to flood her depths in alabaster honey. \n\n\"Yes, FUCK!\" she shouts. \n\n\"Uhhh, God, baby -\" Again, and then again, and then again, he spurts deep into her, unable to believe how long it lasts. \"Ohhhhhh ...\" \n\nAt last, they collapse, panting and dripping sweat into the carpet beneath them, holding tight in the heated ease of post-orgasmic bliss, settling, breaths slowing - and then, together, laughing at the pornographic ravings that still rattle out of her boom box. \n\n\"So,\" he says at last, \"still mad at that racist clerk?\" \n\n\"Hah ... ohhh ...\" she puts a hand to her forehead, spent and sated. \"If he was here, I'd kiss him.\" \n\n\"Well he's not, so you'll have to settle for me.\" \n\nThey look each other in the eyes. \n\nEverything is perfect. \n\nHis mouth covers hers, and they swim into the darkness of a kiss."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "nameless sex",
        "white guy black woman",
        "bitch",
        "nooner",
        "public restroom"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/contrast-ch-03"
}