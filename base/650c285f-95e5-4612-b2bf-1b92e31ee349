{
    "title": "Gamer Goddess Ch. 02",
    "pages": [
        "==============================\n\nGamer Goddess vs the Real World\n\nAs mentioned in chapter 1, this story is very online-gaming-centric. It uses a lot of concepts, vocabulary and acronyms from games, especially Diablo 3, which this story revolves around.\n\nOverall, I'd categorize this entire story as a Romance. I decided to submit Chapter 1 as exhibitionist/voyeur due to Sheri's emotional breakthrough via the online world, and video chat. I submitted this chapter as the same, because of the video elements, even though I believe relationships are the heart of this tale. And not just the one between Sheri and Steve.\n\n==============================\n\nDate night.\n\nI was nervous. No denying it. I had a few preparations to take care of, but I pulled up in the stretch limo by 6:30. Not by accident. By invitation.\n\nSheri's father came down the steps of their brownstone, stealthily peeking back at the house. The driver opened the door, and he climbed in quickly.\n\n\"Jon Elsworth,\" he said by way of introduction, extending his hand.\n\n\"Steve Jeffery, pleased to meet you.\"\n\nHe leaned back and looked me over. \"So you're the magic man.\"\n\nI grinned. \"How am I supposed to respond to that?\"\n\n\"Proudly? She's out of her room. Getting dressed up. Going out, with a man. I don't know how you did it, but I had to meet the miracle worker.\"\n\n\"I appreciate it. She's an amazing woman.\"\n\nHe smiled. \"No argument from me. Her mother tells me you know her history.\"\n\n\"Only from reports. We haven't spoken about it. I didn't want to look too deep. It's her business, not mine.\"\n\n\"Once you walk up those steps, it becomes your business. It's shaped her life ever since. You're playing a dangerous game here,\" he said.\n\n\"Sir, no offense, but this is hardly a game.\"\n\n\"From what I hear, it's all about a game. It sounds like you're good. If you've mastered that one, maybe you can figure this one out. You'll never play a more complex or rewarding one.\"\n\n\"Anything I should know?\" I asked.\n\n\"Wish I could help you. I do. She puts up with me, barely. I see her struggle, flinching if I even touch her. Do you know what that's like? Your baby can't stand your touch. Lying in that hospital bed, broken, and she screamed when I hugged her. Screamed. All I wanted to do was hold her and protect her. I couldn't even be in a room with her alone for weeks. My daughter. My only child. I failed her.\"\n\nI didn't know what to say. It was difficult to hear.\n\n\"How did you do it? I have to know,\" he asked, practically begging.\n\n\"I'm not real to her. An avatar in game. A voice over a speaker. A fantasy boyfriend over a webcam. She's playful, joking, flirting, teasing, an absolute joy, but it's only possible in the abstract. I don't have high hopes for this working out, when I become flesh and blood to her. Still, I want to give it a try.\"\n\n\"Her mother and I will be praying for you. It's her cousin's engagement party. Her closest friend. She wouldn't chance this for anyone but her. She'll know almost everyone there. Still, you'll have to help her. Keep the men at bay. One hug, one grabbed arm, even brushing against her could ruin everything. Once she loses it, she's useless. For days. Do your best, please. Protect my girl.\"\n\n\"I'll do what I can. You can count on that.\"\n\n\"I have to go back. I'll see you in a few minutes.\" He shook my hand again, nervously. I couldn't say I blamed him. We had matching sweaty palms.\n\nI spent a few minutes confirming everything was set. All my failsafes were in play, reservations ready. I had a few items ready for her within the Limo. I was almost certain we'd need them; I only hoped it was enough.\n\nI felt like a teenager going on his first date. I was excited and nervous. I kept checking my tablet nervously, texting Dan and Jaime. They were great as always, trying to settle me down.\n\nAt five minutes 'til, I grabbed the orchid and got out of the Limo. I walked up the stairs to the brownstone and waited a bit, breathing deeply, thinking calming thoughts. We were friends, Sheri and I. Good friends. That should carry us through. I trusted her, and I believe she trusted me.\n\nMy knock on the door was answered almost immediately. Jon let me in, shaking my hand. \"He's here!\" he shouted toward the back of the house.\n\nGod, he looked more nervous than me. He was sweating bullets, rocking back and forth on his heels. I put my hand on his shoulder. \"Relax, Jon. It happens or it doesn't. If this turns out to be a flop, we'll retreat, and try again later. I'm in it for the long-haul.\"\n\n\"I don't get it,\" he said. \"We've tried everything, counselors, therapists, drugs, group, none of it has helped very much. Then out of the blue, you're here. I don't get it.\"\n\n\"I suspect everything else did work, at least some. It's been a journey, and I was the one lucky enough to be there when she was ready to take the next step.\"\n\nAn attractive, elegant woman, I'd guess in her early 40's, came tearing down the steps. \"She's on her way, just a couple more minutes.\" She turned toward me, glancing at her husband.\n\n\"Carolyn, this is Steve Jeffery, our daughter's date for the evening. Steve, this vision of loveliness is my wife, Carolyn.\"\n\nI took her hand, leaning over to kiss it, formally, when she pulled me into her arms, tears rolling down her lovely face. \"I don't know how you did it, but I can never thank you enough.\"\n\nI held her up and brushed her tears away, trying to stifle my own. \"No tears now. Please. Thank you for trusting me with her.\"\n\nShe nodded, wiping her face.\n\nI turned to Jon. \"Is Max around?\"\n\nHe nodded. \"Kept him in back, didn't need you both covered with dog hair.\"\n\n\"Could you get him? I think it'll help. He's a bond, and I would like to meet him anyway.\"\n\nJon seemed a little confused, but he walked away, and couple of minutes later that gorgeous chocolate lab came bounding in and greeted me like a long lost friend. I knelt down and hugged him, rubbing behind the ears, playfully. He rolled over and I scratched his belly, aggressively, getting his leg kicking.\n\n\"Oh, that's great,\" I heard from the stairs. \"Friggin' Max steals my big entrance scene.\"\n\nI looked up, laughing, and stopped in shock. She was stunning. The pink dress, with hints of lavender, was form-fitting, full length, a slit up the left side to mid-thigh. Spaghetti straps, no sleeves, the front curving over the top of her breasts, diving down daringly between them, showing plenty of cleavage. Her hair was up, long wisps falling in front of her ears, drop earrings hanging from her lobes. No glasses tonight. Simple necklace, looked like platinum and diamonds, short, accentuating her slender neck more than her breasts. I couldn't breathe, couldn't think. \n\nShe paused in mid-step, looking around. \"Is...is something wrong?\" she asked nervously.\n\nHer mother laughed, \"No baby, that's a natural reaction. You're going to have to get used to it.\"\n\n\"You...you're so beautiful, baby,\" her father said softly.\n\nShe chuckled, walking carefully down the steps, her heels obviously something she wasn't too comfortable with. \"Sure Dad. I bet you say that to all your girls.\"\n\nHe grinned. \"I do. Doesn't make it any less true.\"\n\nShe looked at me. \"Well?\"\n\nI had struggled to recover, and took the coward's way out. \"What do you think, Max? She good enough to go out with us?\"\n\nShe stood over me, glaring at her puppy. \"Max, you fucking traitor. Rolling over for him the minute he walks in the door.\"\n\nI stood, and Max rubbed up against me, while I opened the flower box. \"Bro-code, Cherry. You know how it goes.\" I grinned. \"You do look lovely. Not my favorite outfit of yours, but it'll do in public.\"\n\nShe grinned, blushing. \"Don't start.\" She chuckled, \"You know I got PerZeus's bracers today.\"\n\nI laughed, casually reaching forward and pulling her dress away from chest, sliding my fingers inside and pinning the corsage on. \"You're shitting me! I talked to him today, and he never mentioned a thing. How the hell did you manage that?\"\n\nI saw her tense up a bit, especially when my fingers brushed against her skin. I tried to keep her engaged in our virtual world conversation. She laughed, and it was a beautiful, easy going joyous sound. \"I told him I was going to cancel our date, since I couldn't trust your friends. I had him shitting bricks. I could have stripped his character completely.\"\n\n\"That's mean,\" I teased her, adjusting the flower, and patting it in place. \"You didn't mean it, I hope. You know you can trust him.\"\n\nShe kicked me teasingly. \"Of course I didn't mean it. Doesn't mean I can trust him. I know you can, but that's not the same.\"\n\n\"Do you have a leash for Max?\" I asked.\n\n\"Leash?\" Jon looked surprised.\n\n\"Yeah. She promised me a package deal. No Max, no date, no way,\" I teased, winking.\n\nSheri started to say something, but thought better of it, turning to her mother. \"Did he screw up the corsage?\" she asked, with a sly glance toward me. \"Barbarians have never been known for their sense of style.\"\n\nHer mother played with it for a few seconds, leaving it exactly as it was. Jon showed up with the leash and attached it to Max. He stood looking at his girl, trembling. I knew he wanted to reach out to her, but couldn't.\n\nI think Sheri surprised all of us, including herself, when she gave her father a brief hug. \"Thanks Dad, for everything. I couldn't do this without you. I love you.\"\n\nWe left him with tears in his eyes, while Max tried to kill me, dragging me down the steps. \n\nThe driver opened the door for us. Although horribly uncouth, I got in second, following Max, and tied his leash down, tossing him a treat to get him to settle. I scooted in as far as I could, and she climbed in afterward, suddenly looking horribly nervous. The driver closed the door after her.\n\n\"I lied. I think that's my second favorite outfit of yours,\" I told her.\n\nShe smiled awkwardly. \"Bunny PJs number one?\"\n\n\"Right the first time. How'd you know?\"\n\nShe reached out and smacked me. \n\n\"Nervous,\" I asked her.\n\nShe nodded.\n\n\"Want to talk about it?\"\n\nShe shook her head. I could sense the anxiety building up, her breathing getting faster. Time for the first of my crutches, and by far the most important. I hoped to God I had guessed right.\n\n\"Turn to look out the window, Cherry, your back toward me. Trust me.\"\n\nShe turned, slowly, and I reached around her and place the 10\" tablet in her hands. She looked down at it, into my smiling face.\n\nI turned away from her, our backs maybe a foot apart. I looked into my matching tablet. \"You're not going to wuss out on me. Don't make me get the boobies and booty involved. You know they'll side with me.\"\n\nHer face on the screen grinned. \"Not tonight. I made them promise. I gave them my own bribes. They're both very happy right now. And nothing as cheap and gauche as Victoria's Secret.\"\n\n\"Jesus, Sheri! Frederick's? You really think that's fair?\"\n\nShe leaned over, and pulled her top out a little, showing me a lacy pink and red bra. \"All's fair in love and war.\"\n\n\"I picked up some loot today,\" I told her. \"Open the compartment on the door.\"\n\nShe reached off screen, and came back with a box. \"Can I open it?\"\n\n\"You know I need to gear you up. Someone gave you a hell of an amulet, but I think you need this. Go ahead.\"\n\nShe opened the box and gasped. \"Stats?\"\n\n\"Primary is +100 Courage and Beauty. I think the beauty's wasted, pretty sure you've already maxed out there. Also has some other crap, like 120 resist to fear.\"\n\nShe laughed, putting it on her finger. \"Noob. Fear has a 70 max.\"\n\n\"70 Fear resist, plus vampiric resist from teammates. As long as I'm nearby, you have nothing to fear. Ever.\"\n\n\"What's the stone?\"\n\n\"Perfect Star Ruby, sorry it doesn't match your outfit and other jewelry better.\"\n\nShe laughed, \"God, who's the noob now, AceHole? Any pro knows you don't go for the matching sets unless there's an ungodly bonus. This is perfect. Do I want to know how much I'm going to owe you for this one?\"\n\n\"Please don't ask. I can't give you a fair price for being with you tonight. No way I can afford that.\"\n\nShe giggled, and I felt her back touch mine softly. \"According to Dad, you can afford a hell of a lot.\"\n\n\"Not you. Not this. Don't make me get all sappy, now, right before we have to hit the dungeon.\"\n\n\"I'll have you at my side, like always. Watching out for me.\"\n\n\"And vice versa. No Dead Ends this time Ok? We're playing hardcore.\"\n\nI leaned back a little and felt more of her weight against my back. \n\n\"We can handle this, right?\" she asked. \n\n\"Stupid question and you know it. Is there anything in game that you and I can't handle together?\"\n\nShe shook her head. \"No. You're right. We make a hell of a team. PerZeus is jealous you know.\"\n\n\"Of course. Who wouldn't be? Smart, sexy, gorgeous, and a kick-ass gamer. You got it all babe.\"\n\n\"No, silly. He's jealous of me. Taking all your time.\"\n\n\"Maybe a little. He's been #1 since 9th grade. Even most of the time during my marriages. That probably should have told me something. Guess I'm kind of ignorant in some areas.\"\n\n\"Sandy's my PerZeus. The one always there for me. I wouldn't do this for anybody else. Thank you for making this possible.\"\n\nHer back was pressed firmly against mine, her voice louder in my ear, than from the tablet. I was barely looking at it, preferring to watch her reflection in the window. But the ruse worked. It took us just far enough from reality to let her open up.\n\nThe Limo pulled to a stop, and backed into the space across from her cousin's place. We'd been holding it all day. I felt her nervousness return. She closed the tablet and put it to the side.\n\n\"Take it. Take the tablet,\" I told her.\n\n\"I'll look like an idiot,\" she whispered, sorrowfully.\n\n\"No you won't. Your cousin loves you, she'll understand. Being here is the biggest gift you could ever give her and she knows it. If the tablet helps, that's all that matters. Anytime you get nervous, for any reason at all, turn away from the crowd, and look for me online. I'll be there.\"\n\nThe door was open for her to get out, and she wasn't moving. At least she had picked up the tablet again.\n\n\"See where the Limo is? It'll be here all night, and Max is here waiting for you. If it gets bad, come back to the Limo. Don't even worry about me. You got that?\"\n\nShe nodded.\n\n\"Then get your cute butt out there. Time to farm. Loot and XP. Nobody's better than us.\"\n\nShe turned and smiled for me. \"We're the best, aren't we?\"\n\n\"No doubt. Hell, you're almost as good as me,\" I teased.\n\n\"Asshole,\" she giggled, climbing out of the vehicle.\n\n\"AceHole, short for Ace in the Hole. That's what I am for you. Your secret advantage.\"\n\nShe waited for me outside of the vehicle, and I reached for her gently, turning her toward the driver. \"CherryBomb, meet GnuMeat. He'll be out here if you need him. You can trust him with your life. I do.\"\n\nHe smiled, but didn't stick out his hand. \"300 lb. neckbeard, Steve? Think you missed it on this one.\" He wasn't a big guy, maybe 5'10\" but he had that hard look that came from working for a living. His family were mechanics, and he'd worked in a garage as soon as he knew one tool from the other. His rough look hid his sharp brain. Master's degree in mechanical engineering from MIT. Lead Mech E in all of our fledgling companies.\n\nHe wasn't done with her. \"I hate to say this, and he'll probably kick my ass for it, but I have to warn you. You fuck with him, you betray him, and heaven and earth won't save you.\"\n\nI was in his face before he could finish. \"YOU STUPID FUCK! How can she trust you now, after you threatened her? Get the fuck out of my face! Get lost. I'll find someone else who has my back.\"\n\nHe shrugged. He backed up, looking at Sheri. \"What I said. Remember it.\"\n\nI had my phone out, already dialing Dan.\n\n\"Stop,\" she told me, her hand on my arm.\n\n\"No. I need someone here. Someone I can trust.\"\n\n\"He's the one. I know it. He'd never let you down. I'll never betray you, so his words are just so much shit. I want him here. Please.\" Her hand squeezed my arm, and I looked up at her. She meant it.\n\n\"You sure? I can have someone here in 10 minutes.\"\n\n\"I'm sure.\"\n\nI looked over at Mark, who was standing there, acting like he didn't have a care in the world. \"Tonight, you're here for her, not me. You fuck this up, and you and I are going to have it out. You understand me?\"\n\n\"Don't fucking talking to me like that. I'm not some hired punk. You forgotten everything? Who has your back? I'm here. I'll do whatever it takes. Always. Fuck you, if you think otherwise, asshole. Fuckin' skirt has your brain fucked up again.\"\n\nSheri stepped in front of me, glaring at him. \"Fuck you, GnuMeat. I've got his back, in game and out. Not like some sissified glass-cannon, taking his shots from a distance and kiting his way through the elites while Ace and I do the heavy lifting. You sit back and take your shots, but I've got his back. And he has mine.\"\n\nMark smiled. \"Good. You remember that. Don't forget who has the 120K DPS in the background, ready to do serious damage if needed.\"\n\nShe turned and grabbed my hand, stomping toward the entrance. I was surprised by her response. I think she was as well, and released me after half-a-dozen steps. \"Sorry,\" she mumbled.\n\nI took her hand in mine, and she didn't pull away. \"My girlfriend can hold my hand anytime she wants. As long as she has my back.\"\n\nShe nudged me with her shoulder. \"Don't tease me.\"\n\n\"Wouldn't dream of it. I liked the way you shot him down. Too cool.\"\n\nShe giggled. \"Damn, he pissed me off! I'd neuter him in game.\"\n\nI looked up at the three story edifice in front of us. We were on the avenue, and all the buildings facing the road were old and stately. It was a mixed neighborhood. One block over, off the main drag, many of the buildings which had once housed the well-to-do had been converted into apartments. Not low rent by any means, but nothing like the places around us. Someone had money, but I guess that shouldn't surprise me.\n\nShe stopped and gave my hand a squeeze, then dropped it. I watched her take a deep breath.\n\n\"You Ok?\" I asked.\n\n\"I think so. I need a moment, that's all.\"\n\nA figure standing in the dark by the entrance stepped toward us. \"You lose those bracers, your scrawny ass is mine,\" he growled.\n\nShe grinned. \"PerZeus?\"\n\n\"Dan for tonight,\" he said, standing tall in his form fitting tux. At least as tall as he could. Not an especially imposing figure, at about 5'7\" and maybe a buck fifty.\n\nShe laughed. \"I expected someone a little...bigger.\"\n\n\"Laugh it up, sweet cheeks. I own your ass in game, and we both know it.\"\n\n\"For now. We'll see how I do with my amazing new epic bracers,\" she said, poking away at him.\n\n\"Jesus, lady. Even out of game, you're a piece of work.\"\n\nShe walked over and I was surprised once more when she put her hand on his arm. \"Thank you for being here. You...I think I can...\"\n\nHe grinned. \"I know, irresistible. It's a curse. I can't help it.\"\n\nShe smacked him playfully. \"Way to ruin a moment, jackass.\"\n\nHis big smile disappeared for a moment. \"Hey, just so you know, you're worth all of it. I appreciate that you can stand here with me. It means a lot. Big props, half-pint.\"\n\nShe smiled. \"Ditto.\" She walked back to me, \"What's his role?\"\n\n\"Joining us inside. You get nervous or upset, and I'm not around, he's there for you. My brother by another mother, he won't let you down.\"\n\nHe nodded. \"Whatever you need, sugar britches. I got your back.\" He grinned. \"Awfully nice backside, I might add. Definitely worth watching.\"\n\nI saw her fiddling with her iPad for a second, adjusting her grip, as if to verify it was still there. \"I guess we can't stand out here forever.\"\n\nI put my elbow out to escort her, and a few seconds later I felt her hand slip in and grab my bicep. I kind of wished it was bigger. She gave me a squeeze. \"Take lead.\"",
        "We walked up and through the outside door. In the vestibule a man opened the door for us, letting us in, and the noise of the festivities out.\n\nThere must have been close to 100 people in there, and it was pretty crowded near the door. I felt Sheri's hand grip my arm tightly. \"Dan,\" I said.\n\nHe stepped around us, and started walking through the crowd. I followed, with Sheri in his shadow. People were looking at us as we passed, and I heard the whispering, and a hush in our wake.\n\nMostly, I was looking for a break in the crowd, some space to get settled in. Someone had other plans.\n\nI heard the squeal before I saw her. A tall leggy brunette, skinny but damned pretty, came barreling up to us. \"Sheri!\" she cried out, and a moment later my date was engulfed in her arms. \n\n\"God, I'm so glad you're here! You have to meet Robert. You going to be Ok with that? He's been dying to meet you. He knows...\" she said.\n\nSheri was grinning. \"I wouldn't miss your engagement party for anything. I'd love to meet him.\" She looked over at me. \"Sandy, this is Steve.\"\n\nI started to present myself, then I was fighting to keep my balance as our hostess leaped up and threw her arms around my neck, kissing me on the lips. Hard. I don't think I could have been more stunned.\n\n\"The infamous AceHole! Steve, you're my hero. Thank you so much,\" she gushed. \"Anything you need, anything I can do for you that my fianc\u00e9e would approve of, is yours for the asking.\" She grinned teasingly. \"Maybe a little more if you can keep a secret. Hell, maybe a lot more.\"\n\nSheri was pulling her cousin's arm off me. \"Harlot! He's mine! Damn it, you've got your own.\"\n\nSandy had an infectious laugh. \"No shit. Anyone seeing him hover over you would know you're his. Shit girl, hit the jackpot much?\"\n\nI felt myself blushing. Dan came to the rescue. \"Hey Cherry, what am I, chopped meat?\"\n\nShe laughed. \"Mr. Manners here is with us, if you don't mind. Dan's responsible for bringing hot-stuff and I together. Please forgive him if he drools or wets himself. He's not quite house-trained yet.\"\n\nSandy turned and gave him a big hug as well. \"PerZeus is more than welcome. If he did nothing else ever, bringing you guys together would put me in his debt. I'll task one of the help with cleaning up after him.\"\n\nHe grinned. \"I can keep secrets, if the same deal is on.\"\n\nShe laughed. \"No way, Jose. I know Steve is too much of a gentleman to take me up on it. Just like I know that you're not.\"\n\n\"Hey!\" I interjected. \"Who says I'm a gentleman?\"\n\nShe looked at me smirking. \"Really? White Knight and all, you think it doesn't show? Face it, bub, you're toast already.\" She turned back to Sheri, grabbing her hand. \"Come on, I've got a nice little spot staked out for you, and Robert really is dying to meet you.\"\n\nSheri reached back and grabbed my arm, squeezing my wrist painfully tight, as she was dragged into the depths of the house. A quick turn to the side, and we were suddenly standing in an oasis of peace, beside a column and behind a couch. Sandy turned and took Sheri by the shoulder, guiding her to the wall. She took me by the arm. \"You, here,\" she said, establishing my post at Sheri's side, basically blocking access to anyone from behind the couch.\n\nShe walked over and took Dan by the elbow. \"You're a hell of a friend, aren't you?\" \n\n\"What are friends for?\" he asked.\n\nShe leaned up and gave him a peck on the cheek. \"This is your spot. Don't worry, I'll send a few single lovelies by to keep you entertained. You know your role, right? No more than one guy at a time gets back there.\"\n\nHe nodded. \"Got it. I gotta meet this Robert guy. Seems like a lucky dude.\"\n\nShe laughed, giving him a squeeze. \"You have no idea, sugar.\"\n\nSheri had seemed Ok, but I could tell she was getting a little flustered. She was shifting her weight, her eyes scanning the crowd.\n\n\"No worse than crossing that damned bridge in Act III,\" I said.\n\nShe looked up at me, and I saw a hint of a smile. \"I was thinking the castle rampart catapults, and your job is to protect me, while those hordes of nasties keep coming.\"\n\n\"Shit, that's too easy. I'm used to protecting three of 'em. One little girl shouldn't be too hard.\"\n\nShe kicked out at me, connecting with my shin. \"Watch who you're calling little girl.\"\n\n\"Ok, one gorgeous, stacked girl, with a hellacious ass shouldn't be too hard to protect.\"\n\nShe smiled, \"The girl, the boobies and the booty all thank you, kind sir.\" She looked up, \"...and it starts.\"\n\nSandy and, I assumed, her beau, walked past Dan single file. Not much choice, the way he had the opening blocked off. \"Here she is Rob, my favorite person in the whole wide world.\"\n\nHe smiled, not offering his hand. \"Thank you so much. You know you made her night.\" He turned back to Sandy. \"Hey! Wait a second. I thought I was your favorite person!\"\n\n\"No way. Favorite male person, and at the moment, that's just by a hair, considering Steve here got her out of the house, and the way you've been flirting with the Bobbsey twins.\"\n\nHe blushed. \"You shouldn't leave me alone with those girls. They could eat a man alive.\"\n\nI stuck out my hand. \"Steve, second favorite male person. Behave yourself. I doubt I could survive being first.\"\n\nHe laughed, giving me a firm shake. \"No shit. Tough job, but somebody's got to do it.\"\n\nSandy smacked him playfully. She seemed like an awfully physical girl. Not that I thought there was anything wrong with that. \"Tough job, is it? Maybe I should see if there's anybody else that would like the position.\" She turned and looked over her shoulder. \"I bet Dan would be up to it.\"\n\nRobert pulled his fianc\u00e9e close, and smacked her bottom playfully. \"You don't really want bloodshed at our party, do you, love?\"\n\n\"I see one of those girl's hands on your ass again, and we'll be knee deep in it,\" she answered, giving him a hard look.\n\nSheri seemed to be enjoying the little t\u00eate-\u00e0-t\u00eate. \"Maybe I should check out that irresistible butt,\" she said.\n\nSandy's draw dropped. \"Et tu, Sheri!\"\n\nMy girl giggled. \"You were manhandling my date earlier, dear cousin.\"\n\nRobert gave her a look, and she blushed. \"Jesus, you always were a tattle-tale. It was just a hug.\"\n\n\"And a kiss,\" Sheri teased.\n\n\"A small kiss,\" Sandy argued.\n\n\"On the lips.\" Sheri seemed to be getting a kick out of this.\n\n\"Closed mouth,\" Sandy whined.\n\n\"Mostly,\" I teased.\n\nShe gasped at me. \"Keep it up, and you won't be number two much longer.\"\n\nI laughed. \"I'm not saying your mouth wasn't closed, beautiful.\" I gave Robert a wink.\n\nHis laughter was loud and strong. \"Damn. I think we're going to get on just fine. I think a kiss for number two is definitely in line. That's all though. I wouldn't want you to have to kick my ass.\"\n\nRobert was a big guy, a good 6'2\" and obviously in great shape. I doubt if I could take him. No way I'd even want to try, he did seem like a good guy.\n\n\"That's all. I'd hate to bleed all over your nice new outfit. Besides, look who I'm here with. She'd skin me alive first.\"\n\n\"And salt you down, after,\" Sheri said.\n\nSandy took her man in hand. \"The four of us. Soon, Ok?\"\n\nSheri nodded. \"I'd like that.\"\n\n\"You're sure?\" her cousin asked, a little nervously, glancing at her man.\n\n\"Definitely. I can't stay cooped up forever, and if I can pry my man away from his myriad responsibilities for a bit, there's nobody I'd rather spend time with.\"\n\nI saw Sandy's eyes mist up, then she leaned in and hugged her cousin. \"I love you,\" she said softly.\n\n\"Me too,\" Sheri whispered.\n\nI almost lost it when Sandy moved her lips to Sheri's in a kiss better than the one I'd received. \"I can't thank you enough,\" Sandy murmured.\n\n\"Shh. It's cool. Everything. Go to your man.\"\n\nSandy pulled away, wiped her eyes, then reached up and pulled my head down, kissing me on the lips, her mouth a little less closed this time, her tongue caressing my lip briefly. \"You,\" she said huskily. \"I...shit, thank you. Thank you, thank you, thank you.\"\n\nDamn if I didn't feel a moistness in the corner of my own eye. Just the left one you understand. Only one drop. I'm no friggin' wuss.\n\n\"I'm the lucky one,\" I told her.\n\nHer lips turned back up, and Sandy wiped her eyes again. \"I hope you know just how lucky you are.\"\n\n\"Luckiest man in the world,\" I told her, \"with perhaps present company excluded.\"\n\nShe grabbed her husband-to-be and started to walk away. \"Gotta mingle, and there are a lot of old friends dying to stop by. Let me know if it gets to be too much.\" She stopped and turned back. \"You let this one go, I'm locking him in my basement. He's too good to let get away.\"\n\n\"Hey!\" Robert said.\n\n\"Oh, don't worry dear. It would only be for when you're on travel. That's, what, about 50% of the time? I promise, the babies will all be yours.\" She laughed, dragging him off. He looked back at us, and rolled his eyes.\n\n\"She always like that?\" I had to ask.\n\n\"This is one of her tame nights. He's good for her,\" Sheri said.\n\nWith the ice broken, a steady stream of old girlfriends stopped by, some chatting briefly, while others seemed reluctant to go. Several asked if she'd be around and if they could get together some time. Sheri didn't commit to any of them, but promised she'd be in contact.\n\nI seemed to be getting a lot of attention. More than I was comfortable with. When the women showed up in twos or threes, too many of them found it necessary to stand very close. A few wandering hands found my waist, and one even crept a little lower.\n\nSheri noticed that. As soon as the offender was away she glared at me. \"Public toilet would be cleaner. Tramp.\"\n\n\"I feel so dirty,\" I told her. \"Used. How do you girls stand it?\"\n\nShe tried to keep a straight face, then poked me. \"Don't even think about it, bucko. You're all mine.\"\n\nI leaned down and gave her a quick peck on the cheek. \"And you're mine, gamer girl.\"\n\n\"Her tits are fake, too,\" she said.\n\n\"I know. The boobies already warned me.\"\n\nHer grin was gorgeous. \"Don't you forget it. They're very jealous.\"\n\n\"No worries. I prefer real and perfect every day of the week. Twice on Sundays.\"\n\nA few guys stopped by, apparently most of them were old acquaintances, and she seemed to deal with it well. Mostly. After the fourth or fifth, I saw her getting antsy. \"You alright?\" I asked softly.\n\n\"I...I need a minute, Ok?\"\n\nI looked over at Dan, who managed to glance away from his ever-present new female friends every few seconds. I caught his eye, and ran my finger across my throat. He nodded, and stepped beside his latest charmer, blocking all access.\n\nSheri didn't look good. She seemed to be shaking. I turned her toward the corner carefully, and lifted her hand with the tablet in it. She opened the cover, and I stood with my back to hers, looking into mine.\n\n\"Want to blow this stand, and go kill something?\" I asked.\n\nHer face and chest filled my screen. \"Too early, but it's tempting,\" she said.\n\n\"I don't suppose you could tilt the monitor down a bit. I think the boobies are trying to get my attention.\"\n\nShe smiled, and I got a view of her cleavage. \"Like what you see?\"\n\n\"Do you even need an answer? You know me and the girls have a special relationship.\"\n\nI felt her butt rub up against mine. \"Someone's getting jealous.\"\n\n\"No need. The booty should know by now it's a package deal. Especially in that dress, booty's getting a lot of attention.\"\n\n\"If you're good, maybe when we get to the limo, I'll let the girls have their way with you.\"\n\n\"Tease.\"\n\n\"Maybe. I guess you'll have to be patient and find out.\" She brought her lips up to the camera, giving me a pucker. \"Thank you.\"\n\nI did the same. \"No thanks necessary. The least I could do for the woman I love.\"\n\nShe smiled. \"Say it again.\"\n\n\"No thanks...\"\n\n\"Asshole. Say it.\"\n\n\"I love you, Sheri.\"\n\nThe screen went dark, and she grabbed my arm, turning me. She was in my arms, hugging me hard. \"Me too.\"\n\nI stroked her hair softly. \"Ready for the next wave?\"\n\nShe sighed, releasing me. \"Did you learn that from Dan?\"\n\n\"What?\"\n\n\"How to ruin a moment.\"\n\nI pulled her in for a hug. \"I would love to hold you all night, but the queue is backing up.\"\n\nShe looked over and saw more than a few curious eyes standing just beyond Dan, studying us.\n\nShe was better after that, and Sandy stopped by again for a quick visit. Somehow, she convinced Sheri to take the show on the road, and once again I was escorting her through the crowd, stopping for a drink for all of us at one of the bars, and making small talk to a few of the groups standing around.\n\nSo much better than I thought she'd be handling it. One guy brushed against her, and she turned away quickly, but managed to continue her conversation. I was afraid she'd panic, but she seemed to take it in stride. Damn, I was proud of her.\n\nIt was going too good. I let my guard down. After the second drink, I leaned over and whispered, \"I have to hit the head. Be back in a second. Is that Ok?\"\n\nShe was talking to two girls she seemed to know very well, and she nodded, waving her tablet. Dan was still standing only a couple of steps away. She was covered.\n\nI made my way to one of the bathrooms, and waited in line for a bit. On the way out I met Robert, and he introduced me to a few friends before I could make my escape. \n\nWe'd been standing just outside the kitchen earlier, but when I got there, it looked like she'd moved on. I looked around, and saw Dan in the kitchen, obviously doing the same.\n\nI pushed my way through the crowd. \"Where?\"\n\n\"She was just here. Not 30 seconds ago,\" he said.\n\nOne of the girls from earlier was standing nearby, and must have noticed our concern. \"If you're looking for your girl, she took off like a cat with its tail on fire out the back door.\"\n\n\"What? Where?\" I asked, looking for the door.\n\n\"She was talking to Dale, and then she took off that way,\" she said pointing to an opening at the side of the room, near the back wall.\n\n\"Call 'em!\" I yelled at Dan, then took off after her. \n\nThe hall led to a utility area with a door to the outside. I was through it in a second, calling out for her. It was an alley that ran the length of the block in both directions. Stoops, garbage cans, utility boxes, and dark recesses were all I saw.\n\nI was scanning the ground for some clue as to which direction she took when Dan came barreling out the door. I wanted to lambaste him for losing sight of her, but it wasn't the time. \"You go that way,\" I said, and took off running in the opposite.\n\nLike most of the New York blocks, this one was long and narrow, and seemed to go on forever. After a hundred feet or so I saw her tablet lying on the ground. I reached in my pocket and grabbed my phone. I pressed the push to talk. \"She's this way,\" I said. \"Tell the guys.\"\n\nI was running now, and saw a crowd on a back stoop ahead. I was going to ask if they'd spotted her, when I saw her huddled in a ball, some guy's arm around her, trying to get her to drink.\n\nThere were three of them sitting there, one on the bottom step, touching her leg, the other two bracketing her, their bodies pressed against hers. She never even looked up at me, just sat, hugging her legs, rocking. It was a bad position, showing her panties to the guy on the bottom stoop. \n\nI came to a stop. \"Leave her alone, she's with me,\" I said angrily. Fuck. This wasn't good. She still didn't look up. She seemed almost catatonic.\n\nThe guy on the bottom step stood, placing himself between me and the others. \"I don't think so. Looks like she prefers our company,\" he smirked.\n\nI tried to stay calm. \"Listen. She's my date. She's going with me. Just leave her alone. Can't you see she's not well?\"\n\nThe bozo stepped toward me, \"Get lost, asshole. She's fine here. You can't take care of her, we will. Go away and nobody has to get hurt.\"\n\nThe jerk trying to give her a drink reached over and thrust his hand in her top, smirking at me. \"Private party, dickwad,\" he said.\n\nI lost it. I should have waited; the others would have been there soon. Dan couldn't have been too far behind. But I couldn't. I'm not much of a fighter, outside of the game, but I rushed the guy in front of me, pushing him to the side, and grabbed for Sheri. I had her for just a second, before the guy with his hand on her was pulling her up the stairs, while the other two started on me. \n\nI blocked a couple of their fists with my head and body, swinging wildly. I should have been paying attention to them, but all I could see was Sheri being dragged away from me. I launched myself at the guys with his hands on her, and drove him into the wall, hard. \n\nI heard Dan yelling behind me, and I slammed the guy I had my hands on's head into the wall, and he dropped, letting go of Sheri. I turned and caught a foot in the side as I tried to get up, moving between her and the other two. I saw Dan was rolling on the ground with one of the guys, and I grabbed the leg of the kicker, dragging him down.\n\n\"Run, Sheri!\" I yelled, trading blows with the guy between her and freedom.\n\nShe didn't move and I tried to push her. \"Go!\"\n\nI caught a knee in the ribs, but managed to turn the guy and started whaling on his head. For a second I thought we were going to be Ok, when the door Sheri was leaning against started to open.\n\n\"What the fuck!\" I heard, then saw the door push wider. I could only hope that Dan was doing better than me. I pushed the guy I was on against the door, wedging a foot against the rail, and gave Sheri a push. \"RUN!\" I screamed at her. \n\nI wasn't fighting anymore, just pushing the guy, head tucked down, while he swung at me. I had to keep that door closed. Suddenly someone was on my back, beating down on my head, and the door was slowly opening despite my best efforts. A burning agony started in my back, sapping my strength. I couldn't see, and I knew I was in serious trouble.\n\nI turned my head, and Sheri was huddled, shaking. \"PORTAL, CHERRYBOMB,\" I yelled. \"DON'T WIPE! PORTAL!\" \n\nI saw an arm and a leg snaking out the door opening with some kind of stick in its hand. The pain in my back took on a whole new meaning, and I could feel myself blacking out.\n\n\"Portal,\" I groaned. \"Portal.\"\n\n* * *\n\nI shifted and bolts of pain shot through my back. I tried to move my arm and the pain moved to my ribs and forearm. Son-of-a-bitch, it hurt. I opened my eyes, and saw nothing but grey and white.\n\nI heard footsteps, and a hand was on my shoulder. I tried to push it away and had to stifle a scream.\n\n\"Relax, Mr. Jeffery, don't try to move,\" I heard a strange voice intone.\n\nI looked over and saw a figure in white standing over me. \n\n\"You've been injured,\" she said calmly. \"Don't move.\"\n\nI was lying on my side, and after trying to shift again, I knew she was right. I shouldn't move.\n\n\"Where...\"\n\n\"Mount Sinai,\" she said. \"You had us scared there for a while. You've got a lot of worried friends driving us crazy. If you'd settle down, I could check on you, give you something for the pain, and maybe we'll let you see a few of your buddies.\"\n\n\"Sheri.\"\n\n\"Shh. Be still. This will only take a minute.\"\n\nIt took a lot longer than a minute, but by the time she was done, my mind was clearing up and the pain was down to a dull roar.\n\nThe door opened, and in moments I was surrounded. \"Stupid fuck,\" Dan said, standing at the head of the bed, looking down at me, anxiously.\n\n\"You...look like...shit,\" I said. It was hard to get the words out. My head felt like it was full of cotton, and my tongue was too big for my mouth.\n\nI was right though. He did. He had his arm in a sling, and his face was swollen. Bandage on the side of his face, and a black eye tinged with reds and oranges. The split lip was an improvement.\n\n\"Look who's talking, dipshit. Couldn't wait for the cavalry could you?\"\n\n\"Your face...looks better,\" I told him, trying to look around. Mark was there, looking fresh as a daisy, and behind him were Robert and Sandy. She looked like she'd been crying. I noticed that most were out of their party clothes, except Dan and Sandy.",
        "\"Sheri?\" I asked.\n\n\"She'll be alright,\" Dan said softly. I could see he was hurting, and I don't mean physically.\n\n\"Not your...fault,\" I told him. I knew the guilt would be killing him.\n\n\"I fucked up, Steve. God, I'm so sorry. I was watching her, I swear I was. I don't know how she got away. I know you must hate me. I'll leave if you want.\" The poor fucker was practically in tears.\n\n\"No. I...love you man,\" I said, doing my best to grin. \n\nHe chuckled, wiping his eyes. \"You're not getting my Bud Light.\" Old inside joke.\n\n\"Where?\"\n\n\"Jaime went for her. Relax. You did good, jerkoff.\"\n\nI learned a little of what happened, in bits and pieces. Mark couldn't get the limo down the alley, and had to park it. He started at the wrong end, and was late getting to the scene. Dan never got past the first guy, and though I managed to delay anyone else joining our little get-together, when the asshole I'd knocked into the wall climbed on my back and started to make a pincushion out of me with a knife, things were looking bleak.\n\nWe thought we'd taken good precautions, but we hadn't planned on the back door. I always knew there was a chance she'd freak out. Mark had been by the car a few door down from the entrance, and Jaime had been stationed a short ways down on the opposite side, in case she made a run for it in the wrong direction.\n\nWhen they got the call, Jaime had to crash his way into the party, across the entire house, then guess which way we'd gone. He'd heard the ruckus and got there in the nick of time, although a minute or two earlier would have been nice.\n\nI looked up during a pause in the story-telling, and Man-mountain was stepping through the doorway. The crowd parted and I saw he was carrying Sheri in his arms. She looked rough, bruised, her hair a mess, dress missing. She had a hospital gown on, and her leg was in a cast.\n\nJaime was grinning like there was no tomorrow. He stepped forward and gently sat Sheri down on the bed by my feet. I felt the tears starting to well up. I had been certain I was going to lose her.\n\nShe put on a brave smile, and reached for the hand I extended to her.\n\nJaime stood over her, protectively. \"Jesus, Ace! Where'd you find this one? If I hadn't shown up in time, I think she was going to kill the lot of them herself. Friggin' maniac. Crazy girl was spitting out half a guy's ear before I managed to clean things up.\"\n\nI looked down at her.\n\nShe grinned sheepishly. \"No way I was going to portal again. We'd wipe together or not at all.\" She looked back at Jaime. \"You never told me that our resident Witch-Doctor was a real-life barbarian.\"\n\nJaime was 6 feet 7 inches of rough and tumble. The left tackle on our high-school football team, and a loner, except for me and Dan. We'd gotten him out of trouble once, and we never could get rid of him ever since. Loyal as an old hound-dog. The fucker could write code like nobody's business.\n\nHe'd taken the bat from the guy coming out the door and laid half-a-dozen guys out cold before Mark showed up with the heavy artillery. One shot from his .45 stopped everything. Apparently in his wake, half the party had shown up in the alley, and the police were only a few minutes behind. The guys weren't about to wait, not with me bleeding on everybody, and a couple of minutes later we were loaded in the limo headed for the hospital.\n\nWith the story out of the way, everyone decided to give me a little space, especially when the busy-body nurse came in shrieking it was supposed to be only two at a time.\n\nWhich meant one at a time, since it looked like it would have taken a platoon of marines to get Sheri out of there.\n\nI was alone with Sheri and her cousin, when Sandy had the brilliant idea of leaning over and giving me a hug, nearly killing me. \"You big idiot. No more heroics.\"\n\n\"Don't you have a party to go back to?\" I asked, teasing.\n\nShe wiped her eyes. \"Right. That was Friday.\"\n\n\"Friday?\"\n\nSheri squeezed my hand. \"It's Sunday. You really had us worried.\"\n\n\"Shit. No wonder I'm so damned hungry. Sounds like you got something to eat. An ear?\"\n\nMy girl grinned. \"Tastes like shit. And believe me, getting eye goop from out from under your nails is next to impossible.\"\n\n\"Eye goop?\"\n\nSandy giggled. \"You've got to hear Jaime tell it. We must have made him repeat it at least a dozen times. Spider-Monkey girl was making mincemeat of the guy who stabbed you. She clawed one of his eyes clear out, bit off half his ear. She was going for the jugular when Jaime dragged her off the stupid bastard. Hardest shot he took all evening was from her elbow, and he almost lost a finger to those teeth of hers.\"\n\n\"It wasn't that bad,\" Sheri whined. \"He only got a few stitches.\" She leaned forward. \"I think he likes me.\"\n\n\"Don't let his wife hear that. She may not be much bigger than you, but I think she could take him, two out of three falls.\"\n\n\"Wife?\"\n\n\"Yeah, he and Mark are both married. I'm surprised the women haven't shown up yet. I'm going to catch so much hell.\"\n\nI tried to move and I got another blast of pain. \n\n\"Stop that!\" Sheri snapped. \"You'll tear the stitches, even if you don't start internal bleeding again.\"\n\n\"How bad was it?\" I asked.\n\n\"If the idiot on top of you knew how to use a knife, you'd be dead now,\" she snapped. \"Then where would I be, you stupid asshole? Why couldn't you have waited for the others?\"\n\n\"They...they were touching you.\"\n\n\"So what? I've been touched before. More than touched. If you ever do anything that stupid again...I'll...oh Hell, I'll just die.\"\n\n\"How long will I be in here?\" I asked.\n\n\"Couple of days. You had a pretty bad concussion, a collapsed lung, and lost a lot of blood. The knife got stuck in your ribs, or it would have been a lot worse.\"\n\nShe looked upset, and more than a little angry.\n\n\"What are you wearing under that robe?\" I asked.\n\nSandy laughed out loud. \"That's my cue to go. I'll give you two a couple of minutes alone. I think he's going to be just fine.\"\n\nSheri was glaring at me. \"Did you really ask what I had on under this stupid robe?\"\n\nI nodded, grinning. \"You promised the girls would entertain me.\"\n\n\"If you were good. In the limo. And I said maybe.\"\n\n\"Ok, 0 for 3,\" I pouted. \"What have you got on under there?\"\n\nShe giggled. \"You are so bad. Panties. That's all. Not much of them either.\"\n\n\"You're killing me, beautiful. Half naked and only an arm's reach away.\"\n\n\"I'm still mad at you.\"\n\n\"I still love you.\"\n\nShe leaned her head down on my leg. \"You big idiot. You could have died.\"\n\n\"Not when you have my back,\" I said.\n\n\"You made Jaime cry. I don't think I've ever seen a sadder thing. He was running down that alley, cradling you in his arms, blubbering like a baby.\"\n\nI grinned. \"Yes! He's sooo never going to live that one down.\"\n\nShe slapped me on the leg. \"Asshole. He saved your life.\"\n\n\"Fine. I owe him one. He's still going to get razzed.\"\n\nShe looked over at the door, then bounced her butt up the bed a couple of feet, sending jolts of pain through my back. Whatever they were giving me wasn't near strong enough.\n\n\"Stop wincing you big baby,\" she said.\n\nShe grabbed my hand, and put it on her breast. I cupped it through her gown. \n\n\"Second base,\" she giggled.\n\n\"I don't think we've even got much of first base yet.\"\n\n\"You need to get healthy for me. I've got a lot of catching up to do, and the boobies and booty are dying for a little attention.\"\n\n\"How about a lot of attention?\" I teased.\n\n\"How about, when the doctor clears you, we try for a home-run?\"\n\n* * *\n\nIt was more than a couple of days. Closer to a week. I never had a shortage of visitors, but at least they bathed and put on normal clothes. I got a serious tongue-lashing from Maria, for putting poor little Jaime in danger. Sheri's parents stopped by every day, as did Sandy. I think she had a little crush on me. I never escaped her without a kiss or two. Or three. Not when Robert accompanied her, but she nearly had me in a makeout session once. I gave her grief about it. She assured me that it was nothing serious, but she couldn't wait for me to get better for a real thank-you.\n\nIt was Sandy who told me about the change in Sheri. Apparently her issue with touching men was almost totally resolved. Part of it was me, another part was my posse. Sandy's therapist believes that fighting back against the attackers had the most to do with it. She no longer felt helpless or as vulnerable. \n\n\"Sheri and Maria are thick as thieves. They've been ganging up on poor Jaime. He bares it well. You should see them when they're sitting out in the waiting area, once girl perched on each of his legs. Sheri has no problem with physical contact with him.\"\n\n\"I'm going to have to kill him, you know.\"\n\nSandy grinned, and gave me another long lip-lock. She tasted of mint, and her tongue was friendlier than ever. \"He's like a big cuddly teddy bear to her. She hasn't even kissed him. Now Dan...\"\n\n\"What about Dan!\" I growled.\n\n\"Lots of hugging and kissing going on there.\"\n\n\"That son-of-a-bitch...\"\n\nHer lips shut me up again. \"Stop, silly. She feels bad he got so beat up for her. You were injured worse, but he still looks like a mess. She's always hugging him and kissing his 'boo-boos'. Mark and Jaime give him so much shit as soon as she's gone.\"\n\n\"Good.\"\n\nShe grinned then climbed on my bed, lying down facing me. \"You've got great friends. I hope you realize that.\"\n\n\"I know. I couldn't ask for better.\"\n\n\"I hope you consider me and Robert friends,\" she said softly.\n\n\"Best friends. I love what you do for Sheri. She needs someone like you.\"\n\n\"It works both ways. I love her, you know.\"\n\n\"I know. It's pretty obvious.\"\n\nShe took my hand and placed it on her tit. I'm an asshole, I didn't pull it away. I liked the feel. \"No, Steve. I love her. I've been in love with her for years.\"\n\nYou could have knocked me over with a feather.\n\nShe smiled, and I felt her hand sliding under the sheet, rubbing the erection she managed to give me every time she visited. \"She couldn't stand a man's touch, you know. My touch was different.\"\n\n\"Is she...are you...\"\n\n\"Lovers. Two years now. Toned it down since I met Robert. I'm not gay, and neither is she. She just needed me, and I guess I needed her.\"\n\nHer hand was gripping my cock, and stroking it. \"Once you two have settled down as a real couple, I hope you'll let me share her with you sometimes.\"\n\nShare? Holy shit! \"What about Robert?\"\n\nShe leaned in and kissed me softly, her lips lingering. \"That's what I love about you. Always thinking of other people, and doing the right thing. He knows about me and Sheri. She's getting better, but we've talked and there's no way she's interested in sex with anyone but you. Not for now. We'll see how things are after you two are married.\"\n\nMarried? \"I...uh...\" Damn this girl could leave me tongue tied.\n\n\"You're going to get married, and I get to be the matron of honor. Don't kid yourself that you're not. You're both crazy about each other. Sometimes I'm so fucking jealous. Of both of you.\"\n\nHer lips were on mine, and I welcomed them, a little guilt still getting through. Her hand was driving me crazy, and I loved the feel of her hard little nipple. Our tongues played quietly, lovingly. \"Can I finish you?\" she asked softly. \"I'd hate to leave you with blue-balls.\"\n\nI looked toward the door. She licked my lips. \"Dan's on guard. Nobody's getting through. Sheri is home, won't be here for a couple of hours. Let me do this for you.\"\n\n\"I feel like I'm cheating,\" I told her.\n\n\"God, you're so fucking adorable, I can't stand it,\" she said. She pulled free from me, then grabbed her purse. She turned away from me. \"Sheri? I'm with Steve.\"\n\nSon-of-a-bitch.\n\n\"He's fine. Looking a lot better. I've got him so worked up he's going to pop, but he wouldn't dream of cheating on you. Can you tell him it's alright?\"\n\nShe handed me the phone.\n\n\"Sheri?\" I asked.\n\n\"She's so bad! What's she been doing? She told you about us, didn't she? I'm so going to kill her.\"\n\n\"Uh, yeah, she told me you guys were, uh, intimate.\"\n\n\"You understand why?\"\n\n\"Of course. Hell, no man or woman could resist you. What's this I hear about Dan getting all my kisses?\"\n\nI thought I could hear her blush over the phone. \"Little kissies, that's all. No boobies, no booty, and certainly no kitty. Are you jealous?\"\n\n\"Should I be?\"\n\n\"Don't be. There's no man for me but you. I'm just, well, practicing flirting again. It's been a while. You know who I love.\"\n\n\"I can't wait to get out of here,\" I told her.\n\n\"I know. Me either. I'd take care of your...needs, but I don't want our first time to be like that. Not some stupid quickie in a hospital bed. I'm afraid I might need a lot of patience from you, understand?\"\n\n\"Totally. I feel the same.\"\n\n\"Good. Then let Sandy do whatever she wants, or she's going to be driving me crazy. No kitty, alright? But if she offers it, you'd be a fool not to let her get her mouth on you. She's pretty incredible.\"\n\n\"Are you sure?\"\n\n\"I trust her, and I trust you. Give her what she needs, and she'll tell me all about it tonight.\"\n\n\"This feels kind of crazy.\"\n\n\"I love you, baby. Have fun. Now put her on.\"\n\nI handed the phone to a grinning Sandy. \"Thank you, thank you,\" she gushed. \"I will, I promise, tonight. Is this just the one time?\"\n\nShe giggled. \"Perfect. Love you babe.\" She hung up the phone, and went to the door. She poked her head out, then came back smiling from ear to ear.\n\n\"You're mine, until they release you. You have a problem with that, handsome?\"\n\n\"Robert?\"\n\nShe rolled her eyes at me. \"Do I have to make another call? Or do you trust me that it's Ok. I'm not married yet.\"\n\n\"I trust you. I wouldn't want to hurt him, or your relationship, that's all.\"\n\n\"He knows that when I'm with you and Sheri, there'll probably be some you-and-me action going on. My ass is off-limits to you, that's his. Alright?\"\n\nI nodded, my mouth dry.\n\nShe gave me a quick kiss, then pulled the sheet down, and pushed my hospital gown out of the way. \"God, you've got a nice one. I'm going to really enjoy this.\"\n\nNot as much as I did. No preliminaries, she took me in her mouth and started sucking. I didn't last two minutes. She swallowed and kept going, until I was hard as a rock again.\n\n\"Good. We got that first one out of the way. Man you were backed up! I hope you don't always come like that. I don't mind a little taste but you almost drowned me.\"\n\n\"No, I don't always come like that. You had me pretty worked up, you know.\"\n\n\"The idea of doing two girls? Or just little old me?\"\n\n\"All you, gorgeous. Not that the threesome idea isn't going to be driving me nuts for a while, but you're pretty incredible you know.\"\n\nShe grinned saucily. \"I know. And now you're going to find out.\"\n\nShe got started again, then stopped abruptly. She grabbed her smart phone, set it up, and passed it to me. \"Record it. It'll be even better than explaining it to her. I might even tease Robert with it later.\"\n\nWas there no end to the day's surprises?\n\nShe was true to her word, and the second time around, she teased and pleased. Her mouth was wonderful, and ever so talented. I did manage to hold out for almost 10 minutes, before she cheated, putting my hand on her head, and insisting I fuck her mouth. The sweet girl had no gag reflex whatsoever, and a minute later I was painting her tonsils again.\n\nShe sucked me dry, opened her mouth showing a full-load to the camera, then took her time cleaning me with her mouth, until I was starting to stiffen again. I killed the video.\n\n\"There. That should keep you for a while. Was I Ok?\"\n\n\"Ok? That was unbelievable!\"\n\n\"Good. I'll be working with Sheri to make sure she can deliver at least as good. You're going to have to be patient with her. She's never done any of this stuff willingly. In many ways she's still a virgin.\"\n\nShe stood and gave me a salty kiss. Then she pulled up her shirt, and leaned over, placing her nipple in my mouth. \"Give us a kiss goodbye, lover.\"\n\nI got a nice little suck, until she replaced it with the other one. \"No marks, Ok? No fair rubbing his face in it.\"\n\nThat put a little damper on my feelings, and I gave her nipple one last tongue swipe. \"Thank you,\" I said.\n\n\"A hero's reward. Get used to being spoiled, lover.\" She gave me a parting kiss, straightened her shirt, and left me to let the others in. Dan and Mark were smirking.\n\n\"Lot of privacy,\" Dan observed.\n\n\"Yes. Thank you.\"\n\n\"Sheri...\"\n\n\"Knows and is cool with it. We were just on the phone with her.\"\n\nMark laughed. \"You lucky son-of-a-bitch. It's about time you got it right.\"\n\n\"Got what right?\"\n\nDan answered. \"Woman. Got the woman right. She's an angel. Perfect. No way you deserve her or whatever the supermodel's doing for you.\"\n\nI had to laugh. He was right. \"No argument from me. Third time's a charm, I guess.\"\n\n* * *\n\nIt had taken me 5 days before they'd let me sit up and use a laptop. I was only online about 10 seconds before my buds started lightin' me up with messages.\n\nFrom the first time back, I found things had changed. Not in the game, so much, although there were enough new things there. The change was in us. No one was playing solo, not even Jaime. On logging in, I'd find them working together in groups of 3 or 4. With a max party size of four, one of the guys would drop out to make room for me if necessary.\n\nThings were easy, even in hardcore Hell mode. We worked as a finely tuned machine, each watching out for each other. CherryBomb was always at the center of each group. She coaxed, she goaded, she teased. She led.\n\nThe first time on, they made me switch from Skype to Ventrilo for voice chat. Jaime set up our private server, and the sound quality was even better and so much easier to join.\n\nWe were laughing, joking, teasing each other. We shared loot, traded cash, farmed as a group, and had more fun than I'd ever imagined outside of Beta.\n\nAt the end of each session, CherryBomb would announce the finish, and she and I would pop out of the game and onto video chat.\n\nI'd made a few calls, and she'd received the order on my 3rd day after awaking. Every night she'd reward me. Tonight it was a red lace halter babydoll that only half covered her outstanding breasts. It barely reached her crotch, and had the cutest red thong.\n\n\"The girls want to thank you again. You didn't have to do this,\" she said, indicating her outfit.\n\n\"Sorry, Angel. It wasn't for you.\"\n\n\"You have to stop calling me Angel, you know I'm anything but. I don't want to be an Angel. I'm gonna be your little Devil. Can't you see I'm wearing red?\"\n\n\"Sorry sugar. You saved my ass, and you'll always be my Angel. My guardian Angel.\"\n\nShe pouted. \"Really? Would an Angel do this?\" she asked, pulling her halter material to the outside, exposing her breasts.\n\n\"Heavenly tits,\" I teased.\n\nShe stuck her tongue out at me. She turned lifted the back of her outfit and wiggled her rear. \"Angelic?\"\n\nI laughed, as she smacked her own tight little buns. \"Hell no, Devil girl. Hellacious.\"\n\nShe grinned. \"Good answer. When you coming home to me? I need you.\"\n\n\"Doctor's talking two more days.\"\n\n\"Sandy showed me the video. Looked like you enjoyed it. Was she good?\"\n\n\"God, I was so desperate to get off, at first I couldn't even tell. It was a warm wet mouth.\"\n\nShe laughed. \"Don't you dare ever tell that! She thinks she's God's gift to men and women. She's convinced she rocked your world.\"\n\n\"Don't get me wrong, Sheri. It was nice. But she's not who I wanted doing that.\"\n\nSheri grinned, moving closer to the camera, sucking on her finger. \"Really? Now who could you possibly have in mind? You couldn't possibly want your 'Angel' to do such a naughty thing. Putting that big, hard, nasty thing in her innocent little mouth? I don't think it would even fit!\"",
        "\"Do you think my ornery Devil would like to give it a try?\"\n\n\"Trust me, there's not much that your personal Devil wouldn't try for you. I'm not saying she'd want to do it more than once, but she'll give anything a try for you. Anything.\"\n\n\"You know there's nothing I wouldn't do for you, don't you.\"\n\nShe laughed. \"No shit. I think the whole world knows it by now.\" I saw a conflicted look cross her pretty face. \"Where the hell were you 3 years ago?\"\n\nIt was like I was knifed all over again. \"Don't you think I wonder that myself?\"\n\nI saw the tears in her eyes. \"I'm sorry. I didn't mean that. Hell, you were married, and I was barely out of high-school. It's not on you.\"\n\n\"It is now. Nobody will hurt you again.\"\n\n\"Say it for me, Steve?\"\n\n\"I love you, Sheri.\"\n\n\"Sheri? Or Cherry? Maybe you just love the gamer girl.\"\n\n\"One and the same, silly girl. The gamer girl was how I got to know you. The gorgeous little Devil has her claws in my heart, and I don't see how the hell I could ever win myself free, even if I wanted to.\"\n\nShe peeled off her babydoll, sitting there in that little thong. She rolled the chair back giving me a full view. \"Yours, baby. Get well and come to me.\"\n\n\"Do the girls miss me?\"\n\nShe cupped her tits in her hands, giving them a squeeze. \"You know it. They want to reward you for all the sweet presents.\"\n\n\"How about the booty?\"\n\nShe turned and got on her knees, wiggling her cute little butt. \"What do you think?\"\n\n\"I think I'm dying to introduce myself up close and personal.\"\n\n\"I'm going to tell the boys I made you kiss my ass.\"\n\n\"Make 'em jealous?\" \n\n\"Damn straight. Let them eat their hearts out. All yours, baby. Only yours.\"\n\nShe leaned back in her chair, opening her legs. That tiny little thong was all that covered her magic. She reached down and pulled it to the side, sliding her fingers out of sight. She bit her lip, moaning loud enough for me to hear, pulling her fingers out, and showing the camera how wet they were.\n\n\"How do you do this to me?\" she said, shaking her head. \"The sound of your voice sets me off. I have to sit on a towel the whole time we're playing. I want you so bad.\"\n\n\"Soon, Sheri. I promise.\"\n\n* * *\n\nThe last few days crawled by, with visits from friends, daily checkups, and late night gaming. Sheri came by each day, spending a couple of hours, lying on my bed with me, unless the nurse caught us. I don't think she was trying very hard. We'd talk, about our past, and about our dreams. We'd touch each other, gently caressing. I got to first base, and second base each day. She was driving me nuts.\n\nSandy was kind, and always made her visit after Sheri. She'd taken to wearing button-up blouses I could open and play with her braless tits. She'd give me a quick suck as soon as she got there, then we'd hang out, talking, a lot of it about Sheri, and the guys. She was absolutely fascinated by our relationship.\n\nWe were cuddling, our lips never far apart. \"Robert doesn't have anyone like you guys have. Some friends, but nothing like the magic you guys share. You knew they'd be there for you. You never doubted it for a minute, did you?\"\n\n\"Never thought about it. If it was physically possible, they'd be there for me. As I would for them. I'd sacrifice everything in my life except for Sheri, for any one of them.\"\n\n\"Yet all you do is tear each other apart, whenever you're together,\" she teased.\n\n\"Because we can. We'd never admit it, we can't you know, but under every insult, every tease, we're telling each other what we can't say out loud. We don't have to.\"\n\n\"You love them.\"\n\n\"Words. Everyone talks about love. A lot of it's shit. Absolute trust. We always put each other first.\"\n\n\"Can you do that with Sheri?\" she asked.\n\nI pulled her close, and sampled her soft lips, looking into her hazel eyes. I'd started out so conflicted, every time we were alone together, but it was comfortable now. Natural. Strange, with the issues I'd had with women. Sheri had crept up on me, but Sandy? It didn't make sense, but I wasn't going to trouble myself about it. I liked her and trusted her. Weird.\n\n\"She's already there. It's not just me, either. She's won over Dan and Jaime already. Mark will get there. Jaime's the surprising one. He doesn't warm up to anyone.\"\n\nShe nibbled on my bottom lip. \"He saw her. How she fought for you. She could have run. She should have, but she wouldn't leave you, even though she didn't know about the others coming, like you did. Alone, she didn't stand a chance, and she fought like hell. She'd sacrifice it all for you. How could he not love her?\"\n\n\"It was stupid. She should have run.\"\n\n\"Love, Steve. She couldn't. Just like you couldn't. Like the guys couldn't. I can only imagine what that would be like. I'm jealous. I shouldn't be, I love her, but I can't help it.\"\n\nI pulled her close, hugging her, ignoring the twinge in my back. \"You have her. Therefore you have me and mine. Just like Jaime's Maria, or Mark's Angela. I know what you've done for her. What you mean. I love you for that.\"\n\n\"And Robert?\" she asked.\n\n\"With time, I hope. He'll be family.\" I loved her concern for him. It made me feel better about what we were doing.\n\nShe buried her head in my shoulder, \"Get well. We need a bigger bed.\"\n\nI held her until she got antsy, and she pulled out of my arms and squirmed down the bed, taking my cock into her sweet generous mouth. She was different, loving, slow, gentle. After a few minutes, she took a break, stroking me slowly.\n\n\"Do you think about her, when I'm doing this?\"\n\n\"Sometimes. Not in the last couple of minutes. It's not that I'm feeling guilty. I wonder how it's going to be. If she'll actually be able to do it. Do you think of her?\"\n\nShe licked me slowly. \"Yes. Both her and Robert. What it'll be like to share you with her. Helping her. How Rob could let me do this, welcome it, for her sake. I don't think I could do that. He's better than I deserve.\"\n\nHearing his name gave me pause. I knew that Sheri accepted things, but I only had Sandy's word for Robert. \"Should we stop?\" I asked, reaching down and caressing her beautiful face?\"\n\n\"Only if you want to put it somewhere else. I'd still rather save that until it's the three of us. Put if you'd prefer...\"\n\n\"Suck me, beautiful lady.\"\n\nShe smiled and took me in her mouth again, a little more aggressively. She normally like to play a lot the second time, but she seemed determined to get me off, and I wasn't fighting it. I let her drive me crazy, sucking like her life depended on it. It only took a few minutes before I was rewarding her efforts again.\n\n\"God, you are amazing. I don't deserve you.\"\n\nShe licked her lips teasingly. \"No, you're right, you deserve so much more, and luckily for you, you're going to get it.\"\n\nMaria showed up early the day before I was supposed to check out. I'd had a rough night. They'd reduced my pain meds, and I'd aggravated one of the cuts in my back during the night. It meant some new stitches. I guess I was grouchy.\n\nShe started tearing into me, as she did almost always. What was I thinking getting everyone involved? Jaime especially. Was I done playing recluse? Would the gaming finally stop and everyone could get a life? What were my plans for Sheri? When was I going to get back to doing something with my life?\n\n\"Please, Maria. Not today. I'm not in the mood.\"\n\n\"It's always about your mood, isn't it, Steven? It's always about you.\"\n\nI sighed. \"I'm sorry, Maria. My intention has never been to get between you and Jaime. I know you don't like me, and I can't help that. But Jaime will always be more than a friend to me.\"\n\nShe looked shocked. \"You think I don't like you? Why?\"\n\nI laughed. \"It's obvious isn't it? Have you had a kind word for me in four years?\"\n\n\"If you weren't such an ass, maybe I would,\" she snapped.\n\n\"As I said...\"\n\n\"God, you are such a fool! You don't have any idea, do you?\"\n\n\"Idea?\" I asked.\n\nShe rolled her eyes. \"Lord save us from the ignorant.\" She leaned over and planted her lips on mine, kissing me hard. \"I love you, you idiot. We all do. God help us.\"\n\n\"Then why?\"\n\n\"It's how we play the game. You're supposed to know. How can we love one of you, and not all of you? There's the problem, isn't it? You must know how the guys feel about Sheri? It's all part of what we are. For each other.\" She grinned. \"The four musketeers, all for one, and one for all.\"\n\nI smiled back, surprised by her words. I did what we always did. Joke. \"Kinky.\"\n\nShe slapped me playfully. \"Such. An. Ass.\"\n\n\"Agreed. But it's all Jaime's,\" I answered, reaching out and patting, her hip.\n\n\"Always. Jealous much?\"\n\n\"Who wouldn't be?\"\n\nShe grinned. \"She's good for you. It's about fucking time you did something right. If you fuck this up, your ass is mine, Steven Jeffery. You hear me?\"\n\n\"Sorry, did you say something? I'm still trying to get past that kiss.\"\n\nShe laughed, then hugged me. She didn't let go, and after a bit I could feel her trembling. \"Don't you ever scare me like that again.\"\n\n\"Last thing I'd ever want to do. Trust me gorgeous. It's not as fun as it looks.\"\n\nShe pulled away, held my face her hands, and kissed me long and hard. \"Get better, baby. We need you back.\"\n\nShe left me shortly after, and I was thinking I could use another visit by Sandy. It was a day for surprises.\n\n* * *\n\nI got a few hours of game play in that evening. It was good. I still was avoiding anything hardcore, playing off a laptop, but we did manage to get to Act IV Inferno mode, and cleaned up. I thought we were going to make it to the end, but it was getting late, and I needed my rest. I was still looking for some private time with my girl.\n\nWe popped out to Skype and Sheri was waiting, dressed in her latest. A sheer pink babydoll, strapless, trimmed in black lace. Jesus, she looked hot.\n\n\"You like? This might be my favorite,\" she said, posing for me.\n\n\"Mine too. Not much support for the girls.\"\n\nShe laughed. \"None at all. Sometimes they like to feel free.\"\n\nI saw movement, and suddenly Sandy was standing behind my girl, dressed in the black gold bustier and v-string panty I'd bought for Sheri. \"Hi Steven. Thanks for the outfit,\" she said grinning.\n\n\"Looks great on you, beautiful.\"\n\n\"Your girl's awfully lonely. Hope you don't mind if I keep her company.\"\n\n\"Not at all.\"\n\nShe was hugging Sheri from behind, and I saw her hands slide up inside her outfit. Sheri leaned back against her friend, and smiled when Sandy's hands reached her tits.\n\n\"I wish you were here, baby. I miss you so much.\"\n\n\"One more day.\"\n\nSandy's lips were on my girl's neck. \"What's your plan for tomorrow?\"\n\n\"Dan's got me a place for the next few weeks. They've got my office set up, and shipped some of the stuff up here.\"\n\nSandy looked up and smiled. \"Big bed?\"\n\n\"California King,\" I assured her.\n\n\"Mmm. Can't wait. You won't make me wait too long, will you, handsome? I know you're going to want some private time, but don't lock me out.\" Sandy grinned.\n\nI laughed. \"I'm gonna let Sheri make that call. But I'm looking forward to it.\"\n\n\"You and me? Or me and Sheri?\"\n\n\"Yes. Most definitely.\"\n\nSheri turned and kissed Sandy on the lips. Long and slow. Damn, I needed to get out of that damn hospital room.\n\nSheri lifted her arms, and Sandy pulled her top off. \"We're going to cut you off, honey,\" Sandy said, facing the camera. \"No early preview at what you're going to see live. Sorry.\"\n\n\"Just a peek?\" I pleaded.\n\nSheri laughed. \"No way. Get well and come to me, love. I need you.\"\n\nSandy turned to put herself between the camera and Sheri, her back to me. Sheri dropped to her knees, and I watched her slide Sandy's panties down, showing me her absolutely perfect ass. Sheri peeked around her friends hip, smiling. She reached up and got two hands full of firm butt. \"Can you believe the body on her? And it's all ours.\"\n\nSandy looked over her shoulder grinning. \"You still here, naughty boy? Go to bed now. Sweet dreams, loverboy.\" She turned and reached for the keyboard, and the screen went blank.\n\nDamn. Rotten tease. Both of them. \n\nI REALLY needed to get out of that place.\n\n=======================\n\nThe conclusion of the Gamer Goddess series follows shortly. Completed and in final edit. Again, I hope you've enjoyed the story so far. Thanks."
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "gaming",
        "party",
        "fight",
        "video",
        "healing",
        "girl-on-girl",
        "teasing",
        "oral",
        "loving wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/gamer-goddess-ch-02"
}