{
    "title": "The Agency Ch. 12",
    "pages": [
        "The work week had been an absolute blur for Michelle. She seemed to be non-stop all week. On Saturday a moving company would show up to remove the boxes of clothing and shoes she'd accumulated since starting at The Agency, and the furniture? Well, the furniture could be burned as far as Michelle was concerned, but she told Fred to rent the shitty apartment furnished. Michelle had left out just enough clothing to get through the weekend by Thursday night. Each day she'd also had lunch with Brenda, and happily kissed her in the stairwell afterward. It was a daily ritual Michelle looked forward to with her entire heart! Sitting on her couch Friday night, her chest aching slightly from the increase in saline, Michelle was quite pleased by the appearance of her breasts, she was now definitely a solid A cup!\n\n\"If only you two were just a bit bigger!\" Michelle said as she squeezed her breasts together.\n\nYesterday Michelle had spent almost two hours on a video call with a Friend of Ms. Allison's, one that specialized in oral sex. It seemed crazy to Michelle that someone like Her existed, but by the end of the call Michelle realized she had been completely clueless to meeting the needs of a woman with her mouth. Even now, sitting on the couch sipping wine, Michelle moved her tongue as the Woman had instructed. Should Brenda decide to give Michelle the opportunity to please her, Michelle was going to rock her world! Although, she had to survive the bachelorette party first! Michelle tried desperately not to think about it, she'd done so fairly well to this point. \n\n\"How are you feeling sweetie?\" Michelle asked as she answered a call from Babette.\n\n\"I'm still sore,\" her friend replied, \"but my chest feels so much bigger, it's totally worth it!\"\n\n\"That's great news!\" Michelle replied. \"I'm about a week or two away from my surgery according to the Doctor today.\"\n\n\"I can't believe you caught up to me so quickly!\" Babette couldn't hide her shock, she'd been doing saline injections for a couple months prior to Michelle starting. \"I just don't get it!\"\n\n\"Me either!\" Michelle knew the true reason but could never betray Brenda's trust like that. \"I'm thinking I'll be over around 12,\" Michelle said trying to change the subject, \"but I can't stay too long, I've got the bachelorette party tomorrow night.\"\n\n\"Ohhhhh! That's right!\" Babette replied with her usual innuendo filled voice, \"and your sleep over!\"\n\n\"You're incorrigible!\" Michelle replied. \"I just hope I get through it unscathed!\"\n\n\"What do you mean?\"\n\n\"A bunch of drunk women in a party bus, strippers, dancing in a club with actual guys there,\" Michelle felt her anxiousness grow rapidly, \"and today Ms. Allison handed me a stack of five dollar bills for the strippers!\"\n\n\"You'll be fine,\" Babette replied earnestly, \"and popular when you start stuffing fivers into G-strings!\"\n\n\"They'll get used,\" Michelle trembled slightly, \"I was bound in the office for a couple hours in order to earn them and told I'd be spanked five times for each one returned on Monday!\"\n\n\"She is devious isn't She?\" Babette giggled.\n\n\"Very true,\" Michelle replied wiggling slightly on the couch, \"I'll see you tomorrow morning.\" \n\n\"Sounds great! Love you!\"\n\n\"Love you Babette!\" Michelle responded feeling ever closer to her best friend.\n\nMichelle cleaned up, brushed her teeth and wig, and then put on a sheer black nightie with matching thong before slipping into bed. This would be the last night she spent in her crappy old apartment! Michelle closed her eyes and giggled for a moment, if she got lucky, the next two nights would be spent with two different people in two different beds! That was a far-flung fantasy in Michael's life! Michelle quickly fell asleep dreaming of what could possibly happen after the bachelorette party. Since their shopping trip the weekend before, both of them had been far more forward with each other as they said goodbye after lunch. Brenda had also spent more time massaging the estrogen cream into Michelle's chest, and seemed to really enjoy watching Michelle's nipples react to her touch. \n\nThe alarm clock sounded in the morning, Michelle had already decided to forgo her usual workout, and instead sat in her crappy kitchen sipping coffee. By the time the movers arrived, Michelle was wearing a pair of yoga pants and a baggy sweatshirt that hung down in the front. The dark pants hid her bulge nicely and the light blue sweatshirt sat perfectly to show off just the bottom of her butt, which the movers seemed to appreciate. She happily turned the keys over to Fred and all but bounced out of the building relishing in her freedom as well as the feeling of her braless breasts rubbing against the light lining of her sweatshirt. With everything in place, Michelle stepped into the massive shower just off Babette's bedroom. Between the body jets, and jet that massaged her feet, Michelle couldn't imagine the water bill. Then again, she didn't really need to worry about cash at this point, did she? Michelle shaved as carefully as ever, wondering what it would feel like to have her legs intertwined with Brenda's later that night. Would it happen? She was certainly hoping so!\n\nLeaving the bathroom, light makeup on her face, her long brunette wig reminiscent of Jennifer Aniston when she was on \"Friends\", Michelle put on a nude strapless bra and matching boyshorts. She added a white, open shoulder top and light grey skort. The top had a small collar around her neck and straps that ran to the sides and middle almost like webbing but left the remainder of her shoulders bare. It had been one she'd been looking forward to wearing for quite a while. Slipping her feet into a pair of heeled sandals, Michelle grabbed a small suitcase and headed for the door. The doorman tipped his make-believe hat, while looking over Michelle's legs, as she made her way through the lobby. At least he was less creepy than Fred!\n\n\"Hi!\" Brenda said gleefully as she opened the door. \"Come on in!\" Brenda had only backed up just enough for Michelle to drag her bag through the door with her, leaving them standing chest to chest. Throwing her arms around her guest, Brenda hugged Michelle tightly. \"I've been waiting rather impatiently for you!\" \n\n\"Sorry, it was moving day this morning as well.\" Michelle replied squeezing Brenda tightly in her arms.\n\n\"We are going to have so much fun tonight!\" Brenda cooed in Michelle's ear. \"I hope you brought something to sleep in tonight! Oh, and wear home tomorrow! I can't have you doing the walk of shame after all!\"\n\n\"Walk of shame?\" Michelle asked.\n\n\"Yeah, when you've spent the night somewhere,\" Brenda replied leading Michelle into the apartment, \"and then have to walk home wearing the same outfit you wore out the night before!\"\n\n\"Oh, yeah that.\" Michelle replied trying to search her memories to think if that ever happened. No, not really. There had never been an overnight guest at his last place, and barely one when he was in college. \"I have stuff to wear home,\" Michelle replied trying to sound confident, like she'd experienced the walk of shame before, \"your neighbors won't suspect a thing!\"\n\n\"Some of them can be quite nosey!\" Brenda frowned. \"Let's get your dress out so we can hang it up!\"\n\nIt was obvious that Brenda was as excited about this as Michelle, maybe even more so! They hung Michelle's dress in the bathroom, then sat to relax for a bit. It wouldn't take terribly long for them to get ready so they had time to kill. Michelle took a seat on the couch after kicking off her sandals, and was quite thrilled when Brenda decided to sit next to her and throw her legs over Michelle's lap. There was no place for Michelle to put her hands but on Brenda's shapely legs. Brenda had decided to remain casual as well, and was wearing denim shorts, a loose-fitting tank top and an open button up shirt. She looked relaxed with her messy ponytail yet still quite stunning. She put on a movie, and curled into Michelle's arm letting out a deep sigh of contentment. Michelle simply couldn't believe her luck as she slowly stroked Brenda's thigh. \n\n\"Patience.\" She thought to herself. \"I'm here all night if I'm patient!\"\n\nAs the movie ended, one Michelle hadn't paid enough attention to in order to name a single character or the plot, Brenda slipped off the couch. \"I'm going to go shower,\" Brenda said with a smile, \"then you can help me with my makeup!\"\n\n\"I'd be happy to do that!\" Michelle beamed. \n\nMichelle tried to busy herself as Brenda showered mere feet away. She couldn't help but picture her friend's naked body, the shape of her leg as she shaved it, or lathered ... Michelle rapidly shook her head, she needed to stop thinking this way. Thankful she had on a skort, Michelle was sure she'd soaked through the bottoms and the shape of the skort hid things nicely. Before they left she would definitely need to put a condom on as a panty liner. Michelle heard the shower shut off and the curtain rings being pulled on the rod, Brenda was now out of the tub drying off, maybe even moisturizing her skin.\n\n\"Geezus!\" Michelle hissed at herself. \"Get a grip!\"\n\n\"Everything okay?\" Brenda asked as she emerged from the bathroom drying her hair in a towel while wearing a mid-thigh length navy blue terry robe.\n\n\"Oh, I'm fine!\" Michelle replied while trying to think of anything but Brenda to get herself back in check. \n\n\"Give me a couple minutes to get my hair going,\" Brenda smiled as she picked up the tiny black lace boycuts Michelle had gotten for her, \"then you can help me with my makeup!\"\n\n\"Sounds great to me!\" Michelle replied feeling her attempts to get herself under control failing miserably.\n\nTaking a quick moment, Michelle reached into her purse removing a condom. Thrusting her bottoms down, she tore open the small package, placing the condom over the end of the cage. Pulling her bottoms up, Michelle had just finished adjusting things when Brenda stuck her head out from the bathroom. Even with her hair in rollers, Brenda still had a simple beauty about her.\n\n\"I'm ready when you are!\"\n\n\"Is there enough room in there for the two of us?\" Michelle asked as she approached.\n\n\"Yeah, I can just hop up on the vanity,\" Brenda replied as Michelle walked in, \"plus, it's probably easier for me to be up here so you don't have to bend over so much.\"\n\nMichelle stopped for a moment; the navy-blue robe had fallen off Brenda's legs as she crossed them. The top of the robe was open slightly as well, showing enough cleavage that Michelle was happy she'd put on the panty liner. There was no way for Michelle to stand without being in contact with Brenda's legs, after a while she just stopped trying. Michelle talked Brenda through how and what she was applying, taking her time to add just the right amount of mascara for the dark clubs but not so much Brenda looked trashy. Based on the colors Brenda was wearing, Michelle picked a dark rose lip gloss as well.\n\n\"Okay, stand up and close your eyes,\" Michelle instructed quite pleased with her work, \"I'll tell you when to open them!\" Brenda did as she was told, but was obviously excited to see what Michelle had done. The thin terry robe was also enough to show the subtle outline of Brenda's hard nipples which caused Michelle a bit more discomfort. \"Okay, open up!\"\n\n\"Oh my!\" Brenda said wide eyed. \"That's fantastic! You did such an amazing job!\"\n\n\"Thanks, but you're pretty beautiful already,\" Michelle spoke softly but honestly, \"so it didn't take much.\"\n\n\"I never could have done this myself!\" Brenda replied turning and throwing her arms around Michelle. \"How are you with hair?\"\n\n\"I can help after,\" Michelle smiled, \"those rollers need to sit a bit longer if you want nice waves.\"\n\nBrenda was practically gleeful as she stepped out of the bathroom, but not before checking her makeup one more time. Of course, this made Michele quite happy and proud of her work. She refocused, pinning her hair back and doing her own makeup. She'd obviously become quite good at it over the past few months of applying it just about daily. With her own makeup done, Michelle stepped out of the bathroom and stopped in her tracks. Brenda was facing away from her, wearing only the tight fitting black pants as she held up her top in front of her. Sure, Michelle had now seen Brenda in lingerie, but this was quite a sight causing her cage to fill quickly. Brenda put the top on, then looked over her shoulder holding it up with one hand.\n\n\"Can you help me out?\" Brenda said with a warm smile.\n\n\"Of course!\" Michelle happily responded walking quickly to her friend. \n\n\"Not too tight,\" Brenda instructed, \"just snug enough a boob doesn't fall out without my knowing.\"\n\n\"That would be bad.\" Michelle giggled as she tied the knot behind Brenda's neck.\n\n\"If you go take those out, I'll get my dress on,\" Michelle said letting her eyes look over Brenda's bare back, \"then we can finish up your hair.\"\n\n\"Sounds great,\" Brenda replied lightly touching her index finger to Michelle's nose, \"don't do the top of your dress though, I have an idea!\"\n\nMichelle couldn't help but watch Brenda walk to the bathroom, the pants showed off her spectacular butt, and if you could bring yourself to look beyond those, and her legs, you could see the smoothness that was her back. It was impossible for Michelle not to be excited. She could only imagine what it would be like when they got to a night club and Brenda started dancing! Michelle quickly put on her short cocktail dress, slipping a baby pink thong on underneath then made her way to the bathroom with the halter held against her chest.\n\n\"What is the plan of yours?\" Michelle asked as Brenda continued to remove her rollers.\n\n\"Oh give me one second,\" she replied setting the last few on the vanity, \"but you're going to love it!\"\n\n\"I trust you!\" Michelle replied making eye contact with Brenda in the mirror.\n\n\"I know you do!\" Brenda winked in response. \"I trust you too!\" Brenda removed a small cardboard envelope, taking the first item out and pulling off what looked like the backing for adhesive. \"Okay, now hold you left boob up,\" Brenda instructed, \"and then put this under it.\" \n\nMichelle did as she was told, putting a small pillow under her breast. As she did so, Brenda applied the stick on bra to Michelle's chest. The effect was amazing, Michelle's saline breast was now accentuated by the pillow underneath. She almost felt like how women are portrayed in Victorian times, spilling out of the top of their dress. She eagerly helped Brenda position the other, making sure equal pressure was applied to each so her breasts were even. With the top of her dress now in place, Michelle tried to focus on Brenda's hair. Having Brenda face her while she did it, Michelle teased, shaped and positioned Brenda's long locks until she was satisfied.\n\n\"Okay, turn around!\" Michelle said quite pleased with herself.\n\n\"Oh WOW!\" Brenda couldn't believe her eyes. \"Okay, no offense,\" Brenda turned her head left and right checking out her face and hair from every angle, \"but who knew a guy could make me look this good?\"\n\n\"I got a whole crash course not too long ago.\" Michelle replied.\n\n\"Oh really,\" Brenda smirked, \"what else have you learned?\"\n\n\"On nothing too fun.\" Michelle replied trying not to smile too big and give things away.\n\n\"The girls just texted,\" Brenda said spritzing a bit of perfume, \"they'll be here in ten minutes.\" She saw Michelle blanch in color. \"It'll be okay,\" Brenda took Michelle's hands in hers, \"they're going to love you!\"\n\nMichelle took her new ID, new credit card and stack of fives out of her purse, putting them all in a small clutch, before following Brenda to the door. At the doorway they stepped into their heels, which did little to help Michelle with the way Brenda's ass and legs were now accentuated even more. It was a struggle for Michelle not to watch Brenda walk toward the exterior door of the building, her hips moved different, and her but. Michelle may have let out a soft moan simply because of Brenda's butt. When they got to the front door, Michelle made sure she was standing next to Brenda when the party bus arrived. Michelle now had the opposite problem she'd been experiencing, the sheer terror of getting on the bus now made her cock all but pull into her body! She actually wondered if the cage could possibly fall off with how small it had gotten.\n\nSqueals filled the bus, followed by compliments at how amazing Brenda looked, then introductions for Michelle. It was overwhelming, there were 10 women on the bus, all wearing short dresses with cleavage showing and legs that seemed to go on forever. Michelle was handed a plastic cup with some kind of peppermint schnapps, which she quickly downed. What she did remember, the girl in the tight purple dress with the white sash announcing her as the bride was Tiffany, and her maid of honor was Candace. Brenda sat next to Michelle, practically on top of her, in the bus as they went to pick up the last woman. Another round of shots followed with her entrance, followed by beer. Lots of beer.\n\nAt the club Michelle stuck close to Brenda when they entered. The parade of women drew a lot of attention, while some of the women openly flirted, Michelle tried her best to keep her eyes straight forward. She felt as if she were on display. Thankfully, Brenda quickly handed Michelle a drink, who was starting to feel a bit of a buzz. A moment later she was very happy about that buzz as Brenda pulled Michelle toward the dance floor.\n\n\"I don't know about this!\" Michelle shouted over the loud club music.\n\n\"Oh you'll be fine!\" Brenda replied still holding Michelle's hand, \"Just relax and enjoy!\"\n\nWhat Michelle was really enjoying was watching Brenda dance. Soon she no longer had a concern about her cage falling off. It didn't take long for the two women to be joined by a couple guys, who simply started dancing near them, then with them. Michelle was in a panic as one moved behind her, placing his hands on her hips. Her eyes wide, looking at Brenda, who seemed to be enjoying her dance partner. A twinge of jealousy grew inside Michelle, but there was no way for her to address anything, without ruining her secret and possibly Brenda's relationship with her friends. Instead, Michelle tried to focus on not falling off her heels while she danced with whomever the guy was behind her. The girls danced in a loose cluster, but it didn't stop men from approaching them, typically from behind.\n\n\"I'm Jeff.\" A guy had to almost shout in her ear over the music.\n\n\"I'm Michelle!\" She replied trying to talk loudly while speaking in a feminine voice. \n\nJeff slipped his hand around Michelle's waist, placing his hand on her lower back and pulling her close, as he practically ground against her body with his crotch. Michelle was quickly terrified about him rubbing against her crotch and feeling her cage, so she turned around shocking herself as she stuck her butt out at him.\n\n\"Ohhhh my!\" Jeff growled gripping Michelle's hips tightly.\n\nMichelle jumped slightly when his body rubbed against her butt, although, it reminded her of something familiar. Maybe it was the shots, the beer, or whatever else Brenda bought them. Her head was swimming as Jeff pressed his crotch into Michelle's ass. Biting her lip, Michelle tried desperately not to enjoy the all too familiar sensation while her body ached for more. \n\n\"You're stunning!\" Jeff growled in her ear.\n\n\"Thanks.\" Michelle replied, unsure if she heard him or if she could believe him.\n\nMichelle focused on desperately trying not to fall off her heels as Jeff's iron grip held her ass against his growing cock. She could feel him back there, she could feel his cock against her ass and much to her dismay it made the hair on her neck stand on end. Michelle's body rebelled against her brain. Michael would have been repulsed by this, a guy grinding his hardon into her ass, but Michelle not only enjoyed but relished it. She wanted Jeff, not just wanted him, but more specifically wanted Jeff inside her. His right hand moved up her back, grazing the side of the cup of her bra. Michelle desperately wanted to move out of his reach, but him to touch her. To possess her. To fuck her! Michelle bit her bottom lip, moaning softly well under the sound of the music. Michelle turned again, facing Jeff and throwing her arms around his neck over his shoulders.",
        "\"You're so damn sexy!\" Jeff hissed. \"You should come with me.\" \n\n\"I can't ditch my friends Sweetie!\" Michelle grasped desperately for an excuse. \n\nJeff quickly pulled Michelle in, pressing his lips to hers. Michelle wanted to be repulsed, wanted to pull away, but her lips met his. Much to her horror, Michelle's tongue slipped between her lips seeking and finding his tongue. As she kissed him, his hand found her ass squeezing it tightly. Michelle was beyond conflicted, she wanted to kiss him, wanted to feel him, but this was uncharted territory. Thankfully Brenda rescued her dragging Michelle to the bar, unceremoniously leaving Jeff on the dance floor.\n\n\"Having fun?\" Brenda asked as she leaned into Michelle.\n\n\"That was um, interesting!\" Michelle replied. \"I may be a bit tipsy though.\"\n\n\"Don't worry,\" Brenda smiled, her eyes somewhat glassy, \"I'll protect you!\"\n\n\"My savoir!\" Michelle whispered into Brenda's ear.\n\nThe party ended up spending just over an hour at the club, Michelle managed to get used to dancing in heels, as well as dancing with a partner. A male partner. All of them seemed so much bigger, and stronger than her. Still, none were bigger than Mikey. For whatever reason, the sight of the hulking man was hard to suppress. The women piled back into the party bus, all talking loudly, giggling and carrying on. Michelle felt much more at ease and joined in, she felt accepted by the women there. Almost forgetting where they were heading next.\n\n\"Here we are girls!\" One of the bridesmaids called out!\n\nThe group shouted with glee, cat calling about the guys they would see and the size of their cocks. Michelle could really only giggle and blush, looking over as Brenda joined into the conversation. More shots flowed before the women rushed off the bus, taking their reserved seats near the main stage. Michelle reached into her clutch, splitting half the stack of fives with Brenda.\n\n\"I need you to help me spend these,\" Michelle instructed, \"no time to explain.\"\n\n\"Don't threaten me with a good time!\" Chuckled Brenda.\n\nMichael had been to a strip club before, but this was different. She'd not known what to expect, but the stage show was more of a production than a solo dancer on the stage. Women stood, waving cash in the air and screaming.\n\n\"These aren't going to spend themselves!\" Brenda said nudging Melissa. \"Wave away!\"\n\nThe guys were decent dancers, they were also incredibly well built with six pack abs and large pecs. They looked like perfect male specimens moving around in their small satin looking thongs. A couple of the men made their way over, swinging their hips and waving their satin covered packages, which barely seemed to be held in check. \n\n\"Oh dear!\" Michelle squeezed her legs tightly, her right over her left, as a dancer straddled them. \n\nLooking over, another dancer was straddling Brenda's lap as well. The tanned and toned man in front of her, with the bright white smile and 5 o'clock shadow let his satin covered balls glide up Michelle's leg. It was oddly arousing, she tentatively slipped the short edge of a five into the waistband of his thong, practically grazing his cock as she did! He simply smiled at her and mouthed \"thanks Baby!\". The two dancers then swapped spots; the second man straddled Michelle's lap turning his back to her. The thin strip of red satin disappearing between his perfectly muscular ass cheeks.\n\n\"Stuff it in there Michelle!\" One of the girls screamed.\n\nThey cheered, all of them. As Michelle threaded the five through the thong, she tugged it back and forth between his cheeks until she got it as far as she could. Giving the dancer a quick spank, the girls roared and howled in delight. It didn't take long for the dancers to realize the two women in the large group were packing fives while the rest were using singles. More and more attention was paid to the wedding party, and in particular Michelle and Brenda. They were sitting on a high back, long bench, with an almost constant parade of dancers coming over. One of them stood over Michelle, his feet on either side of her hips, his hand holding the back of the back of the bench. His crotch mere inches from Michelle's face.\n\n\"Ohhh fuck!\" Michelle moaned softly, licking her lips. The outline of his cock visible behind the turquoise blue silk. Peeling a pair of fives from her rapidly dwindling stack, Michelle tucked the pair down the front of the dancer's G-string making sure to graze his cock with her palm. \"Now run along and behave!\" She winked.\n\n\"Thanks, Beautiful!\" The dancer said with a wide smile as he climbed down. \"I hope you don't mind,\" he leaned forward, softly pressing his lips to Michelle's, \"but you're the hottest woman in here!\"\n\nThe dancer pressed his hand against Michelle's thigh by her hip to balance himself as he stood back up. She felt a rush of excitement from his touch. His lips were not as soft as Brenda's, or even Babette's but it didn't matter. Looking quickly to her left, it seems Brenda received a quick kiss from her dancer as well. A pang of jealousy hit Michelle, but what could she do? Tell the dancers to back off? Say they were together? Out Brenda as being interested in a girl? No, she sat quietly then winked at the dancer again before thanking him. As the show finally ended, Brenda pulled Michelle to her feet, giving her a big hug. Michelle's hands touched Brenda's bare back, marveling at how soft her skin was. \n\n\"I had so much fun!\" Brenda cooed into Michelle's ear. \"Thank you!\"\n\n\"Me too!\" Michelle responded feeling their chests pressing together. \"I kissed a boy you know!\"\n\n\"I did too,\" Brenda giggled, \"you kiss better though.\"\n\nHeading to the party bus, Michelle and Brenda held hands tightly as they walked, only releasing their grip as they stepped onto the bus. Michelle plopped onto the bench seat as Brenda spoke to the bride. Trying not to focus on things, Michelle couldn't help but feel the ache in her balls for the first time that tonight. The distraction had been nice, but now she was getting uncomfortable. Brenda sat next to Michelle, almost on top of her, pressing her back into Michelle's body and pulling Michelle's right arm around her torso. Much to her shock, Michelle quickly realized Brenda had tucked her hand underneath the top she was wearing, and she could now feel Brenda's skin again.\n\n\"Did you do that on purpose?\" Michelle whispered into Brenda's ear. \n\n\"You mean put your hand barely an inch from my tit?\" Brenda whispered back in the suddenly quiet bus. \"Maybe!\"\n\nMichelle let her hand slither slowly up until her index finger touched the underside of Brenda's breast, causing the woman to jump slightly. Michelle's index finger lightly stroked the underside of Brenda's breast, getting closer and closer to Brenda's nipple until she could finally feel the bumps of her areola. She could feel Brenda moan softly against her body, when she turned, Brenda was biting her bottom lip trying not to make any noise. Michelle's finger slipped further up, pressing against Brenda's nipple, causing her to gasp slightly. \n\n\"You're a bad girl!\" Brenda whispered.\n\n\"I'm just trying to make you happy.\" Michelle replied giving Brenda's ear a quick lick up the back.\n\n\"I hope you have a way to finish what you started when we get to my place!\"\n\n\"I have an idea!\" Michelle responded feeling her cage aching terribly. \n\nThankfully they were the second stop, barely remembering to say goodbye to Tiffany on their way off the bus. Tiffany was pretty drunk and would have barely remembered if they hadn't. Making their way into the building, Brenda stopped them as the outer door closed.\n\n\"I'm done with these shoes!\" Brenda said stepping out of the heels.\n\n\"But they did wonders for your legs,\" Michelle smirked as she stepped out of hers, \"which I'm a big fan of to be honest!\"\n\nThe two walked barefoot onto the elevator, where Brenda pinned Michelle into the corner with her body, pressing her lips to Michelle's. Their tongues met; hands explored each other's bodies as they both moaned loudly into each other's mouths. Barely recognizing the sound of the elevator getting to the correct floor, Brenda's hand shot between the doors just before they closed. Brenda led Michelle out of the elevator by the hand, her head spinning. It wasn't the drinks, she'd switched to lemon water an hour ago, there was just something about Michelle that excited her. Brenda could feel the thin bottoms she had on were soaked, and she couldn't wait for Michelle to peel them off her.\n\n\"I'm trying to unlock the door silly,\" Brenda cooed as Michelle embraced her from behind, pressing her lips to Brenda's neck, \"I need to focus at least a little.\" \n\n\"I wouldn't want to distract you!\" Michelle giggled, sliding a hand underneath Brenda's top and cupping her breast.\n\n\"Just keep in mind,\" Brenda moaned softly, \"the sooner we get inside, the sooner you can take this top off!\"\n\n\"I'll keep that in mind!\" Michelle giggled, giving the strap behind Brenda's neck a tug with her teeth.\n\n\"You're a naughty girl,\" Brenda giggled as she opened the apartment door, \"I can't wait to find out how naughty!\"\n\n\"I'll do my best not to let you down!\" Michelle cooed softly as she undid the back of Brenda's top letting it fall to the floor.\n\n\"Well, that was naughty!\" Brenda groaned as Michelle's finger massaged her breasts, slowly tugging her nipples. \"You'll have to take it easy with me,\" Brenda giggled, \"I've never had sex with a girl before!\"\n\n\"That's okay,\" Michelle replied, turning Brenda to face her, \"I've never had sex as a girl before!\" It was a small white lie, but Michelle didn't want to have to explain it all to Brenda now. \"I've been really looking forward to this.\"\n\n\"I have too!\" Brenda replied before kissing Michelle deeply and searching for the clasp to Michelle's top.\n\nFeeling the top fall from Michelle's shoulders, Brenda leaned back just enough to let it fall until it hung between them. Brenda couldn't get over how soft Michelle's skin was, how amazing it felt against her own. Her nails dug at the adhesive holding Michelle's breasts, and the forms, in place, causing Michelle to wince slightly.\n\n\"Sorry, I really want to feel you against me!\"\n\n\"Don't be sorry,\" Michelle moaned softly, feeling her cock rebelling in her cage, \"I have been wanting to feel boobs against yours forever!\"\n\nWith the adhesive bra free, Brenda pressed her chest to Michelle's, looking down at their breasts and feeling a rush of excitement unlike any other she'd experienced before. Brenda's hands slowly slid down Michelle's sides, underneath the dress and hooking her bottoms as well. Slowly working them downward, Brenda plunged her tongue into Michelle's mouth again. Their tongues danced and intertwined as Michelle's remaining clothing slid over her butt before falling to the floor.\n\n\"Look who's being naughty now!\" Michelle chuckled as she stepped out of her clothes while her hands searched for Brenda's zipper. \n\nFinding it, Michelle pushed Brenda's skirt downward, immediately returning her hands to Brenda's mostly bare bottom. The black lace boycuts covered almost none of Brenda's bottom, which Michelle continued to squeeze and lift, enjoying the sounds of her moans.\n\n\"The bedroom is this way,\" Brenda said tugging Michelle in the right direction, \"but you're going to have to do something about that thing.\"\n\n\"Unfortunately,\" Michelle saw the direction Brenda was looking and figured quickly it was the cage, \"there's not a thing I can do about it, but I have a different way to make you feel great!\"\n\n\"And how will I do the same for you?\" Brenda asked as they stepped into her bedroom.\n\n\"I'll manage.\" Michelle said as Brenda embraced her again.\n\nThe couple slowly fell to the bed, Michelle sliding her body on top of Brenda's, hands gliding over each other's bodies, legs and tongues intertwined. Michelle could feel how wet Brenda's sexy bottoms were. She couldn't wait to move her way down Brenda's body and show her everything she'd learned earlier in the week. Starting slowly, Michelle gradually worked her way down Brenda's neck, exploring and tasting every inch her tongue could reach. Michelle's mouth lingered around Brenda's breasts, pinching the hard nipples between her teeth and flicking them with her tongue.\n\n\"ohhhhhh!\" Brenda cooed; her fingers wrapped into Michelle's hair holding her tight. \n\nReaching down, Brenda slid her hand between their bodies, cupping and squeezing Michelle's small breast, causing her to moan softly as well. Brenda smiled, moaned, and squeezed her legs around her attentive lover. Loosening her grip on Michelle's head, Brenda softly guided Michelle further, already feeling Michelle tugging downward on her bottoms. Brenda raised her hips, feeling the thin material slide free from her ass. Giggling slightly at the feeling of Michelle's tongue and lips around her belly button. Michelle kissed and licked her way to Brenda's hip, slowly following the crease of her leg before quickly moving to the other. Looking up, Michelle and Brenda's eyes met briefly before her tongue flicked over Brenda's swollen clit.\n\n\"OHHHH Yes!\" Brenda groaned, flinging her head back and arching her back.\n\nMichelle moved quickly, tugging the lace bottoms while moving up to her knees, lifting Brenda's feet high in the air and tossing the bottoms aside. Grasping the back of Brenda's thighs, Michelle leaned forward plunging her tongue inside Brenda's pussy.\n\n\"Oh shit!\" Brenda blurted.\n\nThe next twenty minutes were a marathon for Brenda as Michelle's tongue and fingers explored her pussy bringing her body never before experienced levels of pleasure. Michelle had her left hand flat on Brenda's lower abdomen, her right middle finger pressed against the front of Brenda's vaginal wall, circling her palm with the finger while her tongue flicked ruthlessly.\n\n\"OH! GEEZUS! FUCK!\" Brenda blurted loudly, her feet digging into Michelle's back as her entire body humped Michelle's face. \"OHHHMYYYFUUUKKKIIINNGGGGGGAAAAAWWWDDDD!\" Brenda screamed, tears running down the sides of her head from the powerful orgasm. \"Ohhh please, no more.\" Brenda lifted her hand then let it fall to the mattress. \"I'm spent,\" her body slack as if she were melting into the mattress, \"I can't take another one of those.\"\n\nMustering the energy to lift her hand enough, Brenda put her hand underneath Brenda's chin, guiding her upward. Their mouths met again, sharing Brenda's tastes in their kiss. A shudder ran through Brenda's body, her nails digging into Michelle's soft skin.\n\n\"Oh my,\" she panted as their kiss broke, \"no one, I mean no one, has ever made me cum that hard in my life!\"\n\n\"I'm glad you enjoyed it!\" Michelle relished in Brenda's reaction to her oral abilities. \n\nLeaning down, Michelle kissed Brenda again, smiling to herself as she felt Brenda shudder underneath her again. Michelle had tried every trick she'd learned the other day, and done the most important thing, she'd watched and listened to Brenda's reaction to what she was doing. \n\n\"Okay,\" Brenda blushed deeply, \"maybe one or two more?\"\n\n\"I won't say no!\" Michelle replied quickly slipping down Brenda's body again. \n\nMichelle stared up Brenda's body as she placed her lips on her lover's hyper sensitive clit. Her eyes grew larger and Brenda's hands cupped her breasts, tugging and rolling her nipples while Michelle lovingly licked and sucked. She watched Brenda writhe and wiggle, holding Michelle tightly in her taut legs. Michelle pressed her thumb against Brenda's sphincter, hearing her gasp then moan. Bringing Brenda close, Michelle slowed, focusing on Brenda's swollen pussy lips momentarily while pressing and rubbing her thumb on Brenda's tight hole.\n\n\"Ohhhhh Jeessuussss!\" Brenda screamed as Michelle slipped her index finger inside her pussy again, pressing it against the front wall. \"That spot, that fucking spot!\"\n\nBrenda's hands shot to her sides, gripping the sheets tightly as she ground her body into Michelle's mouth. Her back arched, mouth and eyes wide open as she let out a low guttural moan that seemed to never end.\n\n\"OH FUCK!\" Brenda lurched forward, her hands gripping Michelle's head tightly. \"I'm fucking cumming AGAIN!\"\n\nMichelle licked and sucked, rubbing Brenda's G-spot with her index finger while still pressing and rubbing against her ass with the thumb. Brenda continued to hump Michelle's tongue until her body collapsed, all but melting into a pool of Jell-O. \n\n\"Ohhhhhh but you're not stopping!\" Brenda cooed, obviously exhausted but not wanting to push Michelle away just yet. \"Don't stop, please!\"\n\nMichelle couldn't remember the last time she'd heard a woman beg while in bed with Michael. Michael was clumsy, rushed, and just happy to be naked with a woman. Michelle was rocking Brenda's world! She'd already given her a more powerful orgasm than she'd ever experienced before, now she was going for round two! Or was it three? \n\n\"Yes! Just like, oh YES! That!\" Brenda's body was revived, her legs and hands gripping Michelle tightly again. \"I love your fucking tongue!\" Brenda's entire body tensed again. \"Ohhhhhhhhhhgggggoooodddddd!\" She groaned as her body twisted while flooding Michelle's mouth.\n\nJust as she'd done after her last orgasm, Brenda's body collapsed, her arms and legs splayed outward unable to move. The idea of lifting her hand was too much to fathom, she could feel Michelle slowly kissing her way up her body, but couldn't muster the strength to giggle or push her away when she hit a ticklish spot. It was just too much effort for her.\n\n\"I take it you enjoyed that?\" Michelle said as she pressed her lips to Brenda's.\n\n\"Oh, I believe you know I did.\" Brenda responded weakly lifting her arm to brush it against Michelle's face. \"That was amazing!\" Brenda said barely above a whisper as her body shuddered again.\n\n\"I'm glad!\" Michelle replied giving Brenda a soft kiss.\n\n\"One down side,\" Brenda said gathering some strength, \"I have to pee.\"\n\n\"Well, that's unfortunate,\" Michelle giggled, \"I was enjoying being here.\"\n\n\"Oh, don't worry,\" Brenda smirked, \"I'm coming back!\" Slowly crawling out of the bed, Michelle stood unsteadily on her feet before saying. \"And you're not going anywhere!\"\n\nMichelle leaned on one elbow watching Brenda slowly walk to the bathroom, smirking at the fact Brenda was struggling to maintain her balance because of what she'd done. As the bathroom door closed, Michelle fell back resting her head on a pillow, arms extended to her sides. Feeling suddenly a bit cool, with the loss of Brenda's warmth, Michelle slipped under the covers. She licked her lips, wiping her chin, tasting Brenda with each touch of her tongue. Closing her eyes for a moment, Michelle relished in her new found sexual ability.\n\n\"You seem quite proud of yourself!\" Brenda said as she stood next to the bed.\n\n\"I think I have a right to be!\" Michelle replied cockily.\n\n\"That is true!\" Brenda replied slipping into the bed.\n\nBrenda slid under the covers with Michelle, reaching across Michelle's body with her right hand and grabbing Michelle's left, in one quick move she pulled Michelle to her while rolling onto her right side. Michelle was now tightly spooning Brenda, her arms coiled around the nurse's body, torso pressed into Brenda's back. \n\n\"Sweet dreams.\" Michelle whispered.\n\n\"Sweet dreams to you!\" Brenda responded squeezing Michelle's arms."
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "femdom",
        "men in heels",
        "forced feminization",
        "forced fem",
        "men in lingerie",
        "sissy slut",
        "cross dresser",
        "crossdressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-12"
}