{
    "title": "Christian College Sex Comedy Ch. 25",
    "pages": [
        "*When I fell to Earth I realized perfection; Earth has everything while Heaven has no Evil*\n\n(Thanks to Frontma for all the grief puts up with on my behalf)\n\n(This starts out a bit chaotic and slow but it does pick up)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n*\n\nIt was well past one when I finally had the gang rounded up and headed back out to our rides. It took all of twenty seconds for a buzz-happy Rio to realize that Willa and a now unemployed Belle tagged along. When she did, her look was one of ferocity.\n\n\"Oh, hell no!\" she snapped, and turned toward the two Warlord ladies. \"I'm going to kick your ass.\"\n\n\"Last time I saw you, Bitch, you were half way to the city's sewage system,\" Belle laughed back. \"Want to go the rest of the way?\"\n\nRio surged against Mercy and Barbie Lynn's restraining hands while Willa pulled Belle back, and I ended up in the middle holding them both at bay.\n\n\"Calm down Rio, it is cool now,\" I told my buddy. \"Belle, this isn't what you think.\" Speaking of thinking; I had to think fast to figure a way to turn this situation around. I'd hoped that Rio would be so happy, she'd have let it lie for the night -- silly me.\n\n\"Rio, I'd like Belle to give us motorcycle lessons for the trip this summer, and to personally give you self-defense training,\" I spewed forth my hare-brained idea.\n\n\"What the fuck?\" questioned Belle.\n\n\"Fuck that noise,\" Rio spat. \"I don't need this dink to teach me how to fight.\" I wasn't sure what a 'dink' was but I doubt it had positive connotations.\n\n\"Rio, you haven't picked a martial arts instructor yet and I think Belle's self-taught style would be somewhat attractive to you,\" I guessed. I had no clue as to Belle's fighting background.\n\n\"I'd rather teach a goat how to use a unicycle than teach this moron how to ride a bike,\" Belle growled.\n\n\"I'll pay you fifty dollars an hour per four students,\" I offered Belle.\n\n\"She's a skank,\" Rio seethed. Belle, on the other hand, seemed to be coming around.\n\n\"Fifty bucks-...per four people? What would I have to do?\" Belle inquired. She was job hunting after all.\n\n\"Teach them how to ride, for starters,\" Valarie came to my rescue, \"plus basic maintenance, road lore, and stuff like that. You'd also have to teach Rio how to not get her ass kicked.\"\n\n\"I keep telling you people, I don't need this bitch,\" Rio repeated.\n\n\"Fine, Rio, but tell me, who is going to be your instructor?\" I countered. \"It can't be Mercy.\"\n\n\"Want your knife back?\" Belle grinned as she reached into her boot and pulled out the butterfly knife Val had given Rio on Thursday.\n\n\"I don't know,\" Rio grumbled, \"have you been using it as a sexual aid?\" \n\nBelle snorted. \"Fuck, with Zane around, who needs one?\" Belle smiled wickedly. \"Two orgasms in ten minutes at a table on the club floor and that was only with his tongue and fingers.\"\n\n\"He'd have nailed her in the bathroom if it hadn't been for that whole 'no sex' thing,\" Tawny added.\n\n\"I should have stuck with you, Zane,\" Paige tugged on my arm. \"See where you ended up?\"\n\n\"Who is the ghost?\" Belle asked snidely.\n\n\"I'm Paige and Zane is with me this weekend,\" Paige challenged Belle...bad move. Sometimes reactions pull you one way and instincts send you in another. I went with instincts and let events play out. Belle scooped Paige up under each arm and hoisted her up.\n\n\"You are what -- 100 pounds? A whole weekend with him and he'd break you in two,\" Belle observed. \"He needs a real woman, not a bit of fluff.\" \n\nIt was time for me to become involved. I reached an arm around Paige's waist and took her weight onto me. Belle was kind enough to let go so I swung Paige up until I was carrying her in my arms. Paige switched her gaze between me and Belle twice, then latched onto me. \n\n\"Okay -- I win,\" Paige announced. \"I'm the bit of fluff he comes to again and again, after all.\"\n\n\"You are the freakiest group of people I've ever seen,\" Hank spoke up. \"A sorority president and sisters\" (Leigh and Jersey had joined us), \"two Warlord bikers, Christian school girls, and a porn star -- no offense, Zane.\" \n\n\"Just another day ending in 'y',\" Iona whispered. I caught that zing and snickered. \n\n\"No offense taken, Hank,\" I joked back. \"I'd rather have the memories and suffer through the condemnations of those who don't know me than miss out.\"\n\n\"Dude, if you ever need a stand in,\" Finn added to the joy. He and Ginger had indeed hooked up again, so we were good on that front. Ginger did playfully thump him in the chest though.\n\n\"Finn, you are already sleeping on the sofa tonight,\" Ginger teased. \"Would you rather be out on the welcome mat?\"\n\n\"Thanks for letting us spend the night at your place,\" Barbie Lynn added to the play.\n\n\"What?\" Finn squawked. \"Oh, come on, Babe.\" Ginger detached from Finn and wrapped an arm around Barbie Lynn's waist, who reciprocated the gesture.\n\n\"Oh, come on, Babe,\" Ginger mimicked, \"We want a little girl time, ya know, one on one.\" Barbie Lynn turned her head and exchanged a heated kiss with Ginger that decidedly aroused me. I hated to think what Finn was going through.\n\n\"Dudes, I'm going down to the river,\" Finn groaned.\n\n\"Wouldn't a cold shower be better and safer?\" Leigh asked.\n\n\"I'm not going to cool down; I'm going to drown my stupid ass for stepping out on Ginger at the start of the night,\" Finn sighed. \"I deserve this.\"\n\n\"That's what I wanted to hear,\" Ginger gloated. She gave another quick kiss to Barbie then glided back to Finn. \"It's okay, Honey, I forgive you.\"\n\n\"Thanks Babe,\" Finn kissed her once more.\n\n\"You are still sleeping on the sofa when we get home,\" she announced triumphantly. The lesson here is, if you are ever given a choice between fighting a man or a woman; fight a man. Men beat you up, gloat, then walk away. Women hold grudges -- forever.\n\n\"Any advice for our lovelorn?\" Willa asked.\n\n\"Everything fades, be it fame, passion or possessions -- it all goes to dust and is lost,\" I said.\n\n\"That's rather depressing,\" Willa noted.\n\n\"The exact opposite,\" I countered. \"All you are and will ever be is defined by what you do in the next few seconds of life. That is when you can mark yourself as a hero or a villain.\"\n\n\"I can buy that,\" Belle mused. \"Live for the moment.\" I could tell Iona was more uncertain about my words so I expanded.\n\n\"I am not saying don't plan for the future, but don't live so much for what might be that you ignore what is going on around you right now, because no moment matters less than any other,\" I added.\n\n\"That's my boy: Renaissance warrior-poet with the libido of Ron Jeremy,\" Rio jibed.\n\n\"I like it,\" Tawny spoke up. \"What would it be like to spend the whole weekend, or a whole week, alone with Zane? I wouldn't be bored.\"\n\n\"I wouldn't be able to walk,\" Barbie Lynn giggled.\n\n\"I'd enjoy the education,\" Paige noted.\n\n\"I'd enjoy the peace and quiet,\" Vivian joked.\n\n\"Zane, you have a little bit of a fan club here,\" Belle smiled.\n\n\"Totally unwarranted and undeserved,\" I sighed. \n\nWe arrived at the water tower and we went our separate ways. I'm sure Paige and Iona wanted to talk to me but they both fell asleep within three minutes of getting in the car. I took them up individually to my room and tucked them in before letting a sleeping Jill know we'd made it back and assuring her that we'd make it to church in the morning.\n\nService and Supper\n\nWe weren't feeling terribly chipper when Iona, Paige and I crawled out of bed, but we were conscious, ambulatory, and capable of speech so we passed Aunt Jill's inspection before heading out to church. For Paige, it would be a new experience as she normally spent Sunday morning at FFU's Assembly hall. Fortunately, she would be exploring the experience with Iona.\n\nMy class was amusing as always. Somehow, no one had missed the little revolution we'd staged at university and there was varying levels of confusion, disgust, and anger with what 'I'd' done. Yeah, it was my entire fault because I was in the middle of 'God Made Man First' country. Oddly enough, Chris Gilbert stuck it out with me, jumping in on my side when more than two guys ganged up on me verbally.\n\nThe second time Chris parried Mr. Coleman's insinuations of my corruption away, the gang gave up and actually got down to the lesson for the week -- the Book of Samuel; namely, King Saul versus the Philistines. The lesson was that God abandons sinners. I hung on to the point that even when he knew he was going to die, Saul led his army out to fight the invaders of his homeland. I doubted any of those guys would know what kind of courage it took to fight a lost cause if the time came.\n\n\"Do you make a habit of running off cliffs and into walls,\" Chris joked with me, then \"Whoops, sorry about that -- your parents and all.\"\n\n\"It was mountain climbing,\" I shrugged, \"so don't worry about it. Have a good week?\"\n\n\"Oh, peachy; I burned down a state park and robbed the Louvre,\" Chris stated, deadpan.\n\n\"Dude,\" I laughed, \"if you are trying to compete with me let me just say 'you win' and end the contest right now. You can have it and the grief that goes with it.\"\n\n\"Does that include the girls?\" Chris chuckled. It was odd having a real conversation with a guy nearly my age who had a clue where I was coming from.\n\nMy response was overwhelmed by the crush of young ladies around us. What followed was a chorus of 'hey, Zane', 'hey, guy', and Iona and Barbie Lynn adding a 'hi, Chris'.\n\n\"Hi there, ladies,\" and \"Hello Barbie Lynn and Iona,\" followed up Chris. By the way he was looking at Barbie Lynn, I could tell that his perception of her had changed. He wasn't leering but there was a certain sexual curiosity that was new to his gaze.  \n\nBarbie Lynn caught Chris' look, smiled, but then cuddled up to me to make the situation clear enough. Chris chuckled and shook his head mirthfully.\n\n\"So is McHunky (Chris) part of the group now?\" Rio broke through the politeness.\n\n\"Chris is not treating me like I'm Caine so I'd hope he'd say yes if you ask him nicely,\" I answered.\n\n\"I would say 'yes,' with the understanding that I'm older than all of you and like to live a slightly more private, video-free, lifestyle,\" Chris informed us.\n\n\"Chris,\" Rio inquired, \"what is the maximum number of girls you would take to bed at one time, and how many would you feel comfortable dating?\" I wanted to kill Rio once more, considering we were clearly being overheard as we moved down the hallway leading to the Tabernacle.\n\n\"Hmmm,\" Chris thought it over. \"Four in one bed, but I'd only feel comfortable dating one woman at a time. I'm old-fashioned that way.\"\n\n\"That's not a problem,\" Rio grinned, \"old-fashioned we can cure.\"\n\n\"How about we respect different people for their differences, ya nut-job,\" I cautioned Rio.\n\nRio's retort was cut off by our entry into the main area of worship. Chris waved good-bye and angled toward the front and his family. With Barbie Lynn in the lead, the rest of us moved to the far side where the FFU crowd sat together. I couldn't find Jill in her regular spot but Iona pointed out she'd joined Mrs. Wellington, the Mayor, Lance, and Felicity on the second pew -- a few steps up in the world.\n\nWe'd settled in after the first hymn and Pastor Bill had started the morning greeting when the two main doors to the church slammed open and a black clad woman strode in -- it was Belle. It was also clear that Belle had never been in here before, had no idea where I would be seated, and was overwhelmed by the sheer number of parishioners. I don't think she cared that most of them were staring at her. She had dressed up, right? She had on a black jacket, black t-shirt, black jeans and black boots. She'd taken off her black sunglasses.\n\nI stood up, put two fingers in my mouth the way Heaven had taught me (Orienteering class -- honest) and whistled loudly as I waved her over. Belle's head snapped my way and over she came. By long-standing tradition, Iona sat on one side of me and Rio took the other. This time, Paige had supplanted Iona.\n\nBelle decided that insinuating herself between Paige and I would require a crowbar and some leverage so she sat down on Rio instead. Rio grumbled, squeezed out from under Belle, and sat in Mercy's lap. Bill, with a final glare my way, picked up the service as best he could and droned on. Rio leaned into Belle and licked her cheek as a means of retaliation.\n\nBelle didn't punch Rio, for which I was grateful. I made sure to put a little extra on the collection plate -- for God's sake, not the church's, when the time came around. The sermon was on the Israelites and their forty years of wandering before coming to the Promised Land. I think there was some confusion between myself and most of the flock here on who was the one farthest from the expected destination.\n\nAt the end of the service my plan went into motion, with multiple women having a role to play. Oddly, despite this being a criminal endeavor, Belle was the only one close to me not involved. It was good fortune that put her at my side because with so many of the church elders gawking/fearing/lusting after her, they completely missed the real mischief makers.\n\n\"Good morning, Rochelle,\" I greeted the mayor's wife. She turned, smiled at me, then looked over at Belle. \"This is Belle...\"\n\n\"Belle Kennan,\" Belle finished up for me. I hadn't known her last name.\n\n\"I know you,\" Rochelle was clearly thinking hard. \"Did you used to collect golf balls off the greens at the country club years ago? You had a sister. Your father was a groundskeeper.\"\n\n\"That was a while ago,\" Belle allowed. \"Dad fucked it up with his drinking, like he did everything else. My sister, Tara, is now a Sheriff's Deputy around here.\"\n\n\"What do you do?\" Rochelle made conversation.\n\n\"I'm Zane's...chauffer,\" Belle answered with a twisted grin. \"Actually, I'm giving him and some of his friends motorcycle lessons.\"\n\n\"That sounds promising,\" Rochelle continued. \"Belle, can I have a few moments of Zane's time?\" Belle gave me a suspiciously sexy raised eyebrow then went looking for another one of my female set. \"Zane, you were right about that matter we discussed. I still don't know what I want to do with the news. Maybe we can discuss it Wednesday night?\"\n\n\"Absolutely,\" I nodded.\n\n\"By the way, there seems to be a growing suspicion that you are not a very moral person,\" Rochelle leaned in and whispered to me. \"Apparently there is some evidence of you and some other girls...\"\n\n\"I've never denied it,\" I told her. \"I also believe that no one seems to care that I've foresworn sex for the weekend. I know it is not much by most people's standards but at least I'm trying to see how the other half lives.\"\n\n\"How is that working for you?\" Rochelle grinned.\n\n\"Abysmally; I've been tackled, jumped on, stacked up in a shower, grappled at a party, and got a lap dance in a club,\" I groaned.\n\n\"You should stay home more often,\" Rochelle advised.\n\n\"I received the tackle, jumping, and the stacking at home, Rochelle,\" I related. \"Maybe I should hide out at your house.\" Rochelle stared at me and I wasn't sure what to make of that.\n\n\"I will see you on Wednesday; take care now,\" I broke the silence between us. I turned and went over to the gulf of isolation that was Sahara Penny. \"Hello, Mrs. Penny. You look incredibly inspirational this morning.\"\n\n\"Hello, Zane,\" she smiled, her white teeth brightening up her Lebanese features.\n\n\"I was thinking that I could do the whole dinner thing with you and William tomorrow night, if that is okay with you,\" I looked her over.\n\n\"Well, you could hardly become more of a pariah,\" she mused. \"I would be glad to cook you a meal.\"\n\n\"Wolves may get hunted but sheep always get eaten,\" I replied.\n\n\"Are you a wolf, Mr. Braxton?\" she teased.\n\n\"I have to be worthy of your company,\" I retorted, which she found amusing. \"I'll see you,\" I tacked on before heading toward the main gathering.\n\nI patiently waited for the main group of men to recognize my presence but today they seemed less than willing to. I must have really been a bad boy. I did catch Rio handing off a phone to Iona who was quietly but quickly working away on it. I had to wonder how long it would take for Lance to realize Rio had swiped it from him. Hell, I promised Raven I'd get her those books from George Mason's library and I was going to return his phone to him soon enough.\n\n\"Hey, my little Butt-Monkey,\" Belle taunted me loudly, \"are you waiting on this bunch of old fuckers for something?\" The conversation stopped and heads turned our way: yay me.\n\n\"Mr. Braxton,\" Pastor Bill snapped in a clipped manner, \"when you invite some...person to our church you should consult with me or one of the deacons to see if they are appropriate.\" \n\nHe was pointedly ignoring Belle, which I found to be both rude and unwise as Belle was the most likely person he'd ever meet who would gladly take his underwear waistband and pull it over his head and laugh while she did it.\n\n\"I wasn't actually wise enough to invite Ms. Kennan but I should have because I was under the impression this was a House of God. I'll make her tithe if that's what you are worried about,\" I informed them.\n\n\"The appropriateness of you being in this church is also in question,\" Mayor Wellington brought up.\n\n\"How's Phillip?\" Belle spoke up with a wicked sneer toward the Mayor; Phillip was one of his sons. \"We had a lot of fun in high school. He was good enough to bring me by your house but he never brought me to your church.\"\n\n\"He would have never dated someone like you,\" the mayor glared at Belle.\n\n\"Technically we weren't looking for a relationship,\" Belle grinned, \"but does that big four-poster bed of yours still have that dainty white dust curtain with the roses on it?\"\n\n\"You are nothing more than a low-down dirty whore like your mother,\" Mr. Gibson, the county's largest furniture seller, snarled at Belle.\n\nI wasn't sure what her response was because Gibson staggered into Mr. Lieber when I drew my hand back for a slap; everyone got quiet. Yes, I had almost committed assault in front of thirty or so witnesses who hated my guts. Oh, and one of them was a judge.\n\n\"Braxton!\" Pastor William thundered.\n\n\"Hold that thought, Bill,\" I pointed to the reverend before turning back to Gibson, \"Sir, you insulted a lady in my presence, so you can apologize to her or step out with me to the parking lot where we can settle this like men, because I'm morally opposed to causing needless bloodshed in a house of worship.\"\n\n\"That's it, Braxton, you...\" Pastor Bill growled.\n\n\"Zane!\" a different, feminine voice interrupted. \"Apologize to Mr. Gibson at once.\"\n\n\"I apologize, Mr. Gibson,\" I grudgingly stated.\n\n\"I should have you arrested,\" Gibson grumbled.\n\n\"And I'll make sure that your little outburst with...\" the woman threatened.\n\n\"Belle Kennan,\" Belle studied the newcomer and the girls around her.\n\n\"Ms. Kennan goes all over the internet and is flagged with every search engine with your name and the name of your store,\" Christina finished.\n\n\"I'll sue,\" Gibson fought back.\n\n\"And I'll win,\" Christina kept coming. \"This is clearly a First Amendment issue, both speech and religion. Now are we going to play nice and respect our fellow Christians or are we going to collectively forget we are all adults?\"\n\n\"He is not going to get away with this threat of force,\" Pastor Bill persisted.\n\n\"Pastor Penny, are we truly basing our actions and reaction on what an eighteen-year-old playboy does?\" Christina pointed out. \"Clearly, leadership is called for, and since you men are the patriarchs of the church, you should be leading Zane in the proper course of action.\"\n\n\"Mr. Gibson,\" Chris joined in, \"maybe Zane could clean up your parking lot one afternoon as penance.\" I had to be sure he was helping me out here.",
        "\"Grrr...alright,\" Mr. Gibson admitted. \"That would satisfy me.\"\n\nI caught sight of Aunt Jill looking my way. I half expected her to volunteer my acceptance but she waited patiently on me instead -- not a good sign concerning her dependence on me.\n\n\"If it is okay with Mr. Gibson, I'll come over when he gives me a call and my school schedule allows,\" I said.\n\n\"I hope that settles that,\" Mr. Gilbert, Christopher's father, announced. \"Was there a reason for Mr. Braxton waiting around us?\" He was covering for his son, not me.\n\n\"I was agreeing to Pastor William's invitation to eat dinner with him tomorrow,\" I said.\n\n\"I will have to look at my schedule and get back to you,\" Pastor Bill replied in a snide tone.\n\n\"No problem -- Mrs. Penny and I'll hit Zeta's tomorrow and we can work out something for later,\" I smiled. I turned and left before he could finish sputtering because not only was Zeta's one of the finest eating establishments in town, I heard rumors it was also highly romantic.\n\nI took eight steps before I nearly doubled over in pain. Christina had kidney-punched me, and hard. I turned fast enough to see Belle and Christina facing off.\n\n\"Do you want to explain that to me, Princess?\" Belle inquired with a false grin.\n\n\"I'm Christina Buchannan and I'm wondering what you are doing here burning through what little good will Zane has with this congregation,\" the woman I love sizzled.\n\n\"Zane, should I give a crap?\" Belle joked. She didn't need me to tell her what to think.\n\n\"She's the woman I love more than life itself,\" I explained to Belle, who regarded me curiously.\n\n\"I occasionally like him,\" Christina remarked, \"when he's not making an ass of himself.\"\n\n\"I couldn't let them insult Belle,\" I countered. \"If she slapped the guy, you know they would have screwed her over.\"\n\n\"I don't need you to pick my fights, Dumbass,\" Belle mocked me. \"These people and their opinions don't bother me. Hell, Mom whored around a lot and for all I know, Old Man Gibson might even be my Daddy. Now,\" she looked at Heaven, \"why are you eyeballing me?\"\n\n\"I'm Heaven and Zane's my boyfriend,\" Heaven declared.\n\n\"Oh, God,\" chuckled Belle, \"when Tawny said your life was beyond description, she wasn't kidding.\"\n\n\"If we can all agree to get along I have one last thing I need to get done and then anyone who wants can make for Jill's,\" I stated. I leaned in and kissed Heaven on the ear. She finally broke her glare directed at Belle to look up at me so I kissed her on the lips.\n\n\"Are we okay, Babe?\" I asked Heaven. She looked at me but seemed terribly upset by something that I was unclear about. She nodded and I broke away. Iona slipped me the phone as I approached Felicity. I now got to see if what I'd done had screwed up my relationship with her.\n\n\"Hey, Felicity, do you know whose phone this is?\" I asked Lance Wellington's fianc\u00e9.\n\n\"That looks like Lance's,\" Felicity took the device and examined it. \"It is,\" she confirmed.\n\n\"Are you going to George Mason anytime this week?\" I inquired.\n\n\"I was going up Tuesday to visit Lance for some kind of fraternity affair,\" Felicity said.\n\n\"When you are there could you pick up some books for me? I checked them out but I'd have to find a way to make the trip myself and with my school schedule, that would be tough,\" I explained.\n\n\"Zane, how does someone from FFU get books from George Mason?\" Felicity leaned in and whispered.\n\n\"I'm not breaking the law but I am doing it in an underhanded manner,\" I whispered back.\n\n\"Okay,\" she smiled warmly, if in a rather complacent manner.\n\n\"Thanks,\" I told her, before parting ways and making for the door. A tide of women migrated with me outside. As we split up, I caught sight of Belle putting on her helmet and sitting on her hog. \"Are you coming over for supper (the midday meal in the Southeastern US)?\"\n\n\"Does inviting the poor outcast chick to the house make you feel better about yourself?\" Belle teased me.\n\n\"Does everything have to be about you and your vendetta against the Established Order?\" I shot back.\n\n\"I bet the girls have a blast tying you down because you can be downright irritating,\" Belle rolled her eyes.\n\n\"We've already gone down that road with me, the cross and the sorority in the woods, so stop gloating. Now, are you coming to supper willingly or are you going to have to beat me up when I try and make you?\"\n\n\"Fine,\" Belle raised up her hands, \"when I looked up 'dumbass' and 'stupid' online, they both had your portrait under the 'images of' section. If I walk in the door, you will know I've accepted your offer. Now step back before I decide you are more annoying than cute.\"\n\nI stepped back, joined Paige and Iona at the car, and travelled my dumb ass back home. Barbie Lynn, Valarie, Rio, and Mercy had already joined Aunt Jill in her heroic culinary efforts based on the talents of the microwave and a warm skillet. The parade of food was setting around the table when I noticed Paige had gone missing. As I scanned about, I saw Belle walk into the dining room -- I hadn't heard the doorbell ring or a knock at the door. \n\n\"Have we locked away the good silver,\" Valarie joked when she realized Belle was here. Belle didn't look amused by Val's ribbing. \"It's for Rio,\" Valarie snickered.\n\n\"Hey,\" snorted Rio, \"Belle, you are stepping on my Bad Girl image. I'll take Grand Theft Auto and vandalism and you get burglary and guns; deal?\"\n\n\"Zane...\" Jill was looking for some explanation from me so I decided to see how far her new tolerance could be stretched.\n\n\"I wanted to show Belle one of the guest rooms,\" I stated carefully, but with authority. \"She doesn't have a place to live and since we have the space, I figure she could hang out until she puts some money away for a new place. Plus you would have someone home when you got off of work and the house would be safer. Belle can take care of herself and you, if something goes wrong,\" I finished.\n\n\"Zane, you make my life easier one more time, I swear that I'm going to use you to redefine road rash,\" Belle promised. This declaration didn't stop Belle from stepping up and taking a seat.\n\n\"Jill, is that okay with you? \" I addressed the female lead of the Braxton household.\n\n\"If you think it will be good for the house and make things safer, I wholeheartedly support your decision,\" Jill agreed. That done, I called out for the invisible Paige.\n\n\"Paige, I don't advise you to sneak up behind Belle,\" I warned her. \"She might not be in an understanding mood.\"\n\nPaige did heed my advice and appeared by me instead of behind Belle.\n\n\"Your intellect may be downgraded to 'sub-par' if you keep this course of action up,\" she cautioned me.\n\n\"Do what you will,\" I quoted, \"for I do what I must.\"\n\n\"The blade itself incites to deeds of violence,\" Belle countered to Paige. \"Are you really such a fucking putz that you think you can separate Zane's passions into the parts that you like from the parts that you don't? To me it seems you are wasting your parents' money by going to college yet staying dumb as dirt.\"\n\n\"Belle -- language at the dinner table,\" Aunt Jill scolded Belle. I wasn't sure how Belle would take that but something else was going on at the same time. Everyone was looking at Belle too, but for a reason that had nothing to do with calling Paige names.\n\n\"What? I can't quote Homer?\" Belle shrugged. \"I've read Sun Tzu too. Oh, and sorry about slapping the little bitch, Aunt Jill. I hang out with men of questionable parentage.\"\n\n\"I apologize, Belle,\" Iona spoke up. \"I thought less of you because of the way you talk and dress. That was unfair to you and a disservice to myself and the way my parents raised me.\" The apologies echoed around the table; Paige's silence being noted. I gave her one quick look, then joined the rest of the gang doling out the food and settling in to the routine of eating and dinner conversation.\n\nHEART SONG\n\nAfter we ate and cleaned up the table and the kitchen, Jill took to her chair, reading a Christian Lifestyle magazine, while Iona, Paige and I sat on the sofa.\n\n\"Zane, do you think we will be able to do this again soon?\" Paige asked. It was the first thing she'd said to me since Belle had arrived. I had to think about the words I would use.\n\n\"Ask me again in a day or two when I've cooled down,\" I answered.\n\n\"What do you have to be angry about?\" Paige turned fully to me. Again, I had to search for the words. \"You are the one who brought the stranger around.\" I took a deep breath.\n\n\"Paige, you were once that stranger that Zane brought around to the rest of us,\" Iona reminded Paige. \"We were all once new and unknown to him and the rest of us -- except Rio. She's been there at his side since the beginning.\"\n\n\"I would prefer to hear what Zane is really thinking,\" Paige sounded condescending toward Iona.\n\n\"Fine,\" I sighed. \"I can take you teasing me -- it is kind of nice and our thing, but I can't keep dealing with you not trusting my judgment. I will try to do what you want but when you ignore what I want, we need to go separate ways until something changes.\"\n\n\"But...\" Paige went from arrogant to stunned inside a second.\n\n\"I asked you to give me a day or two to order my thoughts and emotions but you decided that you knew best,\" I explained. \"This is how I feel right now: my life would be better without you.\" Paige was rendered speechless and both Jill and Iona were clearly unhappy with me.\n\n\"That's not what he means, Paige,\" Iona popped back into the conversation, \"do you Zane?\"\n\n\"What the heck does he mean, then?\" Paige dry-sobbed.\n\n\"This weekend was a disaster for him,\" Iona persisted. \"All he wanted to do was unwind and spend a quiet few hours at his home with Jill. I was only invited along because I've learned to keep out of his way when he gets in these moods.\"\n\n\"We had a wonderful morning and now he's acting like a total ass,\" Paige grumbled. \"We all had a rough week and a less than satisfying weekend.\" Iona lowered her head, then stood up.\n\n\"Paige,\" Iona began as she walked over to face the albino maiden, \"I wasn't aware that our school administration has been after you since day one, or that you've been beaten up multiple times, or humiliated, or had your friends threatened, or had your private life made into a public spectacle, or had someone point a gun at you, or make you fight for your life, or get drugged and tied naked to a cross.\"\n\nIona stopped for a breath.\n\n\"Please,\" Iona pleaded, \"tell me how much more you needed a quiet weekend compared to Zane.\" Paige began to get all teary-eyed -- oh hell. \"You invited yourself along, you got the Kappa Sigmas to come over in the middle of the night, and you insult a guest he invites over to his house -- his house. What is wrong with you?\" Iona showed real anger this time.\n\nPaige got up, choking back sobs, and fled to the back porch; a few moments later I followed. I found Paige curled up on the chair I had cuddled in with her that morning. I knelt down beside her and tilted her chin so that we could make eye contact.\n\n\"I...\" I got out.\n\n\"I understand, Zane,\" she hiccupped. \"I've never lost at anything I have aimed for, but it's always been accolades or achievements, not a relationship. I can't give you up and I don't know what my next move has to be. I get so frustrated when I am with you and another woman shows up. I blew it. I'll be good and leave you alone.\" I fell back onto my ass and shook my head.\n\n\"Didn't I spank your ass over this not too long ago?\" I reminded Paige. \"What I was going to say was that I'm tired, stressed, and prone to saying things I know I'll regret -- things like saying I don't want you around. I only wish you and Rio wouldn't love me one minute, then kick me in the teeth the next. Cut me some slack from time to time.\"\n\n\"Oh, God,\" Paige moaned, and buried her head in her arms, \"you are comparing me to Rio. It's worse than I thought.\"\n\n\"What do you mean? Rio is my closest buddy. She'd kill for me. Hell, she'd die for me, and you can't say that about most people,\" I pointed out.\n\n\"Of course, she might kill the wrong person or get killed doing something I could avoid, but no one is perfect,\" I added with a slight smile. Paige snorted.\n\n\"She is a total nut,\" Paige sniffed. \"I hope you don't think I'm that crazy.\"\n\n\"Paige, you are as uniquely crazy as you are unique,\" I responded.\n\n\"Can you please say something that I can understand, Zane?\" Paige pleaded.\n\n\"You are a fantastic woman and a great lover. You can get inside my head like no one else I've ever known. I like the way you tease me. I am slowly getting used to you scaring the crap out of me whenever you materialize at my side,\" I complimented her. \n\n\"I have one guideline I do try to live by, though, and that is, come at me all you like but stay away from my friends,\" I stated.\n\n\"Does that include that druggy-whore biker slut?\" Paige mumbled. I wasn't sure what about Belle pissed Paige off so much but I felt I had to make a point. I sprang on Paige and hefted her onto my shoulder.\n\nAt first Paige was uncertain and then she began sniffle-giggling, but when I broke through the tree line that separated my property from the Kappa Sigmas, she saw where I was heading and squealed. She was still caterwauling when I dumped her into the pool. Several of the Kappa Sigmas were sitting out in the afternoon overcast sunlight.\n\n\"You bastard,\" Paige sputtered and splashed about. After a second she parted the hair covering her face and scowled at me. \"You don't even know if I can swim.\"\n\n\"If you couldn't I would have jumped in and saved you,\" I told Paige. She began swimming to the closest ladder. In retrospect, I should have given more care to the thinness of what Paige was wearing and what it would expose when wet.\n\nPaige furiously stomped forward, her waterlogged clothes splashing water everywhere. I took in the view and before she got to me, she realized what she was exhibiting to the whole world.\n\n\"I'm going to kill you!\" she screamed at me. I showed remarkable (and what some would say was shocking for me) intelligence by running for my life, Paige in close pursuit.\n\nI let her catch me on the stairs going up to the porch from the yard. She shoved me down and began hitting me -- really punching me with her fists. She kicked and screamed for several seconds then let out one last bestial scream and sloshed inside. By the time I got inside, Aunt Jill and Iona were looking at me quizzically. Before I could explain, Paige came storming back downstairs.\n\n\"You\" she screeched, \"you...played me. I...well done, Zane,\" she abruptly changed emotional direction. \"I'll let Belle know that I apologize for behaving immaturely.\" Paige shook her head a few times. \"I give you this round and I have to applaud your psychological manipulation of the situation, Zane.\" Paige leaned up, kissed me on my lips, and headed back upstairs.\n\n\"What was that all about?\" Jill came up and whispered to me.\n\n\"I wish I knew,\" I shrugged.\n\n\"I think Paige may be too smart,\" Iona observed. \"She sees plans in your instinctual reactions. I suddenly think Cordelia is in serious trouble in her feud with you.\"\n\nAfter that circus, I had a reasonable expectation of a drama-reduced conclusion of the weekend. I was going out with Heaven after all. Things could still go wrong. When I made my way to my car at five it wasn't Heaven I saw; it was Hope. Mind you, Hope looked amazing dressed in white boots, leggings, below-the-knee length skirt, skin-tight shirt, and bolero jacket. I was suddenly worried about in which cultures white is the color of Death.\n\n\"Hey, Hope,\" I greeted her as I pulled out my phone and hit Heaven's speed dial.\n\n\"Hello, Zane,\" she grinned as she folded her arms and tilted her hip as she waited for me to attend to business.\n\n\"Zane,\" Heaven mumbled from the other end.\n\n\"Babe, what is going on? I like Hope and I owe her a date but I want to be with you right now,\" I said. There was a long pause.\n\n\"We agreed that there would be more of a rotation to help us deal with the stress of this school year,\" Heaven moped.\n\n\"Could you hurry up and come down here? Because there is something I want to talk to you about but not over the phone,\" I requested.\n\n\"I don't want to...fine,\" Heaven groaned, \"I'll be down in a second.\"\n\n\"As a joke I tried to get anyone to bet me you wouldn't call. No one took the bet,\" Hope smiled.\n\n\"You are very beautiful, Hope. This is nothing against you, but I had my heart set on Heaven tonight,\" I told her. \"Besides, at 12:01 tonight, I really, really wanted to nail her.\"\n\n\"You might get the chance to nail someone anyway,\" Hope smiled seductively. \"It isn't like you are unfamiliar with my body and I certainly don't mind being in close proximity to you.\"\n\n\"Doesn't your Dad kill people for a living?\" I questioned.\n\n\"No, silly, he's in private security. As far as I know, he hasn't killed anyone in the United States in some time -- that wasn't self-defense,\" Hope explained. \n\n\"I'm still not going to mention to him that we are going out. He'd break every bone in your body. He's very protective of his daughters,\" Hope studied me for my reaction.\n\n\"Eh, he's an old guy,\" I mused. \"I can probably take him.\" Hope began giggling hysterically. Heaven came running up and hug-tackled me, ending that discussion. Christina followed along at a more sedate pace.\n\n\"I am so fucking horny,\" Heaven whispered in my ear.\n\n\"That's not fair,\" I growled, \"because now all I can think of his your sweaty back pressed against me as I rub my hands all over your stomach and breasts.\"\n\n\"Bastard,\" she sizzled, but she was clearly less stressed about her now. \"What did you want to tell me?\"\n\n\"When I got home I ran across a mutual friend,\" I teased.\n\n\"Who?\" Heaven worried. I pulled out my wallet and retrieved a certain someone's card.\n\n\"She asked about me, but she really wanted to know about you,\" I said as I handed Officer Danica Campbell's card over. \"She told me she misses the feel of you brushing your tits along her back and your hard cock filling her up in every way. She wants to know when you, and maybe I, can stop by.\"\n\nHeaven's eyes grew wider as she looked from the card then over to me several times.\n\n\"I...uh...really?\" Heaven questioned. I nodded in the affirmative.\n\n\"If you feel like it, call her and set something up and I'll tag along if you want me to.\" \n\n\"Remember, I'm busy Wednesday nights,\" I suggested. Heaven now seemed positively ecstatic.\n\nShe gave me one more long kiss, skipped over to Christina, showed her the card and began hurriedly whispering to her. Christina shot me a curious look then smiled, giving her seal of approval to my little gift to Heaven. As those two turned the corner, I walked over to Hope.\n\n\"Thank you for waiting, Hope,\" I said, as I took both her hands in my own.\n\n\"I fully understand Zane. Loyalty is not one of your failings and it wasn't like you recoiled at the sight of me,\" Hope teased. \"Now let's go.\" I opened her car door and held it open so she could get in, then went around and got in my side, started things up, and left campus.\n\n\"So, what's the agenda for tonight?\" she inquired.\n\n\"There is this place on Carver Street that sells the thickest hamburgers we've ever seen, or so I'm told,\" I related. \"After that, we walk around UV campus until 7:30 when we catch the noir film classic A Woman's Face. I've never seen it but I heard it is about the dual nature of women as both nurturer and spirit of vengeance.\" Hope seemed intrigued so I counted that as a win.\n\nWe had barely beat curfew coming through the gates but neither Hope nor I seemed ready to call it a night. I had my own reasons for wandering around FFU's campus and if Hope had any ideas about my intentions, she kept quiet about them. It was nearly eleven when I led my date up to the Solarium. Thankfully, the lights were out and some of the sofa-beds were occupied.",
        "We tip-toed to my room around the Chinese screens, revealing my actual sleeping station to be miraculously unoccupied. Barbie Lynn, Rio, Mercy, and Vivian had all bowed to my wishes to be alone tonight. I turned around and pulled Hope to me.\n\n\"Yes?\" she whispered. \"Are we finally up to something because you've been picking this moment with care? As your Marksmanship instructor, I approve. As a woman keenly expecting masculine attention, I'm getting a bit frustrated.\"\n\nI let my lips do my talking, starting at her finely crafted lips, then moving to her earlobe and the spot right below that. That turned out to be a magic spark for Hope and she began systematically throbbing against me. When I tried to pass farther along her neck toward her shoulder, Hope grabbed the hair on the back of my head and returned me to that place.\n\nA little tongue action in conjunction with my lips elicited a grunt from the lady.\n\n\"Ugh,\" Hope gulped, \"Right there...just like that.\" Since we were having a serious disagreement about who was in charge here -- and I was losing -- I moved my hands from her hips. They traipsed along her side, tickling her, and I moved them simultaneously to both breasts.\n\nHope did an admirable job of body control but her nipples were the great betrayers. They popped up like a 'just right' indicator on a Thanksgiving turkey. Her bra felt simple but thin, so a vigorous stimulation of her nubs produced unbeatable results for her. I alternated between caressing her firm yet pliable breasts and rubbing and twisting her nipples between my thumbs and forefingers.\n\n\"No...no,\" she panted softly. She wasn't begging me to stop. She was forcing her stimulation under control by will alone. She was raising the threshold of her climax and I was going to have to really work to overcome her resistance. That was the game with Hope; she was a female tiger, uncertain if the male before her was a worthy mate to submit herself to. Hope wasn't looking for a partner; with her, all battles had winners and losers.\n\nI didn't plan to lose and just like she had all the aces where firearms were involved, I had the vastly superior experience in giving and receiving pleasure. Speaking of which, I detached my left hand to Hope's right and pulled it down my torso in a steady, serpentine motion. The destination wasn't my crotch but my belt buckle.\n\nHope once told the club that she was trained to field strip her rifle in the dark with her right (main) hand tied behind her back. She certainly didn't disappoint me with her removal of my buckle and her rapid whipping out she managed with my belt. I confidently returned my hand to her breast. Hope countered by stepping up with her right leg between mine and her left leg on the outside so she could start some bump and grind action against my upper thigh.\n\nShe worked my zipper open and my pants partially down before she began to squeeze and stroke my intensely anxious cock.\n\n\"Oh, that's nice,\" she purred.\n\n\"I'm thinking the same thing,\" I panted my response. Hope used her one free hand to push off from my chest.\n\n\"I want to feel it...on my lips and tongue,\" she breathed through her nose as she spoke. \"Barbie Lynn won't stop licking her lips when she talks about your semen on her tongue and all Heaven does is blush, look down, and have this annoying little smile on her face. It is driving Chastity and I nuts.\"\n\n\"That's nice; now hush up and take off my clothes,\" I ordered calmly. This was sort of the test for what I was aiming for with Hope.\n\n\"You want me to take off your clothes?\" she questioned. I replied with a nod. Hope studied me for a second, not my face and intent, but in preparation of her approach to stripping me.\n\nHope slowly tugged my shirt up, looking me over as she coaxed my arms up so she could eventually take my shirt off.\n\n\"Zane...are you...\" she was surprisingly hesitant, \"are you going to make me...clean you up...after we have anal sex...with my mouth?\" Oh, that was the problem. \n\nHeaven and Barbie Lynn did ass-to-mouth for me but it didn't seem to gross them out. Hope would have found the very idea disgusting before she met me but now she was unsure, and Hope hated being indecisive over any aspect of her life.\n\n\"Let's not worry about that tonight,\" I assured her. \"I have other plans for you.\"\n\nTo understand why Hope was currently so meek (for her) and attentive, you had to understand that her Father was a stern warrior-patriarch of a very proud and mostly traditional Korean family. At home, she was the dutiful eldest daughter in a family with no sons; here at FFU, she was aloof and deadly, except around Christina and company, where she got to be a relatively normal American girl in her early twenties.\n\nHope's only experience with men was with her Father, who was rumored to have killed any male who looked at her sexually, or expected her to kill the ones he missed. At FFU there were no guys at all for her to form relationships with -- until I arrived. It wasn't a Daddy-issue thing, Hope didn't charge off into the great unknown; she became a good student and learned, patiently and confidently.\n\nI would have time later to marvel at my brilliance; at the moment, Hope planting small kisses across my abs and chest as my shirt came up was beyond pulse searing. She didn't know stimulation so much as she understood how a body worked. She also was coolly efficient in easing my shirt over my head and off my arms.\n\nShe used a strong, steadying maneuver to take each shoe and sock off before she removed my pants and underwear together. When she finished, she was left kneeling in front of me, my penis bobbing an inch or two from her lips. She stared at it. I cupped a hand over each ear and guided her lips to my blood-engorged head.\n\nI had no intention of ramming it down her throat; her parting of the lips was enough. It was on her own initiative that she licked off the pre-cum starting to appear along the slit. Her lips took in the top of the head and I stopped the pressure on her head. Hope quickly took over, leaning forward, taking in the whole head, retiring before bobbing back and letting her lips pass over the head to the start of the shaft.\n\nI let her figure out by using her mouth and wrapping my cock up with one hand what felt good to me. She was growing in confidence by leap and bounds but I was still in charge. I touched each shoulder and she looked up (pretty damn sexy with her cheeks dimpling in as she sucked my cock).\n\n\"Stand up and take off your clothes,\" I instructed. I held her hand as she stood. Hope's removal of her clothing was no striptease, although it did have a certain military grace to it -- physically perfect and fearless. Four times I had to stop myself from stepping up and ravish her as her body's muscles rippled under her smooth, ochre skin and her breasts swung loose, perfectly round and excited.\n\n\"On the bed,\" I instructed. Hope turned presenting her taut athletic ass to me, each cheek rolling in tandem with each stride. She moved to pull back the covers but I stopped her with a word.\n\n\"No,\" I corrected her. \"I want you above the covers.\" Hope smoothly altered her motion so that she crawled on all fours onto the bed. She looked over her shoulder at me, deliciously presented, before rolling onto her back.\n\nI approached her on my hands and knees from the foot of my sleeping platform and languidly stalked up her body until I stopped and kissed her at the joining of the thigh to the torso. Hope remained attentive and quiet, watching me plant kisses on each side of her pubic triangle without touching it.\n\nAs I worked my way up to her diaphragm, Hope raised her left leg, bent at the knee, foot resting next to her other knee. I gave a quick smile; Hope was relaxed and enjoying the moment, which is pretty special for a first-timer. I let my lips nibble along the bottom rib until I took a nip out of her waist and made her giggle.\n\nHope shifted away as she brought the back of her hand up to stifle her snickers. I let her go. I wanted to give her a wide range of sensations to sample. Had I done this with any of the other women I'd taken to bed? No, but no two women are alike. The only person Hope compared herself to was Hope and I gave her that level of respect.\n\nI laid a path of licks and lip suction up her sternum to her far (left) breast. I circled the areola with my tongue, making sure to rub the nipple with my upper or lower lip as I made my circuit. Hope made this cute little coughing noise but otherwise remained still. Her nipple twirled around my tongue before I engulfed it with my mouth and started a strong steady suction that I accentuated by pulling my head up with her nipple extended by the upward maneuver.\n\nThis earned me a twitching in her hips. Her raised leg began to flop back and forth to the side while the right leg pressed against me and opened up her crotch for exploration. I took the offer and ran my right hand along her inner thigh above the knee to her plump, moist pussy lips. On the first trip I pushed a finger in up to the first knuckle.\n\nI drew some of her juices down along her other inner thigh until I made a circle under her knee. She shivered slightly as I did so. I zigzagged on the return trip, this time running a finger from the perineum, dipping in to her cunt and making a quick twirl right beneath the clit. Two desperate breaths escaped past Hope's clenched teeth.\n\nHope's orgasm was close -- closer than she realized. I moved my lips from her breast to her ear once more. I also subjected her pussy to the energies of another finger. I made slow, shallow strokes directed at parting the labia around her now rather impressive clitoris, twisting it and squeezing it between my fingers. (Strong fingers are something you work on in Marksmanship btw.)\n\nWhen Hope's arms snaked up and wrapped me tightly to her, I knew she was on the home stretch. \n\n\"I am going to take you now,\" I whispered in her ear. The thrill and confusion of my intentions tore her apart inside. \n\nShe wanted to learn and obey but she also wanted to maintain her virginity, and the two ideas collided like twin locomotives. Remember, sex is in the mind and Hope's thoughts were on fire. I bit down on her earlobe at the same time I grappled with her right tit and gave several quick sharp spanks to her quim.\n\n\"Zaaannneeee!\" she started out with a hiss but boiled into a thunderous shout. Her thighs clamped onto my fingers and she drove (no, she didn't claw -- she impaled) her fingers into me like nails. The temporary deafness in my right ear was its own reward. I kissed her, running my tongue along the top and back of her teeth while her body shook and shivered.\n\nWhen the last of the tremors subsided I released her and pushed up with my arms, keeping my elbows half bent.\n\n\"Zane, I'm sorry. I've hurt you,\" Hope sounded worried that her fingernails had blood on them. The pain was nothing compared to the humiliation I'd go through in the showers tomorrow. Rio took perverse glee crowing over every new sexual scar I accumulated.\n\n\"Hush now; on your knees facing me,\" I commanded.\n\nThis time Hope gave a barely noticeable blink before complying. She sat there attentively, her ass resting on her heels and her palms on her thighs looking smoking hot with damp thighs and perky nipples. I shifted up the bed, keeping to my side until I was properly positioned. I then reached for the back of Hope's head and confidently directed her toward my cock once more.\n\nHope picked up right where she'd left off; slurping my head like a lollipop. Hope didn't get overly ambitious. She sucked me in, rolled my head around her mouth using her tongue with the occasional sojourn an inch or two down my shaft. Being at loose ends since Hope was drooling all over my rod so well, I reached out and began fondling her closest breast.\n\nThis time I was rough, milking her breast, gripping the base of the breast and pulling down until I pulled the nipple. No response from Hope wasn't a bad thing; if she didn't like it she'd let me know. A few more pleasurable minutes with Hope and I sat up and put my other hand on the small of her back (I have really good abdominal muscles).\n\nI brushed my hand knife-like and pinkie first down between her ass cheeks. I brushed her anus but only briefly because my target was her pussy once more. She was hot, wet, and welcoming. I worked two fingers in and pumped her as hard as I dared. When I had her rocking her hips in response to my thrusts, I jumped my fingers down and vibrantly worked over her clit.\n\nHope choked and little shimmies emanated from her hips. Again, I switched things up on her; I moved my hand up and rotated my forefinger against her anus until it gave way. Hope made a slight gagging noise but recovered masterfully and upped the tempo of her blowjob.\n\n\"Come this way,\" I directed her by pulling her right buttocks to me.\n\nHope wiggled from the waist slightly so she could look down the length of my body into my eyes. I repeated my hand motion, her eyes flashed with pleasure and she quickly straddled my body. Now her pussy was nearly at mouth level (Hope's pretty tall) while her blowjob continued non-stop in our '69'. I gripped a buttock in each hand, pulled them apart and then lifted my head to her honey box.\n\nWith my first lick, Hope's resolve began to fracture. I would grove my tongue, move her hips over me and then lick from her clit to the bottom of her cunt. I massaged her several times before resting my head and alternating my fingers in. When my tongue lapped at her creases once more, I trailed a finger up to her anus -- no reaction.\n\nI tickled her backside for half a minute, then substituted my tongue. I probed delicately and Hope stuttered in response. I went back to twirling her clit while pushing my index finger through her sphincter. Her oral attentions finally broke down. She let my cock plop out of her mouth and rested her forehead on my hip while the overwhelming sensations crashed over her senses.\n\nI felt the tightness of her anal cavity around my finger and her pussy throbbing against my tongue. I pushed deeper with my finger and her juices started flowing as Hope became more and more aroused. Valiantly, she stepped up her game, kissing and sucking one of my balls into her mouth. I moaned, which made her very happy. \n\nHope's clit played along my lips as I took it in and sucked on it. She was rubbing my cock shaft as she tantalized my balls when she felt it start to pulse in her hand. My cockhead was engulfed by her lips and she remorselessly gobbling up the top third of my penis with the addition of a little twisting motion with her head and throat.\n\n\"I'm cumming,\" I growled. \"Take it all but don't swallow until I tell you to.\" Hope drove me on faster and harder and I reciprocated on her two holes. When I took on her clit once more, it wasn't in the form of a monster wave crashing on the beach but like a building tsunami pulling the energy before pummeling in one overwhelming surge. I poked a second finger into her anus to drive her over the top.\n\nHope's back arched violently and a thin stream of fluid squirted into my mouth. She humped my face and squeezed my fingers in her asshole in a corkscrew fashion.\n\n\"Zane!\" she belted out musically. \"Oh, God, that's great...ummm...oh, yes, don't stop.\" My member slapped against my stomach and my balls were starting to boil and I couldn't hold back for long.\n\nSeveral more flexes and grunts came from Hope before she settled down enough for me to get her to do what I wanted.\n\n\"Hope, I'm cumming,\" I ground out once more and just in time. Hope barely got my shaft upright and her lips over my head before I began ejaculating into her mouth.\n\nShe breathed sharply through her nose but didn't choke or spew. Time after time she took my seed until I mustered the strength to let her know I was done. Hope dismounted me and resumed her kneeling position supported by unsteady thighs. I was a little slower in following her though her eyes sparkled when I looked into their brown depths.\n\n\"Show me,\" I told her. Hope opened her mouth and I saw my semen brimmed inside. I kissed her lower lip along its entire length then did the same to her upper. I didn't take any of my jizz this time -- that would came another time. For now,\n\n\"Swallow,\" I spoke, and she did in a mighty gulp. I pulled her into me and led us down onto the comforter, Hope resting in my embrace.\n\nI soaked up the gentle passion of the moment with Hope in my arms. When she started kissing me on the neck I realized that was her way of asking for more. I twisted my body and pulled Hope past me so she could extend herself onto her hands and knees with me at her side. She lowered herself, letting her long, luxurious black hair cascade over her far shoulder.\n\nMy hands roamed over the back of her neck and shoulders while I kissed her mid and lower back. I shifted from her side, ending up behind her. I gave a slight nudge to her calf to get Hope to open her legs wide and let me position my hips behind her. I gave my rod a few strokes to get it ready but really the visual tableau of the tightly sculpted muscles of her shoulders, back, hips, and buttocks made the physical stimulation superfluous for me.\n\nKeeping my eyes on Hope, I leaned way back and rummaged under the rolled-up blanket at the foot of the bed. The heating pad I'd asked Barbie Lynn to place there made finding the vial of viscous scented oil that was being warmed up easy. I was pleasantly assured of my feel for Hope to notice she hadn't looked back to see what I was up to. That took a great deal of confidence and trust.\n\nThe serenity with which Hope greeted the thin stream of liquid as it steamed while flowing from her tailbone into her cleft was intensely arousing to my sight. I set down the container and began rubbing the oil in. First I started around the anus but I soon moved over each cheek, massaging them as well. When I coasted down to her inner thighs Hope figured out what was really going on and I could swear I heard a phantom cough of amusement.\n\nShe knew I'd tricked her in a playful way. A few seconds later she pieced together the why -- distracting her was secondary to easing the fatigue creeping through her thighs, lower back and butt brought on by several tense orgasms. There would be no muting of our joining. For ten minutes she relaxed and soaked up the hot oil working into her flesh.\n\nI restarted my efforts by kissing each hip, signaling her that I was anxious for her flesh. I placed one hand on the small of her back and lined up my cock at the top of her butt crack. I gently rocked forward, pushing my cock onto her back. Swaying back, I let my penis slip off her butt, letting it swing free before thrusting forward once more.\n\nThis time I directed it languidly along the base of her cunt, letting my cockhead part her lips and plow her furrows until I touched then passed the clit on my way through her pubic hair and beyond. I repeated this orchestra of lust, adding in a movement where my bulbous head pressured her sphincter to the point of violation before sliding elsewhere.\n\n\"Jesus, Zane,\" Hope sung out, \"make up your mind. You are driving me crazy.\" Hope wasn't being exhorted to climax by any loss of control; it was the tension brought about by not knowing what direction the lesson was going to take. For someone else it would be as if you were reading LA Confidential one night only to discover that the last quarter of the book was missing and not accessible until the next morning.\n\n\"There will be no intercourse for us tonight, Hope,\" I informed her. I began pumping along her pussy, mimicking the fucking motion. Time and again I let my penis head cut along her labia, brush her clitoris until it was stimulated by the low ridges along the shaft. It didn't take long for Hope to start pushing back against me to maximize my 'depth'.",
        "Hope clenched the sheets as we both increased the violence of our impacts. Her breath was coming in labored huffs and sweat began beading up all over her skin. Considering how fit Hope was, I was impressed with the intensity with which she embraced our sympathetic coupling.\n\n\"No...not yet; keep going,\" was her self-encouraging mantra. \"Don't let go...don't let go. Push him...push him harder.\"\n\nI scooped up the long tail of Hope's hair and guided her body up off her hands so that her back slid up and down my chest. Our hands did a little dance of their own. She ended up with her left reaching across and holding on to my right at her breast. My right still held the majority of her long locks, and I used those to give a silken caress to my coaxing of her right breast to sensual overload.\n\nMy left hand landed on her stomach and used that perch to push her harder into me with each thrust. Her left hand wandered back to my ass. Hope's nails dug in deep (am I being marked/branded?) and she matched her pull with my push between her legs. When she finally succumbed to her climax, vaginal juices washed over my cock and down both our thighs.\n\nI was perfectly poised to support my lovers body as she surrendered to her orgasmic impulses and erotic energies coursed chaotically through her system. Her murmurs signaled she was regaining control and she made it definite by placing a series of kisses along my right arm. I coaxed us down on the bed facing one another.\n\n\"I still don't know if I want to have sex tonight,\" Hope smiled sleepily.\n\n\"It is your choice to make,\" I answered. \"We both know you have the confidence now to make that decision when you are ready.\"\n\n\"Are you looking out for me, Zane?\" Hope teased me wearily.\n\n\"Of course. I look out for all my ladies, even those who can take care of themselves just fine,\" I noted. She nodded and I realized that she'd tentatively opened the door into her inner circle of friends. \"To answer an earlier question, I take no pleasure in ordering you around as some kind of power trip. I communicated with you in a manner that maximized your focus on our caresses.\" She nodded and gave me an affectionate peck on the forehead, reaffirming her dominant status.\n\n\"You will come with me and shower,\" she ordered me. I retrieved two robes and my shower kit and a naked Hope lead me to the Solarium shower. We did not bathe ourselves; we lathered, rubbed, and rinsed the other, and I could tell Hope relished the experience.\n\n\"Tell me something: how come you and Heaven have never snuck off in the woods and knocked boots?\" she mused.\n\n\"You are not asking because you think we did and didn't talk about it so you must be wondering what it would be like if we did...so yes, I would fuck you if you asked me to while doing a little shooter-spotter bonding out in the forest,\" I related to Hope; on the Marksmanship team, I was the spotter to her shooter. Her eyes flashed like lightning on a pitch black night. A powerful, lethal rifle in hand and a lover penetrating her was Hope's aphrodisiac -- her perfect storm.\n\n\"You should get ready for that. I definitely think it will make us a more simpatico team,\" Hope smiled and rubbed her breasts against my chest. \"Are you going to make me obey you?\"\n\n\"I'm going to stick a ponytail up your ass and make you call me Master,\" I confided.\n\n\"Oh, so how do you want your bullets; orally, anally or at high-velocity?\" she remarked as her grin became more feral.\n\n\"I've got nothing but love for you, Baby,\" I joked. We finished toweling off and headed for the bedroom area. We immediately noticed that while the sofa-beds were still open, they were unoccupied. Had we been that loud? I'm being rhetorical -- I am the soul of discretion but I bring out the vocalist in every woman I meet.\n\nInside the screens I could make out the forms of multiple girls having already settled in under the covers. Rio and Mercy were intertwined at their usual place on the far side of the bed. Barbie Lynn was curled up, facing away from us, in the middle of the platform, and Vivian was on her back, eyes closed, stretching out on the near side.\n\nI motioned Hope to follow me to the spot between Barbie Lynn and Vivian at the foot of the bed. She looked down at her carefully placed clothes then back to me. Her gaze went to the clock on one of the wardrobes, back to me, then she followed. We lay in each other's arms for a few minutes as our hair dried and bodies wound down.\n\n\"Mmmm...that was definitely more than I envisioned, Zane,\" Hope sighed happily while staring up at the clouds in the night sky. \"I need to be going but I look forward to seeing you in the morning.\"\n\n\"No, you are staying the night,\" I stated. Hope pushed herself up into a kneeling position, hands on her thighs and her ass resting on her heels.\n\n\"You are getting off on ordering me around, aren't you?\" Hope smirked. To maintain the illusion, I didn't answer. I did get on my knees, wrapped my arms around her waist, and pulled us both into a kneeling, upright posture. Our mutual attraction brought our fresh bodies into contact. Hope exhaled and let her hands come to rest on my buttocks and the side of her head rest against my collarbone while my hands cupped each of her ass cheeks.\n\nHope then did something I hadn't even imagined; she purred like a sated cat and snuggled firmly into my embrace.\n\n\"Thank you, Zane,\" she whispered.\n\n\"You're welcome, my Little Thunder\" I responded. I knew I could have said something like 'you are worth it' or 'you did all the real work,' but I went with what felt right and those were the words she wanted to hear."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "bikers",
        "church",
        "blowjob",
        "cunniligus",
        "first time",
        "anal sex",
        "interracial",
        "asian woman"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-25"
}