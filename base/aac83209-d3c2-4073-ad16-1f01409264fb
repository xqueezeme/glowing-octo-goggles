{
    "title": "Senior Year Memories Ch. 34",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand the ongoing plots.)\n\n(Author's Note: As always, I want to give special thanks to fellow Literotica author Lil_kitty for her excellent work as my editor and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories. And of course, I also want to thank my wonderful readers; your support and input really help make this possible.)\n\nPreviously, on Senior Year Memories: After greeting cute nerd Jennifer Cage on his doorstep, 18-year-old Ryan Collins hears her out on her desire to become his sexual apprentice. While he turns her down in the short term, he solicits advice from his nearest and dearest friends to help him make his decision. When February brings around a feeling of Valentines in the air, Ryan takes up the offer to join his co-worker on the paper, sexy Wiccan girl Leah Sartori, for a sexy spell to send good vibes of love and lust to the town of Regan Hills. The two of them took place in wild, ritualized sex before Ryan came to an epiphany where he decided to put his skills (and cock) to the test to help the lovelorn of Regan Hills, and decides to start by taking on Jennifer.\n\n***\n\nWhile it was still very much in the planning stages, I was definitely beginning to figure out the shape that February was going to take. The cast may not have been set in stone just yet, but there was a likely list of players, and between the Valentines I'd been receiving and some leads that Josie, Brooke and I had put together, it was looking like my dance card was going to be quite full if all my plans came to fruition.\n\nDid I regret it, though?\n\nNo, not for a second.\n\nI was actually excited to see where the month would be taking me. I was less nervous than usual, as my confidence had been slowly but steadily growing for some time by this point, but there were a few areas where I was still going into relatively uncharted waters that could still bring the nerves to the forefront.\n\nPreparing, both mentally and physically, for what was going to happen with Jennifer, for instance... that was going to take some doing.\n\nIt was after school, and since Dad had that Viking cooking class he taught every other week, he was going to pretty much be gone for the night. I had also asked Josie and Brooke to stay away for a bit and give Jennifer her space; they were going to spend that time hanging out at Alice's house across the way, so they would be nearby for the juicy details.\n\nThat left me, alone, in the house, running around like a chicken with its head cut off as I tried to clean the place up. I got my room in order, got some snacks and drinks ready in the kitchen, showered and shaved, and managed to get dressed just in time in a comfortable t-shirt and sweat pants as I heard the knock at the front door.\n\n\"You got this,\" I said to myself as I approached the door. \"She's coming here for your help. You want to help her, you know what you're doing, just relax and have fun. There's no pressure at all, you're just... helping her lose her virginity and introduce her to the world of sex at Regan Hills High and all that entails.\"\n\nIf I meant to lower the pressure, I failed. I should've just stuck with saying, 'You got this.'\n\nNodding, I said, \"You got this.\"\n\nUnlocking the door, I swung it open.\n\n\"Hello,\" I said, stepping to the side to welcome 18-year-old Jennifer Cage in.\n\n\"Hi,\" she said, meekly, stepping inside as I closed the door behind her. At 5'6\", Jennifer was neither a big or truly small girl, but the way she carried herself I could tell she felt very small. She was pale and a little nervous-looking at the best of times, and now she looked like she wanted to hide behind her long, dark brown hair, but the way it was tied back in a tight ponytail, that wasn't going to happen. Her big brown eyes looked even bigger behind her trademark glasses, while her soft-looking lips were curled into a smile that hoped for confidence and couldn't find it. As expected, she was dressed in her paint-spattered overalls and a loose, long-sleeved shirt, and while she may not have been the most gorgeous girl in school at a glance, her round, friendly face was definitely leaning toward cute.\n\n\"You can set your backpack and shoes by the door,\" I explained, watching as she did so. \"I've got some snacks and sodas in the kitchen if you want, or water, or, well, pretty much whatever, and I've already pre-ordered some pizza to show up in a bit.\"\n\n\"That all sounds good,\" Jennifer replied, her voice soft and quiet. \"Got any more of those cookies?\"\n\nI laughed. The last time we talked here, we had done so over cookies that had been mysteriously left at the door by Karen Bowman, mother of my bully, Kyle. They were good cookies, but I was happy that I hadn't yet had to hear from her.\n\n\"Fresh out, sadly,\" I said.\n\n\"Oh, that is a little sad,\" she replied, though she was smiling. \"I'll grab a soda first, I think.\"\n\nJennifer knew the way to the kitchen after our last encounter, but I led the way anyway. She grabbed a Sprite while I grabbed a Coke, and the two of us sat at the kitchen table, drinking opposite each other as we looked at one another. I was nervous about what was about to happen, but I knew that I couldn't be nearly as nervous as she was under the circumstances.\n\nAfter all, it wasn't every day you lost your virginity.\n\n\"Are you alright?\" I asked.\n\n\"I'm fine,\" Jennifer replied, her voice shaky and soft. \"Why?\"\n\n\"It's nothing, it's just... I know that what we're doing here is going to be a pretty big deal, and I want to make sure that what we're doing is something you *want* to do,\" I said.\n\n\"It is!\" Jennifer said, quicker than she clearly wanted to as she leaned back in her seat, nervous. \"I definitely want to do this, I'm just... well, I'm just a little nervous, that's all.\"\n\nI smiled, reaching out across the table to touch her hand. She slowly warmed to my touch, turning her hand over so we could clasp them together.\n\n\"It's going to be fine, really,\" I said, reassuringly. \"We take this at your pace, do whatever you want to do... and remember, this is something *fun*. If you're not having fun, there's no pressure to keep going.\"\n\nJennifer smiled at me again. \"Thanks.\"\n\n\"No problem,\" I replied.\n\n\"No... it is a problem, well, it's sort of a problem,\" she continued, her voice rising with frustration and anger with every passing word. \"I'm making it a problem when it shouldn't be, because I'm overthinking all this shit because my mom makes me overthink everything and I don't want to be overthinking everything, I just want to love myself and have fun instead of thinking about all the bullshit about sex that's been fed to me my entire life because I'm eighteen fucking years old and an adult and I can make my own choices and... and... I'm sorry, that's too much. Fuck, I'm messing things up again...\"\n\nI squeezed her hand. \"You're not messing things up, I swear.\"\n\n\"Yeah?\" Jennifer asked, looking down at her drink.\n\n\"Yeah. It'll take a lot more than that to scare me off,\" I said.\n\n\"Thanks,\" she replied. \"It's... I'm nervous. That's okay to say, right? I'm nervous, maybe even a little freaked out, but this is something I want more than anything else I've ever wanted in life. I... no, it's more than a want. It's a *need*. It's this need I feel inside of me, and if I don't do something about it, it's going to burst like an appendix and flood me with madness until all I can do all the time is scream and... yeah, well, you get the idea. I'm nervous, that's the thesis statement.\"\n\n\"A completely fine one,\" I said.\n\nJennifer nodded, still smiling nervously, but a little more at ease. \"Was it this hard for you?\"\n\n\"What?\" I asked, briefly checking to make sure I wasn't tenting my sweatpants.\n\n\"The first time you... were with a girl,\" she said, her pale cheeks flush with blush.\n\nThinking back to the first time I'd ever had sex just five months ago, I laughed. \"It wasn't... well, I didn't have time to think about it, honestly. It just kind of happened. One minute I was expecting to tutor her, the next minute she was trying to bribe me, and then, what do you know, a little while later she was riding me until she drained my balls.\"\n\n\"Wow,\" Jennifer said.\n\n\"I didn't have a lot of time to mentally prepare for it and know what was happening at the time, I just... kinda let it happen. I liked it, don't get me wrong, and I spent a while just kind of rolling with the punches and enjoying experiences as I stumbled across them, but I guess... well, you caught me at an interesting time in my life,\" I said.\n\n\"What about it is interesting?\" Jennifer said, then looking sheepishly back at her soda. \"I'm not saying you're not interesting, I mean-\"\n\n\"It's okay,\" I said, attempting to calm her. \"I know what you meant.\"\n\n\"Okay, okay, good...\" Jennifer replied.\n\n\"What I meant was that after a while of letting the year happen to me, I'm ready to make my mark on it in my own way, on my own terms. So, the two of us really can get a new start on things together,\" I said.\n\nJennifer thought about this, looking up at me with the sweetest, most hopeful smile I could remember seeing.\n\n\"Yeah?\" she asked.\n\n\"Yeah,\" I replied. \"Today, we have some fun, get you laid, and we set you on the path toward you making your mark on the year.\"\n\n\"Mmm,\" Jennifer said, relaxing into her chair. \"I like the sound of that.\"\n\n\"I was hoping you would,\" I said. \"So, to know exactly what I'm working with, I'd really just like to ask you what kind of experience you have, what you'd like to do and, really, get an idea of where we should begin things. I know you said that you've been practicing with toys, but, I just want to get a better idea.\"\n\n\"Yes, that makes sense,\" she said, taking a sip of her drink. \"It's not like I've never done anything, it's more like I've never done anything with another person. Never been kissed, never had sex with anyone or anything in between. What I have done is watch a lot of porn, not that that makes me special or anything, I know, and I've got a few good-sized toys. I've practiced with them in my mouth, and...\"\n\nShe quieted at this point, probably less familiar with talking about graphic sex details with another person. That was something I could help with.\n\n\"Where else?\" I asked.\n\nA little bashful, Jennifer replied, \"And my pussy. And...\"\n\n\"Your ass?\" I suggested.\n\nWithout looking at me, but still smiling a naughty little smile in spite of her embarrassment, she said, \"Yes.\"\n\nJennifer eyed me cautiously, probably trying to gauge my opinion of her, and when all I could do was smile back, she looked enthused.\n\n\"And did you like these things?\" I asked.\n\nJennifer looked up at me, a little bolder. \"It was... different than I expected.\"\n\n\"How do you mean?\" I asked.\n\n\"Well... my mom never really gave the best impression of what sex was supposed to be like, that it was supposed to hurt and only bad things came from it, but when I saw everyone having their fun, and when I started watching porn and saw things that looked fun, things that brought out feelings inside of me... I had to try. I started touching myself, and when I liked how that felt, I knew I had to up my game, so I bought my toys. They were... they hurt a bit, at first, but after I figured out what I was supposed to do with them, then they felt good. Really good. I really liked making myself feel good with them, and... well, I've done it a lot,\" she admitted.\n\nI could see her gaining enthusiasm with every word. She shuffled in her chair slightly with a bit of delicious discomfort as if reliving some of these more enjoyable memories. This was something I could work with.\n\n\"So that's what you've done... how about you tell me some more about what you want to do?\" I asked.\n\nStraightening herself up, Jennifer said with every bit of confidence she could pull together, \"Everything.\"\n\nI grinned back at her, nodding. \"Everything can mean a lot of different things. I want to hear precisely what you would like to try.\"\n\nWhen I said this, it seemed like she had been hit slightly at my response, but wasn't deterred. \"Well, I... I want to be kissed, that's simple. I want to be fingered and I want to touch a guy's... cock. I want to do oral, give and receive. I want to have sex, vaginal, anal... I want to have sex with more than one guy at once. I'm not sure if I'm into girls too, but I think I am, and if I am I'd like to have sex with more than one of them at once. I think... I might be into some kinkier stuff, I'm not sure yet, and I might even like to touch myself, or even have sex, in front of an audience. These are just basic ideas, I mean, hopes and-\"\n\n\"All things that can be arranged for,\" I said.\n\n\"Really?\" Jennifer asked, hopeful.\n\n\"Really. I've been through a lot this year, and managed all of that and more. With a little practice, and a little experience getting you out with some others, I don't think you'll have any problems,\" I said.\n\nJennifer smiled broadly, an unrestrained smile of great hope and joy. \"You mean that?\"\n\n\"I mean that, seriously,\" I replied, squeezing her hand again. \"I used to think Regan Hills was meant to chew up and spit out people like us, that we wouldn't stand a chance around all the beautiful people, but with a little help, and a little motivation, we can really have all the fun we always dreamed about, but never expected to have.\"\n\n\"I... I like that,\" Jennifer admitted.\n\n\"Good,\" I said, finishing my drink. \"Should we take this to somewhere a little more comfortable, or would you like to stay here for a bit longer?\"\n\nShe looked down at her can of Sprite for a moment, a wave of nervousness overtaking her. She nodded to herself quickly, briefly, I think psyching herself up, but it was hard to say.\n\n\"I think I need to stop listening to all the bullshit my mom tried to teach me over the years, and start focusing on what I want. I'm a fucking adult, I need to act like one and start charting my own course,\" Jennifer said with a great swelling of finality.\n\nStanding up from her chair, she declared, \"Yes. Let's go somewhere more comfortable.\"\n\nI took her hand in mine and led her down the hall toward my bedroom. I was glad that I had cleaned up the usual mess that threatened to overtake my room, changing the sheets and blanket on my large bed. Jennifer looked up in some wonder at the walls, with my movie and video game posters, stacks of comics and vinyl figures peeking out from almost every corner.\n\n\"This is... yeah, I think this is exactly the kind of place I'd like to have lost my virginity in,\" Jennifer said, looking at me with some nervous amusement.\n\n\"Yeah?\" I said, closing the door behind us. With the door closed and the curtains drawn, it was definitely darker in here now than usual, but with the couple lights I had, I was able to keep the room from completely turning into a cavern.\n\n\"Yeah. Feels like the better parts of home,\" Jennifer replied, smiling at me cutely.\n\n\"Happy to hear it,\" I said, sitting on the bed and leaving plenty of room for her to join me.\n\nI saw the realization of this hit her face, a slight shudder passing through her body as she realized that this was it. If she had told me in this moment that she wasn't ready and simply bolted, I wouldn't have held this against her for a second, though for her own sake I was rooting for her. I wanted her to be able to do what she wanted to do, because I could remember exactly what it was like being where she was. Jennifer just needed to take this last step on her own...\n\nShe did. Jennifer sat down beside me on the bed with a strange blend of enthusiasm and hesitation, her eyes widening as she sent my bed rocking with the force of her landing, smiling and giggling after she settled down.\n\n\"Sorry!\" Jennifer exclaimed.\n\n\"It's all good,\" I said, enjoying the closeness with her. She sat only a few inches away from me, the two of us nearly touching but not quite. \"So, are you ready for this?\"\n\nJennifer looked away from me for a moment before turning back and nodding. \"I think I'm as ready as I'll ever be.\"\n\n\"Good,\" I replied. \"Because your lips look very kissable, but I'd like to find out to be sure.\"\n\n\"Yeah?\" she replied, smiling and leaning slightly closer to me.\n\n\"Yeah,\" I said, reaching up to take her face gently in hand. I stroked her neck gently, causing her to shiver, then guided my lips to hers as I gave her her very first kiss.\n\nIt was a very wet kiss, and she was as eager as she was nervous, but who isn't their first time out? I made sure I was receptive, and encouraging, gently pushing my tongue into her mouth to meet her very enthusiastic tongue. I didn't give her too much, just a taste, a tease, enough to entice her and keep her interested until I broke this brief kiss.\n\nJennifer looked at me dreamily, gasping and moaning slightly at the sudden absence of my lips on hers.\n\n\"How was that for a first kiss?\" I asked.\n\nWords took a while to find her, but when they did, she replied, \"Magical. And wet.\"\n\nI laughed. \"That'll happen.\"\n\n\"Can we do it again?\" Jennifer asked, enthusiastic.\n\n\"Of course,\" I replied, leaning in to kiss her some more. I'd had enough experience to slowly guide her as we continued kissing. Cautiously, I reached around her with one arm, pulling her in close beside me so we could more properly make out, and was encouraged when she did the same with me. It may not have started out the most earth-shattering make-out session in the world, but she was enthusiastic and a quick learner, and soon we became lost in each other. Jennifer let out soft, low mewling moans as we kissed, grinding gently against the bed as we made out.\n\nI broke the kiss. \"Pretty cool, huh?\"\n\n\"Very cool,\" she answered, practically purring as she leaned in to kiss me harder.\n\nI separated again, wanting to guide her in a direction she would like. \"What do you want to do, right now?\"\n\nJennifer thought for only a moment before rotating on the bed, swinging one of her legs over me so she could straddle me. She wrapped her arms around my neck while I wrapped mine around her back, the two of us holding each other close as we made out. Jennifer was getting more enthusiastic by the moment, and I was too, since she could no doubt feel my fairly large erection at this point, but as she ground against me, I was becoming all too conscious of the thickness of her rough denim rubbing against me.\n\n\"Now, don't take this as a complaint, or me trying to rush you or anything,\" I said, loving holding her close as she rubbed on me and we made out. \"But your overalls are pretty rough on my cock.\"\n\nJennifer's eyes went wide, her face suddenly bashful. \"Oh my god! I'm so sorry, Ryan!\"\n\n\"It's alright, just communicating,\" I said.\n\n\"That's something I can fix, though,\" she said with some enthusiasm, hopping off of me and the bed and standing before me.\n\nWithout breaking eye contact, she pulled her phone from her pocket and put it on my bedside table, then unbuckled each strap of her overalls and let them fall to the floor. Then, with a playful, hopeful little smirk, she pulled her long-sleeved shirt over her head and tossed it aside as well, leaving her standing before me in a faded gray tank top, a comfortable pair of dark blue panties, and her socks.",
        "Now, I'd never put much thought to Jennifer's body before this moment, mostly because she did a good job of concealing it with those loose shirts and overalls. When she was grinding on top of me, I could definitely feel that she was a girl on the curvier, softer side than a lot of the girls I knew, but seeing her now I could finally take all of her in. Her thighs were on the slightly thicker side, and she had a little extra around the stomach, but when this also meant she had a beautifully thick ass and a pair of succulent-looking DDDs straining her tank top, unbound by a bra and with her firm nipples clearly poking through the fabric... well, when combined with her cute as can be face and huge smile, there was only one thing I could say.\n\n\"Wow.\"\n\nJennifer's blush escaped her face and flooded down into her upper chest. \"I was hoping... I was hoping you would like it. I'm not as tiny as a lot of the girls you go with, but-\"\n\n\"There's no but about it,\" I said, pulling down my sweatpants and dropping them to the floor. She looked down at my erection straining against my underwear and smiled at me. I took her hand and pulled her back to me. She straddled my lap once more, and without the roughness of her overalls between us, we really began to make out as she ground against me. With less between us now, I could feel her more distinctly against my cock, the way she insistently ground against me as she sought pleasure.\n\n\"You feel very nice against me... your cock...\" Jennifer said, hissing through her teeth as she ground more urgently.\n\n\"You feel really good too,\" I said, kissing her, letting my hands drop to her magnificent ass and squeezing her. Jennifer let out long low moans as I did this, grinding with a greater need against me.\n\nI looked into her eyes, trying to read her, but the way she was rubbing against me, I knew that she might cum soon if I didn't do something about it first. Don't get me wrong, I wanted her comfortable and I very much wanted her to cum, but while I was doing this at her speed, I still meant to help lead the way.\n\nCarefully, I wrapped my arms around her and twisted her to the bed so that she landed on her back. Jennifer landed hard, giggling and looking up at me lustily as I was briefly above her.\n\nI didn't stay there long, though, dropping so that I was lying on my side beside Jennifer, staring into her eyes as she looked into mine. There was a silent cloud of powerful lust between us, and watching her massive chest rise and fall under her tank top with each of her heavy breaths... it was truly a luscious sight.\n\nIt was also a sight I knew how to make even more exciting.\n\nSlowly, I reached down and grabbed the hem of her tank top. I looked into Jennifer's eyes as I did this, searching for any sign of resistance, and when I found none, I began to pull it upward. I pulled it over her stomach, then up to the base of her massive tits, giving me a tantalizing view of the creamy expanse of her underboob. Finally hooking my fingers under the fabric, I pulled the tank top up over her breasts, bunching the tank top above her tits as I finally got a good look at them bare.\n\nThey were every bit as massive as I imagined beneath her top, full and soft, creamy and pale and topped with firm pink nipples. Surrounded by areolas the size of silver dollars and sticking out seemingly as hard as bullets, they just looked like they were begging to be sucked on.\n\nWho was I to give up such an invitation?\n\nI leaned down and took her right nipple into my mouth, slowly licking it over with my tongue before closing my lips around it, licking and suckling and doing everything I could to make this the best sucking I had ever done, because I wanted her first time to be memorable. The way her eyes first widened, then lidded over and her mouth dropped into a pleased O as I applied my talented mouth to her, I knew I had achieved what I set out to do.\n\n\"Oh, Ryan... oh, Ryan it feels so good, I've never... oh, wow! Please Ryan, keep going, it feels so good, it feels so amazing, Ryan!\" Jennifer cried out, moaning loudly as I slipped over to her other nipple and gave it the same worshipful treatment.\n\nI alternated between her amazing breasts for a good long while, enjoying pleasuring her while easing her in, but soon it felt the right time to begin pushing things forward. Gently, I began to graze my fingertips down her belly and toward the waistband of her panties. I was looking up into her eyes with a mouthful of tit the entire time, taking in her reactions, first as I reached her panties, then as I pressed my fingertips slightly beneath the waistband, gently grazing her trimmed pubes. I looked into her eyes questioningly as she silently took in my intent, her breathing ragged as her mouth stayed open in that pleased O.\n\nGently, I nibbled at her nipple, making Jennifer moan wantonly.\n\n\"Please, Ryan...\" she whined.\n\nI took my mouth from her nipple, wanting to hear her say it. \"Please, what?\"\n\nHer face flush with lust, Jennifer dropped her voice and said, \"Please touch me.\"\n\nI smiled at her. \"You got it.\"\n\nI took her nipple back into my mouth, then pressed my hand under her panties. My fingers traced a path through her trimmed bush, until I found a moist warmth that might well have been wetter than I had ever felt a girl. Jennifer looked down at me, practically squealing with pleasure at my first tentative grazes of her outer lips, but sensing her need and wanting to deliver a pleasurable experience, I wasn't going to wait like this much longer.\n\nI pressed two fingers into her steaming folds, tentatively exploring, looking up into her eyes to see what she liked and how she liked it as she looked down at me. Her moans guided me, her quickened breathing inspired me, and when I could see that I had pushed her to a place that she had not expected, I gently pressed my two fingers inside of her, twisting my hand oh so slightly for better purchase... and so I could thumb her clit.\n\nYeah, you could say that got her attention.\n\nJennifer's eyes flew open as I gave this attention to her pussy. \"Oh my god, oh my god, RYAN!\"\n\nI smiled, letting her nipple go. \"Good?\"\n\n\"Just... don't stop, please, Ryan, please don't stop, please keep doing that...\" she moaned in greatest desperation.\n\nI was just being tentative, now, and already loving how it made her react; I couldn't wait to see what she was like when I found her g-spot. Which, with any luck, would only be a matter of seconds from now.\n\n\"HOLY FUCK, RYAN!\"\n\nAh, there it was.\n\nShe might have been vocal before, but now she was simply loud, writhing and shuddering as I massaged her g-spot and clit simultaneously. I looked her straight in the eyes as I continued to do this, pushing her toward that edge. She'd already become quite experienced with her body, but I was going to show her how much fun it could be with a partner. Her juices soon coated my fingers as I continued to pleasure her, her breathing becoming quick and ragged as I brought her to the precipice.\n\n\"Do it... cum for me Jennifer... just let go, just let go and cum for me...\" I grunted as I fingered her harder and harder.\n\nShe looked down at me, a look of uncertain desperation on her face as low, whimpering sounds of unbridled pleasure came from her mouth.\n\n\"Oh god, Ryan, you're gonna do it, you're gonna make me cum, please make me cum, Ryan, please, please, please, do it, please... RYAN, I'M CUMMING! GOD, YES, RYAN!\" Jennifer cried out. Her body jerked violently against me as I massaged her sex, but I held her close, slowly yet forcefully coaxing her through her powerful orgasm. Her moans had long since lost all form and became something like a pleasurable wailing, though the moment it passed, she collapsed beside me. Breathing heavily, she looked down at me through half-lidded eyes.\n\n\"Oh... wow... wow, wow, wow...\" Jennifer groaned.\n\nWithout taking my hand from beneath her panties, I leaned up and kissed her, enjoying her enthusiasm as she kissed me back.\n\n\"That was... that was amazing... thank you, Ryan,\" Jennifer said, kissing me again.\n\n\"It was my pleasure,\" I said, looking her up and down hungrily. \"You are so wet.\"\n\nShe looked away from me, smiling and a little embarrassed. \"I'm sorry, I kinda... gush, I guess.\"\n\n\"Nothing to be sorry for,\" I said, turning her face to mine and kissing her. \"It tells me I'm doing a good job.\"\n\n\"I can tell you that. That was a very, *very* good job,\" Jennifer replied, blushing and looking at me dreamily.\n\n\"That was the first time. Just a warmup. The next ones will be even better,\" I said.\n\nShe laughed. \"Even better? How could it get better than- OH GOD!\"\n\nI began to finger her again before she could finish her sentence, thinking that this was one of those moments where the \"show, don't tell\" principle applied. With her beside me like this, I fingered Jennifer through three more orgasms, each of them stronger than the last as I helped acclimate her to being with me. Between each of them, I would give her a moment to catch her breath, only just, before moving into the next one, and by the time we were finished, you would have thought the world was ending for the way she was screaming.\n\nShe was right about being a gusher, though; by the time I had finished giving her her fourth orgasm, Jennifer's juices covered my hand and soaked through both her panties and left a good-sized wet spot on my sheets. She soon put her hands on my shoulders, gently pushing me away.\n\n\"No more... please, no more, I need... holy fuck... I need a moment, Ryan... fuck that's so good, that was amazing...\" Jennifer breathed, kissing me messily. It seemed as if every inch of her pale, smooth skin was now flush with pink and lightly sheened with sweat, a look that I had to say was certainly becoming for her.\n\nI pulled my hand from under her panties and licked her juices, finding her to taste quite sweet.\n\nWhen she looked at me curiously, I asked, \"You want some?\"\n\n\"I've... never done that before,\" Jennifer admitted.\n\n\"Well, today is a day for doing things you've never done before, isn't it?\" I said.\n\nShe smirked. \"You know what, you're right.\"\n\nJennifer took my hand in hers and brought it to her lips, tentatively swiping at it with her tongue. Once she got her first taste of her juices, I saw her eyes open slightly with surprise, and she began to lick more enthusiastically.\n\n\"That's really tasty!\" Jennifer giggled. \"*I'm* really tasty!\"\n\n\"You are. One of the many reasons I love eating pussy,\" I admitted.\n\nShe laughed. \"Please, give me a little while before you do that...\"\n\n\"No problem,\" I said. I sat up and pulled off my shirt, enjoying her appreciative eying of my modestly muscled frame.\n\nJennifer reached up, running her hand over my lean muscles and groaning, softly. \"So nice...\"\n\nI smiled. \"I got something nicer than that.\"\n\nWith that, I arched my back and pulled off my underwear, leaving me naked on the bed beside her. Jennifer's eyes went wide as she took in all ten inches of my thick cock, head already beading with precum.\n\nJennifer whispered, \"Holy...\"\n\n\"Do you want to touch it?\" I asked.\n\nSilently, Jennifer nodded. I took her hand in mine, guiding it toward my cock. I wrapped her fingers around the head gently.\n\n\"Now, you want to stroke me firmly and gently; I'll let you know if it's too much or not enough. Try spreading the precum around evenly, and don't forget to give attention to the head, that's where it's most sensitive,\" I said.\n\n\"I understand,\" she agreed, slowly stroking me. It was a tentative gesture as she got used to the feel of my cock and precum, but it didn't take her long to start spreading it up and down the length of my cock. When I began to groan pleasurably when she would gently rub her thumb over the head, she would do this more vigorously, picking up her pace as she jerked me off. I didn't have to instruct her much, sometimes telling her to slow down or that she was squeezing too hard, but she adjusted easily to my instructions and gave a pretty solid handjob.\n\nSoon Jennifer was feeling bold, jacking me more energetically, even reaching over with her other hand to gently play with my balls. While she was hardly an expert, she was learning fast, and I was feeling pretty good. If this kept up much longer, she would have had me cumming in no time.\n\n\"Okay, okay, that's good... you can stop now...\" I said.\n\nJennifer whined a little, almost as if she were upset that a new toy was being taken away, but while she stopped jacking me, she did continue to gently hold onto my cock.\n\nI looked down at her with lust and great need, leaning down and kissing her.\n\n\"Fuck, you're beautiful,\" I said.\n\nJennifer blushed. \"Thank you.\"\n\nLicking my lips nervously, I asked, \"Are you... ready?\"\n\nHer eyes went wide on catching my meaning, but soon she quickly leaned up and kissed me. \"Yes. I am.\"\n\nSilently, I smiled, kneeling next to her and peeling her soaked panties down her legs and tossing them aside. For her part, Jennifer nervously removed her tank top until she too was naked. I spread her legs and crawled between them, kissing my way up her thighs, planting a firm kiss on her clitoris that drove her wild, before kissing my way up her stomach, to her breasts and to her neck. My cock rested against her inner thigh, throbbing and waiting, needing her.\n\nJennifer looked up at me with this look between great longing and fear, but her breathing hadn't changed much since the lustiest moments of when I fingered her to orgasm.\n\nStill, I wasn't going to take this next step without her.\n\n\"I'll need your help guiding me in,\" I said, smiling sheepishly.\n\nNervously, Jennifer nodded again, reaching down and taking hold of my cock. Her hand was shaking, but she took me firmly in hand, running the head against her clit for a moment before pressing me against her folds. Her entrance felt quite tight, and for all the training she had done, I knew this would take some effort.\n\nNonetheless, I pushed forward and began to penetrate her.\n\nJennifer looked down as my cock began to slowly press inside of her. \"Oh, wow, Ryan, wow... keep doing that Ryan, keep doing that, please, keep doing that, get inside me, please, fuck me, get inside of me, do it, do it, do it, fuck me, please, fuck me... fuck me, do it, do it, do it...\"\n\nThen, almost all at once, I felt her muscles invite me in, as the head and first few inches of my cock entered Jennifer Cage's virgin pussy.\n\nHer eyes popped open and her mouth dropped into a familiar O shape briefly at this invasion, but soon after she said two words so quietly I think they barely counted as a whisper.\n\n\"Oh god.\"\n\nMy lips found hers as I pushed deeper into her impossibly tight cunt. Jennifer moaned against me as I continued to press into her, sliding inch after inch into her at an agonizing pace. Thank god she was as wet as she was, because at this tightness I might not have been able to enter her otherwise. Nonetheless, she was inviting, urging me forward with her soft words and clutching pussy muscles. Soon more than half of my cock was in her, then three quarters.\n\nThen I was all the way inside of her, my balls resting against her ass.\n\n\"Oh my god, Ryan!\" Jennifer exclaimed, looking down the valley of her cleavage to her pussy being obscenely penetrated by my cock. \"Holy fuck... holy fuck, wow...\"\n\nI smiled down at her, kissing her. \"Not so bad, right?\"\n\nShe kissed me back. \"This is... this is a lot... but so good... fantastic!\"\n\nBriefly, my eyes drifted to the bedside table, and seeing her phone on it I was struck by an inspiration.\n\nI grabbed the phone, handing it to her. \"Can you unlock this?\"\n\nJennifer did, and though she was a little confused, it didn't seem like she was in the mood to turn down much of anything as she handed the phone back to me. \"Why?\"\n\nI was taken to a time that now felt so long ago that felt very familiar all of a sudden. It had been in this bed, with me in Jennifer's position, and I couldn't not embrace the moment for all it was worth. Now if only I could remember all that was said...\n\nKaitlyn's words came to me, but now in my own voice. \"I thought a picture would be best to commemorate such an important occasion.\"\n\nI angled the camera down and took a picture of my cock in her pussy, making sure I got just the right angle, just the right shot for her to remember this by, before putting the phone aside.\n\n\"Some things...\" I grunted, slowly sliding out and thrusting back inside of her, \"...you want to remember.\"\n\nJennifer groaned as I began to slowly fuck in and out of her. \"I've got a pretty good memory...\"\n\n\"So do I, but the more adventures you have, the more jumbled they can get,\" I responded, continuing my achingly slow fuck. \"Pictures, they can help make sure things don't get confused.\"\n\n\"Good to...\" she whimpered, eyes rolling back as I thrust back home inside of her. \"...good to knoOOOOOOOOOOOOOW!\"\n\nI pumped in and out of her slightly faster, wanting to make this fuck last, but she felt so good I couldn't help but quicken my pace. Her body against mine, her eagerness, the way she looked up at me with such pride and need... it drove me wild. She may have had a lot to learn, but I was more than happy to help her on her way.\n\n\"It's so good... so fucking good, Ryan... keep fucking me, please keep fucking me...\" Jennifer moaned, wrapping her arms around me and holding me close.\n\n\"I couldn't stop if I tried... you're so fucking hot, you feel so good... we're going to have fun, you and I...\" I said.\n\n\"Yeah? You want to keep doing this?\" she asked, moaning and looking up at me with some doubt. \"You want to keep doing this with me?\"\n\n\"God, yes...\" I groaned, leaning down to kiss her. \"You're fucking amazing, of course I want to keep doing this with you...\"\n\n\"Good, fuuuuuuuck,\" Jennifer groaned, kissing me long and deep as I increased the pace of our fuck slightly. \"Because... none of this changes what I wanted... I want it more, now... I want to do everything, to feel everything, to know everything...\"\n\nI reached a hand up to squeeze her tits while I fucked into her, giving her something new to squeal about. I couldn't stop looking down at her, taking in her first time as it happened. I could see her grimacing sometimes, getting used to the size of my cock, but she never asked me to stop, and when I slowed down to make sure I wasn't hurting her, she would only push me to go faster again. Her pussy gripped me like a vise, squeezing and massaging my cock tightly as I thrust in and out of her. It felt amazing, and was nearly enough to push me over the edge.\n\nIt was, actually, getting me quite close.\n\n\"I'm... I'm getting ready to cum... feels so good,\" I said.\n\n\"Gooooood,\" she groaned with pride. \"That's... that's very good...\"\n\n\"Where do you want it?\" I asked, thrusting into her slightly faster.\n\n\"You can cum wherever... cum in me... I want to know what that feels like... I want to feel your cum, Ryan...\" Jennifer said.\n\nAlright, that was one question answered, but I had another important one that needed addressing immediately.\n\n\"How are you? Are you close to cumming?\" I asked, grunting and thrusting into her slightly harder.\n\nShe looked up at me, almost a little embarrassed. \"It's... I'm not there yet, I'm sorry. It feels so good, but-\"\n\nI kissed her. \"There's nothing to be sorry for, penetration alone doesn't do it for a lot of girls. Why don't you try reaching down and playing with your clit? A lot of girls I know have done that.\"\n\nJennifer groaned, then looked at me uncertainly. \"That's not a problem?\"\n\n\"You not getting off would be a problem,\" I said with a smile, kissing her passionately again. \"Go on, touch yourself... cum for me and make me cum... do it...\"\n\nThis low, grunted command spurred her into action, and with both hands, Jennifer reached down between her legs to finger her clit. Her eyes went wider and her breathing got much more ragged as she did this, and I could tell the suggestion was quite welcomed. Her moans became louder, her eyes more fluttery and her mouth taking on that telltale O-shape that she seemed to favor when losing control. I still wasn't fucking her nearly as hard as I would many other girls I knew, but I increased my pace to help both of us build toward our orgasms.",
        "\"Oh my god... Ryan, I can feel it, I can feel it, it's coming...\" Jennifer moaned.\n\n\"Gonna cum?\" I asked.\n\nWhimpering, she nodded. My own orgasm was on the precipice and desperately in need of release, and I began to fuck her even harder.\n\n\"Just let it happen, let the dam break... fuck you feel so good... cum for me... you cum for me and you'll make me cum... do it... cum for me...\" I groaned.\n\n\"It's happening... oh god, I can feel it, I'm gonna cum, Ryan! I'm cumming, I'm cumming, Ryan, I'M CUMMING!\" Jennifer cried out, her voice rising to a scream. Her body jolted against mine as the most powerful orgasm yet overtook her, her arms closing around me tightly as she held me close, every inch of her shaking and shuddering uncontrollably from the pleasure of it.\n\nI didn't hold back any longer, especially with her pussy squeezing me so tightly it threatened to push me out of her. I buried my thick cock deep within her spasming cunt and unleashed, moaning loudly as pleasure overtook my senses. I pumped a massive load of cum deep inside of her, each shot threatening to flood her tight cunt. Jennifer took it well, moaning well after her orgasm had subsided as her pussy milked every last drop from my cock.\n\nFinally, as both of us came down from our orgasms, I leaned in and kissed her. It was a slow, passionate kiss, one that she returned in kind. We broke it soon, holding each other and panting, but soon continued kissing. These were light, brief kisses, sharing a distinct intimacy that I couldn't deny as we looked into each other's eyes.\n\n\"Thank you,\" Jennifer said, looking up at me dreamily.\n\n\"You're welcome,\" I replied. As I could feel myself softening, I kissed her one final time and pulled out. A torrent of our juices poured out of her and onto my sheets. Once I might have been annoyed by this, but since this year had begun, I'd become quite accustomed to regularly cleaning my bedding.\n\nI lay down beside her, still catching my breath, while she rolled onto her side so she could drape an arm and leg over me and better look at me.\n\n\"So, as first times go, how would you say this went?\" I asked.\n\nJennifer laughed. \"You know, it's pretty hard to compare it to anything, since you only get to lose your virginity once and all that... but I have to say, that was pretty fucking amazing.\"\n\nIt was interesting seeing her after a few hard cums. She had almost none of the nervousness or meekness that I would have generally associated with Jennifer Cage. Being nice and pleasantly cum drunk suited her well, and for the broadness of the smile on her pretty face, I could tell she rather well agreed with this sentiment too.\n\nLooking down at herself, Jennifer gingerly toyed with her pussy, scooping up some of my cum experimentally. \"Wow, you really cum a lot.\"\n\n\"Yeah... I've been told this,\" I said.\n\nSmiling a little sheepishly, she looked around my room and said, \"Can I use your bathroom real quick? I'd like to get a little cleaned up before we really jump into any more.\"\n\nI grinned back at her. She was interested in doing more; it was very promising to see that she hadn't been scared off by anything.\n\n\"Go for it. I've got two girlfriends, so, it's pretty well-stocked with whatever you might need,\" I said.\n\n\"Thanks!\" Jennifer said, climbing off of me and walking into my bathroom. There was a little extra confidence and sway in her step as she walked completely and utterly naked into my bathroom, and the way our mixed juices dripped down her inner thighs... well, that certainly started to bring life back to my cock again.\n\nAs she closed the door behind her, I rolled over to pick up my phone and saw that I had a new text.\n\nJosie: How's the slut lessons going? She a good student?\n\nI laughed at Josie's forwardness and responded.\n\nMe: Everything so far so good here. She was nervous, but she's having a good time. I am too. She's nice, and hot.\n\nJosie: Cool. Let us know if you want to make an introduction, Brooke and Alice think she's cute too, could be fun.\n\nMe: We'll see. Want to ease her into things. But she's curious.\n\nJosie: Good to know ;)\n\nI sighed, contentedly holding my phone. Feeling nostalgic, I opened up my Senior Year Memories album and scrolled through the pictures, and found myself most taken at the moment by both my oldest and most recent pictures. I looked at Leah and Kaitlyn for a moment, and if Jennifer was going to take a moment, I thought I had the time to shoot out a couple more quick texts.\n\nTo Leah, I sent:\n\nMe: Lust spell's working pretty well on my end I think. Hoping you're seeing some great results too :)\n\nI thought a while longer about what I wanted to send to Kaitlyn. The two of us hadn't had a lot of heart to heart time to talk lately, but I was feeling a particular need to touch base with her. I agonized about the exact wording, but finally settled on winging it and hoping for the best.\n\nMe: I don't know if I've said this enough, Kaitlyn, but thank you for starting me on this crazy year. I wouldn't have been able to do any of this without you, and I don't think I can ever repay you for that.\n\nSuddenly feeling a little nervous myself at how Kaitlyn might respond to that, I set the phone down just as I heard Jennifer's hand on the bathroom doorknob. She wobbled back into the bedroom a little giggly, looking at me with playful eyes.\n\n\"I just had sex!\" she declared proudly.\n\nI laughed. \"I know, I was there.\"\n\n\"I just couldn't stop looking at myself in the mirror...\" Jennifer said. \"Because I still look the same, but I don't feel the same, because now, I've had sex.\"\n\n\"Feels good, doesn't it?\" I asked.\n\n\"Hell yeah,\" she said. \"And I think I even look better too. I don't know if that's possible, because I'm still me, and I haven't really changed, but it's a change... do you mind the glasses and the ponytail? Should I ditch them?\"\n\n\"You wear whatever's comfortable for you, that's all I care about,\" I said.\n\nJennifer beamed at me. \"Cool! I think I've watched too many movies where they make a woman hot by removing her glasses and ponytail, keeps putting these stupid questions in my head about what I should and shouldn't be doing, and-\"\n\nShe tried to take a step and wobbled against the bathroom doorframe, giggling.\n\n\"Walking is... difficult,\" Jennifer said. I got up and took her in my arms, helping her to lie down on the bed before joining her.\n\n\"That part gets easier with time,\" I said. \"I mean, I've never done it from your side precisely, and I still get wobbly after some good, solid sex, but it does get easier.\"\n\n\"Good, because I want to have a lot more, and I don't want to feel so messed up from it *every* time,\" Jennifer said.\n\nI laughed. \"I think sex always messes us up a little bit, makes us a little cum drunk, but that's where a lot of the fun comes from. If it's not driving you a little crazy, it's not worth it.\"\n\n\"That an official lesson?\" Jennifer asked, leaning in to kiss me.\n\n\"Not... not really. You're going to hear a lot about sex from a lot of people, some of it's right, some of it's not, the real challenge is figuring out what works for you. Just keep an open mind, your self-confidence and your self-respect intact, and you'll figure out what works best for you,\" I said.\n\nHer smile fell slightly, but not completely. \"I can see the need for that. My mom... she didn't have the best experiences with guys. My dad left us when I was really little, and the guys she got with since weren't the best for her. I think it kind of warped how she viewed sex, and what she would teach me about it, like she thinks she can make me into a different person from her if she makes me more scared. I'm sorry if it's a problem in anything we do, the way she fucked with my head, but I'm really trying to not let her inform everything. Really. I'm trying to do this for me, and I'm gonna keep trying this for me, but it's going to have its rough spots, I know, and-\"\n\nI kissed her. \"You did pretty well already.\"\n\n\"Yeah?\" Jennifer asked, clearly less because she didn't believe me and more because she needed validation. That was something I was happy to provide.\n\n\"Yeah,\" I confirmed.\n\nShe groaned contentedly, melting against me as we made out for a moment. It felt good to press our bodies against one another, our hands gently exploring as we enjoyed the afterglow of some quality sex and the promise of more to come.\n\nJennifer sighed. \"I wish you had some toys.\"\n\nRaising an eyebrow, I asked, \"Oh? Why?\"\n\nA little embarrassed, she blushed. \"It's nothing, sorry, forget I said anything.\"\n\n\"But you did say something, about something you wanted, and I want to hear it,\" I said.\n\nStill looking a little sheepish, Jennifer said, \"It's... just a whim. I didn't want to say that you weren't awesome or anything, because what we did was awesome, it felt *so* fucking good, but...\"\n\n\"But what?\" I asked, prodding her, hoping I'd be able to better help her communicate her wants.\n\nJennifer looked at me, biting her lip in consideration for a brief moment before looking up at me with her big brown eyes and saying, \"At home, I have a few toys I keep stashed in this small box under my bed. I had to sneak out to get them, but I've made good use of them... and one of them is...\"\n\nShe trailed off, her voice going very quiet again as she had a difficult time expressing what she needed to express.\n\n\"What is it?\" I asked, reaching for her and gently squeezing one of her nipples.\n\nJennifer moaned, closing her eyes and finishing, \"...a butt plug.\"\n\n\"A butt plug...\" I said, curiously letting the words roll off my tongue.\n\n\"Yes...\" she admitted, sheepish. \"I was nervous to use it at first, I wasn't sure what it would feel like and anal always looked so intense in the videos I've watched, but I gave it a try, and when I did, it was such... wow, it made me cum harder than anything else. I was just wondering what it would be like doing some of the things we've done with one of those.\"\n\nI thought about this for a moment before politely disentangling myself from Jennifer. \"You say you keep your toys in a small box beneath your bed?\"\n\n\"Yeah?\" Jennifer asked, curiously looking at me as I reached beneath the bed.\n\nI grabbed the large box from beneath my bed and pulled it out, dropping it onto the bed at her feet. \"Then you should really get a load of *my* toybox.\"\n\nJennifer sat up and looked at the large plastic tub I kept beneath the bed. I grinned at her curiosity and opened it up, revealing my impressive collection of dildos, vibrators, bondage gear and other toys I had accumulated.\n\nI explained as I rooted through the box, \"For Christmas this year, a bunch of my friends got together and got me one hell of a collection of sex toys. I got a lot of good stuff in here, but it was Josie who got me...\"\n\nI grabbed a selection of the toys I was looking for and spread them out at the top of the box for Jennifer to better see. \"...a truly epic collection of butt plugs.\"\n\nJennifer's eyes went wide as she leaned in over the box and took in the collection of toys.\n\n\"Wow,\" she said.\n\n\"Good stuff, right?\" I asked.\n\n\"That's... one way of putting it,\" she replied, shifting around uncomfortably on the bed as she took in the collection. \"And all of these... fit?\"\n\nI laughed, picking up the biggest of the plugs. \"They're meant to fit, but whether they actually can I think is up for debate. Brooke and Josie are really into filling their asses, but even they can't fit the biggest of the collection here. Brooke got really close, but even she couldn't fit it.\"\n\n\"I can imagine that being a problem,\" Jennifer said, her eyes wide as she reached out and touched the big plug I was holding. I saw her shiver slightly at the contact, her eyes fluttering, but she soon withdrew.\n\nNo, no matter how much experience she might have had with her own plugs, this was something she knew better than to get too adventurous with right away.\n\nBriefly, she sorted through the box before finding a medium-sized black rubber plug that seemed to catch her interest. For her level of experience, it was a little bigger than I would have expected.\n\n\"That's the one you want?\" I asked.\n\n\"Uh huh,\" she nodded, smiling brightly.\n\n\"You sure? I mean, that one's not exactly small,\" I said.\n\n\"It's only slightly bigger than the one I have back at home. I think I can take it, if you have enough lubrication, that is,\" Jennifer said.\n\nI shifted the contents of my toybox to reveal the Costco-sized container of KY Jelly that Nadia had gotten me for Christmas. While I had gone through some of it already, there was quite a bit to go.\n\n\"Ah, wow, yes, that is a lot of lube,\" Jennifer said.\n\n\"It's come in handy,\" I said, grinning. \"So...\"\n\nShe licked her lips, nodding. \"Yeah. Yeah, I'd like to do this.\"\n\nI kissed her. \"Cool.\"\n\nJennifer asked, \"So, how should I do this? I mean, I've done it before, but it gets a bit awkward, and I don't want to mess anything up...\"\n\nI said, \"It's not that hard. Getting on your knees is a good start; I've been with some girls who had the easiest time going face-down, ass up, but however you feel most comfortable, I'm good for.\"\n\n\"Face down, ass up sounds good,\" Jennifer said, enthusiastic. She smiled at me sweetly, leaning in for a quick kiss before turning around and getting up on her knees. She bent down toward the head of the bed, resting her head on her arms as she stuck her delicious-looking, round ass out towards me.\n\nI looked at her ass for a good, long moment, taking in her soft curves and the view this angle gave of both her inviting pussy and sweet, pink asshole between her cheeks. With the plug in my hand and the lube not far away, I knew what I should have done, but she just looked so inviting...\n\nI leaned in, kissing her asshole, running my tongue around her puckered bud. Jennifer first yelped at the unexpected attention, but then groaned.\n\n\"Oh... that feels sooooo goooood, Ryan...\" she moaned.\n\nI could have done this for a while, given her a truly intense rimming, but I wasn't going to deny her need to be filled by the plug. Well, not for long anyway. I did stay there a little bit longer, kissing and licking and probing her asshole with my tongue before leaning back, giving her a kiss on one of her glorious, round cheeks, then finally doing what I'd set out to do with the plug.\n\nSqueezing a generous amount of lube on the conical plug, I made sure to get it nice and slippery before lining it up with her tightest hole.\n\n\"I'm not going to lie, this is going to be fun, but will also get pretty intense once we get to the end,\" I said.\n\nJennifer looked back at me, smiling. \"I've had a butt plug in me before, Ryan.\"\n\nSmiling, I pushed it forward, sliding the toy into her ass a little bit at a time. \"I just wanted to be sure you knew what you were getting into. Or, more appropriately, what's getting into you.\"\n\nShe hissed, dropping her head to the bed and moaning. \"Oh, fuck, that feels so good...\"\n\n\"Only got about an inch in... let's see if you can fit more,\" I said, pushing it deeper into her asshole.\n\nJennifer moaned and hissed, looking back at me as I pressed more and more of the plug into her ass. She quieted as her asshole stretched to accommodate the toy, and by the time I'd nearly reached its widest point, she was whimpering from equal parts pleasure and pain. Nonetheless, I kept slowly but firmly pushing it inside of her until her hole took the widest point, and the toy settled deliciously inside of her.\n\n\"Fuuuuuuuuuuuuuuuuck...\" Jennifer groaned. \"I'm so full...\"\n\n\"That's a good thing?\" I asked.\n\n\"Very,\" she replied.\n\n\"Good,\" I said, playfully grabbing her by the hips and rolling her over onto her back. It took her by surprise, and with some adjustment at the toy inside of her, but as she looked up at me with her big eyes and pretty smile and utterly inviting body... I felt rather inspired.\n\n\"I'm going to eat your pussy now,\" I said.\n\nJennifer shivered, her luscious body breaking out in goosebumps as I saw a flush of arousal pass through her.\n\n\"Good,\" she said, simply.\n\nLicking my lips, I crawled between her legs until my face was only inches away from her pussy. I looked up at her through the valley of her cleavage in anticipation, first at pleasuring her and inviting her into this world of beautiful carnality, and secondly because her pussy looked fucking delicious.\n\nI probably should have eased her in, teasing and exploring her engorged, dripping folds, but I needed to taste her properly, and after the fingering I'd already given her, I thought we were well past the point of teasing.\n\nSo, I dove in, licking and suckling at her pussy, worshipping her clit while my fingers and tongue gave the rest of her pussy all due attention. Between this, and the plug in her ass, Jennifer had taken on a bit of a different tone than before.\n\n\"HOLY SHIT, FUCK!\" she cried out, her hands finding my hair and forcing me into her pussy. \"Keep doing that, Ryan, holy fuck! Holy shit, Ryan, I can't... that's amazing, that's, wow, fuck, fucking wow, so good, fucking shit, do it, fuck, keep doing that, fuck... motherfucker! Keep it up, do it, do it! Keep eating my fucking pussy, Ryan!\"\n\nI didn't need the command to continue doing this, but I welcomed it. Seeing her become less shy the hornier she got was a delightful development, as I knew well how to help Jennifer along that path. I didn't know quite the course we would be taking with her as my apprentice, but I was willing to find out if it meant we did a lot more of this.\n\nI curled my fingers inside of her in that way that worked so well, focusing my lips and tongue on her clit as I rediscovered her G-spot and set her off once more. She was louder than before, her body jolting as if she were struck by lightning. Her wonderfully thick thighs clamped down around my head and neck so hard I thought I might be in trouble for a moment, but that didn't stop me from the worshipful treatment of her pussy as she gushed all over my face.\n\nWhen she loosened her grip on me, Jennifer gently pushed me away.\n\n\"That was... amazing... but if you lick me anymore, I feel like I might pass out...\" Jennifer gasped.\n\nI smiled. \"So, you never want me to eat your pussy again?\"\n\n\"NO!\" she shouted. \"I'd never say that, just... give me some time now...\"\n\n\"You got it,\" I said, crawling up beside her and kissing her. \"I just wanted to make sure, because you taste really good.\"\n\nLicking some of her juices from my face, Jennifer said, \"I know. Do all girls taste this good?\"\n\nI shrugged. \"I've heard it varies, but I've generally had good experiences. You do taste exceptionally good, I will say that.\"\n\n\"Thanks. I really do, don't I?\" she said, licking more of her from my face and kissing me deeply.\n\nSeeing where her curiosity was leading, I asked, \"So... you might be into girls too?\"\n\nJennifer scrunched up her face, uncertainly. \"I *think* so? I mean, I've always thought girls were really pretty, and I've gotten off to a lot of girl-girl porn recently too, so I think so? But, I don't know... I'm just discovering how much I really like cock, and I don't know where that puts me. Why?\"\n\nI held her close, stroking her side with my fingertips. \"I'm not judging or anything, I was just curious, because if you want to find out, I can make some introductions to some girls who'd be more than happy to help you find out.\"\n\nHer eyes brightened. \"You mean it?\"\n\n\"Of course I do,\" I said. \"In fact, Josie and Brooke are over at Alice's house next door. I'd be happy to introduce you to the three of them later if you want, see if that does anything for you.\"\n\nJennifer looked toward the curtain-covered window, thoughtful. \"They *are* pretty. Sure. Yes, let's do that. Maybe. I think. I'm pretty sure?\"\n\n\"Good. They're really nice,\" I said. I wanted to say that the three of them were also pretty insatiable and would fuck nearly anything that moved given the right circumstances, but I didn't want to scare Jennifer off or anything.",
        "One step at a time.\n\n\"Thanks,\" she said, kissing me again. \"I really appreciate you doing this. All of this, I mean.\"\n\n\"It's my pleasure, really,\" I said.\n\n\"I know,\" Jennifer replied, looking down at my erection. \"In more ways than one.\"\n\nI looked down, then shrugged. \"That will happen when I have a hot, naked girl in my bed.\"\n\nShe laughed. \"And that does happen so often.\"\n\n\"I've been very lucky, what can I say?\" I quipped back.\n\nDropping her voice a little lower, Jennifer continued, \"You made me feel really good with your mouth, and I'd like to do the same for you. Give you a blowjob, I mean, Ryan... is that alright?\"\n\nI smiled, then kissed her. \"Certainly. Far be it from me to turn down an offer like that.\"\n\n\"Thanks,\" she said, grinning. Jennifer made her way down my body slowly, licking and kissing me and even briefly sucking on one of my nipples. She was a little clumsy, but enthusiastic, which more than made up for any lack of expertise. That, and her stroking my cock, of course. She'd remembered what she learned from earlier well, and was quite enthusiastic when it came to pleasing me. She had a ways to go still, but with practice... yeah, I was pretty sure that Jennifer would do quite well for herself.\n\nFinally she crawled between my legs, her face level with the head of my fully erect cock. Jennifer gently ran her hands over it, admiring, gently squeezing and stroking me with one hand while fondling my balls gently with the other.\n\n\"This cock... it's amazing...\" Jennifer said, her voice filled with awe. \"It's so big, and you know how to use it well.\"\n\n\"Practice makes perfect,\" I groaned, unable to take my eyes off of her as she leaned in and kissed the head. \"Feels good.\"\n\n\"Thank you,\" she said, her voice high and sweet as she leaned in and kissed it again. Jennifer stuck out her tongue, licking up the precum, her eyes lidding over slightly at the taste. \"Yummy.\"\n\n\"I've been told as much,\" I replied. \"Do you... how much do you need me to tell you what to do?\"\n\n\"I know some, and I have practiced,\" Jennifer said. \"Just with toys, but I know that teeth are a big no no, and I can get quite a bit down my throat, so, if you tell me what feels good for you, I think I'll be able to pick it up in a hurry.\"\n\nMy cock twitched at the knowledge that she had practiced deep-throating. That would certainly come in handy.\n\n\"Why don't you give it a try, and I'll give you notes as we go,\" I said.\n\n\"Wonderful,\" she said, wrapping her lips around the head briefly in a firm, loving kiss, her tongue swirling so deliciously I couldn't help but moan as she rested there. \"That will be *very* helpful.\"\n\nI groaned with need, a sudden desperation for her to suck my cock growing within me. Her lips and tongue felt so good against me, and that hungry look she gave me, one that was equally sweet and lusty, it was too much for me.\n\n\"Please, Jennifer... suck my cock,\" I begged.\n\nShe kissed the head one more time, then said, \"Gladly.\"\n\nAnd then, don't ask me how, she seemingly inhaled half of my cock in one go.\n\n\"Oh, fuck, Jennifer...\" I groaned, dropping my head back. \"You really have been practicing!\"\n\nShe pulled her mouth from my cock, smirking and said, \"I told you.\"\n\n\"And I believed you, but... still...\" I hissed, unable to say anything as she inhaled my cock yet again. She bobbed up and down, slowly taking more and more of my cock into her mouth. Her eagerness may have outstripped her skill, as there was a definite roughness to some of it, and she was both gagging and teary from taking so much of my cock roughly into her mouth, but soon enough she had taken my entire length.\n\nJennifer came up for air, choking and coughing, with long strands of drool connecting her mouth to my cock, but beaming from ear to ear.\n\n\"I did it! Fuck... yeah, I did it!\" she declared proudly, kissing my cockhead.\n\nI would have congratulated her, but found words difficult to come by as she swallowed my cock yet again. Though it was far from the most expert blowjob I had ever received, it was still a blowjob, and a pretty good one at that. What Jennifer could do with her mouth needed some refinement, but if it meant getting regular blowjobs from this eager sexpot in training... well, I was willing to be her practice subject.\n\n\"That's good, that's good, but slow it down a little, find a rhythm,\" I groaned, instructing her as I gently took hold of her ponytail and guided her pace. \"It's not a race, and you don't have to do *everything* all the time, just find a rhythm that feels good... yes, like this... find a rhythm, and never neglect the head, especially with your tongue... yes, like that... fuck...\"\n\nJennifer caught on quickly, alternating between fucking me with her mouth and throat and then resting at the top, suckling at the head and tip like a particularly tasty piece of candy and driving me utterly wild. I was content to just lie back and take it, happy to let her explore and figure all of this out on her own, until she pulled her mouth from my cock.\n\nBefore I could utter a word of protest, soon she had her tits wrapped around my cock, pressing them together and fucking me silly with her drool and precum-coated tits.\n\n\"I've always wanted to try this,\" Jennifer said, smiling at my reaction as she titty-fucked me. \"I think I'd need more lube to do it right, but seeing your reaction is pretty great. How does it feel for you, Ryan?\"\n\n\"Really, really, good,\" I groaned.\n\n\"Oh, cool,\" she said, tittyfucking me harder. \"I was really worried I wasn't doing it right.\"\n\n\"Oh, no, you're doing a very good job,\" I said, amazed at the sight of my cock disappearing between her massive tits. Jennifer smiled at me so cutely, so hopefully, that I couldn't help but smile back at her. This girl who had come here so nervous was now looking like she felt comfortable in her own skin for the first time since, well, since I'm pretty sure I'd ever seen her.\n\nI moaned at her attention, feeling like I was approaching the edge once again.\n\nJennifer looked down at me, worried. \"You're not going to cum again, are you?\"\n\n\"Is that a problem?\" I asked.\n\n\"I mean, no, it's not, but it kinda is, because there was something else I wanted to do before you came again, because, I was trying to get you hard again Ryan, so I could...\" she trailed off, speaking quickly in a more energetic version of her nervous voice than I was used to.\n\n\"What do you want to do?\" Ryan asked. \"Tell me, what do you want to do?\"\n\nJennifer looked at me nervously, but then shook her head slightly as if fighting some great internal battle to determine what she wanted. It looked like the person she wanted to be had won out, though, as soon she climbed over me until she had lined her pussy up with my cock. Reaching down, she grabbed hold of my shaft and pressed the head against her lips.\n\nI looked into her eyes as she settled down onto me, my cock once again sliding deliciously inside of her tight cunt. It was a different sensation, being inside of her while she had the butt plug in, much tighter than when we'd first had sex, but the way she shut her eyes and her mouth dropped open pleasurably as she settled down on me, I wasn't in a position to care about comparisons.\n\nRather than think too much, I simply reached up and squeezed her tits, running my thumbs over her nipples and loving the sounds she made.\n\n\"Oh... Ryan...\" Jennifer cooed, looking down at me with pride and lust.\n\n\"You're in complete control, now,\" I said, looking her up and down and licking my lips. \"Fuck me, Jennifer.\"\n\nShe must have liked the commanding tone to my voice, because her smile broadened, and soon enough she began to ride me. Jennifer was slow and tentative at first, trying to find the right angle, the right speed, but rather than get discouraged as her first few attempts to ride me didn't seem to be getting the results she wanted, I saw her grit her teeth and change positions, shifting around until something seemed to properly excite her. As she began to bounce up and down on my cock with more speed, her gritted teeth turned to a proud smile as she began to ride me properly.\n\n\"Oh, fuck, yes, this is amazing, this is amazing,\" Jennifer groaned as I dropped my hands from her tits to her ass, squeezing her and helping her ride me.\n\n\"Yeah? You like being on top?\" I asked, squeezing her round ass cheeks and making her squeal.\n\n\"I think I just like sex... but yes, being on top is something else,\" she replied, fucking me harder. Her massive tits bounced in glorious synchronicity with her body, while Jennifer moaned and laughed and stuck out her tongue with distinct joy.\n\nI fucked up into her, grunting. \"Way better than porn, isn't it?\"\n\n\"Way,\" Jennifer responded. \"It's got its charms, but it doesn't have anything on having almost a foot of cock destroying your pussy.\"\n\n\"Destroying?\" I asked, laughing slightly as she bounced on my cock.\n\nJennifer rolled her eyes, then let out a moan. \"You know what I mean.\"\n\n\"I do...\" I groaned, leaning up to suck on her nipples.\n\nShe moaned, riding me with a greater confidence. Though her tits bounced too much for me to suck on them for very long, with my hands on her ass and her leaning down to kiss me, I was in a pretty heavenly place. Watching Jennifer come into her own in front of my very eyes while she rode me, feeling her soft, beautiful body against mine as her cunt expertly squeezed my cock... yeah, she was something special. If we kept doing this, I got the feeling that Jennifer was going to prove very special indeed.\n\nShe ground against me, fucking me harder, needing to grip the headboard above me for traction as she rode me for everything she was worth. This wasn't the timid, sweet initiation to sex we'd managed not long before this, no, this was something altogether rawer, more passionate. That she could catch on so quickly was unexpected, but welcome, and soon I wasn't thinking, wasn't planning, wasn't there to make this an educational exercise, no, I was here for the ride, the experience, for the two of us to just connect and reach those pleasurable heights together.\n\n\"This feels so good...\" Jennifer moaned, slamming her hips down onto mine at an almost blinding pace.\n\n\"So tight... so hot... amazing...\" I grunted.\n\n\"I'm gonna...\" she groaned, her body tensing ever so slightly.\n\n\"Me too...\" I said.\n\n\"Do it... set me off, fill me, fuck me, cum in me, do it, Ryan, do it, make me cum, cum, please, Ryan, please...\" Jennifer moaned, riding me harder, staring into me with those beautiful, deep brown eyes. She was breathing raggedly, her mouth already dropping into that perfect little O-shape her lips formed whenever she was cumming.\n\nI didn't hold back. I grabbed her by the hips, fucking up into her as hard as I could.\n\nThis was apparently what she needed. Jennifer cried out, her body jerking against mine as a powerful orgasm overtook her. She moaned and cried out, dropping her hands from the headboard to me so she could hold on through her orgasm while her pussy clamped down onto me.\n\nThat was more than I could handle, as I too let loose, letting pleasure flood my body as I came inside of her yet again. Moaning and cooing, she slowed the rocking of her hips against me, squeezing and milking every last drop out of me until it felt like I barely had any fluid left in my body.\n\nEventually, panting and utterly spent, Jennifer pulled herself off of me and collapsed next to me on the bed.\n\n\"Wow...\" she said, her voice weak. \"I could... I could really get used to this.\"\n\nLooking at her, so utterly naked and free, dripping with our juices, I was compelled to ask, \"Mind if I get a picture of this?\"\n\n\"Sure,\" she said, waving casually.\n\nTaking my phone from the bedside table, I swiped past the texts I'd received, took a quick couple pictures of her like this for my album, before being hit by further inspiration. Taking her phone once again, I took a picture first of her, then of me, after this, before making a couple quick adjustments in her phone.\n\n\"There, created a new album for you, something to help make the most of the rest of your year,\" I said.\n\nJennifer took her phone from me, looking at the album I'd created of pictures of our fun. \"Senior Year Memories?\"\n\n\"It seemed appropriate,\" I said. \"You want to jump into this life, a Senior Year Memories album certainly wouldn't hurt. Having this with me this year, it's helped me in ways I never would have expected, kept me going, encouraged me, and I think something like that could help you too.\"\n\n\"I guess it couldn't hurt,\" she said, curling up contentedly next to me on the bed. \"So, don't take this the wrong way, but I think I could use a little bit of a break after all that.\"\n\n\"Me too,\" I admitted. \"I did pre-order some pizza, though, and that should be arriving soon. So, recharge break.\"\n\n\"Recharge break,\" Jennifer said, closing her eyes pleasantly. \"Cool.\"\n\n\"Cool,\" I replied, cuddling up next to her.\n\nWe stayed like this for some time, quiet and contented, catching our breaths as we just basked in the afterglow of some quality sex.\n\n\"So, I was thinking...\" Jennifer finally said, her voice a little dreamy as she reached behind her.\n\n\"Yeah?\" I asked.\n\nWith some discomfort on her face, I saw her pull out the butt plug, then set it on its base on the bedside table next to her. \"Earlier, you said you'd introduce me to your friends. To Josie, and Brooke, and Alice, to see if they could help me out in figuring whether or not I might like to fool around with girls... and I think I'd like that. If they're still there, still waiting, I mean. It's not that I don't love what we've done here, and what you can do with... everything, but-\"\n\nI laughed, gently stroking her thigh. \"Don't worry about it. I could use the break, and we're here to help you get a little bit of everything today, right?\"\n\nJennifer sighed with relief. \"Exactly.\"\n\n\"Cool,\" I replied, reaching back for my phone. \"But should you find that they don't suit you, I'll still be here.\"\n\n\"I think I'll be fine, but thank you,\" she said.\n\n\"Cool,\" I said again, sending out a quick text.\n\nMe: She's ready, would love to meet the three of you.\n\nJosie didn't wait long to respond.\n\nJosie: We'll be right there. And we'll rock her world.\n\nI grinned at the text.\n\n\"What?\" Jennifer asked, looking toward me, curious.\n\n\"I should probably give you some head's up on what you're getting into. Josie... she's amazing, but she can be quite aggressive when it comes to getting what she wants. And Brooke... well, she's also aggressive, but in kind of the best, hyperactive sort of way. If you're just looking to have a seriously fun time with a girl, I don't think you can do better than Brooke,\" I said.\n\n\"Good to know,\" Jennifer replied. \"And Alice?\"\n\n\"She's laid back. Relaxed compared to the other two. Really into watching and being watched,\" I said.\n\nJennifer smiled widely at this. \"Oh, now *that* sounds like a lot of fun.\"\n\n\"Good,\" I said, leaning in to kiss her.\n\nBefore I could, I heard the doorbell ring.\n\n\"...well, that was fast,\" I said, hopping out of bed and quickly dressing in my t-shirt and sweats.\n\n\"Should I put on clothes, or...\" Jennifer trailed off.\n\n\"Stay here, shouldn't be but a moment,\" I said, grabbing my phone and jogging toward the door. Stopping quickly, I added, \"And stay like you are. I think they'll like the view.\"\n\nJennifer smiled at me sweetly, then nodded, wrapping herself up slightly with a blanket.\n\nI left the bedroom and answered the front door, pleased to find three of my favorite people in the world standing on my front porch.\n\n\"This is gonna be so much fun!\" Brooke King shouted. The tiny, petite blonde's pigtails bounced enthusiastically as she jumped into my arms and gave me a big kiss. Wearing a tight pink t-shirt that showed off her belly button and cut-off jeans that barely covered her ample ass, she was a welcome sight like always.\n\nTalking a mile a minute, she declared, \"We're gonna make her understand that she's, like, totally so bi, it's awesome though for the first time because they don't know what they're getting into, but-\"\n\nA soft, firm hand squeezed Brooke by the shoulder, pulling her away from me.\n\n\"Brooke, go easy. First times aren't always as easy for people, we don't want to scare her off now, do we?\" Alice Talbot proposed in her lovely accent. A beautiful and athletic black girl with an impressive afro of loose curls she kept tied back today, she wore a colorful, comfortable skirt and a pale, loose-fitting top, neither of which did anything to hide her impressive and tight curves. Although new in town, she had acclimated to the more over-sexualized aspects of Regan Hills quite readily.\n\n\"But I don't wanna go easy!\" Brooke pouted.\n\n\"Just have patience, sweetness,\" Alice said, gently stroking Brooke's chin before taking me into her arms for a lingering kiss. \"Feel free to take your excess energy out on me first while we ease her in.\"\n\nBrooke grumbled. \"Fine. If I have to.\"\n\nI kissed Alice again, and said, \"Thanks.\"\n\n\"Oh, the pleasure is all ours, seriously,\" Alice said.\n\nThe last to walk inside was my first girlfriend, Josie Wong. Dressed in her usual dark coat and black, gothic attire, her pale skin, pretty face and glossy black hair had her looking as lovely as ever. Her short, tight skirt hugged her ass, while her barely-there top barely covered her massive tits under her top.\n\n\"You're sure she's ready for this?\" Josie asked, stepping inside and kissing me passionately. I melted into her, the two of us making out in the doorway for a good moment before she stepped inside.\n\n\"Even better,\" I said, breaking the kiss, breathless. \"She's sure she's ready for this.\"\n\nJosie smiled a black-painted smile. \"Yeah, that *is* better. We'll hang here, you better pay for your pizza first.\"\n\n\"Pizza?\" I said, looking confusedly out at the porch at the deeply confused and surprised-looking pizza girl. \"Oh, crap, right!\"\n\n\"We'll hang, but don't take too long, I'm horny!\" Brooke called out from the living room, already taking off her top and freeing her pert A-cup tits. Thankfully, Josie was quick enough to pull her aside, out of view of the pizza girl.\n\nGrabbing the cash I'd left on the table beside the door for this occasion, I looked at the delivery girl with a bit of embarrassment. A petite Latina college student, I recognized her from the few times she'd delivered over the last couple months.\n\n\"Sorry about that,\" I said, looking down at her nametag to remind myself of her name. \"Maggie. Things get a little crazy around here sometimes.\"\n\n\"I can tell,\" she said, handing over the pizzas as I gave her the cash. \"Can I... can I ask you a question?\"\n\n\"Sure,\" I said. \"And keep the change.\"\n\n\"Ah, thanks...\" Maggie said, her smile brightening. \"It's just, every time I've come by here you seem to be surrounded by some combination of different beautiful girls, and I gotta ask... what's your secret?\"\n\nI grinned. \"If I told you, it wouldn't be a secret, would it?\"\n\nShe smiled, nodding. \"Fair enough, fair enough...\"\n\nA brief flash of thought hit me, and briefly I considered inviting her in, but with the four girls I was already managing, that seemed impractical.\n\n\"Well...\" Maggie added, quickly pulling a pen from her pocket and scrawling something on the receipt, \"If you're ever in a place where you don't have company and need some, this is my number.\"\n\nGrinning, I pocketed the receipt. \"Good to know. Thanks.\"\n\nGrinning back, she walked back to her car, giving a little extra sway to her step that seemed intriguing.\n\nPizzas in hand, I turned back to Alice, Brooke and Josie. \"Come on. I'll drop these off in the kitchen, then introduce you to Jennifer.\"\n\n\"Goodie,\" Brooke said, licking her lips.\n\nI led them to the bedroom, watching them as they shed clothing items along the way until the three of them were gloriously naked. They weren't waiting on introducing Jennifer to the joys of girl-girl fucking, I had to give them that.",
        "I knocked softly on my bedroom door and said, \"Jennifer, it's me.\"\n\n\"Okay,\" she said from beyond the door, and carefully, I cracked the door open and looked inside.\n\nJennifer sat on my bed, blanket pulled up to her chest to cover her nakedness. I slipped inside, looking at her appreciatively. \"They're here. I just wanted to make sure, one last time, that this was something you're absolutely certain you want to do. The three of them are some of the nicest, most wonderful people I know, but they're also very, *very* eager, and I want to make sure you know what you're getting into.\"\n\nJennifer bit her lip, and then nodded. \"I'm ready.\"\n\nI grinned. \"Alright. Don't say I didn't warn you.\"\n\nI opened the door fully behind me, allowing first Brooke, then Alice, and finally Josie to enter. Jennifer's eyes got wider at each of their entrances.\n\n\"So,\" Alice said, her confident voice dripping with sexiness. \"What do you think?\"\n\nJennifer looked uncertain for a moment, but soon her mouth curled into a slight smile, and she dropped the blanket, revealing her massive tits to the trio.\n\n\"Oh, this is gonna be sooooooooooo fuuuuuuun!\" Brooke squealed, running toward the bed and practically tackling Jennifer. Alice soon followed her, as much to hold back Brooke as anything else, but she looked ready for fun herself.\n\nJosie looked at me. \"You're doing a helluva thing here. You gonna stick around and join in?\"\n\nI shook my head. \"Nah. Jennifer wants to get a handle on whether she's into girls or not, and I don't think it would be best if I were here for that.\"\n\nJosie agreed, \"Makes sense. We'll do right by her.\"\n\nPulling her close, I kissed Josie deeply. \"I know you will.\"\n\n\"Good,\" Josie smirked. \"Now get the hell out of here.\"\n\n\"I'm getting, I'm getting,\" I replied, exiting my bedroom, looking back one last time toward Jennifer. With Alice and Brooke on either side of her, kissing and touching her, Jennifer briefly looked back at me and mouthed two simple words.\n\n'Thank you.'\n\nNodding at her, I exited the bedroom.\n\n***\n\nI'd received a number of texts during my time with Jennifer, and so, sitting in the kitchen and eating a slice of pepperoni pizza and trying to ignore the moans coming from my bedroom, I scrolled through them.\n\nThe first was from Leah, a response to my earlier message.\n\nLeah: Oh yes, the results have been very pleasurable on this end as well. I am happy you are finding from satisfaction from it, and hoping that you aren't the only one ;)\n\nGrinning, I then opened the next message from Kaitlyn.\n\nKaitlyn: You're welcome. And you know how you can repay me...\n\nAfter the text was a picture of her body, luscious and naked and taken as a selfie where she showed me her lust-filled face. It had been a while since I'd given her any private time, so I hardly blamed her for her eagerness.\n\nI almost texted her back, but then, nodding with decision, I told myself that I'd text her back later.\n\nNo, the next text was one that was a long time coming, and in the spirit of my February plan of helping those in need of some good, sweaty fun, I opened my contacts and sent a text.\n\nMe: Sarah, I think it's finally time I talked to you about your mom.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews, shoot me some feedback or support me, as these really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "high school",
        "slut",
        "big tits",
        "big dick",
        "anal play",
        "toys",
        "virgin",
        "creampie",
        "first time"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-34"
}