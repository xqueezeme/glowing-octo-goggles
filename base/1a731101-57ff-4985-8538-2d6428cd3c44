{
    "title": "The Twelve Tables Ch. 21",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\n*****\n\nOn December twenty-third Peri packed a few last minute things into a tote bag with the help of Madeline, who always seemed willing to help her in anyway needed. The two nannies would accompany them to the farm along with Bridgette who maintained both a nanny role as well as overseeing the kitchen staff.\n\n\"I think that's everything,\" Peri said looking around the room. \n\n\"I'm sure that if you have forgotten anything we will have enough there to make do,\" Madeline smiled.\n\n\"Have you been at the farm over the holidays before?\" Peri asked.\n\n\"No Ma'am, but Heather says it is wonderful. I'm very excited to be able to accompany you,\" the young woman smiled widely.\n\n\"It's a huge celebration, and while my babies maybe a little young for most of the festivities I hope you will get to enjoy as much as you can,\" Peri said warmly. \n\n\"Come on ladies, it's time to get going,\" Dante came into the room to hurry them along.\n\n\"I'm ready,\" Peri smiled and walked toward him. \"Did Josh's plane leave on time?\" she asked. \n\n\"I haven't heard otherwise, so hopefully he will be back tonight,\" Dante took her hand and walked out with her.\n\nThey were the last to leave the house. A skeleton staff would remain for the holidays to keep the big house running and secure. When they arrived at the plane, the babies, nannies and luggage were already on board, and Madeline automatically took her place beside Eden. Peri had hated to pull rank with Bridgette but with all her other duties she couldn't be there for the smallest of her babies the way Madeline could. Peri had insisted she let Madeline and Heather do their jobs, and that Bridgette supervised the nannies along with the household staff which she wasn't doing effectively at that time. The change meant that Madeline could care for the elf-like Eden and assist Heather with her two brothers. \n\nHeather though being older and having been with the tables for many years knew the value of Donati sons and was content when the shift in power came to the nursery. She eagerly took over as Bridgette stepped up to run the household staff not leaving as much time to attend the nursery. Bridgette had become even busier once Joshua employed extra staff to assist with the constant stream of visitors recently. Bridgette still favoured Eden above the boys but rarely showed it now, being content to help as needed. She was glad to be accompanying the family back to the farm so she could prove her worth to Antonia Donati, who had been sceptical of her appointment despite Andie's assurance that she would do well with Peri.\n\nShe watched as Dante led Peri into the plane and ensured her secure seating before taking his seat beside her. She didn't pretend to understand the relationship between Peri and the two brothers. She knew she was married to Josh, but it was as if little by little Dante had taken on that role as well. He shared the marital bed with the couple and doted on the children as if they were his own, particularly Blaze who had been named for his deceased brother. She wished for the times when she had first come to Peri's service where they had bonded, and she could ask those awkward questions without feeling like she was overstepping to much.\n\nThe babies first experience with air travel was not as successful as they had hoped. The take off had caused them all to cry as they lay strapped in the capsules. It was only as the flight levelled out that they could be picked up and calmed. Dante immediately claimed Blaze and brought him back to his mother. Peri held each of her children during the forty-five-minute flight as always being careful not to favour one over the others. \n\nThe landing was equally distressing for them and even though they were calmed easily, Peri went with them as they were shown to the nursery in the new cottage that had been purpose-built for her family. Antonia had accompanied them and after cuddling each of her grandchildren had spoken to Dante quietly as Peri fed them. \n\n\"I'd like you to stay here until I return please,\" Dante said solicitously, but she heard the tone in his voice and knew instantly that this was more of a command than a request. \n\n\"I'll stay,\" she said quietly so as not to disturb Cruze, who was feeding contently. \n\n\"This counts as the lunchtime feeding,\" he said to ensure she had no illusions about spending her days in the nursery with the babies no matter if they were distressed about their new surroundings. The nannies would bet there to comfort them. \"I'll be back in half an hour,\" he said checking his watch and nodding. Then he left abruptly leaving her wondering what was going on with him.\n\nIt was barely five minutes later when Antonia returned and ordered the nannies out of the nursery. She picked up Eden from her cot and sat opposite Peri, who now nursed both of her sons. They'd talked every day on the phone about what her life would entail now and the expectations that would be placed on her once the announcement was made formally.\n\n\"Tomorrow when the other families arrive, you will need to prove you are everything we expect from the mother,\" she said. \"You will need to take Emily and Carmen in hand over these two days.\" She smiled down at the bundle in her arms. \"They will have the most resistance to your new role and have influence over their husbands. Well, Emily does, of that I am sure. Carmen only thinks she does.\" Antonia gave a small laugh. \"Romeo sees his marriage as a business partnership; he chose her specifically for the qualities he thought the mother of the table would need.\"\n\n\"I understand though I am not sure they will let me take on the younger matriarch role,\" Peri said softly dreading the trial she had been given. Emily and Carmen had always shared that standing with the other wives it seemed and she would have happily let them until now. She hadn't told Josh or Dante that she was under as much supervision as they were at this time.\n\n\"Emily will be easy because you have triplets. Talk to her about the lengths you go to feed each of them and make them feel special as individuals. Having triplets is a miracle don't play that down for one second. Revel in it and mention it often in terms of how well you are coping and how little the nannies have to do. Even if that isn't true all of the time, use it and own it,\" Antonia advised. \"You are a wife and mother and still in touch with the team you built at work; that deserves respect and will even make Carmen mellow toward you. She never had a career separate from her family.\"\n\nI understand,\" Peri said slowly. \"I have organised to sing with both Josh and Dante and Josh will do an extra one with me.\" They had spoken about Carmen's love of singing with Josh and Antonia had suggested that she to deprive her of that was a way to pull rank, if only slightly.\n\n\"It would be better if you did two with Joshua, but one will do, if you do the other with both of them,\" Antonia agreed. \"Keep her at arm's length, don't let her give you advice about the babies. Remind her how special triplets are and that you are handling everything just fine.\"\n\n\"Are you sure about Bianca and Rosanna?\" Peri asked.\n\n\"Rosanna has always known that Angelo was not destined for leadership and honestly once she finds out what his seat entails and the power that comes with it I think she will be one of your biggest supporters. I have hinted as much to her since the arrival of the triplets. Seek her out if you need help, no one is threatened by her standing in the family, but she is a strong and intelligent woman. A sister, that will be good to have on your side.\"\n\n\"I am glad there will be someone on my side. I feel like I am entering a tank of sharks or something,\" Peri laughed nervously. \"Bianca?\" she asked.\n\n\"Jules has been told already,\" she said thoughtfully. \"It is part of his and Bianca's trial that they disclose this information to no one not even Romey. It will be a hard trial for him, but he will have Joshua and Dante to confide in once he is here unless he chooses Romey over Joshua and then there will be a challenge. I believe once she knows the high life in Prague is in her future Bianca will support you above everyone else, even Carmen. A challenge could see that future taken away.\"\n\n\"How will I know what she plans to do?\" Peri asked.\n\n\"Secrets are so hard to keep. I imagine she will seek you out and talk to you just to be able to talk to someone. If she doesn't then you know, that she plans to challenge you.\" Antonia said smiling down at the baby in her lap who gurgled happily. \"You make the most beautiful babies,\" she said wistfully. \"You will need all the support you can get over the next decade or more so make these holidays count. They will be the basis of your power, not only here but within all twelve of the tables. Carmen, Bianca, Emily, Rosanna and even I all came from another table and as the power shifts they will look to us for information.\"\n\n\"As if this all wasn't daunting enough,\" Peri took a deep breath. \"I love him that much,\" she said softly. \"I will be all that you ask me to be and more because it's him that's asking in reality.\"\n\n\"And Dante?\" she asked knowing that Peri had spoken of Josh.\n\n\"I have always loved him in some way, but I am still learning to love him in the way he needs me to,\" she admitted. \"We never had that courtship,\" she tried to explain. \"He came into my life when I was already in love with Josh, so it's different.\" She knew that honesty was always the best policy with Antonia, who had a way of seeing into her heart and mind.\n\n\"I felt the same way,\" Antonia admitted. \"Christo was so very different to Joseph, softer somehow. Others will see only that angry, dark exterior he has worn for so long but I think we both know that he is a man who loves deeply, which is perhaps why he became so dark after Celeste betrayed him. Joshua, on the other hand, has a demanding persona but is seen as fair and ultimately good and kind but has a darker, unemotional side that can make hard decisions regardless of the cost and stick with them. I think they will balance each other out, much like my two loves. I have the feeling Dante and Josh have more similarities than most people realise as well. Take the time to fall in love with Dante. There is enough room in your heart for both of them. Trust me on that.\"\n\nPeri thought about this without saying anything. She did love Dante. He was so similar to Josh in so many ways, but she could see what Antonia was saying about that hidden soft side. Joshua had it too, she knew. She considered if Antonia knew who had fathered each of her children despite the name on the birth certificate. \n\n\"Could you call Heather and Madeline back in please?\" Peri asked knowing Cruze well and truly asleep on the twin feeding pillow that surrounded her and not wanting to ask the question about paternity. The boys were changed and put to bed while Eden was given a bottle.\n\n\"I will do what is needed,\" Peri assured Antonia as they left the nursery and walked into the living room. \"I do love them both, and I won't let either of them down. When the table spoke to me, I promised to do whatever Josh asked of me. I realise now that he won't even know about some of the things I must do, and that worries me that I won't be able to pre-empt those necessities, perhaps with Dante...\" \n\n\"That's why you have the Oracle,\" Antonia smiled as she saw Peri making the connections. \"Like Christo, Dante is intuitive. Even if it's women's business talk to him about it. You may find he has better insight than anyone would give him credit for. He is the oracle for a reason, and you need to trust him in all areas of your life.\"\n\n*****\n\nJoshua stepped off the plane in Canberra and walked to the waiting car. He and his father had told Dino of his position in the Donati table on the flight down, and he had embraced the role almost joyously. It was what both he and Lucia had wanted and talked about often. Joseph took a car to the Battaglia stronghold to speak to the commander about the appointment and Josh got into a car with Dino bound for the Canberra women's prison. \n\nDino had the family connections to get them in and out without any record of their visit, and Josh was grateful. What he had to do didn't sit well with him, and he wanted to give Nik every chance to redeem herself.\n\n\"Well it's about fucking time you bothered to come,\" Nik spat as she was led into the small room where Josh waited. \"What's he doing here,\" she indicated Dino, who stood in a corner listening but not interacting at all.\n\n\"Considering you almost killed my wife and the mother of my children, you should be grateful I am here at all,\" Josh said smoothly watching the reaction on her face.\n\n\"You married that bitch after what she did to me?\" Nik was enraged.\n\n\"What did she do to you exactly?\" Josh asked. \n\n\"I'm in here aren't I? Nik said as if he was stupid. \n\n\"After you almost killed her,\" Josh said calmly. \"What exactly did she do to you to deserve that?\"\n\n\"She tried to take your future. You could have been great. You could have had power and wealth beyond your wildest dreams. We could have had everything we ever wanted,\" she said with certainty. \"That bitch ruined it all and took that away now you will be just one of the forgotten Donati swept away into the dust while bloody Ben makes a fucking mess of everything.\"\n\n\"I'm the new chair,\" he said quietly in the face of her tirade and watched as she stopped and looked at him as if he had grown two heads. \"The only reason I was named new chair is because I married Peri, no thanks to you.\" Nik looked up to where the cameras watched them and back at Josh nervously.\n\n\"She's the new mother?\" Nik asked licking her lips.\n\n\"We had triplets three months ago would you like to see?\" he asked seeing her change in mood and thinking there might be a chance she could still care about him and be happy for him on some level. He placed his phone on the table turning it toward her and showing a photo of the three babies bundled together on Peri's lap.\n\n\"No!\" she screeched. \"No, it's not true. None of it is true! You need me, Joshua! You are nothing without me! No one ever cared about you. It was always me they loved!\" Nik was incensed.\n\n\"Everyone loved me Nik,\" Josh shook his head. \"It was you that always needed me to run interference. That's why no one has come in all these months. No one remembers you fondly now, not even me,\" he admitted sadly. \n\n\"They all adored me. You're living out some fantasy here. They called you Wah-wah because you were whiney little shit that Mama made them look after,\" she said smugly.\n\n\"The only brother who ever worried about you died a few months ago. Do you even care that Lio is dead?\" he asked his temper getting the better of him.\n\n\"Lio's dead?'\" Nik seemed to regain some semblance of her former self for the briefest of moments. \"Fucking Matteo I knew he wouldn't be able to keep it together once Papa sent me down here!\"\n\nJosh couldn't keep the moment of surprise from his face. He straightened his expression just as quickly, but it wasn't lost on Nik who laughed maniacally.\n\n\"Hah, they didn't tell you did they?\" She sneered. \"Well, I'm as good as dead now anyway. If you don't find a way to kill me the Suebi will.\" She saw Josh narrow his eyes and was at least glad he knew about the Suebi now.\n\n\"So tell me, you know you want to rub it in,\" Josh challenged her.\n\n\"Oh no, my darling brother. I'll leave that as a surprise for you. I'm sad about Lio though. I guess that was my fault too. Matteo was probably an obvious ally to the Suebi and Lio was so in love he listened to the propaganda about our family and eventually tried to break it off with Matteo. Love does strange things to people. But I guess you know that if you married that stupid fat bitch.\"\n\nJosh sat silently letting her speak. He knew she wasn't deranged. He knew she always had a plan, and he wanted to know what her current plan was. He was curious now about what had happened to Lio. As far as he was concerned, it was the freak car accident he had been told it was.\n\n\"I guess they found the evidence amongst my secret stash. Tell me how long did it take them to find it?\" She asked seriously as if it was a matter of honour for her to know. \"I doubt you even know what I am talking about, do you? The Suebi don't discriminate against women; did you know that? You don't have to be barefoot and pregnant for the best years of your life to be valuable.\"\n\nJosh remained silent. In the last month, he had discovered that the twelve tables were not the only organisation involved in the shadowy world of political intrigue. There were as many as six although only the Suebi's worldwide network matched their own and seemingly always at odds an enmity had grown between them. The Suebi often attacked the younger more vulnerable members of the family and while their influence was barely felt in this far-flung corner or the world, it was obvious that they were becoming more active. Nik's hatred of the family laws had made her the perfect target.\n\nAt first impression, it seemed that Nik was telling him she had become part of the Suebi and had recruited Matteo. No wonder Lio had been so mad at her in the months before she was sent to the Battaglia. He realised that his visit alone once word got out of the changing of the chairs was enough to make her a liability to the Suebi. His analytical mind wondered why his father had let him come knowing the visit would make her even more of a liability to the Suebi.\n\n\"So you recruited Matteo and got Lio Killed?\" Josh asked sadly.\n\n\"Oh grow up Josh, he was gay, the family would have ended him regardless of anything I did,\" she rolled her eyes at him. \"I didn't do anything wrong.\"\n\n\"Papa knew he was gay. He didn't care just like I don't care. You killed him, Nik. You killed the one brother who, aside from me, always listened to your excuses and forgave you,\" Josh dropped his head to his hands not having expected this revelation.\n\n\"I could have forgiven you almost anything. I even tried if not to forgive then to understand what you did to Peri. But I can't forgive this. You killed Lio with your stupid schemes. LIO!\" his voice was anguished, and she blanched against his overt anger. \"You should hope the Suebi come for you because if you ever get out, you don't want to face D.'s justice. No family will take you in now, so get comfortable because I was your last hope of ever getting out of here alive.\"\n\n\"You're so full of shit, my year of purgatory is almost up,\" she said once again rolling her eyes.\n\n\"You can't honestly believe that?\" Josh looked at his sister incredulously.\n\n\"Look I understand that the Battaglia were pissed about Giorgio but seriously, he deserved it. So I'll do the year then Papa will get me out, and life can go back to normal,\" she said as if it all made sense.\n\n\"Nik listen to the words I am saying. I am the new chair, Papa can't help anyone now let alone get you out and even if he did, no family would take you after you admitted to having ties to the Suebi and recruiting Matteo. My wife and the mother of my children is terrified of you. In what world are you ever getting out of here?\" He spoke slowly making sure she heard every word. \"Papa has no power to help you now. I do. You no longer have any power over me. As of this moment, you are dead to me.\"\n\n\"Fuck you,\" she yelled. \"We shared a womb. We shared a lifetime. You need me!\" she said confidently. \"You were always the weak one, don't pretend you can do anything without me.\" \n\n\"It's strange but since Lio's death, D. and I have bonded. We are closer than you, and I ever were. When we lost our twin, we gained each other. You've been replaced by someone who deserves my love and loyalty.\" Josh had become unemotional now. \"We may have shared a womb but every moment after that you have taken everything from me and given nothing back. You are an embarrassment to the family and as with all detestable figures, you will be written out of the family history. When you die, you will not be a Donati. You will be Veronica Maris, with no known living relatives.\" He pronounced her sentence in a monotone devoid of any emotion. ",
        "\"You wouldn't dare!\" she raged. \"I will kill you!\"\n\n\"This is the point where I step in,\" Dino stepped forward speaking quietly. \"You don't seem to understand Miss Maris that the world has changed profoundly in the last year. Everything you knew about the family is gone. Without Joshua, you have no hope of ever feeling freedom again. In threatening him, you threaten the table itself, and that is where I become involved.\" He let his dislike for his sister-in-law and the way she had treated her siblings over the last few years colour his voice.\n\n\"You're not part of this family,\" she sneered at him.\n\n\"I am now part of the Donati table. As I said life as you knew it has gone. The chair came here of his own volition to give you a chance at life, but you squandered it. You will live out your days as the criminal you are and be buried as a pauper. You have no one to blame but yourself for this outcome. Your parents may continue to support you through the commissary, but I believe your confession about Lio may persuade them to allow you to languish here with nothing to rely on but your sweat and tears.\"\n\n\"You lie,\" she accused. \"I am a Donati. Donati's go to prison!\"\n\n\"Yet you did Miss Maris,\" Dino chuckled. \"Perhaps it is fortunate you refused to claim the family name. This way Joshua is spared the familial embarrassment of you being here for the rest of your life.\"\n\nJosh stood and made his way to the door without another word leaving Dino to bring his point home. As he stood and watched one hand on the door, he saw the rage on his sister's face. He knew if she could kill Dino at that moment, she would.\n\n\"You never cultivated friends who would help you now. You are of no value to the Suebi now. The one member of your family who may have fought for you has just pronounced you dead. You can rage at me Veronica but it is as ineffective as beating your fists against the bars of your cell,\" Dino said coldly then banged on the wall to alert the guard they were finished. \"No one else will come to save you now Miss Maris. Have a nice life.\" \n\n\"I didn't do anything wrong, and you know it,\" she accused sounding somehow smaller and scared as the guard opened the door. Josh turned to look at her and saw the small play of her lips as he did and knew it was just a ploy to gain his sympathy and undo some of the damage.\n\n\"Goodbye Nik,\" Josh said sadly and left the room. They could hear her explode as the door closed, and it took a moment for Josh to pull himself together before he walked away from his sister for good.\n\n*****\n\n\"Ready to go?\" Dante asked. He returned as Antonia left the cottage.\n\n\"I am, where are we going?\" she asked with a light laugh.\n\n\"It occurred to me, that although I have kissed, licked, sucked, fucked, bound and used you, to my heart's delight, that we have never been on a real date without a chaperone,\" he said with a chuckle.\n\n\"I hadn't thought about it, but I guess you're right,\" Peri laughed lightly with him.\n\n\"Look,\" he said stepping forward toward her and lowering his voice. \"I love Josh as much as you do, but we haven't had the chance to be totally alone since, well since we were pushed together,\" he said. \"I'm not going to pretend I didn't want it, and I don't want you to think I am trying to undermine what you and Josh have, but I need more than just being the third wheel. I want us to have a first date story and moments that belong to us separate from Josh. I want us to have our own memories.\"\n\n\"I'd like that,\" Peri smiled sensing his nervousness and grateful for his honesty. She had taken Antonia's words to heart and wanted to know Dante better and talk to him about what was going on in her life. She reached a hand up to his cheek and kissed him.\n\nDante smiled into the kiss and guided her out to an SUV he had borrowed from Carlo. He drove out into the countryside and along the river in the opposite direction from the swimming hole she had first been to with Josh. They stopped beside a small rock ledge that overlooked a small fall of water and was shrouded by trees. \n\nHe helped her from the car and walked her through the bushes. A picnic had been set up for them with a thick blanket and pillows under the seclusion of low hanging trees. Dante smiled and took her in his arms, kissing her softly. \n\n\"When did you have time to do all this,\" she said in quiet wonder.\n\n\"You'd be amazed at what I can do when properly motivated,\" he grinned and kissed her again more deeply but without the urgency she usually felt from him. He led her to the blanket, and they sat together.\n\n\"This is beautiful,\" she said softly leaning her head back to look at the canopy above them. \n\n\"It is,\" he agreed. \"I wanted to share this with you. I want to share a lot of things with you,\" he said softly. \"I had been dark and bitter for a while when I first met you at the family lunch,\" he began and started to tell her his story of falling in love with Celeste and losing everything to greed and avarice. He finished the story by telling her that the first day they met had been the first time he had genuinely laughed since his heart had been broken. He included her story about having stumpy legs and the magic of boots as being endearing. \n\n\"I think I fell in love with you that day. I didn't realise it at the time, but I think Lio did,\" he smiled sadly. \"When you came to work with us, he told me not to get too involved in your work. I watched you, though, and I saw how you paid attention to detail and knew exactly what you were doing but let others take credit for your work or tell you to fix things that never needed fixing. That was when I admitted it to him and myself. I've always loved you.\" \n\n\"I've cared for you for a long time too. It wasn't love,\" she admitted. \"I was so wound up in Josh there wasn't room for anyone else in that way. I always knew you were there though and that you cared about me, I relied on you and loved you even though I wasn't in love if that makes any sense,\" she admitted.\n\n\"I did, and I do. If we hadn't been pushed together with Josh I would still be caring for you as I always did,\" he said lifting his hand to stroke her cheek. \"You and Josh have a history and memories I can't and don't want to intrude on or compete with, but I want to make memories with you too,\" He admitted. \"Josh has made it clear that you married him, he is your husband, and I have struggled with where that leaves me.\" He shook his head, \"Don't misunderstand I love the relationship the three of us have. Josh could be my twin with the closeness of the bond we share now and we both love you and share you with the same passion. I would never betray him or do anything to harm what we have with him.\" He seemed to be sorting out what he wanted to say in his head as he spoke.\n\n\"I understand,\" she said softly. \"I have been trying to sort it out in my mind too.\" She lay back on the pillow and looked up at the canopy. She told him about the early days with Josh covering the same time frame as his did up until now. She spoke about how Andie had treated her before she had met Charles. How Sabrina had made her feel and how strong, beautiful women still intimidated her.\n\n\"That's not how I see you, at all,\" he frowned at her. \"I guess because I never had all the pieces to your puzzle I don't see the causes of your insecurities, just that you have them, though you rarely let them show.\"\n\n\"Dante, I have a trial during this holiday too,\" she said softly. \"And I'm a little scared that I will let you and Josh down,\" her voice fell to almost a whisper.\n\n\"Tell me,\" he urged. \"It won't go past me not even to Josh unless you decide to tell him.\" He leant up on one arm looking down at her intensely. \n\nPeri looked up at him and saw the care and concern in his face. Antonia had advised her to trust his intuition so she told him about her discussion with his mother about needing to assert herself as the leader of the women in the family.\n\n\"Mama is right about everything as usual except,\" he paused thoughtfully, \"I don't think withdrawing Josh's singing with Carmen is the way to go either. I think it would be better to play her at her own game. We will need Josh's help though to pull it off and you will need to believe you are every bit as good as Josh and I have been telling you that you are.\"\n\n\"I don't want Josh to worry, he will try and fix it for me instead of helping me to work it out myself,\" she looked up at him the anxiety she felt clear in her voice.\n\n\"Yeah, I can see that,\" Dante nodded. \"I still don't think limiting her singing with Josh is the best way to go. It would show how strong your influence is but it could rub not only Carmen but Romey the wrong way and he will struggle enough with what is coming as it is. You think Jules will know already?\"\n\n\"Antonia thinks so. I guess they needed time to pack up their house for the move overseas,\" Peri said.\n\n\"That might work in our favour. If you can do that and win over the other women, then you will have won half the battle and without their support, Carmen may not be as pushy where you are concerned. We've got twenty-four hours to come up with a better plan but you can trust me,\" he said earnestly.\n\n\"I do silly, that's why I told you,\" she smiled, and he bent his head to kiss her. His hand travelling down over her body.\n\n\"We should eat before I get carried away,\" he said abruptly sitting up to open the large picnic basket. \n\n\"We've both spoken to Josh but not each other about this threesome thing,\" Peri said tentatively as she watched him unpack a huge amount of food and drink.\n\n\"I guess that's what I am trying to do today.\" Dante looked at her.\n\n\"I always ask Antonia of questions when I talk to Josh. It's my way of sorting thinks out in my mind and trying to understand them,\" she explained even though she knew she didn't have to. \"I've asked Josh all the big questions I need to know from him, but it brought up a lot more questions about how you feel about the things that I have been worried about,\" she explained further.\n\n\"Ask away,\" Dante said picking up a piece of chicken and biting into it.\n\n\"I'm married to Josh, but you're like a husband, does it bother you? I mean that there is nothing formal between us or you and Josh where the relationship is concerned,\" she knew she wasn't explaining what she meant properly.\n\n\"I always want more but if you love me that's honestly all I need,\" he said looking at her so she could see the truth of his words.\n\n\"The babies? Do you love them too?\" she asked.\n\n\"You know I do,\" he frowned at her.\n\n\"Josh pointed out that if things continue the way they are that either of you could be the father of my next child, and it wouldn't matter to him because he would still be listed as the father on their birth certificate so that they could grow up to populate the next table. I wonder if that's fair to you,\" she said quietly.\n\n\"It's the way it is and If I am lucky it will be my children that populate the next table alongside Cruze and Blaze,\" Dante said. \"In a perfect world I would have met you first,\" Dante gave a soft smile. \"I didn't though, and now all your questions can be answered simply,\" he took her hand and looked into her eyes. \"If you love me, truly, madly, deeply love me and by that I mean trust and confide in me as you have today, then it doesn't matter whose name is on a piece a paper because I love you that much.\" He used the words he had heard her use to describe her actions recently.\n\nPeri smiled widely and began to not only accept that this was the way it was but also let herself feel the genuine love she had for this man. \"I love you,\" she said softly. \"More than I have admitted even to myself.\"-\n\n\"I know,\" he said. \"I see it every time you submit to me in the playroom. You let your guard down once you have that necklace on as if it gives you permission to love me,\" he said sadly. \"I want more, though. I want the look you give me there to be in your eyes always not just when you think you have Josh's permission. I know what a control freak he is, but I can be just as demanding.\"\n\nShe looked at him considering his words. It was true she realised that it was only when they were alone that she truly let her guard down. They may not know the details, but the family all knew that Dante chose to live with them both in the country and the city. A strange thought occurred to her then, and she frowned.\n\n\"Talk to me,\" Dante reached out a hand to stroke her cheek.\n\n\"You're right I have kept you at arm's length in front of everyone else because no one had been told yet that the changing of the seats would start but they would have to be pretty blind not to realise what was happening wouldn't they?\" She said still mulling it over. \"I mean they know about the renovations to your apartments don't they?\"\n\n\"Our apartments,\" he corrected her. \"Our home. You have to stop separating me from you and Josh,\" he said sternly.\n\n\"I'm sorry,\" she looked away guiltily. She could have made the excuses that this was still new and felt secretive because not everyone knew what was happening or why it was happening yet but she didn't instead she sighed and forced herself to look up at him. \"I'll try harder to show you how much I love you.\"\n\n\"That's all I want,\" Dante said softly leaning down and kissing her deeply. He was pleasantly surprised that she hadn't made excuses but had accepted the rebuke for what it was. \"You're right my brothers probably do have a good idea of what is happening between the three of us. We have a different view on these types of relationships, though, and I don't think their egos have allowed them to contemplate that the baby brother, let alone the volatile bastard of the family could lead the table.\"\n\n\"You're a volatile bastard?\" Peri laughed thinking he was joking.\n\n\"After Celeste left and what she did to our child, I hated the world and everyone in it. Especially, the family. Then you showed up at one of those boring lunches like a ray of sunshine and made me laugh more than I had in years,\" he smiled gently. \"I heard Maryanne tell you that she knew I liked you and that I didn't like anyone, not even her,\" he laughed. \"I'm glad you never knew that other side of me, but it's there.\"\n\n\"It must have been different for you growing up here than it was for Josh,\" Peri said as she picked at the food. \"You would have been older when Christo died and would have seen the three of them together. Was it like growing up with two fathers?\"\n\n\"In some ways I suppose. I mean we always knew who Papa was but Christo held the same authority and showed us the same love if not more so,\" Dante admitted. \"We called him Popo but it's hard to separate him from Papa in my mind; there was always two. One or both found the time every day to teach us something or play with us. We would have epic soccer matches with the five of us against the two of them,\" he smiled at the memory. \"Neither favoured us more than the other; it wasn't like they split us up by who had fathered who, we were a family, and it wasn't until I went to boarding school that I realised that not everyone had two fathers. Lio asked Mama once who our real father was. She asked him why it mattered and that she would hate to see him treat either one of them differently.\"\n\n\"I suspect she's the only one who would know but maybe not,\" Peri said. \"With things the way they are for us, I can't imagine that I will know for sure which of you will father my next baby. I guess we'll cross that bridge when we get to it.\"\n\n\"In the end, it doesn't matter. We are all siblings and have the same Mama, and she is the most important person in our family. She's the one who binds us all together, just as you will be,\" he smiled and curling his hand around her neck pulled her into a tender kiss. \"Mama holds all of the Donati's together,\" he looked at her then as if a lightbulb went off in his head. \n\n\"What?\" she frowned not understanding why he suddenly looked at her that way. \n\n\"I know how you will bring Carmen around,\" he smiled. \"You have something she doesn't, and it's a crucial element to any Mother of the Donati's,\" he laughed making her look at him through narrowed eyes. \"You know the family better than anyone.\"\n\n\"I doubt that's true,\" she shook her head.\n\n\"You know every member of the current table living or dead,\" he mused and waited for her to nod. \"I would bet you know their wives and children's names too,\" he added once again watching her nod. \"At Maryanne's wedding, I saw you sitting with different groups of women, Finola and Margarite as well as few others. I imagine you even bothered to find out how each of the team you have working for you is related to the family.\"\n\n\"Well yes but that's been my job, to know the family and help compile the history. The immediate cousins are fine but beyond that, I struggle to work out the links,\" she admitted.\n\n\"Just for the fun of it name all my nieces and nephews for me,\" he grinned and listened as she started with Angelo's brood and worked her way through Ben, Romey and Jules families.\n\n\"Mine aren't your nieces and nephews anymore, they're our children,\" she said quietly.\n\n\"That is correct,\" he kissed her again laying her back down against the pillows and lying beside her. \"This is our family, every last one of them and you know them. You've taken the time to know them so when you see them, you can call them by name. Carmen can't do that if you try and engage her in a conversation about Finola, she wouldn't know who you were talking about I bet. She's been so busy trying to dominate Emily and Bianca, who she sees as real rivals she forgot about the rest of the clan.\"\n\nPeri finally understood what he was saying. She did know quite a few of the cousin's now enough to talk to and have common ground. More so with the women but still it was a start. She smiled and rolled to her side facing him. \n\n\"They chose the right man to be the Oracle,\" she placed her hand on his cheek. \"You and Josh are going to do amazing things together including creating a wonderful family of our own,\" she said intently and leant forward to kiss him. \"I wouldn't normally sleep with someone on the first date but in your case, I could make an exception,\" she giggled and began fumbling with the button on his jeans.\n\n\"It's that sassy attitude that Josh has been talking about correcting, but I love it,\" he grinned and smacked her ass. \"For more reasons than being able to spank you for it.\" He began to unbutton her blouse as he kissed her again. \"Another thing Josh and I disagree on,\" he said peeling back the triangle of her maternity bra to reveal her breast while keeping it framed within the structure of the garment. He lowered his head to her breast and helped her to remove his jeans. \n\nPeri gasped as she felt his hand slide up her thigh and under her skirt, and she wrapped her hand around his cock and stroked it. Once she'd got over her initial discomfort about Dante's breast milk fetish she found herself enjoying the sensations it gave her and the rush of endorphins that seemed to flow through her body. Her breath quickly became ragged as he rolled her to her back pressing up against her side as he gave both nipples equal attention and ensured she wouldn't leak the precious fluid. His fingers worked their way into her, as his thumb settled over her clit and she arched her back climbing to a high that broke over her making her cry out into the empty countryside. \n\nHer hand gripped his cock tightly making him grimace as she came. Rolling her still shaking body to her tummy he pulled her hips up and pushed her legs beneath her giving her no time to reorientate herself he smacked her ass and thrust into her. He fucked her brutally leaning over her body to grab her hanging tits and crush them in his large hands. Her cries of pain and pleasure sung out and he groaned loudly feeling his cum pump into her leaving him feeling exhilarated. He collapsed back onto the blanket and guided the still quivering Peri down his body to use her wonderful mouth on his cock.",
        "In the last few days since showing them the refurbished apartments he and Josh had used her each night for hours at a time. She was every bit the pain slut that Josh had told him she was and more. She was adventurous and open-minded about every kink they had used with her, and although they hadn't gone to extremes with any of it, he was yet to find the limits of her willingness to endure and enjoy erotic pain for them.\n\nHe moaned, closing his eyes feeling her talented mouth work on him and his semi erect cock begin to stiffen again. She wasn't masochistic like some of the pain sluts he had known, but she was strong enough to take what they gave her and ask for more. To the outside world, her beauty was not that of popular culture, she was curvaceous and did not have the height to support it like her mother, she appeared shy at first and seemed insecure but over the last year, he had found none of those things were entirely true.\n\nShe was more than beautiful to him, intelligent and strong-minded. She was loyal, good and kind. She submitted during sex not because she was weak but because she was strong enough to know the bliss that came with that exchange of power. He had been overjoyed when he had seen the playroom Josh had built. He hadn't been sure until that moment that Josh's controlling nature had extended to sexual dominance. He had pictured them being a traditional couple like his other brothers who he knew had a Kept in their employ for anything beyond the traditional marital bed.\n\nHe ran his fingers through Peri's hair as she sucked his cock so beautifully. He understood now why Josh had so easily dismissed Dante's off to share his Kept just after the triplets were born. Being with a Kept paled in comparison to being with the woman you loved in the way you needed to love her. He leant up on an elbow watching her for a few minutes longer then pulled her head off his cock by the hair. Her open mouth leaving strands of saliva hanging in the air between her lips and his raging cock.\n\n\"The basket, drag it closer,\" he commanded not releasing his grip on her hair and enjoying her whimpers as it pulled tighter as she moved to comply. She dragged it forward and to his side where he could easily reach it. \"Perfect,\" he gave her a toothy smile. \"You're so fucking amazing,\" he said sitting up and pulling her forward slightly to kiss her and then pushing her head back down to his cock.\n\nPeri felt him remove her shirt and bra but aside of lifting her arms when necessary did not move from her place between his legs. She felt rather than saw him pull her arms behind her, and the tight leather cuffs that wrapped around her arms just above her elbows pushing her chest out as her shoulders were drawn back. She kept her eyes down only looking up occasionally through her dark lashes as he moved above her to undo her skirt and pull it off to toss them with the rest of her clothes beside the damp panties that had been discarded long ago.\n\nDante rearranged the pillows behind him and reclined back making her gurgle loudly as he bucked his hips up into her mouth and gripped her hair holding her down. After long moments he pulled her off his cock and dragged her forward helping her to settle over his cock. He moaned as he felt the slick velvet walls of her pussy slowly envelop him.\n\n\"Oh fuck yeah,\" he murmured picking up a crop from where it lay beside him. He flicked the flat leather end at her nipple, and she squealed tensing and bucking slightly. Dante felt all of it and groaned. \"Now for the riding lesson I told Josh I would give you this afternoon,\" he said his voice thick with arousal. He flicked the end of the crop at her nipples several more times before landing it hard across both breasts leaving a long red welt. \n\nPeri cried out, her eyes misting with the tears she knew would come, as this so called riding lesson continued. A small part of her mind registered that he and Josh had discussed this tryst, and that Josh had approved of it. \n\n\"Giddyup,\" Dante commanded and landed the crop again making her shudder and cry out as she began to lift and lower herself slowly on and off his cock. He went back to flicking at her long hard nipples mesmerised by the bounce of her breasts and how beautiful they looked dancing unfettered before his eyes. The crop landed again, and tears fell to her cheeks as she dropped onto him hard and ground into him crying out. \n\nHe dropped the crop then and reached up grabbing both of her breasts and forcing her to lean forward as he moved to catch a nipple between his teeth. \"Ride,\" he growled as he bit into her and slapped her ass with the now free hand. \n\nWithout her arms to balance her, Peri felt it was almost impossible to fuck him in this position. Then she felt his hand steady her hip, and he began to move from below her bucking up into her and fucking her as his teeth tortured her nipples. Eventually, he pushed her back up to a sitting position and settled both his hands on her hips. The orgasm she felt building she knew would be earth shattering, and as he growled at her to ride again, she began moving up and down as hard and fast as she could.\n\nSatisfied that she was riding as best she could without his help, he moved his hands back to her breasts lashing out and slapping them as the bounced with her movements. \"Fuck!\" he roared feeling her cum and her cunt milk at his cock with her climax. She collapsed on top of him, and he wrapped his arms around her. Finally having her to himself was worth the wait and he was reluctant to move or release her from the cuffs. They had plenty of time before they had to be back and his mother knew where they were and why, so she wouldn't send anyone to look for them.\n\nDante held her like that for a long time his cock softening and sliding from her way before he was ready to release her from his arms and the restraints. \n\n\"I could stay here with you like this forever,\" he said quietly looking into her tear stained face. He heard her sigh contentedly and kissed any words she might have said in response away. When he let her catch her breath again, she looked at him with a soft smile.\n\n\"If only we could but we have to go back. I know what I have to do now, and I need time. I promise I will make it up to you,\" she leant forward to kiss him again. \"You know I wouldn't ask if it wasn't important.\"\n\n*****\n\n\"Papa. Lio,\" Josh said. \"It wasn't a freak accident.\" \n\n\"I know,\" Joseph nodded. \"With Nik out of the picture the Suebi lost their edge in whatever they were planning so they went to the only other person they knew had influence in the family, Matteo. It may not have been by her hand, but she is to blame for what happened.\"\n\n\"I need to know,\" Josh said. \n\n\"We knew Nik had developed a taste for party drugs and the culture that came with it, but she was a good actress. She was always careful to cover what she was doing by being with a large group of people who partied hard. We never saw the signs of most of what she was doing, and you were the only one who ever got close enough to see what we couldn't. You never seemed to notice anything amiss that we could tell,\" Joseph explained.\n\n\"Nothing was amiss. Ben didn't see it either,\" Josh defended himself. \"They were close, Ben and Pete always made sure she and Maryanne were okay.\"\n\n\"My point exactly, she was very good at covering up the web of lies she wove until it all unravelled when you met Peri. She could manipulate and everyone including you until that moment. After we had sent her to the Battaglia we investigated properly and with the information we found along with what her servant knew, CJ found viruses in most of our networked computers including Ben's. Most of your older sibling's phones had been tampered with, and the list goes on,\" he sighed.\n\n\"She'd recruited Matteo through the drugs and had blackmailed him after that, knowing Lio had access to all the family records. Nik couldn't understand the power of love, though, and as the guilt ate away at him once Nik was gone, Matteo eventually confessed. Lio called Charles and was taking Matteo to the safety of his house when they were killed. Matteo had inadvertently reinfected the phone Lio used, but it wasn't an accident.\"\n\n\"How do I do this?\" Josh asked sadly bowing his head and knowing this wouldn't be the last time he had to make a decision like this alone. \n\n\"There is already a contingency in place, you don't have to plan your own sister's execution,\" Joseph said without emotion. \"Your trial was about coming to the realisation that to keep your family strong and safe, there are some necessary evils that need to be done, even to those we love. You must put the good of the family above your needs,\" he lectured.\n\n\"Speaking of which how are you handling your new living arrangements?\" he asked with a smile ending the conversation about Nik. \n\n\"Surprisingly well,\" Josh chuckled. \"D. and I are probably more alike than anyone realised, including us. We have a real respect and love for each other now that will only grow and get better. I trust him, and that above all else will help us be successful leaders.\"\n\n\"Peri, Joshua,\" Joseph said sternly. \"I asked about your living arrangements.\"\n\n\"It's good,\" Josh shrugged. \"I know they are enjoying some time alone together today, and I'm okay with that,\" he said thoughtfully. \"I have always been there with them before today. Having said that Dante only starting fucking her a few days ago. Until then it's just been mild flirtations and a few kisses. He's given me time to get my head around it slowly which I am grateful for.\"\n\n\"A difficult time of adjustment,\" Joseph nodded but gave his son a small smile. \"I remember. It is different for selfish men like us but you are going to be travelling a lot over the next year, and you will not have a neglected wife at home alone, waiting for you to return to complain about all her worries. Instead, she will welcome you with open arms and open legs,\" he chuckled. \"Let them have their time without recriminations in these early days it will pay off in the long run.\"\n\n\"It's difficult,\" Josh admitted. \"I like to be there even if only to watch from the sidelines.\"\n\n\"Your need to have power and control over your wife should not extend to your brother, though,\" Joseph warned. \"You must rule equally if you want to make the most of his talents. You will breed resentment if you try to control his relationship with Peri. Let them find their way. You are her husband, and you will inherit the chair you don't have to prove your power over them or anyone now.\"\n\n\"It isn't mine yet,\" Josh said testing his father's words. \"Dante believes Romey might challenge the will of the table.\"\n\n\"We have considered the possibility,\" Joseph said carefully. \"Why don't we take advantage of the commander's hospitality and fly home with Dino and Lucia tomorrow. Things have moved faster than expected, and we have decided to move up the announcement. We to believe that one of your brothers may be reluctant to accept the new order of things, and I think you and I need to talk about what you will do about it.\"\n\n\"Romey,\" Josh nodded. \"D. and I have discussed it, and we would like to know his future role and who will supervise him,\" Josh said showing that he had been doing more than just accepting what he had been told and trusting his father to handle it.\n\n\"Very good,\" Joseph nodded. Pleased that they had seen possible impediments to their taking over the running of the Donati empire. \"Mama is instructing Peri on how to handle the women. Carmen also will be a problem. Possibly more so than Romeo.\"\n\nJosh nodded thoughtfully. He hadn't considered the wives and how they would feel. It made sense that Carmen was as ambitious as her husband. He could see now that it was pointed out, how she had always pushed herself into Emily and Bianca's life while practically ignoring Roseanna. Angelo and his wife were no threat at all to her, and he could see that she had dismissed them out of hand.\n\n\"Okay,\" Josh agreed. While reluctant to leave Peri and Dante alone overnight he knew that the next two weeks would either cement his leadership for good or fracture his family irreparably. \"I would rather have D. here for the conversation about Romey and Carmen but,\" he cleared his throat. \"I also need to know the plans for Nik. I made the decision, and I will see it through.\" He said seriously. \"I want to talk to D. I assume there is a secure phone in the commander's Athenaeum as there is in ours?\" He began making plans and pulling his thoughts together about he needed from his father.\n\n\"I might remind you that you are not the chair yet,\" Joseph frowned but was proud of the way his son considered the information he had been given and swung into action. \"Yes, there is a secure line that the commander will let you use after dinner, tell Dante ten to be sure. I will let him know we are staying.\"\n\nJosh checked his watch. He knew that Peri would probably be in the nursery getting ready for the evening feeding of the babies. He pulled his phone out of his pocket and called her planning on letting D. know he needed to talk to him later that night.\n\n*****\n\nIt had been close to midnight when Dante had finally gone to bed and pulled Peri into his arms. Josh had been relieved that Peri had confided her concerns about Carmen, and they had come up with a tentative plan. Trying to bring Romey around was going to be hard enough without having to worry about his wife. Jules, of course, didn't know who would be named chair only that he was not, and he was about to be separated from his twin. Romey was not close enough to any of his other brothers to think he had a chance now. \n\nNobody in his family would have considered either Josh or himself as leaders which meant Romey's attention would fall on Ben and Angelo. Although he may cosy up to Carlo as an unknown quantity in the mix and the only other single brother aside of Dante. Carlo was a real family man and watched over all of them, never saying much or interfering unless he felt he had to. If Romey got together with him, they could have a decent shot at the leadership.\n\nHis mind went to earlier that afternoon when they had arrived back at the cottage to find Carlo in the nursery playing on the floor with the babies. He quietly asked the nannies to leave for a few minutes and then turned to them and asked, \"Does Josh know your fucking his wife?\"\n\n\"We've all lived together for a while now, do you really think he doesn't?\" Dante had countered. \"You know me, Carlo. I'd never cross that line unless invited. He's finally learning to share his toys. That's all there is to it.\"\n\n\"Just as well, the way she howls it's not a secret from anyone here now,\" he had laughed and ambled off happy with their response and the deep blush on Peri's face.\n\nHe would be a strong ally Dante thought once again focusing on the problem at hand. He had no doubt that Peri could handle Carmen and the rest of the women in the family. She was prepared for the concert this year and had sat for some time after dinner with Angelo and Rosanna talking about the children's concert. He'd been impressed with how she had joked with them about being tricked into performing last year and how she felt they owed her a favour this year. It didn't take much talking they loved her idea's, and Rosanna took over most of the preparation for her. Peri was becoming a force to be reckoned with and he felt sorry for anyone who underestimated her.\n\nJosh had said very little about his visit with Nik, and he worried that things had gone badly. He'd tried to broach the conversation several times, but Josh wouldn't be drawn on it. In the end, he had said that it was a discussion best had face to face.\n\n\"I can hear you thinking,\" Peri murmured sleepily snuggling against him. \"Is everything okay with Josh?\"\n\n\"Sorry,\" he murmured absently and kissed her forehead. \"Josh is all good. He should land about nine tomorrow morning. It feels weird without him hogging the bed and you with his gigantic arms.\"\n\n\"Yeah, I imagine it will be just as weird if you ever stay away overnight,\" she murmured. \"It just means you and Josh will have to give me twice as many cuddles when one of you is away.\"\n\n\"You're becoming a bit spoilt I think,\" Dante chuckled.\n\n\"Just living up to being a Donati princess,\" she laughed lightly and nuzzled into his neck sliding a hand down his body to his cock. The final barrier in their relationship had come down during their time together today, and she was experiencing that first rush of sexual attraction independent of Josh and his relationship with Dante. She wanted this not because she had to for him and the family but her now. She was still trying to reconcile how she could love two men the way she did, but she couldn't deny her feelings for either of them.\n\nShe felt his cock swell under her hand and smiled as she felt his arms tighten around her. She kissed down his body and used her mouth to help turn his mind from whatever was keeping him from sleep.\n\nHe groaned as he reached down and stroked her hair. There was a least one benefit to Josh not being here tonight. He closed his eyes enjoying the feel of her soft tongue fluttering under the swollen head of his cock. He sighed heavily letting his worries float away as the pleasure of being with the woman he had loved for so long filled his mind with happier thoughts. He let her carry on for a long time until he felt he couldn't take more before risking shooting his load into her mouth when he would much rather fuck her and fill her with his seed.\n\nRationally he knew that she wasn't fertile and wouldn't be until the Depo-Provera ran its course but he wanted to waste no chance to have her carry his child. He wanted that almost as badly as he had wanted her. He pulled her up and rolled her to her back bringing her legs up to double her over and open up the plain of her cunt to him. He looked down into her face as he entered her and saw the momentary gasp and whimper as he filled her. He knew his cock wasn't as long as Josh's but his girth was greater, and he knew she felt that stretch as he pushed into her stretching her over the hot hard shaft.\n\nHe plunged in and stilled wanting to make it last, and she looked up at a smile playing over her lips. He released her legs letting them wrap around his hips and lowered his head to kiss her deeply. His hips began to move slowly as he kissed her and he let himself enjoy the slow sensual pleasure after dominating her so thoroughly over the last few days.\n\nPeri was startled by the change of pace and wrapped her body around his feeling another shift in the feelings they shared. Without Josh here in the bed with them at night, the atmosphere was so different from any other night. She couldn't be sure of what she was feeling as she returned his kisses feeling the tenderness of his love-making as so very different from any other time they had been together. She let the feeling wash over her and surprisingly felt the slow tingles start in her belly and spread out as she climbed to a slow softer but intense orgasm that crashed over and lingered as Dante groaned loudly and rammed into her hard. She could feel every pulse of his cock as he came dropping his head down to kiss her sharing his ragged breath with her.\n\nPeri clung to him, and when he tried to roll off her, she rolled with him not wanting to lose the moment. Neither spoke, remaining lost in their thoughts as they fell asleep still wrapped around each other.\n\nPeri woke first and smiled up at the man who held her so gently cradled in his arms. Sliding gently away from him, she pulled on a robe and went into the bathroom to clean up a little and dress before going to feed her babies.\n\n\"Leave some for my coffee,\" Dante mumbled continuing the running joke he had with Josh about milk for his coffee as she quietly went over and kissed him softly before leaving the room.",
        "*****\n\n\"Does he know?\" Dante ran his fingers through his hair.\n\n\"He's already starting jockeying for support as if it is an election. He's smart, he knows what's coming, and I think it will entirely depend on how he spins his story, to the others,\" Josh said leaning back in his saddle. \"If he knows, Carmen will know, and she will be trying to discredit Peri at every turn.\"\n\n\"She's not from one of the twelve families; some might see that as a deficit. On the other hand, she did a full trial with the Battaglia and got an exemplary report. They have supported her claim of being family.\" Dante said with certainty. \"Don't tell her about this. Let her do her thing. I believe she has a bigger plan than even I know about now. It will only put her on edge if you tell her about this latest news.\"\n\n\"Yeah, regardless, until the announcement Romey is still just guessing. The only people who know for sure who the next leader is, are right here,\" he looked to where Dino sat on his horse quietly listening to them. \"Unless you've told Lucy?\"\n\n\"She knows I have been chosen as the warrior for the next Donati table. She's smart enough not to interfere. She wants to remain part of this family too much to risk it for gossip and power plays,\" Dino said confidently. \"She is under the impression that Dante continues to torture himself with unrequited love for your wife.\" He gave a rare smile. \"You're the baby brother who married a woman outside of the tables, and you're the dark, angry \"fuck 'em all\" brother. From the way Lucia talks I doubt even Romey sees you as a serious threat.\"\n\n\"People change,\" Dante chuckled, \"When given the right motivation.\"\n\n\"True enough for some people, not all,\" he said thoughtfully. \"I know it's not my place, but you should tell him about how crazy she is before all this goes down tomorrow.\"\n\n\"Tell me what?\" Dante looked between the two men. \"The visit with Nik went that badly did it?\"\n\n\"Do you know that Peri still has nightmares? She just covers them up better these days,\" Josh said. \"She dreams that Nik will get out and come for the children, and they will be defenceless against her.\"\n\n\"Nik wouldn't hurt the children,\" Dante frowned. \"I'll admit the thought of Nik ever being able to return probably terrifies her.\" He watched as Josh pulled out his wallet and took a small sheet of paper from it. \"But even Nik wouldn't hurt a child.\"\n\n\"This time last year if someone had suggested that Nik would kill or even physically harm Peri, I would have refused to believe that too,\" Josh said calmly. \"She still believes she has done nothing wrong and that Papa will let her out after a year of punishment.\" He handed the small note to his brother. \"It's my enigma. My trial,\" he extended the note toward his brother.\n\n\"You can't be serious?\" Dante said concern etched in his features. \"Josh it's a trial, you only have to figure it out you don't have to follow through.\" He looked with concern that Dino was listening to them discuss the enigma.\n\nJosh took a deep breath and explained her involvement in Lio's death. Then he recounted his visit with her almost word for word. Finally, he sat back and waited for Dante to process it all.\n\n\"That's the Suebi Josh. We don't murder people,\" Dante said internalising his renewed heartbreak over Lio's death.\n\n\"She did,\" Josh said unemotionally. \"She murdered Giorgio, almost killed Peri and was responsible in some way for the deaths of Lio and Matteo.\"\n\n\"We aren't killers Josh. You can't do this, regardless of what she did to Peri and Lio,\" Dante challenged him.\n\n\"You're right; we don't kill or murder. The only card she has left to play is to identify the Suebi that she worked with. I imagine they will try to end her before she does identify them. She's caught between a rock and a hard place now. Without knowing it, I pushed her to it faster than expected by telling her that Papa had no power to help her now because I was the new chair.\" Josh said sadly. \"I didn't have all the information, about the Suebi, about what happened to Lio, about a lot of things,\" he admitted.\n\n\"So what happens next? You can't leave her there, surely,\" Dante had always been the one to be judge and executioner where Nik was concerned, even before they found out about her secret life but now faced with the very real possibility, he didn't want her to die for her madness.\n\n\"She will be moved to the compound where she will live out the rest of her life. The Papilla will handle all the arrangements and keep us informed through Dino. She will be pronounced dead to all but those that need to know.\" Josh explained. He had been prepared to order her murder if that was what his father had asked of him. Unlike Dante, he had been prepared to sacrifice Nik for the good of his family. \n\nDante, Josh realised was his perfect counter-balance. On the surface, they were both loyal, and driven family men, but where Josh needed control and order in his world, and the power he was about to inherit would allow him to seize that control by any methods necessary, Dante held enough power of his own to stop him. It was Dante who was ruled by his heart and his love of his family more so than the need for power and control. He enjoyed the power and control that being part of this family afforded him but he didn't crave it in the same way Josh did. Though the brothers shared similar visions of the future, he would keep Josh grounded in reality and be his conscience when necessary.\n\n\"That's not my decision; that comes from Papa. They just needed to see what I would sacrifice for the family and how I handled the decision making. The outcome didn't change,\" he admitted.\n\n\"So you passed their test then?\" Dante accused knowing what it meant by the way Josh evaded his question.\n\n\"I told Papa that I understood what it meant and asked what I should do next?\" Josh said. \"The trial was to understand the danger she represents and to seek counsel in how to contain it. We do not have the benefits of the other experts at the table as they do. Or their experience in these matters.\"\n\n\"So you passed then,\" he pushed Josh for a direct answer. \n\n\"I did enough in the end,\" Josh admitted. \"Dino could you give us a minute?\" he asked.\n\n\"Sure, Ben will be landing soon, and I'd like to be there to greet my new best friend. Until the announcement anyway,\" he chuckled. His presence at the holiday festivities was going to be a red flag to Romey, and the three men had decided to perpetuate the idea that Ben was still heir in waiting by having Dino treat him with deference.\n\nJosh watched as Dino turned his horse and galloped off down the hill back toward the farm buildings. Then he turned to Dante and scratched his cheek.\n\n\"I fucked up, not enough to change their minds but enough to let them make a point,\" Josh said. \"I did enough to maintain our places but not what was needed,\" he tried to explain a second time.\n\n\"You're damn right you fucked up. Even after I told you I was supposed to help you, you tried to do this without me! Fuck! How are we supposed to convince them we are a team now?\" Dante was angrier than Josh had seen him for over a year. \"You can sit on that pretty chair and have everyone else bow down to you. I don't care! But if you think for one minute that Papa rules alone or that you will, you're as crazy as Nik. We rule together, and not just you and me, though we will have more power than the others. There are twelve of us for a fucking reason.\"\n\n\"I get it, lesson learnt. I can't be such a total control freak anymore,\" Josh bit back angrily. \"I'm trying alright! You think this has been easy for me? Shit! You've moved into my house, and my life and I am just supposed to make room? You're fucking my wife D! I never had Lio. I had a crazy ass sister who continually tried to destroy my life and you all wonder why I'm not fucking over the moon at letting someone else close enough to me to do the same thing!\"\n\n\"Fuck, Josh! You were prepared to kill her as the sacrifice?\" Dante calmed down in the face of Josh's tirade.\n\n\"You didn't see her D. Ninety percent of this family haven't seen her since Papa sent her to the Battaglia. Lucy snuck in once during the trial I saw her there because I went every fucking day, in disguise, but I was there. She schizophrenic at best but they diagnosed her as a narcissist with homicidal tendencies. She believes whole-heartedly that she had done nothing wrong.\" Josh closed his eyes to hold back the pain. \"She would have been at peace and so would we,\" he sighed finally admitting that he would have ordered her murder.\n\n\"Get off the horse I need to punch you,\" Dante said stepping out of the saddle of his mount.\n\n\"I'm not getting off my horse,\" Josh looked at him as if he was stupid.\n\n\"Just get off your horse and talk me to me face to face. I have some things I need to say, and then I'll punch you,\" Dante said seriously.\n\n\"So talk,\" Josh said belligerently getting off his horse.\n\n\"I'm sorry,\" Dante said. \"I knew you covered for her all the time, but I never knew why. Even when you were younger, we could see the things she would do and how you would take the blame. We all moved away and left you to deal with her. It explains a lot now that I think about, and I'm sorry,\" he repeated.\n\n\"Yeah well, she was a good actress, and it escalated when she came to the city and had access to better drugs than she could get in school. She realised they were watching her after the first time she was dragged to rehab. Not that anyone else knew about that,\" Josh told Dante all of it then. The extreme paranoia, the plan to escape the family and her perceived ownership of him and everything he owned. He admitted to protecting her from anyone else finding out.\n\n\"I became an unhappy bastard to everyone around me. Nik was so out of control I needed total control over something and that was my career.\" He went on to explain the first time he had ever seen or spoken to Peri down in the research dungeon and how the mousy young woman who had never said boo to a goose had stood toe to toe with him and in this face of his tirade had defended her work.\n\n\"You should get Andie to show you some photos of what she was like back then. You wouldn't have looked at her twice,\" Josh chuckled, \"But I fell in love with her. I knew in that one moment I would spend the rest of my life with her.\"\n\n\"Love at first sight,\" Dante nodded. \"Me too. I wish I could tell you that I'll back off but I can't. You let me into your life, and there is no way I can walk away now. Not from her and not from you. I love you, dumbass.\" Dante punched him then low in the belly doubling him over.\n\n\"That's for not talking to me about Nik sooner. I agree with you now, but maybe she'll find peace with the Papillo. You may be taller and about to inherit the chair, but I'm still your big brother, and I can still kick your ass when you need it,\" he justified his actions as Josh slowly straightened grimacing.\n\n\"I deserve that I guess,\" Josh croaked.\n\n\"I would have punched you in the face, but you've always look so pretty when you sing, I didn't want to ruin it for everyone tonight,\" Dante grumbled.\n\n\"You're just jealous that I'm prettier than you,\" Josh said mounting his horse and feeling queasy.\n\n\"I've always been the rugged manly type,\" Dante said without a trace of a smile. \"So they're all coming tonight instead of tomorrow?\" \n\n\"Yeah, I imagine Dom and Larry will know what's happening. CJ and Pete are here often enough that Charles mightn't have told them yet, but the fact that Con is home will make it pretty obvious if Charles made them change any plans they had,\" Josh nodded.  \n\n\"Everyone can see what's coming, even if we hadn't been told we'd know what's coming,\" Dante said. \"Run through who gets what again for me?\"\n\n\"Later,\" Josh said looking up at a growing speck in the sky and they galloped toward the stables hearing the first of the flights carrying their brothers approach.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "bdsm",
        "christmas",
        "dominant",
        "submissive",
        "family",
        "breastmilk",
        "brothers"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-21"
}