{
    "title": "The Twelve Zenati Pt. 05",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\nGenesis growled deep in his chest, making Olivia look up at him and scowl. He had ordered her to leave Serena, and the last vestiges of the woman who had belonged to Remington Royce, at the hospital when they left. But still she had claimed that she was not Olivia to Marcella. She had explained that Olivia might have been her name once, but Olivia was gone; she died, and so had Serena Seabrook. When asked her name, she had no response. Despite the threats over legalities, and the coming punishments when her body could withstand them, she steadfastly refused to answer to the name Olivia. She would rather have no name than become that girl again.\n\nA battle of wills had begun between Olivia and Genesis once she had arrived at the private clinic and been shown to the suite that she and Genesis would occupy. After the first day, his punishments, though not painful, had begun to hurt, and halfway through the second day neither was giving an inch, though Olivia was regretting that she couldn't give him what he wanted, nor would he give what she needed. She tried to lift her hands and found them still attached to the bed frame despite his presence there. Yesterday, he had at least undone the restraints when he was there to supervise her.\n\n\"Tell me what you need, little one,\" Genesis growled.\n\n\"I want relief. Please, Genesis, please,\" she begged.\n\n\"Still such a needy little slut,\" he murmured and stood to lean over her. His fingertips trailed over her satin-covered breasts, watching her nipple pucker and strain against the fabric. \"So needy and ready for my touch, my hands, my mouth,\" he leaned down to kiss her and trail his lips down her neck. He saw her hips rise slightly from the bed as she tried in vain to close her thighs and rub them together for the slight relief it had given her last night. \"Are you ready to accept who you are? Are you ready to take your name back?\" he asked in a stern voice and nibbled at her earlobe, hearing her breath quicken again.\n\n\"Please, oh God, please Genesis,\" she whimpered. The hand that had lightly teased her nipples trailed down her body to rest on her mound. \n\n\"Who needs this, little slut? Tell me that Olivia needs this and I will gladly give you all the relief you need. Tell me that you will be my sweet girl again, my precious treasure. Admit that you, Olivia, need me to give you, not just this climax, but the fucking you crave,\" he pushed her with his words, but she turned her head away from him, whining as if in pain. \"Still no, Olivia?\" he asked and smacked her pussy hard. He could see her body tremble and he leaned over her again and growled, \"If you cum without permission then I will not touch you at all as punishment from that point on.\"\n\nShe took a deep breath and grimaced against the pain in her side. Nobody loved Olivia, not her parents, not Kevin really, not even Remy in the beginning, but Serena was loved completely. Marcella might have loved Olivia once, but she was only here to spy for Papa. She wanted to argue, to fight, but knew that would only bring more torture. Why couldn't he be happy that she responded to all his pet names for her? Why did he have to force her to be that horrible girl again?\n\n\"Why?\" she sobbed. \"Why are you doing this?\"\n\nGenesis watched her shudder and still her movements as she held back the tide inside her. He understood now why Remington had used drugs on the strong-willed girl. He hadn't thought that she would fight him this hard when they had left the hospital. He was able to do more for her needs and desires in this suite, where he controlled who came and went, but she had refused his every command, every offer of pleasure and punishment. He felt that he couldn't back down now, despite his need now mirroring her own.\n\n\"Look at me, sweet girl,\" he said in a softer tone. \"You are mine now. Remington gave you to my care. I am overjoyed about that, but I need the real girl, not one Remington created out of thin air. For you to legally be mine, I need your consent, the consent of Olivia Gambaro. I need that before I can love you properly. We need that so I can give you everything you need, a home, a family, a life with a new name, my name,\" he explained, not for the first time, although he had never offered to give her his name before. He had stopped before saying that he would do what Remington could not and marry her to make her legally his.\n\n\"You need me to be Olivia before you can give me the name you want me to have?\" she asked, focusing on the new information.\n\n\"My name, yes, but you must show me that you can love me as much as you did Remington, and do as I ask without question. Only then will I give you all he ever promised and more,\" he vowed. \n\nShe turned her head away from him again and closed her eyes. He didn't know what he was asking. He couldn't love Olivia. Not even Remy loved Olivia; she had to be changed, altered and then erased. Genesis wouldn't love her at all if she were Olivia. Why couldn't he see that?\n\nGenesis sighed. He had one last idea of how to overcome her resolve and undo whatever block Remington had put in place against her real identity, but he needed to speak to his cousin before he risked it. Hector had said that he would come this afternoon and examine his new patient.\n\n*****\n\nThe five-story building in which Vivienne and Marcella had each been given an apartment belonged to the three brothers. The top two levels housed the four siblings, including Serafina, while the lower levels had one, two and three-bedroom suites for visitors. These were generally vacant except during the Zenati gathering when people who chose to fly in and out of the remote station where the leaders currently lived, opted to stay close to the city.\n\nThe Northern Territory was essentially a wilderness dotted with small remote towns. Even its capital, Darwin, was not particularly big in comparison to the other state capitals. It was a very pretty city, however, and Marcella loved the area in which they were staying. She took long walks along the parkway at the top of the cliffs and gazed out at the white boats bobbing rhythmically on the harbour. She felt at peace here, able to think clearly and forget the claustrophobic life that she and Olivia had tried to run from. Olivia had done it, run away without looking back, but the consequences were grave. Marcella, on the other hand, had used subterfuge and negotiation to have the life she wanted but still paid a high price to keep her mother in her life. \n\nApproaching the caf\u00e9 that nestled on the parkway across from the building where she was staying, Marcella took a deep breath. She needed all of her skills of persuasion and negotiation to ask the two favours that she needed from Noah. She had finally decided on a plan of action to help Olivia, but she couldn't do it alone. She needed him to join in her deceptions and subterfuge where her father was concerned. She wandered through the beanbags and beach chairs that littered the lawn in front of the caf\u00e9 and that gave it a picnic feel, to approach the table where Noah sat waiting for her.\n\n\"Hey,\" He stood as she approached and kissed her cheek in greeting. \"Nice walk?\" he asked, pulling out a chair for her.\n\n\"Yes, thank you,\" she replied. \"I have come to a few conclusions, and I would like your help, if you are willing,\" she continued with a smile.\n\n\"This sounds like a serious discussion, so hold that thought until we order something to drink and some food,\" he suggested, though it sounded more like a command. \"I'll order. What would you like?\" He passed Marcella a menu.\n\n\"Surprise me,\" she smiled again and slid it back across the table. She knew the menu here after two days. Everything on the menu was light and tasty, and she didn't want to think about making the little decisions right now when she had some big plans to put into motion. \n\n\"All right then,\" he chuckled and went the counter. It was only a few minutes before he came back with a number on a metal stand and announced, \"They'll bring it out when its ready. So tell me what I can do to help?\"\n\n\"Can I ask a personal question first?\" she asked.\n\n\"Sure,\" he shrugged. \"It's not huge, but I'm not shy about showering at the gym,\" Noah chuckled through his reply, giving her a wide grin as he waggled his eyebrows.\n\n\"What?\" Her eyes went wide, and a blush crept up her neck. Then, getting a grip on herself, she burst out laughing. \"Well, that's good to know. I expect your girlfriend is more than pleased,\" she dangled the question that she had been planning to ask like a comment.\n\n\"Falling for the Zenati charm?\" He waggled his eyebrows at her again with a knowing smile.\n\n\"You are very charming, Noah, but that's not why I am asking.\" She shook her head. It wouldn't hurt to flatter him, considering what she was about to ask.\n\n\"No, there is no girlfriend, and I am not gay, before you start being politically correct and asking about a partner,\" he chuckled. \"For reasons that I can't really explain, I'm just not into the whole dating scene at the moment,\" he shrugged.\n\n\"That's a relief. I mean, I'm surprised but relieved. I assumed that you and your brothers probably had girls falling over themselves to date you,\" Marcella laughed lightly as her nerves about what she wanted to do kicked in.\n\n\"Are you offering to fall all over my brothers and me? I'm not opposed, but Gideon has this whole thing going with Viv at the moment, and you can see the way that Gen looks at Olivia, so they may not appreciate it as much,\" he continued to chuckle.\n\n\"No! That's not what I meant! Stop twisting my words,\" she admonished him.\n\n\"Okay, tell me why you find it such a relief that I am happily single then?\" he asked. \"I assume it has something to do with whatever plans you concoct while you walk along the foreshore here, every chance you get.\"\n\n\"Well, yes, I do have plans actually, but I need two big favours first, and then just a little additional help,\" she admitted.\n\n\"Two!\" he said in mock horror as if she were asking for the world. \"We might have to negotiate my fee depending on how big these favours are.\"\n\n\"Maybe this is a mistake,\" she sighed and slumped her shoulders, realising what an awkward position she would be putting this man in if he agreed. He was so nice and what she was asking of him wouldn't benefit him at all.\n\n\"I'm sorry,\" he said sincerely. \"Tell me what you need, and if I can, I will give you all the help you need. I have pretty good connections, you realise,\" he chuckled yet again.\n\n\"Yeah, I thought you might,\" she grinned and shook her head. \"Okay, here's the short version. My Papa is old school. He was older when he met my mother, and they wanted to have children. He was big on the traditional roles for women in the Tables. Cook, clean, have babies after marrying well into another Table. Not in that order, of course. He was not a bad man. He loved us, he was just... rigid, strict...\" She tried to put as positive a spin on her upbringing as she could.\n\n\"I get the picture. I assume this is why Olivia ran away from home?\" Noah asked.\n\n\"Yes, and I encouraged her and feel enormous guilt about that. That's why I feel such a need to help her in any way I can, and I think I have come up with a plan, but Papa found out that I came here and has demanded that I come home. He has turned his back on Olivia and doesn't want me or Mama involved. Only it's killing Mama. I think I have a way to make it so that I can stay and maybe Mama can come to see Olivia, but it would mean getting you to lie for me.\"\n\n\"Why lie? Just call Bernardo and tell him what's happening and get him to sort it out. I can do that for you, if you like,\" he offered.\n\n\"No, my father would never forgive Mama or me if he lost face to the leaders of the Family. The humiliation he feels over the fact that his runaway daughter has shown up, not only alive, but as part of the Suebi, has almost killed him,\" she sighed. \"He couldn't handle being made to look like a tyrant in the eyes of the Table. I love him, even though he is difficult at times, especially now, and it's just a small lie. I promise that I will make sure it doesn't cause any problems for you.\"\n\n\"All right, tell me about this plan, why I have to lie exactly, and what's in it for me. How will you make it worth my while?\" he asked curiously.\n\n\"I need a lawyer to help me negotiate the law here in this territory. It's quite a bit different to the states, or so I have been led to believe, and you happen to be a lawyer. I know what I want to do. I'm just not one hundred per cent sure of the legal ins and outs of it,\" she paused, and when he tried to speak, she held up her hand. \"I also need...\" Marcella stopped and looked up as the waitress brought their food and drinks. She shook her head as the young woman openly flirted with Noah, and he appeared to take no notice. \"Thank you,\" Marcella said, earning her a quick glance from the waitress who only had eyes for Noah, making Marcella giggle softly. \n\n\"What's so funny?\" Noah asked, looking at the food as the waitress walked away. \n\n\"I may as well be invisible when I am sitting here with you. I'm lucky she didn't dump this food in my lap,\" Marcella continued to laugh.\n\n\"She was just friendly,\" Noah frowned, then looked over his shoulder at the retreating waitress. \n\n\"To you. I had to practically shout at her to get her to acknowledge my 'thank you' when she dropped my plate on the table. Men can be so oblivious sometimes. Honestly, I get why you're not dating at the moment, but that's where my second big favour comes in,\" she said smugly.\n\n\"Oh?\" his curiosity was peaked. Marcella was treading on dangerous ground if she thought that she could train him into a more refined version of himself. She would find out very quickly that he was exactly who he wanted to be. Still, it could be fun to string her along for a day or two and then turn the tables and make her submit to him and his desires. An image of Marcella, bound and on her knees before him, filled his mind, and his cock stiffened at the thought. He pushed it to the back of his mind for later perusal and focused back on what she was saying.\n\n\"The lie,\" she paused, as if reading a title on a page. \"If I told my Papa that I'd met a nice Zenati boy and we were seriously dating then he wouldn't be trying to order me home so fast. Maybe if we talked about a future, no actual engagement or anything, but a future, Mama might be able to come to meet you and see Olivia while she is here.\"\n\n\"So, the lie would be that we are dating?\" Noah asked the obvious to be clarified. \n\n\"Yes, seriously dating,\" she qualified.\n\n\"Why lie? If you wanted to date me, you only had to ask. You're smart and attractive, Marcie. I'm not idiot enough to turn you down if you had just asked for a date,\" he chuckled.\n\n\"I was hoping to avoid the complications that go along with dating, you know...\" she found herself at a loss to his response. She had hoped to maintain the beginning friendship without complicating it by starting a more intimate relationship.\n\n\"Are you worried that I'm not a good kisser?\" he asked with a grin, enjoying how uncomfortable she looked at the turn in the conversation. Sure, he hadn't felt any tummy twisting or heart attack symptoms that would signal the breaking of the curse, but he wasn't doing anything better at the moment, and until his one came along, Marcella could be a very sexy way to pass the time. Plus, he liked her, he had from the time that he picked her up at the airport. If he was going to help her with any legal queries, then they could meet and discuss those over dinner or in bed. Once again, he pushed the image of her submitting to him to the back of his mind and chuckled at how flustered she was.\n\n\"That's not what I meant,\" she gasped.\n\n\"I'll agree to helping you with the legal issues and to dating you, but I won't lie about either. Especially not to your parents or my family,\" he said sternly. \"Liars always get caught out, and the consequences can be far more hazardous than what the lie was invented to avoid.\"\n\n\"You, Mr I'm-so-hot-I-don't-even-notice-girls-flirting-with-me-anymore, want to date me, the invisible woman?\" she asked, looking at him incredulously before laughing again.\n\n\"You're not invisible to me, but that would be a great superpower. What's your superhero name?\" he asked. \"Invisible Girl is already taken, I think.\"\n\n\"So is Mighty Mouse, but it's better than some of the things I was called at University,\" she said and shook her head. \n\n\"I think we could come up with something better than that, leave it with me,\" he chuckled.\n\n\"Great, you're a closet nerd, aren't you?\" she asked.\n\n\"Not at all. I am out and proud of my nerdiness,\" Noah grinned. \"Admit it, being a nerd just makes me hotter right?\"\n\n\"Good grief,\" she rolled her eyes at him but couldn't help her laugh.\n\n\"If your father is so wound up with tradition, how did you manage to go to University? I wouldn't have thought that would be high on his agenda for girls destined to be barefoot, pregnant and in the kitchen,\" Noah frowned, finding a hole in her story about her father and changing the subject, not liking the way she rolled her eyes at him instead of continuing the banter.\n\n\"It wasn't. He refused to pay for my education because he said that it was a waste of time and money for a girl to go to University. So, I fought for a partial scholarship and took out some student loans and worked a couple of part-time jobs. It caused a few arguments, and I went to stay with my aunt for a while, to take the pressure off Mama. I have been a disappointment to him overall, but if he knew that I was dating a nice boy who was going to be on the next Zenati Table...\" she let her voice trail off. \n\n\"I won't lie for you, Marcie. If you want to tell them that we are dating, then we date, properly. That includes, dinners, movies, drives to the country, holding hands, meeting each other's family and friends, kissing, staying the night at each other's places,\" he continued, loving the blush that crept up her neck into her cheeks. \"Hot sex,\" he added and laughed loudly as she spluttered and choked on her drink. \"You did promise to make it worth my while,\" he teased and waited until she got her choking under control. \"I guess you have some say over the timing of those things, but if we date, they are all on the table.\" He waggled his eyebrows again.\n\n\"Oh, you're joking,\" she breathed out loudly in relief, seeing the waggle of his eyebrows. \"Sorry. I can't believe I fell for that. I am sure that you have many beautiful women lining up to jump you,\" she laughed easily. \n\n\"Marcie,\" Noah reached across the table and took her hand. \"I am deadly serious and very happy to be sitting across the table from a beautiful woman that I wouldn't mind jumping and discussing dating her seriously,\" he grinned, and leaned across to kiss her lips chastely, taking advantage of her momentary confusion.\n\nFrozen to the spot and speechless, Marcie stared at Noah. This conversation had not gone at all as she had planned it. True, she had gotten what she wanted, but she was also getting a whole lot more that she didn't. Or, at least she thought she didn't. How would she know? Aside of a couple of failed teenage romances, she'd never dated seriously. Deemed too intimidating by her fellow law students when in classes, and spending all her free time running between classes, studying, visiting her mother and working at her part-time jobs, it had been impossible for her to have a social life of any description, let alone date. She had friends with benefits and late night booty calls that she could always initiate or turn down. She couldn't even remember the last time she had been on an actual date.",
        "The man sitting across the table from her wanted to date her and that terrified her, but she hid those feelings. If she wanted to stay without making her father angry and her mother's life harder, then this was the only plan she had. How bad could a few dates with the hot Noah Zenati be, she asked herself. He gave her control of the timing of things, and she would take it slow, really slow. She had all the power here, so it didn't have to be weird. She could treat him just like one of her friends with benefits. No emotions, just scratching an itch. Having made the decision, she smiled at him.\n\n\"Okay, so we date,\" she agreed. No matter how those dates occurred, it would still get her what she wanted, and she could keep Noah's friendship as long as she set some boundaries.\n\nNoah watched Marcella, seeing her mind work through all he had said. He'd spoken the truth. He intended to give her the final say over the timing of everything they did intimately. He wasn't a rapist, after all. He didn't intend to make it easy for her to put him off though, and he returned her smile, seeing it for the challenge that it was.\n\n*****\n\n\"Gideon, this isn't the way to my apartment,\" Vivienne said with a frown.\n\n\"I know. I have to pick up a package for Gen, and I'd like to meet someone,\" he replied without taking his eyes from the road. \"Just close your eyes and come along for the ride,\" he chuckled. \"I know that it's hard for you to not know what's happening at any given moment but think of it as an adventure.\"\n\nVivienne bit back her retort and sighed as she closed her eyes. Since entering her hotel room after their argument and talking her into staying, he had been nothing but sweet and attentive in his own brash and humorous way. The attraction was there from the first moment she had met him, she couldn't deny that. Men like Gideon didn't look at her the way that he had looked at her over the last few days. She knew that she was no beauty, and it made her suspicious of his motives. Had he been trying to seduce her so that she wouldn't interfere with Genesis' plans for Olivia again? She had gotten that point already and had taken a backseat as Genesis had shown how much he cared about the girl and her recovery. Gideon, however, showed no signs of losing his interest in her. If anything, he was more demonstrative of how he felt about her and in his efforts to seduce her. She sighed again as her thoughts whirled and danced around the man sitting beside her confidently driving her to goodness knew where.\n\nGideon was not a man known for his patience. He knew that people underestimated him and took his natural cheerfulness and jocularity as a sign that he was easy-going and relaxed about his personal and professional life. The truth was that his mind was always working, and he never did or said anything he wasn't sure about. He would drop everything for those he loved, but he would never let his family down professionally, now that he had been given such an important role on the new Table. In truth, he was proud that his uncles and father could see past the loud, laughing fa\u00e7ade to the man he truly was, to give him the responsibility of the Chamberlains position. He needed the woman beside him to see past that veneer and take him seriously as well.\n\nLike his brothers and cousins, he'd been working to close down his personal business and take on more of a load from the Family. This gave them all quite a bit of flexible time to move between the two jobs and settle into their personal lives as family men as more curse breakers appeared, as if on cue, for them all. Now that he'd found his curse breaker, he had no intention of waiting any longer to make that relationship complete, and he hoped that this visit to his Godmother would help Vivienne to understand his eagerness to make her his. Now that he knew that her broken wing consisted of a myriad of insecurities about her appearance and how her peers viewed her in the medical community, Gideon knew that it would take something big to convince her that he was serious about her. \n\nAfter his curse broke, and he felt the very real pain of it, he had no doubt that this was the woman he would marry and have a family with. The fact that he would have to work to convince her of that frustrated him. He would like to just run away right now and elope, so that he knew she wouldn't fight the fact that they were meant to be together forever. Only the woman fated for a Zenati man could break the curse and, while he had believed himself in love more than once in the past, he had never felt the physical pull of a woman like this. It was all that he could do not to maintain constant physical contact with her in some way, every moment he was with her. \n\nHe and his brothers had been teased their whole lives by their father and uncles that they would never know love until the right woman came to break the curse by breaking their hearts. They had all laughed, along with their cousins, thinking that it was a great family joke, used to scare teenagers away from indiscriminate affairs and getting their girlfriends pregnant. He had never once considered the physical pain and need that he felt right now, even days after his heart had almost exploded in his chest. He needed the calming wisdom of Madrina, and the analytical Doctor Vivienne Papillo needed to hear it too.\n\nVivienne felt the car drive from the smooth road onto gravel and opened her eyes. The house that greeted her was like nothing she had ever seen before. It was as if someone had taken a dozen children's brightly coloured playhouses and stacked them side by side and on top of each other to form one big multi-levelled house. Each coloured section seemed to hold a different shaped window and decoration around it in an opposing colour. There was even a tower on the side of the house that Vivienne couldn't determine was a clock tower or a bell tower. It was bizarre and fantastical all at once, and she stared at it speechlessly, unable to take it all in.\n\n\"This has always been my most favourite place in the world,\" Gideon announced into the silence of the car. \"It reminds me, all the time, that not everything in the world has to make sense to work, and that which is beautiful to one man is merely interesting to another. \n\n\"Wow,\" was all Vivienne could come up with to say before Gideon got out of the car and walked around to open her door.\n\n\"Follow the yellow brick road,\" he grinned as she stepped out onto the yellow pathway he had parked beside. She'd been so fixated on the house that she hadn't taken the time to look at the strange garden surrounding it. Quirky, unusual, fantastical and bizarre, she had trouble coming up with enough adjectives to describe the strange design of plants, statues and objects that shouldn't be in a garden. She ducked under a low hanging teapot that hung from the branch of an old tree in the centre of the yard that seemed to be flowering teapots from every branch in various shapes and sizes.\n\n\"My cheeky boy!\" an old woman exclaimed, making Vivienne look up at the house. \"You finally remember I am alive, do you?\"\n\n\"Pfft, nothing will kill you, old woman!\" Gideon yelled back. \"You'll outlive me and my children!\"\n\n\"You better start working on those children if you want me to bless them without dropping them on their heads, cheeky boy!\" she admonished.\n\n\"Then come down and meet the future mother of my children and tell her she has to marry me soon if you want her to let you hold them, old woman!\" Gideon laughed at Vivienne's gasp of shock.\n\n\"You found her!\" The woman exclaimed. There was a loud bang as the window slammed shut, followed by the sounds of running in the house.\n\n\"Oh, my cheeky boy,\" she said as they walked up the steps and the door opened for them. \"With such a big heart, it must have hurt you a great deal. Genesis said that you would bring me a surprise, but I never thought to meet your one,\" she said then kissed both his cheeks noisily.\n\n\"I am as healthy as the water buffalo you keep as pets,\" he grinned. \"Zia Madrina, this is Vivienne,\" he introduced the woman beside him and let go of her hand as the old woman pulled Vivienne into a tight embrace and kissed both her cheeks just as noisily.\n\n\"You are beautiful, so beautiful and such a welcome sight!\" Madrina grinned and took her arm, linking it with her own as they walked into the house. \"When is the wedding?\"\n\n\"Vivienne doesn't believe in love at first sight. She thinks that I am crazy for proposing after less than a week of knowing her,\" Gideon chuckled. \"If she took me seriously at all!\"\n\n\"Well, you are a very cheeky boy. Who knows what you will say to people, but you have told her about the curse, yes?\"\n\n\"No,\" he admitted. \"It is difficult to explain, even though I felt it. You would know the whole story, so I came here.\"\n\n\"You came because Genesis needs something from me,\" she accused, wagging a finger at him. \n\n\"I told Genesis that I was coming and he asked me to wait until he had spoken to you, or we would have been here yesterday,\" Gideon grumbled.\n\n\"And Noah? Has he, too, found his curse breaker?\" she asked.\n\n\"No, but Dominic says she is close,\" he chuckled. \n\n\"Ah, that boy,\" Madrina went to her shelves and picked up an object, holding it in both her hands and closing her eyes. \"His one will be trouble, as befits a troublemaker like him,\" she said seriously when opening her eyes again. \"You must help him when he asks.\"\n\n\"When have I not?\" Gideon chuckled. \"Speaking of help, give me the list and I will do what I can while you talk to my future wife.\"\n\n\"Such a good boy,\" she patted his cheek. \"Come into the kitchen, and I will make us some tea and get you the list.\"\n\n\"The list?\" Vivienne whispered as they followed the old woman.\n\n\"There is always a list of odd jobs that need doing, ever since Zio Padrino passed away a few years ago,\" he chuckled. \"I won't be far away. Just talk to the old woman, or better yet, just listen.\"\n\n\"Okay,\" Vivienne said, drawing out the word, not sure if it was okay to leave her with this strange old lady who talked about curses as if they were an everyday occurrence.\n\n\"Would you like some tea or would you prefer a cool drink?\" Madrina offered.\n\n\"Tea would be lovely, thank you,\" Vivienne agreed. \"Is there anything I can do to help?\"\n\n\"No, just have a seat and tell me how you met my cheeky boy,\" the old woman laughed.\n\n\"I was at the hospital when Genesis became involved with a patient there. He asked me to consult on the case, and I met Gideon while I was there,\" she said simply.\n\n\"He asked you out within the first minutes of meeting you, no doubt,\" she cackled. \"That boy always did the first thing that popped into his head. He never managed to get in as much trouble as Noah, mind you, but still there were moments.\"\n\n\"Did the brothers all live here with you?\" she asked confused. She was under the impression that their parents were still alive.\n\n\"When they came to the city for school, about the age of thirteen or so. I think their mother did it on purpose, so she didn't have to put up with those turbulent teenage years.\" She shook her head again. \"Living with my husband and me was a better alternative than sending them away to boarding school. Here, they were loved and moulded into the charming young men they are today. Sera went to a different Zia, who had girls about her age, but she came and annoyed her brothers often enough that it was like she was here,\" she explained.\n\n\"I see. My parents live on a property too,\" she said, explaining her understanding. \"I went to boarding school, though. It wasn't so bad.\"\n\n\"No? Girls can be such little bitches at that age. I was always much happier with the boys in my house. They were trouble, but they were never spiteful or rude,\" she said, her eyes glazing as if remembering them fondly.\n\n\"Now,\" she said, bringing an ornate teapot to the counter where she had placed cups, saucers, milk and sugar. \"Would you like honey instead of sugar?\"\n\n\"No, thank you,\" Vivienne smiled. \n\n\"Well, you better have one of these before the cheeky boy smells them and inhales the lot,\" Madrina laughed, placing a plate of homemade cookies on the table, and took a seat with her cup of tea. \"Come and join me over here. It's far more comfortable than those stools.\n\n\"It must have been frightening for you when it happened.\" She reached out and patted the younger woman's hand as she took her seat.\n\n\"When what happened?\" Vivienne asked.\n\n\"Let's see, he's a big man, and it would have hurt a lot. So my guess is you were upset or at least hurting in some way, possibly crying, and he would have looked like he had a heart attack. He probably turned ashen and had one hand on his chest. He probably froze like a kangaroo on the highway, maybe even trembled, though I doubt it. He is strong that one.\" Madrina grinned, seeing the truth of her words written on Vivienne's face.\n\n\"How would you know that? Did he tell you?\" she asked.\n\n\"No, he didn't need to. It's the typical reaction, and because he has such a big heart, I imagine it would have hurt him more than others when it happened,\" the older woman nodded thoughtfully as she spoke. \"How long after that did it take him to propose?\"\n\n\"Twelve hours maybe, possibly less,\" Vivienne admitted.\n\n\"And you said no because it scared you, no doubt,\" she surmised. \"Which is why he brought you here to talk to me.\"\n\n\"I didn't give him an answer,\" Vivienne said softly. \"I thought that he was joking at first and told him not to be so cruel. Men who look like him do not propose to girls who look like me,\" she shook her head as she explained\n\n\"Men like him? Tall dark and handsome ones, who like tall women with curves?\" the old woman said with a hint of humour. \"You are exactly the type of woman my cheeky boy would go after. Why would you think otherwise?\"\n\n\"As you said, girls can be bitches, and I have no illusions about my assets,\" she laughed self-depreciatingly. \n\n\"Oh, my dear, you could not be more wrong. Not in this family at least, but you will find that out for yourself soon enough. Have you met Gideon's father yet? He's been in town since the Suebi attack?\" she asked. \n\n\"Maybe, I think he sent me down to meet Genesis and consult on the case,\" Vivienne paused to think about it, she wasn't sure. \"A lot seems to have happened in the last few days,\" she admitted.\n\n\"For all of my boys, it seems,\" she said. \"Genesis asked me for something special, and I was just boxing it up when you arrived. I'm so happy to hear that Gideon, too, has found his one true love that I forgot it up there. Finish your tea and we will go get it, and I will give you a tour of my grand old house.\"\n\n\"How can you think I am his one true love? I mean, I realise he has lost his mind but...\" Vivienne began to say.\n\n\"How can I not know, just looking at the two of you together? Having you confirm that Gideon reacted the way he did when you were broken and crying? It is a strange thing with the men in this Family, and you can call it a curse as some do, or just fate, but they are each destined to truly love just one woman in their lifetime, and if they are fortunate enough to find her, they can act a little aggressive, possessive, crazy. The need to be with that one woman drives them completely, until the woman is theirs. I imagine that he has hardly left your side in the last few days, been all touchy-feely with you and held your hand any moment he could,\" she looked at Vivienne, who nodded. \"It won't wear off, you know, not over a lifetime together. When the Zenati men find their one, they are besotted until their dying breath. But they must suffer for love, and your doubt in his sincerity is probably hurting his big heart more than you know.\"\n\n\"We fight all the time. Our first date ended in a huge argument. Then the morning after that fight he had this heart attack thing, that he said wasn't anything to worry about. Then he was suddenly a man in love and kissing me, holding my hand, being attentive and affectionate. It's too unbelievable,\" she shook her head. \"How can I agree to marry someone I met just days ago and who is acting like a lunatic?\"\n\n\"Is he really? Aside from claiming that he had fallen madly in love with you at first sight and wants to marry you, is he doing anything else out of the ordinary?\" Madrina challenged.\n\n\"No offence, but you and this house are not exactly mainstream,\" Vivienne said and looked around helplessly. \n\n\"I know, isn't it wonderful?\" she cackled loudly. \"I was like you once, a long, long time ago. The man who was my one true love proposed within the first hour of meeting me. In the back of an ambulance as I was being rushed to the hospital. A camel stampede of all things!\" Her laughter overtook her again. \"I asked him to build the most wondrous house, that only the Mad Hatter would live in, and then I would marry him. Fate has a funny way of bringing people together, but I have found that, with the Zenati men, the fates are rarely wrong. There have been no divorces in our family for generations, and widowers do not remarry, such is the strength of their love. Is Gideon's love something you want to toss aside because you are scared?\"\n\n\"I'm not scared, I'm... dubious, questioning...\" She couldn't find the right word. \"He's tall, dark and handsome, he belongs to a wealthy and powerful family. Men like him can have whoever they want.\" She flapped her hands, at a total loss of how else to explain why she doubted he was sincere about his almost-immediate declaration of love and proposal.\n\n\"Yet it is you that he wants,\" Madrina reached out and took her hand. \"It is you that he is pursuing. It is you that he has brought here to talk to me, in the place he feels most at home, where not everything in life has to make sense to be true. Come, let's go find that package for Genesis and his one true love.\"\n\n\"Genesis's one true love is Olivia?\" Vivienne gasped. That explained why he was so determined to find a way to help her and treat the damage that Remington had done to the girl's psyche, now that she thought about it. If what the woman said was true, that love may never be fulfilled, and she felt suddenly sad for Genesis and became more determined to help him.\n\n\"It is not always easy, and most of the Zenati men must suffer greatly before they get their happily ever after. Just as you are making Gideon suffer. He is not a patient man, and I imagine that he is eager for you to accept his proposal,\" she cackled again as she stood from the table and indicated Vivienne should follow her.\n\nThe house was a rabbit warren, with its short corridors and random sets of steps that seemed to appear around every corner. If she tried to find her way out of the house on her own, she wasn't sure that she could, so she followed the old woman closely to one of the top rooms, or at least she thought it must be one of the top rooms. A door opened in front of them, and as she walked into the room her breath caught as she was assailed by the chaotic colour of a well-used and cluttered sewing room. It wasn't the burst of colour or clutter, however, that made her gasp. It was the three mannequins and the exquisite garments they wore.\n\n\"These are magnificent,\" Vivienne whispered in reverent awe.\n\n\"I have something similar in your size, if you would like to try it on.\" Madrina went over to one of the many racks that lined the wall of the room as she spoke and pulled a dress from the rack. \"You can change behind the screen over there. I don't often get to see my creations modelled so this will be a treat for me. I'll give you some privacy and see if I can find my cheeky boy. I need to explain to him the package that I have for Genesis.\"\n\n\"This won't fit me,\" Vivienne looked at the dress and shook her head. \n\n\"Of course, it will. Try it on and I will stay to help you do up the waist properly,\" Madrina said, changing her mind about searching for Gideon, and pushed Vivienne behind the screen. \"It is meant to fit snugly,\" she reassured the younger woman.",
        "The sleeveless base dress was almost the colour of rust, but richer and shining like polished cotton. Once she had it on, she found that it did fit snugly but wasn't too tight. The plunging neckline would still allow her to wear a bra if she was careful about the style, but she would need better underwear, she realised as she smoothed the material over her hips. Coming out from behind the screen, she stood and wrapped the highly decorated under-bust corset around the middle of the dress and allowed the old woman to help her do up the hooks at the side, where they would not show, and tighten the small section of added ribbon lacing in the back.\n\nVivienne marvelled at the reflection that she saw in the mirror. Her breasts looked fuller and in proportion with her hips, which curved out from her tightly-held waist. She would never have believed that her figure could look this good. It wasn't that she hadn't tried corsets before, but this one sat only from her ribs to her hips, tightening the area in between and giving her an hourglass figure, rather than just the awkward lumps and bumps that usually occurred when she tried to restrain her solid figure.\n\n\"What did I tell you? It fits you perfectly,\" Madrina confirmed with a smile. \"You need better underwear. Trying to hold everything in just makes for rolls where it spills over. What you need to do is smooth it all out. For the life of me, I can't work out why mothers don't teach their daughters these things. You'd be better off with no underwear at all than what you are wearing. Here,\" she said, going to a large plastic tub and rifling through the lace there before holding out a pair of lacy panties. \n\n\"Oh, that's not necessary. This was just for fun. I honestly never go anywhere that I could wear this,\" Vivienne laughed and waved away the lace.\n\n\"I insist. You'll get the full effect and understand what I mean. You need to celebrate your figure, not try to change it,\" the woman insisted. \"You look beautiful.\"\n\n\"Are you trying to give me another heart attack, woman?\" Gideon asked in a low voice from the doorway and strode inside, taking the startled Vivienne in his arms and kissing her deeply. \"You always look amazing, but this is next level!\" he praised her as he let her up for air. \"I thought you were working on something for Genesis, but I'll be happy to take this and whatever else she has tried on that I missed,\" he chuckled loudly. \n\n\"You didn't have a heart attack, and you know it,\" Vivienne said and shook her head. \"Madrina was just playing fairy godmother while I played dress up. I can't keep the dress.\"\n\n\"Why not?\" he frowned at Madrina.\n\n\"She says that she never goes anywhere that she could wear it. Maybe someone could start taking her to nicer places than McDonald's,\" she scolded Gideon.\n\n\"I have never taken her to McDonald's. You know that I prefer Hungry Jacks if we're getting burgers,\" he shrugged.\n\n\"So cheeky,\" she wagged a finger at him.\n\n\"Why don't we,\" he paused to peck a kiss on Vivienne's lips, \"go past my place so I can grab a suit, then swing past the florist to grab you a bunch of flowers, and we can elope tonight. Then I will take you wherever you like to show off that dress.\"\n\n\"That's one idea,\" she laughed. \"Another one is that we pick up the package Genesis sent us here for and get it to the clinic so that he can help his one true love. We should probably keep your idea on ice for a little while longer.\"\n\n\"You're killing me here,\" he groaned dramatically. \"Okay, but we keep the dress,\" he sighed and turned to wink at Madrina.\n\n\"Actually, I have an idea, so yes, I would like to buy the dress if I can.\" She turned to speak directly to Madrina. \"If you haven't made it with someone else in mind.\"\n\n\"It is yours. I will send Gideon the invoice since he asked first,\" the old woman cackled. \n\nVivienne shook her head, but Gideon hadn't complained at all about Madrina's decree. She now had an idea about Olivia's treatment in her head that she wanted to test out. She knew that she could either run away from everything Madrina had told her, and what she felt to be true, and go home to hide behind her white coat and doctor's credentials, or she could stop being scared. She knew that she needed to be brave and accept that not everything in this world had to make sense to work or be true. \n\nIt had hit her like a bolt that Olivia's refusal to accept her name had little to do with Remington or Genesis but more to do with hiding from who she truly had been, and still was, inside the pretty shell. Vivienne could see it so clearly now, and she could see how much hiding who she was had hurt Olivia and the people around her. She didn't want to look back in years to come and regret not being brave to take a chance on a man who claimed to love her at first sight.\n\n*****\n\nGenesis heard the door to the suite that he now occupied with Olivia open and close and stood from the bed to see who had arrived. He didn't recognise the tall, sexy woman at first. Her hair and makeup were done for an evening out, and the dress had obviously been made for her curves. It was only when he saw Gideon with her that he looked again and recognised the usually austere Vivienne.\n\n\"Wow!\" he said. \"I almost didn't recognise you. I can see why you don't let the uber-sexy out very often. It's dangerous to us mere mortal men,\" Genesis laughed as he greeted Vivienne, then turned to his brother. \"How the hell did you drive here without running into something?\"\n\n\"I won't lie, there were a few close calls,\" Gideon chuckled. \"Like every time she crossed or uncrossed her legs!\"\n\n\"Stop that,\" Vivienne admonished him. \"I had an idea that I'd like to try with Olivia. Do you mind if I talk to her for a little while?\" she asked Genesis.\n\n\"Be careful, she is shutting down easily today,\" he warned, unsure about letting the new version of Vivienne near Olivia.\n\n\"Trust me, I really think this will work,\" she said softly. \"Please just let me go in alone or at least give us space. Gideon has the package from Madrina and needs to explain it to you.\"\n\n\"Not alone,\" Genesis said, then added reluctantly, \"but I will try to give you a little space.\"\n\n\"Thank you,\" Vivienne said, accepting Genesis's obsessiveness where Olivia was concerned more easily after her talk with Madrina. While she wasn't sure that she believed in the curse, she had seen enough over the past week or more to know that at least part of it was true. The Zenati men displayed obsessive and possessive behaviour around the women they loved, even those who had been married for some time. She walked past him into the room and smiled as she approached Olivia.\n\n\"Hello Pixie, do you mind if I call you Pixie? Gideon does, and I am afraid his ways are rubbing off on me a little.\" She gave a small laugh.\n\n\"Pixie is okay,\" Olivia said, quietly grateful that the woman had stopped calling her Olivia. She looked very different tonight, beautiful in the luscious, sexy way that she could never hope to be. \n\n\"You know I get it now. I know I've said that before, but I was wrong. I didn't understand why someone would refuse to accept who they were and want a whole new identity, but I finally, honestly understand. You don't like Olivia much do you? She wasn't very nice, was she?\" Vivienne asked, talking about Olivia in the past tense as if she was dead, like Serena had always claimed.\n\n\"She was horrible. No one loved her, not even Remington when he found her. That's why I had to become Serena. People wanted to kill Olivia. Nobody liked her, not even me,\" Olivia whispered.\n\n\"I haven't liked Vivienne very much for a long time, either,\" Vivienne sighed. \"I'm starting to like Viv though, because I am starting to see her the way Gideon sees her. He doesn't know Vivienne very well and all the dreadful and stupid things that she has done. He calls me Viv, and he wants to look after me and keep me safe, the same way that Genesis wants to do that for you. Only I am not as brave as you. I am having a hard time believing that he really means it because men like him don't like big and plain girls like me.\"\n\n\"You don't look very plain tonight,\" Olivia said, trying to understand how this beautiful woman wouldn't believe that she was sexy and desired by all sorts of men, especially Gideon who watched her every movement. Even she had noticed that he seemed to hang on Vivienne's every word.\n\n\"That's because tonight I am just Viv. She is more confident that Vivienne, who hides behind her white coat and a medical degree. Vivienne is still there, but it's just a name on my licence and on my hospital badge. It doesn't have to be who I am. Not in here or in here.\" She touched her head and her heart. \"I finally understand why you don't want to be Olivia again. But accepting the name on your medical chart or birth certificate doesn't mean that you have to accept who she was or what she did,\" Vivienne said with understanding.\n\n\"Genesis knows all the awful things Olivia did,\" Olivia whispered sadly. \n\n\"He's still here and wanting you to be his even knowing all of that. You just have to trust him that he means it. That he will love you no matter what Olivia did before you met him. Do you realise that we could be sisters one day, if we both just stop worrying about who we used to be and start over with them?\" She looked over to where the two men stood and giggled girlishly. \n\n\"Could we? Would he marry me, like Remy was going to?\" Olivia asked and turned her head to survey both Genesis and his brother.\n\n\"Any other women would be grabbing those men and racing them to the altar and look at us, both too worried about pasts that we can't change,\" Vivienne said sadly. \"Can you tell me, or even better, tell Genesis, why you didn't like Olivia, why you thought she was so horrible? Maybe you can tell him that you could be called Liv rather than Olivia? Then we could be Viv and Liv, because I like you no matter what your name is.\" She giggled quietly and finally saw Olivia's mouth twitch into an almost-smile. Gone was her whole Doctor Vivienne Papillo persona. Sitting here, she was just another woman in the grip of a Zenati man's obsession. \n\n\"I wouldn't mind Liv. Marcie used to call me that when we were kids, but Papa made her stop,\" she said quietly. \"He didn't like Olivia either. He thinks she is dead. too.\" That was as close as she had come to accepting to her name, Vivienne realised but didn't point it out.\n\n\"Then that's his loss, Liv, because you are a sweet girl who is very brave. I'm going to try and be braver tonight than I have been and do something that Gideon has wanted me to do. It's scary, but I know how happy it will make him.\" She drew a shaky breath and pulled a face. \"I just came to tell you that I get it. I understand why you are making Genesis so unhappy. I wish you would talk to him and make him happy again. He has done so much for you; he doesn't deserve to be so unhappy. I might understand, but I think you should find a way to make it better, please.\n\n\"You've been so brave losing Remy and becoming Genesis'. You have inspired me to be braver too, so wish me luck,\" Vivienne grimaced. \"I'll come tomorrow and tell you how it went, sweet girl,\" she whispered and placed a hand on Olivia's still restrained hand on the edge of the bed. For the first time, she noted that the girl didn't flinch as if scolded. That was at least one step forward.\n\n\"Good luck, Viv,\" Olivia whispered.\n\nIt occurred to Vivienne, at that moment, that Olivia had been surrounded by medical staff and people telling her what to do, including herself. The only people she'd associated with since Remy had messed with her mind were gone. Even her sister had expectations, and although she had tried to do it in a friendly way, she was still part of the past that Olivia was trying to hide from. This was possibly the first time that someone had spoken to her like a friend since Remington abducted and brainwashed her.\n\n\"No more Doctor Vivienne here, just Viv and Liv, sisters because they want it.\" She looked across again at the two men who had moved closer to try and hear their whispering. \"Talk to him, sweet girl. Try and explain why you didn't like Olivia. He will understand, I am sure of it.\"\n\nShe stood then, pulling her hand from Olivia's at the last moment, trying to comprehend how it must have been for her not to have any human contact outside of Remington who had refused to allow her to interact with his friends and staff.\n\n\"I'm nervous,\" she bent and whispered to Olivia, pulling a face. Then she finally walked toward the two men. \n\n\"Viv, I will try to be brave too,\" Olivia said in a slightly louder voice so that the departing woman could hear it.\n\n\"You already are, Liv. Never doubt that, but good luck anyway,\" Vivienne smiled widely. \n\n\"I'll walk you out,\" Genesis said, giving Olivia a strange look and following Gideon and Vivienne from the room into the living area of the suite.\n\n\"You called her Liv?\" Genesis questioned, unsure if he liked that or not.\n\n\"I also told her to tell you why she would answer to Liv and not to Olivia. I didn't push her on why she hated Olivia so much that she claimed she was dead. Or how she knows that her father is happy Olivia is dead because he didn't even like her, let alone love her. There are deep reasons there, beyond Remington, about why she doesn't want to be Olivia. I believe you could risk doing more harm than good forcing it, but that is entirely your decision. I just gave her, and you, an alternative, and you can sack me if you want to because tonight I realised that Olivia didn't need a doctor, she needed a friend. So, doctor Vivienne Papillo won't return but, with your permission, Viv might,\" she grinned. \"Liv and Viv are friends and one day might become sisters, because two crazy brothers just won't let us wallow in our own misery.\"\n\n\"You mightn't be happy, little brother, but I am over the moon right now,\" Gideon grinned and pulled Vivienne to him. \"So, I'm wearing you down, hey? We could still elope tonight,\" he said hopefully, and she shook her head laughing, feeling lighter somehow, as they left the suite.\n\n*****\n\nGenesis was frowning and puzzling over the difference in Vivienne when he went back into the bedroom and resumed his seat beside Olivia's bed. When he looked up from his musings, he found Olivia watching him with a worried look on her face.\n\n\"Are you mad at Viv too, now?\" she asked quietly.\n\n\"Why would I be mad at Vivienne, little one?\" Genesis' frown deepened at her words.\n\n\"Because she doesn't want to be Vivienne anymore, just Viv,\" she explained. \"She said it didn't matter if it said Vivienne on her name badge or on the chart because they were just things, but she liked being Viv much better than being Vivienne. She said she didn't like Vivienne very much, but she was starting to like Viv a lot. She was happy tonight.\"\n\n\"She did look happy tonight,\" Genesis agreed. \"She looked very different. I almost didn't recognise her,\" he continued, enjoying the fact that they seemed to be having a reasonably normal conversation for the first time instead of him having to drag out information with questions and commands that she didn't always answer.\n\n\"She said that I should tell you how horrible Olivia was, so that you would understand why I don't want you to call me that,\" Olivia whispered almost inaudibly, as if speaking to herself. \"She called me Liv and said we could be sisters because she likes me no matter what my name is. Liv and Viv are funny names for sisters.\"\n\n\"You could be sisters one day,\" Genesis agreed and smiled. \"if she does as Gideon asks her to do, and you keep explaining things to me instead of just refusing to do as I ask. I am not a monster, sweet girl. I will always listen when you speak, especially about why you would refuse me anything. Tell me about Olivia when she was younger, before she left home, did you like her then?\" He moved closer to the bed and rested his hand on her thigh, giving her the physical contact he knew that she craved.\n\n\"I told you that it was better that she was gone. Olivia was a mean girl who never listened to anyone and did what she wanted. Olivia wouldn't belong to anyone or listen to them like a good girl, but you wouldn't listen to me,\" she said miserably, and Genesis realised her withdrawal from him was purposeful, as if she meant to punish him. He tamped down on the anger that threatened to rise and force her to do as he said and drew a breath before he spoke again.\n\n\"Because I don't understand. Why you would be so contrary? Explain it to me so that I understand,\" Genesis said in a gentle command. \"Tell me more about Olivia, start with before she left her home and family.\"\n\n\"Olivia was pretty and popular, but she was mean and cruel at the same time, because people let her be that way. Her parents spoiled her because she was good at lying and covering her tracks, and her sisters covered for her and took the blame a lot for things she did. Olivia didn't care though, and when Marcie had a big fight with Daddy and went to stay at Zia Maria's to help her after her accident, Olivia told her that she hated her for going away and not taking the blame for her and doing her chores for her anymore. She was very mean to Marcie, and even Marcie stopped liking her then,\" she said sadly.\n\n\"That's not true. Marcella loves you. She came all this way to make sure that you were alive and okay,\" Genesis said and frowned.\n\n\"She doesn't know me, but she told Olivia to leave with Kevin. She said if he made her happy when no one else could then Olivia should just go. She even helped Olivia to run away after Daddy had cut her off,\" Olivia shook her head. \"Olivia was so mean to her and took everything that Marcie had managed to save for her school and ran away with a boy she thought she loved for adventure. She took the boat her father had given her when she was younger, when she wanted to learn to sail. Her Daddy had always given her everything she wanted. Then, when Olivia ignored him when he ordered her to come home, he cut off her allowance. Olivia hadn't believed that her Daddy meant it, but he did, and the money ran out quickly because Olivia was stupid and Kevin was even more selfish and spoilt than she was,\" she admitted.\n\n\"Marcie had nothing left to give Olivia, and no one else in the family would talk to her because she had said horrible things about them all before she left and turned her back on them. She couldn't go home, and all she had was Kevin. But Kevin became mean and hurt her and took everything she had left. He sold her jewellery and anything of value that she had. In the end, even Kevin hated Olivia and left her all alone. Even her boat had given up on her when she met Remy. She didn't trust Remy. She wanted to find her boat and just stay safe until the bad men who shot his friend were caught, but the boat was missing. Remy told her that it wasn't safe to go back to her job, so she stayed with him, and he punished her for being so stupid, for making mistakes, for talking to people who would know how stupid and awful she was. He taught her how to be a good girl and gave her a good girl name, because Olivia was horrible and needed to be punished all the time.\" Tears leaked from her eyes as she whispered.\n\n\"I don't want to be Olivia. I don't want everyone to hate me. Viv said she likes me, and she wanted to be my friend, maybe even my sister. She doesn't know how horrible Olivia was, how mean she was to Marcie. I haven't had a friend or sister in a very long time. Remy didn't like me talking to anyone, in case Olivia said something and embarrassed him. He loved me though, and that was enough. Being Serena and being loved was enough. Olivia knew she deserved punishment. She knew she had been dumb, and in the end, she had no one and nothing. I don't want to be her, please. Viv said names on a piece of paper mean nothing, they have to be there, but that maybe one day you would change my name properly and until then, she would call me Liv and not Olivia. She said you would understand if I told you.\" ",
        "Genesis had remained silent, just listening to her talk. He realised that Olivia hadn't so much been brainwashed, as she had been trained and conditioned. She was so desperate to please Remy that she wasn't game to do anything he hadn't approved. Perhaps the medication just made her more susceptible to his training rather than altered her mental state completely. That didn't explain all of her beliefs about herself and her relationship with Remy, but he was inclined to confirm his belief that the man had found her when she was at her most vulnerable and had used that against her.\n\n\"You would agree to have Olivia on all of your documentation as long as the people you spoke with called you Liv?\" he asked, more to clarify and not because he was inclined to allow it. \n\n\"If you insisted,\" she nodded reluctantly. \n\n\"You cannot be Serena any longer. You understand that Remington is gone and so is the woman he created, Serena Seabrook,\" Genesis said. \"It is time that Olivia learned the error of her ways and made amends to the people she treated badly. You can only make that better by making it right with those that Olivia hurt, not by hiding from them. Secrets and lies only hurt those that tell them, as Remington was hurt by his secrets and lies,\" he said softly as he gently ran his hand over her thigh. \n\n\"She is horrible, please. There is nothing she can do to make it better,\" she whispered and her eyes misted.\n\n\"I will never lie to you, Olivia. I will never give you a reason to doubt me or regret your trust in me but, if you want my love and the love of my family and your new friends, you must face up to the reality of who you are and make amends. I will not love you less for mistakes made before I knew you, but if you continue to refuse me, you will continue to be punished. I can help you with making Olivia a good girl who people will like and even love when you are ready, but I will not allow you to hide. This is why you must take back your name. I am not Remy, but like him, if you are rude or disobedient, I will punish you as I have done today by denying you relief for the ache that plagues you.\"\n\n\"I can't do it! I can't face those people. Having Marcella here is unbearable, but I have done it because you asked. I have tried to be good,\" she had tears in her eyes as she spoke. \"I can't go back there. I can't go home to face those people.\" She shook her head.\n\n\"No, you can't go back there, because you belong with me now. That will not change, not while I live. It doesn't matter what anyone tells me about you because everything those people knew about Olivia happened before she became my sweet girl.\" He bent to kiss her lightly and trailed his fingers up the inside of her thighs. \"Only now matters, from the moment Remington was shot and killed. Nothing before that matters to me, because you were not mine to care for and ensure that you were a good girl, little one.\"\n\n\"But Viv said you would understand. She said she would call me Liv,\" she said, still crying.\n\n\"She can call you Liv as your friend. My brothers call me Gen, it is what the people who love us do. But my name is Genesis and yours is Olivia. Up until now you, Olivia Bettina Gambaro, have been my beautiful, sweet girl. You are not a mean girl anymore, but you are letting your fear of the past make you disappoint me and earn you punishments. I want my sweet girl who has been making me happy, and I will help you face your past when you are ready. But I will not let you hide from who you are and who you can be with me. I can love Olivia because she is real. I cannot love a disguise that hides the real you.\"\n\n\"You could love Olivia?\" she asked with a hiccup, startled by his words.\n\n\"Yes, you are mine. Why would I care for you so completely, both in the hospital and here, if I couldn't love you? I need you to show me that you are worthy of my love. I need you to show me that you want to be my sweet, good girl. I do not enjoy punishing you like this, when I know how you ache, but this, as with everything I ask of you, is your choice,\" he said sadly, showing just how unhappy he was that she still fought him on this. He may not agree with Vivienne's nickname idea but at least it got her talking to him again.\n\n\"Bad men wanted to kill Olivia because she saw them shoot the man,\" she said quietly.\n\n\"Have I not shown you that I will keep you safe?\" he asked. \"Moved you from the hospital to this place, where no one who means you harm can find you? Are you looking for more excuses to defy me?\" He took his hand from where it had been caressing her leg as they spoke so frankly. \n\n\"I am scared,\" she admitted.\n\n\"You should be,\" he said seriously. \"I will not change my mind. I am not a man who can be manipulated by tears, excuses or sad stories. You will be brave, as you told Vivienne you would be, and accept your name because I will protect you and keep you safe from all your fears.\" He took advantage of her admission to push own agenda. \"Gideon brought something I had made for you. It will be your choice whether the first time we use it will be for pleasure or for punishment.\" He picked up the package Gideon had delivered for him. \"You will accept your name and all that comes with it and trust me to ensure that Olivia becomes the sweet girl that I can love and, one day, marry.\"\n\nOlivia stared at him wordlessly. He couldn't love Olivia. No one loved Olivia. She had made sure of it. Not even her mother would love her any more, although she had been too scared, even before she met Remy, to reach out to the woman. Genesis couldn't love Olivia; it just wasn't possible.\n\n\"The doctor will be here shortly, and he will help me make sure that this brace will protect you and still allow me to explore your body,\" he said, checking his watch. \"The doctor is my cousin, and you will talk to him and be honest with any answers that you give him.\"\n\n\"Yes Genesis,\" she whispered. He said that he would love and marry Olivia. He would still look after her and keep her safe if she stopped hiding. If she continued to refuse him, would he leave her? Would he send her away? She had nowhere to go, no one to go to. That wasn't the only reason that the idea of leaving him scared her, but she pushed her own feelings away. She wasn't ready to face them, or face the misery of her life before Remy. Tears welled in her eyes. Why was her name so important to Genesis? Why was he making her do this when she had begged him not to?\n\nHe unwrapped the brace that had been made from the design of one created by his cousin Hector for a woman with bruised ribs. It would keep the wound on Olivia's side snugly contained and protected while he could lace it tightly like a corset around her ribs to keep her breathing shallow, protecting the wound further and limiting the amount of pain he caused as he gave her what they both needed. He wanted the physical intimacy of a Dom and his submissive, united in pleasure and pain, as much as he knew she needed it.\n\nVivienne may have had her ideas today, but he had some of his own, too. If he wanted to strengthen their bond, he needed to do more than tease her body occasionally, leaving them both largely unsatisfied. He needed to take her to the heights she was used to with the sadistic Remington Royce. He may not want an automaton like she had been for Remington, but he knew he wanted a Dom and sub relationship at least in the bedroom, if not in public. Genesis was prepared to help her take back some independence so that she could lead a meaningful life, but he had no intention of entirely giving up the power she gave him. She was his, and he wanted to strengthen that bond, not weaken it.\n\n*****\n\n\"Dom tells me you thought you had a heart attack and that you went to Helena,\" Hector scowled at his cousin. \n\n\"You were a bit busy with the Vitali at the time, and it wasn't a heart attack, just some chest pain. I just wanted her to check me over, in case,\" Genesis said in a conciliatory tone and absorbed his cousin's knowing look. \"No one warns you how much it fucking hurts. I assume it's just a genetic thing, that only affects the men in our family? That there's a scientific reason for it. Will it happen again?\"\n\n\"They do warn us, but we don't listen,\" Hector chuckled. \"As far as I know, more than a few doctors and researchers have tried to find a scientific reason for it over the last few centuries and came up with nada. Maybe it's all in our minds but yeah, it hurt like a mother fucker when I first saw Amy. So, tell me about your girl. I read the hospital chart, but I am sure that your version of the story is much better.\" He grinned at Genesis.\n\nHector listened to Genesis' version of events, paying particular attention to the use of drugs on the young woman, and checking the chart again for the blood tests she'd had. He would take some samples before he left and send them to a different lab that could detect even the smallest amounts of foreign agents. If it was still in her system, they might be able to trace it. The likelihood was slim, but you never knew with the Suebi chemists. They had come up with some of the most addictive and detrimental party drugs that he had ever seen during his career.\n\nOlivia watched the two men who stood on the far side of the room near the door. The new man was tall and large like Genesis' brother, Gideon, and had the same dark features. He was obviously the doctor that Genesis had told her was coming, and she sighed. She didn't like doctors and their constant touching and questions. Even Vivienne constantly asked her questions that she wasn't comfortable answering. She resigned herself to yet another examination. Maybe if she showed Genesis that she could be a good girl for him in every other way, he wouldn't force her to take her name back.\n\n\"All right, let me examine her, and then we'll talk again,\" Hector said, having a better understanding of the situation than the chart alone had given.\n\n\"Call her Liv, not Olivia,\" he sighed, wanting her to cooperate with Hector. \"We are in a battle of wills over her name still. One that I intend to win tonight depending on how your examination goes,\" Genesis admitted, his lips turning up at the corners, showing he was looking forward to winning that battle. \"She won't respond if you call her by her full name... yet.\"\n\nHector took his time to complete the examination, speaking gently to Olivia to explain what he was doing during every minute of his examination. His gently probing fingers sought out not only the fresh wounds on her body but also older ones, as he phrased his questions to be innocuous but yield the highest results. It was a trick that he had learned during his time doing an exchange with a doctor from the Battaglia, where girls, often suffering from long-term abuse, came to heal and join the ranks of servants contracted to the tables. Most sought the safety of contracts rather than trust in rebuilding their relationships with others. When he was done, he helped her pull the sheet up over her body and looked at Genesis.\n\nOlivia had been surprised with how gentle and caring the man had been, even when examining her most intimate areas and the marks that Remy had left on her that still had not faded. She assured the doctor that nothing had been done to her that she hadn't asked for or agreed to. Remy was always sure to get her consent, make her even beg, for the punishments and pleasures that he gave her. When it was over, he helped her cover her nakedness with the sheet before calling Genesis back to her bed from where he paced along the wall near the doorway. She watched as Genesis moved toward her again, allowing the hunger she felt for his touch to rise in her. He cared about her. Of that she was certain. This new doctor was proof of that. But could he love her? Love Olivia? She frowned as she listened to the two men talk.\n\n\"You have the brace?\" Hector asked, knowing that the question alone would tell Genesis that he believed the girl would endure what he had planned with no adverse effects to the large wound on her side.\n\n\"Gideon picked it up from Madrina for me this afternoon.\" Genesis indicated the brace that had been padded on one side and covered with soft fabric. \n\n\"Trust Madrina to be able to work miracles,\" Hector chuckled, taking the moulded plastic brace from Genesis. It looked more like a corset than a brace now, and he shook his head. \"Let's see if she got the measurements right, then.\" It was doubtful the brace would be anything but perfect, such was the old woman's skill, and he wasn't overly concerned, though he wouldn't tell his cousin that. The wound was healing nicely, and the surgeon who had looked after Olivia at the hospital had done an excellent job of cleaning and stitching the wound back together and then sealing it with the medical second skin to ensure that the healing process was as rapid as possible. \n\n\"This is for you, little one. Hector is here to make sure that it protects your wound, rather than causing you any further discomfort. So, you need to be honest with him as he ensures the fit and shows me how best to place it on you and remove it. If you are in pain, you will tell us immediately,\" Genesis instructed.\n\n\"Yes, Genesis,\" she said quietly. The stiff corset was not what she had expected, and she realised that the doctor had called it a brace not a corset. She frowned as she tried to make sense of the object. The men helped her to sit up again, the sheet falling away from her chest to lay in folds over her legs. They spoke about her comfort as the brace was wrapped around her and pressed into place. It was softer where the dressing covered her wound, and as it was buckled into place, she felt the snug fit was comfortable, although there was pressure to keep her posture ramrod straight. The top of the brace was buckled more tightly, and she found it difficult to draw a deep breath, her chest rising and falling more rapidly with the shallowness being forced on her by the brace.\n\n\"Can you take a deep breath?\" Hector asked.\n\n\"No,\" she shook her head. \n\n\"Try for me please,\" he said gently, placing a hand over the top of her breasts and another on her upper back. He watched her attempt the deep breath and studied her face for any sign of discomfort. Satisfied that she could breathe easily, if not deeply, he nodded. \"Relax back onto the bed now,\" he instructed and helped her lie down again with Genesis's help. Then he covered her again with the sheet and indicated that Genesis should move away to talk with him.\n\n\"You have not escaped your punishment so easily,\" Genesis said without emotion as he nodded at Hector and held up a finger to ask him to wait a moment. Then he began to attach the cuffs to Olivia's wrists and ankles again before moving away from her with Hector.\n\n\"You're going to have to keep control at all times. She's a pain slut at best, a true masochist at worst. I doubt that she will stop you from doing anything to her physically, judging by the marks still fading on her body after more than a week in the hospital and away from her last Master. Not only that, she claims that she asked for, and even begged, for the pain he gave her. She defended him completely, saying that he always gained her consent before doing anything to her. She also admitted to times where he left her alone for days at a time to recover because her body couldn't heal quickly enough. The x-rays they took at the hospital confirm damage that wasn't recorded and possibly should have been, over the last year or so,\" Hector warned Genesis. \"I doubt that she saw more than a general practitioner or paramedic when she would have needed specialist help.\"\n\n\"Yeah, we'd come to that conclusion,\" Genesis spoke softly and nodded. \"That's why I wanted the brace. I can't trust her to tell me if she is in pain, especially given the fact that she talks about her ache as if she is a sex addict going through withdrawal. Giving her a small, soft orgasm while trying to protect her side myself didn't ease her ache for very long and seemed to only make it worse when it returned. Whether it is real or not, physically, it is real enough in her mind to make her crave even just the simple touch of my hand on her arm or leg. She had almost fallen from the bed twice when I removed my hand from her and she had tried to move imperceptibly towards me as I rested.\"\n\n\"I haven't heard of any drug that could act like such an extreme aphrodisiac, but if there is anything left in her system then we should find it. Did the police take her clothes from the day she was shot to examine? Do you have any of them?\" Hector asked, wanting to know if some new drug was going to pop up on the horizon as women went through withdrawal now that all, or at least most, of the Suebi tribe in this town had been arrested. He needed to talk to Orlando about any drugs recovered from the bakehouses of their chemists and dealers.\n\n\"Yeah. I'll look into it for you, but Orlando probably has more of an idea than me at the moment,\" Genesis said as he ran his hand through his hair. \"I've been out of touch for the last week or so.\"\n\n\"Look, we all get it. We've been there,\" Hector said understandingly. \"Zanto's doing his best with steering all the social media away from our family's involvement, but you're the media king. He and the others would probably like you more involved. You can find answers that would otherwise escape us. So, do what you have to do here, but don't forget that even though the old and new Tables are working together right now, you're needed as much as anyone else, if not more so.\"\n\n\"Yeah, I know. I'm hoping now that we're here, and Olivia is healing better, that I can start breaching the last of the hold Remington had on her,\" Genesis said. \"I'll get an office set up tomorrow and work remotely. I should have done it already but this is a tricky situation, and I haven't been able to leave her alone. I don't think that she would hurt herself on purpose, but I need her to bond with me and I need that bond to obliterate Remington's hold on her. I still don't know if it's training and conditioning alone or the drugs we were told about, or if she wanted that sort of extreme relationship herself and chose what she has become. Without that knowledge, it's hard to know what the best move is, but I do believe what I have planned tonight will break down most, if not all, of her resistance, at least for a little while.\"\n\n\"I can't imagine what it's like having a curse breaker that has been so completely broken, but if anyone can fix her broken wing, you can. You know that we're all here for you, just like always. Whatever you need, just ask. All I am saying is, don't forget we need you to do what you excel at too.\" He clapped his cousin on the shoulder. \"Good luck tonight. Just stay in control and her wound will be protected enough from what you need to do.\"\n\n\"Thanks, Hector. I believe that I am right in this. Remington allowed no one to touch her and her to touch no one but him. She still shrinks from any but the most familiar touch and will only submit to doctors if I command it. Remington still has that claim on her body, and no matter how much I get inside her head, I can't get past that wall. Each time she seems to bend a little for me, she straightens that wall again and shuts down after only a small amount of time,\" he sighed. He hoped that his cousin would give him some insight. Hector had done part of his residency with the Battaglia after all but instead Hector just nodded, his understanding written across his face. Then he turned and left the room, showing himself out of the suite.\n\nGenesis looked back at the woman that he knew he could love for the rest of his life, if she would only let him, and steeled himself for what he must do. No matter the pleasure she gave him as he took her tonight, he must stay in control, tightly in control.\n",
        "*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "reluctance",
        "dominant/submissive",
        "dom/sub",
        "d/s",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-05"
}