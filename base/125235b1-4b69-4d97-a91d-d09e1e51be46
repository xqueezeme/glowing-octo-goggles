{
    "title": "The Pact Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nNote: All characters engaged in sex acts are 18 years or older.\n\nPart 20 - The Crime Scene\n\nTiffany Clarkston was lying on her bed, wearing jeans and a pink blouse. Sven Radcliffe was lying next to her, holding her in his strong, young arms. Their tongues were twining in a hot French kiss, then she felt him slide his tongue over hers and deep into her mouth. She returned the kiss, their tongues battling as their mouths pressed together as the kissed deepened in passion and intensity.\n\n*KNOCK!* *KNOCK!* *KNOCK!* *KNOCK!*\n\n\"Sven! Are you in there?\" a voice said through the door.\n\n\"God damn it, Dave!\" Tiffany pouted as her brother opened the door.\n\n\"Sven!\" said Dave, his face pale and looking shocked. \"It's your mom...\"\n\n* * * * * * * * * * * * * * *\n\nI crossed the bridge over the State Line River and took the first road to the left about a quarter mile on down the road. Driving along the hard-packed dirt farm road, I came upon the Police vehicles already there.\n\n\"Hello, Commander.\" said Hammondsville Police Chief Pascal Floyd. With him were his Detectives, Josh Segers and Chris Williams, a Deputy Sheriff, and two crime lab techs. \"Glad you could come over.\"\n\nFollowing me had been other vehicles, one of which carried a State Crime Lab team, and the other was Tanya Perlman's specialized van. Everyone watched in fascination as a Tank was lowered onto the dirt road, carrying my Captain of Detectives.\n\n\"I hope you won't mind if my Crime Lab Team assists yours.\" I said. \"And this is Captain Tanya Perlman, my Captain of Detectives.\"\n\n\"Pleased to meet you, ma'am.\" said Chief Floyd, showing courtesy though he 'outranked' her. \"And yes, Commander, I would welcome the help. Just make two evidence bags of everything.\"\n\n\"We'll make two rape kits, too.\" said Tanya. With that, J.R. Barnes and a couple of his techs began working with the local techs... more like teaching them as they went along.\n\n\"You think she was raped?\" asked the Chief.\n\n\"Before we get into that,\" I said, \"who found the body, and how?\" We were looking at the body of Helga Radcliffe, lying on the left side of the road as we'd come up.\n\n\"I found it.\" said the Deputy. \"I routinely come down this farm road past the 'Santa Claus' house... we call it that because we found the body of that guy that looked like Santa Claus there... and I check to make sure no drug dealers are crawling around the place. I saw the body and pulled over to check it out.\"\n\nI remembered that the evil Keeler had been found dead in that house just up the road, just before Takaki Taichi-sama's great kamikaze mission that wiped out the rest of the perps. (Author's note: 'Seriously Inconvenienced', Ch. 05.)\n\n\"We think she was dumped here, and not too long ago.\" said Detective Segers. \"Her body's still warm.\"\n\n\"How was she killed?\" asked Tanya.\n\n\"Strangulation, from the looks of her neck.\" said Segers.\n\n\"Yes, sir.\" said J.R. Barnes, gently feeling Helga's neck. \"Totally crushed her windpipe. Either someone powerful, or someone applying a lot of hatred to her neck. Maybe both.\"\n\n\"Commander,\" said Chief Floyd, \"I would love to give you habeas corpus, if you can show the merest sign that she was brought over the State Line, and dumped here.\"\n\n\"Tanya\" I said, \"call TCPD Headquarters. Get the tapes from the Visitor's Center and the Impound Yard. Look for cars belonging to Tom Kane, and maybe Dave Clarkston, and their families. Might as well see if one of the Radcliffe cars is on the tapes, as well.\"\n\n\"Yes sir.\" Tanya said, fishing out her Police iPhone. When one crossed the State Line into our County, there was a small Visitors Welcome Center on the right, with vending machines, restrooms, and maps, built on a mound to hopefully prevent flooding (and it had worked, so far). Not far past that was the entrance to the TCPD Impound Yard, where I'd gotten that old green car to go after Steven Moschel that time. What people didn't know was that both places had concealed cameras that recorded incoming traffic, and the Impound Yard recorded outbound traffic, as well.\n\n\"Semen in her vagina, sir, but no fresh abrasions.\" said J.R. Barnes. \"We'll run the samples immediately.\"\n\n\"When you do,\" I said, \"cross-reference it with the DNA samples from all three home Heritage Cloisters home invasions.\"\n\n\"But sir,\" said J.R., \"we only have the victim sons's and fathers's DNA...\"\n\n\"That's exactly right.\" I said. J.R. caught on. I looked at Tanya and said \"Once again, I have been culpably slow, Captain Perlman.\"\n\n\"Do. Not. Even. Start. With. Me.\" replied Tanya, looking fire and brimstone at me.\n\nI nodded, then explained to Chief Floyd about the three home invasion cases we'd been working on. \"I'll send you a copy of what they find on that cross-match. We're trying to keep some aspects of the case under wraps. The Press has already been putting out the victims's names, and I don't want them knowing a damn thing, if I can help it.\"\n\n* * * * * * * * * * * * * * *\n\nAn hour later, I was back at TCPD Headquarters. Tanya came to my office. \"We have habeas corpus.\" she said. \"I've sent the video of Tom Kane driving his car over the State Line and then coming back about five minutes later. The Hammondsville Police Chief and Sheriff both said they consider that to be enough. Martha the M.E. has sent a hearse to get Helga Radcliffe's body. They'll process the evidence they collected, and send up copies of their reports.\"\n\n\"Good.\" I said, my voice faint and introspective.\n\n\"I also took the liberty of sending a Patrol out to arrest Tom Kane, on suspicion.\" Tanya said. \"If we get to his car in time, we might get evidence of Helga's body having been in the trunk, and we'll get the GPS data, too. And I sent Theo directly to the Court, bypassing the D.A.'s Office, to get a warrant to support us on that.\"\n\n\"Damn, you're good.\" I said. \"I ought to hire you as my Captain of Detectives.\"\n\n\"I'll take the job, too.\" Tanya replied, her cheeks rosy with perkiness. \"And part of the job is to beat you down when you start blaming yourself for things beyond your control. She might've been dead already by the time you'd figured it out.\"\n\n\"Maybe.\" I said. \"But I should've seen the answers after the Radcliffe break-in.\" I said. \"So let's get Dave Clarkson and Sven Radcliffe in here. And I'll break the news to him and his family, as well.\"\n\nPart 21 - Fugitives\n\n4:30pm, Wednesday, June 6th. I was sitting in my office, collating all the evidence, putting my own notes into the evidence servers in a cohesive way. And I was realizing my problem.\n\n\"Yeah, it's not my business any longer.\" Cindy Ross said, coming in and sitting down on the sofa. \"But if I have to stare at that budget ledger for one more moment without a break, I'm going to scream. So what's going on with this case.\"\n\n\"Glad you're here, Watson. I could use you as a sounding board.\" I quipped. \"Here's the problem. I am convinced that there are not two fugitives, but three: Tom Kane, Dave Clarkston, and Sven Radcliffe. They made some kind of pact to break into each other's homes, force the one that was the son to have sex with his mother, then they helped themselves to the mothers.\"\n\n\"What was your first clue? And I'm not being facetious asking that.\" Cindy said.\n\n\"The clue that was staring me in the face was the handcuffs and chains, and the bedrooms.\" I said. \"In the Clarkston and Radcliffe cases, the exact length of chains needed were what was brought. Enough for the mothers to be rolled over if need be, but for the fathers to be tightly secured. \n\n\"In the Clarkston home, they had a brass bed with bars, or rails, and a footboard as well as a headboard..\" I said. \"In the Radcliffe case, there was a headboard and footboard, but they required more chain and more tape. In the In the Kane home invasion, no handcuffs and chains were brought... because the bed had no footboard, and the headboard was solid all the way to the floor.\"\n\n\"Wow.\" said Cindy as it hit her.\n\n\"So I realized that earlier today, though not in time to help Helga Radcliffe.\" I said.\n\n\"Stoppit.\" Cindy said. \"Or I will bring Tanya in here to beat you down solid. She does not want to hear that shit, and neither do I. So... keep going.\"\n\n\"So.\" I said. \"In order to know what restraints to use, the perps had to know what kinds of beds were in the bedrooms. And that's more than casing a joint. That was insider knowledge.\" Cindy nodded.\n\n\"So, it gets easier to see.\" I said. \"We never could find the perps walking around, because the home boy brought the other two boys into his home, hiding in his car. That's why the guards didn't see the perps; they saw a familiar face and didn't think there were two guys hiding in the backseats.\"\n\n\"So the boy goes in, the perps right behind him.\" I continued. \"And after a few minutes, the family suddenly finds the perps right there in the house, somehow having overcome any security.\"\n\n\"I think Tom Kane was the perp leader.\" I said. \"He is a mean-spirited young man, and he was enjoying abusing the father while 'forcing' the son to rape the mother. Then he took his turn, then the other boy. And so it always looked like there were two perps, because the son was the third and was playing the victim.\"\n\n\"It also explains the use of condoms and shaving their bodies.\" I said. \"Dave's auburn-ish hair, and Sven's blonde hair would've been recognized for sure, and Tom's black hair might've been more common, but he didn't want to risk leaving a hair behind that would give away DNA. Ditto that for the semen: they wore condoms to prevent leaving a mess, and they forced the son to have sex with the mother and come in her at the end to make sure any traces they might've left were overwhelmed.\"\n\n\"Amazing.\" said Cindy. \"And your wife said that forcing a son to rape his mother wasn't all that common outside of gang activity. But it makes sense with this group of sick bastards.\"\n\n\"And 'bastard' might be literal.\" I said. \"I wondered why Tad Radcliffe was so badly beaten. I'm betting he's not the blood father of Sven. He didn't stand a chance to subdue those young men, and they really let him have it. And to that point, they didn't invade the Kane home until Mr. Kane was out of Town. He's very capable of beating down his son, and has done so in the past; they wanted no part of him at the scene. Unfortunately for Nikki Kane, she was there, and the wolves of this little pack really abused her, including Tom, though he played victim.\"\n\n\"So you think Tom killed Helga?\" Cindy asked. I nodded. \"Why?\" she asked.\n\n\"I think we'll find out when her rape kit evidence comes in.\" I said. \"If one of the boys was banging her, even consetually, and she recognized him as one of the rapists, he might've killed her.\"\n\nThere was a knock on the door, and Tanya drove in. \"Bad news.\" she said. \"We sent a Patrol to Tom Kane's home. His mother said he was washing his car, including thoroughly washing out the trunk, when he got a phone call on his cell. He jumped into the car and left.\"\n\n\"Another patrol went to the Clarkston home.\" said Tanya. \"No one was at home. We called Marcia Clarkston, who tried to call her daughter Tiffany, and called us back saying she was getting no answer.\"\n\n\"Shit!\" I exclaimed. \"Where's Croyle?\"\n\n\"In her office.\" said Cindy. I was running out the door to Teresa's office, hearing the whirrrrr of Tanya's wheelchair behind me.\n\n\"Croyle!\" I said, bursting into her office. \"Put out APBs for Tom Kane. Consider him armed and extremely dangerous. Also put out APBs for Sven Radcliffe and Dave and Tiffany Clarkston. Their lives might be in danger.\"\n\nI came back out of the office and said to Cindy \"Get with Myron. Get all their cellphone numbers and trace them. This is an emergency, we'll worry about warrants later. I need cell pings, I need car GPS and 'Theft' light pings. We need to find these people, and fast...\"\n\nThe TCPD went to work. They were well-trained, they were efficient at their jobs, and they'd learned over the past six years to move with a purpose when lives were at stake. All of my efforts in training and teaching were paying off. I just prayed that we'd find them before more murders took place. I had been culpably slow, I thought to myself. Culpably slow...\n\n\"Stop it.\" said Tanya. I looked up. She'd come into my office, taken one look at me, and was now saying \"I can tell what you're thinking. We'll find them. And stop blaming yourself for Mrs. Radcliffe's murder.\"\n\n\"And I thought Cindy was the mind reader...\" I said. \"Okay, now where can they possibly go and hide...\"\n\n* * * * * * * * * * * * * * *\n\n6:00pm, Wednesday, June 6th. \"Why can't we just go home?\" asked Tiffany. Dave and Sven had made her leave her cellphone in her room, and they'd all gotten into Sven's old Ford Mustang, which he'd reconditioned... and which pre-dated the 'theft' light detection system. It also had no GPS, and they'd all left their cellphones at home.\n\n\"Because Tom may have murdered Sven's mother.\" Dave said. \"And he may be coming after us, too.\"\n\nThey were at the County Public Swimming and Diving Pool, which the County had built as a public park, with baseball and softball facilities outside. Sven had a key, as he had been on the County High Swim & Dive Team, and County High used these facilities when they had meets with other schools. The three young people were at the far end of the diving pool, sitting at the scorers' table.\n\n\"This is why you had me stay away from the house on the night of the break-in.\" Tiffany said, figuring it out. \"Tom was one of them, wasn't he?\" Neither boy answered. \"Were you the other one, Sven?\"\n\n\"Shut up, Tiffany.\" Dave said in a quiet voice. \"If Tom killed Sven's mom, he'll be looking for us. And if he finds us, we're dead... he has the guns.\"\n\n\"Then let's go to the Police.\" said Tiffany. \"They can protect us.\"\n\n\"And they'll prosecute us.\" said Sven. \"No, we need to get to my dad's lawyer. Get him to negotiate us turning ourselves in, and getting us immunity from prosecution to turn on Tom.\"\n\n\"That's not going to happen!\"\n\nThey all jumped at the voice. Tom Kane was walking along the side of the diving pool, the pushed-in bleachers on the other side. A revolver was in one hand, a tire iron in the other.\n\n\"I thought I'd find you here.\" snarled Kane. \"Why did you bring your little bitch sister?\"\n\n\"Did you kill my mother?\" Sven asked angrily.\n\n\"No, of course not.\" said Tom. \"I thought Dave here did it.\"\n\n\"Bullshit, you bastard!\" Tiffany screeched. \"You're an animal!\"\n\n\"Shut your fucking mouth, bitch.\" said Tom. \"Your mouth is only good for one thing. Sucking my dick. Which I'm going to make you do after I kill these rapists bastards you're hanging out with.\"\n\n\"Put the gun down, Tom.\" said Dave. \"You kill us, and there'll be no hope left for you when the Police catch you.\"\n\n\"I'll take my chances.\" said Tom. \n\n\"THIS IS THE POLICE! PUT THE GUN DOWN AND PUT YOUR HANDS OVER YOUR HEAD!\" As Tom whirled around, well-armed TCPD Officers were pouring into the room on the other side of the pool. They were too far to help the other three people, should Tom try to shoot them.\n\n\"Stay back, or I'll shoot them all!\" Tom yelled, pointing the gun at Tiffany. He began walking towards her when his body was suddenly illuminated by many red laser dots.\n\n\"Give it up, Kane!\" yelled Lt. Irwin, who was leading the Response Team. \"You don't have a chance. Just put the gun down, and nobody gets hurt!\"\n\n\"Why don't you come take it from me!\" yelled Tom. He saw that Tiffany and Bart were about to make a run for the door behind them. \"Don't move, bitch, or I'll shoot you in the back! I've got nothing to lose!\" Tiffany stopped, and Bart moved to get between his sister and Tom's gun.\n\n\"We can't shoot at him.\" Irwin said to Teresa Croyle, who was behind him, just outside the door. \"The other kids might get hit by our gunfire, or a ricochet.\"\n\n\"Look!\" Teresa whispered. \"And get ready to blow that bastard's ass away.\" At the end of the pool, on Tom's side of it, the Iron Crowbar had appeared, his trenchcoat over his armor, over his black shirt. I had caught Sven's eye as I came in, and was pointing at the pool then making a diving motion with my hand. Sven nodded; he understood that I wanted them to dive into the pool.\n\n\"KANE!\" I yelled out. Tom looked over at me, the back of his head now turned to Sven. Sven motioned to Dave and Tiffany at the pool, to dive in. Dave whispered to Tiffany, to make sure she understood. She looked scared.\n\n\"Stay away!\" Tom yelled, pointing the gun back at the others, occasionally looking over his shoulder, but not seeing that they'd inched toward the pool.\n\n\"Put the gun down, Kane.\" I called out, tapping my crowbar in the palm of my hand as I slowly approached, halfway expected Kane to fire the gun at me. \"It's over. You're not getting away from me.\"\n\n\"Harumph.\" said Kane. \"That crowbar doesn't shoot bullets. This gun does. Now I walk out of here with these three, or I'll kill them before your stormtroopers can kill me. What's it going to be, Commander?\"\n\n\"No, this crowbar does not shoot bullets.\" I said. \"I'm going to use it to give you a spanking like even your daddy never gave you. And then you're going to jail... for murder.\"\n\n\"Come get me, then.\" said Kane. I began walking down the side of the pool towards him. He looked back at the other three and I acted like I was about to charge him. He swung the gun towards me...\n\n*SPLASH!* *SPLASH!*\n\nSven had gone for the water and dived in, followed by Dave, pulling Tiffany along. Tom swung the gun back towards them and fired, but the shot was high.\n\n\"DROP IT!\" yelled Irwin, the red dots lighting up Tom Kane again. Now, he had no hostages.\n\n\"Okay.\" said Kane. He dropped the gun in the water. \"Come get me, Iron Crowbar.\"\n\nI knew what he was going to try. As I came towards him, he rushed me with the tire iron, realizing that proximity to me was his only chance to not get blown away. Teresa realized it too.\n\n\"Hold your fire!\" she yelled. The Response Team held their fire.\n\n\"YAAAAAGGGGH!!\" yelled Tom, hurling himself into the attack.\n\n*CLANG!*\n\nTire iron met crowbar, and the crowbar won. I parried the blow and moved in on Tom. He knew some kind of martial arts and tried to give me a blow that would send me into the pool. Instead, he found himself whirled to the ground, and handcuffs affixed behind him with lightning speed.\n\n\"Shit, that was good.\" he conceded. \"Where'd you learn to do that?\"\n\n\"Buddy, I beat the Slender Man.\" I said. \"And you ain't shit compared to him.\" Officers converged, some helping the other young people out of the pool, the rest carrying the perp to Police Headquarters as our prisoner.\n\n\"Take them all to Headquarters.\" I said. \"Sven and Dave, you're under arrest, too. Suspicion of many crimes, including home invasion and rape. Captain Croyle, process these suspects, full booking. Call all their parents, except Tiffany's father; he's under a restraining order. When their lawyers arrive, or an hour and a half from now, whichever is later, call me and I'll come to the Station for the interrogations.\"\n\n\"Where are you going to be, sir?\" Teresa asked.",
        "I came up to her and said quietly. \"At home. It's my son's birthday, and these pieces of trash are not going to make me miss that.\" Teresa nodded vigorously in agreement.\n\n* * * * * * * * * * * * * * *\n\nThe party was at The Cabin, and it was attended by Jim's sisters and brothers, their mothers and grandmothers (my mother and Molly's mother), and his cousins and their father Todd. I had been able to give Jim some of his presents and spend some time with him, under Buddy and Bowser's supervision.\n\nWhile there, I took the opportunity to talk to Paulina about the legal situation.\n\n\"We're waiting for the rape kit on Helga to come back.\" I said. \"If it's Tom's semen in her, we've got enough to charge him with Murder-1. But the other cases are going to be a lot tougher.\"\n\n\"Yes, that's true.\" said Paulina. \"If I could, I'd help you play them against each other, offer Tom taking death off the table in exchange for his confession and testimony against the other two. But Mason is not good enough to handle that, and who knows what Krasney will do? He's gone nuts.\"\n\n\"Yeah, I know.\" I agreed. \"I had the idea of maybe playing Dave against Sven, see who cracks first. But I have a totally empty hand. The only thing approaching 'evidence' is that one or the other suggested to Tiffany to stay away from the Clarkston home the night of the first break-in.\"\n\n\"That won't hold up.\" said Paulina. \"So, here's what I suggest...\"\n\nPart 22 - Exigencies of the Law\n\nAt 8:00pm, I got the call. I reluctantly left the party for Jim at The Cabin and went to work. Arriving at the Station, I went to my office. I was hardly past the door when I was being followed in by Tanya Perlman.\n\n\"It's a full house tonight.\" Tanya said. \"Tom Kane is in Interrogation-1. His attorney is H.J. Lynch. Dave Clarkston is in Interrogation-2, with his attorney Gibson Stelling. Stelling has also demanded that we not talk to Tiffany Clarkston unless he is present. Tiffany's mother has also made that demand, that she be present at any time we talk to Tiffany. Tiffany herself is in Interrogation-A, and her mother is in the Pastor's Room with Kate Kane. And Sven Radcliffe is in a holding cell, waiting for an Interrogation Room to open up. His attorney is Mr. Stelling's partner, Mr. Fowler.\"\n\n\"Okay.\" I said. \"Has anyone been talked to yet?\"\n\n\"No sir.\" said Tanya. \"I'll be honest, sir... no one knows exactly how to proceed. We're waiting for your instructions on all this.\"\n\nI was disappointed to hear that, but I also understood. I said \"Okay, let's you and I speak to Tiffany first. Have someone find Stelling and tell him to get in there. Her mother is entitled to be there, too.\"\n\nWe went down to I-A, and went into the room, which was crowded. Corporal Inga Gunddottar was the Uniformed Presence.\n\n\"Tiffany,\" I said, \"you are officially not a suspect, but I am going to read you your rights just to keep everything legal.\" I read the rights from the card. Tiffany nodded her understanding.\n\n\"What is this about, Troy?\" asked Gibson Stelling.\n\n\"Multiple felonies of violence against other persons,\" I said, \"including murder in the first degree. Tiffany, I have a few questions for you. On the night your home was broken into, you were at your friend Jenny's house, yes?\"\n\n\"Yes.\" said Tiffany.\n\n\"Were you told to stay away from your own home that night?\"\n\n\"Don't answer that.\" said Stelling. He turned to me and said \"Miss Clarkston is not obligated to answer any questions against her own family. I am invoking that family privilege on her behalf.\"\n\n\"Fair enough.\" I said. \"Tiffany, did Sven Radcliffe, to whom you are not related by blood, suggest that you not go home that night?\"\n\n\"I told him I was going to Jenny's, hoping he'd go there, too.\" said Tiffany. \"He said he had something to do, but that I should go to Jenny's and have fun there.\"\n\n\"And Sven didn't say anything about the break-ins while y'all were at the pool, before Tom Kane came in on you?\" I asked.\n\n\"No.\" said Tiffany.\n\n\"Okay.\" I said. \"Mrs. Clarkston, you can take Tiffany home. However, and your lawyer will explain why this is not a request, do not leave this County without notifying the Police Department first. And Tiffany is not to leave the County at all, under any circumstances. If you do not follow my instructions and leave, I will have Federal Marshals arrest you and bring you back.\" With that, I left the room.\n\n* * * * * * * * * * * * * * *\n\nI went into MCD, followed by Tanya and Teresa, who'd been catching up on paperwork following the deployment that eventually caught Tim Kane. All of the MCD Detectives were at their desks.\n\n\"Sir,\" said Joanne, \"we have a mail order on plastic handcuffs, on Tom Kane's father's Visa card, which Tom has use of. We don't have anything on the purchase of the chains to which the cuffs were attached, and that's after going around this afternoon to all the stores that might have that kind of chain.\"\n\n\"He could've gotten the chains anywhere, and paid cash.\" I said.\n\n\"I've also traced the revolver that Kane was using at the pool.\" said Joanne. \"It was part of a pair that was bought from the Hamilton Myers estate sale a while back. I'm working with the FBI and BAFTE to get a solid ID on the purchaser there, and maybe see how they came into Tom's possession, and we're searching for the gun now.\"\n\n\"Okay.\" I said. \"Any word on DNA from Helga Radcliffe?\"\n\n\"No sir.\" said Tanya. \"And J.R. said it might be a couple of days. They ran into some kind of snag, so they are going slow to make sure they have all their legal ducks in a row. But it might be Friday before we have the first marker results.\"\n\n\"I'm glad they're being careful, but we really need that data.\" I said. \"It's probably going to be the only thing, besides the data of Tom's car crossing the State Line and crossing back, to link him to Helga's murder.\"\n\n\"We've got him for taking the other kids hostage, weapons charges, and assaulting Police Officers, mainly the one with the red crowbar.\" said Tanya.\n\n\"Not nearly enough.\" I said. \"Guys, and all of you listen up, this is a teachable moment: you all know what I think happened, that these three punks made this pact to take turns raping each other's mothers. What I don't have right now... is a legally defensible case, a case that will get them convicted by a Jury. Now, how would you guys go about getting one?\"\n\n\"Easy button.\" said Teresa. \"You're going to pit them against each other.\"\n\n\"I'll add something else to your woes, Commander.\" said Tanya. \"We may get Tom for Helga's murder, but what if the other women don't want to press charges against the other two boys?\"\n\n\"You are not making my day any better, Captain.\" I said. \"Seriously, that is something to consider, but we're not there yet. I'm going to interrogate Tom next. You can put Sven and Dave in isolation cells for the night.\"\n\n\"If you talk to them now, you might get one of them to crack.\" said Theo Washington.\n\n\"They won't crack.\" I said. \"Their lawyers are telling them to stay quiet until they know what they're dealing with. Also, I'd rather they or their lawyers come to me, asking for a deal. And that's what my overall plan is... once we get Tom nailed via DNA on Helga, which I think we'll get, then we'll start playing 'Who gets the deal?' with them. It won't be Tom, but that's not what we're going to tell Sven and Dave. And then we'll see who cracks. Let them stew overnight...\"\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the reporterette at 7:00am, Thursday, June 7th. \"Fox Two News has learned that three arrests have been made in the murder of Helga Radcliffe and the series of home invasions in the Heritage Cloisters subdivision!\"\n\nBettina: \"Tom Kane, Sven Radcliffe, and Dave Clarkston were arrested and are being held without bail on numerous charges related to the break-ins. Tom Kane is the primary suspect in the murder of Helga Radcliffe.\"\n\n\"And in other news,\" said Bettina, \"everyone is eagerly waiting for Captain Teresa Croyle's testimony before the Independent State Counsel, which has been scheduled for Monday, June 11th. Legal experts say her truthful testimony is crucial to Robert Mullen's case against Commander Donald Troy.\"\n\n\"Also being called to testify, but before the United States Congress,\" said Bettina, \"is Lloyd Feingold, CEO of BigAgraFoods Corp. He is under considerable pressure by Grassroots Conservatives, including our State's U.S. Senator Bill Nunn, as well as Democrats, after documents pertaining to controlling food supplies to the Nation were released by the Guardians of Justice.\"\n\n\"Meanwhile,\" went on Bettina, \"our State's U.S. Senator Samuel Russell has again called out the FBI for its failure to find and arrest the members of the Guardians of Justice, who Senator Russell alleges are traitors and subversives, possibly working for and with the Russian and Israeli Governments to undermine the integrity of the Government of the United States...\"\n\n* * * * * * * * * * * * * * *\n\nSolicitor Miriam Walters worked with us to get the three young men held without bail at the hearing that morning for all three young men, and I was later told that Gil Krasney was infuriated but was forced to back down by Walters. The suspects's lawyers refused to waive their preliminary hearings, which Judge Harry Nance set for the next morning at 10:00am, despite our pleas to have the hearings on Monday, so that the DNA tests could come back. Nance took malicious delight in denying our motion.\n\n\"They'll have something by then, by tomorrow.\" Tanya reassure me.\n\n\"What was the problem to begin with?\" I asked.\n\n\"Abundance of caution.\" Tanya said. \"We... I mean 'they'... have two DNA machines. They'd last run Tom Kane's DNA from the break-in on it. The semen in Helga's vagina when she was found dead was from two men: her husband, who admitted he'd had morning sex with her hours before; and Tom Kane. We we feared hostile attorneys would say Kane's semen was left over from a dirty, contaminated machine. So just to make sure, they re-ran the tests on both machines after running blanks to prove the machines were clean. We'll have marker data by 6:00am tomorrow morning.\"\n\nPart 23 - Closing The Nets, Opening Loopholes\n\n7:00am, Friday, June 8th. I did not even bother with the Bettina broadcast. I was in my office with Captain Tanya Perlman, State Crime Labs Director J.R. Barnes, and Chief Chemist Dr. Christina Cho.\"\n\n\"It's Tom Kane's semen.\" said J.R. Barnes as I looked at the sheets of data. \"It was fresh; the sperm were motile when we recovered the samples. It was in ample quantity; he had come inside her not long before her body was found.\"\n\n\"We got Kane's physical features yesterday,\" said Captain Perlman, \"specifically his hands. They correspond well to the grip on Helga Radcliffe's neck, and we can show that. Also, the three moles just over his groin, which Helga told us about after the home invasion. She'll be speaking from the grave, but that'll be enough to hold Kane.\"\n\n\"Okay.\" I said. \"We've got him ice cold. I'm ready to testify he assaulted me, if they won't take a deposition.\"\n\n\"Teresa's Officers got all that on video tape, as well.\" said Tanya. \"Your Aikido skills are impressive; I might hire you for MCD instead of Commander Ross.\" \n\nI laughed at that, then Tanya asked \"So, how do we hold the other two guys? Nance is as bad as Krasney when it comes to eagerness to let criminals go.\"\n\nI sighed. \"We've got nothing. GPS doesn't help us. They left their cellphones at their own homes during the nights in question, and we can't force their families to testify against them; the lawyers are objecting every time we ask anything remotely along those lines. So our only hope is to get Tom to turn them over in exchange for taking death off the table.\"\n\n\"And you have to ask Krasney to do that.\" said Tanya.\n\n\"No, I don't.\" I said. \"Not immediately. As a part of the Police Command Group, I'm a Principal for the County and an Officer of the Court...\"\n\n* * * * * * * * * * * * * * *\n\nTom Kane and his lawyer, the wily and Police-hating H.J. Lynch of Chase, Lynch & Berry, P.C., were brought into Interrogation-1 at 8:00am, two hours before the preliminary hearing.\n\n\"We've got you ice cold for murder, Kane.\" I said, having shown them the evidence.\n\n\"You got nothing.\" snarled Lynch. \"You've proved they had sex, nothing more.\"\n\n\"You're doing your client a disservice with lies like that, Lynch.\" I said. \"His hand corresponds to the injuries on her neck. And the rest of it is so obvious, that I'm willing to trust the intelligence of a Jury to see it.\"\n\n\"I need to talk to my client.\" said Lynch.\n\n\"Before you do, and since time is short and you're trying to waste it,\" I said, showing Lynch I was onto him, \"I'm just going to say this: you confess, you give me Sven and Dave, and I'll persuade the D.A. to take Death off the table. Consider that while your lawyer blows smoke up your ass.\"\n\n\"You fucking son of a bitch...\" started Lynch, but I was already getting up.\n\n\"Commander,\" said Tom Kane, looking up at me, \"I just have one question...\"\n\n\"Let me do the talking, boy.\" said Lynch.\n\n\"Shut up, I've got this.\" said Kane. He looked back and me and said \"This is not an admission of anything, but why on earth do you think taking death off the table is an offer? If I'm convicted for what you say I did, it'll be five, six decades in prison. Hell, you should offer to ensure Death remains on the table if you want me to throw Sven and Dave under the jail for you.\"\n\n\"Nice point.\" I conceded. \"The problem is, I can't promise that. It requires a Jury to give the death penalty, and I can't guarantee they would. If Death is not on the table to begin with, it's a moot point, no Death Penalty. But it doesn't work the same way the other way around.\"\n\n\"Then have a nice day, Commander.\" said Tom Kane, leaning back in his chair and clasping his hands behind his head. \"See you in Court.\"\n\n* * * * * * * * * * * * * * *\n\nAt 10:00am, Teresa, Tanya, and myself entered the Courtroom of Judge Harry Nance as the preliminary hearing for Tom Kane was about to start. ADA Ted Mason was at the Prosecutor's table; he'd pretty much refused to talk to us beforehand. H.J. Lynch was Kane's impassioned representation.\n\nJudge Harry Nance was a slender, slight man with wispy brown hair, gold rimmed glasses, and a soft voice. I sometimes wondered if my nephew Ned would've ended up looking like Nance had Ned lived. Nance was rabidly Leftist in his politics, and Activist in his judicial rulings.\n\n\"Prosecution, show your evidence.\" said Nance. Mason showed the DNA evidence, the camera evidence of Tom crossing the State Line just before the body was found, the DNA markers that pointed strongly to Tom Kane.\n\n\"Defense, this looks like plenty to go forward.\" said Nance. \"Anything to say?\"\n\n\"No, Your Honor, we'll reserve our defense.\" said Lynch. \"We ask that my client be released on his own recognizance. His family is here, he has close ties to the community. He is not a flight risk.\"\n\n\"Prosecution?\" asked Nance.\n\n\"Your Honor,\" said Mason, \"we contend that he took Mrs. Radcliffe's body across State Lines to conceal his crimes and to change the jurisdiction. As such, we think he is an extreme flight risk, and family ties are a significant issue in this case. We ask for no bail, that the suspect be held in custody. If you grant bail, we ask for home confinement, with ankle monitoring.\"\n\n\"That sounds like a fair compromise.\" said Nance, which I thought was ridiculous. \"Mr. Kane is remanded to the custody of his attorney and his parents. He is to remain at his home, with ankle monitoring. Mr. Kane, do not leave your home for any reason. If you do, I'll be forced to have you confined to County Jail until your future hearings and trial.\"\n\n* * * * * * * * * * * * * * *\n\nSven and Dave's lawyers had made Motions to Sever, to separate their hearings from Tom Kane's. This was smart to do, because Tom's additional murder charges might weight on the other boys, and they did not want that.\n\nIt was also a much tougher slog to get them held. I had to take the stand, where I showed what little we had: skin colorations that matched Sven and Dave and Tom, the rotations of the skin colorings of the perps, the curious coincidence of having the perfect length of chains on the handcuffs. I also said that they were arrested for suspicion, and that the investigation was ongoing.\n\nGillis and Fowler moved to dismiss the charges, and I halfway expected Nance to agree... but he did the right thing and ordered them to house arrest with ankle monitoring. He also set a date for another hearing in a week's time, and we'd have to show something a lot more solid if the case would go forward.\n\n* * * * * * * * * * * * * * *\n\n\"Now how do you expect me to prove anything at all?\" asked Mason as we met at City Hall at 11:30am. Deputy Chief Ross, Chief Moynahan and District Attorney Krasney were also at the meeting. \"We literally have nothing of substance.\"\n\n\"And we have a week to get that.\" I said. \"Which we will work on getting. We have time to talk to people, get evidence of their whereabouts... see who might confess in exchange for a lighter sentence.\"\n\n\"Oh!\" Krasney exclaimed almost gleefully. \"So what will it be, Troy? Sweetheart deal for the killer to get the rapists? Or sweetheart deal with the rapists to get the killer? And it's you making those deals, this time! I oughta make an ad about it.\"\n\n\"Quit showing your ass, Krasney.\" said Moynahan, his voice level but withering.\n\n\"No, seriously.\" said Krasney. \"This asshole has made ads attacking me for making sweetheart deals, deals I was entitled to make as D.A. for the good of the County... but when this jerk suggests doing the same thing, you defend him! You're a hypocrite, Moynahan! But nowhere near as big a hypocrite and ass that Troy is!\"\n\n\"Tell you what, Krasney.\" I said. \"Go ahead, make that ad. Make the accusation. I'm not giving anyone sweetheart deals like you have, letting them go free like you know you did. In fact... I'm going to bust all three of these perps, if your hapless ADA can get the job done with the prosecutions. Now if you don't have any more bullshit to spew out of your filthy sewer of a potty mouth, I'll go make those busts happen.\" With that, I got up and walked out. I heard Cindy chuckling behind me as she got up and left, also.\n\nAs we walked together back to Headquarters, Cindy said \"I thought the guy was going to bust his colon when you broke him down.\"\n\n\"He wanted to take a swing at me.\" I said. \"But he knew the Green Crowbar would bust his colon and everything else if he did.\"\n\n\"Wouldn't I love that.\" Cindy said. \"But how are you going to make the busts of the perps happen?\"\n\n\"I may not be able to, truth be told.\" I said. \"But we'll see...\"\n\nPart 24 - No Honor Among Home Invaders\n\nAt 2:00pm, Friday, June 8th, I went into Interrogation-1. Tom Kane and his lawyer H.J. Lynch were there, as was Detective Theo Washington.\n\n\"My client is prepared to give you his written confession of the pact between him, Sven Radcliffe and Dave Clarkston.\" said Lynch. \"He only asks that you not take Death off the table, and that you give Radcliffe and Clarkston no deals.\"\n\n\"Well,\" I said, \"if your client's confession leads to their confessions in exchange for reduced time, then the D.A.'s Office might want to do that. To save money. It's an election year, and the D.A. is not doing very well in the polls, dontcha know.\"\n\n\"But they'll be busted?\" asked Tom, his voice low and menacing.\n\n\"We'll charge them.\" I said. Tom nodded at his lawyer, who produced a sheaf of papers. I read them. Tom gave every detail of the three home invasions, the preparations, the executions of the plan, the details of the rapes, and how they escaped. Tom said that Dave and Sven were active, willing, and enthusiastic participants in the rapes of their mothers; in fact, Tom said he was a bit pissed at how brutally they'd raped his sister Nikki.",
        "\"Okay, Theo.\" I said. \"Make an affidavit form. Put these down as attached sheets, you and Kane initial them all, number them as 'Page X of Y pages', have Kane sign the affidavit, then we'll copy it all into digital servers.\"\n\nI turned to Tom. \"Because you're ankle-monitored, you know you can't leave your home. We'll be all over you if you do. But if you're alone, at home... I'm not paying attention to you. As long as you're home... alone...\" Theo peered at me as I made that cryptic statement. The lawyer was busy with the paperwork, and didn't catch it.\n\nOnce that was done, we re-arrested Sven and Dave, formally charging them. Judge Nance still gave them only house confinement with ankle monitoring.\n\n* * * * * * * * * * * * * * *\n\nSaturday, June 9th, 2:00pm. Thanks to Tom Kane's detailed confession, we were able to talk to other people to corroborate the movements of all three of them, and to show some timelines that circumstantially showed them to not be at parties they'd said they were at, and that possibly put them at the homes at the times of the home invasions.\n\nAnd yes, the legal eagles for Sven and Dave came searching for deals. \"We'll give you what you need to barbecue Kane, to make sure he gets the syringe.\" said Gibson Stelling. \"What can you give us in return? And by the way... Mrs. Clarkston and Mrs. Kane will tell you they don't want to press charges.\" Ted Mason offered ten years imprisonment and an additional fifteen years probation to each of them for their full confessions and testimony. They accepted.\n\nAnd then the snags hit.\n\n\"I want to press full charges against them.\" said Richard Clarkston, despite his wife Marcia's angry shouts and then desperate please for him not to. \"I was held against my will; that's kidnapping. I was physically abused; that's assault and battery.\" \n\n\"We have no choice.\" I told Marcia. \"I can't stop him from pressing the charges, and the judge might not accept the plea deal..\"\n\nAnd then Nikki Kane came in, represented by Gwen Munson of Prodder, Ryder & Reems, P.C., the lawyer that had represented Jan Camp, and had represented Donna Rodman and Hillary Braselton. When her brother had been confined to their home, Nikki had moved out.\n\n\"I want to press full charges against Sven Radcliffe and Dave Clarkston. For kidnapping and rape.\" Nikki said, her voice full of venom.\n\n\"And your brother, too?\" I asked as we got her statement in I-A.\n\n\"Hell, yes!\" Nikki spat. \"Especially that shit-eating piece of trash...\"\n\nPart 24 - The Shocking Twist\n\n\"It's confirmed.\" Tanya said, showing me the data. \"Tad Radcliffe is not the biological father of Sven Radcliffe. Tad's attorney has gone to Court to get a copy of the results, even though is wife is dead and Sven is adult age.\"\n\n\"Probably in case of legal issues in the future.\" I said. \"And speaking of that... there is one more thing I need to do.\"\n\n* * * * * * * * * * * * * * *\n\nI went to the Pastor's Room, where Kate Kane and Marcia Clarkston were. They were still trying to get their sons off the hook, begging us to not press charges. We'd told them we were way too far past that.\n\n\"May I have a moment alone with Mrs. Clarkston?\" I asked Kate as I came in. She said she'd go powder her nose. Cindy escorted her to the women's room on the backside of Police Headquarters.\n\n\"Mrs. Clarkston,\" I said as I sat alone with Marcia, \"Tom Kane was very generous... very generous. You're still alive, and he did not implicate you in the home invasions.\"\n\n\"Why would he?\" Marcia asked, her formerly tearful voice growing cold. \"I was the victim of that.\"\n\n\"Please, Mrs. Clarkston,\" I said, \"I cannot allow you to think that you are talking to an Agency of the Weak Minded. It was you that gave Tom Kane the idea to invade your home and force Dave to have sex with you!\"\n\n\"Have you gone mad?\" asked Marcia shrilly, though her lovely face now registered pure fear.\n\n\"Not at all.\" I said, looking her dead in the eye. \"I did not fail to notice that you made sure your daughter was not at home that night... despite your husband having demanded she be at home. You not only gave Tiffany permission to be at Jenny's... you insisted that she stay there and not come home. Dave and Sven also told her to stay away, but it was you that pushed that, and then told Tiffany to not answer her cellphone if her father called, and you'd cover for her.\"\n\n\"Why would I do that? The home invasion, I mean.\" Marcia asked. \"Why would I arrange something like that with that filthy bully Tom Kane?\"\n\n\"Ohhhh, maybe because you had a huge sexual crush on your son.\" I said. \"Mrs. Clarkston, my wife is considered to be the very best sexual psychology professor in this Nation, in all of this Nation. She saw almost from the start that you looked upon your son not as a son but as a young man you wanted as a lover. And you chose a pretty despicable way of getting your son into bed with you. Oh, you didn't mind it if those young studs Tom and Sven helped themselves to you; after all, they're handsome and virile and good in bed themselves. And you also got what you wanted... Dave, in bed.\"\n\n\"And what's more,\" I said, \"it was your chance to get rid of your husband, too. Yes, he was borderline abusive with you and your daughter, but you never could drive him over the edge to actually hit you or Tiffany. You tried like hell, but you couldn't do it. And ironically, the reason for that is because Dave was protective of you, and especially of Tiffany. I saw how he shielded her from Tom's gun with his own body at the pool house. And Dave beat Tom down when Tom groped Tiffany, taught the bully an unforgettable lesson. Dave would've beaten the hell out of his father, who is a real wimp, so sorry, if Richard had harmed you or Tiffany. So this incident was the chance you needed to get Richard out of your life.\"\n\n\"Related to that, and last but not least,\" I said, \"it was you that insisted on calling the Police. You had to get us involved, and everything into the public record. Worse, you leaked it to the reporter Ajmani so she'd release your name to the Public... all to humiliate your husband, and give yourself yet another excuse for leaving him.\"\n\n\"You'll never prove a word of that!\" spat Marcia bitterly. \"Any of it!\"\n\n\"Nor do I intend to.\" I said. \"With luck, Dave will be out of prison in ten years or less, and you and he can do whatever you want in the privacy of your home... provided there's no violence or abuse of rights, of course. I just want to make sure you understand that I was not fooled, and that you should not stoop to these levels again. Your friend Helga is dead; I'd hate to be investigating your murder next. Do be careful, Mrs. Clarkston. Do be careful.\"\n\nWith that I got up, turned off the bug-killer, and left the room. I'd given Marcia the most blunt warning for her safety that I could. It would be up to her to survive... \n\nPart 24 - Epilogue\n\n\"So you knew Marcia Clarkston had secretly asked Priya to reveal her name? To get at Richard Clarkston?\"\n\n\"Well, I'm not sure what the exact arrangement was,\" I said, \"but that was the gist of it.\"\n\n\"And yet you went after Priya, and you crushed that poor girl...\" Cindy said, peering hard at me. \"You absolutely destroyed her like I've rarely seen you go off on anyone, at least verbally.\"\n\n\"Yes.\" I said.\n\n\"Why?\" asked Cindy. \"What was the point?\"\n\n\"That is admirably exact.\" I said. \"I was making a point. First of all, whatever the arrangement, Priya still should not have revealed Marcia's name, and KSTD should not have let her do it, either. So that was a free chance for me to light into her, and I took it. And yes, I gave her both barrels and then some. I did not hold back.\"\n\n\"And the second point,\" I continued, \"was that it was an opportunity to deliver a message of sorts to the Press overall. Word quickly spread what happened between me and Priya, and now the rest of the Press knows, and knows well, that I consider them the Enemy and will hit back at them.\"\n\n\"They know that already.\" Cindy said. \"And they consider it a point of honor... whatever they consider honor... to not relent one inch to you.\"\n\n\"We'll see.\" I said.\n\n\"Is that why Walther resigned?... well, I should say 'retired', but it was essentially a resignation.\" Cindy said.\n\n\"No, I think that was something else, something you'll be hearing about soon.\" I said. \"What you also don't know is that after I ripped Priya a new one, she went running to her 'mother', in a manner of speaking: Senator Katherine Woodburn.\" \n\n\"Now Woodburn is barred by the Federal Government from having anything to do with any Media companies, officially anyway.\" I continued. \"But she's been working behind the scenes, creating proxies, to create a new State-wide Media outlet. KSTD is going to be a part of that, with Priya as Katherine's point man... point woman, that is.\"\n\n\"And Walther is being pushed out more than anything else.\" Cindy said, catching on. \"Or he sees the writing on the wall and steps aside while the stepping is good. I nodded. \"But why?\" she asked, sounding not unlike my most very inquisitive daughter Carole at times.\n\n\"Part of a long-desired plan.\" I said. \"Control of the Media. Control of the news and information that you receive every day. You better believe these people hate Social Media, they hate Drudge Report and Rush Limbaugh and our local Conservative talk show host, Reed Hudson. I'm not sure exactly what form their plan is going to take, but we'll find out soon enough...\"\n\n* * * * * * * * * * * * * * *\n\nSaturday, June 9th, 4:30pm. There was a knock on my office door, and I bade my visitors to come in. Tanya Perlman drove in, followed by Joanne Warner.\n\n\"Sir,\" said Joanne, \"I just told Captain Perlman, and she said I should tell you: we have not found the revolver matching the one Tom Kane used at the pool house.\"\n\n\"Oh?\" I said, keeping my face passive.\n\n\"Dave and Sven both said in their confessions that Tom had provided the guns, and they left them in a secret compartment of Tom's car after the home invasion at the Kane's home. We impounded Tom's car, and the other revolver is not anywhere in it.\"\n\n\"What do you wish to do?\" I asked.\n\n\"Go to Tom's house.\" said Joanne. \"Ask him where it is, and if he doesn't tell us, we'll tear the house apart until we find it.\"\n\nI nodded. \"Tell you what. Warner, go find Lt. Hewitt and have him get a Response Team ready, and take them with you. They, and you, should wear full armor.\" \n\nJoanne left. Tanya peered at me. \"Think they'll find the gun?\" she asked, the merest hint of a sparkle in her eyes.\n\n\"Yes.\" I said. \"Yes, I think they will...\"\n\n* * * * * * * * * * * * * * *\n\nAn hour later, I got the call. \"Sir, it's Warner.\" Joanne said. \"We found the gun. And Tom Kane. He committed suicide with it. I've called for the M.E. and CSI teams.\"\n\n\"Good work.\" I said. \"Keep me informed.\" \n\nAs I disconnected, I wondered how long it would take Joanne to figure out what Tanya had figured out by watching me. Of course I had not forgotten about the second gun, though I'd somehow forgotten to mention it to my Detective Corps that had failed to remember it. \n\nTom Kane had wanted me to not take the death penalty for him off the table. And I had not. I figured he'd hidden the second gun in an A/C vent or something. And after his confession, I told him that while he was at home alone, I had no interest in his actions. He'd understood. In effect, I'd given him his opportunity, and he had taken it...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "mother son",
        "drama",
        "police drama",
        "crime drama",
        "mystery",
        "iron crowbar",
        "blowjob",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-pact-ch-04-2"
}