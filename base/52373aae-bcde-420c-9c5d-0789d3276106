{
    "title": "Transformations - Dr. De-Mona Ch. 02",
    "pages": [
        "Comments welcome! \n\n***** \n\nProfessor Inge Sorenson, middle aged spinster, studier of stars and moulder of young minds panted like a bitch in heat on the trailer floor. \n\nBehind her, the Whoremaster, Ray, took her doggy style on the cheap carpet. \n\nShe lowered her face to the musty carpet with a smile as sixteen inches of hard cock pushed deeper inside her than was humanly possible. \n\nTwo weeks ago, she had been visited by two upperclassmen: Donny and Madison Fuchs. They had convinced her to accompany them on a little trip to Stallion's. \n\nThey had manipulated her, she knew that now. But, at the time, she could only remember staring intently at the lump in Donny Fuchs's tight jeans and thinking anything they wanted was just fine with her. \n\nShe had panicked upon being left in the care of Ray and Sugar Tits. She could remember crying and fighting. \n\nBut, then Sugar had simply talked to her calmly and gently. \n\nTears of fear had turned quickly to tears of depression - her life had been a waste. Her fear of human interaction had made her a prisoner in her own existence. \n\nWhat did professional success matter if you were alone, without a companion, without a lover. \n\nSugar had dried her tears with kisses, and then she had opened Inge's mind to an entire new world of lust and pleasure. \n\nPart of her felt guilty for bringing her class to Stallion's - it was the loss of free will after all. \n\nBut, the benefits... oh, the benefits. \n\n\"Harder,\" she moaned. \n\nRay laughed. \"Easy, sweetheart,\" Ray whispered, his big hand caressing the small of her back as he thrust a cock longer than Inge's forearm in and out. \n\nGentle. He was gentle though he didn't have to be. He was a Whoremaster, and she was going to become Whore Caste - there was no appeal in Professional Caste for her. She had her career, and now she was going to have fun... for eternity. \n\nShe thrust back hard against him, hoping that the thick condom he wore might tear, and that when he came his ejaculate would claim her as his. \n\nThat was the promise of Whore Caste - to be claimed into a polyamorous coven, twelve whores and one Whoremaster. Thirteen lovers locked together for all eternity. \n\nThe big cock found a place deep inside her, a new anatomical construct that caused her to orgasm instantly. Her body convulsed and spasmed as her squirt gushed out around his still pounding cock. \n\nRay laughed gently. \"Look at you, not even complete yet and you're cumming like a geyser.\" \n\nShe laughed and rolled onto her back. \n\nThe giant took her ankles in his hands and bent her thighs back against her big breasts. \n\nHis thick cock thrust into her again, even deeper now. \n\nHer eyes rolled back in her head as Ray smiled knowingly down at her. \n\nSugar had given her a double dose of slutifier - both her former ovaries were now pumping hormones into her system, turning her into a wanton bundle of sexual desire. \n\nThat was why she had seduced Evelyn on the bus: she was unable to control herself even for the short trip to Stallion's from the college. \n\nHis thrusts became harder, more urgent. \n\nShe smiled up at him. \"Take me, Ray. Please?\" \n\nHe shook his head and smiled gently. \"Don't you worry, you're gonna be somebody's favorite real soon, Inge.\" \n\nHe arched his back and came, his big cock pumping into the thick condom. \n\nShe crossed her legs behind his back, holding him deep inside her. \n\nAfter the throbbing stopped, Ray lay over on his side, carrying her with him, still deep inside her. \n\nHe pulled out slowly. \n\nShe looked down longingly at the full condom. \n\n\"Hey, you don't wanna be stuck out here in the middle of nowhere anyway, do ya?\" Ray asked. \n\n\"I guess not,\" Inge said. \n\nRay got to his feet, the laden condom clinging precariously to his massive cock. He walked into the bathroom and Inge watched his powerfully muscled body as he went in and began cleaning himself. \n\nHe came back a few minutes later, his thick cock hanging like a flesh colored club between his knees. \n\nRay took her hand and helped her to her feet. He held a grease pencil in his right hand. \"Are you 100% sure about this? You'll still fuck like a rabbit as a Professional Caste.\" \n\nShe looked up into his eyes. \"I want my only job to be to give pleasure, Ray.\" \n\nRay nodded. \"Then let's make you perfect.\" \n\nShe smiled as he scrawled the initials 'SW' on her forehead with the grease pencil. \n\n*** \n\nBen smiled as the former brunette coed, now a cheap slut, bounced contentedly reverse cowgirl on his cock. \n\nThe blonde was kneeling between his thighs, licking Ben's nuts and the brunette's clit as they fucked. \n\nThe bus was an orgy. \n\nNot his first orgy - he had spent a wild night in a crack house in his youth. But, the cast of this orgy was definitely a class above crack whores. He was having a blast watching the coed hard bodies playing out his wildest fantasies all over the bus. \n\nA short haired brunette was leaning over one of the bus seats begging someone to fuck her ass as her perky tits swung forward and back with each thrust. \n\nTwo blondes were locked in a passionate 69 across two front seats, their mouths attached firmly to each other's cunts. \n\nWhat sort of magic was this? Or, was it hypnotism? Some sort of nerve gas? \n\nWhatever it was, he was having trouble holding back his orgasm as the girls worked hard for his cum. \n\nSmiling, he slapped the bouncing buttocks of the brunette who rode him. \"Grind harder, slut.\" \n\nShe laughed and started moving her hips in slow circles. \n\nBen leaned back in the seat and closed his eyes. \n\n*** \n\nIn the shower, Evelyn was standing in 8213's embrace. He held her left leg, wrapping it round his waist as his cock slid deep into her pussy. She giggled and kissed him. \n\nShe felt 9745's strong hands on her buttocks and gasped as he pressed his body against her from behind. \n\nShe was pressed between the two studs. \n\n9745's cock pressed at her asshole. \n\n\"N... No... I've never.\" \n\n\"Don't be silly,\" Sugar said. She stood beside them and touched her index finger gently to Evelyn's temple. \n\nDesire overwhelmed her! She wanted the man's cock in her ass! She needed it. \n\n\"Yes! Fuck my ass!\" \n\nThe cock probed at her back entrance and she pushed, somehow knowing exactly what to do to accept the huge... \n\nHe pushed past her sphincter and surged inside. \n\n\"God!\" Evelyn screamed. Two... I have two inside me, she thought. \n\n\"Yes, you do,\" Sugar laughed. The woman had read her mind. \"Whatever you want, anything you want. Any pleasure you desire - it can be yours.\" Her eyes sparkled as she spoke, eyes full of mischief and compassion. \n\n\"Full... God, I'm so full.\" \n\nSugar kissed her and she sucked Sugar's tongue greedily as the cocks moved inside her, fucking her. \n\nShe came hard and moaned into Sugar's mouth. \n\nBoth cocks throbbed inside her as they filled her with cum. \n\nThe three of them collapsed to the shower floor as Sugar smiled down at them. \n\nThe men withdrew from her, their hands caressing and kneading her flesh as she lay in the warm shower spray and smiled. \n\n\"That will be all, agents,\" Sugar said. \n\nThe agents smiled at Evelyn and left through the hole in the wall, gathering their clothes as they went. \n\nSugar knelt beside her. \n\n\"Did you make me do all those things?\" Evelyn moaned. \n\nSugar caressed Evelyn's breasts. \"I just... lubricated your will a little. You're so frustrated, you just needed a little push to send you over the edge, that's all.\" \n\nEvelyn sat up. \"Who are you people?\" \n\nSugar laughed and sat down beside her. \"Let me tell you a story...\" \n\n*** \n\n\"I can't!\" Kimiko whined. She cowered at Demonica's feet. \n\n\"Of course you can,\" Demonica whispered in the darkness of the cave. She leaned against a three foot high block of stone that projected from the cavern floor in the middle of a large chamber. \n\nKimiko's tears fell. \"Don't make me.\" \n\nDemonica knelt and lifted the rubber girl's face. \"There now, stop crying. Have faith in the Master's will. I will not die.\" \n\n\"Might. You might! What then?\" the sniveling woman whined. \n\nDemonica squeezed her black latex encased cheeks and Kimiko murmured in pain and pleasure. \"I will not. But, if I do? Throw yourself over the cliff and join me in hell. I will make you scream for eternity.\" \n\nKimiko smiled and licked her lips, then she threw her arms around Demonica's neck. \"Don't die.\" \n\n\"I will not.\" Demonica stood up and unbuttoned her black rubber skirt, letting it fall to the stone floor. \n\nKimiko gazed longingly at Demonica's hairless, glistening sex. \n\nDemonica smiled at her and ran her clawed middle finger along her wet slit. Then she held out the finger and Kimiko dutifully sucked the digit into her mouth, smiling as she tasted her mistress. \n\nDemonica nodded. The creature would die for her without hesitation. She pushed the finger deep into Kimiko's mouth, pushing into the girl's small throat. \n\nKimiko's eyes rolled back in her head. She existed to be used and thrived on abuse. \n\nDemonica turned away and undid her black rubber halter, letting her big, full breasts fall free. She removed the pentagram shaped nipple clips and her Ambrosia flowed, dripping down to spatter on the stone. \n\nShe sat her bare ass on the stone and Kimiko rushed to remove Demonica's thigh boots. \n\n\"You know the order of the shots?\" Demonica asked as she lay back on the stone and looked up. \n\nKimiko had to climb onto the stone platform beside her. She ran her small fingers over the syringes arrayed beside Demonica's body. \"Yellow shot, face. Red shot, between breasts. Green shot, stomach. Blue shot, cunt...\" \n\n\"No. Blue shot to my clit. Focus, Kimiko, this is important.\" She stroked the freak's face. \n\nKimiko cooed. \"Yes. Sorry.\" She looked down. \"Fix Kimiko after?\" \n\n\"Yes, my sweet, I promise.\" \n\nDemonica lay back on the stone slab and Kimiko picked up the first injection. \n\n*** \n\nEvelyn stood in the trailer bedroom and watched the enormous workers toiling through the window. \"Who are they - were they?\" \n\n\"Criminals for the most part,\" Sugar said. They were both naked. Sugar was lying on her side on the mattress, her miraculous curves on full display as Evelyn stood by the window. \n\n\"It's so strange. I should be terrified,\" Evelyn said and looked down at her naked body. \"Not only that, I would never have allowed myself to be naked in front of someone before. It's like I have no shame.\" \n\n\"Isn't that a good thing?\" Sugar asked. Her fingers moved between her thighs, masturbating her clit gently in the evening sun. \n\nEvelyn knelt by the mattress. \"Is this all your doing?\" \n\n\"Partly,\" Sugar said. She took her moist finger from between her legs and rubbed the gloss across Evelyn's lips. \n\nEvelyn moaned and licked the woman's juices from her lips, savoring the flavor. \n\n\"I'm simply telling that part of your brain that causes you to feel shame and anxiety to loosen up. This is what you want deep down inside. You want to be free with someone without boundaries.\" \n\n\"But, it's not me. You're making me...\" \n\n\"No, Evelyn, I'm just telling you it's okay.\" She caressed Evelyn's cheek. \"You were one of us before you ever laid eyes on this place. I can see that - it's part of my power.\" \n\n\"But, it's wrong...\" \n\n\"I know. When we make changes inside their heads? It's against their will. We're controlling them, but Evelyn it's for their own good. This world doesn't work. The new one will.\" \n\nEvelyn looked out the window. \"What's going to happen to them? The other astronomy students? Professor Sorenson?\" \n\nSugar pulled her into her arms, nestling her against her breasts. \"Some of the students - those who have skills will be offered Professional Caste. They'll be made immortal and physically perfect and allowed to live their lives fully.\" \n\nSugar kissed her neck. \"Others will become Whore Caste, and they will live to service others.\" \n\n\"Sugar, can't you see that's wrong?\" \n\nSugar laughed. \"They will be deliriously happy. Happier than they've ever been in their lives - happier than they ever could be in their old lives. We're not consigning them to hell, darling.\" \n\n\"No, you reserve that for Worker Caste,\" Evelyn said icily. \n\nSugar nodded. \"No system is perfect. What's done to Worker Caste is outside my control. I'm in the business of pleasing people.\" \n\n\"Will Sorenson be Professional Caste?\" \n\nSugar laughed. \"We offered. But, Inge Sorenson has had enough of science. She wants to be Whore Caste - Stripper Whore to be specific. She wants to be lusted after and desired.\" \n\n\"She chose that?\" Evelyn whispered. \n\n\"Don't sound so shocked. Inge Sorenson has lead a lonely life and she's ready for a change. The wallflower wants to be a party girl, and why not? There's nothing wrong with wanting to be desired.\" \n\nEvelyn sighed. \"No... I suppose not.\" \n\n\"And, what about Evelyn Morris?\" Sugar asked. \"What do you want?\" \n\nEvelyn smiled. \"I... don't know. Professional Caste, maybe?\" \n\n\"Well, you certainly have the brains for it,\" Sugar said. \"Tell you what, why don't you watch the transformations of your friends and then you can decide?\" \n\n*** \n\nMona had a long drive through upstate New York, so her temper was short. For the past hour, she had been sitting outside the office at the UPS warehouse waiting to speak to Robert Lindsey, Angela Owens' former boss. \n\nHis secretary was an especially vapid looking brunette who appeared to be all legs and boobs. She smiled at Mona from behind her desk outside Lindsey's office, but Mona had the odd feeling the woman was occasionally smirking. \n\nLindsey himself had only come to his door briefly when she first arrived - he had looked out with tired and nervous eyes before shutting the door. \n\nThe receptionist had then announced that 'Mr. Lindsey had to make a phone call' and that Mona should 'make herself comfortable'. \n\nThat had been an hour ago, and Mona was not comfortable. Not even a little. \n\nThe phone on the receptionist's desk buzzed. \n\nThe woman stared directly at Mona with her plastic smile as she picked up the phone. \"Yes, sir,\" she said. \n\nShe hung up the phone and said, \"Mr. Lindsey will see you now.\" \n\nMona got up and walked to the door. \n\nLindsey opened it. \"Dr. Karnes, sorry to keep you waiting.\" He held out his hand. \n\nMona shook it. \"I have a few questions about Angela Owens...\" \n\n\"Your aunt was one of the disappearances wasn't she? Melanie Karnes? The lady who owned the pizzeria?\" He motioned her inside to a small chair in front of his desk. \n\n\"Yes. How did you know that?\" She asked as she sat down. \n\n\"Your last name. I remember it from all the police interviews I had to give...\" \n\n\"Really? There were that many interviews? I heard you hid behind lawyers the entire time,\" Mona said. \n\nRobert Lindsey paused midway to his chair. \"Dr. Karnes, I don't know what you've been told, but I lost people that day. I'd known Angela for years and Madison was very special to me.\" He sat down. \n\n\"Then you won't have a problem handing over Owens's log information for that day,\" Mona said. \n\n\"I already gave it to the police...\" \n\n\"And, from what I can tell they 've come up empty. I'm going to look into it myself.\" \n\n\"That's admirable, but I can't give you the logs. You're not the police...\" \n\n\"No, I'm worse. I'm a nosy doctor with deep pockets and lots of friends. I'll make some calls and there'll be a news crew camped outside this warehouse every day asking you why you needed a lawyer when your employees were abducted?\" \n\nLindsey stood up. \"Are you threatening me?!\" \n\n\"Yes. Yes, I am.\" \n\nHe gritted his teeth. \"I had nothing to do with this!\" \n\n\"Tell it to the press. Or, give me the logs and I'll leave. Your choice,\" Mona said. \n\nHe opened his desk drawer and pulled out a manila folder. He tossed it into her lap. \"Fine. Take it.\" \n\nMona stared at the folder. \"You knew I would ask for this?\" \n\n\"Everybody who comes here asking about that night wants the log, Dr. Karnes. Now you have it. Are we done?\" \n\nMona stood up. \"I think so. Thank you.\" \n\nHe laughed. \"Yeah, don't thank me.\" \n\nMona stared at him with her hand on the doorknob. \"What's that supposed to mean?\" \n\nHe shook his head. He was smiling, but his eyes looked tired. \"Sometimes ignorance is bliss, Doctor. It's possible to know too much. You'll see.\" \n\n\"You know something, don't you?\" \n\nHe pointed at the folder in her hand. \"You got what you came for. Now, please leave.\" \n\n*** \n\nRobert Lindsey watched Mona Karnes pull out of the lot. Then he picked up his cell phone. \n\n\"It's done,\" he said. \"Dr. Mona Karnes, attractive - she's Melanie Karnes' niece. I sent her your way.\" \n\nThe voice on the other end of the call spoke. \n\nRobert answered. \"Look, I've done everything you've asked, Angela...\" \n\nMore words from the other side. \n\nRobert looked panicked. \"Sugar... I'm sorry, I meant to say Sugar. It won't happen again. But, please, my wife? You have to undo what you've done to her, Sugar. Please.\" \n\nLaughter on the other end. \n\nRobert looked deflated. He held out the phone. \"She wants to talk to you.\" \n\nThe brunette receptionist took the phone from him and held it to her ear. \"Yes, Mistress? Oh, he was a very good boy. Did just what he was told.\" She smiled and winked at Robert. \n\nHe looked at the floor. \n\n\"No, I don't think I should be easier on him. He likes pain now, don't you, Robert?\" \n\nRobert nodded. \"Yes, Mistress,\" he whispered. \n\nShe opened his desk drawer and pulled out a long, black, coiled leather whip. \"As a matter of fact, I was just getting ready to give him his medicine.\" \n\nRobert whimpered. \n\n*** \n\nKimiko huddled in the corner of the cavern and watched the stone slab where Demonica slumbered. \n\nThere had been changes. \n\nKimiko rocked gently as she observed the transformation - a transformation that shouldn't have been possible. Melanie Karnes had already been transformed months ago when she became Demonica, and the transformed were immune to all future transformations. \n\nBut, not this transformation. \n\nDemonica went into a siezure and dragged her long, black claws along the top of the stone altar. \n\nKimiko stared at the scars Demonica had inflicted on the rock. \n\n\"Demonica?\" Ray called from somewhere near the cave entrance. \n\nKimiko jumped at the sound. \n\nShe stared at her mistress transforming on the stone altar. To leave her at this point was horrifying, but the Whoremaster might interfere. She dashed through the corridor toward the crack in the wall. \n\n*** \n\nRay almost didn't see Kimiko running toward him - the stygian darkness of the cavern was almost complete. \n\nShe stood panting, framed by the triangular crack in the wall. \n\n\"Where's Demonica?\" Ray asked. \n\n\"Busy,\" Kimiko gasped. \n\n\"We have coeds to transform.\" \n\n\"I will do it.\" \n\nRay stared at her. \"You? You've never...\" \n\n\"I know how.\" \n\nThe rubber creature looked terrified to Ray. In truth, he had always found her off-putting - she was more an extension of Demonica than a real person. Even in bed, she never strayed far from her mistress during group sex, preferring to lick Demonica's pussy contentedly while everyone else fucked. \n\n\"They're very valuable, Kimiko. Havana won't be pleased if their transformations are screwed up...\" \n\n\"I know how! Not stupid!\" \n\nRay sighed and rolled his eyes. \"Honey, I'm not saying that. It's just - this is a lot of people. We have to do our best.\" \n\nShe smiled with her ruby colored rubberized lips. \"I will make them beautiful.\" \n\n*** \n\nEvelyn stood in the door of the bus and watched the orgy going on. She was naked - clothing now seemed pointless to her. \n\nAnd, it was definitely pointless to the college students fucking in every combination in the bus seats. The bus driver had a brunette coed bent over one of the seats near the middle of the bus, his balls slapped against her as he fucked her from behind, his fingers wrapped in her long hair, pulling back her head as she moaned. ",
        "A blonde knelt behind him, tonguing his balls and ass, her slender fingers plunging in and out of her own dripping snatch. \n\nA naked boy abruptly scooted on his back under the blonde's thighs and replaced her masturbating fingers with his lips and tongue. \n\nEvelyn smiled and began rubbing her own clit. Watching was almost as much fun as participating. \n\nSugar had done something to her, to all of them - Evelyn knew this. But, she was fairly certain she had done less to Evelyn than to the other people. \n\nHad this always been who she was deep inside? She had always had a high sex drive, she had simply not had the courage to explore it other than with herself. \n\nNow, she had plenty of courage. She was literally oozing with it. \n\nSomeone touched her face - a college boy with a long, thin cock stood up from the seat beside her and held the tip near her mouth. \n\nShe smiled and nodded, taking him between her lips and sucking him in. \n\nShe could taste him and the girl he had been fucking a few minutes before. \n\nEvelyn closed her eyes and sucked, focusing on maximizing the boy's pleasure, and he began fucking her throat in long, slow strokes. \n\nShe felt a warm hand on her hip. \"Somebody's getting into the swing of things,\" Sugar said. \n\nEvelyn pulled the cock from her mouth and stroked him with her hand, licking the tip seductively. \"I love this.\" \n\n\"We have to move the party underground, unfortunately,\" Sugar whispered as her hand trailed down Evelyn's buttocks and explored between her cheeks. She made lazy circles around Evelyn's asshole with her lacquered nail. \n\nEvelyn moaned and sucked the cock again. \n\n\"You, driver?\" Sugar said out loud. \n\nThe bus driver turned and smiled. \n\n\"Drive the bus around the back of the building. You need to unload... both the cargo and your balls.\" \n\nThe bus driver groaned and pumped jizz into the brunette as Sugar giggled. \n\n*** \n\n\"We're a bit like cowgirls,\" Sugar said. \n\n\"Hmm?\" Evelyn asked licking the boy's cum from her lips. They were following the crowd of students onto a loading dock and into the back of the porn store. \n\nSugar stopped and pulled a boy and girl to their feet - they had stopped to try doggy style on the concrete. She shooed them forward into the store. \"You know? Herding them - they are a bit like cattle in this state.\" \n\nEvelyn laughed as a thin redhead wrapped her arms around her neck and French kissed her. She had the initials 'CW' written on her forehead written in grease pencil courtesy of Sugar before they left the bus. \n\n\"I've always liked you, Evelyn,\" the girl moaned. \n\nEvelyn was shocked - first that the girl had been attacted to her before all this, and second because she had no idea what the girl's name was. She lowered her hands to the girl's thin buttocks. \"I... always thought you were hot too.\" \n\nSugar laughed. \n\nThe girl held her hand and followed along beside Evelyn contentedly. \n\n\"Her name is Ciara,\" Sugar said. \n\n\"I... knew that,\" Evelyn whispered. \n\n\"No, you didn't... don't lie to a telepath, dear,\" Sugar whispered and laughed. \n\n\"She might hear,\" Evelyn whispered. \n\n\"Ciara can barely understand words spoken directly to her at the moment. You, the bus driver, and Professor Sorenson are the only one's with a clear mind. The rest think they are having a vivid sex dream.\" \n\nEvelyn smiled at Ciara and she smiled sleepily back. \"I... never noticed her before. And, I mean, I wasn't bi before...\" \n\n\"Well, she was. You think you had the corner on the loneliness market, Evelyn? Think again. Ciara there was attracted to you but too shy and damaged to even talk to you. Poor thing would have gone through her entire life without acting on her impulses, same as you.\" \n\nEvelyn put her arm around Ciara's waist and pulled her close as they walked. The girl snuggled against her. \"What's going to happen to her?\" \n\n\"I wrote codes on each of their foreheads - Ciara is a 'CW': Cheerleader Whore. We're going to fill out her body with a tight little ass and canteloupe sized tits, raise the cheekbones, enlarge the eyes, make that red hair thicker and longer. She'll be quite the little sex kitten when we're done.\" \n\nEvelyn felt suddenly protective of the girl. \n\n\"Relax, she'll be incredibly happy - you can keep her if you want. We sometimes assign Whore Caste to Professional Caste on a permanent basis. You could keep her as long as you want. Make a proper little wife out of her if you like, until you tire of her, of course.\" \n\nEvelyn stared at Sugar in horror. \n\nSugar laughed. \"I know. It's terrifying how easily we objectify them. But, you'll accept it in time.\" \n\nThe corridor beyond the loading bay led to a large elevator. \n\nSugar pressed the button and the doors hissed open. \n\n*** \n\nIn her dream, Demonica opened her eyes. She was in the dark cathedral from her vision, lying on her back as she had when she was first transformed in the farm house basement. \n\nIt felt like a lifetime ago, though it had only been a few months. \n\nHe lay beside her, naked, propped on his elbow. He smiled down at her and she smiled back. \n\n\"It's nice to see you again, Demonica,\" he said and brushed her hair out of her eyes. \n\n\"Master...\" \n\n\"No, don't call me Master.\" \n\n\"But, you're Satan...\" \n\nHe laughed and shook his head. \"Am I? Maybe... things are so confusing sometimes. I get unstuck in time. Sometimes I'm not sure which me I am.\" \n\nShe laughed. \"I don't understand.\" \n\nHe frowned slightly. \"I'm sorry, Melanie. I'm sorry for everything. This me is anyway at whatever time I'm talking to you. For what that's worth.\" \n\n\"I'm not Melanie anymore, I'm Demonica,\" she whispered. \n\nHe nodded. \"You will always be Melanie, and Melanie was always Demonica. And, for that, I'm sorry.\" \n\nShe tried to raise up, but her head spun. \n\n\"Shh, relax. It's okay. Rest.\" \n\n\"I'm... not sorry you made me Demonica. I love being her.\" \n\nHe gave her a weak smile. \"I know. But, all the same, I'm sorry. It's all predestiny, you see. Decided before you were born. This is necessary, but it doesn't mean I have to enjoy it.\" \n\n\"You made me a goddess,\" she whispered and put her arms around his neck. \n\n\"Yes, but sometimes goddesses are cruel. I just need Melanie to remember that I made her evil. She didn't start out that way.\" He smiled at her. \"You are all the victims of a god's plans. You are the extension of my will, and you are blameless. What's left of Melanie might find comfort in that.\" \n\nHe kissed her. \"Goodbye, Demonica.\" \n\n\"Goodbye? Won't I see you again?\" \n\nHe shook his head. \"You no longer need me. You won't need my guidance. You will follow your own path through dark places.\" \n\n*** \n\nTen floors beneath Stallion's Adult Video, the orgy started anew. \n\nCiara knelt in front of Evelyn, looking up into her eyes as she kissed and licked Evelyn's pussy. \n\nEvelyn ran her fingers through the girl's red hair as she worked. \n\nEvelyn knew Ciara was swallowing her juices mixed with the agents' cum, and that thought made her quiver inside. \n\nSugar touched Evelyn's hip. \"Enjoy yourself.\" She nodded toward the strange, gimp suited woman who was leading one of the coeds to an operating table. \"When she comes for Ciara, tell Kimiko what you want for your friend - breast size, hair color, height, weight. The machines can do anything you want. Even her personality: she can be made sultry and soft spoken, giggly, anything you like.\" \n\n\"I... she's perfect the way she is,\" Evelyn breathed as her knees began to tremble from the tender ministrations. \n\nSugar kissed her cheek. \"Don't be silly. Transform her. Get a feel for the power. You might find it addictive.\" She stepped away. \n\n\"Where are you going?\" Evelyn gasped. \n\n\"Back upstairs. I'm expecting a visitor.\" \n\n*** \n\nAfter leaving the UPS warehouse, Mona drove directly to Stallion's Adult Video west of Ithaca. It was the next to last stop on Angela Owens's route that fateful day. \n\nShe hadn't bothered stopping at the pizzeria - it was boarded up and closed now, soon to be sold. She would find nothing there. \n\nHer heart dropped when she saw the construction fence surrounding Stallion's and the heavy equipment parked all around it. \n\nClosed. Another dead end, Mona thought. \n\nThen she saw the neon sign was lit and soft light filtered through the front door. \n\nShe parked beside a construction truck and walked across the muddy parking lot to the front door. \n\n\"Welcome to Stallion's Adult Video, where your erotic dreams come true,\" a bored sounding college girl said from a small desk inside the entry. \n\nMona did a double take. The girl was wearing a pink plastic body suit under her blue Stallion's short dress. Her electric pink hair and plastic doll mask completed the look: she looked like a sex robot in a dress. \n\n\"I... I need to speak to the manager,\" Mona said. \n\n\"Inside. Big guy. You can't miss him,\" the girl said. It sounded like her voice was coming from a speaker in her throat. \n\nThe inner door buzzed and clicked open. \n\nMona put her hand on the door handle. \n\n\"Abandon all hope, ye who enter here,\" the robot girl said. \n\n\"What?\" \n\nThe girl shrugged and looked away. \n\nMona stepped into the brightly lit interior. \n\nA tall redhead in a white rubber halter top and mini skirt was stocking shelves. \n\nBehind the counter, a huge man with brown hair smiled down at her. \"Hiya, what can we do ya for?\" \n\nMona shrank back a little. \"Are you the manager?\" \n\nHe nodded. \"Sure am.\" \n\n\"I...\" And, Mona blacked out. \n\n*** \n\nSugar stood behind the thin blonde with her fingers on the woman's temples. \"Oh, Ray, look at her! I want this one!\" \n\nRay's eyes traveled up and down the blonde who was literally sleeping standing up. \"Grab her ID.\" \n\nSugar eased the woman's handbag off her shoulder and tossed it to Ray. \n\nShe ran her fingers gently down the woman's sides. \"Look at that face.\" \n\nRay opened her purse and held up her ID. \"Dr. Mona Karnes, lives in Manhattan...\" \n\n\"A doctor? I never saw a doctor who looked like this.\" Sugar closed her eyes as she delved into Mona's mind. \"Fuck. Oh, my God, Ray.\" \n\n\"What's wrong?\" \n\nSugar shook her head. \"Most people's minds are like little houses they live in... this is like standing in a cathedral... no, not a cathedral - a library! A huge library filled with books.\" She laughed. \"I can't even understand half the words going through her head.\" \n\nRay looked down at his smartphone. \"Not surprising - she's a surgeon and a scientist. Genetics expert. She's got degrees from half a dozen universities, all of them Ivy League.\" \n\nSugar gasped as she explored Mona's mind. \"Ooo, lesbian. I thought she was checking me out when she came through the door.\" Sugar laughed. \"Married...\" \n\n\"Yeah,\" Ray said. \"Wife's name is Bobbie...\" \n\n\"But, she calls her Butch,\" Sugar giggled. \n\n\"SlutzNet don't have that much detail.\" \n\n\"She's really in love,\" Sugar said. \"We have to take them both...\" \n\nRay shook his head. \"I just got a priority message.\" He waved the cellphone at Sugar. \"Church says to stand down. Let her go. She's a VIP, and they plan to take her in voluntarily to Professional Caste. They want that mumbo jumbo in her brain.\" \n\n\"Aww, come on...\" \n\n\"Sugar...\" \n\n\"But, she's so cute, Ray.\" Sugar eased her hand into Mona's pants. \"Tiny little panties. Lace. Mmm, all shaved and wet.\" \n\nRay laughed. \"Church says no. I thought you already picked out a toy?\" \n\nSugar rolled her eyes. \"I could have two toys in one day...\" \n\n\"Not that one. Too expensive.\" \n\n\"Fine.\" She kissed Mona deep with her fingers still buried in Mona's snatch. \n\nMona leaned back when Sugar broke the kiss. \n\n\"Now, cum for me,\" Sugar whispered. \n\n\"Jesus,\" Ray groaned as he rubbed the long, hard lump extending down the leg of his pants. \n\nSugar winked at him as Mona cried out in her sleep, collapsing against Sugar as the psychic induced orgasm engulfed her. \n\nSugar held her in one arm as she slowly drew her hand from the woman's soaked crotch. Sugar licked and sucked the nectar from her fingers. \"Mmm, honey, you are definitely coming back to visit me.\" \n\n*** \n\nMona was sitting in her car. She felt warm and content. \n\nShe was wet, like she had been in bed with Butch that morning. \n\nMona blinked and stared out the window at the concrete facade of Stallion's Adult Video. As she watched, the lights went off inside. \n\nShe stared at the store for a minute. \n\nHad she gone inside? Yes! She had. She had gone inside and talked to the manager and learned nothing. And, now it was time to go to her hotel. \n\nShe nodded. Yes, that was right. Stallion's was a dead end, and now it was time to go to the hotel. \n\nShe smiled thinking about the tall redhead in the porn store. She liked tall girls, tough girls like Bobbie. The redhead certainly fit that description. She felt a surge through her pussy at the thought of kissing the redhead. \n\nShe shook her head. Mona would never do that, of course. Butch was all she wanted. \n\nStill. Maybe the three of them? \n\nShe felt a tremor go through her at the thought of a menage a trois with Butch and the redhead. Maybe they could both use strapons on her... \n\nMona jumped as if she had been electrocuted. \n\nWhat was wrong with her? \n\nShe never had those kind of fantasies. \n\nDid she? \n\nShe shook her head and pulled out of the parking lot, unable to see the redhead smiling at her from the other side of the glass door. \n\n*** \n\n\"Tits, big?\" The strange gimp suited woman asked. She was standing behind Ciara with her hands cupping Ciara's perky breasts. \n\nCiara moaned as she was fondled. \n\n\"What?\" Evelyn asked. \n\n\"Tits, big? Tits, small?\" \n\nEvelyn shook her head, finally understanding the question. \"Can't you just... leave her the way she is?\" \n\n\"No. Ambrosia titties. Like this.\" Kimiko squeezed her own latex covered left nipple. A jet of white milk sprayed out and struck Ciara's hip. \n\nThe redhead cried out and fell to her knees. \"Fuck me! Oh, please, God, somebody fuck me!\" \n\nEvelyn stumbled back - Ciara had been reduced to a groveling sex toy by the Ambrosia landing on her skin. \n\nKimiko giggled and pushed Ciara onto her hands and knees. \n\nShe held up two of her rubberized fingers, licked them, and then pushed them up Ciara's ass from behind. \n\nCiara murmured and laid her face on the lab floor as Kimiko ass fucked her. \n\n\"Titties, big? Titties, small? Choose,\" Kimiko said. \n\n\"Big... bigger... just a little,\" Evelyn said. \n\nKimiko pulled out her fingers and slapped Ciara's ass, causing the girl to yelp. \"You, up.\" \n\nCiara stood up on wobbly legs and turned toward Kimiko. \n\nEvelyn stumbled backward at the sight of Kimiko driving two syringes into Ciara's nipples. \n\n\"Hey! Don't be so rough!\" Evelyn yelled and balled up her fists. \n\n\"You. Too soft,\" Kimiko hissed. \n\nCiara just stared down at her chest, the long needles embedded in her nipples, the syringes emptying into her breasts. \n\nCiara passed out and fell back into Evelyn's arms. The needles slid out of her rapidly swelling breasts. \n\nKimiko laughed and dropped the needles into a sharps container. \n\n\"Goddamn it! You didn't have to do that! Are you some kind of sadist?\" Evelyn grumbled as she struggled to hold the dead weight of Ciara on her feet. \n\n\"Sadist. Masochist. Sub slut. Pain slut. Slave to my beloved,\" Kimiko said as she took hold of a yellow box with red and green buttons that hung from the high ceiling. She pressed a green button and machinery groaned to life high above. \n\nEvelyn looked up to see a metal winch moving on a track in the ceiling. \n\nA cable descended from it. A black harness dangled from the cable. \n\n\"Harness her,\" Kimiko said. \"Then, the mask. Over her mouth and nose.\" \n\nEvelyn worked the harness onto Ciara's thin body, fitting her arms into the vest and clipping it closed around her waist. Two straps fit around her upper thighs. The black rubber mask fit over her mouth and nose and fastened behind her head. \n\nKimiko pressed a button and the cable to the ceiling drew tight. \n\nEvelyn felt Ciara's weight lifted away from her and the girl rose into the air. \n\n\"What are you going to do with her?\" Evelyn asked as she watched the redhead rise higher and higher above the steel grate floor. \n\nKimiko said nothing, but the winch began to crawl back long it's track. It carried Ciara over a clear cylinder filled with pink liquid near the back of the room. \n\nHer feet dangled over the open top of the cylinder. \n\n\"What... is that?\" \n\n\"Transformation tube,\" Kimiko said and pressed another button. \n\nCiara slid gently down, her legs entering the pink fluid. \n\nIt didn't have the consistency of water - it was thicker, almost like a gel. \n\nCiara's eyes opened wide as her hips slid under. She cried out behind the gag. \n\n\"Concentrated Ambrosia,\" Kimiko said. \"Pleasure.\" \n\nCiara's eyes rolled back in her head as she descended, her body racked by intense orgasms. \n\nEvelyn watched mesmerized as Ciara slid completely into the pink goo. \n\nHer hair was fanned out around her face and Ciara stared out through the pink liquid at Evelyn. \n\nA headset descended into the tube. Goggles slid over her eyes and headphones closed over her ears. \n\nMechanical tentacles rose from the floor. \n\n\"Jesus,\" Evelyn whispered. \n\nTwo of the tentacles were equipped with dildos and they quickly pushed up into her pussy and ass. \n\nCiara jerked and writhed as she was penetrated. \n\nTwo suction cups closed on her nipples and Evelyn could see them undulating as they sucked rhythmically on Ciara's swelling breasts. \n\n\"Hair red?\" Kimiko asked as she slid her finger on a tablet computer. \n\n\"Yes... only...\" Could she do this? Could she change Ciara against her will? Evelyn sighed. \"I want it thicker and longer. All the way to her ass.\" \n\nKimiko smiled and nodded, her rubber fingers moving on the screen. \n\nEvelyn felt a quiver of excitement. \"How big will her breasts be?\" \n\n\"36 DDD.\" \n\nEvelyn smiled. \"And, her waist...\" \n\n\"You want it small? Corset small?\" Kimiko asked with a sly grin. \n\nEvelyn licked her lips. \"How small?\" \n\n\"Nineteen inches?\" \n\nEvelyn gasped. \"But, wide hips?\" \n\n\"36. Full. Nice round ass?\" \n\nEvelyn just nodded. \"Higher cheekbones? And, her nose, a little more upturned?\" \n\nKimiko stepped closer and turned the tablet toward Evelyn. \"Like this?\" \n\nEvelyn laughed. A perfected version of Ciara's face was on the screen. \n\n\"You want her double slutified? A real whore for you?\" Kimiko asked. She reached out with her free hand and stroked Evelyn's clit. \n\nThis new world was unbelievable! She smiled and nodded. \"Yes.\" \n\nIn the tube, two needles rose up on tentacles and pressed into Ciara's abdomen. \n\n\"Standard Cheerleader Whore programming?\" Kimiko asked as she leaned up and whispered into Evelyn's ear, her finger still working on Evelyn's now erect and throbbing clit. \n\n\"What is that?\" Evelyn whispered back. \n\n\"She will think she is a college cheerleader. Bubbly. Happy. Completely in love with you. Athletic... limber,\" Kimiko said and kissed Evelyn's neck. \"Like this...\" \n\nShe held up the tablet. \n\nA computer generated model of Ciara appeared on the screen, her body transformed to Evelyn's specifications, wearing a tight, short, blue and white rubber cheerleader outfit and matching ankle boots with heels. Her eyes were huge and bright, her expression vapid, long red hair in a single braid down her back, breasts straining against the uniform emblazened with the word SLUTZ across them. \n\nEvelyn almost laughed. It was absurd, and, at the same time, completely erotic. \n\nAnd, then Kimiko screamed. \n\nShe was looking behind Evelyn and she stumbled back, falling to her knees on the steel grate, the tablet clattering away from her. \n\nEvelyn turned slowly. \n",
        "The devil was behind her, and the devil was a woman. \n\nEvelyn blinked, trying to make sense of the creature standing a few yards away. \n\nShe was tall, towering well over seven feet. Taller even than Sugar. \n\nHer skin color was a combination of caramel and rust, and she wore black latex thigh boots with stiletto heels. Her thighs were bulging with muscles, but still long and feminine. \n\nHer hips were strong and wide, and at the top of her pelvis, small onyx horns protruded. \n\nShe wore a loin dress, wide enough to cover her sex and inner thighs, but leaving the full curve of her hips exposed. \n\nHer waist was thin in comparison, but defined by six pack abs. \n\nThe breasts were enormous and round, held in place by the black latex. The wide, thick nipples were clearly outlined beneath the rubber. \n\nThe woman's neck was long and regal, the muscles standing out. \n\nHer face was demonic, but beautiful with high cheekbones and arching dark eyebrows. Two curving onyx horns rose up from a mane of lustrous, soft red hair. \n\nBut, it was the eyes that captivated. These would be the eyes that would follow Evelyn for the rest of her life, in her dreams and nightmares, when she closed her eyes in orgasm, they would always be there looking back at her. \n\nThey did not glow exactly. They flickered, a soft flame, like a fire in a stove on a winter's day. The comfort of a hearth, the smouldering light of lust, and the fires of hell rolled into one. \n\nShe smiled, her full lips colored a dark rusty red with hints of purple. Behind the lips were straight white teeth with long fangs barely glimpsed as she spoke. \"Don't grovel, Kimiko. It's still me.\" \n\nKimiko rose up from where she was lying prostrate on the floor. \n\nShe crawled on her knees to the woman and began to kiss her black latex boots, looking up in adoration. \n\n\"Who... are you?\" Evelyn asked. \n\nThe student orgy had come to a sudden stop as they stared at her from the floor. \n\nThe woman cocked her head sideways. \"I am the demon goddess Demonica, beloved succubus of Morpheus. I am Satan's whore, and I am evil incarnate, my pretty one.\" \n\n*** \n\nSugar ran to the elevator followed closely by five Church agents. \n\nRay had called from Level Ten: \"It's Demonica. At least I think it's her, Sugar, you need to get down here.\" \n\nSugar watched the indicator on the elevator wall counting up as they descended. \n\nThe Church agents drew their nine millimeters and chambered rounds. \n\n\"I hardly think that will be necessary,\" Sugar said as the elevator descended. \n\n\"We're here for your protection, Mistress,\" the lead agent said. \n\nThey had formed a circle around her, even in the elevator. \n\nThe door opened and the agents moved into the corridor. \n\n\"Clear front,\" one of them said and the lead agent led Sugar into the corridor. \n\nThe walk to the main lab seemed to take forever. \n\nRay was waiting just inside the lab door. He looked at Sugar and shook his head. \n\n\"Oh, my God. Demonica?\" Sugar whispered. \n\nThe demoness smiled at her. She stroked Kimiko's head as the freak knelt before her. \"Yes, my love. It's me.\" \n\n\"But, how...\" Sugar asked. \n\n\"Morpheus has transformed me a second time.\" \n\n\"That's... not possible. We can't be transformed twice.\" \n\nShe held out her strong, wide arms. \"And, yet, here I am.\" \n\nEvelyn was standing close to Demonica, staring at her in wonder. \n\n\"Evelyn, come here, please,\" Sugar said, holding out her hand. \n\nDemonica laughed. \"The look on your face, Sugar. Are you afraid I might eat her or something?\" \n\n\"I would just feel better if she were over here with me,\" Sugar said. \n\n\"Ahh, yes. Evelyn, can you feel Sugar's will working on you? Can you feel her tendrils in your mind, pulling you to her?\" \n\n\"What?\" Evelyn asked. \n\n\"Mind control. Sugar is subtle, but... demanding, aren't you, my love?\" \n\nSugar shook her head. \"Demonica, I'm not controlling her...\" \n\n\"No, you're enticing her. A thousand subtle little manipulations. My new eyes see all, my love.\" \n\n\"Evelyn, please come over here,\" Sugar said. \n\nThe agents began to aim their pistols toward Demonica. \n\nDemonica laughed. \"Are you going to let them shoot me, Sugar?\" \n\n\"No! Demonica, we just need a moment to figure out what is going on here.\" \n\nThe lead agent touched the earpiece in his ear. \"Say again?\" \n\nHe looked confused. \"But...\" \n\nFinally, he nodded. \"Stand down.\" He put his pistol back in his shoulder holster. \n\n\"What are you doing?\" Sugar whispered. \n\n\"Orders, Mistress. Havana says to stand down. Goddess Demonica is to be obeyed.\" He turned to leave the room and the other agents followed suit. \n\n\"Like fuck!\" Ray bellowed. He grabbed a nine millimeter out of the nearest agent's hand. \n\nThe man tried to take it back and Ray backhanded him, sending him skidding across the metal floor. \n\nThe nine millimeter looked like a toy in the Whoremaster's massive hand. \n\nThe other agents drew their weapons again, this time aiming at Ray. \n\nRay held his pistol at hip level, aimed at Demonica. \n\n\"Stop. Everyone, please stop,\" Demonica said. \"Ray isn't going to shoot me. He loves me, don't you?\" \n\n\"Of course, I do, but, honey, we need to know what the fuck is going on here. You've... changed.\" \n\n\"I know. But, I'm still me, Ray. Just better, that's all.\" Demonica turned to Sugar. \"I'm doing the Master's will, Sugar. The same as you. No one needs to be hurt.\" \n\nSugar put her hand on Ray's, pushing the gun down. \"It's okay, Ray.\" \n\nThe agent Ray had taken it from regained his feet and took the gun from Ray's hand with a scowl. \n\nDemonica smiled, showing her long fangs. \"See, we're going to be just fine. You may leave, agents.\" She walked slowly to Ray and Sugar, her heels tapping on the metal grate. \n\nSugar watched Demonica's hips roll and felt her lust rising. \n\nThe demoness smiled. \n\nBehind her, Evelyn stared transfixed at Demonica as she walked away. \n\nDemonica laid an onyx clawed hand on Sugar's face and did the same with Ray's. \"I still love you both. I always will.\" Her voice was deeper than it had been that morning. \n\nDemonica leaned down and kissed Sugar. Cinnamon with a hint of caramel and licorice lingered on Sugar's lips as Demonica then kissed Ray. \n\n\"I will complete the transformation of these whores - you see? Everything is as it was. I'm still me, just with... upgrades,\" Demonica said as she turned away. \n\nSugar half expected to see a devil tail extending downward beneath the loin dress. \n\nDemonica looked over her shoulder at Sugar and smiled, baring her fangs. \"No tail. But, you'll be amazed at some of my upgrades.\" \n\nSugar went pale. \n\nThe demoness had read her mind, something that shouldn't have been possible. \n\nDemonica winked and turned toward Kimiko who knelt beside Evelyn. \"Now, who's next for transformation?\" \n\nEvelyn was staring up at Demonica in rapt adoration. \n\n\"Evelyn? Why don't you come with us?\" Sugar said. \n\nEvelyn didn't look at her, she just shook her head. \"Ciara is in her transformaion tube. I don't want to leave her.\" \n\nDemonica ran a claw gently down Evelyn's round cheek. \"Don't worry, Sugar. I'll take good care of your new protege... excellent care.\" \n\nSugar gritted her teeth and stepped toward them. \n\nRay grasped her hand. \"She won't hurt her. Let it be.\" \n\nSugar sighed. \"We'll be upstairs.\" \n\n*** \n\nRay and Sugar walked toward the elevator. \n\n\"What the fuck is going on?\" Ray asked. \n\n\"I don't know. What she did isn't possible: you can't be transformed twice! Once you take final Ambrosia, your transformations are complete. You can't be genetically modified...\" \n\n\"Well, obviously, that's not correct - Jesus, Sugar, what the hell is she?\" Ray asked as he looked back over his shoulder at the door to the lab. \n\nSugar shook her head. \"Telepathic for one thing - she read my mind, Ray. Something else that shouldn't be possible.\" Sugar turned back toward the lab. \"And, I left Evelyn with her...\" \n\n\"Sugar, we can't do anything until we find out why the Church told the agents to stand down.\" \n\n\"Ray, you don't understand...\" \n\n\"You want Evelyn to become a White Witch, I know. But, Sugar, that's gonna depend on the girl - and right now, all she has eyes for is a seven and a half foot tall demon goddess.\" \n\nSugar sighed and turned away toward the elevator. \n\n*** \n\n\"Street Whore,\" Demonica said as she held a blonde coed's face in her clawed hand. \"The Church lacks... imagination.\" \n\nEvelyn looked at the SW written in grease pencil on the girl's forehead. \n\nThe woman was staring directly into Demonica's flaming eyes, a look of complete adoration on her pretty face. \n\n\"What would you do to her?\" Evelyn asked. \n\nDemonica laughed. \"Maybe I would make her like me - a succubus. Make her irresistable to men...\" She glanced at Evelyn and winked. \"And women.\" \n\nEvelyn flushed at the glance. \n\n\"What do you think, pretty? Should I give you horns? A forked tongue? Wings, perhaps?\" \n\nThe blonde smiled slightly. \"Anything you want, Mistress.\" \n\n\"Hmm,\" Demonica breathed. \"No, they picked you out for Street Whore, and a Street Whore you will be.\" She cocked her head to the side. \"Look at the ignorant whore - Sugar's mind fuck was very effective. She would gladly let me do anything I wanted to her. Why, she wouldn't even complain if I made her into something... hideous.\" \n\n\"Why would you do that?\" Evelyn asked. She was drawing closer to the demoness. \n\n\"There is beauty even in the grotesque. I can see that now. I see much clearer now than I did before,\" Demonica said. \"Take this one away, Kimiko.\" \n\n\"Yes, Mistress,\" Kimiko said and led the blonde toward an empty transformation tube. \n\nDemonica turned and put her hands on Evelyn's hips. \"And, what about you? What do you want to be when we make you grow up?\" \n\nEvelyn's heart skipped a beat. Looking directly into Demonica's eyes was like staring into the fires of hell. \"I... Sugar says it's up to me.\" \n\nDemonica laughed. \"Oh, did she?\" She turned away. \"Then your fate is sealed.\" \n\nEvelyn blinked. \"What?\" \n\nDemonica looked over her shoulder at Evelyn, long red hair obscuring her flaming left eye. \"When a White Witch tells you the choice is yours? Then the choice has been made.\" \n\n\"I don't understand.\" \n\n\"A White Witch, Evelyn. She wants you to be a White Witch.\" \n\nEvelyn gasped. \"I didn't know that was an option...\" \n\n\"Of course it is an option. You are smart, strong, brave - why not make you a White Witch? A goddess with their perfect bodies and all that... white latex?\" \n\n\"Oh.\" \n\nDemonica smiled. \"You will have the power to bend wills, rewrite personalities, re-make reality into your vision. It's very much like being a goddess. One day, you and your sisters may rule the world... for what that's worth.\" \n\n\"You have powers too, don't you?\" Evelyn asked. \n\nDemonica laughed. \"Of a sort. But, who would choose my path, Evelyn? I worship the dark... and I abhor white latex.\" \n\nEvelyn laughed. \"But, the mental powers, you have them too, don't you?\" \n\nDemonica smirked and crouched on her heels on the steel floor. \"What makes you think that?\" \n\n\"I can... feel it. It's like a wave of power that radiates from you. I can feel you inside my head. Are you manipulating me?\" Evelyn asked. \n\n\"Would it bother you if I said 'yes'?\" \n\nEvelyn's mouth went dry. \"No.\" \n\nDemonica smiled and nodded. \"No. I am not manipulating you. You know what you want - or, you're close to knowing. If I were going to manipulate you, I would do something like this...\" \n\nShe looked at one of the male students who was lying on the floor with the other coeds. \n\nHe stood up, his lean muscular body covered in sweat. He walked to Demonica and looked down at her. \n\nShe smiled and took his flaccid, four inch cock in her hand. \"It's pathetic that a human woman can be satisfied by this.\" She sucked him between her dark lips and his cock surged. Her head bobbed expertly as her claws raked beneath his balls. \n\nAfter a few strokes, she pulled his cock from her mouth. Fully seven inches erect, it dripped with her saliva. \n\n\"You see, even fully erect he is disappointing.\" She turned toward the tangle of bodies on the floor. \"You. Slut. Come here.\" \n\nA brunette with big tits crawled on her hands and knees to Demonica. \n\nThe demoness spun her around and pressed her face to the floor. She grasped the boy's nuts and twisted. \"You want to fuck her, don't you?\" \n\n\"Y... Yes,\" the boy said. He took the base of his cock in his hand and knelt, aiming the head toward the brunette's dripping cunt. \n\n\"No. She needs more. Fist her,\" Demonica said. \n\n\"What? I don't...\" The boy said. \n\n\"Of course you do. You've seen videos. Make a cone with your fingers and push inside her. She'll adapt.\" \n\n\"Don't we need lubrication?\" The boy asked as he looked at his right hand. \n\nDemonica spat on the girl's backside. \"There. Lubricated. Fist her.\" \n\nThe girl moaned, lost in whatever sex dream they all seemed to be experiencing. \n\nThe boy pushed his fingers against her pussy and the girl pushed back against him. \n\nDemonica laughed. \"No, boy. Not that hole. The other one.\" \n\nEvelyn paled along with the boy. \n\nHe moved as if hypnotized, his fingers touching the pucker of the girl's asshole. His middle finger traced the anal ring and probed gently. \n\n\"Don't be gentle. I've made her crave it. As a matter of fact, she will never orgasm again without a fist in her ass, will you, slut?\" \n\nThe girl giggled and pushed back against the boy's invading fingers. \"No, Mistress.\" \n\nEmboldened, the boy pushed inside. One finger, then two, and then a third. \n\nThe girl moaned louder with each digit that stretched her. \n\nSoon he had four fingers working in and out of the girl's asshole. \n\nThen he added his thumb. \n\nThe girl laughed and bucked back against him, trying to take his fingers deeper inside. \n\nEvelyn was rubbing her pussy, and then reached back with her other hand and probed at her own ass. \n\n\"That's right. Enjoy the show,\" Demonica giggled. \n\nEvelyn watched in amazement as the girl's asshole expanded wider and wider - the boy was pushing his fist in. \n\nAnd, his hands were very big. \n\nThe girl cried out when her ruined asshole finally accepted the oversized intruder, and Evelyn moaned in sympathy. \n\n\"Harder, boy. Deeper,\" Demonica said. \n\nHe slid his fist in and out, disappearing several inches past his wrist. \n\nDemonica stood up and put her arm around Evelyn. \"You see, if I was going to manipulate you? I would give you dark thoughts. I would make you crave pain and pleasure, both the giving and the receiving.\" \n\nEvelyn moaned and leaned against her as she masturbated both her holes. \n\nDemonica's hand slid down her back and pulled Evelyn's finger out of her ass. \n\nEvelyn protested, but then moaned with pleasure as Demonica's long, clawed middle finger replaced it and began to ass fuck her. \n\n*** \n\n\"There's nothing I can do,\" Mistress Maria Anastasia Marapova said on speaker from her penthouse apartment in Manhattan. \n\nRay and Sugar stared at the cellphone. \n\nThey had gone straight upstairs and called Maria. \n\nMaria had called Havana, and a few minutes later, she called back. \n\n\"Maria, something is seriously wrong here,\" Sugar said. \n\n\"Sugar, I understand that, but Havana was very clear: do not interfere. This came directly from Sister herself,\" Maria said. \"And, for Sister to answer that quickly? She already knew what was going to happen with Demonica and had consulted with... higher authority.\" \n\n\"Higher than Sister?\" Ray whispered. \"Who would be...\" \n\nSugar shook her head and tapped the inverted pentagram pendant hanging from her choker. \n\n\"Oh... that higher authority,\" Ray whispered. \n\n\"Indeed, Ray,\" Maria said over the speakerphone. \"That higher authority.\" \n\nSugar picked up the smartphone. \"Maria, can you please come up here? Demonica is, well, frankly she's terrifying. If she becomes aggressive...\" \n\n\"Sugar, if she becomes aggressive, you should run,\" Maria said. \"Don't provoke her, you and Ray keep your distance. I can't come up there right now. This federal suit against the Church has me running in ten different directions. This prosecutor the government has? Britt Connors is formidable. I may have to take extreme measures with her.\" \n\n\"Well, shit, Maria,\" Ray said. \"If she kills us in the meantime, make sure you avenge us.\" \n\nMaria laughed. \"Don't be so dramatic, you ridiculous moose. If Morpheus wants her where she is, we have to trust in his will. Just... be careful, and I will join you when I can.\" \n\n*** \n\nEvelyn watched the demoness work. She was faster with the computer tablet than Kimiko had been. Occasionally she would ask Evelyn's opinion on breast size or some other detail. \n\nEach time Demonica spoke to her, she got the distinct impression Kimiko was staring at her. Was it jealousy? The rubber woman seemed to be growing steadily more morose and somber. \n\nOne by one, the students were hoisted up to the ceiling and submerged in their own tubes - pink fluid filled for the girls and blue for the boys. \n\nExcept one boy who was dropped screaming into a pink tube. \n\nEvelyn had cried out along with him, but Demonica had only laughed. \n\n\"His cock is too small. Better a shemale whore than an inadequate stud,\" Demonica said. \n\nEvelyn had just nodded and stared at him squirming in the tube as his breasts and hips swelled. \n\nThis entire situation was terrifying, and she knew without Sugar's influence on her mind, she would most likely run away screaming. \n\n\"Were you a doctor or something?\" Evelyn asked. \n\nDemonica smiled and shook her head as she inspected the buttocks of one of the coeds. \"I ran a pizzeria. When Morpheus takes you, sometimes he adds the things he needs. For me, well, I'm a bit of a mad scientist. Perhaps it was always in my genetics - my niece is a scientific genius. She lives in Manhattan.\" \n\nShe bent the coed forward and parted the girl's pussy lips with her claws. Demonica's long tongue slid out between her teeth and she licked deep inside the woman. \n\n\"Oh, yesss!\" The woman groaned. \n\n\"Fertile,\" Demonica whispered. \"Nice and fertile.\" She raised the woman and spun her around, kissing her deep. \n\nThe woman went limp in her arms. \n\nEvelyn could see the letters PC written on the woman's forehead. Professional Caste. The girl was destined for Professional Caste. \n\nDemonica reached out and rubbed the grease pencil letters away with her fingers. \n\n\"Can... you do that?\" Evelyn asked. \n\n\"Demonica goddess. Demon goddess. She can do anything she wants!\" Kimiko hissed. \n\nDemonica held up her hand and Kimiko cowered. \"Silence. Evelyn can ask questions, she is destined to be a White Witch, after all.\" \n\n\"It's just,\" Evelyn said. \"I thought once the Church decided what they were supposed to be, that was it.\" \n\nDemonica laughed. \"The Church? I serve a different Master now. And, I make my own decisions. I won't be swayed by the Church's plans.\" She smiled and stared into Evelyn's eyes. \"None of us should accept destiny, Evelyn. We should exercize some free will.\" \n\nDemonica turned back to the coed. She caressed the girl's smooth forehead with the tip of a claw. She drew the claw across the woman's skin in straight lines. \n\nBlood began to trickle from the girl's forehead. \n\n\"I'm taking this one for my purposes. Free will. My will.\" \n\nEvelyn stared wide eyed at the inverted pentagram scratched into the girl's flesh. \n\n*** \n\n\"So, how's Ithaca?\" Bobbie asked over Mona's cellphone. \n\n\"Just as boring and backward as I remembered it,\" Mona grumbled. She was lying on her back on the motel room bed. \n\n\"Any leads?\" \n\nMona sighed. \"Nothing. Robert Lindsey is a buffoon. He handed over the driver's schedule without any fight - for all the good that's done me.\" ",
        "\"You didn't find anything?\" \n\n\"I went to the stop before the pizzeria, Stallion's Adult Video. I spoke to the manager and...\" Her voice trailed off. \n\n\"And?\" \n\nMona blinked. \"I... he didn't know anything...\" She squeezed her eyes shut. Something wasn't right. \n\n\"Babe? Are you okay?\" \n\nMona drew in a long breath. \"Yeah, I just... Have you ever gone somewhere and not really been able to remember anything about it afterward?\" \n\n\"Um, no, babe.\" \n\n\"It's the strangest thing. I talked to the manager, and he didn't know anything.\" \n\n\"You said that already.\" \n\nMona squeezed her eyes shut. \"Yes, but I can't remember anything about the conversation. I remember walking in the entrance past this weird cosplay girl...\" \n\n\"Cosplay?\" \n\n\"Yes, she was dressed like a pink plastic robot girl. Must have been some kind of Anime thing.\" \n\n\"Robot girl in a porn store, okay that's weird,\" Bobbie agreed. \n\n\"And, I went in and there was the manager and the redheaded woman in the rubber miniskirt and halter...\" \n\n\"Oh! Can't remember everything, but she remembers the redhead in the bondage outfit?\" Bobbie laughed. \n\n\"It wasn't a bondage outfit exactly. More of a latex fetish type of outfit. It had the oddest pendant dangling from this choker, like a pentagram...\" Mona stopped, feeling the odd sensation of lips on hers, of fingers caressing her. \n\n\"Oh, my God, are you touching yourself?\" Bobbie laughed. \n\n\"What? No! Of course not.\" \n\n\"Mona, I know those short heavy breaths of yours, you are totally rubbing one out!\" \n\n\"No, I'm...\" Mona blinked. She had two fingers inside her loose cotton shorts. \"Oh, I guess I am.\" \n\n\"Mmm, she turned you on, huh?\" Bobbie moaned. \n\n\"Are you masturbating?\" \n\n\"Yes, because little Wendy Whitebread saw a big nasty redhead in a bondage outfit and is so hot and bothered she's playing with her little See You Next Tuesday.\" \n\n\"My what?\" Mona asked. \n\nBobbie erupted in gales of laughter. \"Your cunt, you ditzy nerd.\" \n\nMona rolled her eyes. \"Oh, C-U-N-T, got it.\" \n\n\"Was she pretty?\" \n\n\"Yes. She had nice eyes.\" \n\n\"And?\" \n\n\"She had this regal look to her. Like a classic beauty... okay, this is getting weird, Butch. Why are you asking me about her?\" \n\n\"You wanted her,\" Bobbie said. She sounded like she was smiling. \n\n\"No, I didn't!\" \n\n\"Mona, you love me, don't you?\" \n\n\"Of course! You know I do.\" \n\n\"I do know that. And, I love you too. Forever.\" \n\nMona frowned. \"Then why...\" \n\n\"It's okay if the redhead turned you on. I trust you, Mona. And, you can trust me. Now, tell me about her tits.\" \n\n\"God, you're horrible.\" \n\n\"Are you blushing?\" Bobbie asked. \n\n\"Yes,\" Mona said miserably. \n\nBobbie laughed. \"Good. I like it when you blush. Because you blush all over. Even that little pussy of yours blushes.\" \n\nMona laughed. \"Oh, does it?\" \n\n\"Yes. Now, tell me about her tits.\" \n\nMona's brow furrowed. \"You know. I just... I didn't realize before. Butch, they were huge! I mean, they were like watermelons stuffed in her rubber halter.\" \n\n\"Watermelons?\" Bobbie giggled. \n\n\"Yes! I mean, who would get implants that big?\" \n\n\"A big nasty redhead who works in a perv store?\" \n\nMona laughed. \"Yeah, I guess.\" She stroked her clit gently, thinking about the fantasy she had as she was leaving the porn store. \n\nThe redhead, Bobbie, and her in bed. \n\n\"What are you thinking about?\" \n\n\"The three of us,\" Mona whispered. \n\n\"Mmm, I like this,\" Bobbie said. \n\n\"I would never...\" \n\n\"I know, babe. But, it's okay to fantasize.\" \n\n\"Really?\" \n\nBobbie laughed. \"Part of the reason I love you so much is that you are so very, very smart and so very, very naive at the same time.\" \n\n\"I'm not naive, Butch.\" \n\n\"Shh, just rub, babe.\" \n\nMona closed her eyes and rubbed her clit. She could still feel the redhead's imagined caresses, and the sweetness of her lips on hers. \n\n*** \n\nCiara Amber Sullivan had not always been a slut. Nor had she ever been a prude. She had, however, always had a simple view of life. She had fallen in love with boys. And, she had fallen in love with girls. \n\nLove was love, and love made her warm inside. \n\nUnfortunately, there was one thing Ciara had always been: shy. \n\nHalf of those Ciara had fallen in love with in her twenty years had no idea she even existed. \n\nThe other half had either not been in love with her or had quickly fallen out of love. Boys were the worst. A few fucks and they had tired of her. \n\nGirls were sometimes kinder, but some were more terrifying. When she had professed her sapphic love the first time, the girl had actually laughed in her face and used the very non-PC phrase 'lesbo dyke' in front of dozens of other students. \n\nCiara had run home crying, unable to understand why a world so intent on telling her that all preferences should be respected could still make her feel like a freak. \n\nIn college, she had maintained a low profile, dating casually, hoping to find the one. \n\nThere had been no 'one'. \n\nSo, when she had developed an attraction to the thick girl, Evelyn, in her astronomy class, she had admired her from afar and loved her in fantasy only. \n\nAll that changed today. After the witch at the porn store, up was down and down was up and every girl was bi and sweet and kind. \n\nAnd, Ciara had taken her fate in her own hands and told Evelyn how she felt. \n\nEvelyn was the One. \n\nFloating in the tube of pink goo, her body being modified, the computer voice droning in her ears, images flashing past her eyes so fast it was hard to think, the one thing that was constant was her love for Evelyn that was going to be returned. \n\nForever. \n\n\"Her name is Eve,\" the computer voice corrected. \n\nEve? Yes, that was Evelyn shortened. A nickname. A pet name. The kind of name one lover would use when addressing another. \n\nImages filled her mind, erasing old memories, creating new ones. Eve was her first love, not just an infatuation. That first time she had told a girl she loved her? It was Eve she told, and Eve hadn't called her a 'lesbo dyke' - instead she had kissed her in front of everyone. \n\nAnd, nobody had laughed. \n\nWhen Ciara went home that day, she hadn't run. She had skipped. \n\nIt was nice in the tube. Part of her knew the things being done to her were against her will, but there were benefits. Bad memories were disappearing from her mind like phantoms that faded one after another, turning to mist and then gone. \n\nShe didn't feel the needle slide into her neck delivering the final dose of Ambrosia. The dose that would make her immortal. \n\nAnd, then she was someplace else. Some other time. \n\nShe was standing on a street downtown in some city. A tall, white triangular building stood across the road. At its base stood men with guns and robots and nuns of all things, though the nuns wore black and white latex habits. \n\nWind from above whispered through her hair. \n\nShe was standing with Whore Caste. She was holding a metal street sign in her hands - it had been ripped off its mount. The sign at the top read 'No Parking 9 - 5 Weekdays'. \n\nShe was holding it like a club. \n\nAnd, that was crazy because it was so heavy, but she felt so strong. \n\nEveryone was yelling. They were screaming at the nuns. \n\nShe was behind and to the left of the general, a tall woman in white latex with blonde hair that was almost the same shade as her outfit. \n\nA hand touched her shoulder. \n\nShe turned and looked into a man's face. His eyes looked kind. \"Hello, Ciara,\" he said. \n\n\"Hello. Do I know you?\" \n\nHe smiled and nodded. \"We know each other well. My name is Adam.\" \n\n\"Where am I?\" \n\n\"San Francisco.\" \n\n\"What's happening?\" \n\n\"The end of the beginning.\" \n\n\"Oh.\" She bit her lip. \"I don't understand.\" \n\nHe nodded again. \"That's okay, Ciara. I'm bending time for you. I need to talk to you.\" \n\nShe smiled. \"Where's Eve?\" \n\n\"Close by. It's important that you love her, Ciara.\" \n\n\"Oh, I do!\" Ciara frowned. \"Hey, if you're Adam and she's Eve...\" \n\nAdam laughed and Ciara really liked it when he laughed. It felt like everything was going to be okay when he laughed. \n\n\"No, honey. Eve is your love, not mine. I don't have much time. You see, the way I am now, I can only talk to you right after you take final Ambrosia. You need to know: you are the Enkidu to Eve's Gilgamesh.\" \n\n\"Uh, huh?\" \n\nAdam smiled and there was that warm feeling again. \n\n\"Sort of like Robin to Batman, or, I guess more like Samwise to Frodo.\" \n\n\"Oh! Lord of the Rings! I know that one!\" \n\n\"Things are going to get very dark, Ciara. But, you can help Eve through it. You'll set her on the right path. Tell her, 'In the middle of the journey of our life I found myself within a dark woods where the straight way was lost.' Can you remember that?\" \n\n\"Yeah.\" She looked around. \"Is there going to be a war or something?\" \n\n\"I hope not, sweetheart.\" \n\nShe scanned the crowd. \"I can't see her, Adam. Is she here?\" \n\nHe smiled at her. \"Yes. Look up.\" \n\nCiara turned her face upward, feeling the wind in her face. \n\nHearing the beating of wings. \n\n*** \n\nCiara collapsed on the metal floor, the pink gel sliding off her naked body. \n\nEvelyn rubbed her face with a towel and she smiled up at her. \n\n\"Golly, that was totes weird.\" Ciara's voice was high pitched and cotton candy sweet. She frowned. \n\nEvelyn blinked and smiled. \n\n\"Is my voice different, Eve?\" \n\n\"I... no. That's your voice, Ciara. But, my name is Evelyn.\" \n\nCiara shook her head. \"Gosh, I always called you Eve. Ever since we started dating.\" \n\nEvelyn stared at her. \"Huh?\" \n\n\"That's her backstory. The AI filled in the gaps,\" Demonica said behind her. \"She's been your girlfriend for three years.\" \n\nCiara looked up at Demonica with her big, soulful eyes. \"Eve, why is the Devil here?\" \n\nEvelyn laughed. \"No, honey, she's not the Devil. That's Demonica. She's a friend.\" \n\n\"Oh, okay.\" She got quickly to her feet, the big, firm breasts pointing straight out on her chest. She held out her slim hand with their manicured red nails. \"My name is Ciara, pleased to meet you, Demonica.\" \n\nDemonica stared at the girl's hand and chuckled before taking it. \"You'll tire of this one quickly, Evelyn. A week at the outside.\" \n\nCiara's smile never faltered. \n\n\"Don't... say that,\" Evelyn whispered. \n\nDemonica smirked. \"What? Do you think her feelings will be hurt? You're viewing her through your own humanity. Her mind is conditioned to serve.\" \n\nCiara just stared at Demonica as if she couldn't understand the conversation. \n\n\"That's what the Church creates - what you will create: perfect little sex dolls. From her vacant expression, to her plastic breasts, to her permanently shaved cunt,\" Demonica said. \n\nEvelyn put her arm around Ciara's waist. \"Come on, let's find some clothes for us both.\" \n\n\"Ooo, do you think there's a cheerleader uniform around here somewhere? I'm a cheerleader, you know?\" Ciara said, her big sparkling eyes twinkling. \n\nEvelyn nodded slowly. \"Of course. I'll bet there's one here somewhere that will fit you perfectly.\" She tried to match Ciara's perfect smile, but found she wasn't in the mood. \n\n*** \n\nBen was pretty sure he had died and gone to heaven. Or, maybe hell. If this was hell, the preachers were all dead fucking wrong. This place was like porn paradise. \n\nEvery woman he saw was ready to fuck in whatever combination he wanted. Threesomes, foursomes - they would do anything he wanted. \n\nThey were eager to do anything he wanted. \n\nThe problem was, he was spent. But, the college kids just kept going at it like rabbits on Spanish Fly. \n\nIt wasn't just their youth - something more had been done to them, and they seemed intent on fucking each other to death. \n\nOccasionally, the gimp suited woman or the devil woman would drag one away and start working on them. \n\nAnd, the ones who were worked on? They emerged from those tubes as total sex freaks. \n\nThe women all had huge boobs and insatiable sex drives coupled with high pitched sex kitten voices. \n\nThere was a lot of giggling. \n\nHe had been sucked off so many times he was shooting painful blanks from his aching balls and raw dick. \n\nThe men they worked on came out with porn star cocks. One or two of them looked to be big enough to have made John Holmes cry. And, if any of them was tiring or sore, they didn't show it. \n\nEven the one they had made into a tranny was going strong. \n\nHe was feeling very much like an old man with a short dick, which, in comparison, he was. \n\nHe groaned in protest when he felt a hand close on his junk. \"Yeah, sorry, I can't.\" \n\nBen turned and looked into the smiling rubber face of the gimp suited woman. \n\nHe swallowed. It was his turn. \n\n\"S10,\" the woman said. \n\n\"Huh?\" Ben said. \n\n\"S10. Forehead.\" \n\nBen touched his forehead and felt the grease pencil mark. He had forgotten that Sugar had written something on him. \"What does S10 mean?\" \n\n\"S. Special. 10...\" She grasped his dick and yanked. \"Ten inches.\" \n\nBen looked down at his cock. \"Hey, wait! Even the tranny got a bigger dick than that!\" \n\n\"Ten. Inches,\" gimp suit woman said. \n\nBen gritted his teeth. \"Fuck you, bitch.\" \n\nShe leaned up and smiled at him. \"Not with that little dick, you won't.\" Then she burst into cackling laughter and pulled him toward an operating table by his dingus. \n\n*** \n\nMona lay in the motel bed and stared up at the dark ceiling. She had rubbed herself to orgasm and then stayed on the phone to talk Bobbie to hers. All it had taken was Mona talking about what they would do in bed together with the redhead to send Butch into convulsions. \n\nShe had married a perv. But, Bobbie was a fun kind of perv. \n\nAs much fun as the fantasy with Bobbie had been, the reality of the situation was anything but sexy. \n\nSomething had happened inside Stallion's Adult Video. Mona had lost time and been left with nothing other than a paper thin illusion that the 'manager had known nothing'. \n\nHad she been drugged? Hypnotized? How was it she knew how the redhead's lips tasted? That memory was clearer than her supposed conversation with the manager. \n\nHad the woman actually kissed her? Fondled her? Surely not. No one could erase selected memories from your mind. Could they? \n\nMona bit her lip and rolled onto her side. \n\nTomorrow, she would return to Stallion's and try to solve this mystery. \n\n*** \n\n\"Gimme a C. Gimme a U. Gimme an N. Gimme a T! What's that spell? Cunt! When do we want it? Right now!\" Ciara was doing an entire X-Rated cheerleader routine at 3:00 AM on the metal floor of Level 10 in her blue and white latex uniform. \n\nThe word SLUTZ was written over her boobs, although with the latex covering her big breasts it looked more like S lut Z. \n\nEvelyn would clap and smile for her each time. \n\nThe praise was genuine. The girl had not only taken on the shape of a perfect cheerleader/gymnast, she also had the athletic prowess that would normally require years of diligent practice. Ciara performed cartwheels, back flips, and splits that would have made an Olympic athlete envious. \n\nThey were made even more interesting by the fact there were no panties under the short rubber skirt, her clit was pierced with a heart shaped ruby, and the words FUCK ME were tattooed permanently between the bottom of her navel and her little pink pussy. \n\nCiara had become the living wet dream of anyone with a cheerleader fetish. \n\nShe threw herself around Evelyn's neck and giggled. \"Did you like it?\" \n\n\"Yeah, you're wonderful,\" Evelyn said. \n\n\"I love you, Eve.\" \n\nEvelyn smiled and kissed her neck. \"I love you too, Ciara.\" \n\n\"Not yet, but you will. You'll see. The devil woman is wrong,\" Ciara whispered. \n\n\"What?\" \n\n\"You won't get tired of me. You'll fall in love with me and want me around forever. I won't be annoying. You'll see,\" Ciara said. Her eyes sparkled and Evelyn was struck by how utterly innocent the girl actually was. \n\nCiara knew and understood nothing but love. \n\nAnd, her enthusiasm was contagious. \n\n\"I would have thought you would have chosen something white,\" Demonica said behind her, breaking her train of thought. \n\n\"What?\" Evelyn asked. \n\n\"Your dress.\" \n\nEvelyn looked down at the rubber dress she had picked from a closet. It was ruby red, open almost to the waist and falling to mid thigh. It was the most modest garment in the closet. \n\nHer feet were bare - the closet had contained nothing shorter than a four inch heel, and Evelyn did not have the grace of these transformed women. \n\n\"I don't like white,\" Evelyn said. \n\nDemonica smirked. \"That may be a problem for you. Sugar will not approve.\" \n\n\"She said it was up to me.\" \n\nDemonica nodded. \"We shall see.\" \n\nThe bus driver, Ben, sat up from his operating table and stroked his thick cock. He groaned. \n\nDemonica eyed him coldly. \"These Whore Caste are complete. It's time for Kimiko and I to take our prey back to Level 9.\" \n\n\"Prey?\" Evelyn asked. \n\n\"Those we cut from this herd of sheep.\" She pointed to one of the girls with a pentagram cut in her forehead. \"Recruits, if you prefer.\" \n\nEvelyn swallowed. \"What are you going to do with them?\" \n\nDemonica smiled. \"Much more interesting things than you have seen here. I would invite you to watch, but you should stay here with Sugar's toys like a good White Witch. Perhaps your little manufactured girlfriend will do more splits for you?\" \n\nEvelyn raised her chin and frowned. \"If you don't mind, I think I'll go with you.\" \n\nDemonica raised an eyebrow. \n\nCiara's hand closed on Evelyn's. \"Don't go,\" she whispered. \n\nEvelyn smiled. \"I'll be okay.\" \n\n\"No, you won't. They aren't like us, Eve.\" \n\n\"What do you mean?\" \n\n\"They don't love, Eve. Can't you feel it? They're just cold. Don't go with her.\" \n\n\"I'll come back. I promise,\" Evelyn said. She started to pull away. \n\nCiara's hand closed tight on hers. \n\nEvelyn yelped - the cheerleader was stronger than she looked. \n\n\"Where you go, I go.\" \n\n\"How precious,\" Demonica said. She turned and walked toward the doors. \"Come then, children. Hell awaits.\" \n\nThe naked coeds stood up and followed Kimiko and Demonica into the hall. \n\n\"In the middle of the journey of our life I found myself within a dark woods where the straight way was lost,\" Ciara said. \n\nEvelyn stared at her, not believing what she had just heard. She hadn't known Ciara before all this, but she didn't strike Evelyn as the type of girl who could quote Dante's Inferno. \n\n\"We're going into dark places, but we'll be together, and I'm your Samwise,\" Ciara said. \n\nThe thick girl in red and the fetish cheerleader walked hand in hand out of the laboratory. \n\n***"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "anal",
        "bimbofication",
        "body modification",
        "fisting",
        "group sex",
        "lesbian",
        "masturbation",
        "oral",
        "orgy",
        "transgender"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-dr-de-mona-ch-02"
}