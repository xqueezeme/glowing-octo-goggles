{
    "title": "More of Amy's World",
    "pages": [
        " All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. All characters within the story are 18 years of age or older. Hope you enjoy!\n\nThis is a continuation of the story Some Change in Amy. It would help to understand a little about who and what is going on if you read that first but I hope this story might be enjoyable either way. Enjoy and hopefully rate it as well as commenting if you would. It's greatly appreciated.\n\n \n\nLuke wasn't quite sure what had happened. He knew what a threesome was. He'd read about them, even had friends at work talk about them. They were something that you fantasized about. They weren't real. He supposed that all hormonal young males had thought about that kind of thing, wondered what it might be like but very few had ever experienced one. Now he was among the group that had indeed experienced it. Weirdest of all, it had been set up and arranged by his wife. The sweet, prim and proper daytime Amy who, when she had a little too much wine, a little too much internet porn, a little too much peeping at the neighbors doing the dirty, turned into nighttime Amy, a sexual machine who continued to surprise him no end, as she had with Jen, their next door neighbor. Now Jen was a fine-looking woman, very fine indeed, but she seemed to be as amazed by Amy's manipulations as Luke had been. Of course, they both had enjoyed what had transpired.\n\nTypical of Amy, the minute Jen had left, she was ready for more, or at least her share. Luke was always ready for more of Amy so that next hour had been very fulfilling if it did leave Luke totally exhausted. He slept very soundly and, when he awoke the next morning, beside him lay daytime Amy, ready to be disgusted by foul talk, dirty jokes and other such things. It was a Saturday morning and she was up and dressed and off to the grocery store as Luke was coming downstairs to fix himself some breakfast.\n\nAs he opened the refrigerator door he heard a knock on the back door. Going to the door, there was Anna from next door, Jen's oldest daughter who Amy often described as \"The Playboy Girl\". He opened the door.\n\n\"Hi Anna. What's up with you this morning?\" Luke was always a little wary of Anna as she obviously had a silly crush on him, was constantly sunbathing in the backyard in a skimpy bikini and had found ways to display her rather awesome breasts to him on many occasions. She had even sunbathed nude one time, supposedly thinking Luke was gone. Not only was he not gone but he had very explicit photos of the whole thing. What he didn't know was that Anna had been able to take a video from her bedroom through Amy and Luke's bedroom window of them having a very interesting sexual adventure. She also never missed an opportunity to spend some time with Luke when he was working in the yard, usually in one of her bikinis with those stupendous hooters as close to Luke's eyes as she could get them.\n\n\"We need to borrow a little milk. Do you have some?\"\n\n\"Sure, come on in and I'll get it.\" He had never been alone with Anna inside like this but she had on shorts and a tee shirt so he didn't think much about it. He opened the refrigerator door and searched for the milk. He finally found it and closed the door, turning to Anny who was just kicking the shorts off her feet. Except for her Nikes, she was naked. \"What the hell, Anna?\" he exclaimed.\n\n\"Don't worry, Luke. Nothing is going to happen today. I just want you to look and think.\" She had a huge but very sly smile on her face and was licking her lips very suggestively.\n\n\"Look and think?\"\n\n\"About these,\" she said, squeezing her breasts and holding then up. \"And this,\" she added, patting her waxed mound. \"I'll just torment you a little and see what finally happens.\"\n\n\"Anna, it's not like you're a teen-ager just teasing around. You're 21 years old and you don't know what might happen.\"\n\n\"Oh, I know what might happen but I'm willing to wait. I'm not touching you today, just giving you something to think about.\"\n\n\"But what if I decided to touch you? What would you do then,\" Luke said, eying those rather splendid assets she was displaying.\n\n\"I'm right here,\" she countered, holding out her arms.\n\nShe was totally delectable but he wasn't going to do it. No way. He shook his head and reached for the milk.\n\n\"We don't need any milk -- I just needed to get inside. Not quite ready to do this in public yet.\" She was putting her clothes back on. \"Just be ready,\" she giggled at him. \"There'll be more.\"\n\n\"You mean I can't let you inside our house again?\" Luke's turn for a little chuckle.\n\n\"Don't worry,\" she said as she started out the back door. \"I'm very creative.\" She stopped. \"You might want to get rid of that lump in your pants before Amy gets back. Kinda hard to explain I bet.\" Then she was gone.\n\nLuke checked and, sure enough, there was a pretty good lump that he hadn't even been aware of. But why wouldn't there be. Seeing her standing there naked, those giant D tits right in front of him, nipples hard and that bare mound down below with that tanned body. He had every right to get a boner over that, even if he didn't have the right to touch. He knew that she knew that he wouldn't touch her. What he didn't know for sure was rather he'd be able to resist touching her for who knows how long.\n\nTwo more pumps and Luke felt that familiar tensing of his body, ecstasy rolling over him as he filled Amy's hot and very wet love tunnel one more time with stream after stream of milky fluid. She groaned as he came, her arms around his neck holding him fast against her. She never got tired of hearing the sounds he made when he was cumming, kind of a combination of grunts and groans unlike anything she ever heard from him at other times. Of course, she knew she also made sounds that he loved and she had just finished making them a very few minutes before he made his.\n\nLuke rolled off Amy and lay beside her, looking over at her and nearly wanting to start over with the night's excitement as he watched those wonderful breasts of hers moving up and down as her chest was gently heaving as she was still recovering from her orgasm. And those nipples that he could never get enough of were dark and hard and long and standing straight up in the air.\n\n\"I know you're looking at me,\" she said softly.\n\n\"I am. You're something to look at after you've just orgasmed.\"\n\n\"Oh god, you always have to say something like that don't you.\"\n\n\"I say it because it's true. You're gorgeous.\"\n\n\"Only after I orgasm?\"\n\nHe leaned over and kissed her. Might as well he decided. \"Something really funny happened today. Well, not funny funny but funny odd.\" This was harder than he had thought it would be.\n\n\"Go on,\" she said, still trying to catch her breath.\n\n\"Anna came over while you were at the grocery and said her mom needed to borrow some milk. So, I went to the refrigerator and got the milk and when I closed the door, she was standing there totally naked.\n\n\"What?!\" Amy's head snapped around to look at Luke.\n\nHe shrugged. \"Totally naked and I couldn't believe it and didn't know quite what to do.\"\n\n\"I hope you knew what NOT to do,\" she said decisively.\n\n\"No worries. She just said she knew nothing was going to happen today but she just wanted me to think and look.\"\n\n\"I'm sure you were looking and if anything was thinking, it wasn't your brain, it was that thing between your legs.\"\n\n\"Honestly, I didn't have thoughts like that. I just couldn't figure out . . . totally flummoxed.\" He was shaking his head.\n\n\"With a big lump in your pants I expect.\"\n\n\"Yeah, that just happens. You don't even have to think about that. But I did tell her she wasn't a little girl. She was 21 years old and something might happen if she did things like that.\" He decided he might leave out a little of what happened and what was said. He was confessing when he could have kept it secret.\n\n\"I suppose now you think we should have a threesome with Anna.\" She watched Luke shake his head in denial but knew he probably wouldn't run away if she arranged that. \"I think that, In her own way. she'd like to seduce you but she wants you to be the aggressor so she's not the 'bad girl'.\"\n\n\"You really think so?\"\n\n\"Duh,\" she said just staring at Luke.\n\nHe giggled a little. \"One day when the subject of nude sunbathing came up,\" a sigh from Amy, \"she asked if we had done that. I said no but we had skinny dipped a couple of times. She said when she got a boyfriend maybe they could skinny dip with us.\"\n\n\"If I didn't trust you so unquestioningly, I might have to get one of those male chastity things to clamp on that pecker so it would stay where it belongs.\"\n\n\"Well,\" Luke said, a subtle grin on his face. \"It's not on there now.\" Morning would be coming early he was sure as he rolled over and slid between her legs.\n\nThirty minutes later they were laying much as they had been a while ago, Amy's chest heaving and Luke watching it in wonder. But it was Amy's turn to talk.\n\n\"You shared that stuff about Anna and . . . well, I guess I can share something with you too.\"\n\n\"The Amazon man came in and when you looked, he was naked?\"\n\n\"Umm, no, you dork. I'm trying to be serious here.\"\n\n\"Sorry, go ahead.\" He rolled on his side to look at her and she would have been just as happy if he'd stayed on his back.\n\n\"Judy came over the other day and she was asking about the new neighbors. I told her about Jen and the girls and then about Carol and Miranda. She was asking about them so I told her about seeing them kissing a few times, really kissing. So, then we got to talking about that, friends we knew who were lesbians and she was telling about a friend of hers who used to model and one time had to share a hotel room with another model who was very . . . liberal. The friend said she was no lesbian but the experimenting had been very interesting. That got us to wondering, you know, about what that might be like.\" Now Luke's eyes were boring into her and he was beginning to smile.\n\n\"You're shittin' me,\" he said.\n\nShe took a deep breath and then gave him all the very graphic details of what had happened. When she was through, and she was actually perspiring from the effort of telling it, she was just looking at him, waiting to hear.\n\n\"Two things,\" he said. \"First, I suspect you're like the model. From the way you told that I'd say you're no lesbian but you did enjoy experimenting.\" He was actually swallowing her up with the huge smile he had on his face.\n\n\"That's one,\" she said, cautiously.\n\n\"Number two, you're so friggin hot when you perspire and glisten like that there's no way I can leave you alone.\"\n\nThis time it was Amy's turn. Her question answered, she was quickly onto Luke, her mouth creating those moans she so liked to hear.\n\nSunday had been a quiet day and it was Monday morning and Luke was off to work leaving Amy to catch up a little on the housework. It also left her some alone time to think about what Luke had told her the other night. Anna was a tough one to figure. Was she really trying to seduce Luke in her own subtle manner? Was she just a ruthless cock-tease who liked to use her very ample body to torment him? What was she really willing to do? Maybe Amy could get to know her a little better if she could, or would Anna avoid her after what she had done to Luke. She was about to find out as Anna was coming up the back walk and Amy was headed out the back door.\n\n\"Hey, Anna,\" Amy waved, heading toward her.\n\n\"Hi, Amy,\" Anna shouted, changing her course to head directly toward her. When they were opposite each other Anna held out her arms. \"A neighborly hug,\" she said and gave Amy a big squeeze and got an equally big squeeze in return. \"We don't get to talk much. Luke's out here a lot and I talk to him and he says such wonderful things about you that I just want to get to know you better. We're not that much different in age but you're married and all and getting that great experience and I bet you could help me with lots of things.\" She gave Amy, who wasn't quite sure what to say to that, a big smile. \"Mom's great but she's, well, mom. She's a lot older and she looks at things differently than I do. You and I are almost the same age,\" she repeated.\n\n\"I'm always happy to help any way I can. And, you're right. We aren't that far apart in age. Luke shares some of the stuff you guys talk about too.\" She gave Anna kind of a knowing look to see what might happen.\n\n\"Oh, I bet he does. That's the way it should be isn't it. You guys should share and not have secrets.\"\n\nThat one made Amy think. She had shared about she and Judy with Luke but there was more she decided she'd share some other time. \"Very true,\" she replied very thoughtfully. Anna seemed very open and not at all cautious about being around Amy so she decided to push a little. \"Luke said he told you that we had skinny dipped in the past.\"\n\n\"Yeah, with others and by yourselves. That's so cool. I'd love to do that sometime. Is it exciting to have other people see you naked?\"\n\nWho was she trying to kid with that one? She could play too. \"It's one thing to have people you know see you naked. It's another to do it with strangers.\"\n\n\"Oh my gosh, you guys did that.\" They had actually just done it with friends, not strangers but she didn't say anything. Anna paused and it was almost like she was picturing that happening. Then she looked back at Amy. \"I think I could do it.\"\n\n\"Luke said that you told him that when you got a boyfriend maybe you could do skinny dipping with us.\" She raised her eyelids a little.\n\n\"I did. You guys are so cool. I think I'd love that and feel pretty secure doing it too.\"\n\n\"Why do you have to have a boyfriend to do it?\" Was she really encouraging Anna?\n\n\"You mean you'd take me with you and go skinny dipping together.\" She sounded totally innocent and Amy decided she really was, or she was an excellent actor.\n\n\"We could do that.\" Now a little test. \"Of course, Luke would be seeing you naked and you'd be seeing him too. Could you do that?\"\n\n\"Amy, the way I sunbathe, you have to know that's Luke's seen me pretty naked. But I've not seen him at all. He's a cool guy, like you, and I wouldn't mind that at all if it's okay with you.\"\n\nShe'd shifted it back to Amy. \"Sure, as long as you're not planning to rape him or something.\" She laughed as she said that.\"\n\nAnna joined the laughter. \"Oh my gosh no. I wouldn't know how to go about that anyway. And I sure couldn't compete with you.\"\n\n\"We'll see what happens,\" Amy concluded. \"Want to come in and help me do the laundry?\"\n\n\"Sure, as long as we can talk too.\" She followed Amy through the back door.\n\nNow, in one of those freakish acts of fate that you never expect and can never plan on, Amy got a call from her cousin who she had been close to growing up even though he was many years older than she was. He lived about 150 miles from them now and he told her his oldest son, who had just finished his freshman year at a university in the city where they lived had decided that he wanted to transfer to a little private school that was just a few miles from where Amy and Luke lived. He wanted to check it out a little and cousin Freddie wondered if son Randy could stay with them for a couple of days while he did that. Also, cousin Freddie noted, their cabin at Lake Willow was not being used and Amy and Luke were welcome to spend some time there. He'd send the key with Randy along with a map.\n\nAmy had actually spent a good bit of time when she was young playing with Randy and she remembered him as a pleasant guy. The had moved apart when they were 10 or 11 years old and, for some reason, never got together again. So, from that point of view she was anxious to see him again\n\nThus, it was on a Thursday, as Luke, Amy, Jen, Anna and Kerry were standing in the front yard talking that a bright red Corvette pulled up in front of the house, squealed to a quick stop and a young gentleman got out quickly and headed toward them. Amy stood, mouth partially opened, as she recognized that this was Randy who had certainly grown up. About six-foot tall, curly blond hair cut a little short, bright blue eyes, a day's growth of beard and, she remembered now, wrestler's muscles that certainly hadn't disappeared after his high school career was over. He went quickly to Amy and she got a big hug. Then some introductions as he had never met Luke, nor of course, the other three ladies there. Amy immediately thought that this might be something that Anna might be interested in but . . . When Kerry was introduced and Randy shook her hand, their eyes seemed to lock and linger.\n\nThere was more chatter, sharing memories, but Randy had taken his place beside Kerry and the connection was so obvious that even Anna was grinning. When he went to the car to get the single bag he had brought, Kerry was by his side. She slid into the passenger's seat at his invitation and he showed her all the gadgets and gages and anything else he could think to talk about. Then they were both out and switched places.\n\n\"Kerry wants to take it out,\" Randy called over his shoulder. \"We won't be gone long.\"\n\nAt that Jen laughed. \"I think they're both pretty well gone already,\" she said. \"Kerry was practically drooling the minute they were introduced.\"\n\n\"Better make sure she's up to date on her birth control pills,\" Anna quipped.\n\n\"Anna, good lord,\" Jen said, but couldn't help giggling.\n\n\"If I had to guess,\" Amy threw in, \"I'd say Randy's enrollment here is a certainty, without ever checking out the school.\"\n\nThirty minutes later, Kerry and Randy were back, Amy noting that they both looked a little flushed but with big smiles and holding hands. They all went inside and sat down and Amy decided that maybe they could talk a little about going to the cottage at the lake.\n\n\"It's a little more than a cottage,\" Randy said. \"I think it has three regular bedrooms and other places to sleep as well, you know, cots and those couches that make into a bed. There's plenty of room for all of us if we want to go. Amy decided that he had just invited Jen and the girls so she seconded that.\n\n\"You guys need to come too,\" she said to Jen, glancing also at Amy and Kerry. She knew that if Randy was going, Kerry would be more than willing.\n\n\"I can't go on Friday but could come out on Saturday if that's okay,\" Jen said. \"Anna, you're okay to go aren't you?\"\n\n\"A big grin from Anna. \"You bet,\" she said enthusiastically. No need to ask Kerry.\n\nAmy went to the store to gather some food for the weekend and Jen brought over a good bit too since her girls and her on Saturday would be a major part of the group. Amy and Luke were both excited to go and have a chance to just get away for a couple of days. It sounded like fun for sure.\n\nEarly Friday morning the car was packed and Amy and Anna jumped in with Luke driving since they planned to follow Randy's Corvette to the lake. Of course, Kerry was tucked into the big red bomb beside Randy. The trip only took 45 minutes and they were quickly there. Randy showed them the bedrooms. Amy and Luke got the big one, Anna and, well, supposedly Kerry got one and, of course, Randy had his own room there. However, Kerry simply marched into Randy's room and threw her bag down there. Anna could see that she had a room all to herself. When things were unloaded Randy dropped the gentle bomb that no one was expecting.",
        "\"Did dad tell you about Comfort Cover?\" he asked Amy.\n\n\"Don't think so,\" was her innocent reply.\n\nRandy smiled. \"Down at the end of the lake is a little private cove. It's part of the lake but it's been blocked off so boats can't get back there. It's kind of an interesting place.\" He looked around cautiously. \"Hell, I'll just say it. It's a nude beach. Just thought I'd let you know in case anyone was interested.\" He had a knowing smile on his face.\n\n\"He didn't tell me about that,\" Amy said, looking at Luke. When she glanced at Anna, she got the look she was totally expecting as she remembered their conversation about skinny dipping. Since it was a hot day and the lake was right there inviting them in, the only question was where they'd be doing their swimming. Each headed for their room to change.\n\nAmy's mind was whirring as thoughts nearly overwhelmed her. Could she be naked in front of others, not only people she knew but probably total strangers, many of them men of course? How would she feel about Luke watching a totally naked Anna? What would Anna be doing around a naked Luke? All of those other questions didn't really matter and Amy knew that. What was important was how she would feel being naked in front of strangers, strange men in particular. Part of her brain was telling her she shouldn't be naked in front of strangers but her body was sending another message. She was actually beginning to tingle as she thought about it and was surprised at her reaction. Women were naked all the time in this day and age. Most men had seen lots of women naked, except Luke of course. There was nothing to it. You were just naked and men looked. It didn't hurt. The more she thought about it the harder her nipples got. And the wetter she got down south. It made deciding pretty easy as her body was giving her a big YES in answer to her question.\n\nShe changed into a fairly modest two-piece suit, got her sunscreen, towel, lip balm and a few other things together and was ready to go. Actually, she was way more ready that she thought she'd be. And the more she thought about it, the more ready she was. And she hadn't even had any wine yet. Fairly soon Luke joined her, then Anna and then Kerry and Randy. They threw their stuff in the back of Luke and Amy's car, piled inside and headed for Comfort Cover. Anna and Kerry were, of course, in their very skimpy bikinis which soon wouldn't matter at all. Luke followed Randy's directions, Randy admitting he knew where the cove was but had never actually been there. Sooner than expected they pulled into the parking lot, carefully exited the car and headed for the water, slightly visible through the trees.\n\nAmy looked around as they came out of the tree, the small cove spread out in front of them. There were people there, maybe 30 or so which surprised her that so many people liked to be naked, which all of the ones she could see were. She didn't want to gawk but couldn't help looking a little. Mostly young ones but a few middle-aged she thought. Randy seemed to be leading and they went to a grassy spot, spread their towels and then awkwardly stood there. Still leading, Randy jerked his swim trunks down to his ankles and stepped out of them, Kerry quickly slipping out of her bikini to match him and they headed toward the water.\n\nAmy looked at Luke who was untying his trunks, then at Anna who was smiling at Luke and watching carefully. When Luke glanced at her she quickly untied several little bows and she was very naked. \"This is what I wanted,\" Amy thought and quickly took off her two piece and was equally naked.\n\n\"Crap, I forgot to lock the car,\" Luke said, digging in his pocket for the electronic gadget that worked the locks. He headed for the parking lot.\n\nAnna stuck out her hand. \"Let's go,\" she said, a huge smile on her face. Amy took her hand and, together, they headed for the water.\n\nThey waded in until the water was close to knee deep and both decided it was a little colder than they had expected. Amy looked at Anna and decided that, with those huge boobs and that slick and bare mound, that's where he would be looking rather than at her, even though she could feel her nipples swelling, partly from the proximity of the cold water and partly from just standing there. And, the men were looking their direction. And now one of them was splashing through the water coming right toward them. He was looking at Amy and not Anna. She could hardly breath. Now he was pointing at her.\n\n\"You're . . . you're . . . you're, oh shit I can't remember your name but you're Luke's wife.\" Amy recognized him but couldn't quite place him as her brain was a little numb right now. \"I work with Luke. We met at the Christmas party last year.\"\n\n\"Amy,\" she said as confidently as she could, never having had to answer questions in the nude before.\n\n\"That's it, Amy. I'm Dick,\" he said, expending his hand. \"Good to see you.\"\n\n\"Why did his name have to be Dick?\" she thought, extending her hand and she was sure that's where she'd looked when he said his name and she was sure he was glad to SEE her. Plus, she had danced with him at the party. Now he'd seen her tits and muff and she'd seen his, yep his dick, and she could never go to a Christmas party again. He'd looked at her nipples at least three times and she decided they were bigger each time he'd looked.\n\n\"Oh,\" she said. \"Silly me. This is our friend Anna.\"\n\n\"Hi Anna.\"\n\n\"Glad to meet you, Dick,\" Anna replied, and it seemed to Amy that she'd emphasized \"Dick\" a little too much.\n\n\"Luke here?\" Dick questioned, looking around.\n\n\"Here he comes,\" Anna answered gesturing toward the parking lot.\n\n\"Ah, great,\" Dick replied, sloshing over to greet Luke. They were laughing and talking.\n\n\"How was that?\" Anna asked.\n\n\"Oh my gosh,\" Amy answered. \"I danced with him last Christmas.\"\n\n\"Well,\" Amy said, obviously looking at Amy's nipples. \"It doesn't seem to have bothered you too much.\"\n\nAmy laughed. \"Sometimes I surprise myself. I think I'll swim a little.\" She headed off toward deeper water which brought her closer to the rest of the gathering. She probably went a little closer than she'd had to but, she had decided it would be okay for other men to see her naked and she was going to make it a little easier for them. When the water was above her waist she dove in and swam a few strokes, the cold water being very refreshing. The feel of the water on her naked skin was exciting too, something she'd never experienced before, except in the shower, and that certainly didn't count. The little skinny dipping the had done before was very quick and done more for the thrill of it than anything else. She rolled over onto her back and just floated, realizing that her face, her breasts and her muff were the only parts of her showing. She arched her back a little more which pushed her breasts up a little higher. She hoped some of the men were watching. She opened her eyes and turned her head just a little. They were, several of them, but no one said anything.\n\nShe rolled over on her stomach and began slowly stroking back toward where she had started, realizing that now her butt was probably above the water. She stopped swimming and stood up, the water waist deep. \"No good,\" she thought and took a few steps until her muff was above the water. She wondered how Luke would like it if she shaved, looked more like Anna, maybe even went the whole way and waxed. She felt like she'd like to touch herself but wasn't quite ready for that kind of a show yet. But, and she lowered herself till she was on her knees and even her breasts were under the water. Just a gentle touch -- it felt so good. Not too much. She was already wet from the lake so no one would notice a little more wetness. A little more. Soooooo good. \"Shit,\" she thought. Anna was swimming toward her. She stood up.\n\n\"This was a fantasy of mine,\" Anna said when she got there. \"You know that already. And here we are.\"\n\n\"You enjoying it then?\"\n\n\"Hell yes. When you swam away, I got out of the water and just stood there by my towel. I got a rubber band and put my hair in a pony tail.\" Amy could picture that, arms above her head which would lift those huge boobs a little higher. \"Guys were looking,\" she giggled. \"I think I like this.\"\n\nNow Amy began to look around a little, more than she'd done when she was only wondering if men were watching her. Some were in the water and some were on towels. Many of the women were attractive but many had little belly pouches, a little extra fat maybe and a few were a little older and past their prime perhaps. She decided that Anna was by far the most spectacular female there and she was just a short way behind her. No wonder men were looking. Of course, she also noted the men. She remembered Luke telling her there were all different shapes and sizes and she certainly appreciated that from what she could see. None were hard of course, so it was hard to judge that now. She couldn't believe the thoughts that were racing through her mind as she looked. Most were what she'd call average but there was one that, well, she wished it were hard so she could judge better. She couldn't believe she had just had that thought and she turned around, away from the others.\n\n\"That one is pretty darn big, isn't it?\" Anna said, nudging her with her elbow.\n\nShe'd been found out. \"Can't help looking,\" she said softly, wondering if she was blushing a little.\n\n\"They look at us and judge, so why not?\" Anna replied. \"I've seen way more cocks today that in the whole rest of my life.\"\n\n\"Me too,\" Amy said, sheepishly.\n\nThey went back and sat on their towels. Surprisingly and a little excitingly for each, they put sunscreen on each other, mostly on backs and butts but still. At one point, Kerry and Randy came by and Amy realized that she had forgotten about Kerry when she was judging who was the hottest of the day. She wasn't exactly sure how she compared with Kerry. Kerry was shorter land her boobs were a little smaller than Amy's but not by much. Of course, Kerry's nipples were way smaller but her waxed mound and the beginning of a nice cleft that showed there may have given her a slight edge. Either way, there was no one else there that could compete with them.\n\nAmy had to admit that it was a little weird for she and Randy to trade nudity since they were related but it didn't seem that he was interested in seeing Amy at all since he was hanging onto a very naked Kerry. Of course, she had Luke so it was Anna that was kind of by herself. Amy wasn't quite sure what Anna was thinking about Luke, but she was sure she was thinking. Whatever. She was having a good time and was finding out things about herself that she never knew existed and she was certainly wondering where they were going to lead.\n\nThey swam some more, strutted their stuff some more, teased a little and just relaxed in the sun for a while. They ate the food they had brought and had a good time -- naked. When evening came. they headed home. Amy fixed some dinner with Anna's assistance as Kerry and Randy seemed, well, distracted and not much interested in helping the others. They ate, talked some more and finally Randy suggested that he was worn out from the day's activities and was headed to bed. Kerry was about two inches behind him as they headed for his room. The three that were left decided they might as well get some sleep as who knew what tomorrow might bring -- particularly after what today had already brought.\n\nAnna went to her room and Luke and Amy to theirs. After the slight pleasuring that Amy had provided herself in the lake and the meeting with Dick and his dick and everything else that had gone on, Amy was ready. She was naked in seconds and dragging Luke toward the bed. Luke was not fighting it as, seeing just the three ladies au natural had him a little inspired too. Amy threw herself on the bed and spread her legs wide. She was ready for a little more pleasuring than she had been able to provide at the lake and Luke was certainly going to provide that, even if he didn't know what had happened there. He was quickly at work as he spread her wide which he knew tormented her immensely. He spread and relaxed, then spread again and relaxed, the pulling at the base of her clit getting her fires burning. He could hear her breathing deepen and she jerked as he gave that clit one flick of his tongue. He trailed his tongue around those very wet lips, pausing to probe just a tiny bit at the very bottom of her cleft to a very nice moan from her.\n\nA few more delicate flicks and a few more gentle jerks. Then he went to work, lips and tongue and fingers probing. Amy's moans were getting louder and more frequent and quickly her thighs closed against his head, holding him in place. Her hips were bumping up and down now and he was waiting for that final rise and those wonderful jerks and groans that signaled an orgasm. A few more seconds and it was there, a surprising \"Oh fuck,\" from her and her body was vibrating and twisting, over and over until at last she slowed and lay still.\n\nSuddenly she squealed. \"Anna, what the . . . \"\n\n\"Kerry and Randy were making so much noise with their moaning and groaning I couldn't sleep. So, I went to your door and listened and heard the same thing. I said, what the hell, and just came in and watched.\" She looked from Amy to Luke and back to Amy, then took a deep breath. \"Can I confess something to you guys?\"\n\nAmy was panting so hard she wasn't sure she could answer and Luke still had his head between her legs. \"Sure,\" Amy finally got out, not sure quite what to do.\n\n\"You look fantastic when you're all flushed like that and perspiring just a little. My gosh. Anyway, one night I had just gotten to my room and hadn't turned the lights on yet and I looked across at your window. Your lights were on and the blind was open and,\" now she looked down at Luke, \"Luke was walking toward the window . . . naked. He put the blind down then.\" She glanced at Amy and then at Luke again. \"You remember when I borrowed your camera?\"\n\nLuke had found his voice and lights were going on in his brain. \"I do. For a . . . school project you said.\"\n\n\"You said that and I agreed. But it wasn't for that. I waited in my room with the lights out and a couple of nights later, the light in your place was on and Luke was there, naked and he looked a little different this time. Kinda like I'm sure he looks now if I could see. Then Amy came in,\" she said, now looking at her. \"You were naked too and, well, you started taking care of Luke.\" Amy couldn't believe she was hearing these words from Anna but was sure what the rest of the words were going to be.\n\n\"And you were taking pictures all this time?\" Luke managed to get out.\n\n\"Video,\" Anna said, a tiny smile on her face. \"Then Amy lay back on the bed and it was Luke's turn to take care of you.\" She smiled at Amy\n\n\"And you watched?\" Amy said, shaking her head.\n\n\"Lots and lots of times.\" Anna reached down a quickly lifted the top of her shorty pajamas off followed quickly by the bottoms. Without another word she climbed over the end of the bed and lay down beside Amy.\n\n\"So now you've seen it in person,\" Amy said, turning to look at Anna who was only inches from her.\n\n\"Only part of it,\" Anna said quietly, looking over at Luke.\n\nAmy had pondered about going naked at the lake today but this was way more than just going naked. It was pretty clear what Anna wanted and her just coming into the room the way she did said she was very serious about it. Amy could feel Luke's breath on her leg as he hadn't really moved yet. And he hadn't said much either. Feelings were tearing through Amy now.\n\nShe was ready for Luke to poke her with that thing of his but, could she really lay there and watch him poke Anna. Her mind was picturing that despite her not being sure she wanted it to because she was afraid of what that picture might tell her to do. The silence was indeed deafening. Since Luke hadn't said anything, she knew he was ready and it was totally up to her. She really had gotten to like Anna as they had gotten to know each other lately but liking her and letting her have sex with her husband were two different things. At least they should be. That picture kept pushing itself into her brain.\n\n\"So, you want Luke to do to you what he was doing to me on your video?\"'\n\n\"Yes,\" Anna answered simply.\n\nThat picture, that picture. She wished it would go away but it didn't. She could watch her husband having sex, something she'd never done before except from her vantage point and that wasn't very good for viewing. But Anna was something else. This wasn't some ugly creature who he'd never want to see again. This was Anna -- Miss Playboy. Huge tits and waxed muff. She wished she hadn't thought that because it was just making it more appealing.\n\n\"And I can lay here and watch?\"\n\n\"Please.\"\n\nAmy looked at Luke who gave her a little eyebrow shrug. He seemed to be all in. She moved her legs so she could roll to her side. Elbow on bed and head in hand she said, \"I'm ready.\"\n\nLuke got to his knees and moved to Anna. She looked a little unsure of herself while spreading her legs, bumping Amy's as she did. Luke slid into the opening that was created and Amy gave a quick check. He was ready and it looked like it was throbbing a little.\n\n\"You're sure?\" he said.\n\n\"I'm 21 and very sure,\" was her quick reply.\n\nAmy was wondering if it would be nice to have a video of this but that wasn't going to happen. She'd just have to video with her brain and hold it there for future reference.\n\nAnna tentatively reached out and took hold of Luke's erection. Amy saw him exhale when she did that. He was into it for sure. That hand moved slowly back and forth several times and Luke's breathing was getting a little more ragged. Then she let loose of him and grabbed both her breasts, squeezing them together.\n\n\"If I do this,\" she said, squeezing a little more, \"you might be able to get both nipples in your mouth at once.\"\n\nHoly whatever, Amy thought. This gorgeous girl has almost no experience but she does something like that. Where's it coming from. As she watched, sure enough, Luke was just able to get both nipples into his mouth at the same time.\n\n\"You can't make them feel good that way,\" Anna suggested and pulled one breast away and thrust the other one against Luke's mouth. Amy knew that Luke had been spoiled by her rather gigantic nipples but he did seem to be enjoying Anna's never-the-less. She remembered him telling her one time that it really wasn't important how big boobs were or how they looked. That a girl was sharing them with you was the important thing, no matter what they looked like. Anna was certainly sharing and Luke was taking advantage of the sharing, all of it about 18 inches from Amy's face. She could hear the slurping as he sucked, could see her breast stretch as Luke sucked hard on the nipple, could hear the little moans that were beginning to come from Anna as her head was thrust back, as she arched herself into Luke's face.\n\nAbout that time Luke apparently decided that a little more needed to be done and his hand found that very smooth mound, then slipped a little lower and Amy could hear a tiny slurping noise as his fingers probed gently inside of Anna. The noises told her that Anna was obviously very wet. And her movements said that she was enjoying what was happening.\n\n\"Yes, yes,\" she was saying quietly as Luke's fingers probed, but that changed to, \"please, please,\" within a very short time. Luke, the very obliging one, grasped his erection and pressed it against that cleft where he had been exploring. Anna quickly changed to \"Yes, yes,\" again as Luke pressed forward and Amy could tell that he was inside her, pushing forward as far as he could go. She wondered how long he'd last and how long she'd last as this was new for both of them, in different ways of course. As he began to pump in and out, the sloshing noise grew louder as did the slapping as he bottomed against her butt.",
        "Amy wondered and, sure enough, Luke grabbed Anna's legs and lifted them to his shoulders to her very apparent groan. The slapping noises got louder and much faster as did Anna's breathing and Amy just knew she was about to explode. A very loud, \"Oooohhhh,\" escaped her lips and her body began to jerk and almost vibrate as the orgasm completely overwhelmed her and took control. Amy felt something and realized that, in her frenzy, Anna had grabbed hold of her hand. But now Luke was groaning and shaking as well and she realized he was pumping that hot and creamy fluid inside of Anna. Slowly everything got quiet and everyone stopped moving.\n\nLuke slowly lowered Anna's legs and looked at Amy who was smiling back at him which obviously relieved him as he wasn't quite sure how all of this was going to work out. Anna opened her eyes and looked from Luke to Amy and back to Luke. It was pretty clear she wasn't quite sure what was going to happen next.\n\n\"I better go back to my room,\" Anna said softly.\n\n\"Only if you want to,\" Amy assured her. She still had hold of Amy's hand. Luke wasn't saying anything. \"Plus, if you want to wait a while, you can watch Luke take care of me again.\"\n\n\"Oh my god,\" Luke was able to say.\n\n\"I'd like that,\" Anna said, squeezing Amy's hand. \"This is fun.\"\n\nAmy wasn't quite sure what it was, except that it sure as hell was different. This was Luke's second time with two women and he was beginning to like it. Particularly when the two women were Anna and Jen. Which, of course, reminded him that Jen was going to be here tomorrow. \"Three women?\" he wondered.\n\nWhen he felt Amy's mouth engulf his slightly sagging cock, and she said, \"First time I've tasted another woman on that thing,\" he was ready to go again. Anna just smiled and watched.\n\nAmy was the first to wake up, in their room anyway, and her brain quickly shifted back to last night. She rolled over and looked but Anna wasn't there. She must have decided that coming out of their room in the morning would be too hard to explain if Randy and Kerry happened to be up. Amy kind of thought that those two might be a little late getting down for breakfast as, according to Anna, they seemed to be3 enjoying each other last night. But she was sure that Randy could do a lot worse than Kerry and she wasn't begrudging them their fun. Particularly after last night in her room. She was in no position to begrudge anyone anything.\n\nLuke was just rolling over. \"Where's Anna?\" he said.\n\n\"Miss her already, huh.\" He couldn't see her grin.\n\n\"Just wondered where she was.\"\n\n\"Probably sneaked back to her room to avoid questions.\"\n\n\"Ah, good point.\"\n\nAmy was armed and ready this morning too. She might just poke at Luke a little. \"Speaking of Anna, how was that?\"\n\nHe turned and looked at Amy. \"Really?\" he said. \"You were right there watching.\"\n\n\"Yeah, but I'd like to hear it from you.\"\n\n\"Very tight,\" he said, smiling, giving a little of it back to Amy.\n\n\"I'm surprised you could get any satisfaction from me after that, even with her watching.\"\n\n\"Yeah, me too,\" he said and ducked the slap he knew was headed his way. Recovering he said, \"Speaking of how was that, how was that for you, watching.\"\n\n\"You have to ask?\"\n\n\"Yeah, I guess Anna did get a pretty good show didn't she.\" He kissed her. \"You were hot, hot, hot. Like when you watched the porn that time.\"\n\n\"Not much difference, right?\"\n\n\"Good point. When do I get to watch you?\"\n\nSomehow, she knew he was just kidding. At least she thought so. Was he? Oh my gosh. \"You want to see me with your friend Dick's dick that was right there in front of me today?\"\n\nHe was quiet for a second. \"Is it different for a man than a woman?\" he asked thoughtfully. He really hadn't stopped to think about it. Amy had watched him twice now with another woman. And these weren't just any women. They were WOMEN. How would he handle seeing her with another man? And, what if he had an eight inch and very thick cock.? Would she enjoy that? He could see her watching him. Not too surprisingly her thoughts were very closely matching his. Could she let another man touch her, penetrate her while Luke was watching? Was it different? Right now, she decided that, right or wrong, it was.\n\n\"You're not ready for that now, are you?\" she asked quietly.\n\n\"It doesn't seem fair though,\" was his answer.\n\n\"Don't think it has anything to do with fairness. Just has to do with how you feel about it.\"\n\n\"Are we that different?\"\n\n\"Right now, we're just products of our society and, despite everything, women are looked at a little differently than are men. I could go out in our neighborhood naked and people would look and smile. If you went out they'd call the police and have you arrested. So, yes, different.\"\n\n\"Serious talk,\" he said. \"Let's get some breakfast before I molest that fantastic body of yours . . . again.\n\nThey had only been in the kitchen a short while when Anna appeared, a big smile on her face. \"Hi guys. Can I help with breakfast?\"\n\nThat answered one of the questions in Amy's mind, about how things might go today after last night's excursion into the unusually erotic. Anna seemed very much at ease and continued to amaze Amy.\n\n\"Sure can,\" she replied. \"Not sure when Kerry and Randy will be getting up.\"\n\n\"They're up,\" Anna said, rolling her eyes. \"I think they're insatiable.\" She giggled.\n\nWorking together, all three came up with a good breakfast and finished eating just as Randy and Kerry appeared.\n\n\"Oh good, you guys got things taken care of.\" Kerry said.\n\nAmy had to bite her tongue to keep from replying to that one but she just said, \"Plenty left for you two.\"\n\nAt that they heard a car pull into the parking area outside. It had to be Jen and none of them realized it was that late.\n\nJen hauled her gear in and just sat it in the living room of the cottage as it still had to be determined where she was going to sleep. Of course, now, the obvious place was with Anna but Jen didn't know yet that Kerry wasn't taking that spot. As the six ate breakfast together, Jen kept glancing over at Kerry and Randy as Kerry was practically glued to Randy's side. Jen had just met him before everyone left for the lake so she didn't quite know of the connection that had already been created there. But she was figuring it out pretty quickly.\n\nAfter breakfast there was a recap of yesterday's activities with a few open-mouthed looks from Jen. Randy said he was going to show Kerry around the area a little but the others all were saying that, with the expected heat today, it would be good to go to the cove again . . . if Jen was okay with it. She questioned both Anna and Amy about whether they had actually been naked there, almost like she couldn't believe it from either of them. Luke was just smiling as his mind was remembering having very wonderful sex with all three of them. Jen wasn't about to be outdone by these \"kids\" and she decided she was all in.\n\nA little later all piled into the car, Luke and his three women he snickered, to playful slaps from all three. Jen was a little out of the loop on this as well since she wasn't aware of what had happened last night between Luke, Amy and Anna.\n\nIn 45 minutes all four were naked, sitting on towels and ready to get in the water and cool off. Before they could move Amy saw Dick, from yesterday heading right toward them.\n\n\"Hey, Luke,\" he called, a big smile on his face. \"And Amy,\" he added, winking at her. \"Now, yours is similar to Amy I remember,\" he said, pausing and looking at Anna. \"Anna,\" as he snapped his fingers. \"And this lady I don't know.\" He was looking at Jen of course.\n\n\"This is Anna's mother, Jen.\" Jen smiled.\n\n\"You're shittin' me,\" Dick exclaimed. \"No way,\" and he was looking back and forth between Jen and Anna. \"Sister, right?\"\n\n\"She'd be a terrible sister,\" Anna giggled out, \"but she's a pretty good mom.\"\n\nDick was just staring at Jen who was just a mite uncomfortable getting this attention from a naked man whose penis was about four feet from her face. At least it was limp and just hanging there. Suddenly she realized she was staring at it and looked up, red-faced to see Dick smiling at her. Luke was just sitting there but Amy quickly realized that Dick was quite mesmerized by Jen.\n\n\"Hey, sit down and join us for a while.\" She said, gesturing to a small empty spot on one of the towels.\n\n\"Thanks, maybe I will,\" was the prompt reply and he sat so that he was directly facing Jen. In case it has been forgotten here, Jen is 40 years old, going on 30 as someone has said, with huge boobs that pretty well match Annas with maybe just a quarter inch of sag, tall, blond and blue-eyed.\n\nAmy's mind was not exactly racing but it was certainly working as she thought about the conversation from last night and couldn't help but look at Dick's cock and, oh my gosh, where was she going with this. She had to stop thinking that way. Whatever would happen would happen. She hadn't planned on Luke with Jen nor Luke with Anna. It had just happened. She had thought about Luke watching her having sex with another man but in her thinking, the man was always faceless. Plus, it was so far from, well, from her for sure. Only one man had ever touched her or even seen her. Her mind stopped as she giggled. She was sitting here naked, same as yesterday, and men had SEEN her for sure. That thought distracted her for a moment. That had happened yesterday, when she was unsure about it. But she had enjoyed it and was anxious to do it again today. The feel of the air and the water on her naked body was exhilarating and she wanted to have that feeling again. The other she was still unsure about, just as she had been unsure about being naked yesterday.\n\nShe smiled at Luke and stood up. Anna quickly joined her as Jen and Dick were now involved in quite a conversation. In a few seconds Luke joined them.\n\n\"Does Dick have a Mrs. Dick?\" Amy asked.\n\n\"Such talk,\" Luke answered, accompanied by a laugh from Anna. \"When I started working with him, he was just finishing up a divorce so I don't think there's a Mrs. Dick, if there is such a thing as a Mrs. Dick.\"\n\n\"Jen certainly seemed interested in Dick's dick when he first walked up,\" Amy added.\n\n\"Noticed that too,\" Anna noted. \"They seem to be having a nice conversation and haven't even noticed that we left. A round of laughter from all three.\n\n\"I'm going to swim,\" Amy said and headed out into the water. It was cold, like yesterday but she just dove in, not worrying about her hair or anything. It felt just as good as yesterday against her bare skin and when she lay on her back to float, her nipples were dark and very stiff and long. \"Why waste that,\" she though, surprising herself a little and she slowly walked to the shore, then along behind where most of the people were sitting or standing. She looked straight ahead but knew she was being watched and she could feel her breathing change as her body began to tingle. It was an amazing new feeling, a little like her first orgasm only not nearly as intense of course. But she liked it for sure. She walked to the far end of the cove, then got in the water and swam back to where she'd started, occasionally rolling over on her back to relax . . . but really just to give everyone a good view of her floating breasts. When she was finally back to where they had spread their towels, Jen and Dick were no longer there so she just sat at the water's edge and enjoyed her nakedness.\n\n\"How was the swim, and the walk?\" Amy heard Anna's voice behind her.\n\n\"It was nice,\" she replied quietly.\n\n\"It must have been. Every male in the whole place was gawking at you. I was watching.\"\n\n\"You should have joined me. I wouldn't have gotten nearly as many gawks with you along.\"\n\n\"I was a little behind you but walked back instead of swimming. It's a different feeling, being naked and knowing you're being watched. It may get dangerous, you know.\"\n\nAmy had to laugh at that as she'd had the same thought. No nude bathing at home so what could she do. \"We'll have to figure something out,\" she said as she winked at Anna.\n\n\"Maybe some dares,\" Anna replied, an expectant sound to her voice. \"We can take turns.\"\n\nThat thought hadn't struck Amy before but now that it was in her mind, she was sure it would torment her daily. But it would be fun coming up with dares . . . naked or near-naked dares. \"It's a deal,\" she said. She and Anna high fived.\n\n\"Where's you mom?\" Amy looked around,\n\n\"She and Dick and Dick's dick left a while ago. He was going to show her some of the sights around here.\"\n\n\"Still naked?\"\n\n\"Clothing on this time. I know my mom and we may not have a sleeping issue at all tonight.\"\n\nNow Anna was just sitting there, looking at Amy. She took a deep breath and Amy thought she might know what was coming.\n\n\"About last night.\"\n\n\"No worries,\" Amy answered quickly.\n\n\"Listen, I was just in my room and all I could hear were Randy and Kerry and all those noises they were making, well, I don't know what happened.\" Now she was looking away from Amy\n\n\"I know that feeling,\" Amy said. \"It must be something we have in common.\" She smiled as Anna was looking at her again. \"You hear anyone say to stop?\"\n\nAnna leaned over and gave her a big hug, as best she could while sitting there, both of them naked.\n\nThe weekend ended with no more drama or intrigue. Jen called Anna and, clearing her throat several times, said she was spending the night at Dick's and would be heading home from there. Randy and Kerry took off early Sunday morning and Kerry said she'd see her sister that evening. That left Amy, Anna and Luke to clean up, pack up and head for home as best they could. They tried to get the cottage looking like it did when they got there and, after a couple of hours had pretty much accomplished that and headed home.\n\nIn the two weeks that followed the big weekend Amy noticed that Anna still hung around Luke when he was working in the yard but, there was a big change as well. She was spending lots of time with Amy whenever she got a chance and Amy was really enjoying it. As Anna often said, there wasn't much difference in their ages, even though there was in their circumstances. Anna actually helped with the cooking, staying for dinner on several evenings and helped clean the house as well. They spent time talking about the weekend, the excitement of being seen naked by strange men and other, just general things about Anna's growing up and her dreams.\n\nNear the end of the two weeks, Amy noticed a slight change in Anna when they were together. She seemed a little more pensive than usual, sometimes even drifting away from their conversation. Amy didn't want to push, thinking whatever it was that was causing it might go away on its own. After three days she couldn't stand it any longer.\n\n\"So, what's up, Anna?\"\n\nA strange look from Anna. \"What do you mean?\"\n\n\"Somethings going on and we're friends now so share away and maybe we can solve it together.\"\n\n\"No, it's okay. No problem.\"\n\n\"Bullshit, if you'll pardon my language. You might as well tell me.\"\n\nAnna realized that Amy was serious as she had never heard her use crude language like that before. She looked at Amy for long seconds. \"You sure you want to hear?\" she said finally.\n\n\"Sure, we're friends like I said. Maybe I can help.\"\n\n\"Yeah, well, you're the only one who can help.\"\n\nNow that was a puzzling response. \"Me?\" Amy asked.\n\nA deep breath from Anna. \"You,\" was her soft reply.\n\n\"Tell me and I'll do my best.\"\n\nAnother deep breath from Anna, then she looked away from Amy for long seconds then back at her with a strange and almost sad look. \"I want to have sex with Luke again.\"\n\nNot at all what Amy was expecting and Anna's words hit her like a whack to the back of her head. She could only stare back at this new friend and wonder. \"Wow,\" she finally said.\n\n\"I know, and I'm sorry, but it's driving me crazy. I've been trying to get up the courage to tell you for the last few days but just couldn't. I didn't know how to do it. I'm . . . it's . . . She sighed. \"It's sick but I can't do anything about it.\"\n\nAmy's brain was flashing back to that weekend, at her laying there beside Anna and Luke and watching them clinging to each other. All the sounds of their sex echoed in her head. Anna actually holding her hand while she orgasmed, then staying there to watch she and Luke in a follow-up of the same thing. And now she wanted to do it again.\n\nAs those thoughts and images raced through Amy's brain, Anna sat quietly, watching and waiting. And now it was Amy's turn to sigh. Above all those thoughts was one she didn't seem to want to have or repeat or maybe face. But it stayed, lingered, waiting for its chance. When the rest of the thoughts and images slowed, that key thought pressed to the front. Amy closed her eyes but it stayed right there. She shook her head slightly but it wouldn't go away. At last, unable to fight any more she relented and it pushed its way to the front. She had enjoyed watching and listening to Luke having sex with Amy. Oh god, now she had admitted it and there was Anna, only five feet away and asking to do it again.\n\nInside, Anna was smiling even though she wasn't showing it on the outside. Amy was thinking about it. There hadn't been an instant no. She was thinking, probably remembering as was Anna. It was her thinking that made her want to do it again. And the fact that Amy had watched and then let her watch them having sex as well, actually the second time Anna had seen that. She knew in her heart she didn't want to steal Luke away from Amy. She knew that was impossible, the way they obviously felt about each other. She wished, more than anything, that she had an explanation. But she didn't. She just wanted sex with Luke. Maybe it was security. With him there was nothing expected except good sex. She knew that. With someone else there might be expectations outside the sex, commitment, and she wasn't ready for that yet. She could wait for that as well as wait while Amy decided.\n\nAmy was wondering if her brain was deciding what to do or whether that last thought she finally allowed to get out had made the decision for her.\n\nCautiously and quietly Anna decided to intervene in Amy's thinking. \"You seemed to enjoy watching,\" she said.\n\nOf all the things Amy wanted to hear from Anna, reminding her of how much she had enjoyed that night, was not it. But she was right, of course. Decision made.\n\n\"Okay,\" she said finally. \"If Luke will do it and I suspect he'll fuss, just so he can say he did, and then he'll be fine with it. Have you said anything to him about that?\"\n\n\"Oh no, no, no.\" Anna said almost frantically. \"I wouldn't do that.\"\n\n\"I know you wouldn't. I just wanted to see your reaction.\" She smiled now that the tension was broken.\n\n\"One more thing,\" Anna said hesitantly.\n\nWhat now, Amy thought. \"What's that?\"\n\nA deep breath. \"I know you like to watch but, I'd like for it to be just Luke and me.\" She saw Amy's puzzled look and added quickly, \"I know how to set up a video feed to your computer so you can watch and tape at the same time.\"\n\nThe sudden slutty sound of that made Amy almost instantly aroused. She would be a voyeur, watching from another room via a hidden camera. Maybe she wouldn't tell Luke about the camera. She could feel her face beginning to flush as thoughts zoomed through her brain, and Anna could see it too. She smiled. They would be alone.\n\nThat issue being settled, they went to the kitchen to decide what to have for a very special dinner tonight.\n\nAnna said that, under the circumstances she'd be happy to go to the store and get some steaks for dinner but Amy teased her that it would be a little like paying for sex and she didn't want to do that. They were both able to giggled over that one. They did decide on pork chops, mashed potatoes and some green beans, with almonds of course. Anna peeled the potatoes and got them on cooking. Everything went smoothly and soon Luke was home and looking forward to dinner. He seemed totally unaware of the slightly different looks he was getting from the two women.",
        "They ate, making a lot of small-talk along the way until finally, Luke could sense that something was up and said, \"What's going on? You two look like the cat that got the canary.\"\n\nAmy looked at Anna who said, \"You.\"\n\nOne of those deep breaths. \"Anna and I were talking today and I asked her what was up as she seemed a little distracted. She just admitted that she wanted to have sex with your again if it was okay with you.\"\n\nLuke swallowed hard, then looked from one to the other. \"Is that a trick question or something? How do I answer something like that?\" Now he was looking at Amy.\n\n\"You remember how much both Anna and I enjoyed the last time. So, what do you say?\"\n\nSo, he had a green light to screw the delectable girl from next door. Pretty face, huge boobs and that waxed muff. And she was sitting right there, looking at him and waiting for an answer. He glanced at Amy one more time and remembered indeed how she had enjoyed the last time. And no hesitation on her part right now for sure. The pictures zipping through his head were causing a reaction under the table. Suddenly he felt Amy's hand on his leg, then on his growing erection.\n\n\"The answer is yes,\" Amy said with a smile. She knew him well. She decided to go ahead and tell him. \"It will be just the two of you but,\" and she paused and smiled as she felt her arousal level going up very quickly. \"It will be videoed.\"\n\nAnna jumped up. \"Let me get right to that,\" she said and headed toward her house. She was back in 15 minutes and missed the very interesting discussion between Amy and Luke. She had a small camera and a CD and some other stuff to. She was gone upstairs for 15 minutes and then back down, smiling.\n\n\"So, can I assume from all this that it's going to take place tonight?\"\n\n\"If you're ready, I sure am,\" Anna answered, smiling.\n\n\"Let's clean up the dishes first,\" Amy said, hoping to build the anticipation for herself and probably the other two also. She was already beginning to breath a little harder as once again, those pictures from that night at the cottage were flashing through her brain. And the sounds. The sounds were even more exciting. And watching Anna's body jerking as Luke brought her to orgasm. She knew that sound and that feeling. In fact, Anna had watched her do the same. She watched Anna as she worked, occasionally glancing at Luke when he wasn't watching her. Her breasts were certainly bigger than Amy's but not by much, and they weren't any nicer either she had decided. Of course, the waxed mound was certainly exciting for Luke and she was sure that soon, she'd be that way too.\n\nShe was amazed that she could let this happen, be a part of it and, right now, be looking forward to it. She never doubted Luke for one second -- he could screw anyone she was sure and be ready to take care of Amy right after. That part was wonderful but she did wonder where this might head. A month ago, it was pretty much not even something she thought about. But now. They nearly were finished with the dishes and it was time.\n\n\"See you two later,\" Amy said as she headed for the guest bedroom where she knew the computer was set up. It was the bedroom in the other corner of the house so she'd be isolated from anything else that was happening. Unless Anna screamed too loudly. She smiled at that. She settled down in the little chair set in front of the table with the computer. Anna had taken care of everything. There was a picture on the computer, the bed in the main bedroom and the surrounding area. She began to shiver just watching . . . and anticipating.\n\nAmy sometimes wondered about herself. She knew and had read about some men who were always wanting their wives to get naked, or even more, with other men. It seemed to be a thing and she wondered if it was really true or just some author's fantasy. But here she was, certainly not a man, and she was totally turned on anticipating watching her husband having sex with a fairly gorgeous and wonderfully put together young girl who she had gotten to be good friends with. Was it just because Anna lived next door or could she let him do that with any woman who happened to come along. She wasn't sure about that as she saw Anna go into their bedroom with Luke right behind her. There had been lots of times that she wondered what she looked like when she was having sex with Luke. Just curiosity she guessed. She needed to get a video of that. Maybe watching Luke and Anna was like that video would be and she was substituting Anna for herself. Actually, they didn't look THAT much different. Her heart was pounding as now, things were beginning to happen.\n\nAnna went to the window and looked out. \"My room over there,\" she said, and looked over her shoulder at Luke. He just nodded. Then she turned from the window, a very thoughtful look on her face. \"Can I ask you a question?\"\n\nAmy figured that Luke's mind wasn't exactly centered on answering questions right now but he did look attentive. \"Sure,\" he said, almost a question in itself.\n\n\"You know that picture that was left in the camera when I borrowed it from you. Can you tell me about that?\"\n\nAmy pictured that picture and her bright red and glistening butt. What was going to come of that.\n\n\"Well,\" Luke said, hesitantly, knowing that Amy was listening of course. \"Amy and a friend had kind of dared each other to try getting spanked, well, you know, along with sex. Only Amy wanted to take it a little far.\" He paused.\n\nAnna wasn't quite satisfied. \"And?\"\n\n\"I had a board and she kept telling me to hit a little harder. That's why she was so red I guess.\"\n\n\"You ever do it anymore?\" She was almost grinning.\n\n\"Uh, no,\" he answered, not sure where this was going.\n\n\"That might be fun to try some time,\" she said quietly.\n\nBoth Amy and Luke sighed in unison. But, Amy thought, what Anna said seemed to sound like she was expecting this arrangement to continue. That would be something to think about for sure.\n\nNow Amy watched as Anna stood facing Luke. They were maybe four feet apart she thought and Anna was very slowly unbuttoning her blouse. When she was finished, she slipped it off and lay it carefully on a chair. Back in front of Luke again, she unbuttoned, then unzipped her shorts and slid them down her legs, stepped out and took them to the chair. Now standing there in bra and a thong, tall, dark-haired and very beautiful, Amy was wondering if she should be having second thoughts. Slowly Anna turned her back to Luke.\n\n\"Could you unfasten my bra, please,\" she asked coyly. Luke obliged. Holding the bra in place she turned back around, then carefully lowered it from her breasts, folded it and took it to the chair. Next came the thong, down her legs and over to the chair. Now she was totally naked, tanned all over and ready for what was coming next.\n\nShe stepped forward and began unbuttoning Luke's shirt. She slipped it off his shoulders and carried it to the chair, folding it carefully before laying it down. Amy wondered where she had learned how to torment a man so thoroughly. Even she was breathing harder just watching and she wondered what Luke's pulse rate must be by now. Now time for the shorts she unbuttoned, then unzipped them and down Luke's legs they went. She bent over to pick them up and her head was only about an inch from the huge lump in Luke's boxers. He had to be able to feel her breath as her head passed it. The shorts were folded and carried to the chair. Only one thing left now. For long seconds she just stood there, staring at Luke, holding his eyes with the sensual smile on her face. Amy was wondering how he could stand it. Taking hold of the bottom of each leg, Anna pulled the boxers down, Luke's erection bouncing up when the waistband passed over it. Boxers folded and stowed on the chair, Anna returned and stood a little closer to Luke than she had been before.\n\nHer eyes locked with Luke's, her hand slowly grabbed hold of his erection and just held it there, not moving. She licked her lips, and the hand moved, down to the base and back to the very purple head.\n\n\"Is that uncomfortable,\" she asked quietly.\n\n\"Hell, no,\" Luke gasped, eyes still locked with Anna's.\n\n\"It's so dry though. That would work better if it was wetter. Let me fix that.\"\n\nShe slowly bent her knees and lowered herself until they were on the floor. With hands at her side she just moved her head until she was able to capture the erection. Amy could see her cheeks sucking in as she went to work on it. Luke was having trouble keeping eye contact with her now as his eyes kept wanting to close. After watching Anna slowly undress and then equally slowly undress him the buildup had him nearly gasping for breath and the feelings racing through his body, starting with his cock, were incredible. Anna was using her lips, her tongue, and even her teeth to tantalize and torment him while at the same time nearly overwhelming him with ecstasy.\n\nShe let loose of him and captured his eyes again. If I make you cum, in my mouth now, will you be okay for later? Will I be able to get you hard again?\"\n\nLuke wasn't sure that \"again\" was the proper word here. \"Still\" might be more appropriate as he knew the thought of why he needed to be hard again would be more than enough to make him that way. The thought of shooting his load into that fantastic mouth was something he wasn't about to miss. \"Don't worry,\" he said, pressing his cock against her face.\n\nThat seemed to be all she needed as her mouth really went to work and he watched that hard cock disappear completely into her mouth and throat. He wondered where she'd learned that but wasn't worried about it. She was making little moaning sounds and her hands went around him to his butt cheeks and she grabbed hold of him, holding him against her face. Luke knew that it was more than he could stand and that feeling was beginning and then totally swallowing him. He felt himself grab Anna's hair and hold tight as his cock began to jerk and spurts of hot liquid were going into Anna's mouth. She hadn't slowed at all and he could hear the noises as she tried to swallow, but couldn't get it all and it was dripping onto her tits and the floor as well.\n\nAnna quickly stood up, grabbed Luke's hand and directed him toward the bed. She lay down and spread her legs and Luke was ready to mount.\n\n\"No, no,\" she said softly and reached up, grabbing his head and pulling it between her legs. Amy was amazed that this 21-year old was seducing Luke and was totally in control. What had she created? Whatever it was, she had created it and allowed it to happen, even encouraged it some and she was going to have to live with the consequences, whatever they might be. In the meantime, Luke had put his tongue to work and, the twisting and moaning that Anna was going through told her he was doing a good job. It was actually all that Amy could do to keep from running to that room and getting into the middle of it all but that wasn't going to happen. She knew that, later tonight, she'd have Luke all to herself to ravage as she saw fit -- or be ravaged as he saw fit.\n\nShe saw Luke's head lift and Anna quickly look at him. Was he finally trying to have things go the way he wanted?\n\n\"That's so smooth,\" he said rubbing and kissing her mound. \"How do you do that?\"\n\n\"I have a kit, I do it myself,\" Anna fairly gasped. Then she smiled. \"I think Amy would like to be smooth too and I'll help her do it when she'd ready.\" Ah my god, Amy thought, watching and listening. Did she want Anna fooling with her pussy? But, the thought of being bare down there for the first time had her tingling. Anna was even controlling her now. \"You like it smooth like that?\" Anna asked, licking her lips.\n\n\"I just like it down there, period,\" Luke answered quickly and his tongue and lips were back at work to more moaning and twisting from Anna.\n\nNow Anna had started her little chant, \"oh yes, oh yes, oh yes,\" and then, \"so good, so good, so good.\" As it was getting a little louder with each repeat Amy knew what was about to happen. Slowly Anna's hips began rising off the bed, higher and higher with louder and louder, \"Oh yes, oh yes,\" until there was finally a very loud, \"Aaaahhhhhh,\" with little jerks as her hands grabbed hold of the bed covers and her head rolled back.\n\n\"Okay, stop, stop,\" she finally said, raising her head to see what Luke was doing. \"Stop, stop, I'm gonna die,\" she gasped out but Luke wasn't stopping. His head was twisting and pushing into that bare pussy and, once again, Anna's head went back, only this time she just moaned until finally she gasped out, \"Oh fuck!\" and was jerking and pulling on the bed covers once more. Amy couldn't help but think that Luke had done to Amy just what \"Marvin\" had done to her. She could only sit there and watch and wish the \"Marvin II\" she had ordered had arrived.\n\nAmy's eyes were locked to the screen as she knew what was coming next.\n\n\"I'm ready,\" Anna said as Luke slid up beside her on the bed, seemingly not in any hurry for what would soon be happening. Amy wondered if he would kiss her, but he hadn't so far. Was that something he saved for only her. She had to smile at that thought. She watched as he slid a hand across that bare mound, then a little lower and, although she couldn't see it because of where the camera was, she knew he had a finger or two in her pussy. \"I want more,\" Anna said, looking at Luke.\n\n\"So do I,\" he quickly answered, \"but sometimes anticipation is good. Roll over,\" he told her to a surprised look from Anna.\n\nShe rolled over and got a swift and fairly hard smack on her left cheek. \"Oh my gosh,\" she said as she got a second on the other cheek. Now Luke was rubbing where he'd smacked and Amy could see on Anna's face, which was now facing the camera, an almost smile. One more smack on each cheek, not too hard this time, then his hands were spreading her cheeks and Amy could see the wide-eyed look on Anna's face. He reached between Anna's legs with two fingers, then brought them back and rubbed them on the rose-colored and puckered little rosebud of Anna's anis. One more trip with the fingers and another rub. Amy's eyes were wide, watching this happen. What was he up to?\n\nAnna's eyes mirrored Amy's as did her thoughts. What was he up to? She felt his gentle touch on her butt hole. It did feel kind of good and totally different from anything she'd felt before. Then she felt a little pressure there. He wasn't going to . . . was he? More pressure and she knew he was. She felt it, and Amy saw it. Very slowly the first knuckle of his finger disappeared into that little opening. Anna gasped as another new and different feeling overtook her. His finger was in her ass, and it was staying there. Not going any further, just staying there and moving ever so slightly. Then it was gone and his hands were on her hips, lifting her ever so slightly. Now she felt something against that other cleft and knew she wouldn't need to do anything to get him hard again.\n\nShe felt him slowly slide inside of her, deeper and deeper until she could feel something pushing against her butt. He couldn't go any further. There was pressure against her back, then hands squeezing her breasts, pulling on her nipples. Now he was holding her breasts for leverage as he began to slide in and out of that very wet and very velvety love canal. Amy watched jealously as she loved being taken from behind. She wanted that to happen again later tonight. Anna's hands were grasping the bed clothes once more as Luke began pumping harder and harder, faster then faster still. There were loud slapping noises now. Amy watched the look on Anna's face, knowing that tomorrow they'd be sitting in the kitchen sipping coffee and talking about who knows what. Now she was trying to hold on as Luke, who had just orgasmed a few minutes ago was making this last.\n\nAnna had certainly never felt anything quite like this before and she was clinging to the covers for dear life. It felt like Luke would drive that thing clear up to her belly if he kept banging the way he was. Luke, meanwhile, was thrusting the best he could and it felt fantastic in that very tight and yet very slippery pleasure tube of Anna's. If Amy wanted to watch him having sex with Anna, he was going to give her the best show he could. He was holding those huge breasts and squeezing their firm softness. He could hear the quiet moans from Anna and, despite his wanting it to last at least a little longer it wasn't going to.\n\nAnna just wanted to hear that deep grunting from Luke as he emptied himself into her. She knew it would happen soon -- sooner than she thought actually as she heard those sounds begin and could fell him twitching inside of her as he came for the second time this evening, matching her two. Too soon he stopped and she could feel his weight pressing down against her.\n\n\"Oh shit,\" he said into her ear. \"That was soooo good.\"\n\nShe tried to take a deep breath but it was hard with his weight on her. He seemed to realize that and rolled off, what was left of his erection popping out and dragging across her butt.\n\n\"Sooo good,\" she echoed, \"but the bed's a mess I think.\" She hadn't cleaned up the drippings from her mouth after Luke had come the first time and she was sure they were all over the bedding.\n\n\"That's all you can think about, a dirty bed,\" Luke giggled.\n\nAnna turned to look at him. His eyes were closed. \"Not all,\" she said. \"Not all at all,\" and giggled.\n\nThis was the awkward time, right after the finish. Beginning was easy but this was much more difficult. Actually, she felt like she'd like to give Luke a kiss as a kind of thanks for the evening. But strange as it seemed, that was a little too personal, too intimate with Amy, his wife, watching. So, she simply slid off the bed, went to the chair and began getting dressed as Luke just lay there watching her. She quickly was back together.\n\n\"I'm sure you'll be having company here soon.\" She smiled at him, was out the door and down the steps, heading next door.\n\nSure enough, in 20 seconds a naked Amy came through the door. \"What have you got left,\" she asked coyly. \"It better be good because I'm videoing it.\"\n\n\"More than enough for you,\" he answered, ready for more wonderfulness.\n\n \n"
    ],
    "authorname": "PickFiction",
    "tags": [
        "relationships",
        "voyeur",
        "threesome",
        "blowjob",
        "ffm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/more-of-amys-world"
}