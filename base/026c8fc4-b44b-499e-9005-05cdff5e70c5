{
    "title": "There and Back Again Ch. 005",
    "pages": [
        "Chapter Five: Keeping Secrets\n\nTheron cleared his throat after a few awkward minutes.\n\n\"One more question. In this...performance, do you ever find out why? Why did Loghain betray me?\"\n\n\"Not precisely. There's a lot of debate over that issue, actually, between different people who pl...watched the performance. Some say Loghain just went mad. Power hungry. Some figured that he hated you, because of some weird issue between him and your parents. Some thought he truly did the best he could when he saw the overwhelming odds against you at Ostagar, and then went mad with guilt. Others thought that perhaps...\" I hesitated. What the hell, I'm curious too. \"...the battle didn't, uh, go according to plan, and between your line moving up too far and the beacon being lit too late, he could see that there was no chance to save you.\" I could see Theron milling that over, trying to understand what I meant. Duncan caught on quicker, his eyes flickering to my face, and he gave his head a small shake.\n\nHuh. Thought not. I always knew Loghain was a jerk.\n\n\"Personally? I think it's because of what's in those papers you recovered from your chest at Ostagar.\" Now it was Tomas' turn to look confused, and Theron's turn to be surprised by what I knew. I had noticed that Theron didn't let either me or Tomas get a look at the contents of the chest. The secrets were starting to get difficult to work around. Remembering to say (nevermind think) the correct aliases was also difficult.\n\nI sighed. \"Look. I think both of you have questions, or want to talk about things, that the other shouldn't know. You know, Grey Warden Secrets, Crown secrets, that sort of thing. And I'm sure you both want to test my knowledge of said secrets, to better determine if I'm telling the truth. I'm thinking that either you both agree that I can spill all of the ones I know in front of both of you,\" I forestalled Tomas who opened his mouth, \"just wait, I didn't say that was my preferred option! - or you agree to go for a walk for a while so I can talk to you one at a time. What do you think?\"\n\nBoth men studiously avoided looking at each other and agreed with the latter. It's amazing how easy it is to see what people's expressions mean when you know all their secrets! But first Du...Tomas requested that before we did that, I recount the battle for him, again.\n\nI tried to describe my horror during the battle, my fear, but my determination to figure out some way not to leave Alistair and Aedan alone to combat the Blight. I tried to leave out my ridiculous attachment to Alistair, and I think they both were too caught up in the details to notice. I hope. Tomas asked a lot of pointed questions about what and who I saw, the ratio of men to darkspawn, and that sort of thing. I tried to answer as honestly as I could, but I truly hadn't been paying attention to the details at the time. I described seeing Cailan picked up and then thrown by the ogre, Duncan get delayed by a very large hurlock, screaming a lot, hearing the Emissaries chanting, the ground rumbling below me as darkspawn started dropping dead, and then passing out.\n\n\"We're missing something. I don't understand. Why would you being there, the only thing that changed between your performance and the reality, mean that Cailan and I lived? And from what I could see as we picked our way off the field, there were several squads of human corpses missing from the battlefield. I think somehow, some of the squads were actually able to successfully escape, which from what you've said, also didn't happen in your performance. Whatever that rumbling was, I think it was effective enough that the front lines held so some of the back lines were able to retreat. But the rumbling...there were no mage corpses that I saw, and with so few mages marching with us, there shouldn't have been any near enough the front lines to do that sort of damage. I've never seen anything like that blast pattern near where we woke.\n\n\"I have to ask, Sierra, though I'm sincerely hoping you would have told us by now if you were, but...are you a mage?\" My jaw dropped, and I let out a decidedly unladylike snort.\n\n\"Me? You must be joking. I'm from a world without magic. Any magic. How would I have been born a mage? And surely I'd know if I cast some sort of spell. Wouldn't I?\"\n\n\"I don't know, my lady. No, no, I believe you. If you have magic, it's as much a surprise to you as it is to us. Perhaps we will find the explanation later. For now, I feel the need to go for a walk. Your m...Theron, perhaps when you are done talking to Lady Sierra, you'd be so kind as to whistle or something?\" Theron nodded, and Tomas sprang up and walked out into the night.\n\nTheron looked at me thoughtfully while we waited for Tomas to get far enough away. I expected him to test me, and I wasn't wrong.\n\n\"So...tell me about the contents of the chest.\"\n\nI nodded. \"Correspondence with the Empress of Orlais, if I recall correctly. Pledging military aid, Chevaliers, and Grey Wardens on request. You were forging peace with the Orlesians.\"\n\n\"And why would that make Loghain betray me?\"\n\n\"Well, in isolation, it might not. Although maybe it would. It's no secret that Loghain hates Orlesians with an unholy dedication. He's the Hero of River Dane, after all. He sees conspiracies and invasion plans everywhere, and nothing you or anyone else says will ever change his mind. To him, the darkspawn and civil war are a minor threat when compared to Orlais. If he thought you were going to so much as show weakness in front of Empress Celene, never mind invite parts of her military into Ferelden, there's no doubt in my mind he'd betray you. He'd either assume you were crazy, or a traitor yourself. Add that to the rumours about Anora...\"\n\n\"Rumours?\" His eyes were hard now, glittering in the firelight.\n\n\"Hey, don't shoot the messenger. I'm just repeating what I've heard. There was a rumour circulating that you were going to put Anora aside for being barren. And I know Arl Eamon was pushing you to do just that. The performance never confirmed whether you were going to go ahead with it. But even the rumours...it would have been a huge blow to Loghain, both personally and politically. And he would have had much less influence on you suddenly, fewer ways to keep the Orlesians out of Ferelden.\n\n\"I'm curious. Had you decided...?\" He shook his head, his expression conflicted. That jived with the game - it at least implied that he loved Anora, although I couldn't imagine why anyone would love that backstabbing bitch. Here's hoping he lives to see what she's really like. I knew, at some point, I was going to end up getting myself in trouble by throwing my two cents in to the Royal Heir debate, but I decided to wait until I had spoken to Alistair, at least.\n\n\"And it's not just you that he betrayed - he will arrange to have Arl Eamon poisoned, put a bounty on the heads of any surviving Grey Wardens, hire the Antivan Crows to assassinate Alistair and Aedan, and not stop Arl Howe from imprisoning and torturing Grey Wardens, templars, and nobles alike. He is fomenting rebellion among the Circle, which will result in the loss of half the mages in Ferelden. He will sell the elves from the Denerim Alienage into slavery to the Tevinters. And when he loses in the Landsmeet, he will attempt to slaughter Alistair, Aedan, Eamon, and anyone else who would dare to stand up to him. If he learns you are alive...I have no doubt that the bounty on your head will be truly breathtaking.\"\n\nTheron swore, and I learned a few new good Ferelden curses. \"By the way. Duncan,\" Tomas, \"knows most of this stuff. Not necessarily the details of the correspondence with Celene, but...he's not stupid. And you can trust him. You might as well just tell him. The same goes for Alistair, and likely Aedan too.\" He nodded thoughtfully, and finally whistled, loudly, and Tomas sauntered back up. He suggested that Theron go sit by the stream, pointing off a little ways north, and then settled down onto his haunches, watching me as we waited for Theron to walk away. I'm not getting any better at remembering their names correctly. Yay me!\n\nI spoke first.\n\n\"I want to thank you.\" Tomas just silently raised his eyebrows, so I continued. \"I know who I need to have trust me if I'm going to get through this. I can't fight, I can't take care of myself, and I haven't earned your trust...yet. I have no friends, no family, and no reliable way home. I am grateful that you are allowing me to attempt to prove myself. I know that if you thought I was a threat, you'd have killed me the moment your eyes opened. So...thanks.\" He nodded, looking thoughtful. \"Anyways. Go ahead and test me.\"\n\n\"Tell me about Alistair.\"\n\n\"Ah, Alistair. Let me see. Ex-templar-in-training. Bastard son of Maric, via an elven Grey Warden named Fiona. Raised by Eamon, told his mother was a serving woman in Redcliffe Castle. Treated abominably by Isolde, and finally sent to the Chantry as a child when she wouldn't put up with the rumour mill anymore. Rescued by you, requiring the Right of Conscription, before he took his vows and became addicted to Lyrium.\" Duncan kept the mask on the entire time I spoke, but I saw his eye twitch when I mentioned Fiona. Haha, thank you David Gaider. \"Does Cailan know about him?\" Duncan twitched his head, a look I interpreted to mean he had no idea.\n\n\"He has a minor obsession with his hair, which would appear to be hereditary,\" I grinned, and Duncan nodded, \"an unholy obsession with cheese, thinks swooping is bad, uses jokes to avoid discussing virtually anything personal, and has a tendency to make both mages and Revered Mothers want to rip out their hair in aggravation. He has an overwhelming need to do what is right, no matter the cost, a sense of duty I wish was more common, both in Ferelden and in my world, and yet somehow remains a sweet, somewhat naive, optimist. He makes a much better King than Cailan ever could, despite never ever wanting to be one. Oh, and he's a virgin. Did I miss anything?\" Duncan levelled that speculative gaze at me again, and I suddenly realised I must have sounded like an obsessive stalker. God help me, it's pretty much what I am, isn't it?\n\n\"You may have missed handsome and charismatic. But otherwise, no, I'd say you got it all in one.\" He smirked as I blushed and hid my face in my hands. Giving me a moment to recover, he started again. \"Tell me about Aedan.\"\n\n\"I actually know less about Aedan than you would think, because for the performance, you're sort of...looking through his eyes, in a way. So he doesn't really describe himself or give away his personality much. But...well, he's the youngest son of Teyrn Bryce Cousland. He grew up in Highever Castle, training with his brother Fergus in combat, although the Teyrn hoped he'd be more inclined to learn about ruling than fighting. He has a mabari, who drives Nan nuts. Mother Mallol ran the chapel, and a scholar named Aldous was his tutor. On the day you met, Arl Howe was in Highever, and claimed his troops were delayed. You were there to look into recruiting Ser Gilmore, or possibly Aedan himself. The Teyrn sent Fergus to Ostagar with most of his men, planning to follow the next day once Howe's troops arrived. That night, Howe attacked, killing Fergus' wife Orianna, his son Oren, and virtually every other inhabitant of the castle. Eleanor Cousland and Aedan fought their way through the castle, finally finding the Teyrn fatally wounded. In the end, Bryce pledged Aedan to the Grey Wardens in return for your assurances that you would help Aedan escape, and bring word to Cailan about what had happened. And Eleanor stayed behind to protect your escape.\" Duncan nodded, seeming satisfied.\n\n\"And how did he become a Grey Warden?\"\n\n\"The joining. I don't really know the details of the ritual - it was sort of hazy, but Aedan, Alistair, Jory, and Daveth went into the Wilds to collect Darkspawn blood for the ritual. It was actually their trail of corpses I followed to find Ostagar. Anyway, they were also to collect some old Grey Warden treaties that had been abandoned in a ruin in the Wilds. They ran into Morrigan and Flemeth, who actually had the treaties in her possession.\"\n\nDuncan sputtered, interrupting me. \"Flemeth? The Flemeth?\"\n\n\"Yep. Witch of the Wilds. The one and only. Oh, and Alistair likely called her daughter a sneaky Witch thief. You should be grateful he's not a toad right now.\" Duncan groaned, and I laughed. \"It's actually Flemeth who saved them after they lit the beacon at the Tower of Ishal, as well. Anyway. Where was I? Oh yes. So there's some sort of ritual where they drink darkspawn blood with a little bit of Archdemon blood mixed in. Daveth went first, and died. Then Jory pulled his sword and you killed him. And then Aedan drank, and lived.\"\n\n\"And what do you know about me?\" I had to think. What did I know about him?\n\n\"Well, you killed a Grey Warden, and were about to be executed, when you were conscripted, by your victim's betrothed, no less. You're now the Commander of the Grey in Ferelden. And you realised, not so long ago, that your Calling has begun. Alistair thinks the world of you, as do the Dwarves, the Dalish, the Alienage elves, and Cailan. The templars and the Chantry don't trust you, because sometimes you recruit apostates, and take Circle mages from their control, and they don't like that very much. And you stole their templar-in-training. Other than that? Not a lot. In the performance...you died, early on.\n\n\"So, before you ask, let me volunteer a few other fun facts. Grey Wardens can sense darkspawn. Unfortunately, the darkspawn can sense them in turn. They have nightmares about the Archdemon, which are, unsurprisingly, worse during a Blight. They eat more than any person has a right to, they're all but infertile, and their lifespan is shortened to approximately 30 years from whenever they joined. After roughly three decades of being a Warden, they get the Calling. If they don't do something about it, they start to become darkspawn, or ghouls, or something. So instead they go down to the Deep Roads alone and try to get dead before the Taint takes over. Unfortunately, some of them don't get dead. They turn. Especially those that run into the Architect. And the females...they get turned into Brood Mothers. Weisshaupt has tried, with some success, to hide these facts from the rest of the Grey Wardens.\n\n\"To add to the fun, a Grey Warden is the only one who can kill the Archdemon. And the reason for that is that the Archdemon's essence, or soul, or whatever, will live on and inhabit a new darkspawn body, unless there's a Grey Warden making the killing blow. If a Warden kills it, the soul instead tries to inhabit the Warden, and...voila. Mutual annihilation.\"\n\n\"Voila? You speak Orlesian?\"\n\n\"Uh, bits and pieces. It's very similar to a language in my world. I learned a bit as a kid. I don't use it much though, so I'm not exactly fluent. I'd like to just add, on a personal note: shame you for not telling Alistair about the whole Archdemon thing. I understand why you haven't told Aedan yet...but do you realise that you just about left the fate of Ferelden in the hands of two men who had no idea that one of them would die when they faced the Archdemon?\" He had the decency to look a little guilty. \"You need to tell them, Tomas. A soon as possible. I know you want to shelter Alistair from that, and especially from taking the killing blow on the Archdemon, but he deserves to know. You have to stop coddling him, and treat him like a Grey Warden.\" Tomas nodded, looking resigned.\n\n\"Anyways. Um...There's a Grey Warden storage sort of place behind a hidden door in a warehouse in Denerim's Market District. Somehow Loghain found out about it, and while he left most of the stuff there, he stole the last of the Archdemon blood. So until he is dealt with, you can't create any more Grey Wardens.\n\n\"Oh...and Riordan, an Orlesian Grey Warden, is currently in the dungeon of the Arl of Denerim's estate in Denerim. Or maybe he's about to be there...I admit that the timing of some of these events is a little confusing. In the performance, they skip pesky details like weeks of walking between destinations, so I don't know exactly when all these events occur.\"\n\n\"Pesky?\"\n\n\"Oh. Right. Um...something between irritating and unimportant for the purpose at hand. I suppose.\"\n\n\"Travel times are pesky?\"<br>\n\n\"Well...okay, if you went to see a theatre performance, where part of a story was a journey from, say, Val Royeaux to Denerim, would you want to watch every minute of people just walking along, peacefully, and then making camp, and eating food, and sleeping, and then more walking? They just...skip ahead to the interesting bits.\"\n\nTomas chuckled. \"So. Last question. You're here. As you've said, as far as you know you may just be dreaming. None of this may be real. You may be pulled back home, you may be stuck here. But, assuming that you do stay, what do you intend?\"\n\n\"Well, I don't intend any harm to come to Ferelden, or the King, or the Grey Wardens. I suppose that's the first place to start. If I could, I'd...well, I suppose I'd try to end the Blight. I'd try to put Cailan back on his throne, so Alistair doesn't have to do it. So I guess I intend to aid those efforts, if I can. All I can offer is information, but I will give that freely to you, or Alistair, or Aedan. Or, I suppose, Cailan, if all else fails.\"\n\n\"You could always have run. I wonder, then, why you didn't?\"\n\nI nodded. It was a logical question. \"I suppose...well, a couple of reasons. One is that really, where could I run to? If the Blight isn't ended, there won't be anywhere safe to go. Another is that I'm not even sure I have the choice - I mean, ending up on a farm near Ostagar just in time to see a darkspawn attack? Or in the Korcari Wilds, on the very day of battle? I'm not completely sure that if I go somewhere else, try to flee, that I won't just get yanked out of this world and then dropped back wherever this magic...thing...feels I should be. I could try to run only to end up right back in the middle of it all.\n\n\"And, I mean...you've seen that I admire Alistair's sense of right and wrong, of duty. Knowing what I know, knowing that if I act, do something, I can spare suffering, save lives, end the Blight sooner, prevent civil war... if I know that, and this is real, and I don't even try...what does that make me?\"\n\nI looked up to see an expression on Duncan's (and at that moment, I couldn't see him as anyone other than Duncan) face that I assumed was something like what Alistair or Aedan must have seen when they woke after their Joining rituals. Pride. He reached out and squeezed my hand, briefly, and I blushed. One day, I'm just going to stay this colour.\n\nHe whistled and Theron came back, crashing through the undergrowth in the darkness.\n\n\"I think that soon, we should all get some sleep, but I wondered if you'd indulge me in just a few more questions, Sierra.\"\n\n\"Of course, Tomas. Hit me.\"\n\n\"Hit...?\"\n\n\"Uh. Oh. It's a saying meaning...please go ahead and ask your questions.\"\n\n\"I'm not even going to ask how that could possibly be...nevermind. So. You mentioned before that Alistair and Aedan are going to be heading to Lothering.\"\n\n\"With Morrigan. Yes.\"\n\n\"Morrigan? The witch?\"\n\n\"Yep. Flemeth sends her with the boys. She's a bit...unsociable. But quite useful, overall.\"\n\n\"Um. Okay, so...Lothering?\"\n\n\"Right. Well, neither Alistair nor Aedan know the best routes out of the Wilds, and Morrigan knows how to get to Lothering. So she takes them there. It will be absolutely overflowing with refugees, but if we hang out near the Chantry we will probably find them.\" Tomas and Theron mouthed the words 'hang out' at each other, and I blushed. \"Alternatively, we can find Leliana, an Orlesian Chantry sister. She will manage to track them down without trouble.\"",
        "\"When?\"\n\n\"Well, like I said. I don't exactly know. I know that both Alistair and Aedan are injured, and Flemeth has to heal them. And they should have a longer walk to get to Lothering than we do since they will be starting south of Ostagar in the Wilds. I think. I imagine we'll have a least a day, maybe more, before they catch up to us.\" They considered that briefly. \"Can I ask a practical question?\" Both men nodded.\n\n\"Well, I don't mean to be nosey, but...do we have any money? I mean, uh, coin?\" Tomas admitted to having a small collection of silver, but Theron interrupted.\n\n\"We don't need coin. I can requisition what I need in town, and give them a token to claim what they are owed from the Royal Treasury.\" I stared, open-mouthed, at the stupid, naive, arrogant...Fortunately Tomas cut in before I had the chance to say any of what I was thinking.\n\n\"Cailan, the King of Ferelden, most certainly can do those things. But Theron, the non-descript refugee from Blight-infested areas to the south absolutely cannot. First of all, they'd never believe you, as you are; second, do you really want to give Loghain the opportunity to try to have you killed again? This alias, this bluff, it is necessary. It is the only way to keep you safe. Until we can tell all of Ferelden what happened, you need to be anonymous. And third - if this town is as overflowing with refugees as Sierra says, there won't be anything for you to requisition anyway. We're going to have to hope we can buy whatever supplies we need. So. Do you? Have any coin?\" Theron flushed, initially looking irritated, but more chagrined by the end. He shook his head.\n\n\"I wonder if these are any good here?\" I fished in my pockets some more, coming out with a decent handful of change. I put the paper money aside - useless - and was left with some pennies, dimes, quarters, and even a couple of loonies and toonies, one- and two-dollar coins. Tomas examined them, amazed at the clear imprinting on the coins, studying them intently.\n\nHe pointed at the pennies, thinking they'd be good for maybe a 25 copper piece. The dimes he figured would be worth five or ten silver each, the quarters more like 25 silver. The loonies he thought we might be able to use as sovereigns, but he wasn't sure. The toonies he was fascinated by, but felt no one would accept as currency. I recalled hearing that if you froze them, you could break toonies so the inner golden-coloured disk separated from the outer silver disk, but I had no good way of freezing them. I put the toonies back in my pocket, and told Tomas to add the rest of my change to his purse. If the loonies would indeed pass, I had handed over about five sovereigns, a small fortune. I made a mental note to bring more small change if I ended up back at home again.\n\nI thought about how we could approach Lothering as I settled down on the ground to sleep. I automatically chose the opposite side of the fire from where Theron reclined. Theron gave me an odd smile, from the other side of the fire, which felt decidedly...weird. I ignored it, choosing to put my back to him and trying to relax. Tomas had claimed he would keep watch, and was sitting on a rock a little apart from the fire. I wasn't cold, but I certainly wasn't comfortable, and I shifted around for a while looking for a better position. After a few minutes, I heard Theron start to snore softly. Somehow the sound was so...homey, I finally closed my own eyes and drifted off."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "romance",
        "dragon age"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-05"
}