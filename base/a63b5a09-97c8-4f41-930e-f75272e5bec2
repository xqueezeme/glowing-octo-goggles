{
    "title": "Playing With Myself",
    "pages": [
        "I'm going to take a little nap after I finish this letter, so I'm going to write about masturbation. I love to do it, and I think I'll enjoy telling you about it.\n\nWhen I finish the letter, I'm going to have a shower, then go to bed for a nap. I'll have my vibie, and I'll play with myself. I hope you don't mind the subject. I feel I can tell you anything (and God knows I have), so I want to tell you about how I play with myself. There's no train of thought here, so don't look for any flow of ideas. It's like masturbation, I'm going to play with myself verbally.\n\nI do it every day, but only once to an orgasm. Sometimes, if I take a nap and come then, I might play with myself at night before I go to sleep, but only for a nice tingle. Only one self induced climax a day. \n\nI've tried lots of different combinations and schedules, but I've found that to be the most pleasurable and satisfying. \n\nI tried doing it to orgasm several times a day, but the climaxes weren't as strong. Excessive frequency seemed to dilute the pleasure. After I did myself multiple times for several days in a row I found myself not even wanting to do it. \n\nI went through another period where I played with myself until I went over several times in a day, then I didn't do anything for several days. About the third day of abstinence, it got so I couldn't think about anything else but how much I wanted to masturbate. When I finally did, I came almost as soon as I touched my button. The pleasure was intense but fleeting, and the climax was so strong that it left me in a daze. \n\nAnyway, I tried all the different combinations and permutations, and I found that one orgasm a day was just right. At least it's as good as it gets doing it to myself. I usually do it in bed at night, before I go to sleep. By then it's been long enough since my last one so that I really look forward to it. Also, since I had had done it about twenty four hours before, the pressure isn't so intense that I come right away. I can prolong the lovely tingle and give myself about fifteen or twenty minutes of pleasure before I come. \n\nOne orgasm a day also means that the intensity is just right. I'm not so anxious that I climax myself into a coma, but it's been long enough so I have just the right degree of orgasm to leave me warm, relaxed, and a little sleepy. \n\nI've really gotten into naps this past summer, and I'm going to miss them. I don't take naps to sleep, I do it to play with myself. Well, both really. If I have a climax and don't take a little nap I'm sort of tired for the rest of the afternoon. If I don't masturbate, though, I don't sleep. By experimentation, I've found that it's best if I do both or neither. \n\nI wish I had a chalkboard with x and y axes to explain this. X axis is time. Y is height of sexual arousal. \n\nI have lunch on the patio, and let's say y=0. Continuing positively along the x axis, I sit in the sun on my patio and decide I'm going to take a nap (and play with myself, of course). This causes the curve to rise above zero, and it slowly continues to rise as I sit there and consider what I'm going to think about when I do it and how nice it's going to feel. \n\nI go upstairs and take a shower, thinking about playing with myself, and I spread a lot of lather on my breasts. The curve rises as I stroke my soapy nipples, and when the curve reaches a certain point they swell and harden until they're like two sudsy little berries at the tips of my pale breasts. The curve rises higher as I gently pinch my nipples. The highest point on the curve I can attain by playing with my breasts is when I cup the full part of the breast and gently squeeze it with one hand while I roll the nipple between the thumb and index finger of the other hand. The nipple gets so red that it almost glows. I always do my left breast, because it's a tiny more sensitive than the right. I wonder if that has anything to do with my being left handed. Probably not.\n\nTo get the curve higher, I continue to play with my nipples with one hand while I use the other to get my tummy and mound nice and foamy. If I'm a little excited, like where the curve is when I do my breasts, my tummy becomes sensitive and erogenous. The curve will rise a little if I stroke myself there very gently while I continue with my breasts. It's especially erogenous if I imagine I'm being kissed down below my navel. \n\nIt's at about this point in the curve that I can feel my clitoris start to swell. It does that before it's ever been touched. The engorgement of my clitoris, even without touching it, bumps the curve up a little higher. I have a very expressive button, and it doesn't take too much to get her attention. \n\nIn order for me to get higher on the curve, I have to play with my pussy.\n\nThere's a little seat built into the corner of my shower, so I can put one foot up there and get my legs nicely parted. It's also handy for shaving, but I'll tell you about that some other time. Just putting one foot up on the seat excites me enough to raise the curve a little, and there's a definite rise when I use the soap to get my pussy and bottom nice and sudsy. There's always a sharp little peak when I soap my ........ anus, but it's transient because I don't spend long there. \n\nSometimes I sit on the little seat with my legs wide apart and let the shower flow onto my pussy. That can be very seriously stimulating, but it's not part of the curve I'm trying to explain.\n\nSo I'm standing there with one foot up on the little seat, using a hand and the spray of the shower on my nipples, and I slide the index finger of my left hand down my tummy to the top of my cleft. I know what's coming next, and I can almost always feel the juices in my vagina start to flow at right about that point on the curve.\n\nBy the time my finger actually reaches my sudsy, slippery clitoris, it's already partially erect with anticipation, and the little head has started to peek out of its hood. Just a brief touch with my slippery finger sends the curve much, much higher. In fact, it might be best to use semilog paper to graph this process, because the rises before I touch my button are miniscule (fun, but miniscule) compared to what comes from then on.\n\nOf course I could easily send myself over by stroking my clitoris in the shower, but I don't. Well, hardly ever. I just wash my pussy like a good girl with maybe a teeny little more attention to my button than really necessary. My excitement curve rises above anything I could do without touching my pussy, but I don't let it go too high. Just nice and tingly. \n\nAfter I rinse, I slide a wet (never soapy) finger inside my vagina for freshening myself in there. It feels good and gets me higher on the curve, too. I never use douche, those deodorant sprays, or soap. Just my natural juices and pure water. Dr Georgia told me a long time ago never to use any of that stuff. She says vaginas get grossly overtreated and overmedicated, and it causes dryness, itching, yeast infections, and other gross things. I have a nice healthy vagina, and I intend to keep it that way. \n\nOkay, shower over and I've dried myself. The curve has dropped, but it's still well above baseline because I loved the feel of the rough towel on my sensitive nipples.\n\nI walk naked into my dimly lit bedroom, turn down the covers, get my Lubriderm Lotion and little vibie out of the drawer, and slide between the cool sheets. My bed is a king size, but I don't know why. There has never been anyone but me in it, because my lover never comes here. I love the feel of the clean, crisp sheets, and I pull the covers up over me to enjoy the coolness. \n\nI lie there until my body heat warms the sheets, then I push the covers down with my feet until I'm laying naked and uncovered. I have the Lubriderm and my vibie handy on the bed next to me. \n\nI often wish I had a mirror on the ceiling above my bed. I think it would be exciting to watch while I play with myself.\n\nI lie there with my eyes closed, and my mind shuffles through my inventory of erotic memories. I never really fantasize. I have a very, very good memory, and not just for academic things. I think my ability to remember erotic feelings are almost total. I can recall sexy things that happened to me when I was fourteen in total detail. Both what happened and how I felt. As I consider what memories I will replay in my mind, I go higher on my excitement curve.\n\nI decide I will remember one specific time when I was .......... much younger. I was sitting in John's big chair, reading. John came into the room, leaned over my chair to kiss me, then he told me to take off my jeans and panties. As I was doing that, he sat down on the floor in front of the chair, and my thighs opened eagerly for him. For the next fifteen or twenty minutes I was given the most marvelous pussy kissing I ever experienced. There were two wonderful orgasms, and John carried me to bed afterwards where I had a lovely nap. That is my favorite scene to replay in my mind while I play with myself, but I try not to use it too often.\n\nI start by just lying there with my eyes closed, thinking about the preliminaries before John actually put his lips to my pussy. Those mental images start a steady increase in my excitement curve that will only abate when I have completed my orgasm. One hand goes to my breasts to lightly brush my nipples while I caress my tummy between my navel and mound with the fingertips of my other hand. By now almost any spot on my body is erogenous, but those places seem particularly sensitive. Light caresses there gently nudge my excitement a little further up the curve. \n\nI pick up the Lubriderm bottle and use the pump to squirt a dab of the cool lotion onto each nipple. It feels cold and exciting on those sensitive places, and my nipples get fully erect and hard. I use just the tip of the index finger of each hand to slowly rub the lotion into my nipples, using a light circular motion that makes me sigh with gentle pleasure. As I do this, I again reach the point on my excitement curve where I feel my vagina moisten.\n\nWith both nipples glowing with excitement, I squirt some lotion onto the index and middle fingers of my left hand. I part my legs and lift my knees to open myself to my caresses. I hold the outer lips of my pussy open with the fingers of my right hand, and the lotion feels cool and delightful as I spread it between my lips from the very top of my cleft, down the length of the button, over and around its little head, and down and around my entrance. This is where the curve takes an exponential jump. I'm fully into my masturbation and committed to giving myself pleasure. I know I'm going to continue until I come, and just that realization is exciting. At this point, I've noticed that I always take a very deep breath, hold it, and let it out with a long sigh.\n\nThe heat of my pussy quickly warms the lotion, and I use my finger to carry it into my vagina and smooth it around inside me. I love the feeling of having my entrance dilated, so I slide two fingers inside and move them around, pulling and stretching. Another exponential notch higher on the excitement curve.\n\nThe fingers in my vagina are moist and slippery, and I slip them out and put a fingertip on each side of my clitoris, barerly touching it. I move my fingertips up and down the shaft, taking care not to touch the little head that's fully out from under its hood. It's too sensitive there. Not yet. \n\nNow my curve is at about a steady twenty degrees above the horizontal, and it will remain on that plane for as long as I can control myself. The excitement ebbs and flows around that line like a sine wave with a long frequency and low amplitude. I may get a little more or less excited, but the curve continues ever upwards. This is almost a steady state condition of tingly pleasure that I try to continue for as long as possible. This is where my mind wanders through my memory, dwelling on particularly sweet things before moving on to the next. Sometimes it continues so long that I'm about to go over in the scene I'm remembering. If I'm not ready to come, I'll start the scene over again or start on a new one.\n\nThere are so many things I can do to keep myself in that wonderful steady state. I can stroke my button, I can rub that special spot inside my vagina with my fingertips, I can use my vibie, or I can combine any or all these. \n\nMy vibie. It's the same little seven incher that John bought me in San Francisco so long ago. It has seen lots of batteries, and Alkaline Energizers are best. It's two speed, but even the low speed is too intense. I like to be caressed, not jangled. I've found that wrapping a single layer of the protective brown paper my Smithsonian magazine comes in around the batteries attenuates the vibration perfectly for me. Thicker paper, not enough; thinner paper, too much.\n\nI usually use the vibie only after I've given myself a lot of pleasure with my fingers. Before that, it's too intense. I need to be pretty excited to enjoy it, but when I get to that point, I really love it. I usually use it when I come, but not always. \n\nOkay, I've reached my slowly but steadily increasing upward curve with gentle undulations above and below the line. This is where I want to get and where I want to stay until I just can't do it any longer. This is why I play with myself, this is where I want to be. \n\nMy pussy is well lotioned, and I can very gently slide my two fingers on either side of my clitoris up and down, barely touching the button. All the preparations are over, I've carefully brought myself to just the right state of excitement, and now it's time for my reward. I'm just floating on a sea of pleasure. I have a clock by my bed, and I've noticed that I can keep myself in this wonderful state for between fifteen and twenty minutes. Once, I stayed there over half an hour.\n\nSometimes I just get overwhelmed, though, and it's shorter. That's caused by letting my curve rise too quickly, and I suddenly lose control. The result is a lovely orgasm, but I feel just a little cheated when it's over. Like I shortchanged myself.\n\nWhen I've managed to stay in that state for longer than twenty minutes, my climax is sort of ....... anticlimactic. I've expended all my energy and passion by the time I come, and I'm unable to reach the level of intensity on the y-axis that I want to achieve.\n\nEvery time I play with myself, it's wonderful, but I seem to give myself the most pleasure when I'm able to maintain that state of dreamy, floating pleasure for ten to twenty minutes.\n\nFrom the time I first reach that slowly intensifying plateau, the stimulation I give myself grows slowly stronger. Starting out with a finger on either side of my button, barely touching, moving up and down slowly. \n\nI choose vivid memories of having my pussy kissed to accompany my fingers. With my eyes closed, my fingers become my lover's lips and tongue. Stroking, licking, kissing, sucking, penetrating. The moisture from my pussy combines with the lotion to make a wonderfully, sensuously smooth lubrication for my fingers. \n\nMy pussy is very small on the outside, but I have an exceptionally large clitoris. Especially when it's excited and swollen. My button is really the center of my pleasures when I masturbate, and I vary the poisition, pressure, and speed with which I stroke her. I'm very excited, so my button is fully erect with her head totally out from under the little hood. I may use a finger to push the hood back to expose more of the shaft. Uncovered, it's very sensitive, and I have to be careful to be slow and gentle. Too much stimulation, and I reach the point of no return before I'm ready.\n\nI drift along with my memories, fantasizing that my finger is my lover's tongue. I'm never very far from losing control, and I must stop frequently to let my excitement drop below the critical level on my curve. Being so close to losing control is part of the thrill. Sometimes I cool off by just taking my finger away, but often I slide my fingers into my pussy. That feels lovely and lets me come down a little bit at the same time.\n\nAfter I've had lots of gentle but continually increasing pleasure (maybe after ten to fifteen minutes on my fairly straight line), I am more adventuresome. I've gotten to the point that it won't take much to put me over the edge, so I tease myself by getting as close as I can without going over. I've gotten the entrance to my vagina nicely dilated by this time, and I often put my vibie in my mouth to moisted it, then slide it into myself. I don't turn it on, though. Just slide it in until I can feel the tip on my cervix. \n\nI am a very small person, and my vagina is proportional to my size. Although it can stretch wonderfully for my lover, a seven inch vibie is more than enough for me. I think my vagina is about 4 to 5 inches deep when it's relaxed and nothing has been in it. When I put my vibie in, I don't try to stretch myself at all. Just fill my vagina, because having it there makes anything I do with my button more exciting. I can easily make myself come just by stroking my button, but everything is more intense if my vagina is full.\n\nI often use the index finger of one hand to push gently on the vibie and keep just a little bit of pressure against my cervix with the tip. Then I tease myself by stroking my clitoris with varying intensity and see how close I can get to an orgasm without losing control. This is very much like how my lover makes love to me. It's wonderful, and it almost drives me crazy.\n\nI've had a lot of practice, so I seldom lose control anymore. When I decide to come, it's because it's time. I've had all the wonderful, floating enjoyment I want, and now I need release. I feel like a helium filled baloon rising in the atmosphere. I've been rising and rising, the ambient pressure is getting less and less, and my internal pressure is about to burst my baloon.\n\nI think, &quot;Yes, it's time to come.&quot; I take the vibie out, turn it on low, and put the tip at my entrance. It vibrates very gently, and I'm so wet by now that everything is nice and slippery. My nipples are so swollen that they just can't get any bigger. My clitoris is so swollen that it's almost completely out of its hood, and I can feel it throbbing. The tingle that has been building inside me has gotten so intense that it has to be released. Even before I actually come, I've reached the point of no return. That's a wonderful feeling; I know I can't go back, I'm not quite there yet, and I'm suspended there, tingling with almost orgasm.\n\nI slide the gently running vibie into my vagina, and that always means I'm going to have an orgasm. I can never get down from that. I push it in with two fingers and leave the fingers there to hold it buzzing softly against my cervix. There is about two inches left outside my lips. I'm still so small down there that my little inner lips are gently stretched even by that little vibie which is no more than an inch in diameter. Most of the vibration is deep inside me, but my little lips are very sensitive, and I can feel a nice tingle there.\n\nIf there was a line on my graph indicating a threshold of orgasm, I would be hovering right there. Not actually coming, but with no chance of coming back down. With the tip of my little vibie tingling my cervix, I can feel my uterus being stimulated, and it starts contracting. I know the feel of my uterus contracting because of mild cramps when I start my period. I can feel it squeeze, but it feels good, not crampy. \n\nAs I hold the bottom of the vibie with my fingers, I feel it moving as my muscular vaginal walls start a rhythmic contraction. My lover has told me he feels this on his penis when we're making love and I come. It must feel really good to him, because sometimes it makes him come even when he's trying not to. It's involuntary, because I can't do it on purpose, and it continues as long as my climax lasts.",
        "My breathing is very shallow and rapid as I put two fingers at the very top of my clitoris, right up where my cleft starts. I slide those fingers firmly down the length of my clitoris, and that does it! I'm coming. \n\nMy curve had better be on semilog paper for this, because it jumps by about a power of ten. I'm there, I'm over, I'm coming.\n\nThat's just the beginning, though, because I have long, long orgasms when I play with myself. Much longer than with my lover, because I can do exactly whatever I need to prolong them. Their intensity isn't even ten percent of what I get with my lover, but I make up for that by making them as long as possible. Of course I give myself the most intensity I possibly can, too.\n\nI press the vibie firmly into my pussy, stretching my vagina. I love the stretching, and I feel the vibrations more strongly, and the combination always makes me squeal. At the same time I start stroking the whole length of my button firmly and quickly. The combination of vagina, cervix, and clitoris is always accompanied by mental visions of my lovers penis bursting in orgasm inside me while I'm coming with all my might along with him. I concentrate on visions of his penis explosively gushing come into me, and it's like my mind explodes. \n\nI'm very vocal when I go over, and I never try to keep quiet. I think it adds to the intensity to hear myself squeal, moan, shriek, cry, groan...... I hear my bells, I see my flashes inside my closed eyes, I yell, and I COME!\n\n&nbsp;\n\nI often slide a finger in along side my vibie, and that stretching makes me come harder. All the time, my fingers are flying over my clitoris.\n\nI go on, and on, and on until I just can't sustain it anymore. When I know I have to come down, I off the vibie but leave about half of it inside me. My fingers slow on my button, and I let my curve drop past my orgasm threshold. I keep my fingers moving and the vibie inside until I approach the baseline, then I pull the covers up over me as my curve of excitement and consciousness gently moves below what it was before everything started back on the patio.\n\nI'm sleepy, satisfied, comfy, and I slide softly into a sweet sleep. Sometimes I even dream of my lover.\n\n__________________________________\n\nComments always welcome. \n\nI try to reply to all."
    ],
    "authorname": "MathGirl",
    "tags": [
        "pleasure continue",
        "side clitoris",
        "feel uterus",
        "fifteen twenty",
        "stroking clitoris",
        "reach point",
        "top cleft",
        "pull covers",
        "hand tummy",
        "finger side"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/playing-with-myself"
}