{
    "title": "Parts of Desire Ch. 05",
    "pages": [
        "Ravenna933 edited this story, but she also made some suggestions that were crucial to the plot development in this chapter. The previous chapter's conclusion made a natural endpoint of that branch of the story. I have never written a multi-chapter story arc before, and I wasn't sure where to go next after that. She helped me find a way out of the cul-de-sac I'd written myself into, and for that, I owe her a great debt of gratitude. \n\n***** \n\nFor the first time in Arabia, I rose with the sunrise, not just because of the sound of the call of prayer alarm on two cell phones going off in stereo beside me, but also because of the fact that we were in the desert, sleeping in the back of a Toyota Land Cruiser, surrounded by windows. The girls sleeping next to me both groaned, stirring as the three of us came to consciousness together. I glanced at my watch -- just after 6 AM -- then grabbed a nearby bottle of water in the cupholder and had a swig. I passed it to Rania, who drank and passed it to Khadija. \n\n\"Good morning all\", I said groggily. \n\n\"Ugh. I need to pee.\" Khadija said, sitting up. She looked around. \"Coast is still clear.\" \n\nShe popped open the door and squatted down beside the car, disappearing from view. \n\n\"How are you?\" I asked Rania. \n\n\"Mmmm...\" she smiled sleepily at me. \"I got to make love to my incredible boyfriend under the stars last night, and then wake up next to him this morning. I'm terrific. How are you?\" \n\n\"I'm having the best week of my life\", I answered truthfully. I kissed her. \n\nKhadija reappeared. \"OK, breakfast, prayers, and then we should get a move on. We have a long day ahead of us.\" \n\n\"Do we?\" \n\n\"We have a six-hour drive today\", Rania answered. \"Normally we like to keep you in the dark as much as we can, but you should know that there's a lot to do today and we're on a bit of a deadline.\" \n\n\"What's the deadline?\" I asked. \n\n\"We should have no problem meeting it, and we have a stop partway through the drive\", she answered. \"But we can't afford to dilly-dally.\" \n\n\"Mysterious as ever\", I commented. \n\n\"We love you too\", Rania winked. \n\nThe girls and I dressed together in the back of the car, nudity no longer being a big deal for any of us, then I munched on a leftover pita, rolled the sleeping bags and reset the back seat. Once we were all ready, I started the engine, and eased back towards Bidiyah, following the directions on Rania's GPS. \n\n\"Say goodbye to the sand desert, Ryan\", she said as we were about to descend the hill to the flatlands outside of town. \"We won't be seeing it again.\" \n\n\"I'll never forget\", I said truthfully. \"It was the most spectacular place I've ever been, and I'll cherish the most wonderful memories from there.\" \n\nWe exited the desert by the same track, passing the Bedouin tents and camel enclosures, then eventually down the hill into Bidiyah again. We stopped at the same garage to get our tires reinflated, then drove to a mosque nearby. It was now past prayer time and the place was empty. \n\n\"We need to pray\", Khadija said. \"But the mosque is also good to wash up. We won't have much access to showers today, and part of Islamic prayer is the ritual cleaning. All mosques have basic cleaning facilities. You can hit the men's changerooms and wash your face, feet and hands if you like.\" \n\n\"I thought only the Grand Mosque was open to non-Muslims\", I said tentatively. \n\n\"It is, but you're not going to the prayer halls, you're just using the facilities here\", Rania answered. \"You shouldn't have any problems, but we'll vouch for you if you get into trouble.\" \n\nI ducked into the deserted change room, with a foot bath and sinks and lots of shoe racks in a small room otherwise indistinguishable from any pool changeroom I'd been to. I quickly relieved myself and washed up, getting the grime and sand of the desert off my face, hands and feet, if not the rest of my body, and applied deodorant and brushed my teeth. Feeling refreshed, I headed to the caf\u00e9 next door and bought three cups of coffee, then sat back in the car, waiting. The girls eventually reappeared, both looking as refreshed as I felt. \n\nAfter prayers, we said goodbye to Bidiyah and headed back out on the highway, travelling west again. The land was flat, arid, hard-packed ground -- still desert, but not a trace of sand in sight. Occasional houses dotted the landscape, and herds of camels were everywhere. Yesterday I'd been excited to see them, but they were already becoming old hat. The rising sun behind us illuminated and cast everything in a brilliant light, and Arabia, once again, looked beautiful. \n\nAs soon as we were out on the highway, Rania turned to me. \"Ryan, we are trying to include you in every conversation we have this trip, but I just lost my virginity last night, and I really need to girl talk with my best friend about it. I hope you understand if we need to talk in Arabic for a while.\" \n\n\"Of course\", I answered. \"I'd like to talk with you later about it, but I get that you have to talk to your friends too. Don't worry about me.\" \n\nThe next half hour or so passed with an animated, occasionally giggly, occasionally serious conversation going on around me that I could understand none of. I let the girls talk, watched the road, and enjoyed seeing the changing light reflecting off the Hajar Mountains, just to the right of the vehicle, constantly changing, one jagged peak after another. Herds of camels kept whizzing by on the desert flatlands, and the scenery was so otherworldly to me, still, that I genuinely was able to mostly ignore the indecipherable conversation about my sexual prowess taking place around me. \n\nAt long last, the conversation lulled, and I looked over at Rania, resplendent in the passenger seat. She looked beautiful to me, face lit up in the early morning light, smile plastered on her face that hadn't disappeared since last night. I realized that she wasn't wearing any makeup, the first time I could remember seeing her venturing out into the world without it. I checked Khadija out in the mirror, and noticed she wasn't wearing it either. \n\n\"It's not like I care specifically, but I don't remember seeing you two in public without makeup\", I began. \n\n\"There was nowhere to apply it apart from the mosque, which we weren't willing to do\", Khadija answered. \"Because of politics.\" \n\n\"Politics?\" \n\n\"The Qur'an says that women should not wear 'adornment' in front of men who are not mahram and are not her husband\", Khadija explained. \"Mahram means a man who is legally unmarriageable to that woman, that is, close blood relatives. In other words, we are only able to beautify ourselves to men who are our husbands, or who are blood-related. But of course, the definition of 'adornment' is open to interpretation. Most conservatives, unsurprisingly, think that we should appear as frumpy and unsexual in public as possible. But makeup has become a feminist issue in Arabia, because we believe that it is not up to the women to make sure the men aren't so attracted to us that they perform haram acts. We should be able to wear makeup if we want to, to look good because it makes us feel beautiful, not just for the sake of men.\" \n\n\"I agree with you in principle,\" I said. \"There is a similar feminist issue in the west about the clothes women wear and whether they should have any bearing on whether she was 'asking for it' if she is sexually assaulted. It's ludicrous that any woman should be perceived as asking to be raped for wearing lipstick and a low-cut top, but there are people even in Canada who don't agree with me on that. Our cultures aren't necessarily as dissimilar as it might seem.\" \n\n\"So, we wear makeup for ourselves\", Rania added. \"If the men can't control themselves, it's not women's fault. Wearing it is a political statement, that we are feminists and we believe in women's equality.\" \n\n\"I'm not arguing\", I continued, \"but I'm confused why you still wear the headscarves and abeyas if you believe as you do about makeup.\" \n\n\"Because, Ryan\", Khadija smiled, \"one must protest with what one can get away with.\" \n\n\"I could have taken them off in Canada\", Rania added. \"Khadija would have.\" \n\n\"I would have for sure\", Khadija agreed. \"I wear them here because without them I could be in serious trouble at worst, or at best, heavily judged by the people around me.\" \n\n\"But for me\", Rania continued, \"they are a symbol of my faith in Allah, and I choose to display myself in that fashion. I admit to having had a bit of a crisis of faith in Canada about my dress when I became close to you, and I had to try to figure out what I really believed and what was indoctrination. I re-examined everything I believed in those last few weeks in Canada. But I concluded that this was still important to me. The line in the Qur'an about makeup is ambiguous; the line about covering one's private parts is direct and clear. I do not wear the veil; I show my face, but that is convenience as much as anything else. It's very hard to eat or go about one's business with the veil on. But I cover my hair and body because I believe the Qur'an orders me to do so, not just because it is expected of me by custom.\" \n\n\"Rania and I have had many, many conversations about this issue\", Khadija continued. \"We both agree that we wish to abide by the tenets of our faith, and also to cast out as many of the regressive cultural traditions of our forefathers as possible. We want to be good Muslims, but liberal, modern, progressive ones. Islam is not synonymous with the conservative culture many people follow in Arabia, and we believe there is a line that can safely be drawn between one and the other. But we disagree with each other, occasionally, about where that line is drawn. I believe that it is possible to be a believer and a good Muslim in a more western fashion, in a sense where men and women are equal and what is in your heart that matters, as long as you also observe the five pillars of the faith as the Prophet dictated. Rania believes that some of our other traditions have value and are worth hanging onto.\" \n\n\"That sounds like the battles in the churches in the west, between traditionalist and modern, conservative and liberal, dogma and interpretation\", I said. \n\n\"All religions have those battles\", Khadija agreed. \"It's just Islam that gets such bad press in the west.\" \n\nAll Muslim women around the world wear head coverings\", Rania added. \"In Indonesia and Malaysia, women wear the headscarf with low-cut tops and tight jeans. It's an important symbol of the faith, and deep down I like wearing it, even though I complain sometimes about it.\" \n\nHaving gotten an early start, it was just before 9 AM when we approached the outskirts of what appeared to be another city, that of Nizwa. The girls indicated we didn't have a lot of time, but they directed me to pull into town anyway. Prior to 1970, Nizwa had been the capital of the Sultanate of Oman, the separate, dual kingdom from the Sultanate of Muscat, and it was still a cultural capital, the spiritual home to a lot of Omani art and music and food. The town was set in an oasis surrounded by mountains, with leafy palms growing wild everywhere the eye could see. Unlike most of Oman so far, Nizwa was relatively green, and the colour was a shock to my eye as we entered, after days of brown sand and rock and blue sky and ocean. \n\n\"There are other green places in the desert apart from oases\", Khadija said. \"In the south of Oman, in Dhofar province, they get summer rains called khareef every day off the Indian Ocean, and the mountains in that area bloom with greenery. A lot of Arabian people take summer holidays there to escape the heat -- the sea air means it is rarely above 30 degrees there in summer at a time when it's well over 40 everywhere else.\" \n\n\"That sounds amazing, actually\", I said. \"Are we going there?\" \n\n\"Unfortunately not\", Khadija said wistfully. \"It's a ten-hour drive from here across empty desert, and it's also not khareef season anyway.\" \n\nWe eventually pulled into the centre of town, where the city of Nizwa was dominated by a seventeenth century fort, built to repel Portuguese invaders. The fort was surrounded by an ancient-looking open-air Arabian souq -- unlike the dark, indoor Muscat souq, this one was bright and airy in the early morning sunshine. We wandered for a few minutes, and I bought a whole bunch of incredibly cheap spices to use in my cooking at home -- cardamom, saffron, dried chiles -- as the girls also bought souvenirs for their families. \n\nAfter what felt like too short a visit, the girls were getting anxious to get moving again, and so reluctantly we departed Nizwa. \n\n\"If we had another day\", Rania said, \"there are a lot of interesting things in this area to see. Misfat Al Abreyeen is an ancient mountain village, Wadi Ghul is also called the Grand Canyon of the Middle East, there's an abandoned village called Al Hamra that is over a thousand years old you can walk through, there's also a huge cave complex called Al Hoota nearby, and Wadi al Abyad is apparently a great combination of off-roading and scenery. We originally had this trip booked for one too many days and had to lose one, and unfortunately, this was the one. But someday you'll have to come back with us.\" She smiled. \n\nWe carried on, back to the highway, and the girls directed me to head back towards Muscat. We drove on, making small talk, listening to foreign-sounding Arabic pop music on the radio that I could almost pretend to like. On the outskirts of Muscat, I was ordered to get on the expressway heading west, and we drove on, past the airport and a few other familiar sights, and eventually onto the flat coastal plain again, this time moving north and west away from the city. We stopped for lunch somewhere at a roadside caf\u00e9, where the girls still would give me no information where we were heading apart from that we were still on schedule. Eventually, as the afternoon progressed, we passed through the city of Sohar, an industrial city known historically as the birthplace of Sindbad the Sailor from the Arabian Nights, and currently as Oman's major seaport. Sohar was also the last of Oman's big northern cities, and we breezed by without a stop or a second thought. \n\nFinally, having driven the six hours I'd been promised and rapidly approaching the UAE border, I was directed to pull off into a tiny town called Shinas, then ordered to make my way through town to the water, and finally down a ramp and into the staging area of a ferry terminal. An enormous cataman towered overhead, clearly readying to take on vehicle traffic. \n\n\"A ferry?\" I was suddenly alarmed. \"Are we going to Iran?\" \n\n\"Not quite\", Khadija said. \"Oman is a discontinuous country. We're going to Khasab. It's part of Oman, though separated from the rest of the country by the UAE. You can't drive there without passing through Fujairah, which could pose problems for your visa, so we're instead taking the ferry north to Musandam.\" \n\n\"What's Musandam?\" \n\n\"The Musandam Peninsula separates the Gulf of Oman from the Persian Gulf. It's only 40 km to Iran from there, and judging by pictures, it looks like the most beautiful place we've ever seen. It's one giant fjord, all mountains and inlets. Khadija's brother has been camping there, and ever since we saw his pictures we've wanted to go.\" Rania looked excited. \n\nJust then a buzzer sounded, and reflective vest-wearing seamen started directing the assembled cars onto the catamaran, which apparently was also called the Shinas. I drove, following the car in front, onto the ferry, parking in lockstep with the rest of the traffic. Judging by the cars crammed in, we were nearly full. \n\nOnce we'd exited and gone up on deck, Khadija took a book with her and sat down in the caf\u00e9. Rania and I went outside, into the mid-afternoon sunlight, the town of Shinas and ever-present mountains visible on the horizon. Then there were three sharp blasts from the ship's whistle, and we were at sea. It was a bright, breezy day, and as we left the shelter of the harbour, the chop started to pick up as the big catamaran negotiated the rolling sea. \n\nRania turned to me as Shinas faded astern. \"Ryan, I might regret this next week when you've gone back to Canada, but I could really use some time to myself. I've spent the last several days without a moment alone -- you at least have hotel rooms to yourself, but I'm sharing, and I need to take some time to myself to recharge. I'm going to go sit inside. Come find me if you're bored, but otherwise I think we could all use a little time apart.\" \n\nI moved into kiss her goodbye, before catching myself, stopping short. Our eyes met with a hint of sadness at the circumstances, before she disappeared into the ship's interior. \n\nAs I stared out at the whitecap-dotted ocean and the brown mountains of Arabia on the horizon, I realized that I hadn't taken any time to reflect to myself on what had happened so far. We had been living in a honeymoon state of mind for the past five days, with no problems, not even mild testiness after endless hours in the car together under a cloud of sexual frustration. It had gone about as perfectly as anyone could have expected. \n\nKhadija was fun, outgoing, a blast to be around, sexually forward and unashamed. I'd always been attracted to women who were unafraid and unapologetic about their sexuality, and I was having a great time playing around with her. But it still felt weird, somehow, to have come all the way to meet up with a woman I'd fallen in love with, and have everything still going great, but also to be fooling around on the side with someone else. \n\nRania had always looked to me for guidance on what was normal, not just sexually, but also culturally since the first days that we were roommates. Our roles, naturally, had reversed since coming to her part of the world, with me the one navigating a strange culture. But even though I'd taken on the role of tourist here, the girls were still sexually inexperienced, and it occurred to me that they hadn't really been asking me for any guidance so far this trip. I hadn't even really talked to Rania about the fact we'd finally had sex the night before, and I made a mental note to have that conversation with her at some point when we were alone. I really found I missed the pillow talk time with her. \n\nAs I turned that over in my mind, I also started thinking, again, about Rania's non-existent fianc\u00e9. Yes, I'd forgiven her on the spot, on day 1, when I found out that he had never existed. But I started thinking about all the times that she could have told me the truth and hadn't. I'd spent over a year trying to reconcile my growing feelings for her with the fact that she was taken, and really gotten nowhere. And it was true that we hadn't been able to talk openly by email, but we had Skyped since she'd moved back home, and had she really not been able to say even a word in over a year? \n\nAnger started rising inside of me as I remembered all the times we'd not spoken about it, and all the heartache-filled nights I'd lain awake questioning Rania's motives. I hadn't realized I'd been repressing my feelings, but I swallowed hard as I felt a wave of emotion roll through me. I sat down on a deck chair as I tried to process feeling hurt and betrayed. On day 1 I'd been so happy to see Rania again that I could have forgiven just about anything. But the shock apparently hadn't gone away, and it consumed me now as I sat, thinking. \n\nI'd leapt into this trip to Oman with no real forethought of what would happen next. I realized that I had been so taken in by the idea of seeing Rania again that I didn't stop to think about what would happen when the trip ended. In a few days, I'd be back at Muscat Airport for the short flight to Dubai and then the unbelievably long one to Toronto, and then what? What, really, did the future hold for us? She would go back to Saudi Arabia, and I still couldn't go visit her, and she couldn't come visit me. That would be the end. ",
        "Last night had felt like the culmination of a dream I had been holding on to for over a year. Today felt like a hangover. I'd driven six hours in occasionally heavy traffic, and the Middle East's aggressive drivers weren't exactly known for making long road trips relaxing. I was tired, I hadn't showered, I felt gross. The harsh beauty of the land that we were cruising past did nothing to help my mood, and I decided to go inside and try to find a place to order a cup of tea and be alone. \n\nThe girls weren't in the ferry cafeteria, so I acquired my tea and made myself comfortable in a padded chair by the window, pulling out my book and mulling over the conflicting thoughts in my head as the ship bobbed and rolled in the choppy sea. I was feeling used, betrayed, and hurt, and I wanted to deal with it as best I could before I had to see anyone else. \n\nA couple of hours later, the sun was setting behind mountains that were growing larger and more jagged, so I got my camera out and went up on deck. A single Arab woman stood at the ship's rail, watching the sea. Arabian women were hard to tell apart from the rear, but I could recognize Rania anywhere, not just by her size and figure, but also by her pink flip-flops peeking out from under the abeya. \n\n\"How was your alone time?\" I asked. \n\nShe turned to face me and smiled. \"It was okay. I needed some time to think.\" \n\n\"About?\" \n\n\"Khadija said something to me at the market in Nizwa while you were in the bathroom that rubbed me the wrong way\", Rania began. She looked around, confirming no one was eavesdropping. \"When we were taking in Arabic, I'd spent most of that time on the drive talking about how good you were, and how good last night was. It was everything I'd ever dreamed it would be. So just casually, she mentioned that she couldn't wait for tonight because it would be 'her turn'. I don't know, Ryan, it just really bothered me that she's thinking of it in those terms. I just fulfilled a dream last night, I only have a couple days left to spend with you here, and I love you, and it bothers me to see her treating you like you're a plaything. Like this is no big deal what we're doing.\" \n\nI thought for a minute. \"I understand what you're saying, but it also sounds like she meant it innocently.\" \n\n\"She did\", Rania confirmed. \"I know her, I know she didn't mean anything by it. I'm just hot, and sweaty, and dirty, and I'm sore inside. I also didn't sleep well last night, and I haven't had the time to process anything about what's happened so far. We're past the halfway point, and the closer we get to you having to fly home, the less inclined I am to want to share you. And I also know that Khadija and I both promised each other we were treating this entire trip like a surprise for you, but at the risk of spoiling it, we're sleeping in the car again tonight, and that's the last thing I want. I want to have a hot shower, and sleep in a bed, with you, and talk to you without her listening. Khadija and I are starting to get on each other's nerves, and I just wish we were able to be together the rest of the trip, just us.\" \n\nI fought off the urge to give her a hug. \"I feel all of those things too. I'm a little disappointed about the fact we're camping again tonight, but the only saving grace of that is that we're going to get to fall asleep and wake up together.\" \n\nRania smiled. \"I had had that thought.\" She paused. \"How are you doing, Ryan? I haven't asked you that recently.\" \n\nI considered saying I was fine, but I decided to be honest. \n\n\"I'm conflicted, I'm hurt, and I'm feeling a lot of negative things right now. I'm worried about the fact that we've been doing all this sexual stuff without really talking about it. You and I had a dynamic last year where every time we crossed a line, we would talk about it in depth. We haven't really been doing that this trip. I know you girls are inexperienced, and I promise you that I trust your judgment, but I'd feel better about it if we were talking more. I worry that you'll have regrets once you have the chance to think this all over. I think we've been suffering by not having any pillow talk time. You said you haven't had any time to process what's happened; I feel the same way. I don't want there to be any regrets.\" \n\n\"I don't regret giving you my virginity\", Rania said seriously. \"I considered that decision for over a year. It was the right decision.\" \n\n\"I have no regrets either.\" \n\n\"But it sounds like we're on the same page, we need to talk about everything we've done so far.\" Rania looked around again. \"I just don't feel comfortable talking it in that amount of detail unless I know we're truly alone.\" \n\n\"I'll respect that, but I think we need to talk it all over before we separate, even if it means kicking Khadija out.\" \n\n\"Deal.\" She smiled. \"There should be an opportunity on the last day. We have plans.\" \n\n\"So, would I be right in saying you and Khadija planned everything on this trip in advance, not just the travel stuff, but the sexual stuff too?\" \n\nRania blushed. \"Not all of it.\" \n\n\"But you did decide in advance a lot of what would happen? Like that you two were going to share me?\" \n\n\"Yes, we did. We talked a lot about it.\" \n\nI suddenly was annoyed. \"And you never thought to ask me in advance about how I felt about any of this?\" \n\nRania stared, not speaking. \n\n\"Look, I know our relationship suffered a great deal by the distance. I know we couldn't put anything in writing. But we spoke on Skype enough over the past year. You really couldn't have asked me in advance if I was okay with playing stud for you and your best friend, rather than springing it on me? We've all been hormonal as fuck over the past couple of days, and I'd be lying if I said I hadn't had fun, but I didn't fly 13,000 kilometres to hook up with Khadija. I came to be with you. It would have been nice to have had the choice whether or not I wanted to be a sexual prop.\" \n\nRania had her eyes locked on me, not moving. \n\n\"And another thing. I know I said I forgave you about the fianc\u00e9 thing, and I understand why you lied to me originally. I promise you I'm not mad about the fact that you didn't tell me before you left Canada.\" \n\nRania nodded, expectantly. \n\n\"I think both of us were expecting things to end when you went home, even though neither of us wanted that\", I continued. \"But we stayed in contact for a year, we kept talking, almost every day. Was there never a single opportunity for you to tell me you weren't engaged? I spent a year trying to talk myself out of my feelings, because as if you weren't inaccessible enough in Saudi Arabia, you were also taken. I get why you lied originally. But I don't understand why you kept going with the lie.\" \n\nRania turned and wordlessly stared out at the setting sun, which was gradually disappearing over the jagged peaks of the Emirate of Fujairah. Finally, at length, she turned to face me, clearly fighting back tears. \"I don't know what to tell you, Ryan. I'm sorry.\" She took a deep breath. \"I told you last year that I thought that relationships were so much more complicated than I ever expected. I'm finally finding out that I had no idea just how right I was.\" \n\nI held back, waiting. \n\n\"With respect to telling you of our plans to hook up, I agree I should have done that. I could have brought it up on Skype, somehow.\" She turned to face me. \"Ryan, you don't really understand what it's like living in such a conservative culture. Your openness changed me, and then I flew home, and nothing had changed. I was still living away at school with Khadija, I still saw my parents on weekends. I went back to the exact same life I used to lead, only I felt like a stranger, an actor inhabiting my old life's role. \n\n\"I wasn't the same person inside at all. But pretending to be the same person outside was more comfortable than trying to figure out how to incorporate the change I felt into a society that wouldn't really have allowed it. I didn't know how to reconcile the new and old Ranias, and while I was figuring that out, I fell back into a lot of old habits. Once I was out of the habit of talking openly, deeply, truly with someone, it didn't come back again. It didn't until I saw you again this week. You were the catalyst for that, and I regret that being the conservative, modest Saudi woman that I was when we first met may have caused us to fight. I honestly never thought to mention any of this to you, because I wasn't in the habit of talking to men about, well, anything, if I'm being honest.\" \n\n\"Just to be clear, I don't regret anything that's happened this week\", I said. \"I'm just cranky, and I'm feeling a little used. What you say makes sense, and I can forgive you for it. There are going to be cultural issues with our relationship from time to time. For the record, I would have said yes if you'd told me in advance. But I wish you'd asked.\" \n\n\"I'm sorry. I really didn't know how to approach the situation at all.\" She appeared lost in thought. \"To speak of my fianc\u00e9, I don't have an explanation for you, apart from that I was still insecure, nervous, inexperienced. I didn't know, and on some level, still had trouble believing you wanted me, and still wanted me, even after I went back home. You said earlier that you were expecting we'd break up after I went back. I felt the same way. To be honest, I just kept waiting for the first couple of months for you to email me that you'd met someone new, and that would be that. I didn't believe I was worth waiting for.\" The tears started, and she quickly wiped one away with her headscarf. \n\n\"In Canada, we were only together as a couple for a few weeks. I knew I should tell you the truth, but it was easier not to. I had all these new feelings that I didn't know how to deal with, and I was having the best time of my life, and I worried that I'd ruin it. Like I said the other day, I was also worried about word getting out. I couldn't risk my apartment.\" \n\n\"I get that part\", I said. \"Like I said, I know why you lied originally, and I know why you kept it going until you went home. None of that bothers me. It's the fact that it took another year for the truth to come out.\" \n\n\"Ryan, I never thought I would hear from you again\", she sniffled. \"When I got home, and you had written me that lovely email welcoming me home, telling me you'd miss me and wanted to stay in contact, I couldn't believe it. The first time we spoke on Skype, it broke my heart that we were so far away, but I was just so happy to see you again. Really, though, it was a couple of months before I realized that you weren't going anywhere, and neither were my feelings. I was in love with a man on the other side of the world that my culture wouldn't allow me to be with. The even bigger surprise, at least for me, was that that man actually seemed to feel the same way about me. The longer the lie went on, the harder it was to tell you the truth. I still didn't believe we'd ever see each other again, until you told me you'd bought plane tickets, and all that time I was scared that I'd ruin things by telling you I'd never been engaged.\" \n\n\"So you decided the best plan was to wait until I'd flown 13,000 kilometres to tell me the truth because I wasn't likely to turn around and go home?\" \n\n\"I don't know, okay?!\" Rania exploded. \"I don't know why I couldn't tell you. I don't know why it was so hard. I don't know why things happened the way they did. I should have said something. This is all so new to me. I don't know how to deal with these feelings. I don't know what parts of me are being driven by my heart and which parts are my hormones. All I know is that being with you changed me, and I couldn't accept that we weren't meant to be. I just wanted to be with you, in whatever way that meant. Telling you the truth meant that maybe you'd leave me, so it was easier to lie. But now I see that it could be the other way around, too.\" She sighed deeply. \"I'm so confused. All I wanted to be with you, but both paths could have led to us breaking up. How was I to choose?\" \n\nI looked around. We were in a sheltered part of the ship, underneath an overhang, and the area we were in was mostly deserted, apart from an older, white tourist couple a few dozen feet away, paying us no attention. I reached over and gave Rania a hug. She fell apart at that moment, sobbing uncontrollably, burying her face in my chest, her body quaking and heaving. \n\nWe stood like that for a minute or so, until her sobs gradually slowed down, and I released her from the embrace. She quickly looked around, making sure we were still reasonably alone. The older couple were still in their own world, and they hadn't even looked at us. \n\n\"Look\", I began, as she wiped her tears away. \"I know you're inexperienced, and I know you're a decade younger than I am, and with our ages, experience, and cultures all being so different, maybe I should have expected some growing pains in this relationship. When you're in a long-distance relationship, it's very easy to paper over the cracks, because of the euphoria you feel every time you're together.\" \n\n\"Euphoria is a good word for it.\" Rania managed a small smile. \n\n\"I need some time to think this over\", I started, \"but I don't want you to worry. Having our first fight doesn't change the fact that we are still a couple, and I still love you.\" \n\n\"I love you too.\" \n\n\"Are you okay?\" \n\n\"I will be.\" Rania pulled out a Kleenex and wiped her eyes. \n\n\"Then I'll come find you when I'm ready to talk further. I just need some time.\" \n\nRania let me go, and I walked around to the stern of the catamaran, staring out at the twin wakes rapidly appearing underneath the ship, the open sea of the Gulf of Oman on three sides, the ubiquitous mountains off to the right. The sun had dropped below the mountains, though there was still enough residual light to see. \n\nI must have spent a good forty minutes staring off into space, thinking, waiting, watching the sea. As the light disappeared and the wind died down, I suddenly realized to my delight that the sea was alive with bioluminescent jellyfish, gently floating in the waves. Millions of stars danced overhead, matching the pinpricks of light twinkling in the sea below. As I watched the sea and sky dancing in the darkness, reflecting on what had led me to being at sea on the Indian Ocean on a warm February night, I made my decision. \n\nI finally made my way inside to the cafeteria, buying a plate of chicken and rice and a 7Up from the canteen. I scanned the cafeteria and noticed Rania sitting alone at a table, nearly finished her dinner. I made my way over and joined her. \n\n\"Where's Khadija?\" I asked. \n\n\"Seasick.\" She made a face. \"I think all of us are a little worse for wear today.\" \n\n\"Is she okay?\" \n\n\"She'll be fine.\" Rania locked eyes with me. \"I'm more concerned with the question of whether or not you're okay.\" \n\nI smiled at her. \"I'm okay. It's normal to have disagreements and fights in relationships. You just have to learn how to handle them. Focus on the issue, don't make it personal.\" \n\n\"So, what have you decided?\" Rania bit her lip nervously. \n\n\"I'm hurt by the fact it took you so long to tell me the truth. I'm not going to pretend otherwise.\" \n\n\"I'm so sorry, Ryan.\" \n\n\"But, I understand why you did what you did\", I continued. \"I think you recognize now that mistakes were made, but they came from insecurity and inexperience. I know this is new for you, and I'm going to try hard to forgive you for mistakes that come from that inexperience. But please don't lie to me like that again.\" \n\n\"I won't ever lie to you again\", she said emotively. \"I promise. I didn't know how to handle the situation before. But I think that going forward, the truth is never the wrong answer.\" She paused. \"I can't hug or kiss you here in public, but please know that's all I want to do right now.\" \n\n\"That would be nice\", I responded, then thought for a moment. \"I think I'm ready to be done with the surprises. I'd like to know what else you two have up your sleeves, at least in the abstract sense. I don't need a lot of detail, but I'd like to feel like I'm a partner in this.\" \n\n\"Deal\", Rania said. \"Tonight, we camp on the beach in Musandam. Tomorrow we swim and hike in the mountains. The ferry back to Shinas leaves tomorrow in the late afternoon, and we drive back to Muscat.\" She paused for a moment, thinking. \"I had really wanted this to be a surprise, but I'll respect your wishes. We're spending the last night at the nicest resort in Oman, just outside of town. We'll be there for most of the last day, then we go to the airport and fly home.\" \n\n\"That sounds lovely, and I don't need to know any more that that\", I said. \"What about Khadija?\" \n\nRania sighed. \"I don't know. We talked more about it. She thinks you're cute, but she doesn't have any feelings for you beyond attraction. Whenever we've fought in the past, it's usually been because I've gotten offended at something she's said. She's very black and white, right or wrong, and she's not particularly empathetic towards other people's feelings. She says I'm being too emotional getting offended at her treating you like a sex toy. I haven't felt jealous on this trip at all, and I still don't. I know that neither of you see each other as competition. But her callousness offended me a little. She's just assuming she's going to have sex with you tonight, as if it's not up to you, and to some extent to me, to give her permission.\" \n\n\"I don't really want to have sex with her tonight, or with anyone\", I said truthfully. \"I feel disgusting. I wish we were staying in a hotel.\" \n\n\"Me too. There's not a lot of lodging in Khasab, and they were booked up before we got around to it.\" Rania sighed. \"It's going to be a sweaty, stinky night in the back of that Land Cruiser.\" \n\n\"You said people can camp pretty much anywhere in the Middle East, right?\" I asked. \"Why not on the beach?\" \n\n\"There's an idea...\" Rania mused. \"We'll see what we find. But I like the thought.\" She smiled. \"The truth is that I don't think anyone's going to want sex tonight. We're all feeling gross, I'm still a little sore inside, and Khadija's seasick. The perfection of this trip seems to have worn off all at once.\" \n\n\"It's perfect because we're here together\", I said truthfully. \"I'm never going to overlook how lucky we are to be here together tonight.\" \n\n\"You're so sweet.\" \n\n\"Are we okay?\" I asked, hopeful. \n\n\"I think so\", she answered. \"Do you?\" \n\n\"I think we are.\" \n\n\"I've heard makeup sex is a thing people have after a fight\", she mused. \"I guess I have that to look forward to.\" \n\nI winked at her as I finished my supper, and suddenly a buzzer sounded, then a voice on the loudspeaker started speaking in Arabic. All around us, people started getting up and filing towards the exit. \n\n\"What's going on?\" \n\n\"We're almost at Khasab. Come on. Back to the car.\" \n\nWe filed out as the announcement began repeating in English, making our way down the stairs. When I hit the Land Cruiser, Khadija was already there, looking green and unsteady on her feet, waiting for the car to be unlocked. \n\n\"How are you?\" I asked. \n\nKhadija groaned. \"I'll live.\" \n\nIn time, the ferry shuddered, indicating it had docked, then suddenly the gates in front of us opened and the cars in front of us started to file off the ship. \n\nKhasab wasn't much of a town, about 15,000 people clustered around a small natural harbour. I got in the line of traffic, such as it was, and within a few minutes we were out of town and climbing a massive, treacherous mountain road. After a few minutes of negotiating switchbacks, I noticed a scenic overlook and pulled over. Whatever the overlook was overlooking wasn't obvious in the inky black night. \n\n\"Okay, ladies, I'm fine with not knowing exactly where I'm going here, but if I'm going to have to drive a scary and unfamiliar mountain road after dark and following a long day, I'd like to know that someone has a destination in mind.\" ",
        "Khadija, in the passenger seat, had her cell phone out. \"My brother recommended a beach to us for camping. But I'm having trouble figuring out his directions.\" A moment passed as she dialled on her phone. \"Salaam, Ali. Hadha 'ana. Kayf halikum?\" She started speaking rapidly in Arabic. After a few moments, she indicated that I should keep driving, and her brother would direct me through her. \n\nThanks to Ali's directions, we drove for about twenty minutes through a terrifying landscape of sheer rises and falls, switchback turns, and views that would probably have been spectacular had it not been for the pitch blackness. Rania, in the back seat, was clearly nervous, staring tensely and silently out the window. At length, we came to a dirt turnoff, and I blindly followed the directions of a man I'd never met as the 4X4 navigated down the side of a mountain on a rarely-used rocky path, one car-width wide, trying to ignore what I assumed was a sheer drop off to the side. \n\nFinally, we hit the bottom, and drove out onto a sandy beach about half the length and width of a football field, surrounded on three sides by sheer cliff faces, apart from the narrow opening we'd driven through. I could see the cliffside path leading back up the mountain, and I swallowed at the idea we'd just driven down it in the darkness. The beach was predictably deserted. Rania and I exchanged glances of relief. \n\nThe beach really was spectacular, with a solid wall of rock meeting the sea at both ends. Khadija wrapped up her conversation with her brother as Rania got to work building a fire on the beach. We'd brought some firewood from Bidiyah, and within a few minutes she had it going. The night was warm enough that the fire wasn't strictly necessary for survival, but it was still a nice touch. With that done, the girls went off to the other side of the beach to pray as I inspected our surroundings. A few empty liquor bottles left behind on the beach attested to the fact that we weren't the first people to camp here, as well as to the fact that people still liked to drink, even in cultures where it was officially forbidden. \n\nWe were all exhausted, and even though it was still somewhat early, we'd been up since daylight and had had a long day. By mutual unspoken agreement we dug out the sleeping bags, laid them out on the soft sand, and before long I nodded off snug and warm by the fire. \n\nI woke up to the call of prayer on two cell phones, with the early morning sunlight starting to warm my face. The fire had died down to embers, and I could see both girls stirring as well in the early morning light. They both headed down to the other end of the beach for privacy for their prayers as I lay, gradually waking up, the repetitive noises of the waves breaking on the beach giving me a tremendous feeling of peace. \n\nAt length both women returned. Neither had changed from pyjamas, and Khadija tossed me a bottle of water from the car as they both climbed back into their sleeping bags. We were arranged in a triangle around what was left of the fire, with the Land Cruiser parked behind us. \n\n\"Good morning, ladies\", I began. \n\n\"Good morning\", they returned in unison. \n\n\"What's the plan for today, and do we have to start as early as yesterday?\" I asked. \n\n\"We can have a later start, I promise.\" Rania said. \"But first I need to talk about something, if you're awake enough.\" \n\nKhadija and I nodded our approvals. \n\n\"Khadija, we spoke a little bit about this yesterday\", Rania started, \"but I need you to know that I was hurt by the fact you said that it was going to be your turn with Ryan yesterday. Obviously, no one was in the mood to be sexual last night, but we only have two days left before we fly home. Ryan is my boyfriend, and he's special to me, and you really just seem to be treating him like he's a sex toy or something.\" \n\n\"Would you prefer I fall in love with him too?\" Khadija's voice had an edge to it. \n\n\"Of course not\", Rania persisted. \"But he's still my boyfriend and I need you to respect that. This trip has given you the opportunity to finally experience some of the things you've been talking about for as long as I've known you. But we didn't hire a gigolo. I'm letting you share Ryan because I love you both and I want you both to be happy, and you're not treating any of this like it's special.\" \n\n\"It's not special to me, because I don't have the feelings for him that you do\", Khadija answered sharply. \"Ryan, you're kind, handsome, friendly, trustworthy, and sexually skillful. I appreciate all those qualities in you, and I think you're a great match for my best friend. But I'm never going to feel for you what she does, and I think she should recognize that's a good thing.\" \n\n\"It is a good thing\", Rania argued back, \"but what, losing your virginity isn't special to you?\" \n\n\"You know my thoughts on virginity\", Khadija answered. \n\n\"Yeah, but...\" Rania trailed off. \n\n\"Um...\" I interjected into the silence. \"I don't know them.\" \n\n\"As far as I'm concerned, I lost my virginity to Fatima Abdulwahid when I was sixteen\", Khadija explained. \"She was the first person I had sex with. I don't put the fact that you're a man on a pedestal. You're not my first sexual partner, but hetero sex is a new experience for me. I'd like to know what it's like, and since I have the opportunity here, I'd like to take that opportunity. \n\n\"Virginity is a harmful social construct, in my opinion, designed to keep women from being sexual. In Arabia, it's both sexes that are expected to be chaste at all times, so at least we're both equally repressed in that sense, but it's only us that are expected to stay covered, so that men aren't tempted. As if I'm not tempted when I see a good-looking man working outside in shirtsleeves! Human nature is what it is, and I believe I have the right to use my vagina any way I see fit. My body, my choice. Extramarital sex is severely punishable in Saudi Arabia; I may be political, but I don't have a death wish. I'm not interested in fighting unwinnable battles. But the personal is political for me, and in addition to being fun, the idea of having premarital hetero sex seems like a small victory against the forces that oppress us. \n\n\"You have a nice cock, Ryan, but having it inside me isn't going to change me as a person. Rania still believes in the idea of true love and in some of the social constructs we grew up with. I've tried to cast off as many of them as I can get away with. And Rania, you know me. If the idea that I've stayed ideologically consistent bothers you, then I don't have to fuck your boyfriend. But I'm also not going to pretend that the idea of fucking him means more to me than it does.\" Khadija's voice throughout was even and measured, but deadly firm. \n\nRania lay in her sleeping bag, quietly absorbing what her friend had said. I didn't want to say anything; this disagreement was clearly between them. \n\nFinally, Rania climbed out of her sleeping bag and made her way over to Khadija. \"Okay.\" She leaned down in the sand and gave her friend a hug. \n\n\"Okay?\" \n\n\"We're different people\", Rania explained. \"I need to remember that. My having sex with you, when we do that, is meaningless sex. I have trouble thinking of sex with Ryan as meaningless, but I need to understand that you do, and I need to realize that's okay. Two people can take different meanings from the same experience. Your hooking up with him is no different from me hooking up with you.\" \n\n\"Exactly.\" \n\nRania returned to her own sleeping bag, dragging it behind the car so that the early morning sun was blocked out by the car's shadow. \"I really would like to get another hour's sleep if possible, and to give this some thought. We'll talk more later.\" \n\nWe all moved into shaded positions behind the car. I checked my phone -- it was 6:30 in the morning. I lay quietly, and I think I dozed off, because the next thing I knew it was after 8. \n\nThe girls were both up, sitting together on the beach, wearing their bathing suits, headscarves off, and having a conversation. I unzipped my sleeping bag and wandered on down to the beach, greeting them. Both girls had their zippered fronts unzipped to the point of exposing cleavage. \n\n\"Morning, again.\" \n\n\"Morning.\" Khadija smiled at me. \n\n\"Should I assume this is how you'd wear the bathing suit if it wasn't for society?\" I asked. \n\n\"I don't own a bikini\", Rania responded, \"but I'd wear one if I could get away with it.\" \n\n\"I have nice tits\", Khadija added modestly. \"May as well show 'em off when I can.\" \n\n\"We talked more, and we're good now\", Rania started. \"But I'm remembering what you said about including you, and I wanted to update you on where things sit with us, if you're awake enough.\" \n\n\"I'll be fine\", I answered, wiping sleep from my eyes and sitting down beside my girlfriend, who snuggled into me. \n\n\"I think it was all a misunderstanding between us, conflicting also with the fact that I'm starting to really feel like this week is going by so quickly\", Rania explained. \"I'm not feeling regret, just a little sadness that our trip is going to be ending soon. I probably was projecting that a little onto Khadija. I was a little jealous, too, about you two having that morning in the hotel in Ras Al Hadd together. Not because I'm angry that you did it at all, only because I missed being a part of it. I want to spend as much of the next two days with you as possible.\" \n\n\"I'd like that too.\" I squeezed her midsection closer into me. \n\n\"Today, we have the day here, as mentioned, until the ferry leaves mid-afternoon. We should be able to be back in Muscat by bedtime. At some point today, Khadija and I would like to have sex with you. Together. That is, if you agree.\" \n\nI stared back at the two darker girls, both sets of eyes boring into me in anticipation. \"Well, I mean, who would I be to turn down an offer like that?\" \n\nKhadija grinned. \"Excellent.\" \n\n\"But\", Rania continued, \"I don't want you two to hook up again without me. Khadija gets out of you today what she had wanted from the beginning, you and I get to experience a threesome. Tonight, at the resort, our last night together of this trip, is just for you and me. I'm determined that we are going to find a way to spend the night together. I've been craving falling asleep in your arms, so much, and waking up next to you, in a real hotel, in a place with warm showers and soft beds. We may have to say goodbye tomorrow, so I'm determined not to have any regrets.\" She paused, thinking. \"What do you think?\" \n\n\"I think that all sounds absolutely wonderful\", I answered, \"and we'll find a way to make sure all of us leave satisfied.\" \n\n\"Tomorrow, during the day\", Rania continued, \"we'll see what happens. Just nothing sexual between you without me there.\" \n\n\"Deal.\" Khadija and I responded together. \n\nKhadija stood up, and she motioned for us to join her. We all embraced, a big group hug, holding onto each other for several minutes. In that moment, listening to the waves breaking on the shore, not speaking, I felt completely at peace with the world and my place in it. \n\nFinally, Rania pulled back. \"I don't know about you guys, but I've got two days' worth of sweat and sand and dirt all over me and I'm not going to feel at all comfortable about having sex until I've washed some of this grime off. Anyone coming in the water with me?\" She turned, not waiting for an answer, and started walking towards the surf. \n\n\"Why don't we skinny-dip?\" I asked. \"I'm sure you two have never tried that before.\" \n\n\"Absolutely not\", Khadija said. \"It's illegal, and we'd be thrown in prison if we were caught.\" \n\n\"Who's going to catch us?\" I gestured at the treacherous mountain road we'd traversed to get here. The sheer cliff faces protected the beach, and even if someone did start coming down the mountain path, we'd see them with enough time to get covered up before they could really see us in detail. \n\n\"It's a good idea...\" Rania had that look in her eye. \"It's Friday morning.\" \n\n\"You're right, it is...\" Khadija was wavering. \n\n\"What difference does it make that it's a Friday morning?\" I asked. \n\n\"Friday morning is mosque time\", Rania explained. \"Everyone is expected to go to mosque. Part of the reason we came here today is because absolutely nothing is open. Even public transit shuts down. Our weekends here are Friday-Saturday, but we have to spend Friday mornings at the mosque before we're free. Every Muslim in Oman will be at the mosque right now.\" \n\n\"Shouldn't you two be there too, then?\" I asked. \n\n\"Hush\", Rania grinned. \"If we were at home, then absolutely. But I don't see any mosques nearby.\" \n\n\"Well, I'm convinced of how good my idea was\", I said, stripping off my t-shirt and boxers. Both girls stared at my nudity as I brushed past them, jogging into the surf, and I could feel two sets of eyes boring holes in my backside as I hit the water. \n\nI ran out into the sparkling sea, the water warm enough to be comfortable, but bracing enough to fully wake me up. As soon as I was deep enough I fully submerged, feeling the profound, intense relief of having two days' worth of outdoor camping washed away. \n\nWhen I finally surfaced, Rania, topless, was running towards me. She was already waist-deep in the sea, leaping up and down over the crests of the waves, her breasts bouncing with every step. As she reached me, she leapt at me in a full football tackle, and I lost my balance, submerging both of us underwater. I finally surfaced as she climbed into my arms, legs wrapped around me, hair now hanging soaking wet down her back, skin glinting as the sunlight reflected off the droplets of water covering her body, eyes sparkling with anticipation. She leaned in and kissed me, deeply, as I reached under her bottom to hold her up. \n\nWe made out for a few moments, but the coldness of the water was keeping my erection at bay. Suddenly we were splashed, interrupting the kiss. Khadija was floating there, only her head visible above the water's surface. \n\n\"Hey!\" Rania splashed her back. \n\nThe three of us started a splash fight, but I should have known better than to start one with a dolphin like Khadija, who quickly eluded pursuit, swimming circles around us. Finally, panting hard, we stopped, floating in a rough triangle shape roughly a body-length apart from each other. \n\n\"This is incredible\" Khadija said. \"I never knew how freeing it could be to swim naked.\" \n\n\"It's nice, eh?\" I answered. \"When I was in university we used to go up to the lake every summer, a group of about ten of us, men and women. We'd invariably get drunk and go skinny-dipping at least once.\" \n\n\"I'm learning that nudity doesn't always have to be sexual\", Khadija said. \"We're taught from a young age to keep ourselves covered up so as not to tempt men. To be honest, I'm not even feeling turned on, I'm just enjoying how amazing this feels just getting all the sand washed out of me. But I've never felt seawater like this on my bare skin, even when I was little. It's so freeing.\" \n\n\"It's sexual for me\", Rania said shyly. \n\n\"Are you turned on?\" I asked. \n\n\"I think you should check\", she shot back. \n\nI waded over to Rania and let my hand run down between her legs, and she drew her breath in sharply as I found her sensitive area. Even in the cold seawater I could feel the warmth coming from between her legs. \n\n\"My turn.\" Khadija crept up behind me and I felt her reach down to Rania's vagina, gently stroking it as I withdrew my hand. \n\nI pulled Rania up into a float, her body buoyant in the salty seawater. Her nude body was now fully visible on the surface. The early morning sunlight brilliantly illuminated a million droplets of water on her skin. Khadija pushed her way towards the bare crevasse of her vulva, and I held Rania up as Khadija dove between her legs. \n\nRania sucked in breath as Khadija made contact, then shortly the darker girl pulled away, sputtering water \"Nope, that isn't going to work\", she concluded. \"Too salty and I can't breathe.\" \n\n\"Pity.\" Rania whined. \n\nKhadija turned and climbed into my arms, in a 'bride-across-the-threshold' position, forcing me to leave Rania floating. Khadija gazed up to me, making eye contact. \"Ryan, you're not the man of my dreams, but you're a good, kind, handsome man, and I want to have sex with you.\" \n\n\"Khadija\", I responded, \"you're not the woman of my dreams, but you're outgoing, vivacious, and beautiful, and I want to have sex with you too.\" \n\n\"Now kiss\", Rania's voice came from the nearby. She'd turned to face us, still floating on the surface. \n\nI leaned down and kissed Khadija, gently, holding her, feeling her slippery skin pressed into mine. She was still a terrific kisser, starting slowly and gently and gradually building the intensity, working her tongue into it. \n\nAfter some time she finally wriggled free. \"I'm horny now\", she announced. \n\n\"Me too\". I was now hard under the water. \n\nRania pulled out of the float and looked back at the shore, a tiny refuge of sand and a white truck in the middle of endless brown cliffs stretching off as far as the eye could see. \"Shall we go back in?\" \n\n\"Would you like to have a threesome?\" I asked her. \n\n\"I really would\", she said lustily. \"I've been fantasizing about it for months.\" \n\nThe three of us waded out of the surf. As my pelvis broke the surface, both girls burst out laughing watching my erect cock bouncing wildly as I walked. \n\n\"I don't think I've seen you walk with a boner before\", Rania giggled. \n\n\"The good news about sex is you never stop learning new things\", I smiled back at her, then flexed my dick at her a couple times. For Rania this was old news, but Khadija's jaw hit the floor. \n\n\"Wait, you can wag it? Like a dog?\" \n\nRania laughed again. \"You have so much to learn.\" \n\n\"I've already learned so much this week\", Khadija answered. We reached the car, grabbing towels to quickly dry off. \"If I haven't already said so, I wanted to say thank you, to both of you. I'll say it more and in depth tomorrow, but I've had an amazing week, and I've had so many experiences I never would have had the chance to have without the two of you in my life, including what we're about to do. I appreciate it. So much.\" \n\nRania and I hugged Khadija, then Rania moved her face towards her and started kissing her. I sat back, finishing drying myself off, and enjoyed the novel sight of two nude women locked in an embrace, boobs squished together, making out like there was no tomorrow. \n\nThe girls eventually lay down on one of the sleeping bags, still kissing for all it was worth. Their legs were entwined with each other, with Khadija in a slightly more dominant position. She had Rania's thigh pressed firmly between her legs and was noticeably rocking against her, humping my girlfriend's leg as they kissed. I decided to hang back for the time being, watching, stroking myself. \n\nFinally, Rania withdrew from the kiss, looking up at me, a faraway look on her face. \"I've warmed her up for you, Ryan...\" she breathed. \n\nKhadija stopped grinding, and rolled over, facing me. Her legs were spread wide, her pubic hair slick with arousal. She looked up at me, expectantly eying my erection. \n\nI turned to Rania. \"I know we've talked a lot about this, but I have to make sure you're sure you're okay with me having sex with your best friend. Are you sure?\" \n\n\"I'm sure, on one condition\", Rania said, definitively. \"You need to save enough stamina to fuck me when you're done with her.\" \n\n\"I promise\", I answered, kissing her. As I turned to face Khadija, Rania playfully slapped my ass. \n\n\"Go get her.\" \n\n\"This is for you\", I said, addressing Khadija. \"Tell me what you'd like.\" \n\n\"I want to try sucking dick first\", she responded. \"Maybe Rania can show me what to do.\" \n\nRania turned and walked over to the liftgate of the Land Cruiser, lowering it, and gesturing at me to sit down. Once I was comfortably sat on the edge, she directed Khadija between my legs. ",
        "\"Okay, so take him in your hand and start stroking it, but don't go near the head, just around the base area. Then basically wrap your lips around him and suck and lick all around the head, paying special attention to the underside. Careful not to let your teeth touch him at all. Like this.\" Rania demonstrated, and I involuntarily moaned as she made contact. \n\nAfter a few seconds of demonstrating, Khadija took over as Rania got up. Khadija attacked with enthusiasm, testing the taste of me first, then how much effort it was going to take to fit me into her mouth, and then started in earnest. It took a little bit of guidance from me, but within a minute or two she had the basics down. \n\nRania took up a position behind me in the cargo area of the 4X4, resting her head on my shoulder. I turned to face her, quizzically. \n\n\"I want to watch from your perspective\", she explained. \n\nOnce she'd figured out the basics, Khadija really got into sucking me, her head bobbing in rhythm, hand jerking me gently as she went down. Rania, beside me, had her gaze fixed on her friend, between my legs, enjoying seeing a blowjob from a man's perspective for a change. I, for my part, just enjoyed feeling Khadija's skills improving by the second, the warm, wet pressure and steady rhythm of her hands, the feeling of Rania's tits pressed into my back and her breathing heavily in my ear. \n\nAfter some time, Khadija started trying to touch herself at the same time, and then eventually pulled back. \"I can't touch myself and do this together. It's like patting your head and rubbing your stomach at the same time.\" \n\n\"You don't have to touch yourself\", Rania shot at her. \n\n\"Yes, I do\", Khadija glared back in mock frustration. \n\n\"Not true.\" Rania hopped off the liftgate and took up a position beside her friend, and she started rubbing between Khadija's legs as the darker girl picked up again where she left off with my cock. \n\nNow the intensity of the blowjob picked up as Khadija started moaning involuntarily. I watched the show below me, watching Rania's hands exploring her friend, keeping up steady pressure between her legs while letting the other one roam around her body, through her hair, across her chest. I could feel the tension rising in Khadija's body. \n\n\"Okay stop\", she finally ordered, out of breath. \"If this is my only chance, I don't want to cum before I've had sex.\" She got up and sat next to me on the liftgate, leaning back and spreading her legs. \"Fuck me, Ryan.\" \n\nI got up and climbed between her legs as Khadija lazily circled her clit with her fingers, seemingly unable to stop entirely, even for a second. Rania scrambled up to the liftgate too, assuming a front-row seat for what was to come. \n\n\"Do you want me to go easy at first, or...\" I trailed off. \n\n\"With all respect, Ryan, I've had a lot of things inside me over the years\", Khadija said without a hint of shame. \"I might ask you to slow it down if it seems like too much, but no, you don't have to take it easy with me otherwise. Fuck me like you mean it.\" \n\nI poised my cock at the entrance to her wet pussy, spread the labia with my head, and pushed. There was initial resistance, but then her vagina suddenly accepted the intruder and I slid inside fairly easily. Khadija was boiling hot inside, and I could feel her squeezing me, experimentally doing kegels on me as she tested the new sensations. \n\nI had learned that talking during sex wasn't really Khadija's style, but I started slowly, trying to read her responses. After an initial period where she seemed to be getting used to the new sensations, she started thrusting against me gently as she rubbed her clit, and I took that as my cue to pick up the pace. Rania, for her part, was watching up close, her hand jammed between her legs, eyes glued to our crotches. \n\nFor the second time in two and a half days, I was taking an Arab woman's virginity, but unlike Rania's slow, cautious lovemaking two nights before, Khadija was now going full bore, and if I hadn't known any better I would never have guessed it was her first time. She moaned softly, gently rubbing herself, face flushed crimson, chocolate nipples rock hard from the swimming and from arousal. \n\nSuddenly the liftgate started shaking, and we both turned to Rania just as she exploded, yelping loudly, her fingers frantic on her clit as she climaxed. Finally, she calmed down, collapsing against Khadija, and blushed, embarrassed. \n\n\"You always have to be first, eh?\" Khadija teased. \n\n\"It's not my fault you guys are so hot\", Rania shot back as she rolled onto the liftgate beside her friend. \"You seriously have to try watching when Ryan and I fuck in a bit. You can't see anything as a girl when you're the one having sex. Watching you two is the hottest thing I've ever seen.\" \n\n\"I'll make a point of that.\" Khadija and I hadn't stopped, and as Rania came down, she started kissing Khadija's lips, neck and ear, and squeezing her breast. \n\n\"How does it feel?\" I asked her. \n\n\"Incredible!\" Khadija answered. \"Its so unbelievably full. It's so much bigger than being fingered. I've never felt this full inside, in a good way. You're hitting all the right spots.\" \n\n\"I know...\" Rania exclaimed. \"I want it again!\" \n\n\"Wait your turn, impatient bitch\", Khadija grinned. \n\nI took that moment to really let loose, pounding hard, angling myself to hit Khadija's g-spot, and she moaned involuntarily, her entire body convulsing as her legs wrapped around me. \n\nI fucked Khadija as hard as I could for what felt like forever, her tight, sopping pussy squeezing my cock with every thrust. The cliffs echoed with the wet sounds of sex and of soft moaning. \n\n\"Don't stop, don't stop, I'm going to cum soon\", Khadija breathed. \n\n\"Me too, where do you want me to cum?\" I asked, still pounding. \n\n\"Inside...\" she moaned. \n\nRania, seemingly recovered enough, had let her hand drift to her friend's clit, and Khadija was responding by rocking her hips in rhythm with the double-teamed attack. I was determined not to cum until Khadija did, but it was getting really difficult to avoid it and keep up the pace Khadija was demanding. \n\nFinally, just as I could hold out no longer, Khadija tensed up and started jolting, slightly, but just enough that I could tell she was starting to cum. I buried myself as deep as I could go inside her and erupted, feeling her muscles squeeze out every drop of cum as I filled her up. \n\nI leaned over against the liftgate as my orgasm subsided, having trouble keeping myself standing. Khadija shooed me out of her vagina as soon as her own orgasm was done. \"Out\", she commanded. \"All of a sudden it's uncomfortable.\" \n\nI withdrew and collapsed into the sand, looking up at the liftgate and smiling at the sight of Khadija's vagina, sopping and dishevelled, clit and labia swollen with exertion, a small amount of semen visible in the opening to her hole as her legs dangled limply. \n\n\"How was that?\" I head Rania's voice ask from up on the car. \n\n\"So good\", Khadija answered. \"We'll talk when my brain starts working again.\" She convulsed again, involuntarily shaking with the aftershocks. \n\nWe all lay in silence for a few minutes, catching our breath. I could see from the legs hanging off the back of the Land Cruiser that the girls were cuddling, but I was too worn out to join them. \n\nFinally, I got up and sat down in the rear of the car. Khadija looked completely spent, her body flushed and glowing with sweat, her wet hair stringy and tangled beyond rescue, her legs still spread open wide, unashamedly showing off her private area. The look in her eyes was far away, processing. Rania, by contrast, had an antsy look on her face, the look that said she needed another orgasm but was trying to be polite and considerate enough not to demand it. She was having trouble keeping still, lying entwined with Khadija but letting her hands roam aimlessly over the darker girl's body. \n\n\"Your turn?\" I asked my girlfriend. \n\n\"When you're ready, love\", she answered politely. \n\n\"I could be ready again\". I gestured to my cock, which was growing. \n\nRania smiled, surprised. \"It usually takes you longer to recharge.\" \n\n\"I told you I'd have enough for both of you.\" I pulled her up to a sitting position and kissed her as she reached between my legs, stroking gently, just enough to bring me back to a full erection. \n\n\"How do you want it?\" I asked. \n\n\"I want you to fuck me from behind\", she answered. She popped up then leaned over the liftgate, presenting herself to me. \"I'm glad the other night was slow and romantic. But this is usually the position I fantasize about.\" \n\nI reached out and touched her vulva, confirming she was more than wet enough for penetration, then moved my fingers slightly onto the hood of her clit. She jumped a little bit, then swatted my hand away. \"I can have fingers anytime. I want your cock in me.\" \n\nShrugging, I assumed the position behind her, familiar from our previous almost-lovemaking, as she started rubbing her clit. Khadija, seemingly recovering, sat up to watch. \n\nI pressed my cock against her opening, and started moving gently around her labia, watching her squirm in anticipation. She kept pressing back against me, as if to force me inside. Finally, in frustration, she turned to face me. \n\n\"Please, Ryan, don't tease me like this. Give it all to me. I want it so bad.\" \n\nI pushed against the wet opening, and Rania yelped as I slid inside, easier than the first time. \n\n\"Oh, my God\", she exclaimed. \"It's so deep.\" \n\n\"You okay?\" I asked her. \n\n\"Yes, it feels really good\", she breathed, her voice ragged, on the edge of control. \"This feels so much more full than with you on top. It's putting so much pressure on my g-spot.\" \n\nI slid, slowly, all the way out and all the way in again, and Rania gulped. \"Holy fuck.\" \n\n\"You're so cute when you're profane\", I grinned at her. \n\nI started fucking her, slowly, maximizing the pressure for her as she rubbed her clit and moaned. If it hadn't been for the fact I knew we were alone I'd have been concerned about being heard -- I'd never heard Rania this vocal before. She was right on the verge of screaming in pleasure, a banshee cry echoing out across the water. Her moaning and movements seemed to be turning Khadija back on as well, as she'd started to squirm a little, her legs spread as she sat watching us. She was absently tugging on one of her nipples as she drank in the scene with her eyes. \n\nOut of nowhere, Rania suddenly came, like a rocket, shaking and groaning without warning. I slowed down, easing off on her a little. \n\n\"Don't you dare slow down!\" she ordered. \"Keep fucking me keep fucking me keep fucking me.\" \n\nI picked back up and caught Khadija's eye. She half-smiled at me. \"Her libido's your problem now\", she said quietly. \n\n\"It's a good problem to have\", I answered truthfully. \n\nI pulled Khadija in closer, kissing her, and taking her breast in hand as she moved her fingers from her nipple down between her legs. She slid her fingers in, experimentally. \n\n\"Are you sore?\" I asked. \n\n\"A little\", she admitted. \"It was bigger and more intense than I was expecting. But it's a good sore, and it's not going to keep me from cumming again.\" \n\n\"Should I hold out for you?\" \n\n\"No!\" Rania interjected between moans. \n\nKhadija smiled again. \"I wish. But you were fucking me hard, and I don't think my vagina can take any more today. I'll regret it later, I'm sure. But we're probably done with sex.\" \n\nWith that, she started rubbing her clit, gently, not really with intent, as I turned my attention back to Rania. \"Do you want to try another position?\" \n\nRania mumbled incoherently. \n\n\"I'd like to see it going in and out, if you guys are taking requests\", Khadija said. \"I've never seen porn, and you can't really see much in this position.\" \n\nI withdrew from Rania and she rolled over, laying on her back on the liftgate. Her hair was wild, her face and chest flushed, and she was completely zoned out, cock-drunk, too far gone to care about anything except her pleasure by this point. Khadija leaned in to watch as I easily slid back inside. \n\n\"Wow. That is so hot. So hot.\" Khadija watched as I penetrated, in and out. She stared, entranced by the sight of a cock inside a vagina for the first time, for a few moments, then leaned over and started licking Rania's clit. Rania howled at the unexpected contact, bucking her hips closer to meet Khadija's tongue, and wrapping her legs around me, grasping both of her breasts firmly as she held on for dear life. \n\nRania's breathing grew more rapid, and I could tell she was close again. She was completely out of control, writhing, bucking against the tongue attacking her clit, lost in pleasure. Finally her moans reached a crescendo and she grabbed Khadija's head, forcing it against her vagina as she shook and came, harder than I'd ever seen her cum before. \n\nI slowly eased off the attack as she climaxed, and finally slowed down as she quietened down, then I pulled out. Rania curled into a ball in the back of the 4x4, shivering and shaking. \n\n\"Are you okay?\" I asked her. \n\nRania mumbled and nodded, her mind clearly overloaded. \n\n\"How about you?\" I asked Khadija. She was back to sitting up, hand still between her legs, regarding Rania with pride. \n\n\"I'm horny again\", she answered. \"I've never seen her cum like that before. And watching sex is almost as good as having it.\" She looked at my erection. \"How close are you?\" \n\n\"I'm like 95% there.\" \n\n\"I said I wanted to make you cum with my hands\", she said matter-of-factly. \"I keep my promises.\" \n\nShe grasped me in her left hand and started stroking. \"It's so hard right now\", she observed. \n\n\"It's because I'm so close...\" I stammered. \n\n\"Will you cum on my tits?\" she asked. \n\n\"Wherever you like.\" \n\nShe hopped off the liftgate, kneeling in the sand without breaking her stroke. She leaned forward, getting in close, and picked up the speed as she stroked the shaft, twisting deliciously against the head of my cock with each stroke. \n\n\"I'm gonna cum...\" I warned. \n\n\"Good boy\", she answered. \n\nI blew my load, spurting onto her chest as she watched, staring as I pumped three, four, five times, painting her tits white. She watched, entranced, as I came, eyes following the spurts to the point where it contacted her skin. \n\nShe slowed down her stroke as the ejaculation ended, and then let go as I started deflating. \"So hot.\" She ran her fingers through the mess on her chest, rubbing it into her nipple, jumping slightly as her finger made contact with the firm bump. \n\n\"Do you want me to get you off again?\" \n\n\"I thought you'd never ask\", she smiled, and climbed onto the liftgate, leaning back, spreading her legs. \n\nRania was still mumbling incoherently to herself, and I kissed her on the forehead, then turned my attention to Khadija. I dove between her legs, admiring her vagina for what I assumed would be the last time. She was still wet and swollen, with her black pubic hair soft and neatly trimmed, forming a triangle on her mound and down her outer labia. Her inner labia were chocolate brown and prominent, meeting above her opening in a larger clit, peeking out erect from under its hood. \n\nKhadija saw me admiring and caught my eye. \"I love the way you look at me.\" \n\n\"I love what I have to look at\". I leaned over and licked up her opening and then higher, circling around her clit, then starting tight circles on her hood. She tasted of arousal and salt water, not in an unpleasant way. Khadija moaned, grasping the back of my head and pulling me in closer to her private area. \n\n\"I'm most of the way there. It won't take me long either\", Khadija warned. \n\n\"Good.\" I picked up the pressure. \n\nSure enough, less than a minute later, my head was back in the vise grip of Khadija's legs as she squeezed them together, riding out her orgasm. As it finally subsided, the pressure eased, and she pulled me up, kissing me deeply. \n\n\"Ryan, it's been a pleasure fooling around with you this week\", she finally said. \n\n\"The pleasure's been all mine.\" \n\n\"Mine too.\" Rania's voice was small and weak. \n\nI climbed into the truck and wrapped my arms around her in the spooning position. She snuggled in, and then I felt Khadija's breasts press into my back as she started spooning me from behind. I grasped Rania's body, hand between her breasts, and I could feel her heartbeat still racing. \n\nWe lay there for about ten minutes. Finally, Rania's breathing slowed, and her heartrate started to drop, and once she was recovered enough, she was the first one to get up. She kissed both of us, and then got out, walking out on the beach nude, staring off at the sun, now rising higher in the sky. \n\nI went out to join her. \"You okay, love?\" \n\n\"I've never been so okay.\" She put her arm around my shoulders. \"Ryan, this week has been the best week of my life. I've never felt so alive. I feel no shame, no self-consciousness, not about having sex, and not about being outdoors in the nude. This is how a relationship is supposed to be. This is what true freedom feels like.\" \n\nWe stood, in each other's arms, watching the waves for a few moments. \n\n\"Crab!\" Rania pointed. A small, brown crab was skittering sideways across the beach, coming out of the surf, and making its way up to the sand, at which point it dug a hole, burying itself. \n\n\"So that's what those holes on the beach are...\" I mused. \n\nJust then Khadija walked by, still naked, heading into the water. \"I hate to interrupt your moment, but we should get moving if we plan to hike today. The ferry leaves when it leaves.\" \n\nAs the three of us waded back into the sea to wash the sweat off, the hot sun now beating down, I reflected on everything that had happened so far. The end of our trip was near, but I was determined to stay living in the moment, in love and in a state of pure happiness, for as long as we had left together. I still had a day and a half left to spend in this paradise with my love, and what came after was in fate's hands."
    ],
    "authorname": "thatsbogus",
    "tags": [
        "beach",
        "blowjob",
        "cunnilingus",
        "doggy-style",
        "fellatio",
        "ffm",
        "muslim",
        "outdoor",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/parts-of-desire-ch-05"
}