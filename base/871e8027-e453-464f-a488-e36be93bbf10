{
    "title": "The Obsession Ch. 03",
    "pages": [
        "Dearest readers, \n\nI foolishly submitted chapter two incorrectly causing the file to be unreadable and therefore, reasonably rejected, and so it came to you late. That is simply unacceptable. You deserve better than that. You've given me your precious time, attention and feedback, and in return I've given you a late submission. \n\nShame on me. \n\nI think some compensation is in order... how about an early release of chapter three? \n\nEnjoy. And please come back next week for chapter four. \n\n***** \n\nChapter 3 \n\nAs Magnus finished up his notes from the last interview of the day, he thought about the events of the previous night. \n\n'So she's lost interest in me. \n\nIt was bound to happen. \n\nShe's probably a very promiscuous woman. \n\nPossibly even a nymphomaniac.' \n\nHe logged off of his laptop. \n\n\"I should probably get myself tested.\" \n\n\"What was that?\" \n\nAnnette asked as she entered his office. \n\n\"Oh- nothing.\" \n\nHe replied nervously. \n\n\"So did you make a list?\" \n\n\"For what?\" Magnus asked his assistant. \n\n\"The furniture you need.\" \n\n\"Oh, right...\" He realized he had completely forgotten about Annette's offer to take him shopping. \n\n\"If you'd rather go some other time...\" \n\n\"No, no- I'd love to go today. It just slipped my mind.\" \n\nAnnette placed a notepad and pen in front of Magnus. \n\n\"Come on, write your list while I shut down the computers so we can get out of here.\" \n\nMagnus smiled and got to work while Annette closed her reception station outside his office down for the day. \n\nBetween Annette's bargain savvy and Magnus' interior decorating skills and easy going nature; the two made quick work of finding tables, chairs, a work desk and various odds and ends for his apartment. Annette had even shown him a few bike shops, and he found a sturdy mountain bike he could now use to traverse his new town. Magnus was finishing up the paperwork to have his new bed delivered when Annette came back from the restroom with an idea. \n\n\"Hey, how about we check out that new sushi place that just opened up on Sutter Street?\" \n\n\"I would, but the guys from the last store just called and they can deliver the desk tonight after all. They said they'd stop by sometime between six and eight.\" \n\n\"Yeah...\" Annette conceded, after checking her phone to find that it was almost five P.M. \n\n\"There's no way we'd get back in time. Want a lift home?\" She offered. \n\n\"Actually, I'd like to try out my new bike.\" \n\n\"You Europeans and your bikes! You just can't wait to get that thing on the road can you?\" \n\nAnnette snickered. \n\n\"Okay, you've got me there. I really miss riding a bike.\" \n\nMagnus laughed in agreement. \n\n\"I'm just teasing. It's actually really commendable that you take such good care of your body and your environment.\" \n\n\"So, you want to purchase one and we ride together?\" \n\n\"God no! It's forty five degrees and dropping on a chilly autumn evening, you madman! It might be commendable, but it's still crazy!\" \n\nMagnus laughed and the two said their goodbyes as he zipped his jacket up, then made his way home. \n\nThe ride was breezy and crisp. Magnus enjoyed the view of the orange-pink sky on this unusually sunny November afternoon. He felt bad about lying to Annette, but he really wanted to ride home in the sunlight. He didn't want her to think he was ditching her for a bike ride- even though that was exactly what he was doing. \n\nThe cool weather was a welcome contrast to the intense California heat. He had only stayed there for two weeks, but that was all he needed to remind him of how unequipped he was for warmer temperatures. He unzipped his jacket enough to let the breeze caress his torso and run down his back as he coasted down the block towards his building; enjoying what was left of his ride home. \n\nAs Magnus waited for the elevator, he heard laughter coming from Cassie's apartment. He peered down the hall, but quickly returned to his 'Waiting for the elevator' stance as her door began to open. \n\n\"Thanks again for watching 'The Diva'.\" \n\nSaid a white haired, older man as he stepped out of Cassie's apartment, followed by a small woman who appeared to be in her fifties. She had long spring green hair that looked to be a wig, but a lovely one that fell in soft waves down her back. She wore snug fitting denim jeans and a black pea coat. They were an attractive older couple. Between them was the familiar white poodle; tail wagging as usual. \n\nThe tiny dog immediately spotted Magnus and ran over to him. \n\n\"Hello, Hedy Lamarr.\" He greeted. \n\nThe toy poodle pranced and twirled for her new found company and stood up on her back legs, asking to be picked up. Magnus reached down and scooped up the happy dog as she licked and nuzzled him as though he were a long lost friend. He laughed, delighted by the affectionate little dog. \n\n\"You know my baby?\" \n\nAsked the puzzled green-haired woman. \n\n\"I saw her with Cassie yesterday. She's a very nice dog.\" \n\n\"Oh, yes. My baby is one of the greatest show dogs of all time! You can catch her act at the children's center at Petersburg Hospital every Saturday.\" Said Hedy's proud owner. \n\n\"I'm sorry, I don't believe we've met.\" \n\nSaid the older gentleman, extending his hand to Magnus. \n\n\"I'm Jack Epson.\" \n\nMagnus shook his hand graciously as he held Hedy to his chest with his other arm. \n\n\"You're my landlord...\" He said cheerfully. \"How very nice to meet you. Thank you so much for the fruit basket! It was much needed... I'm Magnus Bjornssen.\" \n\n\"Ahh! Dr. Bjornssen! Nice to finally meet you. My apologies for not dropping by, I've been a little busy lately. Here, let's get her leash on and pass her back to her manager before she kisses half your face off!\" He said, taking the excited dog from a now very soggy-faced Magnus. \n\n\"This is my wife, Angela.\" \n\n\"How do you do.\" Angela curtsied. \n\nAngela cupped her hand to her mouth and turned to Cassie who was still standing at her door. \n\n\"He's handsome.\" \n\nShe pretended to whisper as she knew full well that the doctor could hear her. Cassie half chuckled despite herself while, but shook her head and quickly looked away with crossed arms. Magnus blushed as he took a napkin out of his pocket and wiped his face. \n\n\"Don't mind her, she's just boy crazy!\" Joked Jack. \"Unless of course you're into older women... and in that case-\" \n\nJack raised his fist and curled them inward in a fisticuffs fashion. \n\nMagnus laughed while holding his hands up in a surrender. \n\n\"Whoo...\" \n\nThe folly was interrupted by Angela, who suddenly seemed quite dizzy. Cassie quickly reached out to her and pulled her close, bracing her while she shook off the dizziness. \n\n\"I'm sorry, Doc. I'm gonna have to cut it short; but if you need anything you give me a call. Cassie, you two gonna be okay? I'm gonna go bring the car around.\" \n\n\"I'm fine, honey it's just the new medicine.\" Angela said, steadying herself at a failed attempt to reassure her concerned husband. \n\n\"Well I know I've had a long one and I'm ready to hit the hay. Your old man is gonna have to be a party pooper tonight.\" He winked at his wife. \"See ya kiddo.\" He said to Cassie as she smiled and waved. \n\nAngela smiled lovingly at her husband as he went off to get their car. \n\nMagnus said goodnight to the women and boarded the elevator which had arrived a minute ago during his brief conversation with Jack. After the elevator door closed, Cassie closed her door and leaned on it while she watched Hedy perform a few flips. The little dog was careful not to pull on her leash, as she daintily jumped and twirled. The two women allowed the dog to entertain them for a few moments. \n\n\"Do you ever hang it up for the night?\" Cassie said, looking down at the curly dog. \n\n\"The show must go on.\" Angela proudly announced. She then turned to Cassie. \n\n\"You didn't tell me he was hot!\" \n\n\"He's... alright.\" \n\n\"Liar!\" She poked Cassie's arm, accusingly. \n\nCassie giggled. She knew Magnus was attractive. But what she didn't know, was that he was also stealthy. Magnus had taken the elevator up, only to lay his bicycle against his apartment door before he silently crept down the stairs to listen in on their conversation. And as he stood in the stairwell, holding a hand to his mouth to keep from laughing, he was glad he decided to eavesdrop. \n\n\"He's hot and you know it!\" \n\n\"Meh.\" Cassie shrugged. \n\n\"He's like a young Chuck Connors.\" \n\n\"Or an old Mads Mikkelson.\" Said Cassie, seemingly unimpressed. \n\n\"The Hannibal guy? Nooo... well... maybe. But I think they're about the same age. That doctor might be a little younger. A little hotter too.\" Angela said with a sly look. \n\n\"A little hotter?\" She asked skeptically. \n\nAngela nodded. \n\n\"Than Mads Mikkelson?\" She questioned with disbelief. \n\nAngela nodded again. \"He reminds me of that vampire you like with his blonde hair and his little fangs.\" \n\n\"I want some of those pills you're on.\" Cassie stated as she brought her hands to her hips. \n\nAngela laughed heartily before gently swatting Cassie. \n\n\"You're so mean! Did you see how wide his shoulders were? And his legs were like tree trunks! Just look at the size of the bike he rides... that's a big man.\" \n\n\"Meh. Kinda gangly.\" \n\n\"He was NOT gangly!\" \n\nCassie giggled at Angela's offense. \n\n\"He was big! And strong! And I bet he's big in other places too...\" \n\nCassie buried her head in her hand, chuckling as she blushed a little. \n\nIt was nice spending time with Angie while she wasn't in the hospital, but Cassie couldn't help but give in to the reality that her friend would soon be facing the same hell she stepped out of this past spring. \n\n\"Stop it!\" Said Angie, somehow aware of Cassie's thoughts. \n\n\"It's just not fair.\" Said Cassie, tearing up; her voice crackling. \"There's so many shitty people on the planet that deserve to be sick-\" \n\nAngela grabbed Cassie and held her tight. \n\n\"Shh! Hush it! I'm old, I'm tired, and I'm okay with it. I've lived a long life and I'm ready to go.\" \n\n\"You're not old!\" Said Cassie, pushing away. \n\n\"I'm seventy two years old!\" \n\n\"Yeah, but you look like you're fifty. Stop acting like a little old bitty!\" \n\nAngela smiled. She knew that all she had to do to was pick on herself to get Cassie all riled up. Anything was better than seeing her Cassie upset. \n\n\"And where's Carla through all this?\" \n\n\"You know. All wrapped up in her own life.\" \n\n\"Too wrapped up to be with her mother? You gave her everything when she needed you. I should go to her penthouse and punch her right in her fucking face!\" \n\nAngela burst out in laughter. \n\n\"I stopped letting her selfishness get to me a long time ago. Besides, I have my Jack, my Cassie, and Little Miss Hedy Lamarr; and that's all I need. But I'll think about letting you sock Carla right off her high horse because after all, That would be hilarious.\" \n\nCassie and Angela both shared a laugh. \n\n\"How far away did he park?\" Inquired Cassie as she checked the time on her phone. \n\n\"He didn't want to take the last space out front in case anyone from the building needed it, so he parked a couple blocks down.\" \n\n\"He's always putting himself last.\" \n\n\"No, he just puts everyone else first. That's why I love him.\" \n\nCassie smiled with Angela. \n\n\"And I love you too.\" Angela said as she lightly pinched Cassie's arm. \"That's why I want to see you happy before I move on.\" \n\nCassie looked to her friend. \n\n\"But I am happy.\" \n\nAngela smirked at Cassie. \n\n\"You know what I mean. I'm leaving Hedy to you, and I don't want her sitting around watching you type your little stories while you wait for your hair to turn gray!\" \n\nCassie chuckled. \n\n\"I'm serious! If I pass, Jack's gonna move out to Florida and live out his retirement playing golf and taking boat rides. Carla will probably squeeze a few tears out before she goes back to not giving a shit- so she'll be fine. But Hedy's only three years old, she needs an owner with glamour and romance in her life! Why don't you ask that doctor out? I think Jack said he's single.\" \n\nCassie looked away and crossed her arms. \n\n\"He's not my type.\" \n\n\"Bull! That man is every woman's type!\" \n\n\"Not mine.\" Replied Cassie. \n\nJack Epson walked into the lobby and met his wife as Cassie walked them out and hugged them both. She then walked back to her apartment and went inside. \n\n\"Not her type?\" Magnus whispered to himself in the stairwell. \n\n'I was you're type when you were drinking my come. \n\nWhen you were fucking my face.' \n\nHe thought to himself, annoyed by Cassie's remarks. \n\n'And what the hell is 'gangly'?' \n\nHe turned to walk upstairs but stopped in the middle of the first flight. \n\n\"No. You won't get away that easy tonight, Prinsesse.\" \n\nHe turned around and made his way down the stairs to Cassie's apartment. He prepared himself for whatever game Cassie thought she had in store for him tonight, and took a deep breath. He raised his hand to knock, but before he did, he realized something- He never heard her lock her door. \n\nMagnus quietly turned the doorknob and found no resistance. He wickedly grinned to himself before returning to a serious state. \n\n'No. This is wrong.' \n\nBut before he could walk away, he heard something. \n\nIt was Cassie. She was crying. \n\nMagnus was immediately saddened by the idea of her hurting. He placed his hand against the door, wishing he could hold her. \n\n'To hell with it.' \n\n\"Cassie...\" He knocked frantically. \"Cassie!\" \n\n\"What. The FUCK?... ... ... WHAT?\" \n\nHe was taken back by her annoyance, but glad that she had answered him. \n\nHe thought for a second. \n\n\"It was wrong of me... to come here last night.\" He continued. \"I may have annoyed your friend's little dog. I'm sorry.\" \n\nThere was no response. \n\n\"I raised my voice, and I was out of line.\" \n\nHe thought for a moment. \n\n\"I was very disobedient.\" \n\nStill no response. \n\nHe waited a for a second and grinned. \n\n\"Perhaps I should be punished.\" \n\nHe waited until he finally heard her voice from behind the door. \n\n\"Alright. Fuck off. That's your punishment.\" \n\nMagnus pressed his head against the door and sighed, brainstorming his next move. Appealing to her ego didn't work; he figured perhaps he should appeal to her sympathy. \n\n\"But Prinsesse, I'm so tired... and my back hurts so badly...\" He lied. \n\n\"I'd give anything to sleep in a bed.\" \n\nMagnus actually enjoyed sleeping on the floor, but he knew Cassie didn't know that. He waited for what seemed like an eternity. \n\n\"I could pay you.\" He offered in desperation. \n\n\"I'll take cash. Or booze.\" She answered immediately. \n\n\"Booze?\" He repeated the unfamiliar word quizzically. \n\n\"Liquor. Hard.\" \n\n\"Ah- Sprut!\" \n\nHe ran upstairs to his apartment, brought his bike inside, then riffled through his suitcase until he felt a familiar item. He pulled out a gift box. He removed the ribbon and opened it, marveling at the contents. He pulled a bottle of liquor out of the gift box and ran back downstairs. \n\n\"Cassie?\" Knocked Magnus. \n\n\"What?\" \n\n\"I have what you requested.\" \n\nCassie cracked her door open. Magnus smiled and took out his wallet. \n\n\"I have about eighty dollars in my wallet.\" He said, shuffling though it. \n\n\"Or this.\" Magnus held out the bottle of liquor for Cassie to inspect. \n\nShe squinted her eyes at the label. \n\nShe took put her phone to her mouth. \n\n\"Aal-borg... Taf-fel Ak-va-vit... nineteen sixty.\" \n\nShe carefully read the label into her phone. It beeped, and she read the screen. \n\n\"That's worth almost two hundred bucks.\" She said to Magnus, who simply smiled. \n\n\"Oh-kay.\" She said before grabbing the bottle, then the cash from his wallet. \n\nMagnus chuckled before following her into her apartment. \n\nCassie went into the kitchen and came out with two rocks glasses. She sat down at her dining room table and cracked open the expensive spirit. \n\n\"Where'd you get this?\" She asked, smelling the cap inquisitively. \n\n\"My birthday passed while I was in California, and my father had it sent to me as a gift.\" \n\n\"Well... I don't like drinking alone, so that means you get to drink some of your birthday booze.\" She said as she poured a shot into each glass. \n\n\"Lucky me.\" Said Magnus with a smile as Cassie slid him a glass. \n\n\"This is the second time you've allowed me to enjoy one of my own gifts. How generous you are, my Prinsesse.\" \n\n\"Why do you keep calling me that?\" Cassie said as she gulped down her first shot. \n\n\"It means-\" \n\n\"I know what it means, I'm not a fucking idiot. The word is almost the same in english.\" She said in an annoyed tone as she poured another shot. \n\nMagnus took a sip of his Akvavit. \"Are you not my princess?\" \n\nCassie looked away, refusing to answer. \n\nShe walked over to her purse with her drink in hand, grabed it, opened a window and pulled out a cigarette and lit it. Magnus watched her every move. \n\n\"I didn't know you smoked.\" \n\nShe shrugged as she took a drag. Magnus walked over to her and knelt down at her feet. She was wearing a pair of skintight, black courdoroy leggings, pink maryjanes, a white cami top and her black cardigan. Her legs were crossed. \n\n\"May I?\" Magnus asked, pointing to her feet. \n\nCassie stared at him for a second before curiosity got the best of her and she pointed her foot at him. \n\nMagnus removed the pink maryjane before bringing her bare foot to his mouth and planting a kiss on the bottom of it. \n\n\"Eww!\" Said Cassie as she pulled her foot away. \n\nMagnus laughed. \n\n\"Such adorable little feet you have.\" He said as he gently took her foot back into his hands. \n\n\"I'm a size nine.\" Cassie stated in difience. \n\n\"Tiny.\" Magnus reiterated. \n\n\"What size are you?\" \n\nMagnus thought for a second. \"In American size... thirteen... I suppose.\" \n\n\"Thirteen?\" Said Cassie in disbelief. \"That's like a woman's size fifteen.\" \n\nMagnus smiled and shrugged. \n\nCassie had to admit to herself that her foot did look tiny in Magnus' hand. Actually... everything of hers did. \n\nSince puberty, Cassie had always had a thick, curvy figure. It was a strange feeling to be so completely dwarfed by someone. She'd never thought of herself as dainty or petite; but it was actually kind of... nice. Magnus rubbed the sole of Cassie's foot is a circular motion with his thumbs. Cassie grited her teeth, trying desperately to conceal the fact that his hands were sending bolts of pleasure up her leg. She sipped the smooth, rich, caraway seed flavored liquor and took another puff of her cigarette as Magnus continued on to her other foot. \n\n\"What brand do you smoke?\" Asked Magnus, curiously. \n\nCassie looked at him and exhaled a large puff of smoke. Magnus inhaled, then smiled devilishly. \n\n\"My naughty, naughty girl.\" He said, reffering to the distinct scent of cannabis. \n\nCassie pulled her feet away. \n\n\"I'm not your girl.\" She said as she stood up, put her joint out in an ashtray, and walked back to the Akvavit. \n\nMagnus followed her, once again falling at her feet. \"My... Mistress?\" \n\nHe looked up at her with a pleading, angelic expression. Cassie placed her bare foot onto Magnus' crotch and pressed firmly. \n\n\"Is that what you want?\" She asked him menacingly. \n\n\"If that's what you want.\" He answered. \n\n\"Why do you keep coming here?\" \n\n\"Why do you keep letting me in?\" \n\nMagnus leaned forward and began kissing Cassie's leg. As his kisses trailed upward, she could feel him stiffening under her foot. \n\n\"Stop.\" She pushed on his forehead with her palm to no avail. \n\n\"I said stop!\" She exclaimed as she attempted to flee. Magnus grabed her waist and pulled her into him, nuzzling her belly. \n",
        "\"Stop!\" \n\nWithout releasing his grip, Magnus looked up at her in disbelief. \n\n\"Are you... giggling?\" \n\nCassie covered her mouth in an attempt to hide her expression. \n\n\"You are! I make you giggle.\" He said teasingly. \"Well; pot and Akvavit make you giggle, but I'll take it.\" he said, contently. \n\nHe rose to his feet and took Cassie's empty glass from her as she continued the struggle to hold in her laughter. \n\n\"How about we have a talk?\" Said Magnus as he refresshed their glasses. \n\n\"About what?\" \n\n\"I don't know. \n\nHow about our landlord. He seems nice. \n\nSo does his wife. What was her name aga-\" \n\n\"I don't wanna talk about them.\" \n\n\"Alright.\" Said Magnus handing her a glass. \n\n\"What would you like to talk about?\" \n\n\"Your dick!\" \n\nMagnus snorted, trying desperately to keep from performing a spit-take with the expensive alcohol. \n\n\"Why the hell is it so goddamn big?!\" Cassie blurted, swaying a little. \n\nMagnus forced the sip down his throat and glanced at her. It was nice seeing her all loose and tipsy; a welcome contrast to her usual cool demeanor. \n\n\"I don't know... it's... proportional, I suppose.\" He chuckled. \n\n\"I wanna see it.\" She purred playfully. \n\nMagnus grinned at her, then he placed his glass on the table. He walked over to her, unzipped his pants and presented himself to her. Cassie wrapped her hands around his rapidly hardening erection. \n\n\"Mmm...\" She said taking another swig of her drink while stroking him. \n\n\"I wanna fuck it.\" She giggled. \n\n\"Would you like me to make you feel good, Prinsesse?\" \n\nCassie nodded while mischieviously biting her bottom lip. \n\nMagnus leaned down and kissed Cassie. His toungue danced with hers, tasting the familiar flavor of his favorite spirit. His fingers traveled under the elastic band of her pants and into her panties. He caressed the tiny wisp of hair, relishing the feeling of her soft curls. \n\n\"You're already wet for me, Prinsesse.\" He whispered as he reached her seeping lips. \n\n\"I've been wet since you were kissing on my belly.\" Cassie giggled. \n\n\"So you like your Viking-Angel after all?\" Asked Magnus. \n\nCassie continued to giggle and stroke him. Magnus hated to interupt her soft stroking, but he had to have her. He scooped her into his arms and carried her to the halfwall counter that separated the kitchen and the diningroom, and placed her on top of it. He then eagerly pulled off her pants and took off her sweater. He got inbetween her legs and pulled her to him as she moaned and giggled the entire way. \n\nMagnus leaned down and parted Cassie's pussy with his tongue. \n\nShe moaned as he began to flutter onto her clit. \n\n\"Mmm... make me come like you did the first night.\" Cassie moaned. \n\n\"Do you like the way I lick your pussy, Cassie?\" He asked as he masaged her with his fingers and waited for her answer with anticipation. \n\n\"I fucking love the way you lick my pussy!\" She said before showing his face back into her. \n\nMagnus smiled as he licked and sucked at a writhing, moaning Cassie. \n\nShe was so wet and swollen that it was hard to keep a hold of her as he parted her lips with his thumbs while continuing to lash at her with his tongue. Before he could explore her with his fingers, she began to shake and buck. She grabbed two fistsfuls of his silky hair and moaned loudly as Magnus slid his hands under her bottom and pulled her close, licking her untill a long, whining climax washed over her. \n\n\"I love pleasing you, Prinsesse.\" Whispered Magnus as he gently kissed Cassie's open flower. \n\nHe made sure to avoid touching her hyper sensitive clitorous as she was still writhing at his touch. He stood up and placed his erection on top of her, sliding himself over her drooling sex. A bead of precum made it's way down the tip of his penis and onto her stomach as he slicked his hair back into place. \n\n\"Please Magnus.\" Cassie whimpered as she brought her feet up onto the edge of the counter and pushed herself up on her heels. \n\nMagnus watched her, savoring the moment. \n\n\"Please baby... you're so damned sexy you make my pussy ache! I need you so fucking bad...\" \n\nMagnus snickered. \n\n\"I'll be buying you lots of Akvavit from now on, Prinsesse.\" \n\nCassie groaned, bucking at him impatiently. Magnus angled himself with her opening and allowed her to grind herself onto him. \n\n\"Mmm... that's my sweet girl!\" He called to her as pleasure began to course through his body. \n\n\"Ahh! Yes...\" She moaned as she savored her victory. \n\nMagnus allowed Cassie to grind away at her own pace at first, but now he could no longer stand it. He grabbed ahold of her and pulled her towards him until her bottom was nearly hanging off the counter. He then leaned over her and slowly drove himself completely into her. She moaned, lifting herself onto her elbows. Magnus wraped his hands around her pelvis and lifted her up, driving her into him as he pumped himself into her with thunderous force. \n\n\"Ahh! You're so fucking thick- you feel so good!\" She bellowed. \n\nHe savored the way her body felt in his hands and how tightly she wrapped around him as he pistoned into her. \n\n\"Du elsker den m\u00e5de, jeg kneppe dig... \"(You love the way I fuck you...) He grunted. \n\n\"...ikke? G\u00d8R DET IKKE?\" (...don't you? DON'T YOU?) \n\n\"Yes babe... please don't stop...\" She whispered. \n\nWithout breaking stride Magnus looked at her, puzzled. \n\nHe could have sworn she understood him. \n\nCassie tensed and began to spasm. \n\n\"Mnh... Prinsesse... you know what happens when you start comming on me like that.\" \n\n\"I want it...\" \n\nMagnus groaned, attempting to supress his orgasm. \n\n\"...please Magnus... I need your come so fucking bad!\" \n\nThat was all it took to make him lose control as he began to fill her with his semen. \n\nShe placed her hands over his, grinding her spasming pussy onto him as they both moaned like furious animals, completely lost within one another. \n\nHis body jerked a few times as the last bit of his essence poured into her. Then he fell onto her, completely spent. Cassie could feel his sweat seeping through his dress shirt as he panted. \n\nShe giggled beneath him. \n\n\"What's so funny?\" \n\nHe asked between breaths. \n\n\"You never took off your doctor clothes!\" She laughed. \n\nMagnus stood up and looked down at her chuckling in her tipsy state. As much as he loved seeing her so carefree, he had to bring the reality of the situation to her attention. \n\n\"Cassie, if I keep coming inside of you they'll be a little one runing around here before long.\" He said to her as he caressed her belly with his thumb. \n\nCassie giggled. \n\n\"You think that's funny?\" He asked with a warm smile. \n\n\"I'm wearing a diaphragm, silly!\" \n\nMagnus looked at her questionably. \"When did you put that in?\" \n\n\"When you went up to get the booze.\" \n\nHe was silent for a few moments. \n\n\"What about the first time?\" \n\n\"Pfftt-When I went into the bathroom!\" Cassie confessed, cracking up. \n\n\"Hmm.\" Magnus said to himself as he slowly pulled out of her. \n\nCassie took a shower, and Magnus helped himself to her bathroom afterwards. She put on his dress shirt and rolled up the sleeves which hung well past her hands. She marveled at the quality of the maroon dress shirt as she fixed herself another drink. She showered and walked over to the kitchen and looked down at the barely eaten, homemade pizza on her stove. Magnus stepped out in his underwear and joined her. \n\n\"Looks good. Is that from the shop down the street?\" \n\n\"I made it.\" Said Cassie as she took a sip. \n\n\"It's margherita pizza, Angie's favorite. I made for her. Here.\" \n\nShe said, passing him the entire pan.\"You might as well take it.\" \n\n\"But it's for Angie.\" He protested. \n\n\"She couldn't even finish half a slice-\" Cassie began to cry as Magnus took the pan and drink from her and placed them on the stove. \n\nHe then took Cassie into his arms and held her as she continued to cry. \n\n\"I can't loose her. She's the closest thing I have to a mother.\" \n\nCassie wept uncontrolably as Magnus rocket and soothed her, wishing he could take her pain away. \n\nHe put the pizza inside of her refridgerator, picked her up, carried her to her bed and laid her down. Then he climbed in after her. He pulled her close, inhaling the sweet fragrance of her wavy hair as he tenderly kissed the top of her head. Her breathing changed, as she was already asleep. As he caressed her and slowly drifted off, he realized that this was the most relaxed he had been since he came to this country. \n\nIn fact- it was the most content he had been in years."
    ],
    "authorname": "Z_Lundy",
    "tags": [
        "domination",
        "black woman",
        "white man",
        "romance",
        "denmark",
        "oral sex",
        "bondage",
        "curvy",
        "blood hound"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-obsession-ch-03-2"
}