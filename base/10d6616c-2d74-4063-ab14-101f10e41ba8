{
    "title": "Mutual Benefits Ch. 07",
    "pages": [
        "Whatever it was that Milo had to tell me, he clearly felt as awkward as I did discussing it in the middle of a hallway, even though the halls were mostly empty by this point. Class was about to start, and I wasn't one for skipping, but curiosity won over me. Before long, we were back in our little elevator hallway, with him looking from wall to wall, thinking about where he'd begin with this. \n\n\"I'm not normally one for drama,\" he began, \"but I think this is important for you to hear. So, you've... been doing stuff with Taylor, right? No need to say what.\"\n\nI nodded, staying silent.\n\n\"So, this could be nothing, or this could be something, but Taylor's been kind of... dropping hints that she's gotten... \" He sighed. \"How do I word this...?\"\n\n\"She's been telling you guys that she's been having sex with me?\" I offered. It was weird, thinking of her making me swear to secrecy then blabbing to her group.\n\nMilo shook his head. \"Not quite. She's been... uh... I guess the word is 'bragging' to her friends that she found a guy that she can control. Sh-\"\n\n\"Wait, control? What does that mean?\" I asked.\n\n\"She was basically saying that - okay, so, Taylor has a thing with guys. She usually goes from guy to guy, looking for them to have sex with her. But she usually just ends up being their good little girlfriend or something. So, she wanted her own thing. A guy she had wrapped around her finger.\"\n\n\"Okay...\" I replied slowly. \"And you all guessed that it was me?\"\n\n\"No, I don't think the others care.\"\n\n\"So why do you?\" I asked, in a calculated and removed tone.\n\nHe stared at me for a bit. \"I guess because if that was me, I'd want to know. I'm just nervous if you give your first time to her thinking it's special or something, and you only find out after that she - actually... Have you two had full-on sex yet?\"\n\n\"What's full-on sex?\" I asked.\n\n\"Fourth base. Train in tunnel. What our Sex Ed class likes to pretend doesn't exist.\" He stared at me for a bit. \"Penis in vagina.\"\n\n\"Oh,\" I replied dumbly. \"Um, no, we haven't. Just oral and stuff.\"\n\n\"Well, congratulations I guess,\" he replied. \"I just kinda jumped to worst-case scenario in my head, and figured that if this was me, I'd want to know about it. If, like, the sex meant more to you or something.\"\n\nI wasn't exactly clear on this. I mean, it was a little insulting that she was bragging about having sex with me but I wasn't allowed to say it, but I guess if I said I had sex, it would be clear who, and if she did, it wouldn't be as obvious.\n\n\"Also, again, I hate the drama train as much as you do, but in case she hasn't told you... she has a boyfriend.\"\n\n\"Joel, right?\" I asked.\n\nMilo looked surprised. \"Oh, so she did,\" he mumbled. \"You know what? Good for her. I'll be honest, I thought she would try to hide that. Love Taylor to death, but she, uh... yeah, sometimes, she just likes to hide the stuff she's less proud of, or stuff she thinks you don't need to know. She, uh, likes to dodge responsibility a lot.\"\n\n\"Well, Joel also isn't her boyfriend, they've only gone on one date, right?\" I asked.\n\n\"Maybe like half a week ago. They've gone on two dates since. They're really hitting it off. Facebook official and everything,\" Milo replied. \n\nI stayed silent, and Milo picked up on that. \"That wasn't disclosed, huh?\" he suggested.\n\n\"I didn't even find out about Joel through her,\" I bitterly confided. \"I bumped into him in the hallways.\"\n\n\"Well, th-\"\n\n\"Literally bumped into him.\"\n\n\"...Well, that's Taylor for you, I guess. I'm sorry. I'm not trying to drive a wedge between you two, but... In case you're one of those types where your first time means something to you, yeah. I'd rather you have, like, caution than regret.\"\n\nI nodded. \"What do you think I should do?\"\n\n\"I'm one of those assholes that think you shouldn't sleep with a girl who's dating another guy,\" he joked. \"It's not my place to judge, but that's where I'm at.\"\n\n\"So, either way, you were looking for whoever Taylor was fooling around with to stop doing stuff with her,\" I concluded.\n\nHe shrugged. \"Kinda, yeah. I'm not just doing this for you. You seem cool and all, but I barely know you. And I like Joel, and I want things to work out between them.\"\n\n\"Hey, it wasn't exactly my idea to be doing stuff with Taylor,\" I defended myself, only realizing afterwards that in actuality, it was kind of my idea. \"Especially not while she's with another guy.\"\n\n\"Right, but now you know. So, y'know, keep it professional. School year is ending soon anyway, should be a piece of cake.\" As the conversation went on, it was clear through his tone that this wasn't as much 'friendly advice' as it was 'a gently worded command.' \"I'm sorry that she didn't tell you the whole thing, or blabbed about using you, even if no one but me knows.\"\n\nThere was a thought. \"How do you know no one else knows? What if someone from your group pieced it together?\"\n\nMilo smiled. \"Because if they did, they'd have asked her by now. None of the girls in the group know how to keep any secrets to themselves.\"\n\nThat was not a comforting thought at all, especially given everything Milo just told me about Taylor. I thought to myself about what he said, and realized, maybe that was why Morgan was acting differently towards me. Maybe she knew.\n\n\"What about Morgan?\" I asked. \"Do you think she knows?\"\n\n\"I can't answer if you ask about anyone other than me. I just think the group doesn't know.\" He paused. \"Why Morgan specifically?\"\n\nI shrugged. \"I dunno. She's... maybe it's stupid, but she's been acting weird around me lately. I feel like I may have upset her, or maybe she's angry that Taylor's hanging out with someone like me... a bit ago, she even came to my job - I work at GameStop - and I swear, it was like she didn't even need to buy anything. Call me paranoid, but it was like she was just there to spy on me or something.\"\n\nMilo's grin began at the start of my rant, and by the end, it was practically ear to ear.\n\nI hesitated. \"And call me crazy, but it sure seems like you know something here.\"\n\nMilo chuckled bashfully. \"Quinn, uh... I'm sorry, I honestly am, but I don't think I have the right to be the one to tell you what's going on there,\" he told me, his grin never stopping.\n\n\"So you do know something!!\" I protested loudly.\n\n\"I... have my guesses. I really shouldn't say it though, okay?\"\n\n\"No. Not okay,\" I complained.\n\n\"Believe me, relax. It's not like there's a conspiracy against you or something. I'll say... I'll say that it isn't a bad thing, okay?\"\n\nI stared at him in confusion. \n\n\"Look, we're getting off topic here. All I'm saying is, you should probably stop doing stuff with Taylor. She has a boyfriend, like full-on official boyfriend. You don't like drama, and... and other reasons. I'm counting on you to do the right thing here.\"\n\n\"It doesn't sound like you came here to give me a choice,\" I told him.\n\n\"If you're half as good of a person as I think you are, you'll know there really isn't a choice at this point,\" he rebutted.\n\n***\n\n\"How was lunch?\" I asked Kevin as we started to walk out of the school together.\n\n\"Enh, it was dumb. Believe me, I would have rather spent it with you,\" he replied, walking down the hall with me. He pointed at someone walking in the other direction. \"Yo, my man, good work today! But remember, you got lucky.\" He met my eyes and shrugged as we kept walking. \"Debate club buddy.\"\n\n\"I don't even know how you remember all of these people,\" I mumbled to myself.\n\n\"Not gonna lie, Quinn, I kinda envy your life sometimes,\" Kevin admitted. \"Sometimes, the more people you know, the more shit you get sucked into.\"\n\n\"Yeah, I think I'm starting to get that,\" I mumbled, holding the school door open for him. \n\nHe walked through, then looked at me for a bit. \"This isn't still about you thinking I started the school thinking you and Taylor fucked, is it?\" he asked exasperatedly. \"Because I even checked the grapevine for stories about Taylor, and-\"\n\n\"No, no, I'm not blaming you. You're good,\" I replied, the two of us moving to the sidewalk. \"Just... the smallest things suddenly mean so much. Like, Taylor and I are just hanging out to study, but suddenly, to everyone in her friend group, and I mean every single one of them, it's like the biggest event on the planet.\"\n\nKevin stared straight ahead to the clouds. \"I bet every guy in high school feels that way. We're getting better at talking to each other but we're not perfect. So, we miscommunicate. We've never had miscommunications with such high stakes before, so we feel like this is the biggest thing. And it happens to all of us, but it feels so silly that it feels like it can't happen to us, like we're the only one. I bet there's like a dozen you's running around right now, going all, 'Why is this being treated like such a big event? Why's this only happening to me?'\"\n\n\"Wow, Kevin. Deep,\" I said, half-jokingly, half impressed. \"I mean, just because it's happening to a dozen people right now doesn't make it any less impactful. Or any less stupid.\"\n\n\"No, but it does make it more commonplace,\" he retorted. \"I think it's just a part of growing up.\"\n\n\"What, so this kinda stuff is happening to you?\" I asked.\n\n\"Ohhhhhh yeahhhh,\" he replied with an exaggerated voice. \"You said it yourself. The more people you know, the more shit you get sucked into.\"\n\n\"...You were the one who said that,\" I pointed out.\n\n\"...Oh. Well, I was right,\" he declared. We didn't say much more for the rest of the walk home, mostly talking about small stuff like assignments and video games. My mind was somewhere else anyway. It didn't help that shortly after I got home, I'd need to prepare for work. \n\nWhen I got home, I dropped my stuff off, ate a quick snack that Mother had prepared for me, and caught her up on my life, leaving out as I always did, any and all adventures with Taylor. In fact, I took lengths to make any interactions worth mentioning to her as banal as possible. The last thing I needed was for her to think the girl with a popular jock boyfriend was my girlfriend, in case Taylor had to come over for an emergency or something. That would have ended disastrously. \n\nTaylor occupied all of my thoughts as I walked to work, and even for the first hour or so of my shift. Was I obligated to end things with her now that I knew she had a boyfriend? Wasn't she the one that had to tell me? More importantly, if we stopped, would we stop being friends? We didn't exactly have much common ground. \n\nI would have kept overthinking, but after a bit longer standing around and giving people vague buying advice, who else but Morgan walked back into the store. The mood felt a lot lighter this time - it helped that it was sunny instead, but mostly it was because she was looking up instead of anywhere but at me.\n\nShe addressed me first, waving in a reserved fashion. \"Hey, Quinn,\" she opened casually. \"So I was thinking, maybe this game wouldn't be the best fit for him,\" she held up the copy of Uncharted she bought a few days ago in her hand. \"Am I allowed to return this?\"\n\n\"Uh, yeah, we give you a thirty-day period,\" I replied. \"Did you want money back or did you want to return it for another item? Since you probably want to get your brother his gift and all.\"\n\nIt was clear my choice took Morgan by surprise. \"I, um, I guess I'll exchange it for something else...\" she replied slowly. She was looking at me the whole time, but only then was she looking into my eyes.\n\nWhy was my heartbeat getting faster? I instinctively looked away from her and cleared my throat. What was wrong with me? Morgan was just giving me her usual Morgan look - a blank, non-emoting face, probably getting more annoyed with me by the second. \n\n\"Okay, what would you like?\" I asked, still looking in the opposite direction of her, pretending to look at a shelf or something.\n\n\"I'd like it if you could look in my direction so you'd know when I point to a game,\" Morgan softly replied. \"I don't know what I'm looking for.\" \n\n\"Right, yeah, of course,\" I mumbled, bringing my face up to look at her, but not really wanting to.\n\n\"Are you blushing?\" Morgan asked me.\n\nBacked into a corner. \"Yeah,\" I admitted.\n\n\"Why?\"\n\nI shrugged, staring straight ahead at the shelf in front of me. \n\nI felt a hand touch my arm, and instinctively shuddered. I looked from Morgan's hand, down her arm and into her eyes. She was staring back at mine. \"Are you going to be okay?\" she asked, her voice reflecting slight concern.\n\nHer face told me she was only slightly weirded out and concerned, but... she was slightly blushing too. It was the first emotion I'd seen from her in a while. I nodded and then she followed suit, letting go of my shoulder. \n\nI had no clue where this came from. The more I thought about it, the more I realized that I couldn't even say today was the first place this feeling had started, just... the first time I had actually felt anything. I didn't even know what it was I was feeling. Or maybe I did, but it felt too silly and dumb to say it out loud.\n\nMorgan and I talked about video games for a little bit longer. She wasn't kidding, she really knew nothing about them, and much like with Taylor, I discovered quickly that I had to modify how I approached the subject to even get her to begin getting the 'language' of what I was talking about. Weirdly enough, without those data management lessons, I doubt I could have had this talk with Morgan. \n\nI eyed my watch after having what felt like a ten-minute talk with Morgan. \"Oh my gosh,\" I blurted. \"It's five minutes to the end of my shift. We probably should wrap this up.\" \n\nMorgan nodded, also looking at my watch. We had talked for over two full hours. \"Yeah, I should probably get home soon. This was helpful though. Thanks for having this talk with me.\" She paused and looked at my face again. \"The end of the semester is coming up. Are you still tutoring Taylor?\"\n\n\"Yup, probably until final dates. She's really worried about the final,\" I replied. \n\nMorgan was probably trying to hide it, but some bitter disappointment splashed across her face for a fraction of a second. \n\n\"...Why do you not like that I am? I thought you said you were okay with me,\" I replied in confusion.\n\n\"No, you're fine. There's just a...\" she trailed off. \"I probably shouldn't tell you. So can I just return this a-\"\n\n\"Tell me.\"\n\nI don't think I ever said something more assertively in my life. I had no clue what came over me. I don't know if it was because I had already told off Morgan once, or if I had heard 'it's a secret' one too many times, but I did know that I was sick of this game of \"Quinn can figure it out later.\"\n\n\"Really, Quinn, I want to tell you, but it'll really only complicate things. For her, and for everyone,\" Morgan protested.\n\n\"If you want to tell me, tell me. You have no idea how many people have told me, 'Oh, I can't tell you,' or, 'oh, you'll see in time.' I'm so sick of everyone assuming I can't be let in on things. I can keep a secret if you want, but this keeps happening to me, and I'm allowed to say that enough is enough, aren't I?\"\n\nMorgan stared right at me and chewed her lower lip in thought. Eventually she looked around and whispered, \"Just... not in here. Your shift is over, right? Meet me outside.\"\n\nThat was definitely the best offer I'd gotten so far. I nodded, and returned to the desk, issuing her refund and waiting around for the next few minutes until James gave me the all-clear. I did a few quick chores then got my sweater, ready to leave.\n\nMorgan was waiting for me outside, leaning against the wall. \"You took more than five minutes,\" she commented. \n\n\"Yeah, I can't believe you're still here,\" I quipped. Morgan smiled in acknowledgement of the joke. Morgan smiled so little that her face kinda changed when she lit up. Her normally lifeless face looked vibrant when she smiled. I really liked it. \n\n\"So, what was the big thing that GameStop can't know?\" I continued.\n\nMorgan shook her head. \"It's not that GameStop can't know, I just thought it was kind of a can of worms. So...\" She paused, looking off in another direction. \"Taylor... didn't want anything to interfere with her getting a good grade. She didn't want your peer-tutor relationship to get complicated or anything.\"\n\nBit late for that.\n\n\"So, she asked me to... kind of not talk to you. I know that sounds weird, but I actually get it. Things were kind of complicated between you and the group from day one. She's had peer tutors before, but usually they kept to themselves and they didn't really have any drama surrounding them.\"\n\n\"Wait, you're telling me that I was the dramatic one of the bunch? Me?\"\n\n\"I think it can happen to anybody, and it happened to happen to you,\" Morgan reasoned. \"Happened to happen... there's gotta be a better way to phrase that. Anyway, I guess because she's aware we had a... difficult beginning, she asked me not to talk to you until you two are finished.\"\n\n\"She really asked you not to talk to me until we were finished Data Management? That's such a weird stipulation,\" I commented out loud. In response, Morgan blushed again and bit her bottom lip, looking down at the ground.\n\nSomething clicked for me in that moment, after remembering my conversation with Milo. \"She asked you not to talk to me at all,\" I realized. \"You just figured that if you needed to talk to me, she wouldn't care about how we saw each other after she was done tutoring me.\"\n\nMorgan nodded slowly.\n\n\"But wait, why do you need to talk to me? That part I don't get. Are you telling me you didn't actually need to go to GameStop in the first place, or what?\" I asked her.\n\nShe looked up at me with half-closed eyes. \"Wow, you really aren't going to make this easy for me, are you?\"\n\n\"Make what easy?\"\n\n\"You hate secrets, right?\"\n\n\"More than anything!\"\n\n\"Do you still not get that I have a crush on you?\"\n\nMy mouth was open but nothing came out. For maybe like the next ten seconds, nothing was said. I felt myself blushing, and looking away. \"...What?\"\n\nMorgan gestured around her. \"We're adults. Can I not just say that?\"\n\n\"No, no, you can, I'm just...\"\n\n\"Did you really not even suspect it?\"\n\n\"I, uh...\" I tried to find the words, but it was like my brain was all jumbled up. \"I guess I'm... kind of oblivious...\" I shyly replied. \n\n\"Yeah, I guess,\" Morgan replied quietly. \n\n\"So, you...\"\n\n\"Yup,\" Morgan replied flatly, looking at me with her usual emotionless expression but clearly slightly blushing herself. \"...Do I get to live long enough to know if you feel the same way or not?\"\n\nFuck me sideways. This was such a complicated situation. Part of me was wondering if Taylor knew about Morgan's crush and wanted to keep it from me to make sure no conflicts of interest arose. Thank the overthinking, but I was now acutely aware that I was damned if I said yes, and damned if I said no, regardless of how I really felt.\n\nAnd this could be blamed on the teenage hormones, but I had absolutely no idea what I even did feel. If I asked myself if I definitely had a crush on her, the answer would be 'I'm not sure.' If I asked myself whether I should just say no, once again, 'I'm not sure.'\n\nSo what the hell could I answer?\n\n\"To hell with Taylor,\" a voice met my ears. \"You free this weekend? I want to do something with you. It can be a movie or a walk or something.\"\n\nThat voice was mine. I was nervous, but I was exhilarated. Besides, Taylor was quite literally dating someone else while all of this was going down. Why the hell would she be the only one allowed to do that?\n\nMorgan smiled again, but a much different kind of smile. A kind of 'I wouldn't have expected this reply in a million years' kind of smile. \"Um, yes. I mean, I'm not, but I'll make sure I am. I'd like that. This weekend, right?\"\n\n\"Yeah. Um, I don't have a car.\"",
        "\"Me neither, but I could probably get a ride or something. Where do you live?\"\n\nI gave her my address, then realized something. \"But I can just meet you outside,\" I offered. \"My family are really, uh, nosy.\"\n\n\"I know the feeling,\" Morgan replied all too quickly. \"Okay. We can go on a walk and find something to do. Saturday?\"\n\n\"Saturday works for me,\" I confirmed.\n\n\"Okay, sounds good,\" Morgan replied quietly. \"I'm going to go now.\"\n\n\"Yeah, I should get going too,\" I replied. As Morgan started to walk away, I added, \"Thanks!\"\n\n\"For what?\"\n\n\"I dunno. Wanting to go out with me.\"\n\nMorgan did that popular girl thing where they smile with a confused or slightly shocked expression. It looked confused, but it felt like it was done because she liked me, in a 'you're so cute' way. As far as I knew, no one ever had a crush on me before. That smile made my heart soar.\n\n***\n\n\"I'm still not getting it,\" Taylor confessed as we lay sprawled on her basement floor. This time, we elected to not start with sex, at my suggestion (though I hid my exact feelings as to why), which meant we were actually studying for the first time in way too long.\n\nWhich, of course, meant that Taylor was fairly behind again.\n\nI sighed. \"That's okay,\" I told her. \"Just go over the problem again. You have the formula in front of you, so plug in the numbers like I showed you and find the percentage. That's the ultimate goal here, remember that. You just need to know what means what.\"\n\nShe stared at the page until I swear I saw the beginnings of tears in her eyes. \"I'm not getting this,\" she finally admitted. \"I'm not getting any of it. I need a break.\" She closed her book, thoroughly disgusted with it, and went over to collapse into her beanbag chair.\n\nI let her wallow for about half a minute before deciding to interject. \"You know, you still get most of the formulas. It's not like the final is just going to be questions like that. Even now you're still looking at a pass here.\"\n\n\"Oh my God, Quinn, no,\" she protested. \"I'm a fucking idiot. I'm going to forget, like, all of the formulas as soon as the paper is in front of me. I need to know all of them if I want to have, like, any kind of chance at all.\"\n\nI guess I could understand that. \"Well then, we'll pick it up after you have a moment to yourself,\" I offered.\n\nTaylor sighed to herself and brought up her phone. \"I feel, like, really underprepared. Can we do more studying on Sun-... no, shit, I'm busy Sunday... Saturday?\"\n\nI winced. \"Actually, sorry, I'm kind of busy on Saturday.\"\n\n\"Yeah, really funny. I'm being serious.\"\n\n\"So am I.\"\n\nTaylor looked up from her phone. \"Wait, what? Really? What's going on, is it a work thing?\"\n\nHow much was I able to disclose here? It would have been really cool to brag to the most popular girl that I had a date and she would have to wait for me, but that would have likely been the worst thing to do in that situation.\n\n\"I have a date on Saturday.\"\n\nTeenage hormones and the desire to brag won me over.\n\n\"A... a date?!\" Taylor asked, half in anger, half in shock. \"Wait, what? You're having dates now? When were you going to tell me?\"\n\n\"You didn't tell me when you were going on dates with Joel,\" I argued back.\n\n\"That's different!\"\n\n\"Yeah, I guess it is, aren't you his girlfriend now? Why was I the one that had to convince you that we shouldn't begin this studying session by fooling around with each other?\"\n\n\"Oh my God, Quinn, I can't have this convers-\" She stopped herself mid-sentence. \"Wait. I never said to you that Joel and I were boyfriend and girlfriend now. Did he tell you that?\"\n\n\"No,\" I admitted, instantly wishing I lied.\n\n\"...So what, this is just, like, your own intuition?\" she asked.\n\nI can't imagine me implicating Milo, or even putting a possible spotlight on him, would do any good for this conversation now, so I just shrugged. \"I heard through the grapevine you went on a second date with him and that things were getting serious. Passing by, hearing conversations, stuff like that.\"\n\n\"So what, you're trusting what you overheard in the main hallway and taking it as, like, the truth?\" she asked. \"You could just ask me instead.\n\n\"Okay, fine, are you and Joel officially a couple?\"\n\n\"No, we're not!\" she protested. At this point, either she or Milo was a liar. They both clearly had their potential reasons to lie, and I had to figure out who. \n\nBut I wasn't going to figure it out today. \"Okay, I'll believe you. I'm just nervous fooling around when there's the possibility of, y'know, cheating on the table.\"\n\n\"And does the person you're about to date know that you're doing this with me?\" Taylor challenged me. \n\n\"No, but that's because I know that you don't want me talking about anything to anyone about us,\" I answered promptly.\n\n\"Well, yeah, but I'm not blabbing about us to anyone either,\" Taylor countered.\n\n\"Not using my name, sure, but I know you've been bragging to your friends about having a boy you can contr-\"\n\nOops. There was no way I could take that back. It was out. Taylor's cute little chipmunk face was now twisted into a scowl, and her eyes were staring daggers into mine. Immediately, they softened. \"Okay. I'm sorry.\"\n\nThat was such a relief. \"I don't mind, I'm just confused. I thought you didn't want the fact we slept together getting out.\"\n\nTaylor sighed and looked around the room. She held up a finger as if to wordlessly say, 'one second,' and walked to some other part of the basement, eventually coming back with some kind of alcoholic drink.\n\nShe popped it open, and looked at me slyly. \"If you want to do something later, I'll tell ya while I'm sober, I consent,\" she told me with a dry smile, as if we were sharing a joke.\n\n\"Wait, hold on, halt,\" I frantically said before she put it to her lips. \"How am I going to get home later?\"\n\n\"Oh, mom can give you a ride. She knows I drink sometimes. It's no biggie.\" She took a swig. \"Okay, so, yeah, on some level, like, yeah, I don't want it getting out. The big people this can never reach are your brother and Mrs. Li, for obvious reasons.\"\n\nI nodded in agreement. \n\n\"I think, out of everyone, my friend group knowing would be the least... bad.\" She took another drink. \"They know me. They wouldn't judge me too hard. I've done worse.\" She offered me the bottle out of courtesy, knowing my answer would be no, before taking another drink. \"But clearly, you already know that. Was it this mysterious 'grapevine' too, or is it one of them?\"\n\n\"If, hypothetically, it was one of them, would I have to say which one?\" I asked.\n\nTaylor grinned. \"You're making this too easy for me, Quinn,\" she told me. \"No, you don't. Okay, so one of them blabbed to you, so I guess they put the pieces together. So I guess they all put the pieces together.\"\n\nExcept Morgan, right? I gotta imagine Taylor's best friend wouldn't ask me out knowing I was still doing stuff with her, right?\n\n\"Can I ask about Joel?\" I inquired. \"Would it be bad if he knew?\"\n\n\"Yeah, you had to ask about him, didn't you?\" Taylor mumbled, practically to herself, then took another generous swig. \"I dunno. Probably? Quinn, I told you half the story before. You wanna know what high school is?\"\n\nI nodded.\n\n\"I think every single boy I've been with has cheated on me. Every damn one.\"\n\nI took in that information. \"So... it makes you not trust boys?\"\n\n\"Well, yeah, obviously, but like, it made me... realize I can do whatever. If Joel is cheating on me, all I do by cheating on him is lose the fuckin' high ground.\" She took a sip and thought to herself. \"And, like, it's not like I was gonna use it anyways. I confront him, he makes a big thing about his parents divorcing or what-the fuck-ever excuse it is with this boy, he makes me cry, I stay by his side.\"\n\n\"So it's an open secret in high schools? Cheating?\" I asked.\n\n\"Never heard the term before, but, like, probably,\" she replied. \"I didn't get to choose this shit, but like, if every boy is gonna do this to me, it feels nice that I can at least be allowed to do the same shit.\"\n\n\"An equally oppressive system is still equal to both sides,\" I mused. \"It would be better if he wasn't, y'know, cheating at all...\"\n\nTaylor took her lips off the drink. \"Wow, insightful, Quinn. Never fucking thought of that. My problems are solved.\"\n\n\"Yeah, point taken.\"\n\n\"So, are you mad at me?\" she asked.\n\nI didn't answer immediately. \"I don't think I am,\" I replied slowly. \n\nShe sighed. \"Good. So, me and Joel are like... open. And if any drama shit hits the fan, you can just pin it on me, sound good?\"\n\n\"Well, I'm not afraid of consequences as much as I just don't want to hurt you... or him...\" I mumbled.\n\n\"Him? What did he ever do for you?\"\n\n\"I don't think anyone needs to do anything for me to make me want to not hurt them,\" I replied.\n\n\"Well, then you can decide right here and now, are you going to want to continue doing this with me, or do you want to go home right now?\" she asked.\n\n\"...And what about the studying?\" I asked.\n\nTaylor frowned. \"Ugh,\" she conceded.\n\nI don't know why I thought of this right there and then, but I felt the familiar rush of adrenaline as soon as I thought of what came out of my mouth next. It was time to be bold again.\n\n\"I can't do Saturday, but I'll write you a reference sheet and I'll do anything you want tonight if you, drink in your system, can finish the lesson tonight.\"\n\nTaylor paused, her drink at her lips, and gave me a sly smile. \"Anything, huh?\"\n\n\"Excluding going all the way.\" Milo was right: I wanted to save that for someone I was dating.\n\nAnd I guess I was going to be dating someone soon...? I shuddered, thinking of Morgan in that way.\n\nThough I needed to push that to the back of my mind now. Taylor clearly took up the offer with eagerness, and practically leapt out of the beanbag chair, opening her textbook. \"What page, what page?\"\n\n***\n\nTaylor was an absolute champion. As early as ten-ish minutes into the new session, the drink started to hit her, and yet still she persisted. I did not get how, but it seemed like the drunker she got, the more she balanced it back out with her own determination. \n\nTo be honest, I didn't really think she would do it. I also didn't think she'd be as eager as she was. I just figured that it might have been a good suggestion to get the studying back on track, and to avoid giving a yes-or-no answer to her ultimatum. \n\nThe trouble was, as the drink hit her more and more, she got more and more suggestive. She was still doing her best to concentrate on the lesson, but something told me she was trying to distract me, as if she just needed to prod me enough and I would be the one to say, \"Okay, we've studied enough, let's go fuck.\"\n\nBut she hung on until the end, and surprisingly, the end came. If I didn't know any better, I'd almost say she was a better student when she was drunk... well, heavily tipsy and motivated.\n\n\"Zero point seventy-seven,\" she finished, not drunk enough to slur her words yet tipsy enough that I could hear the alcohol affecting the way she talked. \"Did I get it right?\"\n\nI stared at the page in amusement. \"Yeah, you did,\" I mumbled. \"Huh. I don't suppose they allow alcohol at finals, do they?\"\n\nTaylor just laughed and flopped onto her back, grinning at me. The entire time we were studying, she would wiggle her butt in my direction, knowing I was looking. Sometimes she'd grin and look back at me, knowing what I was looking at the entire time.\n\nHer eyes flickered down to my crotch. \"So, were you distracted by something?\" she practically purred.\n\nI felt like such a lothario. The most popular girl in school got motivated to study because, as a reward, she would get to suck my dick. All the while, her best friend told me she had a crush on me. \n\nAdrenaline surged through me. I grabbed my crotch, tracing the outline of my hard dick in my shorts, and smiled at her. \"Were you?\"\n\nTaylor gave me an 'ooh, you devil' smile, then stood up. \"Well, aren't you getting... bold,\" she told me, leaving her shirt on but unbuttoning her pants. She got them off, having to wobble once or twice, no doubt the drink affecting her. Eventually, she was just in her shirt and panties. She motioned for me to come closer while hooking her thumbs into her underwear and letting them ride down.\n\n\"I want you to eat me while I'm still standing,\" she practically moaned, the excitement making her eyes glossy.\n\nMy eyes widened at her request. My dick jumped in my pants. I started to get up to walk over to her, but she held up a hand.\n\n\"You know the deal,\" she almost sang. \"Crawl.\"\n\nI smiled in disbelief. It didn't really get any less shocking hearing that come from her. It was clearly what she wanted though, so I was happy to oblige. I slowly got back down to the ground, getting lower and lower, matching her hand until my face was next to the floor. Exhaling into her shag carpet, I began to slink myself along her floor as she kicked her panties to the side, getting ready for what was to come. \n\nShe bit her lip as she saw me getting closer, inching closer and closer to the object of my desire, her pussy. It was already slightly glistening with her anticipation, and I couldn't help but run my hands up her legs as I approached her and straightened myself out. \n\n\"You love this pussy, don't you?\" she asked me.\n\n\"I do,\" I told her, staring straight at her womanhood, transfixed.\n\n\"You do... what?\" she asked me, a smile growing on her face.\n\nI looked at her, lost, and her smile grew. \"You do... mistress,\" she told me, her smile turning mischievous.\n\nI felt my cheeks burning. \"I... y-yes, mistress,\" I managed to say.\n\n\"Good boy,\" she told me, moving so that her legs opened slightly more. Taking the hint, I rose up further, catching her scent as my head got closer and closer to her. She was already wet. If I had to guess, she was probably wet for a while. I bet those panties she discarded were soaked with her juices, and this was just what was left. It just made her mathematical feats that much more impressive - her thoughts had clearly been clouded with lust for a while. \n\nThe physics of eating out a girl - no, not a girl, the only girl I had ever eaten out, Taylor - were much the same. Instead of on the floor though, on equal ground, now I was going up. My tongue only needed to start tracing its way near her labia before Taylor started gripping my hair. Clearly, alcohol made her horny like a wild animal. \n\nWhen my tongue first ran along her slit, for the briefest moment, a flash of Morgan entered my mind. Was I doing something wrong here? Was I wrong to acquiesce to Taylor like this? Should I have shown more restraint?\n\nI dismissed the thought. Morgan and I haven't even gone out yet. We didn't declare our monogamy. Taylor made it perfectly clear how high school worked. And now, she was making something else perfectly clear - she was hornier than I had ever seen her. \n\nShe started grinding her hips into my face and moaning a little loudly for my taste, especially knowing her mother was likely just upstairs, and I'd have to share a no doubt awkward car ride with her later. I prayed she wouldn't hear this, or if she did, that she wouldn't ask any questions. My tongue made contact with Taylor's clit, and all hope of being quiet and subtle went out the window.\n\nI could practically feel the pleasure flowing through Taylor, and I couldn't help but get into it myself. I started using my hands too, at first running them up and down her sexy, smooth thighs, then using a thumb to rub her clit as my tongue worked its way along her vaginal slit, then switching places with my tongue on her clits and two fingers in her pussy. I could tell by the way she moaned (and by the way she could barely stand up, even against the wall) that this trick worked particularly well on her. Had she been on the ground, she would have been writhing around with the moves I was pulling on her. \n\n\"Fuck yesss, Quinn...\" she was moaning, grinding her hips into my face with a ferocity she hadn't yet shown me. \"That's a good boy... such a good boy... keep fucking me with that tonuge, yes, yes, oh fuck...\"\n\nEventually, she had to keep a hand over her mouth just to get herself to shut up. She still rode my face like that for a good five or so more minutes, well after the point where my tongue felt like it was going to start cramping. Still, I persisted, knowing that my Mistress worked hard and did her math work, so the least I could do was let her gush on my tongue.\n\nAnd gush she did. With her standing up the way she did, I could feel her entire body contract as her orgasm approached. I had learned from her that if a woman's orgasm approached, don't 'really let her have it' or anything that one would read in a porn story (Did people really read those for sexual advice, anyway? I hope not), just keep going at the same pace. It's the pace that got her on the road on an orgasm in the first place. \n\nShe rode that trail as best as she could, getting the full motion of her hips into it, making sure she was riding my face for all her worth. The moment her orgasm hit was almost audible, as I felt her entire body relax and yet climax as torrents of pleasure crashed through her, causing her body to shake and practically lose control. Her mind, and body, was giving way to the feelings she was feeling.\n\nOnly trouble was, who was under that body? Me. At first she felt like she was mashing her pussy into my mouth again, but as quickly as a second later, it was clear that her body was crashing to the floor with me hopelessly stuck below. I had to clumsily both evade her taking me down, head-first, with her, as well as assist her down as she moaned and panted and practically couldn't see straight in orgasmic bliss. \n\nShe slid down the wall with me carefully helping her as she struggled to regain her breath, a good kind of struggle I should think. In between breaths she was biting her lip and adjusting her hips, as if trying to remember or recreate the moment that just transpired for her.\n\n\"Wow, Quinn,\" she breathed, her first words since she clamped her hand over her mouth. \"Fucking wow.\"\n\nI smiled at her warmly, not exactly breathing normally myself. Eating her out always excited me - from the erotic moaning to her smell to, frankly, the way she ordered me around and called me her good boy. All of it was so tantalizing to me, and it always left my cock screaming for more.\n\nThis was a fact that did not escape Taylor's notice, as her eyes drifted lazily to my crotch once she had regained some kind of consciousness or autonomy. \"I think... you've earned yourself a little something, Quinn. Take off your pants.\"\n\nEven in a state like this, even with what had happened, she was asking me this. \"Are you s-\"\n\n\"Take. Off. Your pants,\" she ordered, her voice mostly sharp, softened only by her tipsiness.\n\nThey were shorts, not pants, but still, I was happy to oblige. I started to get up to take them off, but Taylor held up a hand, motioning for me to stay on the floor, grinning tipsily as she did. Chuckling to myself, I remained on the floor and wiggled my way out of my shorts, feeling almost a little silly as my cock sprang forth, my shorts still barely only halfway down my legs.\n\nEvidently, Taylor decided that halfway was good enough. In one motion, she sprang forth and landed on top of me, smiling at me, looking me in the eyes, and running her fingers over the head of my needy, eager, ready cock. Her fingertips found a bead of precum oozing from the tip and began to circle it around the head, coating it in my own eagerness as I had seen from her vagina only moments before. \n\nShe teasingly ran her fingertips over the head of my cock for a few more moments before giving up on that process and engulfing my entire cock, too hungry and horny to pretend she was going to give me the slow treatment. Her expert mouth began working its magic, with every muscle in her mouth stroking my shaft in just the right way.",
        "Taylor wanted to look right into my eyes while blowing me, as the first few seconds of this blowjob proved, but pretty soon her eyes blissfully and slowly closed and she began moaning on my cock. I could feel movement happening beneath my feet, and realized the little minx was, just moments after her last orgasm, fingering herself and moaning on my cock as she blew me! I quickly made a mental note that, if we were to keep this up, I'd need to see if we could have another night when she wanted to drink, because the experience was out of this world. \n\nTaylor looked so cute with her eyes closed in concentration, her mouth full of my cock, and her head bobbing up and down on me, especially knowing that she was now furiously rubbing her clit at the same time. In the best way possible, Taylor was a total pro, and here I was getting to enjoy all of the fruits of her labor! It definitely helped that she had such incredible skill when it came to doing a blowjob. \n\nI was getting better at lasting longer with her - no doubt something that was part of Taylor's long-term plan, since it was evident she loved sucking cock - but at this point after all that teasing and now through her efforts, there was no way I was going to last long at all. \n\nI could barely make any guttural noises, let alone warn Taylor in words, that my own orgasm was approaching quickly, but luckily, she got the message. And when she did, I was treated to a visual that I thought I wasn't going to see in a million years.\n\nTaylor stayed true to not having any penetrative sex with me, but in a surprisingly coherent way given her state, she quickly sat up on me and started jacking me off with her hand, the head of my dick resting right above her pussy. Think if a girl was riding me cowgirl style, but instead of on top of my cock, she was slightly further down my body, resting on my thighs. I could even feel her pussy making contact with my balls, leaving some of its wetness on them as they bounced up and down with her hand's thrusts.\n\nTaylor looked me in the eyes as she jacked me off, her hips grinding against me. She still had her shirt on, which made it even more erotic - this image of a tipsy good girl grinning naughtily as she practically rode me, her hand jacking me off, both of us clearly pretending I was inside her. \"Come on, Quinn,\" she begged in a lusty yet controlling voice. \"Cum for me. You know you want to. Fucking do it.\"\n\nThere was no way in Hell I was going to last with her doing that. With a feeble groan, I started spurting shot after shot high into the air, practically feeling my vision blur while Taylor Wise's hand completely drained my balls of any and all cum they had inside them. \n\nI threw my head back and groaned, feeling the electric fire of my orgasm spread throughout my entire body, still feeling Taylor grinding herself against me, eventually letting go of my cock and getting herself off of me, sitting down next to me. With a grunt of strength I lifted my head up to see she was looking over my no doubt cum-splattered body, biting her lower lip and lazily fingering herself.\n\n\"Oh, uh, sorry,\" I awkwardly began. \"I think I got some of me... on your shirt,\" I pointed out. I knew girls didn't like to have that kind of stuff happen, because it can stain their clothing or something.\n\nShe looked down at the splotch, smiling. \"I know,\" she murmured slowly, and quietly, bringing her free hand to it and rubbing her finger in it. She moaned. \"Mmm. It feels warm.\"\n\nI had died and gone to heaven. Taylor was fucking unbelievable. Every time she managed to surprise and shock me, from our sexual antics to... to everything! The way the school year was ending was absolutely bonkers, and I had a funny little feeling that things were definitely not winding down anytime soon."
    ],
    "authorname": "BashfulScribe",
    "tags": [
        "eighteen",
        "popular",
        "nerd",
        "interracial",
        "school",
        "high school"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/mutual-benefits-ch-07"
}