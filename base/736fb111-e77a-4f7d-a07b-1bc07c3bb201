{
    "title": "The Pirate King Ch. 06",
    "pages": [
        "This is part of an ongoing series - head on back to chapter one and catch up for the best experience! We'll still be here when you get back :)\n\nAlternate title; Minnie's Breakfast Special\n\nSorry this took a bit; had some issues with my control panel. Thanks again for your patience! Next chapter will be up in a week. \n\nAs always, feedback and comments appreciated!\n\n*****\n\nI woke up the next morning to find the Captain's body pressed against mine.\n\nSometime in the night the covers had been pushed back from the Captain, removing any barrier to this happening. As a result, or maybe inevitably, his body had found it's way into my arms, his forehead resting against my collarbone, his breath dusting my chest. He, in turn, had draped his arm over my hips and held me tight. Our legs were mutually entwined; I could find no single fault there.\n\nI didn't want to move. I had never felt so complete as in that moment; it was as if I had been as a song without the melody for years, and hadn't known. He was my melody. He was the sky and I was the sea. We were meant to be, inextricable, unbreakable together.\n\nBut I needed him to make that decision for himself. Awake, and sober. And I didn't want him to think I had come to him the night before for this, or for more. I ignored how my soul berated me and began to pull myself away.\n\nHe tightened his grip against me. \"Don't go,\" he muttered against my skin. I froze, every molecule in my being listening to his command. My body tingled, sparks radiating out from where his words had touched me, landing in my stomach and setting my entire body aflame. I had almost forgotten what it felt like to be under his spell. I nodded and settled back against his body. \n\nHe was still for a bit, and I thought he had fallen asleep again until he spoke. \"I thought it was a dream.\"\n\n\"I'm here,\" I told him and kissed the top of his head. I would never leave him again, not truly. There would always be a part of me with him, a part of him with me. I felt him sigh against me, his body melting into mine. \n\n\"You're shirtless.\"\n\nI didn't really know how to respond to that. I knew how this looked. \"I needed to clean something up last night.\"\n\n\"Shit.\" I could feel his scowl, feel his eyebrows knitting against my chest. \"Did I throw up?\"\n\n\"It's okay.\" \n\nHe didn't say anything to that. \n\n\"How are you feeling?\"\n\n\"Hazy,\" he admitted. \"And my head hurts.\"\n\n\"Will you let me get up so I can get you a glass of water?\"\n\nI felt his hand tighten against me, then, but he agreed. I lifted my hands over him, mindful not to hit his head with my manacles. The noise drew his attention.\n\n\"Oh, fuck,\" he breathed, \"Did I do that?\"\n\nHe looked so scared, so upset, that I immediately gathered him back up into my arms. \"Of course not,\" I told him. \"Why would you think that?\"\n\n\"I remember,\" he started. He wasn't looking at me, and that made me nervous. \"I woke up, and I saw you, and I remember being happy seeing you like that - shit!\" He hid his face in my arms. \"I thought it was a dream.\" \n\nWarmth passed through me as I felt him take refuge in my embrace, watched him turn to me for comfort. I wanted to sing; if you had asked me in that moment to fly, I would have tried, I believed the world so possible. \n\nI took hold of his chin and lifted it so that his eyes met mine. \"You didn't do this. This,\" I said, rattling my irons, \"was someone else.\" I smiled at him, seeing him take this in. \"Although you did say it was hot.\"\n\n\"Fuck.\" He pulled from my grasp and hid again as I chuckled. \"I'm sorry.\"\n\n\"Don't be,\" I reassured him. \"You were drunk.\"\n\n\"But I still knew. I know how much you hate these.\" He drew a finger over the links. \n\nI watched him, waiting. Eventually I prompted him. \"So is it?\"\n\n\"Is it what?\"\n\n\"Hot.\" I muttered the word into his hair.\n\nHis finger froze. \"No,\" he whispered. \"It makes me livid.\" He paused for a moment. \"Who did this?\"\n\nI didn't feel the need to protect Wicky from the Captain. My motives were selfish; I wanted that man all to myself when he drew his last breath. \"They thought it would keep me from you.\"\n\nHe thought about that for a moment. I watched as a frown moved over his perfect lips, his beautiful face. \"Maybe it should have.\" He pulled himself up, lifted himself from my arms. \"You shouldn't have come; I'm dangerous when I'm drinking.\" Quietly, he added, \"And you said I wasn't to touch you again.\"\n\n\"You asked me not to leave you.\" I stayed where I was, looking up at him. Dangerous? I thought. He'd been nothing but affectionate. I suppose he'd attacked Natch, but he'd been deterred easily enough. \"And I was wrong.\"\n\nHe didn't move right away, and I was afraid that my words hadn't reached him, that he carried his guilt so tightly wrapped that even my presence wouldn't convince him of my word's legitimacy. Then he reached down and gently corded his fingers through my hair, and I breathed a sigh of relief. I lifted my head into his hand, and he released whatever breath he'd been building up, whatever tension he'd let himself create. \n\nWe stayed like that for a long time, just existing. His fingers passed through my hair again and again, each time more steady, more sure of their path, their right to exist on my skin. I tingled under his touch. I needed more, but I knew he wasn't ready. I could wait. For him, I would do anything. \n\n\"Did I... I mean, I didn't hurt anyone last night. Right?'\n\nI shook my head, I little surprised by the question, then reconsidered. \"You held a knife to Natch.\"\n\n\"Natch?\" His fingers froze; he sounded genuinely surprised. \"What for?\"\n\nI let myself run my hand over his skin, enjoying the texture, the way I could convince his blood to drop beneath the skin and leave patterns in the wake of the pressure I applied. He wasn't going to like this answer, I thought. \"May be that he leaned against me,\" I said. He cursed. \"I had my arm around him, too.\"\n\nHe was quiet a long time, fingers still against my head. \n\n\"Jealous?\" I asked.\n\n\"No.\" He sighed. \"That boy deserves to have people in his life he trusts to touch. Fuck,\" he finished, frustrated. \"What else happened?\"\n\n\"I took the knife.\" You asked me not to leave you, I thought. You touched me so sweet my heart broke and healed, all in an instant. \"You were nothing but affectionate.\"\n\nHe frowned. \"Overly?\"\n\n\"No, no, just.\" I brushed my fingers over his stomach lightly and thought I saw him shiver. \"Sweet.\" \n\nHe nodded, leaning down to kiss the top of my head. I closed my eyes and let his warmth flood my being. \"I should have keys that fit those, you know.\"\n\nI looked up to him, saw him looking at the irons. If he wanted me to keep wearing them, I would. At this point I understood that I was safe around him. \n\nHe pointed at the chest across from the bed. \"Under the back left corner of the covering. That's where it was last time I needed it, anyway.\"\n\nI nodded and rolled out of bed, immediately heading for the bathroom.\n\n\"Hey! Where are you - That's not -\" \n\nI emerged with his cup of water that I pressed to his hands. \"You need to stay hydrated.\" \n\nBut his eyes were wide and staring, and only then had I realized what I'd done. \n\n\"Oh,\" I said, knowing exactly what he was reacting to. \"I thought maybe, the other night...\" but of course he hadn't seen it. We'd left my shirt on; the scars had been covered. \n\n\"I didn't know,\" he whispered. His hand was in his hair, pushing his forehead smooth. \"I didn't - fuck, sailor.\" \n\nI sat down on the side of bed and watched him struggle with this. \"They're not as bad as they look,\" I lied, trying to keep my voice soft. He laughed incredulously and then immediately put a hand over his mouth. \n\n\"I didn't know,\" he repeated. \"Fuck, how did I not see those?\"\n\n\"I hid them,\" I told him. It was as simple as that. I reached out and took his hand. The rattling of the manacles caught his attention. He didn't seem to be able to look away; I pulled my hand back. \n\n\"Take them off,\" he whispered, his voice shaky. \n\nI looked at him, concerned. \"Captain -\"\n\n\"Take them off.\" He looked away. \"Please.\" I could hear the pain in his voice and moved quickly to the chest where he said I would be able to find the key. It was right where he said it would be, and I removed the irons as quickly as I could. \n\nI turned to find him staring at my back again, and was surprised and horrified to find that he was crying. \"Hey.\" I moved towards him quickly, concerned at what effect I might have had on him. \"I'm here, I'm okay, everything is okay.\" \n\nAs I reached him he turned away, trying to turn his pain to anger but I would have none of that. I grabbed his hands in mine and searched his face. \"It's okay.\" I let my voice tap against his chest as gently as I knew how, turned my words into lapping waves. \"We're safe here.\"\n\n\"I'm sorry.\"\n\nMy hand moved up to cup his face, caressing his cheek. I wiped away a tear and felt it's ocean wetness against my finger. He sighed and leaned into my hand, leaned into it with his breath, his body, his very expression. He had nothing to be sorry for. Why was he apologizing? I kissed him on the forehead and tried to make him understand. \n\n\"I didn't... You've been hurt before, and then...\"\n\n\"You did nothing wrong,\" I whispered, understanding his concern. \n\n\"Fuck.\" I smiled at his eloquence, tracing my fingers over his chin. \n\n\"I'm okay,\" I reminded him again.\n\n\"But you weren't.\" He wasn't looking at me. \"And I hate that. To think of you in pain...\"\n\nI didn't have anything to say to that, but it filled my stomach with a warmth that was wholly unknown to me before I had met this man. I kissed his hairline gently and felt the exhale that proved to me that he was going to be alright. \n\nWe stayed like that for a moment, my hand on his chin, my lips on his head. Then he reached up and laid his hand on mine. \"I just.\" His voice was almost to quiet to be heard. \"I can't believe I'm touching you.\"\n\nI wanted him to touch me more. He was being so ginger, so careful, but I had a feeling that was as much for him as for my perceived self. I nodded against his head.\n\nHis hand tightened on mine. \"Why,\" I thought I heard him say.\n\n\"What?\" He didn't respond, and I lifted his eyes up to mine. \"Why what?\"\n\n\"Why did you come back?\" He met my gaze for an instant then looked away. \"Those scars on your back. You've been hurt before, you should know to stay away.\"\n\nThose words emptied out whatever warmth I had been feeling. You are nothing like this, I wanted to tell him. You are worlds apart from this. This was hell and betrayal and death, and you are light and darkness and everything that I need but I had already told him this, or versions of this so many times and I didn't know how to make him believe it so instead of trying to find words I simply lifted his lips to mine and kissed him. \n\nThe kiss was not passionate. It was not full of fire, or sparks. But it held the ocean, and the sky, and everything that was right in a world that tried to keep us so wrong and by the end of it I wasn't sure which of us I had been trying to console, because I was crying too. \n\nI looked down at him, tears in my eyes, and smiled. \"How could I stay away?\" I asked him, and I watched my words slip into his soul and become like stars and he reached up and kissed me again. \n\nI kissed him back, lingering and sweet. I never wanted this to end, just lying with him, existing in the simplest of ways. When he lifted my head it was only to rest his forehead upon mine, lips just out of reach. I had shifted down below him, and his thick black hair cascaded around us, sheltering us from the world, keeping us contained and safe and away from those who would have us apart.\n\nWho could have us apart? He was my world, and could begin to believe that I was his. He lifted my chin, gently, raising my lips to his again, and I lost myself in the realities we created. \n\nThey were instantly shattered when a knock sounded at the door. \n\nHe didn't let me pull away, not right away. He kept his fingers on my chin, tighter now, as if he could feel something slipping away from him. It wasn't me, I wanted him to know. It would never be me. I was his, now and forever. I lifted myself and kissed him deeper, taking advantage of his surprise to break from his grasp.\n\nThe noise he made as I pulled away could have broken me, if I were not so sure that I would return. \"The door,\" I said quietly, sliding out of bed.\n\n\"They'll go away.\" He caught hold of my hand and pulled me back. I let myself be sucked into his orbit for another kiss, soft and long and forever and the only thing that mattered. But the knock came again, and I pulled away. \n\nHe fell back against the wall and watched me, frowning, as I shoved the manacles under the bed. My shirt would be out of sight in the bathroom, and even if they came in it was unrecognizable. I looked around for a place to hide.\n\n\"What are you doing?\" I held my finger to my lips and decided that just behind the door would be the best spot; I could open it to conceal my body. There was nowhere else to hide my bulk. I positioned myself and nodded to the Captain, my finger still on my lips.\n\nHe nodded back, then called for the knockers to enter. The door opened, but no figures stepped through. \n\n\"Just wanted to see if you needed anything, Cap. Breakfast, water...\"\n\n\"No, thank you Ichor. I have everything I need.\" His gaze traveled to me for a moment, and I felt my heart flutter. \n\n\"Aye, Cap. We're right outside if you find you have need of anything. Just shout.\" The door began to shut.\n\n\"Wait.\" The Captain held up his hand, peering out. \"Is that Natch?\"\n\nThe door froze. \"Aye, Cap.\"\n\n\"Will you send him in?\"\n\n\"Uh.\" I could sense Ichor's hesitation, but couldn't tell if it was Wicky's influence or worry for his mate. \"Yeah, Cap. Whatever you want.\" \n\nThe door stayed ajar as he leaned out to get Natch's attention. I was a little concerned at the Captain's nonchalance; he couldn't know that Natch was a friend. But I trusted him, unequivocally. He would keep me safe. \n\nThe door opened a bit; Natch's voice floated through. \"You wanted me, Cap?\"\n\n\"Aye.\" He gestured him in, then held up his hand. \"Hold, that's far enough. And leave the door open.\" Natch obeyed unthinkingly. The Captain had given me perfect cover from prying eyes, and I was thankful, but I still didn't know what he wanted with the boy. From the way Natch stood before him, nervously, he didn't either.\n\nThe Captain swung his legs from the bed, and I watched him, worried. He looked vaguely unsteady on his feet as he made his way over to Natch. Natch, for his part, also looked vaguely unsteady watching the Captain approach. \n\nWhen he reached Natch, the Captain put his hand on the smaller man's shoulder. I saw him tense, unsure of the intention, but it was just to steady him. He was hungover, and possibly still a little funny from the hit he took to his head. I frowned as he gathered himself. \n\n\"You alright?\" he asked Natch. Natch nodded, a little hesitant. \"Good. I'm sorry for what I did, how I acted. You didn't deserve it.\"\n\n\"It's alright, Cap.\" He patted the Captain's hand, and the Captain smiled. I could see his legs shaking. \"I should know better than to touch -\"\n\nThe Captain was going down, I suddenly realized. I closed the door behind Natch, causing him to spin. As the Captain lost balance I darted forward, catching his frame before it hit the floor.\n\n\"Ghost,\" Natch hissed. \"Holy fuck, you fucking idiot.\"\n\n\"Whoah,\" the Captain mumbled.\n\n\"Do you know what Wicky will do when he sees you here?\"\n\nI didn't answer, my eyes on the Captain. \"Why am I so unsteady?\" he asked me, clinging to my shoulders.\n\n\"You hit your head.\" I guided him back to the bed. \"And you need food.\"\n\n\"I'm fine.\" He leaned around me. \"You shouldn't feel like you can't touch - did you call him Ghost?\"\n\n\"He will kill you,\" Natch hissed. \"He'll kill me, for being here with you, oh, holy fuck.\"\n\n\"Natch,\" I said calmly. \"Please go to the kitchen and tell Cookie I need a Minnie's Breakfast Special.\"\n\n\"Are you even listening to me? He's on a rampage, trying to figure out how you busted out of your cell -\"\n\n\"Don't say I need it then.\" I gazed at him levelly. \"Get it for the Captain.\" \n\nHe stared back at me, his mouth stuck open. \"Okay,\" he finally said. It was the only option I had given him, and I was pleased to see him take it. \"Just.\" He shook his head. \"Okay.\"\n\nI walked him to the door. \"Knock to be let back in. Once, then twice, then once again.\" He agreed, still shaking his head. \n\n\"I hope you know what you're doing,\" he muttered. I opened the door and let him out into the hall. \n\n\"He calls you Ghost?\" The Captain was giving me one of those funny looks again. I shrugged. \n\n\"It was a joke.\"\n\n\"Didn't sound like one.\" He readjusted, trying to get comfortable. \"And since when does Natch listen to you,\" he muttered. I climbed into bed next to him and he fell quiet, his arm reaching around my shoulder to pull me close to him. I responded by wrapping mine around his waist, letting my cheek rest on his chest. \n\nBefore long my other hand had found its way under his shirt, exploring the perfect expanses of his skin on his stomach. He shuddered under my fingertips, letting his body react as it would to my gentle enquiry. \n\n\"How come,\" he asked quietly, \"I have a shirt on and you don't?\"\n\n\"I already told you. I had to clean something up.\"\n\n\"Yeah,\" he said. \"Me.\" He pulled me closer to him. \"This isn't the same shirt I was wearing yesterday.\" \n\n\"No,\" I admitted. \"It isn't.\"\n\n\"Why didn't you just leave me shirtless?\" He traced his fingers up my arm and I shivered. \"I want to be closer to you.\"\n\nI felt my fingers slow. I wasn't sure how much of this he wanted to hear. How much I was supposed to have heard. \"You seemed to want to stay clothed,\" I settled on. \n\nHis fingers paused at that. I could feel a moment of hesitation dripping from his fingers over my skin, and it made me shiver again, this time quite unpleasantly. \n\n\"Not for you,\" he said quietly. I looked up at him, concerned, and he met my eyes with his dark ones, intense like I hadn't seen them since the night before. \"Whatever I said last night, it wasn't for you.\" \n\nI nodded, and he shifted his body down so that our eyes were level. I lost whatever concern I might have had in his eyes, in his lips, in the way they touched my skin. I wrapped my arms around his waist and pulled him as close to me as he could get. \n\n\"Closer,\" he whispered, shedding his shirt. I hated that motion for a second, hated how it came between his lips and my body, but in the next instant I found that everything was perfect because he was perfect and his chest was perfect and it was there for me. How long had I waited for this? How long had I denied myself? I let one hand explore his chest, feeling the way he pressed his bare skin against mine. I couldn't pretend that my body didn't react to this, and he didn't pretend not to notice, pressing against the growing bulge with his leg. \n\nI let forth a small gasp at the motion, felt my breath begin to come in a less controlled rhythm. I put my mouth against his neck and let him feel the change in my breathing, wanted him to know what he was doing to me. What he always managed to do to me. \n\n\"Closer,\" he whispered again. I knew what he wanted, knew an order when I heard it. My mouth refused to leave his neck, worshiping it's perfect arch, it's softness that made him moan and hard lines that made me crumble. My hand reached down, skimming over his stomach until I reached his waist and there it sat, fumbling at the laces of his breeches. When I got them loose he kicked them off impatiently, pushing his cock into my waiting and trembling hand. \n\nTo feel him, to feel him like this, it was a dream and a reality all collapsing into a supernova of feeling and I bit his neck to keep it all inside. He moaned and tilted his head back, gave me what I wanted and what I wanted was him. ",
        "His own hands were shaking, his body shivering between my arms. He wanted this as bad as I did, I knew. He sunk a hand into my hair, pulling my lips from his skin. I protested, heard myself whimper as he kept me from what I wanted, needed, but he didn't take me far, just rested his mouth against my ear. \n\n\"Get your pants off,\" he growled, his voice violent in his desire. The command strung through my body, snapping at my nerves and vibrating my soul loose from the parts of me that knew what I was doing. I had been denied this too long, and the way his command set me aflame turned me into something I barely recognized. I found myself moaning, pulling against his hand to press myself against back to his neck. My teeth scraped against his skin, causing him to gasp and twist, even as my hand began to work at his cock, picking a rhythm that his hips soon reciprocated. We tangled together, a mass of limbs and teeth and hands and cock until he suddenly ripped my head back again. I felt as though my eyes were spinning, it was so hard to focus. He pressed his forehead to mine and panted, trying to find his bearings.\n\n\"Pants,\" he finally commanded again. I nodded, able to follow the thread of his demand this time, controlling my own desire. As I took my hands from his body, I was surprised to find the path of my lower hand blocked by his. \"This one,\" he told me huskily, \"stays here.\" He guided it back to his cock; when I touched it, we gasped together. \n\nI stroked him as I worked on my breeches, our heads pressed together, our gasps mingled between our lips. I marveled at the noises he made, the little things I could do to make him twitch and collapse as he came undone under my fingers. Finally, my distracted hand finished with my pants and I kicked them off, tangling them with the sheets at our feet.\n\n\"Fuck,\" the Captain exhaled. \"Finally.\" He let go of my head to grab my ass with both his hands. I gasped as his fingers dug into me, pulling me up his body to just above his cock. His fingers spread my cheeks forcefully, not painfully but firmly, and I felt how open I was for him, how easy it would be for him to take me and a shudder passed through me. He felt it and froze.\n\nHis hesitation concerned me. My shudder had been one of anticipation, not of fear like I knew he must be thinking. I bit him again, wrapping my leg around his back. I wanted him to know I was okay. How could I be anything but okay when I was with him? He understood and relaxed, running shaking hands up my spine. I shivered at his touch. \n\n\"I'm sorry,\" he whispered, feeling my scars. \"I just don't want to hurt you again.\" \n\nI lurched forward, sinking my lips into his. I kissed him like he had kissed me the first time we met, that first night when I learned that I would need him always, a deep and passionate attempt to drive everything but me, now, here, from his mind. I didn't want him to think about the things I had told him before; I had been wrong. My words were not with me to explain that to him now. All I had were my lips, my tongue, my teeth, the way I could use them to take away his breath and give him mine. \n\nHe immediately reacted, his hips jerking up under mine. The tip of his cock rubbed in the crease in my ass, found my hole and I couldn't help myself, I moaned and gasped into his mouth, feeling my small noises slip over and under his tongue as he tasted them, caught them for his own. I knew I had to stay quiet, knew there were guards at the door but it was so hard, so impossible already with just the slightest of touches. \n\nI forgot that I had been doing this for him, that there had been a goal behind this kiss and I gave in to my desire, rolling my body into his. My hips rocked against him, my cock rubbing against his stomach even as the tip of his pressed, hot and slick, against my asshole. I wanted him, wanted him so bad, but his hand on my ass kept me from pressing down. I bit his lip in frustration and he pulled my hair, moaning. \n\nThree times I tried to pull back, and three times the Captain kept me locked against him, his hand tight in my hair. The third time, he pulled me back to his lips so hard I gasped and as my cock rubbed against his stomach I could feel him chuckle, a deep and dangerous sound, his belly jumping as he swallowed my delight until he became distracted once again by the feel of my tongue against his lips. \n\nWhen we finally came up for air, I felt light headed, my breath ragged in my chest. He didn't let me go far, trapping me against his forehead. Our eyes were locked, pupils tearing around the edges with all the things we held there. I couldn't keep my eyes off of his lips, swollen and perfect and I wanted them again, needed them again. I tried to move back to him but his hand in my hair kept me away. \n\nHis other hand had never left my ass. Dextrous fingers found their way between my cheeks, tracing circles around my hole. My eyes lost focus at his touch, my body reacting involuntarily. I felt myself push against him, my cock rubbing along his stomach, my head desperately pulling against his hand. He held me at bay, watching me writhe in his grasp.\n\n\"I want to be closer,\" he told me, his voice as ragged as his eyes. \n\nI nodded against his hand. I needed him closer, needed him inside of me. But he just kept rimming my asshole with his fingers. Suddenly, he stopped doing even that, his hand pulling away to rest on my lower back. I protested quietly, mindful of the men at the door. \n\nI could feel his hand shaking, knew it was from holding back. Let go, I wanted to shout. Do what you want to do; I want it too, whatever it is. But I had lost my words, lost them in the things he'd been doing to me. \n\n\"But I need to know that it's okay.\" \n\nI didn't hear him, not really. All I knew was that he'd stopped. Why the fuck did he do that? I thought. I was frustrated, needing him, my body wound up and my soul even worse. If I had been thinking, I would have been able to understand that he was scared, that the last time we had done something like this he had almost lost me. But where I was at that moment was; don't you fucking hold back on me now. \n\nLube, I thought. He just needs lube. I cast about for it, trying to see where it was. The shape of the jar finally caught my eye on the bedside table and I lunged for it, catching him totally by surprise by the suddenness of my movement. I felt my cock slide across his chest, heard him gasp. Jar in hand, I settled back beside him, pressing my ass into his hand and finding the tip of his cock with my asshole, my hips moving on their own accord. His eyes were huge, his mouth hanging just the slightest bit open. I pressed a kiss to those perfectly opened lips even as I reached down and pressed the lube to his chest. My leg wrapped itself back around his waist and I smiled against him, smiled with my whole body. \n\nWhen I lifted my lips from his I found him still shocked, but much less concerned. \"Fuck,\" he whispered, sounding a little dazed. \"Fuck, okay.\" He traced his hand down my back, but this time he wasn't feeling my scars. His fingers moved towards a sensitive and waiting destination, raising goosebumps as they went. I slid my mouth down his neck, waiting for what I knew was going to come next. When he slipped his fingers inside of me, I bit just above his collarbone to keep from crying out from the pleasure of it. \n\nHe played with me for a little, burying his face into the top of my head and listening to me whimper into his neck. His other hand, also covering in lube, made its way up around my leg. He shushed me firmly as it landed on my cock, his commands pushing the noises back from my mouth and turning them to choked exclamations in my throat. I could feel him breathing heavily against me, his now-slick stomach shuddering against the tip of my cock as his hand stroked my length, his other hand on my ass with two fingers in my hole. I felt him push a third in and wanted to cry out, but he gently, coldy, sweetly commanded my quiet and I made my body obey. \n\nI thought about begging him to fuck me, breaking down and using my words to drive him to take me, but what use were words when my body so clearly needed him? I wore my soul just under my skin this time, made no attempt to hide it, had no illusions about why he affected me the way he did, and I knew that he could tell my soul needed him as badly as my body. I had no need of words, not unless he commanded them from me; besides, I was beyond them, my body shimmering with the sensation of his cock so close to entering me, his hand stroking my shaft. He pulled his fingers from my ass and I moaned, driving my fingers into his back. I felt his body press into mine. \n\n\"Ready?\" he whispered, and I nodded furiously into his neck. I'd been ready for fucking hours. I'd been ready for years. \n\nHe shifted beneath me, and I felt the slick head of his cock press against my hole. I gasped into neck and he cursed. \n\nWe both jumped when the knock at the door split the air.\n\n\"Shit,\" he muttered, his hand freezing on my cock. \n\nOne, I managed to think. Two more knocks sounded, then one again.\n\n\"It's Natch,\" I whispered. I reached down and grabbed the covers, pulling them up over our naked forms. He gave me a look, but I ignored it, settling back against him. He wrapped his arms around my waist, pulling me in tight and causing my sensitive dick to slide across his stomach. I gasped.\n\n\"He won't mind,\" the Captain said, dark eyes never leaving my face.\n\n\"No,\" I agreed, a little breathless. \n\n\"Tell him to come in, then.\" His eyes were so intense on mine. I felt his hand tighten on my waist.\n\n\"Natch,\" I called. I couldn't break myself from the Captain's gaze. \"It's unlocked.\" His fingers dug into me and I gasped. \n\n\"Say it,\" he commanded.\n\n\"Come in,\" I said, and I didn't think Natch could hear, but I wasn't saying it for Natch.\n\n\"Okay,\" he responded quietly, his eyes flaring and a smile flitting across his lips. \n\nOh, shit, I had time to think before the Captain slowly pushed into me. \n\nI curled around him, my fingers digging into his back, my teeth scraping his shoulder to keep my cries in my mouth. The pressure so slowly moved into me, the Captain, the Captain was inside of me, going so slowly and it felt so fucking good. \n\nHe pressed his lips into my hair, shushing me firmly but gently. I tried to obey him, but it was so hard when his cock was so perfect inside my ass. \n\nI heard Natch moving around the room, and wondered if I should care. Part of me must have, because I tracked him, unable to fully give myself to the sensations and the Captain. The Captain must have noticed. He ran his hand up and down my spine, adding another thing for my already overstimulated body to try and take in. I gasped for air against his neck. \n\n\"Relax,\" he whispered, kissing my temple. I felt his smile against my skin and relished it, the warmth of the expression mixing with his voice and the relentless press of his cock. \"You said Natch wouldn't mind.\"\n\n\"Fuck,\" I responded, but I felt my body relaxing under his touch.\n\nHe rested his chin on my head to talk to Natch for a moment, and I let myself focus on the things he was doing to me, to my body. He was fully inside of me now, base of his cock pressed flat against my ass, his fingers still flitting across my back, my shoulders, my waist. I couldn't track them; they were everywhere, nowhere, in all the right places at all the right times. This, I thought, this is as close as we can get. I kissed his neck gently and felt my body shudder with the intensity of the moment.\n\n\"Ghost,\" I heard someone say above me. \"Ghost, are you even listening?\"\n\nWas Natch still here? I turned my hazy eyes up and found his blue ones looking down, a serious expression on his face. \n\n\"Natch,\" I said, my voice slightly lost in everything that was happening in my arms, between my legs, inside my ass. \n\n\"You need to seriously get out of here.\" He blinked when I didn't respond. It was hard to listen to him.\n\n\"Make him leave,\" whispered the Captain in my ear. I felt myself turning into him as he kissed just beneath my earlobe.\n\n\"You should go,\" I said, but my voice was distracted and Natch shrugged it off.\n\n\"Wicky will kill you,\" he said. He's already said that, I thought. The Captain was still at my ear.\n\n\"Make him fucking leave,\" he whispered again, his eyes meeting mine, but this time it was not a wish but a command. As he spoke, his hand slipped over my chest, down past my stomach and landed on my cock.\n\nI moaned, feeling all of the sensations crash around that one focal point for just a moment. \"Natch,\" I said, my voice ragged. The Captain smiled to hear the way my voice ran from me. I needed Natch to listen to me, I thought. I pulled the sea from just under my skin where it sat in my soul, gathered it into my eyes. The Captain blinked and pulled back, surprised perhaps to see me turn so cold so suddenly, but this was not for him. I turned my head and met Natch's eyes. \n\nHe jumped, physically jumped away from me.\n\n\"Get out,\" I told him, and my voice was the sea, it carried shadows of the intensity I was feeling, the need I had been living under for days. It was cold and hard and crashed like a storm and Natch swallowed. He turned and scrambled from the room. \n\nI sighed, feeling the things I carried settle back into the various parts of my body. A gasp left my lips as the Captain reached out and pulled me back towards him.\n\nI wordlessly folded into him, feeling his hand come up to rest on the back of my head, his other still working my cock. \n\n\"You,\" he murmured in my ear. He might have said something else, but I had stopped listening because his hips began to finally shift, moving the teasing pressure that had existed inside of me for the entirety of Natch's visit. I moaned my approval into the small of his neck.\n\nHe fucked me quietly, gently, his rhythm always slow and steady. I didn't want anything but this. I was amazed at how good it felt to have such a controlled and tender pace; but of course it felt good. It was the Captain. We pressed against each other, our edges blurring with the pleasure of it all, the closeness of the gestures, our souls rubbing up against each other under our skin. \n\nI felt his hand trembling against my head, and knew that he wouldn't be able to hold off at this pace for long. Gentle was good, and tenderness was important, but we were not gentle men. He needed more, just like I did. \n\nI was right, his rhythm speeding up with his breathing, curses falling from his lips to land in my hair. My mouth responded, falling back to his neck. Wherever it landed it began to coax his blood to the surface, using teeth and lips to mark him as mine, always mine. He moaned into my hair and increased his rhythm again.\n\nHis hand was still pumping on my cock. I wouldn't last much longer at this faster pace. I tried to hold off, not sure if he wanted me to wait for his command, but it soon became too much. \"Please, sir,\" I tried, my voice unsteady between his thrusts and my moans. I wasn't sure I would be able to create any more words from the air I could barely keep in my chest, but he saved me.\n\n\"Come,\" he whispered in my ear, voice ragged. His command was all I needed to push me over the edge, and I felt my body seize around him as waves of intense pleasure flooded through my core.\n\n\"Fuck,\" he moaned. He must have felt my orgasm, must have caused one so deep it traveled all the way down to where his cock thrust in and out of my ass because his hips hitched in their rhythm. The hand in my hair tightened, and I cried out. Reflexively he brought his other hand, still covered in my cum, up to my mouth and covered the opening, trying to keep any other noises in. \n\nI gasped at this new form of control, watching his eyes go wide at the sight of me before him. He held my head back and watched me, one hand tight in my hair and the other pressed against my lips. I tasted my cum on his fingers and moaned. He was close now, I could feel it in the way he no longer shook against me but let his body do what it wanted, in the ragged panting that slipped from his lips mixed with curses. Then, suddenly, his hand dropped from my mouth to my shoulder, pressing me down on him. In the same moment he brought my lips to his.\n\nI kissed him, slipping curses over his tongue. I could feel him coming, the heat of him so deep inside of me I wanted to cry from pure perfection. I closed my eyes in the face of it, unable to take in anything but the feeling of him, of the fire inside of me, of the sea that roiled through my core.\n\nAt the end of it all, I didn't want to open my eyes. I was afraid that if I did, everything would turn to smoke. Maybe I would find that this had never happened; the tremors of pleasure sliding through my body were a dream, the hands on mine were a dream, I had made him up and I would open my eyes and wake in the mines, or alone somewhere on another ship, or dead at the bottom of the sea.\n\n\"You're shaking,\" he whispered. His voice was real, at least. I took that in, pulled it into my soul. \n\nI kissed his neck, lightly. His neck felt real. He had no room to talk; he had been shaking nearly the entire time. Tremors still moved through his limbs; those felt real as well. I readjusted my grip, pulling him closer. \n\n\"Sailor.\" His voice was light, reaching for me. \"Sailor, please look at me.\"\n\nI opened my eyes and gasped. His face was close to mine, and very, very real. My first reaction was to kiss him again, because how could I not? His lips were there, and they demanded it. His body relaxed against me, feeling the - dare I say it? - feeling the love in my kiss and reacting.\n\n\"Fuck,\" he said quietly when the kiss was over. He traced his finger over my cheek, his eyes following the path they took. He didn't say anything else. \n\nI let him look at me for a little, then settled back against his neck. He was still inside of me. Neither of us made any move to change that fact; we wouldn't be so close, then. It was important to be close, right now. I felt my breath collect in his collarbone as his fingers traced circles on my shoulder. \n\nI could have stayed there forever, breathing against his body. But we didn't have forever, and the world makes you remember that, one way or another. \"Aw, fuck,\" I heard him mutter. I looked up to see him lean his head back, his eyes squeezed shut. \n\nI suddenly remembered the night he'd had before. Hungover, bashed up, and now crashing off endorphins; he could not be feeling good. He needed food, and water. Now. \n\nI pulled myself from his body, gasping as his cock slid from my ass. I wanted to savor that moment, wanted to let myself enjoy it, but there were more important things right now. \n\nHe opened his eyes and frowned down at me, but I moved past him to where Natch had put down a tray of food. I settled against the wall beside it, reaching down to grab the Captain. He protested as I pulled him up between my legs, shutting up only as I leaned his head against my shoulder and kissed him. \n\nWhile he was distracted, I grabbed the bowl that Cookie had sent up. As the kiss ended I slipped it into his hand, then grabbed a spoon and pressed it into his other hand. I had a moment of indecision, then decided he should start with hydrating, so I took the bowl back from him and handed him the cup instead. \n\nHe looked like he was going to say something, so I kissed him again. I smiled down at him, happier than I had been in months. In years. My last motion was to pull the covers up over his lap, then I sat back and wrapped my arms around his waist. \n\nHe sat there for a moment, finding himself suddenly sitting leaned against me with a cup in one hand and a spoon in the other. Then he sighed, slowly laying the spoon back on the side table. I kissed the top of his head and he leaned into me further, letting his back press into my chest. I watched him take his first sip of the liquid in the mug.",
        "He immediately spat it back out. \"The fuck?\"\n\n\"Lime juice,\" I told his hair. \"Sugar. Salt.\" \n\n\"Salt?\" He frowned into the mug.\n\n\"Cures hangovers.\" I shifted my head so that I could look at him; he looked so skeptical I wanted to laugh. \"It's good for you.\" \n\nHe made a face, but took another sip. I smiled into his temple. \n\nWhen he was was halfway done with the cup I reached over and grabbed the bowl again. He grumbled, moving to put down the cup, but I pressed it back into his hand. I took the spoon and stirred the porridge, tasting it. Cookie added less ginger than Minnie, but Minnie thought ginger was a gift from the gods and could do no wrong. I gathered up another spoon and held it before the Captain's mouth. \n\nHe stared at the loaded spoon incredulously. \"Are you seriou-\"\n\nI took advantage of his open mouth and slid the spoon in, and he fell silent.\n\nHe let me feed him another two bites before he snatched the spoon from my hand. \"Can feed my fucking self,\" he snarled. I kissed the back of his head and held the bowl for him as he ate. \n\nAfter a time, he let the spoon fall into the bowl. I returned the bowl to the table beside us and wrapped my arms around his waist. \n\nBut he didn't go back to leaning against me. \"Sailor,\" he said quietly. I wasn't sure I liked his tone. It edged on nervous, riding the line between scared and determined. I pulled him back against me, making him feel my skin against his, my breath even and steady to be so close to him. I was comfortable with him. I was happy. Please, I thought, just let this be. Let it go. \n\nHe settled against me, but I could feel that he wasn't fully comfortable. \"Sailor,\" he said again. The edge slipped towards determination and I sighed. \n\n\"Yes.\"\n\n\"I need to know.\" He rested his cup on my hands, fidgeting with the metal. I took it from him and returned it to the side table along with the bowl, then took his hands in mine. He stared down at his hands. \"I need to know, so I don't do it again.\"\n\nI tightened my hands around his.\n\n\"I can't lose you,\" he said quietly. \n\n\"You won't.\"\n\n\"I did.\" He shifted over and looked up at me. \"And I can't do it again.\"\n\nThe look on his face brought an ache to my chest, and I felt the chasm of guilt open in my gut again. \"You won't,\" I told him again.\n\n\"I don't know that,\" he said, frustrated. Confused. Hurt. \"I don't even know what I did.\"\n\n\"It was a mistake,\" I said quietly. \"My mistake.\"\n\nHe took that in, then shook his head. \"I don't understand.\"\n\nI didn't want to say this. My stomach was opening so quickly that I was afraid I would be sucked away. I kissed him deep to anchor myself. \"I didn't realize. I didn't. I just.\" \n\nHe needed to hear this. He needed to know. I took a breath. \"You're nameless.\" He nodded, looking up at me with eyes that were big and beautiful and full of hurt, hurt that I had put there. \"With Wicky, I thought.\" It seemed best to just say it and so I did. \"I thought that it was for him, and I assumed that you used me.\" \n\nI watched his mouth drop open, his eyes sharpening as he understood what I was telling him, what that would have meant for me. He knew, now, what he was to me. He had always known, because I was the same to him. \"I'm sorry,\" I told him quietly. \"I didn't know that what you did was for me.\"\n\n\"Fuck, sailor,\" he exploded. \"Everything I've done since you've stepped on this ship has been for you. Every decision, every touch, every goddamn stupid breath.\" He stopped and closed his eyes. When he spoke again, his voice was choked. \"I thought I was doing what you wanted.\"\n\nI felt my hands tighten around him. \"I didn't understand.\" I kissed his temple softly. \"I was wrong.\" \n\n\"I was so fucking lost without you,\" he whispered.\n\nI didn't have anything to say to that. I held him tight and hoped that would be enough.\n\nHe wrapped his hands tight around mine and pressed against me. \"I thought you hated me.\"\n\n\"Never,\" I told him. \n\n\"I didn't know. I thought it was.\" He paused, collecting something. \"I was so rough with you, that last time.\" I could feel his emotion in how tight he held my hands. I let him squeeze as much as he needed, hoping that would drive whatever was within him out. \"You trusted me, and asked me to guide you, to help you for you first time, and I...\" He tilted his head forward, his hair tipping down and over his face. I leaned down after him and kissed the base of his neck. \n\n\"You deserve better,\" he said. His voice was getting lost in his hair; I closed my eyes to hear him better. \"You deserve to be held so soft, and I always end up hurting you.\"\n\nI freed a hand and lifted it to his chin, tilting his head back against my shoulder. His eyes didn't lift with his head, but I would get them up. I was here, and he was with me. The world was right. I kissed him gently, my lips lingering on his as I made him understand this. \n\n\"I deserve you,\" I told him. He frowned, those brows drawing together. \"And you deserve me.\" I kissed him again before he could come up with any stupid arguments; I was right, and that was that. He would come to understand it. \n\nIt took three more kisses until he was melted against me fully. On the last kiss, his arm reached up and wrapped around my head, twisting his shoulders into my body. He used his hand to press my mouth more deeply against his. \n\n\"Do you trust me,\" I asked him.\n\nHe froze at that, his arm holding my lips inches from his. He searched my eyes with his, the darkness in them swirling, for a long time.\n\n\"Yes,\" he finally voiced, sounding so surprised I smiled. I wasn't surprised, not in the slightest; I had known the answer before I had bothered to ask the question. But he needed to know it, too, needed to understand. \n\n\"Then trust that I will never let you hurt me.\" I smiled at him, but he didn't smile back. \"Besides,\" I continued, feeling my smile quirk around the edges, \"I like the things you do.\" \n\nHe looked at me so shocked that I had to kiss him again.\n\nHe indulged me, then let me pull him back against me, his head on my shoulder. I rested my chin on his head and wrapped my arms around his waist. I wondered what he was thinking about. I wondered if he was thinking about the things he had done, how I had reacted, trying to see if I was telling the truth. I fought to keep my fingers from tightening against him as my thoughts began to drift in that direction.\n\nHe reached out and took the cup again, looking at it thoughtfully.\n\n\"Who's Minnie?\"\n\nI was very still for a moment. That, I thought, was not where I thought this conversation was going. \"A friend,\" I finally answered.\n\n\"And Cookie knows her as well?\"\n\nI didn't want to out my friend, but Minnie had provided me another way. I smiled. \"Any good ship's cook knows Minnie.\"\n\n\"Is that how you know her? Were you a cook?\"\n\nI pressed my smile into his hair. He harrumped and sipped his drink. \n\nMinnie. I missed her, the ornery woman. I would have to find her after I got dumped on whatever island we were headed for. Her, and Sneg, and we'd need at least one strongman, and a ship. But not a crew, not a full one. I had a crew already. Had a steward who was good at his job, and loyal. Men who were decent at arms, if not excellent. A first mate picked out, if I could get my Captain to agree. \n\nBecause I had a Captain. He was coming with me. My heart sang to think of it, my cells vibrating with the possibilities.\n\nSo the crew, that was taken care of. All that really left was the ship.\n\nI looked at the man before me. Why not ask the Captain? \"What kind of ship do you want?\"\n\n\"What?\"\n\n\"When I come back for you.\" I felt almost giddy. Everything was perfect, and the world was at my fingertips. I drummed them against his stomach. \"What kind of ship should I bring you?\"\n\nHe turned to look at me. \"Come back? You're not fucking leaving.\"\n\nI blinked down at him, surprised. \"I have to.\" Tomorrow I would be marooned. That had been decreed by the ship's vote. \n\n\"I won't let you go.\" I heard the stubbornness in his voice and believed him. It frightened me.\n\n\"You have to. The men, the vote -\"\n\n\"I'm the Captain. What I say is law.\"\n\n\"Sir.\" I kept my voice soft in the face of the hardness he had suddenly brought into our space. \"I won't be gone forever. They can't keep me from you, you know that.\"\n\nHe stared at me, defiant and angry.\n\n\"Don't invite mutiny over something so temporary,\" I told him quietly.\n\nI watched the hardness drain from his face. It had been a shield, I saw, for the war that waged behind. The pain that still swirled. \"But I just got you back.\" He sounded like he wanted to cry; maybe he did.\n\nMy heart broke and I wrapped him up as tight as I dared. \"I need to go,\" I told him. \"I need to, for you, for your ship, for me.\"\n\nHe frowned at that.\n\n\"There are things that need my attention.\" I kissed him on his nose. \"Like getting whatever ship you desire, so that I can bring it and myself back to you.\"\n\n\"I like my ship,\" he told me stubbornly. \"I like you on it.\" \n\nMy eyes caught the healed cut that slid across his chin. \"Your sailors don't.\" \n\nHe pulled away. \"They don't matter.\"\n\n\"Captain.\" \n\nHe put his hands in his hair and wouldn't look at me. I sighed and leaned back, letting him work through it as he would. \n\n\"They won't accept you,\" he finally said. \"I tried, I've. They won't.\"\n\n\"No,\" I agreed. And they wouldn't. His men had fear, or at least half of them did. Maybe they would come around, maybe they wouldn't. But to them I represented the end to their protection, and they valued that over their Captain's joy.\n\nCowards.\n\n\"How's this,\" I offered, keeping my voice genial and soft. He had no reason to know my opinion of his men. \"I give you three months, three months to warm your men to the idea of you and I on the same ship. You give me the same amount of time to get a ship and bring it back to you. If you like mine better, we take the men we've won and the new ship. If not, the ones who have a problem will have another place to go.\" And I will kill Wicky regardless, I thought. And Natch will be your first mate. I reached forward and linked my fingers around his chest, burying my lips in his hair. He smelled like the sea and sweat, and I breathed it in deep. \"How's that sound?\"\n\nHe thought about that. I felt his body leaning into mine. \"Three months?\"\n\n\"Yes,\" I confirmed. I needed time to find my skeleton crew; needed to check up on a few things. I didn't know where he'd be dropping me off, didn't know how long it would take me to get to where I needed. \n\nWhen he spoke again, his voice was quiet and held none of the determination from before. \"It's too long.\"\n\n\"I'll be with you. I'll never not be with you.\" He nodded, understanding that, but also understanding that it wasn't enough.\n\n\"And how will you find me? We are hidden, we sail under false markers to hide ourselves from the King.\"\n\nI laughed, letting my mirth drift through my stomach and into his back. I could feel him frowning, even though I wasn't able to see it. As if he could hide on the sea from me. \n\n\"I'll find you,\" I told him. \"Have faith.\"\n\n\"A ship,\" he muttered. \"Who will you find to help you get a ship?\" \n\nI didn't respond. He would trust or he would not, and I already knew which he would chose. \n\nHe grumbled against my chest for a little while longer, nursing the drink in his hand. \n\n\"How come Natch listens to you?\"\n\nI didn't answer. I didn't have an answer, not really. I was the sea; Natch was a sailor. What sailor wouldn't listen to me? I traced my finger over his neck, looking at the damage I had done while under his influence. \n\n\"Sorry,\" I murmured, not sorry at all. He turned to me, brows pulled together and I smiled. \"A few marks, there.\" \n\nHis eyebrows raised and I got the distinct pleasure of watching his eyes turn from worried to mischievous. \"Are there, now?\"\n\nI nodded, kissing his forehead. \n\n\"Don't recall asking to be marked,\" he said quietly from somewhere under my chin. \n\nI froze, feeling a tingle start to build deep within me. There was that voice again, that damn dangerous voice. It drifted under my skin and turned my blood to ice, made my soul so hot. I shivered involuntarily. \n\nHis fingers traced my own neck, and I felt my head tilting back to give them more room, to extend the amount of skin they would be able to traverse. I could feel his appreciation in the way his fingers took their time, skipping over my skin, catching on my collarbone. \"You don't have any marks.\"\n\n\"No,\" I said, my voice a little too light. It was hard to find the depth that was supposed to be there when his fingers were making everything come untethered. \"I don't.\"\n\nHe flipped his body around, straddling me. \"How will they know that you're mine,\" he whispered into my ear. I shuddered; I was his to do with as he pleased, and he knew it. When his lips landed on my neck I gasped, my hands flying to hold onto his back.\n\nHe grabbed my wrists and drug them away. \"Oh, no.\" I could feel him smiling into my neck and I shuddered. \"You know better than that.\" I let him push my hands to my sides, felt his fingers spider up my arms, my shoulders, returning to my neck. \"Stay,\" he whispered, and I knew that I would have to even as all I wanted to do was touch him. \n\nOne of his hands slipped into my hair and I moaned, knowing what was coming. He pulled my head back, tracing his fingers down my exposed neck. They ended up in the soft spot at the base of my throat. I could feel their pressure against my breath, against my quickening pulse. \n\nWhen his teeth bit into my flesh, I cursed and jerked, my hands seeking his body even as I kept them where he had demanded them to be. He tortured me, working on my skin until it was dangerously tender and then tracing over it with nimble fingers and blowing breath that sent white-hot tingles through my entire body. \n\n\"Put your hands on the headboard,\" he commanded quietly, and I moved as carefully as I knew how, afraid that my arms would burst through the motions I moved them through and take their own path in the desire the Captain was building in me. They made it to the headboard successfully, and I gripped it tight just in time for the Captain to bite a spot that he had already made so sensitive that my entire body seized. \n\nWith my hands there he was able to watch them, see how hard I was working for him, the way my fingers turned white with effort each time he made me whimper with pleasure. His fingers pressed harder against my throat, sending waves of pleasure crashing into the pain he was coaxing from my skin. I tried to curse but found that I was moaning instead, and the fingers pressed harder. \n\nMy cock was hard again, and pulsing with need and the inevitable release that was building just beneath my skin. \"Sir,\" I choked out. These things he was doing to me, the way he touched me, needed me, marked me. It was all too much. I wouldn't last much longer. \"Please.\" \n\nHe lifted his head, taking me in. His eyes drifted to my cock. \"I haven't even touched you,\" he murmured, sounding surprised. \n\nHe was touching me, touching me in all the ways I needed him to touch me. \"Please,\" I tried again, but the word turned into a groan as he skipped his fingers down my chest. He tapped the tip of my cock and I almost doubled over, gasping. \n\nHe looked at me a moment, the smiled soft. \"No,\" he told me. Then his lips were back at my throat. \n\nI was panting. \"Sir, shit. Sir,\" I tried again, but I didn't get any farther before he pulled my head bodily down by the hair. \n\n\"I said no,\" he hissed in my ear. He took a moment for that to sink in, then very gently flicked his tongue against my earlobe. \n\nI cursed every curse I could think and then some more. \n\nHe guided my head back to the tilt he wanted it at and went back to marking me as he saw fit, filling my soul with pleasure and pain in equal and insurmountable measures that I never wanted to end. I was losing myself in his lips, his teeth, his breath, all the ways he had of touching me and then denying me of him, surprising me as he came back not where I expected him. I couldn't last, not like this. Not with him, not the way he made me, not the way my soul howled for him. \n\n\"Gods,\" I gasped. \"Sir.\" \n\nHe pulled back and took me in. I watched him smiling down at me, his eyes wide and hungry, and that was almost too much. I moaned and tried to roll away from his gaze but his hand in my hair held me tight, my hands on the headboard obediently staying put. \n\n\"You want to come?\" he asked me, his eyes flaring. I lost my words in their dark brilliance, squirming beneath him. I barely managed to nod. \"Then you need to ask.\"\n\nCruel, I thought. He knew, had to know by looking at me that I had no words left. He was cruel and I loved it, wanted more. I whimpered and begged him with my eyes. \n\n\"Say it.\" His hand had found it's way to my hipbones, dangerously close to my cock. I was close to tears. \"Say it or I can't let you.\"\n\n\"Please,\" I managed. \"Sir.\"\n\nHe watched his fingers circle my cock. \"Say it all.\"\n\n\"Fuck.\" His wrist had brushed the overly sensitive tip; my body twitched and twisted. \n\n\"Say it,\" he commanded, and his fingers were on my cock, and I was going to lose it.\n\n\"PleasesirmayIcome,\" I rushed out all at once, all in one breath. The relief from saying it was immediate, and I let myself smile, believing that my release would soon begin. \n\nBut he simply narrowed his eyes. \"Sorry,\" he said. The grin slid from my face, and I watched it climb onto his. \"Didn't understand that.\"\n\n\"Fuck,\" I almost cried as his fingers landed on my cock. \"Oh fuck, oh fuck, oh fuck.\"\n\n\"Careful what you wish for.\" His hand was almost lazily brushing up and down my length. The sensation was so extreme, so intense. It was as if all my nerve endings had been brought from everywhere else in my body to just under his fingertips, my body responding to his touch in all the ways he demanded, just to torture me. The feeling was so far past anything I had ever felt before. \"If I fuck you, I won't let you come until I do.\"\n\nI moaned at the coldness in his voice, found myself pushing into his hand. \n\n\"Is that what you want?\"\n\n\"No,\" I managed. I wanted him to fuck me, but I needed to come. I needed to come now. \n\n\"No, what?\"\n\n\"No, sir,\" I gasped out as his fingers traced over the tip of my cock. \n\n\"Then what do you want?\"\n\n\"Sir.\" That word was easy at least. It sat on my tongue like a curse, after what he did to me. Gods, I loved this man. I made the rest of the words careful, clear. It was so difficult, my tongue wrapped up in the breath I could barely breathe, the electricity my brain was pumping out into every part of my being. \"Please let me come.\"\n\nHe wrapped his hand around my cock and my entire body collapsed around it. His other hand brought my head forward, brought my lips to his. He kissed me, and I swear to you I had never been kissed like that before, cold in the face of all the fire I held contained within me, a sudden calm in the storm that raged against my very soul. \n\n\"Come,\" he whispered against my lips. And gods, I did. I had never come so hard in my life, my entire body focused on that one command, on the pleasure crashing through my entire body, because it was my entire body, not just the parts that should be for sex, he had made my entire body for sex, my entire body his, and I came for him with an intensity that brought tears to my eyes. \n\nHe stroked me through it, his lips on mine to capture the noises that I couldn't help but let slip in the throes he had put me in. It was everything, eternal, a blinding white-red intensity that took over my entire world and was over far too soon. \n\nEven when it was over, my body didn't seem to want to let me return to normal. Sparks were firing sporadically in my brain as I began to come down, my body spasming with no clear rhythm or intention. I knew that I was still so sensitive, could feel the very air swirling around me, and so when he kissed me again I almost lost my mind. ",
        "\"Huh,\" I heard him say. His hand released from my hair to trace down my cheekbone, coming to a rest on my chin. His finger brushed against my cheek, wiping away a tear that had slipped from my eye. \n\nMy eyes, I thought. I've closed my eyes. I wasn't quite sure when that had happened, but it wasn't what I wanted. At least, I didn't think it was. It was hard to think in the sudden stillness that enveloped my soul, the punctuating, racking quakes that swept through my body still. \n\nI let my eyes float open and found his only inches from mine, hot and hungry, and felt my breath stop dead in my throat. \n\n\"You can move your hands now,\" he told me, and I let them drop, shaking, from the headboard. He watched them with that same hungry expression and I shivered. It was all too extreme, all too at once, and I found my head slipping forward to rest in his neck, seeking the warmth and darkness that I knew I would find there.\n\n\"Shit.\" His hand was back in my hair in an instant, a welcome and comforting pressure. \"You okay?\" \n\nI nodded, too lost in the everything he had created inside of me to find words. \n\n\"Was that too much?\"\n\nI shook my head. He corded his fingers through my hair, a simple rhythmic motion that slowly helped bring me back to where I needed to be. I breathed, just breathed. I had never felt so spent, so emptied of everything and yet filled with the intensity of the world all at once. His fingers slipped over and around my hair, shaking further shivers down my spine. He felt them and pressed a kiss to the top of my head. \n\n\"You sure you're alright?\"\n\nI nodded again, pressing a kiss to his chest. I felt him shudder beneath me and did it again, slower. More deliberate. Thought about what would happen if I added teeth. \n\n\"You really do like this, don't you?\" he murmured, shaking me from my thoughts, I kissed his chest again. \"You know,\" he continued, the shaking in his voice just enough to give me goosebumps, \"I had convinced myself that my memories of how much you were, how much you made me, were just excuses. Or dreams.\" \n\nI slipped my arms around him as he shook another shiver loose in my body. \n\n\"A dream,\" he repeated, kissing my head. The fingers in my hair caught, began to pull and tug. My sensitive skin sang, and I made a noise that caught the breath in his throat and held it there until I stopped. \"Oh, the things I could do to you,\" I heard him whisper, and this time he said it I knew that he would, and that made the words all the more unbearable. \n\nThat was how Natch found us when he slammed into the room without knocking. \n\nI didn't lift my head from the Captain's shoulder; I wasn't ready to face the world yet, and I knew the Captain would care for me. But I could hear what happened. The door opened as Natch entered, then the door latched behind him. There was a yelp as he realized what was before him, and a quick scuffle.\n\n\"Wicky is on his way here right now and he will kill you.\" Natch's words were strangely muffled; I peered over the Captain's shoulder to see why and found that he had turned around and buried his head in his arms, double protection against the sight of the two naked bodies entwined before him.\n\nAll around me, the Captain sighed. \"How long do we have?\"\n\n\"Like, three minutes. Tops.\" \n\nThe Captain leaned down and kissed the top of my head. \"Why do you think, my love? Should we stay?\"\n\nMy love, I thought. My love. I looked up at him, my face open and flowing with all the things those words had done to me.\n\n\"He will kill Ghost,\" Natch said again. \"He has made that very clear.\"\n\n\"And I am the Captain. I think that should count for something.\" His eyes had not yet left mine. My love, I thought again. I reached up and touched his face.\n\n\"Cap, respectfully.\" I could hear the nervousness in Natch's voice; I took a moment to wonder if he was nervous for me or for Wicky. \"I don't think that will make much of a difference.\"\n\nI lifted my lips and kissed the Captain softly. He kissed me back, so delicately that something inside of me broke. The sea rushed into the cracks, and it sang. My love, my thoughts echoed. My love.\n\n\"Captain,\" Natch pleaded.\n\nThe fear in Natch's voice broke through my pleasant haze. I sighed and lifted my head away. \"I'll go, Natch.\"\n\nThe Captain frowned down at me. I smiled back up at him. \"They can not keep me from you. And they will know that I am yours.\" \n\nHis eyes drifted to the marks that must decorate my neck. I could feel them tingling still, the air more sensitive around certain spots of skin. He confirmed my suspicions as his eyes caught in those spots, his grin growing. It wasn't a grin, truly, not as a grin would be defined. It looked like a grin, but the expression was dark, as dark as his eyes, as dangerous as his voice, and I felt my skin prickle in anticipation. \n\n\"Well, then. Let's get you dressed.\" He pulled himself off of me, calling me to follow with a finger under my chin. It was impossible to break my gaze from his, his eyes commanding mine so effortlessly, so deeply. I crawled over the bed and allowed him guide to to standing. \n\nHe found my pants and handed them to me, then smiled that smile again. I felt a shiver threaten my spine. \n\n\"I have just the shirt for you,\" he told me softly. No, not softly, not really. I shouldn't pretend that a quiet voice is soft, because his voice was hard, pricked my skin like so many needles. I watched him carefully as I pulled on my breeches. The stack of shirts he had gathered for me days ago were still there, pushed off to the side, a reminder of our mutual misunderstanding and rejection. Now he rifled through them, seeking out his prize. When he found it he held it aloft, grinning. \n\n\"Don't lace the front,\" he commanded me. I nodded my understanding and pulled the cloth over my skin. \n\nIt was soft, the fabric well-worn and gentle against my delicate nerves. More importantly, it sat loose around my shoulders, baring my neck and chest for the world to see. The Captain stepped back and took me in, that hungry look bleeding into his smile. \n\nI stood and let him stare, not trying to hide how my body trembled and shook. \n\nHe stepped back up to me and pulled me down for a kiss. \"Brings out your eyes,\" he murmured, and I grinned against him. \n\n\"Captain.\" I had forgotten all about Natch. He was still facing away from us, unwilling to look at our naked bodies, but unwilling to leave us until he knew we were safe. \"He needs to go now.\"\n\nI sighed. The Captain put a finger on my cheek and guided my lips to his once again, taking his sweet time. I could feel notes of desperation in the kiss, even as he tried to hide it behind nonchalance, even as his hand was so light against my skin. \n\n\"He's here, oh fucking -\" Natch was bouncing up and down, the stress in his voice palpable. \n\nI pushed the Captain from me gently. We could hear Wicky shouting as he came down the hallway. \"They can't keep me from you,\" I reminded him. He frowned but had no other response, merely stepped back and let me move as I would. The sight of him there, covered in the marks I had placed on him, the cum that he had coaxed forth from my body, it was enough to make me want to run back to him, to take him in my arms and damn whatever would happen when Wicky came through the door.\n\nBut I needed to make things good for him. And this was the way to do it. \n\nI bent down and grabbed the manacles. \"He'll expect me as he left me.\" \n\nI watched him blink at that for a moment. \"Wait,\" he said, frowning. \"Wicky put you in the irons?\" \n\nOops, I thought. But I didn't have time to fix it, not really. I kissed the Captain in a glancing motion as I moved towards the window. \"You should get dressed.\"\n\nThe captain grabbed my arm. \"I'll kill him.\" \n\nWicky was right outside the door. I could hear him arguing with the guards. \"Please, sir,\" I said, and watched his frown deepen even as his body shuddered. \"Don't.\"\n\n\"But he -\"\n\n\"Sir.\" He met my eyes, and this time I was the sea, and he saw it. It wasn't a threat, though, not like so many of these sailors saw it. It could never be a threat. Not for him. How could the ocean threaten the sky? How futile, how inane. Instead, I met him with a promise, and I watched his eyes harden and sparkle as he understood. \"I want him for my own.\"\n\nThere was a banging on the door, and the Captain and Natch both turned their full attention to the noise. I took the moment to slip out through the window.\n\nWhatever happened next in the room, I don't know. I would have loved to see what happened when Wicky burst, angry, through the door and found Natch alone with the naked and obviously recently sexed Captain. I would have loved to see Natch try and deal with this moment; I would have loved to see the Captain's smile. \n\nBut instead I busied myself with making my way back to the cells. The return trip was much easier than the trip out; I had no worry to weigh me down, and this time I had my full arm span. I was back at the cell window in no time, confident that Wicky was still trapped in the confusion I had left behind in the Captain's chambers.\n\nI peered into the small window. All looked to be still, which of course made sense; why would they guard an empty cell? I slipped my body into the small opening, dropping to my feet just as the door at the end of the hall opened.\n\nI met Ichor's shocked gaze with a finger to my lips. He stared at me, mouth agape, as I slipped into the cell that had been mine for less than twenty minutes, took a deep breath, then reattached the irons to my wrists. \n\nI had just enough time to give Ichor a look filled with every polar gale that had ever screamed before the door slammed the rest of the way open and Wicky all but spun into the room. \n\nHe gaped at me, manacled and standing easy in the cell he had put me in. I watched him take in my mussed hair, my relaxed stance, the marks on my neck. The shirt that was obviously different than the one I had been wearing ever since I had crashed onto the deck of this ship and upset his world. \n\nI felt myself begin to smile. \n\nWicky's face turned bright red. His open mouth twisted, readying to form words. I watched his body bunch under him and made mine ready to receive his anger, my smile growing. \n\nBut before Wicky could move, a hand reached through the door and clamped down on his shoulder. It was not a friendly touch, and he winced under its pressure. I followed the hand up to a wrist, then a shoulder. A marked neck. Finally the Captain's dangerously grinning face stepped into the room. \n\nMy stomach did a flip. It had barely been minutes that we had been apart, yet seeing him again fed anticipation to my soul at an unsustainable rate. \n\n\"There you are.\" He smiled as he spoke, and I bit back a shiver. \"There was some - confusion - about your whereabouts.\" At the word confusion, he had squeezed Wicky's shoulder so hard the man had squawked. I couldn't keep the smile from my face. I would have loved to watch the small man squirm in pain, would have loved to see what the Captain's words did to him, but my eyes were caught and held by the Captain's. My gaze was locked with his, commanded by his eyes, his to control. Always his. \n\nHe made his way over to my cell. I felt my breath quicken as he approached. Finally, he broke his eyes from mine to take in the damage I had done to the door on my way to him. I watched his face carefully, wondering what this display of violence might mean to him, but his expression was closed off, his emotions tucked away somewhere where I could not read them. \"I think this man deserves commendation, Wicky. You put him in a broken cell, and yet here he still is.\" His eyes found mine again, and I drew in a deep breath. His eyes had only deepened, his hunger somehow grown. \"He obviously knows how to stay when commanded.\" \n\nAt the flare that blazed in his dark eyes I almost moaned. \n\n\"I. He was not. This cell was empty!\" Poor Wicky, I almost thought. My gaze was still locked with the Captain's, his eyes pumping the threat of vulnerability - no, the promise of it - through my entire core. I wanted to drop to my knees right there, to submit before this man who was my world. I wanted to be his, in every possible way. I watched his eyes drift to my neck, and I tilted my head back so that he would have a better view. He took in every mark in turn, and I hoped that he was sizing them up, deciding which would need to be redone. Imagining where new ones would fall. \n\nHis eyes continued to drift further down, and I watched them land on my irons. I knew this was despite himself, but I didn't care. I loved his eyes on me, loved what I could do to him, loved what I could do for him. I pressed my hands against the restraints slowly and watched him suck in his breath. \n\n\"And. His clothes! The marks, the, the.\" Was he still talking? I stretched my hands out, showing my Captain my captivity in full. Before me, he shifted just the smallest bit, his gaze stuck on those irons. \n\n\"Ichor!\" Wicky turned to his man, and I felt my head turn as well. Ichor had seen me out of my cell, might have seen me come in from the window. Before me, the Captain frowned at my sudden change in demeanor. \"You saw it, the cell was empty. Say it! It was empty!\"\n\nBut Ichor was not saying anything. Instead, he was looking at me, and I was the sea. \n\nI watched him gasp for air in the face of everything that he faced, the sudden decisions that he was having to make. I raised a single eyebrow and met his eyes steadily. I wonder what he will chose, I thought idly. A red-faced first mate, or life. \n\nIchor was no fool. \"No,\" was all he said, shaking his head wildly. He repeated it a few more times, slowly backing up against the far wall.\n\nWhen I was convinced that Ichor was not going to voice anything I did not want, I turned back to the Captain. I found him leaning on the bars of my cell, smiling and amused. \"You,\" he said, hunger making the wonder in his voice sharp. I smiled back, a little confused but very willing to give him whatever it was he wanted. \n\nThe Captain was just opening his mouth, perhaps to give me the instruction I so craved, perhaps to tell off Wicky, perhaps just to tease me further, when the door opened again. \n\nWe all turned to face the most recent intrusion. \"Oh, the sea have mercy, there you are!\" Cookie bustled up to me, grabbed a ring of keys off the wall as he came. I watched, amused and surprised, and he slid himself into my cell and positioned himself between the Captain and I.\n\n\"I have been looking for you everywhere, sorry Cap, need him for help with prep, hope you won't mind, now we must be going, yes now, out you go lad, out, out, out.\" He hissed the last word, pushing my unyielding body. I shrugged, dropping the irons on the floor with a regret that genuinely surprised me and smiling at the Captain. The Captain, in response, grinned lazily back. He knew where to find me. \n\nCookie caught the exchange and shot the Captain a look so dirty he actually took a step back, surprise blossoming on his face fast and angry. I snorted my amusement and followed the cook out the door before the Captain had a chance to respond.\n\nAs soon as we were alone, Cookie turned his ire to me. \"Gods all and the sea herself, do you have any idea what you're doing? Half the ship wanting you dead, the other half talking openly about leavin' with you, lad, a hornets nest, a hornets nest, and then you up and go missing.\" He drug me through the hallways with a mindless determination that he usually saved for onions. \"And then they're saying you're in the Captain's quarters? Boy, are you mad?\"\n\n\"No,\" I answered, but he was already steaming ahead. \n\n\"He is nameless. And on top of that there's the world of hurt he's already piled on you, you're just asking to be hurt again, and I won't be the one picking up the pieces of your heart off my kitchen floor, oh no I won't, not Alan Turnbeck, I'll kill him myself before I see the day he breaks your heart -\"\n\n\"Cookie.\" I grabbed his arm and pulled him to a stop, still amused but now just a touch worried. This man was Minnie's brother, I reminded myself. He meant every word he said. He let me halt his forward motion, turning to me with his arms crossed and his eyes filled with anger and concern. \"It's okay,\" I told him. He frowned up at me, and I smiled back. \"I promise.\" \n\nHe grumbled something about 'those damn marks' and keeping my head down, and I knew that he had heard what I needed him to. I patted his shoulder and walked with him to the kitchen. \n\nLunch was an interesting experience. I was a bit surprised that I had been allowed to stay in the kitchen and work after Wicky had been so obviously invested in my capture; apparently, so were the men. One by one they made their way up to the counter, taking in my unbound hands, my new shirt. Their eyes always seemed to get stuck on the marks that graced my neck, courtesy of the Captain. One or two of them opened their mouths, but well-timed throat clears from Cookie shut them up quite well.\n\nYou don't piss of the chef. \n\nIn time all the men had been served. Cookie came up behind me, waiting even as I was. The whole room was waiting, pretending that it wasn't, a contained mass of bated breath and furtive glances shifting through the mess. I felt Cookie's hand land on my arm, but I wasn't going to leave just yet. The Captain knew where to find me. The Captain knew...\n\nAnd then he was there, filling the doorframe with his hungry smile and demanding eyes. I heard a gasp go up through the men as they took in the marks on his neck that mirrored mine and did my best to stifle a smile. The Captain didn't bother, his grin sliding easy and dark across his face as the sight of me.\n\nHe strode through the mass of nobodies, his body cutting through the thick air as if it were nothing, as if these men were nothing to him, and my smile broke through as I realized that they were. Nobodies, a vast expanse of nobodies, and through them waded the Captain. \n\nMy love. My everything. My only.\n\nI took the bowl that he handed me. I felt his eyes on my back as I filled it, making my motions smooth and deliberate for him, a performance for one, the only one that mattered. I was careful to let my shirt slip past my shoulder, exposing half my chest and every single mark to the air. Behind me, I heard the Captain carefully let out a breath. \n\n\"Your soup,\" I said softly, turning back to him. The intensity in his eyes hit me so hard it almost knocked the air from my lungs, but I gathered whatever shreds were left and crafted them into a word, a plea. A promise. \"Sir.\" \n\nHis eyes crinkled in happiness and I pressed the bowl into his hands.\n\nBehind him, benches scraped across the floor as men stood in shock. No weapons, no one coming for him, I had time to think before he lifted his hand to my hair and pulled my lips to his. \n\nI think Cookie made a noise behind me. I think more people stood behind him. They must have, because when he pulled away, smiling, nearly the entire room was on its feet. I was aware of that in only the smallest of ways, just as I was aware that Cookie had pressed the handle of a paring knife to my hand before moving off to stand just on the periphery. Just. \n\n\"Your men,\" I said quietly.\n\n\"After lunch, come to my room. We need to discuss your marooning.\" His voice was all business, but his hands were anything but. His fingers slipped down my neck and traced the the dark bruises he had coaxed from my skin; I shuddered under his touch. \n\n\"Yes sir,\" I voiced obediently. Beside me, I heard Cookie make a noise of incredulity. \n\n\"And I'll take my dinner in my room. You will serve me.\"\n\n\"Yes sir,\" I said again. I could feel Cookie glowering. \n\nHe smiled and I leaned down instinctively. His lips pressed against mine for just an instant before he was gone, leaving me off balance and almost falling over the counter. I could hear him chuckle as he twirled and left the room. ",
        "I leaned against the counter, watching him go. My eyes traced down his flowing shirt, landing on that perfect ass just in time to watch it disappear. \n\n\"Who the f-\" I heard a man start. I could have let him finish, I suppose, but I wasn't in the mood for the kind of shit that fell from the mouths of men like that. My body twisted; the paring knife flashed. \n\nI sighed, watching it skim an inch above the man's head and bury into the wall. His eyes were huge, staring at the space in my hand that had previously held the blade. \n\n\"Your knives are unbalanced,\" I told Cookie drily, my eyes on the forehead that should be sprouting a blade, the man still alive by the grace of non perfect cookware. \n\n\"They're for cooking, not for throwing. And you'd better not have nicked it. For all the grace, into the goddman wall. Lad, it's not a weapon it's a tool.\"\n\nAll tools are weapons, I thought to myself. I knew Alan would be thinking it too. It had been one of Minnie's favorite phrases, and she had repeated it until it was gospel, until the words would ring in my head whenever someone spoke of tools or weapons. All tools are weapons. You can defend yourself with anything, if you have enough desire. \n\nAnd desire, oh, I had enough of that. \n\nI smiled. The room was beginning to find its way back to seats vacated in shock, but was carefully staying silent. Sure of the men's momentary compliance, I turned to serve myself. \n\n\"Commanding you,\" I heard Cookie grumble behind me. \"Does he know who you are?\"\n\n\"Yes.\" I turned and leveled my gaze at him. \"His.\" \n\nThat shut him up for the time being. \n\nI placed my bowl in my usual spot, then made my way over to the wall, dislodging the knife. \"It's fine,\" I told Cookie, tossing it back across the counter. He scowled and grabbed it before it hit the floor. \n\nWhen I settled across from Natch, he leaned forward and grabbed my hand. \"You're not really going back there.\" He spoke in a whisper, trying not to disturb the silence that still weighed heavy all around us. \n\nI blinked at him. The Captain had commanded. I would do as he said. He saw the look on my face and groaned, putting his face in his hands. I heard him whispering curses mixed in with prayers from where I sat. \n\nI looked over to Thron. \"Wicky is very upset,\" was all he had to say. I shrugged. As if I cared about Wicky. \n\nI ate my soup quickly, mindful that any delay to the lunch would keep me from my Captain. When I was finished, I brought my bowl back up the kitchen. No one else seem much motivated to move, so I brought their attention to the need to disperse by slamming my bowl against the counter. The noise, and my careful stare, broke the spell that had been sitting over the room. The sound of sudden haste met my ears, and I let myself smile. \n\nWithin a few minutes, all the men but Natch and Finn had hurried from the mess, their bowls neatly stacked for once against the counter walls. I raised an eyebrow to Natch. He was practically vibrating. \n\n\"He's standing guard.\" Those blue eyes were filled with worry, and I was sure now that it wasn't for me. \"If you go back there - \"\n\nI walked away before he could finish his thought. \n\n\"Lad.\" \n\nI turned back and found Finn holding out a blade. I blinked at the metal in his hand, caught off guard by the gesture from the affable steward. Arming a prisoner carried severe punishment, and we all knew it. My hand was gentle as I took the blade, knowing that he knew what I aimed to do with it. \n\n\"Be careful,\" he told me quietly. Beside him, Natch nodded his head in rhythm to his bouncing body. I placed a hand on each of their shoulders in turn and made my way up to the Captain's room."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay anal",
        "pirates",
        "gay romance",
        "gay orgasm control",
        "orgasm control",
        "true love",
        "gay d/s",
        "gay submission",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-06"
}