{
    "title": "Deciphering the Bloom Ch. 05",
    "pages": [
        "This is a copyrighted work of fiction by the author seeker71. All rights reserved\n\nThank you to my beta readers. Deja it was incredibly kind of you to be my second pair of eyes on this. I have no editor, so as usual all mistakes are mine. I know the wait was insane, but for now life has returned to manageable chaos. I try to respond to all correspondence, save anonymous, but to everyone who reads and write my sincerest appreciation for your time. All comments are welcome. \n\nThey lay entangled in one another, panting, from the force of their loving. Nic pulled his softening shaft from David eliciting a moan and an audible pop. He rolled and brought David to his chest, claiming his mouth in a searing kiss. \n\n\"We should get cleaned up.\" He suggested his eyes feeling heavy.\n\n\"Yeah, we should,\" Dee responded, snuggling closer to him.\n\nThey both went to sleep, the want for anything, including words, sated and therefore gone. \n\n****\n\nThey slumbered for a few blissful moments, their bodies in the posture fashioned by lovers. Nicolao stirred and studied his sleeping beloved. They had made love in the light of day. Somehow to Nic that seemed more right. He clearly saw everything in his lover's eyes, every expression that crossed his face; nothing was left in the shadows. David had been hurt so much in life, but he still loved, he still trusted. Nicolao promised himself to always honor that gift. He was 'pinned' by David. His lithe torso was molded against Nic's side, his pale legs was slung across his own muscular brown thighs. He threaded his free hand in David's hair, simply enjoying the feel of the blond curls around his fingers. \n\n\"Wake up Dee,\" he urged. When David didn't move, he leant down and bit his earlobe.\n\nNicolao laughed at David's yelp and subsequent scowl.\n\n\"I'm hungry,\" he announced.\n\n\"So you decided to eat me?\"\n\n\"I'm going to heat up something to eat. You need to go soak before you get sore.\" Nic slid out of bed.\n\nDavid buried his head further in his pillow. \"I'm not sore, and I'm comfortable. I'm not getting out of bed.\"\n\nNic shrugged. \"Alright.\"\n\nDavid eyed him suspiciously as he pulled the covers back and crawled towards him. Nicolao's muscles rippled as he slowly crept forward. A more stunning predator did not exist in David's estimation. And by God he was elated to be his prey.\n\nNic hovered over him and captured his lips in a crushing kiss. David moaned as Nic suckled on his lower lip, and as his body began to respond he moved to pull the larger man's body flush against his. He let out a gasp when Nic stood up. \n\n\"I don't think you can say you're comfortable.\" He smiled; looking down at David's hardened shaft. \"So how about getting up and soaking, while I make lunch. If you want I'll bring you your food while you're in there.\"\n\n\"What, eat in the tub?\" David grudgingly got out of bed. \n\nNic laughed, \"If you haven't noticed, we can do pretty much whatever we want.\" He steered David to the bathroom.\n\n\"You know what I meant.\" \n\n\"Yes, I do. It's a bit hedonistic, but who cares?\" He sat on the edge of the tub, and turned on the water.\n\nDavid considered it. \"I'll eat after I'm done.\"\n\nNic adjusted the water while David waited patiently for him to finish fiddling with the bath, noting the brown eyes remained rapacious whenever they landed on him. \n\nWhen he rose, he pulled David flush against his rapidly filling length. Nicolao devoured his lips and his hands roamed down his back until they covered the mounds of his ass.\n\n\"\u00bfSabe c\u00f3mo tu irresistible que eres?\"\n\nNic's voice rumbled from his chest traveling through David; the familiar vibration sent more blood to his cock. \n\n\"Are you clenching your ass trying to keep me inside of you?\" \n\nDavid could only whimper and nod his head in the affirmative, both embarrassed and aroused. \n\n\"... me consume... me estoy ahogando en que...,\" Nicolao licked and nipped his way down the front of the younger man's body. He maneuvered David's back against the wall as he tasted luscious alabaster skin. \n\nNic dropped to his knees, his face inches away from his goal. Though they had coupled, he was not quite ready to be away from David yet. Dee's muscles quivered with every touch as he lost himself in the haze of pleasure in Nic's ministrations. His large hand easily encircled the fully erect penis; he ran his tongue along the slit, then along the mushroom shaped glans, tasting the freshly formed drops as well as the dried issue from earlier. \n\nDavid's moans and squeaks filled his ears, \"Please, babe, please.\" He made out between ragged breaths. Nic took all of him in his mouth, pulling back slowly, hollowing his cheeks as he did. He felt David's knees buckle and without breaking contact he placed his legs over his shoulders and palmed his buttocks. \n\nDavid knotted his hands in Nic's hair teetering on the edge of his orgasm. One of Nicolao's long fingers entered his tender hole and he came with a long keening scream.\n\nNicolao swallowed the offering and waited for him to come back to him. David had pitched himself forward and his upper body was thrown over Nic's head. He pulled himself upright, still lost in an erotic fog. \n\nNic placed his feet on the ground and stood up; his body pressed against Dee's making certain he would not fall. It had only taken a few minutes, and the feel of his fingers in the slick covered channel was amazing. But David had tensed with the introduction of the digit, confirming that what he really wanted to do was out of the question. \n\nDavid leaned in his chest and peered up at the handsome face, \"I'm irresistible?\"\n\nNic chuckled, \"As if you don't know. Now, in the tub.\"\n\nNicolao cleaned himself in the sink as David luxuriated in the bath. He dressed and busied himself warming up their leftovers. It was only midday but he knew he would have to return to work and deal with Jeremy. Dee's notion of talking to the man was admirable but he doubted it was realistic. Saint had warned him, calling him dangerous; in fact she implied he was very dangerous. He decided he needed to speak with her and find out if her warning was based on more than a sixth sense.\n\nSatisfied the food was edible he turned the pots down and waited for David. He mused only months ago he would have said how much he liked the solitude of his life. Eating alone, sleeping alone, beholden to no one to account for his comings and goings. He would have professed happiness. But of course he had no idea what he was missing. His David. As if his thoughts summoned him, David walked out of their bedroom. He only had on pajama bottoms that hung low on his slender hips.\n\nThe large man gazed appreciatively at how well his lover's body was filling out. The needed weight was being sculpted by their workouts. David's body was so tight and welcoming; Nic was flooded with the memory of being inside of him and the growing urgency to feel that again. \n\nDavid exited the kitchen with two bowls of soup only to be arrested by the liquid fire of Nicolao's eyes. The burning brown flame scorched his flesh as Nic made no effort to hide his avid craving. \n\n\"You need help?\" Nic asked not altering his gaze.\n\n\"What? No, I've got it.\" He was the object of abject love and desire; it would take a while for the knowledge of it not to bewilder him. David shook his head and made the short journey to the table. \n\nHe placed the bowls down and seated himself, dropping his head, unable to meet the other's gaze. Nic grabbed his hand.\n\n\"Sorry, I'm like a man in the desert that found something to quench my thirst. I didn't mean to make you uncomfortable my Lilly of the Valley,\" Nicolao offered.\n\nDavid shook his head and turned a brighter shade of crimson as he met Nic's eyes. \"Babe, I wasn't uncomfortable. I was probably thinking about the same thing as you the entire time I was in the bathroom. I was more, startled. Hard to stay rooted in this reality.\" He paused and took a mouthful of soup.\n\nThey ate. Then Nic removed the bowls and brought in two plates. David wished he could express himself the way Nicolao so easily did.\n\n\"My life before you has only been filled with the loss of things I had only clues existed, and now it's... full.\" David shook his head helplessly and smiled. \"That's not what I want to say. I guess I'm like Pop, I don't know the language for all the things I want to say.\"\n\n\"No worries, we'll make our own over time. Plus I think I understand you perfectly,\" Nic assured him as he watched David eat; he still took joy in seeing him ingest food.\n\n\"Really? Because I don't always understand you and I really don't follow Ma. Does she think your sister is possessed?\" David asked, suddenly recalling the odd assertion Hilaria made.\n\nNic ran his hands through his black hair. \"Yes and no. I keep telling you, Ma is peculiar. Well, a part of that is her belief in spirits. It actually got us kicked out of the church. But it isn't like what you may be thinking. Ma is \"Qom' pi\", a member of the people. Or what others call Toba Indians.\"\n\nDavid nodded. \n\n\"Grandfather was a Spanish ethnologist, an anthropologist, and her mother \u00c1note was Qom. Ma lived with the tribe until she was seven years old, till \u00c1note died. Grandfather Blas took Ma back home to Spain and left her there with his mother and father. I can't say I understand what he was thinking. He left her alone in a new country with people who referred to her as their savage to tame, su salvaje para domar. She was genuinely unhappy there. She never connected with anyone, except for the moment she saw Pops, but that's another story.\n\nShe hated Catholicism, and they called her beliefs ignorant, which made her hold on to what she remembered all the more. Qom believe that spirits enter a person and cause illness, or death. Ma took that and went a step further. She decided spirits enter people as gifts or guides. No matter what the spirit is, it's there for a reason and should be understood. She pegged me as a warrior, Nate a pathfinder, Narisco a shaman, Nieves a seeker and Nerina a hungry ghost.\"\n\nDavid's mouth formed an O in silent understanding. \n\n\"I told you, peculiar.\"\n\n\"Maybe I don't know enough about religion, but it fits. That got you all kicked out of the Catholic Church?\"\n\n\"More like it was suggested we may not want to continue going.\" Nic smiled. \"Could you imagine me having to attend parochial school?\"\n\n\"But you pray all of the time.\"\n\n\"Faith has little to do with church, love. The divine for me is in the most human of things.\" The heat had never left Nic's eyes and the flame seemed to flare with that statement. \n\n\"You Evangelistas are extraordinary.\"\n\nNic smiled, glad he hadn't said insane.\n\n\"Now why do you call me your Lilly of the Valley?\"\n\n\"It's my way of saying you are my happiness. I can stop if you like.\"\n\n\"Don't. I love the way you talk to me,\" he cocked his head to the side, \"the way you look at me, the way you touch me, the way you feel when I touch you.\" David slid his hand up Nic's thigh.\n\nHis fork clanged on the plate as blood rushed to his lower pleasure seeker. \"Lunch is over,\" Nicolao declared.\n\nDavid withdrew his hand. \"No, I'm really hungry.\" He took another bite of food.\n\n\"Dee!\"\n\nHe winked, \"Now you know how I felt when you left me in the bed!\"\n\nNic sputtered, \"But before your bath-\"\n\nBlue eyes mirrored Nic's fevered gaze of earlier. \"You left before I could touch you; I need my turn.\"\n\nNicolao ran his fingers through his hair. \"Understood.\" \n\nHe watched as David continued to eat, debating his response. Bending him over the table until both of them were spent was a natural inclination; that should not happen with Dee. An image of him, helpless in a bar storage room, popped unbidden into his head, dispelling any thoughts of ratcheting up their play. It had taken months to get this far.\n\n\"Did you ever find out what the Eglantine Rose meant?\" \n\nDavid stared blankly at him, wondering where that had come from. \"Yeah, I cheated. Pops told me. It means wounds healing.\"\n\n\"Ever since I found out there were so many ways to express--\" Nic was interrupted by a song playing and the unmistakable buzz of a phone on the end table. \n\n\"That's Averie,\" David explained as he made his way to the phone.\n\n\"Hello.\"\n\n\"Are you back?\" Averie's voice was a low whisper.\n\n\"Yeah we're back. Rie, why are you whispering?\"\n\n\"Oh... no reason, just wanted to know if you were home. I gotta go.\" As her words rushed through the end of the phone he clearly heard Breezy bellowing in the background.\n\n\"I know you didn't call them when I told you not to. Give me that phone!\" \n\nThere was some rustling and Breezy's voice not much lower in his ear. \"Hey Davey, sorry about that. The kids wondered why you didn't text them to let them know you were alright.\"\n\n\"Us. You were worried too!\" Averie protested.\n\n\"Little girl, don't make me lay hands on you. Go to your room.\"\n\nDavid chuckled, imagining Averie's petulant face at Saint's empty threat. Nicolao began clearing the table.\n\n\"Sorry again.\" Breezy offered.\n\n\"It's okay. I'm sorry for worrying you. It's been an eventful few days.\"\n\n\"Is everything alright?\" The sudden unease in her tone was evident.\n\n\"Yeah, everything is great. Nic's family is everything you said they'd be. They gave him a car.\"\n\n\"Us a car,\" Nicolao corrected, wrapping his arms around him from behind. \n\n\"Well hell!\" Breezy declared. \"Go outside and send a pic. I do like shiny, chromy things.\"\n\n\"Alright, I'll send it right away. Here's Nic. I need shoes and a shirt.\" He slipped out of his arms as she declared him to be scandalous. \n\n\"Hello Saint.\"\n\n\"Evangelista, congrats on clearing that hurdle.\"\n\n\"Thanks. I have some questions for you.\"\n\n\"Oh just drive to work and we'll work on the parking pass. Bring proof--\"\n\nNic admired how quickly her mind worked. \"No, not that. Can you pick me up in the morning?\"\n\n\"Sure.\" \n\nHe loved her for not asking questions. \"Thank you Saint.\"\n\n\"See you in the morning and tell Davey I am waiting on the pictures.\"\n\nAfter the obligatory pictures to the St. James', Nic had David crank the car and move it in and out of the driveway, urging him to get a feel for the vehicle. Every misstep caused him to declare he wasn't ready to be behind the wheel, while Nicolao soothed him. Hours later David went online, reading about the rules of the road.\n\n\"Don't fret over it Dee.\" He was adorable with his brow furrowed in concentration and glasses resting on the bridge of his nose.\n\n\"Yeah, but that's over 5000 pounds. If I cause and accident or something I could kill someone. Or just mess up the car. It's expensive! I looked it up. Restored Impalas sell for twenty to fifty thousand dollars.\"\n\n\"Fifty thousand if it was restored to stock set up. It's custom, plus purists hate what Nate's doing. But yes, the car is more than a couple thousand dollars but you aren't planning on wrecking it are you?\" Nicolao pulled him off of the stool and away from the counter. \"You're brooding over a car. I can give it back or you don't have to drive till you're ready.\" He held both of David's slender wrists. \"Time for a distraction; television or chess?\" \n\n\"Movie, but you pick,\" David answered as they went to the couch. \n\nDavid sat with Nic's arm on his shoulder barely taking in the story unfolding before him. It looked like a great flick, but he didn't want to watch a movie, play games , or study. He slid onto the floor, on his knees between Nicolao's long legs. Without a word he leant forward and began pulling on his waistband. The pants slid off easily as Nic lifted his hips. David sat back on his heels and let his eyes wander.\n\nHe had seen Nicolao's body many times, but was mesmerized by the physique that was the result of sculpting and genetics. David discovered he could study the long thin feet and see the beauty in them; even if the second toe was the same length as his big toe. He silently scrutinized every part of him.\n\n\"Dee?\"Nic asked after minutes passed. \n\nDavid shrugged, \"I found a distraction I like.\" He surged upwards grabbing the edge of Nic's t-shirt and removing it. He ran his tongue and hands along the newly exposed skin.\n\nNic fought to remove his shirt. Taking the hint, David stood, stripping as swiftly as he could. He placed his glasses on the end table then uttered, \"Oh.\" He ran into the bedroom, reappearing with a bottle of oil. \n\n\"You shaved?\" Nic's voice was heavy with desire.\n\nDavid had shaven his pubic hair in the bath while he was cleaning himself. \"When hair gets caught in your throat it kinda sounds like a cat. Do you like it?\" \n\nNic stared at the displayed skin and the unyielding flesh extending from it. \"Yes, why don't you run around the couch a few times? I think you stumbled onto a dream I had.\"\n\n\"Mine first,\" David quipped and lowered himself onto his lover's lap. He allowed his hands to roam as he kissed Nicolao. Seated he was not limited by his height and could touch all parts him freely. \n\nNic acquiesced until his own avidity engulfed him. One strong arm wrapped around the slighter body, and with the other hand, he reached between them and lifted his engorged flesh upwards, aligning their tumid shafts. His long fingers held them together and Dee, enflamed, sought to stoke the blaze, undulating his hips. Nicolao shuddered and began stroking and petting them further into searing bliss. With the hand on his neck he pulled David into him and consumed his mouth until he felt Dee pull back.\n\n\"No,\" was said against his lips.\n\nNic didn't move. David was in his lap with his forehead pressed to his. The word uttered, from the pink, kiss-swollen mouth against his own lips.\n\n\"I want you inside of me Nic.\" David's eyes appeared black, reflecting his need.\n\n\"Love, you're sore. It will hurt.\"\n\nDavid groaned in frustration, \"Nic I'm not that sore. It's all I've thought about all day. You said you trust me. Trust me. I'm fine.\"\n\nNicolao moved his lips over his in a ghost of a kiss. \"Glad to know I wasn't the only one.\"\n\nDee stretched and retrieved the oil from the couch cushion. He covered Nic's shaft with the slick lubricant. Nic's expression was unreadable as he held himself still while David lowered onto the tip of his stiff cock. He made no move to guide him, wary of conjuring dark shades twisted by his past. \n\nDavid's eyes grew large as he felt the thick head make contact with the sensitive nerve endings of his entrance. He lowered himself further, willing his muscles to settle back and savor the incomparable feeling of being breeched. The sybaritic delight tinged with the pain of their union was so intoxicating he felt he would tip over. \n\n\"I don't want to come yet,\" he panted, stopping his descent.\n\nNicolao tightened his hold on his waist and his other hand gripped the back of his neck. \n\n\"Why don't you want to come?\" Nic eased David down, centimeter by centimeter pressing into his channel. \n\nDavid spasmed as a wave of ecstasy rolled through him; his mind numbly processed that he hadn't ejaculated and Nic was questioning him. \n\n\"Why don't you want to come? Don't you want to come for me love?\"\n\n\"No... yes, too soon.\" He could barely form coherent thoughts, how the hell was he supposed to talk? He steadied himself on his knees and began to meet Nicolao's steady upward thrusts, to his glee causing the big man to hiss and throw his head back.\n\n\"Nunca es demasiado pronto, but always for me... when you come, you come for me,\" Nicolao brought his head forward, the liquid orbs lust ridden; the tightly held reigns of his control slipping with every reunification of their flesh. \"If you come I will make you come again and again, una y otra vez, mi amor.\" Nic guided David's face to his own and sought to claim his mouth. He was buried deep inside of him as they kissed, inching in and out of the depths of his love.\n\nDavid pushed back against the hand on his neck. \"More.\"",
        "\"Dee, more what?\" \n\nDavid only shook his head in response.\n\n\"More what?\" Nicolao stopped moving. His strong arms held David firmly in place. \"I can't know unless you tell me. Tell me what you want love.\"\n\nDavid ran his hand along Nic's jaw line. He was right. He had to say it and Nicolao wouldn't do it otherwise. \n\n\"I need more, harder; I want you to fuck me Nic.\" He dropped his eyes to his own pale hand resting on brown skin. Silence enveloped the room. He was afraid he had made a mistake as he brought his eyes to Nicolao's. \n\nThe side of his lip lifted in a feral grin. \"Compromise- you fuck yourself on my dick,\" he paused as he adjusted his hips. \"Another dream I've had.\"\n\nDavid hesitated then abandoned himself; he lifted himself up and slammed down, while Nic watched him. He did it again and again, establishing a rhythm he knew would bring himself to completion. Nic began to control his drop with his arms as he plunged upward. Their merging bodies' cadence reverberated off of the walls. \n\n\"God... Nic... yes,\" David loosened his hand from Nic's shoulder and began to stroke his leaking cock. \n\n\"Paseo me... cualquier cosa que necesites...\" the clenching spasms of David's hole informed Nicolao of what he had lost the ability to say. Warmth spread across the hard lines of his abdomen as David spurted his release. Nic stilled until the blue eyes opened. \n\n\"Ah\u00ed est\u00e1s, stay with me, love.\" Nicolao's hips set a new pace, while never breaking David's gaze. Long, leisurely strokes that promised to take Dee to the brink again until the pace quickened becoming erratic. David's voice joined Nic's as he felt him expand inside of him before his release. Then he was filled with warmth. \n\nNicolao let his arms rest against David's thighs, waiting for his eyes to focus. \n\n\"Thank you.\" \n\nDavid's words hung between them, leaving Nicolao speechless. \n\nDee kissed him knowing his love and gratitude could not be conveyed in that kiss. But if they were to make their own language, he reckoned it to be a good start.\n\n****\n\nBreezy arrived early, took a quick look at the car, gave David a kiss, before she and Nicolao left for work. \n\nAfter he got into her SUV, Nic decided he was really going to ask his friend more than what he thought she might be willing to tell.\n\n\"Saint, obviously I could've driven but I want to ask you some things.\"\n\nHer response was a slight nod of her head.\n\n\"You mentioned that Jeremy had unsavory ties. What kind of ties were you talking about?\"\n\nShe pursed her lips, but didn't look at him, \"Why?\"\n\n\"Because if he turns those against me, I need to know if I can protect myself and Dee. I just want a clearer picture of who the man is. I obviously misjudged him. He hired a private detective and tried to use what he found out to scare David off. I mean what kind of mind does that? I made it clear where we stood months ago.\"\n\nThey stopped at a light before she responded, finally turning her large brown eyes to his. \"I told you, Mylonas is an ass. That sounds like something an ass would do. I have my suspicions about how deep he runs. Off the top of my head, I'd guess we help clean obscene amounts of money, for dirty companies.\"\n\n\"Come on Saint, it's a law firm.\"\n\n\"Not the entire firm, we're talking about Mylonas.\" \n\n\"Are you sure?\" \n\n\"No, but I'll do my best to connect some dots for you.\"\n\n\"If he's that connected, maybe we should just leave.\"\n\n\"I'm a runner Evangelista. It just ain't in you or Davey for that matter. Let me get you more than my best guess and then you can decide from there.\"\n\n\"Thanks Saint. But you will be careful.\"\n\nA smile played at the corner of her mouth, \"Aw Evangelista, don't worry about me. A little carnage is my modus operandi. No worries, I got this,\" she assured him as they pulled into the garage. \n\nNic did not know whether to be grateful or concerned. \n\nHe took the elevator to the third floor during lunch at Saint's behest. She called moments after they got in with the news that Jeremy was not going to be in. Nic's conversation with the man was inevitably delayed. His fingers itched to call his sister and find out if she had contacted him.\n\nBreezy was not out front. He ventured into Jeremy's office and he found her at his desk. \n\n\"Saint.\"\n\nHer somber expression and furrowed brows let him know she did not like what she was reading. He closed the door and took the chair across from her.\n\n\"I've gotten some research done. On the surface everything looks above board. I would love to tell you I was wrong.\" She worried her bottom lip and shrugged.\n\n\"But,\" he prompted.\n\n\"But there are some hidden files and they're encrypted. I may be able to get into them, but there's a possibility I could trip security measures. Actually, I don't think so; Mylonas doesn't seem to be concerned about protecting his information from me. Otherwise I wouldn't be reading his personal journal.\"\n\n\"Saint what do you have to tell me?\"\n\n\"He's not who I thought he was at all. You talking to him might be the best thing. Whether you know it or not you're the first person he's vibed with in a long time. I guess kind does know kind.\" She glanced at him and leaned back in her chair. \"Sorry, getting a glimpse into Mylonas' mind wasn't expected. I do have the name of the private detective. He refers to people by initials, but it syncs up to payouts from his bank account.\" \n\nNicolao knew that whatever she had read was powerful if Breezy felt sorry for her boss. He was tempted to turn the screen and see for himself, but he trusted her. \"So Dee was right,\" he said. We should talk to Jeremy.\"\n\n\"You both were right. Mylonas is a criminal, albeit a lovelorn criminal. He seems to have conflagrated what you saw as a potential relationship into The Relationship. He was changing his entire life for you.\"\n\nNicolao stared at her in wide-eyed disbelief. \"But he never indicated anything like that.\"\n\n\"Maybe he didn't want you to know. I don't know. I think we're over thinking this. What say we go to lunch and leave Mylonas' private thoughts private? I have a friend I can send the files; he can definitely tell us what's in them.\" \n\n\"Lunch sounds good. Let's leave Jeremy's files alone as well.\" Nicolao was reeling. Is that why Jeremy only ever begged for time? \"Thanks Saint.\" \n\n\"You're buying lunch again. That's thanks enough.\" Saint rose grabbing her purse.\n\n****\n\nThe next four days were free of Jeremy. Saint would have a list of what she needed to do in her inbox, but there was no direct communication. Nicolao called but was forced to leave a voice message. Against his better judgment David did as well with the same result.\n\nSunday they invited Breezy and the kids for dinner. Nicolao insisted on buying a fire pit and patio set the day before. Although winter had not relinquished its grip, David loved to spend time outdoors.\n\nDavid practically danced around the kitchen. He could still feel reminders of him and Nicolao's carnal activities, but it was truly a pleasurable ache. He belonged, he was home, he was happy, and now he was going to be happy with Breezy and the kids.\n\nNicolao found his mood infectious; it was the first time all five of them would spend time together. When Saint arrived with Able and Averie he understood why David was so excited. He knew Dee enjoyed the St. James family's company but seeing them together it struck him how much they genuinely loved him. David was easy to love.\n\nThe trio went out front to look at the car and Nicolao joined Saint in the kitchen. She had on jeans and a t-shirt. Her hair was down and she had adorned herself with wooden jewelry. She looked like the beatnik Dee spoke of.\n\n\"You need help?\"\n\n\"Yeah, I need a pitcher for the tea.\" Nic reached in a cabinet too high for her to get to and pulled out the pitcher. \n\n\"How the hell is Davey supposed to reach that?\"\n\n\"He doesn't make tea. Besides I like getting things for him.\"\n\nShe snorted, \"That's love logic for you. Hey, I've got a decent Corvina Veronese, want to imbibe while the under aged are out of the room.\" She went to one of the bags she'd brought in and pulled out a bottle.\n\nNic opened the bottle and poured the red wine, watching as she swirled the liquid expertly and inhaled. \"I didn't know you were a wine connoisseur.\" \n\n\"Hell man, ain't no such thing. Any wine you like is the best wine. I learned that in Napa Valley. My ex and I would go to the festivals and did a lot of the tours.\" \n\nNic sipped his wine, \"Balloon rides?\"\n\n\"Yeah, we did the whole romantic thing.\" Breezy's face took on the expression she had in Jeremy's office earlier that day. \"I still have my love of wine, so the west coast wasn't all bad. Parasailing sucks, so does sky diving, basically anything I've done which requires me to lose contact with the ground is on my never gonna do that shit again list.\" \n\nNicolao was treated to Saint relating stories of her disastrous adventures; most of them involving alcohol or a dare. They were interrupted by the sound of loud hooting coming from outside. He followed her outside to find a scene that defied logic. Averie was cheering and doing cartwheels on the lawn while David eased the car back into the driveway.\n\nBreezy laughed, \"Okay Rie, why the ruckus?\"\n\n\"David drove around the circle! Able did it two times before he convinced him he could do it, and he did!\"\n\n\"Oh, good job! You'll get that license in no time.\" Breezy called.\n\nDavid looked up, flashing the assembly a triumphant smile. Nicolao was shocked. He hadn't been able to get him to move beyond forward and reverse in the driveway.\n\n\"Um, Breezy... Able drove?\" Nicolao wondered at everyone's sanity.\n\n\"We travel alone, Evangelista. If something were to happen to me they have to be able to get to safety. So yeah, my twelve year old knows how to drive... stick too.\" \n\n\"Lord woman, you and your logic turn the world upside down.\"\n\nWhile the exchange was going on David and Able exited the car. \n\n\"Did it feel alright?\" Nic asked.\n\n\"No, but Able is persuasive.\" The two unlikely drivers bumped fists.\n\n\"Come on, dinner's ready.\"\n\nThey ate outside around the fire. When it was time for clean up, Saint insisted they help. Nicolao watched as David put a CD in and order was restored by swaying bodies. After the chores were completed, Nic and Breezy drank wine while the trio sang \"Limetree\" by Trevor Hall. Dee and Averie joined in the chorus, but Able was the surprise. The boy of few words had an amazing voice. David and Averie did an impressive lip sync to the Jack Black and Alicia Keyes duet. The best part of the entertainment was watching David dance. His slim hips did more than shimmy; he pivoted and spun his body in a way that showed a natural grace Nic had no idea he possessed. The night ended with the five of them dancing and singing to Florence and the Machines, \"Dog Days Are Over.\" If they had neighbors Nicolao was sure he would have much explaining to do. \n\nAfter the St. James family left, they showered. It wasn't late, but much to Nic's astonishment David went back outside. \n\nHe slipped into his coat and gritted his teeth against the cold. The smile that greeted him banished all traces of cold. \n\n\"Today was fun; the St. James's are a musical bunch.\" He sat beside David throwing his arm across his shoulder. \n\n\"Breezy says everything goes better to music.\"\n\n\"And you, I didn't know you could dance. We are definitely going dancing next weekend. You looked incredible.\"\n\nDavid's smile got wider at the compliment, \"It's a date.\" He did like to dance, and Nic hadn't thought he looked foolish, and wanted to go out. He leaned forward and kissed him with no preamble, but when Nicolao's icy nose touched his he laughed. \n\nNic sat up and chuckled but was not swept away in the mirth that gripped his beloved. His blue eyes sparkled in the firelight as he explained.\n\n\"I keep smiling because it's like joy just bubbles up. My heart, it's so full of love it feels like it's too big for my chest. Everything, everything right now is so good I can't help but laugh.\" David shook his head, sending blond spirals awry. \"Does any of that make sense?\"\n\nNicolao laughed, though his mirth was nearly silent. \"Mi lirio de los valles, I understand, and I feel the same way.\" \n\nThere was no pact, pledge, nor petition unanswered in that moment. They were simply carriers of the divine, relishing in bonded joy. He pulled David to him, and with teeth and tongue and lips, beneath fire and moonlight they loved, overflowing.\n\n****\n\nDavid stared critically at his reflection; his hair was getting too long. He was going to cut it. The curls made him look younger than he was. He turned sideways studying his profile the best he could. He was going to take the test for his permit. Nic had gone through the milk crate early that morning and found not only his birth certificate, but a photo of him as a baby with his mother. He looked like his mother, except for the curly hair. Her flaxen hair hung straight, he even had her dimpled smile. \n\nThere were more pictures but Nic had to go. After work, they were going to go through the contents together. And if Breezy did what she said she would, and pulled Nic into her office to work for her, he would be home at any moment; which was why when the door opened at 11:15am he thought nothing of it.\n\n\"I guess Breezy being Jeremy's secretary has lots of perks,\" he called out. He left the bedroom with only his jeans on. After all lunches at home could be a new benefit that came with car ownership.\n\nHe stopped at the threshold of the door. Without his glasses he knew the figure at the door was not Nicolao; the smell, the posture, the man's menace announced him as Benjamin.\n\nDavid's mouth was flooded by the taste of pennies. Uncle Ben was in his house, but that was impossible. There was a code for the gate and the door was locked. Nic always locked the door. For a moment his harried mind grasped at the idea he was dreaming, but he knew he was awake, and paralyzed. Because the fuzzy outline that was moving closer to him held an element not common in his nightmares, a gun.\n\n\"What, nothing to say to your uncle, Davey Boy?\"\n\nDavid stood mute, contemplating the feasibility of running and locking the door. He doubted he could outrun the bullet and what if Nicolao did come home early? An unconscious shiver ran through his body. He had to get rid of Benjamin before Nic arrived.\n\n\"Oh, don't do nothing stupid Davey. I can see you thinkin' and we both know thinkin' don't suit you.\" Benjamin advanced on him. One hand held the weapon; his other hand held a key with a paper attached which he shoved in his pocket.\n\n\"No, I ain't much of a thinker Uncle Ben. You're right about that.\" He was surprised with how normal he sounded.\n\nBenjamin eyed him with suspicion. \"Good, you're gonna be reasonable.\"\n\nDavid nodded.\n\n\"Seems you got yourself into a mess, made yourself an enemy, but that's what happens when you forget your place.\" \n\nHis uncle was standing directly in front of him, his finger on the trigger.\n\n\"I wasn't trying to make trouble, for anyone Uncle Ben. I'm just getting by.\"\n\nThat was the cue to raise his voice. \"Gettin' by! You ungrateful faggot. Ehat about me? You leave me with no way to pay rent or electric. You sittin' here, fuckin' some rich guy's toy and he sends me here to take care of your sorry ass.\"\n\nDavid's heart sank; Jeremy had sent his uncle to kill him? \"What do you want me to do Uncle Ben?\"\n\n\"Pack your shit and leave. That's what lover man is payin' me for. He wants some time alone with the other shit packer and needs you gone. Hell, I figured after all the shit I told them about you, he'd have kicked you out.\"\n\n\"Nicolao already asked me to leave.\" David walked by a stunned Benjamin making his way casually to the sofa.\n\n\"Stop lyin' you little shit. You thought I was him, and it damn sure didn't sound like you was talkin' to someone who threw you out.\" Benjamin stood above him, his finger still on the trigger of the small gun.\n\nDavid rolled his eyes, \"I thought you were his replacement. He works at the firm and I may be able to move in with him. He said he'd try to come by for lunch. Besides even if Nicolao came home early from work, I figured I'd try to convince him to let me stay. That private detective called him, and things haven't been good since.\" He hoped the lies sounded convincing. Channeling Averie may let Ben see him as who he thought him to be. He needed him to believe him and to leave. \n\n\u200e\"You fuckin' slut.\" Benjamin looked at him. \n\nBile rose in David's throat when he recognized the look of lust in his Uncle's eyes as he appraised him in his semi-nude state. He fought to keep the smirk on his lips and not drop his eyes.\n\nBenjamin licked his lips. \"Well, I'll find plenty of ways for you to make money. You're comin' with me Davey Boy. Garrett still asks after you. Now go get dressed and take anythin' that's worth somethin'.\"\n\n\"Sure Uncle Ben. There's a bank card in my wallet, and there's some jewelry on the dresser.\" David led Benjamin to his room and went in the closet leaving the door open. He slipped on a shirt while Benjamin rifled through his drawers. \n\nThere was no way to leave a message or a sign. His only hope was to get to his phone. If not, he'd go with Benjamin; at some point he would score, lose consciousness and he would leave him then. He put on shoes content with his plan to get the insane man with a gun away from their home and any chance of harming Nicolao. \n\n\"Okay Uncle Ben.\" He stepped out of the closet. \n\n\"Is that all you're takin'?\" Benjamin no longer had his finger on the trigger, but held the gun in hand. \n\n\"If you want me to disappear, we have to go before Bud gets here right?\"\n\nBenjamin gave him a hard stare, weighing his sincerity, then nodded. \n\nThey both startled as a car door could be heard closing. \n\nNicolao was home.\n\n\"Ben let me handle it.\" David ran past his Uncle, ignoring the gun. He had to keep Nic safe. He threw the door open and darted outside. \n\nNicolao stepped towards him, but David shook his head. Puzzled Nic stopped and waited. For a moment they looked at one another. Nicolao expected nervous chatter from his boyfriend. David contemplated if it could be the last time he saw him for a while. His body of its own accord leaned toward Nic's direction; prompting Benjamin to come through the open door and stand directly behind his nephew.\n\n\"Nicolao I'm leaving with my uncle, just like you asked.\" David's voice sounded distant to his ears. \"If you can forgive me for the things I've done, maybe we'll talk in a few weeks. Just let us leave now.\"\n\nNicolao stared at the broken man at David's shoulder. There stood the man he yearned to mangle, coming from inside their home and too close to his David. \"I don't want you to go Dee. Why don't the three of us go inside and talk it out?\" \n\n\"Naw you heard Davey he's leavin'.\" \n\n\"Oh but he's not going a goddamned place.\" Nic stood next to the car hoping to goad the man into an attack. \n\n\"Why not? Hell when I got here he was waitin' on some other fag. The boy's a whore mister; I'm just takin' him home.\"\n\n\"Home? That tin rat-trap you aren't even man enough to pay for?\n\n\"You don't know shit about me.\" \n\n\"No, you're not Uncle Ben, the one who pimped out his own flesh and blood? But of course not before partaking yourself, right? I have to ask what level of inept sick fuck has to get off on children? Dio aiutami; you can't really like the forced attention of a child. Was it the power? Did it make you feel like a man taking advantage of a kid? Your only nephew.\" As he spoke Nicolao strode closer to them. \n\n\"Shut the fuck up Geronimo, and you lyin' shit stain. What'd you tell him?\" Benjamin kicked David in the back of the knee sending him down. \n\nThe gun was then visible to Nic and Ben raised his arm aiming to hit David in the head. Nicolao ran to tackle the man but was stopped in arms reach as the gun was pointed at him. ",
        "\"Nic no, no.\" David begged on bended knee. Nicolao was going to get hurt trying to protect him. \n\nThe large man cast his eyes down at his cherished. \"I swear I won't let him hurt you.\"\n\n\"Ain't you a dumb sonofabitch. How about I just shoot you?\" \n\n\"You can't hurt him Ben, Jeremy wants him. If you shoot him, you won't get paid.\" \n\nBenjamin's hands shook, he needed to get well and everything was going to shit. He kicked David in frustration. He was right. All of this was for Mylonas, but that Mexican Indian mother fucker was fucking everything up. \n\nNicolao closed the distance between them. Ben swung the gun to hit the charging man's head, with his finger on the trigger. The sound of the gun was as it was always, loud and life ending.\n\nIn the ringing silence of stereocilia breaking, David watched as Nicolao fell, blood pouring from his head. His mouth opened with no scream. He was dumb, but he scrambled to him. Then pain, as Benjamin hit him with the gun. Stunned, he fell on the motionless body. \n\nBen pushed David out of the way and rifled through Nicolao's jacket pocket, until he found the keys. Maybe they would blame the shooting on Davey. No one knew he was there, and if the rich asshole told about him he would be in trouble too. Benjamin looked at his nephew. The car and David would keep him flush for a while. He grabbed the young man by the hair and dragged him to the vehicle. \n\nHe shoved him in the back seat. Ben bound his wrists with the chord of the cell phone charger he found on the front seat, cranked the car, and backed out. \n\nWhen the car began moving David's voice returned. \"Please Ben, call 911. Get him an ambulance, please.\" David could see Nic on the ground, a red corona around his head.\n\n\"The dead don't need 911, Davey Boy.\" \n\nThey drove out of Hope's Cove, away from all of the things that were David's life.\n\nJustice ducked down when the black car drove past with only one of his friends inside. He knew the sound of gunfire, intimately. Something was wrong in the special place. He focused on what he was supposed to do when things went wrong. Jeremy. He was to get Jeremy. \n\nThe keypad had been left open by the man he didn't know. Which was good, he didn't have to look for the key. He punched the number to the office, with ease. \n\n\"Hello?\" A woman answered. \n\n\"Get me Jeremy; tell him it's an emergency.\" \n\n\"He's not in-\" \n\nJustice pressed the red button, ending the connection. The link was only from the keypad to the office. He had a cell phone. He pulled it out of his pocket, hoping it was charged; he used it once a week. He dialed one of the five numbers in his contacts, the number that was for emergencies only. \n\n\"I need you, at Sybil's place.\"\n\nHe put the phone in his coat, and ventured a look in the open gate. He was not supposed to get involved with things anymore. Jeremy told him he had to wait, and he would fix it.\n\nJustice shook his head at the idea. He didn't wait on other people, that boy had it all confused. He walked through the gate, for the first time in years.\n\nNicolao opened his eyes. He was on the ground. He began a swift self inventory. He was on concrete and bleeding. He placed both hands in front of him and pushed himself to his knees, blood ran from his head into his eyes. Dee? Where was David? He turned his head and saw the car was gone. A groan of frustration came from his lips. \n\nHe had him. Benjamin had taken him, he had let that vermin take him. Nicolao lurched to his feet with purpose. He had to get to a phone. The pain in his head caused his knees to buckle, as he stumbled he felt arm on his torso steadying him.\n\n\"Slow down, young buck.\" \n\nNic stared in Justice's face, as the old man threw his arm over his shoulder and began moving into the house.\n\n\"Justice, he has David. Call the police.\" Nic fumbled for his phone.\n\n\"Calm yourself. I called. Work on getting inside, you're too big to carry if you fall out.\"\n\nNic allowed himself to be lead inside and pushed on a stool. \n\nJustice removed his tattered gloves and washed his hands in the sink. He filled a bowl with water and grabbed dish towels. He explained while he worked.\n\n\"I heard the gunshot and saw the man leave with your boy. I called, so help's coming. It's been a few minutes just keep focus and clean some of that blood off your face.\" Justice handed him a wet towel, while he scrutinized his cut. \n\nGingerly the homeless man examined the wound to Nicolao's scalp. \n\n\"Looks like the bullet grazed you.\"\n\n\"The gun went off when he clubbed me with it.\" Nic listened. \"Justice, there should be sirens, who did you call?\"\n\nBoth of them turned to the sound of squealing tires. Jeremy ran through the open door. \n\nHe stopped and took in the scene before him. Justice was fine, he was doctoring Nicolao.\n\nNic stared at his former friend. His head was throbbing and he struggled to discern what he knew: Justice was sane, David was gone and Jeremy was there. The world had switched to reverse and the elementary logic of the new land confounded him.\n\n\"Someone took David, and gave him a permanent part. Stole that black Impala they just got. We still run passage here?\" Jeremy nodded, \"Call in with a description.\" Justice looked down at Nic, \"He had the code and key, a friendly. Where do you think he took him?\"\n\nNicolao didn't change his gaze. \"It's his Uncle Benjamin, they may be headed to the Under.\"\n\nJustice raised an eyebrow at Jeremy. \"This doesn't have anything to do with us then. Good. But make the call.\"\n\n\"Right away,\" Jeremy got his phone, \"Justice are you alright?\" \n\nJustice shrugged, \"Adrenaline maybe. I'm here for now.\"\n\nNicolao held the cloth to his head and listened as Jeremy called in the description of the car and David. \n\nHe hung up and approached Nicolao.\n\n\"The entire place is sewn up, especially if they head back to the Under. We need to get you to the hospital, but Nicolao what exactly happened?\" \n\nJeremy was standing in his home, his home with his David and he was asking for an explanation.\n\nNicolao stood, letting the blood soaked towel fall. \"What happened? You gave a rabid animal access to our home, and act surprised when it attacked?\" His voice was calm, unnervingly even. \"Did you even call someone or was that for show?\"\n\nJeremy stepped back, \"I called, of course I called.\" He sighed, things were going to hell. Nicolao obviously knew he had sent the uncle. \"None of this was supposed to happen. Ben said that he would talk to him. I only wanted to protect you, and preserve us. I needed time, your time so I could explain.\" \n\nNicolao battled silently for control, internally searching for the voice of his prayers, but found silence. Despair rose from the depths of his soul stripping him of the safeguards of intellect and reason.\n\nJeremy mistook his stillness. \n\n\"I never meant for you to get hurt.\" Jeremy stepped closer and touched Nicolao's discolored bloody temple.\n\nThe contact unhinged him, his mouth filled with wretchedness, and he howled. Nicolao grabbed the offending hand and struck Jeremy in the jaw with the other. Jeremy spun with the hit, managing to pull his arm free.\n\n\"Nicolao wait! Let me explain.\" Jeremy faced him palms up, he knew how to defend himself, but he would not unless he absolutely had to.\n\nNic charged, pinning him against the wall in the living room. His right forearm pressed against Jeremy's neck and holding one arm while his other hand gripped the other arm.\n\n\"Explain? What can you explain? You had some P. I. tell you lies fed to him by Benjamin. A sack of shit, heroin junkie, that molested the only good thing in his life. \"\n\nIndignant anger left Jeremy's hazel eyes.\n\n\"Then sold him, and offered him up to men to use. While good people like you, did nothing, made him feel like he was trash. When it's you that's the real filth, you commit crimes in thousand dollar suits, and hope the money makes you clean. The day before I came to you I found him beaten in that hell hole and you send that lunatic here.\" \n\nThe truth of his words was evident; he hadn't wanted to see it. Jeremy did not struggle against Nicolao's grip. Nicolao let his arms go, but continued to talk.\n\n\"We tried; he wanted to talk to you, ojete. You only had to call; he was going to tell you himself. But you didn't. You sent him. He could kill him, my D-\"\n\nForming the name of his most dear slipped the final bond of civility. \n\n\"David!\" \n\nJeremy blocked the first hit, but the unrestrained force took him to his knees. The next blow had blood filling his mouth. Jeremy fell to his hands then raised himself onto his knees. His hands limp at his sides. The bones of his cheek fragmented under the next hit and sent him to the carpet. \n\nNicolao grabbed him by the collar, his pain demanding more retribution.\n\nJustice threw himself between him and Jeremy's body. \n\n\"No more, no more! Please, don't hit my son anymore.\"\n\nNicolao stared. In order to get to Jeremy he would have to harm Justice. They were all mad he decided and let go. Jeremy's limp body fell into the black man's arms.\n\nHe walked to the counter in the kitchen. His head and hands throbbed, where were the police? Feeling drained he rested his head on the counter, that was when he noticed Breezy standing in the open door.\n\nBreezy watched the peculiar play she had walked in on. Nicolao took notice of her and she forced herself into action. She took a clean towel from the counter and went to the freezer. She made a quick ice pack and placed it on Nic's wound. \n\nShe did not like the look in his eyes, it was unsettling. She spoke softly, as she held the ice in place. \"Nicolao, tell me what's happening.\"\n\nNic closed his eyes. He had no real answer; it was all loco. \"Jeremy let David's uncle in here while I was at work. He was kidnapping him at gunpoint when I arrived. I charged and got this,\" he raised his hand to his head. \"He stole the car and took him while I was knocked out. Justice helped me, and then Jeremy showed up. They keep saying they called the police, but no one's come but you.\"\n\n\"Alright, do you need an ambulance?\" She stepped back as he held the makeshift pack to his skull.\n\n\"No ambulance. Saint I have to find him. I need your truck.\" \n\nBreezy nodded, \"We'll go look for him. I swear.\" She went to the refrigerator and pulled out a bottle of water and more ice. \"Let me talk to them for just a minute. Find out who's out searching. Here drink this water for me,\" She put the ice in another towel. Nic's eyes made her afraid for him. Whether shock or trauma or loss the man was on the edge.\n\nShe walked over and squatted beside Justice in front of Jeremy, offering him the ice pack. When he made no move for it, Justice took it and placed it on his cheek. Jeremy's face was swollen and bloody. His left eye was blood red and closing fast. \n\n\"Did you let Benjamin in?\"\n\n\"Yes.\"\n\n\"Mr. Mylonas we have to find him. Nic thinks David is in real danger. You can't think to hide what you've done, or that Evangelista's gonna let this slide. You did call the police, right?\"\n\n\"I told him,\" Jeremy winced as he tried to open his mouth, \"I called.\"\n\n\"He called our people, a good piece of the highway department and troopers are ours. We still own the roads. They can't have gotten too far. We'll find him.\" Justice offered.\n\nBreezy did not hide her incredulity, \"You've got people?\"\n\n\"Lil girl, you work for Hale, Loundes, and Drewery that means I got you.\"\n\n\"Pardon?\" \n\n\"Ethan Hale,\" Justice said his name; he had not been himself for so long, it felt good. \"I think a smart lady such as you understands what that means.\"\n\nBreezy looked at her boss and hearing no denial took the man's words as truth. He was retired Judge Ethan Hale. Her agile mind processed the information. \"Fuck.\" \n\nThe three spoke in hushed tones, Nicolao watched them with growing unease. He had to leave to find David. \"Saint!\"\n\n\"Coming now.\" Before she got to her feet, Jeremy's phone bleeped.\n\nHe removed it, but it was evident speaking was becoming difficult. \n\n\"Yeah, I'm handing you off. Talk to her.\"\n\nBreezy took the phone, \"Secretary... Brecia.\" She stood a smile coming to her face that faded as quickly as it appeared. \"I'm still here. Peltier?... Headed there now.\" She walked toward Nic. \"Thank you.\"\n\n\"They found Davey. They were on the interstate. The trooper had just spotted them when the car lost control; he's been transported to the hospital. We have to go to Peltier right now.\"\n\n****\n\nDavid heard nothing Ben was saying. \n\n\"They will say you shot him for tellin' you to leave. I'm gonna take care of it, get you somewhere safe.\" But Davey had seen him shoot someone, and if he died his nephew was the only witness. Davey had a bank card. Why hadn't he gotten the big man's wallet with the keys? He sure as shit wouldn't need it. He would drive a few hours out. Get the money and find a taste. Then sleep in the woods. Benjamin took the interstate ramp, eyeing his nephew in the backseat. What was he going to do with Davey?\n\nDavid looked out of the window, wrestling with his thoughts. The image of Nicolao falling replayed on a loop in his mind's eye. God is senile and life a sadistic bitch, he thought, trying to connect to his old truth. But even with the certainty that his soul no longer had a home he could not regain that truth. It had been his truth, until that morning on the bus, but no longer.\n\nHe had spoken to the most beautiful man and had been rewarded with... everything. He had love and that was the truth of it. Every day was a blessing. All life was filled with so much beauty; Nicolao had shown him how to know it. Riding behind the ogre of his childhood, he still knew it. Cars drove along the same roads leading to everywhere. The world kept spinning in orchestrated chaos. The sun's rays still warmed all, and Nic was bleeding on the concrete. The workings of life were all around him. He would have none of it, if he could no longer share it with Nic.\n\nDavid shifted his lower back onto the backseat. He drew his legs to his chest and kicked. \n\nThe impact caused Benjamin's head to snap sideways, reflexively he jerked the wheel. The black 1967 Impala shot across the interstate, ploughed through the grass median, across the lanes of oncoming traffic, tipped down the slight embankment, then stopped.\n\n... final chapter soon \n\nFlower and Language translation: \n\nPhlox: Souls united\n\n\u00bfSabe c\u00f3mo tu irresistible que eres?: Do you know how irresistible you are? \n\nme cosume: I'm consumed \n\nme estoy ahogando en que: I am drowning in it.\n\nNunca es demasiado pronto: It is never too soon.\n\nUna y otra vez: again and again...\n\nPaseo me: ride me \n\ncualquier cosa que necesites: anything you need\n\nDio aiutami: God help me (Italian)"
    ],
    "authorname": "seeker71",
    "tags": [
        "gay romance",
        "gay novella",
        "gay drama",
        "oral sex",
        "anal sex",
        "gay love",
        "younger male",
        "latino male",
        "spurned lover",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/deciphering-the-bloom-ch-05"
}