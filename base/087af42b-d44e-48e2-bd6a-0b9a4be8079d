{
    "title": "Fucking Machine Letters: Sandra",
    "pages": [
        "My girlfriend is always willing to try new things when it comes to our bedroom activities and while she is normally not inclined to suggest an idea she is more than happy to entertain my wishes and fantasies. I'm sure that part of the reason for her enthusiasm is that my fantasies are almost exclusively about giving her bigger, better and more frequent orgasms. What more could a girl ask for?\n\nShe has found herself tied down, spread-eagled, blindfolded and gagged, shuddering through climax after climax as I ravaged her glistening pussy with my cock. With much trepidation she spread her lovely cheeks and allowed me to penetrate her exquisitely tight asshole and then thanked me for the mind-blowing convulsions that resulted. Love chairs, vibrators, mutual masturbation, prostate milking, learning to deep throat; the list goes on and on and most of time we get to add a new experience to our repertoire.\n\nSometimes though, the fantasy exceeds the reality and we have to just smile and move on to something else. As much as my girlfriend likes the orgasms from anal sex the preparation and the initial discomfort destroy the mood for her and I don't get to fuck her tight hole as much as I would like. The same goes for spanking, sixty-nine (sadly, she is unable to multi-task creating another mood-breaker), and public sex.\n\nFortunately the hits far outweigh the misses but it was my latest failed fantasy that led us down an unexpected path of sexual satisfaction. While browsing an internet adult toy website I discovered a whole page of fucking machines which were essentially motorized shafts with dildos attached for unlimited penetration into any willing orifice. What girl wouldn't want a cock that never got soft and never got tired while moving in and out of her hungry love holes? I found myself fascinated by the idea of using a fucking machine on my girlfriend, imagining the endless orgasms she would experience as a cock that was bigger and longer than my own slid between her wide-spread legs and stroked in and out of her hot, wet pussy for hours while she wrapped her mouth around my hard shaft and coaxed a creamy load of cum down her throat so it wasn't long before the \"Endless Love\" machine was tested in the bedroom. The story of that failed attempt does not make for very interesting reading but suffice it to say that I now had a fairly expensive fucking machine gathering dust in my bedroom closet and visions of an internet auction dancing in my head to try and recoup my losses. A risqu\u00e9 conversation with a co-worker changed everything.\n\nSandra is one of my officemates and presented the typical dilemma that confronts every red-blooded male with female coworkers. Long dark hair falls to the middle of her back and frames a wholesome girl-next-door face with a cute nose, a ready smile and sparkling eyes. She is pretty, flirtatious, fills her casual conversations with sexual innuendo and sends dirty jokes through email. It's always a thin line that I have to walk when talking to her because you never know when you're going to go too far and be accused of sexual harassment or damage your working relationship with a woman like Sandra but the fun of talking to her usually outweighs the danger and auction day was no exception.\n\n\"How's it hangin' Robert?\" Sandra chortled as she bounded into my cubicle where I was preparing to auction my toolbox of pleasure. \"What are you do...?\"\n\nI swung my chair away from my workstation to see her staring wide-eyed at the pictures I had taken of the machine which I had printed out as I was preparing the auction. I swept the pictures up and waved my other hand dismissively. \"Just some junk I'm getting rid of.\" I tried to keep the nervousness out of my voice as I swung back toward my computer screen and hit the minimize button to hide the auction page. I wasn't quick enough.\n\n\"You want two hundred and fifty dollars for a toolbox?\" Sandra exclaimed in disbelief. \"It better be good in bed for that kind of money.\"\n\nI chuckled. \"Funny you should phrase it like that. It's actually pretty good in the bedroom.\"\n\nYou could have heard a pin drop. I was now standing on the line that should never be crossed in the office. I turned back toward her and watched her reaction. She was standing in the doorway in a form-fitting black dress which definitely displayed her small breasts to their best advantage. She was breathing deeply now and her eyes flicked back and forth between my empty computer screen and the pictures in my hand. He hands twitched nervously at her sides. And just like that she stepped onto the line herself.\n\n\"OK, let's see the pictures.\" She held out her hand which was noticeably trembling.\n\nMy brain was riffling through the numerous scenarios that now presented themselves. Embarrassment for one or both of us; a claim of sexual harassment; the most erotic office conversation I could imagine; shock such that Sandra could never look me in the eye again. I pulled the pictures back and slid them into the open envelope on my desk. \"I don't really think we should pursue this at the office. If you really want to see the pictures we can grab some lunch and I'll let you have a peek.\" I figured this would give her another chance to step back from the line and give me a little more comfort if she still wanted to see my fucking-machine in all its glory.\n\nSandra was staring at the envelope in confused fascination. I watched as her tongue peeked out to wet her lips while her hands continued their aimless twitching. After a moment of contemplation she made her decision.\n\n\"How about Giorgio's in half an hour?\" Her expression seemed to be daring me to keep pushing forward.\n\n\"OK, half-an-hour it is.\" I swung back to my workstation and pulled up the project I was currently involved with. I could feel Sandra's eyes staring at my back and it wasn't until she stepped away and headed quietly back to her own office that I let out a deep breath and pondered where this was heading.\n\nExactly thirty minutes later, Sandra reappeared, holding her purse and grinning. \"I'm hungry and curious. Let's go!\" She tapped her foot impatiently.\n\nI swept up the envelope and some additional pages I had printed out about my little toy from the website where I had purchased it. All the enticing marketing information as well as customer reviews. I figured she would have questions and despite our easy-going friendship I was pretty sure that the lunchtime conversation would get awkward. Plus we were going to a public place so I wasn't sure other lunch patrons wouldn't be a little put-off by a sex-machine discussion. Reading about it would be a little easier.\n\nWe walked the two blocks to Giorgio's in record time, making small talk about office politics and the weather while trying to pretend that the envelope in my hand did not exist but it was obvious from Sandra's glances that the elephant in the room was screaming for attention. We quickly settled into a booth and placed our order. As soon as the waitress walked away Sandra held out her hand and grinned nervously.\n\n\"Hand it over.\"\n\nI glanced around at the other disinterested diners, shrugged and slid the pages and envelope across the table. \"Here is a full description and some reviews which you may find interesting.\" I grinned back at her. Now that we had both crossed the line the tension evaporated and I sat back and watched her face as she scanned the pages while flicking through the photographs. Her eyes widened and her mouth fell open as she examined a photo of the machine with a dildo attached to the shaft. \"How big is this?\" she whispered, pointing at the photo.\n\n\"Twelve solid inches.\"\n\nI watched for the first time as Sandra flushed a deep red. I couldn't tell whether it was embarrassment or excitement but even in the dim light of the restaurant the change in her skin color was obvious.\n\n\"I thought it might be something like this and I've heard of the Sybian but this is something else entirely. Why are you selling it?\" She flicked through the pictures again but came back to the dildo shot and examined it again while she waited for my response.\n\n\"Let's just say that it's not everyone's cup of tea.\" I had decided on this answer ahead of time knowing that the question was sure to be asked. Sexual innuendo is one thing but I didn't want my private life to be the focal point of this conversation. I pasted on a lopsided grin. \"Nothing ventured, nothing gained.\"\n\nSandra nodded but I could see that her mind was already somewhere else. Her next sentence had obviously been considered ahead of time as well and left me open-mouthed in shock.\n\n\"I can't afford to buy it. Would you consider lending it to me before you sell it?\" She dropped her eyes to the table and spoke in a voice so low I had to lean forward to hear the end of the question.\n\nI was totally flummoxed and every sound in the restaurant vanished so that it seemed like we were the only two people in the room. My brain couldn't begin to process all the images that popped into my head. Sandra naked, Sandra lubing up a dildo, Sandra spreading her legs, Sandra impaled on the shaft, Sandra turning on the machine. My mouth was moving but no words came out. I shook my head to try and clear it so that I could respond intelligently.\n\nSandra finally looked up from the table looking for my answer and saw my head shaking. \"Don't say no. Let me sweeten the pot. I can't pay for it but how about if I borrow it and I will write a review of my experiences. It will be for your eyes only. You would have to promise not to show it to anyone else. It would have to be a little secret just between the two of us.\" She grinned conspiratorially but I could see that the hand holding the pictures was shaking quite noticeably.\n\nI couldn't believe my good luck. I was going to say yes anyway with no conditions and now I was going to get her experiences on paper. The thoughts about what my girlfriend would think flashed by but I chose not to examine the consequences of my deal too closely. I wanted this deal. \"You have to purchase your own dildo. It's not really a shareable object.\"\n\nThe waitress arrived with our food cutting off Sandra's response. We settled down to eat again reverting to small talk. After the check arrived Sandra settled back in her chair and sipped her drink. \"I've never done...Hell, I've never even thought about doing something like this. I don't think I'd be too comfortable purchasing something like what's in this picture.\"\n\n\"It's a pretty personal thing and there are lots of different types. Big, small, long, thick, hard, soft, solid, and bendable. The list goes on and on. If there's one area where inventiveness shines, it's with sex toys.\" I was definitely in my comfort zone here having spent countless hours surfing and browsing adult stores pursuing my own perverted interests. \"Are you telling me you've never used a vibrator?\"\n\nSandra pondered a moment as if afraid to reveal too much. This was definitely not workplace banter. She sighed. \"Yes I have but you can pick up a 'massager' at a drug store. I don't have to shop at those places.\" She grinned. \"Not that there's anything wrong with those places.\"\n\n\"I'll give you a good website and you can pick and choose what you want from there. The machine is out in my car so you can put it in your car when we get back to work and return it when you're done your evaluation.\" My brain flashed the naked pictures of Sandra again.\n\nSandra eyes now sparkled. \"I guess if I've gone this far, what can be so bad about a website.\" She shifted in her seat. \"Let's go. I am actually looking forward to this.\"\n\nWe paid the check and strolled back to work, enjoying the sunshine and talking as if the restaurant conversation had never happened. We were just two coworkers enjoying an afternoon lunch and making a deal on a fucking-machine loan. I transferred a non-descript black and yellow toolbox with a hole bored in the side into her car. The whole day seemed surreal to me as settled back down at my desk, cancelled the auction, sent the website to Sandra and got back to work. Now I just had to wait for the review.\n\n***\n\nThe first few days were frustrating as I couldn't stop thinking about what might be happening at Sandra's house. She didn't avoid me but she also didn't go out of her way to chat me up even though she was just a couple of cubicles away. She stopped by once with a quick update which only served to heighten my fantasies. \n\n\"You were right. I couldn't believe all the choices I had. Just thought you'd like to know that it's in the mail. Should be here tomorrow, I can't wait.\" And with that she strolled back to her own office. I growled under my breath. She must have realized what that simple statement would do to me because a couple of minutes later my email displayed a message from her.\n\n\"I plan to thoroughly review it as promised.\" \n\nEvery day after that was filled with Sandra fantasies. It's a good thing my girlfriend couldn't see inside my head but I really couldn't control my imagination.\n\n\"Robert\"\n\nI turned at her voice to and found her standing in my cubicle doorway holding a large brown manila envelope. My cock instantly hardened as she glanced both ways and then stepped into my office and sat down slowly in the empty seat.\n\n\"As promised.\" She slid the envelope across my desk. My name was written neatly across the top and clear packing tape was wrapped completely around the end sealing its contents. \"I would appreciate it if you waited until you got home to read this.\" She stood up as I picked up the envelope and wiped her hand across her forehead. \"I've kept my end of the deal. I expect you to keep this just between us. I don't want to lose my job or lose your friendship.\"\n\nI casually held the envelope in my lap to hide my excitement from her. \"Lunch tomorrow?\" My voice actually cracked when I said it, probably revealing how I was feeling anyway.\n\nThe grin and the twinkle returned to Sandra's face. \"I'm not sure I can walk very far. It was a looong night last night. See you tomorrow.\" She walked out, leaving me with an envelope that actually felt warm in my hands. The rest of the day was a blur with the envelope screaming to be opened but I felt honor bound by her request plus I wanted to read it in private anyway so it remained sealed. \n\nI actually left work a little early as the suspense was killing me and so I got home before my girlfriend leaving me some alone time to read Sandra's review. I settled onto the bed and slid a knife through the tape unsealing the envelope and pulled out several handwritten pages which far exceeded what I thought she would do with her review. I was expecting a paragraph or two or maybe a single page. I could barely contain my excitement as I read about Sandra's experiences with the fucking machine.\n\n***\n\nNever in my wildest dreams or erotic imaginings have I ever imagined that I would be writing a letter about my experiences with a fucking machine. Your fucking machine. Just writing the word \"fucking\" feels strange but a deal is a deal and so I put pen to paper to satisfy my end of it. At first I planned to write only when I was finished this unique experience in order to keep it short and simple but it doesn't seem fair to give you a quick paragraph and so I have decided to give you a running account of my activities. So let the games begin...\n\nI assumed before lunch that it was some kind of orgasm machine and decided to see if I could try it out. The minute I saw the pictures and realized what the toolbox actually did I became a different person imagining what it could do to me. I remember sitting in the restaurant feeling my nipples harden until they actually began to hurt. Each picture sent another wave of pleasure down to my vagina and I am embarrassed to say that you must have been able to sense the effect they were having on me. I was sure you knew my panties were damp with my excitement. I couldn't wait to get home and as I unloaded it from the car I imagined that the neighbors next door knew what I was carrying and that they were picturing me using the device. I rushed up to my room and booted up my laptop so that I could pull up the website you recommended. While I waited I slid my hand up under my skirt and ran my fingers along my labia feeling my hot juices and my soaked panties. You'll be happy to know that within 10 minutes of arriving at home I was totally naked, sitting cross-legged on my bed, surfing the website for dildos with one hand while my other hand roamed up and down my body. My nipples tingled as I fingered and pinched them. They were so tight and hard with excitement that I literally had to gasp at the exquisite jolts of pleasure and pain that emanated from my upraised and heaving breasts. When I finally slid my hand down between my legs I started to giggle at the amount of moisture that covered my fingers. I've felt the heat down there before but this was totally different. The air between my legs felt like the top of a stove giving off waves of warmth that wafted the smell of my excitement all over the room. The first touch of my fingers to my labia set off a muscle spasm in my thighs and sent bursts of pleasurable feelings directly to my nipples. As all these tingling sensations swept over me I got a little scared. If just looking for a dildo to use with this machine was causing this reaction I couldn't even imagine how I would feel when I put \"Endless Love\" through its paces. \n\nYou said something about inventiveness with sex toys and you were so right. I never could have imagined the world that existed on that website. I found myself wandering from item to item imagining how I would use them while my hand continued to idly stroke my juicy slit. It was so exciting that I had to force myself to avoid my clitoris which was throbbing in tandem with my nipples. I knew that if I just so much as touched that hard button I would never finish my shopping and this was one trip where I was eager to continue. It took quite a while to find what I wanted (or thought I wanted) because I kept getting off-track as I clicked through suggestions being offered by the site or a review mentioned an item that sounded intriguing. This was definitely a whole new world for me and I became fairly certain that this would not be my last time at this particular site.\n\nJust the assortment of dildos set my mind to reeling and as I read the reviews and examined each one my finger continually dipped into my pussy, circling the edges of my hole and basking in the heat and juices that continued to emanate from between my legs. Before this moment, I would never have entertained the thoughts that filled my head as I stared at the selection of artificial cocks that were vying for my attention. I stared at a double-headed dildo and without thinking m my fingers slid lower to circle the tight pucker of my asshole. Call me na\u00efve but I had never considered anything penetrating me in that hole but suddenly I wanted to know what it felt like. My juices were flowing like a leaky faucet soaking the palm of my hand as I lightly fingered my tight (I assume it's tight as I have never had anything up there) ass. The tip of my finger probed my anus and because of all of my own natural lube it slid right in to the first joint. I have to say that it was extremely enjoyable and I wanted to explore this new sensation some more but there was more shopping to do and so I reluctantly resumed my languid masturbation while searching for the perfect dildo and it wasn't long before I found exactly what I was looking for.\n\nThe minute I saw it my pussy twitched in obvious agreement with my choice. Twelve inches long (something about the idea of a foot-long cock is very enticing), life-like color and shape with veins running the length of the shaft. The reviews raved about it as being stiff but bendable as well as absorbing body heat and feeling like real skin. What more could a girl want? I bought it as well as a couple of other interesting items and as soon as the order went through I brought my other hand down to spread my quivering lips while I finally touched my clit with a firm circular motion that set my legs quivering. As my orgasm approached I slid one finger deep into my pussy, picturing my newly purchased dildo filling me up and as the laptop tumbled to the bed I surrendered to one of the best climaxes I have ever given myself. The contractions were trying to keep up with my wildly beating heart and I fell back on the bed as the feeling spread to my whole body, curling my toes, forcing my nipples to stiffen even more as my world contracted into a single explosion of pleasure. ",
        "I am sitting at my desk writing this part of the review and I am staring at a huge damp spot in the center of my bed. My stomach muscles feel like I've been doing crunches for the last half an hour and the quivering in my legs won't go away. I'm not sure what is happening to me but I like it and I don't know how I am going to be able to wait until my package arrives. I can't wait to try out the fucking machine.\n\n***\n\nThe first part of the letter ended there in the middle of the page and resumed on the next page. My hand was shaking as I read the last few words and pondered the best damn letter I ever read. My cock was as hard as steel and my brain struggled to keep up with all the erotic images that Sandra's words conjured. I had to smile for my other hand was in my lap languidly gliding up and down my shaft, mirroring Sandra's own actions. I hurriedly unzipped my pants to relieve the pressure and watched as my cock sprang into view with the head coated in a fine sheen of pre-cum. I couldn't wait to read the rest of the review so with one hand slowly stroking my hardness, I turned the page.\n\n***\n\nIt came today and OMG it's huge. I actually tracked my order and knew what was waiting for me when I got home and I was not disappointed. My pussy was soaking my panties long before I picked up the package from my front porch and scurried up to my bedroom to examine my new purchases. When I slid the dildo out of its packaging after tearing open the box I was shocked at how big and heavy it was. I've wrapped my hands around my share of cocks and fantasized about big ones, but this exceeded my imaginings by a long shot. My fingertips just barely touched as I examined the girth of my new toy and I'm almost embarrassed to admit that I immediately opened my mouth and wrapped my lips around the head. The strain on my jaw told me what my hands already knew; this was a monster and while I wasn't sure my pussy was up to the task of handling something this big the tingling and dampness between my legs assured me that my love hole was more than willing to try. My eyes focused on my open closet where I could just see the corner of the toolbox peeking out from behind one of my long dresses. Still clutching the dildo, I went over and pulled out the machine with a trembling hand.\n\nI had already given some thought to how I would try out my rental and I had actually played with it last night so that I wouldn't be fumbling around during the test and it didn't take long to set it up. I rolled my dressing mirror to the foot of the bed so that I could watch everything and then placed the toolbox on a kitchen chair next to the mirror and stacked up some pillows to help with the alignment of cunt to cock. I slid the metal rod into the hole in the toolbox and screwed it onto the motor inside. The dildo locked onto the rod just like you said it would. I laid the control switch on the bed and stood back to admire my handiwork.\n\nI continued to stare at the erotic tableau laid out like a still-life painting, waiting for a human subject to complete it. And that human subject was me, sliding my wet panties down my long legs to puddle at my ankles, followed by my skirt. I unbuttoned my blouse, fumbling with the buttons while my foot-long cock-substitute hung in the air over my bed looking like a perverted magic trick. When my bra straps slid down my arms and the air in the room washed over my breasts I had to marvel at the effect it had on my nipples which sprang to attention begging for more stimulation and I was more than happy to comply.\n\nSo for your benefit I found myself standing naked next to my bed kneading my breasts with my stiff nipples peeking out from between my fingers. My skirt, blouse, bra, and panties wet with my anticipation are crumpled on the floor at my feet and already the hair over my pussy is glistening with my juices. A 12-inch dildo beckoned me, pointing at the bed like some pornographic street sign while my dressing mirror faces the bed, reflecting my nude body standing, flushed and ready nearby. I can already feel a single drop of pussy juice sliding ever so slowly down my inner thigh sending a tiny shiver through me each time it stops and starts in its downward journey. I assume that you'll never look at me quite the same when we're at work but a deal is a deal. I wonder what you are doing while you're reading this.\n\nI was actually kind of glad that Sandra couldn't see what I was doing while reading her review. My pants were now crumbled on the bed next to me and I was sitting there, naked from the waist down staring down at the pages she had written while my hands were both busy stroking my erection. One hand cupped my balls and stroked the flesh near my anus while the other gripped my shaft and slowly pumped up and down. Tiny drops of pre-cum boiled up from the head and dribbled down the sides like a barely active volcano covering my hand and providing a nice coating of lube to each spine-tingling stroke. I pumped as slowly as I could to keep myself from cumming before I finished the letter. My fantasies about Sandra were great before I started reading but I now had a whole new encyclopedia of erotic images to fuel my libido. She's right. I'll never look at her the same again. The pages fluttered as a breeze wafted through the room and called me back to her experiences.\n\nDid you know that when you buy sex toys on the internet they sometimes send you stuff for free? Well they do. Buy a big dildo and they throw in some lube as a bonus. How lucky is that? I coated the dildo with almost the entire tube of lube although the way my pussy was twitching I was pretty sure that lube was the least of my worries. I took a deep breath and climbed onto the bed spreading my legs on either side of the dildo and propping up my head and back with pillows so that I could see everything in the mirror. It took a little while to get the pillows under my butt arranged so that my pussy was at a comfortable angle for penetration but soon enough the dildo was positioned at the entrance to my warm sex. I was ready to take the plunge, so to speak. I giggled at the wanton display that was reflected back to me from the mirror. Spread-eagled nude female and a fucking machine. A veritable work of art. \n\nI reached down with both hands and spread the lips of my pussy, stretching open my hole for the dildo which looked even larger than before as I stared down between my legs and prepared to fuck myself. The mirror showed my wet labia and hard throbbing clit along with the cock that was poised to impale me. I hooked my ankles on the chair and pulled it forward slowly until the head of the dildo touched the entrance to my sex. I could feel the head filling my pussy and pushing into my slippery tunnel. The feeling of fullness overwhelmed my senses and I could swear that the walls of my pussy could feel every vein on the shaft as it slid deeper and deeper into my body. Drops of pussy juice, mixed with lube snaked their way down between my ass cheeks adding a glistening sheen to the pucker of my asshole. \n\nAs I watched the shaft inch slowly into my pussy a wave of heat washed over me. I've never seen myself get fucked and porn videos don't do the image justice. I saw and felt every inch as it made its way down my tight love hole. My clit was jutting out from between my wide spread lips and appeared to dip down toward the shaft as if begging for attention. My legs were spread as wide as I could get them and my ankles were hooked on the chair helping to impale myself on the massive cock. The cheeks of my ass were open revealing my tight anus winking back at me. It was the most erotic thing I had ever seen and my breasts began to ache as my nipples stiffened some more anticipating what was about to happen.\n\nMy self-penetration ended after a good eight inches of the dildo was buried in my pussy. The room was filled with the smell of my juices and I could feel the heat filling the air between my legs. My fingers danced across my out-stretched labia and as I released my pussy lips they closed around the hard shaft embedded in my hole. I picked up the control with sweaty hands and stared at it for a moment. A simple toggle switch with no markings but my previous night's examination revealed that it was either off, slow or fast. Even as I stared at the toggle my hips were slowly pumping back and forth on my 12-inch toy. As I slid off the shaft I took a deep breath, glanced at my bedside clock and pushed the switch to the 'slow' position as my other hand slid up my chest to tweak my nipples and reward them for their patience.\n\nThe toolbox whirred into action and I gasped as the dildo began to stroke in and out of my stuffed pussy. I quickly adjusted my hips so that the forward stroke went as deeply as possible and then closed my eyes and settled back on the pillows to absorb the sensations of being filled with cock and fucked over and over again.\n\nMy own cock reacted to the words I was reading and grew stiffer and harder in my slippery grasp. Pre-cum bubbled freely from the tip and more and more I found myself squeezing the shaft in a desperate attempt to forestall my inevitable climax. Sandra's descriptions were the stuff dreams are made of and she was going to be occupying my dreams for a long time to come. My fingers massaged the ridge line of my cockhead sending jolts of pleasure radiating down my throbbing hardness. \n\nI now found myself splayed out like a butterfly, head back, with the control lying on the bed next to me while my hands caressed my breasts and played with my nipples in concert with the strokes of my mechanical lover. I lifted my head to glance in the mirror and watched as pussy juice from my excitement frothed around the shaft embedded between my labia, soaking my pubic hair and quivering ass cheeks. My ever increasing moans harmonized with the quiet whirr of the machine.\n\nTime was on my side this time. The longest fuck I ever had before this was about 10 minutes and while it was very enjoyable it was not nearly long enough. Things were different now and my body knew it. My orgasm simmered beneath the surface as I was penetrated over and over again. Tiny flashes of light swam in my vision while my fingers continued to squeeze and release my nipples in time with the relentless strokes of my \"Endless Love.\" \n\nI had never felt like this before. I was free to enjoy the journey to orgasm and take as long as I wanted or needed. The machine served only me and I selfishly reveled in the power to control this moment. And just like that my orgasm roared to life sweeping over me like an avalanche of hot lava. The seething cauldron between my quivering thighs spewed heat and lubrication and my head came off the pillows to stare into the mirror as my hands reached down to feel the mighty shaft pistoning into my pussy.\n\nMy eyes widened in surprise at the sight reflected in the mirror and my hands quickly confirmed what I was seeing. Two more inches of dildo were somehow buried inside me and I groaned at the sight of my clit, hard, throbbing and pink as it danced between my soaked labia. \n\nThe first contraction that signaled my climax was so strong it almost pulled me into a sitting position and my hands pulled eagerly at the remaining 2 inches of the cock-shaped spear that was continuing to skewer me, trying to cram even more of the shaft into my pulsing pussy. I fumbled for the control as every nerve ending in my body lit up like a Christmas tree and pushed the toggle to 'fast'.\n\nThat first orgasm was still coursing through me as the piston pounded even faster and harder into my wildly contracting love hole. I could see my tightly clench anus pulled inward by the force of my climax and as the next wave of pleasure rolled through me, I slid one finger of each hand alongside my clit which unleashed the biggest orgasm I have ever had. I literally screamed with pleasure and still the pounding of the dildo continued. My excitement poured out of me soaking the sheets and pillows beneath my thrashing body. \n\nI crossed a line I had never seen before. I wanted it to end. The excitement was just too much. The feeling of pleasure and the contractions were exquisite. The cock that filled my pussy continued its assault but while I was struggling to end it, my body craved it even more and willed it to continue. My fingers swirled over my clit setting off explosion after explosion of unrestrained pleasure. I dropped one hand past the thrusting monster and finger my tight asshole triggering yet another climax totally different from the others causing my toes to cramp up as they curled tightly inward. My legs flopped open as my body twisted and thrashed through another series of convulsions. The heat radiating from my love zone burned through me as orgasm after orgasm thundered on producing an endless wave of passion. I fumbled for the control with trembling fingers and felt for the toggle. My eyes were totally useless as if a million flashbulbs had just gone off in front of me and with a last convulsive effort I hit 'stop'. \n\nLying senseless on the bed, still impaled on that enormous cock I tried to relax as tiny spasms and contractions continued unabated for what seemed like hours. Every inch of my skin tingled in that foggy line between pain and pleasure. My head lolled to the side and as my eyes finally began to focus the numerals on the bedside clock filled my vision. Forty-two minutes! I couldn't even begin to count the number of orgasms but I had been impaled and fucked by 10 inches of cock for almost three-quarters of an hour. All I can say is thank you. I could easily get addicted to this and you can bet that while you are reading this I am giving your machine a thorough reevaluation.\n\nI read the last sentence in a frantic rush as my own orgasm approached. The image of Sandra being mercilessly pounded blinded me just as she had been blinded by pleasure last night. When she had switched the thing to 'fast' my own hand had pumped my cock faster in synchronization with her words. The paper that the letter was written on had small spots on it and I wondered if those spots were evidence of Sandra's excitement. With a groan of ecstasy my hard shaft erupted, spewing fountains of white-hot cum that cascaded over my hand and left me gasping for breath.\n\n***\n\nI put the letter in a safe place, cleaned up and then gave my girlfriend the fucking of her life when she got home. Not as long as my now well-used mechanical stroker but she definitely knew that she had gotten royally pounded. I didn't tell her what was going through my brain the entire time but she'll know soon enough. We don't have any secrets.\n\n***\n\nThe next morning I barely was settled in my office before Sandra appeared in my doorway. She looked a little frazzled as if wondering what problems her letter might cause had caused her to lose sleep. Or maybe something else caused her to lose sleep. I broke into a big grin.\n\n\"It would appear that the rental was satisfactory?\"\n\nThe twinkle in her eyes returned as she visibly relaxed. \"It would appear so.\" She paused and looked hard at my face. \"We're OK?\"\n\n\"Couldn't be better. Are we still on for lunch?\" \n\n\"Sure. Same place?\"\n\n\"Yep! See you around 11:30.\"\n\nAnd so we found ourselves whispering conspiratorially over our food again and once again it was Sandra who I thought couldn't shock me anymore who left me open-mouthed again.\n\n\"I mentioned your machine to my girlfriend Michelle and told her how much I enjoyed it. I hope you don't mind?\" She was leaning so close that I found myself staring down her shirt as the words of her letter marched around my brain. I forced myself to look up as I shook my head.\n\n\"No. I'm a little surprised but I don't mind.\"\n\nNow she broke into a huge grin. \"That's good because when I explained our little rental agreement, she said she'd be interested in the same deal!\" \n\n*****\n\nThanks to 'ms.read' and 'funwithryleigh' for their editorial assistance. In addition to basic editorial tweaking, they graciously provided a much needed female perspective and helped me polish this little diamond in the rough. Votes and comments are always welcome.\n\n***"
    ],
    "authorname": "rthnck",
    "tags": [
        "fucking machine",
        "machine",
        "female masturbation",
        "dildo",
        "12 inches",
        "stuffed pussy",
        "penetrated"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/fucking-machine-letters-sandra"
}