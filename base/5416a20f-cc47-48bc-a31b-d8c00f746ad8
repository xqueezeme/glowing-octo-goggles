{
    "title": "New England Triad Ch. 03",
    "pages": [
        "Chapter 03\n\nStephen tries to bring his wife Ann and his lover Beth closer together--and succeeds surprisingly well.\n\n************\n\nAuthor's note: This chapter is part of a long narrative. For best results, begin New England Triad at Chapter 1. If that's not convenient at the moment, all is not lost: this chapter (#3) starts out with a recap.\n\nThe narrator is Stephen Lancome, a married, 39-year-old college professor and bicycle enthusiast. He loves his wife but (back in Chapter 1) somehow stumbled into an affair with Beth. Enjoy. -- Peter\n\n************\n\nAnother Tuesday, one week after my improbable, absurd, and mind-blowing alfresco sexual encounter with Beth. Other even-more-improbable events soon followed. The next day, Beth, a freelance graphic designer, took on a new corporate client and began working closely with a technical writer there--who of course turned out to be my wife Ann. That evening, I told Ann I had somehow gotten into an intimate relationship with a woman. Ann dealt with the news with great restraint, though she was far from happy to hear it.\n\nThursday nothing much happened. On Friday, Ann figured out that The Other Woman was in fact the new freelancer, Beth. Then the two went off to a previously scheduled lunch together. They had already come to like each other. By the time lunch was over they liked each other even more. Which is not to say that Ann liked sharing her husband with anybody.\n\nOne more plot twist might seem the most improbable of all--though Beth had predicted it right off. Ann did not call up the best divorce lawyer in town. Rather, she bit her tongue, crossed her fingers, and hoped that this affair would soon blow over. She let Beth and me know that she was giving us a little time to screw our heads on straight, figure out what the hell we were doing, and--she was betting and hoping, though not at the moment demanding--stop doing it and grow up. Well, somebody in this triangle had to play the role of Responsible Adult. Beth and I certainly weren't doing it.\n\nAnn's remarkable restraint had another cause. I had done much the same for her when the shoe was on the other foot, five years ago.\n\nWhy didn't I just hide my affair from my wife, like normal people do? Because the spouse always finds out eventually, and then the explosion is ten times worse. Because lying and deceiving damage a marriage more than straying genitals themselves do. Because Ann had told me, gently, about her own affair just two hours after it had begun, and I soon realized that--if she had to fuck the guy in the first place--telling me right away was the best next-thing she could have done. Because I owed Ann the same courtesy that she had shown to me, and--I hoped she would think--she owed me the same gentleness and restraint I had shown to her.\n\nWeird as all this sounds, it worked.\n\nSo now it was Tuesday, a week later. I was taking the summer off from teaching. Beth had an afternoon with no pressing business. We were lying naked in her bed enjoying some post-coital contentment. I was on my back, she on her side. Not for the first time, her index finger was slowly twirling my now-soft penis around in a circle. I should buy her a pinwheel for her birthday. Except I had no idea when her birthday was. We didn't know each other that well yet.\n\nShe smiled at me. An incurable English major, I tossed a little e.e. cummings to her. \"I like my body when it is with your body.\"\n\nShe pretended to be annoyed. \"That's somebody's poem, right? The whole damned family is a walking Freshman-Lit anthology! Friday at lunch Ann was reciting Auden's 'Lullaby.'\"\n\n\"Ah.... Yes, the number of 'faithless arms' in my household has been increasing rapidly. Though 'faithless' is putting it a little strongly. I'm prepared to cop to 'wandering.'\"\n\n\"You can let it wander off my bush and down just a little lower, if you don't mind.... Thank you: that works.... Speaking of, I never asked if you had any strong feelings about pubic hair on a girl.\"\n\n\"Love it,\" I said. \"Especially curly.\"\n\n\"You're kidding.\"\n\n\"True fact. While we're on the subject of not turning off our partner, I just noticed I'm wearing my wedding ring. Am I being inconsiderate?\"\n\n\"At this stage in our relationship, please keep it on,\" she said. \"I need to be reminded that when I make an error in judgment I make a doozy. If I decide to try to take you away from Ann, then you can take it off. You can also find me a good psychiatrist to deal with my delusions. If I decide to take Ann away from you, then I don't care what's on your finger.\"\n\n\"What's all this 'taking away' stuff?\" I replied. \"So far, we're getting good results with 'share, and share alike.'\"\n\n\"Yes, well, this is America, and you have no idea what it's like to be brought up female here. Our entire lives, every day, every single part of the culture drums into our heads that only a pair-bond is stable. You've got to get yourself into a pair-bond. A triangle will always collapse, and you will get badly hurt.\n\n\"You're the English professor. Name me one novel, play, movie, or TV show where a romantic threesome gets along just fine, has great sex, and everyone lives happily ever after. I'm still surprised they let Ingrid Bergman live and fly off with her husband at the end of Casablanca. Of course, you had to watch that movie very carefully to realize she was fucking Rick again. Long story short: you're absolutely right about this 'taking away' nonsense, but that indoctrination is so strong even the best of us are liable to slip back into it.\"\n\n\"You definitely are among the best, Beth,\" I said. \"I couldn't have stumbled into an affair with anyone better.\"\n\nShe kissed my lips warmly. \"Ann's pretty special too. I suppose you know how lucky you are to have her. We do make a nice triangle.\"\n\n\"Yes to all three statements. Though I guess we have more of a romantic V than a triangle. With me being the lucky point at the bottom. To have a proper triangle we'd have to draw a third line, connecting the two points at the top. That's you and Ann of course. And a triangle does strike me as more stable than a V, at least geometrically. It's a shame you're not bi.\"\n\n\"Why would you assume that?\"\n\n\"Are you?\"\n\n\"Well, no more than the average American girl. Which is considerably more than the average American boy, I gather. Of course I experimented with girls back in college, like everyone else. It was quite nice, actually. I can see why you guys enjoy having us so much. Of course I have no precise idea what it feels like to put one's penis into someone.\"\n\n\"Very nice indeed.\"\n\n\"So I gather. Anyway, I do prefer boys, but I don't want to get too binary about it. Did you ever have a guy?\"\n\n\"Not yet.\"\n\n\"That was a much better answer than 'Certainly not!' Actually, on Friday I did joke with Ann about going back to her place and having a threesome. Ann joked back that, so far, you have done nothing to deserve a treat that big.\"\n\n\"She's right,\" I said. \"In fact I don't deserve either one of you. Let alone both of you separately. Let alone both of you together. In fact I'm lucky I'm not sleeping by myself on the sofa.\"\n\n\"She said that too. As a consolation prize, would you like your cock sucked some more?\"\n\n\"Oh, all right,\" I pretended to pout. \"If I can't have a threesome, I'll settle for that.\"\n\nBeth's brown eyes sparkled as her head approached my crotch. \"Even 'that' is more than you actually deserve, lover. But who said you couldn't have a threesome?\"\n\n************\n\nMy penis was still sticky from our lovemaking, but Beth seemed not to care and set to work. First the tip of her tongue gently explored my cock from top to bottom, then she washed me thoroughly with her tongue's broad top. It wasn't long before I was fully erect. Then she took the glans into her mouth and sucked, all the while massaging the underside with the tip of her tongue. At the same time I was running a hand through her hair, caressing her neck and shoulders, and occasionally reaching under and fondling a breast. A lovely brown nipple hardened under my fingers.\n\nMaking a little tuneless hum, she took me deeper into her mouth, sucking while caressing me with her tongue. Then back and forth with her mouth, squeezing my cock with her cheeks and lips as I slid in and out. Every several times she would take me in as deep as she could manage, then hold for awhile until she needed to breathe again. A big gasp for air, then back to the in-and-out again.\n\nShe never got my fully-erect cock entirely into her mouth, but she came within a half-inch of it. I felt cheated not in the slightest. I tried to remember exactly how long I was but couldn't. I had measured my erect cock as a teenager and had understood that I was slightly longer than average--so I stopped worrying about it. I had long since forgotten both what my measurement was and also what the average was--and also where that figure for the average had come from.\n\nThen once I became sexually active, not a single lover of mine had shown the slightest interest in the length of my or anyone else's penis. Apparently anything within two standard deviations of the mean was just fine with them. If there was a part of my body that did make a difference to my girlfriends, it was my well-developed tongue muscles.\n\nLong story short, I couldn't say exactly how many inches of erect cock Beth managed to get into her mouth, but it was more than enough. More important, she knew several good things to do with whatever portion found its way in.\n\nNow she could sense that my response had reached a plateau and I was getting a little numb. She brought her right hand to her lips, making an O around my cock with her thumb and index finger. Keeping the hand against her lips, she sped up the in-and out motion, increased the saliva flow, and tightened both her fingers and her lips just the right amount.\n\nThat was the most impressive part of her performance: understanding exactly what \"just the right amount\" was at this particular moment. In fifteen seconds I was coming in her mouth. My second orgasm of the afternoon was as exquisite as the first had been. Beth swallowed, then sucked on me gently for another minute or two, until I was completely soft.\n\nHer head rejoined mine on the pillow, and I kissed her. The hint of semen in her mouth if anything added to the pleasure. A reminder that she could blow a guy with the best of 'em and had thought me worthy to receive the best blue-ribbon, premium service of which she was capable.\n\n\"That was lovely,\" I said. After a pause: \"Can I repay the favor?\"\n\n\"Well... okay.\"\n\n************\n\nBeth and I still had no inkling of where exactly we wanted our relationship to go. We did know that we wanted it to continue for awhile longer. It seemed to me that the best thing to ensure that--and to keep future options open--would be to deepen Ann and Beth's relationship with each other.\n\nCertainly things had gotten off to a flying start. At Edson-Kelly, the two got into a good professional relationship immediately, and a friendship quickly began to develop. Then a big monkey-wrench got tossed into the works--that would be me. That didn't bring their friendship to a grinding halt, but it did complicate things enormously. It certainly slowed the growth of their affection for each other.\n\nBoth ladies were behaving admirably. But this is America, not France. In America, the wife and the mistress do not become close friends. In America, the mistress is lucky if the wife doesn't kill her--and kill that cheating bastard of a husband while she's at it.\n\nI also saw right off that I needed to be more attentive to Ann. So I tried to be especially nice to her at home. I listened with greater apparent patience when she vented about work. We cuddled and streamed movies together more often. We went out to dinner more often--Ann especially liked doing that. I'd make sure she didn't feel neglected. If anything, she might feel that her personal life had actually improved since Beth turned up. That couldn't hurt.\n\nAnn and I were dining at a decent country inn when an idea began to crystallize. Before I had any clear sense of what that idea actually was, I started to pursue it, going by instinct more than anything else.\n\n\"Seeing much of Beth these days?\" I inquired.\n\nAnn went on alert but played it cool. \"Not so much at the moment. The project is at a point now where she can do most of her work from home. Later she'll need to spend more time at the office. Have you seen much of her these days?\" There was a barb attached to that one.\n\n\"No, I haven't. I know that the two of you hit it off right away, and a nice friendship was starting to develop. Then of course I complicated things tremendously.\"\n\n\"One might say that, yes.\"\n\n\"Technically, I complicated things before the two of you met.\"\n\n\"Let us not quibble.\"\n\nI wish I knew where I was taking this conversation. I guess I'll find out when I get there.\n\n\"So,\" I said, \"neither of us has more friends than we know what to do with. You and Beth hit it off, and even after I complicated things, apparently your friendship developed further. I gather you both enjoyed your post-complication lunch. Now these days you don't get to see each other much at the office, so another lunch out would be difficult. Why not, say, invite her over for dinner sometime?\"\n\n\"Um... because she's sleeping with my husband?\"\n\n\"Perhaps not as much as you think. In any case, you didn't let that spoil your lunch.\"\n\n\"Stephen, it is one thing to interact with my husband's lover in a public place--and that was hard enough. It is quite a different thing to invite her into my home. I do not think I would feel comfortable if she came within fifty feet of our bedroom. I am hoping she hasn't been there already.\"\n\n\"No, she hasn't.\"\n\nIt was time to abandon the field. I had tossed out a handful of seeds; we'll see later if anything sprouts. Yes, my metaphors are shifting wildly from war to agriculture.\n\n\"Okay, Ann. I understand.\" And in fact I did understand. Of course, if I had been trying to change her mind, I couldn't have said anything better than I just did.\n\n************\n\nGod knows why American women do what they do; their husbands generally don't. Possibly a seed I had sown was sprouting. Ann called up Beth and proposed lunch--how's Thursday? They could meet in Portland, arguably halfway between Edson-Kelly and Beth's home office. Beth would have the easier drive. A nice little place named Poulidor's, by the river.\n\nBeth was struck by the name. Same as the former bicycle racer, beloved in France even though he almost always came in second place rather than first. Beth concluded that this was not a dig at her. Ann had never heard of the man.\n\nNo pressing need to get together now, Ann had said. No crisis, no problem. The catalogue is looking great. Ann just needed to get away from the office for a couple hours, see a friendly face she hadn't seen for awhile. Then back to the office for a couple more hours' work. It sounded good to Beth. On Thursday, off to Portland they went.\n\nTheir first lunch had been fraught with significance and multiple subtexts. This one stayed light and enjoyable. They told each other funny stories, griped about other people, relaxed. Stephen's name did not come up all that often. When it did, they discussed him as though doing so were the most natural thing in the world.\n\nHow is this happening? thought Ann at one point. Why does all this seem so normal?\n\nWithout giving the matter any real thought, Ann found herself saying, \"Can you come over for dinner? Maybe a week from Saturday? I need an excuse to roast some lamb.\"\n\n\"I'd love to,\" said Beth. \"Can I bring anything?\"\n\n\"Just yourself. Come around 6:30?\"\n\nBeth smiled and nodded.\n\nLater, another affectionate goodbye in the parking lot, and they were off, in opposite directions.\n\nAs she drove, Ann reflected, \"Why did I do that--invite her for dinner?\" Followed by, \"At this point, who the hell cares? At this point, what the hell difference does it make?\" The same question, and same two answers, occurred to Beth.\n\n************\n\nAnn had told me in advance about the lunch in Portland. I was pleased. That evening, when she told me of the scheduled dinner, I was astounded.\n\n\"It was spur-of-the-moment,\" Ann explained. \"Otherwise, obviously I would have cleared it with you first. But I didn't think you had anything planned for next Saturday, and I doubted you'd object to the guest list. You don't have to cook this time; I'm in the mood to make some lamb again.\"\n\nRoast leg of lamb was one of Ann's specialty dishes--usually accompanied by roasted vegetables, sometimes homemade cranberry sauce. A small mountain of greasy bakeware, dishes, plates, and utensils would then fall to me to clean up. What fun. But Ann's lamb was good, and it would probably yield me a nice bike ride beforehand: off to a farm store to pick up more fresh local garlic and also fresh rosemary if they have any.\n\nOver the next week Beth and I saw each other twice. Once we had a nice lunch in Colchester, just down the road from her, then back to her place for some wonderful sex. The other time we just had wonderful sex. I still hadn't met her housemate Dev.\n\nSaturday at last. Beth arrived at our house at 6:30 looking lovely. She wore a little summer dress much like the one she wore--briefly--when I first visited her place. It may have been the same one, I don't know. But with a bra this time. Poking up from her shoulder bag was a bottle of Australian shiraz--not a bad choice at all to go with lamb.\n\nAnn gave her a hug and accepted the bottle. \"How nice! Thank you. Why don't we open it and let it breathe, and we can have it with dinner. Can I get you something now? We have a cabernet open, and chardonnay is just a twist of a cap away. Come in the kitchen and keep me company while I fiddle with the vegetables.\"\n\nNobody invited me, but I came in too and poured the wine: chardonnay for the ladies, cabernet for me. As I was uncorking the shiraz--the Australians still used actual corks--I reflected that Beth was now within 50 feet of the bedroom--probably everything in the house was within 50 feet of the bedroom--and Ann was entirely unperturbed. That's progress.\n\nEverything took longer to roast than Ann expected. But by 7:45 the vegetables were finished, the gravy was made, the entire house smelled of lamb and garlic and rosemary, and the lamb was ready to carve.\n\nThough a committed feminist, Ann had no trouble at all with gender stereotypes when it came to tasks she didn't like to do. So the man of the house got to check the cars' oil, mow the lawn, and carve any meat that had a bone in it. In the kitchen I hacked away at the lamb, transferred numerous slices to a warm platter, and brought it into the dining room. The girls were already seated--chatting enthusiastically and sipping shiraz.\n\nDinner was delightful, both socially and gastronomically. We chatted as though we were three old friends. Fortunately, we all ate only a little too much, not 'way too much as we were tempted to do. I was proud of myself. Resisting temptation obviously wasn't my strong point, or Beth's. Or Ann's, come to think of it.\n\nAnn cooked, so I got the dishes. Fair enough. The dishwasher had broken down a couple years ago. I had concluded that, with just the two of us, it made a lot of noise and didn't actually save us any labor and wasn't worth the trouble to fix or replace. All perfectly true--so long as Ann wasn't making lamb and roasted vegetables. At least the dishwasher now made a good drying rack.\n\nAfter I had labored about a half hour, the leftovers were in the fridge, most of the dishes were clean, and the kitchen no longer looked like it had been hit by a tornado--only a small windstorm. I joined the girls in the living room. They were on the sofa, sitting rather close. If they deeply regretted my absence, they gave no sign of it.",
        "They were still sipping wine. To my surprise, they were also sharing a joint. Where had that come from? Did Beth bring it? I accepted the offered toke.\n\nAfter dinner Ann had tuned the receiver's FM to a college station playing classic cool jazz. Very nice. But now they were starting to play something esoteric and screechy. I switched the stereo to CD and popped in a couple disks from Dad's collection.\n\n\"What's on the playlist?\" asked Ann.\n\n\"Crosby, Stills and Nash, then Jefferson Airplane. Crown of Creation.\"\n\n\"When they get to 'Triad,' skip over it, huh?\"\n\n\"What's 'Triad'?\" asked Beth.\n\nAnn explained--with impressive clarity and conciseness, considering how much wine was no longer in the bottles, to say nothing of the weed. \"Female vocal solo. Her two lovers want her to choose between them. She shocks them by proposing a menage-a-trois. It's a very pretty song, actually. It does cut just a little close to home.\"\n\nBeth looked at Ann and giggled. Ann smiled and barely suppressed a giggle. Jesus Christ. A few weeks ago Ann was crying about the situation. Now she's trying not to giggle. I need to buy a case of that shiraz. Or was it the chardonnay? Or the joint?\n\nI sang a line from the song. \"So you see... what we can do is to try something new.\"\n\nAnn wasn't quite ready to go that far yet. \"And the next line begins with the words, 'If you're crazy.'\"\n\nI switched to William Blake. \"The Road of Excess leads to the Palace of Wisdom,\" I said.\n\nBut that one wasn't going to work, either. I keep forgetting how well-read Ann actually is. She parried, \"Which comes from a volume titled...?\"\n\n\"Okay,\" I said. \"I'm busted. Proverbs of Hell. You can't kill a boy for trying.\"\n\n\"They killed Benedict Arnold, didn't they?\"\n\n\"I don't think so. Patrick Henry?\"\n\nBeth broke in--half joking, half not. \"Stop it, the two of you! If you two over-educated goofballs are trying to seduce me into a menage, I have to say you're not going about it in a very efficient way. I am perfectly capable of succumbing without anyone bringing Benedict Arnold into the picture!\"\n\nI decided that Ann had definitely had too much to drink. Probably Beth shouldn't drive home, either.\n\n\"Okay,\" said Ann to Beth, \"how's this?\" She turned a little, put one hand behind Beth's head, the other hand on Beth's breast, and gave her a long and stunningly lovely kiss.\n\nThat probably caught all three of us by surprise. But Beth quickly recovered and reciprocated. Three minutes later, Beth's little summer dress was mostly above her waist. Ann was wearing dressy slacks, but by now they were unbuckled, unbuttoned, and unzipped. Each of them had a hand on the other's lower torso. All four breasts still had two layers of cloth in front of them, but how much longer could that last? Dear Miss Manners: At this juncture what is the proper thing for the husband to do?\n\nAnn was a step ahead of me. \"Stephen, honey, no one intends to neglect you in the slightest. But Beth and I need a little girl-time now. Could you possibly lock up? And maybe see if any clean-up still needs doing? If you come upstairs in a half-hour or so, I'm sure you'll be warmly received.\"\n\nShe looked at Beth and raised her eyebrows. Beth looked at me and smiled. I looked at them both, smiled, and nodded. Who needs words? Back to the kitchen. Holding hands, the girls climbed the stairs.\n\n************\n\nI cleaned up the kitchen some more, keeping an ear on the noise level up in the bedroom. Things got pretty quiet after about 35 minutes. I gave the ladies another ten to bask and bond a little more. Then I went upstairs and joined them.\n\nAnn and Beth were naked in bed, their legs and their arms entwined in a way too complicated to describe. The top sheet and blankets had been pulled back. The light blue bottom sheet nicely set off their skin tones. Ann's fair skin, pink nipples, and thin honey-blonde hair went beautifully with Beth's darker tone, brown nipples, and thick brown hair. \"I can love both fair and brown,\" as the poet said. Both women smiled as I entered. One of them patted the edge of the bed, inviting me to sit. I did, and I ran a hand over their bodies--just a gentle caress to say, I'm happy too.\n\nOddly, perhaps, at that moment I was not feeling overcome with lust. I quite enjoyed the mellow mood in the bedroom. Besides, in recent days I had already had plenty of sex with each of them. Watching them go down on each other would have been charming but actually not that big a thrill. I was the seasoned veteran at performing oral sex on those two; they were just new recruits. Amateurs. Amatrices. Probably the wine had throttled my libido back a notch, too. What I wanted most of all was to be hugged and caressed by my two naked lovers at once. That should be easy enough to arrange.\n\n\"Why don't you take your clothes off and join us?\" Ann invited.\n\nAs I undressed I said, \"You both look very relaxed and mellow. Don't feel you have to go to a lot of trouble to entertain me now. A nice three-way snuggle would be wonderful. Maybe a quick blowjob if one of you wants to insist. Where do you want me?\"\n\nAnn raised her eyebrows at Beth. Beth shrugged her shoulders. \"Oh, the middle, I guess, for now,\" said Ann. \"When we get tired of playing with you, you can move somewhere else.\"\n\nI inserted my naked body between the two girls. We gently caressed one another. Beth fondled my chest, Ann my cock and balls. Now both women were in a playful mood.\n\n\"I gather you two hit it off okay, then?\" I inquired.\n\n\"Mmmmmmmmmm,\" said Beth.\n\n\"Of course, we were a little out of practice,\" said Ann, with a smile. \"It's been like 15 years for both of us. But it all came back.\"\n\n\"Like riding a bicycle,\" offered Beth. \"Sorry you missed the show.\"\n\n\"I'll catch it next time,\" I said politely.\n\n\"I wouldn't rule out an encore this evening,\" said Ann.\n\nShe stood, retrieved and prepared her diaphragm, inserted it, and climbed back into bed. No need for false modesty in Beth's presence, apparently. That's nice.\n\nBeth decided my now-erect penis needed attention. She moved down and took it into her mouth, doing her usual superb job of giving a man pleasure. That seemed perfectly fine with Ann. Amazing. Ann began kissing my lips and running her hands over my body. I sank into the bliss and enjoyed. After awhile, the girls kissed and touched each other some more as I used my tongue, first on one of them and then the other. Then I found myself back in Beth's mouth again.\n\nSoon, though, we could see that a turning point was looming ahead, and none of us was sure what should happen when we reached it. To put it as concisely as possible: either I fuck Beth in front of Ann or I don't. Ann had already gone far beyond her boundaries this evening, but was she prepared to go a great deal farther? I hadn't the faintest idea. I wasn't even sure of the protocol. This was the first three-in-a-bed experience for both Ann and me; it was only Beth's second, I later learned. It was Beth who articulated the question.\n\n\"Umm, I'm not quite sure what happens next.\"\n\nA brief pause, then Ann spoke. \"Stephen fucks me a little. After that we'll know what's up next.\"\n\nBeth nodded assent. I noted that nobody had solicited my opinion. The Women's Caucus had all the votes they needed in this legislative session. I forced myself to remove my penis from Beth's mouth, then I brought my own mouth back to Ann's pussy to get her ready. It didn't take long.\n\nNow I was fucking my wife, missionary-style, while Beth snuggled up and did what she could to join in. We took turns kissing Ann, and we both caressed her a bit. From time to time one of my hands would wander over to Beth's toned and lovely body. What the three of us were doing seemed perfectly natural and normal. Just as my first sex with Beth had seemed, nearly a month ago.\n\nEven though she hadn't gotten within shouting distance of an orgasm, Ann too seemed to be happily enjoying herself. I was having fun myself, but I had to concentrate on not coming. I judged that I could climax only once tonight. At last Ann spoke.\n\n\"Beth, Stephen, I need to ask a favor of you.\"\n\n\"Of course,\" I said, imagining what was coming next.\n\n\"Fuck each other now, please.\"\n\nWell, I guessed that one wrong.\n\n\"Ann, we don't have to do that,\" offered Beth; \"it's okay.\"\n\n\"No, I want you to. I want to see you. It's what I really want.\"\n\nBeth gave Ann a deep kiss.\n\nI understood what Ann was feeling. The need to know thoroughly, to really, really know. An ancient human need. It went back to the Garden of Eden--the Tree of the Knowledge of Good and Evil. I sided with Eve on that one.\n\nCognitively, Ann knew that Beth and I were having sex with each other. But that's only cognitive knowledge, not deep knowing. Already this evening, Ann's knowledge had deepened. Having seen both Beth and me naked, affectionate, and in bed--and having kissed and touched and hugged and smelled and tasted Beth herself--Ann could now imagine Beth's and my lovemaking almost exactly. Now Ann wanted--needed--to really bite into the apple, to know Beth's and my adulterous congress as deeply as she possibly could. She also wanted to know, as deeply as she could, what her own reaction to the affair was. I admired her courage.\n\nAnn moved down and licked Beth's pussy for about 90 seconds. \"You're all set,\" she pronounced.\n\n\"Thank you, Ann,\" Beth giggled.\n\nAnn gave my cock about 30 seconds. \"You're all set.\"\n\nBeth turned to me. \"Flip a coin?\"\n\n\"Top's yours if you want it,\" I said. She did.\n\nOnce again Beth alternated between cowgirl and chest-to-chest. In cowgirl I could fondle her clitoris and pretty breasts. On chest-to-chest she could rub her clitoris against my pubic bone, and I could caress her back and her bottom. Beth sometimes liked a little finger pressure on her anus--not enough to penetrate, usually, just enough to feel a gentle poking. She had her first orgasm--I mean the first one with me present--that way.\n\nAll the while, Ann sat on the bed and quietly watched. Occasionally she would reach out a hand and place it on Beth's body or mine. I couldn't tell what she was thinking. The expression on her face would give you the impression that she found Beth's and my cavorting both mildly interesting and mildly amusing.\n\nBeth was back to cowgirl for the second orgasm. That was a big one. Beforehand, her hands were down on my chest and mine up on hers. She was close to climax but was kind of stuck on a plateau. I was about to lend a finger when Beth said, \"Ann, please touch me.\"\n\nAnn quickly licked an index finger and brought it to Beth's clitoris. Ten seconds later Beth was making loud, inarticulate noises, bucking, nearly convulsing. I could feel her vagina repeatedly clenching my cock. Then she lay, spent, on top of me, her face pressed against the side of my neck. I was still inside her.\n\n\"Wow,\" Ann said, laying a hand on Beth's back. Then: \"Stephen, you still haven't come yet?\" I shook my head no.\n\n\"Relax, Beth; I'll help,\" she said. Ann had long since mastered the art of getting me off. She re-wet her index finger and then kissed the unoccupied side of my neck. While she kissed, both hands moved to my private parts. One started gently tugging at my scrotum. Then the wet finger began carefully working its way into my rectum. Beth helped by repeatedly squeezing the muscles of her vagina. My explosion came soon. It was at least as loud and as inarticulate as Beth's. God knows how many ounces of semen I pumped into her body.\n\nEach of us did our best to put our arms around the other two people. When my flaccid penis finally slipped out of her vagina, Beth rolled onto her back next to me. Ann came down, took my penis into her mouth, and gave it a good cleaning. That was a sweet gesture. She also gave Beth's pussy a single lick and a kiss--and then a Kleenex. They brought their heads together and kissed.\n\nAnn was the first to speak. \"Spend the night?\"\n\n\"I'd love to. Let me just text Dev so she won't worry.\" In a flash Beth had jumped up, found the switch for the hall light, and was halfway down the stairs, heading towards the phone in her shoulder bag. As though prancing around our house naked were the most natural thing in the world for her. As though all the events of tonight were the most natural things in the world. I felt pretty much the same way. I couldn't speak for Ann.\n\nI turned to my wife. \"Need anything?\"\n\n\"Thanks, I'm all set.\"\n\n\"Feeling okay about everything?\"\n\n\"The short answer is yes.\"\n\n\"Did I ever mention I love you?\"\n\n\"Not often enough.\"\n\n\"I love you.\"\n\n\"I love you too, Stephen.\"\n\n\"Do we have an unused toothbrush?\"\n\n\"Try the upstairs hall closet.\""
    ],
    "authorname": "Peter_Cleveland",
    "tags": [
        "polyamory",
        "open marriage",
        "ffm",
        "threesome",
        "adultery",
        "husband",
        "married",
        "group sex",
        "menage a trois",
        "two women one man"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/new-england-triad-ch-03"
}