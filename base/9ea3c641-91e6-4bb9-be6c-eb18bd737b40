{
    "title": "A Fucking Investment Ch. 16",
    "pages": [
        "I got up late, worked till noon. There are always things to monitor and manage when you have wide interests. I worked to distract myself from the conundrum that was Eve. I couldn't really tell if I was in the garden before or after I ate of the tree of knowledge. I knew that Eve had signed the contract and then repudiated it so I was in a pickle. I had to figure out a way to keep her or the whole artifice might unravel. I had reality on my side, I did own the houses once they signed them over to me. My people were handling that paperwork with an agency locally but I had no wish to keep them using reality. I wanted the seductive promise of sexual fantasy to keep my women compliant. I had to keep seducing Eve till she was utterly seduced with no thought of escaping my velvet hold on her but could I do that? The thought throbbed like a tooth ache. \n\nI was in the kitchen making a sandwich when my phone rang. It was Crowley.\n\n\"Charlie, how you doing?\" \n\n\"Boss, hey listen, we got a problem.\" \n\n\"Oh?\" Everything was a problem to Crowley. I had learned to just wait for particulars before reacting. \n\n\"Well, actually, not a problem. It's well, its more of an opportunity. Rae Dawn Stewart.\" \n\nI remembered the name from the portfolio. \"CEO of James and St. James Trust, an investment firm.\" I said thoughtfully. I had been avoiding her because she was the only truly single woman on the list. Independently wealthy and a real snag in my picture. I had concentrated on picking the low hanging fruit rather than getting tangled up with that complex woman to this point. We were waiting for her professional disaster to put her at risk so I could do my thing with her. \n\n\"You remember that she was being investigated by the SEC and the justice department, right?\" \n\n\"Oh yes, I remember now. That was why we thought we'd still be able to gain some leverage and get her house.\"\n\n\"It just got easier. The indictment is coming out this week, Thursday or Friday, I'd guess. I, uh, I have a friend who helped himself to a copy of...I said indictment, I mean settlement. They are offering her a settlement, generous by some standards but devastating to her, I should think.\" Crowley was nearly chortling. \n\n\"Charlie, what have you been up to?\" I asked, chiding him with my tone but thinking of her picture. She was a dirty, dirty blond with an upright figure, lean but for great tits and full, pouting lips. She worked out, had run a marathon recently which, with those tits was an impressive accomplishment. They could put out and eye if she was the least bit aroused. Can a woman run aroused? Ever try to run with an erection, damn inconvenient. \n\n\"Boss, okay, listen, I may have been a little hasty here and I, well, I saw an opening and I took it. I mean, see, the Feds, they have the resources of a badly run charity when it comes to this sort of thing so I thought it was my public duty to help them out a little. You know, help them find assets and locate funds that Ms. Stewart thought were well hidden.\"\n\n\"Oh?\" \n\n\"Yeah. And, and boss, then I more or less negotiated with the Feds to agree to drop the charges against her if, if she would forfeit her assets.\" Crowley did laugh then. \"Oh fuck me, its beautiful. They have her dead to rights on a fraud charge that will put her in the slammer for two years. Nothing silly but god, she'd never work again and in the end, she'd still lose everything. My agreement is that if they convince her to take the plea deal, I'll tell them where the assets are and they get everything.\"\n\nI saw the angle. \"Are you sure you have everything? If, if she has something squirreled away out of reach...?\"\n\n\"I covered that contingency. She surrenders her passport.\" Crowley laughed then. \"They have her passport but, if she takes their settlement, she has to agree to be released to you, on your recognizance as it were. The one thing I insisted on was acquiring the house deed before they settle the thing. She'll be yours and all you have to do is crawl in her knickers and make her squawk!\" \n\nCrowley had a way with words that tended to reflect his personal reality. I could tell he liked the idea of this woman. He surely did like poke-a-knowing with high-powered women. Hell, he liked poking any sort of women that fit his measurements, whatever they were. \n\n\"Even if she has funds out of the country, she won't be able to leave for two or three years. Still negotiating that. And boss, here, here is the kicker. She'll be accountable to you because you'll put up a bond. You can use all of my resources to make sure she has no other funding. If she taps it, you get it to pay off the bond. Even if it exceeds the amount of the bond you post to keep her out of jail, we can tie it up till she walks like an Egyptian!\" Crowley roared then, the man did love his work. He was either in a great mood or nervous as a virgin in a frat house. \n\n\"I think you mean till she walks like a cowboy, don't you, Charlie?\" \n\nCrowley quieted. \"Whatever, boss. But this means you have to move. Today.\" \n\n\"Oh?\"\n\n\"Yeah, well soon but we can't sit on this, if we do, we could lose our chance altogether. She is not stalling for time, she is angling for something but I am not sure what that is yet. Listen, they are going to present her with a plea deal by the end of the week latest. If she sees it without any recourse, she may reject it and make a run for it. You need to go over and offer to buy her out of her house. Just the house. Don't tell her about the plea, that you know it is coming. They won't finalize it unless they have my asset list and I don't surrender that till she sucks your cock for you.\" \n\n\"You like her, don't you Crowley?\" I heard it in his voice. The voyeuristic tension that he never made much effort to hide when discussing pussy with me, pussy he lusted after on his own terms. \n\n\"Who wouldn't...yeah, sure boss. She's a doll but a spitfire too. Taming her will be like bending titanium.\"\n\n\"I took Mrs. Sawyer for a walk around the neighborhood on a leash with a collar around her neck yesterday.\" I offered.\n\nSilence. \n\nFinally, \"Shit, boss, don't do that to me. Goddamn. Really? By the way nice job with Mrs. Lewis yesterday. I, I am sorry I fucked that up. China did a good job and now she's...well, I blamed her and she is working it off. She's okay. Anyway, those were some real heavies on the line and you handled it just fine.\"\n\nI had a moment, feeling proud followed close on by resentment that he would express the opinion I needed reassurance. I didn't but Crowley was my father's man and it was as close to paternal approval as I was going to get now. I don't know if he intended it that way, I doubted it. Crowley is as subtle as a whale fluke. \n\nI focused on the business at hand. \n\n\"Do you think Ms. Stewart will go for it? The buy out and all?\" \n\n\"Once she sees the offer from the Feds. The kicker will be the bond requirement. I think I have all her options blunted so she'll be forced into your loving arms. Before she gets the offer, though, she needs to have your offer on the table.\" \n\n\"I haven't even met her. I am not sure she is even home.\" \n\nCrowley chortled. \"I am. Boss, we knew she was the one that was going to be a problem and I have been working on her. She's under house arrest. Can't leave her house till the trial. She's been living high on her own hog but they'll freeze every one of her assets and she'll not be able to buy a cake roll. She is an opportunist but more than that, she is an epicurean. If my research is right, she'll take the shortcut and fuck you just to keep her caviar cool. Or pate or whatever the fuck snooty bitches eat when they aren't gnawing on cock.\" Crowley's laugher sounded like gunfire. \"But they won't wait on you. You have to go present her with your option immediately. Tomorrow might be too late.\" \n\nI nodded to myself. I waited, Crowley hadn't hung up yet. \n\n\"Uh, boss, have you boinked that Mrs. Lewis yet? She seems to be a bit of a live one.\" \n\n\"Not yet, Crowley. I'm letting her steep.\"\n\n\"Steep? What the fuck?\"\n\n\"Soak in her own juices, like a good steak. I am aging her.\"\n\n\"Oh, marinade.\" Crowley chortled again. \"Boss, I'd not bother to tenderize her. I'd take her rough.\"\n\n\"Charlie, you'd take Tinker Bell rough.\" \n\nHe roared at that. \"By god, Alan, you're right. I guess I would.\" He hung up. \n\nCrowley was proud of setting up the single Ms. Stewart but I suspected he was relieved that I was not making an issue of his oversight. Dear Ms. China was likely not getting off so easy if he blamed her for the oversight. I bet her ass was sore and would be for some time to come. Crowley does like the ass...!\n\nI sat in my office in a lull like my operating system was lagging badly. But then it caught up and with its swell of capacity it brought the perfect inspiration. I did not even think, I just walked right out the front door and over to the Sawyer house. To my surprise, Eve answered the door. \n\nShe appeared more or less together, not bedraggled as she appeared yesterday.\n\n\"Mr. Gale, come to cast us out into utter darkness?\"\n\n\"I think the saying is outer darkness and no. Get your collar.\" My cock heard the words and popped into full readiness, skipping all degrees of lassitude. \n\n\"No.\" \n\nMy cock wilted. I did not like that syllable any more than my dick did. \n\n\"Excuse me?\" \n\n\"I said, no. I won't go get my collar.\" She said. After speaking the last word, her chin lifted a little and she looked down her fine nose at me. \"No.\" She repeated, just to be sure I did not miss it.\n\nWhen I didn't move or speak for a couple seconds, she calmly closed the door. \n\nI turned around, bumfuzzled. \n\n\"Shit.\" I thought. \"There goes that idea.\" I looked around, getting my bearings. I thought I knew where Ms. Stewart lived and walked in that direction. Like the other mailboxes in our little enclave, her name was on hers so that gave me some reassurance I had the right house. I walked up to the door and rang the bell. I didn't know what I was doing exactly. To this point, I'd managed to bring the women to my door, not the other way around. Well, Vidya was something of an exception but hell, seeing a belly dancer would draw you through a screen too. \n\nThe door opened. \n\nHer reality was sexier than the research suggested. Her hair was a mess, like a big wad of dirty cotton candy around her head like an aura in the strong daylight. She stood glaring at me. She wore a USC sweatshirt and sweatpants. Her bare feet showed painted toe nails, green, a detail I filed away because it hardly matched the image of a corporate maven that I had in my head. \n\n\"Yes? Who are you?\" \n\nFor a second I was Alan Livingston but then my mind kicked in and I quit focusing on her wobbling tits. \n\n\"Joshua. Joshua Gale.\" I managed to get out. So far, confronted with each new Holdingsfield woman, my mouth tended to go dry while my heart sped up, hammering in my chest. Implicitly I had told myself I'd go along with the nasty bit of vengeance for my sister for as long as that happened. When I lost that thrill running through my bones, I'd quit and go back to work. I always felt it with a bit of relief because seriously, this was fun, fucking fun! \n\nShe waited. Finally she said, \"So? Should I know you?\" \n\n\"May I come in?\" \n\n\"No. You may not. The last guy I let in the door I didn't know put this on me!\" She snarled, pulling up on her pants leg to reveal a blinking red light mounted on a black band around her left ankle. \n\nI grinned. I could not help myself. Suddenly I felt that other thrill, the thrill that kept me from frittering away my life chasing pussy, the thrill of the deal. For a moment I had that feeling, that chill up my spine that suggested I knew what I was confronting. I had the feeling that this woman was negotiating with me, that she knew what was what in Holdingsfield, perhaps she was even the fabled Chair of the Board that I sought. I felt she had something at stake but I didn't have a clue what it was. Given her recent shift in circumstances, whatever was infusing her now likely had little to do with who she had once been. Losing everything as she had, professionally speaking, left a gap in the world and if you fell into it, you may never return. I got the impression the wind was trying to suck her into that abyss and she was scrabbling for a hold to stay where she was. There is was, the word I was looking for. \n\nDesperation. \n\nShe was desperately trying to hide her desperation. \n\n\"What do you want?\" She asked again, interrupting my flow of thought. \n\nI was a little irritated by the interruption, people usually waited for me to return from gathering my wool. I had to stay in the moment, I was just some guy ringing her bell. Man oh man did I want to ring her bell. My hard cock testified and I straightened a little to be sure to present my main member to her eyes, if she checked out my crotch. \n\n\"Joshua Gale.\" I repeated, searching for my entree. \"May I come in?\" \n\n\"No. Asked and answered. What do you want? I am not prone to slamming doors in people's faces but I may if you don't give me a sound reason to stand here listening to you.\" \n\n\"I have a proposition for you.\" I said. I realized I had arrived at her door without a fully thought out plan of action, an approach and that was not like me but the feeling of dangling out in space without references sort of jazzed me up. \"I have contracts with several homeowners in Holdingsfield, to purchase their homes, I mean.\" \n\nHer eye brows raised. \"Oh? Why would you do that?\"\n\nI smiled my best smarmy smile. \"Arbitrage. Something I am sure you know about. I find this to be a very interesting opportunity, Holdingsfield, I mean.\" \n\nRae Dawn Stewart waited. \n\nI decided to be circumspect but immediately changed my mind. That would get me in trouble. If I tried to disguise what I was about, I'd end up with angry partners and that did not work for me. They needed to lift their skirts intentionally and with eagerness for this to be any fun. Sharon wanted a rape scene but I don't do that, well, not as a rule. If a woman wanted something like that, I'd figure a way to give her what she wanted. I shook my head. I needed to focus.\n\n\"Ms. Steward, let me be frank with you.\"\n\n\"Please do.\" \n\n\"I have offered to buy people's houses and cure their deficits to keep them in place as part of a trade. When someone has no capital to bring to a deal, you have to find a way to value what they do still possess. In the case of Holdingfield, this consortium is broke, bankrupt and if you all don't hang together you will hang separately and no one will be well hung.\" \n\nShe arched on eyebrow, a distinct and conscious action but she did not otherwise change expression or make any move at all. One hand remained high on the door ready to slam it closed. \n\n\"The women of Holdingsfield with a few notable exceptions are beautiful, that is to say fuckable. I am offering each homeowner the chance to settle their debt but they must write a contract entitling me to use them sexually anyway I please, within some parameters to be worked out after the deal is consummated.\" If I expected her to be aghast or something, I was disappointed, and I was and so I was, so double the disappointment. She continued to regard me with her incredibly focused stare. \"My plan is to provide the women of Holdingsfield a way to fuck their way out of this debt they have acquired, both individually and collectively.\"\n\n\"You want to turn us all into hookers?\" \n\nI shook my head. \"No. Well, not exactly. I want you to have sex for money, yes, but with the understanding that you pick the men you wish to fuck and reject the rest. I figure with the variety of women here in Holdingsfield, nearly any given guy should be able to find at least one woman who will consent to having sex with him. Statistically, it is unlikely one guy can reject all of the women of Holdingsfield. \n\n\"What does this have to do with me?\" \n\n\"I want the chance to offer you the same opportunity.\" \n\n\"Fuck my way out of debt? No thanks.\" She started to close the door.\n\n\"Wait. Wait a second. I am providing capital to heal the situation and you who would benefit from that have nothing I want. Or need. I provide you with a way out of debt and I give you your sexual fantasies, if I can. My cock is my cock and it stopped growing long ago but otherwise I mean. The women enjoy being fucked whenever I like. They do. Honest.\" It felt weak and pallid even to me. \n\nRae stopped though. \"I don't believe you.\" She said softly. \"No woman would let you just, do what you wanted with her. And enjoy it. You're lying. You are just imagining things, making shit up because you know...\" She stopped. Her face worked for a moment and her lips pursed like she was kissing a peach. \"Prove it. I bet you can't do what you just said. I bet not one of these women would fuck you while I watched!\" She smiled all superior and confident and something else I didn't quite classify right. I thought it was contempt at the time. \"Come back when you aren't talking bullshit.\" The door closed.\n\n\"I'll be back in an hour!\" I shouted at the closed door. \n\nI turned away. Of course I could come back, with a woman on a leash ready to fuck. I found I was walking towards the Sawyer house and stopped. \n\n\"Fuck me.\" I grunted, realizing that Eve wouldn't do as I wanted. Rae was right about Eve, at least so far but then I realized something else. She wasn't the only pussy in the stable. Stable? Fuck that, I may ride these women but not a one of them was horsey. This was an American Harem. I grinned. Fuck me but I liked the sound of that. American because they aren't imprisoned or captured. In America they join by signing a contract. Harem because I could fuck them all. \n\nI glared in the Sawyer's direction. I needed to address that, her rejection but I felt the press of Crowley's urgency that I administer my offer to Ms. Stewart immediately. Fuck. What would I do now?\n\nSuddenly I felt foolish, again. I did have a harem and it was populated by a number of women that would fit a collar and leash just fine. I sauntered back towards my house, mentally flipping through my options. Liza, Val and Mrs. Lewis came to mind but they all felt wrong for this little effort. Vidya and Kiko did not please me. I wanted a white woman on a leash. I went inside and sat in my office, puzzled. My mind seemed muddled and confused. \n\nIt had been so perfect, the picture of Eve Covington panting through and orgasm or kneeling with my cock in her mouth while Ms. Stewart listened distractedly to my proposal. I had this mania in me. I'd dreamed of only Eve last night. Her ass clinching as I fucked her from behind. Her mouth on my cock sucking me while her big, model's eyes gazed up at me, filled with mixed emotions that tortured her in many different ways but never released her from the lust that drove her back to my cock over and over again. I had her and by god I wanted to keep her. \n\nHer big bad \"no\" echoed around in my head. I was startled because I guess I figured that having her sign the contract was the last struggle I'd have with her. Deep in my idiot heart, I thought that it'd be smooth sailing after that. I tried to imagine Jeri Lewis with a collar on her neck and couldn't do it. I ended up with it stuffed between my jaws and a broom stick shoved up my ass, in my imagination, I mean. I had the feeling I was forgetting something when the taxi appeared. \n\nJews and Quakers but I felt stupid. I watched out my office window as Mrs. Simpson bustled out of the taxi with her two cases, paid him and then listened as she rattled through the front door. Mrs. Simpson obviously solved my problem. \n\nI got up and went to the door of the office. Jennifer dropped her bags and flew into my arms. She hugged me tight, trying to get all of her body to contact mine, which was impossible but fun to attempt. When the hug abated, she took my face in both hands and kissed me soundly on the lips. ",
        "\"Mr. Gale, I mean Joshua, god, I cannot tell you how how how...oh god, that was the best weekend of my life!\" She sobered. \"I don't mean the sex, you still, you still fuck me the best but god, having a virgin guy of nineteen like that, willing to follow my lead...god, I think I have found my calling. Have any more virgins for me to service?\" \n\nI doubted that we'd find many more of that sort or that they'd fit our services so exactly again but I did not want to burst her bubble. She did not smell used and had none of the travel mustiness about her. I said so.\n\n\"Oh, I traveled first class and this jet had a shower. I finished just as the plane landed so I am fresh enough to eat.\" She grinned impishly. \n\nI did not grin back. I decided immediately. \n\n\"Come with me.\" We walked out of the house. She kept lagging so I finally took her by the upper arm and dragged her with me to the Sawyer's house. She clacked along the side walk in her high heels. At first, she seemed chagrined by the loss of her princess status but by the time I rang Eve's doorbell again, she seemed to have retrieved her delight as sex object and was reveling in it. While we waited, she backed up against me and pressed her plush bottom against my very hard cock. \n\nI nearly fucked her on the spot. \n\nThe door opened, Eve again. \n\n\"No.\" She said again, like the word gave her pleasure. \n\n\"Fuck you. I need the collar and chain.\" \n\nJennifer quit her tittering and went still. She finally realized that life in Holdingsfield had continued without her, developing new wrinkles in her absence. \n\nFor a moment Eve glared at me, toying with her options. When she settled on one, she lifted her chin and spat her decision at me. \n\n\"No. It's mine.\" \n\nI stared at Eve and she stared at me. \n\n\"I am going to fuck her for Rae Dawn Stewart.\" I said. \"It should be you but if you don't want to, then I am sure Mrs. Simpson here, will.\" \n\nEve blinked. \n\nI realized the genius of announcing my intentions but despite the synchrony with her, Eve lifted her chin a bit more and said it again. \n\n\"No. No, Mr. Gale and you will not convince me.\" \n\nI nodded. She was as expected, stubborn but her conviction that she discomfited me were far overblown. I turned away before she could close the door, so she didn't, standing there watching me walk Mrs. Simpson back to my house. She was still watching us when I opened the gate to the yard and even while we drove out of the garage I could see her on their stoop staring down the street at me. \n\nI drove across town once again, to the very same grocery store. I realized I wished I had brought the sleeves, wished I had put them on my sex object. I shrugged. This might be just as fun without it. Jennifer had gotten quiet, finding her sex object position in life once more. She still bubbled with ebullience but managed to keep it inside, glowing like ET's homesick heart. \n\nI took her hand in mine and we walked into the place like lovers. She nearly cooed with the sensation. I walked us directly to the pet stand and selected a plain brown collar, I say \"selected\", I fit it around Jennifer's neck. Once I got the right size I put it on and she fingered it like a unicorn would focus on a second horn. I found another chain and fastened it to her collar. \n\nJennifer squeaked as I hooked her up. She did not speak but stared at me with big blue eyes, fully aware that something had shifted while she was gone and unsure if she liked what it had done to me. \n\nIn that moment I remembered something. She had her own, her own collar with its own chain. I stared at her, collared like a pet in the pet products aisle. Maybe I should have used that but then it occurred to me that this collar and this chain could end up on Ms. Stewart's strong neck. Hardly likely I thought, but possible, desirable and maybe eventually. Still, seeing Jennifer quivering in the pet aisle with the collar around her neck and the chain in my hand excused my oversight and replaced it with lust. She quivered, like a bird dog on point. \n\nI gave the chain a little pull. She half-stepped towards me, shuddering. I knew what I felt, if she felt the same, if we conjugated, there be a fission meltdown, not to mention we'd get arrested. I turned and led her away. She walked with me to a check out line. People stared and pointed again. I felt a vibrant thrill run up my spine and my mind began to whir like a centrifuge. I left Jennifer behind a plainly dressed housewife, dropping the chain between her tits to the floor. I went to the bakery and got two eclairs again. I rejoined her in line. The housewife stared at me with the same mixture of awe and horror, turning away when I ran my hand down the chain, and so down Jennifer's front, to get the lead back in hand. The woman squawked and pulled at her jacket, turning around and averting her eyes. I couldn't tell if it was Jennifer's outfit that exhibited her curves or the collar and chain. I decided it was both and the woman responded to both. \n\nThe line was for the same young man I had selected the day before with Eve in tow. When our turn arrived, he eyed Jennifer with undisguised lust. He looked at me with naked fear, like he had a sister tucked away and I was a Cossack come to collect her. He swallowed hard and did the scanning thing with collar and leash. I was daring him to make some comment and to his credit, he did.\n\n\"Two?\" He croaked. \"Have any extras?\" He tried to smile. \"I think I'd end up with my balls in a jar if I tried to put my girlfriend on a leash.\" \n\n\"Or your cock in her mouth.\" Jennifer said brightly. \"She might like the feeling of being leashed and led around the park.\" She giggled and shifted her hips back and forth. The couple behind us looked at each other with large round eyes. \n\n\"Hush. Don't listen to her. Unless your girl is a straight perv, just stick with dinner and a movie.\" \n\n\"That's a contradiction. Isn't it?\" The kid said.\n\n\"What?\"\n\n\"Straight perv? Isn't that a contradiction?\" \n\nI snorted, paid him and walked away to the side. I took out an eclair and held it up before Jennifer's face. When her hands rose to take it, I moved it back. \n\n\"No hands.\" I said. \n\n\"Oh!\" She squeaked and then her cheeks turned full red. Her eyes danced as she studied the thing. \"Ok. Ok. I, I'm ready.\" She swallowed hard. \"All of it?\" She asked, eyes glittering with impish delight. \n\n\"I dare you.\" I said softly.\n\nI moved the eclair close to her lips. Her mouth opened and she leaned forward. Her tongue extended and licked off a ridge of soft chocolate. \n\n\"Mmm.\" She moaned, withdrawing to savor the rich taste. \"Okay, okay.\" She opened her mouth again and I touched the end of the eclair to her extended tongue. Instead of taking a healthy bite, the woman pressed her mouth as far down the length of the eclair as she could, taking 80% of it into her mouth. Her lips closed and I realized her eyes were closed. She sucked hard on the eclair and pushed against me. My hand naturally pushed back and the rest of the thing slipped into her mouth. Jennifer closed her lips around. A little gout of Boston cream squirted past her lips, spreading over her chin and out to one cheek. \n\nI moved my hand away and she bent forward, giggling from her throat. Her hands approached her decorated face but halted before she touched anything. She started to chew. More cream dribbled down her chin, a little chocolate appeared on her upper lip. Her tongue appeared swiping at the chocolate but that made things worse, smearing it up so she looked like she had half a mustache. I stood there watching while her mouth digested the whole eclair. I glanced around and found every male within thirty feet of us staring. The women glared either at us or at the man they were with. \n\nJennifer choked a little and blew air out her nose. She snorted and was laughing hysterically deep in her chest. Her tits wavered. She still wore the business suit she'd traveled in. Her top was white chiffon with ruffles up the middle but showing plenty of cleavage with a green vest jacket and green pants. She looked elegant but she'd just deep throated the eclair, which sort of ruined the general picture. \n\nShe chewed and swallowed, chewed and swallowed till she finally got her mouth cleared. I looked at the young cashier and decided to test him. I took hold of Jennifer's upper arm and directed her to stand before him. \n\n\"Care to clean her up? Off?\" I asked. \n\nHe stared first at me then at the smear of cream and chocolate on her face. \n\nI winked at him. I had no idea what he'd do and that was part of the fun of it.\n\nHe finally lifted a finger and used it to swipe some of the cream off of her chin. He looked at the cream on his finger then at me, then at Jennifer. She opened her mouth and showed him the tip of her tongue. He moved his finger closer. She extended her tongue and licked the cream off of it.\n\n\"Mmm.\" She moaned. \"I do love cream.\" \n\nThe kid got more on his finger and this time, Jennifer leaned into him, sucking his finger into her mouth. She lost suction and the sound seemed to echo around us. \n\n\"Jesus fuck a Roman,\" someone said. \"She's sucking him.\" \n\nShe did then, taking his finger completely into her mouth and sucking it for all she was worth. \n\nI glimpsed the store manager glaring down the checking lines at us. I tapped Jennifer on the ass. \"We need to go.\" I muttered.\n\nThe kid withdrew his finger.\n\n\"Clean up on aisle nine.\" Someone muttered with a chortle wrapped around it. \n\nI steered Jennifer to the door and out. \n\nShe laughed like a hyena on the way to the car. \n\n\"Uncle Fudds duds, that was fun!\" She cackled. \"God, who knew a collar would make me do that? Usually I just get crazy horny and can't think straight! God, I've never felt anything like that. When he touched me, god, I almost got on my knees and opened my mouth so he'd know I'd suck his cock.\" He glanced over at me, fingering the chain dangling between her breasts. \"Only if you uh said I should, I mean.\" She sobered up. \n\nI wasn't laughing and that inhibited her. I was thinking about Eve's \"no\" and what to do about it. I already knew what I was going to do with Ms. Stewart. She thought I was lying or bluffing or both and I was determined to show her what I could do with my Holdingsfield women. I drove in silence and Jennifer's excitement subsided till she matched my mood. She took a wet one from her pocket and cleaned off her face. I ate the other eclair while I drove. I felt her watching me like a cat watches you eat a chicken wing. \n\nAt the house I pulled into the garage and sat for a moment, settled on my next move and got out. \n\n\"Stay here.\" I said and went into the house. I got the scarlet sleeves and returned to Jennifer. She'd followed me in the house and washed her face. I regarded her outfit. \"Do you want to keep these clothes for any reason?\" \n\n\"He, Clayton, he bought them for me. I showed him how much fun it is to shop for clothing with the right woman.\" Jennifer chortled. \"What are those things?\"\n\n\"Do you want to keep these clothes or...go change. You should. A skirt. The rest you decide but something you don't mind getting torn. Maybe we do a little shopping of our own to replace it.\" I didn't grin but wanted to. She got it and turned to obey. \n\nI waited impatiently while she flew upstairs and changed. I carried her luggage up to her door and left it outside and then returned to close the garage. I was checking email when she reappeared. She wore a knee length red pleated skirt and a sweater that rippled around her breasts. I bet against the presence of a bra. I nodded approval. Then I smirked. She wore flat sneakers, shit she looked like a cheerleader, a full-grown woman stuffed in a cheerleader's outfit. It did not make her look younger, it made her look available. \n\nIt was like I had forgotten the power of her essential sensuality and it rubbed up against me right then. I felt like lifting her skirt to see if she was nude underneath but didn't preferring to respect the fourth wall that I had erected between me and the women I owned. It was like I had to re-seduce them every time. I refused to take liberties at all times so when I did, it seemed special, to us both. \n\nI nodded. \"You look wonderful. I am going to fuck you, you understand that, right?\" \n\nShe nodded. God, her repressed enthusiasm was erotic itself, without all her essential attributes. The woman wanted me to fuck her and that made all the difference. Then she did another perfect thing. She drew up the leash still attached to the collar still around her neck and when she found the leather loop at the end, she extended it to me. Her hand trembled. \n\nI grinned. I could not help myself. Instead of taking the leash, I took her hand and pulled her into a full body embrace. When I kissed her, she seemed to climb up against my body, pressing herself against me with eager intent. She intended to fuck me. That much was clear. I released her lips, released her, stepped away and found the leash. I trailed it out behind me till it dangled loosely between us. She watched with curious eyes till I gave it a gentle jerk and tugged her towards the front door. \n\nI stopped though and went back into the office and got the scarlet sleeves. Jennifer looked askance at them and then at me. \n\n\"Turn around.\" I said softly. She did and intuiting their purpose, she put her arms behind her. I slid one sleeve onto her arm and she bowed her head. Her blond hair covered her face. She arched her back, keeping both arms behind her, straining to touch her elbows together. She knew and understood. Her arousal was incandescent. I put the second sleeve on her right arm and zipped them together. She shuddered. When she looked at me again through the tangle of her blonde hair, her eyes glittered and flashed. Something inside her had shifted to match what had clearly shifted in this environment. \n\nOut we went but rather than turning left to go towards where Rae Stewart lived, I led Jennifer back to the Sawyer's front stoop. I rang the bell again. Again Eve opened the door.\n\nMy cock was hard. I rubbed it, staring at Eve. Eve's eyes flicked past me and settled on the collared woman behind me with her arms restrained behind her. I saw her swallow, felt surprise and chagrin radiate from her like a wave of heat. She seemed surprised that her denial yielded this, this affront, an affront that confused and irritated her. I did not understand her calculation but presumed all she cared about was bare resistance and here she faced the consequence of that resistance. \n\nI tugged on the chain and Jennifer drifted closer. I slipped past her and pulled her down to the side walk. The Sawyers had two large blocks at the side of their walk marking the entrance to their yard, they were covered in stucco to match their house style. I turned Jennifer. I wanted her to bend onto the block but with her arms bound...I unzipped her. I bent her down till her hands were planted on the short block. She understood immediately and arched her back, lifting her hips. \n\nWhile Eve watched, I slowly unbuckled my belt and shoved my trousers down off my hard cock. I scrunched my briefs down and lifted the back of Jennifer's skirt. She was spring fresh nude underneath. She jerked when my finger touched her ass crack. She widened her stance and arched her back more. Her pussy appeared, glistening in the afternoon sun. I touched her and she moaned, deep in her chest. I could feel her quivering, she wanted to speak, to beg, demand and plead. I did not give her a chance. I shoved my finger into her body and she lurched. I pulled it free, wiping it on her skirt. I took my cock in one hand and directed it to her pussy. She felt me and leaned back. \n\nI penetrated Jennifer on the street under Eve's eyes and the afternoon sun. I slid into her like a shell into a gun chamber. She crooned as I penetrated her. She was well-oiled and receptive. The clinch of her body sent zinging sensations radiating from my cock as I entered her. I grasped her by the hips and pulled her to my cock like she was an accessory. What a fucking accessory. My god! The feel of her on me in that moment swamped my senses and left me gasping. Her hips were flexing with little micro-aggressions pulsing around my cock as I thrust deep into her bubbling body. \n\nI wanted to come. God, I wanted to grind my pubic bone against her plush ass and see if I couldn't make her scream but I didn't. I pulled my cock out of her. It glittered in the sunlight. I turned with an awkward waddle to face Eve still gawking from her doorway. \n\n\"Mrs. Sawyer, come suck my cock.\" I said in as normal a voice as I could manage. \n\nI don't know what I expected but when she stepped off the stoop and approached me, I felt surprise with the excitement coursing through me. \n\nEve was nodding. She stopped before me. Her eyes rose away from my milky cock and met my gaze. \n\n\"This, this I will do.\" She grated and got to her knees. Her hands clamped onto my thighs. She steadied herself and her head rose up. Her tongue extended and she licked around the head of my cock. I thought sure my hair was standing on end. She licked my cock clean.\n\nShe started to get up but I put a hand on her shoulder and kept her on her knees on the concrete. I turned and pressed my cock into Jennifer once more. My sex object had watched the other woman tasting her on my cock. When I entered her, I think she tipped over into a low intensity orgasm that bubbled along without really exploding, like the rush of a subterranean river. I pushed deep into her body, stirred around a little and pulled free. I turned to present it to Eve.\n\nI had to shuffle closer but Eve's hand found me and pulled at me. This time she did not use her tongue but sucked my cock directly into her throat. Jennifer foamed around Eve's lips as they skimmed down my cock. She buried her aristocratic nose in my pubic hair and sucked hard on my cock. I struggled against her hold finally grabbing a knot of her hair to pull her head back. \n\nShe wanted to make me come. It was some sort of contest, some sort of challenge Eve was engaged in without anyone else being involved. I felt it and if I hadn't wanted to come in Jennifer for Ms. Stewart, I'd have pumped a gallon of cum into Mrs. Sawyer. I didn't. I used my hold in her fine hair to pull her off my cock. Her eyes were fierce but finally she released me, all affront and private antipathy. \n\nI redressed. Eve did not move, watching me from her knees on their walk. I glanced past her and saw John inside the house, observing his wife sucking my cock. He did not notice my notice. I picked up the end of Jennifer's lead and led her down the street towards Ms. Stewart's house. Eve got off her knees but stared after us, finally turning her straight back and stumbling into her house. I know because I kept looking back to see if she would follow. She didn't. \n\nWhen I quit looking back, and after we passed by my house, Jennifer asked where we were going. \n\nI was going to answer her but my phone rang. I glanced at the face of it and saw it was Mrs. Grayson.\n\nI stopped and put it to my ear. Jennifer huddled up against me, her body quavered with sexual tension. It could have been me, I guess. Both of us were affected by Eve blowing me in broad daylight, that was more likely.\n\n\"Hello?\" I said. \"Joshua Gale.\" \n\n\"Alan, I need your help.\" \n\nI glanced at Jennifer. \"This Joshua Gale.\"\n\n\"Oh, I am sorry. Of course, Joshua, that was who I called. Please, I need your help.\" \n\n\"Mrs. Grayson, so nice to hear from you. Yes, Mrs. Simpson got home just fine.\"\n\n\"She's there? Okay. Listen, I need a huge favor.\" \n\n\"Oh? Business or pleasure?\" \n\n\"I, er, both, this is family. Sort of. My sister, she is a pig's idiot, a farmyard jester of the first order. She ran off with her trainer several months ago and her husband who is a good enough guy was not wise enough to change accounts and isolate their holdings from her. She drained their accounts and left them broke. By them, I mean my nieces and Phil, her current husband, the girls' step-dad. He, he called a while ago and said the girls had quit college and had taken to hooking out of his house to make money, for them and him. He cracked a vertebra in his back some weeks back and cannot work, can barely move. They refused to take money from me and he won't either. They said any of my money they'd just blow on blow and hookers. I keep offering to help them but they don't have any interest in my help. I want you to help them.\" ",
        "\"Help them? Do they do drugs? I won't deal with addiction. That is for someone else to deal with.\"\n\n\"No. No, that was a poor choice of words. Phil assures me they are not addicted. They fiddle but Rome isn't burning. I mean, they, god Josh, my nieces are hooking, right in his house, with him listening.\" Mrs. Grayson hesitated. \"Joshua, I told them I sold them to you. I said if they wanted to be hookers, if they wanted to have sex for money, they should have protection, sponsorship. I told them I sold them to you.\"\n\n\"How much?\" I asked.\n\n\"What? What!\" \n\n\"How much do they charge?\" \n\n\"I, I don't know.\" \n\n\"Find out. You'll need to know that.\" \n\n\"Why?\" \n\n\"You tell them you sold them to me. You need to make sure the price is sensible. They need to be able to calculate what they are working off, how much they have to fuck to get free and then how much to have a buffer against the cold, cruel world.\"\n\n\"I, uh, okay.\"\n\n\"How old are they? Under eighteen is a no go, you know that right?\"\n\n\"Of course.\" \n\n\"I need copies of their birth certificates.\" My mind was clattering with activity. Her two neices! And I owned them, free and clear...I doubted that would work but it got them on the plane. I felt a new idea growing but it was still unformed. Mrs. Grayson was speaking. \n\n\"Oh, okay. You don't trust me?\"\n\n\"You have a farmyard jester for a sister, its her I don't trust and I bet you never paid her enough attention to tell if she has lied about the big things much less the little things. You bought her off and ignored the details.\" \n\n\"I...okay, maybe I deserved that.\" \n\n\"Ages?\"\n\n\"They are both twenty. Oh, they're twins.\" \n\nTwins? Twins? My cock perked up. Twins! \n\n\"Blonde twins and beautiful, I assure you.\" She stopped, waiting for me to effuse for her. When I didn't she continued. \"I'll get copies of the birth certificates but Joshua, they are on the way to you now. Phil put them on a plane an hour ago. They'll be at the airport at nine tonight.\" \n\n\"What! And you're just now telling me?\" \n\n\"I had to get my ducks in a row. I, I had hoped you'd give them a job, get them a job at the, at Le Foil et Le Touche. I, I needed to get them primed. They, ah, think they are going to be in show business.\" \n\n\"So which did you tell them? They would be hooking or they would be in show business?\" \n\nMrs. Grayson giggled. It sounded so out of character. \"I told them if they were going to fuck for money, they should do it on stage. You'll see what I mean when you meet them. They'll be there tonight and, truthfully, I think they only got on the plane because I dangled that possibility before them.\" \n\n\"You lied to them.\" I said.\n\n\"What?\" \n\nI could hear the shock in her voice.\n\n\"When they call you, and they will, you lied to them. I'll figure out why but you lied to them.\"\n\n\"I...okay. I lied to them but, did I?\"\n\n\"Shit.\" I grunted. I looked around, realizing I was discussing this mess on the street. \"I, I'll pick them up but if I don't like the feel of it, I'll box them up and send them back to you.\"\n\n\"Good luck with that. I don't have an address since I am on the road so much. You have to have my schedule and well, now I'm not giving it to you.\" \n\nI heard the tease in her voice and it disarmed me. \n\n\"I'll, I'll see what I can do.\" \n\n\"Joshua, they are sex kittens and they exploit men, not the other way around. I think you should exploit them if you can. I doubt that you can but you can try. Anyway, thanks for helping out with this. Now, now Mr. Gale, I do owe you. Isn't that what you wanted to accomplish all along? Now you can ask something of me, when and if you get them tamed.\" \n\nI yanked on Jennifer's chain. \"I'll collar them for you, Mrs. Grayson.\" \n\n\"Why do I think that I should put more importance on your turn of phrase than is at first apparent?\" \n\n\"I have no idea,\" I said but spoke it to a dead phone. I glanced at Jennifer and saw the heat of the moment had cooled. She regarded me with curiosity. \n\n\"No mention of this...\" I hesitated, trying to remember if I had confronted her about hacking my email. Of course I had, that was how she ended up boinking Victoria's son. \"You got one strike with the email thing. Just because I made it work out all right for you and the rest of us, don't think I forgot. If you make me punish you to deter you from fucking with me, I'll get rid of you and by that I mean I'll hand you off to someone to punish who might enjoy it sightly more than I would. If you make me hurt you, I assure you I will never forgive you. I like to give you pleasure and it behooves you to deserve it. Do I make myself clear?\" \n\nJennifer bobbed her head like she was blowing Elvis. I hoped rewards motivated her as much they did me and not privation as so many people required before believing I am serious. That was Crowley's job and though sometimes I think he warmed to the tasks I gave him too much, I appreciated his willingness to make others howl. I hated that so we made a pretty fair team. \n\nI put away my phone and made a mental note I had to be at the airport by nine. I was just realizing I had no flight information or pictures when my text bell dinked and I found flight info from Victoria. I was just putting it away when it dinked again and I found a single picture with \"times two\" as the caption. The female in question was astonishing. Blonde, gorgeous, young and she had a cast in her eyes that said she was willing. Fuck me.\n\nI put it away to think about later. Mrs. Simpson turned to me and put her sleeved arms behind her back. I zipped them together again. She seemed to revel in that restriction. When she turned around I could see why, her tits arched under the sweater with her arms pulled back. I turned towards Ms. Stewart's house and set out once more, with Jennifer trotting along behind me, wagging her arms behind her. I strode up the walk to Ms. Stewart's front door and rang the bell. \n\nAfter a pause the door opened. \"You again.\" Rae said but then her eyes registered the collar and leash and what it was attached to. \"Oh.\" She said. \n\n\"Want me to fuck her here or can we come inside?\" \n\n\"You said an hour. It's been nearly three.\" \n\n\"What's your point? Got someplace else to be.\" \n\nShe moved her mouth but nothing emerged so she shrugged, rolling her shoulders and that made her tits wobble fetchingly. I was hard but I wanted to get harder if that was any sort of statement. Rae stepped back into the house and then turned her back to us and walked away, leaving the door open and, perhaps in spite of herself, showing me her ass, rumbling wonderfully inside the baggy sweat pants. Imagination is a wonderful thing. \n\nI yanked on Jennifer's lead and we walked into the house. Jennifer kicked the door closed behind us. \n\n\"Where do you want to do her?\" Rae said turning and folding her arms under her breasts, making them bulge up under the thick sweater. \n\n\"I...\"\n\n\"How about here? Over the back of the couch. From behind?\" Rae's eyes looked onyx hard. \n\nI shrugged. I did not understand what was happening but at least I was in the door. I gave Jennifer a little tug and she drifted up behind me, pressing one side of her body against my back. I was conscious of her luscious breast and the swell of her hip where they contacted me. I turned, drew her around me and with both hands on her waist, maneuvered her to the back of the couch. Once again I unzipped her. She bent immediately over it, placing her hands on the cushions. Posed, she waited her back arched and her feet wide. She tried to crane her neck to look around but the angle was too harsh so she dropped her head between her scarlet sleeved elbows. Her blond hair fell down, exposing her neck and the collar around it. \n\nGod, the vision of her bent over like that and the collar on her neck, it fired me full of passion. I opened my pants and skimmed them down to my thighs. I felt Ms. Stewart's eyes on me and I was suddenly shy before this new woman. I wanted to glance at her but did not want to seem like I was eager for approval or anything of the sort so I concentrated on business, well, on Jennifer. I bunched her skirt in my hands till I could flip it up over her back, exposing her naked flanks. She was bare, her smooth white skin shone in the dim light. I caressed her hips and she murmured approval. I peeled her open and she tensed under my hands. I crouched a little and pressed my body against Jennifer's, my cock bent up between us, fitting nicely into the crease in her ass. She wiggled back at me and the sensation rifled through me, like a spinning bullet. \n\nI grunted and leaned back, taking my cock in one hand. With the other, I probed between her legs till I found the swell of her pussy lips. The woman dripped with anticipation. She'd been teased all afternoon, it should have been no wonder that she was aroused and ran with it. I found her inner avenue and entered her with a finger, then two. She moaned and did something that made the chain rattle. I paid no attention. God, I wanted her. I positioned my cock and plunged into her, heedless of all else. \n\nThe slick walls of her channel grasped at me as I thrust into her. The pleasure rose up in me like a rising flock of sea gulls under a soft evening sun. I gripped her hips and pulled back till her pussy nibbled at just the head of my cock. I swear I felt her tighten around the end and she wheezed from her other end. She might have been speaking but it came out like garbled breaths. \n\nI hammered back into her and her body rocked forward. Her ass bunched between us and I felt the hot plushness of it pressing back at me. She leaned back increasing the pressure between us. I felt her inner muscles ripple around my implanted cock. Her body bucked once and she cooed, just a small noise like a nightingale's last notes before sleep. I pulled back and rammed into her again. She bucked harder this time, her head bobbing as I rammed into her. Back again and deep into her I thrust, and repeated the motion. \n\nThe third or fourth time I felt the ripples of pleasure begin deep inside of her and she moaned.\n\n\"Oh, oh, oh god yes, fuck me, Joshua. God, fuck me!\" Her voice cried from the other side of the couch. It felt like she was watching me fuck her, that her eyes were on me and I opened mine, looking around bewildered by the sensation. I kept stroking the bent woman but found Rae standing at the other end of the room, staring at me. Her arms dangled lankly at her sides. Her eyes focused on us, fierce and intense like she was searing the image into a zinc plate. She did not acknowledge my eyes on her. She swayed once. \n\nI continued thrusting into Jennifer and from time to time she'd buck, her whole body twitching as the tendrils of orgasm licked at her, like a rising fire inside of her. In a minute or two, I was stoked full and my orgasm overflowed. I grasped Jennifer hard by the hips and pulled her onto my cock, sheathing myself deeply in her. My climax struck and she knew it, felt it, and screamed as her own rose up to meet mine. We experienced together that sweet moment of mutual satisfaction. Her body shifted and jerked as hers raged inside her, feed by the cum I pumped into her, one nodule at a time. Her pussy sucked at me, pulling at my cock, accentuating the sensations on the skin that mimicked those tingling through all of my nerves, confusing the muscles with outrageous instructions. \n\n\"Oh Christ, fuck me, Joshua!\" Jennifer mewled from a great distance. \n\nI opened my eyes. My body was shaking with the aftershocks of the orgasm, our orgasms. Jennifer's seemed to envelop us, leaving us both wrapped in a silky sensation of afterglow that left me breathless. I crumpled, leaning over her bent and strained back. I slipped my hands under her sweater and ran them up to cup both of her breasts. She popped her hips back at me in response My cock swam inside her. She swirled with sensations that shot through her with uneven frequency. She twitched, she jerked, she grunted. I shivered with the sensations of her body under mine. I released her breasts and straightened but dizzied. My body was not ready to move yet. My cock levered out of her and gave up the ghost. I lay on her like a wet saddle blanket. After a minute, she began to pant and grunt, wheezing as she fought for air, her diaphragm pinched between my weight and the rigid couch back as I relaxed on her. I fought for a hand hold to push myself up but only found her shoulders and back. I used her to stand straight and that made her grunt louder. \n\nI staggered back, my trousers around my knees. I reached down and pulled briefs and slacks up and over my retreating cock, shy once more. \n\nWhen I was done righting myself, I finally looked over at Rae Dawn. The woman caught my eyes on her and turned away, her arms once more folded around her breasts which clearly outsized her slender frame. Rather than addressing her, I helped Jennifer to stand. Her skirt dropped into place and she turned to look at me, her face showing a little shame, which I didn't understand. I could see she had words that needed saying but I wanted none of her. \n\nI unfastened the collar from around her neck. She looked shocked, mystified, even hurt. \"Go on home, I'll be there in a while. Fix us something to eat.\"\n\nShe nodded, suddenly sunny with happiness once more. She extended her scarlet sheathed arms and I helped her pull out of the sleeves. She tucked them under her arm and padded out of the house, the cheerleader glowing with post-coital satisfaction. \n\nI knew she'd been teased and pleased for a weekend so the satisfaction was partly held over and not all resulting from this single engagement. Rae Dawn did not know that. She was pouring herself a drink, using the action to hide her reaction to the action she'd just witnessed. The bottle neck rattled on the lip of her glass. She turned to look at me, sipping. \n\n\"Good lord, did she...?\" \n\n\"She came.\" I averred. \n\nRae shook her head. \"Two or three times if my eyes did not deceive me.\" \n\nThe wonder in her voice made me swell with pride and yes, my cock got hard too. \n\n\"So?\" I said. \"Care for a go?\" I was too cocky by half. \n\nHer eyes returned her mind from the great distance where she had been and focused on me, first fixed on my shifting crotch and then up to acknowledge my eyes with her own gaze. \n\n\"No.\" She said simply. \"But I see that you are not bullshitting about the...the...their willingness to submit to your wishes. What else will she do? Oh, I don't doubt that woman would do whatever you asked but do you expect me to believe the others will?\" \n\nI almost answered but she cut me off. \n\n\"You say, you say you have others? Show me? I want to see,\" her voice hitched and I misunderstood, thinking she was affected by my performance but not yet swayed. I still did not understand. \n\n\"Others?\" I grunted dumbly, like I was speaking in a newly acquired language and had to taste each word before the meaning could soak in. \n\nRae's eyes cleared. She tossed her head. \n\n\"One is easy. She, god, she clearly enjoyed uh that. But but but you don't think I believe the others will, do you? I mean any of the others? She was a ringer and this was a setup. If you want me, you'll have to do better than that.\" \n\nI walked over to her and stood inches away from her. I could smell the scotch. \n\n\"I do want you. Make no mistake.\" My voice rasped with unexpressed lust. \n\nFor a moment she didn't move. She still held the drink. She turned her head, sipped from it and then with exaggerated deliberation, placed the other palm on my chest and gently pushed till I stepped back out of her personal space. \n\n\"Mr. Gale, I appreciate your, ah, persistence but you don't understand. I am, I am under indictment. I, I showed you my little anklet, right? The US government has decided they want me as a guest and...\" she turned her back on me. \"...I am in some distress because my partners decided to settle their legal debts using my assets and my ass. I am going to prison...\" \n\nI interrupted. \"I can stop that.\" \n\nShe whirled on me. \n\n\"Fuck you, Gale. I don't mind the show but that, that sort of lie is unconscionable. Get out.\"\n\n\"No.\" I returned, quoting Eve. \"Listen to me. I, I can help you, with our legal problems.\"\n\nShe went still. \"How? Oh hell, you are just lying to get between my knees like everyone else. Don't you guys ever give up?\"\n\nI grinned against the mood but hoped the dissonance would become the theme and the melody would be enticing. \n\n\"Not with you. A guy would be stupid to give up if there was a chance...to get between you legs and stay for a while, longer than a parakeet's whistle, I mean.\" \n\n\"Get out.\" \n\nFinally, I heard the quaver in her voice. \n\n\"Ms. Stewart, I can help you. I...\"\n\n\"This is all a fraud. You, the girl. Get out. Unless you can bring another woman back and, and do her too, I don't want to talk to you!\" \n\nHer voice jangled with stress and well it should. Still, I misunderstood it. I thought she was oppressed by the SEC and her behavior and tone reflected that preoccupation. It seemed reasonable. \n\n\"They will be here Thursday or Friday. Let me help you.\"\n\n\"Get out. Unless you can prove you can do what you say, I don't want to hear you speak. All you want is to...just go.\" Her voice cracked then and I thought the strain was too much finally. I did not want to witness her shattering. \n\n\"I'm going. I'll, I'll be back tomorrow.\" I left her then. \n\nI checked the time, nearly five. I needed to think about picking up the blonde twins. I walked towards home but then veered away. I walked to Mrs. Lewis' house. I knocked on the door. I realized there was a bell after knocking the third time. \n\nThe door opened. Jeri Lewis appeared in blue jeans and a man's shirt tied up under her breasts. She had her hair pulled back under a red kerchief. \n\n\"Mr. Gale? Come to fuck me finally? I signed your little contract and then you ignored me. I, I thought you'd want to collect soonest.\" Her mocking voice and haughty manner made me want to fuck her but I was Jennifer musty and did not want to mix them just yet. This was strictly a procedural visit. Part of the broader picture with this woman, to be sure but still a step in that direction.\n\n\"Mrs. Lewis,\" I began but she interrupted me. \n\n\"Come in. Don't stand on the stoop like you did with Eve Covington. Quite the display. Having her suck you off on her front walk. Yes, of course we noticed.\" The woman's voice quavered. \n\nI heard what I thought I heard. This woman wanted to be watched. It was no accident that Master's fucked her with other people watching or that she mesmerized people with her singing while she orgasmed on stage. It was all related and I think she anticipated I'd connect the dots. What she did not anticipate is the implicit teasing all these things entailed, the delay, the prevarication, the suggestiveness that would lead her to the hight point of climax. She did not count on me knowing this about her. I had other, more practical concerns.\n\n\"Doing anything tonight?\" I asked. Then had another thought. \"Is Ed home?\"\n\nShe shook her head. An emotion rippled over her face and then away. She cocked her head to the right and said, \"He's is in his latest mistress about now, I'd say.\" Jeri chortled and it almost sounded good natured and not despairing as should have been the case. \"Mistress my ass, being a mistress has benefits. He found another rich young woman to keep him while he bangs her and her roommate, I expect. So, no, he's not here. Not likely to be while the bills aren't paid. The fuck.\" She walked back into the house. \"What do you want?\" She flung over her shoulder.\n\nI was watching the action in the blue jeans and nearly neglected to answer her question. \n\n\"You have a car?\" I asked.\n\nShe stopped at the bar and sat that awesome rump on a bar stool which broke my concentration. \"Sure I have a car. Do I look like I'd ride a bicycle?\" ",
        "I grunted agreement but bit off the words because they would have been insulting, something about lucky to be reincarnated as a bicycle seat. \n\n\"I need you to go to the airport. Show me your clothes closet. We need to select the right dress.\" \n\nShe looked strangely at me, mystified. \n\n\"The right dress? What are you talking about?\" \n\n\"Your closet.\" I was gratified to see her impulse control working so well. Her impulse was clearly to tell me to pound sand but she resisted, thereby acknowledging the contract and her wish to abide by it. She nodded but did not speak. I presumed she was afraid of what would seep out if she did. She led me up to her bedroom. I noted that it was a secondary room and did not have an attached bath. The master at the end of the hall was unoccupied. She did have a large walk-in closet with a dressing table and brightly lit mirror and stool. Several rows of clothes filled the closet, nearly as large as the bedroom itself. \n\nI flipped through her clothing while she stood watching, confused and a little distressed to see me touching them with such careless disregard. At first I thought a manly shirt like what she wore would be fine but I found a white blouse with sleeves that had slits in them. The sleeves, then, consisted of ribbons of white cloth attached at the shoulder and the cuff. When her arms would be straight, they would be covered but most any movement would flash the lines of her bare arm to the observing eye. \n\nA thorough search of the closet did not reveal what I sought. I looked over at her finally, handed her the selected blouse. \"Can you wear this?\" \n\nShe held it up, her face confused. \n\n\"Of course. I don't keep clothing I cannot wear as motivations for diets I don't keep. I am pretty steady, size and weight. I don't flap in the wind like so many women struggling to keep their weight under control. I am what I am and it rarely varies.\" She hung the blouse on a hook. \"What is this for?\"\n\nI regarded her then, the man's shirt tied up to show her midriff and with good reason. The blue jeans, cut to fit a man so the waist bunched under the broad belt. I got an inspiration. \"You, those aren't yours, right? The shirt and pants. You are wearing your husband's things?\"\n\nJeri Lewis actually blushed then. She nodded and did not speak. \n\n\"Show me his closet.\" \n\nJeri looked confused then but duly led me to the master bedroom and one of it's two closets. She opened his but I veered to the other. I discovered why she had a second bedroom. The first was overflow. This one had the good stuff, the high end fashion that must have represented many thousands of dollars. Suddenly I understood the other side of her story, her side was one thing but the man had reason to grouse at her penchant for buying expensive clothing. She watched me sort through her more highly treasured things with some degree of horror. \n\nShe appeared relieved when I did not find what I sought and looked mystified when I moved to the man's closet on the other side of the bed. I found what I sought almost immediately. A dark blue pinstriped suit caught my eye. It had an expensive feel to it, like a woman with microscopic pores and a supple texture that meant class. I pulled the trousers free from the hanger.\n\n\"Can you wear these?\" \n\nJeri regarded them for a moment. \"They might split. I have an ass, don't you know.\" \n\n\"Would that be bad?\" \n\n\"That's Bill Blass.\" Then she tittered. \"I guess I wouldn't care a whit if we split out his good suit.\" \n\nI held the pants by the waist and pulled the crotch into view. I took firm hold and pulled at the seams. They did not give. I strained and still they resisted. I grunted with effort and suddenly they did give. The ripping sound seemed loud in the close closet. Jeri looked amused, then confused, then horrified. \n\n\"You want me to wear them like that?\" She asked.\n\nI nodded. I tossed them to her and she draped them over her arm. \n\n\"Here, try on the jacket.\" I tossed that too her as well. \n\nShe did. Ed must be longer in the torso because his jacket hung down to the tops of her thighs. \"Perfect. I'll call you in about an hour. We are going to the airport. I want you to wear the blouse from the other room and this suit.\" \n\n\"With the pants ripped out?\"\n\n\"No underwear.\" I added. \n\n\"Oh fuck, no.\" She growled back.\n\n\"Oh fuck, yes, Jeri. You are mine, remember? Do you ever want to be on that stage again?\"\n\nThe emotions that fluttered over her face, like shadows on a screen door, would have been comical if I had been in a laughing mood. She finally shook her head. \n\n\"Okay. Fine. An hour? What are we doing?\" \n\nI grinned. \n\n\"You are going to drive some people home, to...\" I hesitated. \"To here. I'll work out the details. When I call, bring your car around. You'll be driving.\" \n\n\"My car? Why not use yours?\" \n\nOther than the fact that I owned her car? I did not say that but the thought crossed my mind and I felt it to be unkind. Not charming. \"Because you are not on the insurance for my car and I need you to drive.\" Reasonable enough and mostly true. \n\nShe chewed that over and then nodded, like I needed her agreement. Admittedly, I did want it but getting it with reluctance was pointless to me. I needed that sexy acquiescence. \n\n\"Wear the pants, the blouse and the coat. Pin up your hair or at least make it a ponytail or something. Braid it if you like but hide it.\" \n\nShe nodded. \n\n\"I have a chauffeur's hat somewhere. Want me to wear that?\" Jeri sneered, trying to put me off. Good luck with that. \n\n\"Good. Wear the hat. I'll call you when I'm ready.\" \n\nI left her in the bedroom. She seemed irate at my distraction, like she wanted to be the only star in the sky, but that would make her the moon. I chuckled on the way to Mrs. Angorra's house. She opened the door when I rang the bell. \n\n\"I want to see your garage.\" I said. \n\n\"Garage? My garage?\" \n\nI nodded. We walked out there. It had her little Toyota in it and nothing else. The development did the grounds and yards as part of the cost and expense of living there so there was none of the accoutrements of a normal house with a yard. It was four-car sized like the others. I nodded. I pointed to one of the doors. \"Do you have a control for that door, an opener I mean?\" \n\nShe did. She seemed mystified but we got the control and found it worked fine. \n\n\"I'm taking this. We'll be back later tonight.\"\n\n\"Tonight? We? Who's we?\"\n\n\"Twins.\" I said without elaboration. \"Oh, you have spare bedrooms, right?\" \n\nShe nodded. We went to look at them. The beds both had metal headboards, one with brass pipes and the other with a dark iron scrolling. Both were perfect. I checked under the bedspread and found they had no sheets. \"You have sheets for them?\"\n\nCassie nodded. \n\n\"Good. Make the bed. Beds. Both.\" I snapped my fingers. \"Handcuffs. We need handcuffs.\" I looked at Cassie and found her blushing furiously. \"You have handcuffs?\" I guessed.\n\nShe nodded. \"Three. Three pairs.\" She sputtered but then smiled. \"I'd hoped...\"\n\n\"You'll get your time. I promise. Tonight be sure you have them easily available.\"\n\n\"Twins?\" She repeated the word like it was foreign. \n\n\"We'll be here around ten or eleven so don't go to bed. We'll open the door and drive in. Don't be alarmed. You'll have guests for a while.\" \n\nI left her like that. I went right home, found a pair of cuffs with a long chain, a real pair without the release. I snapped my fingers and called Cassie to ask if her cuffs had releases. They did. We'd make do. Unless the blondes were well acquainted with cuffs, they wouldn't realize till later...I grinned. Suddenly I was eager to collect these blonde twins. \n\nI showered, shaved and did all the rest of the maintenance required. Before I dressed, I called Jeri to come pick me up. It was nearly seven. I was dressed and at the door at seven. She was there, sitting in the car, waiting. I knocked on the glass and she rolled down the window. Soft jazz came out with the smell of her perfume. \n\n\"Get out.\" I said. \n\nShe looked perturbed but then, carefully as though she were enduring a sprained something, she got out of the car. \n\n\"Turn around.\" She turned standing just at the open door. She placed her hands on the roof as though I were about to frisk her. It was something like that. I lifted the coat tail and saw the rift in her trousers. Her wondrous ass was tucked tight into the man's pants, they stretched over the curve of each ass cheek. I pushed gently on her shoulders and she bent forward. In the gloom I could barely see the white fissure in the pants. When I touched it she jerked and grunted. I was not happy. \n\n\"Come with me.\" I said, stepping back from her. She turned and stepped away from the Chrysler 300's door. She shut it and preceded me into the house. \n\nJennifer met us, like a house puppy eager to meet someone new and sniff their crotch. \n\n\"Scissors.\" I said to Jennifer and she danced up the stairs. \"Take off the coat.\"\n\n\"Why? What are you going to do?\" \n\n\"We don't have time to monkey around. Take off the fucking coat.\" I was feeling stressed so my voice came out a snarl. It was so out of character Jeri complied without further comment. I had realized under the shower that what I was contemplating was dangerous. Not in a life and limb sort of way but as a matter of strict legality. This was something Crowley might do. I'd had qualms, particularly considering that this put me in a potentially vulnerable position with respect to Mrs. Grayson. \n\nI remembered that she'd had an affair with my father. I had dismissed that somewhat but now it was time to consider it. I needed to believe that she was kindly disposed to me and not vengeful. I found I had to trust that Crowley would not mistake her intentions and had they been pernicious, would have deflected her from me rather than directing her to make use of Jennifer. This thought side by side with the knowledge, the sure knowledge that Crowley could make mistakes and could be blinded by pussy just like the rest of us left me on edge. \n\nJennifer appeared with a pair of thin hair shears. I took them from her and confronted Jeri. \"Take down her pants.\"\n\n\"Their torn!\" Jennifer whispered, as though Jeri might hear. \"Want me to fix them?\" \n\n\"Yes!\" Jeri growled.\n\n\"No.\" I growled equally loudly. I gestured at Jeri. \"Take them down.\" I said. Jeri lifted her hands, like she was being scanned at the airport. Her great breasts bulged inside the tight blouse. Shit, she wore a bra, too. Jennifer fussed with the belt and finally got the trousers open. They were tight on Jeri's female form in places that made them difficult to maneuver but finally she got them down the woman's legs, off her broad, full hips. Yes, she was wearing panties. \n\nI moved in to her side, my cock hardening. I wanted to grasp her by the tits and fuck her but we were rapidly running out of time. I realized I'd forgotten something. \n\n\"Jennifer, can you quick like a fox make a sign for me. It needs to read, Marla and Darla. Big enough to see and read at the airport?\" I was about to direct her to find the materials but she was off in a flash. She had a large white placard from my closet on the table and was writing furiously with magic markers in moments. Meanwhile, I inserted one arm of the scissors at the waist of Jeri's panties and cut down over the curve of her hip to the leg. I repeated the action on the other side and pulled the panties out from between her legs. She had a tuft of auburn hair at the top of her pussy but was nicely bare elsewhere. The little topknot attracted the eyes. \n\nWith her hands still over her head, I unbuttoned the blouse. She stood strangely still and more strangely silent. I opened the front of the blouse down to just below the bra. I cut the straps at each cup that ran over her shoulders and then clipped the stout wire between them. I cut away one cup and pulled the rest of it around her torso and off her body. Jeri was shivering when I finished. \n\n\"They'll, everyone will be able to see my tits.\" She mumbled. \n\n\"Not if you keep the coat on.\" The blouse was translucent. Even with the coat on, anyone with a mind to look would see she had no bra on. The bulge of her breasts would press the coat open. I buttoned her blouse up to just past the crest of her breasts, leaving cleavage aplenty. \"Pull up your pants, now. We have to go.\" It was quarter after. \n\nJennifer was finished with the sign. Across the top in smaller letters it said \"Attention\" with \"Marla and Darla\" arranged below with much larger lettering. Her hand was excellent and precise. Much better than anything I would have done. I write like an epileptic orangutan. \n\n\"Jennifer, take a set of my clothes for me over to Mrs. Angorra's house will you. Pick something nice. I am going to need them later.\" She nodded understanding but not understanding.\n\nWe bustled out to the car. The drive was long and silent. The jazz from the radio soothed us but neither of us spoke. Jeri continually shifted in her seat, which I presumed related to the gap in the trousers that let the cool leather touch ass and pussy from time to time. \n\nWe arrived at the airport early but traffic getting in was congested and it took us twenty minutes to get inside the parking area. I directed her to the highest covered part and parked far away from the pedestrian entrances. Still the place was clogged with vehicles. We parked. I got out and opened the back door. \n\n\"Come here. When you get here with the girls, you must fasten them both using these cuffs. I have looped it under the frame of the front passenger seat. Hook one wrist of each girl to each cuff so they are both secure. Then see to their luggage. Leave the back passenger side door open. Close it and walk around the front of the car. Understood?\" \n\nJeri regarded me like I was a steward picking up trash on an airplane that was about to crash but nodded. Her silence fascinated me but I did not ask after it. \n\nI patted her on the rump and we hurried to meet the flight. She had to pee and that delayed us. When she emerged, she had pinned up her hair and put on the billed chauffeur's hat. She looked nearly official except for the huge tits and the diaphanous blouse that showed them to anyone caring to look. She kept one hand on one lapel of the coat till she figured out she could button it and at least hide her nipples from view. Then she walked with her shoulders back as though she were proud of her chest and proud to show it off. \n\nWhen I saw that the flight was not yet landed, I pulled her to the side. \n\n\"Jeri, Mrs. Lewis, I am not here. You meet the girls, use the sign. Take them to get their luggage, if they have any and then go to the car. Understood.\" \n\n\"Then you want me to handcuff them in the back seat. What do I tell them?\"\n\n\"I don't think they will argue but if they do, don't answer but make sure they are handcuffed. Understood?\"\n\n\"Not a bit. But,\" she shrugged, her huge tits roiling with the motion, aggressively demanding my attention. \"I'll do like you say. I've gone this far, might as well finish it out.\" \n\nI regarded her and felt how abrupt I had been since I left Rae Dawn. The woman made me nervous. I wanted her but something about her behavior was escaping me and that thought dogged and bothered me. \n\n\"Jeri, tomorrow or the next day, you and I will go enlist Bethlynn Brazil in our little endeavor. Be thinking about what you would like from her, if anything. She, she seems quite willing to do as she is told, if you tell her.\" I could see the surprise on Jeri's face but I left her with that thought. \n\nI had not given her lots of instructions, just enough to get to where I wanted to be with the twins. I had donned black pants and a long sleeved, tight, pullover to which I would add a pair of skin tight gloves. I had the balaclava in my coat. I was ready. We waited. The flight information notified the arrival of their flight and ten minutes later two identical blond women appeared on the concourse. They saw Jeri, and the sign with their names on it and went right to her. They chatted and then went to get their luggage. I trailed behind them. When they had retrieved the two large cases that I surmised they would bring, they sought out a cart and were looking for the elevator up to the parking level. I sprinted up stairs and was in place when they appeared. \n\nI stood in an India ink dark shadow, watching them clatter down the way to the car. Jeri seemed stoic, perhaps even tense if you knew her, like she was about to go on stage to sing a song she did not know or that she feared was beyond her considerable rich range. \n\nShe rested the cart against her car and opened the passenger side back door. The two girls crawled in and then Jeri leaned in and I heard the rattle and clink of the cuffs. The chattering ratchet as she opened it and the final two clicks as she fixed them onto the women's wrists. \n\nTrue to my expectations, they received the restraint without resistance, which clearly confused Jeri. She looked around as if scanning for me. We parked facing away from traffic and a dull shaft of light from an outer flood light fell across the hood of her Chrysler. She loaded the two large cases into the trunk and then pushed the cart against the wall near the back of the car. She walked around the back and shut the door to the back seat. She waited till the interior light went off and then walked slowly around the front of the car, as though heading for the driver's door. \n\nI had moved when she shut the trunk. I crouched between two cars, the shadowed gloom blended with me. I had removed the coat and put on the balaclava. I was unrecognizable. Jeri took the stage directions and stopped in front of the car. That allowed me to get one arm around her waist and the other over her mouth in one smooth motion. She was strong but I was stronger. She struggled instinctively. I got one arm tangled around hers and bent it behind her and forced her forward. She grunted and thrashed but I still had a hand over her mouth. \n\n\"Jeri.\" I said in s calm but strained voice. \"I am going to fuck you. I hope you can enjoy it while the twins watch us.\" \n\nShe quit fighting me. Resignation seemed to wash over her and she lay down on the hood of the car, still slighty warm. I flipped up the back of the suit coat and found the gap in the pants. I pulled on it and felt it rip further. I felt the flesh of her ass. She jerked when I fingered her, searching between the taut fabric of the stretch pants and her full ass. I found the crack of her ass and quested down. When the tip of my gloves touched her pussy, she flinched, her body bucking under me. I pulled the belt loose from my pants and secured her elbows, pulling them back so she couldn't fight with her hands. She lay balanced on pubic bone and tits. Her hat had been dislodged and lay on its flat top beside us. Her hair was slowly coming unpinned, turning into an unruly mass on her head. \n\nI pulled off my gloves and lay them on the shelf of the bumper below us. I fingered her again and this time she crooned, her head moved side to side but she didn't scream. I felt the car sway with a motion that did not originate with me or Jeri. I unbuttoned my pants, pulling them down to my knees and released my cock. I fingered her again and she moaned. I felt the plush fullness of her ass. I cupped it with one hand, the other holding the belt between her bound elbows. She struggled then but made no sound. \n\nI continued fingering her till I contacted her pussy again. She went completely still. I felt her rock onto one foot and wondered if she'd really try to kick me. She didn't. She merely widened her stance, opening herself to me. My finger twiddled her for a moment and longer, long enough to feel the first trickle of fluid oozing out of her bent body. I pressed toward it, following it deep into her where I found her reservoir, full and overflowing. When I penetrated her, her body lurched and a gout of liquid greeted me. Jeri Lewis moaned. Evidence of her arousal wet my finger. ",
        "My cock was Arctic hard by now but hot and not cold as Arctic ice. I wiggled my finger inside the big woman and she wiggled with it, her whole body seeming to echo the little motion, amplifying it and duplicating it. \n\n\"Oh Christ and crayons!\" Jeri muttered. \"Oh my god! They're, they're watching!\" \n\nI agreed but did not speak. I withdrew my finger from her body and she shuddered. I lost her pussy and had to find it again, entering her again to be sure I had the way defined. I positioned my cock and thrust into her. The tip encountered her lubrication, sliding between her full ass cheeks, pouched out behind her. I crouched a little, pushed further and felt the kissing heat of her pussy. I followed it. I felt her cant her ass to receive me, her body shook. My cock head slid into the heat of her pussy and then past. I pulled back. She lifted her ass, arching her back to straighten my approach into her heated interior. I thrust forward and felt her pussy catch and clutch me. Her body writhed and as if by magic, she directed me with sheer will and lust alone into her body. She was oiled and ready. I slipped deep into her.\n\nJeri squealed, clearly not wanting to gain any attention. Her head thumped on the hood of the car, making a metallic sound. She shook and bucked as I pushed against her resistance. She struggled and then arched her back. It was like a trap door opened. I dropped deep into her. My cock penetrated her at last. Finally, I was inside Jeri Lewis. \n\nThe pleasure erupted around me. Her body held me close and tight. I felt her hips bunch and tense, then she arched her back again and I seemed to go deeper into her. Rooted inside her, I hesitated, luxuriating in the wealth of sensations flooding my senses. My cock seemed to feel each of the folds of her pussy and each one moved and flexed, tightening down on my hard cock. \n\n\"Oh Christ, fuck me, Jah, jah, George. Fuck me, George!\" She grunted. \n\nI had been pulling back on the belt around her elbows. I released it now and she drooped forward, fully laying on the car. The buttons on the breast-stretched blouse tinked on the metal, sounding loud. Jeri was holding her breath. I grasped her by the hips and ground into her, thrusting into her with little jerks of my own ass. I then pulled back and thrust long and hard into her, penetrating her once more. She bucked and her hips fucked back at me. She cried out, a wordless warble, like she was hitting a certain note but in a foreign language. The collision blinded me or at least closed my eyes. Suddenly I wanted more. I had only intended to fuck her from behind but now I wanted to see and touch her tits. \n\nI withdrew from her pussy. I pulled her upright and turned her around. Her eyes were glassy, her face a smear in the snarl of her unraveled hair. I tried to kiss her but her head jerked to one side. I realized I hadn't kissed her yet. She lay back, bending her back. One leg lifted up and she rolled onto one hip. I grasped both legs and lifted, heaving her onto the hood of the car onto her back, her legs high around me but with her ass resting against my stomach. My cock bent against the bare small of her back. One leg looped up over my shoulder and she used it to lift her ass, feeling my cock with her butt cheek. She was trying to get it back inside her. I was leaned awkwardly forward. I tried to straighten to get my center of gravity back over my feet. I had to pull her further off the car. With both hands, I found the crevice in her pants and pulled them wide to the sound of tearing cloth. I fingered her pussy and she groaned. \n\nHer elbows were still pulled back but the belt around them loosened and her hands came free but she kept them in place. I lifted her ass and my cock touched her ass crack. She wiggled her ass and then dipped it down. I felt the kiss of her pussy, she made a silly little motion and tried to get me inside her. Her body shook. I pulled her a little further off the car and magically my cock encountered the gapping entrance to her body. I slid into her. \n\nJeri bucked and her head turned far to the left, pressing one cheek against the hood. Her body arched and then bucked again, slamming her pussy onto my cock. She grunted and then moaned around it. One leg hooked over my shoulder and the other crooked around the small of my back. Her legs were strong and she used them to leverage her motions. Her body jerked and bucked as she tried to duplicate the fuck motion without my help. She was fucking me. Her eyes were closed. The belt released her entirely and she reached up and grasped the ridge of the hood where it left the gap for the wipers at the base of the wind screen. \n\nI pulled back and slammed my cock into her. She groaned and her tits arched. The button on the coat popped and they appeared, coated with the white veil of her blouse. I reached past one of her trouser clad knees and ripped open the blouse. Buttons pinged around us, ticking off onto the concrete. Her tits came into view, towering cones of flesh topped by fiery red nipples. I cupped one with my free hand and pulled. She screamed then, a bitten sound that assaulted her teeth but did not get into the wider world so there was no echo. Overhead a plane roared over us, drowning us in its backwash. \n\nI massaged her breast. She twisted onto one hip, pressing that tit more firmly into my hand. Her hips jumped at me. I put my other hand under her ass, still partly covered by the split trousers. I gripped her ass hard and used it to fuck her. I pounded into her, thrusting hard and fast. My cock plunged in and out of her body. She grunted and tried to match the motion but failed. She finally held still and let me do the work, thrusting deep into her over and over again. The walls of her pussy constricted and she did scream then, her whole body quaking with orgasm. She thrashed her hands stretched over her head holding her on the hood while her hips humped back at me. Her legs constricted, pulling at me with her heels. The need exploded in her one last time. Her head wagged back and forth a dozen or so times and then she tensed. Just as her hips raised off the hood, my own orgasm arrived, a comet from outer space and slammed into us both. It was like a catalyst. Jeri's orgasm blossomed and reverberated in her.\n\nI pumped cum into her pulsing body. Her ass pulsed up and down thumping her back and shoulders onto the car hood like a drum beat. The primal sound drove me into her harder and faster, as though trying to duplicate her orgasm before my own ran out of power. I needn't have worried. Jeri's body arched and jerked as a new wave of ecstasy roared through her. She moaned around it and growled and shook while it possessed her. Her tits were free now, shaking with our motion. Her hair had become a matted mess, a tangled veil covering her face. I pumped cum into her until only her inner muscles responded. She lay panting and gasping on the hood of the car. She finally lifted her head, her slitted eyes peering through the mossy veil of her brown-orange hair, making her look sexy as hell.\n\n\"Fuck me any time you want, Mr. Gale.\" She hissed. \"Goddamn that was good!\" \n\nI pulled free of her grabbed my gloves, pulled up my pants, grabbed my belt and scuttled away into the darkness. I turned to put myself back together and watched Jeri return from her oasis of pleasure. She lay back for a moment but her legs dangled and she finally slid down the hood and had to stand. She did stand, her tits wobbling freely now, then covered a bit by the lapels of the coat. I was dressed and realized I had not told her what to do next. I strode back into the light. She noticed me and flinched visibly. I took her by the shoulders and kissed her. The kiss could have started something again and I was sorely tempted. I bent and sucked on a breast and she groaned and shuddered. \n\nI released, it leaving her unattended on the other side. I whispered in her ear. \"Take them to Mrs. Angorra's house. The garage opener is between the seats. I'll meet you there.\" \n\nShe nodded slightly. I kissed her again and this time her arms went around me and she kissed me back with vicious pleasure. I felt her succumb to me and I wished to luxuriate in it but I resisted. I stepped away. \n\nI caught a cab, hoping she'd take her time and not arrive before I did. I was fortunate and found Cassie awake and alert but alone. \n\nShe answered the door. I smelled like sex, smeared as I was with Jeri's cum and perfume. I dashed through a shower. Cassie stood by and watched me strip and shower, making no move to interfere. I had a set of clothes to change into and did. \n\nI was just finished dressing when I heard the door of the garage go up. I knew I needed to hurry. I called Victoria. She answered on the first ring. \n\n\"I have them. How much?\" I said quickly. \n\n\"Abrupt.\" She said, a tiny bit of peevishness in her voice. \"I think they were charging two-hundred an hour.\" \n\n\"Okay. You told them you sold them? How much?\" \n\n\"They didn't ask and I didn't volunteer.\" \n\n\"I am going to change the story. This is a resort and you told us that they wanted a new experience. I am going to address things directly with them and if they want to stay, fine. Otherwise I am sending them back on the same flight and they'll be on their own. Is that fair?\"\n\n\"Any help would be good. I am still trying to corral my idiot sister.\" \n\n\"Good luck with that. Gotta go.\" \n\nI sauntered out into the dirty garage light as the door went down. I went to the driver's side of the car and opened the front door. \"Come with me.\"\n\n\"Hey! What about us?\" A voice lanced out of the backseat. It made my teeth twitch. \n\nI led Jeri into the kitchen. \n\n\"Jesus rabbit they never shut up!\" She hissed. \"They bicker and fight and god, they fucking never shut up. I have a headache the size of a pumpkin and I would pay you to not let them near me.\" She grinned, \"At least together.\" \n\nI walked around Cassie's room looking for the right place. I found it near the fire place. A cast iron loop that was part of the original inset but was just a decoration but a strong one. If I needed it I had it. \n\n\"Go home, Jeri. Maybe tomorrow you can recruit Bethlynn for me. I'll call you if nothing interferes.\" She nodded and left. Her shredded clothing got a raised eyebrow from Cassie; her ass we clearly visible...and inviting. I regarded the professor. \"You work with this age of woman, can you deal with them or not?\"\n\nShe shrugged. \"Some of them I can take. I'll try but if its too much...I'll tell you. Fair enough?\"\n\nI nodded. \n\nI walked out to the garage jangling keys in my hands. I opened the back door of the car and found the blondes in question They did not speak at all but both looked up at me. They were so exactly alike I thought for sure I was seeing double but wasn't. It felt like an optical illusion. But it wasn't. I leaned over the one on my side and made a show out of unlocking the shackles from their wrists with the keys while utilizing the release. They both scooted out the opposite door and stood looking around.\n\n\"Where are we?\" One said. \n\n\"Which is Marla and which is Darla?\" \n\n\"Fuck you. We decided not to tell you that. Who are you?\" \n\n\"My name is Joshua Gale. Welcome to Holdingsfield.\"\n\n\"You can't keep us here. That's kidnapping. You'd be in big trouble...\"\n\nI interrupted. I pointed to a garage door. \"I was asked to pick you up but if you want to leave, there is a door. I can give you a number for a cab.\" \n\nThey looked at each other. \"We don't have any money.\" One said. \n\nI smiled. \"Blew it all on blow and hookers? That was fast. At two-hundred an hour, surely you two made pretty good money, even without any business sense.\" \n\nThey looked at each other again. \"No, well, yes, we blew it but we don't do drugs.\"\n\n\"We just like to talk that way.\" The other finished. \n\n\"Nice clean girls, then?\" \n\n\"We like to fuck.\" The other, the one on the right said. \n\nThe one on the left nodded. \n\n\"Why don't we go inside. We can discuss your situation and we'll go from there.\" I turned and left them to go to the garage door into the kitchen. \n\n\"What about our bags?\"\n\nI turned to look at them. \"I'll get them later if we agree that you are staying, otherwise I'll take you back to the airport and you can forget this happened.\"\n\n\"Your driver...\" the one on the left began but her sister poked her in the ribs with an elbow and they moved towards me. I went inside and in a couple moments, they appeared, closing the door behind them. \n\n\"Hungry? This is Cassiopeia Angorra. This is her house. Welcome to Holdingsfield.\" \n\nCassie moved around with her hand extended. \"Call me Cassie. Come in, sit down.\"\n\n\"Can I have a scotch?\" The one on the left asked. \n\n\"Nope. Too young.\" I returned. \"Come in, sit down.\" \n\n\"We're nineteen. What's the drinking age here? A hundred?\"\n\nI grinned but not kindly. \"Well, then, you're too blond. We don't let blondes drink, so not you two.\" \n\nOne actually stuck her tongue out at me. \n\n\"Sit if you like.\" I said\n\nThey crept into the living room and sat on the couch, snuggled closely together. \n\n\"What are we doing here?\" The one on the right said but I'd lost track if it was the same one on the right from before. They were perfectly identical in every way, at least to the extent that I could see them at the moment. I intended to do a closer inspection and see if they were indeed identical in every way. \n\n\"I beg your pardon. You weren't told?\" \n\n\"Told what?\" The one on the left said.\n\n\"Our step father told us he sold us, that we had to service you and do whatever you told us.\"\n\n\"We won't.\"\n\nI shook my head, finally seeing the situation for what it was. I thought I could work with this. \n\n\"I don't know about that. For all I know, he did but if he did, your Aunt Victoria paid back that money and paid me more besides.\"\n\n\"Why would she pay you? Are you a hooker?\" Right Blonde asked. \n\nLeft Blonde slapped at her. \"Men can't be hookers. They'd, they'd be...?\"\n\n\"Escorts.\" Cassie offered dryly, looking at me out of the corners of her eyes. \"Or are you thinking of gigolos?\"\n\n\"Right! That's it. Gigolo.\" Left Blond said. \n\nI smiled. \"Your Aunt insisted that she'd explain your stay here.\" I was formulating the pitch, my explanation but right blonde interrupted my train of thought. \n\n\"Your, your driver, she got raped, right on the hood of the car.\"\n\n\"I don't think he knew we were there. It was dark. He wore a mask and everything.\"\n\n\"I think she liked it.\" Right blonde said. \"She struggled but then seemed to, you know, give in and after that it was kissy kissy and fucky fucky.\" \n\n\"I was surprised she didn't leave with him.\" \n\nThe two women grinned looking at each other then at me. \n\n\"I am disappointed you had to watch that without understanding. Our little colony is designed for one thing. Your pleasure. Your aunt paid for you to be here and I am supposed to provide you whatever sexual pleasure you wish. If I can. If I cannot, then perhaps I can find someone who can.\" \n\nThe two blondes looked at each other and at me in a perfectly choreographed motion. Cassie was staring at me. \"What you witnessed was not exactly rape, it was sex, sex she enjoyed but for your benefit. I was the one who took her like that and yes, she did enjoy it, immensely.\" \n\n\"Why did you just fuck her on the car like that?\"\n\n\"Well, your aunt insisted that she thought you liked to watch, so I thought I'd try her out for you. That, that was the first time I have been inside her and so it was exciting for us all, both. If you don't like watching...\"\n\n\"Oh, no,\" Right Blonde said. \"We don't mind watching other people fucking so long as we get our chance.\"\n\n\"I always wanted to see my sister fucked by two men.\" Left blonde said. \n\nRight blonde looked at her sister like she was farting in a court hearing. \n\n\"You know, one in her ass. One in her pussy. Since you are a cock short I may need to think of something else for you to do to my sister.\" She looked at her sister and smirked. \n\nMy heart was thundering. \"I can get my hands on another willing cock, I am sure.\" I said, intentionally using that specific language. Right Blonde obliged me.\n\n\"What? Are you gay? Do you like men? Can we see you suck a cock?\"\n\nI shook my head. \"I do not. I am not and so far as I know, I only have women who wish to use their skills on other women. I leave the male-male activity to another division of the company.\"\n\nThe two girls looked at each other and shrugged together. It was disturbing to see them in such sync. \n\n\"I think I'd like to see my sister come with a cock in her mouth while a woman eats her.\" \n\n\"My goodness, Mr. Gale, where did you find these two?\" Cassie asked. \n\n\"Yeah, like her. Do you eat pussy?\" Right Blonde continued. \n\nCassie started to answer but I cut her off. \"I have plenty of women who will be happy to demonstrate their talents on you. Both.\" I looked from blonde to blonde. \"There is one stipulation, however.\"\n\n\"Stipulation?\" Left Blonde said immediately. \"What stipulation?\" \n\n\"We must shackle you in your beds. To prevent you from having sex with each other. Apparently your aunt is under the impression that you have, ah, been engaging in sex with each other and she insists we not allow that.\" \n\nThe two young women looked at each other and then at me, still in sync. \"You don't have to worry about that.\" Right Blonde said. \"We are not like that.\" \n\n\"Yes, I understand but your aunt was most insistent that we abide by those rules and frankly I am not willing to put our considerable retainer at risk. You will be quite comfortable I assure you. We may offer you some surprises if we think you will enjoy it.\" \n\nCassie rolled her eyes. \"You girls aren't buying this are you?\" \n\nI glared at her. \n\n\"Mrs. Angorra, you contradict me? Do you wish to explain what it is you are doing here and why you just allowed me bring these two young women into your house?\" \n\nSuddenly Casie saw the wisdom in my concept. She shook her head. \"No. I mean, I am not contradicting you. I just mean that they should help us understand what sexual pleasure they would enjoy so we can be more forward in presenting it to them.\" She smiled. \"Being shackled in bed is not so bad, if you can sleep on your back.\"\n\nThe girls did the look thing again. Left Blonde muttered. \"She doesn't have trouble sleeping, its the staying awake part that is so difficult.\" \n\n\"You too!\" Right Blonde insisted. \n\nI so wished they'd use their names so I could find a way to tell them apart. Oh well, I thought. Time enough for that later. \n\n\"Cassie go get the shackles. I don't know which is Marla and which is Darla but I am going to call you Right Blonde and you,\" I pointed at the other, \"Left Blonde till you own up to your names.\" \n\nThey thought that was hilarious. They hardly seemed like young women. I didn't have birth certificates yet so I determined to wait. I took the long chained shackle in one hand and pulled Right Blonde over the fireplace, sat her in the nearest easy chair and hooked her up, clamping the shackle on one arm and the other on the iron ring by the fire place. She stared at the chain but then sat back. \n\n\"Can I watch TV at least?\" She asked, her voice too cool for school. \n\nI ignored her. \n\nCassie returned from upstairs. \n\nI pointed at Left Blonde. \"Take her upstairs and have her shower. Wash her if you must but be sure she is clean. I'll get the bags.\"\n\n\"What are you doing with her?\" Left Blonde asked, staring at her sister chained to the fireplace.\n\n\"Do you two wish to stay here. Your stay has been financed fully and we'll be happy to figure out what you each like, when it comes to sex, I mean. Well, other things are important like food and the like but mainly, mainly we wish to provide you with a full sexual experience.\" \n\nThey stared at each other. Right Blonde, aka chained blonde nodded. \"We'll stay. We can't go anywhere else.\" ",
        "The other nodded too.\n\nI trusted neither. I lugged the baggage up stairs, one to one bedroom and one to the other. Each bag was marked with a name, one was Marla and the other was Darla, so I knew we had the right girls, which was which I had no idea and really didn't care. I heard the shower running. Cassie came into the room. \n\n\"What are we going to do with them?\"\n\nI gestured at the two sets of shackles. \"I recommend you hook them up. You can manage one but two might be too much. They could get away.\" \n\n\"You are scared of them getting away?\"\n\n\"I am afraid of losing track of them before their family can retrieve them, if they retrieve them.\" \n\n\"I see your conundrum.\" Cassie muttered. \n\n\"If you have trouble, call me.\"\n\n\"I will,\" she agreed and I went out and drove Jeri's car home. She'd forgotten it. I drove it to her house and handed her the keys. She did not speak but took them and opened the garage. When I left she was backing into her garage. I went home and went to bed. \n\nI slept like the dead. When I woke the next day I had copies of birth certificates in my email and I was reasonably sure I had what I had. I hated being that suspicious but one cannot be too careful. Jennifer had breakfast ready when I came out of the office after checking email and doing some other busy work. I ate and sat staring at my coffee. I decided I knew what to do. \n\nSharon called. We had not spoken in a while.\n\n\"Alan, what is happening?\" \n\n\"Ever heard of Mrs. Victoria Grayson?\" \n\nSilence. A pause, Sharon did not even breathe. Finally I heard her sigh. \"Yes. I know her, of her. We have not met.\" \n\nI waited. Sharon did not continue. \n\n\"Did you know that our father had an affair with her?\" I asked, finally. \n\n\"Yes, Alan, I did. How did you find out?\"\n\nI considered my next statement but decided to put my sister on notice, right from the beginning. \"I want her. I am going to have her, if I can.\" I stated my objective, my new objective, my additional objective clearly. \n\n\"I see. Will this compromise our little endeavor?\" \n\n\"I understand from the dailies that you have been doing better.\"\n\n\"Is that condescension, little brother?\" \n\n\"It is a fact. I think you are gaining the trust of our father's counselors, his confidantes and mine. They are adjusting.\" I hesitated but did not allow her time to interject another thought. \"I want to stay here for a while.\"\n\n\"You don't seem to be taking my revenge very seriously.\" \n\n\"Do you think,\" I stopped. \"I want to sell them.\" I began and talked about the La Touche. Then I told her what I was really thinking. \"I want to make them into a colony. I place where a man can come and spend time and see if one of the women here meets his approval. He can have them if he can seduce them or persuade them. They'll, they'll owe their bodies to me but they can take whomever else they wish to their beds.\"\n\nSharon cleared her throat. \"Sounds like fun, not revenge.\"\n\n\"Sister, these women, I like them, generally. I mean, you knew I wasn't really that guy, the guy who would humiliate a woman or subjugate her if she was unwilling, right?\" \n\n\"Alan, I never believed you'd get this far, truth be told. Of course, I never expected you to drop the family business in my lap, either. I am still trying to catch my breath.\"\n\n\"I want, I want something. I want an American Harem. I place to come where I have a whole variety of different women, women I can offer to my compatriots or sell or rent as I wish. But they will be here willingly.\"\n\n\"What do you think they will do between fucks?\" \n\nMy sister did not have my delicacy. \n\n\"What did they do before this real estate disaster caught up with them?\" \n\n\"A point. I think they are getting laid far more with you in the neighborhood. And laid well, from what I can gather from Crowley. Well, I have to get going.\"\n\n\"Wait. Sharon, if I just put the whole lot of them on a leash, I mean metaphorically, well sort of metaphorically anyway, what would you think about that?\" \n\n\"You are a little young to retire little brother. I think you are thinking with your dick.\" \n\n\"You are taking care of business, isn't it about time I do a little penile meditation?\" \n\n\"Also a point. Little brother, you do what you can do and I'll do what I can to make it work for you. I mean, if you want a Harem and don't get crosswise with kidnapping laws, I guess that is fine with me.\"\n\n\"What about Mrs. Grayson?\" \n\n\"What about Mrs. Grayson?\"\n\nI hesitated, finally confronting the dotted Oedipal lines I wanted to cross in the worst way. \n\n\"If I can manage to seduce her? If I can persuade her to, I don't know what, but will that be too weird?\" \n\n\"She was a college girl when Father seduced her, I am sure she remains a desirable woman.\" \n\n\"But father and son? Isn't that crossing over somehow?\" \n\nSharon laughed. \"Our parents were not the celibates you tend to think they were.\" \n\n\"I don't think they were celibates. Gosh, sis, I lost my virginity to one of the women that worked for us. Mother knew about it and gave her over to me on several occasions.\"\n\n\"That might be too much information, Alan. I do need to go. Have no fear, if you can fit the women of Holdingsfield into a Harem, then go on you. That may prove an expensive hobby. Supporting twenty American women.\" \n\nI grunted. \"I'm working on creating a self-supporting Harem but maybe that is just silly.\"\n\n\"If anyone can do it, my baby bro can. And Alan, I was scared when I left there to come home. I was scared that, well, my rejection of you and the parents had left you bitter. I am so happy that you embraced me. I missed having family. I did. Now, well, its good to feel like I have a home. Bye now, keep in touch.\" \n\nI sat in the office thinking about that conversation. After a few odd moments basking in my big sister's approval, blessing and acceptance, I turned my thought to this day. I knew what I had in mind, what I needed to do. Rae Dawn.\n\nI grinned. I wanted her too. The pleasure of having several different desires and their objects well within reach suffused me and I glowed with it. I felt incandescent. \n\nJennifer brought me a light breakfast on a tray. This gorgeous woman seemed thrilled to serve, to act the part of a maid and cook and take care of the house. She cleaned, she cooed over Internet design suggestions, all with her bright personality. I remembered her satisfaction being on the leash and asked her about it. \n\n\"Did you forget I have a collar all my own upstairs?\"\n\nI shook my head. \"I got the impression that was, well, private. Did you find it humiliating, collared in the pet products aisle?\" \n\n\"Humiliating? No. No, it, I don't know, Joshua, it seemed to focus people's attention on me, in a different way than with cleavage or a short skirt. I liked to dress to please the eyes of the men I like but this was different. People saw me and stared, they stared right at me and I felt their eyes like being naked all alone in a big cocktail party, no, that's not right. I mean it's like being dressed provocatively and moving through a crowd and feeling hands on me, patting and touching and caressing because when they look at me, what they see in an open invitation to arouse me, to use me to arouse them.\" She giggled a little and flounced away from the desk. \"I think I even like the idea of women touching me. I, that's new but I am getting used to the idea that men like seeing two women who are into each other. That turns me on, turning on the men, that is. When I feel that, even if I am just going through the motions with a woman, I get excited and it just goes from there.\" \n\nI nodded as she pulled the door closed. Very interesting, I thought. The idea of the Colony had taken root in my mind and I kept thinking. No reason why Le Foil et Le Touche could not work side by side with a Colony where women were available but not obligated, willing always but needing to be charmed and seduced...I liked that idea but at the moment, it seemed a far cry from reality. I shrugged. Making fantasy out of whole cloth attracted me, mine and theirs. I just didn't know if I could manage such a group of women. \n\nWhen my phone rang, I jumped. \"Alan?\" \n\n\"Joshua Gale, here.\" I responded to Mrs. Grayson's tinny voice. She sounded far away. \n\n\"Damn, sorry, yes I keep dialing the wrong number.\" She hung up. \n\nThat was weird. It put me in a mood, though. I wanted a woman. Despite the athletics of the past few days, I found myself completely aroused, even a little manic with the throbbing need. It felt so good! I had the perfect solution. \n\nI dialed Aurora. She answered immediately.\n\n\"My 'investor' is coming to town soon.\" She said immediately as though she knew it was me. \"Shall I discourage her or encourage her?\"\n\n\"Next week. What is today? Thursday. Give me a few days, week after next, I think.\"\n\n\"Fine, I'll put the bitch off for a couple more weeks. She wants to come and taste my bevy of beauties.\" Aurora laughed a throaty laugh that made her sound predatory. Hell, she was. \"What can I do for you, Mr. Gale? I hear you have been getting blow jobs out in the open.\" \n\nI refused to comment. \"I need Kiko. Is she at your house? I seem to have misplaced her number.\" \n\n\"I'll call her and send her over right away.\" \n\nThe contest seemed to have been dismissed, at least for the moment. I was a little confused by that but it seemed weird in the first place. \n\n\"Something you'd like her to wear?\" \n\n\"She should be, uh, accessible.\" \n\n\"Tongue or cock?\" \n\n\"Wouldn't that be the same thing?\" \n\n\"Oh, right.\" Aurora chortled. \"Tongue and cock accessible it is.\" \n\nKiko arrived an hour latter. She wore thigh boots of shiny, black vinyl that made her legs look like stilts. Her skirt was hardly more than a belt with pleats. Her blouse covered her breasts and nothing else, leaving her sexy, lank tummy bare to the world. Her long black hair fell like darkness down her back.\n\nI opened the door for her, waving Jennifer away. \n\n\"I am here, oh Master? How would like like your slave this morning?\" \n\n\"Cut it out.\" I said but found I liked the question. Shit. That might prove addictive. \n\n\"You need to lighten up a little, Josh, my boy.\" She was all saucy American girl in tone but she looked all demure Japanese. \"I have to confess, I find it thrilling to be here and I am wet as Venice. My grand canal is ready for a little Italian sausage.\" \n\nI was confused. I got the reference for sure but I was hardly Italian. I was Heinz 57 WASP, if anything. No matter. \"Jennifer, where is the collar and lead?\" I said over my shoulder. \n\nJennifer squeaked like I'd stepped on a squeeze toy and dashed upstairs. \n\nI got very hard. Kiko noticed and grinned, but with a wisp of uncertainty. I stared at her face till she lifted her eyes from my crotch. She shrugged and smiled a little. \n\n\"Collar?\" She whispered, suddenly not brash at all. \n\nI stepped back. \"Please come in. This will only take a minute.\" \n\nShe came into the house and closed the door. She turned and closed it carefully. Her hair draped down her back, covering her ass and sweeping along the tops of her thighs. I felt the arousal roaring in me like a beast had been released. \n\nJennifer clattered down the stairs. She held out the collar and chain we had purchased at the store the day before. When I didn't take it, she immediately fixed it around her neck and extended her hand once more with the lead only this time. I took it. I regarded Kiko. She watched me and then fixed her eyes on Jennifer. I took the lead and held it out to her. Her hand lifted and then dropped, lifted and then dropped three times before she finally took it from me. \n\nI moved behind Jennifer and lifted her black skirt. She had donned a sexy maid's outfit and wore a thong underneath, which I discovered to my delight. I felt like I was jumping out of my skin for some reason. I unbuckled my pants and dropped them. Jennifer popped her ass back, arching her back and bending forwards just so. I entered her. She bubbled with enthusiasm that matched the shimmering energy in me. Her body accepted me deeply. We shimmied together till her ass pressed against me, rising and bunching against me as I pushed into her boiling depths. She groaned as my penetration rooted deeply inside of her. \n\nI pulled free. I felt her shudder with the loss but she did not change her stance. I moved around her. \n\n\"Kiko, care for a taste of Jennifer?\" I had to shuffle because my pants were around my ankles. \n\nKiko stared at my dewy cock for a moment then looked up at me. I don't know what I expected to see but what I found in her eyes was a clearly request for an invitation, something more, more, more sensual than a simple instruction. She hungered for more words.\n\n\"Come, my dear, on your knees.\" I said softly. She moved so quickly I knew I was onto something. She got to her knees, keeping her back straight so her bolt of black hair did not flutter around her. She knelt too far away and had to knee walk closer. She did. Her hands found my bare thighs and the feel of her little hands on my skin made me flinch. I thought I was going to spurt right in her face. She leaned forward. I felt her hot breath on my cock, through the film of Jennifer coating me. Her tongue flicked out and I thought my head was going to explode. The brief contact of her tongue with my cock amazed me. I could not believe the astounding sensation coursing through me. \n\nThe tongue addressed me again. The sensation shot through me, spider-webbing just under my skin so that I felt like it was following the network of nerves in my body, leaving me breathless with anticipation. The flat of her tongue cradled the underside of my cock and pushed it up and back towards me. She moved it down the shaft and then up again. She slurped then, sucking the effluvia of the other woman off her own tongue. \n\n\"Oh goodness.\" She whispered. \"I can taste her.\" \n\n\"Clean me off, please.\" I said softly. \n\nShe did. Oh how she did. First with her tongue and then her lips, finally taking me into her mouth and deep into her throat. Her face pressed against my body. I felt her swallow around my cock in her throat and she pulled back, leaving my cock glistening. She looked up at me, her black hair jumbled over her shoulders. \n\nI stepped back and pulled up my pants. Kiko looked confused then got to her feet and turned around. She bent, assuming a similar stance that Jennifer had used just before I penetrated her. This was compliance of the best kind. I turned to Jennifer. \"Kiss her. Taste us.\" \n\nJennifer swept past me like a specter and turned the slighter, shorter woman around. Kiko seemed conscious of what was going to happen but remained nearly totally passive. She bent her head back to receive the kiss but otherwise did not move. Jennifer enveloped her and the two women kissed like lovers. Jennifer's hands moved over Kiko but Kiko remained completely still. \n\nI groaned. I pulled on Jennifer's shoulder. \"That's fine. Enough.\" \n\nJennifer stepped back and then flounced off to the kitchen, holding onto the chain of her own lead. I had been going to use it but had a better idea. I moved past the wavering Japanese woman to the door. \"Come with me.\" I muttered.\n\n\"Definitely. I definitely want to come with you!\" She returned, her voice husky with excitement. She seemed to absorb my state and amplified it, adding her own sensuous sensations to it. She trailed me by a couple steps and stopped at the entrance to the Sawyer's yard. She looked like I had forbidden her to cross the threshold at some former time and stood looking down at the sidewalk. I gestured to her to stay and she relaxed a little.\n\nI rang the Sawyer's doorbell. \n\nJohn answered. His face was drawn and haggard. \n\n\"What did you do to Eve? I, god, she's never been like this. Joshua, my god, I have never experienced her like this before. Last night, this morning, I feel inadequate. Thank god you're here, maybe you can...?\" \n\nI waved him away. \"Please, can you send her out.\" \n\nJohn nodded. \n\nI could see when his eyes found and registered Kiko, her vinyl boots glinting in the morning light. After a double-take and a slight hesitation, he walked back into the house. Moments later, Eve appeared. She wore a shift, diaphanous and sheer. Her body ghosted it, teasing the eyes with barely seen lines and shapes as she moved inside the flurry of yellow color. It almost matched her hair but didn't. \n\n\"What do you want?\" She demanded but her voice broke two syllables in and I saw the flicker in her eyes. It was just a glimmer and I felt sure I had the right approach. \n\n\"I want your collar, for Kiko here.\" I said softly and turned half-way and gestured with my head at Kiko behind me. \n\nEve's eyes shifted past me then returned, yoyoing back to me and stopping. \"No. No, its mine. You gave it to me.\" Her eyes flashed but it wasn't defiance or anger. \"I mean, you bought it for me. It's mine. Not hers.\" Her voice warbled between us. Her former defiance has faded but she sounded sure and strong. \n\nI shrugged nonchalantly, barely disguising my glee. This was what I anticipated.\n\n\"Very well.\" I said and turned away from her. She seemed confused, uncertain. I left her and walked past Kiko back to my house and to the car. Kiko trailed me, barely keeping up with me and clearly confused. I told her to wait, went into the house, got my keys and went out into the garage and opened door. Kiko got in when I gestured to her. We drove in silence. Yes, we drove back to the same grocery store across town. \n\nThe kid from yesterday dropped a cabbage when he saw me enter the store. The green orb crunched on the floor and rolled out into the aisle. I walked over and picked it up and handed it to him. \n\n\"Oh no. Not again.\" The kid whispered. His eyes flicked to Kiko who stood just inside the door, all boots and belly and draped hair. \n\nI went to her and held out my hand. She put hers into mine and we walked together back to pet products. She gleeped when I stopped before the collars. They had the perfect black one, with little aluminum studs. It was broader than the others. I took it down.\n\nKiko stared at me while I fingered the leather collar. Her eyes grew more intense as I opened it up and flexed it. It was broader than the others and would hold her head upright, more than the others. I pulled my eyes off of it and waited till Kiko looked up at me, pulling her eyes from the collar in my hands. I arched and eyebrow. She blinked, she licked her lips and then closed her eyes with a quick, singular but unmistakable nod. \n\nKiko gathered her hair and pulled it back from her long, sexy neck. She trembled when I fastened the collar around her neck. She gasped when I clipped the silver lead to the collar. \n\n\"Come along.\" I said. \n\nShe shortened her stride to about a tenth and came behind me like a geisha, as though her ankles were constrained by a long traditional dress. They weren't. Instead, her boots squeaked against each other as she took the tiny steps. She walked so fast behind me, when I looked back, her hair danced about her like a swarm of bees. \n\nSince Jennifer pointed it out to me, I realized people were staring at us, utterly without inhibition. A couple college guys stood at the end of the longest line. I stepped up behind them. \n\n\"Here, dude, hold onto this will you? Don't let her get away.\" I extended a hand with the lead in my hand. \n\nThe guy looked like I was asking him to give my dick a nice squeeze or maybe I was asking him to hold my pet snake. He took it though. I heard him swear when I turned away to the bakery. I had ordered two eclairs again when I thought I should be more original but it was done. His buddy had put down their basket by the time I returned. He surrendered the lead without comment, staring at Kiko. \n\nA middle-aged man came over to me, wearing the livery of management. \"Sir, you can't keep doing this. It, it disrupts the store.\""
    ],
    "authorname": "Contrasting",
    "tags": [
        "collaring",
        "group sex",
        "girl on girl",
        "muff diving",
        "ownership",
        "harem",
        "cock sucking",
        "double teamed",
        "eve"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-fucking-investment-ch-16"
}