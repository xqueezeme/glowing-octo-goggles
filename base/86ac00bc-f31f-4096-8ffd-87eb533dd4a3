{
    "title": "Love Hurts",
    "pages": [
        "I'd planned on having this story out months ago but I've had some health problems which delayed the writing. To add to my woes, a few days after I started writing again my computer crashed and I had to wait a couple of weeks before it was replaced (fortunately I'd backed up the work to date). Anyway, back in the saddle again. \n\nIn my story 'Twilight Time', Niamh Cassidy told new girlfriend Vicki Clarke how she had been badly hurt once by a woman called Marti. 'Love Hurts' is Marti's story. In a way, it's both prequel and sequel to the Vicki/Niamh element of 'Twilight Time' but is somewhat darker than that story. It's not necessary to have read 'Twilight Time' but it may help you to know some of the characters. 'Love Hurts' is a long love story\u2014there is sex but it's secondary to the plot. I hope you enjoy it. \n\nCharacters in sex scenes are eighteen years old or over. All characters and most places are imaginary\u2014any resemblance to persons living or dead is coincidental. \n\nCopyright \u00a9 2016 to the author \n\n* * * * * \n\n\"Love hurts, love scars / Love wounds, and mars...\" \n\nThe Everly Brothers 1961 \n\nNow \n\nHave you ever hurt anyone so badly that you've torn yourself apart at the same time? \n\nI have. \n\nHer name was Niamh Cassidy and she was young and she was beautiful and I loved her and then I crushed her. And I did a pretty good job on myself while I was at it. \n\nAnd now, five years or so after that bitter and shameful act, I was back in my home city, on my way to see a solicitor who supposedly had important business to discuss with me. Nearing his office, I glanced at my watch and saw that I had a good forty minutes before my appointment. Since I was last here, a new shopping mall had been built in the city centre and some way inside the entrance I could see a couple of coffee shops, not quite opposite each other, both with tables set out on the main concourse. I could kill time by having an espresso and people-watching. \n\nI was impressed. The mall appeared vast and there'd been no expense spared in its construction, what with its marbled floors and fluted columns and cleverly concealed lighting to simulate daylight. As far as I could see, all of the major stores were represented and it looked as if some of the smaller units had been rented to independent traders, particularly those on an ample mezzanine floor. In addition to the coffee shops there was a good selection of food outlets and I suppose those so inclined could have a full day's outing without sampling fresh air. On reflection, I decided it wouldn't do for me long term, accustomed as I now was to open spaces and wind and rain in my hair. \n\nI idly scanned my fellow customers in both coffee shops and then I think I did a double-take. A young woman, nursing a baby, who was sitting at a table outside the other place, had caught my attention. Her back was largely turned towards me but surely there couldn't be too many women with such a cascade of flame-red hair. If it was who I thought it was... \n\nI drained my espresso, stood and walked over. As I neared I could see over her shoulder that the pretty infant had a thick mass of identically-coloured hair. Big blue eyes gazed up at me and the baby chuckled as it waved its arms. \n\n\"Niamh...?\" \n\nThe young woman turned with a ready smile which faded instantly when she saw me. She gave me a brief nod of acknowledgement. \"Marti.\" There was no welcome in her voice but then I hadn't expected any. \n\n\"Niamh, I...\" Suddenly I was having trouble thinking what to say. \"Niamh, I... I know it's been a long time but I owe you an apology and an explanation...\" \n\n\"You owe me nothing, Marti.\" Her lovely sapphire eyes were cold. \n\n\"Please, Niamh, if you'd just give me a few minutes...\" \n\nShe made a dismissive gesture. \"You'd better go, Marti. My wife'll be here with our drinks any moment. Just go, please.\" \n\nI suppose I deserved it. I turned away. As I did so, from the corner of my eye I had an impression of another woman approaching the table and a voice said: \"Who was that, sweetheart?\" \n\n\"Just someone I used to know,\" I heard Niamh reply, \"Nobody worth bothering with.\" \n\nChrist, but that hurt. I guessed I was meant to hear, and I know that from Niamh's viewpoint it was fully justified, but that didn't stop it hurting... \n\nThen \n\n...I met Niamh in a club called Guys &amp; Dolls, known locally as Gays &amp; Dolls for that's what it was then, a club mainly for gay men and lesbians although some straight people did frequent the place because it had a reputation for great food and drink and music. \n\nIt might seem odd that straight people would come to a gay club but most of those who did were slightly older types who came in couples or quartets and they were made welcome because they knew how to behave. The door staff were always reasonable and prepared to give newcomers the benefit of the doubt. But every once in a while a troublemaker or two got in, generally male, age group eighteen to thirty, often drunk. The ones like this seemed to think that Guys &amp; Dolls being a gay club they'd be able to throw their weight round with impunity. Goes to show how stupid most of them were. \n\nThe evening I met Niamh, I hadn't gone in looking to connect. I went to sit at the bar and one of the barmaids said: \"Hi, Marti, usual?\" She gave me a glass of sparkling mineral water with ice and a slice of lime. I don't drink alcohol\u2014I've seen what it can do to people with the wrong genetic makeup and it's possible I've got those aberrant genes: I don't want to find out the hard way. A couple of seats along from me was a young woman wearing a white shirt and a blue denim skirt, perhaps a few years younger than me, say twenty-odd, nursing a glass of white wine. She seemed to be by herself too. Even in the club's dim light I could see that she was lovely, with a flowing mass of vibrant red hair, rather like that of actress Julianne Moore. We smiled and nodded and said \"Hello!\" but that was about it. And then a few minutes later the evening's troublemaker turned up. \n\nHe came and sat on the stool between us, back to me and facing the girl. \"What're you drinking, love? I'll buy you one.\" \n\n\"No thanks,\" she said, \"I've got a drink already.\" \n\n\"Come on, girlie, you look a bit lonely there and you could do with some company, especially in a place like this with all these queers around.\" \n\n\"No thank you,\" she repeated, \"I'm fine as I am.\" \n\nThe man reached out to cover one of her hands with his. \"Don't be like that, Red. I'm trying to be friendly here.\" He was starting to sound aggressive. \n\nThe redhead snatched her hand away. \"Please, leave me alone.\" \n\nI decided to butt in. \"The young lady doesn't want your company, so why don't you just leave her be and go?\" \n\nHe turned towards me. He was older than the usual run of troublemakers, probably mid-forties, with a rough face, nose and cheeks showing the network of tiny broken veins you often see in excessive drinkers. At some point, it seemed, his nose had been in hard collision with a fist or blunt instrument for it was bent and off-kilter and gave his face a brutish appearance. I think he was already well-gone in drink although holding up the way so many alcoholics do. \"Why don't you fuck off and mind your own business, dyke?\" Turning back to the girl he said: \"Stop playing hard to get and have a drink with a real man.\" \n\nI was pretty sure that I could handle this one by myself but I liked Guys &amp; Dolls and didn't want to be barred for causing trouble so I caught the eye of a bouncer and two of them strolled over to the bar. They were an oddly-assorted pair, these bouncers. Malcolm was about six-foot-seven of solid muscle and was one of the nicest, most polite men I'd ever met. He was even polite when throwing people out. Usually Malcolm's bulk was enough to quell any trouble but if not he had Irene to back him up. In contrast to Malcolm, Irene was little more than five-one or so and taciturn but her glower was sufficient to cow most people. \n\n\"Something wrong, Marti?\" \n\n\"Man here's annoying the young lady\u2014won't take no for an answer.\" \n\n\"That right, miss?\" \n\n\"Yes,\" the girl said. \n\nMalcolm put a friendly hand on the other man's shoulder. \"Right, sir, I think it's about time you left.\" \n\nBelligerent, the drunk snarled: \"And who's going to put me out?\" \n\nMalcolm's face and tone remained friendly. \"Well, you have a choice now, sir. If I escort you from the club, likely you'll walk out. If it's left to Irene here, you'll probably go out on a stretcher.\" \n\nThe man stared at Irene in disbelief. \"What's she\u2014some kind of karate expert?\" \n\n\"No sir, she's a krav maga expert. Makes karate look like a children's game. Believe me, you don't want to find out. So, sir, what's it to be? Walk or stretcher?\" \n\nThe man turned to me. \"I'll remember your face, bitch.\" With bad grace he slouched off towards the entrance followed by Malcolm and Irene. \n\nThe redhead moved to the stool next to me. \"Thanks for helping. Is that right, what the big man said about that little woman?\" \n\n\"Irene?\" I nodded. \"A couple of weeks back I saw her deck three young hooligans who thought it would be fun to come in and harass the gays. All Malcolm had to do was drag the bodies out and dump them on the pavement.\" \n\n\"I'll try not to argue with her, then.\" The redhead gave me a huge smile which made my pussy tingle and held out a hand. \"My name's Niamh, Niamh Cassidy.\" \n\nHer hand was so soft and warm as I took it that kitty pulsed again. \"Hi, Niamh, I'm Marti Howard. Your first time here?\" She nodded so I added: \"You know, Niamh, it might not have been a good idea to come in here by yourself.\" \n\n\"Well, I thought being a gay club it would be safe enough. Anyway, you're in here by yourself.\" \n\n\"True.\" I didn't point out that I was street-wise and probably a damned sight tougher than Niamh. \"Whatever, we're not alone now, that's if you'd like to spend the evening with me.\" \n\nShe nodded, giving me another of those smiles which really lit the place up. I spotted an empty booth so we got fresh drinks and moved to it. For me, it made a nice change from the lone-wolf life I mostly led. In fact, I felt comforted having her sit close beside me. I didn't let out too much about myself that first time with Niamh but she didn't seem to notice, chatting away happily about herself when I prompted her with easy questions. I learned that she was a trainee radiographer at the City Hospital where her parents also worked, one a surgeon, the other a pharmacist. She still lived at home, a pleasant house in Langton Heights, one of the city's nicer areas. Made my family background and my job as a hotel receptionist seem very low on the scale of achievement. I'm not much of a dancer but Niamh managed to get me up on the floor several times. I enjoyed the slow dances most because Niamh's arms were around my neck and her lissom body pressed close to mine. \n\nAs we finished one dance, Niamh glanced at her watch. \"Oh hell! I've missed the last bus.\" \n\n\"No problem,\" I told her, \"There's a taxi-rank not far from here. I'll walk you there.\" \n\nAs we left, Malcolm bade us goodnight politely while Irene just scowled which was more or less her default expression. Once we got away from the club, the streets were pretty much deserted. We were only a short distance from the taxi-rank when a man came staggering out of an alleyway, pulling up his trousers zip so I guessed he'd been having a pee. He stepped into a puddle of light from a street-lamp and I saw that it was the drunk from Guys &amp; Dolls. He spotted us at the same time and a nasty grin made him even more ugly. \n\n\"Well, well, must be my lucky night. Now you two get what's coming to you.\" \n\n\"What's that?\" I said. Keep him talking then make him angry, might make him careless. \n\n\"First I'm going to beat the shit out of you, you nosy bitch, and then I'm going to fuck Red's brains out. Show her what it's like to have a real man instead of a dildo-dyke.\" \n\nNiamh clutched at my arm. \"Let's run!\" \n\n\"No\u2014go and stand by the wall there,\" I whispered to Niamh, \"It'll be all right.\" Turning back to the drunk I said: \"Okay.\" \n\nHe let out a puzzled: \"Huh?\" It was obvious he'd expected me to be running scared, half-way down the next street by now. \n\n\"I said okay, big man. Come on and beat the shit out of me. Should be easy\u2014I'm only a woman. Or are you all wind and piss, you wanker? Maybe your courage is as tiny as your cock.\" \n\nOur assailant bellowed with rage and rushed at me, big fists clenched, just the way I wanted him to. My kick took him right between the legs. His tough luck I was wearing Doc Marten safety boots. Eyes bulging and mouth widening in soundless agony, he collapsed to the ground in a foetal position, clutching at mashed genitals. After a few seconds he did begin to make a noise, a sort of high-pitched Eeeeee! sound. \n\n\"I don't think he'll be up to raping anyone for a long time,\" I said. \n\nNiamh clutched my arm and looked at me in awe. \"Where did you learn to do that?\" \n\n\"I grew up in a rough neighbourhood,\" I told her, \"You know the Balmain Estate?\" \n\n\"I've heard of it,\" she said, \"Never been there, though.\" \n\n\"Good. Don't go there, it's not a nice area...\" \n\n* * * * * \n\n...the Balmain Estate was one of the new estates built in the early Sixties, tower blocks filled with basic flats described as social housing, put up to replace the old terraced streets of so-called slums, areas ruthless local authorities were clearing in cities all over the country. \n\nWith hindsight, the tower blocks were a disaster, destroying the great sense of community which had existed in the old streets. Back when they were built, people were told that the new blocks would solve all the old social problems. Big laugh! Not only did they not solve all the old problems, they created a whole flock of new ones to go with them. Within a few years, they had become breeding grounds for teenage gangs, drug dealers, every kind of low-life. It got so the decent residents, if they couldn't get away, would barricade themselves in their flats at night while the predators roamed. And over the years the jerry-built blocks slowly but surely became damp and crumbling ruins. \n\nOne thing had been evident from the outset: the architects who designed and won prizes for these eyesores never had to live in them. \n\nSo, these were the kind of dismal surroundings I grew up in. We lived in a flat, me, my parents and my three elder brothers, Billy, Frank and Mickey. My parents were drunks. I suppose you could call them functioning alcoholics in that both managed to hold down jobs, Dad as a builder's labourer and Mum as a cleaner. As soon as my brothers were old enough, they started running with the gangs. \n\nI was about ten or eleven when I became a target for a group of older boys\u2014no particular reason, I don't think, I just happened to be around and vulnerable. I tried to avoid them but they always found me. They didn't do anything really harmful, not to leave bruises or marks on me. They'd just push me around until they made me cry. I tried hard not to weep but sooner or later they'd manage to make the tears spurt then run, laughing like they were the funniest bunch of kids alive. This bullying went on until the day a guardian angel came along to end it. \n\nAs usual, they had me pinned against a wall, prodding, poking, pushing me from one to another, sniggering as the tears started, when a pair of hands seemed to come from nowhere and grab two of the ringleaders by the scruffs of their necks. The others took one look at my rescuer and legged it. The man did no more than speak to the boys but their faces paled. His voice was low, soft almost, and yet quietly threatening. \n\n\"Well, well, ain't you a tough bunch? What, six or seven of you pushing one small girl around? I'll bet you do a lot of bragging to each other when you make her cry. Now, do you tossers know who I am?\" \n\nOne of them replied, a frightened mumble. \"Yes, you're Nick Jessop...\" \n\n\"Then you'll know I mean what I say. You tell your mates that if I see any of you picking on this girl again, or any other younger kids come to that, you'll get such a kicking you'll walk bow-legged for the rest of your lives. Now piss off!\" He thrust them stumbling away. \n\nThe man turned and crouched down before me. His ruddy face was handsome if somewhat hard and he wore a beautifully-made suit, a rarity on the estate. \"You okay, kid?\" He took a gleaming white handkerchief from his pocket\u2014another rarity\u2014and wiped tears from my grubby face. \"What's your name, kid?\" \n\nI remembered what the boy had called him. \"Marti, Mr Jessop.\" \n\n\"You can call me Nick if you like.\" \n\n\"Yes, Mr Jessop...\" \n\nHe laughed, a friendly sound. \"You know something, petal, you don't have to put up with crap from toe-rags like that lot.\" He looked at me as if weighing me up then added: \"If you'd like, Marti, I could teach you to fight so's you needn't worry about bullies any more. How about it?\" \n\nI didn't need to think twice. \"Yes please, Mr Jessop.\" \n\n\"Nick.\" \n\n\"Yes, Mr Jessop...\" \n\nIf I'd been older and more cynical I might have suspicions about someone like Nick Jessop taking an interest in me but I would have been wrong. There was no ulterior motive, he simply took me under his wing and taught me to fight. I guess he had some kind of sense of justice. He wasn't a very big man, perhaps five-seven, five-eight, but he exuded self-confidence and menace in equal quantities and some of that gradually rubbed off on me. \n\nNick Jessop may have been my guardian angel but he was an angel with tarnished wings. I found out later that he was one of the estate's acknowledged villains, said to be an enforcer for some local gangster or loan-shark. People on the estate knew that he wasn't a good man to cross. In Nick Jessop's world people didn't fight clean\u2014I learned to fight very dirty indeed. Nick disappeared several years later and one rumour had it that he'd jumped bail for a serious offence and gone to ground somewhere in Spain on what the Press liked to call the Costa del Crime. Others held that he knew too much about certain people and was buried in the foundations of a new supermarket. Whatever, by that time kids on the estate knew that you didn't mess with Marti Howard although I worked hard at staying clear of trouble. \n\nA number of odd but disconnected things happened in my life when I was fourteen years old. \n\nFirstly my Dad died, falling from a roof he was working on. I didn't feel anything in particular, certainly not grief. And if that makes me sound callous, well, he'd certainly never shown me any affection. There was never any abusive behaviour, just total disinterest and lack of care\u2014it was almost as if I didn't exist. \n\nA court awarded Mum compensation because Dad's employers were not as safety-compliant as the law demanded. The compensation was lower than it might have been, though, because of what the judge called Dad's 'contributory negligence'\u2014he had a skinful of ale at the time he fell. Mum made it clear that we kids weren't going to see any of the money. Instead it helped keep her in cheap sherry until she died. But that came later. \n\nAround the time of my father's death, and to add to my troubles, I found myself struggling with my sexuality. Convention said I should have been getting interested in boys but more and more I found myself attracted to girls. I was masturbating frequently by then\u2014although having to do it very quietly at night\u2014and was always fantasising about lovely women caressing and kissing and nuzzling me while their fingers were hard at work in my quim. Homosexuality in any form wasn't the sort of thing you could talk about on the estate\u2014except as mockery or dirty jokes or out-and-out homophobia\u2014and I certainly couldn't discuss my feelings with my mother. As far as I was aware, I had no other female relatives I could have talked to\u2014both my parents seem to have cut themselves off from any family they might have had. ",
        "And finally, that was the year I first met Paul Chadwick. A couple of years older than me, Paul, tall and gangly with a mop of dirty blonde hair, was a friend of my brothers, or at least he ran in the same gangs as they did. I never could figure how or why he even came to the estate. His family was wealthy\u2014his father owned a nationwide chain of hardware stores\u2014and he had attended an expensive private school. I supposed at first that he just liked to walk on the wild side. Whatever, I didn't take to him. \n\nI think it's clear by now that, thanks to Nick Jessop, I don't scare easily but something about Paul Chadwick made me shiver. He was weird. The most disconcerting aspect about him was his dark eyes which never quite met those of whoever he was speaking to: they seemed blank, almost as if the inner person was dead. Later I began to suspect that he was seriously disturbed. \n\nAnd there was something else. The first time I met him he didn't even say hello, he simply stared at me with those scary eyes and said in a monotone: \"I'm going to marry you when we're grown up.\" God knows where that came from, I'm no oil painting even now and at that time I didn't even have a figure worth mentioning. \n\nEvery time I saw Paul thereafter, he'd say: \"Remember, I'm going to marry you one day.\" He didn't stalk me or anything like that, just made that promise in his flat, almost sinister, voice. \n\nSomehow, against all the odds in that environment, I managed to stay a fairly decent person and at sixteen I knew that I'd have to get out. I was old enough to leave school, which was a useless dump anyway, so one morning I simply jammed a few clothes in a holdall and walked away without looking back\u2014in effect, I estranged myself from my family. I doubt whether anyone noticed straight away I was missing and if they did, well, they wouldn't have cared. They sure as hell didn't report me to the police as a missing teen. I stayed a couple of nights in a Salvation Army hostel and they managed to find me a job as a general factotum in a small hotel. It wasn't much of a place and the pay wasn't great but I had my own small room in the loft with three meals a day. \n\nAgain with a little help from the Sally Annie I started going to evening classes, making up for the poor schooling I'd had. Surprise, surprise\u2014I discovered I was brighter than I'd always thought and I came to love education. I was getting to like the hotel too and among other subjects I took business studies and hotel management. At eighteen I was promoted to receptionist. I inadvertently encountered Paul Chadwick two or three times and on each occasion he said: \"Remember, Marti, we're going to marry.\" After each such meeting, I didn't sleep too well for several nights. \n\nDuring this time my mother died from cirrhosis\u2014somebody from the estate managed to find out where I was and let me know about it. As when my father died, I didn't mourn. Sad, but there you are. A lifetime of neglect can do that to you. There was enough left of Dad's compensation to pay for the funeral with a bit over. I didn't want anything to do with it so I told my brothers to split the remainder between themselves. I didn't have to tell them twice. As I left they were already squabbling over division of the loot. And that was the last I saw of any of them for quite a few years. \n\nI said that I had struggled with my sexuality, wondering sometimes if I was perhaps bi-, and in an effort to persuade myself that I was slept with a few men. Sometimes it was okay, sometimes not, but even the okay ones did nothing much for me other than leave me cold. It was only when Lacey, one of the hotel's older maids, seduced me that I finally accepted what I was. She crept into my room one night as I was dozing, sat on the edge of my bed and eased my sheet down (it was a hot summer night and I was sleeping naked). \n\n\"What the\u2014\" I jerked up, a fist raised to defend myself. A soft hand folded itself over my fist to stop me punching out. \n\n\"It's okay, Marti, it's only me, Lacey...\" \n\n\"What the hell do you think you're doing?\" \n\nShe made little soothing noises. \"I'm here to help you, Marti,\" she said, \"I've seen the way you look at girls, you get a really longing look on your face, like you want to shag them, but you don't make any moves so I'm guessing you're a gay virgin. Am I right, Marti, are you gay?\" \n\n\"I... I don't know... I... I think so...\" \n\n\"Good, then let me help you out.\" Lacey eased me back down and kissed my mouth, slipping me her tongue as she started playing with my boobs. \"Just enjoy it.\" \n\nWhen her head went between my legs and she began to eat me I knew for sure that this was where I belonged and I had my first lovely orgasm from another woman. After Lacey finished me off, she shed her nightgown and knelt over my face, lowering a wet, shaven quim to my mouth. Not knowing what to expect\u2014I had never tasted my own juices\u2014I gave a tentative lick and wasn't sure about it so I took another. The taste was like nothing I had tried before, odd and not easy to describe\u2014a little sour, a little sweet, a lot musky. After several licks I decided I liked it and set to with clumsy enthusiasm. I must have done okay because Lacey eventually came with a long groan, smearing my face with thick juices. \n\nLacey's visits became a regular thing for several months. She let me explore her body with its big soft breasts and almost permanently slick pussy so that before long it was more familiar to me than my own. I was fascinated by her clit which was far larger than mine, protruding quite some way from her upper labia, and suckled on it every chance I got. I learned a lot from Lacey but I didn't do anything stupid like fall in love with her so it was no hardship to let go when she decided to move on. \n\nSome weeks after Lacey left, the boss called all the staff together to tell us that he was selling up and that the new owners were likely to bring in their own staff. Most of us would be out of a job. I reckoned it was about time for a change anyway and after some careful thought I joined the army, Royal Military Police would you believe. \n\nDuring my service, I was careful to conceal my sexuality. It had taken military law a very long time to catch up with civil law in regard to gays\u2014thirty years or more\u2014and although homosexuality was no longer an offence in the army a lot of prejudice still existed among all ranks. I just let people think I was stand-offish or asexual\u2014well, I suppose in a way I was with men. And I didn't drink which made me a bit of an oddity in the army. For a couple of years Lance-Corporal Howard was attached to a Provost Company in some garrison town until the day our Company Sergeant-Major saw me bring down and arrest a drunken and violent squaddie twice my size. He recommended I be retrained as a drill and arrest and restraint instructor. After that, promotion to full corporal and then sergeant came swiftly. The army also had a good education service and I took full advantage of that. But by the time I had served seven years the government's economic cutbacks began to bite and it looked as if there would be severe reductions in the military. I decided to go before I was pushed and was given an exemplary conduct discharge. \n\nSo there I was, twenty-six years old and out on a limb once more. I really had nowhere to go after the army so I returned to the city and after a couple of weeks was lucky enough to land a job as a hotel receptionist. I found a flat not far from my workplace, small sitting room, smaller bedroom, kitchenette and shower-room. Like so many places in the city the rent was pricey and it wasn't up to much but then I didn't need much. I furnished it with bits-and-pieces from a cheap store, nothing elegant but having been in the military I was accustomed to nothing elegant. \n\nAnd I discovered the Guys &amp; Dolls nightclub where I could be my natural self again and in time that brought me to my meeting with Niamh... \n\n* * * * * \n\n\"...I don't think he'll be up to raping anyone for a long time,\" I said. \n\nNiamh clutched my arm and looked at me in awe. \"Where did you learn to do that?\" \n\n\"I grew up in a rough neighbourhood,\" I told her, \"You know the Balmain Estate?\" \n\n\"I've heard of it,\" she said, \"Never been there, though.\" \n\n\"Good. Don't go there, it's not a nice area. That's where I'm from. Now let's get you that taxi.\" \n\nNiamh nodded at the stricken thug who was still making squealing noises. \"What about him?\" \n\n\"Don't bother about him\u2014he wouldn't have cared about you after he'd finished with you. Leave him, it'll give him time to think about his wicked ways.\" \n\nAs we walked away, Niamh said: \"Are you really what that man called you?\" \n\n\"What, a nosy bitch?\" \n\nAlthough we were alone, Niamh practically whispered. \"No, a dildo-dyke.\" \n\nI couldn't help laughing. \"Niamh, I promise you I've never been on either end of a dildo in my life.\" \n\nWhen we got to the taxi-rank there was not a vehicle in sight. About half-a-dozen would-be passengers were lined up, none of them looking very happy. \"Join the queue, girls,\" a middle-aged woman said, \"Seems they're having a very busy night. Could be up to an hour's wait.\" \n\nI thanked her and turned to Niamh. \"Look, my flat's only ten minutes walk from here. It's no great shakes but it's clean enough. I can put you up for the night if you like. The sofa's comfortable and I've got a sleeping-bag you can use.\" \n\nNiamh considered for a moment then nodded assent. Taking out her mobile phone, she made a call. \"Hi, Mum, it's me... I missed the last bus... I'm staying with a friend tonight... yes, see you in the morning... love you, Mum...\" \n\nI winced at that last bit. Bad memory. It reminded me of the last time I'd said that to my mother. As I said, bad memory... \n\nThen, unexpectedly, Niamh slipped a hand into mine. \"Let's go, Marti.\" \n\n* * * * * \n\n\"Well, I did tell you it's not up to much.\" When we'd got into my flat, I'd kicked off my boots, given Niamh the penny tour and now I looked around my little sitting-room, seeing it as I imagined she must be seeing it. Anyone who lived somewhere like Langton Heights would be bound to find this place a bit shabby. \n\n\"What's wrong with it?\" Niamh replied, \"I'd love a little place like this to myself but city rents are a bit above an NHS trainee's pay. Oh, I'm happy enough at home but it would be nice to have some independence.\" \n\n\"Guess you're right\u2014 I escaped from home when I was sixteen.\" \n\n\"That young? What're your family like, Marti?\" \n\n\"My parents are both dead. I've got three brothers but I never see them.\" \n\nNiamh put a hand on mine. \"Aw, that's so sad.\" \n\nI made a kind of non-committal uh-huh noise. \"Anyway, there's the sofa, I'll just find you my sleeping-bag and a couple of pillows.\" \n\nNiahm stepped in front of me, placed her hands on my shoulders and to my surprise kissed me full on the mouth. Her lips were soft and velvety. \"Is that really necessary, Marti? It looks as if your bed is roomy enough for the two of us. I'd like to go to bed with you please, Marti.\" She kissed me again, this time teasing my lips with a lively little tongue. \n\n\"Are you sure about this, Niamh?\" \n\n\"Oh yes.\" She gave me a hundred-watt smile. \"I've been sure ever since you butted in when that awful man was trying to pick me up. My hero.\" \n\n\"A hero? Me? No, I'm just a nosy bitch.\" \n\nNiamh laughed with delight and threw her arms around me. \"So what are we waiting for, my nosy bitch?\" \n\nI took her hand and led her to my bed. \"There's something I'd better tell you, Marti,\" Niamh added, her perkiness fading slightly, \"I might not be very good at this\u2014I've only ever been with a couple of girls. And they were both inexperienced fumblers like me.\" \n\nI stroked her cheek. \"That's okay. Let's just take it easy and see how we go.\" I unfastened the top two buttons of her shirt and bent to kiss the soft hollow at the base of her throat. Niamh gave a little sigh and held my head close. She smelled delicious. I'm not big on perfumes and couldn't identify Niamh's but it made me think of a line from an old song called 'Lilac Wine'\u2014\"...sweet and heady like my love...\" \n\nI took my time in undoing all of the buttons, planting a lingering kiss on her torso for each one loosened. After the last button I spread the shirt aside. Niamh wore no bra and her breasts were small and neat with pale pink nipples. Cupping them with my hands, I took one nipple between my lips and teeth and bit down upon it, very gently, before sucking and bathing it with my tongue. The nipple became harder and engorged under my ministrations and Niamh made a whimpering noise as she clasped my head closer. I released the nipple and blew on it with feathery breath before treating the other in the same fashion. \n\nContinuing to play her nipples between fingers and thumbs, I made my leisurely way down her body with lips and tongue, burying my nose into her soft belly to inhale her sweet smell. I undid the button and zip on her skirt, lowering it to the floor and lifting her feet clear. Niamh was wearing a tiny transparent thong, little more than a cache-sex, through which I could see a neat triangle of dark red hair and the top of a tightly closed little slit. A fragrant muskiness filled my nostrils and I kissed her pubes through the thong. \n\nRising to my feet, I slipped her shirt from her shoulders kissing her mouth as I did so. Niamh wrapped welcoming arms around my neck and her tongue sought its way into my mouth, exploring and caressing. Her tongue and saliva were sweet and I sucked at them eagerly. \n\nNiamh began to tug at my t-shirt, freeing it from my trousers waistband and lifting it over my head before reaching behind me to unclasp my bra. At 34B my boobs aren't massive but they are firm and shapely with thick dark-red nipples. Taking one in each hand, Niamh said: \"They're beautiful\u2014I love them.\" and placed a kiss on each nipple. \n\nI guided her back to the bed, lowering her on to the edge while I knelt in front of her, removing the dampened thong before spreading her legs a little to admire her secret place. Below the triangle of pubic hair, Niamh's small pussy was bare and smooth, vulva plump and already shining with slick wetness. The smell of female arousal was, like the lilac wine, 'sweet and heady'. I ran a forefinger along Niamh's cleft and carried the juice to my mouth, sucking it off. \"Niamh, has anyone ever told you you've got the most adorable honeypot?\" I said. \n\nShe giggled. \"They have now.\" Then she added: \"Honeypot\u2014I like that word.\" \n\nI eased the labia apart so that I could admire the rosy-coloured parts with their puffy inner lips and darling tiny clitoris emerging from its hood. Lowering my head , I ran my tongue's tip from vagina to clit and back again. \n\n\"Oh my God!\" Niamh cried out, \"God, Marti, that feels so good. Please do it again!\" \n\nFrom her reaction, I guessed that must have been Niamh's first experience of oral sex. I slid a finger into her tight passage and her hips jerked as she cried out softly. I brought my tongue into play again, trying to cover all the delicious folds so as to maximise her pleasure. Niamh lifted her legs so that her feet rested flat on the bed, at the same time spreading them a little more widely apart. When I glanced up I could see her hands clutching at the bedclothes and her hips were steadily jerking in time with the movement of my finger. With great care I managed to ease a second finger into her vagina which rippled and clutched at me. By now she was producing copious quantities of juice, smearing my face as I lapped. The jerking of her hips was accompanied by a series of little cries and moans, all increasing in tempo. Fingers exploring the silken walls, I found Niamh's g-spot at the same moment sucking her clit into my lips and flicking it with my tongue., Niamh's whole body seemed to stiffen and lift clear of the bed as she cried out loudly. \n\nShe collapsed back onto the bed as her orgasm subsided and I continued to work at her pussy, wanting to make her come again. I withdrew my fingers from her vagina and reached up with both hands to play with her boobs and nipples. I thrust my tongue into her as far as I could, rubbing my nose into the top of her cleft and against her clitoris. Her hips started to jerk rhythmically once more and I brought her off again very quickly. Covering the whole of her pussy with my mouth, I sucked in the plump and swollen lips so as to enjoy the taste of her as much as I could. \n\nNiamh sat up, tugging at me to bring me up to her level so that she could kiss my mouth and lick my lips and chin. \"Oh, Marti, I've never come like that before and I don't think I've ever been so wet.\" She fumbled at the fastenings of my trousers, pushing them down before slipping her fingers into the waistband of my panties to remove those. I had a strange moment of worry then, wondering what Niamh would think when she uncovered me. It had never in my life occurred to me to even trim my pubes, let alone shave my pussy lips, and I had quite a bush down there. None of my few previous lovers had commented and thankfully it didn't seem to worry Niamh either. Her hand cupped my pussy and then she ran a finger along my slit. \n\n\"You're lovely and wet too.\" Niamh's lips fastened onto one of my nipples and she sucked hard. A jolt shot through me as if there was a direct line from my nipples to my pussy and I let out a gasp as my hips gave an involuntary twitch. Niamh continued to suck and lick my nipples as she slid a couple of fingers into me. Her free arm went around me so that she could clutch at my bottom and pull me closer. I felt my internal muscles tighten and I held Niamh's head even more closely to my boobs. The feel of her mouth and tongue on my nipples alone was bringing me close to orgasm and then her thumb brushed my clit. I felt a sudden liquid surge in my pussy and I exploded. I had been standing throughout this and I almost collapsed as ecstasy shook me. \n\nI slumped onto the bed still shaking and Niamh held me close. \"Can I taste you, Marti?\" \n\n\"Oh yes please,\" I moaned. She knelt between my legs, lowering her head, and a pointed little tongue fluttered up and down my cleft. \n\nNiamh looked up at me with a daft grin. \"I could get to like this,\" she said. I felt her fingers easy my vulva lips apart and I looked up to see her gazing into my pussy. \"That's beautiful,\" she told me, \"All shiny and wet for me and you smell so good.\" She put a finger into me and then withdrew it, holding it to my lips. \"Here, taste.\" Niamh's tongue flickered out again, lapping from my perineum to clit. I came again, virtually without warning. Coming so quickly on top of my first orgasm, it damned near knocked me out. \n\nI came down slowly to find an anxious Niamh stroking my face. \"Marti, are you all right?\" \n\nI put my arms around her and held her close. \"I'm fine,\" I assured her, \"It's just been a while. I haven't even masturbated in several weeks. You know, Niamh, for someone worried about her lack of experience, you were brilliant.\" We cuddled for a while then Niamh started to chuckle quietly. \n\n\"What?\" \n\n\"I was just thinking about what would happen if our parish priest could see me,\" she said, \"Father Donovan is the most appalling old bigot. In confession once when I was fourteen or so I mentioned impure thoughts and I thought he'd have a fit. I hadn't even mentioned fancying girls, only that I sometimes had impure thoughts. He ranted at me for about five minutes then gave me fifty Our Fathers and a hundred Hail Marys as a penance. For the next three Sundays his sermon was a diatribe against those who aren't pure of heart... and straight. If he saw us now he'd probably get straight on the phone to Hell and reserve my place next to the biggest furnace.\" She kissed me. \"Reckon it'd be worth it, at that.\" ",
        "\"Do your folks know?\" \n\n\"No, I've never plucked up the courage to tell them. They're good Catholics so I don't think they'd take it well.\" \n\n\"Guess I'm lucky not having anyone to answer to,\" I commented. \n\nTwo weeks later, Niamh moved in with me. \n\n* * * * * \n\nAfter the family life I'd had and abandoned, I'd become very much a loner. Niamh gave me something I'd never had before, a real sense of family even though there was just the two of us. For the first time in my life I felt truly loved. \n\nAnd from deep within myself I reciprocated the love Niamh gave me. But to my regret and shame I could never bring myself to say those three little words: I love you. Oh, Niamh said them to me often enough but all I could respond with were platitudes such as: \"I know.\" or \"Same here.\" Each day I admonished myself: Tell her today. I never could. Be treated as shit often enough when you're young and I suppose you turn into shit. I don't know if Niamh noticed. I'm sure she did although she never mentioned it. I'll never forget it. \n\n* * * * * \n\nSomebody once said that life has a nasty habit of tripping up your hopes and dreams. Niamh was on a late shift at the hospital and it was my day off. I busied myself with some essential jobs, shopping, cleaning the flat, then slumped on the sofa with a newspaper and a cup of tea. After a while I found myself nodding off, not exactly asleep but comfortably adrift so the sudden sharp buzz! of the doorbell made me jump a little. Grumbling to myself, I went to open the door. There were two people there, neither of them a welcome sight\u2014Paul Chadwick and Mickey, the youngest of my three brothers. \n\n\"Hello, Marti,\" smirked Paul, \"Going to let us in?\" Without a by-your-leave, he pushed his way past me, Mickey trailing along behind like a piece of rubbish caught in the wake of a powerboat. My brother looked unwashed and unwell, thin with clothes just hanging off him, hair long and unkempt, face pale with great black circles under his eyes. He didn't smell too good either. \n\n\"What do you want?\" I demanded, addressing Paul Chadwick, \"And how did you know where to find me? Oh, never mind that, just say whatever it is you want and then get out!\" \n\n\"Now that's not a very friendly way to talk to your fianc\u00e9, Marti.\" Again he gave me that annoying smirk. \n\n\"My fianc\u00e9?\" I laughed out loud. \"What are you on, Paul?\" \n\n\"Me? I'm not on anything, Marti. Now Mickey here, he's on plenty. If you can swallow it, smoke it, sniff it or inject it, then Mickey's on it. Isn't that right, Mickey boy? And Mickey's in hock to some very nasty people, owes them a bundle, don't you Mickey?\" Paul Chadwick's weird, blank eyes met mine briefly and he started to snigger. \"Want to know something else, Marti? If he doesn't pay them in full in three days' time, they're going to break both his arms and legs. Then when the plasters come off, he'll still owe them and if he can't pay, they'll do it all over again. Now isn't that something, Marti?\" \n\nI turned to my brother. \"Is that right?\" He refused to meet my eyes so I grabbed hold of his chin and forced him to look at me. His pupils were dilated. Gripping his wrist, I pushed his jacket and shirt sleeves up. Track-lines stood out on his arms, almost like tattoos. \"You stupid little twat!\" I yelled at him and slapped his face hard. Mickey staggered and raised a trembling hand to his cheek but still wouldn't meet my eyes and I heard Paul Chadwick's odd little snigger again. I whirled on him. \n\n\"And what do you expect me to do about it? I can't afford to pay some dealers off.\" \n\n\"But I can,\" Paul told me, \"All you have to do is agree to marry me, Marti, and I'll pay Mickey's debts off before the heavies get to him. Is that a deal?\" \n\n\"No, it's not a deal. The stupid sod got himself into this mess, let him get himself out of it.\" \n\nMickey spoke for the first time and he sounded really scared. \"Please, sis, do this for me\u2014I'll never forget it.\" \n\n\"Hah! Yes you will, you'll forget it the moment you're off the hook.\" I shook my head in disgust. \"God, what a bloody family...\" \n\nPaul Chadwick gave another strange little snigger. \"There's something else, Marti...\" \n\n\"What?\" \n\n\"You asked how I found you,\" Paul said with a mirthless grin, \"I know this cheap private enquiry agent, got a gambling problem, do anything for a few quid. I've been following your career with interest for a while now, Marti. I know all sorts of things about you. For instance, there's that lovely redhead you're shacked up with... Niamh, isn't it?\" \n\n\"You leave Niamh out of this.\" \n\nPaul shook his head. \"I always like to have an ace up my sleeve. She's from a good Irish Catholic family and there's quite a little Irish Catholic mafia at the City Hospital. As I understand it, the Catholic church doesn't think much of gays. A few whispers and rumours in the right ears and that little dyke's life could be ruined...\" \n\n\"Discrimination is illegal,\" I said. \n\nPaul shrugged. \"So? There's not much the law can do about whispers and rumours. They just grow and grow. Who can tell where they start, Marti, and who's responsible. Who's going to prove anything? And how about anonymous letters to her parish priest. I hear Father Donovan has a real down on people who... shall we say, bat for the other side. He'd probably denounce her from the pulpit and excommunicate her. There's more, Marti.\" \n\n\"More? What more could there be?\" \n\n\"Those nasty people I mentioned, the ones Mickey owes. Three of them come from a city where Catholics and Protestants don't mix well. As they would say, they hate fucking Papists. I'm sure they'd have a lot of fun gang-raping a redheaded Catholic gay girl. Trouble is, Marti, they're all real psychos, by the time they'd finished with little Niamh she'd probably be a mental and physical cripple. Think about it, your brother and girlfriend in adjoining wheelchairs, scared stiff of shadows, not even sure what day it was. And somebody could always let them know it was your fault they'd been hurt. But that's not necessary, Marti, it's up to you.\" \n\n\"Christ, but you're some piece of work, Paul.\" Feeling sick and defeated, I flopped down into a chair. \"You win, you bastard. I'll marry you.\" \n\nThere was something false about the grin plastered on Paul Chadwick's face, almost as if he'd been told that that winners should look happy. \"There, that wasn't so hard, was it Marti? I'll see that Mickey walks away in one piece, all debts cleared. Tell you what, I'll even give you a week or two to get rid of the redhead.\" \n\nI nodded. \"You'd better go now.\" \n\n\"Thanks, sis, I owe you big time,\" Mickey grovelled. \n\nLeaping up, I grasped my brother's jacket collars and shook him hard. \"If I ever see you again, you pathetic heap of shit, it won't be the bad guys breaking your legs,\" I snarled as I thrust him away. \n\nPaul Chadwick sniggered again. \"When I was a kid, I loved playing Happy Families\u2014as long as I won, that is...\" \n\n* * * * * \n\nI knew I'd have to finish with Niamh fairly quickly rather than prolong the agony but I couldn't force myself to do it that day. I'd try to summon up the necessary spirit the following day. \n\nThat night, Niamh and I made love twice and I had two of the most powerful orgasms I'd ever had. When I was sure that she was asleep, I crept from the bed and went to sit on the sofa. Some people might think that because I'm tough I'm unemotional. Not so. My emotions run as deep as any normal person's. I've just learned not to display them. I sat there for a good chunk of the night and wept. I wept silently so as not to wake Niamh. Apart from the obvious, my great regret was never having told Niamh that I loved her and now I never would. \n\nI took the bullet between my teeth the next evening. I arrived home from work and turned my face away as Niamh came to kiss me. \"I'm sorry, Niamh, but you'll have to go, find somewhere else to live.\" \n\nNiamh gazed back at me, a half-smile on her face as if hoping I was making a bad joke. I swallowed hard, trying to hold back the tears I wanted to release. \"You'll have to go Niamh. I'm getting married soon.\" \n\nShock replaced Niamh's half-smile. \"But why, Marti? I thought we had something good here.\" \n\n\"I told you, I'm getting married. His name's Paul and we're to marry as soon as possible.\" \n\n\"But Marti, you're gay.\" \n\n\"No I'm not,\" I lied, \"I'm straight really, just thought I'd like to see what the lesbian life had to offer. Well, it has nothing.\" \n\nSilent tears started to roll down Niamh's cheeks and I turned away so as not to see them. It was heart-rending enough struggling with my own emotions. Niamh put a hand on my arm then let it fall away when I didn't respond. \"I'll go and pack then...\" she choked. \n\n\"You don't have to go immediately, when you find somewhere else or go home will do. You can have the bed, I'll sleep on the sofa.\" \n\n\"No need, I won't stay where I'm not wanted,\" Niamh said, her voice as even as her tears allowed. I had to admire her dignity, I'm not sure I could have handled such a kick in the teeth as well as she did. \"A couple of nurses at the hospital have been advertising a spare room. I'll call them now.\" \n\nShe took out her mobile and rang a number. \"Hello, Thorne Ward? Can I speak to Nurse Butler please... hello, Ruth?... it's Niamh, Niamh Cassidy... that's right, from Radiology... is your spare room still free... oh good, can I have it please... yes, I was but it hasn't worked out... can I come straight away...?\" \n\nDignified to the end, when Niamh left she simply said: \"Thank you, Marti, it was lovely while it lasted.\" Then: \"I did love you. Goodbye.\" Her tears continued to stream as she went. She didn't even slam the door as most would have done. \n\nI ran through to the bedroom and hurled myself, face down, on the bed. There was no silent weeping this time. I howled. \n\nYears ago somebody wrote a song called 'Love Hurts'. Boy, did they ever get it right. \n\n* * * * * \n\nPaul took me to meet his parents, not at their home but in a pub/restaurant. It was an uncomfortable evening. Phyllis Chadwick might have been attractive at one time but now she was thin and brittle, face caked in makeup so that she looked like a marionette. She made it clear from the outset that she disapproved of me, me being from the wrong side of the tracks as it were. By contrast, Harry, Paul's father, was pleasant and friendly, treating me as if he was pleased that I was to be one of the family. Short and stocky with white hair, he appeared to be much older than his wife. \n\nFor much of the meal, Paul and Phyllis had their heads together, conversing almost in whispers, excluding Harry and me. There was something disturbing about this exhibition. Each time Harry and I started to start a conversation, we were frozen by glares from Paul and his mother. It seemed obvious that Harry was used to this behaviour for he looked at me and shrugged as if this was the norm. \n\nWhen we left the pub, Paul barely gave me a nod. Mrs Chadwick didn't even say goodbye, pointedly turning her back on me and taking Paul's arm as they headed for the car park. Harry shook my hand, leaned forward and whispered: \"I'll see you again, Marti.\" \n\nIt was two days later that he turned up at the hotel when I was on reception duty. The manager, Robert Asquith, saw him first and rushed to greet him. \"Mr Chadwick, what a pleasant surprise. How can I help you?\" \n\nHarry gestured in my direction. \"I'd like a word with Marti if I may.\" \n\nAsquith glared. \"If Miss Howard has done anything wrong, Mr Chadwick, I'll deal with her.\" \n\nHarry winked at me. \"She's done nothing wrong, I'm sure she's an exemplary employee. It's a personal matter\u2014she's engaged to my son.\" \n\nAsquith's manner changed and for the first time I noticed what a horrible shade of brown his nose was, God knows how many backsides he'd had it up. He damned near cringed before Harry, rubbing his hands together, very Uriah Heap. \"Of course, Mr Chadwick, perhaps you'd care to use my office.\" \n\n\"What a creep,\" Harry laughed when the office door had closed behind us, \"Phyllis loves that sort of behaviour, really lords it over people like him. Can't stand them myself. I'd sooner someone was honest enough to call me a prat than fawn over me.\" His expression became serious. \"Anyway, we weren't given much of a chance to speak the other night. Even if we had, I'd have been careful. But as we're alone here... There's something odd about this marriage business. Do you know what you're getting yourself into, Marti?\" \n\n\"Yes, I know.\" \n\n\"Do you love Paul?\" \n\n\"I'm going to marry him.\" \n\nI'm pretty sure that Harry noticed the evasion but he said nothing about it. Instead: \"I've always been worried about Paul. There's something not right about him. He's intelligent and we made sure he had a decent education but he's somehow... detached is the right word, I suppose. Been that way since he was a small child. I've often wondered if he has a disorder like Asperger's Syndrome but Phyllis would never allow me to have him tested for a diagnosis. She seems to be the only person that he has any kind of feeling for and she's the same towards him. How many blokes would take their fianc\u00e9e for a meal and spend the evening ignoring her? I wanted you to know, Marti, that it's not easy with either of them. I wouldn't think the less of you if you walked away from this.\" \n\n\"I'm going to marry him,\" I repeated. \n\nHarry sighed. \"Okay, Marti, but if you need any help, you know where I am.\" \n\n* * * * * \n\nThe marriage lasted a little over two years and it was weird, I mean really king-sized weird. Perhaps the less said about it the better, so I'll give a brief account and leave it at that. \n\nWe were married in the City Register Office, the only guests being Paul's parents and two Register Office staff hauled in to act as witnesses. We had a 'celebration' meal afterwards, as before in a pub and as before Paul and his mother huddled together whispering, leaving me and Harry out in the cold. As a wedding present, Harry had bought us a house, fully furnished, although I suspect the d\u00e9cor was more Phyllis and Paul than Harry. Phyllis had given a snazzy little sports car but made it clear that it was for Paul, not me. \n\nConsummation of the marriage, such as it was, lasted about one minute. After that, Paul pretty much ignored me, both in and out of bed. Sometimes, every two or three months, it occurred to him to have sex and like the wedding night, it was brief. I started to think that Harry was right, Paul suffered mental problems. He was certainly disturbed. It was as if his whole life was conducted by an imaginary life manual given to him when he was a teenager. Chapter One: When a Boy becomes a Man, he marries a Woman. I must have been the first female Paul saw when he had absorbed this and therefore I became the girl he was destined to marry. Chapter Two: A Couple have Sex on the Wedding Night. The box was ticked. Chapter Three: A Couple have Sex at Intervals. Another box ticked. Of course, this lack of sex suited me\u2014even if Paul had been a skilled lover I'd probably have got nothing from it. I was just thankful he hadn't read any further in this hypothetical manual\u2014just think, Chapter Four: A Couple have Children. I shudder to think what they might have been like. \n\nIn fact, Paul was out more often than he was at home. I know that he frequently went to see his mother but there were many times he just disappeared. When he returned from these unexplained trips he often stank of booze. After a while I moved into a spare bedroom and I don't think Paul even noticed. \n\nOstensibly Paul worked but it was a sinecure, probably demanded by Phyllis. He sat in an office by himself for a few hours a day, shuffling paper around, and was paid a huge salary by his father. I don't suppose Harry liked it but for peace and quiet in his own marriage he put up with it. \n\n* * * * * \n\nThe end of the marriage was triggered by a visitor. \n\n\"You! what the hell do you want?\" \n\n\"I must speak to you, sis. It's urgent and necessary,\" Mickey said. My anger must have been plain for he held up his hands in a conciliatory gesture. \"I'm clean, sis, I really am.\" \n\nI had to admit he certainly looked better. He didn't smell bad, his eyes were clear and his clothing was cared for even if it did look second-hand. I stood aside for him. \"Come in, Mickey, but this had better be good.\" \n\n\"What's it been like, married to Paul?\" He didn't wait for an answer: \"Shitty, I'd reckon, especially with you being gay. Sorry if I'm wrong but you living with that redhead back then I just assumed you're gay. None of my business really, sis, but are you gay?\" \n\nI nodded. \"You're right, it's none of your business. But yes, I am.\" \n\n\"Well, that's okay. We're all the way the good Lord made us.\" \n\nGetting impatient, I almost snarled: \"What do you want, Mickey?\" \n\n\"To tell you the truth about what happened. It was all a con, Marti. The whole business of getting you to marry Paul was a trick.\" Mickey slumped down into a chair and held up a hand as I started to speak. \"Hear me out, sis. Yes, I was a junkie and in a bad way. But I wasn't in hock to any heavies. Paul had been supplying my stuff for several years, likely to soften me up. God knows why but he had this fixation on marrying you. He's not right in the head, sis, not right at all. \n\n\"Anyhow, I was getting worse all the time and then Paul threatened to cut off my supplies unless I helped him to get you. So we concocted the story about me being in danger and as a back-up Paul thought he could use the redhead to put pressure on you. And it worked.\" \n\nIt was my turn to collapse into chair. \"You bastards!\" \n\n\"Sorry, sis, but I was in a terrible state. In the blood, I suppose, Mum and Dad being alkies, me being a user. Billy and Frank are boozers and they've both done time. You were the sensible one, Marti, getting out when you did. Unless you've been an addict you can't know what it's like to be cut off from your fix.\" Mickey really did look remorseful. \"In the end I got lucky, I guess God was looking out for me\u2014about a year ago, a Salvation Army team found me unconscious in the gutter. They got me into a rehab programme and worked like hell to make it successful. I had a couple of small relapses but things came right in the end. I go to Narcotics Anonymous meetings and now I'm in the Salvation Army. You should see me in my uniform, I'm quite smart. Got a decent job too, warehouseman in a supermarket.\" \n\n\"I'm pleased for you, Mickey,\" I said, \"And thanks for telling me all this. Would you mind leaving now, I've got some thinking to do.\" At the door, I did something I would previously have thought unlikely. I gave my brother a sincere hug and kissed his cheek. \n\n* * * * * \n\nI was in the kitchen preparing a meal, for one, when Paul came home. \n\n\"I had a visitor today, Paul. Mickey came to see me. You know he's clean now?\" \n\n\"Yes, I heard he got religion. How's that for strange behaviour?\" \n\n\"He told me how the two of you conned me into this so-called marriage.\" \n\nPaul started sniggering, an irritating sound which had become more wearing each time I heard it. \"Yeah, we did, you were so gullible. That was a good joke, wasn't it? What a laugh!\"\" \n\nI kept my voice calm. \"If that's a joke, Paul, I don't find it very funny. In fact, I find it so unfunny that I'm going to file for divorce tomorrow.\" \n\nThe sniggering continued. \"No, you can't divorce me, Mother wouldn't like it. She doesn't like you but she thinks divorce is scandalous. No, Marti, no divorce.\" \n\n\"Fuck mother! This is my life. See you in court.\" I made a serious mistake then, one that Nick Jessop had warned me about all those years previously, one which had been reinforced during my army service. I turned my back on the enemy. Paul grabbed my neck and smashed my face two or three times into a wall cupboard then turned me round and punched me a couple of times. I could feel blood flowing as I slipped to the floor. Then came the true frightener, the sign that he really was unhinged. There was no indication of rage or even loss of temper. He spoke to me in that dull monotone of his, spoke to me as if everything was normal, as if nothing at all had happened. ",
        "\"I think I'll go for a little drive now, Marti. I'll be home in time for supper. I fancy grilled cheese on toast. You'll have it ready, won't you? We can eat together and talk about our day.\" Moments later I heard the front door closing, followed by the sound of his car being driven away. \n\nI sat slumped against one of the floor cupboards, dazed and feeling sick. When I felt able, I crawled to a chair and used it to pull myself up then held a kitchen towel to my face. It was quickly soaked in blood. In the bathroom I looked into a mirror to assess the damage. My nose was swollen badly and pouring blood but thankfully it didn't seem to be broken. There was one huge bruise across my forehead and by morning I would have two black eyes. Perhaps I should have called the police then but I wasn't thinking too straight. After managing to staunch the blood, a long job, I went round the house making sure that all the doors and windows were locked and went to bed, arming myself with a large kitchen knife. I lay awake for a long time but eventually slipped into an uneasy sleep. \n\nIt was dark when I was awoken by a pounding on the front door. My face felt stiff and painful. One of my eyes was almost closed but I was able to see out of the other. The bedside clock showed 3:45. The pounding continued so I unlocked the window and shouted down: \"Go away, Paul! Go away or I'll call the police!\" \n\nA woman's voice answered me. \"This is the police, Mrs Chadwick. PCs Archer and Morris. Please let us in. We have a Mr Chadwick with us.\" \n\nThat decided me. I was going to have the bastard arrested and charged. When I opened the front door, the first person into the house wasn't Paul but Harry Chadwick. He saw my face and blurted: \"My God, Marti, what happened to you?\" \n\n\"Your fucking son, that's what happened to me!\" I replied bitterly. \n\n\"Paul did this to you? I know he's odd but he's never been violent to my knowledge.\" \n\n\"First time for everything, Harry. He's started now.\" I pointed to my face. \"Here's your evidence.\" \n\nHarry put an arm around me. \"Let's go and sit down.\" Followed by the two police officers, he guided me into the sitting room and carefully lowered me onto the sofa, sitting down beside me. The woman officer, the one who'd called out to me, was middle-aged and competent looking. I think her partner must have been a probationer for he was young and fresh-faced and looked both apprehensive and unhappy. \n\n\"I'm PC Archer, Mrs Chadwick,\" the woman said, \"As soon as I've told you why we're here I think we'd better get you to hospital, have you checked over.\" \n\nI was in no mood to appreciate her concern nor did I wonder why Harry was here with the police. \"All I want is for you to arrest my fucking husband the minute he walks in. Lock him up and throw the key away. He's not normal.\" \n\nConstable Archer started to speak but Harry raised a hand to stop her before putting a gentle hand on mine. \"Marti, Paul's dead.\" \n\n* * * * * \n\nPaul had crashed his car\u2014it happened on a quiet stretch of road and no other vehicles were involved. He had an argument with a massive old tree and the tree won. There were no witnesses to the actual collision so there was a certain amount of speculation but it looked as if Paul had been speeding. One certainty was that he hadn't been wearing his seat-belt. \n\nAt the inquest, an expert witness confirmed that prior to the accident the car had been in sound mechanical condition. The autopsy showed that Paul was three times over the drink-drive limit and there were traces of cocaine in his blood. Returning a verdict of accidental death, the coroner gave a short homily on the dangers of drink- and drug-driving and hoped that others would take heed of this tragedy. He extended his sympathy to the deceased's family, especially the grieving widow. If only he knew. The inquest had been held some months after the accident and my beating by Paul had not come into the evidence. \n\nThere was one bizarre incident at the inquest. While the pathologist was given his evidence about the drink and drugs, Phyllis Chadwick jumped up screaming: \"That's a lie! Paul was a good boy!\" She pointed to me. \"That bitch killed my baby boy! She fixed his car! She poured the drink into him! Arrest the murdering bitch!\" \n\nShe had complete breakdown and was hospitalised for several months. \n\nI was surprised to learn that Paul had made a will. I wasn't surprised to learn that he left everything he owned to his mother. \n\nI couldn't care less. I was free. \n\n* * * * * \n\nFollowing the inquest, I stuck around for a couple of months and then it was goodbye time. I had to get away from this house, away from the city, just see where wandering took me. I'd be travelling light so I packed some changes of clothing in a rucksack along with a sleeping bag and essential toiletries. The rest of my wardrobe went to a charity shop and that was it. I checked up on Mickey and was pleased to find him doing well. He'd met a nice girl in the Salvation Army and they were getting married. He was settled and that was one worry off my mind. But my conscience never allowed me to forget what I'd done to Niamh. \n\nLate in the evening before I intended to set off, the door-bell rang. I tried ignoring it but my unwanted visitor persisted and so mumbling curses I wrenched the front door open. \n\n\"Hello, Marti, can I come in?\" It was Harry Chadwick, looking old and weary and drawn. \n\nI shrugged and stood aside. \"It's your house, you can do what you want.\" Ungracious but I didn't feel kindly disposed towards the Chadwicks. \n\nHe gave me an odd look then noticed my rucksack by the door. \"You going somewhere?\" \n\n\"Yes, I'm getting the hell out of this place. Maybe I'll get rid of bad memories in time. You can have your house back now. I'm finished with it.\" \n\nAgain the odd look, then he gestured to the living room. \"Can we go and sit down, Marti? My old brain works better when I'm comfortable.\" \n\nI gave him a grudging nod. When we were settled, Harry asked: \"First, you may be glad to hear that Phyllis now accepts that you weren't responsible for Paul's death. Then again, I suppose you couldn't care less what she thinks. I wouldn't blame you.\" He shrugged. \"Why did you marry my son, Marti? It never seemed to me that you loved him. I told you at the time the whole business felt wrong to me.\" \n\nWell, he might as well hear the truth about Paul. I'm sure Phyllis Chadwick would have called me a liar, regardless of her newly-found belief in my innocence. Whether or not Harry believed me didn't matter a damn. \"He blackmailed me. The bastard threatened to destroy the life of someone I was very fond of. More than that, he threatened to have some tame thugs rape and cripple her. Sounded as if he meant it. Didn't give me a whole lot of choice\u2014I wasn't prepared to take the risk.\" \n\nHarry sighed. \"I was afraid it might be something like that although I didn't expect it to be so bad. I'm so sorry, Marti. I blame myself.\" \n\n\"Why? You weren't responsible for his actions\u2014he was a grown man. Trouble was, he'd just grown up the wrong way.\" \n\n\"I could have been more of a father.\" The old man took out his pipe and sucked on it as if for comfort. \"Sometimes I wonder if he really was mine. You probably noticed that he didn't look much like either of us. Still, that's history now. \n\n\"Anyway, as you know, my wife is much younger than I am. I was always so tied up with the businesses, times I was hardly ever home, and she indulged him from the time he was a toddler. He'd get fixed ideas on wanting something and whatever Paul wanted, Paul got. And usually once he'd got it, he'd lose interest and discard it. It seemed to be more about possession than genuine need. I reckon you were just another of his fixed ideas, his 'wants'. If I'd been around more, perhaps he'd have been different.\" \n\n\"Doubt it,\" I said, \" You thought he had undiagnosed Asperger's. Maybe, some of the signs were there, but I wouldn't bet on it. I reckon he was simply born bad\u2014sociopathic even. Makes no odds now, anyhow. He's dead and... I'm sorry, Harry, but I'm not mourning him. I'm not even calling myself Chadwick any more\u2014I'm Marti Howard again. Whatever, I'll be gone in the morning then you can take your house back.\" \n\nHarry Chadwick filled his pipe from an old leather pouch, struck a match and lit it. \"Marti, it's not my house, it's yours. I half-expected things to go badly\u2014hoped they wouldn't but almost certain they would\u2014I made sure the house was in your name so you'd have something to fall back on. You're the legal owner, Marti.\" \n\n\"So?\" I said. It was obvious the old man had a good heart and wanted to help me but I wasn't feeling much in the way of gratitude. \"I'm still on my way\u2014nothing to hold me here.\" \n\n\"Where do you intend going, Marti?\" \n\n\"Don't know... here... there... everywhere...\" \n\n\"And how are you off for money?\" \n\n\"I've got some in my bank account, enough for a while. And I should be able to get odd jobs\u2014most places need washers-up and cleaners, the like... I'm not proud so I'll get by.\" \n\nHarry's pipe had gone out so he struck another match. \"I've got a suggestion, Marti,\" he said, drawing heavily on the pipe and releasing clouds of fragrant smoke, \"We'll put this place in the hands of a good letting agent I know and he can liaise with my accountant. Rent the house out on short leases, say six months at a time. They'll retain enough to cover your taxes and their fees and pay the remainder into your bank account monthly. That'll give you a bit of security. All you need do is keep the agent informed of where you are in case we need to get in touch with you in a hurry. How about it?\" \n\nHe looked at me as if appealing for agreement. Relenting, I went to the old fellow and gave him a hug. \"Yes, thanks. You're a good man, Harry Chadwick,\" I told him. \n\nI knew that I'd be taking Harry on trust but instinct told me my affairs would be safe in his hands. Having given him details of my bank account, I left the city the following morning to start my travels. I worked my way northwards, at times staying in a place no more than a couple of days, at others staying several months. I travelled by bus and by coach and by train and by hitching lifts. I slept in bed-and-breakfast places, in hostels, a few times even on park benches. I did odd jobs, ranging from the mildly pleasant to the downright horrible. It didn't matter where I went, though, or what I did, I couldn't shed my shame and guilt about the way I'd been forced to treat Niamh. Eventually, hopping from one place to another, I found myself in Carlisle and from there it was just a step across the border into Scotland. Going via Dumfries and Kilmarnock I soon arrived in Glasgow. \n\nBetween times \n\nIn Glasgow I got a job in a burger bar, not one of the big chains but a sleazy little back street joint surrounded by pubs and down-at-heel businesses. I only worked there\u2014I wouldn't have eaten in the place for a fortune, it was that grotty. Whatever, the owner was a mean-mouthed, surly little specimen and I only lasted a couple of weeks. \n\nHis son took a fancy to me from my first day there, constantly pestering me for a date, not flattering even if I hadn't been gay. As well as being several years younger than me, he was overweight and spotty and not too particular about personal hygiene. One evening the shop was filled with customers eager for their daily fix of deep-fried heart attack and, playing to the audience, the little creep came up behind me, throwing his arms around me, one hand clutching a breast, the other grabbing at my crotch. At the same time he thrust his groin several times into my buttocks, sniggering while he did it. I don't think he saw the punch that blacked his eye and dumped him on his fat arse. He stopped sniggering. \n\nThere was a scattering of applause and ragged cheers from the customers. \"Cripes!\" I heard someone say, \"Tha' lassie's got a mean right hook!\" \n\nThe boss came at me screaming: \"Right yew! Tha's assault an' battery, tha' is! Stay there! Ah'm callin' the polis!\" \n\n\"Call the police,\" I invited him, \"I've got at least a dozen witnesses who saw him sexually assault me. He'll probably get about six months inside for that. And I've heard other prisoners can be pretty rough on sex offenders.\" \n\nHe mulled this over. \"Okay, no polis. Now gerroot! Yer fired!\" \n\nI held out a hand. \"I'll go as soon as you pay me my wages.\" \n\n\"Ye'll get nothin' frae me.\" \n\n\"Gi' the lassie her wages, ye tight-arsed bastard!\" a customer bawled. There was a chorus of \"Ayes!\" \n\nMuttering, the owner pulled out his wallet, extracted some notes and grudgingly slapped them into my hand. I kept my hand out. \n\n\"Whit now?\" \n\n\"Another week's pay in lieu of notice...\" \n\nI thought it safer to leave Glasgow after that\u2014for all I knew, Surly and Son might have some nasty friends\u2014so I packed hurriedly, caught the night bus to Edinburgh and found a room in a nice little bed and breakfast place. I got lucky with work too, landing a job in a casino as part-time cocktail waitress, part-time hat-check girl, and I stayed for about six months. The hours were long but pay was good, the tips were better and I could even put up with the clients who wanted to flirt and hold my hand while tipping me. Most of them were harmless and those who thought they stood a chance with me were generally good-natured enough to accept a gentle brush-off. Truth be told, I did succumb to a number of attractive middle-aged women who made a pass at me. All were married I believe, but either bi- or they just wanted a taste of what life was like on the other side of the street. I never objected to a night of unconditional sex in a luxury hotel and these encounters kept libido and pussy happy. And I like to think my partners left in the mornings with satisfied smiles. I only turned one down and that because her husband liked to watch and then indulge in a spot of caning afterwards. I'm not into that kind of thing. \n\nDespite all that had happened on my travels though, despite the distance of time and place between us, I still suffered gut-wrenching pain over the distress, even anguish, I had caused Niamh. There were many occasions when alone in my room at night I became melancholic and shed tears over her. Yet when I thought about it I sometimes wondered if, in the long term, it hadn't been for the best. Our backgrounds had been so different that it might not have lasted. I hoped that Niamh had been able to find somebody better than me, someone who could give her the lasting love she deserved. \n\nThe year was drawing on towards autumn when I saw a newspaper article about the imminent skiing season in Aviemore. It noted that the numerous hotels and lodging houses always had vacancies for staff and people were invited to turn up and apply, they'd be sure to find somewhere. \n\nI'd heard of the ski resort at Aviemore but wasn't sure where it was so I borrowed an atlas from my landlady. Aviemore was in the Highlands, lying towards the north of Speyside, a valley which fell between three lots of mountains, the Cairngorms and Grampians to one side, the Monadhlaiths to the other. It looked as if all the towns and villages along the valley were small and surrounded by open country and it would be a pleasant change to get away from cities for a while. When I left the casino, my boss there gave me a decent bonus \"...to help you on your way, Marti. Come back anytime you need a job, you were very popular...\" he winked \"...especially wi' the ladies...\" \n\nI could have gone to Aviemore by train but decided to hitch to see some of the countryside\u2014by road it was about a hundred-odd miles. Again I struck lucky. A fellow guest in the b&amp;b, a gentle-faced elderly woman, said that she'd be able to drive me a good part of the way, as it turned out some eighty miles. She stopped the car at a crossroads on the edge of a village. \"This is where I turn off, dear,\" she said. Pointing ahead she added: \"Yon's Glenverie, you should be able to get a bus to Aviemore from here.\" \n\n* * * * * \n\nThe weather didn't look too promising. For all that it was only mid-afternoon, it was getting dark and the sky was heavy with ominous clouds. Scottish weather tends to be on the unpredictable side. Glenverie appeared small, comprising a single street with several small side roads off. A few minutes walk and I found a bus stop. I had hoped that the stop would have a timetable attached but of course it didn't. I noticed a police Land Rover parked a little way along the road, outside a police station, so I went in there to make enquiries. \n\nThe sergeant at the desk was a big solid-looking man with a ruddy face and a neatly-clipped moustache. \"Hello, Miss, what can I do for you?\" \n\n\"Could you tell me the time of the next bus to Aviemore, please?\" \n\n\"I'm afraid you've missed one, couple of hours back.\" \n\n\"When's the next bus?\" \n\n\"Aye, now let's see.\" He rubbed a square chin. \"This is Tuesday... Friday morning the next one.\" \n\nI'd heard tales of the infrequent late-year bus services in parts of Scotland but I'd never really believed them. Until now that is. \"Is there a hotel or something where I can put up for the night?\" \n\nHe shook his head. \"Our only hotel closed down when the owner retired and nobody's bought it yet. Tell you what, Miss, there's a small inn about three miles from here, run by a nice woman called Alison Richie. It's a bit off the beaten track but I'm sure Alison would give you a room for the night.\" \n\n\"Thanks. How do I get there?\" \n\nHe smiled. \"I'd hate for my own daughter to be out on the road with it getting dark. It's quiet enough here at the moment, I'll give you a lift in our Land Rover. Greg\u2014\" he shouted towards a back room, \"\u2014I'll be away for about half-hour. Look after the desk, will ye?\" \n\n\"Aye, Sarge,\" the hidden Greg called back. \n\nWe'd not gone very far when the Land Rover's radio crackled. \"Can ye get back here fast, Sarge, there's been a multi-car pile up on the A9. Looks really bad, ambulances are on their way.\" \n\n\"Sorry, lass,\" the sergeant said, \"I'll have to deal with this.\" He drove another few hundred yards to draw up next to a side road then stopped the vehicle to let me out. He pointed. \"Couple of miles up here you'll see the Lochverie Inn, it's on outskirts of a wee hamlet called Lochverie. My name's Ian Moore\u2014tell Alison I sent you and she'll see you right.\" With a little wave, he turned the Land Rover and headed back towards Glenverie. \n\nBy now the clouds were low and black and I hadn't gone very far when it started to rain, though perhaps rain isn't quite the right word. It was a thick heavy drizzle of the kind which soaks you through fast and thoroughly. The further I went up the road, the steeper it became and although I'm quite fit the combination of road and awful weather was enervating. By the time I saw the lights of the Lochverie Inn I was footsore, wet and chilled and utterly miserable, beginning to regret leaving my comfortable billet in Edinburgh. \n\nThe front door led me straight into a bar where I could hear murmurs of conversation. A number of middle-aged and elderly men were sitting around with various drinks in front of them and it was almost like a scene from a Western film: as I pushed through the doorway silence fell, heads turned and eyes stared at me. Then someone said: \"Welcome, young lady, but ye've picked a bad night to be out.\" \n\nThe speaker, a stocky man in a tweed suit, was sitting at the bar. He added: \"Why, lassie, you're soaked. I'm Doctor Logan, for my sins the GP in this benighted place. My prescription is a glass of good malt whisky to ward off the cold, say a Glenlivet or Glenmorangie,.\" \n\n\"Thanks, doctor, but I don't drink. I'm teetotal.\" I could almost feel a sense of shock among the customers. Most looked bewildered at such blasphemy\u2014a couple of centuries earlier and they'd have likely dragged me out to the nearest hanging tree.  ",
        "Dr Logan raised an eyebrow then shrugged. \"Six years in medical school and thirty years in practice and this is the first time my clinical judgment has been called into question. Ah well... I'll just have to call in another expert.\" He rapped on the bar and called out: \"Alison! There's a young woman out here in need of an angel of mercy.\" \n\nA woman came out from a back room and Dr Logan pointed dramatically towards me. \"Alison, this puir lassie's in dire need of warmth and comfort but she's refused a whisky.\" Then in a hoarse stage whisper accompanied by a friendly wink he said: \"She's unnatural\u2014she does'nae drink!\" \n\n\"You must be Alison Richie,\" I said, \"My name's Marti Howard. Sergeant Moore at the police station said you might put me up for the night.\" \n\n\"Aye, come away in the back, pay no attention to these old soaks. They think non-drinkers are on a par with excise men and tax collectors.\" Smiling affectionately at her regulars, she gestured towards the doctor. \"If he wasn't such a good medic I'd have drummed him out years ago.\" \n\n'The back' was a small and cosy room with a welcoming fire in the grate and thick heavy curtains shutting out the gloomy night. Now I was able to get a good look at Alison. She had a pretty, make-up free face, lightly freckled, and a mass of red-gold hair tied back with a chiffon scarf. She was slightly shorter than me but not by much and I estimated her age to be within a year or two, either way, of mine. Her figure was womanly and she was dressed for comfort in a heavy sweater and corduroy slacks. There was something else: she was one of these people who seem to radiate a natural warmth. \n\n\"C'mon\u2014Marti, you said?\u2014let's get you out of these wet things. You're from England\u2014holiday is it?\" \n\n\"Something like that...\" \n\n\"You've picked a poor time of the year for it,\" Alison said as she helped me off with my rucksack and jacket, \"Lord, girl, you're soaked to the skin.\" \n\n\"I've got dry clothes in my bag.\" \n\n\"Not now, you haven't.\" Alison held up my rucksack to show me where a strap had somehow broken so that the rain had penetrated. \"Don't worry. We're not much different in size, I'll lend you some of my things while yours are drying out. Now I'm going to run you a hot bath and when you've had that there'll be a meal waiting. Come with me and I'll show you your room.\" \n\n* * * * * \n\nThe next morning I felt like hell, shivering, muscles aching, sore throat. The drenching I'd received on the two-mile walk hadn't done me any good. Overall tiredness from some of the hours I'd been working probably made things worse. For someone whose health is usually near-perfect, this was upsetting. I put Alison's dressing-gown on and went downstairs to the kitchen. \n\nAlison took one look at me and sat me down in a chair. \"You don't look too good, Marti. I think you'd better get back to bed.\" \n\n\"I'll be okay.\" Even the tough me didn't really believe that. \"I'll have a cup of tea then pay you what I owe and get on my way to Aviemore.\" \n\nAlison put a cool hand to my forehead and shook her head. \"You'd not make ten yards from here. You're going nowhere, lassie, except back to bed, even if I have to drag you there. And don't fret, I'll not charge you tourist rates.\" \n\nI didn't have it in me to argue. I did as Alison told me and later in the day she got Doc Logan in to have a look at me. \"Ah, it's just a wee chill and I think exhaustion. A couple of days in bed for you, my girl, with aspirin and plenty of hot drinks and you should be all right.\" He shook an admonishing finger. \"This'll teach you not to refuse a decent malt whisky when it's offered.\" \n\nI was laid up for three days, sleeping much of the time during the first two. Alison took great care of me and by the third morning I was sitting up and feeling much improved. Alison brought me some breakfast and sat on the side of the bed to talk. \"You might be feeling better but you'd still best rest up here for a few days. Now, is there anyone I can contact for you to let them know you haven't been well? Family... husband...?\" \n\n\"No family worth mentioning and I'm a widow.\" \n\nAlison laid a hand on mine. \"Oh, I'm sorry.\" \n\n\"Don't be!\" My tone was abrupt and far more harsh than it should have been. \n\nA hurt look flitted across Alison's face and she took her hand away. Getting up to leave, she said stiffly: \"I'm sorry, I didn't mean to intrude.\" \n\nAshamed of myself, I reached out a hand to detain her. \"Wait Alison, please don't go\u2014it's me who should be sorry. You've been so kind to me and that was rude. It's just... well... it wasn't a good marriage. In fact, it was a fucking lousy marriage.\" \n\nAlison sat down again and her voice was sympathetic. \"Do you want to talk about it?\" \n\nI shook my head. \n\n\"Some other time then, perhaps. You'll find me a good listener.\" She grinned. \"I have to be with that lot in the bar nights.\" \n\nAfter a week of resting up, the thought of Aviemore began to lose its attraction. The Lochverie Inn was a pleasant little place, warm and comfortable, and the wild surrounding countryside and the abundance of fresh air seemed to have a way of calling out to me. Me, a city girl born and bred. There was also something comforting about being in Alison's company. In fact, I found myself becoming attracted to her but... Don't go there, Marti, I admonished myself, you've screwed up one relationship\u2014don't screw up a potentially good friendship. Anyway, for all you know Alison might have a boyfriend nearby. Not that I'd seen any evidence of that\u2014Alison seemed to go nowhere and she wore no rings although these days that didn't necessarily mean she had nobody. \n\nBut I spoke to her about staying on. \"That first night I was here, Alison, you assumed I'm on holiday. I'm not. I've been working my way round the country trying to escape some bad memories. I really like it here and wondered if I could work for you?\" \n\n\"Thanks, Marti, but I couldn't afford any wages. I have enough trouble just making ends meet here.\" She sounded genuinely regretful. \n\n\"Well, I wouldn't really need pay,\" I told her, \"I've got a regular small income from a rented property in England and I've got savings. Look, I know hotel work, I've worked as a barmaid, I've worked as a cleaner, I've done all sorts. The only thing I haven't done is work as a cook and I'm sure I could pick that up with a good cook-book. If you'd let me have bed and board I'll do whatever I can to help you out. If you get any other paying guests, then I can always sleep on your sofa.\" \n\nAlison thought for a moment then nodded. \"All right, let's give it a try\u2014I've got to admit some company would be good. You'll not be disturbed from your bed often, I'll not get many other guests this time of the year. Truth be told, Marti, I don't get many even at the best times. Bit off the beaten track.\" She looked wistful. \"There's a grand wee hotel in Glenverie I'd love to own, been empty for a while now and needs updating but it could be a little gold-mine\u2014there's a first-rate golf course several miles outside Glenverie and visiting golfers often have trouble finding accommodation nearby. I couldn't afford the hotel, though. I don't own this place, you see, just rent it on lease. I barely scrape by. The whole of Lochverie's much the same. All the land and property hereabouts is owned by a man called Andrew McCullough. He's the laird and everyone, me, the village store-keeper, crofters, even Doc Logan, rent from him.\" \n\n\"The laird? That's something like what used to be a squire in England, isn't it? Sounds a bit feudal to me.\" \n\n\"Aye, maybe it is but there's a fair bit of it in the Highlands. To be fair, Andrew's a decent man, it's his son Jamie's the one to watch. He acts as Andrew's business manager and he's a bit too full of himself, a real little dictator. Got an economics degree from Edinburgh University and thinks himself so much superior to the rest of us. Fancies his chances with me too but I can't stand him. He's asked me to marry him a number of times, can't get it into his thick head I'm not interested. Ah, enough of him. C'mon, if you're going to work here I'd better show you around...\" \n\n* * * * * \n\nWorking at the Lochverie Inn wasn't too onerous. I did most of the dogsbody work such as cleaning while Alison cooked simple meals for the casual lunchtime trade. In the evenings we just had our regular customers and I quickly learned their names and favoured drinks. I was surprised that Doc Logan, for all his advocating the curative powers of single malt whisky, never had more than one drink which he nursed until closing time. Alison told me that he had been widowed about three years previously and came to the inn for company. \n\nOne evening, when I'd been there for several months, a dour, elderly man known as Old Tam regarded me for a few minutes while I served his whisky then said: \"Well, Missie, ye may be English and ye may shun the drink, but ye're no a bad lass for a' that.\" \n\nAlison put an arm around my waist and gave me a little hug. \"I think you've just been accepted,\" she whispered. Her arm felt good and I was sorry when she took it away. I was becoming fonder of Alison all the time and I didn't know how to handle it. Times were when I had an urge to grab and kiss her but... I keep telling you, Marti, don't go there. During my disastrous marriage I had masturbated a lot and my fantasy had always been Niamh. Of late though when diddling myself, I found that Niamh had faded from my thoughts to be replaced by images of Alison. It was frustrating. \n\nSome days Alison would go out for supplies and would take me with her. She had a clapped-out old Toyota Corolla so we were able to go into Glenverie and some of the other small Speyside towns. One day she begged keys from the local estate agent and showed me round the empty hotel. It was a bit run down and in sore need of some TLC but I could see that it had loads of potential. I had a little pipe-dream while we were in there, Alison and I as partners running the place with great success. That's what it was though, a pipe-dream. \n\nWhile on these outings, Alison introduced me to a number of local people including Andrew McCullough and his son. The laird was pleasant and friendly enough but Jamie McCullough, although coldly polite, looked at me as if I was something he'd picked up on the sole of his shoe. While I was talking to Andrew McCullough Jamie beckoned Alison to one side and they seemed to have a heated discussion which ended with Jamie clamping his lips tight shut and stalking off. Alison told me later that he had once more proposed marriage and she had turned him down. \n\nI also met the Minister from the local kirk with his wife. Both could almost have been caricatures of austere Scottish Presbyterians, he tall and thin and stern-faced, she equally tall and thin and looking as if she'd enjoyed nothing more than reading sermons condemning the pleasures of the flesh. \n\n* * * * * \n\nEarly one afternoon, straight after lunch, Alison closed up shop because we'd had no customers and suggested a walk. I looked out of the window. \"Weather's a bit uncertain, isn't it?\" \n\nAlison's Highland burr was usually soft and gentle but she could lay it on thick when she wanted. \"Och, ye great soft peely-wally Sassenach, a wee bit o' weather'll do ye nae harm.\" \n\nWe stared at each other for a moment and then we both burst out laughing. \"Where shall we go?\" I asked. \n\n\"I'll take you to see Loch Verie, the real loch that the village is named after. It's about half-an-hour's walk over the hill. A bit of exercise and fresh air'll do us both some good.\" \n\nAlison was right, it felt good to be out in the fresh air, even if the sullen sky did threaten bad weather. There was a path of sorts leading up the hill. Starting from behind the inn it was toughish going, strewn with jagged pebbles and small rocks which meant taking great care where we walked. As we neared the crest I noticed a small building off to one side, something like a single-roomed cabin roughly fashioned from stone. \"What's that place?\" I asked. \n\n\"That's a bothy,\" said Alison, \"A shelter for travellers, walkers and the like. Look, there's the loch.\" \n\nWe had reached the top of the hill and continued on the downward path. The slope gradually became more gentle, evening out as we reached the loch. The ground beneath my feet started to feel soft and I could see muddy water oozing out from under them. \"Don't go any nearer,\" Alison warned, \"It gets pretty marshy near the edge and you could get stuck and lose a boot.\" \n\nThe darkened surface of the loch was still with not even a single ripple, reflecting the surrounding hills and mountains and the amassing blanket of cloud. It was like looking into a black magician's scrying mirror. A deep silence pervaded, not even a solitary birdsong breaking it, and the whole scene was one of unremitting bleakness. I shivered slightly. \n\n\"What do you think?\" asked Alison. \n\n\"It's sinister,\" I said, \"Almost scary\u2014makes you understand some of the old legends about evil fairies and monsters and the like.\" \n\nAlison considered. \"Aye, I suppose you've got something there. Me, I'm so used to it I wouldn't have thought that way. If you're still around, I'll bring you up here on a fine day in the summer when the heather's out on the hills. It's grand then, looks so very different.\" \n\nSuddenly some great splashes of rain hit us and Alison grabbed my hand to drag me back up the hill. \"We'd better get into the bothy before we get soaked.\" \n\nWe made it into the small hut just as the storm hit in earnest. I slammed the door shut and we heard rain hammering against the roof. The bothy was a surprise. I had expected it to be nigh derelict and filthy. Instead, it was obviously cared for if somewhat crude. I mentioned this to Alison who said that local people always made sure the bothy was kept in good order. A bench ran along one wall, long enough for several people to sit, and there was a makeshift table holding a number of candles, several in metal candlesticks, and five or six boxes of matches. Alison busied herself lighting a couple of the candles and we sat side-by-side, almost touching. \"It shouldn't last too long,\" she told me, \"Some of these storms pass quickly, maybe half-an-hour or so, perhaps a little longer.\" \n\nWe sat in silence for a while before Alison said: \"Are you happy here, staying at the inn?\" \n\nI nodded slowly. \"Could be content's a better word. I'm more content here than I've been for a long time.\" \n\n\"Maybe it's none of my business, Marti, but at times you do seem to be sorely troubled. Is it because of your bad marriage? It might help you to talk to a friend and I hope I'm your friend.\" \n\n\"Thanks, Alison. Yes, perhaps you're right\u2014bottling things up isn't good. Okay, I'll tell you about it, I reckon it'll be a relief. If I'm to be honest with you, though, there's something you must know at the outset: I'm a lesbian. I'm telling you that because it's relevant.\" I don't know what I expected, Alison to run away screaming perhaps, leaving me talking to myself in an empty bothy. I hoped not because my attraction to her was as strong as ever, futile as it might be. She didn't run\u2014instead she simply nodded so I continued: \"There was a girl called Niamh...\" \n\nIt all spilled out then, every bitter word about the events in my life which had eventually led me to Lochverie. By the time I'd finished the account, tears were streaming down my face, mixed tears of rage and remorse. Alison put an arm around my shoulders and held me close. She smelt clean and lovely of some lightly-scented soap. \"Didn't you try to get back with Niamh after Paul died?\" she asked. \n\nI sat up and wiped my eyes. \"No, I never saw her again. It was too late by then anyway\u2014even if she'd been willing to take me back, I don't think she'd have ever trusted me. Anyway, I'm not sure it would have lasted long-term, I'm probably too much of a rough diamond and she's too much of a young lady. No, it's okay Alison, I'm over Niamh now, romantically that is. It's the guilt that's stuck, I can't seem to rid myself of it. I'd like to see Niamh, to tell her what happened if only to let her know I'm not a complete bitch.\" \n\n\"I don't think you're any kind of bitch,\" Alison soothed, \"only a poor, troubled soul through no fault of your own, trying to find your way.\" She looked up towards the roof of the bothy. \"I think the worst of the rain's stopped. Let's get back before it starts again.\" \n\nThe downward path towards the inn was slick and muddy following the downpour and I felt myself slipping several times. \"Here, take my hand,\" said Alison and we supported each other the rest of the way. Alison unlocked the door and as we entered the bar she suddenly pulled me towards her and kissed me firmly on the mouth. \"There, I've wanted to do that for a long time.\" \n\nI had been dreaming of kissing Alison\u2014more than kissing even\u2014but her move was so unexpected I was taken aback. My shock must have showed for she said: \"I'm sorry, Marti, have I done the wrong thing?\" \n\n\"No... not the wrong thing... it's just... you...\" \n\nShe took both of my hands in hers. \"Marti, I've known what I am since I was a lass. You didn't think the big cities had an exclusive on gay women, did you?\" \n\n\"No... but you... I didn't realise... you took me by surprise ...\" \n\n\"And I didn't guess about you until you told me,\" Alison commented, \"I reckon neither of us has got very good gaydar. So what do we do now, Marti?\" \n\nIn reply, I wrapped my arms around her and returned her kiss. \n\n* * * * * \n\nBut it went no further than that, not for some time anyway, and that was my fault. Alison was keen to take our relationship to the next step immediately and was forthright about it. Weather permitting, we'd taken to having a long daily walk in the hills. We automatically held hands now or put our arms around our each other's waists and both felt good. Yet I couldn't stop thinking about the way my affair with Niamh had ended and didn't want to repeat the disaster with Alison. All the one-night stands I'd had didn't matter for that's just what they were, one-night stands. We'd said goodbye in the mornings and that was it. But I could see long-term potential with Alison and wanted to be sure that it was right. \n\nOnce we were standing near the bothy looking down on Loch Verie when Alison said: \"Look, Marti, I'm very attracted to you and I think you are to me. We could be lovers now, so why are you holding back?\" \n\n\"I'm very attracted to you too, Alison, have been almost since I came here. But I screwed up one relationship horribly and I don't want to wreck another. That's why I'd like to take things easy for a while, see how things go between us.\" \n\n\"Screwing up that relationship wasn't your fault, can't you accept that? You thought you were protecting Niamh. You didn't know Paul was lying to you. From what you told me, it sounds as if he was very plausible. Sociopaths often are.\" \n\n\"I'm sorry, Alison,\" I said, \"If it'll make things easier for you, I'll leave. Maybe try Aviemore after all.\" \n\nTears came to Alison's eyes and there was quiet exasperation in her voice. \"No you don't! Don't you dare think I'm letting you slip through my fingers. Okay, Marti, we'll play it your way, see how things go\u2014I'll wait for you as long as it takes. At least say I can kiss you sometimes.\" \n\n\"Yes, I'd like that.\" \n\n\"So you bloody well should, you great daft Sassenach. Come here!\" Alison pulled me close and gave me a long kiss. I wrapped my arms about her, feeling her tears damp against my face and I tightened my embrace. I think that was the moment I fell truly in love with Alison. God, Marti, hope and pray that this turns out right and will go the distance I told myself. \n\n* * * * * \n\n\"We're going to have a wee break in Inverness, three days,\" Alison told me. ",
        "My attention was on something else and I heard her but didn't hear her if you can understand that. \"Okay, I can look after the inn for you,\" I replied. \n\nAlison sighed. \"I said we, that's 'we' as in you and me. I've booked accommodation in a decent hotel.\" \n\n\"But Alison, you can't afford it\u2014you're barely getting by here.\" \n\nAlison grinned. \"Professional courtesy\u2014the owner is a cousin of mine and we're very good friends. He's given me a good discount, a massive discount. To set your mind at rest, it's free as he has some vacancies right now. If you're worried about costs, then you can pay for our meals.\" \n\n\"That's fine. But who'll look after the inn?\" \n\n\"Nellie Cole, she's the one who ran the hotel in Glenverie. Likes to keep her hand in although she's retired. She's helped me out before when I've needed a break.\" \n\nAnd so it was that we found ourselves in the lobby of a very pleasant hotel in the centre of Inverness. The owner, burly and bearded and introduced to me as Andy, came out from behind the counter to envelop Alison in a bear-hug. I admit to feeling a pang of jealousy as they embraced, even though Alison had told me beforehand that cousin Andy and his partner were gay men. \"You wait here, Marti,\" Alison instructed, \"I'll go and check us in.\" She followed Andy to the counter, the two of them whispering to each other. Then Alison called out: \"Come along, Marti.\" \n\nWe went upstairs and Alison unlocked a door. The room was large, light and airy and I could see an en-suite to one side. There were armchairs, a huge TV and a coffee table and the room was dominated by a king-sized bed. \"Very nice,\" I commented, \"So where's my room?\" \n\nAlison laughed and threw her arms around me. \"This is our room,\" she said. \n\n\"Alison Richie! You've conned me!\" \n\n\"Yes, I was getting fed up with waiting for you to sort yourself out so I'm presenting you with a fait accompli. Tonight, Marti Howard, you are going to find yourself well and truly seduced.\" \n\nI admitted defeat. \"Why wait for tonight?\" \n\n\"Thank God you've seen sense at last,\" Alison said. \n\n\"Guess I'm just a daft Sassenach,\" I replied, \"not recognising real treasure when it's right in front of me.\" And then I kissed her. We stood there kissing for a long time, our lips slightly parted, until Alison took my lower lip between her teeth and gently sucked on it. Her tongue flicked out to tease my lips and I met it with mine. We explored one another's mouths and I could feel my juices starting to run. At last Alison broke away slightly, breathing heavily. \n\n\"Are you going to undress me, Marti?\" \n\n\"I'll draw the curtains,\" I said. \n\n\"Don't bother, it's only shops opposite and if anyone sees us it'll probably bring the customers in for the show. Now get these clothes off me.\" \n\nI leaned in to nuzzle at her jawline and throat. Her skin was soft and warm and she tasted clean and fresh. I slipped my hands beneath her sweater and drew it off very slowly, caressing her torso as I went. When Alison was free of the garment I bent my head to kiss her cleavage before reaching behind to unclasp her lacy, emerald-green bra which fell away to the floor. Her body was softly rounded while her breasts, larger than mine, had long pink nipples already standing erect. \n\nI took one in each hand as my lips sought out her throat, kissing and licking from one side to the other. Playing with her nipples between finger and thumb, I allowed my mouth to find the lobe of an ear, nibbling at it and then exploring the whole ear with my tongue. Alison moaned, putting a hand behind my head to keep me close. I pulled away to lower my head and take one of those lovely nipples and a little of the breast into my mouth, swirling my tongue about it as I sucked. It was far and away one of the sweetest boobs I had ever tasted. \n\n\"That's lovely, Marti,\" Alison gasped, \"but I've still got other clothes to come off.\" \n\nI undid the zip at the side of her plaid skirt, letting it fall and leaving Alison wearing only frilly French knickers which matched her bra. I slipped a finger into a leg of the knickers and ran it along the outside of her cleft. She was already a little wet and I sniffed at my finger to enjoy her natural scent before licking it off. I removed her knickers very slowly, revealing a glorious bush of red-gold hair, thick on her mound but sparser around the plump lips of her vulva. I pressed my mouth to her honeypot in a long kiss, but without using my tongue, before standing again. \n\n\"Your turn to undress me,\" I told her. \n\nMy shirt was long and tucked inside my jeans so the jeans were the first to go. As Alison lowered the zip her knuckles brushed against my crotch sending a little jolt of electricity through me. \"Why, Marti,\" she said when the jeans were fully off, \"you should wear a skirt sometimes, you've got beautiful legs. And you look really sexy in just that shirt.\" If Alison had said that to me in a plain room, I might have thought she was only being kind, but I could see myself in a wall-mirror and realised she was right. My legs did look good and the shirt without jeans did have something. \n\n\"There's more to go,\" I reminded her. \n\nShe gave me a little kiss. \"Spoilsport, I was enjoying the view.\" \n\n\"You might enjoy it more when I've got nothing on. I'm sure enjoying what I'm seeing.\" \n\nFor each shirt button she unfastened, Alison gave me a fairy kiss, sometimes on my lips or on my throat or on my ear-lobes. At last my shirt dropped and Alison reached behind me to unfasten my bra which was rather plain compared with hers. She eased it from my shoulders then said: \"What lovely, lovely boobs you have, Marti.\" She gave each one a kiss and then wrapped me in her arms so that our breasts were crushed together, stiff nipples rubbing against stiff nipples. By now I could feel kitty tingling and oozing juice. \n\n\"You've forgotten something, Alison,\" I told her, nodding downwards. \n\n\"Oh yes.\" Alison ran a finger over my panty-covered slit. \"I'd better get these off you quickly, they're soaked.\" She knelt and pulled my panties down, resting her face against my mons and inhaling deeply before running her tongue quickly along the cleft. \"Mmmm, you smell good and you taste better.\" \n\nShe rose and we came into each other's arms again. \"You're right,\" she said, \"the view is great.\" Alison thrust one of her legs forward so that kitty rested on her thigh and I rubbed my hips back and forth, smearing her with thick juices. I moaned as jolts of pleasure shot through me. Holding her close with one arm, I sought out her pussy with my free hand and found that by now it was as wet and slippery as mine. I fingered her slit and then slowly penetrated her with two fingers which I almost immediately withdrew. They were thick with glistening lubrication. \n\n\"Please, Marti, don't stop.\" \n\n\"I'm not stopping,\" I told her, \"I just want to taste you.\" I sucked Alison's creamy wetness from my fingers and then returned them to her hot, clinging vagina. I slowly finger-fucked her as I continued to ride her thigh. Her pussy was now making lovely sloppy squelching noises as my fingers moved inside her. \n\nAlison nibbled at an ear. \"If you really want to taste me,\" she whispered, \"why not drink straight from source?\" She pushed me towards the bed and laid me on my back before straddling my face so that I was staring into her pussy. The lips were swollen and slightly parted so that I could see delicate-pink inner lips. Her clit was quite large and already protruding from its hood. Alison lowered herself to my mouth and, clutching at her bottom to pull her closer, I pushed my tongue into her before starting a careful exploration of all her little nooks and crannies. I loved the taste of her, sweet, citrusy and tangy. \n\nAlison reached back to finger and then enter my pussy and it was my turn to make lovely sloppy squelching noises. Her thumb brushed against my clit and I gave a little cry. Alison did it again so that I cried out once more as my hips jerked. She continued to caress me this way and I knew that I wouldn't be able to hold on for much longer. I took her clit between my lips, teasing it with the tip of my tongue and it was her turn to cry out. We both redoubled our efforts. I was on the brink and from the noises she was making, I knew that Alison was too. We both came. \n\nThere wasn't much of a time lapse between our orgasms, seconds, no more, and we were both emitting little cries of ecstasy. As we fell back to earth from the heavens, we held each other close, our lips and tongues fervent in a succession of kisses. \"I taste better from your lips than I do from my own fingers,\" Alison gasped, \"Now lie back, Marti, I want to eat you.\" \n\nI obediently turned onto my back and starting at my throat, Alison slowly kissed her way down my body. She spent quite a time on my boobs, playing with my dark-red nipples, sucking and licking and nipping gently. When she'd finished with my pussy, I decided, I'd give her breasts the attention they deserved. In the meantime... My nipples were hard and when Alison left them to continue her downward journey, I began to play with them myself. A warm tongue wiggled its way into my belly button and fingers slid into my pussy again, seeking out my magic spot. \n\nAlison moved my legs apart and she eased my labia open so that she could blow tiny feathers of breath onto my clit before using her tongue. She spread my labia farther so she could suck at my puffy inner lips then sucked at my clit just as her probing fingers found my g-spot. I had my second orgasm--it wasn't as powerful as the first but it still did me the world of good. \n\nAs Alison came back up to cuddle me, I gasped: 'Why the hell have I kept us waiting for this? What an idiot.\" \n\nShe stroked my cheek. \"It's alright, Marti, we've got there in the end.\" \n\nI think we both fell asleep then. It wasn't for long but when I awoke I found that I had one of Alison's gorgeous nipples in my mouth and that she was smiling happily in her sleep. I felt between her legs and found that she was still wet so I looked at her pussy to see thick white come clinging to her lips and hairs. I scooped some up on a finger and licked it with enjoyment. Then those wonderful big nipples called to me again so I smeared both with more of Alison's come and started to suck and play with them in turn. Alison woke up then. \n\n\"God, Marti, you're getting me all randy again.\" \n\n\"Good,\" I mumbled, \"Best way for you to be.\" \n\nAlison opened her legs for me and I knelt between them, lowering myself until our flowing honeypots were joined together. Her arms went around my neck and her legs wrapped around my backside as her lips and tongue sought mine. \"You taste of pussy,\" Alison said, \"I love it.\" By now the room was becoming thick with a strong smell of sex and woman-come. Our hips continued to jerk in unison and we both squealed as our pearls met and rubbed together. Alison's clit was much larger than mine and it felt as if a tiny dick was pleasuring me. \n\n\"I'm almost there, Marti,\" she gasped, \"I'll try...\" I think she was going to try to hold on for me but too late. She cried out loudly as she came. Feeling Alison getting there was enough to tip me over the edge and I popped off seconds after she did. \n\nWe lay clasped together for several minutes before Alison unwrapped her legs from round me and we fell back. I glanced down and saw that both of our bushes and pussies were liberally soaked with mingled come. I couldn't resist and turned round, plunging my face and tongue into Alison's pussy. She tugged at me until she was able to reach my kitty and we both started licking and sucking avidly. We didn't last long--this time we went off together and we made quite a lot of noise about it. It was a good ten minutes before we could turn ourselves the right way up to embrace and kiss. \n\nWe took a shower together later then went downstairs. Andy said: \"Room okay, girls? You've been a fair while up there.\" \n\n\"Room's really comfortable, Andy,\" I assured him while Alison added: \"We were a bit tired so we had a wee nap.\" \n\nAndy grinned. \"Aye, I like that kind o' wee nap myself.\" \n\n* * * * * \n\n\"Where are we going?\" I demanded for what seemed like the twentieth time. \n\n\"Surprise,\" Alison answered, again for the umpteenth time, snatching at my hand and pulling me along the street. At last we stopped outside a plush-looking hairdressing and beauty salon. Alison pointed. \"Here's where we're going.\" \n\nI glanced at the price list in the window. \"Bit expensive, Alison.\" \n\n\"Marti, when will you learn to trust me. This place belongs to Andy's sister, Marie. I've got privileged customer standing here. C'mon.\" She dragged me through the door. Inside a receptionist gave a huge smile of greeting and told Alison she was expected. A pretty brunette came running over, hugging Alison closely. Again I felt that pang of jealousy. Silly of me seeing they were cousins. I guess I had it bad now. I heard Alison ask \"...how Jack and the bairns...\" were so I guessed that Marie was straight anyway. \"And this is my very special friend Marti,\" Alison introduced me. \n\nAlison had the works and when Marie had finished with her she looked gorgeous, so much so that if we'd been alone I'd have ravished her on the spot. \"Now it's your turn, Marti,\" said Marie. Ignoring my protests she placed me in a chair back to the mirror. \"Who cut your hair last?\" I could detect disapproval in her voice. \n\n\"I usually just hack at it myself.\" \n\n\"Hmmm! What do you use, knife and fork?\" Laughing, she added: \"Right, let's see what I can do for you\u2014I always did like a challenge.\" While Marie worked on my hair, another girl started to apply make-up. At the end of an hour, they turned the chair so I could see myself in the mirror. \n\nI have never bothered a great deal with my looks, never thought much of them. I had always been vaguely surprised that Niamh had fancied me, not to mention all the women I'd had one-night stands with, and then finally Alison. Perhaps they had all seen something that I couldn't. Paul didn't count because he wasn't all there, he didn't really fancy me that way, just wanted another possession. Neither had I ever considered myself butch or femme, I was simply me and that was it. But the woman looking back at me from the mirror was... well, no great beauty but certainly pleasant-looking and feminine. Marie had given me a short, feathery cut which repaired the damage I'd done over the years and flattered me immensely, while the make-up girl had wrought what seemed to me to be a minor miracle. \"Thank you,\" I whispered, \"Thank you so much.\" \n\nAlison took my hand in hers. \"Marti, you look so lovely.\" \n\nWe travelled home to Lochverie in the afternoon and that night I moved into Alison's room and bed. \n\n* * * * * \n\nOne morning when we'd been lovers for about two months, Alison eased her way from the bed and slipped on a light bathrobe before going to the window where she stood gazing out into the early light. I got up too and stood behind her, wrapping my arms around her waist as I kissed the back of her neck. Alison put her hands over mine and pressed them to her. I could see a light rain falling outside and it reminded me of a short poem I had once read, loved and memorised. Almost unconsciously, I quoted aloud: \n\n\"Oh Westron Wind, when wilt thou blow \n\nThe small rain down shall rain? \n\nChrist! that my love were in my arms! \n\nAnd I in my bed again.\" \n\n\"That's so beautiful,\" Alison said, \"Who wrote it?\" \n\n\"Anonymous as far as I'm aware,\" I replied, \"All I know is that it's fifteenth or sixteenth century, perhaps earlier.\" \n\nAlison turned in my arms to gaze at me, eyes solemn. \"Marti, there's something I need to tell you and please don't take it badly. The thing is... well... I love you. Have done for a while now but I didn't want to risk scaring you off. Couldn't hold my tongue any longer\u2014guess that poem triggered it.\" \n\nMy world seemed to slow down for a moment, and then: \"You wouldn't have scared me off. I love you too, Alison.\" I gave an involuntary sob and could feel tears trickling down my cheeks. \n\nAlison raised a hand to my face. \"Why, Marti, what is it?\" \n\nIt took me a few long seconds to find my voice which trembled when I spoke. \"I said I love you. I've never said that to anyone before. I've never been able to.\" \n\n\"Not even Niamh?\" \n\n\"Not even Niamh.\" \n\n\"But why not, Marti?\" \n\n\"I guess it's the way I was brought up.\" I could feel my voice going again and fought to gain control. \"I can't remember either of my parents ever telling me they loved me. I can't remember either of them hugging me, not even when I was very small. Too busy wondering where the next bottle was coming from, I suppose. I was lucky to be grunted at. As for my brothers, well, to them I was pointless unless I could be useful in one way or another. I suppose you could say I was pre-programmed not to admit to love. And now I've been able to say it to you and mean it, and that's why I'm crying like a kid. Because at long last I've been able to show some humanity.\" \n\n\"You're in a different place now, Marti,\" Alison told me,\" a place you'll find all the love you need.\" She leaned in to kiss my lips and gestured towards the window. \"The small rain is raining down and your love is in your arms.\" She bent to kiss one of my nipples as she dropped her wrap. \"And here's the bed, so let's be in it again.\" \n\nWe made sweet love then and when I came, my tears flowed once more. \n\n* * * * * \n\nI was happy with Alison. No longer only content but genuinely happy although my feelings of guilt over Niamh remained. However, life in general was fine although one evening Jamie McCullough tried his best to ruin the good relations between ourselves and our customers. He misjudged the mood of his audience. \n\nIt was about nine p.m. and the bar held its usual quota of customers including Doc Logan and Old Tam. There was a good fire in the hearth to counter the evening chill, the whisky flowed and every once in a while some of the old boys would give us a traditional song, usually a haunting melody in Gaelic. I felt so much at home in the Highlands now and knew for sure that I would never want to leave. \n\nThen suddenly the door crashed open and Jamie lurched in. It was immediately obvious that he'd been drinking although he was aggressive rather than falling-down drunk. Approaching the bar, he said to Alison: \"Now I know why you've never taken up any of my offers of marriage.\" He jabbed an accusing finger in my direction. \"It's all because of this English slut.\" \n\n\"Don't you dare call Marti a slut,\" Alison snapped, \"And the reason I've never taken up your offers of marriage is because I can't abide you. You, Jamie McCullough, are an obnoxious brat. Anyway, I was refusing you long before Marti came on the scene. Go away and grow up and maybe one day you'll find a girl who'll put up with you.\" \n\n\"Go home, Jamie,\" said Doc Logan, \"you're drunk and making an idiot of yourself.\" \n\n\"You stay out of this, Doctor,\" Jamie snarled, \"I said slut and I mean slut. Listen to me, you lot. You want to know what's going on with these two? They're queers! Aye, female queers! I've seen them up on the hills when they've not realised I was around. I've seen them, all lovey-dovey, holding hands and kissing and cuddling like a pair of randy teenagers. They're disgusting, they're lesbians!\" He spat the last out as if it were a dirty word, likely to contaminate people. \n\n\"Och, is that all?\" Doc Logan laughed. \"Jamie, you're not telling us anything we didn't already know.\" \n\n\"Aye, we already knew!\" Old Tam had risen to his feet. \"We knew and we don't care! We'd sooner drink wi' these two lassies than wi' any number o' the McCulloughs! Isn't that right lads?\" He raised his glass. \"Here's tae Alison and Marti!\" ",
        "I felt a lump in my throat when all the other old boys stood up and drank a toast to Alison and me. \"Go home now, Jamie,\" I said quietly, \"You've lost.\" \n\nHe turned on me, his face an ugly mask. \"You perverted English bitch, if you were a man I'd smash your face in!\" \n\nI shook my head. \"For a supposedly intelligent person, you're really being stupid in front of all these witnesses. I wonder what Sergeant Moore would say\u2014so far you've been racist and homophobic, both hate crimes, followed by threatening behaviour with intent to cause bodily harm. Don't worry, though, I won't bring any complaints against you, Jamie, because you're all mouth and no trousers. \n\n\"If I were a man, you wouldn't have threatened me like that because deep down you're just a pathetic gutless wimp. I've been used to genuine hard cases since I was a kid, so a little prat like you doesn't impress me. Still, if you want to smash my face in, don't let my sex stop you. But then, you don't know how well I can defend myself, do you?\" I fixed him with a menacing 'I'm dangerous' glare, a trick Nick Jessop had taught me, honed to perfection in the military police. \n\nIt must have looked good for a shadow of fear crossed Jamie's face. He tried one last bit of bluster. \"Ah, I wouldn't soil my hands on you.\" As he reached the door he turned and shouted: \"You've not heard the last of this, Alison Richie!\" \n\nAs the door slammed shut behind him, Doc Logan said: \"Be careful now, girls, Jamie's a vindictive wee shite when he doesn't get his own way.\" \n\nAlison nodded. \"It's okay, Doc, I know what Jamie's like. He'll find some nasty, sneaky way of trying to get his own back.\" She peered closely at the doctor. \"Did you really know about me and Marti?\" \n\nDoc Logan winked. \"Well, we do now.\" The whole bar erupted with laughter. \n\nLater, when the inn had emptied and we were clearing up, I asked Alison: \"What do you think Jamie will do?\" \n\n\"Whatever it is, it'll be underhand. For a start, he'll probably spread the word about us round the village and Glenverie but I'm sure it'll backfire. Oh, we'll get the cold shoulder from a few but most folk dislike Jamie so much they'll treat us like heroines just to spite him.\" \n\n\"What about the Minister? He'll probably give us a hard time.\" \n\nAlison started laughing so loudly it was almost infectious. When she'd calmed down a little, Alison explained: \"The Minister is the least of our worries\u2014he and I have an understanding. There's a night club in Edinburgh for gay men and women, a bit like that Guys &amp; Dolls place you told me about. I was there once dancing with a girl and we bumped into someone. I turned round to apologise and there was the Minister dancing with a very pretty young man. We've got a pact of mutual silence. So you see, when Jamie's poison reaches his ears, I think he'll be preaching forbearance and the wickedness of malicious gossip.\" \n\n* * * * * \n\nA few days later I received three letters, one a bank statement, one a statement of account from the letting agent in the city. Usually this was all the mail I ever had. Since being at the Lochverie Inn I hadn't needed to spend much money and so my bank balance was more than healthy. The third letter was on heavy, good-quality notepaper headed 'Partridge &amp; Co Solicitors' and asked me to call their office as soon as possible to arrange an appointment. When I called, I spoke to a secretary who told me that Mr Partridge was absent on business; however, she could make the appointment for any date that suited me within the next week or two. \n\nI explained that I now lived in the Scottish Highlands. \"It's a long way to come. Can't we deal with this over the phone? Or can you at least tell me what it's all about?\" \n\n\"I'm sorry, Miss Howard, I know nothing of the matter. I only know that Mr Partridge said it was better not to conduct this business by telephone or mail.\" \n\nAnnoyed a little but intrigued too, I made a provisional appointment and then sought Alison out. Showing her the letter, I said: \"Why don't you come with me? We can turn it into a kind of mini-holiday. Make it about a week\u2014Nellie Cole will probably be happy to run the inn. I'll be able to give her a decent week's pay and I can afford the rail fares and a reasonable hotel.\" \n\nAlison looked doubtful. \"I've never been to England, never been outside Scotland in fact.\" \n\n\"So live dangerously. Don't worry, sweetheart, we don't all have horns and fangs and if we meet any who do I'll protect you.\" \n\nThe day we were due to travel, Alison had a letter. We were about to get in the taxi for the nearest railway station when the postman arrived. Alison took the letter and stuffed it unopened into her handbag. We had been on the Edinburgh train for about forty-five minutes when Alison remembered the letter, took it out and read it. \"Oh fuck!\" she hissed. An old dear sitting on the other side the aisle glared but Alison didn't notice. I'd never heard Alison curse before so I knew it had to be something serious. \n\nShe passed the letter to me. \"Jamie's revenge.\" \n\nThe letter said that in accordance with the property contract terms, six months' notice was given that leasehold rent on the inn would be increased by fifty per cent. \n\n\"Jesus! Can he do this?\" \n\nAlison nodded unhappily. \"I think so. The contract says that the leaseholder may apply any appropriate increase having given six months' notice. Unfortunately the contract doesn't specify what an appropriate increase is. So far it's been nothing more than one or two per cent a year but now... well, looks like Jamie intends to drive me out.\" \n\nI held her hand in mine and gave it a squeeze before lifting it to my lips for a gentle kiss. \"We've got six months. We may be able to find a way to beat the little shit.\" \n\nNow \n\n\"...Please, Niamh, if you'd just give me a few minutes...\" \n\nShe made a dismissive gesture. \"You'd better go, Marti. My wife'll be here with our drinks any moment. Just go, please.\" \n\nI suppose I deserved it. I turned away. As I did so, from the corner of my eye I had an impression of another woman approaching the table and a voice said: \"Who was that, sweetheart?\" \n\n\"Just someone I used to know,\" I heard Niamh reply, \"Nobody worth bothering with.\" \n\nChrist, but that hurt. I guessed I was meant to hear, and I know that from Niamh's viewpoint it was fully justified, but that didn't stop it hurting... \n\nIt was almost time for me to see Mr Partridge. \n\n* * * * * \n\nMy preconceptions about the solicitor were way out. With a name like Partridge I expected someone small and chubby and balding, Pickwickian in appearance, lurking in an ancient office surrounded by thick dusty files bundled up and tied with red ribbon. Instead, Mr Partridge was probably mid-thirties, tall with an expensive-looking haircut and smartly dressed in a charcoal-grey suit. I recognised his tightly-knotted tie as that of some smart cavalry regiment and his office was as modern and immaculate as he himself. His desk was mostly clear save for a computer and In and Out trays. There was only one file to be seen and that was a neat folder lined up exactly with the edge of his desk. \n\nHe wasted no time with pleasantries or chit-chat. Having offered me coffee, which I refused, he opened the file and got down to business. His voice was dry and his speech precise. \"I believe the name Mr Harry Chadwick is familiar to you.\" \n\nI nodded while my thoughts took an obvious path: Oh God, is he having regrets after all this time, does he want the house back? Well, he can have the bloody thing! \n\n\"I don't know how well you knew him,\" Partridge said, \"but you may be sorry to hear that he died a few months ago. He had been very ill for some time.\" \n\nOh... obviously my suspicions were wrong. Funny, yes I was sorry to hear it. Harry Chadwick had done his best to make amends for his louse of a son. \n\n\"Anyway,\" the solicitor continued, \"he has left you a sum in his will, a substantial sum. I hadn't contacted you earlier because of what with his personal and business interests and all the tax implications, probate has taken up a great deal of time.\" I must have seemed disinterested for he peered keenly at me, his expression slightly puzzled. \"I must say, Miss Howard, that you don't give the impression of wanting to know more about your legacy.\" \n\nI shrugged. \"What's the point? Whatever he's left me, that bitch of a wife of his is bound to contest the will and take it from me. And I can't afford to fight her in the courts.\" \n\nFor the first time, Partridge smiled. \"My client was a very astute man and he anticipated that. Attached to his will are three affidavits, each signed by an independent psychiatrist, each one confirming that he was of sound mind when making his will. Now apart from a few legacies to people such as yourself, the bulk of his estate goes to Mrs Chadwick. However, he stipulated that any beneficiary\u2014any beneficiary\u2014who contests the will shall forfeit their legacy. Believe me, Miss Howard, the will is rock solid. Mrs Chadwick, while being a... shall I say a difficult woman, is not a stupid one. If she contested your legacy, she would risk losing a few millions. Oh, as his wife she might succeed in having parts of the will overturned but it would take a very long time and cost her a great deal of money. I think she would sooner grudgingly allow you your legacy rather than chance forfeiting some of her own.\" \n\nHe scribbled some figures on a notepad and passed it to me. \"This is your legacy.\" \n\n\"Christ!\" I couldn't help myself. \"That much?\" \n\nThe solicitor nodded. \"That much, and net of taxes. Mr Chadwick also left this for you.\" He passed me a sealed envelope. It contained a single sheet of paper, a handwritten letter dated almost a year previously. \n\nDear Marti, \n\nMy doctors have told me that I haven't got long now so I have rewritten my will to include you. Please don't refuse this gift, it is yours to do with as you want. It is little enough considering the misery my family have brought you and is my way of trying to apologise. \n\nGoodbye, Marti, and God bless you. \n\nHarry Chadwick \n\n\"There is also the house,\" Partridge said, \"The most recent tenant left a week or two ago so the house is currently empty.\" \n\nThe house. I didn't really want it now that Harry Chadwick had gone, nor was I bothered about the rent. \"Would you put the house on the market and handle the sale for me, Mr Partridge?\" \n\nThe lawyer smiled again. \"Mr Chadwick also anticipated that and left me a sum of money to buy the house from you at the current market value together with sufficient funds to cover legal and estate agent's fees. I can then enter the house as part of the estate and Mrs Chadwick need be none the wiser. You may not know it but property prices in the city have soared enormously over the past few years. The house is worth a lot, much more than your legacy.\" \n\n\"So including the legacy and the house...\" \n\n\"...you will receive something in excess of half-a-million,\" Partridge finished, \"I have prepared this statement for you...\" handing me another envelope \"...which shows exact figures. I'm afraid there are quite a lot of legal documents for you to look at and sign. If you would like to come and see me tomorrow\u2014shall we say the same time?\u2014I will have them ready for you to take away and study at your leisure. We can then arrange another appointment to finalise matters.\" \n\n* * * * * \n\nI told Alison about Harry Chadwick's legacy and showed her his letter and Mr Partridge's statement of account. She looked at the final figure and her face became at first thoughtful and then unhappy. \n\n\"What's the matter, sweetheart?\" I said. \n\nShe shook her head and there was a catch in her voice as she replied. \"I guess that with all this money you'll be wanting to stay here?\" \n\nSo that was it, Alison was afraid that I was going to take the money and abandon her. \"Yes,\" I told her, \"I'll be wanting to stay here... until all this legal business is sorted out. And then I'll be coming home with you to Scotland. That's my home now. Wherever you are, that's my home, for as long as you want me.\" \n\nAlison's expression brightened and she threw herself into my arms. \"I reckon that'll be forever, then,\" she said. \n\nWe hugged for a long time and then I said: \"I know exactly what we're going to do with the money. But first of all, want to get married?\" Good God! What a clumsy proposal, it couldn't have been less romantic if I'd tried, impulse got the better of me. \n\n\"Do you really mean that?\" asked Alison. \n\n\"With all my heart, because I love you so much,\" I assured her. \n\nHer face filled with joy. \"Yes, Marti, yes, yes, yes.\" She kissed me and hugged me even more tightly. \n\n\"Then we're going to buy that hotel in Glenverie and modernise it and turn it into the best damned small hotel in the Highlands,\" I continued, \"If it's leasehold, then we'll buy the freehold so we're not beholden to anyone else. And I'll bet that Doc and the others will follow us. Andrew McCullough and his horrible son can stick their leasehold inn up their arses.\" \n\n* * * * * \n\nIt was quite a bundle of papers Mr Partridge had given me and I didn't fancy sitting on a hotel bed with them spread out around me, nor did the idea of studying them in the hotel's bar appeal. Then I realised that I was very close to the old Central Library. If it hadn't metamorphosed into one of the ultra-modern touchy-feely type of library, it would probably be the best place. As I recalled, it had a spacious old-fashioned reading-room, ideal for my purposes. There had been a number of modernising changes to the ground floor but nothing had altered upstairs, the reading-room being exactly as I remembered with shelves full of reference books and a number of large refectory tables for people to work at. Thank the Lord, some things stayed the way they were. I gave Alison a quick call to let her know where I was. \"I'll be back in time for dinner, sweetie. I love you,\" I told her. \n\nI started to work my way through the papers, making notes of those points which needed clarifying\u2014oh why can't lawyers write the kind of English that most normal people understand? I think I'd been at it for a little under an hour when I was interrupted. \n\n\"Excuse me, is your name Marti Howard?\" \n\n\"Yes?\" I looked up to see a sweet-faced, medium-tall woman with curly blonde hair. \"Can I help you?\" \n\n\"I'm Vicki.\" I must have looked nonplussed for she added: \"Vicki Cassidy-Clarke. I'm Niamh's wife. Can I have a word with you?\" \n\nI cringed inwardly, bracing myself for a tongue-lashing, resolving not to react no matter what she said to me. But to my surprise Vicki gave me a big smile\u2014a genuine one that reached her green eyes\u2014and held out a hand to shake. Her hand was warm and her grip firm. Sitting opposite me, she added: \"Bit of luck seeing you, Marti\u2014may I call you Marti?\u2014I'm one of the deputy librarians, just came up here to check something and there you were.\" \n\n\"What can I do for you, Vicki?\" \n\nShe gave me another smile. \"It's more a case of what I may be able do for you. It depends though... Niamh told me it was you who spoke to her yesterday, that you wanted to talk, to apologise to her and she blew you off. She did say that you sounded genuinely contrite. I think she's feeling ashamed of herself now because of what she said. I got just enough of a look at you to recognise you now. Call me a trusting fool but I believe everyone deserves a chance. I think maybe I can persuade Niamh to listen to you but as I said, it depends... I know her side of the story. Care to tell me yours?\" \n\nI thought. What had I got to lose? It had helped a little when I unburdened myself to Alison, it might help a bit more to tell Vicki, and if she could get Niamh to hear me out then my conscience might finally know rest. Hesitant at first, and then more confident when I could see that Vicki didn't look in the least sceptical, I related everything from the blackmail to the inquest to my travels and new life in Scotland. All the time I was talking, Vicki's eyes never left my face\u2014it was as if she was able to read the truth in my expression. \n\n\"And there you have it,\" I concluded, \"the whole nasty, sordid affair. I know I broke Niamh's heart\u2014it broke mine to hurt her but...\" \n\n\"...but you believed that vile specimen you married would have tried to hurt her a damned sight more,\" Vicki finished. \n\n\"Yes.\" \n\nVicki smiled. \"Isn't it funny the way fate works? Look at it like this, Marti. If that swine hadn't blackmailed and threatened you, I might never have met Niamh who's the love of my life, who makes me so happy I could bust...\" \n\nI couldn't help returning her smile. \"...and I might never have met Alison who's done the same for me.\" \n\n\"Anyway, Marti, I believe you've told me the truth. I'll talk to Niamh, try to get her to speak to you. I won't tell her any of what you've said to me, that'll be down to you. Give me your mobile number.\" \n\nWhen I had done so, Vicki came round the table and to my surprise gave me a brief hug. \"No guarantees, Marti, but I'll do my best\u2014promise.\" \n\nBack in our hotel room that evening I told Alison about my talk with Vicki. \"I don't know if anything will come of it but if you don't like the idea, then I'll give it up.\" \n\n\"If Niamh's willing to talk to you, Marti, then you've got to go through with it.\" Alison cupped my face, gazing at me intently. \"We love each other and I trust you, but I don't think you'll ever have complete peace unless you talk with her. So yes, I'm all for you meeting with Niamh.\" \n\nIt was quite late in the evening when my mobile rang. I was in the bathroom and Alison took the call. Bringing the phone to me, she whispered: \"It's Niamh.\" \n\nApprehensive and slightly breathless, I held the phone against my chest for a moment. Then, nervous, I spoke. \"Niamh.\" \n\n\"Hello Marti.\" Niamh sounded as nervous as I felt. \"Vicki's talked me into seeing you. Be at the same coffee shop in the mall tomorrow morning, eleven. That okay with you?\" \n\n\"That suits me, Niamh. Thank you.\" \n\nI explained the arrangement to Alison. \"Do you want me to come with you?\" she asked. \"Give you some moral support?\" \n\n\"Thanks, my love, but no. This is something I have to do for myself. But you can meet me at the coffee shop afterwards, say about eleven-thirty.\" \n\nAlison put her arms around my neck and kissed me. \"You're nervous about this, aren't you sweetie? Come to bed\u2014I've got just the thing to make you feel better.\" As she led me towards the bed, she started to loosen the tie of my bathrobe then slipped a hand inside to cup one of my boobs and lightly pinch the nipple. \"God, but I do love you, Marti,\" she said. \n\n\"And I love you, more than I can say.\" \n\nSlipping the robe from my shoulders, Alison eased my naked body onto the bed. I reached for the buttons of her pyjama top but she stopped me. \"This is to relax you, sweetie,\" she said, \"Besides, my period started earlier. Now you just lie there quietly and let me do all the work.\" \n\nSoft lips descended on mine and a gentle tongue crept into my mouth as my lover began to caress my whole body with light fingertip touches. Her kisses and tongue moved from one ear, along my jaw-line and throat to the other ear where she nibbled the lobe. While kissing me, Alison took my nipples between fingers and thumbs, tugging them erect before lowering her mouth to them in turn, nipping each one gently and suckling on it. A hand moved down between my legs and a finger slid slowly up and down my slit. \"You're lovely and wet,\" she told me while bringing her finger to my lips so that I could taste my own juices. \n\nAlison slipped two fingers back inside me while working her way all around my labia with fairy kisses. I closed my eyes and lay there, enjoying the movements of her fingers within me. Then without warning I heard a low humming noise, something touched my clit and a jolt of pure pleasure rippled through my body. I damned near leapt from the bed and my eyes must have widened in shock. \"Christ, Alison! What was that?\" ",
        "Laughing, Alison held up a small vibrator, about the length and thickness of a high-lighter pen but with a slightly-curved, rounded tip. \"I told you I had just the thing to make you feel better.\" \n\n\"You almost blew my brains out then,\" I told her, \"Where did you get that?\" \n\n\"While you were tied up with your legal matters today, I was exploring the shops,\" Alison said, \"I found a little place called The Adult Boutique and bought this cute wee item. But for now, just lie back and enjoy it. I'll turn it up a notch.\" \n\nThe humming noise became louder and Alison eased the vibrator into my vagina, angling it so as to brush against my g-spot. My muscles clenched down on it and within a minute or so I could feel that I was nearing the edge. I exploded when Alison began to suck at my pearl. The orgasm was so powerful that I clapped a hand over my mouth to muffle my cries. When I had stopped shaking, Alison slowly withdrew the toy from my pussy, licked it clean, and then crawled back up the bed to cuddle me. \n\n\"Well, that seemed to work a treat,\" she said, \"When my period's over, I want you to make to love me with it. If it makes me come off as strongly as you just did, then it was a good buy.\" \n\n\"Before we go home you'd better take me to this adult boutique,\" I replied, \"I've never considered toys before but a selection of vibrators like that should make our lives very interesting...\" \n\n* * * * * \n\nI was a little early at our meeting place which gave me ample time to start worrying again about what might happen and my mind was overrun with negative thoughts. Suppose Niamh changed her mind and decided not to meet with me. Suppose she only means to castigate me further. Suppose she was only coming for show with no intention of listening to me. This brooding was doing no good. I went into the coffee shop, ordered a double espresso and took it to an outside table. \n\nAnd then I saw them, Niamh and Vicki with the baby, settling at a table outside the other coffee place. Both women seemed to be dressed to the nines, as if there was some special occasion looming. Niamh gave Vicki and the child a quick kiss each and then walked over to where I was sitting. I rose to meet her. \n\n\"Thanks for coming, Niamh.\" \n\nShe nodded. \"It took Vicki a while to persuade me, and even so I just told her I'd think about it. And then while I was mulling it over, I thought about an occasion I'm not proud of. Early in our relationship I let Vicki down very badly over something and hurt her terribly. She forgave me without thought or hesitation or recriminations. Vicki could have used that to lever me into meeting you but she didn't mention it because she's not that sort of person. So I reckoned if she could do that for me then the least I could do is hear you out.\" \n\n\"Okay...\" Where to start? \"...you'll remember that I told you I was straight and then I married Paul Chadwick...\" I found it hard to meet Niamh's eyes, scared that I might weep. \"...well, that bit about being straight wasn't true. I am gay, always was...\" \n\nI told the whole story again, staring at the table, voice choking a little from time to time. At one point I had to stop because I was close to breaking up so Niamh went into the coffee shop to fetch me a glass of water. When I had finished, I looked at Niamh and saw a sheen of tears in her eyes. \n\n\"You went through all that to protect me?\" \n\n\"Yes. And I'm truly sorry for the pain I caused you. I've agonised over it for years.\" \n\n\"Thank you but I suppose you thought it for the best.\" Niamh gave me a rueful little smile. \"And I'm sorry for what I said the other day. I meant you to hear and it was petty and nasty of me\u2014I'm not usually like that. You know, Marti, the irony of what happened is that outing me wouldn't have done any real damage, although at the time I believed it would. I found out several years later that my parents had worked out for themselves that I'm gay and they didn't care, nor did they care what others would have thought. As for the psycho rapists, I'll bet Paul made them up to keep you in line. \n\n\"Perhaps things have turned out for the best, though. I'm so happy with Vicki. Are you happy with Alison?\" \n\n\"Yes, I'm very happy with her\u2014we're going to get married soon. I'm also happier now because I've managed to tell you what happened. I hope I've cleared the air with you, that things are okay between us.\" \n\nNiamh nodded. \"Yes, things are okay now. There's one thing I must know, though, Marti\u2014did you ever love me?\" \n\n\"Yes.\" \n\n\"Why did you never say it?\" \n\nI put a hand over my eyes for a moment. \"Because of the shit way I was brought up,\" I told her, \"With the kind of upbringing I had you learned early on not to say nice things to people because chances were they'd get thrown straight back in your face. Shall I tell you one of my earliest memories? Once when I was about five or six I told my mother I loved her and you know what she said? 'Don't be so bloody stupid, you silly little cow! Fuck off!' Probably the booze talking but I remember crying all day and then never said 'I love you' again, not to anybody. That was the whole pattern of my childhood and it's the sort of thing that scars a child\u2014it never left me and that's why I learned to suppress my emotions.\" \n\nNiamh put a comforting hand on mine. \"That's dreadful and so hard to understand. I had nothing but unconditional love when I was a child.\" \n\n\"Well, there's one thing, thank God,\" I added, \"Since being with Alison I've changed and I'm able to tell her I love her.\" \n\n\"She must be special, your Alison.\" \n\n\"She is,\" I agreed, \"She'll be coming here to meet me in about ten minutes. Maybe you'd like to meet her.\" \n\n\"I'm sorry, Marti, I'd like to but we have to leave. We're having our baby baptised at twelve-thirty. I want to baptise her a Catholic and Vicki's fine with that.\" She pointed over to where two other women had joined Vicki and were sitting cooing over the child. \"Our best friends Susie and Joanna\u2014they're the godmothers.\" \n\n\"Looks like you found a good one with Vicki,\" I said. \n\n\"The greatest.\" \n\n\"What are you calling the baby?\" \n\nNiamh beamed. \"Clodagh May, after mine and Vicki's mums.\" \n\n\"They're lovely names. With that head of hair and those eyes, she's obviously yours.\" \n\n\"Yes. Vicki and I decided we'd like a family, at least two, so I went first. We'll wait until Clodagh May is about a year old and then Vicki will try for a baby. AID of course\u2014we'll try to get the same donor, to make sure the children really are related.\" \n\nSomething occurred to me. \"A Catholic baptism you said. What about that awful old Father... what was it?... Donovan... you told me about once, with his prejudice against gays?\" \n\nNiamh laughed. \"Not only gays, he was prejudiced against almost everyone and everything. He retired, went back to Ireland\u2014Ireland's loss, our gain. We've got a Father Moreland now, far more liberal. We went to Father Moreland, told him we're in a lesbian marriage and hoped that wouldn't be a bar to his baptising Clodagh May. What a difference from Father Donovan. He told us that Jesus said 'Suffer the little children to come unto me...' and if it was good enough for Jesus, then it's good enough for him. Anyway, I must go, Marti.\" \n\nThere was a lump in my throat as I nodded. \"Do you think maybe we can be friends now?\" \n\nNiamh reached over and squeezed my hand. \"Yes, we can be friends now. And we really would like to meet Alison before you go home so I'll call you.\" She stood up and bent to kiss my cheek. \"Be happy, Marti.\" \n\nFor the first time in five years I felt fully at peace. I turned so that Vicki could see me and mouthed: \"Thank you.\" She smiled and nodded. Moments later they were gone. And several minutes after that I saw Alison coming through the mall's entrance. Smiling, she waved to me. I smiled too and waved back. Alison\u2014my salvation, my future, my love. \n\nThen I realised something: love didn't hurt any more. \n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "lesbian love",
        "lesbian sex",
        "loss of love",
        "feelings of guilt",
        "blackmail",
        "domestic violence",
        "a new life"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/love-hurts-4"
}