{
    "title": "Eyes Like Winona Ch. 08",
    "pages": [
        "*I'm taking eighteen credits this semester.\n\nThat's not an excuse, seeing as the procrastination started this summer, but studying was part of the reason this installment was so late. I hope I'm not getting a reputation, but on several of my stories now, I have taken way WAY too long to finish things up. :(\n\nI just want to tell you all one thing.\n\nI work hard on a lot of story ideas, and some of them, great and exciting as I find them, I just can't finish. The point where I realize I just can't finish always comes pretty early in the writing. By the time I have committed to a piece, I make sure that I will be able to finish.\n\nI just want to promise you. That no matter what, no matter how busy I am, or how long the writer's block lasts... I can assure you that I will ALWAYS finish what I started. Even if it takes me more than six months. (sorry)\n\nWith all of that said, please enjoy the last installment of Eyes Like Winona. I apologize for not having sex between the main characters until the last chapter. I think of that as a sign of bad erotica, and I will do my best not to have that in future stories.\n\nAll Characters are 18+\n\n*\n\nI think that Toby's job search was the only reason he didn't find out sooner.\n\nIt was as if he didn't want to change how we spent money until he was making his own.\n\nFrom ten in the morning to dinnertime, and then from after dinner to midnight, he was gone. Hoofing it from one side of the city to the other. Asking about jobs in places that allowed convicts. He was searching so hard. If he had been looking for just any job, he would have gotten one in three days, I'm sure.\n\nBut he wasn't looking for a part-time job or a shit fast-food job. He wanted to earn more than minimum wage.\n\nEven so. It took him twelve days to get a job. The roofing job that Mr. Browning had told me about. Twelve days to get through the interview process and to work for a week without pay. The week without pay was so that his boss would know that he was trustworthy, a hard worker.\n\nOn the thirteenth day. His first day working for pay, he looked up our financial records.\n\n---\n\nMy jaw hurt.\n\nFerdinand hadn't been lying when he said that he would find us customers. It seemed like there was always someone waiting. Drake and I barely got to talk at all.\n\nI checked my watch. It was a cheap twenty-buck digital that I had picked up somewhere. It was almost three. About ten minutes left. I would probably be expected to take another guy int he remaining time. But I hoped that I didn't have to.\n\nI gathered the two twenties from my last client and walked outside. I shivered. It was only october, but it was unseasonably cold. I had two days. Drake had seven. The days went by so slow.\n\nI minced over to Ferdinand's car, and I smelled the orangey tang of his newest cigarettes. He glanced at me as I gave him the money.\n\n\"The tests came back from the doctor. No STD's.\"\n\nI felt this massive rush of something breaking loose. This pervasive fear that had hung over my head like a black cloud pregnant with rain. I smiled weakly, feeling wobbly with relief.\n\n\"You have come in your hair.\" He said softly.\n\nI touched the top of my head, and I felt the sticky wetness. I felt ashamed, but I tried not to react. I just mumbled \"Sorry.\"\n\nHe sighed. \"You're done for the night. Take a shower in your beau's room, and get home safe.\"\n\n\"Thank you sir.\" I whispered.\n\n---\n\nDrake had a towel around his waist. His hair was matted and dark. He had pale violet shadows under his eyes. He smiled, but his eyes looked so tired.\n\n\"Come in.\"\n\nI walked in and breathed deeply. The room smelled nice. Not like sex or sweat or the rank body odor that I had grown to hate.\n\nI dropped my shorts and slid out of my tank top. The bruises were faded. Ugly yellow blotches went down my back like fractal patterns. It still hurt though. I was almost out of the pain pills.\n\nI went into the shower, and I stood under the spray, sighing at the feeling of being washed. Of being clean. I rinsed my hair until my scalp hurt, wanting to get every trace of semen out of my hair.\n\nWhen I came out, Drake was in street clothes, yawning.\n\n\"You don't have to.\" I murmured. \"You're exhausted.\"\n\nHe shook his head. \"I'm not letting you walk home alone. Come on, I'm tired.\" He sounded cranky. I pulled my sweatpants and a hoodie over my skimpy clothes. We went out on the street together.\n\nSince that night, he never let me walk home alone.\n\nAs we walked, I could sense him relaxing. It was that time of night when the city slept. Even the bars and strip clubs were closed. The only people we saw were two homeless women and two drunks stumbling home.\n\nBetween two circles of light thrown by the dull yellow sodium-arcs, Drake grabbed my hand. I twined my fingers into his. His hand was long and cool.\n\nWe walked in silence, holding hands under cover of darkness.\n\n\"Seven days?\" I murmured.\n\n\"Eight, please. You know how tired I am.\" He gave me a little push and I laughed. I pushed him back.\n\nAfter wrestling a little, we went back to walking hand in hand. I could feel my spent cock aching. I had taken three blowjobs through the night, but wrestling with Drake did more for me than the mouths of strange men ever could.\n\nI hesitated near our usual parting spot. We usually split here, a block away from my apartment. We both flinched when we heard breaking glass.\n\n\"I'm gonna walk you a little further Neil... I don't want to let you off here.\"\n\nMy stomach flip-flopped a little. \"I don't want you to walk home alone either. I wish I had a phone... Then you could text me, and I would know if you got home safe.\"\n\n\"Yeah. Me, too. But don't worry about me. I wont let anything happen to me. Not now.\"\n\nI was still scared for him, but that would have to do. He walked me to the door of my building.\n\nI gave the streetlight a scathing look. It was too exposed here, too bright. I let my hand slip out of his, and I turned to face him.\n\n\"I love you.\" I whispered, feeling like gravity was dragging me towards him, but I had to move away.\n\nThen he reached out and took fistfuls of the front of my hoodie. I nearly tripped, but at the same time my feet barely touched the ground. In a movement that was rough and giddy, he pulled me to the side, and pressed me against the brick wall.\n\nUnder the yellow lights, next to the doorway. In the dark, in front of anyone who wanted to see. In front of the few people that were left. He pressed his lips against mine, he pressed his body to mine. I gasped and thrust back, pressing against him with such force that my lips felt crushed and my skin trembled with the effort.\n\nI could feel his cock against me.\n\nHe broke the kiss. I let my head rest against the dull red bricks, panting, and licking my crushed lips.\n\n\"You're evil.\" I whispered breathlessly. I straightened my clothes as he laughed very quietly. He kissed my sore lips very quickly. I looked around, terrified that someone would see.\n\n\"I love you, too.\" He smirked.\n\n\"Eight days, mister.\" I whispered. My face was hot. I walked into the building feeling like my fluttery stomach would raise my toes above the ground.\n\nI ran right into Toby.\n\nMy first reaction was to glance back. Drake was out of sight. I frantically tried to judge time and distance, trying to think if Toby could have seen us. I felt a massive wave of panic and guilt. It crushed my ability to think.\n\nHe looked down at me and his face was distracted and his brow was furrowed. \"Oh, Neil, there you are. I was looking for you. Come upstairs quick.\n\nHe turned on his heel and I stumbled behind. Adrenaline had my pulse throbbing jaggedly and I could feel beads of sweat on my cool skin. That had been too close. Way too close.\n\nBut I wasn't out of the woods yet.\n\n---\n\n\"Where were you just now?\"\n\nI shifted slightly. \"Out with my friends. I don't really get to see them during the day.\"\n\nHe narrowed his eyes slightly. But that was the end of his questioning. A single question. He abruptly got up and went to his room. The room that he shared with my brother Ben. He had deep circles around his eyes and he looked exhausted. He had stayed up waiting for me, and only asked one question.\n\nI was scared.\n\nI followed him to the bedroom. \"Toby?\" I whispered. Everyone was sleeping, and the walls were paper-thin.\n\nHe turned around. \"Are you in trouble?\" He hissed. His eyes looked like they were burning in his sockets. \"Ben has no fucking clue where the money came from, so that leaves you.\"\n\nMy stomach twisted and jived. I felt like I was going to be very sick very soon. I let my eyes go wider. I tried to jilt my voice into a cadence of confusion and ignorance. \"What? What are you talking about.\"\n\nHis eyes narrowed. \"Nothing.\"\n\nHe closed the door in my face. So loud that in the twins' room, Lisse started to cry.\n\nI walked in and picked her up. I shushed the heavy toddler while Calvin's sleepy voice came from the bunk. \"Whass goin' on?\"\n\n\"Nothing.\" I whispered. \"Toby's tired.\"\n\nSo was I. But it was a long time before I was able to sleep.\n\n---\n\nI knew how angry he was. But I still had two nights to work. I prayed that I would be done in two nights. I felt so raw, so nervous and electrified and scared during the whole day. It was exhausting. By the time I finished blowing Mr. Browning, I felt like I wanted to fall asleep and never wake up. I just felt bleary and unsexy and exhausted. I hadn't even started my evening.\n\nI expected a confrontation, so after running home, paying Rosa and taking a shower, I went straight to Drake's place. It was about six, but I didn't care. I just didn't want to be in the house. I had a dim hope. That I could go to both of my remaining days and be done. Stay at home. Maybe Toby would just quit, and be happy at our good fortune.\n\nMaybe.\n\nThe more I thought about it, the less likely it seemed.\n\n---\n\n\"You're so tense. Just lie down.\"\n\nI sighed. \"You aren't going to tease me, are you?\"\n\n\"No. Just gonna get some of those knots out of your shoulders. You're so tense, and this is the only PG way I know how to get you to relax.\"\n\nI sighed and leaned on his shoulder. \"Seven days.\"\n\nHe laughed, and pushed me. \"Eight days. I want a chance to relax, mister bossy.\"\n\nWhen he pushed me, I went limp and flopped on my stomach on the bed. Drake grabbed my ankles so I was lying down flat on my stomach. I didn't help him take off my shirt at all. I stayed limp, forcing him to work a little.\n\nHe tickled me under my arms, to punish me. I giggled and lifted my arms so he could take it off.\n\nI closed my eyes, and moaned when he put his bare hands on my bare back. Then I yelped.\n\n\"What are you doing!\" I squealed, as he dug his thumbs deep into the large muscle above my shoulder blades.\n\n\"Think of it as a shiatzu massage.\" He grunted, between digging his fingers deep into my skin. \"It will feel great when it's over.\"\n\nI bit the pillow, half-laughing and half-grunting with shock and pressure. He dug his fingers in, in rough little circular motions from the base of my neck to just above the waistband of my jeans. Under my arms, the sides of my neck, everywhere.\n\nHe sat back on his heels, and I tentatively moved. I expected to be bruised to hell by that rough once-over, but I was shocked to move and feel, great.\n\n\"Damn.\" I whispered.\n\nHe laughed, and hugged me from behind. He kissed my shoulder. I felt the wanting. It was a sweet heavy feeling in the pit of my stomach, at the base of my groin. In my fingertips and eyelids and the insides of my lips. I wanted to touch him everywhere. Know him in every way that it was possible.\n\nBut I had his exact fear. I didn't want to mix this. This beautiful untainted feeling that I had with him. I didn't want to associate it with the men I saw every night.\n\nI let him nuzzle me for another moment before pulling away and grabbing at my shirt.\n\n\"Eight days.\" I conceded.\n\n\"Eight days.\" He whispered.\n\nThe melancholy was gone in a shake of his head. He grabbed his guitar and started strumming. He started to hum the first low notes of 'Swing Life Away', by Rise Against.\n\nI sang along.\n\n---\n\nI only had fifteen seconds.\n\nWhen it was eight, Drake and I changed into our street clothes. Him into a red mesh shirt and tiny spandex shorts. Me into jeans cutoffs and a white shirt that I had cut so it showed my stomach. The rag barely covered my chest. I crossed my arms as I walked out into the streetlight, into the cold.\n\nMy foot hit the sidewalk.\n\nI looked over, and I saw Jose walking towards us. Kirk was sitting on the sidewalk.\n\nI looked around.\n\nI saw Ferdinand's black car sitting like a low-slung reptile just out of the streetlight. I could see a tiny red ember glowing in the corner of my eye.\n\nI jumped a little as Drake put his arm around my waist. It was just the kind of easy gesture that he was always doing. He pulled me closer so we were standing hip-to-hip, and he kissed my ear.\n\nA car pulled up. A red car that seemed slightly familiar. Just enough to set off a single small warning light in my skull. It squealed to a stop in front of us.\n\nI tensed. The person inside was drunk or violent. I could hear Ferdinand's door open. He was ready for trouble.\n\nToby boiled out of the driver's seat. The car's headlights were still on. I recognized it as Rosa's car in a dim distant part of my mind, as the rest of my mind screamed and went alive with panic.\n\nI walked numbly to meet him. Tearing free of Drake's embrace. I took three steps before he met me. Before my face collided with the flat of his hand.\n\nMy knees went weak. I nearly fell. I didn't really feel pain. Just a tremendous heat, and tears were streaming from my eyes.\n\n\"Toby.\" I mumbled. I looked up blearily, and I saw Ferdinand out of his car, walking towards us with burning eyes. I saw Drake behind me, running to help. I had less than a moment.\n\n\"Ferdinand, Drake!\" I called, turning to meet them. \"I'm okay. I'll be back in a second. J-Just... Just give me a s-sec--\"\n\nFerdinand was glowering. Drake was inching closer, glaring at my brother warily, like Toby was a snake. \"Listen mister, you don't know what's going on, so calm down and--\"\n\n\"Shut up faggot.\" Toby snarled. He grabbed my wrist. His grip was so tight I could feel the bones in my wrist creaking. He didn't speak to me. He didn't look at me. The only way he was interacting with me was his painfully tight grasp on my wrist.\n\n\"I'll be fine.\" I mumbled. Not sure who I was talking to.\n\nHe yanked me back to the car and he looked like he wanted to shove me in, but he only let go of my hand. I crawled in the seat, touching the side of my face, knowing that I had a handprint as clear as day. I could taste blood. I had cut the inside of my mouth on my teeth.\n\nDrake was hovering a few feet away. In his tiny clothes, he looked long and gawky and scared. I tried to smile. I could feel Toby getting into the car. I tried not to show how scared I was. How serious this was.\n\nThe tires squealed. I could smell the hot dull reek of burning rubber, and my hands flew to secure my seatbelt. I held onto the armrests and tried to settle my stomach. Toby was hunched over the steering wheel, silent. I couldn't read his face. I couldn't read how much trouble I was in.\n\n\"Toby?\" I whispered.\n\nThen I cried out as the rubber squealed again. He turned viciously into a parking lot. An Italian restaurant. He parked and closed his eyes. I felt my thighs trembling. Sweat was beading on my lower back. All of my muscles felt weak and stretched. Like old rubber.\n\n\"Explain yourself.\" His voice was small and quiet. But I could see his hands clenched into fists. The bright hot pain in my cheek had faded to a dull swollen sting.\n\n\"I didn't want to.\" I whispered. The tears were trying to come up, but I forced them down. The AC was on in the car, and I was cold. I was trembling from the cold, and all of my worn-out muscles were shaking with exhaustion.\n\n\"I didn't want to do it. I... I had to.\"\n\nI flinched when he slammed his hands on the wheel. It was the kind of motion that might have been comical if I wasn't so fucking scared. He slammed the heels of his hands into the wheel so hard and so fast and so many times that when he was finally done, he cradled his hands together. He had bruised them.\n\nI was cringing in the front seat. My breath reduced to a terrified whisper in the back of my throat.\n\n\"I wish it had been drugs.\" He whispered. His voice was heavy with disgust. I wilted under the disapproval.\n\n\"I h-had to.\" I mumbled. \"Calvin... Calvin b-broke his arm. We had all those bills and... And we n-needed the money.\"\n\n\"And did you need to let that faggot rub all over you? Did you need to do that?\"\n\nI started to cry. \"Toby... Please Toby, you're scaring me so bad right n-now.\"\n\nHe leaned forward in a sudden violent movement that made me flinch against the inside of the car door. He was taking off his sweatshirt. He flung it at me.\n\n\"Cover up.\" He muttered. \"We're going to figure this out. We wont say anything to Ben and the kids. Lets go home and forget all about this.\"\n\nHis face was getting less tense, he was relaxing. \"Things were bad when I was gone. But now I'm here. We'll just go home. This will be gone. This will be done and forgotten. We're going to get our lives straight Neil... Everything is better now.\"\n\nI already felt sick and scared, but for the first time, I felt anger. Small and smothered, but deep in the pit of my stomach there was a resentful ember of heat. He had wished that I was on drugs. He was more worried that Drake had been touching me than I was a prostitute. He put the key in the ignition and I felt that anger get smothered with a huge fear.\n\nI hated to speak, but I had to. My lips felt numb, and I had to repeat myself so I could be heard.\n\n\"I can't go home yet.\"\n\nHe looked me in the eyes for the first time. \"Why?\" His hands tightened on the wheel again. I cringed.\n\n\"I h-have to. I have two days left on my contract.\" There hadn't been a contract, but that way it sounded official. I broke down only a moment after I spoke. \"Please Toby, I can get in so much trouble.\"\n\n\"How much.\"\n\n\"Wh-What?\"\n\nHe slammed the steering wheel again and I let out a little frightened groan. \"How much money do we have to pay them? You're not going back there. I'm not going to let you.\n\nMy stomach felt very sick. \"Too much Toby, w-we can't pay it off. Please T-Toby... He'll break-- He'll hurt me if I don't come back. He can. He's done it b-before.\"\n\nHe whirled. \"What did that fuck do to you.\" He grabbed my upper arms and shook me. His fingers were digging into my arms. The back of my head smashed into the window and I heard a crack. \n\nHe immediately let go and I cowered, one hand cupping the back of my head and the other going around my knees as I moaned weakly. I could feel blood in my hair. \n\n\"Neil!\" He gasped, he tried to reach out to me, to see the damage. But by then I was curled into a tiny ball on the seat, gasping and crying, cradling my head in my arms. I saw him slowly withdraw his arms out of the corner of my eye. I saw the confused look on his face that kept changing between fury and concern and a frustration so huge it was tearing him apart.\n\nHe spat it out. \"You can come back when you're done with your contract.\"\n\nI didn't understand what he was saying. I looked up and he was gripping the steering wheel tight. He glared at me and I shrank against the inside of the door. \"Go back to your pimp. Finish up your whoring.\"\n\n\"Get out!\" He snarled. He wasn't my brother anymore. He was so full of hate. I fumbled with the seatbelt. My hands were so numb. He finally reached over and depressed the button, yanking the seatbelt off of me.\n\nI got out of the car. I turned around to say something, but before I could think of a single sound to make, he was squealing out of the parking lot. I heard a car honking at him. Then the squalling tires moved further away.",
        "I stood there in the parking lot of the Italian restaurant. Wearing tiny shorts and his baggy sweatshirt. Feeling blood ooze from the cut on the back of my head, feeling my face sting from the bruise and the tears.\n\n---\n\nIt took me twelve minutes to walk back to the apartment building. When I got there, Drake ran up in an instant. His fingers, light and dry, caressed my cheek.\n\n\"Neil... Look at me.\"\n\nI moved closer so I was inside the circle of his arms. I let him tilt up my chin so I was looking into his bottomless eyes. He kissed my forehead and brought his hand up through my hair.\n\n\"Ow.\"\n\n\"Neil, you're bleeding!\"\n\nI heard a car pull up and I flinched, burying my face into Drake's flat hard chest. I didn't want to face the world. Not one bit of it.\n\n\"It's Ferdinand... He needs to talk to you.\"\n\nI nodded, but I held on for an extra moment, drawing strength from him.\n\nWhen I broke away, I saw Ferdinand's car by the curb. I moved and stepped into the back seat. I was embraced by the smell of cherry smoke. It was so warm in the car that I felt beads of sweat oozing between my shoulder blades, and at my hairline.\n\nI stared at my knees. Smelling the sweet smoke and blinking tears from my eyes. My body felt numb.\n\n\"Are we going to have a problem?\"\n\nFerdinand's voice was soft and deadly. I shook my head. \"He wont come here again. I can work... I'm sorry.\"\n\nAfter a moment he sighed. \"You were gone for almost half an hour. You can take ten minutes to clean yourself up, but after that I expect you to work.\"\n\nI nodded. \"Thank you sir.\"\n\n---\n\nI had some deja vu.\n\nI was leaning over the sink, and Drake was very gently soaping my hair, cleaning the cut on the back of my head. It reminded me of the night I had spent with Chris/Stanley and Benji/Tio. Afterwards, when Drake had washed the come out of my hair.\n\nI flinched, and his hands paused. He rubbed my back with one hand. I tried to hold everything back, and I mostly succeeded. The flood didn't come, but some of it trickled through my defenses.\n\nI felt my mouth trembling as I tried to hold it back. All that came out was a small whimper. A low sound that drew out. I sounded like an animal in pain.\n\nDrake moved behind me, and hugged me, his head resting between my shoulderblades. His crotch was against my ass, but I couldn't feel anything. I was kind of glad. I had never felt less sexual in my life.\n\nI let him hold me. I closed my eyes and it took all that I had to hold the flood back and breathe.\n\nBreathe.\n\nI could feel the rise and fall of Drake's chest. The slow warm trickle of metallic water through my hair. The way the muscles in my thighs and upper arms trembled. His fingertips on my shoulder, kneading softly.\n\nBreathe.\n\nI could feel his breath through my thin shirt. Feel even his eyelashes as he blinked. He kissed my shoulder very gently. \"I'm here.\" He murmured. With that, I felt some of the tension, some of the hot sick fear and sharp loneliness... I felt it, and then I felt it leaving me.\n\nBreathe.\n\n---\n\nFor the second time now, I was sleeping over here with Drake. Several of the men had asked me about the bruise on my cheek. They had been concerned. They all thought it was either Ferdinand or another customer. I was actually kind of touched.\n\nBut now they were all gone home. I had one night left, and then I was supposed to do something about Toby. Something about Drake. Something about my life. Just thinking about it made me feel nauseous all over again.\n\nI gingerly tussled my hair with the towel. My skin was hot and damp from the shower, but the back of my head was raw and tender.\n\nThe sound of water drumming against the glass went quiet. Drake took short showers.\n\nI pulled some boxers on, and finished drying my hair so I could toss him the towel. He only had two. He snatched it from the air with one hand.\n\nI could see his dark pubic hair, wet from the shower, a dark tuft of hair framing the base of his limp cock. He briskly rubbed his groin with the towel before wrapping it around his waist and coming to sit on the bed.\n\n\"Can I see?\" He asked quietly.\n\nI leaned over a bit, and I felt his fingers gently parting my hair.\n\n\"It looks a little better... Not so swollen.\"\n\nI was looking down at his lap. His knees were covered with curls of dark hair. I could see the outline of his cock through the damp towel.\n\n\"Hey...\" He put his fingers under my chin and tilted my head up. He was smiling. I looked into those deep dark eyes that had drawn me in in the first place.\n\n\"My eyes are up here...pig.\" He murmured.\n\nI couldn't help but laugh a little. He kissed me, and I wanted to do nothing more than just melt into his arms. I wanted to feel him, feel his mouth and hands all over me. His tongue was gently probing at my lips, and I let it come in, sucking on it very gently, teasing it. I groaned softly with pure frustration.\n\n\"Not fair.\" I muttered\n\nHe sighed and broke the kiss. \"Yeah... I just want you so bad it drives me crazy.\" He kissed the tip of my nose. \"Soon, though. Real soon.\"\n\nThe promise barely consoled me. So much was wrong. I couldn't even do more than cuddle with my boyfriend.\n\nI hugged Drake very tight. I could feel tears squeezing out from under my lids. I was scared. I didn't want to be taken away from Drake. I didn't want to go home.\n\n\"Neil?\"\n\n\"Hm?\"\n\n\"I don't think you can go back. Not after this.\" I could feel his fingertips very lightly touching the hair on the back of my head. Not even touching the skin, for fear of hurting the swollen cut.\n\n\"Wh... What do you mean?\" I felt like he had somehow read my mind.\n\nHe gently pulled back a little. \"He hurt you. He hurt you really bad.\"\n\nI felt weak excuses crowding in the back of my throat. I felt a hurt knowing feeling in the pit of my stomach. I swallowed the bitterness, and nodded, feeling my eyes sting.\n\n\"What about my family?\" I knew the answer, deep down, but I needed to hear it, and the other options.\n\n\"You can't live there, not when he treats you like this. They have him now.\"\n\nI shook my head. \"That wont be enough. We still need so much, Ben is almost through college...\"\n\nI slumped down to the bed, on my stomach with my head cradled in my arms. My head hurt. Not just the cut, but the center behind my eyes, I could feel a headache coming on. A real thunder-humper. As Toby would call it.\n\n\"I just don't even want to think about it anymore.\" I whispered.\n\nI could feel Drake pulling the covers from under me. I let them slide. He tucked them in around me, and turned off the lights.\n\nI felt him slide in with me. I could feel the pajama pants he had donned.\n\n\"Don't think about it for now.\" He whispered. \"But I'm here. And I wont let you get hurt.\"\n\nI shivered, the covers weren't imbued with body heat yet. I snuggled closer to him.\n\n\"Kay.\" I whispered, burying my head.\n\n---\n\nIt was strange going to work from this apartment.\n\nDrake was still asleep. I quietly got ready, brushing my teeth with my finger. I wore my street clothes from the night before. I had a uniform for my factory job in a locker.\n\nI left a small note on the mirror for Drake.\n\n---\n\nI snuck back to my apartment at twelve. When I got in, I heard Rosa singing softly in Spanish to Lisse.\n\n\"Hey Neil... I didn't expect you back at this time of day. Coming home at five?\"\n\nI mumbled some answer and paid her in advance for the week ahead. Lisse started to cry, and Rosa went to comfort her.\n\nWhile Rosa was gone, I threw belongings into a duffel bag. I felt like a stranger in my own home.\n\nI hesitated before scribbling a note on a piece of paper.\n\n'I'm living away for a while. You'll still get the money from the factory. I'll call. I'm sorry.'\n\nI signed my name, and left it on my bed. After an agonizing moment of indecision, feeling stupid and childish, I also grabbed my blankie. Here I was, almost nineteen and still sleeping with one.\n\nI grabbed some toiletries and got out, mumbling a goodbye to Rosa. Before I left, I picked up Lisse. She wasn't old enough to know what was going wrong. Not old enough to understand why I had to leave. She just clapped her hands and tried to play pat-a-cake. When I gave her back to Rosa, her face screwed up and she started to cry. Her voice cut at my heart.\n\n\"Neiw! Cake! Cake!\"\n\n\"I'll play cake later.\" I whispered, trying to hold back the tide.\n\nI finally got out, and I felt empty, scraped completely hollow. I cried a little on my way to Browning's store, but only a little. Mostly I felt too numb to cry.\n\n---\n\nI drew a line in the sand with Browning. He started to go to the back room, but I just shook my head.\n\n\"Mr. Browning? I would like to get my paycheck every month please. Not sent to my account. Is that okay?\"\n\nHe looked faintly hurt, but he nodded. I felt absurdly apologetic. I had been sucking off this man for the greater part of two years. At a fantastic deal, mind. A few extra groceries per week was cheap for all of the head I had given him. But I still felt like apologizing.\n\nI managed to suppress the inane urge.\n\nBarely.\n\n---\n\nI called the cheap family cell phone at a pay phone on my way back to Drake's apartment. Toby answered on the first ring.\n\n\"Neil, is that you? What's going on?\"\n\nI heard the guilt and torment in his voice, but that was an undertone. His voice was stern to the point of harshness.\n\n\"I... I'm staying away for a while.\" My voice cracked with fear. My hands felt weak and trembly clutching the phone.\n\n\"You're done with your... business--\" He spat the word. \"--after tonight. You're coming home tomorrow.\"\n\n\"No, Toby, I'm not. I'm staying here with Drake.\" Someone had replaced my stomach with a bag of loose queasy jelly. I felt sour vomit wanting to come up. My body was having a physical revulsion to my words.\n\n\"Drake? You're pimp! What the fuck is wrong with you? You want to do this?\" The rage was building up behind his words, building at a sharp curve.\n\n\"Drake is not my pimp. I'm done with my business tonight Toby. Drake is my boyfriend.\"\n\nThere. It was out. I felt somehow better. I didn't have a moment to think about it, because he had a retort half a second after the words left my lips.\n\n\"You don't know what you're saying.\" The words were soft, but the breath exploded around them.\n\nI leaned against the thin metal wall that made a shallow booth around the phone. I felt like my legs had lost all of their strength.\n\nDead silence. I couldn't even hear him breathe.\n\n\"Don't come and get me.\" I whispered. My voice finally broke. \"I don't want to get hit again.\"\n\nPainful silence. Then... \"Neil.\" His voice sounded soft and broken and still filled with anger. \"That... I didn't mean that. It wont happen again.\"\n\n\"I've heard it before Toby.\" I whispered. \"You said it wouldn't happen again after you killed him. You killed him so he'd stop fucking me and so he'd stop hitting me. You're hitting me now. You want to fuck me too? Huh, Toby? Why not have a go?\"\n\nI heard a mechanical female voice telling me to deposit more quarters.\n\n\"I'll call you later.\" I mumbled.\n\nI walked home. To Drake's apartment. This was my last night.\n\n---\n\nI felt stupid when I was walking up to the building. It was six in the afternoon and I had no idea if he would be in or not. I didn't have a key... So if he wasn't here I'd just have to walk around.\n\nI felt relieved then, when he answered his buzzer at the door.\n\n\"Come in.\"\n\nI walked in. The hall was so narrow that I had to brush up against the wall to let a middle-aged black woman walk past me.\n\nI pushed open the door.\n\nDrake was sitting cross-legged on the bed. He had a open textbook by his knee and a tiny black laptop in his lap. Earbuds in his ears and he was studiously tapping at the keys.\n\nI had never seen him studying before. That look of concentration in his eyes was so intense. It was kind of cute.\n\nI crawled onto the bed behind him and rubbed his upper back with my hands. I rested my hands on his shoulders and massaged.\n\n\"Hmm...\" He moaned, leaning back into it. I kissed his ear, sighing softly. This was nice. This was really nice.\n\n\"How was your day, Neil?\"\n\n\"I talked to Toby on the phone. I told him that I needed to stay away for a while. I... I'm not sure if he's gonna listen.\" My voice broke a little near the end.\n\nHe held onto my hand, where it was resting on his shoulder. \"Come here.\"\n\nI hugged him tightly from behind. He caressed my hair, kissed me on the cheek. \"We'll get through this, Neil. We will.\"\n\nI sighed and flopped back on the bed, wiping my eyes. Drake put away his notes and snuggled next to me. We were facing each other on our sides. He kissed me very gently. \"Tell me everything.\"\n\n\"I... I snuck in to get all of my stuff earlier. I left a note. Later I called Toby... and he was so angry. He wants me to come back, and we'll never talk about it again.\"\n\nDrake moved closer, so our foreheads were touching. \"And?\"\n\n\"And I told him no. I don't want to hide from him my whole life. I love him... I love all of them. But I don't want to lose you either.\"\n\nHe kissed me on the nose. \"I was so worried... That you'd choose them instead of me. But at the same time, I don't want to take you away from them. Are you sure?\"\n\nI nodded. \"Absolutely sure.\"\n\nAnd that was the truth. It's just that the truth hurt.\n\n\"Six more days?\" I asked quietly.\n\n\"Yup.\" He murmured, giving me a tight hug.\n\n---\n\nIt was my last night, and I was surprised by how many people showed up. There were times when people were waiting for me to be through, just so they could buy my services.\n\n\"I had no idea I was so popular.\" I whispered, harried, to Drake during one of my few breaks. \n\nHe put an arm around me as another familiar car pulled up. \"You're really fuckin' cute. That's why. But after tonight, nobody's gonna touch you but me.\"\n\nI giggled at his gruff possessiveness. He was joking, but only a little. I knew it bothered him that we both had our obligations. I couldn't wait until the day when we were done for good. When our bodies only belonged to each other.\n\nThen one of my customers pulled up, and I had to put a shit-eating grin on my face and take him back.\n\n---\n\nA new boy showed up tonight. A friend of Kirk's. The kid was short and sturdy, not fat, but stocky. He had brown hair and nervous eyes. He didn't really talk to me, but he showed up, went into a room with an older man, and left with his money shortly after.\n\nThe kid didn't talk to me at all, but I couldn't keep my eyes off of him. That had been me. He had been me. I wondered what he would do with this. With this bizarre cruel opportunity.\n\nBefore he left he glared at me. \"Shake your head faggot, your eyes are stuck.\" His voice sounded thick, and his eyes looked red, like he had been crying. I didn't dislike him for his cruel words. I only hoped the best for him.\n\nI didn't know why he was here.\n\n---\n\nMy lips were wrapped around a fat cock. Short, but fat. The time was 3:03 am, and this was my last cock. My last cock that didn't belong to Drake.\n\nThe guy was small, nervous. He reminded me a bit of Steve Buscemi. The face was more normal-looking, but he just was small, and had the same kind of nervous energy. He also had the same crazy teeth.\n\n\"Fuck, fuck, ah fuck.\" The man hadn't shut up the entire time I was between his legs.\n\nI caressed his long low-hanging ballsack in my hands, partially to keep it from swinging back and forth. It was so long that it had been whacking me in the chin. He was standing and thrusting his skinny hips while I was on my knees.\n\nHe suddenly let go of my hair and was stroking it really fast. I closed my eyes just in time as his come splattered all over my face. I took a deep breath and started to get up.\n\n\"Hey, hey, kid wait. Wait.\" I looked up at him. He was pulling up his pants. \"Can I get a picture of your face like that? All covered up... I'll give you an extra twenty...\n\n\"Sure.\" I mumbled. I hated that. But twenty bucks... I couldn't turn that down. I had been working my ass off here, but I had almost nothing to show for it. All of my money had been towards my family bills. I had only kept my proceeds for the last two nights. All together, it would be about twelve hundred bucks. A good start, but rent would eat that up quick.\n\nOur rent. Mine and Drake's rent. He had been apartment hunting, and he wanted to take me to see the final three options tomorrow.\n\nHe finished taking the photos on his phone, and I got up to wash my face at the sink. He paid me sixty bucks. Only twenty of it would have to go to Ferdinand.\n\nFerdinand was smoking something I couldn't recognize. That was unusual. I had made a game of guessing the flavor.\n\n\"Last one, huh. How does it feel, Ryan?\"\n\n\"Feels good.\" I whispered.\n\n\"Well, that new kid looks promising. Small repayment for losing you both, but he'll shape up nice. Pleasure doing business with you.\"\n\nI shook hands with him that one last time. Despite the fear, despite the fact that he was my pimp, he had done so much for me. He had given me this job. He had protected me, taken me to the doctor.\n\n\"Thanks. For everything.\" I murmured.\n\nHe nodded, and lit up a new cigarette.\n\n\"See you around, kid.\" He muttered. Then he shrugged. \"But probably not.\"\n\nI nodded, and walked back inside.\n\n---\n\nI timed my schedule the next day, and I went home when Toby was working a shift, roofing an apartment complex on the other side of town. I went to grab the rest of my things, and to talk to the rest of my family.\n\nWhen I opened the door, Celia was in the living room, playing with Lisse. She looked up and bounced to her feet, Lisse waddling after her. \"NEIL!!!\" She hugged me so tight around the waist that I could barely breathe. I saw Ben poke his head in, and Calvin walked in from the other room, his face pale and tight.\n\n\"Neil what's been going on? Toby wont say anything and you've been gone for three whole days and Ben wont make us lunch so he had a fight with Calvin and--\"\n\n\"I'm moving out.\" I interrupted Celia, and I was very surprised at how calm my voice was. How soft and accepting.\n\nBen was the first one to break the speechless silence. \"Neil, what on earth has been going on? We're all so worried about you.\"\n\n\"I'm moving out to live with my boyfriend. I'm eighteen, and you can't stop me.\"\n\nI didn't expect to hear Calvin, but he was the one who talked next.\n\n\"I thought you hated it.\"\n\nI glanced at him. He was looking down at his hands, picking at the skin around this thumbnails. It was a bad habit, sometimes his thumbs would bleed for minutes on end. \n\n\"What? What did you say?\"\n\n\"You told me that Toby killed my dad because my dad was hurting you. I talked to Toby about it.\" Calvin wiped his eyes with the pudgy back of one hand. \"He said that my dad wasn't just hurting you. He said that dad... That dad did gay stuff to you. I thought you hated it. And that's why you hate my dad. And that's wh-why Toby killed him.\"\n\n\"I didn't want to have sex with your dad.\" I said quietly, feeling tears in my eyes. \"I was too young for him to do anything like that to me. And it was inappropriate. I'm older now. Drake and I are adults. And it's okay.\"\n\nCalvin shook his head vigorously. \"No it's not. Toby said that people who do gay stuff go to hell. That it's wrong.\" He was choking and crying at the same time. \"I... I don't want you to go to hell. Stop it! Stop doing gay stuff and come back. Everything was good, and then you had to ruin it! You made Toby be angry.\"\n\nCalvin stormed away. His fumbling childish concern and anger had stabbed me deeper and harder than any insult. Celia was clinging to me, too confused to talk.\n\n\"I'm gonna get my stuff.\" I whispered.\n\nI walked to my room, feeling numb. Ben and Celia followed. I felt a pang of anger when I opened the main room and saw that Toby had dug through all of my drawers, flinging my clothes everywhere.",
        "I packed clothes into a duffel bag while Ben tried to reason with me, tell me to stay and think things through.\n\n\"I can't live here anymore.\" I said softly. I took Ben's hand and put it against the back of my head, so he could feel the rough scab under my hair. \"Toby smashed my head into a window. I don't want to live here if he's going to hit me. I've had enough of that.\"\n\nBen was silent, shaking his head. \"The only reason he hit you was because he found out what you were doing. I would have been furious too. He was getting out in a few weeks, why did you feel the need to go out and... and..\"\n\n\"And what!\" Celia bleated.\n\n\"Get out of here.\" Ben snarled.\n\n\"No Celia, stay.\" I stood up straight.\n\n\"You want to hear it from the horses mouth? Then everyone gets to hear it. For the last month I've been going out and fucking people for money. Happy? I did it because some stupid redneck bastard was too high-and-mighty to keep his dog on a leash and he bit Calvin. I did it because we are neck-deep in shit and since I was the only one in this goddamn house who was making money. The only one in this house who even CARED.\"\n\nCalvin was in the doorway, staring at me with socketed red eyes.\n\n\"I fucked those strangers because it was the only goddamn way to get us out of this goddamn debt. We're still in goddamn debt, but now you have Toby. Toby the savior. You didn't do anything but get stoned and fuck your girlfriend when I was here, so just do the same now. Why the fuck should you be bothered with our problems when we're just putting your pampered ass through college?\"\n\nI stalked to the bathroom, grabbing whatever toiletries were mine. I loped to the kitchen and grabbed a few things in there that were mine. No one was saying anything, afraid that they would set me off. I was so close to losing it. To bursting into tears.\n\n\"I love you guys.\" I whispered, in a soft strained voice. \"I love you all so much. But I can't fucking live like this anymore.\"\n\nBefore leaving, I picked up Lisse and hugged her tight, smelling her soft hair and feeling her sticky hands on my face.\n\nBen looked like he was going to explode. He looked guilty and ashamed, like a dog who shat on the carpet, but he still looked indignant.\n\nI hugged Celia and Calvin. Ben let himself be stiffly hugged by me. On my way out of the door, I turned back and told them that I would visit, and that the proceeds from my factory job would still go to the family account.\n\nAs the door closed behind me, I heard Ben burst out.\n\n\"He's so... SELFISH!\"\n\n---\n\nAfter that, I headed to my job with Mr. Browning. It was against his policy, but he lent me a pair of sunglasses to cover up my swollen eyes. At least until the red went away.\n\nDrake had agreed to pick me up at work, to go to the apartments. He had narrowed it down to three, and we were going to take the bus.\n\nAt four twenty five, he was lounging outside, waiting for me to be ready. I was able to admire just how fucking beautiful he was. How he was really the only person I had left. The only one who I could really talk to.\n\nBrowning swept the floor. \"You know him?\"\n\n\"Yes.\" I kept my answer simple.\n\nWhen it was time to go, I grabbed my full duffel from the storage room, ran out and hugged him as tight as I could. He kissed my hairline, and I could feel his smile against my skin.\n\n\"Missed you.\" He whispered.\n\n\"You have no idea.\" I whispered back.\n\n---\n\nSurprise surprise, we ended up choosing the cheapest of the apartments. The rent was seven hundred a month, plus utilities. It had a single bedroom, a kitchen, living room, and some basic furniture. It was pretty far away, but from here there was a bus line that went to and from my factory job. We would make it work.\n\n\"I have quite a bit saved up.\" Drake murmured. \"I rationed it to pay for tuition and utilities and groceries and everything else for about two years. Of course, that was for if I was living for free, so it wont last as long now.\"\n\nHe shrugged. \"I can take out some student loans. I'll be working as a full-time nurse in two years, and then I can help pay for us.\"\n\nI snuggled up to him. The landlord was outside, letting us have a good look. I kissed him on the mouth. \"I have a part-time job too. I can help.\" I felt guilty. \"I know I have two, but part of it needs to go to my family.\"\n\n\"I wasn't sure what you were going to do with your finances, so I just did the math for paying it myself.\" He said quietly. \"Any thing you can do to help I'll appreciate.\"\n\nI shook my head. \"I'm pulling my weight. I'm not the girl in some nineteen-fifties marriage. I pay for half the rent and utilities. We make any big purchases, I'll go half. If I can. And for groceries...\"\n\nI shrugged.\n\n\"I can always go back to that deal I had with Mr. Browning, y'know, the one where--\"\n\nHe shut me up with a firm kiss on the mouth. \"Don't talk crazy.\" He growled. \"Once we're done with Ferdinand, we're done for good.\"\n\nI smiled. \"Yes sir.\"\n\n---\n\nI signed up for night GED courses. Refreshers on the five basic test groups, reading, writing, mathematics, science, and social sciences. It was a two-week refresher, and it cost forty bucks. It felt good to study again. I was in a classroom with all sorts of people, and they were fascinating to talk to. I was used to not getting much sleep, so GED courses and studying took up the time where I used to be whoring.\n\nI loved Drake so much. He helped me get through so much, helping me when I was stuck on the math, snuggled me when I was feeling lonely, talked to me, sang with me, joked with me, loved me. How on earth could I have known that it was possible to feel this close to someone?\n\nThe demons that I had to fight, the cross that I had to bear was my family. I nearly had a heart attack the first time that Toby showed up.\n\nHe drove the rabbit to Drake's apartment and knocked on our door. Seeing him through the peephole nearly made me collapse with fear. It was seven in the evening, so before 'working hours' for Drake. He was in the room with me. He grabbed my shoulder and told me to calm down. We let Toby in.\n\nDrake was good. He sat a good foot away from me on the bed, and he was dressed in baggy clothes. In a way, he was doing what he had done for me on my first night, and with Chris and Tio. He was watching over me, making sure that he was there so I didn't get hurt.\n\nToby's eyes were red and I could smell alcohol on his breath, but to the surprise of everyone present, this was the most civil he had been. He ignored Drake. Not acknowledging anything that he said, or looking in his direction.\n\nToby told me why I should come home. He promised that he would never touch me again. That we would work everything out and pay all of the debts. Ben would get out of college soon, get a job soon. He would pay to put Toby and me through college, to put us in a better apartment.\n\nEverything would be okay.\n\n\"It's not about that anymore.\" I said softly. My hand was in my pocket, on the brand-new canister of pepper spray that I had bought. \"I love Drake. I want to live with him. I don't want to live in the house anymore.\"\n\nToby opened his mouth, but I interrupted him. \"Ben called me selfish, can you believe that?\"\n\nFor a moment, a glimmer of old Toby showed through. I could see righteous indignation. His mouth opened, and I could tell that he had a caustic joke on his lips. Something about how far Ben's head was up his own ass. But the joke died.\n\n\"I did everything and more for this family.\" I said softly. \"I'm still giving you guys more than half of what I earn. I dropped out of school for this family. I want out. I don't want to live somewhere where I know that you all hate me.\"\n\nHe glanced down at his hands. \"It wasn't supposed to be like this.\" He murmured. \"Everything was going so...\"\n\nHe abruptly got up and left. Closing the door behind him. It was only after that that I let my trembling muscles go limp. I didn't cry, but every session there, and after, just exhausted me.\n\nToby came two more times in the next six days. Once more to try and convince me back. The second time to bring a few of my things that I had left, and to talk tentatively about a date for us all to go out and eat. So I could see the family again.\n\nI hated how stiff and formal we were. Like a divorced couple talking about when we got to take care of the kids.\n\nI told him a date that I was available, and asked if Drake was invited. He wasn't in the room with us. It was after eight, so he was in a room adjacent to us. It killed me a little inside, to imagine him with a stranger's cock up his ass. Or a stranger's cock in his mouth. I was so sick of this job. I wanted it to be over for the both of us.\n\nToby was very stiff, and after a few moments, he told me.\n\n\"I would prefer that you didn't bring him.\" Like he was a rambunctious dog, or an obnoxious friend.\n\nMy anger was weak and impotent. I said that I wouldn't bring him along, and Toby left. I took a deep shaky breath and started to study.\n\nDrake had tonight, and one more day.\n\n---\n\nI was so tired that I ended up going to bed at about midnight. I always felt guilty about that. Drake had always been there for me. But I was so tired.\n\nI was always a light sleeper, so through the fog of dreams, I heard the shower running. I dimly felt it when he slipped into the bed, quiet so he wouldn't wake me up.\n\nI rolled over, half-asleep, to put my arm over his damp bare shoulders. \"Sorry.\" I mumbled, barely awake.\n\nHe chuckled and kissed me. My lips felt numb with sleep. His lips were so soft.\n\nWe slept tangled together. Until I had to untangle myself in the morning to trek off to my job.\n\n---\n\nI went to Perkins with my family after I was done with Browning. It felt ridiculously extravagant. But it was so tasty.\n\nThings were tense, and I could feel it, but some of the old camaraderie was back. I was able to joke and laugh with them. Talk about inconsequential topics, like school for the kids.\n\nCelia brought it up, in an effort to be equally friendly to me.\n\n\"What does Drake do?\"\n\nIt was quiet. I nervously took a bite of my chocolate-chip pancakes. \"He's in college, like Ben. He's going to be a nurse. He works at McDonalds right now.\"\n\n\"Celia, how did that algebra test go?\" Ben asked quietly.\n\n\"Guys can be nurses too?\" Calvin murmured. \"That's kinda weird.\"\n\n\"He wanted to be a doctor, but it takes too long, and too much money.\"\n\n\"Let's not talk about this anymore.\" Toby said. Firm and resolute.\n\nFor the rest of the meal, we talked about a new movie that was coming out, that the twins both badly wanted to see. We didn't talk about Drake, but all the same I felt a little better. The topic had been breached, and no one had flown into a rage. It felt like progress.\n\n---\n\nI went around the apartment, packing up. All of my clothes and belongings fit into a single oversized duffel bag. Drake was a bit more spread out. I unfolded a few cardboard boxes we had bought from a grocery store for a couple of bucks. Drake had divided what was okay to pack, and while he worked, I did the actual packing.\n\nI wrapped a fan in a spare blanket and set it at the bottom. I carefully stacked books so they wouldn't shift when moved around. I put all of the wiring and electronics in a bag inside a box. In each bag, I dropped a few of the air fresheners.\n\nI put Drake's cherished guitar into it's battered black case with the crushed purple felt on the inside. I dissembled the stand and packed that in a box. Every time I thought I was done, there was another pocket of the room that I remembered. A quick check under the bed brought me to discover a couple of dirty socks and a calculator and roughly a thousand corpses of ants that had found the little capsule of ant poison.\n\nI looked around the room, feeling strangely lonely. Everything was packed except a change of clothes for the both of us and our toothbrushes. All of our belongings fit into four cardboard boxes and two big bags.\n\nI unpacked my folder for the GED courses and studied for a while. Time had never seemed to pass so slow. At three, Drake would be done with this shit forever.\n\nDespite my excitement, I got so tired. I had to wake up really early tomorrow so I could help move all of our stuff before getting to work. I wrote out a note.\n\n'Sorry, just so tired. Congrats, I love you so much. See you in the morning. --Love, Neil.\n\nIt was corny, but I didn't care. I put it on the shower door and slid under the covers for the night.\n\n---\n\nI heard Drake's phone beeping and I moaned. It was only six in the morning, but moving time was now.\n\nA very gentle shake on my shoulder. \"Hup, get up lazy-boy. Time to get moving.\"\n\n\"Don't wanna.\" I moaned.\n\nHe tickled me under my ribs. I giggled and struggled awake.\n\n\"I'm going to start bringing boxes out to the car. You brush your teeth and get some clothes on. Sexy beast.\"\n\nI laughed and forced myself to roll out of bed, wiggling my butt as I did. Making him reach over and smack it. He was feeling frisky this morning, and no wonder!\n\nIt was over. His job was over. He always insisted on getting his 'day of rest', but the way he was looking at me, the way he made me feel when he looked at me... I smiled to myself, and adjusted my cock in my boxers.\n\nWhat would it be like? We had shied away from sex for our whole relationship. What if it was bad?\n\nI immediately pushed that thought away. That was one thing I never had to worry about. He had been popular for a reason. I just worried about me. What if I was the problem?\n\nI was over-thinking things. I shook my head and went to the sink to brush my teeth. I dragged a comb through my shaggy blonde hair and pulled an old t-shirt on. Faded blue, with the pepsi logo on the front.\n\nThe door opened. \"You still don't have your pants on? You're really not a morning person.\"\n\n\"Of course... It's still dark outside, crazy-man.\" I pulled on some baggy jeans. It still felt a little strange to be wearing normal clothes around him.\n\nI picked up a box and started outside. It was the box with all of the electronics in it.\n\nI was surprised to see Kirk at the curb. He was smoking a cigarette and leaning against a blue minivan. He grinned and gave me a wave.\n\n\"'Sup? Let me help you with that.\"\n\nHe helped me move the box into the back seat. I thanked him for helping us move and he just shook his head.\n\n\"S'all cool bro. You and Drake got something special. It's fuckin' cute.\"\n\nI flushed a little, smiling at the compliment. \"I thought you were straight?\"\n\nHe exhaled with a light cough. \"I am. I'm just open minded. You got the genes, and if you were a girl I woulda been all over you.\"\n\n\"Um... Thanks?\"\n\nHe laughed while I ran inside to get another box.\n\n---\n\nThe van had three seats in the front, so I was in the middle seat between Kirk and Drake. I leaned into him, half-asleep for the twenty-minute drive across town. He played with my hair while I snuggled with him. The movement of the car was soothing. The sounds of early city were muted and the air was cold and crisp, dispelled by the warm blasts coming out of the car's vents.\n\n\"C'mon... Wake up, Babe...\"\n\nI moaned and burrowed into his chest. He laughed and helped me unbuckle my seatbelt. I crawled out of the car and looked up at the apartment building. It was a new place. My new home.\n\nKirk helped us move our boxes and bags inside. I didn't notice him say goodbye, but he was gone all of a sudden.\n\n\"He had to get back home for some reason.\" Drake muttered, when I asked. He was putting sheets on the bed. I got up behind him and hugged him.\n\n\"I have to get out to the bus stop.\" I murmured.\n\n\"Kay. Don't eat dinner, okay? I'll make something for us.\" He turned around and gave me a real kiss. He cradled my face in his hands and moved his body so it was rubbing against me. I whimpered softly and sucked on his lower lip. \n\nWhen the kiss broke I was flushed, and I had an erection.\n\n\"You're evil.\" I whispered. I couldn't stop the smile on my face.\n\nHe just smiled. I loved his smile. It made his big black eyes sparkle. He tossed the hair out of his eyes with a flick of his head and swatted me on the ass as I turned around.\n\n\"Have a great day at work, honey.\" He giggled, in a high feminine voice.\n\n\"You, too... toots.\"\n\nHe laughed hard enough to fall over on the bed. I just shook my head and left the apartment, unable to stop smiling.\n\n---\n\nI felt a little thrill that night, using my brand-new keyring. I had a key to my old home on it, my locker key for my factory job. My bike lock key from before my bike was stolen. But now there was a new key. My name was on this apartment. This was mine.\n\nI slid the key into the dark metal slot, and turned it.\n\nI looked around. From the door, I could see into the open doors of our bedroom. I could see the kitchen. I saw that Drake had neatly made up the bed, and unpacked all of our things. In the kitchen, I could see him. I could see my boyfriend. The man that I had fallen in love with.\n\nHe was wearing headphones, so he hadn't heard me come in. He was bobbing his head to the music, his thin back to me. I could see his white skin and beautiful shoulders. He was only wearing his jeans. He was tapping his bare toes against the linoleum with some kind of beat. I could see the little dimples above his buttocks.\n\nI was standing there, tired and sweaty and still in my crappy blue work shirt. Looking at my sexy man. He turned his head and jumped a little, a huge smile on his face. He snatched the earbuds out and loped over.\n\n\"Hey Neil.\" He laughed. He put his arms around me and kissed me. \"Welcome home.\"\n\nI hugged him back, putting my hands on his ass and pushing him closer, so he could feel how excited he made me. \"I... I should probably take a shower.\"\n\nI felt his mouth smiling against my skin. He was nuzzling my neck. His breath there, his feather-soft lips made my breath ragged. Made me moan softly. \"Definitely. Take a shower, but if you jerk off in there, I'll kill you. He flashed his dazzling smile at me. \"I have waited too fucking long for this. When you come out, I made pasta.\"\n\nIndeed he did. I peeked in the kitchen. I saw thick garlic cream sauce on the stove. There were cleaned and peeled shrimp in a colander in the sink. A big pot of noodles on the stove. My stomach rumbled just looking at it, just smelling it.\n\nI dashed off to the shower, still unsure how I would follow his marching orders.\n\n---\n\nAfter shivering under some cold water for a bit, I carefully washed up. I paid special attention to my crotch and ass. Just that whole area. I agonized for a bit over whether or not I should shave. I had just trimmed my dark blonde pubic hair during my time working for Ferdinand. Shaving always gave me annoying red bumps.\n\nAfter a moment of thought, I compromised.\n\nAfter a moment of wondering how to do it, I bent over and pulled my buttocks apart with one hand. I drew the razor across the inside of my buttocks, carefully removing the crinkly hairs from around my anus.\n\nThe skin back there felt so... sensitive.\n\nI swore softly and turned the water cold again.\n\n---\n\nI walked into the kitchen wearing a muscle shirt and my tight black boxers. He was walking around with his shirt off, driving me crazy. I wanted to return the favor a bit. Just a little.\n\nHe was dumping shrimp into the cream sauce. He looked up and grinned. \"Finally... did you drown?\"\n\nI stuck my tongue out at him. He just waggled his in return. I sat down at the fold-out chair that still had a ragged paper sticker on the seat. The sticker said that we had bought the chairs for the extravagant price of three dollars each. The black table with the cracked faux-leather surface was five dollars.\n\n\"Found a garage sale, and we needed a table. Also got some pots and pans and stuff.\"\n\nI looked through the cupboards. They had an empty feel. All of Drake's mismatched dishes fit in one shelf of one cupboard. A few shelves he had filled with groceries. I checked the fridge, which had come with the apartment. Other than milk, strawberry jam and a few condiments, it was empty.",
        "I gasped a little when the lights went off. I wondered how on earth our electricity bill was already behind, before I heard a soft scrape of a match.\n\nI turned around and Drake was lighting two squat purple candles and putting them in the center of the card table. He smiled at me, and the firelight made stark orange shadows on his body, made orange sparkles in his eyes.\n\n\"Now it's officially a romantic dinner.\" He purred.\n\nIt was delicious. He confessed that he barely knew how to cook, and he had been following a recipe online, but I didn't care. No one had ever made me dinner before. Not like this.\n\n\"It's good to feel... Pampered. Y'know?\"\n\nHe nodded and twirled his fork to gather noodles and sauce. \"You slaved away for them. I'll pamper you just as much as you want.\" He shrugged. \"You've earned it.\"\n\nI laughed, and nudged his feet under the table with my feet.\n\nThis was so nice, so close. With all of the lights off, the candles made a bubble of warmth, and only Drake and I were in the bubble.\n\nOf course, the meal didn't last terribly long. We had both waited for this. We were free. We had no sexual obligations. We were finally independent. Me, in more ways than one.\n\nWe gobbled the food. And after putting our plates in the sink, and snuffing the candles, we made our way to the bedroom.\n\nThe bedroom was new and unfamiliar, but as soon as I sat on the bed, I felt the familiar texture and weight of Drake's comforters. The familiar smell.\n\nI sat on the bed, and Drake kissed me, not touching me with his hands or his body, just leaning over me and pressing his lips against mine. I couldn't stand it, I leaned back slowly, forcing him to put his hands on the bed to support himself. I was leaning back further and further, and he was crawling over me, straddling me and kissing me.\n\nMy breath was caught in my throat. My face and body felt flushed and hot.\n\nDrake crawled so he was all the way on the bed, I reached up and moved his hair out of his eyes, so I could see them with the faint light coming in through our window. The streetlights filtering in through the blinds. I looked up into them. The eyes that had so captivated me.\n\n\"You're so beautiful.\" I whispered, feeling my cheeks flush. That was something you said to a girl. It had sounded so right in my head.\n\nI felt his laugh. He was so close, that I could hear it deep in his throat, a soft humorous sound, not more than a single sound.\n\n\"Turn over, sexy.\"\n\nI moaned softly as he reached down and bit my lower lip between his teeth. He growled softly and ground his hips into mine. I could feel his cock through his jeans, feel it rubbing against my cock.\n\nI was so turned on... But I was also nervous, and just the teeniest bit let down. He was just going to fuck me? I had wanted it to be, more special than this. I was nervous. I had only ever had bad experiences down there.\n\nI shouldn't have doubted him.\n\nI slowly turned onto my stomach, propping myself up a bit on my arms so I could look behind me and see what he was doing. He smiled and took the hem of my muscle shirt, pushing it up around my neck so my back was bare. He pressed his lips against the base of my neck, and dug his fingers into my shoulders.\n\nHe straddled my hips with his jeans and my underwear still on. He started to give me a deep relaxing massage, all the while slowly grinding his hard package against my ass.\n\nI was limp and complacent from the massage, but still so horny and turned on that I was humping the bed slightly, moaning and feeling like my balls would explode from the tension. I pushed my ass back against his groin, trying to show him how insane he was making me. How close he was driving me to the edge.\n\n\"It's been a long time for me, Neil. I stopped letting guys suck me off several weeks ago, a few days after meeting you, in fact. I still jerked off, of course. But I haven't come for almost a week now. I'm sorry if I can't hold it in.\"\n\nHe leaned forward and kissed my shoulder tenderly.\n\nThen he slid down from his spot where he had been grinding against my ass. He moved down, and he pulled my underwear down. I shivered, feeling air on my clean skin. He pulled my boxers down to my knees, and left them there.\n\nI'm not sure what I expected. His hard cock, maybe his fingers. But it wasn't this.\n\nI went stiff and something like a squeak escaped out of my mouth as I felt his fingers gently pulling my cheeks apart. I felt his breath right there, in my most vulnerable area. My anus spasmed a little and puckered closed from the shock.\n\nI heard him laughing, very softly. Then I felt the warm tactile tip of his tongue, right there. Right at the little ring of muscle.\n\nI buried my face in the sheets and spread my legs, arching my back and letting my heels go into the air. Raising my ass from the sheets, wanting more.\n\nHe gently kissed my pucker, and then traced his tongue up and down, teasing me, making me moan and squirm. He reached between my legs and gently bobbed my testes up and down. He reached further and wrapped his fingers around my throbbing shaft. I felt his fingertip caress the very tip, feeling the precome that was dribbling.\n\n\"You like that?\" He panted, softly. \"Do you like it when I do this?\" He dipped his tongue inside. I squealed and gasped a little.\n\nHe gently ravished my ass with his mouth and tongue. I had never guessed that it would feel so amazing. I panted into the sheets, my hips were moving very slightly, moving back into his face and forward again. His hand on my cock was so light, so gentle. He was driving me insane.\n\n\"Drake...\" I moaned, closing my eyes so tight that I could hear the rush of blood in my ears. I whimpered when he dragged his teeth over my skin. Not painfully, not even hard, just enough sensation to make me tremble and nearly go limp. My breath was coming so fast, it was like I had run a marathon. I could feel sweat beading and trickling down my back.\n\nSuddenly, he turned. He flipped onto his back and slid under me. My ass had been arched into the air to be more available for his agile tongue. His head was under my raised hips. I felt his fingers caress my flushed swollen cock, right before leading it into his mouth.\n\nI tried to give him a warning.\n\n\"Drake, Drake I'm gonna...\"\n\nThen my muscles stopped working as they should and my face was buried in the bedsheets. All of my breath escaped me in a massive groan, muffled in the fabric. I felt like someone had touched a flame to my groin, lighting up the network of nerves in a brilliant flare.\n\nI was acutely aware that I had accidentally smothered him a little when I went limp. I felt him cough. I quickly rolled onto my back, feeling the moisture between my buttocks. I felt him getting up, and padding quietly to the bathroom. After a quick spit and gargle he crawled back into bed with me.\n\nI kissed him when he snuggled up next to me. Despite how tired and breathless I felt, I turned over and reached into his jeans. He moaned softly.\n\nIt was my first time feeling him. First time I got to see him, with my fingertips.\n\nHe was so hard, so hot. The skin was damp and swollen tight, like the head of a drum. I could only feel the curve of it, with my hand cramped and awkward like it was.\n\nI unbuttoned his jeans and gently let his cock free, squirming a little to get out of my underwear as I did. I helped him to shimmy out of his jeans and underwear. Then I caressed his cock with my fingertips.\n\nIt was long, and slender. It had an upward curve to it, and when I stroked it, the foreskin moved with my fingertips. The tip was swollen and bright red, tight and wet. The foreskin was so soft, the tapered head so taut and slick.\n\nI stuck my tongue out and gently lapped at the tip, tasting him. He groaned.\n\nI wrapped my mouth around him and bobbed my head a little. I felt kind of strange, he had just given me an amazing experience, and I was just giving him a blowjob. I wanted to do more.\n\n\"Drake?\"\n\n\"Yeah, Neil?\" His voice was ragged, I was still stroking his beautiful curved cock.\n\n\"Do... Do you want to fuck me?\"\n\n\"Are you sure? Do you want it?\"\n\nI thought about how his tongue had felt, the slick stretched feeling of my anus. \"Yes.\" I whispered gutturally, kissing the tip of his cock and reaching between my legs to play with my asshole.\n\nHe moved, slowly crawling so he was on top of me. I was on my back, looking up at him, panting softly, reaching for him, to play with him. His nipples were dark, I touched them with my fingertips and they budded into little peaks.\n\nHe flicked his hair out of his eyes and reached to the little night table beside the bed. He pulled out a condom and a small lotion bottle. When I looked closer, the lotion was actually something called astroglide. I had never used lube in my line of work.\n\nHe set the bottle down on my stomach, smiling at me, shyly. \"I've wanted to do this for a while.\" He admitted, rolling the condom onto his long cock. I gasped as he reached between my legs with one hand. My soft cock perked up again as he played with my saliva-slick anus. He slid one finger in easily. His oral manipulations had softened my sphincter. He grabbed for the lube, and squirted some on his fingers. He crouched down low, and I suddenly had to deal with the sensation of his lubed fingers stretching and penetrating me, with his lips nuzzling and nibbling at my soft cock.\n\nI gasped and squirmed a little, watching him take my cock, and feeling his fingers. My cock was pretty thick, and about five and a half inches long. When it was soft it looked chubby and short, watching him play with it lovingly...\n\nHe squeezed a third finger inside of me, and I grunted with discomfort. He put more lube on his fingers, and he started fucking me with his three fingers. He had a distinct rhythm, three shallow strokes, one deep stroke. It made me open up, anticipating the deep stroke.\n\nHe caressed his cock, putting more lube on the shiny condom. He straightened up a little, and I panted, looking up into my eyes. My cock was standing up again, feeling a little sore, and throbbing eagerly.\n\nHe carefully led his cock to me. I felt the tapered slick head against my skin. I lifted my legs up, resting my ankles on his shoulders. He turned his head and kissed my ankle, before putting his one hand on my hip and the other on my stomach, and pushing in.\n\nI made a small muffled sound. I had tensed up, expecting a lot of pain. I couldn't help but remember Chris and Tio. I couldn't help remembering things from even further back. Laying facedown on the big bed. Biting my forearm and crying when HE put olive oil on his cock and forced it in. Telling me to shut up or he would kill me.\n\nBut when Drake moved in, he had stretched me out, made me feel good with his tongue and fingers. His cock had a slender head. And he was only pressing gently, waiting for the muscles to relax, and let him in.\n\nI felt him slide in, slowly, but surely. There was discomfort. I squirmed a little. I could feel the sensitive nerve endings burning in a nice way. I breathed shallowly, gasping for air. Drake lay down on top of me for a moment, keeping the tip of his cock in my spasming ass and hugging me tight.\n\n\"I love you Neil.\" He whispered.\n\nI moved my feet, so my heels were digging into his lower back, touching those cute venus dimples of his. I buried my face in his shoulder and arched my hips up a little, letting him in. Letting him know I was ready.\n\nHe moaned, and lipped my ear as he pushed in. I mewed, closing my eyes to hear the rush of blood and more fully enjoy his slender cock bumping against my prostate.\n\nHe slowly upped the speed of his rocking hips. Hugging me tight and never letting me slip away. We were tangled together so close. I stopped feeling uncomfortable. It just felt hot and amazing, feeling his slick cock pry me open and light my nerves on fire.\n\nI started yelping when he went faster. I could feel the sweat trickling down his back with my arm and my feet.\n\nHe flexed his entire body like a long sheath of muscle. His breath exploded out of him in a cry, and he was buried in me to the root. Even in the ecstasy of his orgasm, he wrapped his hand around my hard cock and stroked.\n\n\"Please, please, faster!\" I begged. He flogged his hand over me and pushed his softening cock deeper into me. I yelped and felt come slicking my stomach and chest.\n\nWe both went limp this time.\n\nI let my head fall back, and I looked up at the ceiling. I saw a flash of headlights go across the ceiling as a car turned a corner. I could feel him breathing, hear his heart beating. His chest was pressed against mine. I kissed the side of his head. His hair was damp with sweat.\n\n\"I need a shower.\" He whispered.\n\nI laughed breathlessly.\n\nWe took a quick shower. I stepped in for a minute to rinse off, and then he stepped in, after peeling the condom off of his soft cock and putting it in the garbage.\n\nMy ass felt so strange. Just walking let me feel the sensation of looseness, of slickness. Even after the shower when I washed all of the lube out of me, I still felt loose. It was tightening up a bit with every passing second, but I kind of liked it. \n\nWe dried off and slipped into bed naked.\n\n\"That was good.\" I whispered. He mumbled something. He was so tired.\n\nI felt so tender, looking at his naked shoulder above the comforter. I kissed his shoulder and snuggled up with him. Closing my eyes.\n\nI was so full of love.\n\n---\n\nThe next day was like the day before. I woke up with my alarm telling me it was time to go to work.\n\nI silenced it as quickly as I could. I didn't want to wake Drake up. He had school and work during the day, he needed as much sleep as he could.\n\nDuring the night he had moved around so the cover was only covering up one leg. I covered him up with the comforter.\n\n\"Be safe.\" He mumbled.\n\nI kissed his forehead, and slipped my clothes on. My asshole didn't feel loose anymore, but there was this delicious soreness. Every step reminded me of last night. I had to pull my jeans over a bulge. I had a feeling that this would be a problem.\n\nHe rolled over with a yawn. I gave him a rueful look and walked out of the door.\n\n---\n\nEvery night, we were having amazing sex.\n\nI was horny all of the time. Going from feeling horny around him to being horny all of the time was a bit of a change. I never jerked off though. I saved every drop of sperm for him. We went to the doctor and got tested. It would be a week or two until we got the results.\n\nSaturday, three days after having almost constant sex whenever we were with each other, he gave me two gifts. A small one, and a huge one.\n\nI had a rare day off. I still had my factory job, but Browning had to shut down for a day because of the death of a distant relative. Because of the short notice, I still got pay, and I was heading to my apartment on the bus with a single red rose, a fresh supply of condoms, and some chinese takeout.\n\nI stepped into the elevator, and I saw someone hurrying out of the corner of my eye. I held it open.\n\nDrake jumped in, dressed in black slacks and a grey button-down shirt and a blue tie. He had his McDonald's name tag on, and he smelled like grease and sweat. He looked embarrassed. \"Hey.\"\n\n\"Hey.\"\n\nThe elevator doors closed. As soon as they did, I wrapped my arms around his neck and kissed him. \"I love a man in uniform.\" I joked.\n\nHe rolled his eyes and kissed me back. \"I HATE this uniform. I hate it. I hate working there. If I never see another french fry as long as I live, I would be happy. I've been applying to every place I know that doesn't serve food.\"\n\nI held up the brown bag. \"Well, that's a pity, because I picked up some burgers on the way home.\"\n\nI laughed at the look on his face before he realized I was joking. \"Ha-ha.\" He intoned, trying to be serious, but unable to hide the relief on his face. \"What's really in there?\"\n\nThe doors opened on our floor. \"Wontons, fried rice, sesame chicken, and some beef broccoli. Fortune cookies.\"\n\nHe shuddered. \"Thank god. I...\" I don't know what he was going to say, but then I handed him the rose.\n\nWe had been walking to our room, but he froze in the middle of the hallway with the rose.\n\n\"Some kids were selling them as a fundraiser. I... I wanted to give it to you. I love you Drake.\"\n\nI glanced up and down the hallway, and snuck him another kiss.\n\nHe opened our apartment without saying anything. As soon as we were inside the door he grabbed me by the front of my shirt and kissed me hard.\n\n\"Thanks Neil.\" He whispered.\n\nI whimpered a little and ground into him with my hips. He grimaced a bit. He brought my hand to his crotch so I could feel him.\n\n\"As much as I want to... I need to take a shower. I don't want to fuck while I smell like pigfat.\"\n\nI nodded, it seemed reasonable. \"Wanna take one together?\"\n\nHe smiled and gave me another deep kiss. \"Sure thing.\"\n\n---\n\nThe water was warm, and he was playing with the loofa. Driving me crazy with it.\n\nThe plastic scrubby was so rough, but he was being so careful with it. The sensation around my cock made me want to explode. I was leaning against the wall, trembling as water dripped down my body and Drake tormented me with his hands, the loofa, and liberal amounts of shower gel.\n\nSuddenly he got up, and coyly turned away. He had a small ass. His cheeks were tiny and round, compact. He was teasing me, but I didn't know what to do. He looked over his shoulder with bedroom eyes.\n\n\"Come on...\" He whispered. \"Come over here and play with it. You know what to do.\"\n\nI obediently dropped to my knees. Unlike the former apartment, our shower was a tub combination, so there was room for both of us. I dropped to my knees and crawled up to his taut little ass. He was all long slender back, long legs. His ass was the compact center of muscle where the two met. I kissed the sweet hollows of each cheek, and I propped myself up a bit so I could kiss the tantalizing venus dimples on his lower back.\n\nI had been pretty timid the first time I played with his ass. But now I loved it. He was just as sensitive down here as I was.\n\nI foamed up some shower gel and carefully soaped his buttocks, getting closer and closer to his hole with the loofa, teasing him with the rough scrubby.\n\nI waited for the soap suds to wash away before leaning in and running my tongue up and down that beautiful crack. To taste shower water and soap and skin and feel his moans, and the minute muscles clenching with tension.\n\nI slipped one finger into his tight little asshole. My little finger. I twisted it in without lube, going slow. He panted softly, and humped the wall.\n\n\"Neil?\" He gasped.\n\n\"Hm?\"\n\n\"I want you to fuck me.\"\n\nThat was the little gift.\n\nI looked up at him as he turned around. I was confused, and he could see that.\n\n\"I like getting fucked, too. I'm so ready. I want to feel you in me, too.\"\n\nI stood up. \"I... I thought I was the bottom.\" I whispered, feeling my cheeks flush.\n\nHe laughed breathlessly, and grabbed my cock, stroking, making me moan. \"I like fucking you. You have a hot ass. You're so fucking cute when you make those noises.\"\n\nI accidentally made one of those noises. He was stroking my cock, teasing me.\n\n\"But it's not like you're a girl. I like getting fucked every now and then. So come on, let's go loverboy.\"\n\nI followed. Drying myself off with a towel. He was grinning. Flashing his ass at me. I started to feel this primal urge. I had wondered what it would be like to fuck him before, but only in an abstract way. I wanted to penetrate, to be the fucker, and not the fuckee. It was an intense feeling.\n\nWe went to the bedroom and I dug in the new box of condoms. While I was digging in the nightstand, he crawled up to me on all fours and started sucking my cock. All of a sudden, he was turning the submissive charm to full-blast. It was so fucking sexy. ",
        "Those eyes of his, when his lips were wrapped around my cock. It was a fantasy come true. It was one of my favorite things.\n\nHe took the condom from me and carefully applied it to my cock himself. Carefully rolling it onto my average, thick dick.\n\n\"How do you want me?\" He purred.\n\nMy mouth felt so dry. \"Um... On the bed? Facing each other?\"\n\nHe looked up at me and smiled. \"You're so sweet.\"\n\nHe crawled onto the bed, and I crawled with him, my dick bouncing around foolishly, dressed and ready for action.\n\nI kissed his smooth thin chest. I kissed the scar under his nipple, and gave special attention to his nipples. I liked licking them, feeling them get hard under my tongue.\n\nHe groaned softly as I took his long thin dick in my mouth. I lapped and swirled my tongue around the head, tasting precome. I clumsily lubed up my cock with the bottle of astroglide, wanting to be nice and slick. My cock was throbbing under the thin rubber.\n\nI tentatively felt below. My fingers were slick, and I managed to slide two easily into his tight little asshole. He was able to relax so easily. With me, he still had to spend a few minutes loosening me up.\n\nHe groaned. \"Come on, baby... I'm ready.\"\n\nIt was the first time he had called me baby. At least without a joking tone. I aligned my cock with his slick little hole. I moved my hips, trying to be slow. I remembered how much his cock had burned me on the first entry.\n\nHe wrapped his legs around my waist and used them to pull me in. I was suddenly buried to the root. I gasped at the hot pressure on all sides. He was so warm. That warmth was surrounding me on all sides.\n\n\"More.\" He moaned.\n\nI started to move my hips, slowly at first, but then faster when he just squirmed and asked for more. It felt so good. His sphincter was so tight, rippling up and down on my cock. Even inside the rubber sheath, it felt so hot and slick and beautiful.\n\nI leaned over him and kissed him, trying to detach the movements of my upper body with my hips. He chewed at my lips, panting like a dog in heat. He grabbed my shoulders with his hands. When on the bottom, he turned into an entirely different kind of animal. Aggressive and needy. It was so hot.\n\n\"So thick.\" He moaned. \"Faster...\"\n\nI went as fast as I could, pounding into him. He had his fist wrapped around his cock, flogging it.\n\nI could feel the heat building up in my groin. \"Drake... Drake I'm gonna...\" \n\nHe arched his hips up so high that I nearly slipped out. I could see the streamers of come spurting out of his cock. It was so sexy... I plunged in deep and fell against him as my orgasm came.\n\nI was resting on top of him, gasping. He wrapped his arms around me.\n\n\"Thanks.\" He purred.\n\n\"Don't mention it.\" I laughed.\n\n---\n\nWe cleaned up a bit, and we ate the take out, which was starting to get cold.\n\n\"Hey... I was wondering if you wanted to take the bus out to the cemetery.\"\n\nI looked up at Drake. So surprised that my broccoli fell off of my fork onto the floor with a plop.\n\n\"How...\"\n\nDrake shrugged. \"I know you haven't visited your parents in a while. And, you've done so many nice things for me today, and you have a day off. I'd like to meet them, too.\"\n\nI felt the bridge of my nose stinging a little from tears. \"Um, sure. Let's just finish up here.\"\n\nHe scooted his chair next to mine and gave me a quick hug. I let a few quick hot tears slip into the shirt he was wearing, but I wiped my eyes dry. They weren't tears of sorrow. I wasn't exactly sure what kind of tears they were. I was just so happy about Drake. And so bittersweet about the graves. It would be the first time I went without my family. And I had never gotten an opportunity to visit mom and dad with Toby.\n\nIt didn't really look like we would ever get to that point.\n\n---\n\nWe took the bus down. Drake seemed a little tense. I know he wanted to make me feel better, but now he seemed a little nervous, fidgeting and checking his watch.\n\n\"It'll be fine.\" I whispered. \"Thanks for... For coming with me.\"\n\nWe were on a crowded bus, but he gave my hand a quick squeeze.\n\nThe bus let us off about a block away from the cemetery. We walked, feeling the bitter winds. It would snow soon. Fall was almost gone from us.\n\nI walked into the cemetery, and I saw a group of people around the graves of my mother and father. Toby stood up, and I could see his profile as he looked back at us. He was too far away to see the expression on his face.\n\nI stopped and looked at Drake, confused and frightened.\n\n\"I called them.\" He said quietly. \"They agreed to meet.\"\n\nHe put an arm around my shoulders. \"Everything's going to be okay.\" He smiled crookedly. \"Or I'm going to have to kick some asses around here.\"\n\nWe walked to the graves. Celia ran up to meet us halfway. \"Hi! My name is Celia. Nice to meet you.\" She blurted.\n\nDrake held out his hand to shake. \"Drake. Nice to meet you, too.\"\n\nShe squinted at him slightly. \"He does look like Winona.\" She looked embarrassed, so she ran back to the group.\n\nDrake raised an eyebrow. Among all of the nervousness, all of the anxiety, I felt a bit embarrassed. \"I'll tell you later.\"\n\nWe walked up to the graves, and I felt my heart sinking when nobody said a word. It was a pure standoff. I stood a little closer to Drake, and I felt like a traitor. I had chosen him over my family. I hated that they had forced me to choose, and I hated myself for making the choice, even though I wouldn't have made it any other way.\n\nCalvin cleared his throat. \"We brought flowers for mom. Rosa misses you. We all do.\"\n\nMy legs felt a little weak.\n\n\"I'll come by and visit again.\" I whispered. My mouth felt so dry.\n\nI walked forward, feeling like a delegation. I hugged each of them.\n\nBen had Lisse in his arms. She went crazy when she saw me and hugged me tight, babbling away.\n\nBen made an effort. \"So... How long have you two known each other?\"\n\n\"About two months now.\" Drake said quietly. Had it really only been that long? I knew more than anything that I loved Drake.\n\n\"Hey, Hey Drake? Do you want to take us over to our dad?\"\n\nI saw the confusion on his face. I had yet to tell him all of the truths about our family, but he agreed. I watched them walk away to the other side of the graveyard.\n\nToby let out a very long sigh. \"We miss you, Neil.\"\n\n\"That's why I'm here.\" I said stiffly. I hated this. I hated this jilted way we had to treat each other.\n\nHe just sighed and walked away. I talked with Ben, and I played with Lisse. When I looked up, I felt a hint of raw panic deep in my chest when I saw that Toby and Drake were talking to each other on the other side of the cemetery.\n\nI stood up and walked towards them, feeling Ben's eyes, and hearing Lisse call my name.\n\nIt took me a minute to walk across the cemetery. I walked up on them fast, and Drake was just agreeing to something, nodding his head.\n\n\"We were just talking.\" Toby grunted. Seeing how wary I was.\n\n\"We're going to meet up again in a week. We're going to celebrate the twin's birthdays at our apartment.\" I glanced at Drake, unable to express my shock with anything more tactful that a blank stare.\n\nToby sighed again. \"We have to get going. It was nice to see you Neil.\" After a long pause where he was clearly struggling with himself. he just muttered. \"Drake.\" And turned away.\n\nI oversaw them getting into the car. I hugged them all goodbye. Then I went to talk to Drake, who had hung back a bit.\n\n\"Did you set this up?\" I asked quietly.\n\nHe nodded. \"I called, I spoke with Tony. But he was the one who suggested celebrating the twins' party.\"\n\nHe gave me a hug. \"It's hard right now. But we're all trying to do the right thing.\" He gave me a kiss on the forehead. Nobody was watching. \"Do you want a moment with them? I could wait at the gate?\"\n\nHe had gestured over to the headstones of my mother and father. I could see that they had bought the flowers. Rosa never grew lilies. Two simple white lilies placed in the little flower-holders in front of each headstone.\n\nI nodded, and he gave my hand a brief squeeze before going to the gate.\n\nI sat between the headstones. The earth was dry and cold. I felt something on my cheek. I looked up, and it had started to snow. Miniscule fragments of ice coming down in irregular puffs. The flow of snow was getting heavier, and more regular with every moment.\n\n\"Mom? Dad?\" I whispered.\n\nI closed my eyes, and thought about my family. Lisse's cheerful obliviousness. Celia's bold effort. Calvin's clumsy love. Ben's attempt at conversation. Toby's determination.\n\nMy family. All trying to accept the new person who was already such a gigantic part of my life.\n\nI took a deep breath. When I let it out, the mist stirred the increasingly heavy snowflakes. I could see them landing and melting on the tombstones. Landing and staying intact, like tiny stars, on the waxy flesh of the lilies.\n\n\"I think everything is going to be alright.\"\n\nI stood up. \n\nI went home.\n\nWe made love.\n\nAnd I went to bed, with hope for the future.\n\nTHE END\n\n*Hey. As for the future, I have several stories that I'm working on. Because of the nature of the stories, I'm not sure which ones I will finish, which ones will make it, etc. The only one that I am absolutely sure of right now is a story that will be called Cat and Dog. Probably a one-shot, or maybe I'll break it up into two or three. First Anthro, first consensual threesome :) Exciting!\n\nThank you all so much for your support. You guys take so much more shit from me than you should ever have to. I really don't try to be cruel, but sometimes it works out that way.\n\nKisses and Spanks,\n\n--Cruel*"
    ],
    "authorname": "Cruel2BKind",
    "tags": [
        "gay blowjob",
        "gay novella",
        "gay romance",
        "gay love",
        "gay prostitution",
        "gay novella",
        "gay 18-year-old",
        "gay love story",
        "happy ending"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/eyes-like-winona-ch-08"
}