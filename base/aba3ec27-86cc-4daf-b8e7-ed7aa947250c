{
    "title": "Texas Trio Ch. 11-15a",
    "pages": [
        "NOTE: Texas Trio was the first erotic novel I wrote. I'm posting here a few chapters at a time after making some small revisions. There's an actual story to back up all the naughty bits, so it's more fun if you start at the beginning! Thanks for reading! \u2013 \u2013Love- Stefanie \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 CHAPTER 11 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nSaturday night it rained, a downpour that seemed to last forever, and Cat went straight to sleep, never dreaming Colt would brave the storm to visit. She was woken by a gust of wind from the balcony and comparative silence falling behind the click of the closing door. She sprang from beneath the covers and ran right into Colt, who was standing near the foot of her bed trying to get his bearings in the velvet darkness of her room. \n\n\"For goodness' sake, you're dripping,\" she laughed softly, trying to smooth the wet hair away from his face. \"Let me get a towel.\" \n\nColt stopped her with a hand on her arm, turning his head to kiss from her cupped palm onto her bare wrist and up to the inside curve of her elbow. She shivered as he drew her in, willingly wrapping her arms around his neck and tipping her face to meet his kiss. \n\nHis big hands hard on the sides of her waist, Colt's storm-drenched clothing soaked her thin gown as his lips stripped reason from her. She might as well have been nude: she could feel every bump and button on the front of his shirt and trousers, the roughness of his work-wear on her delicate skin gratingly delicious. Colt tried to be patient, but his kisses and Jeremiah's had taught her too well; her tongue dipped between his lips before his own lust had a chance to whittle away his restraint. He groaned and bent further, giving her his mouth as his hands crept down to cup the sweet roundness of her bottom. \n\nInstead of cooling the lovers, the rain streaming from Colt's wet hair made their kisses slick and even hotter. \n\nCatherine pressed herself against him, subconsciously shifting to and fro, using her body to caress the growing bulge of his erection. She might not have noticed what she was doing, but Colt certainly knew, and he could think of nothing but tearing away the layers between them. As before, he didn't have to wait. Cat's hands slid from the nape of his neck onto his chest, where they fumbled with his buttons. \n\nColt kept his mouth on hers but released her bottom to assist. Not bothering with fasteners, he ripped the plackets apart, shedding the wet shirt and vest on the carpet behind him, stepping on the heels of his own boots as Cat's hands roamed his warm, wide back. With his shirt gone and her gown soaked, Catherine delighted in the feel of Colt's sculpted torso against her breasts. She arched to drag her nipples across his skin, earning a shared gasp in response, and a simultaneous thrum of laughter woven through their kiss. \n\nColt lifted his head to mutter a desperate imprecation, freeing Cat's mouth to sample the feast before her. He growled roughly when she found his nipple, mimicking what Jem had done to her, licking and sucking, rubbing her palm in tiny circles over his other hard nub. Her inexperienced explorations left Colt weak. He reclaimed her mouth in an ineffective attempt to calm himself, but his hands rebelled, roaming southward from Cat's curvaceous hips, strumming her gown into gathers at the backs of her thighs. \n\nCat tore her mouth away to moan when she felt the first touch of Colt's warm fingers against her bare skin. His fingers were damp and she flushed. Soon he'd discover that her gown was no longer the only source of liquid wetting the tingling surface of her body. Like Colt, she was soaked. \n\nHis lips found the pulse at her throat, and her arms tightened around his neck. \n\nUnlike Colt, Catherine didn't feel like she'd lost control, though, because way back at the beginning of their embrace, she'd decided to give in to the strength of her emotions. If she left all other considerations aside, Catherine already knew she wanted to be with Colt. She'd simply chosen to stop dithering about and enjoy being with the man she loved. \n\nThere were no decisions left to make, and all of Catherine's conscious mind was swallowed up by the sensation of Colt's long fingers sweeping duplicate trails of heat along the curves of her thighs. Wanting more than anything for him to continue, she raised her arms, asking wordlessly for him to remove her gown. \n\nA momentary spark of reason sizzled in the forefront of his brain, but Colt stomped heedlessly over it, and the fine silk fabric joined the puddle of his clothing on the floor. \n\nCatherine's nudity stripped away what remained of Colt's reservations, and he fell to his knees at her feet, lifting one breast to the warm embrace of his mouth. Her hands stroked his wet hair, pulling him closer. Pinned between his seeking mouth and the mattress on her high canopy bed, she was grateful for both when his hand slid forward from her hip, his fingertips dipping into the dampness at the apex of her thighs. \n\nThe contrast between the cool wet fingers and the heat Colt drew from her body made her dizzy. Cat moved her hands to Colt's broad shoulders for support as he reluctantly released her breast, settling back onto his heels to tease her need from flicker into flame. \n\nIn the darkness at Cat's feet, Colt felt as though his entire body were vibrating, stormed by an onslaught of subtle sensations which he usually ignored. When Cat shifted slightly, the fabrics of the bedclothes she leaned against slipped over each other with a tiny whispering caress. She supported her weight on her palms, but with every tiny movement, her fingertips dug into the pads of muscle behind his neck. Cat's scent surrounded him, spicy and intoxicating in the night, and closer than the sounds of the storm outside, every airy, rushing breath she drew was a clue to bend his next stroke, his next tug, his next touch so as to better fulfill her desires. \n\nHe pressed the swollen folds of her pussy apart and rubbed the ridge of delicate tissue he'd exposed. Wandering, he slicked the moisture of her passion up over the velvety softness. He circled time after time, his fingers dancing to and fro over the aching crest of her clit, before his hand slipped slowly back between her thighs, sending one finger thrusting deeply in the clingy wetness of her channel. \n\nCat nearly exploded at his first penetration, digging her fingers into Colt's shoulders and lifting one foot to his hard thigh, opening herself for more. \n\nShe whimpered when he rose to his knees again, sucking a tender nipple into the warmth of his mouth, but all sound left her when Colt's kisses trailed downward across her belly, headed for the needy, steaming heart of her existence. Her eyes opened wide in the darkness and her mouth formed the small \"o\" that Jem found so entrancing. \n\nOh, my goodness, he's not. . . he can't be. . . . \n\nCat foundered for only an instant before the world exploded into the blinding white light of Colt's tongue touching her most intimate spot, delving between her lips, licking Cat into a frenzy. \n\nHis thumbs spread her wide for the ministrations of his mouth, one from above, fingers splayed over her belly, and one from below, where his finger gently caressed from the inside what his lips loved from without. Cat would have crumpled without his support, her mind a useless pile of mush devoted only to absorbing the delicious ecstasy of his mouth on her pussy, his finger thrusting inside. The orgasm exploded from the base of her spine, engulfing her small form almost without warning, sweeping all semblance of sanity aside in a thunderstorm of sensation that seemed to last forever. \n\nReminding himself of her inexperience, Colt let his touch slow and lighten as Catherine gradually descended from her peak. When her legs collapsed, he guided her to a sitting position atop one of his thighs, reclaiming her lips. He wouldn't have been surprised had the innocent angel fallen asleep right there in his lap. \n\nWhen she turned her mouth to his, he kissed her sweetly and was surprised by the fervent desire he sensed in her embrace. Instead of sleepiness, he found an angel whose sensuality had been awoken, and who was restlessly awaiting more of whatever he chose to teach. \n\nCat turned her upper body to rub herself against him, her nipples plucking at his own. \n\n\"Colt, please. . . .\" she murmured, her words trailing off. She needed more of him, but she didn't know how to ask. \n\nColt required no more encouragement than that. He surged upward, lifting Cat to deposit her lightly on the summer coverlet. Peeling his pants off, he kissed a line up the inside of her thigh, joining her on the feather mattress. \n\nFor a moment, Cat tensed, anticipating the touch of his tongue and knowing the sensual torture of his mouth between her legs was sure to make her scream this time. \n\nBut Colt must have sensed something of what she felt, because his lips settled on the upper curve of her breast. She smiled into the darkness and wrapped herself around him, legs and arms straining to pull him into the heat of her body. \n\nColt resisted, moving only his hips. \n\nShe gasped as the head of his cock nudged it's way between her slick folds. He felt huge, but she didn't quail. She was past fear, past thought, into a place where pure yearning took control. Her body arched toward the pleasure of his touch. \n\nColt mumbled loving words, trying to soothe her, but she wanted more than his calm voice. \n\n\"Colt, please . . . please. . . .\" Cat was nearly climbing him in desperation. \n\nHe relented before her urgent pleas could dissolve his measured pace, finally guiding the bulging head of his cock to press against her opening. Cat froze, quivering as Colt began to push inside. As he relaxed downward, she felt her flesh stretching to accommodate his girth. When she whimpered, Colt retreated, making her whimper again. Her arms clenched around his neck. \n\nHis lips swept deliciously across hers. She tipped her chin up and opened to the tip of his tongue, and his swollen, hot shaft slid into the mouth of her pussy. \n\nWorking even another inch of his cock into Cat's hot, writhing little body seemed to take hours, but Colt was patient, pressing forward and withdrawing more deeply each time, until he knew his next thrust would be the one that broke through her maidenhead and brought him all the way inside his angel. \n\nHe kissed her tenderly and, though he couldn't see her in the dark, he opened his eyes to tell her what she meant to him. \n\nCat was sure her heart would burst when she heard him say, \"I love you, Cat\" as he surged forward. She expected the pain, but not the searing explosion of the orgasm which followed on its heels, obliterating the one fast, shearing sensation she experienced. \n\nColt's hard cock stretched her channel, the pressure intensifying and extending her contractions. \n\nShe clung to the broad shoulders above her, burying her face in the damp warmth of his neck, feeling the softness of his hair brush against her temple. He was her rock: a hot, huge, reassuring presence in the sea of unfamiliar sensations rocketing through her body. \n\nWhen her laboring gasps quieted, Colt slowly resumed rocking his hips, pulling and pushing with exquisite deliberateness as her pussy wept and softened. Soon, he was sliding smoothly in and out. Colt rose, supporting the arch of his body on elbows and toes as he began to move. \n\nCat's urgent grip on his shoulders eased, and her head fell back against the pillow as the thick invader caressed her inner walls, sending tingling waves of sensation shooting up her spine. He was so hard and hot, and he filled her so tightly that she could barely breathe. The air rushing into her lungs burned like the fire of his body hovering over her. His heat seared her wherever they touched: her inner thighs, her palms, her breasts. Every thrust brought his belly down against her, dragging the delicate folds of her labia back and forth, the friction of skin on skin, plush tissue between crushing bones, winding her body higher and higher. \n\nCat's fingers digging into his ribcage, she whimpered his name, \"Colt. . . .\" \n\nHe whispered his love in response to her plea, sustaining her when she thought she might go mad. \n\nShe was afraid to move her hips in case changing her position brought the pain back, but she was already teetering on the fine edge of another climax, and if she didn't move, she thought she might scream. \n\nCaught between the twin peaks of lust and anxiety, her muscles tensed, her body becoming ever more rigid. The grip of her legs around Colt's waist got tighter and tighter. It might have been painful, if his entire world hadn't been centered on the throbbing hold of Cat's wet, hot pussy around his swollen, aching cock. \n\nHe groaned softly, straining to hold himself back, but Cat began to moan and undulate, her hips moving with untutored enthusiasm. Unable to withstand the temptations of her body any longer, Colt began to fuck her in earnest. With only the third pistoning plunge of the heavy shaft inside her, Cat climaxed, writhing and gasping, her fingers digging into his shoulders. \n\nThe little sounds she made while her contractions held her in thrall were too much for him. Colt thrust deeply inside her and came, holding her hips up to his and groaning into the curve of her neck as her spasms embraced him. \n\nCatherine was still coming, but she felt him thicken and still, and the hot pulsations of wetness flooding her insides. It was amazing. \n\nReleased from the prison of their lust, Cat and Colt clung to each other, patting and stroking, kissing whatever was within reach, until she began to drift off. \n\nColt, wanting to stay in her bed, in her arms, more than he'd ever wanted anything before he met Cat Connor, nonetheless extricated himself from her embrace, kissing her softly in the velvety darkness, murmuring words of love. \n\nStill smiling, Catherine fell asleep before he even found his pants. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 CHAPTER 12 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nJem woke with a headache, as he had every morning for a week, and found Colt sleeping late, also becoming routine. On the ranch, his partner was always up early, kicking Jem's door in at sunrise unless he'd been at some girl the night before. Maybe they were both coming down with a fever of some sort, Jem mused tiredly. He tripped over Colt's pants in the dressing room and froze in dull-witted surprise when he picked them up to toss them aside. Holding the heavy twill trousers at arm's length, Jem gave them a shake to convince himself that his hazy senses were telling the truth. They were soaked. He glanced around and found Colt's cowboy boots peeking out from under a wardrobe, the russet leather blotched in dark islands of cocoa brown. \n\nJem dropped the pants and stared at Colt through the open door. Since they'd been here, his partner had worn nothing but cheap black suits and shoes in his role as Jeremiah's manservant. Colt's work pants and cowboy boots should all be back at the ranch, and Jem could see no reason for them to be lying in a wet heap in Harrison Matthews' elaborate Galveston manor. \n\nSince, in addition to sleeping more than usual and having a headache every morning, Jem's brain was only reluctantly roused this week, a few minutes passed before he thought to check outside. The sky was clear, but puddles dappled the dark gravel of the driveway, and the sun glinted off a million drops of moisture clinging to the grass and trees. \n\nJem swore silently and turned toward the dressing room. Halfway there another belated epiphany sent him steaming to his bedside table. Lifting the crystal glass left over from his usual bedtime brandy, he sniffed. The heady smell made him grimace but woke him slightly, too. He sniffed again. Brandy. \n\nIntent, he retraced his steps to the window, raising the glass to eye level and tilting it to the light. Dark sediment danced in a thin layer across the bottom. \n\n\"Son of a bitch,\" he swore, barely restraining his urge to hurl the glass across the chamber. He headed for Colt instead. \n\n\"Son of a bitch!\" \n\nColt was woken from a deep, dreamless slumber by the thud of his own head hitting the floor, punctuating the cusses his best friend hurled down from above. \n\n\"You shit-eating son of a bitch! You witch's turd! You drag me into this mess to rescue the woman, then you shit all over me!\" \n\nColt, dog-tired, was unalarmed by Jem's rant, delivered sotto voce as it was. If Jem had the wits to keep his voice down, Colt wasn't in immediate danger of being losing his life. He stayed flat on the carpet, waiting for Jem to get it out. \n\nAfter Jem ran down, Colt waited a full thirty seconds before rolling to his feet. \"I'm probably all those things, Jem, but what, in particular, got you so riled up this morning?\" \n\n\"You've been drugging me to duck out every night and court my woman!\" \n\nColt spun to face his friend, not sure which part of that statement pissed him off more. He set aside Jem calling Cat his woman to address the initial absurdity. \n\n\"Are you outa your ever-lovin' mind? Drug you? How the\u2013 no, why the hell would I do that? Far as I can tell you sleep like the dead already! What in God's name you think I gotta drug you for?\" \n\nJem inhaled deeply, prepared to reply, but the answer occurred to them both at the same time. \n\n\"Who's been drugging you?\" Colt asked, all the heat gone from his voice. \n\nAfter Jem showed Colt the evidence, he related the details of his headaches, half-hoping Colt would tell him he was being ridiculous, but Colt concurred. \n\n\"I shoulda known something was wrong, Jem. You never sleep like that 'less you're sick or drunk.\" \n\nJem lifted one shoulder. \"If I'd been quicker to notice the difference myself, you could have pointed it out to me sooner.\" \n\n\"Yeah, well, we both got other things on our minds right now.\" \n\nThey exchanged a quick glance, but set the \"other things\" aside while they decided how to handle the situation surrounding Jeremiah's bedtime-brandies. That conversation didn't last as long as either one of them would have liked. \n\nWhen they'd come up with a plan for later in the day, Colt was the one who turned the topic back to the more salient issue, venturing, \"And Jem. . . .\" \n\nJem had an idea what was coming before Colt spit it out, but detouring into detective work had calmed him. He waited while Colt worked through his hesitation. \n\n\"You're right, I been sneakin' out at night to see Cat\u2013\" Obviously reluctant to continue, he changed directions. \"I can't help it, Jem. I love the woman. I can't stay away from her.\" \n\nNot meeting his eyes, Jem made a face. \"Yeah, well, I'm in love with her, too.\" \n\n\"Shit.\" \n\n\"Yeah. Shit.\" \n\n\"Well, what are we gonna do about it, Jeremiah?\" \n\n\"There's only one thing we can do.\" Jem finally looked Colt in the eye. \"We'll have to talk her into it.\" \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 CHAPTER 13 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nNanny found Cat nude and tangled in a messy nest of bedclothes, her nightgown in a damp heap on the floor next to her bed, and came to the inevitable conclusion . . . Cat had a fever. \n\nWrapped in a dressing gown while the upstairs maids hurriedly remade her bed, Cat did her best to appear lethargic while frantically scanning her sheets for signs of blood. Thankfully she saw none. \n\nAnd while Nanny went down to fetch her a special sick-bed breakfast, Cat sprinted for the washbasin to clean her thighs before Nanny put her in the tub. She was lying listlessly in bed when Nanny returned, and after a cooling bath, that's where she stayed all day, at Nanny's insistence. While maids tiptoed in with endless cool cloths, foul-tasting teas, and chicken broth with lemon\u2013 which fortunately Catherine enjoyed\u2013 she lolled about pretending to read while recalling every detail of her night with Colt. ",
        "After lunch she heard Jem in the hallway, asking after her while Nanny shushed him rudely. \n\nCat called out, \"Nanny, bring Se\u00f1or Allejandro in to see me.\" \n\nNanny stuck her head in the door. \"I won't do no such thing. It ain't proper for a young lady to have a gennleman caller in her bedroom.\" \n\n\"You'll be here with him; it will be fine.\" \n\n\"I won't.\" \n\nNanny started to pull her head out in the hallway with the rest of her, but Cat hissed to get her attention. \n\nNanny stuck her head back in. \n\nLowering her voice, Cat threatened, \"Nanny, if you don't bring Se\u00f1or Allejandro in, I'll tell Caleb what you said about his legs.\" \n\nNanny's eyes widened. \"You wouldn't do that!\" \n\nCat smiled. Jem had brought two servants with him\u2013 his groom and the huge Chinese valet Cat had only glimpsed once since their arrival. A recent session of eavesdropping on the servants when they didn't think she was paying attention had yielded the amusing news that Nanny was carrying on a flirtation with the groom, Caleb. Catherine had been teasing her about him once in a while, and she wasn't above putting the information to good use. \n\nNanny's head disappeared as the door opened wide, admitting Se\u00f1or Allejandro, patently amused and far less concerned than he sounded a minute earlier. \n\nCrossing to Catherine's bedside, he bent low over the hand she offered. \"Se\u00f1orita, it is wonderful to see you are feeling better. Your Nanny told me you were unwell this morning.\" \n\n\"Posh,\" Catherine said. \"It was warm last night and now she thinks I have yellow fever.\" \n\nNanny clucked her tongue from across the room. \n\nCatherine wrinkled her nose at Se\u00f1or Allejandro to show she was teasing. \"You simply cannot find decent help these days. You don't have a Nanny you could loan me 'til I find a new one, do you?\" \n\nNanny faced the other direction, her head bent to her sewing, but her shoulders shook as she tried not to laugh at Miz Cat's antics. \n\n\"I'm afraid, Se\u00f1orita, that the whole of Argentina contains no one like your Nanny.\" \n\nNanny couldn't help herself: she turned to cast a brilliant smile over her shoulder at Jem. \n\nJem stayed by the edge of Catherine's bed for a few minutes, making small talk. He excused himself with another bow, thinking that Catherine did indeed appear fatigued and slightly flushed, but he'd bet the ranch it wasn't a fever which had given her skin that lovely glow. \n\n\u2013:\u2013:\u2013:\u2013 \n\nBy the time Jeremiah located Colt lounging around the stable yard, he'd schooled himself not to mention his friend's night-time jaunts. Instead he suggested a walk. Once safely away from the house, he broached the subject of his own nasty night-caps. \"I think I know who's been doping my brandy at bed-time.\" \n\nColt, attempting to keep his eyes lowered in case they ran into one of the household staff, darted a sideways glance at Jem. \"Who?\" \n\n\"At first I thought it might be Catherine herself doing it in order to spend time with you, but she doesn't know you're here. So, who else has an interest in keeping me in my own room at night?\" \n\nColt shrugged. \"I'd say Harrison, but he doesn't seem at all concerned with her welfare.\" \n\nJem answered his own question, \"I think it may be Nanny.\" \n\n\"Nanny!\" Colt exclaimed, pausing to give the possibility more consideration. \"Nanny. . . .\" \n\n\"I need to be sure. If it's Harrison I owe him a thrashing, at least.\" \n\n\"And if it's Nanny?\" Colt quirked an eyebrow at him. \n\nJem chuckled. \"A spanking?\" \n\nColt laughed, too. \n\nJem went on, \"Catherine threatened Nanny with someone named Caleb. Maybe we should tell him.\" \n\nColt stopped precipitously. \"Caleb? She can't mean Cochise?\" \n\nThey'd brought along their half-Cherokee, half-Negro groomsman from the ranch. It was a risk as the man never listened to a word either of them said, despite a series of lectures from Jem about Caleb's generous salary and who paid the bills. On the other hand, he rarely spoke at all. At least he hadn't until they'd taken up residence at the Matthews mansion. \n\nJem waited for Colt to catch up physically and, hopefully, bring him up to speed mentally. \n\n\"Hmmm. That makes more sense, though I'd say he's about half her age.\" Colt was thinking out loud. \n\n\"Colt,\" Jem prodded. \n\n\"Oh, ah . . . I keep my head down and play dumb all the time so people don't pay much attention to me. Not that Cochise pays me any mind, any time. Nanny and him been throwin' barbs at each other since we got here, but I'm thinkin' now maybe them barbs ain't all that sharp.\" \n\nThey shared a grin at the revelation; they'd found the perfect punishment for Nanny's infraction, if it was truly she doping Jem's bedtime brandy. \n\nAfter supper when the men traditionally took cigars in the study, Jem excused himself early. He'd always assumed one of the housemen got the task of pouring his evening drink, or maybe Harry's man Hawkins, but Nanny could have volunteered to carry it up to his room. He was determined to find out for certain. \n\nColt made himself useful by drawing a bath. \n\nJem wisely refrained from commenting on his friend finally taking up the slack on his position as a valet. \n\nJem was about to climb in for a soak when he heard the door to his bedroom creak open. It swung hastily shut, but he was across the room in four giant strides, yanking the door wide-open to find Nanny cowering in the hall, his brandy centered on the silver tray in her hand. \n\nJem dropped his guard and rearranged his dressing gown, which had been disarrayed by the run. \n\n\"Oh, Se\u00f1ora, I beg your forgiveness. Se\u00f1or Matthews warned me there are burglars at work in the town, and I'm afraid I became alarmed at your silent entry. Please forgive me if I frightened you.\" He gave the older woman a polite half-bow. \n\nNanny squeaked her answer, \"No, no, I'm sorry. I din't mean to bother you, Mister Jem. I brought your drink for bed.\" \n\nShe curtsied abruptly after Jem accepted the snifter, scurrying away down the hall. \n\nJem made it inside the dressing room before letting loose, forcing Colt to wait out the extended snickering and frequent sputters before he heard the reason. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 CHAPTER 14 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nReleased from her pretend recovery the following morning, Cat descended to breakfast with Harry, Jem, and Hawkins. Harry and Hawkins bolted breakfast and made themselves scarce, leaving the courting couple alone. Jem carried his plate around to Cat's side and they held hands under the table where the servants couldn't see. \n\nJem used his thumb to tease Catherine's palm and the inside of her wrist until she couldn't think, much less carry on a conversation or consume her breakfast. She'd had no idea an apparently innocent caress could be so arousing until the past few weeks with Jem, sneaking a touch here and there while the whole household kept an eye on them. \n\nThis morning, Nanny had hemmed and hawwed up a storm, obviously trying to find the nerve to tell her mistress something. After hemming herself into a corner with nowhere to go, she'd finally informed Cat that she couldn't possibly marry Jem. When Cat insisted on hearing more than the unembellished dictate, Nanny choked out that she'd accidentally seen him unclothed. \"Honey, we gotta get you outa that. You don't want that man's thing anywhere near you. That's way too big for a little girl like you.\" \n\nShe wouldn't say any more about it, and refused to say why she'd been in Jem's room to begin with, just repeating her admonition: Cat could no longer entertain the notion of marriage to the handsome Se\u00f1or Allejandro! \n\nCat dismissed her with a kind hug and managed not to giggle until after Nanny left the room. Since then she'd been unable to concentrate on anything else. Shame on her! \n\nMaybe it would be different if she and Colt had lit lamps instead of hiding in the shadows, but they hadn't. She'd had no chance to be scared before they tumbled into bed, and now that she'd experienced the intoxicating tug and pressure of Colt's cock filling the hollow spaces of her body, fear didn't enter into it. She wanted more. Cat suspected Nanny wouldn't approve of Colt's size, either, but the older woman's warning had the opposite effect to that which Nanny had intended. If possible, Cat now lusted after Jem more than before. No matter how many times she remonstrated herself, she wanted him in her bed. She wanted to feel him inside her, to see his golden eyes studying her the way he had that day by the river. \n\n\"Se\u00f1orita? Catherine?\" \n\nCat came suddenly to her senses and realized she'd been staring dreamily into a teacup held midway to her mouth. \n\nShe pursed her lips, trying to suppress a disbelieving chortle over her completely indecent thoughts. She glanced at Jem and he was studying her in the exact manner about which she'd been fantasizing only seconds before. Her lips parted as the hidden giggles turned to an obvious gasp. \n\nJem, reading the desire in Cat's eyes, lifted the hand he'd been holding and brought it to his mouth. Catherine's eyes dropped to her suitor's full lips as he brushed them lightly across her knuckles. It was bad enough when he turned her arm to kiss the inside of her wrist, but when Jem bowed his head and gently nipped the soft ivory skin as he gazed up at her with those bright golden eyes . . . Catherine was positive he could see how it affected her. If he kept it up, she thought she might come right there at the table. \n\nThe penetrating rap of the big bronze knocker saved her. The silky voice that followed, greeting Uncle's butler at the door, drew an unexpected reaction. Without even the polite excuse her upbringing demanded, Catherine yanked her hand from Jem's and rushed from the room. \n\nIn the front hall, a footman waited patiently behind a taller, slimmer approximation of Cat. Tossing reserve aside, Catherine ran the last few steps into her sister's equally enthusiastic embrace. \n\n\"Becky!\" \n\nLaughing, Becky Connor lifted her older sister and whirled her around, their skirts flying out, making the butler and footman grin. \n\n\"Put me down, you horrible brat, or I'll have Nanny thrash you!\" \n\nNanny, hearing the commotion, poked her head out of the kitchen and, seeing Becky, pushed her way out, showing no remorse when she nearly ran down their handsome house-guest. \n\nBecky released Cat to give Nanny a less strenuous greeting. \n\n\"Oh, Miz Becky! You're home!\" \n\n\"Nanny! I've missed you so!\" \n\n\"Miz Becky! Miz Becky!\" Nanny's emotions stole any more eloquent greeting. \n\nWhen Becky's smile lifted to Catherine, she caught sight of the tall, very attractive stranger waiting attentively several steps behind her sister. Showing no signs of doing so a few seconds earlier, she released Nanny from her embrace, glancing downward to meet her eyes. \"I've missed you, too, Nanny. \n\nShe caught her sister's eye and tipped her head toward the man behind her. \"Catherine, pray introduce me.\" \n\nCatherine, remembering her guest, blushed a brilliant scarlet. \"Oh, my goodness!\" \n\nShe spun and stepped toward Jem. \"Se\u00f1or Allejandro, please forgive my lapse!\" \n\nRestraining his humor at her uncharacteristic slip, Jem captured Catherine's hand as she curtsied. She barely had a chance to bend her knees before he tugged her upright, using just enough force to make Catherine step forward as she rose, nearly bumping him. His knuckles brushed the curve of her breast when their eyes met, and her blush deepened. \n\nHis quiet reply was only for her ears. \"You need never apologize to me, my darling Catherine. Everything you do is perfection.\" \n\nDeliberately slowing the motion of his hand to create a subtle stroke along the peak of her breast, Jem lifted her fingers to his lips. He finished by guiding her around to where Becky waited. \n\nCatherine, having trouble forming the necessary phrases, believed she managed introductions remarkably well under the circumstances. The circumstances, she thought, being the undeniable liquid heat flooding her thighs, the tingling sensation Jem's fingers left behind, and the lingering desire of her other breast to receive the same sweet treatment. \n\nBecky's quick penetrating glance told Cat she knew something beyond the obvious social exchange had taken place, but that didn't stop her from fluttering her lashes at Jem and offering up her most charming smile. \n\nA sharp, dismaying pang of possessiveness swept away Catherine's fog of bemusement. \n\nUnlike Catherine, Becky had gone directly from darling child to beautiful young woman, with no awkward or plain stage in between. Cat had outgrown the lanky, graceless phase, but she was still rather plain in comparison to her younger sister. Nanny said she'd grow into her looks, but that didn't do her any good at that moment, watching Jem bow over Becky's hand as she introduced them. \n\nWhen Jem straightened, though, he retreated a step, and his eyes\u2013 as hot and tender as ever\u2013 returned immediately to Catherine's face. She flushed in pleasure and relief, and lowered her own lids automatically, to cover the heat she felt rising in response. \n\nWith the social niceties complete, Catherine excused herself and followed Becky upstairs, overcoming the urge to glance behind. She could feel Jem's eyes on her swaying skirts as they climbed. \n\nIn Becky's suite, Cat restrained a gleeful smile as her sister fidgeted with her reticule and clothing, while the footmen delivered baggage and Nanny fussed, setting the upstairs maid to unpacking Becky's trunk. \n\n\"Nanny, leave it,\" Becky ordered, and softened her tone, \"I'm famished. Do you think Cook could be pressed into another pot of tea?\" \n\nNanny rushed off, and Becky hurried to dismiss the maid. Spinning to face her sister, she exclaimed, \"Who was that?\" \n\nCat kept a straight face. \"Why, Becky, I introduced you only ten minutes ago\u2013 don't tell me you've forgotten the gentleman's name already. I don't know what that school is teaching you. . . .\" \n\nBecky grasped her sister's hand, shaking it. \"Stop teasing me, Cat Connor! Tell!\" \n\nSide by side on the brocade settee by the hearth, Cat told Becky the gist of the story, leaving out Uncle Harry's worst threats but including his drastic change in demeanor since Aunt Frannie's death. \n\nBecky lowered her eyes in confusion, and Cat knew what she was thinking. Her sister didn't remember their parents, and she'd always been Harrison's favorite, able to talk her way around his moods and rules nearly every time she felt the need. On the other hand, Becky came close to worshiping her older sister, and had absolutely no reason to doubt Catherine's story. \n\nShe looked up, her eyebrows wrinkling. \"He can't possibly be that bad, Cat. Are you sure you didn't misconstrue\u2013\" \n\nCat didn't think Becky needed to know ever little detail of precisely how terrible the past few months had been. Harrison surely wouldn't strike Becky, and one way or another, Catherine was going to get them all out from under her uncle's roof, to someplace safe. \n\n\"He was truly awful, Becky, and he repeated himself so many times there's no possibility of a misunderstanding.\" \n\nShe changed the subject slightly, hoping to relieve Becky's concern. \"So, when Uncle Harry said he'd found a husband for me, I feared the worst, but Se\u00f1or Allejandro is. . . .\" Her words trailed off. \n\n\"Unbelievably handsome!\" Becky finished the sentence. \n\nThey giggled together, stopping to admit Nanny with their tea and cookies. \n\nCatherine ate extra to make up for the breakfast she hadn't eaten in Jem's overwhelming presence. Resuming their gossip after tea, Becky and Cat were both slightly more subdued. \n\n\"Will you marry him, then?\" \n\nCat pursed her lips. That was the real question, wasn't it? But no matter how much time she spent contemplating it, she just couldn't chose between them. Adding to her confusion, she no longer had the slightest chance of excusing her own behavior. \n\nShe'd had relations with Colt, for goodness' sake! She had no right even thinking about another man, especially the kind of lascivious daydreams with which her mind kept Jem occupied. Although Colt hadn't actually declared himself, Catherine reflected. \n\nShe sighed loudly; as usual, she never succeeded more than momentarily when she tried to put the cowboy out of her mind. \n\n\"I don't know,\" she murmured, a weak answer to her sister's perfectly clear question. \n\nBecky frowned again. \"Whyever not? He's handsome, wealthy, and obviously smitten by you! I thought your skirt was going up in flames the way he was ogling you downstairs.\" \n\n\"Becky!\" \n\n\"Oh, posh! You know perfectly well what I'm talking about, Cat. I saw your blushes. You want his bed as sorely as he wants you in it.\" \n\nCatherine's mouth fell open. \"Shocked\" didn't begin to describe her reaction to hearing those words from the lips of her sweet, innocent younger sister. Well, maybe not sweet\u2013 Becky could be quite the terror at times\u2013 but still! \n\nNanny's lectures were more about wifely duty than the earthly pleasures Cat had so recently discovered, and she had no reason not to assume that Becky's lack of knowledge echoed her own. \n\nBecky laughed with abandon at her sister's expression until Cat regained her tongue. \n\n\"Rebecca Mayfair Connor! Whatever have they been teaching you at school?!\" \n\nBecky blotted her eyes. \"Never mind that! Will you marry Se\u00f1or Allejandro or not?\" \n\nCat, confronted with the real dilemma, smoothed her skirt across her lap. \"I don't know, Becky.\" \n\n\"Whyever not?\" she repeated. \n\nCatherine hesitated, brushing non-existent lint from her pale, apple-green morning gown. \n\n\"What's the matter, Cat?\" Becky recognized her sister's skirt-smoothing for what it was, as a clear indication of her rising anxiety. \"Is he\u2013?\" \n\nCat hurried to correct the impression, \"No! Not at all\u2013 Jem's sweet and very intelligent. He'd make a wonderful husband . . . only . . . there's someone else, too.\" \n\n\"Oh, my goodness! Two handsome suitors! Is the other one of Uncle's plans, too?\" \n\n\"No, Uncle doesn't even know him.\" Cat thought she'd better leave out the rest of that particular story. \"His name is Colt, he's a rancher and, Becky, he's . . . he's\u2013\" \n\nWords failed her. \n\nBecky immediately divined her sister's dilemma. \"You can't decide between them, is that it?\" \n\n\"No!\" Catherine's vehement reply was a sign of the relief she felt at being able to confess her plight, but desperation was the chief emotion written across her delicately-drawn features. \"But, Becky, it's even worse! I think I love them both!\" \n\n\"Keep them both, then.\" \n\nBecky's solution was dismissed as speedily as she produced it. \"Becky, I'm serious. I don't know what to do.\" \n\n\"Cat, I'm not teasing . . . why can't you keep them both?\" \n\nCatherine couldn't come up with a question capable of expressing her intense confusion. \n\nBecky lowered her voice, \"Cicely Fredericks at school said her brothers have a woman who 'cooks' for them at their country house, but really she beds them both.\" \n\nHer previous shock was inconsequential in comparison to what she felt upon hearing that statement. An hour ago Catherine believed Rebecca largely ignorant of worldly ways, her only knowledge garnered from Nanny's perfunctory lessons on what went where. This astounding tidbit of information had certainly not been included in those lectures! \n\nRealizing she'd get no helpful prompts, Becky whispered, \"Cicely hears them often from her balcony. She says the woman begs for more!\" \n\nHer younger sister obviously found the notion compelling, and Catherine's mind began to dance around the perimeter of the pictures appearing in her head. \n\n\"But . . . but . . . how?\" \n\n\"Cicely saw them kissing on the grounds once\u2013 while the woman kissed one brother, the other kissed the back of her neck and put his hands\u2013 well\u2013 everywhere, Cicely said!\" \n\nCatherine, who'd been extremely pale, flushed from the neck of her gown right up to her hairline, beyond aroused at the image of herself pinned between Colt and Jem, their hands roaming over her body. ",
        "Oh my God! \n\nBecky's amusement dissolved: Catherine looked like she might faint. \"Cat, here . . . drink some water.\" \n\n\"Becky\u2013 that isn't\u2013\" Trying to get a handle on the multitude of objections she should have, Nanny saved Cat from a reply. \n\n\"That girl told me she didn't finish your unpacking! Get in here, missy!\" Nanny gestured for the maid to follow, ignoring the girls, who finished their tea in silence. Catherine stunned and Becky rather too smug for Cat's liking.  \n\nBecky's novel, implausible, impossible suggestion helped Cat not at all. It only served to muddle her further, adding an inappropriately aroused response to her own list of moral failings. Subdued and nearly silent throughout dinner that evening, she said goodnight and went to her room immediately afterward to think. \n\nSeated by the balcony, she assumed the knock at her door to be her younger sister. \"Come in!\" \n\nSe\u00f1or Allejandro's entrance surprised her into standing, clutching the neck of her dressing gown closed over her thin silk nightdress. \n\n\"Se\u00f1or, I\u2013\" \n\n\"Please be seated.\" Jem took a knee next to the chaise as she sank back onto the silk brocade. \"And you really must call me Jem, it is so much more musical on your tongue than that formal address.\" \n\nShe couldn't help smiling at him, despite her confusion. He was so handsome and so sweet. \n\nJem struggled to keep his eyes off the sliver of ivory skin exposed when Catherine let go of her robe. He glimpsed the upper slope of her breast, and suspected from their previous encounters that if he leaned forward to kiss her, she'd let him kiss there, too, and reach under her gown. . . . \n\nJem cleared his throat and released Cat's hand to reach inside his jacket. \n\nWith a formal flourish and an announcement he'd actually practiced, Jem presented a sage velvet case. \"This box and its contents are but a pale approximation of your beautiful eyes, my sweet Se\u00f1orita. Please accept a small token of my regard for both your beauty and your stimulating company. I hope to have the honor of both for many years.\" \n\nHe bowed his head as he finished, but couldn't help feeling the gesture was merely a sign of cowardice on his part. Catherine's direct gaze sometimes gave Jem the feeling she was viewing his very heart. He'd never been this vulnerable before, the tingle of fear an odd accompaniment to the sweeping pandemic of passion she inspired in every cell of his body. \n\nHe folded his hands on the edge of the chaise and watched Catherine unfasten the mother of pearl clasp and lift the lid. Her eyes rounded and flickered to his, then back to the box, as she lowered it to her lap, running her fingertips across the sparkling treasures within. \n\nCatherine had never in life never seen anything so beautiful. \n\nA delicate lacework of gold surrounded the pale peridots forming the choker and earrings. Dozens of small diamonds ringed the teardrop-shaped bobs, but the choker, set with eight large oval peridots, was graced with an equal number of pear-shaped diamond drops, glittering on the case's black silk lining. \n\nCatherine couldn't speak. Her family was well-to-do, of course, and she had her share of fancy gems, but this was in another category entirely. This set was made for a queen, or a duchess, at least, not a simple Texas belle like herself. \n\nUnable to stand the suspense for a moment longer, Jem murmured a question. \"Does it not please you? Perhaps something more\u2013\" \n\nCatherine unconsciously pulled the box closer to her body, protecting it. \n\nJem smiled at her possessive gesture. \n\nCat realized what she'd done and set the case on her lap, reaching out to rest her palm on his cheek in the gesture he was beginning to realize meant so much from her. That hand on his face expressed not only appreciation but tenderness, awareness of him as a man, and recognition of the admirable qualities she saw in him. Catherine's hand made him see their future together, the man he could be with her by his side. He'd never felt so valued nor so loved. \n\nHe placed his hand over hers and finally leaned forward. Catherine reached out to him, as receptive to his fervor as he was to her tenderness. With the first feathery touch of his lips on hers, she melted into his kiss, her fingers sliding to his collar while her thumbs delicately explored his jaw, roughened by a day's-end beard. She loved the yielding scratchiness of his face under her hands, the heat of his mouth, the taste of his tongue, parting her lips for his first foray. \n\nJem groaned against Catherine's mouth and forced himself to straighten, his eyes closed. Sensing some of what he felt, a tiny smile touched her lips. \n\nHis golden eyes opened. \"Se\u00f1orita, I must beg your leave. I fear your kindness will make a mockery of my self-control.\" Jem bent over her hand once more, rising to his feet and bowing again on his way out. \n\nCatherine sat staring at the jewels in her lap for a full five minutes before realizing she'd never even thanked him. They twinkled at her in the lamplight like the green fire of a cat's eyes, and she was suddenly sure he'd chosen them with that in mind, as well. Generous and attentive, Jem would be an excellent lover, she imagined, smiling as she remembered Nanny's physical assessment of his charms. He'd be a wonderful husband, too. \n\nA rush of dismay wiped the smile from her lips. \n\nJem was a good man. \n\nIf she married him, she knew she'd need never worry that his affection might stray. He deserved a woman as honorable as he, one who would come unsullied to his bed, not a woman still enamored of the man who'd taken her virginity. \n\nCatherine frowned down at the sparkling symbols of her own inadequacy. Snapping the lid shut, she rose quickly to her feet. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 CHAPTER 15 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nCaught in a storm of unfamiliar emotions, vulnerability chief among them, Jem went back to his suite and found Colt relaxing in the copper tub of the grand marble-encased bathroom. It irked him as though Colt were stealing the privilege, as though he really were a servant instead of Jem's partner in this business, and Jem glowered at him from the doorway. \n\nColt, sipping a brandy, met his stare steadily. \"What's settin' your spurs, Jem? You got that look.\" \n\nIn some corner of his head, Jem knew he was being unreasonable, but he didn't care. He'd had a hard-on for weeks, and he knew damn well something had happened with Catherine to give Colt the smug grin he'd been wearing for the past two days. \n\n\"You wanted me to help. I'm helping. You got me into this damn mess, now you're making it harder for me to accomplish what we came here to do.\" \n\nColt set the brandy down and stood, grabbing a towel from the brass rail. He didn't answer, irritating Jem further. \n\n\"If it wasn't for your sneaking around every night, this whole mess could be settled by now. I'd be engaged, we'd have the wedding you wanted, and we could get our asses back to the ranch, where we should be.\" \n\nColt climbed out of the tub to dry his feet and wrap the towel around his hips. \"I don't wanna argue with you, Jem and I'm guessing that's all you got in mind, so I'm just gonna keep quiet.\" \n\nDripping, he padded onto the dressing room's richly patterned Persian carpet and pawed through the smaller wardrobe, making sure he had a clean shirt to go with the ugly black suit he'd be wearing again tomorrow. He wasn't too happy about the situation, either. He'd rather be on the ranch with Cat, knowing she was safe, making love to her morning, noon, and night, but they weren't there yet. \n\nIn fact, he wasn't sure they'd ever get there. Getting a lady like Catherine to agree to their plan seemed unlikely, at best. \n\nJem grabbed Colt's shoulder. \"I'm serious. You have to stop sneaking around.\" \n\nColt frowned, spinning to face him. And froze, his frown melting into sheer shock as his eyes landed on Catherine ten feet away. Poised in the doorway beyond Jem with a velvet box in her hand, she looked as stunned as he felt. \n\nSeeing Colt's expression, Jem spun, too. \n\nFor a moment no one moved, frozen into a tableau none of them could have imagined an hour ago, least of all Catherine. \n\nShe'd come to apologize and return Jem's jewels. \n\nWorried and hesitant, wary of being caught knocking on a man's door in her nightclothes, she paused in the hallway. The muffled voices inside made her think neither Jem nor the Chinese manservant would hear a low knock, so Cat crept in. She meant to call out, but some indefinable quality of the second man's voice stilled her own, luring her unbidden toward the bright lights of Jem's dressing room. \n\nShe hadn't yet identified the voice when the huge, nearly-naked \"Chinaman\" turned to look at her. \n\nWith cobalt blue eyes. \n\n\u2013:\u2013 \n\n\u2013:\u2013:\u2013:\u2013 \n\nSee you in two weeks with Section 5, when Nanny makes a troubling discovery. Thanks again for reading and commenting. PSST\u2013 see the stars down there v v v . . .? Don't forget to feed your authors!! \n\n\u2013:\u2013:\u2013:\u2013"
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "cowboy",
        "forced marriage",
        "historical romance",
        "mystery",
        "first time",
        "virgin",
        "secret",
        "oral sex",
        "betrayal",
        "texas"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/texas-trio-ch-11-15a"
}