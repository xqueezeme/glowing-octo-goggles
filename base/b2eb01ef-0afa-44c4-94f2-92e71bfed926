{
    "title": "Lion's Den Ch. 06",
    "pages": [
        "Leo could not wait for the flight attendant to let him know he could turn on his cell phone. He knew Max was up by now and had seen the ring he left on her finger. He was anxious to hear her response, although he wasn't too confident she would say yes. He had bought the ring in Italy, but the time never seemed right to propose until their conversation before he left. In fact it was Max who mentioned marriage first, saying she would rather be a widow than a divorcee. He had spoken to Antonio and had received his blessing with pretty much the same warning. His parents were also pleased at the prospect of Max joining the family in a more permanent way. Leo's stomach did a flip as he was allowed to turn on his phone. He indeed had a message from Max.\n\n\"Hey hun, lil' man apparently knows you're not here. He has been fussing more than usual so when you get this message call so he could hear your voice.\"\n\n\"Fuck,\" Leo cursed under his breath. She did not mention the ring or give a response. Did she not see it? Of course she did, that sapphire was no joke. What are you up to Max? Leo knew Max's crazy streak, and she could do anything when she felt cornered. Like take their kid and run to Colombia. He wanted to call and tell her never mind about the proposal, but decided against it. If Max was not going to mention the ring then he wasn't going to either.\n\n\"Hello, Luca, it's daddy.\" Leo never tired of addressing himself as daddy. \"Remember I told you I was going away for some days. Don't give your mother a hard time. I'll see you in two weeks.\" \n\n\"Hey Leo, I want you to take note that your son not only ruined my girlish figure, he is sucking the life out of my breasts. He's going on soy soon if he keeps this up.\"\n\nLeo shifted uncomfortably in his seat as his cock jumped at the vision of his naked Max breast feeding their son. \"Luca, those breasts are just on loan to you. They belong to me, so handle with care. And Max there was nothing girlish about your figure, you are all woman babe. By the way did you use that cream for your breasts when you woke up? I had a good go at them and now Luca, so you must be extra sore.\" Leo had learned some new stuff since the birth of his son. Weird shit, but he was glad to learn. It made him feel proud and a part of them. After not being there the first few months of Max's pregnancy he was not going to be left out of any more experiences. He realized that to his core he was a family man, and although Max was not asking him to, he was seriously considering a new occupation.\n\nMax wanted to laugh at hearing the concern in Leo's voice, but it was no laughing matter. To her he sounded so domesticated. She wondered if family life would make him lose his edge. It would be her worst fear brought to life.\n\n\"Max? You still there babe?\" Leo hated it when Max went silent on him. That meant she was thinking about something that most likely he did not want to hear.\n\n\"Yeah I'm here. I just want you to know that as soon as the plane hits that tarmac you better have your game face on.\"\n\n\"I got ya. It'll be fine. I was doing this long before I met you.\"\n\nMax cut him off, \"Yeah yeah yeah, and you will be doing it long after me.\" \n\n\"Oh hell no Max you're never leaving me!\" Leo laughed realizing he might have said that a little too loudly, as the neighboring passengers gave him queer looks. His voice got very serious and low, \"Max, I'm coming back to you.\"\n\n\"I got ya.\" Max replied with his favorite response. \"I love you. We'll chat when you get home.\" Max felt very strange as the words slipped past her lips but she meant them.\n\n******\n\nWith Luca tucked in and down for the night Max had time to think about the ring on her finger. A ring she was not sure she wanted yet, but still had not taken off. As tumultuous as their relationship had been so far, she knew Leo was her match. If they got married it would be a forever deal, nothing short of death could end it.\n\nShe tucked the marriage thoughts away to offer a silent prayer for Leo. Max had every right to be worried about Leo. She had been overhearing snips and bits when Leo was talking to Pauley, and gathered that trouble was brewing. Last night during their nightly talk Leo told her what was going down in New York.\n\nA couple of bosses were arrested the day Luca was born and chaos had broken out in a massive power grab. Voids needed to be filled and Carmine, being the peacekeeper, was pulled in to keep the bloodshed to a minimum. Leo was going back to maintain the peace in his districts and help Pauley with his. He was upfront with Max about how dangerous some of this undertaking would be. It was not his intention to worry her, but prepare her just in case it all went to shit. He also informed her that in the event of his death she and Luca would inherit everything. It was a difficult conversation to have but necessary.\n\n******\n\nPauley was waiting patiently for Leo's flight to land in Newark, NJ. In order to keep a low profile for awhile they decided it would be best for Leo to fly into EWR. When they saw each other they double kissed and hugged.\n\n\"Cuz it is good to have you back. Your pop's been holding on for as long as he could without you, but the pressure is mounting.\"\n\n\"What about your situation?\"\n\n\"It is stable for the time being, no more encroaching, but we need to push back. Hard.\"\n\n\"Ok, anything else I need to know?\"\n\n\"Nah. How's you know who and you know who?\" Pauley asked cautiously. No one outside their family knew Leo had a kid and it was agreed to keep it that way until the dust settled.\n\n\"Well. All is well on that front. And it might get better if I get a yes.\"\n\n\"You seriously want to do that? You know there is no taming one like her?\"\n\nLeo laughed at Pauley. \"You have no idea. But she is mine.\"\n\nAs they approached the car Leo handed Pauley a little electronic device for sweeping for bugs. \n\n\"This is new? A gift from your friend?\"\n\n\"You know it.\" It was one of the many gadgets that Max kept in her \"playroom\" as she called it. After their conversation about what was going down in New York Max gave him full access to her toys, and taught him how to read and write coded messages just incase. Leo smiled as he remembered the first night Max took him into her inner sanctum.\n\n******\n\n\"Max what is in the room with the coded lock?\" Leo was terribly curious about what was behind that door. He had seen Max and her father go in and out of it. He knew it used to be the third bedroom, but what Max had beyond those doors was a mystery.\n\n\"My playroom.\"\n\n\"Your what? Is that some kind of S&M thing?\"\n\n\"Wanna see it?\" Max led Leo into her gun room. Leo looked around amazed. He had never seen a private collection of that size. He had his own assortment of weapons, but Max's impressed and concerned him at the same time. Aside from all the guns he appreciated the room as quintessentially Max; tough, feminine, private. Her armory was mounted against pink French toile wallpaper. All the woodwork was black. In the center of the room there was a square display case that contained her antique firearms. \n\nMax looked at Leo's awe struck face and giggled. \"You do remember me telling you, I like guns and weapons?\"\n\n\"Yeah, but I really thought maybe it boiled down to a few hand guns and a subscription to Guns & Ammo.\"\n\n\"That is so lightweight.\"\n\nHe looked at her beaming face and playfully admonished. \"Max, you might need therapy.\"\n\n******\n\nLeo and Pauley's first stop was at Leo's parents' house. Isabella, Carmine and Salvatore, Pauley father, were waiting for the boys to arrive. Isabella cooked a big meal, more out of nervousness than really expecting Leo to be hungry.\n\n\"How's your lot?\" Isabelle inquired.\n\n\"Good. I'm waiting for it to get better.\" Leo winked at his mother.\n\n\"It will. Now eat up before it goes cold. Pauley you too.\" Isabelle retired to her bedroom to give the men a chance to talk.\n\nLeo took out another one of Max's devices from his bag, and placed in on the table. It jammed all electronic signals, coming in and out of the house including cell phones. The men proceeded to discuss business, and strategize how to get things under control.\n\n******\n\nMax took a picture of her hand with the ring on it and sent it to Laney. She needed a sounding board.\n\n\"Is that what I think it is? I am coming over.\" Laney was in shock. She had had the opportunity to observe Leo over the past few weeks and was quite impressed with his fathering skills. He was even less intense with Max, except now with this ring thing. Leo sure was one determined fella.\n\n\"Hey girl come join me let us reason this thing out,\" Max said patting the bed. She was glad her friend was home and came over immediately.\n\nLaney snuggled down next to her friend. \"Two questions before we begin. One, are these clean sheets, I know you and Leo must have had some good good-bye sex this evening,\" she said scrunching up her face. \"Two, am I going to be replacing Leo by sleeping with you until he comes back.\"\n\nMax laughed and wacked her friend with a pillow. \"These sheets are fresh, take a whiff. And oh please don't act like you have not missed sleeping with me.\"\n\n\"You have the best bed!\" Laney exclaimed. \"Well anyway, I am spending the night.\"\n\n\"Have you had dinner yet? I am hungry.\"\n\n\"Pizza and beer?\"\n\n\"Yeah so I could get Luca drunk on my breast milk.\"\n\nLaney laughed. \"I forget that you are still eating for two. Pizza and beer for me and I'll get some other liquid for you.\"\n\n\"Sounds like a plan.\"\n\nAs the girls snuggled down under the down comforter they both realized how much they missed alone time with each other. Laney grabbed Max's hand and took a closer look at the sapphire. It was a gorgeous emerald cut. \"Girl are you ready to do this?\"\n\n\"I don't think so. I am kinda okay with how things are going now. I love Leo, but is that enough? Maybe I could say yes and be his fianc\u00e9e forever.\"\n\n\"Girl you know that is not going to work. The moment you say yes Leo will set a date.\"\n\n\"Yes he will.\" Max laughed at the image of Leo picking out bridesmaids dresses.\n\n******\n\n\"Yo Leo, what is popping Papi?\"\n\n\"Hey Romeo. How are things?\"\n\n\"Easy breezy brother. You?\"\n\n\"You know, just trying to stay alive. Tell me something though bro, why is your fam pressing in on Pauley's turf? I thought we settled all that shit ages ago.\"\n\n\"It was all copacetic until, your boy Peretti decided to sing like a canary.\"\n\n\"What?\"\n\n\"Carlo Peretti got picked up before the sweep. It was because of him all that shit went down. You don't know?\"\n\n\"Nah, I was out of town. How did you find out?\"\n\n\"I have a link in the Feds. And I passed that info onto Ty who apparently was just waiting for an opening to make his move. I figured if I knew then you lot knew. Sorry man.\"\n\nAs Romeo filled Leo in on all he knew Leo could feel his veins throbbing in his head and neck. He had not anticipated there being a rat. But it did make matters kind of simple, he just had one person to focus on now. Peretti.\n\n\"Well what done is done, but I need you to send a message to Ty for me. Tell him I said to step off or I am coming for him.\" Leo's cordial tone disappeared. He and Romeo went way back, and had a good business relationship. Something he knew Romeo would never threaten, not even for family. In his world money trumps family.\n\n******\nPeretti was mid level but he knew enough to bring everyone down like dominoes. Leo figured it would only be a matter of time before the Feds came looking for him. Somebody had to shut Peretti up.\n\nAs Leo was pulling out his parking spot cell phone rang. Just the person he did not want to talk to, Max. He considered letting it go to voicemail. But thought better of it since they had not spoken since he landed.\n\n\"Hey Babe.\"\n\n\"Hey Hon. How's it going?\"\n\n\"Difficult and getting more and more so. I just got a piece of news that makes matters worse for all involved.\"\n\n\"Anything you care to share? The line is secure.\"\n\n\"I found out the catalyst for the busts. Some coward ass bastard named Peretti. He got hauled in on some Russian prostitution racket and is giving us all up.\"\n\n\"All as in you too?\"\n\n\"Yeah.\"\n\n\"How much time we have left?\"\n\n\"I don't know. But don't worry all my affairs are in order in case of an arrest.\"\n\n\"I am not worried.\" Max jokingly lied. \"I just don't want to have to mail you soap-on-a-rope.\"\n\n\"Oh that is not funny.\" Leo chuckled despite the serious nature of their conversation.\n\n\"Where is Peretti being held?\"\n\n\"I don't know. I was about to make some calls to put some feelers out before you called.\"\n\n\"Okay. We'll chat later. Love you. Stay safe.\"\n\n\"Love you too.\"\n\n******\n\nMax paced the floor thinking about what Leo just told her. Luca was too young to have a father locked up. Carmine was too old to go to jail. Pauley was too pretty to go to jail. And if Peretti knew of all their dealings they could be facing some serious time. Max racked her brain looking for a way to protect her family. She wrestled with the options in front of her and picked a solution. Weighing the possible outcome she made a call.\n\n\"What's wrong?\" the voice on the other end answered with concern.\n\n\"I need a favour.\"\n\n\"Tell me.\"\n\n\"There's a guy in federal custody I need you to get to.\"\n\n\"Name?\"\n\n\"Peretti.\"\n\n\"Timeframe.\"\n\n\"Now.\"\n\n\"I'll let you know when it's done.\"\n\n\"No need. I'll know.\" And just like that both lines went dead. Max looked in the mirror. She felt fully justified in protecting her family, but knew this good deed would not go unpunished. She just hoped she would be strong enough to handle the fallout.\n\n******\n\nLeo put the word out on Peretti. Everyone was tasked with hitting up their connections for info. No one seemed to know where he was being held. Two days had passed when the news hit that street that Peretti was dead. One shot to the head and another to the heart. Leo called a meeting but no one took ownership of the hit. Some suggested that perhaps it was the Russians. Leo was not completely convinced. They would have made it known it was them.\n\nHe called Max to tell her the news of Peretti's mysterious demise. Also, since there would be no corroboration the arrested bosses would be released. For the time being trouble was at bay.\n\n\"So how long until you coming back to Wilmington?\"\n\n\"You miss your man?\" Leo teased\n\n\"Yeah I miss you. Luca misses you. I think even Laney misses you.\"\n\n\"Give me two weeks. I think everything will be relatively back to normal.\"\n\n\"I'm holding you to that Leo.\"\n\n\"I got ya. Tell Luca hello for me.\"\n\n\"Tell him yourself. He's up.\"\n\nLuca spoke to his son. Just hearing him coo made him want to get on a plane to see them. These two weeks needed to go by quickly.\n\n******\n\nCarmine patted Leo on his back as he looked out on the gathering of friends, family and business associates. They were throwing a \"Welcome Back, We All Ducked Jail\" party at Absinthe. The speedy end to their problems had everyone feeling celebratory. Leo however was not feeling it and Carmine saw that. \n\n\"Son, what is the problem?\"\n\n\"I don't know. I just have a feeling something is wrong.\"\n\n\"What could be wrong? Peretti is dead. The capos are out. Order is restored. Don't buy problems. Perhaps you should go home. I know Max would love to see you.\"\n\nLeo considered what his father was saying, \"You know what dad you maybe right. I'm out. Make some excuse for me.\"\n\n******\n\nMax thought she heard a noise on the baby monitor. She looked towards Luca's room and saw a glow coming for under the door. She reached for the gun under Leo's pillow and carefully got off the bed. She nudged the door open with her foot with the gun pointed straight ahead at the intruder. Leo spun around when he heard the door open and got the shock of his life.\n\n\"WHAT THE FUCK!!\"\n\n\"You what the fuck! I almost killed you.\" Max said lowering her weapon.\n\n\"You walk around the house armed?\"\n\n\"Of course! Don't you?\"\n\n\"Yeah but that is different.\"\n\n\"Different because I am a girl? You sexist pig.\" Max laughed.\n\n\"Come give this sexist pig a kiss.\" Leo grabbed Max around his waist and pulled her in close. Gosh she smelled good.\n\nMax felt her whole body relax as her lips connected Leo's. She missed him and by the rise in his crotch it seemed he missed her too.\n\n\"Let's go make this a real homecoming,\" Leo suggested pushing Max backward towards their room never breaking contact with her mouth. She shimmied out of her robe revealing her naked body below. Seeing her nipples made Leo smile. He'd been longing to have her body pressed against his. It pleased him to know that she felt the same way.\n\n\"Damn girl you've sprung a leak,\" Leo commented as his hand slipped between her thighs.\n\n\"Are you gonna plug it?\" Max invited opening her legs.\n\n\"No I'm gonna break your pipes.\" Leo pushed her down onto the bed.\n\nMax looked up at Leo as he undressed. The fire in her eyes told him he needed to hurry up before she ripped his clothing off. She licked her fingers and began rubbing her nipples and inhaling deeply.\n\n\"Max stop.\" Leo's command was deep and sharp. Watching Max getting herself worked up was bringing him to a climax. He grabbed the base of his cock to slow it down. But lost it when she began dipping her fingers into her cunt and licking off her nectar. He leaned over her and came on her breasts and stomach.\n\nMax grinned as she rubbed his ointment into her skin. \"Now that's done let's get ready to wake the neighbourhood.\"\n\nLeo grabbed Max by the knees and pulled her to the edge of the bed. \"I see princess you are still testing me.\"\n\n\"You kept me waiting.\" She replied putting her legs around his hips. \n\n\"And now?\" As he said those words her plunged into her hot channel. She was speechless. Her mouth formed an O, but no sound came out. This was worth waiting for. Leo was merciless as he rode her. Max just panted and gripped the sheet above her head. The sound of their bodies colliding and the deep penetration of Leo's cock had Max nearing an orgasm that threatened to snap her back. She could feel it growing in her belly. As it shot through to her toes she tightened her legs around Leo. This caused him to introduce shallow strokes which just added to the intensity of her orgasm.\n\nThen the words he waited for bolted from her lips. His name being screamed over and over again and being begged to stop.\n\n\"No sugar. I'm not stopping.\" Leo increased his pace feeling his own orgasm rising within him. He threw his head back and increased his grip on Max's backside. With a grunt he filled Max with his jism. When he was done he lowered her legs and collapsed besides her holding her hand. It was then he noticed the ring. She has not taken it off. I better leave that discussion for the morning.\n\nThe sun had barely begun its ascent when the cries from Luca woke them both up.\n\n\"You go back to sleep. I've got him.\"\n\n\"Thanks, but unless you've started lactating you are of no use to him.\"\n\n\"True.\" Leo laughed. \"I'll go change him and bring him to you.\"\n\n\"Wonderful that will give me an extra five minutes.\"\n\nLeo had missed his son. It was nice to be back and falling into their family routine. Max figured that she could squeeze a shower in before Leo brought Luca. The hot water did her limbs good. It also gave her time to process Leo's early arrival. Okay he's back and he wants an answer. Are you ready for all that would entail? It's great making the decision and keeping it private, but once it's out there. It's out there. Max's thoughts were broken by a tap on the shower door.\n\nShe opened it giving Leo an eyeful.\n\n\"Morning Boys.\"\n\nLeo's lustful gaze swept over Max as she dried her skin. He could not help but reach out and touch her. Bringing his hand to her neck to draw her in for a kiss. She moaned in his mouth and took the baby from him.",
        "\"Go and shower while I feed Luca. He'll suck then he'll go to sleep.\" Max winked at Leo.\n\nLeo came out of the shower with an erection like iron. Through out the shower he kept imagining Max naked and ready for him. Legs spread. Mouth filled with filthy words. And when he walked in to the bedroom that is what was awaiting him.\n\n\"Come here Lion. Come touch me. Stroke me. Fill me with your cum.\"\n\nLeo needed no other invitation. He got onto the bed and told Max to close her eyes. Last night was all about giving it to her hard and fast. This morning he was going to seduce her. \n\n\"Close your eyes.\" His gentle asking was new and intriguing so Max complied.\n\nAnd with that he began to trail his fingers over every inch of her body. Every spot he touched felt hot. Max wanted to open her eyes to see his face but knew he would not allow it. Even when he got off the bed she kept her eyes closed. He would have to command her to open it.\n\nHe returned to the bed with jar of cocoa butter which he proceeded to rub into Max. He started with her back. His strong hands made Max jelly. When he moved to her front he attempted to be clinical about it and restrain himself. His walls began to crumble as Max's moans increased indicating impatience. He massaged her breasts, but his gentleness with her nipples served to excite her further. Her tongue made peek-a-boo appearance to lick the lips she was biting. When it came out again Leo dove down and sucked it into his own mouth. They remained in their heated embrace for awhile heightening their arousal. With a gentle nudge Leo with his knee Max spread legs.\n\n\"Open you eyes tesoro.\" She looked deep into his eyes as he slowly sunk himself into her. \"Stai bene?\" He asked as a tear slipped from her eyes.\n\n\"I'm good. Real good.\" Max had never felt so connected to Leo.\n\nLeo took his time, letting his penis caress Max's velvet glove. It was heaven for both of them. Their intimate copulation brought them to a simultaneous climax.\n\nWith their fingers intertwined they snuggled against each other. This gave Leo the perfect opportunity to bring up the proposal.\n\n\"I see you have not taken it off.\" Leo said stroking Max's ring finger.\n\n\"You see correct.\" Max replied with a smile on her satiated face. \"I meant to thank you for my push present.\"\n\n\"Your what?\"\n\n\"Isn't this what it is? You got me gift for giving you a son?\"\n\n\"Woman! I gave you a ring to ask you to be my wife?\" Leo's heart began to race.\n\n\"And I was supposed to know that, how?\"\n\n\"It's on your ring finger.\"\n\n\"Oh yeah it is isn't it.\" Max replied feigning surprise.\n\n\"So what's your answer?\"\n\n\"Answer to what? You have not asked me anything.\"\n\n\"Maxine Francesca La Costa, my baby mama, would you do me the honour of being my wife?\"\n\n\"For how long?\"\n\n\"Forever, you minx.\"\n\n\"Well in that case...yes.\"\n\nLeo squeezed Max even more to him. She could not see the look of relief on his face, but the sigh and kisses on her neck told her everything.\n\n******\n\nBoth Max's and Leo's families were elated at their impending nuptial. They set the date for New Years Eve. With only six months to plan the wedding Max went into full planning mode. Leo was in charge of selecting the venues for the pre-wedding and day-of events. \n\nThis was an idyllic time for them. Preparing for a wedding, caring for their son and Leo's monthly trips to NY seemed to have a synchronistic flow. One morning during their daily wedding update meeting an enormous bouquet of flowers arrived. Ever since they had announced their engagement friends and family had been sending them congratulatory gifts.\n\n\"Hey Max this one is for you.\" Leo called out as he signed for it.\n\n\"Who's it from?\"\n\n\"I don't know, probably one of your language professors.\" He thought so due to the non-English writing.\n\n\"Huh?\"\n\n\"Yeah take a look at the card.\" Leo walked into the kitchen with the stellar arrangement. \n\nMax looked up to take the card and immediately her face blanched. The arrangement told her immediately who had sent it. Ari.\n\n\"Son of a bitch!\" thought Max. Ari had duplicated the bouquet he had given her after their first night together. Leo studied Max face as she read the card. He could tell she was seething. Colour had risen from her chest up her neck to her face. \"Who the hell could send Max into such a rage?\" he thought.\n\n\"Max what is it?\" Leo was concerned as Max tore up the card and threw it in the trash.\n\n\"Nothing. Gimme a minute.\" She needed to wash her face and cool down. Max knew Leo had questions and she could not dodge them all.\n\nWhen she returned to the kitchen Leo could tell she was calmer but her mind was elsewhere.\n\n\"Now are you ready to tell me what that was about?\"\n\n\"Not really, but I'd rather get it over with.\" Max stared out to the backyard as she spoke. She could not look at Leo just yet. \"The card was from my ex, Ari.\"\n\n\"What does that punk want?\" Leo remembered what Max had shared with him about Ari.\n\n\"The card said he wanted to congratulate me on my upcoming wedding and the baby.\"\n\n\"Why did that piss you off?\" Leo was being careful not betray the ire he was feeling. He'd spoken more to his sister about his relationship with Max and she warned him to keep his temper and possessiveness in check.\n\n\"I don't know it just felt invasive. The flowers were the first arrangement he ever sent to me.\" Max finished telling Leo her version of the truth.\n\nLeo gritted his teeth at the nerve of Ari. Yet he had a feeling Max was holding something back.\n\nMax felt Leo hand loop around her waist to reassure her all was alright. She felt like there was a stone in her chest. She knew Leo detested lying, but in her mind it was an acceptable risk. Ari had actually written:\n\nYou're welcome and congratulations on the wedding. Tell Luca his Uncle Ari says hi. Be seeing you Max.\n\nShe could never tell Leo verbatim what was in the card. Ari would not hurt her physically, but he could wreck her world if it got out that she asked him to kill Peretti for her. \n\n******\n\n\"Dude did you pack everything in the car?\" Max asked surveying their home.\n\n\"Max I know you are accustomed to concierges and bellboys but I can manage.\"\n\n\"Oh I know you can, but I gotta do one more check.\"\n\n\"Then go then. I just hope you know you have OCD.\" Leo sent her away smacking her on her bottom.\n\nMax laughed and walked back into the house. They were heading up to New York to finish all the final details for the wedding. She was nervous not just for the wedding, but it would be Luca's debut into their other world.\n\n******\n\nThe lights of New York spiked Max's heartbeat. As much as she loved North Carolina, New York was home. She always thought she would return here after graduation, go to NYU for her Phd, live as a posh-bohemian, but in just over a year plans had changed drastically. She was now a graduate, mother, and wife-to-be. The car ride to Brooklyn did nothing to diminish her nostalgia. Perhaps raising Luca here would not be that bad.\n\n\"Ta da!\" Leo declared as they walked into the brownstone.\n\nNot only had Leo baby-proofed the place, he had redecorated to include pictures of them. It was definitely a far cry from the heady bachelor pad Max had first encountered.\n\n\"Oh I love it Leo!\" Max exclaimed. She really did appreciate the lengths he had gone through to make his place their home.\n\n\"I am glad you do, cara.\" He beamed from head to toe. His family was home.\n\n\"Let me give Luca his feeding then I can really so you how much I love it.\" \n\nMax and Leo made all kinds of crazy love while Luca slept. Leo was concerned that Max would recall what went down between them the last time she was there. But nothing came from his worry, instead it seemed like all was forgotten. Life was getting better and better.\n\n******\n\nMax stifled a yawn as the sun streamed in over her naked body. Leo was on his back and she had one leg swung over his with her hand over his chest. The rhythm of his heart made her stomach flutter. As many times as she had woken in this position it never ceased to amaze her. Leo was hers. All hers. She tried to shimmy from Leo's slumbered embrace, but he tightened his arm around her opening his eyes to look at her.\n\n\"Morning babe.\"\n\n\"Morning. Can I go pee?\"\n\nLeo laughed releasing her. He spent so many nights in this bed without Max that he thought for a second he was hallucinating and wanted to keep the vision as long as possible.\n\nWhen she came back from the toilet Max was greeted by the sight of Leo's rigid manhood calling to her.\n\n\"Well good morning to you Mr. Woody. Can I be of service? Is this what you want?\" Max asked getting on her knees taking him in to her mouth. Having just brushed her teeth the mint added nice tingle to the tip of Leo's cock. Although he had received some amazing head the night before, starting his day with his dick in Max mouth was heavenly. \n\nMax's throat muscles tightened around Leo's cock. She loved hearing him groan and cuss when she performed a swallowing technique. Max freed his cock for a moment to attend to his neglected balls. Leo could feel a surge of desire rise in him as he twisted his hand into her hair. Hearing his familiar grunt Max quickly returned to his leaking rod. His hips bucked up off the bed and he unloaded his semen. Spurt after spurt filled her hungry mouth. Max tried to swallow as much as she could while still sucking on the sensitive tip. With his energy zapped and penis deflated Max smiled at her handiwork.\n\n******\n\nLeo smiled looking over at Max as they drove out to Long Island for their engagement party. The memories from her mouth servicing him this morning had him feeling tingly.\n\n\"You know I owe you for this morning?\"\n\n\"Owe me for what? It was my pleasure.\"\n\n\"Yeah I know you love sucking the life out of me.\" Leo glanced at Max's grinning face. She was a sexual deviant, but he knew her buttons. \"Hike up your dress.\"\n\n\"What?\"\n\n\"You heard me. I said hike up your dress.\"\n\n\"Leo stop playing, you're driving.\" Max was less afraid of them crashing than she was of being with their parents and smelling of sex. Also, of people watching them. The road was not as busy as it would be during the summer, but still there were some cars on the road.\n\n\"Max I will pull this car over and fuck you right here right now, so don't test me.\"\n\nThe threat made her nipples harden even more. She complied and raised her dress up.\n\n\"Give me your panties.\"\n\nWithout any back talk she took the panties off and handed it to him. He moaned, licked the crotch then tossed them out the window. Max head whipped back in horror as her underwear now lay on the L.I.E. However, she knew better than to protest. Whatever Leo had up his sleeve would be worth losing a panty over. \n\n\"Spread your legs.\"\n\nTo get more comfortable Max slid her seat back and put her legs on the dashboard.\n\n\"Now you are going to feed me your cum. And don't be stingy because I am very hungry.\"\n\nMax dipped her fingers into her pussy. It had been getting wetter and wetter since Leo began his game. Now as her fingers began to stroke in to get some juice for Leo it flowed, the seat beneath her was getting soaked. Thank the Lord for leather. She gave him her fingers to suck. She dipped in and swirled it collecting as much as she could and gave him it to suck again.\n\n\"Undo your buttons. I want to see your breasts.\"\n\nMax's skin was beginning to feel charged. Her fingers fumbled with buttons. When her breasts were freed he reached over and thumbed her nipples. Max bit her lip and squirmed in her seat. She went back to feeding Leo to try and neutralize the sensations that were building. Leo could see that Max was trying to control herself, so when she put her fingers in his mouth he sucked on it and would not release it. The sucking motions mimicked what her would do to her nipples if her could. Simultaneously he pinched her nipple. This caused Max to scream out and writhe in her seat uncontrollably panting his name. Tears ran down her face as she soared to brain frying heights. She was definitely adding to her list of best orgasms.\n\nThe only thing that broke the reverie and brought them back to reality was Luca. Max's scream had startled him out of his sleep. Leo and Max looked at each other and laughed. She cooed and sang to Luca until he dozed off. She tried in vain for the next few minutes to make herself look presentable.\n\nThe whole clan was meeting in Long Island for their engagement party. Isabelle had begged to throw the event at her home and Max was happy to not have to plan it. She knew many of the guests were coming just to see the girl that snagged the elusive Leo Carbone. She had already been warned about the potential cattiness.\n\nLeo pulled around to the stables so Max could get to the house without being seen. He really had done a number on her, and she needed somewhere to put herself back together. They called ahead and asked Tara to meet them to take Luca. Leo took Max upstairs to his old bedroom which had a private bathroom. She stripped down so she could see all the damage done to her dress. \n\n\"Leo I could kill you!\" Max shrieked. There was a huge cum stain on her dress from where it ran down in the seat.\n\n\"Why didn't you raise it higher, you know you spout like a fountain?\" Leo was lying on his bed watching her throw daggers at him.\n\nWith that comment Max dropped her dress and came out to fight him. She jumped on the bed and began to punch him. He easily flipped her on her back and restrained her hands over her head. Max now wished she had thought better of fighting with Leo as she was at a naked disadvantage.\n\n\"Ok I give.\" She said defeated.\n\n\"I don't think so Max.\"\n\n\"You wanted a fight. We gonna have a fight, but just the way I prefer to do it with you.\"\n\nMax felt his hard-on nudging her. \"See that? I come with my own weapon.\"\n\nShe thought about his tool ploughing into her and readily gave in. When he felt her relax he eased off the bed to undress. The piece by piece revelation of his body heightened Max's arousal. She kneeled on the bed watching him and fingering herself. She could feel another orgasm building, and tossed her head back to let it wash over her. Her hands were yanked from her pussy, and sucked.\n\n\"Only with my permission Max. Now bend over.\"\n\nMax bent over with her forehead on the bed and her arms outstretched. Leo placed his hands on her hips and pushed into her with a deep sigh. He stroked her slowly and Max luxuriated in the feelings of euphoria coursing through her. Leo pulled out of her yearning pussy and pressed into her ass. This is what Max had been waiting for.\n\n\"Oh yessss baby. Deeper. Ahhh just like that.\"\n\n\"Fuck me Max.\" With that command Max rolled her hips taking more of Leo's dick each time. When he bottomed out he wove his fingers in her hair and rode her hard. Max was speechless and breathless as she allowed waves and waves of orgasm crash over her. Leo spanked her as she drew his strength again. He pulled out to deposit the rest of his spunk down her back. He loved to watch it paint her skin.\n\n\"Damn baby, don't we have guests to meet.\" Leo commented lying next to her playing with her slit. He loved the silky feel of her juicy pussy. They were both exhausted and still in a haze.\n\n\"I am sure your mom is doing a great job.\"\n\n\"Still we gotta act like mature adults and appear.\"\n\n\"Cool but my dress is still ruined.\"\n\n\"Look in my closet and find something.\"\n\n\"What! Are you mental? I am not going to our engagement party as a crossdresser.\"\n\n\"Just look would ya.\"\n\nMax got up and looked in the closet. Much to her surprise Leo had some dresses in there. Her dresses, shoes, underwear, jeans.\n\n\"Leo what the hell is this?\"\n\n\"I figured that if ever we come to Long Island, I would not have a hard time convincing you to stay if you had some clothes here.\"\n\n\"Great plan, but you sound like a crazy person.\"\n\n\"See what I put up with all day. You and your plans, it's rubbing off on me.\" He teased.\n\n******\n\nLeo and Max walked into the party holding hands and grinning at each other. Max looked stunning in a mauve 50's style dress, she paired with a silver ballet slipper. She accessorized with silver jewelry. Leo wore a grey suit with a light grey shirt and mauve tie. Max had laughed at how matchy matchy they looked. \n\nMost of the guests were there already, and could not wait to question the couple. Isabella had outdone herself. Max started to wonder if she should have just let Isabella do the wedding also. The woman had a touch and Max did not hesitate to let her know when saw her. It was October, but the weather was unseasonably warm. Isabelle was making great use of this by turning the patio into the bar and out door lounge.\n\n\"Isabella this party is fantastic. I can't thank you enough. The flowers are amazing. Everyone is having so much fun. Look at Luca, just sucking up all that attention.\" Max kissed her mother-in-law to be with gratitude.\n\nLeo escorted her from group to group introducing her to various cousins and extended family, but he was saving a special introduction for last, his sister.\n\n\"Hey Tori!\" he said sweeping her into his arms.\n\n\"Hey Bro. Dude your son is awesome. I got to hold him for a while and he was all smiles. And is this the lady of the evening?\" Tori let go of Leo's arm and gave Max a curtsey.\n\n\"Apparently so. Victoria it is so nice to finally meet you.\"\n\n\"Girl I could not miss this for the world. I flew in just for the party, but I'll be back for the wedding.\" Victoria assured them. She grew up in New York, but anyone who met her would not guess. She was all California. She was a sophomore at CalTech, and an devoted surfer. Her skin was toasty, reflecting her love for the sun.\n\nThey stood together chatting for awhile until they were interrupted by Carmine tapping his glass.\n\n\"Ladies and gentlemen, I would like to thank you all for coming to celebrate this joyous occasion with us. Isabella and I could not be more happy to welcome Max into our family. She is everything and more we could have wanted in a daughter-in-law. And you know must take a special woman to reel and keep Leo. To the wonderful couple, Salud!\"\n\n\"Salud!\"\n\nA succession of speeches followed, with lots of requests for more children.\n\n******\n\nMax stared at her blurry face in the mirror running through all the up coming events and holidays. She was so engrossed in her thoughts it took her few moments to recognize another face was reflecting back at her. The smiled she was forming to greet Leo was cut short when she saw his eyes. She had not seen his face this dark in a long time, and it worried her.\n\n\"What's wrong?\" she forced out.\n\n\"What do you need to thank Ari for Max? And why the fuck does he think he'll be seeing you.\" Leo's voice was calm and cold.\n\n\"Huh?\" she stalled trying to conjure a lie. How the fuck does he know?\n\nHe stepped closer to her and Max felt the hairs on the back of her neck stand up. \"I said, what do you need to thank Ari for?\" Leo had given the taped up card to C.J. the night of their engagement party, and he just texted him with the translation.\n\n\"I don't know. It was just a figure of speech.\" Max voice quivered and she knew he knew she was lying.\n\n\"Bullshit Max! Enough with the lies.\" Leo voice grew stronger as his hand twisted Max's face to his. Her eyes registered fear and he tightened his grip. \"I had the card that translated Max, so speak.\"\n\nTears ran down Max's face as she spilled the truth out to Leo. \"I called Ari and asked him to kill Peretti.\"\n\n\"YOU DID WHAT?!!\" He blasted releasing her roughly. \"You called your ex to handle my business for me. Do you know how that makes me look? Do you Max?\" Her tears did not to assuage his rage. Leo wanted to wring her neck.\n\n\"I did it for you. For us. I just wanted you home safe, alive and out of jail.\" Leo barely heard the last words as he threw a look of disgust her away and left the house.",
        "******\n\nAfter a morning of tears and repeated phone calls to Leo's cell, Max rang her father.\n\n\"Papi, can I come over?\"\n\n\"Si, ni\u00f1a.\" Antonio could hear the distress in her voice so he didn't even bother to ask if she was okay.\n\nIt took Max awhile through sobbing and pacing to get out the story.\n\n\"Hija, why didn't you call me before calling Ari. I could have told you this was not going to end well.\" Antonio spoke softly but he wanted to shake Max for being so foolish.\n\n\"Pap\u00ec, I knew it would not go over too well if he found out, but the immediacy of the situation had to be dealt with. If I did not have Peretti killed Leo could be in jail today.\"\n\n\"All that is well and good Max, but you and Leo had a full disclosure policy, no?\"\n\n\"S\u00ec.\"\n\n\"Alright and you knew you violated it by not telling him what you intended to do. You did not tell him after you did it. Also, you brought your ex boyfriend into it to deal with his problem. You in essence told Leo he was not man enough to protect you or himself, and that another man could.\"\n\n\"I know how it would have looked that is why I never intended for him to find out.\"\n\n\"Child you know better than that. Secrets always come out.\"\n\n\"How are you going to fix it, hija?\" This was the first time Tara chimed in. She was still trying to process Max having Peretti killed. This is the kind of life decisions she had always feared Max would have to make.\n\n\"I don't know. I've been calling Leo on his mobile and he's not picking up.\"\n\n******\n\nMax found Leo hours later at Absinthe. He was sitting in his office drinking and staring at the crowds below. He saw her come in and was tempted to have her thrown out. His fury had not quelled since her left her, in fact it increased the more he thought of what she had done. Max lied to him, over and over again. The glass in his hand snapped as she stepped into the office. Max rushed to him as she saw the blood pour, but he yanked his hand away and walked over to his desk. He needed to put as much distance as he could between them.\n\n\"Give me your hand before you bleed to death.\"\n\n\"Max I don't have time for this right now. I need you to leave.\" Leo stated in a restrained voice. \n\n\"I'm not going anywhere.\"\n\n\"Get the fuck out.\" Leo banged his hand on the desk. \"Max get out before I do something I may regret.\"\n\n\"No, Leo. You gotta hear me out.\"\n\n\"I aint gotta do shit Max. You fucking lied to me. I let you in and you lied. Time after time. You're not dumb. You knew what you were doing could fuck us up, but you did it anyway. I would ask why, but I don't give a shit right now. You are a fucking liar and I have no use for liars. We're done.\"\n\n\"No we are not done Leo. We can fix this.\"\n\n\"Fix this how Max. You tell me how I forget this betrayal and I'll do it now. I never thought I could feel for you as I do now. I can't stand to look at you so get the fuck out.\" As he said those words he grabbed her with his bloody hand and pushed her out the door. Max tried to resist, but did not want to cause any more of a scene. She felt defeated and weak.\n\n******\n\nMax drove around the city for hours. She was angry at Leo for not seeing reason in her actions. Angry at Ari for starting the ball rolling on his suspicions. Angry at herself for opening the door for all this in the first place. When she finally stopped she realized she was in front of Ari's apartment. She pressed the code into the keypad and heard the welcoming click. She was half surprised that it still worked.\n\nMax walked into Ari's apartment and there he was, sitting at his table shirtless and reading. Without even looking up he greeted her.\n\n\"Shalom, Max.\"\n\n\"Shalom fuck all Ari. Do you know what your little stunt did? It cost me everything. Leo's done with me.\"\n\n\"Was it my stunt or your lies Max? See Max I know you. I know how much you like your secrets.\"\n\n\"Fuck you Ari.\" Max spoke as she removed her shoes, and braided her hair. \"You are the last person who should be talking about secrets.\"\n\n\"I know you Max. Not just every inch of you,\" he looked up eyeing her lasciviously, \"but the way you think too. I knew you would not tell him, and that would be my way in.\" Ari rose from the table and walk over to the sparing mat. He knew what Max wanted. She was angry and needed to let off some steam. And who better to fight with but than the person you blame. Ari however, had other thoughts he knew that after Max got physical like that she loved a nice hard fuck.\n\n\"Your way in? What the hell are you talking about?\" Max followed him to the mat.\n\n\"Max I've never stopped wanting you, but I gave up hope that I would ever have the chance to be with you again. That is until you called. Years without communication then you call needing a favour.\"\n\n\"And you thought that I would be ever so grateful that I would what Ari, fuck you?\"\n\n\"That would have been a start.\" With those last words Max lunged at Ari. He was ready for her attack and blocked the shot. They went back and forth like this for awhile, but Max was losing. \n\nHer anger was clouding her judgment in more ways than one. Everytime Ari pinned her to the mat. She could feel her pussy respond to him. The years had aged him beautifully. His tattoos began to glisten under the sheen of sweat from their exertion. His curly dark hair begged for her to grip it and draw his face down to hers. Max's eyes traveled down the happy trail on his stomach as he pinned her again. This time he would not let her up. The sexy black wrap dress she had worn was undone and she lay exposed beneath him. He wanted her to say, uncle. Then he knew the fighting was over and it was time to get deep inside of her. His eyes searched her face for an opening, but she gave none. Max used Ari's uncertainty against him and swung her legs around him flipping him over. She rocked back on her knees a sat on him. She shrugged out of the dress. So now she was just in her bra and panties.\n\nAri's hazel eyes drank in all that was before him. The growth in his loins was dying for a release that only Max could give him. He ripped her bra off. Max gasped as he latched on to her breasts. His sucking and licking triggered her lactation, but he did not care. Something about Max always brought out the animal in him, and with the dam broken after years of waiting he was not slowing down. Max cried out and whimpered as Ari probed her deep with his fingers. He liked to finger her with her panties on. It made him feel he was somewhere forbidden. He knew the right pace of stroke to get her off. Max felt the orgasm building inside of her, endorphins coupled with adrenaline had her bucking against his hand in no time.\n\nAri savoured the feel of Max's heat and moisture against his palm. His finger felt the tightening of her cunt so he spread them pressing against the slippery walls. This resistance trick of his always sent Max into overdrive and this time it did not disappoint. Max leaned back and fucked his hand while the other manipulated her nipple. Ari had turned Max into putty. His dick relished the sight of her sweating, panting his name, struggling to come down from her pleasure high. He was so turned on by watching her he came in copious spurts on Max's sexy black tongs. Max disengaged from Ari and rolled onto her stomach. He looked down at the tattoos, a remnant from their past and kissed them. This stirred Max out of her fog. She had to get out of there, things had already gone too far. Anymore kisses and she might be have more than his hand deep inside her.\n\n\"Ari stop,\" Max weakly eked out.\n\n\"You don't mean that princess,\" Ari protested massaging her ass. He wondered if Leo had a chance to pop that cherry or was she still timid about that.\n\n\"I do. This was wrong. I gotta go.\" Despite Max's shaky legs she pulled herself together enough to get her dress on. She stuffed her bra in her purse, as to not leave any evidence at Ari house.\n\nWhen she got to the door Ari grabbed her hand to pull her in for a kiss. She pulled herself away.\n\n\"Ari, I really fucking hated you for what you did to me, and doubly so now for messing with my life again. Why couldn't you just do the job and let that be it? Leo's done with me so you could go ahead and brag to him what we did tonight. He won't care. There's no more damage to be done.\"\n\nWith that Max was out the door. Ari leaned against the door feeling the weight of regret for everything he had done to Max.\n\n******\n\nMax walked around the brownstone in the dark. It was a long night, and tomorrow was going to be even longer with cancelling all the wedding stuff and telling the parents. Max figured she would shower and get a few zz's before going to get Luca. She entered the bedroom and began undressing on her way to the shower.\n\n\"You smell like sex.\" Leo voice startled her. Max knew that he was drunk and still drinking as she heard the ice clink in the glass.\n\n\"Okay.\" Max responded carefully. She did not want to fight with Leo, but she wasn't going to back down either.\n\n\"Okay? That is all you have to say.\"\n\n\"That is all there is to say. We're done, remember.\" Max proceeded to the shower to wash the scent of Ari away. She silently praised herself for the good sense of throw her panties away on the way home. In this state there was no telling what he would do.\n\nMax turned on the shower and sat on the floor to let the water rain down on her. She looked up as she felt the cool air on her back. Leo stared down at her. If his eyes could have bored holes in her they would have.\n\n\"Can I help you?\" Max stared ahead at the tile as she spoke.\n\n\"Who were you with tonight?\"\n\n\"Why are you asking?\"\n\n\"Because I deserve to know. You're still wearing my ring.\"\n\n\"Oh, I am aren't I? Here you go.\" She slipped the ring off her finger and passed it to him.\n\n\"I don't want no fucking ring Max. I want to know where you were.\" Leo slapped her hand away.\n\n\"No you don't.\"\n\n\"You were with him, weren't you?\"\n\n\"Yes, Sherlock. I went to see him. What of it?\" Max's eyes blazed at Leo. And his rage tipped as her grabbed her by her hair and pulled her up. Max scrambled up quickly and stepped out of the shower to avoid the pain.\n\n\"Get your hands off me you fucking psycho!\" Max struggled but Leo was having none of it. For someone drunk his reflexes were surprisingly quick. He dragged a wet, naked Max to the bed and threw her face down. Before she could fly up Leo pulled both hands behind her and cuffed them. Max hollered at Leo to stop the madness, but he ignored her.\n\n\"Max I'm fed up with this craziness. You lied to me. You put your trust in another man, Max. How could you?\" Leo paced the floor rubbing face and hair as he spoke. Everything about him was disheveled. His clothes were creased and unkempt, eyes were blood-shot, face was unshaven, left hand haphazardly bandaged, and hair was a mess. He looked like a madman.\n\n\"It wasn't about him, Leo. It was about you, and me wanting you to be with me and Luca. How can you not see that? You think I should have just stayed out and let the chips fall where they may with Peretti. Alright, but it would not just be you affected. Your father, your uncle, Pauley. You think those two old guys could do a bid? Get out of you ego for a second and see sense.\" Max screamed at Leo.\n\n\"Out of my ego, Max? Don't you think that stunt was a little power play? You didn't tell me to protect me. Bull shit! You didn't tell me so you could have this secret over me. It's you not giving up all of you. Sabotaging us. Tell me I'm wrong?\"\n\n\"You're wrong,\" Max replied with a voice hoarse from screaming. \n\n\"Liar.\" Smack \"You've\" Smack \"gotta\" Smack \"stop\" Smack \"lying\" Smack \"Max\" Smack \"to me\" Smack \"to yourself.\" Smack \"Liar!\" Smack \"Liar!\" Smack \"Liar!\" Smack Smack Smack Smack Smack\n\nThe power behind each slap increased with each word. Leo was pissed. When he was done Max was sore and sobbing. She knew what Leo had said was right. From the moment she picked up that phone to call Ari it was destined to come to a head, and she did nothing to preempt it.\n\n\"So is the wedding still on?\" Leo asked Max putting the ring back on her finger.\n\n\"That is up to you.\" Max responded mildly defiant. After tonight she knew there was a change in their relationship. Leo walked around the bed and stooped down to face her.\n\n\"I love you Max, and you almost suckered me into breaking us apart. Don't ever cross that line again. You say that you would kill me if I ever broke your heart. Ditto. You feel me.\"\n\n\"Yes.\" Max's voice was feeble. She had been seeing Leo's romantic calm side for awhile and forgot just how hard he could be. She didn't want to admit it, but she was kinda turned on.\n\n******\n\nThe clock alarmed at 5am, so Max could make it over to her parents before Luca woke up. She got out of the bed gingerly, her ass was still smarting from the spanking Leo gave her. He was not in bed and she breathed a sigh of relief. She went to the bathroom and pinned to the mirror was message from Luca telling her that he went to pick up Luca and breakfast. That pretty much meant don't go anywhere. She wondered if Leo meant to keep her prisoner in the house. Regaining his trust was going to be tricky.\n\nMax took the moment of privacy she had and called Laney and filled her in on what happened yesterday. \n\n\"Rise and shine sleepy head.\"\n\n\"Blue you must have lost your mind calling me at this God forsaken hour.\"\n\n\"I'm sorry. At least kinda.\"\n\n\"This better be good.\"\n\n\"Lanes he spanked me!\" Max squealed.\n\n\"You calling me to talk 'bout yall S&M freakiness?\"\n\n\"NO! We had a fight because I had Ari do something, and lied about it.\"\n\n\"You did what! Do you want to fucking die?\"\n\n\"Of course not, but...\"\n\n\"But nothing! You knew it would blow up in your face. Is that what you wanted?\"\n\nMax drew a deep breath. Laney and Leo both had her number. \"It started out as a good deed, but became so much more. All blame does lie at my door, but he's not giving up.\"\n\n\"No more tests Max. I'm not sure you will survive. He's your guy, accept it and live happily ever after. You know I had my reservations, but it's him. I am happy for you, so don't fuck it up. You will regret it.\" As Laney advised Max she realized that even for herself she had a regret that she just could not shake.\n\n******\n\n\"Morning Leo,\" Antonio greeting him civilly. \"I'm surprised to see you instead of Max. Is she ok?\" His inquiry was pointed. He liked Leo well enough, but Max would always be his concern. Plus after what she did he was expecting a violent fallout between her and Leo.\n\n\"Yeah she is great. I decided to let her sleep-in while I picked-up lil' man. I'll have her call when I get back.\" Leo kept his voice light dismissing Antonio's cold demeanour.\n\n\"Morning Leo.\" Tara appeared holding Luca. \"He just woke up and I gave him his feeding. I'm sure he'll be out like a light before you get back to Brooklyn. Where's Max?\"\n\n\"She's back at home.\"\n\n\"Oh?\"\n\n\"All is well. We're good. We thrashed it out and got to an understanding. The wedding is still on. Thanks for watching Luca. We really appreciate it.\" Leo kissed Tara on her cheeks and nodded to Antonio as he was loaded with Luca's stuff.\n\n******\n\nWhen the door closed Tara blew up at Antonio. He remembered the last time she was this angry at him was when he had had her shipped from the U.S. back to Colombia. Antonio was no fool he knew it was coming since Max had dropped off Luca. He had caught her looking at him with a strange look on her face. She was just waiting for Luca to be out of the house.\n\n\"What fuck have you done to my little girl? Did you hear her? Talking all nonchalantly about asking Ari to kill Peretti? And you standing there without a look of surprise on your face. Well for a matter of fact I was surprised. I know you and Max have yall gun hobbies and crap, no big deal really, but our child is a killer, a very cold unremorseful killer Antonio. Is this what you wanted all along? Pretending to be out of the game all the while grooming our daughter to run her own cartel? Answer me you son of a bitch. Because I fucking need answers.\" Tara's usually jovial eyes were rigid slits.\n\n\"Tara,\" Antonio reached out to touch her.\n\n\"Don't you dare.\"\n\n\"We raised Max together. Yes, I've had more influence in her life, but that is because I saw so much of me in her. Getting her educated and trained was a way to channel her nature to a positive path. One summer in Colombia Max and Alex heard that one of the farmhands molested one of the village girls and I mean she was a girl, no more than seven years old. Max and Alex decided to avenge the girl. Together they stalked and killed him. Alex delivered the deciding blow, but with Max's full support. When my father found out he congratulated them. He called me into his office to smoke cigars and plan Max's future. Max is not a sociopath. I know that is what you are thinking. Max is our brilliant, skilled, caring daughter. I was not grooming Max to be an assassin, but she is not afraid to pull the trigger if need be. She is going to be alright.'\n\n\"Is that it?\" Tara stood silently as Antonio spoke. He had never told her of Max's first kill, and she was not sure if she could stomach it. She walked away to their bedroom to pack, she needed some space. In all their time together she had never felt so betrayed. By both her husband and daughter. She knew that somehow it made sense to them to keep such a large secret from her, but she could not see it.  Tara don't act dumb is not like you did not open this door when you stayed all those years ago. You knew what kind of family you were getting involved with. Tara felt fully responsible for all that Max had become. \n\nAntonio followed Tara to their bedroom, looking in amazement as she hurriedly shoved clothes into her suitcases. He knew he took a risk telling her Max's secret, but it was time for all the truth to lay bare. Although every fiber in his being wanted to stop her he knew Tara needed space from him, and he was going to give it to her, but not for long. Tara walked past him without as much as a sideway glance.\n\n******\n\nLeo walked in the apartment with a sleeping Luca. A smiled curled on his lips seeing Max laying on floor dressed in a wife-beater and boy-shorts sleeping just a soundly as their son. He took Luca to his room and returned to the living room to lie next to her. The rise and fall of her chest mesmerized him. His eyes roamed over her stomach. He envisioned her being pregnant again, this time with a little girl. He knew Max was not the barefoot-and-pregnant-all-the-time kinda chick, but having their house filled with the sounds of children was part of his plan. His eyes moved down from her stomach to her crotch snugly hugged by her satin boy shorts. \n\n\"So are you just gonna stand there all day staring or are you gonna take what's yours?\"\n\nMax's voice startled him.\n\n\"Glad to know you know who you belong to.\" Leo replied beginning to undress.\n\n\"What happened last night after I left Absinthe?\" Max spoke softly. She left her eyes closed to avoid staring into his eyes.\n\nLeo paused his actions. \"What do you mean?\"\n\n\"I mean, when I left you were hella pissed, off the rails and bleeding.\"\n\n\"Yeah I was pissed. And still am but, I got a lot of my system last night.\" Both their minds flashed on the spanking he gave her.\n\n'Ok, but why the change?\"\n\n\"Pauley.\"\n\n******\n\n\"Aye Bro!\" Pauley knocked and walked into Leo's office at the same time. \"What the fuck dude, your hands is bleeding.\" Pauley was immediately concerned for his cousin.\n\nLeo looked up. His eyes were blood shot and frosty. He mentally debated whether he should tell Pauley about Max or not, but Pauley beat him to it.\n\n\"What did Max do?\"\n\n\"It was Max who solved our problem.\"\n\n\"What!?\" Pauley exclaimed in disbelief.",
        "\"Better yet she arranged with her ex to get it done?\"\n\n\"Her ex?\"\n\n\"Could you stop fucking repeating everything I say? Yeah her ex some Israeli asshole.\"\n\n\"I'll do my best bro, but this story is fucking insane and you're just two sentences in. Continue.\" Pauley instructed with a smile on his face.\n\n\"I'm glad you amused.\"\n\n\"I'm not amused, but proud. That's my girl.\"\n\n\"No that's my girl. My fucking liar of a girl.\" Leo squeezed his fist causing more blood to ooze out. \"She called him and asked him to take care of that problem for me.\"\n\n\"So that is the issue? You are jealous of Max's relationship with this guy. You're jealous that you weren't the hero. Dude but you were. You brought her into this family. She did what any of us would do for each other. She protected us. How she did it might have been a little fucked up for your relationship trust issues and shit, but what she did saved us. I can't hate on her for that.\"\n\n\"What the fuck bro you're supposed to be on my side.\" Leo was surprised at Pauley's insight. He was not expecting such reason to come out his mouth, but he did make sense. \n\n\"I am always on your side, bro. And I love that I could be on your side on the outside, catch my drift?\"\n\n\"Yep.\"\n\n\"You told your pops yet?\"\n\n\"Nah. Shit. I ended it with Max and called off the wedding.\" Leo rubbed his forehead wondering how he was going to put it right.\n\n\"You better mend that. Max is yours. Approve or disapprove of her actions all you want, but that chick is amazing. You won't find anyone like her ever again.\"\n\n******\n\nMax finally opened her eyes and looked at Leo.\n\n\"So I owe Pauley a thank you.\"\n\n\"We might have to name our daughter after him.\" Leo smiled at Max.\n\n\"Sure thing... in a few years.\" \n\n\"No harm in practicing right.\" Leo crouched over to kiss her but stopped. \"What happened with you last night after you left Absinthe?\"\n\nMax was dreading this moment, but she knew Leo was going to get to it eventually.\n\n\"I drove around the city, and I ended up at Ari's?\"\n\n\"When you came home you smelt like sex. Did you fuck him?\"\n\"No.\"\n\n\"Then what did you do, Max? Full disclosure.\"\n\n\"We fought, then he... he fingered me.\"\n\n\"He fingered you?\" Leo drew out the question.\n\n\"Yes.\" Max locked eyes with Leo, to see if she could read him. The vein at his temple jumped.\n\n\"Did you enjoy it?\"\n\n\"What the fuck kind of question is that? If some ho was on her knees sucking your cock wouldn't you enjoy it?\"\n\n\"Shit Max calm down. I'm trying to deal with all this shit okay, so let me have a minute.\" It took Leo awhile before he answered. \"Last night was a raw and volatile one for us. Probably not going to be our last, but that will be the last time some other man touches you. Any shit like that goes down again I'll kill you both.\" Although he spoke calmly, Leo wanted kill Ari and string Max up. The idea of some other man having their hands on her, in her, the mother of his child, enraged him, but he was trying to reconcile with her and a flare up could ruin it all.\n\nMax knew Leo was serious, and telling him the truth was dangerous, but the object of the conversation was to get it all out and handle it.\n\nLeo looked at Max's face. Her lips curled into a smile. Leo's mind fought to let go of the image of Max and Ari. He was going make her buck and cry for him, no one else. Leo crashed his mouth into hers. His tongue stroked hers with urgency. All the anger, passion and emotions of the past twenty-four hours surged to the surface and they began to tear at each other's bodies. Leo ripped the wife-beater in two. Max delicious brown orbs drew Leo's mouth to its peaks. He cupped and squeezed as he sucked. This rough contact caused Max to wrap her legs around his hips. She hooked her ankles and undulated her hips. Leo was in heaven as Max's rhythm matched his own need.\n\n\"I'm gonna cum in you Max. Fill that kitty up.\" Leo whispered in her ears. He had to remark his territory.\n\nMax released Leo so he could get to her pussy. She was wet and burning for his touch. Leo did not disappoint. He yanked her underwear off, and attacked her crotch with his tongue. He savoured the tasted of her juices, and she savoured the feel of his skilled tongue. \n\n\"Fuck me Leo. Hurt me.\" Maxed panted.\n\nShe did not have to ask again. Leo moved up and rammed into her. His thrusts were merciless. The carpet had no give. Max cursed and writhed beneath Leo. His teeth nipped at her neck heightening both their desire. Leo wanted to devour her. Max was fully surrendered to him. They rode each other into blinding orgasms. Max screeched as her belly tightened and toes curled. Leo gripped her hair and drew her head back, and kissed her as he spilled his seed into her. They gripped each other and synched their breaths.\n\nWhen they both could think clearly Max broke the silence. \"Wow sugar, we should fight more often.\"\n\n\"No we shouldn't. We should fuck more often,\" Leo replied laughing.\n\n******\n\nTara stood in the living room of their Montclair house. She stared intently at a photo of Max. Tara was having a hard time trying to reconcile the Max she knew and with Max that seemed to now exist. She felt responsible for the decisions Max had made. She wondered if leaving Antonio would have made any difference or was Max genetically programmed to be Max. Was it nature versus nurture? If it was nature, then she worried for Luca. With her thoughts spiraling she did not notice Max had walked into the room.\n\n\"Mom?\" Max proceeded cautiously.\n\nTara jumped.\n\n\"Ni\u00f1a you scared me.\"\n\n\"Sorry. Dad called and said that you left him. He wouldn't say why. What happened?\"\n\nTara chose her words carefully. As hurt as she was by her family's betrayal, she wanted to understand and not begin with accusations.\n\n\"Your dad told me what you and Alejandro did in Colombia.\"\n\n\"Mom. Ohh Mom.\" Tears sprang into Max's eyes. \n\n\"Couple that with what recently happened with Ari. I had to take a moment to assess this family, my choices and our future.\"\n\n\"Mom, I don't know what to say.\"\n\n\"Just tell me why you never told me. I am your mother I am supposed to protect you, even from yourself.\" Tara turned away from Max as her own tears began to flow.\n\nMax embraced her mother from behind and put her head against hers. \"Mom, I am the same person you've always known. I did not take those lives callously. I weighed the options each and every time. That little girl in Colombia was changed forever by that pervert, killing him did not change that. But at least she would not have to see his face or feel like he would come after her again. And Peretti threatened the lives and freedom of my family. I know that if Pap\u00ed was in a situation like that you would use every weapon you had in your arsenal to keep him safe. I did the same thing. I'm not trying to get a seat at the table.\"\n\n\"Child.\" Tara caressed Max's face.\n\n\"Mom I love you and Pap\u00ed more than words can express sometimes, and I have the best of you. You have not done anything wrong, neither Pap\u00ed. We did not tell you because I thought you'd be disappointed in me and blame him. He wanted to tell you, believe me. But I swore him to secrecy.\"\n\n\"Max I can't condone what you've done, but I understand your reasoning. Your father's family...you all have this thing in your blood, then it's enforced through those damn trainings. What will happen to Luca?\"\n\n\"Luca?\"\n\n\"Yes, that dear boy got it coming both ways.\"\n\n\"He'll be okay. Leo and I have already promised each other to not let this touch him.\"\n\n\"Max that's na\u00efve. Get real. You and Leo will do your very best to protect Luca, but you won't cover every base. This is our life.\"\n\n\"Our life?\"\n\n\"Yes our life. I've made my choice, and I intend to live with it. I love your father, I just needed a break to wrap my head around this new info. Tell your father I'll see him in a few days.\"\n\n******\n\nWedding Day\n\nLeo stood at the end of the aisle shifting nervously. Pauley patted him on his back attempting to reassure him. The past few weeks had been insane with fights, parties, preparations, and pure chaos. Now as they both stood awaiting the arrival of the bride they knew that it was all worth it.\n\nMax sat in the dressing room of the cathedral. She was dressed in a stunning white gown complete with veil and train. She held her flowers tightly as she tried to control her breathing. Max was more excited than nervous. She has just gotten a pep talk from her mother. Laney was constantly by her side. Antonio was ready to do his duty. She looked at herself in the mirror for the final time. Max all is well. Tonight is going to be amazing. Everyone you love is here. Deep breaths. Deep breaths. Deep breaths.\n\nThe music began and the church stood up. Max walked in arm in arm with her father. She and Leo had battled about whether to play the Bridal March or something less traditional. He won that debate. Now in the setting and seeing all the beaming faces she knew it was the best choice. The sanctuary looked so romantic with the dimmed lights and candles. The parishioners were going to love the set up when they came for the New Year's mass.\n\nAri sat in his car watching the wedding procession. He had installed cameras in the church. He still could not believe Max and Leo were going through with the wedding. He was sure their break-up would be permanent. Ari was jealous that whatever they had between had survived. Damn she looks amazing.\n\nLeo turned to look at Max. She looked radiant. The veil shielded her face but Leo could see the grin that Max sported. That reassured him and tears ran down his cheek. He still could not believe she was going to marry him. When Antonio placed her hands into his Leo knew it was a done deal. Well close enough. They needed to get through the vows and sign the papers. When the priest asked the \"If anyone here knows of any reason why these two should not wed?\", Pauley coughed and everyone laughed. Ari had his hand on the handle of the door ready to burst in and claim Max. But he reevaluated his position; Max was no longer his and never going to be again. The priest continued with the rest the ceremony. \n\nWhen Father Flannery got to the \"I do\" portion, it seemed like everyone held their breath.\n\n\"Do you Leonardo Carmine Carbone, take Maxine Francesca La Costa to be you lawfully wedded wife?\"\n\n\"I do.\" Leo looked at Max with a dead pan look on his face to indicate that he was so serious about what he was saying.\n\nDo you Maxine Francesca La Costa, take Leonardo Carmine Carbone to be you lawfully wedded husband?\"\n\n\"I do.\" Max looked at Leo but quickly averted her eyes as the tears rolled down her face. Leo caught sight of them and leaned over and kissed them away. He wanted to do more, but had to keep it chaste since they were standing at the altar with hundreds of people staring.\n\nPauley and Laney beamed brightly at them. \n\nHand in hand Leo and Max ran out of the church, to the sounds of applause and cheers. The cold night air did nothing to dampen their joy. Ari looked at Max's laughing face and drove off. He knew if he spent a million years he would never make her smile like that. Leo and Max posed for photos briefly then hopped into the limousine.\n\n\"We did it baby!\" Leo exclaimed dragging Max into his lap.\n\n\"Yes we did.\" Max replied kissing him passionately and rotating her hips.\n\nLeo pulled away, \"Sugar you need to stop that 'cuz you 'bout to start something.\"\n\n\"Oh am I really?\" Max responded and pulled Leo's face towards hers. \"How much time do we have?\"\n\n\"Give or take twenty minutes.\"\n\n\"Good, we have enough time.\" Max spoke while unzipping Max's pants.\n\n\"Girl, you are naughty.\"\n\n\"Yes I am now shush.\" That was the last thing Max said before swallowing Leo hardened cock. She threw the veil back over her face to hide what she was doing from Leo. It made everything seem more forbidden. Max swirled her tongue in the mushroomed head. Her steady sucking action was driving Leo crazy. She took him down her throat and vibrated it. Leo was in heaven and getting closer to the brink. He held on to Max's head as hot squirts of his delicious liquid cascaded down her throat. Max took one last long deep suck before tucking him away and zipping him up. Leo looked over at her with glassy eyes and a content smile on his lips.\n\n\"Woman your mouth is kryptonite.\"\n\n\"And now you have a lifetime of that. Perhaps we can skip the reception\"\n\n\"Yeah right, our mothers would have a conniption.\"\n\n\"It would be nice to know where we are having this reception of ours.\"\n\n\"Told you, it's a surprise.\"\n\n******\n\nThe reception hall was absolutely spectacular. Max was bowled over at how he tricked out the decommissioned firehouse. Leo had outdone himself. This was the part of the wedding he wanted to take care of and he did not disappoint. He applied his experience in designing clubs to create the best ambience and experience with light, colour and d\u00e9cor.\n\nThe night went without a hitch. Leo and Max circled the tables greeting all the guests. There were some that they had to introduce to each other. Some they had in common. It was an international affair, with both sides having family and business partners from all over the world. After their first dance Leo took Max to the third floor balcony where they had a good view of the festivities below. His hand encircled her waist as he nuzzled her neck.\n\n\"Hello Mrs. Carbone.\"\n\n\"Hello Mr. La Costa.\"\n\n\"Oh you have jokes.\" Leo laughed.\n\n\"Yes, I do. See, that was not so hard to say, I do, I do, I do.\"\n\n\"Woman are you tipsy? Look at our family and friends. They are having so much fun.\"\n\n\"I am so happy. Everything went off smooth. No drama. Knock on wood.\"\n\n\"Can we leave for our honeymoon now?\" Leo faked a whine. \"No one will miss us.\"\n\n\"They will miss us. Let us rejoin the party. How often do we get to do this? All these families, no guns, just fun.\"\n\n\"I give, but you owe me some crazy sex. And when I say crazy I mean swinging on the chandelier crazy.\"\n\n\"You got it, my Lion. Now let's go boogey with our son, until he passes out, or we do.\"\n\n\"Okay,\" Leo replied spinning Max around, \"but I got something for you first.\" He brought his mouth down on hers. Kissing her slowly with a deep longing. His hand held her neck and his thumb stroked her cheek. \n\nThe kissed exchanged more than the vows did. They basked in their bliss, knowing that they had each other for real, and whatever comes their way they would deal with it...as a family.\n\n******\n\nEpilogue\n\nLaney was having a great time at her best friends wedding. She had been there from the beginning of their relationship and it was nice celebrate their future. She checked her watch and signaled to the dj to make the announcement. It was time for everyone to make their way to the upper balcony which had a glass wall and skylight. With everyone huddled together the countdown to the New Year began. As they shouted \"Happy New Year!!!\" together the sky erupted with a gorgeous firework show. Every one buzzed around kissing and well wishing.\n\nLaney spun around and bumped into the rigid chest of one of the guests. She looked up to apologize, but was left speechless staring into a pair of icy blues. She knew their owner. The Russian from two summers ago.\n\nWhat the freak! What is he doing here?\n\nAs if reading her mind he answered with his thick sexy accent, \"I know somebody who knows somebody who knows somebody.\" He winked.\n\nAll Laney could do was nod dumbly as he looked down on her, not moving, not wavering.\n\n\"Laney you good?\" Pauley was now at her side.\n\nStill all she could do was nod.\n\nAnd it seemed like all eyes were on her because almost immediately, Alejandro was asking her the same thing. What the fuck does my face look like? Probably like a ghost. Fix your face.\n\n\"I need some air,\" Laney pushed past her three former lovers escaping the awkward situation."
    ],
    "authorname": "Elektrical",
    "tags": [
        "interracial",
        "bw/wm",
        "anal",
        "cheat",
        "spank"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/lions-den-ch-06"
}