{
    "title": "Home Alone Ch. 05",
    "pages": [
        "Jenny led Danni upstairs and into the spacious bathroom, as Danni entered she slipped the straps of her nightdress from her shoulders, the dress sliding over her pert breasts and then over slender hips, landing in a heap on the floor. She stood in front of the full length mirror admiring her body, her skin glistening from her exertions in the kitchen. In the mirror she watched Jenny enter and move up behind her.\n\nJenny admired the hot sexy curves of Danni's sweet body, she wrapped her arms around her waist and pulled her to her, she nuzzled at Danni's neck, lightly kissing her, one of her hands snaking down over Danni's flat stomach, edging towards her mound, her other hand moving to cup one of Danni's breasts.\n\nDanni could feel the hard nipples of Jenny on her back, she watched Jenny massage the sensitive skin above her hot mound in the mirror, she opened her legs slightly, hoping that Jenny would explore further. As she continued to watch she saw and felt Jenny cup her breast, a finger extends and lightly flicks one of her hard, sensitive nipples. Watching all of this in the mirror added to the sexual atmosphere, it was if she was watching two other woman playing with one another.\n\nJenny ground herself into Danni's back, trying to relieve the ache she has in her mound, one of her fingers toying with Danni's hard nipple, her other hand gently running through the sparse hairs of her beautifully trimmed pussy, feeling the heat of her sex.\n\nDanni reached behind her, forcing her hands between her bottom and Jenny's hips, wanting to search out her hot pussy, her fingers finding the top of Jenny's thighs, her fingers edging towards her target.\n\nJenny released herself slightly, wanting to feel Danni's fingers on her pussy.\n\nDanni found her target, her fingers now running up and down Jenny's pussy. Her lips still wet, her fingers easily sliding along Jenny's wet slit.\n\nJenny hugged Danni tighter again, trying to force herself onto Danni's searching fingers, her pussy aching to be fingered. Her own hand now cupping Danni's wet mound, a finger scratching along her wet slit.\n\nJenny finally released her grip on Danni, and slowly turned her around so they were facing one another and after gazing into her eyes for a few moments Jenny gently kissed Danni, lightly at first, and then with a bit more passion, as the kiss became more passionate her mouth opened her tongue tried to force its way into Danni's mouth.\n\nDanni slowly started to respond to the kiss, her mouth slowly began to open, allowing Jenny's tongue access, she started to kiss back, her own tongue flicking at Jenny's probing tongue, with every moment her response becoming more and more urgent; until they were both kissing passionately.\n\nAfter a minute or so they broke from their clinch, Jenny turned on the shower, adjusted the temperature, and stepped into the cubicle, holding out a hand, wanting Danni follow her. Danni took the offered hand and stepped into the shower.\n\nJenny picked up some shower gel and poured some out onto her hands and started to gently rub the lather into Danni's skin, starting on her shoulders, then moving down her hands down onto her breasts, gently kneading her soft breasts, massaging them, her fingers eventually playing over her sensitive, hard nipples, carefully pulling at them, rubbing them between her thumb and forefinger\n\nDanni wanted more, oh so much more, she took one of Jenny's hands and placed it firmly onto her waiting mound, she wanted to feel her pussy being filled, she needed Jenny to finger her. She then guided two of Jenny's fingers to her soaking hole and almost forced her to insert them into her dripping cunt.\n\nJenny slowly inserted her fingers, relishing the feeling of Danni's wet and willing pussy, she slowly pushed them up to her knuckles, curling her fingers upwards, feeling the walls of Danni's pussy trying to stimulate her g spot, then, slowly pulled them out until the tips of her fingers grazed along the outside of her pussy, and then pushed them back inside, feeling Danni try and force them deep into her.\n\nJenny removed the shower head from its stand and aimed the jet of water first at Danni's pubic mound, and then moved it down until the water was concentrated on her pussy.\n\nDanielle gasped as the water stimulated her, without thinking, her own hands move to her pussy and with one hand either side of her slit she spread her pussy lips, allowing the jet of water to play on her throbbing clit.\n\nAs Jenny used the shower head on her neighbor, she couldn't help but place one of her own hands on her own aching pussy, feeling her wetness.\n\nJenny gave the shower head to Danni, allowing her to direct the jet of water onto her own pussy. She then knelt down in the shower.\n\nDanni looked down, Jenny's head was edging towards her pussy, she opened her legs a bit further and aimed the jet of water at the top of her mound, almost directly onto her throbbing clit until she felt Jenny start to nuzzle into her, she couldn't help but drop the shower head, and grab Jenny's head forcing her into her dripping cunt.\n\nJenny started to nuzzle on Danni's pussy, sucking her lips into her mouth, tasting her wetness, using her fingers to spread her lips. She felt Danni's hands on her head forcing her onto her mound.\n\nDanni wanted to feel her pussy being penetrated, wanted to feel Jenny's tongue forcing its way into her. She grabbed Jenny's head and pulled her into her dripping pussy.\n\nJenny licked along the length of Danni's sweet tasting slit and then forced her tongue deep into Danni's pussy, fucking her tight hole with her tongue.\n\nDanni couldn't help but gasp when she felt her pussy being filled with Jenny's tongue, she still had one hand on Jenny's head trying to force her deeper into her dripping pussy, her other hand on her own breasts, pinching and pulling at her nipples.\n\nJenny, on her knees, nuzzled at Danni's slit, her tongue furiously lapping along her slit, tasting her wetness. She used her fingers to spread Danni's lips allowing her deeper access to her wet pussy hole, her tongue darting in and out, sensing the approaching orgasm of Danni.\n\nDanni wanted to cum, her fingers of one hand pinching her nipples, her other hand forcing Jenny's head deep into her mound.\n\nJenny continued to tongue Danni, savoring the taste of her wet slit, until she felt Danni tense momentarily, and then she came, flooding Jenny's mouth with her cum, Jenny continued to lap at her sweet wet pussy, drinking down every last drop of her pussy juice.\n\nFinally Jenny stood, looked Danni in the eye and kissed her, letting her taste her own juice, letting her eagerly lick her sweet tasting cum off her face.\n\nJenny's hands idly toyed with her own mound, she wanted to feel a tongue in her, her slit was wet with anticipation.\n\nDanni slowly recovered from her orgasm, she wanted to reciprocate the pleasure she had felt, she wanted to fuck Jenny, she wanted to make her cum hard.\n\nDanni took Jenny by the arm and lead her from the shower and into the bedroom.\n\nDanni pushed Jenny back onto the bed; Jenny laid there her hands above her head, her legs hanging over the edge with her thighs slightly apart. Danni stood over her, admiring the beautiful form before her.\n\n\"You want me don't you?\" Jenny whispered, \"You want to taste me, you want to run your tongue over my hot skin.\"\n\nAs Danni watched Jenny spread her thighs further, she brought one of her hands to her pussy, her other on her breasts; pulling and pinching her hard, erect nipples. Her fingers, gently running through the sparse hairs of her aching mound.\n\n\"Mmmmmm, I'm wet, you've made me so wet, oh that feels good.\"\n\nDanni watched as Jenny slowly ran her fingers along her wet slit, her pussy lips slightly spread, swollen with lust, her fingers glistening with her juice. As she watched Danni couldn't help but place her own hand over her hot mound, her own fingers gently scratching along her pussy, trying to ease the ache.\n\n\"I want you to taste me.\" Jenny almost pleaded, \"lick me, suck my hard clit, taste my sweet juicy pussy, I want to cum on your face.\"\n\nDanni moved forward and knelt between Jenny's spread legs, she still had one hand between her own thighs, gently playing with her own hot pussy, feeling her wetness along her slit. As she lowered her head forward she could smell the sweet scent of Jenny's pussy; and very slowly she ran her tongue along Jenny's spread lips, tasting the sweet juice.\n\nJenny brought her own hand up to her mouth and licked her fingers clean of her wetness, then she brought both hands back down onto the back of Danni's head and as she pushed her head into her waiting pussy, she involuntarily raised herself off the bed wanting Danni's mouth to smother her sensitive mound.\n\nDanni lapped at Jenny's slit, loving the taste, her nose and mouth buried deep between the folds of Jenny's hot lips, pushing her tongue into her soaking hole.\n\nJenny felt Danni's probing tongue fucking her tight hole, every thrust of her tongue making her gasp.\n\n\"Lick my clit, lick my clit.\" Jenny gasped.\n\nDanni ran her tongue up jenny's slit, and flicked at her clit with her tongue, with every flick she felt Jenny thrust her mound into her face. She then sucked hard on Danni's clit and gently nibbled on her sensitive button.\n\n\"Oh fuck yes, yes, yesssssssss\"\n\nJenny moved her hands from Danni's head and putting them either side of her mound, she spread her lips apart giving Danni easier access to her dripping pussy.\n\nDanni, sucking and biting on Jenny's sensitive clit, now had the fingers of one hand thrusting in and out of her own wet pussy, feeling the walls of her tight hole contracting on her fingers. She started to lick down Jenny's pussy, dragging her tongue over her wet slit.\n\nJenny moved her right hand onto her throbbing clit and slowly started to rub her fingers in circles over it.\n\n\"Tongue my pussy, fuck my pussy with your tongue, I'm close, please fuck me.\"\n\nDanni did as she was told, her tongue darting in and out of Jenny's dripping hole, forcing her tongue as deep as she could into her wet pussy.\n\n\"Oh god, oh god, yes, yes, yesssssss.\" hissed Jenny\n\nDanni continued to finger herself, her insistent fingers probing deep inside her pussy hole, her juice squelching out between her thrusting fingers.\n\nJenny's fingers were now a blur on her own clit, feeling Danni's tongue inside her pussy she rubbed her sensitive clit, she could feel her orgasm approach, her breathing quickened. Her fingers frantically playing over her throbbing hard clit, her juice lubricating her rubbing fingers and then she came, flooding Danni's mouth with her sweet juice, coating her mouth and face.\n\nDanni, still with her fingers buried deep inside herself, felt Jenny start to cum, she forced her tongue as deep as she possibly could, Jenny's juice seeming to pour from her pussy, Danni was furiously lapping at Jenny's cunt, drinking as much of her sweet cum as possible.\n\nJenny thrashed about on the bed, her legs wide apart, the fingers of one hand rubbing her sensitive clit, her other hand spreading her lips, feeling Danni thrusting her tongue deep into her gaping slit. Wave after wave of her orgasm flooded over her, until finally her convulsions started to subside, she felt Danni remove herself from her open legs, her own fingers now gently massaging her own breasts, spreading her cum soaked fingers making her nipples glisten with her juice.\n\nDanni removed her fingers from her dripping hole; she lay herself gently beside Jenny, watching her stroking her nipples.\n\nJenny looked over into Danni's eyes, Danni's face wet from her own wetness, she leant over and started to kiss her, tasting herself on the skin of Danni's beautiful face, the kiss started slowly, just small pecks, then with a bit more passion until they both kissed hard, their tongues searching each other's mouths.\n\nAs Danni finally broke away she lifted herself up and straddled Jenny, manoeuvering herself so she was kneeling, one leg either side of Jenny's head. She used her hands to spread her pussy lips and then slowly lowered herself, feeling the hot breath of Jenny tickling her wet lips and then she felt Jenny lick around her slit, running her tongue first down the outside of her lips and then down the other.\n\n\"Please don't tease me, I want to cum.\"\n\nJenny continued to gently lick around Danni's hot slit, and then finally she rasped her tongue along the full length of her slit, up to her aching clit.\n\nAs soon as Danni felt her tongue on her clit she let out a scream and ground her pelvis onto Jenny's face, wanting to feel her tongue deeper inside her. She began to rock herself, stimulating her clit and slit on Jenny's face.\n\nJenny sucked hard on Danni's wet clit, taking it fully into her mouth, her tongue flicking over it continuously, she gently bit it, feeling Danni tense and gasp as she did so. As she continued to suck and lick Danni's sensitive clit she felt her start to moan more and more.\n\nDanni now started to rub her own sensitive breasts, gently pinching her hard nipples and then as she felt Jenny bite her delicate clit, her orgasm flooded through her. She felt her pussy start to contract, her cum squirting out with every contraction, soaking Jenny's face, as her orgasm started to subside she felt Jenny bite her sensitive clit again causing her to continue to climax, as each climax ended Jenny teased her clit again until she couldn't take it anymore, she collapsed exhausted at the side of Jenny.\n\nThe two of them gazing at one another, each of them bathed in perspiration, their faces glistening with each other's cum. They smiled and cuddled together, both of them needing another shower!"
    ],
    "authorname": "jenny4her",
    "tags": [
        "lesbian",
        "fingering",
        "masturbate",
        "shower"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/home-alone-ch-05"
}