{
    "title": "Sometimes Harder is Best",
    "pages": [
        "<p align=\"center\">Sometimes harder is best... </p>\n\n<p align=\"center\"> \"This is a song for the ladies\nBut fellas listen closely\nYou don't always have to fuck her hard\nIn fact sometimes that's not right to do \nSometimes you've got to make some love\nAnd fucking give her some smoochies too\nSometimes ya got to squeeze\nSometimes you've got to say please\nSometimes you've got to say hey\nI'm gonna fuck you softly\nI'm gonna screw you gently\nI'm gonna hump you sweetly\nI'm gonna ball you discreetly\"</p>\n\n Fuck Her Gently, Tenacious D\n\n\"Harder ... harder ... oh God ... HARDER!\"\n\n\"Dammit, can't you keep it down Terri.\"\n\nPenny Cheng hammered on the wall. She wanted to scream herself! It wasn't just having her study interrupted. She'd had to listen to Terri and Mike going at it all afternoon. They'd been at it last night for hours. Worse still, Terri yowling like a bitch in heat had woken her up in the early hours of the morning. She didn't even try to be discrete about what she was doing. Terri was her best friend, they'd been friends since they started High School, but honestly, this was waaaay too much. She had an assignment to hand in on Monday. She was doing her best to fine tune and polish it. With all this noise, it was impossible for her to stay focused on her work.\n\n\"Harder ... harder ... fuck me harder ... oohhhhh ... ohh yes yes yes ... Oohhh Jesussssss ... ohhh Jesusss fuck me hard ...\"\n\nTerri's voice carried clearly into Penny's bedroom. She wasn't calling on the Lord in vain either. Her bed squeaked even more noisily than she did. Squeaked and groaned and thumped with increasing vigor against the wall. In a less than musical duet with her bed, Terri moaned and cried out and wailed and begged. All too audibly. Penny didn't need to imagine what was happening. \n\nShe had the soundtrack. \n\nOn full volume.\n\nSighing, she rolled her chair back from her desk and walked out to the kitchen. If she couldn't study, she'd make some noodles. Terri and Mike would be heading out to party soon, she could eat now and study after they left. After those distracting noises ended.\n\nIt wasn't like it was the first time she'd hammered on the wall. She'd talked to Terri about the noise before. Before? She'd brought it up with Terri any number of times over the last few weeks. She'd listened to Terri and one guy or another going at it in the other bedroom at all hours of the night from almost the first week they'd moved into the apartment. At the moment the guy was Mike. Who was, she had to admit, pretty hunky.\n\nSince Terri had started dating him, she'd fantasized once or twice about Mike herself. It was hard not to when Terri was having one of those \"mind-blowing orgasms\" as she so fondly called them, only a few feet away. Especially for someone who'd more or less decided not to have sex until she met the \"one\". Mind you, when she started college back in September, she hadn't exactly expected \"the one\" to take quite so long to find her. It wasn't that she was averse to sex. But unlike Terri, she wasn't going out and actively searching for it either. It wasn't like she was in a hurry.\n\n\"Yes ... yes ... harder ... fuck me harder ... do it do it do it ... ooohhh yeaaaahhh ... do me ... do me ... oh god yeeeeeesssss...\"\n\nNot like Terri seemed to be.\n\nAlthough when she'd left home and headed off to college, Penny had faithfully promised her Mom and Dad she'd work hard and behave, be a good girl, not party. She'd meant it to. Which didn't mean she wouldn't with the right guy. Someone she loved. Okay, maybe just liked a lot. After all, she WAS a good girl. She'd even joined a Bible Study Group as soon as she started college. She'd attended religiously. \n\n\"Ooohhhhhh Jeeeesuusssss Jeeesuussss Jeeeessssuuuusssss ...\"\n\nAlthough Penny's idea of religion seemed to differ somewhat from Terri's.\n\nPenny's Mom had been so serious, so concerned for her. God knows her Mom and Dad had worked hard to get together the money to send her off to College. It wasn't like they were wealthy or anything. Her Mom had always been so adamant about the family plans for Penny - go to college, study hard, get a good degree, find a good job, meet someone who was good husband material, preferably Chinese. Then get married, have a family, all the stuff Chinese parents expected from a girl.\n\nPenny knew the sacrifices her parents had made. And her Uncles and Aunts, who were helping with her college fees. She had no intention of letting the family down.\n\nBut a boyfriend would be nice.\n\nOnly she wasn't going to do what Terri did with her boyfriend.\n\nEven if she did fantasize about it.\n\nAnyhow, she didn't have a boyfriend, so it was a moot question.\n\nTerri's vocalization wasn't a moot question though. It was actually starting to affect Penny's grades. She really couldn't afford that. She HAD to do well. If she couldn't persuade Terri to turn the volume down, she might have to move out. That would hurt too, because Terri was paying three quarters of the rent. When they'd looked at the apartment together, they'd liked both it and the building. Half the rent had been too expensive for Penny though.\n\n\"Don't worry Penny, I can carry it.\" Terri's allowance from her parents was way more than Penny's. She really WAS a good friend, despite the noise. In the end, Penny had acquiesced.\n\n\"But you get the big bedroom,\" she'd insisted. She'd cooked as well. Penny had grown up in the kitchen of her Mom and Dad's Chinese restaurant. Terri couldn't cook to save her life. \n\nShe could burn boiled eggs though. \n\n\"How could you actually do that?\" Penny had been stunned. \n\n\"I've never cooked in my life,\" Terri admitted. She hadn't even sounded embarrassed.\n\nIt had taken a couple of days to get rid of that sulphuric burnt egg smell. The cheap metal pot had managed to weld itself to the element on the stove as well. Terri had no idea how to replace the element either. Penny had shaken her head.\n\n\"It's probably better if you don't start now. Maybe after you graduate?\" When they'd gone their separate ways.\n\nWhatever. Sharing an apartment with Terri for the last few months had opened her eyes to rather more than Terri's inability to cook or do housework. She'd known Terri since they'd started High School. She'd thought they had a lot in common. They did, but there was also a few things they didn't have in common that were now glaringly apparent.\n\nLike the way Terri dressed when she went out on dates.\n\nLike Terri's attitude to guys.\n\nLike the way Terri so casually had sex with almost every guy she dated.\n\nTerri had dated at High School. Penny knew that, they'd both dated, they'd talked about guys and dates. They were best friends after all. She knew Terri had actually had sex with a couple of guys just before she finished High School. But Terri had obviously decided that now that she was away from home and at College, she could cut loose. She'd started partying almost from the first week. To be fair, Penny had to acknowledge that she studied during the week, mostly. But unlike Penny, most of her weekends were spent out on dates or at parties and bars. And not just dating one guy. Sometimes she'd go out with a couple of different guys over the same weekend.\n\nTo Penny's rather shocked surprise, Terri had sex with most of them. The first time she'd brought a guy back to her room, Penny had been horrified. How could Terri do that? But she had, and Penny had had to listen. Again and again. To Terri and guy after guy. Penny had lost track of Terri's guys very quickly. Now she was used to it. But her whole view of Terri had needed to be ... adjusted. It wasn't like Penny was a complete innocent, she knew all about sex. In theory anyhow. She'd dated back at High School a few times - she'd even kissed Wilson and Brett and that other guy she'd dated, what was his name. Tony? She'd let him touch her breasts. Which had been enjoyable, she had to admit. But never more than that. It had barely even crossed her mind to have sex before she was married. Maybe with a very special guy. Perhaps. But not with guy after guy after guy. Not like Terri.\n\nHow did she do it? \n\nThe worst wasn't so much that Terri was bringing guys back and having sex with them. That she could have lived with. No, it was the noise Terri made when she had a guy in her room. It was so distracting. It was bad when she was trying to study, it was worse when she was trying to sleep. Worse still, sometimes it actually got her all hot and bothered and made her think about doing things like that herself. \n\nWhen that happened, it became impossible to sleep. Listening despite herself, Penny would lie in bed, imagining what Terri was doing to say such things. She would even whisper the words Terri used, closing her eyes and trying to imagine what Terri was doing, what was being done to her, for her to say those words. Penny would find herself imagining having that guy in bed with her, looking at her, doing things to her, hearing her say those words to him.\n\nThe first time Penny had touched herself as she'd listened, she'd been shocked with herself. But she hadn't been able to help it. She'd been lying in bed, her eyes closed, picturing what was happening despite herself. In the darkness, her hands had worked her nightdress up, up and then off until she'd been lying there in nothing but her panties. Both hands had cupped and stroked her breasts, teased her nipples until, biting her bottom lip, she'd slipped one hand down over her panties and cupped her mound. She was aching there, aching and wet and it felt so much better with her hand cupping herself there.\n\nHearing Terri's wordless moans of pleasure, hearing the rhythmic noises Terri's bed was making, Penny had slowly rubbed one finger along her slit, over her clitoris, touching herself through the thin cotton, imagining a guy's weight on her, imagining him moving on her, imagining his cock sliding into her where she was so wet. The thought made her breath catch. She rubbed herself a little faster, with a little more pressure. In the darkness she could hear a faint wet sound from her pussy. She could feel her wetness soaking through her panties.\n\nPenny had spread her legs wider apart then, one hand cupping and squeezing a breast, squeezing her nipple. Her other hand had slipped under the elastic band of her panties, past the sparse scattering of black fluff, seeking and finding the slippery heat between her lips.\n\n\"Fuck me,\" she'd whispered, echoing Terri's moans. \"Fuck me hard.\"\n\nAnd in her mind, she imagined that happening to her, imagined that male weight rising and falling on her body, imagined the plunging penetration as her fingers moved easily on her, making faint wet sounds that she could barely hear but that felt so good. Penny's fingers felt good. Terri's moans and sobs and cries of pleasure told her that what Terri was feeling must feel better by far. She was feeling hot now, hot and flushed, her nipples swollen and rock hard, her pussy so wet.\n\n\"Fuck me hard ... give me that big cock,\" she'd heard. \n\n\"Yes,\" she'd whispered, her cheeks burning, \"oh yes ... fuck me ... fuck me ...,\" not quite knowing what \"fuck me\" would feel like but wanting it despite herself, wanting what Terri had. Savoring the sound of those words coming from her mouth. Wanting to know what it felt like to be fucked. Penny slid one finger inside herself, feeling her own tight wetness, moaning softly, listening to Terri moaning on the bed on the other side of the wall, hearing the loud squeaking of the bed, hearing Terri's date's rhythmic groans of pleasure as he took her. Wondering if he would groan with pleasure like that if he took her the way he was taking Terri. Wondering if she would make the noises Terri was making as she was taken.\n\nPenny's other hand had left her breast to join the hand between her legs, legs that were now spread wide, thighs so taut they quivered, her hips lifting, moving as one finger worked inside her while the fingers of her other hand moved over the swollen little bud of her clitoris. Imagining in her mind that she had a big hard cock and that it was plunging into her. \n\n\"Fuck me hard,\" Terri had sobbed.\n\n\"Fuck me hard\" Penny's whisper had echoed, her minds-eye picturing what Terri and her boyfriend were doing. She had heard Terri's shuddering moans and cries, heard her her boyfriend's grunts and the pounding rhythm on the bed.\n\n\"Ohhhhh,\" she had heard, \"oohh ohhh ohhhh...I'm coming ...I'm coming\".\n\nPenny had taken a deep shuddering breath as she listened to Terri's cries of pleasure, of culmination, and then she too had climaxed, her fingers working wetly, her body shuddering in the darkness, biting her bottom lip to keep from crying out as loudly as Terri was. Slowly, her breathing had returned to normal, her heart had slowed, her excitement had faded and her embarrassment had grown. But always, in time, the noises Terri made would resume, more often than not waking Penny from her sleep.\n\n\"Really Penny, if you can't sort out a guy to satisfy you here of all places, you should maybe just get yourself a vibrator,\" Terri had giggled after Penny had asked her to keep the noise down the previous weekend. \"Maybe you wouldn't be so uptight about it.\"\n\n\"I'm NOT uptight. I DON'T need to be satisfied. I just don't want to listen to you and whatever guy you've picked up having sex all hours of the day and night. I need to sleep Terri. I need to study. I have to get good grades, even if you don't.\"\n\n\"Jeez Penny, relax, I only have Mike over in the weekends ... well, and last night ... but it's not like its every night of the week. Hell Penny, you're eighteen, you're at college, this is where you should party like the rest of us before life gets serious, stop being so uptight and get out more. Come out with us, Mike can find a date for you.\"\n\n\"I'm NOT uptight,\" Penny was getting angry. If she wanted, she could find a date for herself. She knew she could. One or two guys had asked her out. But with her course workload, dating and studying weren't exactly compatible. \"I'm just tired, I mean, come on - at four in the morning? You'd be upset, too, if you had a test at nine and you were up all night, trying to study with all that ... all that noise going on in the next room. At least keep it down Terri, please, and don't scream your head off after midnight. Please Terri, that's all I ask.\"\n\n\"Penny, you can't keep good sex down. When it happens, you have no idea whether you're screaming or not, you just do it.\" Terri had giggled. \"If you'd had it, you'd know what I mean.\"\n\n\"Aaaiiiiyaaaahhhhh!\" That particular discussion had ended with Penny storming into her bedroom and slamming the door. And now Terri was going at it again. Jesus! At least this time they were quick about it. Penny was still eating her noodles when the screaming ended. A little later Terri emerged, flushed, dishevelled and smiling happily.\n\n\"Good news Penny.\"\n\n\"What's that? Mike bought you a gag?\"\n\n\"Hey, don't be so bitchy.\" Terri grinned, holding up her cell. \"Mike says he can line up one of his friend's for a blind date, you're coming out to a party tomorrow night with us.\"\n\n\"No waaaaay! I've got an assignment due Monday.\"\n\n\"Come on Penny, pull the other one, I know you already finished that one, you're just trying to get that bonus mark on top of one hundred percent for it, I know you. And I bet you aced that test this morning anyhow.\"\n\nPenny grinned a little sheepishly. That's exactly what she'd been intending. She'd known she'd aced the test by the time she'd finished it. But she really really really wanted those bonus marks as well. \"Yeah, well, I'm not going on any blind date Terri. I don't want to date some guy like Mike. Or one of your other rejects.\"\n\n\"Hey, I heard that.\" Mike stood in Terri's bedroom doorway toweling his hair, dressed in nothing but his boxers. Very tight boxers.\n\n\"Put some clothes on Mike.\" Terri grinned at Penny. \"Don't shock Penny.\"\n\n\"Whatever, Mike's not my type of guy.\" She couldn't help looking at him though. Those muscles on his arms and chest and those six-pack abs. He had a nice tight butt too. And there was that large bulge in the front of his boxers. Mike wasn't like any of the half dozen odd guys she'd dated in High School. Not at all. They'd all been the geeky types, attracted to a female geek. If one of the jocks had ever asked her out on a date ... say, a jock who looked like Mike, she might had done a little more than kiss. She pushed that thought away in a hurry. That was almost as bad as lying in bed listening to Terri.\n\n\"Penny! Do NOT start dating guys like those guys you hung out with back at High School. They were ... you ... Penny, you can't waste yourself on losers...you're far too pretty to date geeks and nerds. Isn't she Mike?\" \n\n\"Yeah, far too pretty for that.\" Mike was still towelling his hair, his muscles moving in a most distracting kind of way. He glanced at Penny, smiling. \"What sort of guys does Penny like?\"\n\n\"Total nerds,\" Terri almost wailed.\n\n\"I don't,\" Penny protested.\n\n\"Hey, some of my best friends are nerds. I need the help with my grades.\" Mike's laughter annoyed Terri. Penny found herself grinning as he glanced at her. \"Come on Penny, come with us this once at least, I'll make sure the guy behaves.\" He grinned. \"No-one like me, I promise. And no nerds either.\"\n\n\"Come on Mike, get dressed, we gotta go. Tomorrow night, okay Penny.\"\n\n\"Yeah, you gotta come with us Penny.\"\n\n\"Okay okay, just this once.\" It must have been looking at Mike in his boxers that made Penny say okay. Listening to Mike and Terri had got her all hot and bothered. Again. Even if she didn't want to. Her pussy pulsed hotly as she glanced at the bulge in those boxers again. She hadn't intended to agree. But she did, somehow, the \"okay\" just slipping out of her mouth.\n\n\"Great.\" Terri almost squealed.\n\nMike just grinned before he disappeared back into Terri's bedroom. It didn't take him long to dress. Terri was ready to go more or less at the same time. Penny tried to study after they'd gone. She couldn't. She couldn't sit still. She couldn't focus. But she could easily think about Mike standing there so nonchalantly in his boxers with that large bulge in them. She could easily think about what he and Terri had been doing earlier in the evening. She could easily touch herself through her panties.\n\nBut she couldn't study.\n\nIn the end, she gave up. Maybe she'd watch a movie. But the movies she found just didn't interest her. She'd watch them for a few minutes and drift off into her own thoughts. Maybe Terri and her other friends were right. Maybe she should get out more. Socialize. Meet new people. Maybe even date. Oh god, why on earth had she agreed to go out tomorrow night anyhow. She just hoped Mike's friend tomorrow night wasn't a complete waste of space. It wasn't as if she couldn't find her own dates if she wanted one. She wasn't bad looking. \n\nWhatever, she couldn't just sit here all night.\n\nWhy not go downstairs to the gym and workout until she was exhausted? Then at least she'd sleep. It wasn't like she needed to change. She was already wearing the lycra shorts and a lycra tank top she usually wore around the apartment. It was Friday night, nobody'd be in the gym except her. Decision made, she grabbed her gym bag and headed for the elevators. Maybe she should take the stairs, but the 20th floor meant a lot of them. She bounced through the foyer and into the gym, waving to the security guard at the front desk on the way. She'd been right. She WAS the only person in the gym. Great! She knew most of the regulars in the building who used it in the morning but she'd never actually used it late in the evening. \n\nAnyhow, it was great to have it to herself. She didn't need to bother slipping her sports bra on under the lycra top. Stretches done, she moved to the treadmill. A slow jog to start with, speeding up a little as she warmed up and got into her stride. She actually preferred running outside but the treadmill was okay. Running, she almost regretted not wearing a sports bra, but really, it wasn't like she actually needed one. One of the benefits of small firm breasts. She found herself giggling as she stepped up the pace, starting to push herself harder. Fifteen minutes and she was sweating hard. Thirty minutes and her tank top was soaked with sweat, clinging to her.",
        "Forty five minutes. She was breathing hard, feeling the burn. Her top was soaked through. Seeing herself in the mirror, the tank top clinging wetly to her body, maybe she should have worn that sports bra. But she hadn't and it wasn't like there was anyone else in the gym to see. Breathing hard, she kept it up for another ten minutes before slowing. A short cool down and then it was time for one of the weight machines. Which she had to adjust. Damn guys doing their weight routines and showing off. On the other hand it only took a minute to adjust and then she was off, working through her reps.\n\nEyes close, breathing hard, she was halfway through her weights when a draft of cool air wafted across her, chilling the wet tank top where it clung to her, chilling her lycra shorts where they clung to her. Startled, she opened her eyes, looked towards the door.\n\nPenny saw HIM. \n\nJust like that, something inside her knew immediately that this was the guy. The one. Just one glance. She was breathing faster, her heart drumming like a birds, her whole body going weak so that she almost let go of the grips. It wasn't his face, although that looked good. Clean-shaven with a slight shadow, blue-eyed, blonde, masculine. Maybe a little older than she was. No, it wasn't his face, it was the way he was built, from his feet to his head. She watched him turn towards the treadmills, presenting his back to her. V-shaped, rising from a tight butt and narrow waist to broad muscled shoulders and arms as thick as her thighs. And his butt. Oh god, that was a butt to die for. Narrow and tight and firm and beautiful. She wanted to kneel at his feet and kiss that butt, run her hands over it, hold it, then touch him everywhere.\n\nEverywhere!\n\nHis back to her, he began to jog. Penny watched him move, eyeing the flex of his muscles, the swing of his legs, hypnotized by the movement of his butt, the play of his muscles. She slowed her reps, wanting to draw out the sheer visual pleasure looking at him gave her. She wondered if guys felt like this when they looked at those girls on the porn websites she'd looked at out of curiosity once or twice. She must have watched him running for a good thirty minutes, slowing her reps right down. Even so, her arms were totally burning when he finally stepped of the treadmill to move to one of the weight machines. While he was setting himself up, Penny started working, very slowly, on her legs.\n\nHe sat, facing her across the small gym. Almost hypnotized, Penny could hardly breathe. His pecs, moving as he worked, flexing, tightening, relaxing. His abs. Like a wall, so well-defined even through the tight t-shirt. His arms moving, flexing. Almost panting, she wanted to run her hands over him, stroke him, feel those muscles moving, feel them flexing. God, he looked so hunky. Those arm muscles. Those abs. That tight butt. And his legs. Without conscious thought, Penny's eyes ran over his legs before moving to his shorts, seeing the bulge there.\n\nEven from where she sat, she could tell that bulge was bigger than the bulge in Mike's boxers. Her pussy pulsed hotly. Her nipples seemed to harden and swell, aching as they pushed outwards against her wetly clinging tank top. She wasn't even embarrassed, she was so into just looking at him working out on his weight machine. \n\nFor the first time in her life, Penny desperately wanted to pick a guy up. But she didn't know how. Instead, she sat there watching him, feeling her body tingle and burn. Feeling her swollen nipples aching. Feeling herself so wet and hot, as wet and as hot as when she teased herself with her fingers. He was looking at her too. Whenever she glanced at him, he was watching her. He'd look away when she looked at him, the same way she'd lower her eyes or move her head when he caught her looking at him. Looking away from his eyes, she looked again at that bulging prominence that his shorts concealed.\n\nOh. My. God. He had an erection. She could see it pushing outwards against his tight shorts. He really was huge. He was looking at her the way she was looking at him. He was watching her. He'd got hard just looking at her while he did his reps. Penny felt her pussy pulse again as she closed her eyes, feeling faint, feeling an unfamiliar black hole of excitement opening within her. She'd never seen a guy get hard from just looking at her. Never. His eyes, she could see his eyes, he was looking at her legs, where she sat with her legs spread wide, her lycra shorts clinging tightly to her body. Very tightly. She was wet, she was wet with excitement from looking at him. From seeing him looking at her. She actually had to bite her bottom lip to stop herself from moaning out loud.\n\nPenny's sweat-soaked tank-top clung to her like a second skin, making it obvious that she wore no bra. Her tight lycra shorts clung to her body, outlining every intimate curve. She was heart-stoppingly aware of that, of the tightness of her lycra shorts, hugging her body. Hugging her everywhere as she sat facing him. His eyes stayed on her. They stayed on her as she climbed off the weight machine on shaky legs. They followed her as she walked across to the exercycle. \n\nHalf of her was embarrassed enough to want to leave the gym. The other half of her wanted to stay and watch him, wanted him to watch her, to look at her, to get excited by her. All of her wanted to say something to him, to talk to him, but she had no idea what to say. How did you pick up a guy in the gym? Maybe she should have followed Terri's advice and gone out more. Maybe she should have, but she hadn't.\n\nBreathing hard, and not just from her workout, she climbed onto the exercycle, pedaling slowly, looking at him, imagining feeling his body on hers, that mouth touching hers. Thinking about him like that was getting her wetter and wetter, so hot she was almost wriggling as she pedaled, the movement of her body against the lycra that clung so tightly to her accentuating that wetness, that heat. She wanted to touch herself so badly. So badly that she was almost wriggling in her seat as she pedaled, the friction of the seat beneath her as she moved exquisitely enjoyable.\n\nPenny pedaled harder, breathing faster as she eyed him. He was bigger than Mike, more muscular, yet somehow he looked gentler, more open. She tried to imagine him doing to her what Mike did to Terri and had no problem with that thought. It was easy to think of his hands on her, caressing her, easing her onto her back as he drew down those tight shorts to expose himself. Closing her eyes, Penny pedaled faster, panting, rubbing herself against the seat of the exercycle, feeling herself so wet and slippery. Leaning forward a little, in her mind she parted her legs for him, exposing herself, feeling him push against her. She slid herself against the seat, rubbing, rubbing ... Imagining him pushing into her, those eyes looking into hers as he took her ...\n\n\"Oooohhhhhh.\" She cried out, abruptly climaxing, suddenly dizzy, losing her balance, starting to fall of the bike. Everything went black for a second as she toppled sideways. She felt strong arms suddenly catch her, hold her, support her. When she could see again, he was half holding her in his arms, one arm steadying her, the other under her, supporting her weight. \n\nShe tried to hold herself up, failing miserably as he lifted her and set her onto her feet. She had to place both hands on the exercycle, bending forward, panting, her knees turned to jelly, her body still glowing. One of her breasts pushed firmly against his arm where he supported her weight. That felt good. That felt so good.\n\n\"I think you pushed yourself a bit hard there.\" God, his voice was perfect. As perfect as the rest of him.\n\n\"Uhhhhh,\" Penny gasped, \"Uhhhh.\"\n\n\"Are you okay.\"\n\n\"Nuuuhhh.\" Oh god, she sounded like such an idiot. This was so embarrassing. \n\n\"Take it easy there, relax, breath in slowly...\" Please, keep talking. Penny wanted to say something but she was still breathing too hard. Too hard? She was doing a good imitation of a steam engine. She still felt faint. And oh god, his hands on her felt so good. Even better than her imagination.\n\n\"Better come and sit down.\" He led her over to one of the weight benches, eased her down. \"Put your head down, breathe slowly ... slowly now...\" He knelt on the floor beside her, close enough to bite. She could smell him, sweaty, masculine, an attractive smell that made her want to lick his skin. \n\n\"Feeling better now?\" She could hear the concern in his voice. With her head down, she could see the bulge in his shorts. God, he still had an erection. She wanted to reach out and stroke it with her fingers. She'd been sharing an apartment with Terri for too long. That was the sort of thing Terri would do. Not her. Not Penny Cheng.\n\n\"Yeah,\" she managed to pant. \"Sorry about that.\"\n\n\"No problem.\" He stayed next to her. \"You sure you're okay? I can walk you back to you apartment.\"\n\n\"No, that's okay, I'm fine.\" You idiot Penny, you should have said yes.\n\n\"That's good.\" He stood. Standing, that bulge was right in front of her face. Penny's pussy pulsed again. So close. So very close. She closed her eyes for a moment. When she opened them again, he was walking back to his weights. With a sigh, Penny stood, walking across the gym on slightly shaky legs to retrieve her gym bag. She caught his eyes following her.\n\nDeliberately now, her back to him, she bent down to retrieve her towel, wipe her face, hang the towel around her shoulders before heading for the door. He watched her all the way to the door. \n\n\"See you again,\" he called out as she opened the door.\n\nPenny turned her head and smiled. \"See you next time.\" Oh please please please see me next time. Through the glass walls, she could see him watching her all the way across to the corridor leading to the elevators. Why oh why oh why hadn't she said yes when he asked if she'd like him to walk her back to her apartment. \n\nThat night, she slept so soundly that Terri and Mike didn't wake her up at all. In fact it was ten in the morning before she opened her eyes, rested and relaxed. Her first thought on waking was of that guy in the gym. Maybe he'd be in the gym again. She threw on her tracksuit trousers, a sports bra and t-shirt.\n\nShe had a long slow gentle workout while she waited, hoping he would show up.\n\nHe didn't.\n\nMaybe next time?\n\n* * * * * * * * * *\n\n\"Penny! You CAN'T got to a party dressed like that.\" Terri's annoyed squeal brought a grin from Mike.\n\n\"Why not?\" Penny didn't see anything wrong with what she was wearing. It was a student party after all.\n\n\"Jeans! I mean, jeans and a crappy old top. Penny, come on! Okay, this is so not going to happen. Come. With. Me.\" Terri just about dragged Penny into Penny's bedroom. \"Show me your clothes, I know you have some good ones, I bought them for you for your birthday.\"\n\nPenny gulped. She remembered all too well. Her eighteenth birthday and she'd opened Terri's present in front of her Mom and Dad. Her Mom had been outraged. Her Dad had just looked embarrassed. Penny had explained it away as Terri's idea of a joke. The clothes had gone into a plastic bag and then into the back of her closet. She hadn't dared leave them at home when she headed off for college.\n\n\"Here they are.\" Oh god, Terri had already found them. She was like a ferret when it came to clothes. Worse, she was holding up the pleated skirt she'd bought for Penny, the one that was so short she'd blushed just looking at it. \"The skirt's good, get those jeans off Penny.\"\n\nIt was no use arguing with Terri when she was in one of \"those\" moods. Trepidation was replaced by embarrassment as she peeled her jeans off.\n\n\"Penny!\" Terri's squeal was even more outraged. \"You can't, those ... those ... God, panties like that went out with my grandmother.\"\n\n\"What's wrong with them?\" Penny looked down.\n\n\"Everything. At least wear something pretty. I mean, white cotton? What else do you have?\"\n\n\"Uhhh, Terri, ALL my panties are like that.\"\n\n\"Penny!\" Terri almost sprinted out. So fast, Penny barely had time to hide herself from Mike's eyes as he lounged on the couch, grinning like a Cheshire cat.\n\nTerri came back in, holding a plastic package.\n\n\"I am so NOT wearing your panties!\" Penny was adamant. There were some things on which you had to draw the line.\n\nTerri held the plastic package out. \"Still in the wrapping. Brand. New. Put. Them. On. Now.\"\n\nBlushing, Penny peeled her white cotton briefs of and hastily slipped into the black panties that Terri pulled from the pack. Oh. My. God. They were tiny. At least they weren't g-string panties but there wasn't much more to them. A tiny front, a small back and a couple of strips of black elastic across the hips. She slipped the skirt on equally as hastily. At least the skirt concealed a little more. It was short though, far shorter than anything Penny had ever worn before. As short as the skirt Terri was wearing. She felt dreadfully exposed.\n\n\"Here.\" Terri held out a halter top. It wasn't one of her presents, it was an old one of Penny's from when she was about twelve. She had no idea how it had gotten here with her other clothes but there it was. In Terri's hands. Being held out towards her to put on. She opened her mouth to say she'd wear something else, it was far too small.\n\n\"Not a word.\" Terri was adamant. \"Put. It. On.\"\n\nPenny slipped her top off. Taking the halter top from Terri, she slipped it over her neck. Terri stepped behind her to do the ties across her back. Next second, Penny felt her bra unhooked.\n\n\"No way,\" she protested. \"No way am I going on a date with no bra.\"\n\nIt made no difference. Sixty seconds later her bra was gone. The halter top was fastened across her back. Terri smiled happily.\n\n\"That, Penny Cheng, is SO much better. NOW you look hot.\"\n\n\"I don't want to look hot Terri.\" She didn't feel hot. She felt like she was burning. With pure embarrassment. She could never go out looking like this. Looking like ... looking like ...\n\nTerri flung open Penny's bedroom door. \"Mike, come and have a look, doesn't Penny look hot.\"\n\nMike peered in, whistled. \"Nice Penny, very nice, Greg's gonna love this.\"\n\nPenny didn't care whether Greg loved it or not. She was blushing furiously. And that was only with Mike looking her up and down. She could see herself in the mirror and she did look sexy, she knew that. The short skirt accentuated her long slender legs. The halter top left everything except her chest from her neck to her navel uncovered. It covered her breasts, but in that disconcerting way that halter tops have, of emphasizing what they conceal. Penny didn't have much to emphasize mind you, but the small halter top managed.\n\nExposed didn't really describe how Penny felt. She felt half naked and ... and vulnerable. Guys would look at her and think she was ... think she was ... like Terri.\n\nHer pussy pulsed hotly.\n\n\"Come on, let's get going.\" Mike was impatient now.\n\nBefore Penny could blink, she was walking out of the apartment with Mike and Terri, heading for the elevator. It was a long wait before the doors opened, Mike and Terri just about dragged her in to an already half-full elevator, everyone heading out to bars or parties. Penny was just one more scantily dressed girl heading out. They seemed to stop at every floor, packing in like sardines.\n\nIt was him. It was him! But the elevator was packed. He stepped back, the doors closed. Just like that, he was gone. In the foyer, she tried to wait but Mike and Terri were having none of it. \n\n\"Greg's waiting outside, come on, we gotta move.\" And Greg was, his Jeep right outside the entrance. As they pulled away from the curb, Penny glimpsed him again, leaving the apartment building with a couple of other guys. Her heart did its little pitter patter thing for a second before he disappeared from sight.\n\nSeated in the front, Penny hung on as Greg roared through town. She wished his hand would stay on the wheel rather than her knee. She wished she'd worn her jeans rather than the short little skirt that exposed most of her legs to Greg's hand. Something he seemed determined to take advantage of however many times she eased his hand off. He acted like it was a game and she was teasing him. She was so going to kill Terri.\n\nThe party was worse. \n\n\"Come on, let's go dance.\" Terri hauled them into the room where everyone was dancing right away. Penny enjoyed dancing, but not when she was wearing a skirt that flew up and exposed her panties whenever she moved to energetically. Worse still, Terri and Mike disappeared after a few minutes. That left her with Greg, whose surname should have been octopus because his hands were everywhere. \n\nAnd the music.\n\nThe music pounded out, so loud Penny couldn't hear Greg's voice even when he yelled something in her ear. She shrugged and smiled. Whatever it was he'd said, he took her smile for agreement and turned, disappearing into the crowded darkness of the basement. Terri and Mike had disappeared completely, she knew absolutely nobody here. She didn't like dancing. She didn't like the music. She didn't like parties. She didn't like dates that disappeared on her, blind or not. This just sucked.\n\nThis just sucked big time!\n\nIf she'd known Greg was such a creepy asshole, she'd never had let herself be persuaded to come. Mike had said he wasn't like him. He hadn't mentioned Greg was a complete dick with hands that he couldn't keep to himself. Not only that, he'd abandoned her in the middle of a crowd of frenetically dancing strangers. Penny felt completely out of place. Not only that, she wanted to lose Greg and go home.\n\nThis really really sucked.\n\nSomeone bumped into her. Hard. Almost knocking her down, so that she cannoned painfully into some guy right next to her. She would have fallen except that his arm caught her and held her. Penny found herself looking into a pair of deep blue eyes that swept her up into their depths and held her there. Eyes as beautiful and as blue as the sea. Eyes that she'd last seen in the gym last night, looking at her, following her butt as walked towards the elevator.\n\n\"Hi,\" he yelled, a momentary dip in the volume meaning she actually heard him rather than trying to lip read. Although she wouldn't mind reading his lips. Closely.\n\n\"Hi yourself,\" she yelled back, regaining her balance. He didn't take his arm away. Penny didn't try to escape either. She liked the feel of his arm around her, just as she had last night in the gym. Besides, she was still looking up into those beautiful blue eyes. She winced as the music wound up again. He noticed. She knew he noticed, it was the change in his eyes that told her without either of them speaking.\n\nWithout a word, which would have been useless in any event, he turned and took her with him through the crowd, edging people aside for her, making a path to the doorway, then up the crowded stairs to the foyer of the large old house. Still crowded, it was just a little quieter. Quiet enough that you could hear someone yelling.\n\n\"Too noisy,\" he was yelling. She could hear him now. Just. \"Somewhere quieter?\"\n\n\"Please.\" Penny yelled back, clinging to him. Anywhere away from this insane noise. Anywhere he wanted to take her.\n\nNow, rather than his arm around her, he was holding her hand. She liked the feel of his hand holding hers, large and strong and dry, not wetly sweaty like the assholes'. He looked around before leading her up the wide wooden stairs. It would have been a beautiful old house if it hadn't been so battered. Penny would have loved to have lived in a house like this rather than the modern designer-shoebox twentieth floor apartment she shared with Terri. Even if it did have a gym and a swimming pool and all those other facilities everyone thought were great.\n\nIt was a little quieter on the first floor, a little less crowded. Penny thought he'd stop but he didn't. He led her up another flight of stairs, reaching another large landing. There were still people but not as many. This was one huge party. She felt a vast relief at the lowered volume of the music, now more of a distant but pervasive thumping than a deafening cacophony. It was still dark though. Dark and busy. Penny found herself blushing heatedly as a glance through one of the open doorways revealed sights she would rather not have seen. ",
        "How could anyone do things like that where anyone could see them? Terri sprang immediately into her mind. Terri probably would. Terri probably was right now.\n\n\"Want to sit down and have a drink?\"\n\nThe guy was talking to her. His voice was as mellifluous as his eyes were blue. And his face. Masculine, chiseled jaw, silky blonde hair. Not exactly handsome but totally attractive. She could even smell him, slightly sweaty and very masculine, just like he'd smelled last night except maybe not as sweaty. Not that she minded the sweaty. Not on him. Not at all. And those muscles on his arms. She remembered what he'd looked like in shorts and a tight t in the gym last night. How could anyone be so perfect? Penny found herself wanting to just roll and purr all over him like a kitten. Her nipples. Oh my god, they were so hard, pushing the thin halter top out. Visibly. She was so going to kill Terri.\n\n\"Yes please.\" God, she sounded so girly and polite. Surely she could say something more intelligent. But her brain seemed to have died. All she wanted to do was look at him and have him hold her hand. Maybe even hold her the way he had when she was bumped. Could she pretend to fall into him so that he'd hold her again?\n\n\"Hey, what's your name anyhow?\"\n\n\"Penny.\"\n\n\"I'm Eric and I wanted to ask you that in the gym last night. But I was too shy.\" He grinned.\n\nPenny giggled. \"I wanted to ask you the same thing. And I was too shy too.\"\n\nThey smiled at each other. That smile made her feel as if she'd suddenly come alive, as if she'd been plugged in to something that made her more alive, more ... more her. She realized neither of them had said anything for ages. They'd just been looking at each other. They both seemed to realize it at the same instant in time. They both laughed, a laugh that shared that knowledge without words.\n\n\"Hang on a minute Penny, stay right here, don't go anywhere, okay, I'll be back in two minutes with a drink, I promise.\"\n\nBefore she could say \"don't go\" he was gone, jumping down the stairs, threading past people. Penny watched him until he'd disappeared. She waited, watching for him to reappear. Instead, she saw Greg climbing the stairs, looking around dopily. Oh God, was he looking for her? Penny searched desperately for an escape. No way was she going into those rooms where she could see all that making out going on. She glanced again. Not just making out either. Yuck! That was just so disgusting that people did stuff like that in public, where anyone could see them.\n\nGreg was getting closer. He was on the landing below, any second he would glance up and see her. Penny stepped back hurriedly. If she couldn't see him, he couldn't see her. Maybe he wouldn't come up that last flight of stairs.\n\nShe saw the top of his head. She so did not want him to find her.\n\nPenny panicked.\n\nBacking up, she was stopped by the wall. Turning, she saw a closed door, opened it and bolted through, hurriedly closing it behind her, heart pounding. What she'd thought might be another room was instead a stairwell. Narrow carpeted stairs that led upwards. To the attic? Through the door, she heard Greg's voice, not what he said but the tone. Penny bolted up the stairs, almost running. At the top, she found herself with two choices - two doors, one on either side under the V-shaped roof. The door below opened, light shone in, illuminating the stairs below. The top of Greg's head appeared.\n\nPenny opened the nearest door, slipped through, closing it gently behind her. The room she found herself in was dark, lit only by the streetlight coming in through the small attic window at the room's other end. There were people already in the room though. A large bed under the window on which two guys and a girl lay, making out. Penny didn't care. Disgusting or not, it was better than Greg finding her. To one side was a couch with someone at one end. Some couple, Penny quickly corrected herself as she eased herself down onto the end furthest from them. The end where she'd be almost hidden by the door if someone opened it.\n\nSeated at the darkest end of the room, right beside the door, she couldn't help noticing that the couple on couch next to her were locked in a passionate kiss - and the guys hand was under the girl's skirt. Neither of them had even noticed her. Opposite her was another old couch, with yet another couple on it. Nobody even looked at her, nobody said a thing. She could have been invisible for all the attention they gave her, for all they cared.\n\nGod, was everyone at this party except her making out? She blushed and tried to look away, wondering what to do. Whatever direction she looked in, she saw the same thing. Looking away from the couple opposite her wasn't such a great idea - the first thing Penny saw was the girl on the bed between two guys with her top pushed all the way up to her armpits, exposing both her breasts. One of the guys was busy kissing and sucking one of those breasts. The other was kissing the girl, their mouths locked together, his hand inside her panties while her jeans were half way down her thighs. \n\nPenny's blush turned from pink to a furious burning scarlet red. That girl? How could she? With people watching? With two guys? It was shocking, it was embarrassing, somehow it was also exciting. All at one and the same time. She'd thought Terri was shocking. This was worse. It was also impossible to tear her eyes away. Penny's breath came faster as she continued to watch, aware that she could even hear the girl, hear her moaning softly as the guy's hand moved inside her panties. She wondered when it would be safe to leave. How long would Greg take to disappear? When could she go back down? Eric would think she'd run out on him. She hoped not. She really did. She'd screwed up in the gym. She so did not want to blow it again. But she probably had.\n\nThe door beside her opened slowly. There was a moment of suspense, that sinking in her stomach, the dread that Greg had somehow followed her up here.\n\nThe head that peered around was him.\n\nHer blue-eyed guy.\n\nHer savior.\n\nEric.\n\nPenny smiled as their eyes met. Eric slipped into the room, easing the door shut behind him, seating himself on the end of the large old couch, squeezing Penny closer to the couple making out. He handed her a drink, a bottle of something. She drank gratefully without even looking to see what it was. Then spluttered a little at the unaccustomed alcohol. He grinned.\n\n\"I lost you in the crowd.\" His voice was a whisper. Up here you could barely hear the music. On the other hand, it meant she could hear that girl on the bed. She was almost as noisy as Terri. Eric's arm slipped around her shoulders, so huge and strong, so gentle. Penny nestled into him happily. She felt as if she belonged in his arms.\n\n\"That's Okay,\" Penny whispered back, relieved. \"I was hiding from my date.\" \n\nShe took another drink. The mango coconut flavor was lovely, cold and slightly sweet. She drank thirstily. It was much quieter up here, for which she was grateful. Eric looked at her and even in the dimness of the room, she read his expression. \n\n\"Blind date,\" she whispered, \"my housemate set it up, he was awful, I was going to catch a cab home when you rescued me. Then I saw him coming upstairs so I came in here to hide.\" She tilted her head to smile up at him. \"I was worried you might not find me.\"\n\n\"I'd have searched the whole house from top to bottom before I gave up.\" His smile lit his face up, made her heart beat faster. \"Then I'd have hung out in the gym waiting for you.\" His eyes swallowed her, held her enthralled. She could look into those eyes for hours. \n\nPenny giggled. \"I went to the gym this morning to hang out and wait for you.\"\n\nHis body shook with silent laughter. \"I guess we missed each other, so did I. I was really hoping I'd see you again.\"\n\n\"Well, you found me.\" His arm felt so good holding her.\n\nHe glanced around at the couple on the couch beside Penny, chuckling silently before whispering in her ear. \"You found a great place to hide.\" \n\nPenny looked. The girl's top was unbuttoned, the guy's hand was inside that top, moving. The girl's eyes met hers. She smiled. Penny blushed, looking away from them, looking across the room instead, only to see the girl and the guy there entwined in a tangle of moving limbs and disheveled clothing. The bed by the window held an even more disconcerting sight. The girl there now had her jeans and panties down around her ankles now, her t-shirt up still pushed up around her armpits, making it all too obvious what the two guys with her were doing. From the noises she was making, she was enjoying herself.\n\nEric leaned in towards her, his arm drawing her closer. He wasn't. Was he. Her heart did its little flutter-thing again. Next second he kissed her softly on the cheek. Penny felt almost grateful for the distraction. He settled deeper into the couch, his arm urging Penny a little closer to him.\n\n\"Your hair smells nice.\" His voice was a soft murmur in her ear.\n\n\"Uh-huh,\" Penny was non-committal but she liked that he liked the smell of her hair. She liked the way he smelt too. She raised the bottle to her mouth. Whatever Voli Mango Coconut was made from, it tasted great and it certainly made her glow. She giggled at the thought that Eric couldn't try to kiss her if she was drinking. Thinking about it, she decided she wanted him to kiss her. He seemed to be a nice guy as well as looking good. Good. He looked great, and those eyes. But she didn't even know him. Apart from last night in the gym where they'd both been surreptitiously looking at each other for an hour, she'd only met him fifteen minutes ago. She found herself thinking about kissing him anyhow as she took another sip. That was ridiculous. Besides, her last experience with kissing hadn't been great and it had been last year, back at High School.\n\nAt her Bible Study class at church of all places.\n\nWilson was a nice Chinese guy, but his kiss had been all wet and sloppy. He'd tried to stick his tongue in her mouth as well. Gross! Penny took another drink quickly. This guy probably knew how to kiss really well. He looked and acted like the sort of guy that would. Penny blushed as she realized she really was thinking about kissing Eric. Or at least, letting him kiss her. She wished now she had more experience. She really wanted him to kiss her. His arm wrapped more intimately around her shoulders, he eased himself closer. Drinking postponed any decision though, so she finished the contents of the bottle. It was only after nothing came out that she realized the bottle that was her temporary protection was empty.\n\nEric's hand reached around and took the empty bottle from hers. He dropped it behind the couch. His face moved closer as Penny glanced at him. Her heart seemed to stop as she realized he actually was going to kiss her. He was. He actually really was. She waited for what seemed an eternity but in reality it was probably only a second or so. His lips touched hers, brushed them lightly. A jolt of pure excitement surged inside her as his lips brushed hers again, pressing more firmly against hers as his arm eased her even closer to him. His tongue pressed against her lips. His mouth seemed to want hers to open. A brief memory of Wilson flickered through her mind as her lips parted tentatively. His tongue somehow slipped between them, slipped into her mouth as her mouth opened wider, brushing Penny's teeth, brushing her tongue. \n\nHis kiss wasn't at all what Penny thought it would be. She liked the taste of him. She liked the feel of his tongue inside her mouth. He wasn't sloppy and wet either. Before she knew it, her mouth was wide open, his lips meshed firmly against hers, his tongue probing deep inside her mouth. Penny realized she was enjoying this. If her dates last year at High School had kissed like this, she would have let them keep on kissing her. She forgot all about the eminently forgettable Wilson as, instinctively, she half turned towards Eric, one of her arms sliding around his neck as their kiss went on and on.\n\nHer hand brushed across his neck, her fingers stroking across his skin, feeling the solid muscles, the thickness of his neck, the solid strength of his shoulders. Just the feel if him under her fingers drew a breathless little moan of pleasure from her, a moan that filled his mouth. She hadn't meant it to be, but Eric definitely took that as encouragement to do more than kiss her. One of his hands almost immediately cupped one of her breasts through the thin material of her halter-top. Penny's eyes widened. Only one of her dates had ever tried to touch her like that. For a very brief moment she regretted wearing the flimsy little halter-top. \n\nThe regret lasted only momentarily. His hand moved on her breast, caressing, exploring; sending little rockets of pleasure shooting through her body. It was okay, she told herself, she was wearing her halter-top. The material was between his hand and her. It wasn't like he was actually touching her skin. It was okay for him to touch her like this. She could let him do that, it wasn't like his hand was inside her halter top.\n\n\"Oohhhhh.\" A soft low moan escaped from her lips into his mouth. He kissed her harder, his mouth more demanding, his tongue sliding deep into her mouth, her own mouth opening even wider to his. Even as he kissed her, Penny felt his other hand behind her, at her back, then a sudden relaxation of the tightly fitting halter top as he unfastened the tie that held it together behind her back. Penny's eyes widened even more as the now loosely hanging top allowed his hand to slip under it, cupping her naked flesh, running a thumb lightly across a nipple that she now realized was swollen and achingly hard. \n\n\"Oooohhhh.\" Again she moaned into his mouth. The feel of his hand on her naked skin generated a shocked excitement, an intimate invasion that was as unexpected as it was enthralling. It was delicious but she knew this was where she should draw the line. She should stop this right now before things went too far. And this was too far, she knew. But it felt so good. It felt really really good. There was no harm in letting him touch her there. It wasn't like his hand was inside her panties. Her indecision led her to continue kissing him as his hand caressed both her breasts alternately. She sighed her enjoyment into his kiss. \n\nShe'd stop him if he tried anything else, she told herself. The loose halter top at least concealed what his hand was doing to her from the gaze of the others in the room. Not that they would care. What the other three girls were doing was far more obvious than what Eric was doing to her. Eric chose that moment to brush the halter top around and up to one of her shoulders, turning it into a cape of sorts, exposing both her small breasts to his eyes. To the eyes of anyone else in the room who made an effort to look.\n\nEric looked.\n\nThe burning flush spread from Penny's cheeks down her neck as he lifted his mouth from hers to look down at her nakedly exposed breasts. Her first reaction was to cover herself with her free hand, a jerky movement that his hand intercepted, taking her hand, holding it in his as his eyes examined her. That burning flush spread downwards from her neck, over her chest, across both her breasts, her nipples engorging even further, jutting outwards, swollen to a size that seemed to her to be enormous.\n\nPenny watched him looking at her, watched him looking at her breasts as she sat next to him on the couch, half turned towards him. His hand left hers, cupped one naked breast, caught one swollen nipple between a thumb and finger and squeezed it lightly. At the same time, his head lowered, he engulfed her other breast with his mouth and licked it with his tongue, licked at her swollen nipple.\n\n\"Oooohhhhh.\" Penny forgot the words of rejection she'd been planning on. She forgot her intent to reach up and remove his hand. She forgot her intent to cover herself with her own hand or even her halter top. Instead, her back arched, her eyes opened wide, she moaned out loud. It wasn't just ripples of sensation that washed through her, it was waves. She pushed her breast hard into his mouth while his hand continued to gently tease and tug at the other nipple that it held so firmly. That it seemed to know how to handle so well.\n\n\"Nnnoooohhh ... ooohhh ... ooohh.\" Penny's protest turned into a prolonged moan as his tongue swirled across and around her nipple and over her skin. Pushed backwards into the centre of the couch, she flushed bright red, acutely aware of her sudden exposure, horrified that the others in the room would see her exposed breasts. Horrified that they might hear her uncontrolled moan of pleasure. Horrified that they would see what Eric was doing to her. She was almost more worried about that than she was about his mouth and hand on her breasts, although that was worrying enough.\n\nAlmost.\n\nBecause what Eric was doing to her was sending waves and sudden explosions of pleasure washing through her body continuously. One of his hands was behind her, supporting her as her back arched in a completely involuntary movement. The hand that Penny had intended to use to remove his from her breasts was instead betraying her, resting on his head, stroking his hair as his mouth suckled at her. She gave a hurried glance across the room. The couple on the couch opposite were too engrossed in what they were doing to each other to be interested in what was being done to Penny.\n\nToo engrossed?\n\nHer eyes widened in shock. The girl on the couch opposite was almost naked, her top open, her jeans discarded on the floor, the guy on top of her, between her widespread legs. Even as Penny looked, the girl moaned softly, the guy moved. Even in the dimly lit room, Penny could see the guy's cock sliding in and out of the girl's body. She found herself watching them over the top of Eric's head as he suckled at her breast, unable to tear her eyes away from the sight, shocked at what they were doing so publicly. Shocked, and at the same time, wildly excited.\n\nThe sight of them, seeing what the guy was doing to the girl, made what Eric was doing to her seem minor by comparison. She tried but she couldn't tear her eyes away. The sight of the guys cock moving in a steady rhythm as it penetrated the girl opened up a black hole of sensations within her own body. The mouth on her breast, sucking gently at her nipple now, kept adding to the rippling excitement that she felt. Eric's hands turned her, pushing her back and a little sideways towards the other couple with which they shared the couch. And all the while his mouth worked on her. \n\nPenny looked at her hand stroking his head, almost absent-mindedly, unable to think a coherent thought. Her body was on fire, burning with the excitement she felt. Her hand somehow seemed detached from her, alive with excitement, alive with scared anticipation, doing what it was doing of its own accord, not under any conscious command of hers. Shivering, she arched her back a little more, pushing her breast at Eric's mouth. Her eyes remained fixed on the couch opposite, watching the guy moving on the girl, his butt lifting and plunging, his cock sliding in and out of her body, the girl's legs drawn back, far far back so that her knees clasped the guys ribs.\n\nThe girl's feet bounced against his hips as he moved on her. Penny found herself fascinating by the way those feet moved, by the clearly audible noises the girl was making. She sounded as if she was enjoying herself. She could hear her moaning, sobbing, whispering. She could hear her breathing hard. Penny could hear herself too, she was making little noises of her own as Eric's mouth continued work at her breast. She could feel the guy behind her as well, his body suddenly hot against her naked back as Eric eased her back a little more. Eric's hand left her breast, moved down to her hip, then high on her leg, stroking her, sliding across her skin.",
        "Penny knew what that hand was moving towards. Again she found herself half-regretting her choice of clothing. The short pleated skirt offered no obstacle to his hand as he stroked her thighs. Despite her initial mental \"No\", Penny said nothing, made no effort to stop him as his hand moved on her thigh. The black hole inside her grew as she made no effort to halt his hand as it slid slowly upwards, teasing her, caressing her, moving between her legs. That black hole inside her expanded as, without a pause, he stroked up her inner thighs, working upwards to brush her panties, to touch her at the juncture of her thighs. \n\nShe found herself glad that she'd worn the panties Terri had given her. In that same moment, Penny realized then that she was going to let him touch her there. She was scared, but wasn't going to say no.\n\n\"Ooohhhhhh.\" Penny shivered and moaned out loud, the combination of his mouth on her breast and his hand caressing her at the most sensitive part of her body sending a new wave of excitement and pleasure rushing through her. Her body felt hot everywhere, sensitive and tinglingly aware of every caress, every touch. She was acutely aware of that heated liquid pleasure centered at that part of her that his fingers brushed. The same pleasure her own fingers gave her but more acute, more exciting. She wanted him to continue and at the same time she was afraid of letting him go on, afraid of what might happen, the fear and the pleasure mingling in an exquisite combination that held her helpless.\n\nAgain she opened her mouth, again she intended to tell Eric to stop. She placed one of her hands on his where he cupped her between her thighs. Her mouth opened to protest, a protest that was cut short as she heard a loud groan. She glanced around and saw what was happening on the bed in front of the small window. One of the guys had been making love with the girl there as the other watched. Penny glanced around just as the two guys changed places, one withdrawing and lifting himself from her, the second moving over the girl and entering her. \n\nPenny moaned herself, her body shivering as she watched the guy's cock position itself and then slide into the girl, who made no protest, who seemed to welcome the second guy. What must that feel like, Penny wondered to herself, to have two guys like that, taking turns making love to you? And to be watched while it happened, for the girl's head had turned towards Penny. Their eyes locked. The girl looked at Penny, her eyes widening, her mouth opening wide as she was entered by the second guy. Penny found herself unable to tear her eyes away, trying to imagine what that felt like.\n\nHer hand felt Eric's moving. She looked down. She looked down to see Eric's mouth latched to one of her breasts while between her legs, Eric's hand was pressed firmly upwards against her panties. His fingers there, separated from her flesh by only the thin black lace, drove her half-crazy. Embarrassingly, Penny could feel her own flooding wetness as his fingers pressed against her. From the way his fingers were pressing against her, she was sure Eric could feel that wetness too. \n\nFuzzy from the unaccustomed alcohol she'd drunk, Penny's nervous system was overloaded with the visual and sensory excitement, excitement that she didn't want to stop. Now, she wasn't even sure how to stop it. She continued watching the three on the bed, the second guy moving on the girl, moving vigorously now, grunting and groaning, the girl making little noises. Again, Penny wondered what it would be like to be her. For a moment, Penny could see herself as the girl on the bed and the thought was terrifying.\n\nTerrifying and strangely exciting. \n\nEric's mouth chose that moment to abandon her breast and return to kissing her, harsher now on hers, more forceful, his tongue probing her mouth, exploring her, tasting her, meeting her tongue and forcing it to do as he desired. As he kissed her, he lifted her and turned her so that her back was now resting firmly up against the back of the couch. Seated as she was, Penny could clearly see the guy next to her and his girlfriend now. She was kneeling on the floor before him, her head bent forwards over his lap, her mouth engulfing his cock as her head slowly bobbed up and down. Her top was open, her bra pushed up, her breasts completely exposed. Penny realized with a shock that that was how she must look, her halter top pushed up and out of the way, her breasts exposed to anyone who cared to look.\n\nThe girl next to her looked.\n\nPenny could see she was smiling around the cock that filled her mouth. That girl could see everything Eric was doing to her, just as Penny could see what she was doing to her boyfriend. Eric's arm slid behind her, held her as his mouth came down on her breast again. Eric's hand under her skirt was equally as firm and possessive as he touched her there. Beside her, the guy's head was turned to look at her, the girl was looking up at her, both smiling. Both looking at her breasts. Both looking at Eric's hand under her skirt.\n\nPenny found herself gasping, breathing hard, almost moaning as Eric's fingers toyed with her, pressed against her panties. Looking at the couple next to her, Penny could see the girl's head slowly bobbing. She could see the guy's cock, so hard and erect, disappearing into the girl's mouth, then emerging, shining with her saliva, right next to her, so close she could have reached out and touched it.\n\nOn the bed, Penny watched a sudden flurry of movement as the girl was repositioned on her hands and knees. Now she was taking two cocks at once, one guy kneeling behind her thrusting himself into her, the other sitting back as she took him into her mouth. Oh my God! Penny's mind whirled. Her turmoil of thought was interrupted as Eric's mouth and hands lifted from her. He urged her off the couch and onto the floor in the gap between the two couches and the bed. Almost before she had time to think about what was happening, Penny found herself lying on her back on what seemed to be a soft rug in the center of the small room, couches to either side, the bed by her head, the door at her feet.\n\nIt didn't seem to matter to much that she was naked from the waist up. Eric was half over her, kissing her, his head blocking Penny's view of the others in the room, his tongue thrusting deep inside her mouth while his hand cupped and lightly squeezed and caressed her breasts before moving downwards to raise the hem of her little skirt, brush the pleated material upwards to her waist, exposing her little black lace panties to his eyes. His hand moved to circle on her taut stomach, kneading her muscles, adding to her heightened anticipation. His hand moved from her stomach to her inner thighs, sliding over her sensitive skin, returning to her panties, bringing a heartfelt moan from her as he once more touched her sensitive flesh through the thin lace.\n\nHe teased her sensitive flesh with his fingertips, tracing the outline of that most intimate part of her, sending little ripples and shivers of exquisite pleasure through her body, bringing a further flood of hot wetness that she knew must be soaking her panties. She could feel the material clinging to her. Her legs seemed to part for his hand of their own accord now, spreading wider, her hips twitching and lifting jerkily with her growing excitement.\n\nEric's mouth left hers, licked her neck, nibbled and sucked, moved down to her shoulder, then to her breast, drawing another moan from her as he sucked on the sensitive nipple again, swollen and hard. Penny welcomed the almost painful pleasure of his lips tugging at it, his mouth engulfing her breast, his tongue swirling across her skin. Arching her back, Penny tried to push more of her small breast into her mouth, her hands holding his head to her chest with a strength and eagerness that surprised her. Eyes looking up, she could see the girl beside her, still kneeling before her boyfriend, taking his cock into her mouth, her head moving. The bed by her head was squeaking in a steady rhythm. Although she could no longer see what was happening up there, she could hear the girl, moaning. Moaning like Terri.\n\nShe could feel Eric's hand roving over her body as she watched the girl beside her. Eric's hand was exploring her thighs, her stomach, always returning to brush her panties, to brush and tease her through her now-wet through panties. Penny could hear herself breathing hard, her body reacting to his touch seemingly of its own accord, her hips lifting from the floor, searching for his hand as his touch lightened, moved away. His mouth moved across her breasts yet again, sucking, licking, nibbling, drawing on her nipples until Penny wanted to do more than moan. \n\nAs if sensing her rising excitement, Eric circled his hand on her flat stomach, but this time continuing downwards. His fingers slid under the small black lace panties, easing his fingers still further down to cup her between her legs. That first touch of his hand on her pussy sent shivers racing through Penny's entire body. One of his fingers probed inwards, pressing between slippery labial lips which parted easily for it, finding her entrance, probing, pushing and then very gently entering her. \n\nPenny's mouth opened wide, her legs spreading themselves further apart seemingly of their own accord. Waves of sensation roiled her body as his fingertip eased its way inside her. His lips abandoned her breast to once more find her mouth, to kiss her again. Now she kissed him back eagerly, moaning softly into his mouth as his finger delicately probed her pussy, his large strong hand moved on her sensitive flesh, his finger probed deeper inwards, each touch one of exquisite pleasure, each touch a new and shockingly intimate experience. \n\nPenny knew that things were going too far. No, they weren't going too far. They'd gone too far but she knew she had already almost lost the ability to say no to him, to stop him. She didn't care. She moaned when his finger withdrew from inside her, a soft moan of disappointment which was replaced by a shocked gasp as his hand unexpectedly eased her little lace panties downwards, off her hips, jerking them all the way down to her knees. The feel of the night air on her exposed skin brought a sudden jolt of trepidation. Her exposure, her near nakedness created a surging excitement within her. \n\nHis hand continued to work her panties downwards. Heedless of any audience, Penny found she had no will to resist, even that she was aiding him, drawing one leg up, freeing her own foot, leaving her panties hanging from one ankle as she turned towards him, eager for his hand to touch her again. His hand did. Penny moaned yet again as his finger renewed its thickly probing entry, sliding inwards until his hand cupped her mound, squeezing her sensitive flesh, his finger a strange yet exciting intrusion deep within her. She moved one hand down to rest on his, feeling the muscles move as his finger explored her, feeling his finger moving inside her, her other hand brushing his hair as he once more suckled at her breasts. It felt good. Really really good. So good that Penny forgot about everyone else in the room, only that she and Eric existed.\n\n\"You're beautiful,\" Eric breathed, looking down at her almost-naked body. She lay before him, on display, every inch of her offered up to his eyes and his touch. Penny was all too aware of her near nakedness, her halter top crumpled around her neck, her skirt a mere belt around her waist, her panties hanging from one ankle. She was on display not only to Eric, anyone else in the room who looked would see her. Penny didn't care as she looked up at Eric. All she cared for was that she was offering herself to him. It was an offering that he took renewed advantage of with his mouth and his hands. After what seemed an eternity of rising excitement, his hand withdrew from her once more. Penny made a disappointed little sound. \n\nEric laughed softly. \"Just wait, don't be so impatient,\" his voice murmured.\n\nIt took Penny a moment to realize that as he spoke, he was stripping off his jeans and underwear, that he was now naked from the waist down. His t-shirt followed. He was completely naked beside her. They were both as good as naked in the center of the small room with half a dozen others around them. Penny had never felt more exposed and embarrassed in her life.\n\nShe'd never felt more excited.\n\nHis hand took hers, guided it to his erect and now blatantly exposed cock. Her fingers touched him there for the first time, grasped him gently, shockingly hot and hard, silk over a thick steely core. She shivered at the feel of him, so solid and so hard under her fingers, so strange, so exciting. And, with all that the feel of his rigid length under her fingers implied, threatening. She knew what he must want and it frightened her. Terrified her. Excited her. He felt so big, so big and hard.\n\n\"That's it Penny, oh yeah, that's it. Stroke it gently,\" Eric whispered. \n\nPenny felt the hard shaft she clasped in her hand throb under her fingers. Instinctively, not really knowing what to do, she began to move her hand slowly up and down on his length, feeling him stir at her touch. \n\n\"That's it, yeah, that's good\" Penny heard him whisper encouragement. \"That's so good, keep doing it like that.\" Tentatively, not quite sure of what she was doing but knowing he was enjoying it, Penny's hand stroked him slowly, gently, uncertainly.\n\nTimidly.\n\n\"You've never done this before, have you?\" His voice was a whisper in her ear. \n\nLooking up at him, her heart pounding wildly, Penny shook her head, an almost imperceptible little shake. \"No, no I haven't,\" she whispered. She had never done anything like this in her life, let alone in a room with other people able to watch her, able to hear her. Her heart pounded as she realized they were being watched. She was being watched, just as she'd watched those others earlier. Now the guy who'd been getting a blowjob next to her was watching her as his girlfriend lay on the couch on her back while he toyed with her, his eyes on Penny. His eyes met hers. He smiled, winked. Penny's heart pounded, embarrassment flushed her cheeks bright red.\n\nBut her hand kept on stroking Eric's length as his finger teased her pussy. Teased her and then gently probed inwards again, bringing a moaning gasp from her lips. That moan, the look on her face, brought a smile to Eric's as she looked back at him. A smile that warmed her heart, that made her melt. Penny melted around his finger.\n\nHis hand renewed its intimate exploration of her body, bringing another little gasp, and then another and another from Penny. Bringing an involuntary spreading wider of her legs for his hand. Bringing that melting heat and wetness where he explored her. She found herself wanting to see what she was holding, to really look at this strange male appendage that was so hard and erected in her hand. Eric seemed to sense her curiosity.\n\nHe half rolled backwards, his arm lifting and turning Penny so that now he lay on his back and she lay on her side, her head resting on his broad shoulder, one of her legs on his. His hand urged her head to move across and onto his chest. Now, in the dim light, she gazed down at the erect cock she timidly clasped in her hand. She'd seen pictures. Like any girl she'd been curious, but this was the first real cock she'd actually seen. The first she'd seen close up. The first she had ever held in her hand. \n\nThe sight riveted her. \n\nAfter a long pause, she resumed stroking him slowly, watching the motion of her hand on his rigid length, feeling the hardness beneath her fingers, the contours, the heat, the velvet soft skin, the swollen head, those raised veins, the way his skin moved as her fingers gently stroked him. Penny raised herself a little, the better to see him, to see his full length, to see every inch of him. Her heart seemed to swell in her chest, after choking her as she looked at the sheer size of him. So long and thick. So hard. Her fingers couldn't even circle him completely when she held him. Below his shaft she saw his testicles, large and rounded, fascinating to look at. \n\nEric brushed his fingers through her hair as she stroked him. He seemed to be enjoying her shy hesitancy, savoring and enjoying the anticipated pleasure to come, drawing it out for as long as possible. His hand pressed lightly against the back of her head, urging her head downwards towards his cock. Penny's heart pounded wildly as she suddenly realized what he was looking for from her. Now it didn't seem quite as shocking as it had earlier in the evening. But still, she wasn't quite sure what to do. Her eyes moved to look the girl beside her, kneeling above her boyfriend, once more hard at work, her mouth engulfing the guy's cock. She watched for a long moment, watched her head bobbing, her lips moving, sliding on the guy's shaft. It didn't look so hard to do.\n\nIt was just, she'd never done it before.\n\nEric seemed to sense the cause of her hesitancy. His hand ceased to stroke her hair, instead easing her head around to look at him. A light kiss to her lips, another caress as she half lay on him, her naked breasts pressing against his chest. \n\n\"You've never done this before either have you?\" His whisper was barely audible.\n\n\"No.\" Penny gave her head a little shake.\n\n\"Just open your mouth wide and let it in, then use your lips on the shaft and lick it with your tongue.\" He grinned. \"When you get used to that, start moving your mouth on it and suck on it at the same time. Kind of like a big lollipop.\"\n\n\"Uh-huh.\" That sounded dumb.\n\n\"You ready to give it a try now.\"\n\n\"Ummmm ... Okay.\" Penny's hesitant whisper. \"Ummm...\"\n\nStill slowly stroking Eric's cock with one hand, Penny inched her head downwards towards it, until she was stroking him right in front of her face. Still hesitant, she inched a little closer, delicately touching the tip of Eric's cock with her lips, her tongue flickering out to lap him lightly. She tasted him with her tongue, a flickering touch with just the top before she drew her head back, licking her lips. To her surprise, his cock tasted just like the rest of him, maybe a little more salty. Greatly daring now, she moved her head forward and this time, as she lightly kissed the tip of his cock, her tongue flickered out and slid around him.\n\n\"That's it Penny.\" Eric encouraged her.\n\nHeart beating hard, Penny touched the tip of Eric's cock with her lips, before rather shakily opening her mouth wide and taking the head of his cock very carefully into her mouth. The head brushed between her lips, slid into her mouth easily. She felt him resting on her tongue, inside her mouth. Her lips closed on his shaft, her tongue slid around him, licking him as she lowered her head a little without thinking. He was slightly salty, a little bitter and tangy. She found to her surprise she liked the taste of him.\n\n\"Jesus Penny, that's it,\" Eric groaned. \"Oh fuck that's good.\"\n\nPenny realized he wasn't whispering anymore. She found she didn't really care. His hand pushed lightly at the back of her head, urging her mouth downwards on him.\n\n\"Jesus Penny, that's it, oh yeah, yeah, suck on it,\" Eric groaned.\n\nPenny was enjoying his excitement now, enjoying his ready response to what she was doing to him, happy her inexperience wasn't showing. It was, but to Eric, Penny's inexperience was as exciting as everything else about her. He strained upwards as his hands held her head, jerkily moving his cock in her mouth, sliding in and out between her lips. Penny stayed still, let him move, her tongue sliding across his shaft, sucking lightly on him, tasting the saltiness of him as his cockhead moved across her tongue, moved inside her mouth.\n\nHer hand held him, guiding him to her mouth. As he relaxed downwards, she remembered the actions of the girl next to her on the couch, her head bobbing up and down. She began an imitative motion, sliding her head forward and back, her tongue sliding and licking his shaft at the same time. After a short period of familiarization on Penny's part, the two of them adopted a slow and steady rhythm. Eric's hips lifted and fell, his cock sliding gently in and out of Penny's mouth, his hands holding and guiding her head. For her part, Penny let his cock slide in, then, after he slid back, she would bob her head downwards and then back again, her lips sucking on his shaft as her tongue slid around the swollen head, exploring the shape of him. ",
        "She was enjoying his excitement, the little groans and exclamations, the urgency of his hand on her head, guiding her and pushing her where he wanted. Her own excitement slowly grew. In her inexperience, Penny wondered if he would finish in her mouth or pull it out, that was what some of the girls talked about. It was what Terri had talked about. She'd always wrinkled her nose at those girls, but now she was finding it was actually quite enjoyable. She almost giggled as her head bobbed up and down. She wondered what it would taste like. Almost, she was looking forward to it. \n\nTo her surprise, after what seemed a long time, but was in fact only a couple of minutes, Penny felt her head being pulled back up. Eric eased her over onto her back without a word, kissing her, their tongues meeting and sliding against each others, his naked body pressing hotly against hers. She could feel his hard cock pressing against her leg, his massive chest pressing against her small breast, his hand between her legs again, his finger sliding inside her with slippery ease. Penny wondered if he could taste himself on her tongue and then she stopped thinking about that as he rolled over her, his knees sliding between her legs, pushing her legs wide apart, his chest pressing against her breasts, his erect shaft bouncing on her stomach and then brushing against her inner thighs. Penny gasped in sudden shock.\n\nLooking up at his face above hers, feeling his body on hers, between her now widespread legs, it dawned on Penny with startling abruptness that Eric had no intent to finish in her mouth, that his intentions were far more invasive than that. Even as he continued to kiss her, she felt the swollen head of his cock pushing against her, brushing against her thighs. His finger inside her withdrew, his hand moved down, guided one leg further apart, urged her knee back, her other leg following instinctively. Penny's heart fluttered like a birds as she realized she was in the same open and exposed position as the girls she had watched on the bed and the couch opposite only a little while earlier. \n\nThere was another of those heart-stopping moments as she realized what was about to happen, what would happen if she didn't stop him. If she didn't say no.\n\n\"I want you.\" Eric's breath whispered in her ear.\n\nPenny didn't say no. She didn't say yes either. Her heart pounding like a drum, she looked up at him and she waited. She waited for him to take her.\n\nEric's face smiled down at her. One of his hands brushed her hair back from her forehead. His lips touched hers. They kissed. She felt his cock brush against her, touch her, push lightly, bringing a gasp from her.\n\n\"I want you Penny,\" Eric breathed again. \n\nShe realized he was waiting. Waiting for an answer from her. An answer she still wasn't sure of, that she couldn't bring herself to give. She knew what she wanted, but she was afraid. Afraid? She was terrified. Eric moved a little, she felt him pushing against her, the head of his cock slipping inwards a little, sliding between her labial lips, pushing against her entrance. Her eyes widened at the pressure, at the feel of him there, spreading her lips, pushing thickly against her. Penny knew things had gone too far, she'd never intended this to happen, but now she couldn't find the willpower to tell him to stop, to push him away from her. He moved again and it felt so good. So very good. Such exquisite pleasure to surrender herself to him. She looked up into those beautiful eyes.\n\n\"Yes,\" she whispered, faintly, almost inaudibly. Irrevocably.\n\n\"Hhhuuuuhhhh.\" She gasped as he pushed, as she felt herself stretch. She felt her labial lips spread wide around his girth, parting for him, clasping him in a slippery caress. The swollen head of him pushed through her entrance, then paused inside her. Eric's mouth lifted from hers. She saw his face, his eyes looking down into hers. He groaned quietly, a wordless noise of sheer pleasure. Her hands rested on his waist. Now she made her own wordless little noises, excited little gasps as her body absorbed the feeling of him partially inside her. One of his hand's moved to stroke her forehead, brushing her hair back where it had fallen forward again. He smiled down at her tenderly.\n\n\"Okay?\" he asked.\n\nPenny fuzzily considered the question. Was she okay? It depended on the context. She knew she was being ridiculous. Of course it wasn't okay, she shouldn't be doing this at all. Not here. Not in the middle of the room, on the floor, with an audience.\n\n\"Don't stop,\" Penny whispered up at him. \n\nHe smiled. His finger, the finger that had been inside her, stroked her lips wetly. She opened her mouth a little, his finger slid inwards, she tasted herself as she sucked on his digit. He smiled again, removed his finger and kissed her gently, simultaneously beginning a slow gentle movement within her. Penny could feel him moving. She could feel his cock pushing inwards, feel herself stretched around his thickness, each gentle thrust moving just a little further within her body, each gentle thrust stretching her vaginal channel around his invading length.\n\n\"Ooohhhhh... uughhhh ... ooohhhh ... uuughhhh.\" She could hear her own voice as he moved. He felt so big inside her, so huge and hard, pushing up inside her. She could feel him, feel herself stretching as he worked himself deeper into her. He was so big everywhere, so big over her, his body dwarfing hers. She felt tiny beneath him, tiny and helpless. She pictured the hard length she'd held in her hand. It was hard to believe that it was now partially inside her but it was, she could feel it, a thick intrusion driving inwards at the juncture of her widespread thighs. How would it all fit, he was so big. So thick. So long. Penny whimpered in sudden distress.\n\nEric paused, kissing her gently, hand stroking her, soothing her. \"It's alright Penny,\" he breathed in her ear, \"it's alright, just relax.\"\n\nAs he soothed her, Penny relaxed, her distress slowly fading. Eric kissed her gently, his hand caressing her, soothing her, calming her, his eyes holding hers almost hypnotically. Now he smiled down at her, brushing her hair back from her forehead, kissing her gently, his lips tender on hers. Mid-kiss he began moving again, slowly, gently, easing himself in and out, luxuriating in the slippery tight clasp of her vaginal channel around his cock.\n\nPenny gasped as he began moving again. Her hands still rested lightly on his waist, she could feel his muscles tense and relax as he moved, she could feel his body moving on her, she could feel him inside her, moving, penetrating. The weight of his body on hers was strange and exciting, his chest crushing down on her breasts, their bodies pressed tightly together, intimately entwined and joined, her legs spread wide apart and drawn back, her thighs cradling him as his shaft entered her. Oblivious to everything but what he was doing to her, Penny moaned softly with each gentle thrust within her body. She could feel him inside her, feel the rigid shaft within her, entering her. A slow burning heat spread through her body, every nerve sensitive, her skin tinglingly aware of his every touch.\n\nWith every movement, his cock penetrated more deeply within her body. Beneath him, Penny gasped, eyes suddenly wide as he took her hands, positioned them on the rug beside her head, then held them in his, pinning them down as he rested his weight on his forearms. He kissed her, his mouth locking itself against hers, and as he kissed her he moved inside her, thrusting inwards against her tightness. Penny jerked beneath him as he worked his cock into her, but she was helpless under Eric's weight, her hands pinned down by his. He thrust again, harder, deeper. Beneath him Penny arched her back and mewled into his mouth, beads of sweat appearing on her forehead. Eric drew back and thrust again, harder, continuing to thrust, wanting nothing more than to bury his cock in her. Beneath him Penny surrendered herself willingly, eagerly, feeling him thrusting up inside her, opening her, stretching her, sliding deeper and deeper inside her with every movement. \n\nEric's mouth was still locked to hers, his tongue deep inside Penny's mouth as his cock worked its way inexorably deeper within her no-longer virginal channel. Abover her, Eric luxuriated in the feel of her almost naked body beneath him. He enjoyed her repeated little groans, the plaintiveness of them, the wild-eyed surprise and shock and excitement on her face, the way her body arched upwards beneath him as he fully penetrated her. He wanted nothing more than to fuck Penny hard. It took him real willpower not to. \n\nHe found himself groaning with his need as he restrained himself, thrusting gently, slow tender strokes that went on and on until he could feel his length completely buried in her tight little channel, his pelvis pressed firmly against her delicate little mound. He thrust again, hard, forcing himself in just that fraction more and as he thrust, beneath him Penny gasped, her surrender complete, the sensation of being stretched and completely filled consuming her. Eric stayed there, reveling in the feel of her slick little channel clasping his shaft, the tight hot slippery feel of her, the feel of her slim taut body and her firm little breasts, her slender thighs cradling him, the strained look on her face as she looked up at him through glazed eyes. \n\nBeneath Eric, Penny felt each of Eric's thrusts driving his shaft deeper and deeper insider her until at last he paused, all of him inside her at last. Little shivers ran through her body as she looked up at him in helpless surrender. \"So big,\" she gasped. \"It feels so big inside me... I can feel it all the way up in me.\" And she could, huge and thick and hard, impaling her. Filling her. Stuffing her full. She reveled in that feeling, half closing her eyes the better to concentrate on feeling him inside her.\n\nEric smiled and kissed her lips lightly. \"I can feel you Penny, you're gorgeous.\" He kissed her again. \"Are you okay?\"\n\n\"I'm okay,\" Penny gasped. \"Don't stop.\"\n\nShe wanted to feel him moving inside her again, it didn't hurt at all, it just felt strange. Her mind was in turmoil. Regret. Excitement. A little shame at what she was doing, the desire to continue, to experience this in full. The burning heat of her body demanding more, the feel of him within her, his thick penetration of her at the juncture of their bodies, solid and hard, piercing her. \n\n\"Oooohhhhh.\" Her moan was a soft moan of surrender and of excitement and of desire.\n\nEric ground himself against her mound, the look on his face telling Penny that he was enjoying her soft moans, enjoying the expressions that played across her face, the way her hands clutched at his and then tried to pull away, the little starts and quivers of her body beneath his. He began to move inside her, a gentle in and out stroke that drove her half crazy as he moved. Penny closed her eyes as he began a slow and steady movement inside her, oblivious to anything but the feel of his body on hers and the sliding movements of his shaft inside her body. \n\nShe could feel herself adapting to his penetration, her body accustoming itself to this new use, his movements inside her stretching her, while for Eric each thrust was a tight slippery sliding rush of pleasure. Penny's body burned, her swollen clitoris demanded more, she found herself increasingly eager for each of his thrusts inside her, welcoming them, drawing her knees back as far as she could to open herself even more to him. He took full advantage of her eagerness, moving harder now, faster, his movements less restrained. Penny could sense his growing urgency, she welcomed it, enjoyed it, just as she enjoyed the excitement and desire displayed on his face as he looked down at her. \n\nShe could hear the sounds coming from their bodies, a steady slapping of flesh against flesh as he thrust vigorously into her, the wet sounds of their joining, her own soft moans of pleasure as Eric took her. She remembered the girl on the bed, some of the words she'd said, how they'd shocked and excited her then. Now she understood. She looked up at Eric's face, found herself wanting to excite him and satisfy him. The words formed in her mind. She found it hard to say them, words she'd never thought would come from her mouth. In the end, Penny's excitement overruled her upbringing.\n\n\"Fuck me,\" she breathed, almost inaudibly, watching the excitement on his face as he heard her. She let the words whisper from her lips again. \"Fuck me hard.\"\n\nPenny forgot everything as Eric responded to her whispered words, as he began to move faster inside her. Faster, harder, his body moving urgently on hers in a new and demanding rhythm. A rhythm that was almost, but not quite, painful. Hard demanding thrusts that penetrated deeply within her body, thrusts of that hard male shaft that filled her again and again. His body pounding against the cradle of her slender thighs, his breathing hard and fast, his face above her taking on a strained look of desire, of need, of lust. \n\nPenny's excitement grew. The burning heat within her demanded more, wanted more, wanted him. Heedless of the others in the small room, she could hear herself, hear her voice, wordless groans intermingled with obscenities and encouragement to him.\n\n\"Ughhh ... Hhuunngghh ... Fuck me ...huughhh ... huuggg ... like that ... Fuck me like that ... Hard ... Fuck me hard ... Yes yes yes...Nnnughhh ... use my cunt ... \"\n\nIn the back of her mind, she found it hard to believe that she, Penny Cheng, was the girl doing these things, making these noises, uttering these words. But it was, and even those stray thoughts disappeared as she felt a need building up inside her, a slowly surging need that demanded release. Her awareness narrowed down even further, focusing in on the steady thrusting at her centre, the rhythm of his body inside hers, his cock sinking itself to the hilt inside her again and again, the pulsing slippery clasp of her channel around his shaft.\n\nSomehow, he slid a hand between their joined bodies, his fingers finding the swollen nubbin of her clitoris just above the point at which their bodies joined. His fingers circled, rubbed, bringing a sudden wave of pleasure that was exactly what she needed. Eric's thrusts shortened, became more powerful, his fingers circled and rubbed. Penny found herself moving beneath him, her legs suddenly splayed wide, feet flat on the floor, her back arching with her need, lifting his weight with her slender body, groaning and then crying out as the pressure within her built and built to a cresting wave that suddenly broke and washed through her body. \n\nWashing through her in a golden wave of pleasure, every muscle in her body clenched tight, the world turning black, the golden heat rippling outwards and consuming her, filling her to overflowing. Penny cried out again and again as Eric rode her through a paroxysm of pleasure. He rode her arched body back down onto the rug, pounding himself into her, all restraint now cast aside as he moved irresistibly towards his own culmination. She felt herself spasm around his cock as he plunged into her, felt him thrust deep into her again and again, his cock driving deep inside her. She could feel his need, his urgency, as he thrust and thrust and thrust again. She could sense that he was on the verge, that he was losing control, holding his culmination back by sheer willpower. \n\nAnd Penny wanted his culmination, she wanted to satisfy him, to feel him finish, to give him the pleasure he had given her, to give herself to him. \n\nHe slammed her slender body into the rug again and again and then, at last, his need was overpowering, irresistible, irreversible. The sounds of his body slapping hard against hers, the wet sounds her body made as he thrust into her, their panting breaths, Penny's sobs and moans, all echoed though the confines of the small room. One of his hands abandoned hers, found her hips, slid beneath her, lifted and held her for his pleasure as he looked for every last fraction of sensation. Penny groaned in the aftermath of her own pleasure, aware of what he was doing to her, helpless in his hands as he drove into her one last time. \n\nBeneath his weight, cradling him between her widespread thighs, Penny felt his body tense against hers. He thrust, he held himself high inside her. She felt his cock throbbing, throbbing and then exploding within her, his cock pulsing as his semen spurted out, boiling down his length, flooding her channel, she felt for the first time those explosive spurts as he emptied himself into her. Juddering beneath him, she felt the urgency and the passionate culmination wracking his body as he finished inside her. She felt every one of those jetting eruptions deep within her, welcoming them, welcoming his satisfaction.\n\n\"Hhhhnnnuggghhhhh ... nnuughhh ... Nuugghhh ... nnuuughhhh.\" Her own gasps accompanied each of those jetting eruptions within her body as his climax seemed to go on and on forever. \n\nThen she was sobbing for breath as Eric's movements ceased, suddenly and shockingly conscious of being almost naked on the floor of the small bedroom, of having been taken in full view of everyone else in the room. Pinned beneath Eric, his hands again pinning hers to the floor above her head, his weight heavy on her, her knees clasping his ribs, slippery with their intermingled sweat, there was nothing she could do other than lie there, feeling him on her, feeling him inside her, his cock slowly softening within the clasp of her channel. He stirred on her, his weight easing a little, his head lifting.\n\nHis breathing was harsh in her ear, harsh and heavy, slowing. His head lifted, his eyes looked down into hers. With a quick smile, he kissed her gently. His hands released hers, one arm sliding under her neck, the other brushing her sweat-soaked hair back from her forehead. This time when he kissed her she opened her mouth to him, kissing him back, passionately, her hands resting on those gorgeous arm muscles, feeling them flex as he supported his weight. She loved that weight, loved feeling him on her, his naked body pressing down on hers, those solidly muscular thighs spreading her wide.\n\nWhen his mouth lifted from hers, she opened her eyes to see half a dozen flushed and excited faces watching them from the couches and the bed. Penny groaned in exquisite embarrassment, her body still pinned helplessly beneath Eric's. Adding to her sudden shame, the door at her feet opened, hallway light illuminating her and Eric's intertwined bodies for what seemed an eternity but was probably only a few seconds. \n\n\"That's just disgusting.\" She heard the voice as the door started to close again. \"I don't understand. How can some girls just do it like that where anyone can see them.\"\n\nFlushing, Penny knew they were talking about her. She hoped no-one recognized her. Not that anyone here except Terri and Mike would. She hoped. She could feel Eric inside her, feel his cock slowly softening. It dawned on Penny with an irrevocable finality that she was no longer a virgin. There was a moment of dread while she worried that he'd discard her now that he'd done what he wanted to her. Penny didn't want to be a one-night stand.\n\nPenny didn't want to be a one-hour quickie at a party either.\n\n\"Sorry, what was that?\" Eric had been saying something to her. She'd missed it. \n\nHe repeated himself, quietly, in her ear. \"Want to skip this party?\"\n\nHe heart did a little dance. He wasn't going to walk away and leave her. \"Yes please, can we?\"\n\nHis lips brushed hers. He moved on her so that she gasped, her eyes widening. \"Your place or mine?\"\n\nPenny smiled, her heart doing a little dance. \"My place.\"\n\nShe never did find her panties. They'd come off her ankle and disappeared in the darkness. She didn't worry about them. Terri wouldn't want them back after all. The wet flood down her thighs when she finally stood up was embarrassing though. In the elevator of their shared apartment building she stood close to Eric, as close as she could, her hand in his. She couldn't take her eyes of him. Her guy. She would have kissed him if it hadn't been for the others they shared the space with. But they all got out on other floors, floors before hers. Then she did what she'd wanted to do. She tuned to him, slipped her arms around his neck, stood on her tiptoes and kissed him.",
        "\"I'm so happy you were there tonight.\"\n\n\"Me too.\" He did, he looked as happy as she felt.\n\nShe only let go of him when the elevator door opened. She clasped his hand tightly as they walked to her apartment entrance, almost afraid to let him go even to unlock the door. But he was still standing there, right behind her as she opened it. He followed her inside. Penny's heart pounded again. She'd never even considered doing this before.\n\n\"My bedroom's this one.\" She led him in, closing the door behind them, glad she always kept her room tidy. She didn't even question that she was taking him into her bedroom. She knew exactly what she wanted as he undressed her. Not that there was much to remove. Soon, very soon, Penny was getting exactly what she wanted. Again and again. At last, exhausted, elated, satisfied, secure in Eric's arms, Penny drifted off to sleep. Eric woke her early in the morning with a kiss and a murmured apology.\n\n\"I've got to go to work Penny.\" He was holding her, rubbing her back. Penny purred, nestling into his arms, breathing in the scent of him. Her eyes opened as she felt him hard against her stomach. Her hand slid down, slid between them, found him, held him. His hardness in her hand was having an immediate effect. On her.\n\n\"Have we got time before you need to go?\" God, she was being so open about what she wanted. And she wasn't even embarrassed about it. Her hand stroked him.\n\nHe smiled, warming her. Melting her. \"Yes, as long as you don't mind hard and fast.\"\n\nPenny didn't mind at all. It was hard and fast and it was very very good. As far as Penny was concerned, it wasn't for nearly long enough - but it was long enough for Penny to be convinced that the previous evening hadn't been a mistake. Long enough to realize after she'd wailed her way through an overwhelmingly wonderful orgasm that Terri might have had a point. You couldn't keep good sex down.\n\n\"What time do you finish work?\" She lay in bed watching him dress. Desperately wanting to see him again.\n\n\"Ten tonight, would you like me to come round after I get off? It's a bit late.\"\n\n\"Yes please, would you like to stay the night again?\" She didn't believe she could be so forthright, asking him to sleep with her. On a Sunday night.\n\nHe smiled, knelt beside the bed, kissed her slowly. \"There's nothing I'd like more. You're mine now Penny Cheng.\"\n\nHer heart did that amazing little flutter. \"Am I? Really?\"\n\nEric kissed her again, gently, lengthily, pushing her duvet down, exposing her all the way down to her knees, running his hands over her naked body. Penny had never thought it possible to so enjoy being naked in front of a guy. But it was. She was. She was reveling in his hand caressing her, reveling in his eyes running over her, almost as if he were drinking her in. \n\n\"Do you want to be?\"\n\nShe didn't even need to think about that. \"Yes.\"\n\n\"Then you're my girlfriend, Penny Cheng.\"\n\n\"Does that mean you're my boyfriend, Eric who's never told me his last name.\"\n\n\"MacDonald. And yes, that means I'm your new boyfriend, Penny Cheng.\"\n\nThey kissed again. Penny could tell he was getting excited.\n\n\"You better get going, you don't want to be late.\"\n\n\"Okay girlfriend, see you tonight.\"\n\n\"See you tonight boyfriend.\" They both laughed. Penny felt happier than she'd ever felt in her life. Eric slipped off the bed, stood up, looking down at her. Penny stretched theatrically, enjoying the dilemma that played across his face. He wanted her. Again.\n\n\"Tonight greedy,\" she said, slipping off her bed and standing herself. \"As many times as you want.\" She wiggled her butt as she led him to the door. After the door closed behind him, she went back to her bed. The bed that Eric had just finished fucking her in. She wriggled happily as she pulled the duvet up, one hand cupping herself, feeling his cum wet on her, reveling in it. Eric! Eric! Eric! Her heart sang as she repeated his name. How could she possibly wait until late tonight when he finished work. She wanted him again and again and again. Last night and this morning had been just wonderful. She was so happy she'd gone to that party with Terri and Mike. Although it was still hard to believe she'd done what she'd done. \n\nHer. Penny. Doing it on the floor with a guy at the party. And in front of those other three on the bed as well as those other two couples. Her cheeks burned with recollected embarrassment and excitement as she remembered them watching her, seeing their eyes on her as Eric made love to her. Oh! My! God! How could she have done that? But she had, and she'd brought Eric back to her bed and they'd done it again.\n\nAnd she didn't regret a moment of it. \n\nNot even doing it on the floor at the party where anyone could see them.\n\nTo Penny's heartfelt relief, Terri and her boyfriend hadn't come back. They must have stayed at Mike's after the party. That evening, Penny arrived home late. The visit to the pharmacy and then an afternoon and evening of study in the library had made sure of that. A quick bowl of noodles satisfied her craving for food. Only Eric would satisfy that other craving that her body now felt. \n\nShe kept looking at the time. It was so quiet in Terri's bedroom. Maybe she'd gone out again. She didn't intend to knock on her door and ask. Only when she was cleaning up the kitchen did she see the note on the fridge door. \"Got a test at nine tomorrow morning, going to bed early... Terri.\"\n\nPenny shrugged. Like she was going to make a noise and disturb Terri. She thought about Eric coming around after he got off work and giggled. The kitchen spotless, Penny was about to curl up on the couch to read while she waited when she heard a gentle tapping at the front door. It was already just after ten. Penny found herself smiling as she opened the door. And it was. It was really him.\n\n\"Eric.\" Penny's heart jumped with happiness. \n\n\"Hi babe.\" His arms swept her into his embrace, an embrace she welcomed as she found herself pressed up against the warmth and security and strength of his body. \"Love you.\"\n\n\"Love you.\" Penny smiled as she stood on her tip toes and kissed him. She clung to him for a long long moment before taking his hand and leading him across the apartment, leading him into her bedroom, shutting the door behind them. Looking at him, at the longing and the happiness and the desire written across his face, she could see no words were necessary. \n\n\"I'm so totally in love with you, Penny Cheng,\" Eric breathed. His hands began to peel her clothes from her. \"I couldn't think of anything but you all day.\"\n\n\"Me too.\" One touch and Penny knew that the craving she had felt ever since he'd left this morning was about to be satisfied. \"Now bed me, okay.\"\n\nLooking up at Eric's face as he slipped into the bed beside her, his hand placing hers on his steel-hard cock just before he began to eagerly remove her panties, Penny smiled. Already his gentle movements were making her bed creak and groan. It creaked and groaned rather more noisily as her hand urged him over her, urged him between the legs that she enthusiastically spread wide for him. Moaning softly, she drew her legs back for Eric to mount and enter her. As she guided him to her, her body eager to welcome him within her, her bed continued to squeak and groan as he positioned himself to enter her, to take her, to give her what she craved.\n\n\"Nnnnuugggghhhhhhh.\" She too groaned as Eric's cock filled her, an exquisitely long slow slide that sent pleasure rippling through her body. Penny arched herself beneath him, her feet kicking high towards the ceiling, her hands clutching at those gorgeously muscles arms as he buried himself to the hilt inside her. Eric groaned out loud as her slippery tightness engulfed and clasped his cock. Her mattress squeaked. The head of the bed thumped loudly against the wall that separated her bedroom from Terri's. Penny smiled happily. She threw her head back and moaned as loudly as she possibly could.\n\n\"Harder Eric ... fuck me harder ... Ooohhhhh yes yes yes...\"\n\nEric did. Immediately. Penny's bed creaked and groaned and thumped against the wall, hard. Eric's plunging thrusts and the weight of his body drove Penny down hard against the mattress. Again and again.\n\n\"Uuuugggghhhhh ... nnnuuuggghhh ... hhhhuungghhh ...\" \n\nThe banging on the wall separating her bedroom from Terri's was immediately followed by a muffled wail that wasn't Penny's. \"Keep it down can't you ...\"\n\nPenny half-giggled, half-groaned. Keep it down? No way. She intended to do her very very best to keep it up. To keep Eric up. Up and hard and doing what he was doing so well. She hoped it was going to be a long night. She was going to do her best to make sure it was. She crossed her ankles behind the small of Eric's back, experimenting, squeezing herself tight on him as he eased himself back. Enjoying his loud groan of pure enjoyment. \n\n\"OH FUCK YEAH PENNY ... FUCK THAT'S GOOD.\"\n\n\"HARDER ERIC ... DO ME HARDER ... OH YES OH YES OOOHHH YEEEEESSSSS...\"\n\n\"OH FUCK YEAH BABY, NOW I'M GONNA FUCK YOU HARD!\"\n\n\"YES ... YES ... OH GOD YES! ... HARDER ... HAAAARDER\"\n\nTerri had been right all along. You couldn't keep good sex down.\n\nAnd sometimes harder was best.\n\n<p align=\"center\"> \"And then I'm gonna love you completely\nAnd then I'll fucking fuck you discreetly\nAnd then I'll fucking bone you completely\nBut then I'm gonna fuck you hard\nHard\"</p>\n\n Fuck Her Gently, Tenacious D"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "virgin",
        "first time",
        "chloe tzang"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/sometimes-harder-is-best"
}