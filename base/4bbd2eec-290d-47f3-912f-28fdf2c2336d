{
    "title": "Aztec Treasure Ch. 41-50",
    "pages": [
        "Frank Grimes' POV\n\nLeesburg Executive Airport\n\nMaria was right. I don't know why I didn't see it before now! Kidnapping wasn't a Sons of Tezcatlipoca move unless it was a prelude to torture. This whole production at the airport didn't make any sense.\n\n\"Frank?\"\n\n\"She's right. Killing the First Husband before the President fits the pattern, but you don't. Unless...\"\n\n\"Julio's not here because he's at ARROWHEAD! Son of a BITCH! He's going after my family!\"\n\nI turned to the Command Post's senior agents; they represented the FBI, Homeland Security, and the Secret Service. \"Have we seen any evidence of Julio coming here? Chase thinks this is all a diversion, and they are going after his family.\"\n\n\"Not a thing,\" the FBI SAIC said. \"No ground or air traffic at all.\"\n\n\"If he wanted a diversion, it worked. We have everything focused on Washington DC and the surrounding area. The real question is, what is the diversion for?\" The Secret Service Senior Agent opened up his cellphone and made a call. \"Is Valkyrie secure? We're starting to think this is all a diversion.\" He listened for a second, then hung up. \"President Kettering is in the Situation Room with the Acting President. She's safe.\"\n\n\"We have to start considering that Julio never intended to deliver Andrew to us.\" I explained quickly how the Sons handled those who crossed them.\n\nI sent a text message to our family group, warning them that Julio could be anywhere since he wasn't here. The Donner and Cascade Packs were too far to drive to in this amount of time, but if Julio got access to a plane? Anything was possible then. All of Colletta's children took this threat seriously, and five minutes later, I had confirmation their Packs were locked down, and they showed no active threats.\n\nIt was now ten minutes after eight. \"How long are we going to keep them out there? If Chase's Pack is in danger, he's not going to stay around.\"\n\n\"It's only ten minutes,\" the FBI senior agent told me. \"What if Julio is running late? We can't leave until we know for sure if he's coming or not.\"\n\n\"Dammit.\" I linked with Chase to let him know, and he reluctantly agreed. He'd calmed down a little since talking to Vic at Arrowhead, knowing his family was in the safe room, and the Pack was not under attack. He didn't want to wait forever, though. \"Chase, do you want to leave Maria and Maritza with me here? I can make sure they are protected.\"\n\n\"No. Maria says her home is at Arrowhead now, and she wants to go home. Hell, she never wanted to be here. She's here because she doesn't want the First Husband to die.\"\n\nI called his pilots and told them to be ready to return to Two Harbors as soon as Chase was released.\n\n\"Oh, my GOD,\" one of the agents said as she looked at the television. Live from outside the Arrowhead Pack, the cameras showed Andrew Kettering sitting on the back bumper of a news van! I linked the news to Chase as I stared at the screen. The rest of the command post was in an uproar as they realized nothing was happening here.\n\nI listened over the link as Chase got updates from back home. I wasn't shocked when we heard the blood on Andrew's shoulder was a jaguar bite. It fit the pattern; he would die in agony, and the President would watch it helplessly. Chase got in an FBI vehicle with the girls, heading back to his plane. Nothing was keeping him here now that Andrew was free.\n\nVic was sending people out to bring Andrew to our clinic, and Oxbow was bringing Doctor Olson over immediately. \"Chase, a whole bunch of people are going to want in there to be with Andrew, including President Kettering. It's the perfect chance for Julio to sneak in or take advantage.\"\n\n\"I know. Vic is going to make sure we get a good sniff of anyone coming in. Julio can't hide his scent.\"\n\n\"I'll stay here and coordinate the response. It would help if you brought a few Secret Service agents on the plane with you. The FBI will protect him until they arrive.\"\n\nIt was a tough ask; it meant leaving warriors from the Oxbow Lakes and Arrowhead Packs behind when his family is under threat. \"I'll take three with me. Tell these guys to unload the cash and send three of my people with whoever else they want to send on the Air Force jet. I'm getting the hell home.\"\n\n\"I'll pass that on.\" I pulled the Secret Service supervisory agent aside. \"Chase's plane is leaving in less than five minutes. He will take three agents, or you can wait until the Air Force gets the money off and gets their plane in the air.\"\n\n\"The President wants her husband airlifted to Bethesda,\" he told me.\n\n\"Not a good idea. No human doctor knows what is going on with that bite. The world experts are at Arrowhead, and that's his best chance of survival. I know Colletta is at the White House; she can explain it to them.\"\n\nHe quickly finished his call to the White House agents, then hung up. \"I'll take your plane,\" he said. He ran out of the command post, waving two agents to him as they ran for Chase's aircraft. A new Secret Service agent entered the command post and took over. The FBI escorted the armored car as the pilots pulled the money bags out and left them on the tarmac. Secret Service agents and three Oxbow Lake warriors headed that way as Chase's plane taxied to the runway.\n\nThe Air Force passenger jet took off five minutes later. I remained at the Command Post for another two hours, working with Pack Alphas to arrange the return of their warriors and trackers. The Duluth FBI branch office sent four agents to Arrowhead, and dozens more were flying in from Minneapolis and Chicago.\n\nI spent time on the phone with Arrowhead, explaining the takeover that was about to happen. \"Vic, Air Force One is taking off for Duluth right now with President Kettering aboard. The Secret Service is freaking out because they have no advance team, and Chase refused to turn over control of Pack lands to them.\"\n\n\"I bet that went over well,\" he replied.\n\n\"I worked out some compromises,\" I said. \"We won't turn over our security center, but we will allow the Secret Service and FBI to work with us in the room so they can monitor the cameras with us. We won't evacuate our people, but they can cordon off the area around the Clinic. We will let their agents use our fighting positions, but our people will remain armed beside them. They can handle the roads and guard the borders on the public side, using National Guard troops if necessary, and they can establish a no-fly zone overhead. Finally, we will restrict our people to their homes or the Pack House unless escorted by the FBI or Secret Service.\"\n\nVic paused a moment as he waited for Rori to respond. \"Alpha says she can live with that, Frank. We'll be as accommodating as we can while keeping our people safe. It won't last more than a day or two, and if we don't, the Secret Service will insist on moving him. Right now, I've got an FBI agent in the control center with me. The other two are at the Clinic, along with five members of the Sheriff's Department and one DEA agent. Andrew is giving his statement now.\"\n\n\"Let them focus on the Pack Clinic while you keep our people safe. It's going to be a zoo, but Chase will be there in a couple hours.\"\n\n\"That will help.\"\n\n\"How is Andrew doing?\"\n\nVic paused. \"Doc is here now suturing the wounds. He was dehydrated and hungry, but he already has a fever. Doc figures the bite happened about eight hours ago. Andrew confirmed he got bit before getting his last tranquilizer shot, and Doc said each injection would last six to eight hours. He thinks he was awake the last two hours of the trip but can's say for sure.\"\n\nShit. With a werewolf bite, most humans lasted about twenty-four hours. We'd lost a third of that already. \"Can we use Maria's blood?\" I'd made the turn after my throat was slit, and it was multiple bags of werewolf blood and the love of my Colletta that pulled me through the change.\n\n\"Andrew's blood type is A-positive, but Maria's is B-positive. They aren't compatible, so Doc won't even try. Even if they were compatible, one pint of Maria's blood wouldn't be enough.\"\n\n\"And werepanthers don't have mates.\"\n\n\"Exactly,\" Vic said with a sigh. \"Maybe you could ask all the Alphas if they know anything that may help?\"\n\n\"I'll put out the request myself.\" What a mess. \"How is the press coverage?\"\n\n\"The news stations are pissed off,\" Vic said with a laugh. \"I let a crew film until Andrew entered the clinic, and then I kicked them off our land again without making a statement. Chase doesn't give me hazard pay, so I'm not dealing with them. There are five news vans and two helicopters out there now.\"\n\n\"Help is on the way. Call me if anything changes.\"\n\n\"Yes, sir.\"\n\nI hung up and immediately made a video call to Colletta, telling her about what Doc had said. \"Are we sure werejaguars don't have mates?\"\n\n\"That is my understanding, as well as what Maria believes.\" I could see her wiping away a tear. \"I don't have any answers. Wolf territories and jaguar territories don't overlap, and their bites don't affect us.\"\n\nI froze as I ran the idea through my head. Could it be that simple? \"If we transfused him with multiple units of werewolf blood, would that be enough to fight off the effects of the jaguar bite?\"\n\n\"I don't know if it would work so long after being bitten,\" she replied. \"Andrew might still try to change into a jaguar. If he doesn't, he'll turn into a werewolf, and he won't survive THAT without a mate.\"\n\nThirty minutes later, I finished a conference call with Colletta, President Kettering, the White House Physician, Chase, Doc Olson, and Doc Myers from the Cascade Pack. No one had a better idea. We were desperate; I'd piss on a spark plug right now if I thought it would do any good.\n\nColletta put out a call to every Pack Alpha for assistance. She needed them to send all unmated females to Arrowhead to see if they were mates with Andrew Kettering, and she needed them quickly.\n\nCh. 42\n\nPresident Laura Kettering's POV\n\nAir Force One\n\nI let out a sigh of relief when I saw Andrew was free. I'd never liked the idea of paying a ransom, but I didn't want my husband dying at the hands of a monster. We may not love each other as we did decades ago, but I couldn't bear to see him suffer.\n\nIt hit me like a truck when I found out Julio had bitten him and what it meant. Colletta was brutally honest with me as we sat in my conference room together; the bite was fatal, and it wouldn't be an easy death. Fever, delirium, pain beyond measure, then the heart finally giving out from the strain. I demanded they do something, ANYTHING, to save him. In the conference call that had just ended, they had an idea. It was the Powerball lottery of long shots, but as Lloyd Christmas once said in Dumb and Dumber, \"So you're telling me there's a chance.\"\n\nMy physician at Bethesda was smart enough to realize he didn't know a thing about the bite or how to treat it, so he deferred to the Pack Doctors. Their plan was bold and unlikely to succeed. Chase explained that the doctors would replace most of Andrew's blood with werewolf blood to fight the panther bite. Once the change began, they would find a mate to guide him to his wolf. Had it been tried before? Not this way. Three times the Pack Doctors had seen humans through a successful change, but in two of those, the human already met their wolf mate.\n\nIf it worked, Andrew would become a werewolf before I did, and he would be the one divorcing ME to be with his mate. Finding his mate was not a sure thing, as Colletta warned. There were fewer than a hundred unmated females of age in the werewolf world, and some of them would never arrive in time. While we waited, Andrew suffered. \"How can I get through this?\"\n\nColletta put her hand on mine. \"We are doing everything we can, Madam President. I've asked every Pack to send their females to the Two Harbors or Minneapolis-St. Paul, since the Secret Service will shut down Duluth International Airport to air traffic. Chase will have all the eligible females from Oxbow Lake and Arrowhead Packs checked in the next hour. The others will start arriving shortly after that.\"\n\nValerie Grunwald looked up from her phone, where she had been texting the members of the Secret Service ad-hoc advance team that flew out with Chase or the Air Force plane. \"It's standard procedure to shut down the airport while Air Force One is there. We are breaking enough protocols already just by making this trip. If not for the Acting President, it wouldn't happen.\" She had protested strongly to Cartwright, but he'd given a direct order. He did allow us to use Air Force One, and he called up the National Guard in Duluth and the 148<sup>th</sup> Fighter Wing of the Air Force Reserve to assist. \"How are we going to run security checks on a hundred women, some foreigners, all trying to get into the room with the President?\"\n\n\"You won't need to,\" Colletta replied. \"Andrew took a shower shortly after arriving at the Clinic. Our nurse bagged his clothing. Chase is going to send articles to each of the airports and the two Packs in plastic bags. If his mate is out there, she will recognize his scent from the clothing.\"\n\nGood. The last thing I needed to see was a parade of underwear models coming in to smell my husband. It just wasn't fair; if you got to live that long, couldn't you be plain-looking? \"That sounds like a good solution, but what about the people coming all this way? Are they going to sniff and get back on a plane?\"\n\nColletta laughed. \"Not quite. The ones who fly into Two Harbors will stay with Oxbow Lake. The ones landing in Minneapolis? We'll give them spending money, and a hotel room near the Mall of America. Once the excitement is over, Chase will invite them to visit the two Packs if they wish.\"\n\n\"I've heard about his pool, so I expect they will want to come,\" I replied. I'd seen the reports from the FBI agents and couldn't imagine visiting there. I knew the werewolves were casual about nudity, but the pool was practically a nudist resort. Maybe getting a wolf would make it easier for me to handle things? \"What are the chances of any of them being his mate?\"\n\nColletta looked uncomfortable as she answered. \"We have no idea. Our people believe that the Moon Goddess grants each werewolf one mate destined to be theirs. Some people wait over a century to find theirs, while others never find the one. Some people like me even get another mate after their first one dies. How and why matings happen is not for us to know. We pray the Goddess will bring us together quickly, but everything is in her time. Until now, the idea of a human mate was thought impossible. After all, humans don't have a wolf and couldn't get one. We know better now.\"\n\n\"You said there are fewer than a hundred unmated females in the world.\"\n\n\"Yes, and that is down quite a bit. Recent events have brought together the unmated in ways we'd never done before, and many found their destined ones. Even if you assume the remaining one hundred are all waiting to meet human mates, there are a hundred million males of age in this country and billions worldwide. The Moon Goddess will have to make this happen, and I have no idea if that is her plan.\"\n\n\"Was there any other option that Chase didn't mention?\"\n\n\"Frank only thought of one, but it's not going to happen.\"\n\nI raised an eyebrow. \"Why didn't Frank mention it?\"\n\n\"Because even though Julio has O-positive blood and his jaguar blood would give a better chance of making the change, we don't have him in custody. Even if you did, you'd have to drain him of four or five pints to get enough. You can't kill Julio to save your husband, Madam President.\"\n\nI tapped my fingers on the table. Julio was the key to this; we wouldn't be safe until he was dead. Frank had made it clear that Andrew was just the latest act in a revenge play that would end with me. \"Maybe not yet, but I can do something else.\"\n\n\"What? Every law enforcement agent in the country is looking for Julio.\"\n\n\"Time to up the ante.\" I looked over to Valerie. \"Have your agents escort the reporters and one film crew here for a statement.\" Valerie turned away and gave the command. \"If you don't mind, Colletta, I'd like to have you here for this in case there are questions I cannot answer.\"\n\n\"Of course, Madam President,\" she replied.\n\nTen minutes later, the camera was rolling. \"Earlier today, you saw as I had a ten-million-dollar cash ransom delivered to the White House. The money didn't bring my husband back because Julio Salazar decided to kill him instead. Julio bit Andrew Kettering, which we understand is fatal to humans in about twenty-four hours. I am on my way to the Arrowhead Pack, where doctors at his clinic are working hard to give him even a slight chance at survival.\"\n\nI paused and looked in the camera. \"That money can now be yours. I am offering that ten million in cash for information leading to the arrest of Julio Salazar. You do not need to catch him, and I don't want you to risk it; dial 911 or contact the FBI's tip line and let the professionals handle it. Julio is armed and dangerous, and we need him in custody as soon as possible. Julio's last known location was west of Two Harbors in northern Minnesota. I'll now take questions.\"\n\n\"Madam President, isn't there a better facility for your husband than a Pack Clinic?\"\n\n\"No. No other doctors in the country have the experience in treating bites like the doctors at Arrowhead, and moving Andrew elsewhere would not be helpful. The best chance to save his life is there.\"\n\n\"Madam President, do you blame the Weres in this country for what is happening to your husband?\"\n\n\"Of course not,\" I said. \"Chairman Grimes and her people have been staunch allies in the fight against criminal elements such as the Sons of Tezcatlipoca. I count her and Alpha Chase as personal friends. I don't blame him for the actions of one escaped felon, and neither should any of you.\"\n\nThe press conference went on for fifteen more minutes before I called it. We were crossing over northern Wisconsin and would be landing in ten minutes.\n\nThe fasten seatbelts sign came on, and we buckled into our seats for the landing. I watched the lights below as we descended towards Duluth International Airport, an F-16 fighter jet escorting us off each wing. The pilot lowered the landing gear and flaps, and we entered our final approach to the airport just north of the city at the southern tip of Lake Superior.\n\nWe were only a few hundred feet off the ground when the plane turned violently to the right. The engines screamed as the pilots took them to maximum thrust. I heard one explosion, then a second and bigger one as the plane shuddered and turned the back to the left. The lights went off, and I said a prayer as I watched the ground rising to meet us.\n\nCh. 43\n\nAir Force Colonel Randall McNally's POV\n\nCockpit of Air Force One\n\n\"Air Force One, wind 300 at 14 knots, clear to land runway 28.\"\n\nThe great thing about flying this particular 747 was never waiting for clearance. \"Winds 300 at 14 knots, cleared to runway 28, Air Force One.\" My copilot, Colonel Amy Atlas, had us right on the ILS glide path for approach and had control of the aircraft while I handled the radio and supervised the crew.\n\n\"Landing checklist,\" Lt. Colonel Alan A. Anderson began as he read from the book. \"Landing Gear- check down.\"\n\n\"Gear down and locked,\" I replied.\n\n\"Autopilot off.\"\n\nI checked the control. \"Autopilot is off.\"\n\n\"Autothrottle OFF and SPD deactivated.\"\n\n\"Autothrottle is OFF, SPD deactivated.\"\n\n\"Landing speed, 160 knots.\"\n\n\"Reducing throttles,\" I said. When speed bled down from 165, I reported, \"Landing speed at 160 knots.\"\n\nWe went feet dry just north of Duluth and continued heading west to the airport. \"Five hundred feet,\" I called out.",
        "\"MISSILE BREAK RIGHT BREAK RIGHT,\" came over the radio from one of our fighter escorts. Amy put the controls hard to the right and shoved the throttles forward to the firewall, turning the big jet to the north.\n\nI reached up to deploy flares and activate electronic countermeasures, but there wasn't much time to respond at this altitude. I saw the flash of an explosion behind us, followed by a missile strike on the number one engine. \"We've lost Engine One,\" I said. \"Amy has the aircraft. Engine fire checklist.\" Amy focused on flying as we worked the problem.\n\n\"Thrust lever CLOSE,\" Alan said.\n\nI took the number one engine throttle back. \"Number one thrust lever closed.\"\n\n\"Start lever CUTOFF.\"\n\n\"Start lever in cutoff.\"\n\n\"Pulling engine number one fire switch. Fire switch pulled.\"\n\nI listened as Amy gained us precious altitude; we'd come close to crashing with the steep bank at such a low altitude. \"Controls are sluggish,\" Amy said.\n\n\"We lost the engine mount and part of the wing,\" I said as I looked out at the damage.\n\n\"Level flight, climbing to two thousand,\" Amy reported.\n\n\"Duluth tower, this is Air Force One declaring an emergency. We've lost Engine One, and I can see wing damage and damage to flight controls. Climbing to 2000 feet on heading 030.\"\n\n\"Air Force One has declared an emergency. Continue right to one-zero-zero and climb to two thousand feet.\"\n\nNow that we had turned, I could see a large fire just short of the airport. I had a fighter off my left wingtip, but nothing on the right. I knew in my gut what the fire meant, and the remaining fighter jet confirmed it. \"Duluth tower, Rapier one-five is down, chute deployed touchdown just east of base access road. Two missiles launched from near the substation one mile east.\"\n\nI looked over at my copilot, who was bringing the throttles back and leveling out. \"Captain, I have stable flight altitude, reducing speed to one-eighty.\" I could see she was using right bank and right rudder to compensate for the uneven thrust and the loss of part of the left wing. I spent the next minute working with the flight engineer to manage our fuel load. I also took thirty seconds to update the passengers and crew on the attack. \"Flight crew, prepare for an emergency landing,\" I finished.\n\nThe Fighting Falcon was still on my wing. I had him give me a look at the damage; we'd gotten lucky, and the engine nacelle absorbed much of the explosion. \"Rapier one-six, break off and check the launch area. I don't want to find out they've got a third missile when I fly over.\"\n\n\"Roger, wilco,\" the pilot said. The jet rolled away, then accelerated to check out our landing path.\n\n\"Ready to land?\"\n\n\"Ready,\" Amy said.\n\n\"Duluth tower, Air Force One requests immediate landing.\"\n\n\"Air Force One, turn right to 280 and slow to 160 knots to pick up ILS approach.\"\n\n\"Turn right to 280 and 160 knots, Air Force One.\"\n\nTo minimize the differential thrust effect, I feathered the throttles on Engine 4 (on the far right) to minimum thrust, while engines 2 and 3 inboard provided the needed thrust. Once we were back on the glideslope with the correct speed, I requested landing clearance. \"Air Force One, wind 295 at 15 knots, cleared to land runway 28.\"\n\n\"Air Force One, I see no hostiles in the launch area. FLIR shows no threats.\" That was good; the fighter's Forward-Looking Infrared would have picked up any hostiles still in the area.\n\nI had the Flight Engineer run through the landing checklist again before we tailgated the landing. \"The aircraft is going to want to turn left when you level the wings for landing, and it will be worse when the engines go to reverse thrust. Our stopping distance will be longer, so we need to touch down early on the runway.\"\n\n\"And we don't know if our tires or landing gear got damaged,\" Alan said.\n\n\"May God watch over us,\" I said as we approached the site of the missile attack. \"Five hundred feet.\"\n\nAmy did a fine job of flying as we approached. I got on the PA one last time. \"We will be on the ground in thirty seconds, and it may be rough. Brace for impact on my call.\"\n\nNothing happened as we flew over the substation, and Amy flared out shortly after crossing the edge of the runway. \"Brace for impact,\" I said over the PA system. The main gear touched down, followed by the nose. \"Reverse thrust,\" I said, engaging the levers before throttling up engines two through four. At sixty knots, I stopped the reverse thrust, extended the spoilers, and idled the engines as we braked to a halt. Emergency vehicles were already heading our way.\n\n\"Flight crew, prepare for emergency evacuation.\" They would get the emergency exits opened and assist people off the aircraft due to the continuing fire danger. We went through the evacuation checklist. As the Captain, I was the last to depart. The President was already speeding to the Air Force Reserve Base under heavy guard.\n\nMy crew gathered around me as we looked at the damage to the left wingtip and the missing engine. \"Damn,\" Alan said.\n\n\"You guys did a hell of a job,\" I said. \"We survived a missile attack at low altitude with no serious injuries. I'm proud to serve with you.\"\n\nThe FBI was waiting for us, and soon the NTSB and Secret Service would want their time. \"What happened to the pilot?\"\n\n\"Major Louisa Doyle didn't survive the missile impact,\" the lead agent told us. \"She put her fighter in the path of the first missile.\"\n\nDammit. I said a silent thank you to the brave fighter pilot; while the 747 could fly with two engines, another missile hit at that altitude was not survivable. Thanks to her and my flight crew, we just foiled the most audacious attempt at a Presidential assassination in history.\n\nPresident Kettering's POV\n\nAs far as the Secret Service was concerned, I was an important package to be handled. As soon as the aircraft came to a halt, agents surrounded me and moved me to the emergency exit. A half-dozen vehicles rolled up to the end of the emergency chute, and two agents slid down to verify we were ready.\n\nThere was no time to bring The Beast, the President's armored limousine, to Duluth. The advance team rented an armored SUV and surrounded it with FBI Suburbans and Sheriff's Department cruisers. \"You're next,\" Valerie said after sending Colletta down the slide.\n\n\"Thank God I'm wearing slacks,\" I said as I moved to the edge. I followed instructions, jumping down the slide to the waiting agents who bundled me into the armored vehicle next to Colletta. As soon as Valerie got in behind me, we were on the move. \"Where are we going?\"\n\n\"The Air National Guard base is over there,\" Valerie said. \"It's close, and it's defensible.\"\n\n\"I need to get to Arrowhead,\" I objected.\n\nValerie shook her head, no. \"Colletta can go when she wants, but we don't know if there is an active threat against you still out there. We have at least two people with access to anti-aircraft missiles out there, which means they can have damn near anything. I'm not putting you in a helicopter or driving you anywhere until we can guarantee your safety.\"\n\nThat wasn't the answer I wanted. \"My husband is DYING not far from here. I need to get to him NOW.\"\n\n\"I'm sorry, Madam President. You can fire me tomorrow if you wish, and I'll know I kept you alive long enough to give me my pink slip.\" We pulled into one of the hangars and stopped near an office door.\n\nI needed to get to Andrew before he died on me.\n\nCh. 44\n\nAlpha Chase Nygaard's POV\n\nTwo Harbors, Minnesota\n\nAs soon as we taxied to a stop at the Two Harbors Airport, the cars drove up to where the stairs would come down. The Sheriff sent two vehicles to collect the Secret Service agents; two were coming with me to Arrowhead, while the Supervisory Agent was headed to Duluth to prepare for Air Force One in a few hours. We'd all been on the phone for most of the flight, and tensions were high. Julio Salazar was on the loose, the First Husband was very likely to die in our Clinic, and the President would be here in a few hours to be with him. I wasn't worried about our Pack; we were solid defensively, and those not fighting were well protected with our safe room. I felt sorry for the Secret Service.\n\nAs soon as the stairs lowered, I let the agents head out first. The Supervisory Agent rode shotgun in a patrol cruiser, taking off with lights flashing before I got down the stairs. The other two got in a Sheriff's SUV. Behind them were three vans from Oxbow Lake, each with an Omega driving. I walked over to the lead van. \"Hey Patty,\" I said to the driver. Patricia was a former Arrowhead member who found her mate in the Oxbow Lake Pack shortly after our Pack moved here.\n\n\"Welcome home, Alpha Chase,\" she said. \"I'm to take you and your people to Arrowhead. The two other vans are taking our warriors and trackers home.\"\n\n\"Sounds good. We've got a few minutes until the next plane arrives.\" The Air Force transport jet was right behind us and was landing now. Since I took three Secret Service agents on my flight, the second had three Oxbow Lake warriors onboard.\n\n\"You don't want to head there now?\"\n\n\"I'd rather have the people. If your Alpha doesn't mind, I'd prefer to let the Sheriff lead us to the Arrowhead entrance, and then you can all head back together. I can't split up our people with Julio out there somewhere.\"\n\nShe linked Alpha Michael, who agreed with the plan and welcomed his people back home. I made a quick call to Beta Vic while I could still hear and told him we'd be there in about fifteen minutes. \"We'll be ready,\" he said. \"It's good to have you back, Alpha.\"\n\n\"Tired of dealing with the FBI?\" I'm sure he'd been having a LOT of fun dealing with everyone who wanted access and control of our land.\n\n\"You can't imagine. Alpha Rori has it easy because she can pull the old 'I'm pregnant, and I'm a wolf' excuse.\"\n\n\"Keep everyone safe, and I'll be there shortly.\" I hung up as the Air Force jet taxied in and stopped nearby. A few minutes later, we were loaded up and heading out. Since we came straight from the Leesburg Airport, nobody had luggage, only their weapons. Our Sheriff's SUV led the way with lights flashing, so we made it to the entrance in record time.\n\nI linked our security guys, and they opened the vehicle barriers just before our caravan turned in. The press was everywhere, and I could see two helicopters circling over the lake. We drove straight to the Pack House.\n\nWith no immediate threat, Vic had relaxed the lockdown rules so people could eat and move around. No one was allowed out of the Pack House basement unless they were in the dining room upstairs; no pool, no offices, and no tunnel doors open. It did allow people to use the gym, get sleep in the bunk room downstairs, and go upstairs to an open kitchen to eat. I'd asked about Claire Bennington, our injured FBI agent who had a room downstairs. Frank Donovan and some others had wheeled her hospital bed into the safe room when the alert went out; she was sleeping there now. We could get everyone back in the safe room and lock the door in less than a minute.\n\nI told everyone to go inside and eat since we'd had nothing since lunchtime. I asked for a plate to be brought to the Clinic as I headed over there with the other Secret Service agents. Heading back to the treatment room, I walked past the FBI guards and inside. Possum was preparing an ice bath while Doc Olson was monitoring his vitals. Over in the corner, two local physicians and a Secret Service agent were watching and taking notes. \"How is our patient doing?\"\n\n\"I'm burning up, and everything hurts,\" Andrew complained. \"Where is my wife?\"\n\n\"Giving the Secret Service hell as she makes them get her out here with no notice,\" I told him. \"The Supervisory Agent I brought along is wound so tight that if he chewed on a pencil, he'd crap a diamond.\"\n\nThat got a laugh. I checked the First Husband's vital signs; pulse 106, blood pressure 140/92, and temperature of a hundred and two. Doc handed me his chart. \"I've got three units in, and I've taken three. When the first unit went in, his vitals improved slightly, and his fever came down a degree. It only lasted for fifteen minutes, though. The werewolf blood doesn't seem to be stopping the effect of the bite.\"\n\n\"The bath is ready, Doctors.\"\n\nWe moved Andrew into the portable tub we brought in. He almost screamed when he sank into the cold water, but we had to keep his fever down as long as possible. Once it spiked to over a hundred and five, he'd no longer be lucid, and he was closer to death. While he was settling in, I'd been linking with Vic and Rori. \"How are we progressing on finding a mate for him?\"\n\n\"Flights started landing an hour ago,\" Rori replied. \"We've got a scent bag at Two Harbors, and so far, we are 0 for 18. We'll have a scent bag at the Intercontinental Hotel at the Minneapolis Airport in an hour, in time for flights heading there. We're getting a good response, even from European Packs that know they likely won't make it in time.\"\n\n\"Good. I know we are grasping at straws, but we have to try.\" I waved to the doctors, leaving Possum to watch over him for a few minutes as we left the room and entered the one across the hall. \"The chart isn't showing any improvement. Is the werewolf blood doing anything?\"\n\nDoc Olson looked at me gravely. \"It's too early to tell, Alpha. With all the time the bite had to work changes in his system, it might be too late for the blood to work. Or we might need to replace more. I have no idea what the normal reaction for a werecat bite is supposed to be, so I can't tell you if it's working or not.\"\n\n\"Or maybe the werewolf blood is replacing that bite reaction with a werewolf change,\" I said. \"Our baseline is Frank's change. He started running a slight fever after twelve hours, but it didn't spike high for eighteen.\"\n\n\"That was with no bite,\" Doc said. \"With Deputy Brighton, the fever started twelve hours after the bite. We don't know for sure when Andrew got his bite, and we don't know if a cat bite works differently than ours. Hell, we don't even know if it is capable of turning a human. All Maria knew was that it was always fatal by the next day. The werejaguars pass down a maternal line. It might be completely different.\"\n\n\"We keep treating the symptoms and hope for a mate,\" I agreed.\n\n\"In two more hours, I'll have five units of type-matched werewolf blood transfused. I can't do anything more.\"\n\n\"I know.\" Doc went back into the treatment room, and I answered questions from the human doctors for a few more minutes. There weren't any new treatments to reduce a high fever, and you couldn't use antibiotics on a werecat bite. It was sad, but the person hauling in bags of ice had as much influence on the outcome as we did.\n\nWe managed the fever for the next few hours, keeping it between a hundred and a hundred and three. We still had no luck finding Andrew a mate, but more flights were arriving all the time.\n\nI heard a commotion in the hallway; the Secret Service agents had their firearms out, and I heard Rori call out an alert over the Pack link, sending people back to the safe room. \"What's going on?\"\n\n\"Someone fired two missiles at Air Force One just before landing,\" one of the agents said. \"I don't have any other details.\"\n\n\"I have a television in the lobby,\" I said. I walked out to the entrance area, where FBI agents already had the news channel up. \"Holy shit,\" I said. Cameras covering the landing captured the missiles streaking up to the 747 when it was almost to the airport. An F-16 fighter flew in front of the first and exploded while the second missile blew off one of the engines. \"I think we found Julio,\" I sent to Vic and Rori.\n\n\"Mom is on Air Force One with the President,\" Rori reminded me. My gut was churning as I watched the live coverage; a cheer broke out when it landed and came to a safe stop. \"Thank you, Goddess,\" I thought to myself.\n\n\"Vic, if Colletta calls in, find out when she's arriving here and how,\" I told him.\n\nTwo hours later, it was clear that the Secret Service wasn't about to fly or drive the President anywhere with an active threat. Law enforcement was slow to respond to the attack, as most available officers got stationed at the airport and Arrowhead. With the short-notice trip, they couldn't call in enough people. The National Guard callout was still in progress, and they wouldn't arrive until the morning. Andrew was worsening; his fever remained above a hundred and two, and we were going through a lot of ice. If we didn't do something soon, Andrew would not be able to say goodbye.\n\nI called a meeting in the lobby, bringing in the Secret Service, FBI, and the White House situation room. After discussing the situation, I made my recommendation. \"Send a LifeFlight helicopter up here to retrieve him and take him to the Air Force Reserve base,\" I said. \"We've done everything we can, and we're managing symptoms. We can transport him with ice packs to control his temperature, and the base clinic can go from there.\"\n\n\"What if you find a mate for him,\" the White House Physician asked.\n\n\"Then we fly her to Duluth,\" I said. \"I need an answer soon. I don't know how much time we have before he loses consciousness.\"\n\n\"Bring him here,\" Valerie Grunwald said. \"We aren't moving Valkyrie with an active threat in the area.\"\n\n\"I'll make the arrangements,\" I said. Thirty minutes later, an air ambulance set down on the Pack House's beachside, away from the cameras on the road above. We had the First Husband on a gurney, enclosed in a plastic suit filled with ice. Doc Olson and one Secret Service agent got on board after he was loaded, and the helicopter took off moments later.\n\nPresident Laura Kettering's POV\n\n148<sup>th</sup> Fighter Wing Headquarters\n\nThe Secret Service wouldn't let me out in public view, so I had to wait until the helicopter landed. I ran to the gurney as my husband was taken out of the ambulance. \"Andrew?\" He looked like death warmed over; despite the ice surrounding him, he was feverish and in pain.\n\n\"Hi, baby,\" he said as he tried to smile. I hurried to keep up with the medical staff as they wheeled him into the clinic. \"I'm sorry.\"\n\nI didn't know what to say to that. My husband had done nothing wrong; this was all about me. \"I'm the one who should be sorry,\" I said. The team moved him into an ice bath they had prepared while staff disconnected the mobile electronics and hooked up the clinic's monitors. Doc Olson was briefing the staff as I talked with my Andrew.\n\nWe had less than an hour before the fevers took away his lucidity, then his consciousness. I held his hand as his body fought to exhaustion, but there was no miracle coming. None of the female werewolves who flew in was his mate, and the werewolf blood didn't work. His fever kept rising no matter what the doctors did.\n\nI was holding his hand when his heart stopped. The doctors removed him from the bath and tried to revive him, but he was gone. \"Time of death, 0503.\"\n\nI collapsed onto the floor, crying uncontrollably in Colletta's arms. I had been wrong about our love; it was old and tired, but it was still there. I wept for the man who had stood by my side without complaint long after I had stopped showing love to him.\n\nThe truth was that I didn't deserve him, and that broke me.\n\nCh. 45\n\nChase Nygaard's POV\n\nArrowhead Pack, Alpha's Conference Room\n\nOne Week Later\n\n\"Let's get this meeting started; we have a plane to catch,\" I said. The room was at capacity with the senior leaders of Arrowhead plus a few guests. Mom and Frank Grimes were to my left, and Frank Donovan was sitting at the other end of the table. Vic, start us off with a summary of Pack security.\"",
        "\"We are still operating at an elevated threat level, supplementing our guard force with warriors loaned from allied Packs and the FBI. We are doing continuous border patrols plus drone flights, plus staffing the entry checkpoints at the main road and the rear. We have three snipers covering the main complex 24/7. We allowed people to return to their homes when our guests arrived for the party, and I don't see a need to change that. The FBI does not believe Arrowhead is under a significant threat.\"\n\n\"That's because they think Julio Salazar went back to Washington after the President returned,\" Frank Grimes said. \"I'm not so sure that's the case. I've told them so; the President's security is at a maximum, and traveling during the largest manhunt in US history is too much of a risk. I believe he's gone to ground in the area, and Chase and Rori are his targets.\"\n\nFrank Donovan agreed. \"Julio caught the Secret Service at a disadvantage, but that won't happen again. President Kettering is only leaving the White House for the funeral service and burial, and both of those will be under heavy security.\"\n\n\"I know it sucks that everyone has to stay inside with the increased security, but Julio and his buddy could be out there with a rifle or an RPG right now. If he can get ahold of a pair of Stinger missiles, he can get anything.\" The FBI found two FIN-92 Stinger missile launchers near the substation. These portable anti-aircraft missiles are heat-seeking and fly at up to Mach 2.5. Air Force One had less than three seconds between launch and impact.\n\nThe serial numbers matched a sale to Colombia in 2016. The pair were among a dozen reported stolen from a Colombian Army arsenal in 2018. There were no witnesses to the launch, and the two or more individuals were long gone by the time police arrived. One of our trackers verified Julio fired one of the missiles. \"Spider Monkey, how are we doing on finding Julio's support?\"\n\n\"The FBI isn't letting us in on their investigation. My team is digging through the information we grabbed from the computers at the Sons of Tezcatlipoca clubhouses and the Task Force. So far, we've got nothing. The patched members of the Denver chapter are dead or in prison; we're looking at the prospects and the WAGs now.\"\n\n\"Wags?\" Was this a cat reference?\n\n\"Wives and girlfriends. Maria is helping me put together a database. Claire Bennington is digging through the financials, looking for anyone who might be a Club associate. We don't have anything yet, Alpha.\"\n\n\"Keep working on it, and don't forget the other chapters. They were all related at the top,\" I said. When we found out Julio had one or more accomplices, it made the kidnapping, travel, and attacks easier to understand. Whoever it was, they had connections and money. Those missiles weren't cheap on the black market. My first thought was the Cartels, but their Cartel guys killed all the Presidents, so maybe not. \"Vic, make sure she's not overdoing it. Her pregnancy won't get any easier.\"\n\nVic lifted his wife into his lap, his fingers moving around her rounded belly. \"We've had that discussion.\"\n\nI could imagine how well THAT went. Spider Monkey was like a dog with a bone when she was after information, and she wasn't the only one. She could go for weeks on junk food and coffee, sleeping a few hours a night. \"You too, Frank. I don't want Claire's recovery hampered because she's spending too much time staring at bank statements.\"\n\n\"I'll keep her on track,\" Frank Donovan promised. Claire's hip was a mess, and I doubted she'd ever return to active duty in the FBI. The good news was that Claire liked it here. She fit right in with Spider Monkey's group of hackers and geeks. I had worried about her moral flexibility, but I didn't need to. Claire knew that if she found Julio for us, there would be a bullet, not a trial. For the first time, she could dig around for information without rules or warrants. She told Spider what she needed, and Spider found it for her. Frank was working on the training program I'd mentioned, and then he would retire. Both would make fine additions to our Pack if we could keep them here.\n\nI looked over at my parents. \"Mom, any changes to our itinerary?\"\n\n\"No. Frank and I will fly to Reagan National Airport. The Secret Service will bring us to the White House. We will travel with the Presidential Motorcade as Andrew Kettering's body gets taken from the Capitol Rotunda to the National Cathedral for the funeral service. You will fly into Hyde Field, where an armored limousine will pick you up and drop you off at the security checkpoint. After the service and the wake, you and Frank return home. I will fly with the President to North Carolina for the private burial before returning to Washington. I suspect I may be needed out there for a few days after that, though.\"\n\n\"Why?\"\n\n\"Laura is planning to notify the Speaker of the House and the President Pro Tem of the Senate of her intent to resume Presidential duties when she returns to Washington. Four days later, unless they declare her unfit, she's back in charge. I want to make sure Julio doesn't do anything to her until that happens.\"\n\n\"The funeral service is at 2 pm our time, so we should be back around midnight,\" I said. \"Michael is sending Oxbow Lake warriors to bring me here, but stay alert. Julio might think this is a good time to hurt my family.\" None of us would forget how the Sons went after the family first.\n\n\"Alpha and the babies will be safe,\" Vic promised.\n\n\"Sounds like we are ready. Other business?\"\n\n\"Maria asked what would be involved in becoming a formal part of our Pack,\" Spider Monkey said. \"She likes it here.\"\n\nThat made me smile. \"Maria can't get a Pack Bond, but we could do the Trusted Associate thing. I'd have to file paperwork with the Council and get it approved.\"\n\n\"That's a formality now that we're out in the open,\" Colletta said. \"Even the Packs that fought the changes are coming around now.\"\n\n\"I'll talk to her tomorrow about it,\" I promised. \"Anything else?\"\n\n\"I have an idea,\" Roadkill said. \"Remember when Coffey was loose in Duluth?\" I nodded. \"We sent Pack members out on the search for him, driving around with the windows down.\"\n\n\"You want a street search of Duluth? Driving around with our heads out the window?\" I got a few chuckles from that. Hey, the best way was to have the wolf's head out the window as our noses were most sensitive that way.\n\n\"It's not like law enforcement is having any luck their way. There hasn't been a Julio sighting since he dumped Andrew up on the hill. We set up a command post, keep track of the search areas, and hope we get lucky. I doubt Julio is moving around, so the scent should be pretty strong around his hideout.\"\n\n\"Frank, do you think we could get the police and FBI to cooperate?\"\n\n\"Hell yes,\" my stepfather said. \"The FBI is under a lot of pressure to find him, and the Duluth Police Chief is a friend. He'd let us ride around with his patrol guys. We could track our people's cellphones and monitor the search from up here. We clear the Duluth area, then Two Harbors, and finally the rural sections.\" We had enough people patrolling around Lake Arrowhead that I knew they weren't in our backyard.\n\n\"I'm game. I want volunteers only. Sniff and report ONLY. If our people find him, get the warriors together and take him out. If it's in concert with law enforcement, the FBI will take him down. Clear?\"\n\n\"I'll arrange it and coordinate with Oxbow Lake,\" Vic said.\n\n\"Mom, send out a message and ask the other Packs for volunteers, preferably trackers, but I'll take anyone with a wolf nose. Ask for a week. We'll put them up here, of course.\" That would help get the guys here. Even if they didn't find their mates, we had a well-deserved reputation as a Party Pack. Mom said she'd take care of it. \"Any other ideas?\" Silence. \"All right, then. I'll see you tonight.\" I said goodbye to Rori and the twins. Ten minutes later, our armored SUV and escorts were on our way to the Two Harbors Airport.\n\nMom's flight left before mine, as I didn't want to spend more time in the DC area than I had to. Tom and Meghan were along for this trip as my security. We went over the itinerary and our plans as we waited to board. The security posture was such that we couldn't bring any weapons into the service, where we would be seated a few rows behind Mom and Frank.\n\nWe had to find this guy and soon. I was tired of living in fear.\n\nCh. 46\n\nMaria Meztli's POV\n\nArrowhead Pack House\n\nThe after-dinner swim was becoming my favorite part of the day.\n\nMaritza and the babies were climbing over me, their little hands grabbing at my fur and my ears as I rested in the kiddie section of the pool. Everyone loved Maritza's jaguar form, especially the toddlers. Regular swim sessions made her very comfortable in the water, and Maritza was fearless on the slides. She would go down all of them now on her own, sliding down on her belly, then she'd swim to the stairs and do it again. Spider Monkey was sitting near me in the water, with her baby belly getting bigger every day.\n\nWe watched as Frank Donovan wheeled Claire into the pool area with her physical therapist. She didn't look comfortable yet around a roomful of naked Werewolves, and Frank was trying hard not to get caught looking at anyone else. They came over towards us as people greeted them from the pool and the lounge chairs. \"Welcome to the pool,\" Spider Monkey said as she got to her feet. \"We'll clear a path for you.\"\n\n\"Thank you,\" she said nervously. The nannies and parents moved the babies out of the way, and I shifted back, followed by Maritza. I picked her up and set her on my lap on the edge of the pool. Frank stopped with her wheelchair at the edge of the pool. \"This place is so busy!\"\n\n\"It's the cool place to hang out,\" I told her. \"The babies sleep so well after they've played here for a bit.\"\n\nClaire was looking around at the crowd. \"There are a lot of people I don't know.\"\n\nSpider Monkey reached out and patted her hand. \"You'll get to know the Pack members, but we've got a bunch of guests here still. Colletta put out the call this morning, and we had plenty of volunteers. It's mostly male unmated and mated couples, as the single females were just here last week.\" We could all tell she was nervous about essentially being in a nudist colony. \"No one cares that you're naked. In an hour, you won't even notice. Trust me.\"\n\n\"It's a culture shock,\" she said. They fitted her with a flotation vest, and then Frank rolled the wheelchair into the shallow water. He worked with her therapist to move Claire into the deeper water. She couldn't put weight on her hip yet, so floating with her toes off the bottom would allow them to exercise her legs without damaging the healing hip.\n\nThe babies started yawning twenty minutes later, and I helped the nannies get them cleaned, dressed, and settled in the Pack nursery napping area. One of the nannies would stay with them so the rest of us could enjoy the remainder of the evening, so I was going back to the pool.\n\nThere was a big volleyball game going on, but that wasn't my strong suit. I was shorter than anyone except Spider Monkey, and Vic wouldn't let her play at this stage of her pregnancy. I grabbed a drink from the bar and headed to the hot tub. It was full of visitors, and I could tell who the single males were by the looks I got when I walked up. \"Room for one more?\"\n\n\"Sit by me,\" Shelly Lorilla said. She made room on the bench for me to sit down. Shelly was close to my age, having turned sixteen last month. As the illegitimate daughter of an Alpha, her wolf was strong, but she wasn't of age yet. On my other side was Monica, who I'd met when we did our ATV patrol before we attacked.\n\n\"I think I need this more than you after today's class,\" I joked. Arrowhead Pack required every person to train in armed and unarmed combat, regardless of age or rank. I had enough training to test into the Combat Pistol classes, but my Dad didn't like me fighting. Shelly and I were in a beginner Jiu-Jitsu class together. Since we were the closest in size and skill, we were sparring partners. We were practicing takedowns, so we both hit the mat a lot this afternoon. I slid into the churning waters, groaning as I did. \"My back is still sore!\"\n\n\"Sorry about that. You got me a few times too.\" We talked and watched the game for the next ten minutes, not noticing the crowd that had begun to gather.\n\nSpider Monkey did. \"Guys, back off. One is underage, and the jaguar is under Rori's protection.\" I looked back to see about a dozen unmated males jockeying for position, each moving in to get a good sniff.\n\n\"She's unmated and of age,\" one of the men said. They were all posing and preening like they were trying to impress The Bachelorette. \"Come out here and say hello, baby!\" He moved towards me, only for another man to grab his arm and throw him into the pool. His friends jumped in, and soon we had a half-dozen men fighting on the pool deck.\n\n\"I've sent for help,\" Shelly said as she pulled me away from the men and into the center of the big tub. Two of the guys started to climb in the vacated spot, but they didn't get far. The other werewolf females in the hot tub blocked their way. Arrowhead Pack warriors responded from the pool and from outside, separating the fighters and proning them out. Vic and Rori arrived, and the Alpha's growl scared them all into submission.\n\nI stood up, almost falling as I started to feel flushed and faint. \"Oh, CRAP,\" I said to Shelly. \"I think my heat is starting.\"\n\nVic took control. \"I need female warriors to escort Maria to the Alpha's office. Everyone else, stay where you are.\" Five women came over and surrounded me as they walked me out past the males, many of whom had their noses up, taking my enhanced scent.\n\nI passed Lance just before the doors; he must have run in from patrol. \"I'm fine,\" I said as my escort pushed him aside.\n\nHe took a sniff. \"Heat?\"\n\n\"Damn it.\" The female warriors let me grab my stuff from the locker room before escorting me to the Alpha's office. I got dressed just before Possum arrived. Two warriors stayed with me while the other three guarded the door.\n\n\"You're feverish,\" Possum said as she felt my forehead.\n\n\"My heat arrived,\" I said. \"I'm sorry.\"\n\n\"There's nothing to be sorry for, Maria. It's a natural function of your cat.\" She took my vitals; other than the fever and a faster heartbeat, I was fine. I shifted a little in the chair; blood was rushing to my lady bits, and it was getting uncomfortable.\n\nThe door opened, and Rori trotted in, followed by Vic and Spider Monkey. Vic sat on one of the chairs, pulling his woman into his lap. I was happy to see that the mated males weren't affected like the unmated ones. \"You weren't kidding about the scent you put out during your heat,\" he said.\n\n\"I didn't know how strongly it would affect werewolves,\" I replied.\n\n\"It's pretty strong,\" Vic agreed. \"The ventilation cleared the air after you left, and the males calmed down. We're keeping them away from the office for now, but it's fair to say we can't keep you here while it's going on.\"\n\nI nodded. \"The males will gather around wherever I am and fight for dominance,\" I said.\n\n\"Roadkill and I can take her to our fishing cabin. Only Pack leadership knows where it is, and there is no one around for miles,\" Possum said. \"I can bring enough sedative to keep her from suffering until the heat ends.\"\n\nI'd been giving this a lot of thought, and I didn't want to do that. \"No,\" I said. \"I'd rather have a male tend to my heat than go through it alone.\"\n\nThat caused some eyes to open wide. Vic relayed a one-word response from Rori, who had her head cocked to the side and her tongue out. \"Why?\"\n\n\"I can't let my kind go extinct,\" I said as I sat up straight. \"Having a baby is hard enough with a werepanther mate, and it's going to be much more difficult with a werewolf partner. I don't know if his, you know, will work to trigger ovulation.\"\n\n\"There's more to this decision than just reproduction,\" Spider Monkey said. \"You're young, and your first time shouldn't be an attempt to get knocked up. You should wait for the right man to come along.\"\n\n\"I've found a man I want to share this heat with, Alpha. Lance is a good man, and he would be a good father if I had a kitten.\"\n\nVic was shaking his head. \"Damn, can we have ONE bodyguard who doesn't get involved with his charge?\"\n\n\"Lance has done nothing wrong, Beta Vic. He wants his mate, and he's been nothing but professional and caring with me. That's why I want him to help me through this. I know he'll treat me well, and he won't expect anything from me when it's over. He's young enough to keep up, and his genetic contribution will be good.\"\n\n\"You mean he's hot as hell and probably good in bed,\" Spider Monkey said with a grin.\n\n\"That doesn't hurt,\" I replied. I could tell that leadership wasn't convinced. \"Look at it from my perspective. I could suffer through my heat. I'd rather have a few days of non-stop, no-commitment sex with a guy I like in a cabin. I want a baby, Alpha, and I can't afford to give up a single chance at it.\"\n\nVic shook his head. \"Is that fair to Lance? Can you expect him to have a child with you, knowing he might find his mate at any time? Didn't we learn from Greg?\"\n\n\"Greg was in love with Heather and seduced her, at least until his mate showed up,\" Spider Monkey said. \"Lance would be going in with his eyes open.\"\n\n\"Maybe we should be asking Lance if he would do this,\" I said. \"I know we aren't mates, and I'm not in love with him. I never brought it up because I thought I'd have more time.\"\n\n\"He's coming,\" Vic said.\n\nA few seconds later, he knocked on the door and entered. The two female warriors moved between him and me since the office was concentrating my smell. Lance shook his head, then looked at Rori. \"You wanted to see me, Alpha?\"\n\n\"Everyone but Lance and Maria out,\" Vic said. \"We'll give these two a chance to talk.\"\n\nWhen the door closed, Lance came over and sat next to me. \"Are you all right?\"\n\n\"I'm in heat, and I want you to help me through it,\" I told him.\n\n\"Are you sure? I'm barely hanging on to my control, Maria, and I don't want you to get hurt.\"\n\n\"You won't. That's why I picked you to give me a baby.\" I took a few minutes to explain what it would mean for us both if he did this. \"The chances of me getting pregnant are damn low, Lance. I need to know we'll still be OK when the heat is over because I'm not your mate, and I'm not your girlfriend. I want you to be happy with the one your Goddess chose for you.\"\n\nLance picked me up and sat me on his lap, his nose pressed into my neck. He didn't say anything for a while, but I could tell he was linking someone else, probably Rori. I could feel his erection like a hot bar against the bottom of my thighs, and I wanted so badly to rub against it. Finally, he sat back and looked in my eyes. \"I'd be honored to be your partner for this heat, and I hope I can give you the baby you want. I need you to promise one thing, though.\"\n\nMy eyes were tearing up as I looked at him. \"What is that?\"\n\n\"Don't shut me out of the kit's life. I may not be your mate, but I want to be a father.\"\n\nIt was more than I'd expected. \"What about when you find your mate?\"\n\n\"Then I tell her the truth. It's a little more personal than donating to a sperm bank, and I'm sure it will be more pleasurable, but it doesn't mean more than that. I'm helping a friend have a child, and she will have to understand that. I don't want things to be weird between us, Maria. You're a good kid.\"\n\nI threw my arms around him and hugged him. \"I promise, Lance. You can be as involved as you want to be.\"\n\n\"Thank you,\" he said.\n\n\"There's plenty of diapers to change, after all,\" I said. I shifted my legs until I was straddling Lance's waist. It scratched one itch but started a fire down there. \"We should get out of here.\"",
        "\"Beta Vic wants us to stay here while he gets my car ready. They'll pack for both of us, including food and drinks for the next three days.\"\n\nPossum came back in with a small bag and started pulling things out. \"This is a map to the cabin, and here are the keys. It's got a woodstove if it gets cold, and there is an outhouse and a woodpile in the back. The cabin has a solar panel and battery for lighting and a propane camp stove.\"\n\nLittle of that mattered once the cat and wolf got down to business. \"The bed?\"\n\n\"Queen-sized futon.\"\n\n\"Order a new one,\" I said with a grin. \"You won't want to use it afterward.\"\n\n\"Wouldn't be the first time,\" she said with a grin. \"I put plenty of lube in there, some Viagra for him, and a couple of these.\" She pulled out three brightly colored sex toys.\n\n\"Dildos?\"\n\n\"You said you needed barbs to induce ovulation, and these might do the trick. They look painful to me, though.\"\n\nI couldn't imagine that in my virgin innards, but you do what you have to do. \"Thanks, Possum.\" The female warriors guarded our escape from the Pack House, and we left via the back gate and headed north.\n\nThe cabin was a ninety-minute drive away, on a small lake on the edge of the Boundary Waters Canoe Area. Lance had to keep the windows down to keep the smell from overwhelming him, and I was horny as hell. I couldn't keep my fingers away from my swollen sex, and soon I'd gotten Lance to help me out.\n\nAs soon as we arrived at the cabin, I was out the door with my clothes off. I shifted to my jaguar and took off for the woods with a wolf on my tail. Lance was twice my size, and it didn't take long for him to have me pinned to the ground with his teeth on my neck. I raised my haunches and moved my tail aside as he mounted me. My cat's scream as he plunged through my hymen woke up everything within a mile.\n\nCh. 47\n\nAlpha Chase Nygaard's POV\n\nWashington, DC\n\nSecurity at the National Cathedral was beyond tight. The Secret Service pulled out all the stops, creating a security zone that stretched around the entire complex. As Frank and I waited in the limousine with our guards, we could see National Guard troops stationed every fifty feet along the perimeter, with armored Humvees on every corner. Temporary fencing ensured no one could approach, and tarps covering the fencing ensured a sniper could not spot what was inside. They had not forgotten Julio's shot that killed the CIA director.\n\nWe arrived at the checkpoint, which was shielded from outside view by more fencing and tarps. An agent opened the door, and I left Tom and Meghan in the car as I got out with my identification and invitation. The Secret Service checked me against the guest list, checked my ID, then sent me through an explosive detector and metal detector. Since no cellphones were allowed in the service, I checked it at a table near the entrance to the secured area. \"Welcome to Washington, Alpha Nygaard. Here is your seating assignment. Please follow the white line to the Cathedral entrance.\"\n\nInside the fence, there were even more soldiers and security forces. I spotted an Avenger anti-aircraft Humvee with a turret-mount containing eight Stinger missiles next to a mobile radar unit. Snipers were on every rooftop, and I could hear police helicopters flying around the perimeter. I didn't waste time outside, following the crowd to the lawn area where the guests could gather until closer to the service time. With all the security, I'd arrived ninety minutes before the scheduled start.\n\nI grabbed a Coke for the bar and walked around looking for friendly faces. The guest list was a who's who of the Washington elite. Laura and Andrew Kettering had been the ultimate DC power couple; she the successful politician, while Andrew made his fortune in the dot-com boom and retired to support her. Silicon Valley millionaires with man-buns mixed with heads of state, and more than a few recognized me.\n\nI felt out of place in my fancy suit and tie; Mom was the one who excelled at these things. I was a doctor, a mate, and an Alpha. I wanted nothing to do with politics, and this town was all about political power.\n\nI heard a woman's voice from behind me. \"Feeling out of place, Chase?\"\n\nI turned and smiled. \"I'm at home with trees, not buildings, Madam Attorney General.\" Like many of the ladies, Marisol Guttierez was wearing a black dress that flattered her figure. \"I'm not even sure why I'm here. We failed him.\"\n\n\"Please, call me Marisol. Andrew was dead as soon as Julio took him from the golf course, Chase. No one could have stopped his death, not even you. I read the reports; you did everything you could. Nobody blames you for his death.\"\n\nI let out a breath. \"I'll feel better when Julio is dead.\"\n\n\"He will face justice in our legal system. It's only a matter of time until someone finds him.\"\n\nI shook my head. \"Julio is never going to be taken alive. He's going to get his revenge or die trying. Please, make sure the President remains safe. He might not fail next time.\"\n\nMarisol waved her hand at the security surrounding us. \"Does this look like we will give him a chance? You keep yourself safe, Chase. He wants revenge on you, too.\"\n\nThat was a certainty. \"I know. That's why I'm in a rush to get back home.\"\n\n\"You know, when Colletta first came to us with a deal to take down the Sons, I was hesitant. Why should I favor one biker club over another? If I'd only known what I was getting into.\"\n\n\"It was a good deal for both of us.\"\n\n\"I think you came out better. My forensic accountants kept finding empty accounts that your hackers had cleaned out, and under the agreement your mother negotiated, I couldn't do a damn thing about it.\"\n\nI grinned at that. \"The Council is bringing in capabilities you never had in law enforcement. My team cleaned the accounts out, and that kept them from escaping justice. What was once drug money went to the victims and to the Packs who brought them down. Arrowhead Pack is growing again. We'll be building four more homes and a marina this summer. We're also looking at adding on to our pool building.\"\n\nShe shook her head. \"I've heard stories about that place.\"\n\n\"Come on out to visit us sometime, and don't bring a suit. It would make the next round of negotiations much more fun.\"\n\nShe almost choked on her Coke at that. \"I don't know if I'll ever be ready for that. At least I learned never to negotiate with a matriarch with centuries of experience. Take care of yourself, Chase.\"\n\n\"You too, Marisol.\" I talked to a few people before the Cathedral opened up for us to take our seats.\n\nOver a thousand guests stood as an honor guard escorted his casket to the front of the church. The ceremony was beautiful, and the tributes sincere. I only met him at the end, but I could tell he was a good man at heart. I between his fevers, knowing he was dying, his greatest regret was not seeing his family line continue. \"Your children are the most important thing in life,\" he told me. \"I miss Jeremy every day.\" His son died in Iraq in 2004, and they waited so long to have him that they couldn't have another. \"Money and power mean nothing without family.\"\n\nWe stood again as his casket was taken back up the aisle, a weeping President walking behind the honor guard. Colletta was in a group that followed behind her while the rest of the guests waited. When the hearse departed with the procession, we were allowed to leave our seats.\n\nFrank joined me as the crowd started to move. The wake was under a giant tent on the grass to the north of the historic building. \"Let's get to the buffet before the good stuff is gone,\" he told me.\n\nThe food was fantastic, and we sat at one of the cloth-covered tables and watched the news coverage. Tens of thousands lined the streets to pay their respects to the First Husband and support their President in her grief. We were shocked when the Russian Ambassador asked to join us, but we allowed Vasili Gregorovich to sit next to me. He was a big man, with a half-eaten plate of sweets and food. \"Thank you for speaking to me.\"\n\n\"I'm a little shocked you'd want to after how your country treated their Packs,\" I replied. The unveiling of the Packs didn't go over well with the Russian Government. The Packs barely escaped death or imprisonment, with one moving to Alaska and the other to Canada.\n\n\"We don't always react well to surprises,\" he admitted. \"It is unfortunate that we didn't come to a mutually beneficial agreement like you have with the Americans.\"\n\n\"Trust is hard to come by when you are chased through the mountains by troops,\" Frank said. \"The Packs are settling in nicely, despite escaping with only the clothes on their backs.\"\n\n\"I cannot argue with that. We made a mistake, and your peoples suffered for it. My government cannot change that, but they can make amends.\"\n\n\"Such as?\"\n\n\"We would like them to consider returning to their native lands under a similar treaty. If they agree, we will restore their citizenship, their lands, and any property we can recover. They can go back to their lives, this time with the support and help of our Government.\"\n\n\"Is this guy for real,\" I sent to Frank.\n\n\"They finally realized how much they lost when they drove them out. Europe and North America have werewolves, and they don't,\" he replied. \"I can pass the offer along, but I'm not sure how receptive they will be. Not everyone made it out, you know. Some died in the escape, and others got captured.\"\n\n\"As a gesture of our goodwill, the fourteen people captured will be released. Our only request is that a delegation from the Packs and the Werewolf Council come to Moscow for talks.\"\n\nFrank wasn't buying it. \"Release the prisoners now; put them on flights to Anchorage and Vancouver. Colletta and I will relay your proposal to Alpha Boronsky and Alpha Sereda. It will be up to them to decide if they want talks with you or not; the Council cannot force them.\"\n\n\"I will relay your answer,\" the Ambassador said.\n\n\"Let them know that a meeting at your Embassy would be preferable to Moscow,\" I added. \"After what they went through, I doubt they would agree to meet otherwise. And Vasili? Are you often thirsty, have frequent urinations, abnormal fatigue, headaches, or weight loss?\"\n\n\"How did you know?\"\n\n\"I'm a doctor with a wolf's nose. Your breath smells like acetone; it's a symptom of ketoacidosis, a combination of high blood sugar levels and low sugar in the cells that can occur with diabetes. It happens when your body can't regulate blood sugars well. Stop eating and drink this water.\" I poured him a glass. \"Have your doctor give you a complete physical. If you do have diabetes, it can be life-threatening.\"\n\nHe cupped his mouth to scent his breath. \"I'll be damned,\" he said. \"Thank you.\" He got up and left with his aide, hopefully, to see the Embassy Doctor.\n\n\"Do you think the Alphas will go for it?\"\n\nFrank laughed. \"Would you trust the Russian Government after what they did?\"\n\n\"Hell no,\" I said. \"The Murmansk Pack will settle right into the old Bitterroot territory. Montana will feel like home in the winter. Beloretsk already has land and buildings between Vancouver and the Blue River Pack. I can't see either one going back to Russia now.\"\n\n\"Colletta and I should relay the offer in person. That will give me a chance to check out Coral's new Pack Pool. She's raising the bar!\"\n\n\"I know. I saw the pictures.\" We looked up at the screens in time to see Andrew's body loading onto Air Force One for the trip to the cemetery in northern California. I stayed by Frank, both of us meeting dignitaries as representatives of the Council. When it was getting dark, I'd had more than enough of that. \"We should get going.\"\n\nFrank finished off his shrimp and stood up, walking with me to the exit. Ninety minutes later, we were taking off from the airport. The flight was smooth, and we were north of Chicago when I got the call from Vic about Maria's heat. I didn't like her choosing Lance to be her heat partner, but it wasn't for an Alpha to decide. \"I don't want Maria out there alone, and Lance isn't going to be able to protect her while the heat is going on. He won't smell anything but her.\"\n\n\"I'm sending four teams of female warriors and sniper-trained Omegas to watch over them,\" Vic said. \"They'll form a perimeter and make sure Julio isn't around. I can't think of anything else to do; I can't use human males, and even our mated males feel the effects of her scent.\"\n\n\"I'll talk to Lance when they get back and make sure his mind is right.\"\n\n\"And I'll keep sending him places to look for his mate,\" Vic responded. \"I talked to a bunch of the unmated wolves while they were here. Most of them think they would have found their mate by now if he or she was a werewolf. They are talking about getting more involved in the human world, hoping to find one they can turn.\"\n\nIt was enough to give me a headache, and my Pack had more unmated females than any other. \"It sounds like we need more parties with the Steel Brotherhood,\" I said with a laugh.\n\n\"Can't hurt. Have a good flight, Alpha.\"\n\nI went back to my phone, looking at concept drawings our architect sent for the boathouse and the pool expansion. Frank was right about one thing; when this was over, we needed to visit my sister in Blue River. Coral was trying to one-up our pool, and I wasn't going to let her keep bragging rights.\n\nCh. 48\n\nMaria Meztli's POV\n\nRoadkill and Possum's Fishing Cabin, Northern Minnesota\n\nIt felt like he was splitting me in half, and I screamed out in pain as Lance filled me.\n\nHe paused, giving me precious seconds to adjust to his sudden intrusion. Slowly, the pain receded, replaced by a glorious feeling of fullness. When he started moving again, it felt fantastic. After only three hard thrusts, my body exploded in bliss as my insides gripping him to keep him from pulling out. I nearly passed out from the pleasure he was giving me. I let out a satisfied growl, encouraging his wolf to do it again.\n\nMy heat turned me from an innocent teenager to a wanton sex kitten in a few hours, and I loved every second of it now. Lance kept pumping away at me, his forelegs holding my rear end up when I lost the ability to control them. I lost track of how many times I came, especially after I felt his knot form. How the hell do she-wolves handle this? He was a big boy already, big enough to stretch me out good, but adding a softball-sized knot to the base of it was too much. I shrieked out in pain when he tried shoving it into my swollen pussy and tried to get out from under him. He didn't let me escape it, holding me in place and forcing himself in until it popped through. When his hips slammed all the way forward, it knocked the wind out of me. I laid there, my eyes watering from the pain, and then he started moving again.\n\nIt felt like he was trying to pull my insides out, then he'd shove them back in again. He could only move a few inches, but every time that knot backed up to the opening, it rubbed my G-spot and set off eruptions of pleasure. As his big dog dick moved, it stroked my tender insides, making me build quickly to a climax. I was starting to get lightheaded, as the orgasms were so close together I didn't recover from one before the next would hit.\n\nLance was getting closer, and his shortened thrusts were getting faster and faster. I yowled in pleasure as he finally slammed all the way forward, his seed filling me up deep inside. He howled in triumph as he finished, and then he collapsed. His knot tied us together, so we ended up on our sides to catch our breath.\n\nIt didn't last long. Our breathing went back to normal as we watched the moon rise over the horizon. I wanted more, I needed more, and wiggling around with Lance inside me had predictable results. He stayed engaged as he rolled me onto my stomach, and I pushed my hips up as he stood on his paws again. He planted his front legs inside my back legs, and with renewed energy, he started pounding me into a puddle again.\n\nThat was the way the whole night went. We'd have fantastic sex, and Lance would drain his balls into me, then we'd rest until I could get him going again. What Mom told me about going through heat was nothing like experiencing it. I couldn't get enough.\n\nWe fell asleep at some point, and Lance finally disengaged. I woke up at sunrise to the feeling of emptiness and a flood of fluids going down my leg. My Goddess, what a mess! I walked stiffly away from it, every muscle in my body protesting the movement. I stretched my body, my poor abused pussy protesting its treatment as I walked into the woods to find a place to relieve myself. I scraped dirt and leaf litter over it when I finished, hoping to minimize the scent.\n\nLance woke up, and I could tell he was just as sore. He walked stiffly to me, scenting my sex and giving it a lick. His touch sent a buzz through me, but Lance was too tired to do anything about it. Instead, he nudged me towards a trail that led to the lake.\n\nBy the Goddess, the cold water felt great! I moved out until the water was above my shoulders, letting the water and the waves clean my fur. Lance stood by me, scenting the air for any danger. There was a small fishing boat a long ways away, but nothing else. We spent a few minutes in the water before he nudged me back to the shore. The sun was rising, and a big jaguar next to a giant wolf was not something we wanted humans to see.\n\nWe walked into the woods again before we shook off the lake water. I followed him back up the trail to the car we had left last night, our clothes tossed onto the front seat. I could scent two werewolves in the air, but they weren't close by. When I got back to the car, we both shifted, and for the first time in eight hours, we could communicate by more than growls and touches. \"Are you all right,\" Lance asked as I put a hand over my aching innards.\n\n\"I'm sore, Lance. I'm REALLY sore,\" I told him. \"It's all right. You gave me everything I needed last night.\"\n\n\"I'm sorry about the first time. I wanted to prepare you so it wouldn't hurt so much, but my wolf was out of his mind with lust.\"\n\n\"It only hurt for a few seconds, and then it was the best thing ever. You rocked my world last night.\" I could tell he wasn't sure if I was lying to him to make him feel better. I walked over to him, hugging him with one arm before letting my hand drop. His cock twitched as I wrapped my fingers around it and pumped it a few times.\n\n\"We should eat something before we start again,\" Lance said. \"And I need some time to recover. You aren't the only one sore after last night.\"\n\n\"Fine,\" I said. \"I scented wolves out there.\"\n\n\"The Alpha wouldn't send you without protection, not with Julio still at large,\" Lance replied. \"There are four teams of two rotating patrols. No one is getting close to us without me knowing.\"\n\nThat made me feel better. I grabbed the bag the Omegas packed for me, and Lance grabbed his bag and the cooler. We didn't bother dressing; what was the point? He set the stuff down on the wooden porch and took the keys out of his jeans pocket.\n\nThe cabin wasn't big, maybe sixteen by twenty-four feet, but it was cozy. I set the bags on the bed as Lance brought the cooler into the kitchenette. I went around to the windows, opening the place up so it could air out.\n\n\"They weren't thinking we'd be cooking a lot,\" he said as he opened the Igloo cooler. I peeked inside; there was bread for sandwiches, packets of frozen meats, cheeses, nuts, and juice. \"High-calorie foods.\"\n\n\"I'm starving,\" I said. Lance made a plate of cheese and sausage while I drained a bottle of orange juice. We sat at the table to eat breakfast. I demolished my plate in about two minutes, licking my lips as I finished. I needed him; my body demanded sex, and he was going to give it to me. He was still eating, and his little friend was sleeping. \"I need you.\"",
        "\"Baby, please! I am NOT from Havana!\" He looked down at his lap. \"See? Not even a twitch.\"\n\n\"I bet I can wake him up,\" I said. I'd never done this before, but I'd seen it on the Internet. How hard could it be? I slid under the table and between his legs. His cock was small and floppy, and it was easy to suck into my mouth. I was playing with myself as I swirled my tongue around him. He finished eating and sat back, but my novice efforts didn't revive him. \"Dammit! I need you in me NOW! I'm desperate!\"\n\n\"Shift into your cat and get up on the bed,\" he told me. \"I'm going to pop some Viagra.\" I did so, lying on the cheap sheet covering the blanket. He went to the bag Possum had given me, taking out a dildo that was eight inches long and as wide around as my wrist, with deep ridges the whole length. \"If you want to get pregnant, we should try this.\"\n\nI was desperate for anything to sate my needs, so I just nodded and raised my rump. Lance coated the sex toy with lube, probably not needed given how I was dripping with arousal, then placed it at my opening. I groaned as he slowly worked it inside; I was sore, but it felt so damn good I didn't care. It wasn't as big as Lance in his wolf form, but it felt different. It was cold instead of hot, and the ridges were catching on my insides as it pushed forwards. \"You said a barb spurs ovulation, right?\" I nodded my head. \"Just relax.\"\n\nHe got it all the way in, twisted it a little, then yanked it back out. FUCK! I snarled in pain, looking back to see if my insides were lying bloody on the sheet now. I swatted after him with a paw, but he was fast enough to get out of the way. \"Did that hurt?\" I looked at him like that was the dumbest question ever. Of course, it hurt! Do you think I make that noise because it feels good? \"I'm going to put it back in, and this time I'll give you an orgasm before I do that again.\"\n\nI got back in position. The things I do to get pregnant, I thought to myself. Lance worked it in, then slowly pumped it while he used his fingers to help out. It started feeling good, and it helped tame the heat that was overwhelming me. He worked me into a quick orgasm, then into a bigger one. When it hit, he yanked the toy out, shoved it back in hard, then ripped it out again. The combination sent me over a cliff, and I woke up a few minutes later feeling like my insides had been scraped clean.\n\nI felt him climb onto the bed, his teeth grabbing at my neck as he pushed my hips up. I moaned as he pushed himself into me; he stretched me more but hurt me less. I screamed as his knot forced its way in at the beginning of our sex marathon. It was after sundown before he finally wore himself out.\n\nWe went out to the lake again, this time shifting to human form since no one could see us. \"How are you feeling?\"\n\n\"I think the heat is ending,\" I told him. That was a big advantage of having a male tend to your heat; it was over in a day or so, not in three. It didn't hurt that he fucked me six ways to Sunday. I was a woman now, and I enjoyed the hell out of it. We swam for a while, then made love on the beach before washing off again.\n\nThe bed was a complete loss; my claws had torn the hell out of it, and the smell of sex was never coming out. We changed the sheets and fell asleep, both of us exhausted.\n\nIn the morning, the heat was over. We ate a big breakfast, rolled up the mattress and sheets for disposal, and cleaned up the cabin. We were on the road by noon, this time with our escorts around us.\n\nIf I got lucky, I'd be pregnant, but then what? What would a baby with Lance be like? Would it be a wolf, a jaguar, a hybrid of the two, or a human?\n\nI guess we'll find out.\n\nCh. 49\n\nSpider Monkey's POV\n\nArrowhead Pack House\n\nI went with Vic to welcome Maria and Lance back with their guards. I was worried about Maria; she was so young, and I didn't know how she would handle selecting Lance as a baby daddy. Hell, I didn't know how Lance would act now that he'd spent two days screwing her silly.\n\nWe were waiting in the lobby of the Pack Clinic since Doc wanted to check on them after their return. Chase, Doc Olson, and Possum were standing with us. The medical staff was still learning about werejaguar heats, and Doc wanted to get blood tests and a physical exam once it was over. \"They just came through the front gate,\" Vic told me after getting the link. \"I can't believe this.\"\n\n\"What?\"\n\n\"You'll see.\"\n\nA minute later, Lance brought his SUV to a stop outside the clinic doors. Chase went to the driver's side door; when Lance opened it, it smelled like sex. Doc Olson was at the other side, gently waking up Maria. I did a double-take when Possum pushed a wheelchair over to her door. \"Seriously?\"\n\nChase helped Lance step out, and he looked exhausted and sore. I could see deep scratches on his arms, and he groaned in pain as he stood up. He walked slowly and painfully towards the entrance, his face betraying the pain.\n\nMaria wasn't any better. She moaned in pain as they moved her into the chair, her arms wrapped around her waist. I could see bites around the back of her neck, and she wasn't able to sit up. \"Damn, girl! Are you all right?\"\n\nMaria gave me a quick smile. \"I'll recover. Neither of us knew just how intense this weekend would be.\"\n\nI followed the group into the treatment room, where Doc insisted she shower before he did the exam. Possum helped me get her undressed and cleaned up; her wounds were superficial, but her body had taken a (literal) pounding. I did her hair while Possum cleaned her body. \"How was Lance? Was he good to you?\"\n\n\"Lance was perfect,\" she said as she sucked in a breath. I could see bruises on her from her butt down to her thighs. Her lady bits were swollen and red, and Possum had to be gentle around her. Possum stepped out to get douche supplies, as Lance's seed was still oozing out. \"I never believed such pleasure was possible! No wonder Mom always looked forward to it.\"\n\n\"Two days of hormone-fueled continuous sex? I'm up for that.\"\n\n\"I need some recovery time.\" She told us some stories as we finished up, then we put her in a gown and settled her on the examination table. \"I was worried about being a virgin, but that pain only lasted a few seconds. I was so damn horny, I didn't care, and then I couldn't think straight. I'm glad this only comes a couple of times a year, or it would kill me!\"\n\n\"I'm glad Lance took good care of you,\" I told her. \"Maritza missed you, but we kept her busy. She's taking her nap now.\"\n\n\"I need the hot tub, Spider. Muscles I didn't know I had are sore.\"\n\nPossum brought Doc Olson in, and we put her in the stirrups. Doc applied some analgesic cream to her lady bits, bringing her some immediate relief. \"As I expected, you have swelling and irritation of your labia and vagina.\" He walked over to the office refrigerator and returned with what looked like a popsicle. \"I'll give Spider Monkey the rest of these and the molds to make more. They are just frozen water; use them inside and outside for a few minutes, as long as you can stand, then let yourself warm up and do it again. Repeat every four hours until the swelling is gone. Here, try it.\"\n\nI'd never been fucked so hard I needed a frozen dildo for relief, but I'd never been a werecat in heat. It had to be cold as hell as she moved it around and in, but I could see how it would help. I would keep some in the freezer for those times Vic gave my ass a good pounding. \"Use that in the hot tub and let the water fight over you,\" I teased her.\n\n\"Can I use the hot tub, Doc?\"\n\n\"I suppose you can, but I'd wait until later. You look like you could use some sleep, but you need to eat first.\" Doc handed me a bag with the cream, the popsicle supplies, and some Aleve while Possum helped Maria back in the wheelchair. \"Spider, you'll need to treat her every four hours. Ice her down, then apply the cream.\"\n\n\"I'll take care of her,\" I promised.\n\nI asked the million-dollar question. \"When do we know if it worked?\"\n\n\"Pregnancy test would be in ten to fourteen days. I know our kind often finds out when the wolf refuses to shift, but I never asked about jaguars.\"\n\n\"We can shift while pregnant,\" Maria replied. \"Mom told me the baby shifts shapes as we do. It gets pretty uncomfortable to shift after about six months, though. She stopped with me at four months.\" It was another advantage her kind had over werewolves; she wouldn't be helpless while pregnant.\n\n\"No bleeding or issues while shifting?\" Doc was interested in this, as both Rori and Heather remained in wolf form because of miscarriage risk.\n\n\"Our bodies are stretchy, I guess. Jaguar mothers sometimes spend the entire pregnancy in cat form if they feel safer that way.\"\n\nVic came in to help her back to her room. \"How is Lance doing?\"\n\n\"He'll be fine in a week. He didn't lose ALL the layers of skin on his dick.\" I snorted as we left the room; the other exam room door was still closed.\n\n\"Can I talk to Lance?\" Maria was looking nervously at the door. The last thing she wanted was for him to get hurt.\n\n\"He's fine. He's talking with the Alphas now,\" Vic said. \"He got the same tube of cream, but he gets to sit in a tub of ice water instead.\" I snorted, and Maria looked at him to see if he was kidding. He wasn't. \"I think he's going straight to bed and will wake up tomorrow.\"\n\n\"Can you tell him thank you from me, and I'll see him tomorrow?\" Vic passed the message along.\n\nThe kitchen was ready for us, feeding Maria a lunch high in protein and carbs. She smiled at the Pack members and guests around; thank God the pheromones were gone! Ten minutes later, she was snoring away in the guest room of our house, and I was back in my office. \"Anything new, Brian?\"\n\nBrian Steele was working the secondary hacking computer. \"Just filling in blanks and adding information,\" he said. We'd been expanding the social networking analysis of the Sons of Tezcatlipoca organization started by the FBI task force. It was a daunting project, and it wasn't easy to get the information. With almost all active members dead or in prison, we were grasping at straws. Julio had at least one accomplice willing to assassinate the President of the United States, but who could it be? A widow of a member? Girlfriend? Hangaround? Someone outside the Club?\n\nThey had to know it was a suicide pact to go after Kettering, and they did it anyway. That level of commitment didn't just show up out of the blue.\n\n\"What do you have for me?\" Brian sent me a file of credit card transactions from the Denver clubhouse bar. I sent the information to a spreadsheet and started mining the data. Booze, beer, and food weren't free, and the bar often operated as a money-making venture for the Club. Friends, hang arounds (bikers interested in the Club who hadn't started prospecting yet), and sweetbutts (club sluts hoping to hook an Old Man) might have found their way in here if they didn't pay cash.\n\nThe records went back five years. Since the data included names, it was easy to sort. I started matching records up with the list of associates we already identified, deleting data blocks as duplicates got eliminated. After my first time through the data, I found 87 new names.\n\nNow the fun began. I sorted by the number of records, figuring the most active were the closest to the membership. I sat back when I ran the name of one Leonis Daniel Woodley, and his arrest history started churning out. He was fifty-six years old and had been an outlaw biker since he was eighteen, half of that in the Sons of Tezcatlipoca. His list of priors was a page long and included arrests for drug smuggling, assault, armed robbery, attempted murder, and manslaughter. If I hacked his juvenile record, I bet I'd find more.\n\nSo how come he didn't show up on our lists?\n\nLeonis wasn't an active member. He'd been a guest of the Colorado Bureau of Prisons for the last three years, serving half of his six-year sentence for assault with a deadly weapon on a police officer. From the news article on him, he fired a pistol at a pursuing cruiser while fleeing police. Prison overcrowding probably helped him out, as he somehow behaved enough not to ruin his chances at parole. He got out two months ago and promptly skipped out on probation, so there was a bench warrant out on him.\n\nCould he be our guy? \"Brian, can you ask Vic and the Alphas to come in here? I might have something.\"\n\nCh. 50\n\nLeonis Woodley's POV\n\nBloomington, Minnesota\n\nI opened the burner phone and called the number I'd memorized long ago. A woman picked up. \"Identification code?\"\n\n\"Jaguar Zero Zero Seven Xray.\"\n\n\"Voice match. How may I help you, sir?\"\n\n\"Arrange a meeting with our friends to thank them for their presents. Somewhere in the upper Midwest within a day.\"\n\n\"Call back in two hours,\" the voice said before the line went dead.\n\nI called back at the appointed time. The message was short and sweet. \"Our associates are not pleased with your recent failure.\"\n\n\"Then they should have given us three or four instead of just two.\" The fucking fighter jet ruined our attack, flying between us and Air Force One and soaking up the second missile. We were long gone before it landed, and I'd kept Julio out of sight since then. It hadn't been easy to get us out of the Arrowhead Region without getting caught, but I'd done it. \"Our goal hasn't changed. She can't hide forever.\"\n\n\"Leon Cemetery, about a mile south of Sparta, Wisconsin on Highway 27. By the maintenance shed at ten PM tonight. Bring an enclosed van or truck and be ready to head east. Will advise on next house at the meeting.\"\n\n\"Understood.\" I hung up and broke the burner phone in half, tossing the pieces in a trash can at the Mall of America. That was better than I thought, as I looked at the map on my phone. It was less than four hours away, a straight shot southeast out I-94 then south on 27. I looked at the map of the area; there were a few stands of trees near the boundary, but the rest was all open field. No one would be sneaking up on us. The country road wouldn't have much traffic, and few homes were around. It had easy access to interstates leading in three directions.\n\nI stopped to get some Cinnabon and two large coffees at the mall store before heading out the north mall entrance. I crossed the road and walked over to my Class C toy-hauler motorhome in the north lot. The Oracle had helped me with a new identity and cash after I got out; the motorhome gave me the mobility I needed now that all the Chapters were dead. I could blend in, just another old guy roaming the country with his Harley in the back, too old to make long runs in the saddle. The RV had hidden compartments, perfect for guns, drugs, or hiding the FBI's Most Wanted fugitive. I opened the door and climbed into the driver's seat, setting the cups in the holders and the box of rolls on the passenger seat. I drove until I was on Interstate 494 heading east, picking up Interstate 94. It was only when the traffic thinned out that I called back to Julio. \"It's safe now.\"\n\nI heard the curtain moving that separated the living area from the driver's seats. \"Finally. That smell has been driving me crazy.\" He grabbed the box and one of the coffees, taking it back to the dining area. \"What did she say?\"\n\n\"We're on for a meet tonight. Ten PM at a cemetery outside Tomah.\"\n\n\"Why?\"\n\n\"She only said to bring an enclosed truck and be ready to head East. They want the President dead, Julio. They won't accept a second failure.\"\n\n\"Then they better give me some good fucking stuff because I want that bitch dead too.\" He heated two of the rolls in the microwave and handed one forward. I set it on the flat console. \"Security is going to be a bitch. A sniper shot will be difficult.\"\n\n\"Maybe they are giving you a Barrett?\" That thing could reach out and touch someone from a mile away.\n\nHe snorted. \"The Secret Service will never relax security enough for outside events while I'm at large. You can't reliably make a long-range shot at a target moving from a building to a limousine, either. I'm thinking more along the lines of a bomb or a drone.\"\n\nI took a bite and washed it down with some good coffee. \"I want to get this shit done so we can get to that Arrowhead bitch.\" I'd signed on with Julio for revenge, and both he and the Oracle wanted revenge on the Federal Government first. I'd been begging for a chance to go after Rori Nygaard or their children to no avail. I'd done some reconnaissance of their Pack, and security there was tight. The weak spot was the public lake their home overlooked. A fast boat could get there before security could respond in force, but we wouldn't have much time. It would be a suicide mission.\n\nJulio promised we'd get them next, and Chase would get the Sons treatment for those who betrayed them. We'd rape his wife and kill his family in front of him, then torture him for a day before finally executing him with a shot to the face.\n\nI kept the cruise control on and enjoyed the drive out east. We had plenty of time before the meetup.\n\nChase Nygaard's POV\n\nArrowhead Pack House\n\nIf there was a way to have too much sex, Arrowhead Warrior Lance Skollson had found it. When I got him into the treatment room, I had to help him remove his jeans and underwear because he was in so much pain. He had bruising around his hips and thighs, his balls were red and swollen, and his dick looked like he'd whacked off with steel wool. \"How the hell did you function like this? How could you even drive?\"\n\n\"It didn't start to hurt until the drive back,\" he replied. I shook my head; the heat's effect on males was greater than I believed. It was one thing to keep him hard, quite another for his body to ignore the pain of his abused organ as he used it like that. \"Now it hurts so much I'm afraid to look at it.\"\n\n\"Probably a good idea,\" I told him. I had him take a cold shower and clean up first, since he smelled strongly of sex and lake water. An examination found no significant injuries, just scratches and friction burns. I found some sunburn gel with aloe and Lidocaine. \"I need you to coat your penis, testicles, and other sore areas with this gel. It should help cool the burning and provide some pain relief.\"\n\n\"Hand it over,\" he said. I squeezed some into his hands and let him take care of his junk. \"Ah, yeah. That feels better.\"\n\n\"This next part won't. I want you to hit the ice bath in the training room three times a day, for at least ten minutes each treatment, for the next three days.\" His eyes got wide; nobody liked the ice bath. \"That should keep the inflammation down. Apply the gel every four hours until it stops hurting. You're off duty status for the next three days, so eat and sleep as much as you can.\"\n\n\"Yes, Alpha.\" He looked up towards the door. \"Is Maria pregnant?\"\n\n\"We won't know for a while. Don't get your hopes up, Lance. From what she described, it's tough enough for their kind to get pregnant with a male jaguar. The chances of you getting her pregnant are slim to none.\"\n\n\"Then why let me go?\"\n\n\"Slim is still a chance, and Maria deserves that. Having a male attend her heat makes it shorter and much more pleasant, right?\"\n\nHis face got a little red. \"I guess. It was over in less than thirty-six hours.\"\n\n\"And the two of you had fun if the reports from your guards are true.\"\n\nNow he was pretty embarrassed. \"The specifics are a private thing between the two of us. You are correct in Maria being enthusiastic and energetic. I was thanking Luna this morning it was over because I couldn't have lasted another day. You'd have to send in a stunt dick.\"\n\nNow it was my turn to laugh. \"I'm glad that didn't happen.\" I walked to the door and let Rori in; she sat next to my chair. \"Now that we've got the medical stuff done, we need to talk to you about your relationship with Maria. How would you describe it?\"",
        "\"I'm not sure,\" he said honestly. \"I know we are friends, and I know she trusts me.\" He thought for a moment. \"I guess it's like being around a drunk girl. I don't know how much of this weekend was real and how much was the heat talking.\"\n\n\"She's not your mate, Lance.\"\n\n\"I know that, and so does my wolf, but that doesn't mean we haven't developed some level of a bond. I don't think I could have knotted her without my wolf having that.\"\n\nMy eyes got a little wide; the wolf controlled the knot, and it wasn't normal for that to come out unless the other person was your mate. It was a gift of the Goddess to increase the chance of pupping our mate, not to sex up humans. \"You tied to her?\"\n\n\"Every time,\" he said. \"Most of our sex was in our animal forms. Maria thinks the knot might have functioned like the barbed penis on a male cat. She liked it a lot more than that ribbed dildo; I'll tell you that.\"\n\nI sent only to Rori. \"Is it possible they are mates, but it's different between them?\"\n\n\"I have no idea. We should watch closely, especially if Maria picks Lance for later heats.\"\n\n\"I could send him away as we did with Greg.\"\n\n\"No, he's not pursued her, he's done nothing wrong, and I don't want her to think we see anything wrong with them being friends. You should talk to your brother about how his wolf recognized Heather as his mate. Maybe this is similar?\"\n\n\"What I don't know could fill a book.\" I let out a sigh. \"We don't mess with mates. I guess we let it ride and see what happens?\" Rori nodded, and I looked back to Lance. \"We're going to talk to Maria about the weekend as well. You haven't done anything wrong; it's just that we're in uncharted territory here. We need to learn all we can so Maria and eventually Maritza can have a family.\"\n\n\"I understand, Alphas. I'll stay away from Maria, so it doesn't feel weird.\"\n\n\"No,\" I said. \"Maria's heat is a natural part of her life, and you helped her through that. Don't be weird about it, but don't expect her to have sex with you outside the heat. It's all right to be her friend.\"\n\nHe thought about it and nodded. \"Am I still Maria's bodyguard?\"\n\n\"She doesn't need one full-time now that she's settled in and the Pack knows her. I don't want her outside without at least one guard, four when she leaves our territory. I'll let the Pack know. If you happen to be the one, that's fine.\" He smiled and looked back towards the door. \"We're done here. Get something to eat, take your ice bath, and get to bed.\"\n\n\"Yes, Alphas.\"\n\nI handed him loose-fitting shorts and a T-shirt for his walk back to the Pack House. When he was gone, I reached down and scratched Rori's ears. \"I hope we're doing the right thing here. I don't want another situation like with Greg Barks.\"\n\nRori growled as I opened the door for her. \"At least we don't have to worry about Maria's mate showing up out of nowhere to find her pregnant with another man's child.\"\n\n\"Let's go see how Maria is doing.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "pack",
        "alpha",
        "panther",
        "werecat",
        "heat"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-41-50"
}