{
    "title": "Helping Hands",
    "pages": [
        "\"It was so good to hear from you, honey. I can't remember the last time you called.\"\n\n\"I know, Mom. I'd rather email than call and I'd rather text than email. Calling seems like something from the Stone Age, you know?\"\n\nHis mother laughed and said, \"Yes, I do. Even your father and I text each other now most of the time. In fact, we sometimes text each other from different ends of the house rather than walk down the hall. It's just so much easier than calling and the other person can respond when it's convenient for them.\"\n\nZack understood why his mom and dad essentially lived on opposite ends of the big house he grew up in and let her comment stand on its own. \"So they really can teach old dogs new tricks. And by old dogs, I mean Dad, of course.\"\n\nHis mother laughed again and said, \"He misses you, honey.\"\n\n\"I know. Tell him I miss him too, okay?\" There was a pause before he asked another question. \"So how is Mrs. Kelly doing? It's been what\u2014a year now?\"\n\n\"Oh, more than that, sweetheart. Robert passed away a year ago March so that's...what? Fifteen months now? And to answer your question, Kendall seems to finally be doing better and I think it's largely because she stays so busy at the ranch. I don't think too many folks stop by to help anymore though, you know?\"\n\n\"That's too bad. She's such a nice lady. I really thought she'd have sold the place by now.\"\n\n\"We all did, Zack. But she's a tough woman. I don't think I've seen her cry once after the funeral.\"\n\n\"Well, maybe she'll find someone else who can help her out in all the ways her husband did.\"\n\n\"She's certainly pretty enough. From what I hear, a lot of bees have been buzzing around the hive, if you know what I mean, not long after Robert was laid to rest. Bees buzzing around the hive. That must have sounded terrible, huh?\"\n\n\"It's fine, Mom. I know what you mean. Shoot, I even had a crush on her when I was a kid.\"\n\nHis mother laughed and said, \"You and about a hundred other boys from around here! So when will you be home?\"\n\n\"I have finals every day this week until Thursday and that's it. I'll leave as soon as I can on Friday so I should be there early that evening.\"\n\n\"Well, I can't wait to see you! I'm gonna make your favorite dinner so don't eat anything after lunch, okay?\"\n\nAgain, there was no reason to mention graduation or bother asking why his parents wouldn't be attending. Instead of bringing it up, he just said, \"I won't, Mom. I promise. See you then, okay?\"\n\n\"Okay, dear. We love you!\"\n\nHe told his mother he loved her too, then hung up.\n\nZack Bartlett was finishing his final semester at The College of Veterinary Medicine and Biomedical Sciences in Fort Collins, Colorado, and would be heading home to Pueblo to take a job with a veterinarian he'd known since childhood and who was also getting ready to retire soon. He also planned to take a trip out to Vineland to see how Mrs. Kelly was getting along knowing the crush he'd had on her hadn't ended back in high school.\n\nShe and his mother, Beatrice Bartlett, had been casual friends for years after Zack's mom had taken him to the Kelly's ranch to learn to ride horses when he was ten. He'd spent quite a bit of time there over the years and since he'd gotten a little older, Mrs. Kelly, or Kendall as he'd been allowed to call her since high school, was the best part about his visits.\n\nKendall had just married Robert Kelly, whose family had owned the ranch for four generations, when Zack went there for the first time. \n\nKendall was from a small town in Wyoming. She loved riding and taught everything from how to tack up a horse and ride for pleasure to dressage up to and including the fourth level.\n\nNothing other than basic riding\u2014and Mrs. Kelly\u2014had ever interested Zack and yet she always made it seem like he was her most important client anytime he showed up. Then again, she had a knack for making every client feel special. During high school, she offered to let him ride all he wanted in exchange for doing work around the ranch and Zack had jumped at the chance. He not only got pretty good at riding, he ended up learning how to do a ton of new things as well as learning important virtues like being on time, taking responsibility for his actions, and working with other people. Seeing Kendall was a side benefit; one he never got tired of enjoying.\n\nHer husband wasn't nearly as people-friendly as her, and in some ways he reminded him of his own father, Zachary, Sr. Neither man was unfriendly, they just didn't show a lot of emotion. They got right to the point, said what needed to be said, and that was that. Kendall on the other hand, was not only beautiful but friendly, outgoing, and charming. Kendall dealt with the people and Robert ran everything else.\n\nLooking back it was obvious why he'd had such a huge crush on her. Her smile alone was enough to give him an all-day boner. Boner. \"Who even uses that word anymore?\" Zack thought to himself. He laughed when he thought about it, but it hadn't been a laughing matter back then. He'd often walked around with one for hours on end, day after day during those summers when she was outside where he could see her. There were times when he'd had...a boner...for so many hours, things physically hurt by the time he went home. But my oh my, was she ever worth the pain.\n\nKendall would be turning 35 this summer making her about 10 years older than him. Zack had just turned 25 last month as he'd managed to finish his BS in biology as an undergrad and vet school in seven years while most of the other students in his class had taken eight or even nine. Regardless of her age, Kendall was still the most beautiful woman he'd ever seen and that included the several dozen cute co-eds he'd bedded during his time away as well as a female professor or two who'd found Zack as attractive as he'd found them. \n\nIt was one of those brief affairs with a very attractive, much older woman of 42 that had given him the confidence he now had to try and pursue a relationship with Kendall when he got home. He knew better than to come right out and directly tell her the way he felt about her\u2014how he'd felt about her since high school. No, he'd just be friendly, make himself available, and wait patiently for an opportunity to present itself. Even then, he knew she might let him know in no uncertain terms she didn't feel the same way about him, but unless he found a way to make his feelings known, he'd never find out.\n\nZack had played high school football and ran track but wasn't even close to being good enough to play at the collegiate level. Then again, his course load kept him so busy he didn't have time for any team sports. Instead, he preferred to swim and work out on his own in one of the gyms on campus and that was more than enough to keep his 6' 0\" frame in superb condition when he wasn't home working on Kendall's ranch during the summers. Zack certainly wasn't the best looking guy on campus, but he was well into the top 10% and had no problem finding female companionship\u2014and plenty of it.\n\nBetween his hard body, his thick, dark hair, and perfect smile, getting a date or hooking up was a virtual given any time he wanted. As if that wasn't enough, Zack was also as a nice a guy as any girl could want to meet. He treated every one of them like she was the most important person in his life whether their time together lasted for several hours or several days and he often mentally thanked Kendall\u2014and his mom\u2014for instilling those values in him. It had paid off in spades as evidenced by the numerous notches in his belt over the last seven years. The notches were, of course, all figurative, as he neither kept track of the number nor ever bragged about his conquests to anyone. Each of them was something special to him in her own way. He'd laughed more than once whenever he remembered an oldie he'd heard many years ago: \"Big, little or short or tall, wish I could've kept them all. Mmmm, I loved them every one.\" And he had. Not romantically, but they were more than just a number to him to be sure.\n\nThe difference now was that he was finally at a point where no hook up or brief affair could fill the deep longing in his heart for that special someone. Like all guys and many women, Zack loved sex, but sex for its own sake wasn't enough anymore. He had no way of knowing whether or not Kendall might be 'the one' or even interested in him for that matter. But he'd been around her long enough to know she had all of the attributes he wanted in a wife and if there was a chance, however small...\n\nAs far as her exterior went, that was a no brainer. What made her so special and so desirable was that Kendall also had the kind of personality he knew he wanted in a wife and he was finally at a point where he was ready to commit to one person. That didn't mean she was ready again yet, but he had every intention of finding out. \n\nFor her part, Kendall was simply gorgeous. She was a true blonde who had this kind of long, silky hair that looked like some sort of soft, spun gold. Her eyes were a bright blue and always seemed to be so alive they sparkled. Zack knew eyes didn't actually sparkle or even twinkle, but Kendall's were just so...spectacular. He never asked if, like him, she'd worn braces, but her smile was every bit as gorgeous as his and like him, she had those soft, full lips that looked so very...kissable. \n\nZack laughed again as he thought about how many pairs of white socks he must have stained yellow during his high school years jerking off to some fantasy about Mrs. Kelly who'd suddenly decided she wanted him to kiss her or...maybe even something more. He laughed even harder when he thought about his poor mom finding them and what she must have been thinking about her 'perfect' son. She'd never said a word about it though, and those days were well behind him as he had no need to take things into his own hands or more aptly...hand...anymore.\n\nPretty much every guy he knew at college or vet school had a Kendall Kelly somewhere in his past. The gorgeous, older, untouchable woman they spent their nights dreaming about even when they were old enough to know it was never gonna happen. But a guy could dream, couldn't he? And if he was gonna dream, why not dream big? After all, sometimes dreams became reality, didn't they? Sure they did, and Zack new it.\n\nZack felt truly awful for her when he heard about her husband. He was a few years older than Kendall, but still way too young to die of a heart attack. There'd been no signs, no advanced warning. As he'd heard it, Robert hadn't come to bed with her that night and she didn't find him until the next morning when she saw him slumped over on the desk in their home office. \n\nIt was something called Acute Coronary Syndrome which was different than a heart attack. Zack now understood the difference and knew that ACS was a more sinister killer than myocardial infarction, the fancy name for a heart attack. The latter often gave warning signs like chest pain in men or nausea in women while the latter often happened without warning. Yes, in many cases involving ACS, there was angina\u2014the chest pain associated with heart blockages. But often there was a rupture in a weak area of the heart no one knew about that killed the victim instantly and without warning. One could could quite literally get off a treadmill while hooked up to a heart monitor, pass the test with flying colors, and drop dead shortly thereafter. Regardless of the medical differences, the results were the same and Kendall had been left to run that big old place on her own. \n\nHe'd helped out all he could last summer when he was home, but she was still in a kind of state of shock. She tried to be herself around him, but he knew she was only doing her best to put on a brave face. It was clearly an act. He'd never lost anyone close to him so he couldn't know exactly what she was feeling, but he did know she was hurting. He also knew he'd have done anything to take away her pain. What he didn't know was there was nothing he or anyone else could do. This kind of thing required time and time alone was all that could help. Even time didn't cure anything, it just made it possible to live again by allowing the person slowly let go of their lost loved one.\n\nHe wasn't trying to be selfish as he drove home later that week wondering if enough time had passed for her to consider dating other people, let alone a younger man just starting a new career. He just knew it was the right time, for him at least, to finally let her know how he felt. For that matter, she may have already found someone else and that ship might have sailed. As with grief, only time would tell. Selfish or not, it was the biggest question on his mind followed closely by the many questions he had about starting his new career.\n\nAs he got ready to turn into their driveway, his mother came running outside as she'd been watching for him for hours. She hugged him so hard he thought he'd pass out before helping him carry his things inside. \n\nAfter putting them away, Zack headed toward the study in their home to say hello to his dad. \"Oh, look who's home,\" his father said. He didn't get up or even smile. \"I know your mother is glad to have you home. She's been counting the days until you finished school.\"\n\nHis dad had been a certified master electrician who'd been seriously injured on the job when he fell from some scaffolding when Zack was in high school and had never been able to work\u2014or walk\u2014since. The man he'd always loved and looked up to changed overnight. He'd become withdrawn and distant. He'd never been as loving as his mother, but the reasonably close relationship they'd had was gone and while it tore Zack up inside, he was painfully aware that unlike his father, he could still walk and play sports and...make love to a woman so he accepted the new reality. He hated it, but he understood. \n\nHis father used the disability as an excuse not to do anything he didn't want to do and that included coming to either his college graduation or his graduation from veterinarian school. Because his parents weren't coming, Zack didn't bother going, either. They'd mail him his diploma which he didn't need to start practicing veterinary medicine. As long as the state had his certification on file\u2014and his check paying the required fees\u2014he was fine.\n\nHe and his mother talked almost non-stop during dinner with his father occasionally chiming in with an, \"Uh-huh\" or maybe, \"Oh, I see.\" That was something both of them also accepted as part of their new reality since the accident.\n\nAfter another home-cooked meal of bacon and eggs the following morning, Zack wanted to drive over to the clinic and meet with Dr. Weber and discuss getting settled and possibly taking over the business at some point. Zack had known Jerry Weber most of his life as he'd been his parents' vet when they had pets as Zack was growing up. After the accident, his father didn't want any animals around even though he'd privately cried when they had to have their Golden Retriever, Duke, put down a year later after suffering kidney failure.\n\nDr. Weber was now 68 years old and still in very good health, but he was ready to retire and finally do the traveling he and his wife had talked about all their lives. The practice wasn't huge, but he'd owned the entire facility free and clear for quite a few years and had managed to put away a sizable nest egg when the time came to call it quits. Looking down the road toward that end, he'd taken a personal interest in Zack when he told him he'd been accepted to a veterinarian program and last summer he'd offered him a partnership contingent on Zack's successful completion of school. \n\nZack smiled as he drove up and saw the clinic. For the first time ever, he drove around to park in the back where a sign with his name on it stood reserving him a spot. The black letters on the white sign read: Zachary Bartlett, Jr. DMV. \n\nHe got out of the car and walked up to the back door and that's when he realized he didn't have a key. He turned to start walking back around to the front when he heard the door open. \"Zack! Hey, come on in!\" he heard a female voice say.\n\nHe turned around and saw Cassandra Evans, Dr. Weber's new assistant, smiling at him. Zack smiled back and said, \"Hey, Cass. It's good to see you!\" \n\nHe hugged her and she said, \"It's good to see you too, Zack.\" There was a funny look on her face for a moment before she said, \"Sorry. Make that Doctor Bartlett.\"\n\n\"It's okay, Cass. Zack is just fine,\" he told her. Cassandra was maybe 21 and very cute in her own right, and she'd let Zack know the first time they met she was interested. She hadn't thrown herself at him or directly hit on him, but she did let him know she was free and available if he was ever so inclined.\n\n\"Well, thank you, but I won't call you by your first name unless we're alone,\" she said with a smile as she emphasized the word 'alone.' \"You earned your degree and you deserve to be called Doctor Bartlett.\"\n\nZack smiled again as he walked passed her and went inside. He heard the sound of a dog barking as he wound his way through the patient care area. \"Looks like business is booming,\" he said noting how nearly every cage was filled.\n\n\"Dr. Weber has really been looking forward to you getting here, Zack...sorry...Dr. Bartlett. He's been working six days a week for so long I'm not sure he knows how to relax let alone retire. So yes, we have been extremely busy.\"\n\nHe stopped to look at the dog that was barking and said, \"This guy's in bad shape.\"\n\n\"Oh, yeah. That's Gizmo. He's 16 and he's being put down this afternoon. He went lame yesterday after barely being able to stand up\u2014even with help\u2014for the last two weeks. His owners brought him in early this morning to see if there's anything that can be done for him. Unfortunately, there isn't. They'll be back in a couple of hours and...this might be the first official thing you have to do.\"\n\n\"It comes with the territory, Cass. I've been dreading that part of the job since I started vet school, but sometimes it's the only humane thing to do. If the animal is in pain and especially if it can no longer walk then...\"\n\n\"Zack! Boy am I glad to see you!\" he heard a baritone voice call out.\n\n\"Dr. Weber!\" Zack walked over to him and shook his hand but Dr. Weber pulled him in close and hugged him. \"Congratulations, Doctor!\"\n\nZack's own father hadn't even acknowledged his son's graduation let alone complimented him on his accomplishment. \"Thanks, Dr. Weber,\" he told him.\n\n\"You can call me Jerry now, Zack. If you're comfortable with that.\"\n\n\"That might take some getting used to you so until that happens, I think I'll stick with Dr. Weber.\"\n\n\"Suit yourself,\" he said pleasantly. \"Okay, let's go take care of the mountain of paperwork in my office then I'll take you to yours and let you get set up. You can start immediately or come back on Monday. I'm sure you've got a lot to do having just got home, so again, that's your call.\"\n\n\"I'm ready to go right now,\" Zack told him having been a little surprised to learn he was needed this soon but unwilling to put off getting started.\n\n\"Great! Let's get going on these forms so we can take care of all the things the state needs, whatever the insurance company has to have, plus self-employment stuff for social security, W-4 forms, and a whole lot of other\u2014crap.\" He smiled and said, \"Bureaucrats run the country and they're all a bunch of tree killers!\"\n\nDr. Weber hadn't been kidding. There was a stack of papers over an inch thick , and Zack had to wade through every one of them. Many forms were excruciatingly dry and boring, but they all had to be filled out. By the time he was done he felt like he'd just finished a hand-written essay exam in a blue book, something he wouldn't miss doing ever again.\n\nZack's office was just a little bit smaller than his mentor's, but it was already fully wired and ready to go. He'd just need to personalize it and learn how to use the various programs and applications needed to document patient care, order prescriptions, and other in-house necessities and he'd be all set.",
        "\"Okay, I'm ready to get to work,\" he told Dr. Weber.\n\n\"Not yet,\" the older man replied. Cassandra handed him a white lab coat and Dr. Weber showed it to Zack. His name was embroidered in cursive over the left breast pocket with the letters 'DVM' after it. \"Turn around young man,\" he told him. Zack did so and Jerry helped him put on the visible sign of his new profession. \"Now you're ready to go to work,\" he told him with a clap on the shoulder. \"I'm real proud of you, Zack.\"\n\nZack wasn't the emotional type, but this man had lately been more of a father to him than his own dad and he felt himself swallowing the lump that had formed in his throat. Cassandra was also smiling at him and said, \"I'm very proud of you, too...Doctor.\"\n\nZack had to admit she really was a very pretty girl. She'd gone to the same high school he'd attended then did two years at a local community college earning her veterinarian assistant's qualifications. She'd also interned there last summer and that's where they'd first met and she'd been working there since. \n\nCassandra found a way to let him know within his first few hours as a vet she wasn't dating anyone implying rather strongly she was still very open to being asked out. Zack tried not to laugh as he imagined Cassandra waiting for him to come home hoping something might happen between them while he was doing the same thing only with another, older woman in mind. All he told Cass was he was surprised she was still single considering how attractive she was and hoped that would fend her off for a while.\n\nAs he thought of Kendall for the first time since coming to work, not expecting to actually start work, he said to Dr. Weber, \"So how's Mrs. Kelly\u2014and her horses\u2014doing these days?\"\n\n\"Kendall? Oh, she seems to finally be doing better. I saw her here in town just last week. We didn't have a chance to talk, but I did wave to her and say hello. She was with some nice-looking guy who was opening the door for her at The Pantry.\" He paused for a moment as he looked down at his clipboard then said, \"It's really good to see her getting back on her feet again.\"\n\nThe Pantry was one of Pueblo's many restaurants and Zack got that sick feeling in the pit of his stomach when he learned Kendall was already seeing somebody else. That feeling quickly passed as he told himself this was just an opportunity presenting itself in the form of a challenge. He wasn't sure he believed his own propaganda, but for now it was all he had to offer himself so he clung to it for all it was worth.\n\n\"As to her horses, they're all doing just fine. In fact, I delivered a foal out there about four months ago. Strong little colt. Might even be a good stallion for breeding. If not, we'll probably be gelding him soon so he can be used as a riding horse. Time will tell, right?\" he quipped. \n\nZack smiled but managed not to laugh at the use of the very phrase he'd used himself several times recently.\n\n\"She's got another mare that's gotta be getting close now too, so we'll probably be getting a call from her soon and you can see for yourself.\"\n\nJust then an older couple came in and Zack could tell who they were without asking. \n\n\"So...what's the verdict, Jerry?\" the man asked.\n\nDr. Weber shook his head and that answered their question. Zack saw the woman's eyes tear up and hoped against hope he wouldn't asked to put their dog down.\n\n\"I guess they only other question is whether or not you want to be with him,\" Dr. Weber said with genuine concern.\n\n\"No...but we can't not be,\" the man said. \"You ready?\" he asked his wife.\n\nShe began crying as they headed toward the back. Zack breathed a sigh of relief when Dr. Weber didn't even turn toward him. Ten minutes later the couple came back out. The woman was still crying and the man also had tears in his eyes. \n\n\"He had a long, full life, honey,\" the man said to his wife, his voice choked with emotion.\n\n\"I know,\" she replied quietly. \"It was his time.\"\n\nDr. Weber shook hands with the man and hugged the woman as they thanked him again for taking care of their beloved Gizmo his entire life. \"He was a wonderful member of the family, and you're the ones who took care of him. It was my honor to help you do that,\" Dr. Weber told them.\n\nCassandra had the unpleasant task of taking care of any remains after an animal had to be put down. Zack didn't know that until later and when he found out, he promised himself he'd never make her do it alone again.\n\nWith that behind him, Zack finished out his first day rather uneventfully. Before he left he knew how to take care of most of the basics involving the vet-specific programs on his computer and felt satisfied he could muddle through with some help until he had some actual experience under his belt. He thanked Dr. Weber again for hiring him and said goodbye to Cassandra as they locked up. \n\n\"Oh. Hold on,\" Doctor Weber said. He fished around in his pocket and pulled out a long, silver key and handed it to Zack. \"You might need this next time.\" He also gave him the six-digit code for the security system at the same time.\n\nZack grinned as he thought about his first attempt to get inside as he accepted the key. \"See you Monday?\" Zack said.\n\n\"Bright and early!\" Dr. Weber told him.\n\nAs he went to get in his car, he sensed a presence behind him. He hadn't noticed Cassandra following him and was slightly started when he saw her reflection in his window. \n\n\"Sorry. I wasn't trying to sneak up on you,\" she said. Her hands were clasped just below her waist as she asked, \"So how was your first day?\" Her smile was bright and pleasant.\n\n\"Not too bad. Other than the paperwork and Gizmo, of course.\"\n\n\"Yeah, that's always so sad. Even when there's no other option left.\"\n\n\"So um...I guess I'll see you on Monday then.\"\n\n\"Oh, right,\" she said. As Zack opened his door, Cass said, \"Well, unless you'd like to maybe hang out or something.\"\n\nNormally Zack would have politely declined, but with Kendall already seeing someone and him having nothing to do until Monday he said, \"You know what? That might be nice. What did you have in mind, Cass?\"\n\n\"Well, we could maybe go see a movie or get something to eat. Dutch treat, of course.\"\n\nZack smiled and said, \"No, sorry. I can't do that. If I go out with a girl\u2014even if it's not a date\u2014I pay.\"\n\nHe saw Cass's smile fade away when he let her know this might not be a date as she said, \"Oh, okay.\" The smile returned as she told him, \"I should expect nothing else from a gentleman like yourself though, huh?\"\n\n\"So...a movie?\" Zack asked.\n\n\"Sure. I could meet you at the Tinseltown at 5 o'clock if that works for you.\"\n\nZack didn't ask what movie she wanted to see nor did he insist on picking her up. He'd pay for her ticket and buy her popcorn, but this really wasn't a date, at least not in his mind. It was just hanging out. \"Okay. Sounds good. See you at five, Cass.\"\n\n\"Okay,\" she said cheerfully. \"See you then, Zack!\" She stood there smiling the whole time as she watched him back out. She waved as he pulled away and Zack politely waved back wondering if this might not be a mistake.\n\nHe slept in the following morning, something he almost never did, even on Sundays. Zack was either studying or working out or doing something. Sleeping was a necessity, not something he enjoyed. He spent a lazy morning at home then had lunch with his mom and avoiding his dad by going to a local gym to work out. He came home, showered and laid low until he got ready to leave. \"I'll be back later,\" he told his mom.\n\n\"Got a date already?\" she teased her perpetual smile turned on.\n\n\"Not really. Just seeing a movie with Cass.\"\n\n\"Oh, Dr. Weber's assistant. She seems nice.\"\n\n\"It's not a date, Mom. We're just watching a movie together.\"\n\n\"Oh, okay. Um...does she know it isn't a date?\"\n\n\"I think so,\" he told her.\n\n\"Well, you know how girls are, Zack. Especially when it comes to a nice looking boy like yourself. She might be thinking or at least hoping it's something more.\"\n\n\"Don't worry, Mom. I won't hurt her feelings,\" he assured her.\n\n\"I have no doubt about that. You've always been so sweet to all the girls.\"\n\nZack didn't laugh or even smile as he thought back on how many girls he'd been 'sweet' to since high school. \"See you later, Mom,\" he said as he headed out.\n\nHe spotted Cassandra immediately. She was wearing a cute little top and a pair of shorts on this warm summer day. She had a sweater draped over her arm along with her purse and Zack knew that was because girls always seemed to get cold inside when they guys they were with found the temperature comfortable or even too warm.\n\n\"Hey there,\" he said as he walked up to her. \"You look very nice.\"\n\n\"Well, thank you!\" she said smiling brightly at him. \"You too, by the way.\"\n\n\"So what are we seeing?\" he asked her.\n\nShe gave him two choices and once they made their decision, Zack bought two tickets and went inside. Cassandra was talking non-stop as they got in line to buy snacks, but Zack didn't hear a word she said after he saw the golden hair two lines over and in front of him. She didn't even need to turn around. He knew it was her. Even from the back, she was the most gorgeous creature he'd ever seen. That she was wearing a pair of tight jeans and a cute, sleeveless knit top was an added bonus. \n\nConsidering she was with the guy Zack assumed Dr. Weber had told him about, he had no intention of even saying hello. Kendall was laughing and being playful with the guy, both signs of a romantic relationship. \n\n\"Zack? Hey! Zack?\"\n\nHe turned toward Cassandra and realized they were next in line. \"What size do we want?\" she asked pointing to the various tubs for popcorn.\n\nHe looked back over and Kendall and her male friend again as he said absent-mindedly, \"Get whatever you want, Cass.\" He saw Kendall laugh again then playfully push the guy she was with sending more signals this was more than a friend.\n\nZack had no idea what the movie was about and forgot what it was even called as he made sure they sat well behind Kendall and her...boyfriend. He sat there and stared at them the entire time paying absolutely no attention to what was happening on the screen. The only encouraging thing was that there were no additional signs of affection. They never kissed, he didn't put his arm around her, and she never laid her head on shoulder. Zack's hope was perhaps they'd just started dating and it wasn't serious yet. \n\nTo his complete surprise, Zack felt Cassandra's arm slip inside his. He looked over and saw her crying. \"Hey, are you okay?\" he asked.\n\n\"This is just SO sad!\" she told him. Evidently the man the lead actress loved had died leaving her all alone. \n\n\"Oh, yeah. It is sad,\" he said having no idea what was going on. Moments later, Cass rested her head on his shoulder and Zack's only thought was hoping Kendall wouldn't turn around and see them. When the movie ended, Zack rushed them up and out and to his great relief Cassandra didn't ask him why he was in such a hurry.\n\nOutside Cass said, \"That was such a good movie.\" She noticed Zack wasn't paying attention to her and seemed to be looking around for someone. Undeterred she asked, \"Did you like it?\"\n\nZack saw Kendall and her...guy...leave the theater and to his relief, go the other direction. \"Um, yeah. It was really great, Cass.\"\n\n\"So...do you wanna maybe get something to eat?\" she asked hopefully. \n\nZack watched Kendall disappear from sight and told her, \"You know, I think I'll pass on that.\" He saw the disappointment on her face and said, \"But I had a really nice time, Cass. I'm glad we did this.\"\n\nHer smile returned and she said, \"Me, too.\" They stood there in silence for a few moments before she said, \"Well, okay. I guess I should get going then.\"\n\n\"Do you need a ride?\" Zack asked her.\n\n\"No, I have a car. Well, it's my dad's car, but I do have a way home.\"\n\n\"Okay. So I guess I'll see you tomorrow then,\" he told her.\n\nZack was being polite and smiling at Cass when she stepped forward and kissed him on the cheek before saying very quickly, \"Bye, Zack and thank you for going out with me.\" She turned around just as quickly and headed off leaving Zack to wonder whether or not Cass understood this wasn't really a date. There wasn't anything more he could do about that for now so he headed back to his car to go home.\n\nHis mom had kept dinner warm for him just in case, and he was glad she had. He was starving and her pork chops and mashed potatoes and gravy were one of his favorite meals. They made small talk about the movie with Zack avoiding discussing the plot or what he'd seen. Or rather...whom he'd seen.\n\nOn his first full day at work, Zack managed to keep Cass at arm's length as he saw one animal after another then dealt with the paperwork that inevitably followed. He did his best to chat with each owner as he knew he needed to develop a rapport with them if he hoped to keep their business once Dr. Weber retired. He was an immediate hit with all the women who brought their pets in and he thought he'd gotten along well with the handful of men, as well.\n\nHe also now felt very comfortable with the programs he needed to use and while he hadn't mastered them, he could navigate through them with relative ease. As he was finishing up the paperwork on his last patient, a rabbit needing to be neutered, Cass came in and asked if he needed anything else. \"No thanks, Cass. I'm good. But thank you for all your help today. This place would fall apart without you.\"\n\nBefore she could answer he heard Dr. Weber say, \"Amen to that!\" He'd been just outside talking to someone and overheard his comment. He put his arm around Cass and said, \"She's the glue that holds this place together!\"\n\nCass clearly loved the attention and said, \"Ahh! That is so sweet, Dr. Weber.\"\n\n\"Well, it's true,\" he told her. \"How are things with you, Dr. Bartlett?\"\n\n\"I'm getting the hang of it,\" he told the older man. \"Cass has been invaluable showing me the ropes.\"\n\nCass smiled sweetly at him as they all heard the phone. \"Excuse me,\" she said as she ran to get it. \n\n\"Dr. Weber? It's Mrs. Kelly,\" they both heard Cassandra call out. \n\n\"I'll take it in here,\" he called back. \"Do you mind?\" he asked pointing to Zack's phone.\n\n\"No, of course not,\" he said getting out of the way.\n\nDr. Weber picked up the phone and said, \"Hi, Kendall. Is it time?\" He laughed then said, \"Well, why else would a beautiful woman like you being calling an old man like me?\" He laughed again then said, \"Okay. We'll there in a few minutes. Oh, I'm bringing my new partner with me, by the way. He was asking about you a few days ago.\" There was another pause before he said, \"Yes. Zack. Or\u2014Doctor Bartlett as we sometimes call him around here now.\" Dr. Weber winked at him as he told Kendall, \"All right. We'll be right there.\"\n\nHe looked over at Zack and said loudly, \"Road trip!\"\n\nThey grabbed their bags, told Cass they'd see her tomorrow and headed out toward Vineland. The ranch wasn't in Vineland. It was in between Vineland and Pueblo which was a big part of the reason why the Kellys had used Dr. Weber, whose practice was in Pueblo, as their vet for so long.\n\nDr. Weber drove as they headed east on US 50 before turning north onto 233. Zack noticed his heart was beating faster as he saw he saw the ranch come into view. They turned onto the access road that was essentially a half-mile-long driveway before coming to a stop near the barn. \n\nZack hadn't been there in a year, but nothing had really changed. He knew exactly where this mare would be waiting for them and he assumed Kendall would be there, as well. What he hadn't expected was to see the guy with the great hair standing next her as they walked into the barn.\n\n\"Dr. Weber! Thank you for coming on such short notice!\" she said as they hugged. \n\nShe looked over at Zack and said, \"Zack. Hi!\" She hugged him too, and Zack felt his heart skip a beat as he smelled her familiar perfume and touched her long, blonde hair with his hand as he hugged her back. \"Look at you. All handsome and a veterinarian! I can't believe you're that same skinny boy who came out here to learn to ride way back when.\" \n\nHer smile was killing him as she sized him up. \"Wow. I am just so proud of you, Zachary!\" Kendall was the only person other than his mother he allowed to call him by his full name. He always hated it, but when Kendall said it, it sounded like sweet music to his ears.\n\n\"You're looking amazing as always,\" he finally managed to say.\n\n\"Hah! You're such a good guy. I like look a mess after working all day around here and you still find a way to make me feel beautiful,\" she said as the man who'd just been standing there stuck out his hand.\n\n\"You must be Zack,\" he said as they shook. \"I'm Barrett.\"\n\nZack looked him over and guessed him to be a few years younger than Kendall. He was as tall as Zack and in very good shape for any guy but especially for someone who probably around 30. \"I am. It's nice to meet you too, Barrett.\"\n\nZack wanted to ask who he was and more importantly, what he was to Kendall, but the mare was in need of immediate attention so pleasantries and formalities would have to wait. The only positive he could see in this was that Kendall obviously had no issue with dating younger men and Zack took hope.\n\nZack had assisted in the delivery most animals like dogs and cats as well as both calves and foals at a nearby farm in vet school, but he'd never flown solo. As with Gizmo, Zack was relieved when Dr. Weber took the lead and only asked Zack for his assistance as needed. His real concern was the mare might need a C-section and although he knew how to perform one, having Dr. Weber there was great.\n\n\"It's a good thing you called when you did, Kendall,\" Dr. Weber told her. \"She's ready. Should be any minute now.\" He pulled on an arm-length kind of plastic glove and felt around inside the mare's body. \"Everything is lined up just right so this looks like it'll be an easy one. Then again, you never really know until it's over.\" He looked up at Kendall and said, \"Okay, easy for us anyway.\"\n\nThe mare neighed and within seconds, the foal's body was being pushed out shrouded in a thick gel-like coating. Dr. Weber grabbed its feet and began to pull as the mare pushed to expel her offspring. Seconds later, the little filly lay on the floor taking its first breaths flailing its skinny little legs every which way. Just moments later, she struggled to her feet, a mess of bones and wet fur, and began walking around on her still-wobbly legs. The little filly fell down once but bounced right back up and began nuzzling her mother's neck. The two females did a kind of dance for a while as the filly searched for a source of milk while the mother sought to shed the afterbirth. Within half an hour, the mother was ready to nurse and the hungry little foal latched on for her first meal.\n\n\"I think they're both gonna be just fine, Kendall,\" Dr. Weber told her. \"We can stay with them for a while if you'd like, but I don't think that's necessary.\"\n\n\"Well, you're both more than welcome to come in and have something to eat or at least a glass of iced tea,\" Kendall told them. \n\n\"Well, that would not only be very nice,\" Dr. Weber said, \"it'll give these two a little time alone before and let us come back out and check on them. Zack? You up for some iced tea?\"\n\nAs soon as they opened the door, Kendall's Labrador Retriever, Buckshot, began wagging his tail and sniffing new crotches. \"Hey, buddy! How've you been?\" Zack asked as he bent down to pet him.\n\n\"He's been doing pretty well for being ten years old. He still eats more like a horse than a dog, but he gets plenty of exercise running around with us all day,\" Kendall told him. She turned toward her brother and asked, \"Barrett? Would get you some glasses down while I get the tea, please?\"\n\n\"Sure thing,\" he told her. Kendall poured them each a glass over crushed ice and thanked both of the vets for coming out on such short notice.",
        "\"Our pleasure,\" Dr. Weber said.\n\nShe then turned to Zack and said, \"I'm so glad to see you again, Zack. I knew you were coming home soon, but I also knew you'd be busy so I didn't expect to see you anytime soon.\"\n\n\"Well, I guess this was...fortuitous, then.\" \n\nKendall laughed and said, \"Yes, it was.\" She took a drink then looked over at Barrett and said, \"I also knew you wouldn't be available to help me out me anymore so I had to find someone to take your place.\"\n\nZack tried not to let his growing jealousy show as he said, \"There really is a lot to do around here. It must be nice to have someone to lend a hand.\" \n\n\"Oh, I don't know what I'd do without him. He's been such a godsend, you know?\" Barrett smiled sheepishly but didn't say anything.\n\nZack decided to mention having seen them and said, \"I think I saw the two of you at the theater Sunday evening.\"\n\n\"You were there, too?\" Kendall said with astonishment. \"And you didn't even say hello?\" She was giving a look that was meant to be playfully shaming. \n\n\"I didn't want to butt in during your date or anything so I...\"\n\nBarrett's loud laughter filled the room with Kendall's echoing his as she spoke. \"Date? Oh, my heavens no! Barrett is my little brother! Well, my younger brother. Besides, he wouldn't be caught dead with a woman my age. Your girlfriends are all what, Barrett? Maybe 18 at the most?\"\n\n\"Hey, I resemble that remark,\" he joked. \"For your information, I've dated girls who are older than that.\"\n\n\"Oh, okay. Then make that 19 or 20,\" Kendall teased. Barrett put his hands up in an 'I'm guilty' kind of way before Kendall said, \"Seriously though, he's been here the last couple of weeks helping me get ready for the summer rush of new riders, setting up a new dressage course, and a hundred other little things. I couldn't have made it without his help.\"\n\nZack was so stunned by the revelation he couldn't speak for several moments. \"You know, I see the resemblance now,\" he managed to blurt out. Barrett had those same vivid blue eyes and the same high cheekbones as Kendall, but Zack hadn't noticed before. That was most likely due to his ASS-uming the worst then being unable to think beyond his assumptions.\n\n\"In fact, I've gotta be heading home tomorrow. I can pretty much work from anywhere I have a computer, but I do have a couple of meetings I have to attend next week and I really can't stay any longer,\" Barrett explained. He took a long drink himself then looked over at Kendall and said in his best Terminator voice, \"But I'll be back!\" Everyone laughed politely before Barrett finished. \"I promise. I just need to go home for a few days and then I'll come back and keep helping out for as much of the summer as I can.\" \n\nHe saw the look of relief on his older sister's face then said to Zack, \"I was wondering when I'd get to meet you, Zack. You know Kendall talks about you all the time.\"\n\n\"I do not!\" she said defensively to her brother. She looked over at Zack then back at Barrett and asked, \"Do I?\"\n\nBarrett laughed and said, \"Not all the time. But his name seems to come up more than anyone's except for maybe Robert's.\" \n\nThere was an uncomfortable pause at the mention of her late husband before Kendall said, \"It's okay. I'm not grieving anymore\u2014not outwardly anyway. I still miss him\u2014a lot\u2014but I feel like I'm finally ready to move on with my life. I know he wouldn't want me to spend the rest of my life alone.\" She paused for a moment then said rather wistfully, \"Living alone pretty much sucks.\" \n\n\"Well, you need to keep on moving, Kendall,\" Barrett said. Everyone was waiting for the other shoe to drop as he added, \"If the quality of guys you've dated these last couple of months is any indication, you should not only move on but keep moving, and never stop moving!\"\n\nShe gave her brother a playful dirty look and said, \"Those were my warm-up guys. You know, the ones who set the bar so incredibly low the first decent guy who comes along is gonna look pretty darned good in comparison.\" \n\nThen she smiled at Barrett and said, \"All kidding aside, a large part of the reason I'm doing so much better is due to this big lunkhead's love and support as well as his generosity with his time...and money.\" She looked at the two veterinarians and said, \"I honestly thought we were...I...was going under this winter until my baby brother came along and loaned me enough money to keep this place afloat. Based on the number of bookings we have lined up, I might even be able to start paying him back pretty soon.\"\n\n\"No hurry, Sis,\" he told her. \"I'm doing fine so whenever is soon enough.\"\n\n\"Doing fine?\" Kendall snorted. \"This guy's in advertising and he's already richer than Job,\" she said nodding at her brother and making reference to the biblical character who lost his family and all of his riches when the devil supposedly tested his loyalty to God.\n\n\"Well let's hope I don't end up like Job. I don't think I'd look good covered in boils,\" Barrett said with a quiet chuckle. \"Those young girls I date don't seem to go for that kind of thing too much these days.\"\n\nDr. Weber finished his iced tea and said to Zack, \"You ready to go check on our girls again before we head out?\"\n\n\"Yes indeed,\" he replied.\n\nAs they walked back out to the barn Kendall said, \"I know you're busy, Zack, but if you ever have a free evening, I'd love to make dinner for you. You know, so we can catch up and well, it's also a way for me to say thank you for all your help over the years.\"\n\nZack laughed and told her, \"In that case, I'm the one who owes you dinner, Kendall. After all, you not only taught me how to ride, you let me do so for free for years.\"\n\n\"Yes, but I extracted a plenty of blood...or at least sweat...in return for it. But hey, if you really, really want to buy me dinner...\" Kendall was smiling that dazzling smile of hers and playfully biting her lower lip.\n\nDr. Weber chimed in saying, \"You better not pass up an opportunity like that Zack, or you may not get another one. I have it on good word that Miss Kendall here has no shortage of potential suitors lined up.\" He looked over at Kendall and said, \"Of course, I can't vouch for their quality after what we just learned about the early birds.\"\n\nKendall didn't say anything in response. She just smiled at Zack and waited for him to speak. \"Well, now that I know the guy I did think was one of those suitors...isn't...\"\n\nKendall looked at Barrett as they both said, \"Eeeww!\" in unison.\n\n\"I can't think of anything I'd enjoy more,\" Zack said joining in with them to laugh about his serious error.\n\n\"Okay, great! You have my number. Just let me know when and I'll look forward to it!\" she told him.\n\nBoth the mare and the filly were doing fine so Dr. Weber felt comfortable leaving them to Mother Nature and Kendall's further care.\n\n\"Send me the bill okay, Dr. Weber?\" Kendall said as they got in his car. She tapped the glass on Zack's side and said, \"And you. Call me!\" as she stuck her thumb in her ear and extended her pinky to her mouth as though her hand were a phone.\n\nHe rolled his window down and said, \"I guess I need to move fast before a guy who catches your fancy comes along first so...you can count on it.\"\n\nKendall laughed and said, \"You've always been my favorite, Zachary Bartlett. So kind, so sweet, and maybe even kind of cute.\"\n\n\"Me? Cute?\" he said playfully.\n\n\"Maybe just a pinch,\" she said holding her thumb and index finger close to indicate a small amount.\n\nAs Dr. Weber backed up, Kendall waved goodbye to both of them before heading back inside. \n\n\"Nice girl,\" Dr. Weber said. \"Too bad you're not a little older, Zack. I think you two would be a pretty good fit.\"\n\nFeeling a whole lot better now than he had on the drive in, Zack said, \"You never know, Jerry,\" calling him by his given name for the first time as a way of trying to establish himself as more of a peer. An...older peer, of course.\n\nDr. Weber looked over at him, pushed his shoulder and said, \"Well, if you're gonna dream, dream big, right?\"\n\nZack laughed politely with him as Dr. Weber chuckled over the thought that a 'kid' Zack's age had even the slightest chance at a romantic relationship with someone like Kendall Kelly. Outside, Zack was laughing with him. Inside, the wheels were already turning and that's when he realized he'd been hard for the last hour or so. \"Just like old times,\" he mused to himself as they headed west on 50 toward Pueblo.\n\nThat night during dinner Zack mentioned he'd gone out to the Kelly ranch to help deliver a foal. \"Okay, I watched Dr. Weber deliver her, but still...\"\n\n\"That's amazing! So how's the foal doing and how is Kendall? You know, I really need to call her. I keep planning to and never seem to get around to it.\"\n\n\"Both horses are fine and Kendall seems to be doing much better. Her brother's been out here helping her for the last couple of weeks and she said things are looking up for the summer.\"\n\n\"That's so good to hear! I just can't imagine what she's been through.\"\n\nZack didn't want to point out how his mother had been through something just as bad if not worse. Kendall had indeed lost her husband\u2014permanently\u2014but his mother and father had slept in separate rooms for years and barely spoke when she was home from work. He wasn't sure which was worse as he'd often wondered how she managed to deal with basically living 'together alone' all these years. It was none of his business so he never asked, and quite frankly he didn't really want to know the answer.\n\n\"We're gonna have dinner together one of these days real soon,\" Zack told his mom.\n\n\"Oh, that's wonderful, honey! I know she appreciates all the help you've given her over the years. I hear she's quite the cook.\"\n\n\"I'm actually taking her out to dinner, Mom,\" he said wondering if he should tell her how he felt about Kendall or if perhaps her mother's intuition had already filled in the blanks. He decided against it partly based on the way Dr. Weber had reacted and partly because he didn't want his dad to find out and start lecturing him about it. Then again, lecturing him would require talking to his son so there probably wasn't any real danger. Still, he decided against saying anything to anyone for now.\n\n\"Oh, I see. Well, that should be very nice. So it's not a date then, right?\" she asked almost hopefully in the same yet opposite way she'd been concerned about Cass.\n\nZack couldn't help but think about Cassandra again himself, the parallels between them and what they both wanted as he replied, \"I don't know, Mom. What I do know is it's dinner with Kendall and I'm looking forward to it.\"\n\nZack didn't want to appear overly eager with Kendall, but he also didn't want to wait too long and give some other guy a chance to win her heart. He'd been thrilled to learn she'd been dating as he didn't want to be the first guy (or even among the first few) she'd gone out with since jumping back into the dating world. Timing was important and he couldn't help but think\u2014or at least hope\u2014the stars might be lining up for him.\n\nIn his room, he pulled out his cell phone and dialed her number. \"Kendall? Hi. It's Zack. You know, your favorite guy.\"\n\nKendall laughed and said, \"I remember you. Tall, handsome, smart\u2014and a doctor, as I recall.\"\n\n\"Well, an animal doctor but I could stitch someone up in an emergency.\"\n\n\"So to what do I owe the pleasure of this call, Doctor Bartlett?\" she said in her pleasant voice.\n\n\"I'm calling to see if you'd like to have dinner with me this weekend. I mean, if some other...suitor...hasn't come along and...suited you.\"\n\nKendall laughed at his silliness and said, \"No, no one's swept me off my feet in the two days since you were here, but it's a good thing you called because that could happen at any time, you know.\"\n\n\"That's my greatest fear!\" Zack said in a way that didn't let her know it really was his biggest concern. \"So how about next Sunday evening?\"\n\n\"Well, let me just check my social calendar.\" There was a pause while he could hear Kendall pretending to flip through pages. \"Did you say this Sunday?\"\n\n\"I did.\"\n\n\"Well, it looks like I've got a couple of hours free between dates with that handsome senator from Massachusetts and that cute young prince from England so...yes, I can fit you in,\" she teased.\n\n\"Ah-hah! So Prince Harry is my competition then! Good to know. At least you're open to dating younger men.\"\n\nThere was another pause as he floated a trial balloon about actually dating her rather just having dinner with her once. As the pause grew in length, he regretted having said it.\n\n\"I guess I hadn't actually thought about that before,\" she said rather quietly. There was an even longer pause before she said just as quietly, \"But...I think I'm at least open to the possibility, though.\"\n\nZack wasn't sure what to make of her reaction but was grateful she hadn't laughed him off. \"Are you a fan of sushi by any chance?\" he asked her.\n\n\"I am, actually,\" she replied. \"I tried to get Robert to eat it one time, but unless it once had hooves on it, he didn't want it.\"\n\n\"How about I pick you up around seven?\"\n\n\"Seven is perfect,\" she said, her voice back to its normal, pleasant tone.\n\n\"Okay. Great! See you then, Kendall.\"\n\n\"Bye, Zack,\" he heard her say before the phone went dead.\n\n\"Don't overanalyze,\" he told himself. \"She said 'yes' and you've got your foot in the door. One step at at time from here on out.\"\n\nThe rest of that week, Zack continued to learn his craft while Cassandra continued to pursue him in more subtle ways. Thursday morning she came in sporting a new, short, sassy hairdo in an entirely new color that caused Zack to do a double take. Her shoulder-length locks were gone and her dark, brunette natural color had been replaced by an almost platinum-looking blonde. Zack noticed both immediately.\n\n\"Wow! Talk about cute!\" he told her with a smile the first time he saw her.\n\n\"Do you like it?\" she asked in a way that told him she'd done it to get his attention.\n\n\"I do. It looks great on you,\" he told her honestly.\n\n\"I'm glad,\" she said sweetly. \"I remembered you mentioning you liked short hair once.\"\n\nZack searched his memory banks to recall having ever said that around Cassandra and drew a blank which was troubling because he really did like short hair. Well, unless it was spiked. But some girls just looked hot as hell with that kind of hairstyle and Cassandra was obviously one of them.\n\n\"I don't remember ever mentioning that, but I do like short hair, so all I can say is it's working for you!\"\n\nNothing more was said until just before lunch. \"With the way we stagger our lunch breaks now, I was wondering if you might want to join me today,\" Cassandra asked him.\n\nZack looked at his watch and said, \"I can't believe it's lunch time already. Is Dr. Weber back yet?\"\n\n\"He just came in and told me, 'It's your turn' so I thought I'd check with you.\"\n\n\"Um, sure. Yeah, we can do that. Let me just finish this one thing and I'll be ready to go.\"\n\n\"Take your time,\" Cassandra told him. \"I'll wait as long as it takes.\"\n\nZack caught the implication in her comment and thought about letting her know he was interested in someone else but like so many other things decided to let it go.\n\n\"All set!\" he said. \"So where are you taking us?\" he said kidding Cass about paying for them.\n\n\"Do you like sushi?\" she asked in her sweet voice.\n\nZack tried not to laugh but couldn't help it. \"What's funny about that?\" Cass asked. Zack could tell her feelings had been hurt so he stopped the laughter on the spot.\n\n\"Sorry. I was only laughing because...\" He reversed his previous decision and told Cass, \"I'm actually taking someone out for dinner to a sushi place on Sunday, so when you asked me I...\"\n\nCass was clearly crestfallen. \"Oh,\" she said solemnly. \"I didn't know you were seeing someone. We don't have to go together. It's okay if you...\"\n\n\"No, no. I'd love to go with you, Cass.\" He saw her look up at him with hopeful eyes and said, \"Really.\" He smiled at her and got a strained smile in return.\n\nOn the way there Cassandra asked without looking at him, \"So who's the lucky girl?\"\n\n\"What's that?\" Zack asked, his mind lost in thought over work-related stuff.\n\n\"Your date. On Sunday? Anyone I know?\"\n\nZack glanced over at her and could see her almost wincing as she asked. \"It's Kendall. Kendall Kelly.\"\n\n\"Oh, the...older...widow lady at the horse ranch, right? The one who called the other day because her mare was ready to give birth.\"\n\nZack knew Cassandra knew exactly about whom he was referring but politely said, \"Yes. We've been friends for a long time. I learned how to ride at their ranch and I've worked there during the summers since high school.\"\n\n\"So this is kind of a thank-you thing?\" Cass asked in an up-speak voice.\n\nThey were at the restaurant and as Zack parked the car he told Cass, \"Partly.\"\n\nHe shut off the engine and Cass said with a sense of dread, \"And the other part?\"\n\nHe turned toward her and said, \"Honestly? I've had a thing for her as long as I can remember, Cass. I have no idea how she feels about me, but I plan to let her know the way I feel and if there's...\"\n\n\"I get it,\" Cassandra said, the hurt in voice showing through, as opened her own door. \"She really is a lucky girl. Or...woman, I should say.\"\n\nThey barely spoke during lunch and Zack now knew what he'd suspected all along. \"The sushi is really good here,\" he finally said. \"Thanks for asking me to join you.\"\n\n\"Oh, sure,\" she said taking a tiny bite.\n\nZack took a sip of his water and asked her, \"So, Cass. Are you seeing anyone these days?\"\n\nShe pushed the California roll on her plate around with her chop sticks and without looking up said, \"No, not really. There was a guy I was interested in, but I don't think it's gonna work out, you know?\"\n\n\"That's too bad. Any guy would be lucky to have a wonderful girl like you,\" he told her before taking a bite of raw tuna.\n\nCassandra kind of shrugged her shoulders and said still not looking at him, \"Obviously not any guy.\"\n\nThey barely spoke for the rest day and after that it was only when business required them to. Just before he left Saturday evening, Cassandra said to him, \"I hope you have a really nice time.\"\n\nKnowing how he'd feel were Kendall to tell him she was interested in someone else, he felt terribly bad for her. He smiled and told her, \"Thank you, Cass. And I meant what I said. You're a really great catch and I know there's a guy out there looking for someone just like you.\"\n\n\"I guess,\" she said as she hung up her lab coat. \n\n\"There is. Trust me on that, okay?\"\n\nHe opened the door for her and then locked up and headed to the gym with its large indoor swimming pool and swam as hard as he could for nearly hour. Before heading home, he made one more stop to pick up something for his date with Kendall the next evening.\n\nHe tried his best to do or think about other things to keep his mind off of his upcoming date, but the hours dragged by until he was finally ready to go. He'd decided he was going to let Kendall know how he felt about her and with that in mind he'd stopped and bought a dozen roses the evening before knowing the shops would be closed on Sunday. \n\nHe debated between buying red or yellow and had some trouble deciding. His feelings for her were romantic, but he wondered if that might send too strong a signal for a first date. After all, he might be the only one of them who was considering this a date. Yellow was for friendship and they were indeed friends, but he didn't want Kendall thinking that's all he wanted. In the end, he made his decision and put them in the refrigerator at home for safe keeping. He was very relieved when his mother didn't ask him any questions about the flowers even though he knew she'd seen them several times. She only wished him a good time. He'd thanked her and kissed her on the cheek before leaving.",
        "It was another warm evening, but it was a little cooler than it had been the last three days. Zack wore a dressy, dark gray, button-down shirt with navy-blue Dockers and before getting out of the car, used the lint roller on the for second time. He kept the flowers behind his back as he rang the bell.\n\nSeconds later, the door opened and Zack was speechless and didn't even see her dog vying for his attention. He stood there just staring at her while trying not to stare. \"Zack? Are you okay?\" she asked waiting for him to come in or at least say something. \n\nHe broke out of his trance and said, \"Wow. I've always thought you were beautiful, but...wow.\" \n\nHe'd never seen her dressed to go out before. Around the ranch she wore only jeans or shorts with cowboy-looking shirts or tee-shirts and often a cowboy hat. This evening she was wearing a white sleeveless rib-knit top with a dark blue skirt that had some small white dots on it. Her spun-gold hair was soft, long, smooth and silky and a perfect match with the gold necklace and matching earrings she was wearing.\n\n\"That's why you're my favorite, Zachary! You always know just what to say.\" Her smile was already killing him and he was still just standing there with his hand behind his back.\n\n\"Are you going to come in or just stand there?\" She noticed him arm and said playfully, \"So what's in your hand, Doctor? Did you bring me something?\"\n\n\"As a matter of fact I did.\" He took a step inside and kept his front toward her as she closed the door. \"I hope these aren't too much but...\"\n\nKendall smiled and reached around his back saying, \"Come on, let me see!\"\n\nHe showed her the dozen roses with the baby's breath in the plastic sheath and Kendall's smile instantly faded. \"Zack. These are...\"\n\nShe stopped talking and smelled them but didn't speak. \"Kendall? If it isn't obvious then...\"\n\n\"They're beautiful, Zack,\" she said. She kissed him on the cheek and said, \"Thank you. That was the sweetest thing ever.\"\n\nShe turned to find a vase and Zack followed her toward the kitchen but didn't say anything else.\n\nAs she trimmed the stems she said, \"This is a date, isn't it? I mean, that's what you were thinking, right?\" She wasn't being mean nor accusatory. She was only seeking clarification.\n\n\"Maybe it isn't that obvious.\" He saw her raise an eyebrow and said, \"The way I feel about you, I mean. Or rather...the way I've...felt about you for as long as I can remember.\"\n\n\"After your phone call I was pretty sure that's what you were thinking.\"\n\n\"But that's not what you were thinking, was it?\" he said without trying to let his deep disappointment show.\n\nShe finished the last flower and put them in the vase and said, \"These are SO pretty. I love them, Zack! Thank you.\"\n\nShe asked him to sit down at the table then sat across from him. \"Zack, you are the nicest boy...sorry...guy I know. We've been friends for well, a whole lot of years. I had no idea you ever thought of me...like that. I mean, I was married and I loved my husband and you were so...\"\n\n\"Young?\" he said trying to smile.\n\n\"Well, yes. Young. Not just young, you're so much younger than me. And I've just started dating again and I'm not sure I'm ready for a relationship with anyone right now\u2014no matter how nice...or how cute\u2014he might be.\"\n\n\"Now I know how Cassandra must feel,\" he said still forcing a smile.\n\n\"Your assistant at the clinic, right?\"\n\nZack nodded. \"She has a serious crush on me and when I told her you and were going out...\"\n\n\"On a date...\" Kendall added.\n\n\"Yes. On a date...she was really hurt.\"\n\n\"Have I hurt your feelings, Zack?\" she asked sincerely.\n\n\"You've been honest with me, Kendall. What more could I ask for?\" He smiled then added, \"Just not what more could I hope for, though.\"\n\n\"I...I've just never thought of you...of us...like that before, Zack.\"\n\n\"In the spirit of honesty I'm hoping that you'll be able to at least try and do that.\"\n\nShe sat there just staring at him for a few seconds before saying, \"I think I could manage to do that. To at least\u2014try.\" Her voice was soft and sweet and more importantly...encouraging.\n\n\"If I didn't already say it, you look absolutely amazing, Kendall. I don't think I've ever seen you in anything but work clothes.\"\n\nKendall looked down for a moment then said, \"I spent a long time trying to decide what to wear tonight. I tried on a couple of dresses and that felt too formal. I tried a blouse and it seemed to informal and I ended up settling on this.\" She looked up at him and said, \"I guess if I were to be completely honest with myself, there must be a reason why it mattered so much to me.\"\n\n\"Date or just dinner, I wanted you to know how I feel about you, Kendall. I've dated quite a few girls over the years, but I've never been...interested in anyone before. So for now, if 'trying' is what you can offer, then I'll reluctantly settle for trying.\"\n\nHe was watching her eyes carefully as he spoke and between what he believed he saw and what she'd said before he was now hopeful.\n\n\"I guess we should probably be going,\" Kendall said cheerfully with a smile. \"I haven't had anything to eat since about ten o'clock and I'm starving!\"\n\nOn the way back into Pueblo, they talked about his time at college and vet school as well as how he liked the practice so far. They also had just enough time before they arrived for her to very briefly talk about her marriage to Robert and how she'd gotten along since his passing. It was obvious Kendall missed him, but it was equally obvious she was lonely and already tired of being alone. It even seemed she was very tired of trying to run that big ranch by herself. But now that she'd taken Barrett's money, she had to be fully committed to it even though Zack had the sense she'd like nothing more than to be out from under it.\n\nZack parked the car and went around to open Kendall's door. \"Thank you,\" she told him sincerely as she stepped out holding her purse and draping the ubiquitous sweater over one arm. \"In case I get chilly,\" she said unnecessarily.\n\nThe sign over the door said \"Tsunami Sushi Bar Wok & Grill\" which they read together as Zack opened the door for her.\n\n\"I've only had sushi the one time,\" she warned him. \"I enjoyed it, but I don't really know what everything is. You may need to help me out with the menu.\"\n\nThe were shown to one of the booths and Zack sat across from her as the hostess handed them their menus. Kendall smiled at him and said, \"In the spirit of trying, would you like to maybe sit next to me?\" Her eyebrows were raised in anticipation of a positive answer.\n\n\"Well, I would never do anything to stand in the way of your efforts so...yes, I would like that very much.\" Zack stood up and Kendall slid over making room for him.\n\n\"Okay, so what is all this stuff?\" she asked as she looked at the menu. \"What is sashimi?\" Before he could answer Kendall said, \"Oh, this looks good! It's a sample plate with a little of everything.\" She laid her menu down and looked over at him and said, \"What do you think about trying that?\"\n\nZack smiled and said, \"If it involves trying, I'm all for it.\"\n\nKendall caught his reference immediately and laughed. \"Smart, cute, and funny! You're quite the package deal, Doctor Bartlett.\"\n\n\"So you're warming up to me then?\" he asked with mock seriousness.\n\n\"Don't push your luck,\" she said pretending to be putting him in his place.\n\nWhen their order came, Kendall picked up her chopsticks and said, \"Don't you dare make fun of me. I've only used these things a few times before.\"\n\n\"All that matters is that you...try,\" he told her.\n\nShe took her chopsticks and playfully poked him in the ribs. \"You're trying my patience right about now...Doctor Bartlett!\" \n\nShe pulled the paper covering off of them and said, \"Okay, where do you recommend starting?\" She hovered over all of the choices with her chopsticks then said, \"How about with explaining to me what each of these things is?\"\n\n\"Okay, let's start with the difference between sushi and sushimi.\" Zack gave her a quick tutorial on the vinegared rice which was called 'sushi' on which the raw seafood was served and 'sushimi' which is also made up of raw fish and other seafood but without the rice.\n\nHe picked up a piece of raw tuna and said, \"This is called 'Ahi.\" He dipped it in a sauce then offered it to her and she took a bite while making a face as though it might be awful. \n\n\"Mmm. Not bad!\" she said. \"What else?\"\n\nZack walked her through each type of fish or seafood from 'Ebi' or shrimp to 'Hamachi' which means yellowtail. Each time, Kendall took a small bite and Zack finished the piece. One of the pieces fell into a dish of wasabe and the splatter left a tiny spot on her white top directly on top of one of her boobs. \"Well, that couldn't have hit in a worse place now, could it?\" she quipped making both of them laugh.\n\nShe looked down at the stain then over at Zack who said, \"Uh-uh. Sorry, you're on your own with that. I'm not touching anyone\u2014there.\" He looked away from the stain and added, \"Or even looking.\" Kendall laughed again before they braved the next piece which was called 'Taco' or octopus in Japanese.\n\n\"Is that a tentacle?\" Kendall asked pushing it away when it was offered.\n\n\"Yes, but trust me. It doesn't...suck.\"\n\nKendall cut her eyes at him then made a spewing noise as she burst out laughing. \"I haven't laughed like this in so long!\" she said reaching up to wipe tear from her eye. \n\n\"Let me get that,\" Zack said. Kendall lowered her arm and turned toward him. \"I'm not worried about looking at this part of you,\" he said as he dabbed her eyes.\n\nAs he did, something in the way she looked at him changed. It was only for the briefest of moments, but it was there and it only added to the feeling of hopefulness that had been slowly building. \"There! Good as new,\" he said when he was done.\n\n\"Thank you,\" she said sweetly before suddenly looking away.\n\n\"The wine pairing was excellent,\" she said changing the subject. Neither of them were connoisseur enough to fully appreciate it, but the wine seemed to be quite good.\n\nOnce most of their food was gone, Zack said, \"I saw something on the menu I think we should try.\" Kendall gave him a 'be careful, buddy' kind of look as he reached for it.\n\n\"Here it is,\" he said pointing to it. It read Fried Banana Tempura with Vanilla or Chocolate ice cream.\n\n\"You can't be serious,\" she said to him. \"I know you take really good care of yourself and you're not going to put that in your body? Are you?\"\n\n\"Nothing ventured, nothing gained,\" he said as he got their server's attention. \n\n\"Garbage in, garbage out is more like it,\" she said wrinkling up her nose. \"Fried banana tempura. Are you kidding?\"\n\n\"Nope. See anything you like?\" he said as he placed his order along with two cups of coffee.\n\n\"No thanks, I'll pass on dessert,\" she said, still giving him a look of disgust over what was essentially a fried banana.\n\nWhen the dessert arrived, Kendall scooted over and said, \"Get that thing away from me!\" \n\nZack had to admit it did look pretty awful, but sliced into it anyway with the knife he hadn't yet used then speared it with a clean fork. He picked it up and waggled it in front of Kendall who turned away and said, \"Don't you dare!\"\n\nHe waited for her to slowly turn back his way before setting his fork down and asking her, \"Okay, so what happened to the whole 'spirit of trying' thing we had going on here?\"\n\nShe wrinkled her nose at him and said, \"Just when I was thinking I might actually kind of maybe like you...a little...\" She gave him another faux dirty look before had, \"Very little...you do...this.\" She pointed to the ugly banana and made yet another face.\n\nZack picked his fork back up then looked right at her and said, \"Come on. You know you want to.\" He tilted his head at the banana and said pretending to be the banana, \"You think I'm gorgeous...you want to kiss me...you want to hug me...\"\n\nKendall started laughing as she completed the movie line from Miss Congeniality, \"You want to smooch me...you want to...\" She was laughing and looking right at him as Zack leaned over and kissed her while still holding the piece of banana in front of her with the fork.\n\n\"Yes, I do want to smooch you, and to hug you and...\" he said.\n\nKendall briefly looked at him then quickly turned away and said, \"I love that movie.\" Her eyes told him something had changed yet again although neither of them mentioned the kiss. After maybe a second which seemed like much longer to Zack, Kendall said, \"Okay. You win. I'll try it. But if it's as nasty as it looks...\"\n\nShe opened her mouth and let him feed her again. She made still one more face as she bit down, but the face soon changed to one of complete surprise. \"Oh, my God! That is the most delicious thing ever!\" She picked up her fork and said, \"Let me have that!\" \n\nKendall reached for the dessert plate, but Zack was ready. He slid it just out of her reach and said, \"So I was right. It is good.\"\n\nShe tried reaching over and under his arm to get at it as she said, \"Okay, you were right. It's delicious. It's...amazing! Just one more bite, okay?\" \n\n\"I think an apology is in order here,\" he said keeping one hand on the small plate.\n\n\"You are so mean!\" she told him. \"Please? Just one more tiny little bite of heaven? Please???\"\n\n\"Nope. Not until you admit you were wrong.\"\n\nShe tried going under his arm one last time before giving in. \"All right already! I was wrong. It's delicious. Now please let me have some more!\"\n\nHe slowly slid the plate her way and as she pounced for it, he quickly slid it back to the other side. \"Not so fast!\" he told her. \"We have to share.\"\n\n\"Okay, that sounds reasonable,\" she said waiting for him to put the dish back between them.\n\nZack cut off a small piece and said, \"My turn.\"\n\nHe watched Kendall spear it for him and move her fork toward his mouth. Just as he opened, she snatched it away and ate it herself.\n\n\"Oh, you are in so much trouble!\" he told her as she chewed and shrieked and laughed all at the same time. \"But it's SO good!\" she said holding one hand in front of her mouth as she chewed. It's better-than-sex good!\" \n\nSeveral people had turned to see what the ruckus was about and one older couple heard what she said. She waved politely to them as they turned away while she finished chewing. Then she leaned over to Zack and said, \"Well, it is.\"\n\nZack laughed and told her, \"Then you've been doing something very wrong.\"\n\nKendall again looked at him briefly and said, \"Let me tell you, I haven't been doing anything, right or wrong, for a very long time.\"\n\nZack laughed then Kendall laughed. She picked up her knife and pointed it at him and said, \"And that wasn't a hint, by the way, so don't go getting any ideas, okay? Just stating a fact. Got it?\"\n\n\"Got it,\" he told her. \"And I've got time. All the time in the world.\"\n\nKendall got more serious and said, \"Patience just earned you a whole lot of points on the 'I'm trying' scale.\"\n\n\"Then I'm glad I said it,\" was all he said back to her.\n\nThey each took turns taking a bite until it was gone. Kendall wiped her mouth and said, \"I don't even wanna know how many gazillion calories was in that thing, but it was so delicious!\"\n\n\"Did I already tell you I told you so?\" he teased.\n\n\"Oh, at least once or twice already but go ahead and pour some more salt into the wound why don't you?\" \n\nShe smiled at him in a way that made him want to kiss her again more than anything in the world, but he wasn't going to press his luck. \"Slow and steady wins the race,\" he told himself as he looked back at her.\n\n\"This was really nice, Zack,\" she said. \"I'm so glad you asked me out. I can't remember the last time I had such a good time. Thank you.\"\n\nZack never moved even when she kissed him on the cheek or when she took his hand. He only smiled back at her before turning away as they sipped the coffee he'd ordered with the dessert.\n\nLater, as they pulled up to her house she said, \"I really did have a wonderful time tonight, Zachary.\"\n\n\"Wonderful enough for a second date?\" he asked.\n\nShe looked over at him and smiled at him and said, \"Yeah. Definitely. I'd like that.\"\n\n\"May I walk you to the door?\" he asked her.\n\nShe looked down into her lap before answering. \"That might not be such a good idea, Zack.\" She looked over at him and said very sweetly, \"If I let you get that close to my door I might invite you in and if I invite you in, well... Maybe later, okay?\" \n\n\"I'm not in any hurry, Kendall. And I had a great time tonight, too.\" He reached over and gently brushed back her long, golden hair and told her, \"I've always known you're very pretty and I always believed you were as nice as you are beautiful. But tonight I learned for sure I was right.\"\n\n\"Thank you, Zack,\" she said. \"I...I always thought you were very handsome, too. Well, since you grew up, that is.\" She smiled at him then continued. \"And I also knew you were a really great guy. I'd just never thought of you like...you know...like...this.\"\n\n\"How am I doing...like this?\" he asked still playing with a strand of her hair.\n\n\"Well enough that I'm scared?\" she replied in the form of a question.\n\n\"Don't be afraid,\" he told her. \n\n\"It's not that easy, Zach,\" she said softly. \"Can you just give me some time? Please?\"\n\n\"Take as much as you need, Kendall. I'm not going anywhere.\"\n\n\"Thank you,\" she said. \"So...good night?\"\n\n\"Yes, good night,\" he told her. She didn't move so Zach decided he would. He leaned over hoping she would turn toward him and he was rewarded with an actual, real first kiss. It lasted just two or three seconds but it was the most wonderful, amazing kiss he'd ever had in his life.\n\n\"May I least come around and open your door?\" he asked as her face was just an inch from his.\n\n\"Okay,\" she said so quietly he could barely hear her.\n\nHe got out, walked around, and opened her door. He helped her stand up then closed it. \"So...good night,\" he told her again.\n\n\"Good night, Zack,\" she said. She put her hand on his cheek then kissed him quickly one more time. Just a short peck but on the lips this time. \"Will you call me?\" she asked.\n\n\"Guaranteed,\" he told her.\n\n\"Okay so...good night then,\" she said one last time as she lowered her hand and turned to walk inside.\n\nAs he watched her walk away he realized he wasn't even hard, something that had never happened before when he'd been around her. \"Things they are a changin',\" he said to himself as he got back in his car to drive home.\n\nZack was on top of the world the next morning at work while Cassandra was more subdued than he could ever remember. She barely spoke to him again and it got bad enough that Dr. Weber noticed something was wrong.\n\nHe came in and set down in Zack's office and closed the door. \"What's going on with Cassandra, Zack?\" he asked coming right to the point.\n\nZack stopped inputting data and told him the truth. \"She has a kind of thing for me. I didn't know about it when I agreed to go see a movie with her. She thought that meant I must have feelings for her, too, and now that I'm dating Kendall, she...\"\n\n\"Whoa, whoa, whoa!\" he said putting his hand out. \"What do you mean you're dating Kendall?\"\n\nHe told her about their dinner and obliquely mentioned the romantic nature of the date. Dr. Weber said, \"Holy cow. It seems like the entire world has changed since you got here.\" \n\nHe looked at Zack and said, \"Look, what you and Kendall do is your business. But what goes on here is mine.\" He wasn't being mean, he was simply letting his new partner know how he felt. \"Cassandra really is indispensable around here, Zack. Smooth this thing over somehow and make it go away. Okay?\"\n\nZack thought about 'the spirit of trying' as he told his mentor, \"I'll try.\" He noticed that didn't seem to satisfy the older man so he said, \"I'll do my best.\" Still not satisfied he told him, \"I'll take care of it. Today.\"",
        "Dr. Weber got up and said, \"Always remember, this is a family, Zack. Not just us and Cass, but the entire community. Any little squabble can became a scandal in some peoples' minds and that's how business takes a nosedive. I spent a lifetime building up this practice and you have to treat it like a relationship because it is. Follow me?\"\n\n\"Yes, sir. I do,\" he said finally understanding how serious this was.\n\nHe'd been wanting to call Kendall all morning and the next time he had a free minute he sent her a quick text. \"Hey there. I had an incredible time last night. Been busy all morning. I'll call as soon as I have some time. Zack.\"\n\nA minute later he got a reply that read: \"Me, too. Listen, I think we need to talk\u2014in person. Please let me know when you have some time okay? K.\"\n\nZack had never before heard those words from a woman. Nevertheless, he knew what they meant. He was so taken aback by her reply he wasn't sure what to say in response.\n\n\"I have lunch in a couple of hours if you can get out this way. Otherwise maybe tonight?\"\n\nHer reply read, \"I need a bunch of stuff so we'll head your way. Oh, Barrett's back, btw. His meetings got cancelled so I guess we'll see you soon. K.\"\n\n\"Shit,\" he said out loud. Zack didn't avoid profanity, he just rarely used it gratuitously. He looked at his watch and knew he had to see several more patients so he got up and got busy.\n\nHe was with Mrs. Jameson and her cat, Dotty, when Cassandra poked her head into the examination room. \"You have a visitor, Dr. Bartlett.\" Her voice was tight; the message curt.\n\n\"Okay, little Miss Dotty should be just fine,\" he told the 82-year old woman. \n\n\"Oh, thank you so much, Dr. Bartlett! I don't know what I'd do if I lost her, you know.\"\n\nZack stood up and saw Kendall through the window in the door and wanted to go directly to her, but Mrs. Jameson was going on and on and on about living alone and her cats\u2014all six of them\u2014being her entire life. He listened patiently all the way out to the front until he could turn her over to Cass to handle the payment.\n\nAs he passed Mrs. Jameson off, he saw Cassandra boring holes through Kendall was looking at whatever was on the shelves around her.\n\n\"Hey, there,\" he said trying not to startle her.\n\n\"Oh, hi Zack!\" she said pleasantly as she turned around. \"I haven't been in here for quite a while.\"\n\n\"Has anything changed?\" he asked as he walked toward the door with her.\n\n\"Well, there's a cute young doctor working here now,\" she told him. \"Other than that...not so much.\"\n\nThey walked across the street to a small cafe and Zack ordered a sandwich with a diet Coke. Kendall said she wasn't hungry but did let him buy her a cup of coffee. When it came, she thanked him for it.\n\n\"So...what is it you wanted to talk about,\" he asked with no small amount of trepidation.\n\nShe put her hand on his and said, \"Zack, you're a really great guy and you know how much I like you, right?\" He didn't answer so she continued talking. \"I had a really great time last night, but I think maybe things got a little carried away, you know? I'm not saying I don't want to go out again, I just think maybe we should you know, take it slow?\"\n\nZack knew better than to say what he was really thinking. Instead, he smiled at her and said, \"I'm willing to go as slowly as you need me to, Kendall. I just need to know there's a possibility of something more than friendship at the end of all the waiting and taking it slow.\"\n\nShe looked into his eyes and said, \"To answer your question directly, yes, there's a chance. But last night scared me, Zack.\"\n\n\"You said something similar then, as I recall,\" he said forcing a smile. She was still holding his hand so it wasn't a total bust. At least not yet.\n\nShe smiled at him and said, \"I've gone out maybe a half dozen times or so, but last night was the first time I've felt actually something\u2014anything. Well, other than feeling I wish the date was over.\" She started to laugh but when Zack didn't even smile, she stopped. \"Sorry, I'm not trying to be silly. I'm just...nervous. It's crazy, but you make me nervous.\"\n\n\"Scared and nervous. I'm not exactly hitting it out of the park, am I?\" he said trying to sound cheerful.\n\n\"Zack? The truth is, I like you. I...I really like you. I just don't know yet whether I like you because you make me laugh and because we've been friends for so long or if...I like like you.\" She tried to gauge his reaction before continuing, \"Until last night, I've never thought of you as anything but this sweet boy who was always so helpful and so charming. I mean, you're obviously a very good-looking young man, but I've never once looked at you...like that...until last night. Then suddenly my young friend, my...helping hand...is kissing me.\"\n\n\"It wasn't that bad, was it?\" he asked trying to smile.\n\nShe looked down at their hands on top of the table and said, \"No. And...that's the problem.\" She saw Zack's puzzled look and said, \"Last night was supposed to be fun. You know, reminiscing, lots of laughs, good food, and maybe a hug goodnight.\"\n\n\"Are you unhappy that I kissed you?\" he asked seeking clarification.\n\n\"No. Just the opposite. But that's what doesn't make sense to me.\" She looked back up at him and said, \"You turned my whole world upside down when you kissed me, Zachary. A fun time turned...romantic. I wasn't expecting that and I definitely wasn't expecting it to have the effect it had on me.\"\n\n\"Effect?\" he asked still probing for information.\n\n\"I didn't sleep last night. At all. I just laid there thinking about what happened between us. It was so confusing, you know?\"\n\nZack wanted to say, \"No, I don't know\" or at least, \"No, not really,\" but he held his tongue again.\n\n\"I guess that's why I'm scared.\"\n\n\"Because you're confused?\" he said feeling totally confused himself.\n\n\"Yes! Well...no. I'm not scared because I'm confused, I'm confused because I'm scared.\"\n\nThis time Zack couldn't resist so he said very seriously, \"Oh, okay. Well...that clears it all up!\"\n\nShe pulled her hand away then playfully pushed his back toward his side. \"Stop! This isn't funny.\"\n\n\"It's kind of funny,\" he said. \"Confusing but still kind of funny.\"\n\n\"Zack! Don't tease me.\" He could see that look again in her eyes as she said, \"I...I realized I do have feelings for you and that's what scares me.\"\n\nHe was tempted to make another quip but knew to leave well enough alone. He reached out for her hand again and as she went to give it to him she pulled it back and said, \"Are you going to be nice this time?\" He nodded so she gave him her hand.\n\n\"I told you how I feel about you last night, Kendall. The way I've felt about you for a very long time.\" He saw her not just looking at him but...studying him as he spoke. \"No, that's not true. I didn't tell you everything. I only told you that I have feelings for you.\" He put his other hand on hers and held it with both of them. \"Kendall, I'm pretty much...well, to kind of keep things light\u2014-crazy about you. I know you don't feel the same way about me, but as long as I know there's a possibility...a chance...that you might...someday...then I can wait as long as it takes.\"\n\nShe sat there and stared into his eyes for several seconds before saying quietly, \"There is a chance, Zack. I'd say maybe even a very good chance.\"\n\nThe server brought his pastrami on rye and laid the check beside it. Zack took a bite and when he could manage to talk while he chewed said, \"Is there anything else? To talk about?\"\n\nKendall shook her head and just said, \"No. Nothing else.\"\n\nZack asked her what she was buying in town as a way to change the subject and the mood lightened immediately as she explained what she needed. They spent the next twenty minutes just chit-chatting then walked back over to the clinic together.\n\nThey spotted Barrett up by the counter and Kendall called out, \"Oh, there you are! I thought you'd gotten lost or something.\"\n\nHe turned around and said hello to both of them then turned back toward the counter. He was leaning over and chatting Cass up in a big way. Cassandra was positively beaming in between some laughing and even a giggle. \"Sure, I'd love to!\" she said as Zack and Kendall got closer.\n\n\"Why don't you guys join us?\" Barrett asked.\n\nKendall looked at Zack then back at her brother. \"Join you when and doing what?\" she asked.\n\n\"I just invited this beautiful young lady to go riding this Sunday. Seems it's her only day off and I find myself smitten with her beauty and charm.\"\n\nBarrett was laying it on thick, but since Cass was eating it up, neither of them said anything. \"Well, that's up to Zack,\" Kendall said. She looked around him at Cassandra and said, \"This guy should always have supervision when he's with a beautiful woman.\" She looked back at her brother and told him, \"I'm in if Zack is.\"\n\n\"Well, Cassandra can look out for herself, and I'll have to take your word about Barrett. But a chance to go riding on a Sunday during the summer? Count me in for sure!\" he said.\n\nBarrett was collecting Cass's phone number and other information as Kendall walked over to Zack's office with him. They stepped inside and Zack said, \"So did we accomplish anything by talking?\" as he reached for his lab coat.\n\n\"Here, let me help you with that,\" she said. He held out one arm and let her help him put in on. \"You look so handsome in your white coat,\" she told him. As he turned to face her she said, \"Even more so than usual.\" There was a moment of pure electric tension before them as Kendall stepped back slightly and told him, \"I think we accomplished quite a bit.\"\n\n\"Anything specific?\" he asked her as he sat on the corner of his desk.\n\nShe moved closer and said, \"Uh-huh.\" She ran her hands up and down the lapels of his lab coat and said, \"I'm not scared anymore.\"\n\n\"Of me?\" he asked as he put his hands on her upper arms.\n\n\"Of my feelings,\" she said very quietly as they were just inches from one another. \"I've never been afraid of you, Zachary.\" She moved even closer then whispered, \"I was just afraid of the way I feel when I'm around you now.\"\n\nHe ran his hands up and down the length of her arms and seemed to be kind of pinching her or something. \"What are you doing?\" she asked.\n\n\"I'm verifying,\" he said very seriously.\n\n\"Verifying?\" she asked.\n\n\"Uh-huh. You mentioned the way you feel when you're around me and I just wanted to know exactly how you feel.\" He kept 'feeling' her as she again burst out laughing.\n\nShe put her hands over her mouth as she did and said, \"You see, that's the thing I love about you the most!\"\n\nShe immediately realized she'd just used the 'L' word even though it wasn't a part of something as out of place or inappropriate as 'I love you' and stopped talking.\n\nZack moved closer again and said, \"I can't think of anything...not one single thing I don't love about you, Kendall.\" He brushed her hair back and saw that look in her eyes again.\n\nNow it was her turn to lighten the mood again. \"Mmmm. I know what you're thinking,\" she said very seriously and seductively.\n\n\"You do?\" he asked as he touched her cheek. \"What am I thinking?\"\n\n\"That...you want to kiss me.\" Before he could actually kiss her, she broke into the Miss Congeniality routine again and said in that silly sing-song voice, \"And you want to hug me and to love me and to smooch me and to...\"\n\nKendall yelped when Zack pulled her close and said, \"You're much better looking than Sandra Bullock and I DO want to kiss you and to smooch you and to...\"\n\nKendall's lips melted into his and for the first time he tasted the tip of her tongue before her offering his to her. \"Wow,\" she said after. \"You really are an amazing kisser.\"\n\n\"I'm also pretty good at...smooching...\" he broke into the routine and said, \"and hugging, and loving and...\"\n\nKendall laughed loudly again then put her arms around his neck. \"Now that I'm not afraid of my feelings for you...\"\n\nZack raised his eyebrows and waited for her to finish. She stared into his eyes and said, \"Well...maybe next time you could come inside after a date.\"\n\n\"I'd like that,\" he told her as he again brushed her pretty hair back.\n\n\"So would I,\" she said coyly as she went to kiss him. \n\nJust as their lips met they heard Cassandra clearing her throat. \"Sorry,\" she said. \"Your next two patients are waiting for you, Dr. Bartlett.\"\n\nShe was smiling brightly so whatever had happened between her and Barrett had changed her mood completely. \"Okay, I'll be right there, Cass,\" he called out.\n\n\"Sorry for interrupting,\" she said while looking at Kendall with another big smile. \"Take your time. I'll stall them 'til you get there.\"\n\n\"Looks like your brother's charm offensive has really paid off,\" he told Kendall.\n\n\"I'm glad. I can't afford to be worrying about my handsome new boyfriend being stolen away by the much cuter, much younger Cassandra now, can I?\" she teased.\n\n\"She is young, but I have never in my life met anyone cuter than you, Kendall. Ever.\" She went to speak but he didn't give her a chance. \"Honestly? I have never seen a woman as beautiful as you. Not even close.\"\n\n\"Talk about scoring big points,\" she said as their eyes danced with the other's.\n\n\"And I didn't miss the fact that you just referred to me as your boyfriend.\" She tried to talk again but he kept going. \"I only hope that doesn't mean you still see me as a boy who's just a friend.\"\n\nShe pulled herself closer to him and said, \"Um...not anymore,\" then kissed him. It wasn't outwardly passionate, but the kiss was as long and slow and romantic as any kiss could be. \"So...I guess I should let you get back to work, huh?\" she whispered in his ear.\n\n\"That's probably smart,\" he told her softly. \"It's not my first choice, but it's probably the best choice.\"\n\n\"So do I have to wait until Sunday to see you again?\" she asked as she looked into his eyes.\n\n\"I hope not,\" he told her honestly.\n\n\"I'm not a bad cook,\" she told him.\n\n\"So I've heard,\" he said as he held her close.\n\n\"It's true,\" she replied. \"I could make dinner for us tonight.\"\n\n\"I'd like that. Very much,\" he said. \"Do you make fried bananas for dessert, by any chance?\"\n\n\"Not exactly,\" she told him. \"But dessert can still be something...sweet.\"\n\nZack felt himself growing hard and couldn't believe it was happening right then and there and just as she pushed up against him to kiss him again. He knew she felt it and expected to hear something like, \"Is that a banana in your pants or are you just glad to see me?\"\n\nInstead, he heard her moan softly and say, \"That feels nice.\" He felt her push back against him as she kissed him. \"Mmmm. Really nice.\" She lowered her arms and said, \"See you tonight?\"\n\nZack nodded his head. \"Definitely.\"\n\n\"Okay. See you then,\" she said. She kissed him quickly one more time before walking out.\n\nCassandra was back at the counter and as Kendall walked by said, \"It was really great seeing you again, Mrs. Kelly.\"\n\n\"You too, Cassandra and please call me Kendall, okay?\"\n\n\"I'll do that. So I guess we'll see each other on Sunday?\"\n\n\"Yes, we will. I'm really looking forward to it, Cassandra,\" she said pleasantly. She turned and waved goodbye to Zack who was very thankful to be wearing a long lab coat.\n\n\"Okay, Cass. Who's up first?\" he asked looking at the exam rooms.\n\nCass's mood had done a complete 180. She was happy, pleasant, cheerful, and maybe even positively radiant.\n\n\"It's none of my business, but it seems like you and Barrett hit it off pretty well today,\" he said after finishing up with another family dog in for an annual checkup.\n\nCass smiled and said, \"Well, when you can't be with the one you love...\"\n\n\"Love the one you're with?\" he said filling in the words to the old song. \"He seems like a nice guy. Maybe a little too nice.\"\n\n\"Ahh! Look at you being all concerned about me. That is so sweet and so...Zack Bartlett. But I'm a big girl, Zack. I can take care of myself. Besides, if I can't have the strong, silent type, fast and dangerous isn't a bad second choice.\"\n\n\"I hope I didn't hurt you in any way, Cassandra. You really are very special to me.\"\n\n\"Thank you for checking on me, but I'm fine. I'm actually very interested in Barrett. I'm sure he's not the 'settling down' kind of guy, but I'm not exactly ready to do that yet, either.\" She smiled then added, \"At least not with a guy like him.\" She grabbed her clipboard, spun around, and went out to the front desk.\n\nZack called him mom to let her know he wouldn't be eating at home and although he could tell she didn't want to ask she couldn't help herself. \"Are you seeing Kendall again by any chance?\"\n\n\"I am,\" he told her. \"I really like her, Mom. She's pretty amazing.\"\n\n\"She is a nice girl, Zachary, but she's a lot older than you. You need to keep that in mind if you're going to continue seeing her.\"\n\n\"I know you don't want me to get hurt and I love you for that, Mom. But that kind of age difference isn't the big deal it used to be.\"\n\n\"Don't you want to start a family someday, honey?\" he heard her ask in a way that screamed, 'I want grandchildren!' He couldn't blame her. Grandchildren would help fill the emptiness in her life.\n\n\"Mom, she's not that old for goodness sakes. She's only 35.\"\n\n\"Thirty-five?\" he heard her say, her voice rising very high. \"That's ten years, Zack.\"\n\n\"Yes it is, Mom.\" He didn't say anything else and his mother finally let up.\n\n\"Okay, so I guess I'll see you when you get home.\"\n\n\"Yes you will,\" he told her politely. \"Bye, Mom.\"\n\nZack did want kids but he'd always thought about them down the road. Way down the road. But if things did go well with Kendall...she'd be 36 so... \n\nHe sat there wondering how he could have spent SO much time thinking about her and never once thought about something that important. Then again, having a child at 37 or 38 or even 40 wasn't a big deal anymore, either. Satisfied with his answer, he moved on to his next patient.\n\nHis satisfaction didn't last long as he started thinking about his living arrangements. He made more than enough to get his own place now yet he was still living at home in the room he'd grown up in. That had to change\u2014and soon.\n\nBefore leaving for the Kelly Ranch, he'd managed to get in a good workout and was able to let go of all the stress that accumulated from thinking about things he'd never thought of and Kendall was the only thing on his mind.\n\nAs he pulled in, Barrett was pulling out. He rolled down his window and said with a smile on his face, \"I've been asked to leave the premises.\"\n\n\"I didn't mean to run you off,\" Zack said as he got out of his car.\n\n\"It's okay. I called Cass and we're gonna hang out, too.\"\n\n\"Sounds like a plan,\" he told Barrett as he started to head toward the porch.\n\n\"Zack?\"\n\nHe stopped and turned around and just stood there.\n\n\"I don't know what's going on with you and my sister, but I've never seen her so happy before. Not even when Robert was alive. She really likes you, bro. Just don't hurt her, okay?\"\n\n\"Never,\" he told him as Barrett nodded before driving off.\n\nAs he reached up to knock, the door opened and Zack's arm was still up in the air. \"Well, hello there,\" he said as he lowered his arm.\n\n\"Hi there yourself,\" she said smiling at him. \"I've been waiting for you.\"\n\n\"I'm not late am I?\" he asked as he walked in.\n\n\"No, I was just anxious to see you. That's all.\"\n\n\"Something smells wonderful,\" he said inhaling deeply through his nose.\n\n\"It's probably the garlic on the French bread,\" she told him as they sat down in the living room. \"You know, to go along with the lasagna I made.\"\n\n\"You are quite the cook, aren't you?\" he said as he looked at. \n\n\"You're staring,\" she said sweetly.\n\n\"How can I not?\" he replied. She was wearing a navy-blue knit top with a white stripe around the neckline and each sleeve around the wrist with a white skirt and white sandals with 3-inch heels. Kendall didn't need makeup to make her beautiful but when she wore it she went from beautiful to breathtaking. \"I didn't think you could be more beautiful than you were last night, but...wow. Just...wow!\"",
        "\"Thank you. I finally feel like I have a reason to want to look nice, again,\" she said in an almost shy way. Zack found it one of the most desirable things about her. She had this way of seeming to be unaware of just how incredibly gorgeous she was. Then again, she'd been married for a lot of years and perhaps her husband had taken her beauty for granted. Zack knew he never would. \"You look very nice tonight yourself, Dr. Bartlett,\" she told him smiling that smile that always slayed him.\n\nAs they ate, the conversation flowed as though they'd been discussing important issues for years. \"So where are you politically?\" he asked her.\n\n\"Disgusted,\" she said managing not to laugh. \"How about you?\"\n\n\"I'll second that. I'm pretty much sick of it all. I mean, why would any good, decent person ever run for office and put up with so much...crap and be hated by everyone else in the other Party?\"\n\nKendall laughed and told him she agreed. \"What about religion? God, faith, church.\"\n\n\"No, no, and no,\" he told her. \"I strongly support the First Amendment and want people to believe as they please, but it's not for me.\"\n\n\"So science and reason are your Gods?\" she asked without accusation.\n\n\"No. Not at all. I'm very open to the idea of God as long as he himself tells about everything. I'm just not open to other human beings telling they know who he is and what he wants.\"\n\n\"That makes a lot of sense. I never really thought about it like that. I've just always assumed Someone is 'up there' but never gave it any real thought. I suppose it gave me hope I'd see Robert again some day. I haven't been to church since I was eight years old so it's not a big deal to me.\"\n\n\"You still miss him, don't you? Robert, of course,\" Zack said.\n\n\"I do,\" Kendall said getting serious for a moment. \"Like all marriages we had our problems, but he was a good, decent man. I was very young when I married him and only had a couple of real boyfriends. I dated quite a few guys, but never got really serious with any of them. And then Robert came along and I was just starstruck, you know? He was older and handsome and had so much energy.\"\n\nZack noticed her enthusiasm had tailed off and was hesitant to ask but felt he needed to so he said, \"Did things change?\"\n\nThe oven alarm went off and Kendall said, \"Saved by the bell?\"\n\nHe followed her into the kitchen and asked if he could help with anything. \"Would you mind pouring the wine?\" she asked as she pulled the bread out of the oven.\n\n\"That smells SO good!\" he told her and it did. \n\nShe sliced the lasagna into squares and put a large piece on Zack's place then added a piece of warmly-buttered French bread sprinkled with garlic salt. A tossed salad completed the food portion while a red merlot finished the meal.\n\nKendall sat down next to him and Zack picked up his wine glass and raised it in front of him. \"To the spirit of trying?\" he suggested.\n\nKendall laughed briefly and said, \"That's perfect. To the spirit of trying!\"\n\nThey touched glasses but before taking a sip Zack leaned over and kissed her softly. \"Bon appetite,\" she said as their lips parted.\n\n\"The wine is excellent,\" he told her.\n\n\"I'm glad you like it. I don't know much about wine and can't afford anything really fancy, but for $15 this does taste pretty good, doesn't it?\"\n\nShe waited for him to take a bite and asked, \"So...what's the verdict?\"\n\nZack's eyes told her everything. \"Oh, my God! This is the best lasagna I've ever had.\"\n\n\"I made it from scratch,\" she said without bragging. \"I'm glad you like it.\" She took a bite herself and said, \"Mmmm. It is pretty good.\"\n\nA few moments later she said, \"I guess things did change. With Robert, I mean. Then again, I suppose they always do over time, right?\"\n\nZack didn't feel like discussing his parents at the moment and asked, \"It would seem so. Was the change a...bad kind of change?\" as he took another bite.\n\nKendall took a small sip of wine and said, \"I don't know. Maybe. We were both just so busy all the time, you know? The ranch, riding lessons, worrying about money.\" She pushed the food around on her plate for a while without eating and Zack waited patiently for her to continue. \"We didn't really fight a lot. Not the yelling kind anyway. We just sort of...drifted apart. The last few years we almost never went out. We still talked to one another, but it was always about business. We seemed more like partners than...\"\n\n\"Than lovers?\" he asked.\n\n\"Yeah.\" She looked over at him and said, \"It's so sad, you know? You marry someone and have all these dreams and expectations and then you find out the reality of it is so different.\"\n\n\"It doesn't have to be,\" he told her.\n\nShe still hadn't taken a bite, but she'd stopped pushing her food around. \"How about you, Zachary? Has there been anyone serious in your life?\"\n\nHe took a deep sigh and before he could speak Kendall said, \"I won't care how many girls there've been. You're young, away at college and you're...very handsome. I'm just curious if anyone ever captured your heart. That's all.\"\n\nHe set his fork down and told her, \"Yes, there were quite a few um...hook-ups, but no one ever stole my heart. There was a professor however, who opened my mind to the possibility that the only woman I'd ever truly lov...cared about...might not be out of reach.\"\n\n\"Oh, so you had an affair with this...professor?\" she asked without accusation.\n\n\"I did. She was 42 and...\"\n\n\"So you don't necessarily find age to be too big a problem?\" The way she asked the question made him think she hoped to hear a certain answer.\n\n\"Just the opposite. It made me realize older women really are like fine wine.\" She smiled at him and he told her, \"It's not a line, Kendall. It's absolutely true.\"\n\n\"Okay,\" she said. \"Please go on.\"\n\n\"Well, that relationship showed me that older women don't see the world like girls say...Cass's age. They have this um...more mature outlook on life.\" Kendall smiled sweetly but didn't speak. \"It taught me that if I could find the right...older woman...\" he reached out and brushed her back behind her ear again before continuing. \"If I could find her, I'd much rather be in a relationship with her than anyone my age or especially Cass's age ever again.\"\n\n\"I guess it's lucky for Cass there are guys like Barrett out there, huh?\" Her eyes 'twinkled' as she spoke and Zack just smiled back.\n\nKendall looked away before asking quietly, \"So...do you think you'll ever find this...older woman?\"\n\n\"Well, you see, the good news is I have. In fact, I'd found her a long time ago. It was just that I didn't know until this other relationship ended and things suddenly became very clear.\" He put his hand on her upper back and said, \"Of course, she wasn't available until I had this um, relatively recent revelation, and now I'm just hoping she might think I'm as important to her as she is to me.\"\n\nKendall still hadn't looked at him. She pushed her food around some more as she said, \"She sounds like a very lucky girl. I'm...I'm kind of envious.\"\n\n\"Actually, I'd be the lucky one were she to ever tell me she thought that way about me. You see, she's been not only a dream and a young boy's fantasy, but the only woman I've ever loved.\"\n\nKendall's fork fell out of her hand as Zack softly stroked the soft, silky hair below his hand. \n\n\"Zack?\" she said very quietly. \"I don't want things to change with us.\"\n\nZack felt like he'd just been shot through the heart. His biggest fear had been Kendall telling him she didn't want a relationship ruining their friendship and here she was unloading the mother of all bombshells on him.\n\n\"We'll still be friends, Kendall. Even if we were to take things to the next level. That won't change.\"\n\nShe still hadn't even looked at him and the pit in his stomach was growing. Finally she looked over at him and said, \"How did you get through college and veterinarian school when you're this clueless?\"\n\nHer eyes were now dancing with his, moving quickly back and forth. \"I'm not worried about losing our friendship because we sleep together. I just don't want you to ever take me for granted.\"\n\n\"Kendall, what are you saying?\" he asked as his heart began racing.\n\n\"I'm saying...\" She turned toward him and said, \"I love you too, Zachary. At least I think I do.\" She turned her chair sideways and took his hands. \"I can't eat, I can't sleep, I can't even think. Unless it's about you. And every time I do I get this feeling that's so strong and so...wonderful I...I just want to be with you.\"\n\nHe leaned closer to her and said softly, \"You do?\" \n\nHe reached up and touched her face as she whispered, \"Uh-huh.\"\n\n\"So are you saying you'd like to...be together...with me?\"\n\n\"Uh-huh,\" she said even softer. \"I told Barrett to find somewhere else to stay tonight and I'd hate to think it was for no good reason.\"\n\n\"That wouldn't be nice at all, would it?\" he said as he traced a circle around her cheek with his finger.\n\n\"No, not at all,\" she said. \"I'm not really very hungry right now.\"\n\n\"I'm pretty full myself,\" he whispered back.\n\n\"So maybe we could...be together for a while and see if that might make us feel more like eating.\"\n\nShe kissed him softly at first then put her arms around his neck and said, \"I want to be with you, Zack.\"\n\nHe reached underneath her chair and lifted her up his arms as they kissed. \"You know where the bedroom is, right?\" she said between kisses.\n\n\"I do,\" he told her as he carried out of the kitchen and down the hall toward the back of the house.\n\n\"Not that one,\" she said as he stood just outside the master bedroom. \"In there,\" she said nodding toward another room. \"I don't want old memories interfering with new ones, okay?\"\n\nZack couldn't understand everything that meant to Kendall, but he did understand she didn't want to make love in the same bed where she'd slept with her husband all those years.\n\nHe laid her on the bed. \"Can I watch you undress?\" she said looking up at him. As he began unbuttoning his shirt she told him, \"I used to watch you working with your shirt off when it hot out.\"\n\n\"You did?\" he said as he stripped it off. He quickly kicked off his shoes then went to work on his socks.\n\n\"Uh-huh. I even fantasized about us.\"\n\nHe smiled and said, \"I thought you told me you never thought about me...like that...before.\"\n\n\"I didn't. That was just fantasy.\" She reached out for his hand and pulled him down on top of her and said, \"This...is reality.\" She ran her hand over his chest and said, \"You are so gorgeous. I've dreamed about doing this so many times. I just never thought I'd actually be doing it.\"\n\nHe kissed her passionately and was immediately rewarded with her sweet tongue. Within seconds, she took his hand and placed it on her large, soft breast. As he gently squeezed, Kendall sighed softly. \"That feels so good,\" she moaned. \"I want you so bad, Zack,\" she said huskily.\n\nShe reached for his belt as he slid his hand underneath her top and cupped her breast. \"Mmmm,\" she softly cried out. Zack helped her with his pants and wriggled out of them and kicked them onto the floor.\n\nShe raised up and he unzipped her skirt and she in turn, helped him slide it off of her. She smiled and pushed him hard, rolling him over onto his back. \"I see something else I've fantasized about.\" She reached into his boxers and found what she was looking for.\n\n\"You feel so good,\" she told him as she ran her hand up its entire length bringing him to life. He raised up and she quickly removed his underwear. She looked at him for the first time and said, \"It's beautiful.\"\n\nShe stroked him with her right hand as she hungrily sought his kiss. Zack pulled her top off and quickly unhooked her bra, dropping it on the floor beside them. \"You are so incredibly beautiful,\" he told her.\n\nKendall continued to stroke his hardened cock as he rolled her back over and kissed her. He moved down to her large, natural breast and took as much as he could into his mouth and began softly sucking. \"Oooo!\" she cried softly. \"That feels so good.\"\n\nHe moved to the other side then back again as she kept him hard. \"Roll back over,\" she told him. This time she slid down toward his huge shaft as he lay on his back. She took it in her hand and said, \"It really is beautiful, Zack,\" as she lowered her warm mouth onto it.\n\n\"Oh...fffuck!\" he groaned as she sucked on the head and ran her tongue around the tip.\n\n\"Do you like that?\" she asked never taking her eyes off of his.\n\n\"Very much,\" he groaned. \"God, you're beautiful!\" he told her as she took him deeper. Kendall slowly rode him with her mouth, up and down, up and down, over and over again. \n\n\"You taste so good,\" she told him as she came up briefly before taking him as far as she could. Zack placed his hand behind her head and gently pushed her down each time. \"I like that,\" she told him during another quick break before taking deep and holding herself there. She went to come up but Zack held her down. Kendall didn't fight him telling him she didn't mind. When she began to gag, he let her come up. She was gasping for air but smiling at him. \"I love that, too,\" she said. Maybe her eyes really did twinkle was Zack's first thought among many when she looked at him that way.\n\nAs she went back for more, he grabbed her hair and stopped her. He pulled on it and Kendall followed his lead. He lay her on her back and went directly downtown.\n\nThe way Kendall gasped when he parted the camel's toe and softly licked her clit for the first time was amazing. Her body arched as she hissed with pleasure. \"God, YES!!\" she cried as his tongue worked its magic. Her hands were desperately reaching for him and found their place behind his head. \"You are such a beautiful man,\" she cried as he continued to pleasure her. \"Oh...GOD that feels so good!\" she nearly screamed. \n\nKendall whimpered and moaned as Zack alternated between using his tongue and the tip of his finger on her swollen nub. Kendall's breathing was getting very deep as he pushed hard with his tongue. He began sliding in a first finger when it felt like she was going to push his head through her entire body. \"Oh...my...GOD!!\" she cried as she came hard.\n\nZack's face was buried in her pussy and he fought off the urge to laugh as his nose plunged inside her. \"Oh God, oh God, oh GOD!!\" she called out again. \"That is so...amazing!\"\n\n\"Let me grab a condom,\" he said reaching toward the floor.\n\nKendall grabbed him and pulled him on top of her. \"I want you, Zack. Now. Right now!\"\n\nHe towered over her and looked into her eyes. \"I want you too, Kendall.\"\n\n\"Make love to me...please!\" she cried. She reached for his thick cock and let him know where to push. \"Get inside me,\" she begged. \"Just be easy at first, okay?\"\n\n\"I will,\" he told her. He began pushing and the popped in effortlessly. The fit was tight and warm and...amazing.\n\n\"Mmmm,\" she purred. \"More, please!\"\n\nZack back out and re-entered her and took her deeper this time. \"You okay?\" he asked.\n\n\"Perfect,\" she assured him. \"Take me deeper? Please?\"\n\nZack backed up then did just that. He took her slowly and went deeper until he was buried inside her to the hilt. \"Fuck, yes!\" she moaned. \"God, your cock feels SO good inside me!\" \n\nKendall's legs were spread wide and held high. As Zack began to fuck her harder, she reached up and held her legs. \"God yes!\" she said as he rocked her hard. \"Just like that!\" she begged.\n\nHe banged her hard then slowed down until she asked for more then pounded her harder only to once again slow down until she begged for it again.\n\n\"Turn me over,\" she said desperately. Kendall flipped herself over and got on her knees as she offered herself to him doggy style. \n\nZack re-entered her and Kendall moaned loudly. He stroked her several times then without warning, spanked her ass cheek with his hand. Kendall yelped then called out, \"Fuck...yes! I love that!\"\n\nZack slapped her sharply several more times as Kendall pushed back hard on each stroke, crying out with pleasure each time she was spanked. He was hammering her very hard and had his hands on her waist. He knew she was getting close. As he drilled her hard he said, \"Does my little girl like getting spanked? Does that turn her on?\"\n\nKendall literally screamed out, \"YES! I fucking love it! Spank my ass! Hard!\"\n\nZack removed both hands and turned both ass cheeks into bright red balls as he repeatedly slapped them. In just seconds, Kendall's body tensed again as cried out, \"Oh my fucking GOD!!\"\n\nZack felt her squeezing his cock as she reached for her pussy and rubbed her clit as he came, too. Kendall's screams turned to whimpers as he filled her with his hot cum. When he finished he stayed inside and leaned over pressing his chest to her back.\n\nHer breathing was loud and hard but he heard something else. He pulled out of her and rolled her over. \"What's wrong? Why are you crying? Did I hurt you? Kendall, please. Talk to me.\"\n\nShe was shaking her head as she wiped her tears. \"No. You didn't hurt me.\" She threw her arms around him and said, \"I know it's silly, but that's how I always fantasized making love should be. Both people giving and taking without embarrassment and...and you gave me that.\" She lifted him up so he was looking into her eyes as she said, \"That's what changed, Zack. We...Robert and I...never did that. We rarely even...did it, but it was never like that. Do you understand?\"\n\nHer eyes were desperate for his need to understand. \"Yes. I understand,\" he told her. \n\n\"Promise me this won't change. Ever. Promise me, Zack.\"\n\nHe stroked her face and said, \"I promise, sweetheart. I promise.\"\n\nHer tears fell again as she told him, \"I am so happy. Zack, I have never been this happy in my entire life.\" In spite of her tears he felt her happiness coming through loud and clear.\n\n\"Me, either,\" he said as he kissed her. \"You don't have to say it back, but I have to say it,\" he began. Her eyes were moving rapidly between his as he spoke, \"I'm in love with you, Kendall. I am so very in love with...\"\n\n\"I love you too, Zachary. I am in love with you, too. I'm sorry for crying. I know it doesn't make any sense, but I really am SO happy.\" She managed a smile and said, \"And so in love.\"\n\nHe kissed her and felt himself growing hard. \"Mmmm. Please tell me that's for me,\" she teased.\n\nHe just smiled back at her as he pushed and slid back inside. \"Oh, that feels SO incredible,\" she told him as she held him as hard as she could.\n\nThe next morning Zack opened one eye and realized where he was. He saw Kendall sitting on the bed, her legs crossed in front of him just looking at him. \"Hi there,\" he said, his throat still not ready to talk. \"Did you sleep?\" he asked her.\n\n\"Not really,\" she told him. \"I didn't want to sleep.\"\n\n\"No?\" he said trying to sit up.\n\n\"It's okay, honey. Just stay there. I like watching you sleep.\"\n\n\"I'm glad,\" Zack mumbled.\n\n\"I like making love with you, too. A lot,\" she said as she ran her hand through his hair. She laid next to him her face directly in front of his. \"Do you still love me?\" she asked playfully.\n\nZack opened both eyes and forced himself to sit up. He took her hands in his and said, \"I will always love you, Kendall. Always. That will never change. I promise.\"\n\n\"I know,\" she said with a bright smile. \"I just like hearing you say it.\" She moved over and sat beside him and said, \"Tell me again,\" as she put put her arms inside his.\n\nNot having a place of his own yet, Zack paid for a motel each night that week until Sunday when they met at her place to go riding with Barrett and Cass. \n\nFriday evening was the first time either of them mentioned it but Kendall said as they lay in bed together, \"How would you feel about moving in with me?\"\n\n\"Pretty good, actually\" Zack told her. \"I was talking to a realtor this week about getting my own apartment so we don't have to do...this anymore.\"",
        "\"I've enjoyed being here, but it's way too expensive. Anyway, let me know if you want to um...shack up.\" Kendall actually giggled when she said that and Zack laughed.\n\nHe spent the rest of the evening and all day Saturday thinking about it.\n\nCass's car was already there when he pulled in on Sunday around noon. He got out of his car and heard a noise by the barn and when he looked over he just smiled as Cass had her arms around Barrett as they talked and laughed. \"Looks like love is in the air,\" he said to himself as he went inside. He'd stopped knocking and let himself in.\n\n\"Lucy? I'm hooome!\" he called out. Kendall came out of the kitchen and threw her arms around him. \n\n\"Hi handsome! Did you come here to tell me you're moving in?\" she asked as they kissed.\n\n\"Something like that,\" he told her.\n\n\"You got your own place!\" she surmised. \"You did, didn't you! You were going to surprise me but I can read you like a book already!\"\n\n\"I can't keep anything from you, can I?\" he said as she led him into the kitchen.\n\n\"Okay, everything is almost ready. I've got sandwiches, chips, drinks, napkins...\"\n\n\"Where's the champagne?\" he asked.\n\n\"Champagne? We're riding horses, not going to a wedding. Why would we need champagne?\"\n\n\"You never know,\" he said.\n\nOn the way out to the barn, where Cass and Barrett where still holding one another, Zack said, \"Let me grab something.\" He reached in and produced a bottle of champagne and said, \"Hey, you never know when you might need a bottle.\" He also had four plastic cups which he put in the cooler that one of the horses would carry.\n\n\"Okay you two!\" Kendall said as they got closer. \"Get a room or get on a horse,\" she told them.\n\n\"We already got a room,\" Barrett boomed out.\n\n\"Bar\u2014rett!\" Cass said partially feigning embarrassment. \n\n\"Well, where do you think these two have been every night this week?\" he quipped as Kendall shot him a look.\n\n\"Okay, okay. Let's get ready to ride,\" she said. \n\nBarrett had gotten four of them tacked up and a few minutes later they were on their way.\n\n\"Beautiful day for it,\" Barrett said as they mounted up and headed out. He reached out for Cass's hand and said, \"And a beautiful girl to share it with.\"\n\nZack and Kendall were a ways behind them and Zack said, \"They seem to be getting along pretty well.\"\n\n\"I've never seen Barrett like this before. He's usually in and out\u2014no pun intended\u2014in one or two dates. But Cass is different. I think he really likes her.\"\n\n\"I guess the age difference doesn't matter the other way around either, huh?\" Zack joked.\n\nThey were still holding hands as Kendall reached for Zack's. \"Nope. It doesn't seem to matter.\"\n\nThe horses ambled along for another hour before coming to a creek with a flat, open area next to it. \"This has been a favorite spot for years,\" Kendall told them.\n\nCass helped her spread out the blanket and passed out the sandwiches. There was some polite chatter as they ate but mostly they just took in the scenery. The blue skies, the mountains in the distance, and the sounds of the babbling brook.\n\n\"This is my idea of heaven on earth,\" Kendall said as she rested her head on Zack's shoulder. \n\nHe put his arm around her and said, \"It doesn't get any better than this, does it?\"\n\nShe looked over at him and the two of them instantly knew of one place where it really did get better than that and they both laughed.\n\n\"Okay, you two,\" Barrett said to them this time. \"There aren't any rooms out here, you know.\"\n\n\"Speaking of rooms...\" Zack said. \"I don't think it's any secret Kendall and I are um...romantically involved.\" \n\nCass giggled, Barrett laughed, and Kendall said, \"Hon-ney!\"\n\n\"We're not blind,\" Barrett said. \"So what about rooms?\"\n\nZack stood up and said, \"Well, I moved back in with my folks as soon as I finished school and didn't think much about getting my own place until um...\"\n\n\"Zack!\" Kendall said pretending he was telling some big secret.\n\nKendall was still sitting and Zack went around behind her and stood here as he spoke to Cass and Barrett. \"Anyway, there's an obvious reason we're um...romantically involved. The simple truth is I'm in love with this beautiful woman right here.\"\n\n\"Awww!\" Cassandra said. \"At least someone isn't afraid to say it.\" \n\nShe glared at Barrett who through his hands up defensively. \"Hey, for me a second date is like saying I love you and we've been out five time already, okay?\"\n\n\"Rrrghhh,\" Cass said playfully.\n\n\"I've loved her for as long as I could remember but for other obvious reasons, I couldn't tell her. What I didn't know was that I was in love with until last week.\"\n\nHe came around front and said, \"We've talked about moving in together and I've decided to take Kendall up on her offer.\"\n\n\"Oh, great. Guess I'm movin' out then,\" Barrett said as though he didn't already know it.\n\n\"I'm not religious or even all that old-fashioned, but I really don't want to live with my girlfriend.\" He looked down at Kendall and saw the smile fade from her face. He reached for her hand and helped her stand up.\n\n\"So because I don't feel comfortable living with my girlfriend...\" He turned them both sideways then reached into his pocket and produced a small, white box and got on one knee in front of her.\n\n\"Oh, my God!\" Kendall screamed.\n\n\"Kendall? I've loved you for years and I am so in love with I want us to be together for the rest of our lives.\" He pulled out the modest-sized ring and said, \"Kendall Kelly? Will you make me the happiest man in the world and marry me?\"\n\nShe was crying and shaking as he slipped the ring on her finger. \"Yes. Yes, yes, YES I will marry you, Zachary!\" \n\nHe stood up and kissed her. As he did they both heard Barrett say, \"Don't go gettin' no ideas, Cass.\"\n\n\"As long as I can get another date, I guess that'll be okay\u2014for now,\" she told him.\n\nThey looked over and saw the two of them kissing, too, as they went back to doing the same.\n\n\"I love you, Doctor Zack Bartlett and I can't wait to be your wife no matter where we live.\"\n\nKendall really had had enough and decided to sell the ranch back to Barrett's family. With the money she made, she and Zack bought their first home in Pueblo together and lived there together for three months until their wedding on a cold, snowy January day several months later.\n\nBarrett surprised everyone and especially Cass when he proposed to her later that evening at the reception. Six months later, they too, were married, and four months after that, the first Bartlett grandchild was born. It was a healthy, baby boy they named Zachary III, and it not only turned Zack's mother's life around, it even put the hardened Zachary, Senior, back in touch with his humanity. Shortly after, his mother moved back into the same bedroom with his father.\n\nLater that year Dr. Weber finally did retire and sold the practice to Zack. He loved his job dearly, but he couldn't wait to get home to his beautiful wife and child each night. Kendall also dearly loved being married to Zack and also loved being a stay-at-home mom raising their son and making sure nothing every changed between her and her husband, her former helping hand on that big old ranch."
    ],
    "authorname": "komrad1156",
    "tags": [
        "older woman",
        "may-december",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/helping-hands-13"
}