{
    "title": "Adventure in Paradise",
    "pages": [
        "Sarah looked around her suite at the island resort. It was luxurious, with marble in the bathroom and a balcony looking out to the ocean. \n\nShe unpacked quickly then she lay on the double bed and stared at the ceiling with tears in her eyes. This was the bed she had been going to share with Roger, her fianc\u00e9e until two months ago when he had called off their marriage. She had been devastated. She adored him, they had been living together for two years so happily, he was perfect for her, they had talked so much about sharing their lives together and the family they would have. \n\nShe had thought of canceling the reservation but over the two months she was in grief. Grief from missing Roger, grief from missing her relationship and grief from loneliness. It had been unnerving to go to parties without a partner and going home alone to her apartment afterwards was even worse. It was the loneliest time of her life. A lot of men would have liked have to changed that, but she compared them to Roger and none got past polite conversation.\n\nSarah owned a boutique and with her flair for style, her flair for fashion and her hard nosed business sense she was successful and she never had to worry about money. But her mind had become preoccupied with Roger and her loneliness, she had become stressed, her business had suffered and her accountant had said she needed a holiday.\n\nShe poured a glass of wine and took it to the balcony. The beach was bordered by palm trees, the sand was white, there were windsurfers scudding across the bay and gentle waves lapped onto the beach. She looked to her right and saw a big swimming pool surrounded by deck chairs. She took in the view for ten minutes then started to pour another glass.\n\n\"No, I haven't come here to drown my sorrows. It's time for a swim.\" \n\nShe took off her clothes and looked at herself in a full length mirror as she put on her bikini.\n\n\"35 and not too bad. Not too bad at all.\"\n\nShe was tall and slim with waving black hair which came to her shoulders. Big brown eyes, chiseled cheek bones and generous lips. The only small lines she had were where she smiled. She was a competitive age group swimmer, with lightly muscled arms, abs and legs and her B cup breasts looked larger than that as they proudly jutted out from her slim torso. Her media people always liked it when she modeled the clothes for her boutique.\n\nShe wandered through the lobby, looked at the resort shops, looked at the postcards and decided there was no-one she wanted to send one to. She resolved that she had to do something, so she booked a bus tour for the next morning and a fishing trip for the next.\n\nThe gardens were huge and lovely with towering palm trees, a blaze of color from the bushes, buzzing from the insects and brilliantly colored tropical birds flitting through the trees.\n\nOnly half the deck chairs around the pool were taken and Sarah found one in the shade. She looked around. There were some family groups and some couples. Her heart sank, everyone was sharing this holiday with family and friends. Everyone except her.\n\nShe heard shouts of laughter and looked around. There was a group playing volleyball. College students on vacation she guessed. About 10 young men and young women with tanned bodies were having the times of their lives. Her loneliness sunk in more and she opened her book.\n\nAfter an hour Sarah was hot so she took off her sundress and swam in the pool. The cool water was refreshing and she pushed herself to swim 25 fast lengths. When she got out she was aware of men's eyes on her but she was used to this and comfortably ignored them and returned to her book.\n\nWhen she was dry she put on her sundress and decided to walk past the volleyball court to go to the beach. A girl walked close to her to pick up the ball and gave her a friendly grin. \n\n\"Hi,\" she said.\n\n\"Hi,\" Sarah smiled and replied.\n\nAs she was walking away from the court the volleyball bounced at her feet. She picked it up and turned around. A tall, young, blond haired man was coming to collect it.\n\n\"Catch,\" Sarah smiled and threw it to him.\n\n\"Thanks.\" He caught it and went back to the court.\n\n\"Did he blush?\" Sarah asked herself.\n\nThe beach was white sands, palm trees, an almost tranquil sea, seabirds soaring in the sky and lots of couples and people in groups. It was a paradise and Sarah wished she had never come.\n\nIn the evening she overcame her inclination to have a meal in her room, strolled into town and found a small restaurant for dinner. The ethnic food was delicious, the service was friendly, there was a noisy, boisterous atmosphere and everyone was having a good time. Except for Sarah. The other restaurant guests were all couples or groups. She looked at her book but couldn't read.\n\nShe wandered through the town, poking into some of the small shops, then she heard some music and followed it to a night club. Dancing was one of the passions of her life.\n\nEveryone there was younger but that didn't bother her as she was confident with her appearance. One young man asked her to dance. She enjoyed it as he was a good dancer but after two dances the music slowed, he put an arm around her waist and Sarah made her excuses and went to the bar. Two good looking men came to talk, but she wasn't interested and soon they took the message and left her alone.\n\nThe girl who had said \"Hi\" to her at the volleyball came over to the bar and they started to talk as she waited for her drink. Her name was Jeanie and she was studying fashion so when she learned that Sarah had a boutique they kept talking. They were joined by a confident and enthusiastic young man who had a winning smile.\n\n\"Sarah, this is my boyfriend Brad. Brad, Sarah owns a fashion boutique. It's really interesting, I'd like to do that someday.\"\n\nBrad joined in the conversation and the three of them struck up a rapport.\n\n\"Sarah, why don't you come and meet the others?\" asked Brad.\n\nHe introduced her to all the young women and young men. They were a happy group and welcomed her and, as she had thought, they were students who had come for a holiday after their exams.\n\nThe last she was introduced to was the boy who she had thrown the volleyball to. He was tall and gangly and looked awkward as he came over.\n\n\"Al, this is Sarah.\" \n\n\"Hi Al,\" Sarah smiled at him.\n\n\"Hi.\" He glanced quickly at her then looked away. Sarah's attention was diverted for a moment and when she turned back he was gone.\n\nTwo of the boys asked her to dance and she happily joined them. Once she noticed Al looking at her but as soon as he saw her glance he blushed and turned away. She sat a table and talked with Brad and Jeanie. She worked out that Jeanie was a sort of mother hen to the group and Brad just carried everyone along with his enthusiasm.\n\nSarah saw that a lot of them tried to help Al join in. Some girls dragged him onto the dance floor where he danced awkwardly and sat down after one song.\n\n\"Al is very shy isn't he,\" said Sarah remembering his blush when she had thrown him the volleyball.\n\n\"He is, always has been. And his father died a year ago after a horrible long illness. We don't think he has recovered yet. He and Brad are in the same class and basketball team and they used to room together until Brad and I got together.\" said Jeanie.\n\n\"We were surprised when he said he would come here,\" \n\n\"Look at him dancing, he's so uptight and awkward. You wouldn't think it was the same person if you saw him on the basketball court, he's like a gazelle there.\"\n\n\"Never had a girlfriend as far as I know. I just wish he'd find someone and get laid.\"\n\nBrad gave Jeanie a big squeeze and she kissed his cheek.\n\nBrad took Sarah onto the dance floor. What he lacked in natural rhythm he made up for in enthusiasm and Sarah became happy and relaxed. She talked and danced with a lot of her new found friends. Then the music slowed and the couples started to embrace as they danced. Sarah watched some of the girls clinging tightly to their partners and kissing them. Her loneliness swamped her again and she went back to the hotel.\n\nSarah thought about the kissing couples. She loved sex. For her it was an intimate and passionate time of excitement and giving and receiving. She had never been into one night stands, but she didn't have to be engaged to do it either. \n\nShe thought about the tragic story Jeanie had told her about Al's father. She thought about how terrible it would be to watch a loved one die like that. That put her own issues with Roger into perspective and she resolved to stop wallowing in self pity. She thought about that awkward and gawky and vulnerable young man and wondered how it would have been for him.\n\nThe next morning she went on her a tour of the island with its white sand beaches. Some were developed and built up but others were absolutely deserted. It was all very beautiful but Sarah realized that sightseeing alone was an empty experience. She felt loneliness and depression clouding over her. \n\nIt was more crowded at the pool when she went there in the afternoon and there was only one free deck chair in the shade. She saw that Al was sitting and reading in the one next to it.\n\nSarah thought for a moment about how awkward and isolated he seemed to be, how vulnerable he seemed to be and so shy and how he had blushed when he had seen her. It was almost a maternal instinct which made her decide to sit beside him.\n\n\"Hi Al, how's things?\"\n\nHe looked up and Sarah saw him blush again.\n\n\"OK . ah . ah . thanks.\"\n\n\"Is anyone sitting here?\"\n\n\"No, y , you're welcome.\"\n\nShe sat down and tried to make some conversation.\n\n\"What's the book?\"\n\nHe held it out. \n\n\"I've read that, it's great. Are you enjoying it?\"\n\n\"Yeah, it's cool.\"\n\n\"Well, I won't tell you what happens,\" she laughed as she sat down.\n\nShe tried to talk more but he only stammered brief replies. She noticed he couldn't look her in the eyes and sometimes a little of that blush returned. He made obvious efforts to return to his book so Sarah picked up hers and they sat side by side reading in silence.\n\nIt was time for Sarah's swim and she stood up and took off her sundress. Al glanced over his book. He had already seen her long, slim and shapely legs.\n\nAs Sarah's dress went up he saw her bikini briefs. They were white and they were small. The shape of her pubic mound could be seen in the fabric which stopped only just above. Then her flat stomach and thin waist and navel. Her bikini bra only covered half her breasts and he saw the smooth roundness of the bare skin. \n\nSarah lathered sunblock over her face and front and legs. He glimpsed her breasts moving under her hands, saw her fingers rub up the inside of her thighs right up to her briefs.\n\nSarah was aware of his glances but she didn't mind and took no notice.\n\n\"If you don't want men to look at you, don't wear a small bikini\" was her attitude.\n\n\"Al, can I ask a favor please?\"\n\nHe looked up.\n\n\"I don't want to get sunburnt on my back. Could you put put some sunblock on please?\n\nWithout waiting for answer, she lay down on her towel, undid her bra strap and held out the tube of sunblock. There was no ulterior motive in her request; she simply didn't want to get sunburnt.\n\nAl looked down in confusion. From the first moment he had seen Sarah the day before he thought she was the most beautiful woman he had ever seen. Maybe she was seven years older but she was stunning. He had never been close to such a woman wearing a bikini before, let alone touch one. His shyness had always made it almost impossible to talk with girls and his only two sexual experiences had been one night stands when both he and the girls were drunk. \n\nNow here was Sarah with her naked back wanting him to touch it. He could see the side of her breast. He looked down her slim straight back and saw that her tiny bikini briefs showed a lot of perfect, smooth and rounded buttocks, even the start of cleft between them above her briefs and he could see right to the top of her thighs.\n\nSarah was holding out the sunblock expectantly so he knelt down beside her. She brushed her hair from her neck but a few strands were still there and tentatively Al stroked them away, touching her skin.\n\n\"That tickled,\" giggled Sarah.\n\nAt first his hands were trembling but he brought himself under control as Sarah chatted.\n\n\"Where are the others?\"\n\n\"Gone into town to do some shopping.\"\n\n\"Didn't you want to go?\"\n\n\"You can only do so much shopping and sometimes I like to read.\"\n\n\"So do I. There's nothing like a good book.\"\n\n\"Brad says you're an ace at basketball.\"\n\n\"Anyone is an ace compared to Brad.\"\n\nThey laughed together and Al relaxed a little.\n\n\"What are you studying at college?\"\n\n\"Computer science. I've just finished the second year.\"\n\n\"So you must be 19 or 20.\"\n\n\"20.\"\n\n\"20. That makes me feel so old.\"\n\n\"You're not that old,\" he said. \"You must be about 27.\"\n\nShe turned her head and smiled at him. \"Much older than that.\"\n\n\"Well you look like 27 to me.\"\n\n\"Al, you do say the loveliest things.\" She laughed and he turned crimson red.\n\n\"Why did you come on holiday by yourself? Isn't it lonely?\"\n\nSarah thought this was a bit personal but turned and smiled and answered truthfully.\n\n\"Well, I was going to come with someone, but he changed his mind.\"\n\n\"He must be mad.\"\n\nSarah laughed. \"Either him or me.\"\n\nAl put down the sunblock.\n\n\"I think that's pretty much all.\"\n\n\"Thanks. I didn't want to get burnt.\" She noticed he hadn't gone right to the edge of her bikini so she did that herself.\n\nSarah had intended to go swimming straight away but changed her mind since she had broken down some of his barriers. She waved to a waiter.\n\n\"I'm going to have some tea. Would you like something?\"\n\nHe settled for a coke.\n\nShe asked him questions about his college and his interests. Basketball was his favorite, he swam a lot for exercise and he liked skiing.\n\n\"How long have you been skiing?\"\n\n\"My Dad first took me up when I was six.\"\n\nHis eyes glazed over and he stopped talking.\n\nSarah patted his hand. \"Jeanie told me about your father last night. I thought it was so sad. You must miss him so much.\"\n\nAl turned towards her and saw that her sympathy was genuine from her misty eyes and anguished face. He made an effort to pull himself together.\n\n\"What's it like having your own business? I'm going to have one and be my own boss.\"\n\nShe laughed. \"Al, when you have have a business you have more bosses than ever. Your customers, the tax inspectors, your bank manager, your landlord and your staff and just about everyone else.\"\n\nSarah stood up.\n\n\"So, you reckon you can swim a bit, do you Al?\" She pointed to the pool. \"25 lengths is 750 meters. Are you up to that?\" \n\nAl saw the challenge in her smile. He stood up and grinned at her for a moment.\n\n\"How much of a start do you want?\" he asked. But now he looked at her straight in the eye.\n\nHe took off his T shirt and she saw that he was a swimmer. He had a slim waist and hips but had powerful shoulders and pecs.\n\nSarah was a competitive person and all thoughts of sympathy went from her mind as she started. She set a steady and demanding pace but each time she looked across she saw him swimming beside her with a slow, long armed style. At 400 meters she decided to burn him him off and upped her efforts, but there he was, his arms moving in that same relaxed tempo. She made a charge over the last 60 meters but they touched the rail at the same time.\n\n\"Dead heat\" said Al.\n\nShe splashed him with water and laughed. \"You could have beaten me easily.\" But she was glad to see that he was panting.\n\n\"We're all going to the club again tonight.\"\n\n\"I'll see you there. I'm having dinner with a couple I met today. I'll probably come later on.\"\n\nShe had a pleasant evening with an elderly couple she had met on the bus. They excused themselves at 11 and Sarah went to change. She was looking forward to the club. There were great kids and good company and no-one minded that she didn't have a partner. \n\n\"27 did he say? OK, let's see what we can do.\"\n\nShe didn't let her hair flow as she normally did, she drew it back tightly. From her modeling she knew about a good deal about makeup and a few understated touches were applied. She put on one her favorite dancing dresses. It was red, skin tight to her waist but flared below. It started half way down her breasts and finished six inches above her knees.\n\nShe drew admiring glances as she went into the club and the boys all wanted to dance with her. The girls took it in turns to dance with Al and this time he danced for at least two songs. Once they danced near each other and Sarah gave a little wave. This time he didn't blush and he smiled at her\n\nSarah sat a table with Brad and Jeanie.\n\n\"Look at Al, he looks as if he might actually be enjoying himself,\" said Jeanie.\n\n\"Yeah, I think he's coming out of his shell at last,\" replied Brad.\n\nSarah had been waiting for Al to ask her to dance, but realized that she would have take the initiative and walked over to him.\n\n\"Al, you're the only one who hasn't danced with me. Do you think I'm too old for you?\" She looked at him with the same challeging smile she had at the pool when she had wanted to race and grabbed his hand and pulled him up.\n\nShe toned down her style so that it wasn't too much for him. Gradually he relaxed and started to copy some of her movements and Sarah saw some small traces of that gazelle. She wriggled her hips a little more expansively and in a few moments he followed. He looked at her and they grinned at each other. He watched her and other dancers and soon realized there really wasn't too much to learn. It was how you did it, not what what you did.\n\nSarah could see what was happening and started to raise the pitch again and soon he responded. He didn't just copy her and they danced as a couple.\n\nOthers of the group joined them and the music was turned up louder. Caught in the atmosphere and following more people's moves, Al's gazelle emerged and Sarah let her inhibitions go. She swayed her hips and moved closer towards with her hands over her head, they looked into each other's eyes and grinned again.\n\nShe knew she danced sensuously. It wasn't something she did all the time, only with a partner who was good and interacted with her on the floor. She didn't do it calculatedly but just as Al was responding to her, she was responding to him. Al looked at her and had never seen anything so sexy in his life. He picked up the atmosphere more, picked up the beat more and the gazelle in him was fully set free. \n\nSarah taught him how to jive and he was thrilled to the hold her hand and waist. His confidence increased and he was strong as he twirled her around the dance floor. The more strong and assertive he became, the more Sarah responded. She had her challenging smile and a twinkle in her eyes as she held out her arm for him to take. As she swirled, her dress flared showing her thighs and knickers. \n\n\"You take your eyes away from that Brad,\" hissed Jeanie.\n\n\"It's Al I'm looking at. He looks like some sort of matador. She's done that in half an hour.\"\n\nThe music changed and they switched dancing styles. Sarah was carried away, she loved dancing so much and she danced with her body writhing like a python. Al watched for a moment then joined her. She smiled her challenging smile, came closer, put her hands on his shoulders with her arms almost straight and they matched each other's rhythm and movements. She changed from a sideways movement of her hips to thrusting, which Al matched, then she pulled away again. Al watched her coming to him with his confident grin and when she put her hands on his shoulders he put his on hers. They looked into each other's eyes, their faces only half a meter apart as they bounced their hips towards each other.",
        "The music stopped for a dance break. Sarah laughed from exhilaration still keeping one hand on his shoulder. \n\n\"Thanks Al, you're a great dancer.\"\n\n\"I wasn't an hour ago.\"\n\n\"You've got a lovely feel for rhythm. And you're so light on your feet and so strong.\"\n\n\"Thanks for teaching me, I never knew I could do it.\"\n\n\"You're a natural.\"\n\nBefore he could blush, she pecked his cheek. \"I've got to go. I'm going fishing at five tomorrow morning.\"\n\n\"We're going to an ocean beach tomorrow afternoon Sarah. Want to come?\" asked Brad.\n\n\"What time are you going?\"\n\n\"What time are you back from fishing?\"\n\n\"Midday.\"\n\n\"See you in the lobby at half past.\"\n\nAfter Sarah had gone Al didn't want to dance with anyone else and left soon after her.\n\nJeanie spoke sternly to Brad. \"Now I don't want you or any of the other guys making any of your suggestive jokes to him later on.\"\n\n\"Hell, that was some display they put on. I hope she isn't a cock teaser.\"\n\n\"Mmmm,\" said Jeanie. \"I hope not too. I don't think she's that sort of person. We'll see what happens tomorrow, I guess.\"\n\nIn her hotel room, as her exhilaration wore off Sarah suddenly felt guilty. She had a fair idea of the effect her dancing like that would have on a na\u00efve young man like Al.\n\n\"Was I being a cheap cock teaser with that poor boy? I danced with him for so long, he was the only one I jived with and the only one I touched.\n\n\"Why did I wear that dress? I know how it can show my legs all the way up.\"\n\nWhen she had started talking to him at the pool it had been been out of sympathy and to help him with his shyness. Then she remembered his grin when he had asked her how much start she wanted. She had liked that.\n\nShe had empathised with him as his emotions showed when he talked about his father and she had thought how brave he was. \n\nShe remembered how quickly he had become such a good dancer. She thought about his strength and confidence when they had jived. She realized that she had danced like that in response to him. She had liked it when they had smiled at each other. When she had put her hands on his shoulders, it hadn't been out of sympathy, it was because she had wanted to. She had been waiting for him to put his hands on hers and she had liked it when he did.\n\n\"I wonder if he knew how sexy he was when he danced like that?\n\n\"Here's the question for you Sarah. Would you like to be fucking him right now?\"\n\nShe thought for just a moment. \"You bet I would.\" \n\nThat body, that lithe strength, that lovely confident smile she was seeing more of, his sensitivity and that sense of humor she was seeing traces of. And in that youthful, awkward way, his sexiness.\n\nThen she started to have self doubts. A 35 year old woman with a 20 year old boy? Why would he want to?\n\nAl was shy and easily embarrassed and unsuccessful with girls, but he had all the 20 year old male urges. In his room he relived every moment of the most exciting hour of his life.\n\n\"God, she is so beautiful and so sexy and so nice. Putting that sunblock on her back. And that dancing together, that was out of this world and she danced with me far longer than she danced with anyone else. Dancing so close and holding her with her hips moving like that!.\" \n\nHe thought some more. \"Hey, I was pretty good.\" He grinned as he remembered how he twirled her when they were jiving and how she had moved towards him holding out her hand. \n\nThen he remembered how all of her legs had showed as she had swirled with her dress flaring. And her knickers. And the bulge of her pubic mound. It took him a minute or so to compose this thoughts.\n\n\"And she said I was a natural and she kept holding me after the music stopped and she kissed my cheek.\" \n\nHe remembered her twinkling, challenging smiles. When she had challenged him to a race at the pool, when she had grabbed his hand and pulled him up to dance, when she had held out her hand for him when they were jiving, when they looked into each other's eyes when they were dancing with their hands on each other's shoulders.\n\nThat smile had seemed to say, \"Are you man enough?\" \n\nA panic attack. \"She'll know everything about sex and I don't know anything I won't be able to do it properly. \n\nHe calmed down. \"What the hell are you thinking? Sarah with someone like me? Why would she want to?\"\n\nThe students were waiting in a small bus they had rented. Jeanie had kept a seat for Sarah beside her and Al was down the back. The music and laughter was loud as they drove for half an hour on the asphalt and another half hour on potholed dirt road to a deserted palm fringed beach. This was on the ocean side of the island and large breakers foamed and crashed onto the beach.\n\nSarah lay on her towel and undid her bikini bra straps.\n\n\"Please Al, you know what to do.\" She held out the sunblock and Al knelt down beside her.\n\nJeanie and Brad looked at each other in surprise.\n\n\"Al was gentleman and helped me yesterday at the pool,\" Sarah explained seeing their glances.\n\n\"Gentleman? I'll bet he wasn't thinking about being a gentleman,\" said Brad.\n\nAs soon as Sarah had asked for him to sunblock her back again Al was confident that it was game on. He looked up at Brad and Jeanie, grinned and gave them a big, slow wink.\n\n\"Come on Brad, let's leave them to it. I need some sunblock on me. Why can't you be a gentleman like Al, for goodness' sake?\"\n\nSarah hadn't seen Al's wink but she laughed with him. She noticed that his touch was more confident and delicate and this time he went right down to the edge of her bikini. Like Al, she realized it was game on. Especially when he spanked her lightly on her bikini briefs and said \"Finished.\"\n\nAl passed the sunblock to Sarah and lay on his towel.\n\n\"Please Sarah, you know what to do.\"\n\nSarah knew a bit about massage and her fingers drifted over his back as she admired his lean muscles. It was just as well that Al was lying on his front as his erection shot up.\n\n\"Finished.\" said Sarah slapping his backside hard.\n\nAl had to stay lying there for five minutes until his erection subsided.\n\nThe ocean breakers were big and warm and strong. Brad and Jeanie and two other long term couples went five hundred meters along the beach so that they could swim naked. Sarah would have liked to have joined them but thought that could be pushing things too fast.\n\nWith four others they frolicked and body surfed in the breakers. The others had seemed to have formed into couples and were touching a lot and holding hands and Al and Sarah drifted together. Sarah was a strong swimmer but she didn't know about body surfing. She watched how Al dived under the breakers as they waded out and copied that. Then she watched in frustration as Al seemed to catch each wave perfectly while she just couldn't time her start.\n\nWhen Al came out to her again Sarah asked if he could show her how.\n\n\"OK, just float on your stomach.\" \n\nHe had one arm supporting her under her stomach and the other behind her feet. He could feel her smooth skin and the firmness of her abs.\n\nShe heard a wave approaching and then felt him push powerfully on her feet. She caught the wave perfectly and felt the thrill of the speed and the foam and the turbulence of the water on her body.\n\nAl caught the next wave and was soon beside her in the shallows. He looked at her in her wet bikini which clung to the shape of her breasts and to the shape of her pubic mound.\n\n\"This so much fun.\" She gave him an excited hug. \"Let's do it again.\"\n\nShe dragged him out by hand and didn't let go until they were far enough out for the next wave. On the third wave Sarah lost her balance on Al's arm and slipped through the water. He felt her body slide against his arm, felt her bikini bra being pushed up and a momentary touch of his arm against her bare breast. The wave crashed over them and when Al surfaced Sarah was finishing adjusting her bikini. He expected her to complain, but she shrieked with laughter and splashed him with water\n\nAfter two more rides Sarah was able to get started by herself. Al missed holding her in the water but each time they walked back out they held hands.\n\n\"There's a big one,\" said Al. \"We''ll need to get further out \n\nSarah saw the large swell in the distance and waded out further but it was hard to keep balance in the deeper turbulent water. She jumped up and wrapped her legs around his waist and held on with an arm around around his shoulder. Both looked at the progress of the swell and Al gave her a few pointers on dealing with big waves, but was very much aware of her legs around him. She moved into position before the gathering breaker towered over them and had a moment of panic before catching it at exactly the right time. \n\nIt was one of the most exciting experiences of her life, her body half out of the water in the front of the wave, the power of the wave, the surf crashing around her, the spray, the noise and the speed. When she stood up she jiggled with excitement.\n\n\"Al, that was incredible.\" She hugged him. Her eyes were glowing with pleasure as she looked into his face, before she closed her eyes and kissed him. Al felt her soft lips, felt them part and felt her tongue run across his lips. He opened his mouth and felt her tongue explore his. As they stood he could feel her breasts against his chest and her hips against his and her smooth, wet body.\n\nAnother wave came in and almost knocked them over and they went out again. There was a long wait for the next good wave so Sarah jumped up again and wrapped her legs around his waist. Only this time she was facing him with her pelvis pushed into his bathers. As she kissed him he put his arms around her bottom to hold her up. His erection was rising and they didn't notice the next wave which crashed into them and knocked them over. When they surfaced Sarah shrieked with laughter again and hugged him.\n\nThey looked to the beach and saw that the others were preparing the barbecue.\n\n\"We should go in and help,\" said Sarah.\n\nThey caught the next wave and when they got out of the water Sarah kissed Al's cheek.\n\n\"That was so much fun. Thanks Al, thank you for showing me how to do that.\"\n\n\"You're a natural.\"\n\nThey laughed and held hands as they walked. Al worked out that one of the reasons liked Sarah so much was that she was so quick to give genuine praise and thanks.\n\nBrad watched them walking up the beach.\n\n\"What's the odds on Al losing his cherry tonight?\"\n\n\"About 100 % chance I reckon,\" said Jeanie. \"He's not just a toy boy for her is he?\"\n\n\"Cut it out, she's a lovely person, you know that. And Al can look after himself. You saw that wink.\"\n\nSarah put on a singlet and a long cotton sarong which floated around her legs. She did her bit to help with the fire and the food then took a glass of wine and sat by herself looking at the surf. She felt a glow of contentment wash over her. The thrill of the surfing, the great company of the students who accepted her so warmly. She hadn't felt so relaxed since before that terrible night with Roger.\n\nShe looked at them, such a nice group of kids. No, not kids, just great company. She noticed Al talking to some of the girls, so relaxed in contrast to that first night in the disco. She remembered how strong he was when he was holding her up. She remembered the feel of his smooth young skin.\n\n\"If I'd got pregnant the first time I did it, my child would be almost the same age as he is.\"\n\nShe thought about the simple facts of life for a 35 year old woman and that her most likely men would be over 40. She compared his sleek and powerful young body and the boyish confidence and enthusiasm he was showing more and more. She knew from their kisses that he wasn't experienced and Brad had said that he'd never had a girlfriend, but that didn't matter.\n\n\"I think we'll be good for each other, young Al,\" she thought as she walked to the barbecue.\n\nAl and Sarah mingled with the others as they ate and when it was dark the stereo was turned up and the dancing started. Some of Al's friends danced with Sarah and she saw how he was comfortable asking the girls to dance with him and saw that he was the best of the boys at dancing.\n\nAfter an hour Al came over to Sarah. \"Sarah, you never dance with me. Am I too young for you?\"\n\nThey started apart but fed off each other's eroticism. They smiled at each other as each raised the tempo. Her sarong sometimes opened showing her lovely legs and he could tell that she wasn't wearing a bra. They bounced their hips towards each other and Sarah moved closer, her arms over her head and rubbed her hips into his, then moved back. The next time she came close Al pretended to reject her by moving away but then came forward, his hips into hers and clasped her backside for a moment.\n\nThe others watched in fascination for a minute then moved away. The next time Sarah came close she held him around his ass and Al put his arms lightly around her shoulders. They writhed hip to hip and breasts to chest, then separated again. The times apart became less frequent and the times in contact became longer until they were swaying together. Sarah raised her face, Al lowered his and they kissed as they swayed to the music.\n\nAl was sure that they would be making love that night and the long buildup which had really started a day ago when they were dancing, had continued in the surf and now, feeling her body and kisses, was starting to drive him crazy. Then his doubts.\n\n\"She's so sophisticated and so sexy and so experienced. And I've only done it twice and I can hardly remember them.\" He panicked. \"God, I don't know what to do except just sticking my dick in. I'll stuff up.\"\n\nHe worried about his erection. Surely Sarah could feel it? Then he realized that she certainly could as she was rubbing against it. Well, he didn't mind if she didn't. He drifted one hand down her back to her bottom and gently squeezed and Sarah hugged him tighter.\n\nHe made the sensible decision. \"This is unbelievable. She's the boss, just go with her flow.\"\n\nSome of the other couples drifted further off into the darkness with obvious intentions. Sarah didn't want that, she wanted their first to be special and in complete privacy, she wanted to slow it down, she didn't want a one minute quickie and it was her painful experience that sex and sand didn't mix. She led him some distance from the others.\n\n\"Lie down here please Al.\"\n\nHe didn't know what was happening but she was the boss. He lay on his back and Sarah lay at right angles, her head resting on his stomach. They looked up at the stars and moon and listened to the ocean's roar. Sarah took his hand, delicately stroked it with her fingers tips then placed it on her breast holding it their with her hand.\n\n\"You did that on purpose out there didn't you?\"\n\n\"Did what?\" replied Al knowing exactly what she was talking about.\n\n\"Taking my bikini top off.\"\n\n\"No, I thought that was your idea,\" he laughed.\n\n\"Perhaps it was an act of God?\"\n\n\"Thank you God,\" he laughed again.\n\nAnother silence and he felt her nipple harden and softly stroked it between his fingers. He looked at her face, silver in the moonlight, with a tranquil, dreamy expression. He looked down at her legs where the split in her sarong was wide and he saw her thighs glinting in the moonlight. \n\nHe looked at his hand on her breast with hers holding it there. \n\n\"Surely she won't mind,\" he thought and gently eased his hand under her singlet.\n\nShe didn't seem to mind at all and as soon as his hand was inside she put hers on top. He felt the smoothness of her breast, felt the jutting nipple and the texture of her aureole. \n\n\"I'd like it if you took off my top.\"\n\nShe sat up and he nervously tugged her singlet up. The moon and the stars cast their silver over her upper body, over her firm small breasts and over her jutting brown nipples. Sarah stayed sitting up as he looked at her body in awe. Then he looked into her eyes.\n\n\"I. .I don't know what to say,' he stammered.\n\n\"You don't have to say anything dear Al,\" she whispered.\n\nShe went back to lying with her head on his stomach and returned his hand to her silver body. \n\nSomeone had turned the stereo off. There was no sound but the roar of the surf and the rustle of the leaves in the breeze. There was no light except for the moon and the stars.\n\nHe started to squeeze her breasts.\n\n\"Sometimes I like it like this.\"\n\nLike a feather she drifted her fingertips over his hand.\n\nAs gently as he possibly could Al traced his fingers over Sarah's breasts over her aureoles and nipples, then over her flat stomach, over her navel, over her collar bones, even more gently over her throat and her forehead, her eyelids, her cheek bones, over her ears and nose and lips and chin. He watched her face all the time and saw her gentle smile.\n\nShe took off his T shirt.\n\n\"You're not allowed to move. Nothing at all.\"\n\nShe lay on him, he could feel her breasts against his chest and her pubic bone on his erection. Ever so gently she kissed him all over his face, his forehead, eyelids, nose and cheeks and lips and ears and throat. Then she repeated it all, licking with the tip of her tongue.\n\nAl thought he was on a different planet; the planet ecstasy.\n\nShe rolled off and lay beside him giving him a big kiss.\n\n\"Now you can do it like before.\"\n\nAl drifted his finger tips over her nipples.\n\n\"No silly, like before that\"\n\nHe took the hint and squeezed her breasts as she kissed and hugged him. But he had learn the lesson she had taught and mixed firmness with tenderness as he pleasured her breasts and she kissed him with her tongue in his mouth. She wrapped a leg around his and he could feel her pubic mound pushing against him.\n\nThey heard the sound of the bus and saw its lights. Sarah handed Al his T shirt and put on her singlet.\n\n\"It's been a lovely day and you've been so lovely.\"\n\n\"You've taken me to another world.\"\n\nThe others returned from the darkness with some of the girls adjusting their clothes.\n\nThere was no music in the bus this time and no talking and the lights were off. Al and Sarah sat on a double bench seat. Sarah snuggled into his shoulder and he put his arm around her. She took his other hand, found the gap on her sarong and put Al's hand on the inside of her thigh, just below her pussy and because she had been up since half past four she went straight to sleep.\n\nAl relived the afternoon. Swimming in the surf, the laughter and the kisses and hugs. Her body in the moonlight, how perfect every millimeter of her skin was, her kisses and her tongue.\n\nHad he stuffed up? Yes he was squeezing too hard and she told him to be be softer. But later she said she wanted that. He was confused but then he realized that he had to try different things and see what she wanted.\n\nHe looked down at his hand on her thigh. God that was so nice, so intimate. He could see the edge of her knickers. He moved his hand up so that it was just touching them. \n\nThey came into the lights of the town and everyone woke. Sarah looked at Al's hand, smiled at him, squeezed his hand and then moved it away.\n\nBack at the hotel they unloaded the bus then Sarah took Al's arm.\n\n\"Al, I wanted to talk about that book with you.\"\n\n\"Book? I don't think there will be too much reading. Or too much talking,\" muttered Brad to Jeanie.\n\nIn her bedroom Sarah kissed Al, holding him and stroking his hair.\n\n\"Would you mind taking my clothes off?\"\n\n\"Mind? No I don't think I'll mind too much,\" said Al in a croak.\n\nHe lifted her singlet and saw those breasts again. The size of apples with brown aureoles. Sarah moved his hand to the ties of her sarong and soon that too was on the floor. She pecked his lips and guided his fingers onto her knickers and they were eased off.\n\nAl had seen her in a very small bikini but the sight of Sarah naked was something different altogether. Her trimmed black pubic hair and total nudity was an awe inspiring sight of perfect sexuality. ",
        "She came to him, kissed him then guided his face to her breasts and held him as he kissed her nipple. Then she stood back.\n\n\"Right, we need to get rid of all this this sand.\"\n\nShe led him into the bathroom and quickly and firmly took off his clothes. In a moment Al was standing naked and extremely embarrassed with the hardest erection of his life. Sarah did nothing to help, looking at it closely, then she tenderly stroked it and smiled.\n\n\"Hi there stranger, although you're not really a stranger the way Al pushed you into me.\"\n\n\"I did not. You pushed into me.\"\n\n\"I certainly did not. It must have been an act of God.\"\n\n\"Thank you God,\" they said and laughed together.\n\nSarah turned on the shower and beckoned him in. Under the jets of water in the shower she washed his body with a flannel and soap. There was nothing sensuous in her touch as she rubbed to clean off every grain of sand and salt. Even his erection was firmly rubbed with the flannel in a professional, nurse like manner.\n\nThen her attitude changed and she kissed him again and he felt her fingers fondle his balls.\n\n\"I wonder if this is really clean. I'd better make sure.\"\n\nBefore Al understood what she was talking about she was on her knees under the jets of water from the shower and his knob was being licked. She licked everywhere carefully and then took him right to the back of her throat. Al had only ever fantasized about oral sex before and was out of his mind with excitement as her head bobbed up and down. He felt her lips running along his shaft, he felt his knob move over her tongue and rub against her throat. The long build up, the excitement that she was really doing this and wonderful sensations combined with an almost instant reaction.\n\n\"Sarah I'm going to come,\" he gasped and tried to pull her head back.\n\nBut she pushed forward and Al felt a load of jism shoot through his perineum, along his shaft and explode through his knob and into her throat. Sarah stood up and then swallowed and licked her lips.\n\n\"Hello Alistair.\"\n\nShe guided him out onto the balcony and they looked out at the dark sea and sky and the moon and the stars. Al put his arm around her and she snuggled in. Al was bewildered. A woman doing that to him, Sarah doing it to him! He nuzzled her hair. Then another panic attack about what she would expect him to do for her.\n\nOn the bed they started kissing again. Al's feeling of intimacy for Sarah showed and he kissed her with passion and tenderness, their tongues entangled and their saliva intermingled. Sarah ran her fingers over his body and he responded, she kissed his nipples and he responded and she pleasured his genitals and he responded. \n\nSarah liked his touch but realized that he knew little, if anything about a woman's body. She thought of telling him, but by now she was desperate to feel his cock inside her and guided him in.\n\n\"Just slowly at the start Al,\" she said as he started to pound.\n\nShe wrapped her legs tightly around him, stopping him moving and squeezed her vaginal muscles.\n\n\"Ah, that feels so lovely having you right in there.\"\n\nHe felt the wonderful exciting sensations for a moment then gradually started moving. He felt her hips thrusting up to him, then his 20 year old's hormones took over and he came in a rush.\n\nSarah held his cheek to her shoulder. She hadn't come and he had been even faster than she had been afraid he would. He hadn't gone down on her when she had gently nudged his head. But she had loved the feelings in her vagina and loved being in his embrace. And she remembered how he had traced so delicately with his fingers at the beach. She hugged him tightly and they went to sleep in each other's arms.\n\nAl woke first and took a moment to work out where he was. Then he saw Sarah's beautiful face and saw the shape of her body under the sheet.\n\n\"Have I really had sex with her? Did she really do those all wonderful things to me?\" As well as sexual desire and fascination at her beauty he felt a wave of tenderness.\n\n\"I've got to find out what I should do.\"\n\nHe went from the bedroom to the living room and did a Google search. It took him a while to sort through the hardcore sites but eventually found what he was looking for. There were a lot of detailed instructions and some surprised him and some made him breathe in sharply. \n\n\"Jesus Christ, will Sarah really like it if I do that to her?\".\n\nSarah had been tired after getting up early the previous morning and it was two hours before he heard her stirring and quickly switched to a news site. She came in wearing a white bathrobe.\n\n\"Hi Al, what are you doing?\"\n\n\"Just catching up on the news.\"\n\nShe leaned over beside him, her side against his shoulder.\n\n\"What's happening?\"\n\n\"Suspected bird-flu in Albania.\" He pointed at the screen.\n\n\"Do you care?\"\n\n\"No.\"\n\nSarah hadn't done up her bathrobe very well and a perfect right breast was on display. She noticed his gaze but did nothing to cover herself. Al was already aroused from his internet studies, now with that welcoming breast and Sarah's challenging smile he leaned forward and kissed her nipple. Sarah immediately noticed the difference from the night before. He was licking and sucking and nibbling and tickling and exploring. She put her arms around his head until he lifted her and carried her to bed.\n\nHis kissing was even more passionate and his hand on her breast was a mixture tenderness, eroticism and excitement. He moved his mouth to her nipple and Sarah's excitement rose. Then she felt his hand part her legs. She felt him explore the insides of her thighs and then her vulva and then her thighs again. A mixture of tantalizing and delight. She felt his fingers softly probe her vagina then move up through the feminine folds around her clitoris.\n\nAl was finding it hard to work out exactly where her clitoris was but Sarah was in ecstasy at his tender explorations. He still wasn't sure but when Sarah groaned and her hips shivered he knew he had found it. With care he stimulated her with his fingers, sometimes moving away briefly, then returning. He listened to Sarah's reactions and he felt her reactions and did just as the website had said.\n\nSarah's hips bounced and shuddered, her breathing became rasping, culminating in a high pitched groan. She lay on the pillow with a lovely happy smile and lifted Al's head.\n\n\"That was so wonderful Al, thank you so much for being such a lovely lover.\"\n\nAl was in heaven. To see Sarah have an orgasm, to feel her reaction to him and to hear her say he was a lovely lover. He bent down to kiss her and just about suffocated in her hug.\n\nAl moved down the bed and Sarah watched in anticipation. \n\nHe took a pillow and said \"Lift you bum please.\"\n\nShe now had her backside raised and him between her legs. He nudged her legs wider and pushed her knees back and she felt a thrill of excitement at his assertiveness. \n\nAl's inexperience was Sarah's delight as he explored new territory. He had no trouble finding and licking and nibbling the top of the inside of her thighs. As the site had advised he licked the crease between her legs and vulva, then he moved to her vulva. He couldn't resist the urge to push his tongue deep into her vagina. God, it tasted and smelled so beautiful. He lingered, sucking and licking as much of her juice as possible.\n\nSarah's hopes hadn't been high but that had soon changed.\n\n\"I never would have thought that he would know about that. What's happened?\"\n\nThen she stopped thinking as the erotic sensations built up in her vulva.\n\nAl worked out what must be her outer labia and he licked and nibbled and Sarah groaned. Then her inner labia which he sucked. He moved up and at first was a little bit confused by the folds around her her clitoris. He explored with his lips and tongue.\n\nSarah didn't realize that her extended pleasure was a result of his uncertainty, all she knew was that this was gorgeous. She spread her legs wider and stroked his head.\n\nAt last he found her clitoris. He thought it was that when he felt the small bud and was sure when Sarah's hips started to writhe and her panting became louder. He remembered the website.\n\n\"Take her right to the brink then pull back. Make her beg for it, man.\"\n\nHe returned to her vagina, licking as far as his tongue would go, nibbling her labia and clitoral hood. He loved the tastes and textures, he loved her responses and most of all he loved knowing that this was Sarah's most intimate parts she was opening for him.\n\nHis tongue came back to her clitoris more firmly. Sarah raised her hips to feel more and held his head more tightly. She groaned and writhed. Al remembered the website, \"make her beg for it, man\", and moved his tongue away.\n\n\"Oh no, Al, please, make me come, please.\" \n\nIt was a high pitched moan. Al sucked and licked her bud and Sarah came in a combination of shrieks and bounces and writhing. Her orgasmic juices covered his face. Al licked and sucked and explored her folds as she recovered.\n\nHe came up beside her. She had a tranquil smile as she stroked his face.\n\n\"Oh my fucking God, that was wonderful.\" She felt the moisture on face. \"I've come all over you, don't you mind?\"\n\nAn embarrassed blush came to his face. \"Sarah I'll ever get enough of it.\"\n\n\"What on earth has happened since last night?\" wondered Sarah.\n\nShe made some coffee which they drank on the bed. Al looked at her wonderful body as they talked and traced his fingers over her breasts and stomach. Sarah loved it and when he moved to her pussy she opened her legs for him. His touch was very light as he explored each detail. It just felt intimate and tender rather than arousing to Sarah and she lay back in pleasure. Then she felt some more intensity and quickly put their coffees on the bedside table and kissed him urgently.\n\nIt only took a few seconds before she whimpered and shuddered into another orgasm. She simply couldn't believe it.\n\n\"This isn't fair. I've had three lovely orgasms this morning and you haven't had any.\"\n\nThe website had prepared him.\n\n\"Remember, a lot of very sexy women don't ever come from a straight fuck, and some not very often. This position will give you your best shot.\n\n\"Whatever you do, man, don't come too soon.\n\n\"Now women often like it soft and tender, but you're more likely to hit the jackpot by forgetting about that when you do it this way. Go for it man.\"\n\nHe had also read about premature ejaculation.\n\nHe started to move Sarah into a kneeling position and she quickly understood.\n\n\"How does he know about this?\" \n\nBut it was one of her favorite positions and she put her bum in the air and her shoulders on the sheets. Al's entry was tentative as he still wasn't sure, but Sarah pushed her buttocks back into him. He realized the website must be right and thrust in hard and deep so that his knob nudged into her cervix. Sarah knew what was going to happen and moved so that she could hold onto the headboard.\n\nBut she hadn't anticipated what a fit and strong 20 year old who was just starting to enjoy his sexual prowess could do. Al held her hips and decided to \"go for it\". The sight of her rounded ass, the powerful urges from his cock and the confidence from her having three orgasms already meant he forgot all his inhibitions.\n\nHis loins bashed into her buttocks and his knob banged into her cervix.\n\nSarah groaned in delight and held the headboard tighter. Al sped up and thrust even harder. He changed position slightly so he could get in deeper. He forgot about tropical islands, he forgot about beaches, he even forgot about Sarah as raging hormones and raging sensations from his cock took control.\n\nThis suited Sarah. Her body shook but she kept thrusting back on him and she too forgot about the sea, beaches and Al as the only things she was aware of were the soaring sensations in her vagina. Her groans became grunts.\n\nAl didn't have to worry about premature ejaculation having come twice the night before and he thrust and pounded in an unrestrained and mounting primeval frenzy. He didn't realize that she had come to a groaning orgasm as the surge shook through his loins and burst through through his knob. They collapsed in a sweaty jumble of limbs.\n\n\"Did you come Sarah?\"\n\n\"Come?\" she panted. \"I came, I went on a rocket to the moon and came again on your beautiful cock darling Al.\"\n\n\"I didn't hurt you did I? I sort of got carried away.\"\n\n\"Did you?\" She smiled.\n\nSarah ordered a brunch to be brought up and they sat on the balcony as they ate. She couldn't contain her curiosity.\n\n\"How many girls have you bonked?\"\n\n\"Before you, only two.\" That blush again.\n\n\"And did they teach you lots of things?\"\n\n\"I don't think so. It was only once with each of them and I was pissed both times.\"\n\nSarah thought before her next question.\n\n\"What happened between last night and this morning?\"\n\nAgain that blush and a sheepish expression.\n\n\"Tell me. I won't mind.\"\n\n\"I went on the computer and found a website.\"\n\n\"You mean you weren't reading about bird-flu in Uzbekistan or wherever?\"\n\nMore of that sheepish expression.\n\n\"I'm glad you weren't.\"\n\nAfter another five minutes, \"You can move your things in here if you'd like to. And Al, you can do that to me anytime you like. You don't need to ask.\"\n\nThey played volleyball with the others, went swimming, another dead heat, and went sailing in small racing dinghies. They showered, then idly and tenderly pleasured each other's genitals, licking and kissing in the 69 position. Sarah couldn't quite understand why he seemed to adore her so much down there but was delighted that he did.\n\n\"I used to have a Brazilian. Would you like me to get one tomorrow?\"\n\nShe took that kiss on her clitoral hood as a 'Yes'.\n\nWhen she had his cock in her mouth she remembered how he had tormented her that morning and took him to the brink three times.\n\n\"For fuck's sake Sarah,\" he groaned before she took him to the depths of her throat and then felt his cum spray onto her breasts.\n\nThe next morning Sarah showed him her beautician's expert handiwork but hadn't expected his reaction to her Brazilian.\n\n\"Oh my fucking God, you're so beautiful down there. For heaven's sake Sarah, look. You've got two smiles. Hello southern smile.\" He kissed her vulva. \n\n\"Hello northern smile.\" He kissed her lips. \n\n\"Hello vertical smile.\" Her vulva again.\n\n\"Hello horizontal smile.\" Her lips.\n\n\"Are you just going to talk about it? Or are you going to do something about it?\" Sarah demanded. \n\nSo he slipped between her legs, pushed them right back beside her body and wide and got down to some serious business. After an hour she pushed him away because she was exhausted.\n\nOver the next two days everything became better and better. Their sex went to new heights of tenderness sometimes and new heights passion and raw physicality at others. Sarah realized one of the very real positives of Al being 20 was that he was always ready for more. She thought about one of life's cruel ironies in that men reach their sexual peak at 19 or 20 while women reach theirs in their mid to late 30s. In this respect they had perfect timing.\n\nIt was far more than sex. Their days were busy, swimming in the pool always with dead heats, surfing, sailing, snorkeling, volleyball with the group and in the evenings they went dancing. Sarah taught Al more steps and they became quite an attraction on the floor. They could happily spend hours talking and laughing or walking and reading in silence, just soaking up the pleasure of the other's company.\n\nSarah was becoming fonder and fonder of him. She called him darling and Al was absolutely devoted to her.\n\nOn the second night after she had had her Brazilian, Sarah noticed something different in Al's oral sex on her. He was licking all around her vulva and perineum as he often did when his tongue tickled her anus for a moment. She had two immediate reactions.\n\n\"How could anyone do that?\" and her instincts against anal sex. Two men had asked her to and, when she was drunk one night, she had agreed to try it with one. But she had stopped in less than half a minute because it had hurt so much. But what Al had just done certainly hadn't hurt and he seemed to enjoy it. She couldn't understand why anyone would want to lick her there.\n\n\"I don't mind if he doesn't\".\n\nHis tongue ventured again, this time for a little longer.\n\n\"God I never thought that would feel so nice,\" she thought and pulled her knees back to open herself more.\n\nThis time his tongue even probed inside. Sarah was excited by the feeling of forbidden pleasure and she soon orgasmed when he turned to her clitoris.\n\nShe pulled him up and kissed him. No nasty tastes, mainly her vaginal juices which she loved almost as much as he did.\n\n\"No-one's ever done that to me before,\" she said.\n\n\"I've never done it to anyone before.\"\n\n\"Well that doesn't surprise me. Why did you do it?\"\n\n\"I've had the urge for days and this time I couldn't hold back.\" He didn't mention the instruction website.\n\n\"I'm so glad you didn't hold back, but isn't it dirty?\"\n\n\"No it's lovely. Did you mind?\" \n\n\"Mind? No I never thought anything would feel so nice there. But Al, I tried anal sex once and it just isn't me. It hurt so much I stopped in half a minute. Please don't try it, please don't even start to talk about it. I just don't want your cock in there.\"\n\nHe kissed her nipple. \"It's your body and it's your decision.\" \n\nSarah snuggled into his arms, she knew he would never do anything to hurt her.\n\nHe didn't repeat it in their love making the next day and Sarah became a little frustrated. But that night his gorgeous tongue returned. She lifted her backside up and splayed her legs to help. She even used her hands to pull her buttocks apart.\n\n\"God his tongue must be in almost an inch. That is soooo lovely!\" \n\nAl moved to her clitoris and inserted two fingers into her vagina and played on her G spot. As her excitement grew she felt one of those fingers come out and rub her anus. Then it just slipped smoothly in. \n\nWith one finger on her G spot, one in her anus and her clitoris being sucked Sarah came to the biggest orgasm of her life. After a minute Al started to lick again.\n\n\"No Al, darling, I couldn't take any more just now.\"\n\nHe came up the bed and she put her head on his chest as she still felt her body purring.\n\n\"Put your finger back there again.\"\n\nHe reached over and put some massage oil on his fingers He played over her anus.\n\n\"Put it inside again please.\"\n\nSarah was surprised how easily it slid in and how beautiful it felt.\n\n\"Try another finger as well.\"\n\nThis was a little bit more difficult at first, but Al was gentle. At first she felt uncomfortable but as he gently massaged and moved in and out, it felt better and better.\n\nSo good that she nibbled his nipple. She pulled away.\n\n\"And what would you like now, young Al? My mouth or my vagina?\"\n\n\"Both.\"\n\nAl played volleyball with his friends the next morning but Sarah said she had a headache and stayed inside. Once he was gone she did a Google search as he had done four days before. Her first results were similar to his as she landed on hardcore sites but by luck she arrived on \"A Woman's Guide to Anal Sex\" and she read carefully for an hour. \n\nAfterwards she took a taxi to the other side of town where she wouldn't be recognized and bought two big tubes of gel.\n\nThey strolled along the beach.\n\n\"Have you still got your headache Sarah, you seem a bit quiet?\"\n\nShe squeezed his hand. \"I'm fine, I'm just thinking.\"\n\n\"What about?\"\n\n\"I'll tell you inside.\"\n\nOnce inside she showed him a tube of gel.\n\n\"This internet site says you've got to use lots and lots of this.\"\n\nHe knew immediately what she was talking about but just nodded.\n\n\"It says it's usually best if you use your fingers first to get me ready and it says you've got to be gentle and slow at first.\" Sarah held his hand tightly and looked at him pleadingly.",
        "\"I'll be gentle and slow.\"\n\n\"It says lying on our sides with you behind might be best for the first time.\"\n\n\"That seems like a good idea.\" His voice was a whisper\n\n\"It says it might hurt me a little bit at first, but it's worth making the effort.\"\n\n\"I'll stop if it hurts too much.\"\n\n\"You will please, won't you?\"\n\nAl could tell she was nervous so he put on some dance music and took off her clothes and Sarah undressed him. They danced and perhaps drank too much wine. Sarah relaxed and was soon dancing erotically in front of him, then holding him tightly.\n\nAl went down on her and with two fingers in her anus she came to a lovely orgasm. Her emotions were in conflict: she needed him in there but she was scared.\n\n\"Have you put lots of gel on?\" she asked as she lay in front of him.\n\n\"Lots.\"\n\n\"Good, put on lots more. And on my bum.\"\n\n\"I think you should lift up your knees a bit more.\"\n\nShe felt his knob nudge her anus and winced.\n\n\"Did that hurt?\"\n\n\"No, I'm just a bit nervous. Try again.\"\n\nThere was a little bit of pressure but suddenly his knob was inside and it hadn't hurt at all.\n\nAl felt exquisite sensations from his cock and pushed in further. Her rectum felt tight but he slid in easily.\n\n\"How far are you in now?\"\n\n\"About half. Is it alright?\"\n\n\"It's lovely. Just go in and out up to there. No further.\"\n\nAl started his rhythm and found that it became easier the more he did it. He could take his cock right out and slide in with no resistance. He sped up his movements and felt Sarah's backside start to writhe then suddenly she thrust back.\n\n\"As far in as you can Al, darling. It's gorgeous.\"\n\nThat was the end of his restraint. He pushed in hard so that his pubic bone was up against Sarah's buttocks as he strove to get his cock in deeper into this wonderful channel. She groaned and pushed back and he moved his fingers to her clitoris.\n\n\"As hard as you can, please Al.\"\n\nSo he obeyed her command and he obeyed the commands of his cock. The tightness and smoothness of her bowel was a new and exciting feeling. That Sarah was giving him her anal virginity aroused him more and as soon as he was sure she was enjoying it he drove in hard and deep,his loins crushing into her buttocks.\n\nSarah's anal nerves were humming. The rim of her anus was almost burning with delight and her rectum squeezed on this welcome intruder. Every time he thrust in deeper the better it felt. She felt the pressure through to her vagina and her pleasure seemed to be surging everywhere. She pulled her buttocks apart to help him get in deeper and sighed with joy.\n\nShe came first with a shudder and a joyful wail and Al grunted as his load surged through his cock and into her deep recesses.\n\nShe looked sad afterwards.\n\n\"What's the matter? I thought you had liked it\"\n\n\"It was absolutely beautiful. No, I was thinking of all those wasted years. But perhaps God was wise and kept me waiting until I found you. \n\n\"Yes, that's it. I'm so glad I did that with you first darling Al. No other man would have so been gentle and then so exciting\"\n\nAl looked into her eyes and felt his adoration of her overflowing.\n\n\"Sarah I adore you, I love you so much.\"\n\n\"We're both so lucky having each other beautiful Al.\"\n\nThey went for a long walk on the beach in the evening. Over the five days Al was able to talk about his father more. She was the only person he had been able to talk like that to since he had died. They sat under some palm trees in a cove they had to themselves.\n\n\"Your Dad sounds like he was a very nice man,\" Sarah whispered.\n\n\"He wasn't rich, he wasn't even very successful, he wasn't all that good at sport but he was always the man I admired most of all. With my Mum and Sis and him we were always so happy. I still miss him everyday.\" Tears rolled down his cheeks\n\n\"So you should Al.\"\n\n\"What do you mean?\"\n\n\"Of course you're going to miss your dad who you loved so much and admired so much all your life. Something would be wrong if you didn't. The death of your dad that isn't something you should ever get over. You should always remember him and miss him.\"\n\nHe thought for sometime. \"No-one has had ever said it quite like that before. They've said that it's right for me to grieve but some time I'll recover. He looked at Sarah. \"Dad would have liked you.\"\n\n\"I'm sure I would have liked him too. I'd like to hear all about him if you want to talk.\"\n\nAl narrated his story from his first memories as a toddler through his childhood, the happy times when his Dad taught him how to play sports, the family holidays. The sad times like when his Dad was laid off from work and they had to sell the house, the funny times like when his Dad hadn't clipped his ski boot on properly and fell flat on his face at the first gate of a masters' ski race in front of some spectators.\n\n\"Your Dad thought that was funny?\"\n\n\"At first he was a bit pissed but then he started laughing so much all the spectators joined in.\"\n\n\"I'm sure I would have really liked your Dad.\"\n\n\"When I was a teenager a lot of my friends didn't get on so well with their fathers. But as he said, we were best friends. We could talk for hours and he never talked down to me. Sure he was pissed off when I was suspended from school for smoking but he didn't yell and scream.\"\n\nTears continued to gently flow. Al turned to Sarah and she saw the pain in his face.\n\n\"The doctors said he would most likely live for six months, but he only lived for five. I wish it had been only five days. It was terrible Sarah. \n\n\"He spent the first month getting all his legal and tax matters sorted and then the weight started to fall off him and the pain started. They gave him painkillers and by the end he was on morphine. He didn't want to take them because he said he wanted to be able to talk to Mum, Sis and me, but we could see it in his face. He didn't get out of bed much in the last two months. Me and Mum and Sis took it in turn to lie beside him on his bed holding his hand and we talked a lot. Sometimes he was content but sometimes he cursed himself for failing us by getting sick. I used to tell him how much I loved him, how I was the luckiest boy in the world having the best father in the world. He liked that, I'm sure.\"\n\n\"I'm sure he did.\" Tears were streaming down Sarah's face.\n\n\"He often said he was the luckiest man in the world because he had Mum and Sis and me.\"\n\n\"Sometimes he was a bit scared. He used to go to church just a few times year, but he he didn't really know. Once he asked me if I thought there was a heaven. I said I didn't know, but if there was I'd meet him there sometime.\n\n\"My Dad died in his sleep. A brave and kind doctor gave him an overdose of morphine. All three of us were lying on the bed with him. There was a funeral and some people said a lot of nice things and then it was just Mum and me and Sis and an empty chair at the dining table. Jeanie and Brad have been real friends, but even with them I haven't really been able to say what I feel. Not like this.\"\n\nThey lay in each others arms and their tears made little dark puddles in the sand.\n\nAfter five minutes he pulled her up and hugged her and kissed her then told her to look at the stars. \n\n\"That's where you've come from Sarah, you're an angel come down here to make the world a better place.\"\n\n\"Al, you do know you talk some absolute rubbish sometimes, but you can talk that sort of rubbish anytime you like.\"\n\nThey walked around town with their arms so tightly around the other, that their ribs started to hurt, but neither wanted the other to stop.\n\nBack in their room Al asked \"Well, angel Sarah, is your ass ready?\"\n\nSarah lay on her back on the on the bed, her thighs pulled back so far they touched the sheets.\n\n\"Yes my darling Al, my ass is ready, willing and waiting.\"\n\nAs Al knelt on the floor in front of Sarah he held her right hand in his left and her left hand in his right. They both looked into the other's eyes as Al's cock slid into Sarah's anus and watched the pleasure mount in each other's face as he probed deeper. Unlike the first time, the pace and pressure was gentle and languid.\n\n\"Al darling, why didn't you fuck me like this sooner?\"\n\n\"Sarah darling, why didn't you tell me you liked it so much?\"\n\n\"Because I didn't know.\"\n\nHe looked down at her thighs, down at his cock sliding easily into her anus, down at her vulva which was open and her inner labia were glistening from the moisture of her pleasure. He looked up at her breasts just bouncing slightly as he nudged in deeper, up to her smiling lips and into her loving eyes. They both tried to extend the bliss forever, but eventually Sarah's eyes closed, her hips wriggled and rotated and shivered and she sighed \"Darling, darling Al..\" \n\nWith one deep thrust he came and Sarah pulled him down and wrapped her arms and legs around him, his flaccid penis still inside her quivering anus.\n\n\"Al, darling Al, what are you doing to me?\"\n\n\"Angel Sarah, what have you done for me already?\"\n\nTheir adoration for each other grew even stronger and physically they climbed to even greater heights. Both Al and Sarah knew they had paradise on earth. \n\nEvery evening when they had been at the night club they spent some of their time dancing with other people and it was only the last hour they danced together. Both were happy with this and that last hour was always a sensuous build up to bed. Sarah had watched Al's growing confidence and he now easily asked girls from outside his own group of friends to dance.\n\nHis dancing skills and his confident smile meant he was not often turned down and quite a few of his partners were unhappy when he took them back to their tables. \n\nShed saw how he raised his sights and confidently approached the most attractive and sometimes the most aloof women. It didn't make any difference.\n\n\"He's learned how to fly, it's time for him to soar with the eagles,\" thought Sarah.\n\nShe was happy for him and proud of her contribution but tears came to her eyes. \n\nThree mornings after their anal initiation they were on their balcony having breakfast. At this time on the next day Sarah would be flying home and both knew that there was a serious discussion to be had.\n\n\"Our last full day here Al,\" said Sarah.\n\nHe looked at her with sad eyes.\n\n\"I could come and live with you.\"\n\n\"I'm sure in some ways we could be very happy. But you need your mother and your sister and they need you. And you've got all your lovely friends. And Al, darling, there is the age difference.\"\n\nBoth of them had heard the snigger of \"toyby\" a couple of times. That hadn't worried them but it had caused them to think.\n\n\"I've seen you dancing with other girls. There's a world full of lovely girls who will love to meet you. You've got the whole world to discover. And I want to have children as soon as I find the right man.\"\n\nWhile his heart had said how he wanted to be with Sarah forever Al's mind had come to the same conclusion. He had thought about Sarah's friends being 20 - 25 years older than him and knew that would be very hard. Would they just see him as her toy boy?\n\nAnd he knew that for some reason girls suddenly seemed to like him. He understood Sarah's desire for children and in one way would love to be the father of them, but the idea of being a father so soon was not appealing at all.\n\nHe couldn't think of anything to say. His mind went through all the times they had had together since she had first thrown that volleyball to him. His eyes misted over.\n\nSarah kissed him.\n\n\"Al, I loved every minute we've had together. I've loved you more every minute. I'm so glad that it was you who made love to my ass for the first time. I adore you, I always will. Let's make our last day a happy one. Let's be glad we've been so lucky to have this paradise together. Most people never will.\"\n\n\"I owe you so much Sarah. You've made me so confident, you've shown me all about sex. And every second with you has been from paradise.\n\nI'll never find anyone like you.\"\n\n\"You'll meet lots of girls and some of them will be perfect in a different way. Come on Al, I've got a special request for you.\"\n\n\"What's that?\"\n\n\"You'll be the last 20 year old I will ever fuck. I want you to give something to remember 20 year olds by. Starting right now.\"\n\nAt the airport they had a tight hug and a long kiss. \n\n\"Good luck, darling Al.\"\n\n\"God bless, angel Sarah.\"\n\nSarah settled in her seat as the seatbelt lights were switched off and turned on her computer.\n\nShe decided to open the 10 emails from Roger which she had seen build up in her mailbox. There was a similar theme in all of them. He had made such a stupid mistake and could she please forgive him.\n\nShe composed a brief reply: \"Get lost!*!\". \n\nThen she decided to think before she hit the send button. \n\nAl's mother hugged him at the airport.\n\n\"Did you have a nice time dear?\"\n\n\"It was cool.\"\n\n\"And did you meet a nice girl?\"\n\nHe didn't answer but within five minutes she could see the change in him and knew that he had. Later he showed her some photos and told her all about Sarah, except for the sex. Then he asked his mother to tell him everything about his father from the very first time they met. "
    ],
    "authorname": "GWBosh",
    "tags": [
        "erotica",
        "young man older woman",
        "hardcore",
        "tender",
        "romance",
        "humor"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/adventure-in-paradise"
}