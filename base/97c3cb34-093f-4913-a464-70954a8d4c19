{
    "title": "Environmental Hazards Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 6 - Abandoned Ship\n\n\"Oh, wow.\" said Cindy. \"They took their ball and went home. If ever there was a suspicious action...\"\n\n\"But a perfectly legal one.\" I said.\n\n\"Damn, we should've had people watching the place last night.\" said Ruger.\n\n\"Wouldn't have mattered.\" I said. \"They have every right to close up shop here and go back home. We had no legal way to stop them.\"\n\n\"Evidence removal?\" asked Kimberly Wesson. \"We could've forced them to keep their stuff in place, impound the place.\"\n\n\"On what grounds?\" I asked. \"That's a teachable moment. We'd have had to have probable cause. We already have their records, and we'd have to show a lot more to force them to keep the physical property here, and by that I mean the instruments and equipment.\"\n\n\"So what do we do now?\" asked Steve Ruger.\n\n\"We continue as before.\" I said. \"We'll go on up to the Pine Valley establishment, look around. Then to that abandoned film manufacturing facility. Meanwhile, I'll have my friends in the FBI and SBI go visit their home facility with a warrant requiring them to preserve ALL records and destroy nothing, then ask why they moved from here.\"\n\nOnce outside, I said \"Chief, can I ride with you?\"\n\n\"Sure.\" said Soltis, surprised. I then turned to Cindy, handing her the keys to my SUV.\n\n\"Cindy,\" I said quietly, \"take the SUV back home and bring down the Black Beauty. While you're there, check in at Headquarters; I talked to Myron last night, and he will have some data for you to bring back. And see what's going on, especially making sure those rowdy Detectives up there haven't destroyed my Police Department.\"\n\nCindy grinned, then took the keys and drove off.\n\n* * * * * * * * * * * * * * * *\n\nFriday, March 24th. When we arrived at the Pine Valley project's trailer that was its main on-site office, we were confronted with a number of hostile looking men. The foreman came out said \"You've got to have a warrant to be on these grounds. Otherwise, get lost.\"\n\n\"We were hoping for a bit more cooperation than that.\" said Chief Soltis. I had stayed in the car as he confronted the men. \n\n\"You want cooperation, get a fucking warrant.\" snarled the foreman. \"If you try to come onto this property without one, I'll have my boys shoot to kill you. Now get your asses out of here.\"\n\n\"We'll be back.\" said Soltis. He turned and got back into the car. \"Wow. So what's next?\"\n\n\"Act like we're going back south to Midtown.\" I said. \"But double back on that county road just down the road, and we'll sneak around to that photography plant.\"\n\n* * * * * * * * * * * * * * * *\n\nClouds were beginning to form overheard, dimming the sunlight giving the gray fa\u00e7ade of the buildings of the plan an even more colorless hue. We'd driven up the facility, then around a two-track path around one side of the fence surrounding the place so that we were not immediately visible to anyone driving up.\n\n\"Definitely abandoned.\" said Chief Soltis. I was looking at the road coming up to the facility, and through the fence as the road went inside. Ruger and Wesson were watching me intently.\n\n\"Yes, and no vehicle traffic in the very recent past.\" I said. \"Which is good. Let's see if we can find a hole in the fence. Chief, you want to stay here with the cars?\"\n\n\"Sure.\" said Soltis. \"I'll sit on the horn if anyone comes up.\"\n\nI began walking around the fence, but it was in decent repair all the way around. There was a railroad siding that went along the back fence, but the gates crossing the railroad offered no place to crawl under.\n\n\"You guys up for a little extracurricular activity?\" I asked, holding up some metalcutters. \n\n\"No wonder you get the results you do.\" said Wesson. \"I'm game.\"\n\n\"Me, too.\" said Ruger.\n\nI made a cut in an obscure part of the fence large enough to get through. Once we were inside, I reconnected the fence with metal wire clips.\n\nWe made our way over the grounds. The buildings were all locked, save for one building that had a series of vats for mixing chemicals. One could still smell the acids. Going back outside, I pointed out some places on the ground. They were pipes to underground storage tanks for the processing waste chemicals.\n\nI pried one of the lids off with my crowbar. It was the size of a manhole cover. We could see down into the tank below. It was nearly full of a purplish-black liquid.\n\n\"Yep, they left the contaminants here.\" I said as I replaced the lid. Then I explained:\n\n\"Bexall got into some trouble with one of their plants on the eastern side of the State.\" I said. \"I looked up the reports last night, and did the Lexus-Nexus search to read the press reports. Chemicals used in photography are extremely dangerous and poisonous; dangerous silver compounds are the main problem, but acids and other agents can also be a problem if they get into the groundwater.\"\n\nI continued: \"What happened was that Bexall would build a plant, run it to make its products, and dump the wastes into huge underground storage tanks. When the tanks were full, they'd just move their manufacturing operation to another location. This whole property is worthless because it's so contaminated, and anyone who buys the property becomes immediately liable for the entire cleanup, which could run into the hundreds of millions of dollars.\"\n\nRuger said \"So... do you think this facility is putting stuff into the groundwater?\"\n\n\"The correct term is 'leaching',\" I said, \"and yes, I think it's possible stuff is leaching out of the underground tanks and into the nearby grounds. It might even have reached the point where it's getting into the groundwater, and ultimately into the River. But the key here, guys, is that if contamination is leaching or leaking out, the first area to be affected will be directly downstream... Pine Valley.\"\n\n\"Wow.\" said Kimberly Wesson. \"Another Love Canal.\"\n\n\"Wow, indeed.\" I said. \"How does a youngster like you know about Love Canal?\"\n\n\"I had a relative, a great aunt, that was directly affected by it.\" said Kimberly Wesson. \"To this day, all my old relatives that are still living talk about it, and use a lot of curses in doing so.\"\n\n\"I hear that. And yes, this could be the same thing if we don't take action now.\" I said. \"All right, let's get out of here. We have a hell of a lot of work to do. And don't take offense when I say that this is beyond your jurisdiction, and I'm about to take the case over.\"\n\nPart 7 - Depths of Corruption\n\nAt 10:45am, Cindy made it back, driving the Black Beauty. To have made it in that time, she would have had to drive at speeds that are... well, illegal.\n\n\"Myron gave me a jump drive and a package of papers for you.\" Cindy said. \"They got the cellphone records for Jimmy Shell last night.\"\n\n\"Wow, we don't even have the warrant for those yet.\" said Chief Soltis.\n\n\"I know, and something is wrong with that.\" I said. \"You don't just have a corrupt Police Department to clean out; it extends to the Court system.\"\n\n\"Worse than that.\" said Lt. David Krueger, coming into our meeting in the conference room of the Precinct. \"I did finally get the warrant and got the records. But here's the thing: I sent them to Myron at his request... and my list is not the same as his. He has several more records than my list.\"\n\n\"Well, let's compare those now.\" I said, putting the jump drive David handed me into my laptop. After checking for viruses and finding none, I brought up the files for a side by side comparison.\n\n\"They're mostly the same.\" I said. \"Except Myron's list has several entries to and from two entities. One appears to be someone at the State EPA. The other... a legal firm. Ditcher, Quick & Hyde. So he did try to contact a lawyer.\"\n\n\"I can't wait to find out who in the State EPA he contacted.\" said Cindy.\n\n\"Me, neither.\" I said. \"And it is very likely we will be making an arrest of that person.\"\n\n\"What do you mean?\" asked Chief Soltis.\n\n\"I mean...\" I said, halfway in a reverie, \"that the State EPA person may have tipped off either FENL, Forbes & Sehgal, or the Pine Valley project people to Shell's call.\"\n\n\"Shell called the State EPA's main number, which is a switchboard.\" said Krueger. \"There's no way to tell from these records which specific number he called.\"\n\n\"There's no extension that he dialed?\" asked Cindy.\n\n\"Actually,\" I said, \"yes. It's here in the metadata. His phone dialed the number 7002.\"\n\n\"How did you get that?\" asked Krueger. I just looked over at him and did not answer.\n\n* * * * * * * * * * * * * * * *\n\n\"What else did Myron tell you?\" I asked Cindy when we were alone in the room, as Chief Soltis took a potty break.\n\nCindy took out her bug killer and turned it on. \"Myron and Mary have amassed more information in a few hours than Krueger and his team have in a day and a night. The Mouseketeers determined that M&C Project Development is composed of Morelli and Cook... yes, our own Thomas P. Cook, and mobster wannabee Jerry Morelli. They also found that WorldBankTrust backed Dakota Partners Trust.\"\n\n\"They cracked into Nevada corporations?\" I asked.\n\n\"No sir.\" Cindy said. \"It was all done in this State, and everything the Mouseketeers obtained was right there in the public records, from the land purchases, to the loans, to the development project itself, to the applications with the various State agencies, including the State EPA. What I don't understand is why Krueger has not gotten this information.\"\n\n\"David does not have the Power of the Crowbar behind him as Myron and Mary do.\" I said. \"Furthermore, he and Chief Soltis are playing it by the book. They're trying to clean up corruption, and are understandably leery of coloring outside the lines themselves. But that's okay... this is about to become a State case.\"\n\nCindy said \"Myron found out that the backers of M&C Developers bought options on the Pine Valley land totaling about a million dollars, which was deducted from the purchase price when the options were exercised. Standard real estate stuff there.\"\n\n\"Is a million dollars a lot or a little?\" I asked, knowing the answer but wanting Cindy's expert opinion, as she was well-versed in real estate activities.\n\n\"For that amount of land, it's not very much, actually.\" said Cindy. \"The interesting thing, at least to Myron and to me, is that one would think the rest of the land in Benning County would go up in value. But that didn't happen. No one stepped up to buy the farmland, which is really poor farmland and has been since the Great Depression if not longer.\"\n\n\"That is curious.\" I agreed. \"So, what else?\"\n\nCindy said \"Mary was also very thorough. She checked the State EPA people that might've heard from James Shell. She checked to see if FENL or the Engineering firm was contacted recently by the SEPA, and two people did so. One is from the Department that does annual inspections of labs. Her name is Beverly Carter. The other... is the Department that would investigate dumping and spilling of wastes, their criminal law enforcement division. Guy by the name of Keith Rollins.\"\n\nCindy then said \"Mary also found that the lawyer Shell contacted was named Jessie Quick, junior attorney, and daughter of the 'Quick' in the firm's name. She made a few phone calls too... to someone out of state named 'George Glass', and to Robert Ferris, the Chief Chemist of Forbes Environmental National Laboratories... on his personal cellphone.\"\n\n\"Hmm... 'Glass'.\" I said. \"He's PCGW. Okay, this party is just getting started.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Guys,\" I said, \"you've done a great job. I have really enjoyed working with you, and I think you're going to have great careers. And I'm going to keep you in the loop as much as I can. But this investigation has crossed county lines now, and so I'm taking it over in my capacity as SBI Reserve Inspector.\"\n\n\"We understand.\" said Chief Soltis. Nevertheless, Steve Ruger and Kimberly Wesson looked very disappointed.\n\n\"Is there anything we can do to keep helping?\" Wesson asked.\n\n\"Yes.\" I said. \"Keep going through that lab data. Also, we're going to go into Midtown and interview the lawyer James Shell tried to contact. Follow my lead, and I'll show you how I get the truth out of people... hopefully without using a crowbar.\"\n\n* * * * * * * * * * * * * * * *\n\nJessie Quick was in her mid-twenties. She was slender, almost wiry, and fairly athletic. Her brown hair hung a bit limply down to her shoulders. She was an attractive girl, and most people would think she was a bit dumb and would think they had the advantage of her. But I could see something in her eyes, a shrewdness, a thin bit of electricity... and I knew I was dealing with a worthy potential adversary.\n\n\"How can I help you?\" she asked after Ruger, Wesson, and I took our seats in her office.\n\n\"Thank you for spending a few moments with us today.\" I said. \"Ms. Quick, do you know a man named James Shell. He went by the name 'Jim' or 'Jimmy'.\"\n\n\"Yes.\" said Jessie. \"He was murdered yesterday. I saw it on the news.\"\n\n\"How did you know him?\" I asked.\n\n\"He contacted me professionally.\" said Jessie. \"And so you'll understand when I say that our conversation was privileged.\"\n\n\"You know he's dead.\" I said. \"You also know that what he discussed with you might help us find his killer or killers. So claiming attorney-client privilege is not going to hold up. Having said that, I don't want to force you; I'd much rather have your cooperation.\"\n\n\"You seem to know a lot already.\" said Jessie. \"So I think you know that if I discuss any of this with you, I'll end up like Jimmy Shell did. Dead.\"\n\n\"Yet you had no problem telling your friends in 'Proactive Citizens of Greenworld'.\" I said, my eyes boring into hers, and seeing her shock.\n\n\"Oh... you've been illegally looking into my phone records?\" she asked angrily.\n\n\"Not illegally.\" I said. \"Dead bodies are excellent probable cause for warrants for phone records... Mr. Shell's to you, yours to George Glass, a.k.a. Brent Glass, a.k.a. Brent Crow, of the PCGW, and to Robert Ferris of FENL.\"\n\n\"There's no crime in that.\" Jessie Quick said sharply.\n\n\"That depends.\" I said. \"So why don't you tell me what Jimmy Shell told you... and if he gave you any proof of what he talked about, why don't you put it into my custody before you go into hiding, as you are planning to do.\"\n\n\"You're pretty sharp, for a cop.\" said Jessie Quick, peering at me. \"Hmmm, Troy... same Troy that solved the murder of Linda Ferris?\"\n\nI smiled. \"No, that Detective Troy is much better than I am. But I'd like to think I'm fairly good. I lived in Midtown when the Crown Chemicals attack and the Ferris murder took place, but I'm aware of those cases. So, Jessie, let's not kid around... \n\n* * * * * * * * * * * * * * * *\n\nCindy and I were speeding towards Midtown in the Black Beauty.\n\n\"They're uploading the data Jessie Quick gave us.\" I said, having delivered the MPD Detectives and the evidence to their Precinct. \"And making copies of the paper reports. Basically, Jimmy Shell had some pre-screening data showing the Pine Valley samples needed to be diluted by a factor of 500 to run on the GC without pegging it. But the actual samples that were run came up totally clean, almost as if blanks were run instead of the samples, and no dilution listed. Shell kept copies of the reports as well as the raw data and the pre-screenings, and had accumulated several such sets of data.\"\n\n\"Enough to make arrests?\" Cindy asked.\n\n\"No, but enough 'probable cause' to get more warrants.\" I said. \"And maybe enough to get a Court to order a full re-testing of the Pine Valley project.\"\n\n\"Which would devastate the investors in the project.\" Cindy said.\n\n\"Exactly.\" I replied. \"Easy to see the motive now, isn't it?\"\n\n\"Absolutely. So what's next?\" Cindy asked.\n\n\"We stop by the State EPA office.\" I said. \"We talk to Beverly Carter and Keith Rollins. Especially Rollins...\"\n\n* * * * * * * * * * * * * * * *\n\nThe Midtown Detectives met us outside the State EPA facility. We went inside and split into two teams. Cindy and Steve Ruger went to see Beverly Carter; Kimberly Wesson and I went to the office of Keith Rollins.\n\nBeverly Carter was a middle-aged black woman that reminded Cindy of Louise Belfort of the 'Fake Badges' case. She seemed to be nice enough, and answered questions readily.\n\n\"Yes, I go around to the various laboratories that are State-certified, and inspect them.\" said Beverly Carter.\n\n\"When did you last visit Forbes Environmental National Laboratories?\" asked Cindy, peering at the woman's face as she spoke.\n\n\"About ten months ago.\" said Beverly. \"They are nearing their time for their next inspection. In fact, I called them about that just a few days ago, but we have not yet arranged a time.\"\n\n\"So you don't give surprise inspections?\" Steve Ruger asked.\n\n\"Sometimes we do,\" said Carter, \"if we get word of something suspicious going on. We've surprise-inspected Dave Magdalene twice, and his labs failed our inspections both times. Other than that, surprise visits are rare.\"\n\nCindy said \"Were you ever contacted by a James Shell? He goes by the name 'Jimmy'.\"\n\nBeverly gave a short smile. \"I probably should not blurt this out, but he was the guy who made a whistleblower call about Dave Magdalene, that resulted in our second surprise inspection. We didn't even know Magdalene was running another lab until we got that call.\"\n\n\"And Jimmy contacted you personally?\" Cindy asked.\n\n\"Yes.\" said Beverly.\n\n\"Did he ever contact you about any other lab?\" Cindy queried.\n\n\"No.\" said Beverly.\n\n\"So you inspected Forbes Environmental National Laboratories in the City?\" asked Cindy.\n\n\"Yes.\"\n\n\"What about their annex northwest of Midtown, near the Pine Valley project?\"\n\n\"No, that was not considered a separate facility, just an annex, like a mobile field office would be.\" Beverly said. \"But all of their data run there has to be on file in the main lab, or saved in their computers, should I ever ask to see it.\"\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile, Detective Wesson and I were not having as easy a time.\n\nKeith Rollins was black, short, and was that 'pear' shape that bespoke of an unhealthy body and lifestyle. His face was roundish, and his eyes looked like they were permanently really wide, as if he were perpetually surprised.\n\n\"Mr. Rollins, I am SBI Inspector Troy and this is Midtown Police Detective Wesson.\" I said. \"We appreciate you giving us a few minutes of your time.\"\n\n\"What's it about?\" Rollins asked, seeming laconically. leaning back in his chair facing sideways to us and looking over his right arm at us.\n\n\"We're doing some follow-up on a case.\" I said, being non-revealing as I possibly could. \"Let me ask this: are you the person in the State EPA that handles finding spills and violations of the law with regard to environmental regulation?\"\n\n\"I'm part of a team that does preliminary investigations of that.\" Rollins said. \"If we find a crime, we have to bring in the SBI, as you know.\"\n\n\"Yes.\" I said. \"Mr. Rollins, do you know a James Shell?\"\n\n\"That name is not familiar to me.\" said Rollins.\n\n\"He goes by the name Jim or Jimmy Shell.\" I prompted. \"You sure you've never heard of him?\"\n\n\"The name is not familiar to me.\" Rollins repeated.",
        "\"Did Jimmy Shell ever call you here at your office?\" I asked.\n\n\"No.\" said Rollins.\n\n\"Are you sure?\" I asked. \"Are you absolutely certain that James Shell never attempted to contact you at all here at your office?\"\n\n\"No, I have never spoken to anyone by that name.\" Rollins insisted.\n\n\"Mr. Rollins,\" I said, letting my voice get harsh. \"Lying to a State Agent, not to mention a duly deputized Police Officer, is a felony offense in this State. So I will give you one more chance to tell the truth: did Jimmy Shell ever contact you by phone?\"\n\n\"Since you're insinuating that I'm lying,\" said Rollins, \"and since I feel like I'm being set up here, I refuse to answer any more of your questions without a lawyer present. Now get out of here and don't come back without a warrant.\"\n\n\"Oh, I will be back, Mr. Rollins.\" I said. \"And you would be wise to have a lawyer by the time I do come back... the very best lawyer you can afford.\" I nodded to Kimberly Wesson and we walked out.\n\nWhen Cindy and Steve came down, I said \"I think we should get a warrant for Rollins's arrest.\"\n\n\"Might not do much good.\" Cindy said. \"How do we prove it absolutely was him on the phone with Shell, even if it is his extension?\"\n\nI grimaced. \"Yeah, that's a point. But I don't care. Here's what I want you to do, Steve and Kimberly: I'm putting in for a warrant to arrest Rollins as a material witness, and also for suspicion of lying to a State Agent. Make the arrest and lean on the guy. He'll probably demand a lawyer; take note of who that lawyer is and the firm he or she represents. He'll probably be advised to take the Fifth. After that, just follow the legal process, and if he gets out, so be it...\"\n\nPart 8 - Lab Results\n\nCindy and I were driving in the Black Beauty up the Interstate to the City. I had put the blue light on top and plugged it in, and it was a good thing: she was driving at high speeds and we passed several Police vehicles. They all radioed asking who we were, and after I got on the radio and told them, they did not pursue.\n\n\"If one of them had come after us,\" I said, \"we might have had to shoot them.\" Seeing Cindy's shock, I said \"Cindy, get ready, and wear your armor at all times. We're up against some powerful, well-financed interests on this one. They'd like to stop this investigation before it even gets started, and they might choose... desperate means to do that.\"\n\n\"I hear you.\" Cindy replied. \"So why did you have the Midtown guys arrest Rollins?\"\n\n\"I want to scare the living fuck out of him.\" I replied. \"I also want to draw a lot of attention to him. If Jimmy Shell contacted him and then he was the one that called FENL and told them Shell was the whistleblower, then Rollins is an accessory to murder. As such, certain well-funded entities might want to do to Rollins what they did to Shell. Quite frankly, if Rollins is on the take like that, he will get what he deserves and deserve what he gets. If he comes correct and confesses what he knows in exchange for immunity and witness protection, then maybe we're another step to nailing these bastards to the wall.\"\n\n\"May I speak freely? Truly freely?\" Cindy said.\n\n\"By all means.\" I replied.\n\n\"Two points: you seem to be very 'into it', when it comes to this lab. Any angers from the past welling up?\"\n\n\"Let me answer with a question.\" I said. \"If the Miss Physical America Tour had been rigged and totally corrupt, and years later you had the chance to nail some of the corrupt types to the wall and make an example of them, how would you feel?\"\n\n\"I'd feel the same way I think you feel now.\" Cindy said. \"And there's nothing wrong with that. What I wonder about, and this is my second point, is that you are really hanging Rollins out to dry. He could end up dead because you're having him arrested on thin grounds.\"\n\n\"You're right.\" I said. \"But there's almost nothing worse than corrupt Government officials. Do I even need to mention Jack Lewis and Richard Ferrell? If Rollins is dirty, I'm not going to lose sleep over his fate catching up to him.\"\n\nCindy said nothing as we drove along. \"Are you okay with that?\" I asked.\n\n\"Uh, yeah.\" she said, sounding anything but okay with it. \"I'm just sensing a ruthlessness from you I haven't felt or seen out of you in a long time.\"\n\nI realized her words were right, and I had not realized that of myself...\n\n* * * * * * * * * * * * * * * *\n\nArriving at the southern suburbs of the City, we found the office building that housed Forbes & Sehgal Engineering. Forbes Environmental National Laboratories was in the basement of the building, and I could see the fume hood scrubbers hidden in the shrubbery on the backside of the building.\n\nCindy and I were not here alone. Joining us in the parking lot were SBI Agents Norm Chow and Ted Orosco. Also with us was City Police Detective 'Sapper' Warren and four Uniformed City Police Officers.\n\n\"Our warrants from yesterday are still good, sir.\" said Chow. \"We confiscated everything remotely pertaining to Pine Valley yesterday, so I'm not sure what else we can get.\"\n\n\"It's what we don't get that might be important today.\" I said. \"Okay, let's go in and rattle some cages.\"\n\nGoing inside a side door service entrance that was also a truck loading/unloading dock, we went down the hallway. Strangely enough, the first person we saw was Oscar Williams.\n\n\"Oscar!\" I said with false joviality. \"Take us to your leader, please... literally.\"\n\nAs he led us down a side hall, I asked \"Why did you guys come back up here?\"\n\n\"I don't know.\" Oscar said quietly. \"They just called last night and said go back to the City.\"\n\nBefore we entered the door that said it was the offices, I said to Oscar \"Here's my card, Oscar. If there's anything you want to share with me, give me a call.\" Oscar took and pocketed the card, then led us through the door, which indeed contained... offices!\n\n\"What are you doing here?\" asked Jeremy Forbes, his face betraying his unhappiness at our presence.\n\n\"Following up.\" I said. \"Mr. Forbes, you didn't really think you could run away from me, did you?\"\n\n\"I'm not running away from anything, Commander Troy of the TCPD.\" growled Forbes.\n\n\"Then why did you close up the annex at Pine Valley?\" I asked.\n\nFor just a second, I thought I saw surprise on Forbes's face. But he masked it quickly and well, then snarled \"We can do that if we want, and we sure as hell don't need your permission.\"\n\n\"Well!\" said a higher-pitched voice coming up, which belonged to the weeble Paul Brandon, dressed in a white shirt, black pants, and a striped tie that I fully expected to curl up like cartoon character Dilbert's at any time. \"If it isn't the Iron Crowbar and his fellow Officers. Surely you have everything your warrants allowed you to get last time?\"\n\n\"That's to be determined,\" I said, \"especially after you abandoned your Pine Valley annex lab like thieves in the middle of the night. Why did you order that to be done, Mr. Brandon? And don't insult my intelligence, I know just standing here that it was you that ordered that.\"\n\n\"Er, why don't we go into our conference room here.\" said Brandon. The conference room was one of the offices with a table and some chairs in it. Me, Cindy, Chow and Orosco joined Brandon and Forbes in the room, while Sapper and the Uniformed Officers made sure we were not disturbed.\n\n\"To answer your question, Commander,\" said Brandon once we were in the room and the door closed, \"we were planning to shut that annex down and bring everyone home weeks ago. It was costing us more than it was worth, and our Field Sampling teams could just bring the samples back to this lab or ship 'em by FedEx.\"\n\n\"I can understand some of the cost.\" I said. \"But the lab was up and running, and you were charging the Pine Valley people for the apartment rentals of your people down there. So besides cost, why would you shut that annex down, and in the middle of the night... and right after your employee was murdered?\"\n\n\"Hold on, Brandon.\" said Forbes as Brandon was about to answer. \"Troy, I told you out there and I'll tell you again in here: we don't need a reason and we sure as hell don't need your permission to decide how best to run our operations. You already have obtained all the data you could, and we brought all the papers from that lab up here, so we're not hiding anything, and I demand you prove otherwise or shut your fucking mouth about it.\"\n\n\"There are a few things I need.\" I said. \"I want all the data of the pre-screenings that were run on the Pine Valley samples, either down there or up here.\"\n\n\"We don't keep that data.\" said Brandon. \"We destroy it. It's not a part of our legally defensible package we provide our clients.\"\n\n\"Funny...\" I said, my eyes boring into Brandon's, \"I would think pre-screening data would and could only bolster your legally defensible packages, though the numbers wouldn't be reportable.\"\n\n\"As the Lab Manager just told you,\" said Forbes, his voice a mixture of anger and being offended, \"we are not required to keep that data, and we destroy it when we are done with it. There is nothing illegal about that. We follow all protocols, regulations, and the law here. Now either show some reason to continue to be here, or get out.\"\n\n\"I have two more things.\" I said.\n\n\"I have something, too.\" Cindy said. \"I want to speak with your Chief Chemist, Robert Ferris; and your Q.C. person, Clifford Ewing.\"\n\n\"Robert is not here today, he had a long-scheduled vacation day.\" said Brandon, his perma-grin seeming to be slightly wider as he spoke the words. \"I'll take you to Cliff.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Detective Warren, get the time sheets that were turned in today, and any past time sheets that they're keeping on record.\" I said to Sapper when we came out of the meeting.\n\n\"Now just a minute!\" gasped the lawyer. I turned and confronted him.\n\n\"Either the staff here cooperates, or I start making arrests. And then I start going through every fucking piece of paper in this entire Engineering firm. Which do you prefer?\"\n\nThe lawyer glared at me with hatred in his eyes. \"You think you can just bully these people around, but we've got friends that can push back. Hard.\"\n\nI stepped up to him. \"Is that a threat?\"\n\n\"No, it's a prediction.\" said the lawyer, squaring up to me.\n\n\"Bring it on.\" I said. \"I've got something for your politicians and your Mob buddies. It's red, and it's going to hurt like hell when I shove it up your ass and theirs.\"\n\nThe lawyer was stunned, seeing the fire blazing in my eyes. For the moment, he backed down.\n\n* * * * * * * * * * * * * * * *\n\nNorm Chow and I went into the small room. It had been meant to be the office of someone in charge of the large open space, which could be a sample receiving and control room, but was right now a storage room. The small room had a couple of G.C.s. A haggard looking man, with brown hair and a full beard and mustache like Forbes's red facial hair, dirty shirt and blue jeans, and wearing a labcoat and his eyeglasses, was loading samples on one of the instruments.\n\n\"This is Bert, who pre-screens samples for us.\" said Paul Brandon. \"He's also a student at State Tech. We have a strong cooperative program with State Tech, giving their students experience with us while getting their degrees, then hiring the best of their graduates.\"\n\n\"Bert!\" I said, \"do these G.C.s record their runs on a computer?\"\n\n\"It's not much of a computer, and it's hardwired to the instrument.\" said Bert dully.\n\n\"And do you download the data onto tapes or a server when the hard drive gets full?\" I asked.\n\n\"No.\" said Bert, almost as if her were reciting a memorized lesson. \"I print out the report and give it to the supervisor of the lab I'm running the test for. Then I erase the data when the hard drive is full.\"\n\n\"Do you keep copies of the reports you give to the supervisors?\"\n\n\"No.\" Bert said.\n\n\"All right, then.\" I said. \"Thanks for your time.\" I led the way back into the hallway.\n\n\"Okay, where is Mai Ling?\" I said. \"I want to talk to her again. And I want to talk to Chris Maple.\"\n\n\"Not without our lawyer present.\" said Brandon.\n\n\"Call him up, then.\" I said. \"Because I'm not going to wait. And I'll arrest Mai Ling and Chris Maple as material witnesses and take them to our Westphalia SBI offices, and we can wait for their lawyers there.\"\n\n\"Good Lord, are you kidding?\" Brandon said, that perma-grin on his face irritating the hell out of me.\n\n\"Not one bit, Mr. Brandon.\" I said coldly.\n\nBut we were stymied. \"I sent Chris Maple to handle the final details of moving out of the Midtown Annex.\" said Brandon.\n\n\"Call him on the phone then.\" I said.\n\n\"I am not making my phone available for Police use.\" said Brandon. \"The secretary can give you his number, and you can call him on your cellphone's time.\"\n\n\"Whatever. Where's Mai Ling?\"\n\nWhen asked, the Mass Spec supervisor said that Mai Ling had not come in at all. \"Her mass spec just got here and has to be unpacked, so we didn't need her anyway.\"\n\n\"Did she call in?\" I asked.\n\n\"No.\" said the supervisor. \"Well, she didn't call me. Maybe she called the front office.\" I noticed the tone of her voice, which connoted chronic disgust with the front office as she looked right at Brandon.\n\n\"We weren't expecting her to be here in the first place.\" said Brandon. \"She may be packing her stuff in Midtown, and she'll be back here Monday morning.\"\n\n\"I hope so, Mr. Brandon.\" I said, again coldly. \"For your sake, I hope so.\"\n\nI did call Myron and have him get any phone number belonging to Chris Maple. The number he gave me matched what the FENL office gave me. Alas, there was no answer to several attempted calls.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Mr. Ewing.\" Cindy Ross said. \"My name is Captain Ross. I'd like to touch base with you on some issues related to our investigation.\"\n\n\"Sure, sure.\" Ewing said quietly. He was an older man, looking like he was in his sixties, tall, slender, fairly distinguished looking with perfectly styled gray hair and spectacles. He also looked as if he were chronically disgusted with his surroundings.\n\n\"So where is Mr. Ferris?\" Cindy asked.\n\n\"I don't know.\" said Ewing. \"He didn't come in this morning.\"\n\n\"Did he mention an emergency, or a family-related matter? Maybe vacation day?\" Cindy pressed.\n\n\"He didn't say anything.\" said Cliff. \"First I heard of him not being here was when I came in this morning.\"\n\nCindy nodded. \"So you check all of the testing results that come through the lab?\"\n\n\"Yes, I---\" Cliff started, but was interrupted as the door to his office opened without a knock. A lawyer for the company stepped in.\n\n\"I'm here to monitor this conversation.\" the lawyer said. Cindy thought he looked a lot like Richard Ferrell, especially with his droopy mustache.\n\n\"No.\" said Ewing, shocking Cindy. \"I don't need you nor do I want you here. Get out.\"\n\n\"You don't have a choice in this.\" said the attorney. \"I will be present, on the company's behalf if not yours personally.\"\n\nCindy stood up. \"You heard the man. Get out of this office now, or I will throw you out. If you resist in any way, I will arrest you and charge you with felony resisting arrest.\" The lawyer looked shocked, but did not move.\n\n\"You heard her, get out.\" said Cliff Ewing. The lawyer looked at them angrily, then stalked out.\n\nCindy had not had time to sit down when the door opened again, and Paul Brandon came in, the lawyer following. \"Is there a problem here?\" asked Brandon.\n\n\"Yes, there is.\" said Ewing, not backing down. \"I don't need a babysitter. Get this guy out of here.\"\n\n\"Someone has to sit in on your conversation, Cliff.\" Brandon said, his voice losing its fa\u00e7ade of composure and getting harsh for the first time within Cindy's hearing.\n\n\"No they don't.\" said Ewing.\n\n\"What are you afraid of, Mr. Brandon?\" Cindy asked harshly. Brandon suddenly changed back to the perma-grin.\n\n\"Nothing.\" said Brandon. \"Be careful what you tell them, Cliff. They like to take words and twist them, and trap you into contradicting yourself.\"\n\n\"I can handle myself.\" said Ewing.\n\nAfter Brandon was gone, Cindy said \"What was that all about?\"\n\n\"They're paranoid.\" said Ewing. \"Pine Valley is biggest project this company has ever had, and this poor guy dying has them rattled.\"\n\nCindy made a hush sign with her finger to her lips as she pulled out her bug detector. As she swept the room for bugs, she asked loudly \"Was Jimmy Shell's work good?\"\n\n\"Very good.\" said Cliff as he watched. \"Always the best. Never a bad standard, the duplicate spikes were always 100%, everything documented perfectly.\"\n\nCindy's detector lit up at the base of the desk lamp on Ewing's desk. Another positive result came from the underside of the guest chair Cindy had been sitting on. She handed Ewing her card with a note on the back saying \"Call me when you are away from here.\"\n\n\"Did Jimmy ever talk to you about problems with the samples?\" Cindy asked loudly.\n\n\"No, he never came to me with anything.\" said Cliff. \"But he'd be expected to go to his supervisor, who would then come to me.\"\n\n\"Who was his supervisor?\" Cindy asked.\n\n\"Chris Maple.\" said Cliff. \"He was the overall supervisor down at the annex facility, and he's the overseer of the Metals and Inorganics Labs here.\"\n\n\"Okay, thanks for your time, Mr. Ewing.\" Cindy said, then said with great clarity: \"And if those guys give you any trouble for speaking to me without a lawyer, let me know. Intimidating a witness is a felony offense, and I know what I just witnessed...\" \n\n* * * * * * * * * * * * * * * *\n\nAfter dismissing the Uniformed City Police, I offered to buy Sapper Warren and my fellow SBI Agents dinner at the City Diner. We were given a table in the back room, which did not yet have any other patrons.\n\n\"Norm,\" I asked, \"when you were executing the warrants yesterday, how did the employees react? Were they helpful? Resistant?\"\n\n\"For the most part, they were reluctantly helpful.\" said Chow. \"The problem was that a small army of lawyers were there, watching our every move. At least one lawyer was in every lab room, and two were in the front office areas where the files were kept. The lawyers didn't say much of anything, but we could tell that the employees were clearly intimidated by their presence, and we knew we were not going to get much of anything from the employees.\"\n\n\"And the lawyers were from the Engineering company?\" I asked.\n\n\"Yes.\" said Orosco. \"We pulled all the Pine Valley files from the Engineering offices, as well, and their lawyers were screaming at us until Norm here threatened to arrest them for attempting to physically intimidate State Agents.\"\n\n\"Too bad I wasn't here, Captain Ross.\" I said. \"I could've gotten in some crowbar practice for the Police Boxing Matches.\"\n\n\"It'd have been fun, but would not have done you any good for the Matches.\" Cindy said, making me chuckle. Then Cindy continued: \"I had my own issues with Brandon and a lawyer trying to intimidate Cliff Ewing, the Q.C. guy.\" She relayed her experience, and what she'd learned from her interview, including finding the bugs in the office.\n\n\"Okay, Sapper,\" I said, \"what did you get from the time sheets?\"\n\n\"Everyone completes a weekly time sheet.\" said Detective Warren, who was a big black man with a deep voice when he wanted it to be. \"They put down the number of hours each day they work. Even if they are salaried, they put down the overtime hours. They keep the records each fiscal year, then ship them off to storage. Mr. Brandon said the management says that's done to monitor how many hours are worked, and to see if they need to hire more people, and such stuff as that.\"\n\n\"Yeah, right.\" I said. \"And you've confiscated as much of that data as possible?\"\n\n\"Yes sir.\" said Sapper. \"We'll scan every one of those sheets into our servers before giving them back. Not sure what we're looking for, though.\"",
        "\"Maybe a financial anomaly.\" I said. \"Salaried people are paid the same each week, but the amount charged to each lab for their pay changes. I'm going to have someone crawl through their finances to find where that money goes.\" Everyone nodded. \n\n\"Okay, changing the subject a bit,\" I said, \"who is the project principal for the Pine Valley Project?\"\n\nProject principals are leaders of a company and can sign contracts on behalf of a company. Technically, as part of the TCPD Command Group, I am a 'principal' for the TCPD, and I have used the power on occasion.\n\n\"There's three of them, sir.\" said Chow. \"It's that big a project. There's one for the environmental issues and compliance; one for environmental development of the land, including the golf course and road construction; and one for the development of the community, the houses and such stuff as that.\"\n\nChow continued: \"The principal for the compliance part is a man named Fred Steinhart. He lives in your Town, and usually is in the Forbes & Sehgal branch office in your Town. He has a good relationship with the University's Environmental Design School, as well as professors who are involved in climate change research.\"\n\n\"The principal for the environmental development is named Jim DeSantos. He's been with Forbes & Sehgal since Sehgal's part of the company started up over 20 years ago, and he's very highly respected in the environmental engineering world.\" Chow continued. \"The third principal... is A.U. Sehgal himself, the co-founder and Senior Partner in the firm. He knows all the right people, and he brings people together to get things done.\"\n\n\"All the right people, eh?\" I said. \"Including the politicians?\"\n\n\"Especially the politicians.\" said Orosco. \"He usually is friendly with politicians on both sides of the aisle. There were rumors that he would be the one to end the feud between Senators Molinari and Cerone, but it turned out some guy with full-brim hat and a crowbar got that done first.\" Cindy burst out laughing and I chuckled at that one.\n\n\"I was once told,\" I said, \"to not wear a hat with more personality than me. First of many rules I have broken.\"\n\n\"Yes sir.\" said Orosco. \"As I was going to say, Sehgal has made only one exception to working with both sides, giving money to both candidates, and so on... and that's Val Jared. He poured a ton of money into Jack Lewis's gubernatorial campaign, and supposedly gave more under the table. On the flip side, he gave Val Jared exactly zero dollars, and he's been heard to say that he hates Governor Jared with a passion.\"\n\n\"Hmmm, interesting.\" I said, making a note of that. \"Sapper, did you see anything else of interest today?\"\n\n\"Just what these guys have said, sir.\" said Detective Warren. \"The employees were intimidated by the lawyers, and I suspect they've been told to not say anything. Two important people, the Chief Chemist and the mass spec girl that was in Midtown, were not at work today. And that Lab Manager, Brandon?...\" Sapper shook his head vigorously... \"Something ain't right about him.\"\n\n\"He's like a politician.\" Cindy said. \"He bullshits his way through everything, pretending all is okay with a smile on his face... then the minute you turn your back on him...\" She did not need to finish the sentence.\n\n\"Well look who's here!\" said a voice. We looked up to see FBI Special Agent in Charge Jack Muscone coming up to us, along with Special Agents Lindy Linares, Sandra Speer, Martin Nash, and Special Agent in Charge Clark Webster.\"\n\n\"Mind if we join you?\" Muscone asked.\n\n\"By all means!\" I said. \"Pull that table up to ours.\" The FBI Agents pulled the next table up to ours, making us a big ten-person table. Introductions were made all the way around.\n\n\"Working on that Jimmy Shell murder?\" Jack asked. I nodded. Then everyone got quiet as the server came in to take the FBI people's orders (we already had our food). \n\n\"How are things in your office?\" I asked. \"Everyone seems a lot happier than the last time I saw you.\"\n\n\"It's been kind of quiet for us.\" said Lindy.\n\n\"Too quiet, if you ask me.\" said Sandra Speer, who was looking rosy and happy and pregnant.\n\n\"They're not even pressuring us to find Leonard Lotz anymore.\" said Clark Webster.\n\n\"Think they found him, and 'disappeared' him?\" I asked.\n\nJack Muscone said \"No. I would've heard about that if it had happened. Word I'm getting is that they think he's made it out of the country. How he could've pulled that off, I don't know. What do you think, Iron Crowbar?\"\n\n\"I think I'm the brother of one of the best smugglers on the planet today.\" I replied. \"And it's embarrassing how easily she can cross borders and oceans, and take a full, stacked pallet of gold bars with her if she so desires.\" Cindy nodded vigorously in agreement... which made me wonder what and how much she knew about that...\n\n\"I hear you.\" said Muscone. \"But there hasn't been a trace of Lotz for weeks now. He has to have gotten away to somewhere. But I'm more interested in this murder case you've got going.\"\n\n\"And it's getting bigger by the minute.\" Cindy said. \"It's only a matter of time before you start hearing politicians complaining.\"\n\n\"And time's up on that.\" said Muscone. \"U.S. Senator Russell cancelled a Senate Committee hearing this morning, and is flying here to the City as we speak. My boss told me to keep an eye on that...\"\n\n* * * * * * * * * * * * * * * *\n\nThe sun was setting. We'd finished eating. Orosco, Lindy, and Nash were talking at one booth, while Cindy, Norm, and Sandra were talking at our table. Sapper had gone home to his family. And Jack and I had moved to a booth for a quieter, more private conversation.\n\n\"I'm going to need some Federal muscle.\" I said. \"Maybe some subpoenas from a Federal Court.\" I described what I needed.\n\n\"That shouldn't be a problem.\" said Muscone. \"So... I didn't say anything in front of everyone, but your remark about your sister is more prescient than you may realize.\"\n\n\"No, I'm fully aware.\" I said, a small smile forming on my face. \"My sister has acquired some help recently. One of those helpers is a very good bank robber that drives Les Craig nuts. Speaking of Craig, what's up with him?\"\n\n\"That's one reason we're all happier right now.\" Muscone said. \"Craig has realized that the Lotz situation is not putting him, Craig, in a good light. So now he's back into looking into Organized Crime. We're not sure where he is... he may be in Southport, or even in Midtown after this Jimmy Shell case broke.\"\n\n\"Has your interest, the Shell case.\" I said in Jedi Master Yoda grammar. \"Understand it, you do not.\"\n\n\"Whaddya mean?\" asked Muscone.\n\n\"I hope you don't think I don't realize what's going on.\" I said with a smile. \"You, meaning the Jack Muscone team, are looking into the Organized Crime aspects of the Jimmy Shell case.\"\n\n\"Nothing gets by you... 400 years ago...\" said Jack. \"I give up. I'm running out of clich\u00e9s.\"\n\n\"Well,\" I said, \"I'm not sure this is the case that will help you. It's deep, and there is a lot of Government corruption coming to light, as well as a dirty environmental lab, pun fully intended. But I don't know if you'll get the Organized Crime figures involved in the financing. They're going to take their balls and go home, again pun fully intended.\"\n\nJack gave what for him was a chuckle. \"Yeah, you may be right.\"\n\n\"So,\" I said, \"you, Jack, will have to look for another way to make a big bust and one-up Les Craig, and humiliate him.\"\n\nJack peered at me, then shook his head. \"Damn, I really do believe you can read my mind. Seriously, how do you do it? I can only imagine how many cases we could close if I could do what you do.\"\n\n\"Human nature, Jack.\" I said. \"And you're a damn sight better at seeing it than most people, which is why you are who you are and where you are within the FBI.\"\n\n\"So,\" said Muscone, \"beyond this lovefest, what's next?\"\n\nI said \"So you want to put Craig in his place? Expose him as the failure he is?\"\n\n\"Wouldn't hurt.\" said Muscone. \"I don't care so much for myself, but it's my team and it staying together that worries me. Craig is not only after you and Cindy, he's trying to rip us apart, too.\"\n\n\"Well, then,\" I said with a 'little' smile, \"you've come to the ri-ight place...\"\n\nPart 9 - Glowing In The Dark\n\nAfter dinner, I paid the bill for everyone (including our FBI buddies), and we said goodnight to everyone. Cindy had not consumed any alcohol, and I'd only had a beer with dinner, but of course she drove.\n\n\"So,\" I said as we strapped into the car, \"do you want to go back home, or drive back down towards Midtown?\"\n\n\"Sounds like you have an idea about something,\" Cindy said, \"and you want to go back to Midtown.\"\n\n\"You are a very astute Detective.\" I replied with a smile. \"I want to go at least towards the Pine Valley area. Why don't we take the Interstate down to State Highway 40 and cut across to Hamilton County. There are some decent hotels along the University-Midtown Highway in that area.\"\n\n\"Okay.\" Cindy said. \"I need to call Callie and tell her.\"\n\n\"You'll find she's at the Cabin tonight, with Molly and the boys.\" I said. \"I was going to invite you, too, but we're on a case.\"\n\nCindy made the phone call and found out that I was correct. When she disconnected, she said \"Callie says she and Molly are having fun with the boys and also Carole and Jim. Laura and your mother brought them and the dogs up. So I guess your wife and my girlfriend are going to sleep together tonight.\"\n\n\"Not like they can't do that in Laura's offices.\" I replied. \"But they're all together, which is good. Safer that way.\"\n\n\"So why do you want to go back towards Midtown, or at least the Pine Valley project?\" Cindy asked.\n\n\"I have a sneaking suspicion that those chemicals in the tanks at Bexall Chemicals are going to be drained in the dark of the night tonight.\" I said. \"I've got Eddy the Bounty Hunter watching the place. He'll let me know if anything happens there tonight.\"\n\n\"Wow, you're spending some money on this.\" said Cindy. \"I know you can expense it, but they cut the SBI budget, you know.\"\n\nI smiled. \"I'm paying Eddy a flat-rate $1000 for the night. He's going to dig a foxhole on the hill overlooking the site, and wrap up warm. He'll probably get some sleep, too, which is fine as long as he wakes up if any tanker trucks pull up.\"\n\n* * * * * * * * * * * * * * * *\n\nThe phone call came earlier than I expected. At 9:30pm, still Friday, March 24th, I got a brief text, which read \"Barbarians at the gate.\"\n\n\"All right, that's it.\" I said to Cindy as we sat in my hotel room. We put on our full armor, including me putting on the bulletproof 'girdle', then headed out in the Black Beauty.\n\n\"I've got a pretty massive contingent of State Patrol ready to help us out.\" I said. \"They've been working on a case of tanker trucks transporting chemicals they think drugs are dissolved in, in association with the DEA and formerly with the SBI-NTF, which is now nearly dead. The State Patrol is hoping the guys in these trucks are part of the same Domingo Shipping fleet that has been running the drugs.\"\n\n\"I hope you told them the Black Beauty is on their side.\" Cindy said adroitly.\n\n\"Oh yeah.\" I said. \"Okay, we're near the road to Bexall. Turn out the headlights...\"\n\n* * * * * * * * * * * * * * * *\n\nThe Black Beauty was hidden in some tall grass by the side of the road about 150 feet from the entrance of the Bexall chemical plant. Cindy and I had crept up closer to the site on foot, and now her Police iPhone and my videocamera were filming the trucks siphoning the chemicals out of the underground tanks. We made sure to focus on license plates and registration numbers and identifying marks on the vehicles.\n\nThere were four tanker trucks. I was not sure, but I suspected that four might not be enough to completely hold all the liquids in the full tanks on the property. If they were planning to make a second run, however, they were going to need a Plan B... as we were going to interdict them tonight. The State Patrol had the road back to the University-Midtown Highway blocked off.\n\nIt took a long time, but the four trucks were finally filled. Cindy and I hustled back to the Black Beauty. 'Kato' took the wheel, while Your Iron Hornet rode shotgun. I activated the weapons systems as we waited for the trucks to approach.\n\nBut they didn't.\n\n\"Uh oh,\" I said, \"it looks like they're going the other way. Let's ride, Kato!\"\n\nPart 10 - The Chase\n\n\"Roger that.\" Cindy said, pulling out. Sure enough, we came upon the tankers going west on the two-lane road, towards the town of Columbus.\n\nCindy had shut off the headlights, and we were able to get past the last two trucks. But the second truck in line had spotted us, and was swerving to prevent us from passing.\n\n\"We can't run off the road.\" Cindy said loudly. \"There's a ditch, and then the soil is too soft.\" She turned on the radio, and a CD of Al Hirt's 'Green Hornet' theme began. We were just having entirely too much fun, here, I thought to myself.\n\n\"Let's disable this fucker.\" I said. Cindy nodded. She swerved right, and as the truck swerved to the right, she pulled back left. I pulled the trigger, and machine gun fire raked the the tires at the front of the tanker, the tracers guiding my aim. Then I fired at the rear tires, shredding them. Cindy hit the gas, and the Black Beauty leaped ahead as the disabled truck slowed to a stop.\n\n\"Okay,\" I said, \"the second truck pulled over, but there's still three of them headed to the State Line. Let's disable this front one so that the next two can't get by.\" \n\n\"Be careful!\" Cindy said over the sound of Al Hirt's trumpet on the speakers. \"We don't want a massive spill of these chemicals!\"\n\n\"Nor exploding gas tanks starting a fire1\" I replied. \"Good thing these are diesel trucks.\" I armed a missile, and as the Black Beauty swerved into the left lane of the road, I aimed at where the tank was coupled to the truck pulling it.\n\nThe truck swerved and Cindy did the right-and-back-to-left trick. As we came into range again, she said \"You may fire your phasers.\" \n\nI fired the missile, which was guided, and it went right where I was aiming. A direct hit! But the coupling didn't break.\n\n\"Target that explosion, and fire!\" Cindy called out.\n\n\"Aye, Captain Sulu!\" I replied. I fired another missile. As it blew the coupling apart, Cindy sped up. She got ahead of the trailer as it decoupled from the truck and jackknifed, blocking the road. I heard the squeal of tires behind us as the next truck hit the brakes to avoid a massive collision.\n\n\"These guys aren't stopping!\" Cindy said. \"Set your phasers to 'kill'!\"\n\n\"Locked and loaded!\" I called out. I raked the tires and back of the truck with more machine gun fire, then fired another rocket into the left front tires. The explosion rocked the truck, and it nearly toppled over onto us! But Cindy hit the brakes as the truck skidded off the road into the ditch on the right. It was disabled and not moving.\n\n\"Come out with your hands up!\" I called into the megaphone. The driver door opened and the driver opened fire with an auto pistol. A burst of machine gun fire in his general direction showed him he was outgunned. He finally gave up, along with the passenger.\n\n* * * * * * * * * * * * * * * *\n\nThe State Patrol had followed us on the chase, and bagged all the other drivers and passengers of the other trucks; they had not had a chance to run before they were surrounded. After some minutes, two State Patrol vehicles rode up to us. One contained the State Patrol Commander, Colonel Hartmann.\n\n\"Excellent job, Commander Troy, Captain Ross!\" he said to us. \"We're a bit fortunate we had no spillages, but they're stopped. And some of these guys were on our radar for drug transportation.\"\n\n\"And the record will show that the State Patrol gets full credit for these arrests.\" I said. \"Excellent job, Colonel! Pass that down to your Troopers.\"\n\n\"Thank you, sir.\" said Hartmann. \"It'll help us a lot to get some credit for this.\"\n\n* * * * * * * * * * * * * * * *\n\nThere was a problem of jurisdiction. The captures had been made in Benning County, but they simply did not have the facilities to handle what was happening, so their Sheriff gladly handed all jurisdictional issues to me as SBI Reserve Inspector. In turn, I instructed the State Patrol to deliver these guys to the nearest Midtown Precinct.\n\nOnce there, Chief Frank Soltis, MPD Detectives Steve Ruger and Kimberly Wesson, SBI Agents Ted Orosco and Norm Chow, and FBI Agents Jack Muscone and Martin Nash were invited to attend my interrogation of the suspects. They all arrived within an hour. So did the lawyers for the slugs: they were all from various offices of Gresham & Mason, P.C., which told me volumes.\n\n* * * * * * * * * * * * * * * *\n\nWe started with the two people in the first truck. I read the perps their considerable Constitutional rights, then began.\n\n\"Where were you taking those chemicals?\" I asked. I think the question surprised the perps and their lawyer; they'd probably expected me to immediately ask who'd hired them. But I am a tricky Iron Crowbar.\n\n\"To the State Line river bridge.\" said one of the perps.\n\n\"In Columbus?\" I asked. \"They'd have stopped you.\"\n\n\"The bridge of the road that goes north of the town.\" said the perp, the one who'd wanted to shoot at us. I was shocked at the answer.\n\n\"But... but... do you realize the Water Works is just downstream from there?\" I asked. \"You were going to poison an entire town, maybe kill every person there? You do realize that's attempted murder?\"\n\n\"We had our orders.\" said the perp.\n\nThe other man then said \"And I don't really give a shit about that hellhole town or those people. They're mostly black. If they die, it's no loss to the white race... is it, Commander Troy?\" He was peering at me. I peered right back.\n\n\"May I have a moment with my clients, please?\" asked the attorney.\n\n\"I think that would be for the best.\" I replied acidly, still staring at the white supremacist in front of me.\n\n* * * * * * * * * * * * * * * *\n\nAs we waited for the attorneys to get up to speed with the perps, I said to Cindy \"That was great driving, Kato. You been practicing?\"\n\n\"Oh, I sometimes use those simulator games on the computer.\" Cindy replied with as innocent a look on her face as she could muster.\n\n\"Uh huh.\" I said. \"Those things ain't shit when it comes to real driving. And I just saw some seriously no-shit driving.\"\n\nCindy just looked at the ceiling and began whistling innocently. I began laughing.\n\n\"All the same, that was some awesome driving.\"\n\n\"Your shooting was pretty damn good, also.\" Cindy said. \"Been practicing?\"\n\nI just looked at her and said \"Yes.\"\n\nPart 11 - Crash and Burn\n\nAt 5:00am, Saturday March 25th, everyone crowded into the small meeting room at the MPD Precinct to hear Lt. David Krueger's information.\n\n\"These eight guys have all come under the eye of the SBI or FBI in the last few years as potential drug runners.\" said Krueger, as his computer exhibited the eight men's mug shots on the projector screen. \"Domingo Shipping was run out of the State by the Iron Crowbar some time ago, and we suspect other criminal organizations may have reinforced keeping Domingo out of the State.\" (Author's note: 'A Day In The Life'.)\n\nKrueger continued: \"Domingo is suspected of running tanker trucks that appear to have simple solvents, but may have drugs like cocaine dissolved in those chemicals. The SBI-NTF, DEA, and FBI have been trying to catch these guys, but so far have not been able to catch a truck and then get probable cause to test the contents. But these names,\" he said as he again showed the mugshots, \"can now be charged with trying to take these deadly chemicals away and dump them.\"\n\n\"What does this give us?\" asked Ted Orosco.",
        "I said \"It gives us probable cause to get State and Federal warrants to test the photography chemicals site. And when those positive results show up, it gives us probable cause to completely re-test the Pine Valley development site. And if those tests show any conflict with the results from Forbes Environmental National Laboratories, we not only can bring the hammer down on them and Forbes & Sehgal Engineering, but we'll have motive for the murder of Jimmy Shell. And maybe, just maybe, we can nail his killer to the table at Jacksonville.\"\n\n\"What did the interrogations give us?\" asked Jack Muscone.\n\n\"Surprisingly,\" I said, \"the perps did not take the Fifth. They are all willing to talk... in exchange for immunity, of course. But there's a caveat: they want immunity for all eight of them, not just one.\"\n\n\"That's easy enough to break.\" said Muscone. \"Tell them one person gets the deal and the rest to to prison. Let them compete to be the first.\"\n\n\"They are strangely cohesive about that.\" said Cindy. \"It's almost as if they share the same... Roots.\" Jack Muscone's eyes widened as understanding hit him like a slap in the face.\n\n\"So what do we do?\" asked Chief Soltis.\n\n\"Let them rot in prison.\" I said. \"We do not need them.\"\n\n* * * * * * * * * * * * * * * *\n\n\"So, want to go home?\" I asked Cindy. \"Not much else we can do down here.\"\n\n\"Sure.\" said Cindy. \"I'll drive.\"\n\n\"Hoo boy.\" I said, which got me a punch on the shoulder.\n\nWe made record time, one hour and fifteen minutes for what should've taken over 100 minutes at legal speeds. Deputy Strait of Coltrane County knew the Black Beauty, and did not chase us through his dominion when he spotted us.\n\nWe stopped by Police Headquarters... right into chaos.\n\n\"Glad you've returned, Mister and Miss Crowbars.\" said Chief Moynahan. \"We've had a bit of excitement overnight. A small company jet was on approach to County Airport from the west when it went down short of the runway at about 10:00pm last night. The pilot and sole passenger on the plane were killed. Fortunately, no one on the ground was hit nor hurt, as the land is not occupied.\"\n\n\"That's unfortunate, sir.\" Cindy said. \"But why all the activity and agitation? Someone we know?\"\n\n\"Oh, shit...\" I muttered.\n\n\"I bee-lieeeve the Iron Crowbar can guess the name on the first try.\" said the Chief, seeing the look on my face.\n\n\"I hope I'm wrong.\" I said. \"But my first guess is Fred Steinhart of Forbes & Sehgal Engineering.\"\n\n\"And that, Miss Ross,\" said the Chief, \"is why this man is already a legend...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/environmental-hazards-ch-02"
}