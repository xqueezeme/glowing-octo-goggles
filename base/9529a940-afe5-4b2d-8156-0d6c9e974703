{
    "title": "Exquisite Experiments",
    "pages": [
        "The bandit king stood over her, his thick cock rock-hard and ready to violate her. Grabbing her knees and roughly forcing her legs apart, Princess Felicia gasped as her barbarian lover lined himself up with her entrance, the tip of his cock resting against her aching pussy.\n\n\"Are you ready, whore?\" She could only gasp in response, her eyes burning with arousal as she nodded her consent. With a grunt, the bandit drove himself forward, spearing his manhood into her, making her groan with pleasure.\n\nLucy DuBois smiled. God this was trash.\n\nLying on her stomach, fingers working lazily across her pussy, the young witch turned the page. At least this author could spell, she thought to herself. She kept reading, enjoying the story of the noble princess giving herself to the rough bandit king, in all its smutty glory.\n\nThis was how she spent most of her days at the Astral Academy, when she wasn't in lectures or frantically studying for a test. Thank god she'd managed to swing a single room; a roommate would not have made this any easier. Lucy smiled to herself. Well, not unless they were just as horny as she was...\n\nTurning her attention back to the page, the witch let out a soft gasp as her fingers began to work into her pussy, her middle finger slipping in and out with ease as she pressed her hips down, keeping her hand in place. Soon though, it wasn't enough.\n\nLifting her hips up off the bed, she redoubled her efforts, sliding two fingers in and out of her soaking hole as she flipped through the erotic novel she had open in front of her. Each twitch of her fingers sent a little shiver of excitement through her, her bare nipples rubbing against the sheets as she rocked her hips forward and backwards absentmindedly. \n\nDespite it's technical shortcomings, the book was doing its job; the graphic descriptions of the two characters engaging in a variety of colourful carnal acts were driving Lucy's libido into overdrive. Slipping her fingers out for a moment, she gave her clit a few quick rubs, running her fingertips across herself in a semi-circle, before plunging back inside. \n\nDeciding enough was enough, Lucy flipped herself over, tossing the book down by her side as she grabbed the handle of her chest of drawers. Rooting through her sock draw, surprisingly full for someone who did very little washing, she finally fished out a smooth stone rod. Polished to a shine, the milky blue-grey object was about seven inches long, thicker in the middle and tapering to a slightly flared head at one end. In the light, the opalescent material it was made from shimmered. Lucy smiled.\n\nPicking the book back up again, she lay on her back, one hand keeping it steady while the other guided the dildo towards her aching pussy. Teasing herself with the tip, she ran the smooth stone up and down between her damp labia, across her clitoris, and back down before pushing the head inside her entrance. She bit her lip. It felt amazing. Desperate for more, she pushed the object deeper inside, feeling it slip into her with barely any resistance. Underneath her ass, she could feel the damp spot her juices had made on the blanket. \n\nHer body on fire, she began to fuck herself, sliding the dildo in and out of her needy pussy as she went back to the story. Feeling the stone shaft sliding in and out of her sent shivers of pleasure throughout Lucy's body, and as she settling into a steady rhythm, the young witch began to pump the dildo in and out even faster. \n\nSoon, she was fucking herself hard and fast, trying her best not to make a sound as she stuffed the stone dildo in and out of her aching snatch. She bit her lip tighter, afraid someone in the next room would hear her, but didn't slow down her pace. Keeping her mouth shut tight, cheeks burning red with arousal as she masturbated, Lucy could feel her orgasm quickly approaching. \n\nLetting go of the book, she let her head fall back, moving her other hand down to her burning clit. The combined sensation of the dildo sliding in and out of her wet pussy and her fingers furiously rubbing across her sweet spot was incredibly intense, and it took every atom of Lucy's being not to cry out in ecstacy. She was so close, she could feel it!\n\nClosing her eyes, Lucy rolled her head to the side, biting down on the blanket as she pleasured herself. Desperate to come, she kept her hands moving, forcing the dildo in as deep as it would go, feeling the cool stone head spreading her walls as she pounded it into herself, fingers still working tirelessly across her clit. Her ass was slick with juices, it wasn't going to be long before she climaxed.\n\nStarting to pant, Lucy could feel her body beginning to spasm. Deep in her stomach, she could feel the oh so familiar sensation starting to spread out through her body. Nearly there, nearly there, just a few more seconds...\n\n\"Lucy!\"\n\nSuddenly, a loud knocking on her dorm room door made Lucy jump. Snapping back into reality, she sat up straight, turning to look at the clock on the wall. Oh shit, she was late for class!\n\nAbandoning her toy, she got to her feet, desperately looking around for a towel to clean herself up.\n\n\"I'll be there in a second, I'm just trying to find my wand!\"\n\nGiving up, the frantic witch grabbed the blanket scrunched up on her bed. Oh well, it was going to need a clean after this morning anyway. Quickly wiping herself down, she practically dove for her wardrobe, throwing on the first robe she could find. Grabbing a pair of blue cotton panties, Lucy grimaced as she pulled them on over her still-damp privates. She had been so close to coming. \n\n\"Come on, we're gonna be late!\" The voice from the other side of the door sounded impatient.\n\n\"I know, I know, I'll be two seconds!\" Spinning around, Lucy grabbed her wand from the bedside table, along with a satchel containing her spell books and journal. She promised herself she'd actually look at them today instead of zoning out like usual.\n\nLastly, just before heading to the door, she reached up to the hook on her wall and grabbed her pointed hat. After all, what self respecting wizard, even a student, would be seen without a pointy hat?\n\nQuickly pulling it onto her head, Lucy grabbed the doorknob, and threw open the door. Standing on the other side, looking more than a little irate, was her best friend Charlotte. A slight girl, just a little taller than Lucy herself, the young witch looked down at her with a look of impatience. Lucy smiled awkwardly.\n\n\"Hey, sorry, just had to grab my stuff...\"\n\n\"I can see.\"\n\nCharlotte motioned over Lucy's shoulder, to the open book and conspicuous stone rod still lying on her bed. Lucy felt a rush of embarrassment. Turning back to her friend, cheeks burning bright red, she gave her a guilty grin.\n\n\"Sorry.\"\n\nCharlotte returned her smile \"Sure you are. Come one, let's go.\" Giving Lucy a mischievous flick to the nose, Charlotte turned and began to head off down the empty corridor towards their classroom. Lucy, still embarrassed, hurried after her.\n\n----------\n\nShuffling into the large, grandiose room that served as a lecture theatre, Lucy remembered exactly why she'd wanted to come to the Astral Academy in the first place. From a young age she'd had a real knack for the arcane arts, and while other children her age ran around and played games, she stayed inside, studying to take the entrance exams when she was old enough. She'd practiced her spells every day, and as soon as she hit eighteen, her parents took her into town to take the tests. She knocked them out of the park.\n\nIt took two weeks of waiting for her acceptance letter to arrive, every second more agonising than the last, but when it finally did, Lucy had jumped for joy so hard she'd almost broken her ankle. And so, packing her bags, she kissed her parents goodbye and set off across the Coldspike Mountains towards her new home.\n\nLucy remembered the first time she stepped through the majestic gates into the academy's courtyard as though it were yesterday. The way the buildings around her towered up to the sky, the gargoyles perched on the roofs leering down at ther. The way the air hummed with raw magical potential, the smell of the fresh mountain air tinged with sulphur and other arcane reagents. It was everything she'd ever hoped.\n\nThe lesson plan had looked intense, but she'd never been worried. After all, in the entrance exam she'd gotten some of the best results her hometown had ever seen!\n\nUnfortunately for her, she quickly learnt that pretty much everyone else at the academy had also gotten the best test results their hometowns had ever seen. And some of them came from much, much bigger towns than hers.\n\nIt had taken a few weeks, but she eventually settled into her new routine. The culture shock of going from such a small town, where almost no-one knew anything about magic, to the world centre for arcane studies was pretty intense, but soon enough Lucy had gotten used to it all quite nicely. After all, if she was going to be here for at least three years, she'd be damned if she wasn't going to enjoy herself!\n\nAnd, half the world away from her parents, that turned out to be much, much easier than she'd expected.\n\nFollowing Charlotte through the throng of people up into the rows of seating that filled most of the room, Lucy sat down next to her friend. She looked up. There were almost in the dead centre of the aisle. She hoped she wouldn't need to pee. Opening her satchel and dumping her books on the long wooden desk that spanned the full length of the row, she folded her arms and rested her chin on them, staring ahead at the large, empty blackboard. It wouldn't be empty for long.\n\nAlready standing at the front of the classroom stood Professor Mortimer, an old wizard with a long white beard and thin rimmed spectacles balanced on an old, tired face. Lucy wasn't sure if it was the weight of academia, or the stress of dealing with her fellow students, that made every teacher look a hundred years old. Although, considering where she was, that might just be the truth. Waiting impatiently for the class to take their seats and settle down, he cleared his throat and made his way to the board.\n\nLucy groaned internally. She hated Transmutation, largely because of this Professor. Somehow he managed to make everything sound about as exciting as watching paint dry, his dull monotonous voice ringing on and on about the fundamentals of change and other completely uninteresting concepts. \n\nLucy really didn't want to be in this class, but as Transmutation was one of the eight major schools of magic, it was compulsory for all second year students to take. She much preferred Conjuration, the art of creating things from nothing, but it could be worse. At least it wasn't Maths. \n\nTapping his wand on the edge of the dark oaken lectern in front of him, Professor Mortimer began to speak.\n\n\"Today class, we shall be covering chapters six and seven of Articcunio's Experiments in Abstract Animation, Vol. 2.  Please turn to page 227...\"\n\nAs the class opened their books to the requested page, Lucy could feel herself zoning out. All she could think about was how much she didn't want to be here. She'd much rather be back in her bedroom. She sighed. She'd been so close, so close to the edge when Charlotte had interrupted her. \"What a bitch\", she thought to herself, smiling.\n\nLucy had met Charlotte shortly after arriving at the academy, and the two had become fast friends. Charlotte's room was only three doors down from Lucy's in the dormitory, which had led to more than a few late night drinking sessions. Somehow the subject always made its way to sex, and that's how the two had learnt about their shared love of erotica.\n\nLucy smiled. As much as her best friend liked to pretend to be so much purer than her, she knew her secret. Charlotte was just as kinky as she was. While they'd never actually done anything together, neither of them being particularly attracted to girls, that hadn't stopped them swapping stories, tips, and even a couple of boys.\n\nLucy would never forget the time the two of them had gone to a party, and ended up going down on the same guy, about an hour apart. Her smile grew wider, She should get in touch with him again.\n\nShe'd learnt a lot from her friend over the past year and a half. Growing up in the bustling city of Windcliffe, she'd had a lot more opportunities to experiment growing up, and some of the things she'd tried astounded even Lucy. As a small town girl, especially one who'd stayed indoors a lot, Lucy hadn't had much sexual experience before leaving for the academy, but had made up for lost time quickly when she arrived. \n\nAfter getting over her initial reservations, Lucy took to the casual scene hard and fast. After all, in an academy specifically reserved for the best of the best, a lot of the students were in a similar situation to her, and the sudden rush of freedom they all experienced led to some wild, wild nights. Nights lucy hoped she wouldn't forget in a hurry, at least the ones she still remembered.\n\nDespite it all, she'd still managed not to get herself too bad of a reputation, except with the quiet Durlacovan boy who lived in the room next to hers, and constantly asked her to keep quiet when she was 'spending time with a friend'. It was hard for her not to laugh in his face every time he asked, staring at her sternly through his thick spectacles. Maybe he just needed to get some relief himself.\n\nZoning back into the classroom for a moment, Lucy was surprised to see the professor holding out a long piece of rope. With a flick of his wand, the slack rope suddenly tightened, standing rigid even as he took his hand away. A low chorus of 'oohs' sounded from the class, as Professor Mortimer began to wave his wand back and forth. As he did, the rope began to sway from side to side, as if it were a giant snake.\n\n\"Now, as you can see, while this may appear to be a simple telekinesis spell, it is actually something far more complex. What I have done is cast a spell which has animated this object. Now, until I dispel it, the rope will follow my commands. For example, rope: coil.\"\n\nAs the professor spoke, the rope did as he commanded, immediately coiling itself up into a tight circle on the ground. The class murmured in amazement. \n\n\"Now, stand straight\". Again, the rope did as it was commanded.\n\nFor the next few minutes, Professor Mortimer continued to demonstrate the various things the animated rope could do, including tie itself in knots, latch onto a roof beam and swing itself up, and even unwind itself into individual fibers before coming back together. But by far the most impressive demonstration, and the one that peaked Lucy's interest the most, was when the professor called on a volunteer from the audience. \n\nMaking his way down from his seat at the back of the class, the young man who'd been picked gave a thumbs up to his laughing friends. Full of bravado, he stood next to the professor, who asked him to hold his arms at his side. As the young man complied, the professor spoke to the rope again.\n\n\"Rope: bind\"\n\nIn a flash, the rope had flown out, wrapping itself tightly around the student's body, pinning his arms to his sides as he struggled to get free. The class started to laugh, and as he realised he couldn't escape, he clearly decided to make a joke out of his predicament, turning to look up at them all with an over-exaggerated look of panic on his face.\n\nThe professor smiled too. \"Ah, having fun are we? Well, you'll enjoy this too then! Rope: lift!\"\n\nSuddenly the student's expression turned to real panic, as slowly but surely the rope began to float upwards, lifting him up and off the floor. Lucy's eyes went wide. Kicking his legs feebly, the young wizard began to yell, asking to be put down, which only made the class laugh harder. Eventually, Professor Mortimer gave in, returning the boy to the ground and ordering the rope to let him go. \n\nAs the student made his way back up to his seat, looking down embarrassed and rubbing his sore wrists, the professor turned the class's attention back to the chalkboard. \"And so, after that practical demonstration, we see the truth in Articcunio's hypotheses...\" But Lucy wasn't listening. She had an idea.\n\n----------\n\nTwo hours later, when the lecture had finished and the students filed slowly back out of the room, Charlotte grabbed Lucy by the shoulder. \n\n\"Hey, what're your plans now? Do you wanna grab lunch?\"\n\nLucy frowned. \"Sorry, I... kinda have plans already.\"\n\nCharlotte gave her a patronising look. \"Do they involve a certain stone rod?\"\n\n\"No...\" Lucy tried her best not to sound guilty, but she could feel her cheeks turning red already. \"I'm... going to do some studying... for the test next week\"\n\nCharlotte's expression didn't change. \"Which test? The one for Advanced Evocations? \"\n\n\"Yeah, that one!\" Lucy realized her mistake almost immediately, as did Charlotte.\n\n\"You mean the class neither of us take?\"\n\nLucy stayed silent. She'd been caught red handed. Charlotte let out a chuckle.\n\n\"Don't worry, it's fine. Have fun up there.\" Charlotte gave her best friend a wink, and turned around, quickly disappearing into the throng of people in the hallway. Lucy stood there, still blushing but with a stupid grin on her face. God Charlotte was the best. Turning around herself, she made her way back to the dormitory. \n\nWeaving her way through the crowds of students, all in their identical grey robes, Lucy quickly got to the spiral stairs that led up to her dorm room on the top floor of the academy. Making her way past the tall iron-inlaid windows that looked out over the snowy courtyard below, she took a moment to gaze out over the mountains below. \n\nNestled in a natural rock cradle, the academy was mostly protected from the harsh weather of the upper highlands, but that didn't stop the driving snows from piling up on every available surface. Peaking out, she could just about see a group of final year students in one of the outdoor experimental areas, drawing complex arcane sigils in the snow, which quickly crumbled and formed whirling elemental creatures of fire and air that flickered, danced, and disappeared. Lucy grinned. Next year, that would be her.\n\nContinuing on her way, she passed a few groups of students loitering in the hall, some reading books and others just chatting with friends, until eventually she found herself outside her bedroom door. Reaching into her pocket, she realized she'd never actually locked her door. In the mad rush to get to class on time, she had completely forgotten. God, she hoped no-one had come in and seen the state of the place.\n\nLuckily, as she turned the doorknob and stepped inside, she was greeted by the same messy room she'd left. Dirty robes and other trash were strewn across the floor, a pile of dishes sat on an end table, still not washed, and on her bed sat the stone dildo, staring up at her almost accusatorially, as if to say \"why did you leave me out here in the open? \". Lucy made a mental apology to it.\n\nOn the table next to her bed stood a small portrait of her family, crowded around her as she stood, smiling, holding her acceptance letter. Her parents had been so proud of her, they'd insisted on having the moment immortalised, so her uncle had quickly sketched out the scene and painted it later. She looked at it. It really wasn't very good. The hollow eyes of her parents stared at her from the canvas. Lucy thought it looked a bit like they were judging her for the state of her room. Stepping through the chaos, she lay the picture down. Much better.\n\nCollapsing down onto her bed, the young witch let out a long sigh. She really needed to clean up at some point. But not right now. A smile crept up and across her face. Time to pick up where she left off. \n\nRolling off the bed, she quickly stripped off her hat and robes, leaving her in just the cotton panties she'd hastily pulled on earlier that morning, and a comfortable bra. Stripping those off too, she took a moment to admire herself in the full length mirror hanging from the wall of her small room. She didn't often like looking in the mirror, but right now, she felt good. Letting her eyes run up and down her figure, she couldn't help but smile and strike a pose, cocking her hip and tilting her head. She felt like she could take on the world. ",
        "But again, not right now. Turning her attention back to the bed, she jumped back onto the covers, rolling onto her back and grabbing the book she'd been reading earlier. Luckily when she'd tossed it aside, she hadn't lost her page, and as her eyes began to scan the lines again she let her hand wander down between her legs.\n\nPart of her wanted to jump right back in where she'd left off, dildo and all, but she decided to take things a bit slower. After all, she had all afternoon to herself. Might as well draw it out a bit. Slowly tracing her fingertips across her inner thighs, Lucy let out a soft, contented sigh as she teased herself. Moving closer to her nether lips, she ran her middle finger gently over her labia, shivering at the gentle touch. Caressing the soft skin on either side of her pussy, she spent a few moments enjoying the soft tingling sensation it sent running throughout her body.\n\nBefore she got too carried away though, she brought her hand up to her chest. Cupping her hand around her modest breast, she began to gently squeeze and mold the soft mound, enjoying the duel sensations of arousal as her nipples started getting harder. Soon, they stood out prominently, and she took one between her fingers, gently teasing and rolling it as she let out another soft sigh. She'd had a lot of practice getting herself going, and there was something about just playing with her breasts that made Lucy feel incredibly sexy.\n\nContinuing to toy with her naked chest, she turned her attention to the book in her hand. The heroine was now on her knees, being taken roughly from behind as the bandit king smacked her ass and called her all sorts of degrading names. Lucy chuckled. The writing was abysmal, but at least the scene was hot. She kept reading, enjoying the graphic descriptions of the princess's delicate body getting violated by her lover, and soon enough just reading had her pussy dripping wet.\n\nDeciding it was time to go further, she again let her hand drift down her body towards her privates. She slowly trailed her fingers down her stomach, running them across her smooth skin and shivering at the slightly ticklish sensation. Soon, she was poised, ready to go, her wrist resting against the top of her aching mound. Slowly, gently, she ran her finger up and between her lips, and across her clit.\n\nLucy let out a moan. Fuck she was wet. Teasing herself for so long had really done the job. Settling into a rhythm, she started stroking herself slowly, running her middle finger up and down between her wet folds, savouring each time her fingertip flickered across her aching bud. Still keeping things under control, she kept reading, partly as a way to keep her mind focussed elsewhere so she didn't rush.\n\nGently, she dipped the tip of her finger inside herself, groaning as a bolt of pleasure shot through her pussy. She slipped the rest inside, and started to finger herself, curling her finger with each stroke to stimulate as much of her sweet little pussy as she could. Soon, her finger darted in and out with speed, each time eliciting a short moan from the eager witch. She closed her eyes, trying to focus on each motion of her hand, in an attempt to slow herself down\n\nBut that didn't work for long. Soon her burning arousal became too much, and Lucy decided to throw any ideas of a slow build to the wind. Fuck it, she thought, putting the book down and grabbing her dildo. Bringing it to her entrance, she took a moment to marvel at its shape, before pressing it to her greedy hole. Slipping it in without much resistance at all, the young woman let out a much longer groan of pleasure, her pussy adjusting to the size of the object.\n\nWhen she had it inside her, she took a moment to relax. Gently, she squeezed her abdominal muscles, enjoying the feeling of fullness she got from having the dildo inside her. Her desires overtaking her, Lucy started to move the rod forward and back, fucking herself slowly as she shut her eyes and lent her head back on the soft pillows of her bed.\n\nGrinding her hips as she pleasured herself, she began to pick up the pace, and soon she had the dildo plunging in and out of her as quickly as she could. Lucy was in heaven, the intense feeling of her pussy getting filled by the stone rod making her squirm with delight, but she couldn't help but feel like something was missing. She wanted more!\n\nRolling up onto her knees, she held the rod against the blanket beneath her, the flared head pointing up at her eager hole, slick with her juices. She pressed the tip against her entrance again, before letting her hips drop with an audible gasp of pleasure. Steadying herself against the mattress, she took a moment to get used to the feeling again, before starting to bounce her hips, riding the dildo as quickly as she could manage.\n\nThe new angle felt amazing, and as she rocked her pelvis back and forth she did her best to keep quiet. The last thing she needed was a knock on the door right now. Unfortunately, that didn't last long. The incredible pleasure soon had her moaning and groaning with each drop of her hips. Sitting up as straight as she could, she ground her hips against the hard shaft, feeling the head pressing against her inner walls, deep inside her pussy. Her hands moved back to her breasts, kneading them as she closed her eyes and let out a silent moan of ecstasy. \n\nBut it still wasn't enough. She wanted more.\n\nWorking her needy pussy up and down the dildo, all she could think about was how much she wanted someone to take her. To lie down and have someone pound away into her, hitting her deepest spots and making her come. A funny thought crossed her mind, and she giggled, body still moving rhythmically up and down. What if the dildo could fuck her?\n\nSuddenly Lucy stopped. Maybe it wasn't such a funny thought after all. \n\nFalling forward onto her hands and knees, Lucy reached behind her and withdrew the dildo. As the smooth stone rod slid effortlessly out of her soaking hole, she let out an involuntary moan. She frowned at herself in the mirror playfully. Don't you go complaining, missy, it'll be back inside you soon enough!\n\nLeaping off the bed, the young witch frantically searched through her bag, until she found what she was looking for. Standing back up, wand now in hand, she turned back to the sex toy staring up at her from the sheets. Ok, time to see if she'd actually learnt anything today.\n\nMoving her hand backwards and forwards in a rhythmic swishing motion, Lucy tried her best to remember the magic words she needed to animate the object. After a few failed attempts, her efforts were rewarded with a soft humming, followed by a flash of blue light which spiralled out from the tip of her wand and struck the dildo. The light coursed across its surface, eventually fading away and disappearing, but as it did, the stone rod began to twitch. Slowly, it began to rise up off the sheets, hovering a foot or so above the bed. It turned, the sculpted head facing towards Lucy, bobbing serenely in the air.\n\nLucy grinned. \"Yes! I knew Transmutation had to be good for something!\" Pumping her fist into the air, the successful witch had to stop herself jumping for joy. Turning her attention back to the now levitating rod, she flashed it a warm smile. It felt a bit weird, watching what had, until this point, been a completely inanimate object now hover in the air, bobbing gently in an almost playful way. As she watched it, it tilted itself to the side slightly. It looked almost curious. Lucy laughed. It was kinda cute. For an animated sex toy.\n\n\"Hi there.\" The rod nodded it's head back in greeting. Lucy stifled another laugh.\n\n\"Ready to get back to what we were doing?\" Again, the dildo nodded, and started swaying back and forth in the air excitedly. Lucy couldn't stop herself now, and let out a giggle. \"You're an excitable little fella, aren't you?\"\n\nMaking her way back to the bed, giving the toy a playful tap on the tip with her finger as she went past, Lucy climbed back on top of the sheets. Lying down on her back, she spread her legs open, showing her pussy to the animated rod. With a grin, she beckoned it down to her.\n\nHovering for a second, the dildo suddenly zipped forward, flying down towards her eager pussy with a speed that made Lucy flinch. It stopped just short of her privates however, hovering just above. Gently, it started to run it's head across her nether lips, and Lucy let out a gasp.\n\n\"Hey, don't tease me! Get in there already!\"\n\nHaving had it's fun, the playful sex toy positioned itself against the young witch's entrance, before pushing inside in one long, slow motion. Lucy let out a moan as she felt the toy sliding itself into her, and let her head fall back against the pillow again as the dildo got to work.\n\nStarting slow, it quickly began to pick up the pace, reacting quickly to Lucy's flushed and aroused body. Pistoning in and out of her aching pussy, the toy seemed to know just how to please her, changing speed and angle in just the right ways to make her gasp with pleasure. \n\nLucy was in heaven. She couldn't believe how good it felt, having her dildo plunge in and out of her with a mind of its own, filling her with wave after wave of bliss. She groaned, moving her hands back to her breasts, caressing them softly and teasing her aching nipples as she lay back, enjoying the exquisite sensations the toy gave to her. \n\nOpening her eyes for a moment, she glanced down between her legs, watching the animated stone rod pumping in and out of her in long strokes. Each time she saw it withdraw itself, almost to the head, before sliding back inside completely, making her gasp in ecstacy. It was so strange, seeing the object moving back and forth on it's own. Not that she was complaining, too deep in her lust to think much about the sight before her. Leaning back down, she closed her eyes again and relaxed, letting the dildo do the work.\n\nAfter an intense few minutes of pseudo-masturbation, Lucy had another idea. Still in the throws of ecstasy the dildo gave to her, she lent her head forward again to speak.\n\n\"Uh, Dildo? Vibrate?\" It felt weird to address the object, but as she felt the rod begin to shake inside her, Lucy forgot all about it. Letting out a long moan of pleasure, she fell back, the now vibrating sex toy sending unimaginable waves of pleasure throughout her. The sensation of the toy pounding in and out of her, pulsing as it did, felt unlike anything she'd ever experienced before. The constant stimulation inside her was intense, and the young woman could barely stop herself screaming out in ecstasy as the stone rod continued to piston in and out of her. \n\nLucy's body was on fire. She could feel her cheeks burning with arousal, and underneath her the sheets were soaked with her juices. Keeping one hand on her breast, she moved the other down to her privates, and started to circle her clit with the tip of a finger, sending her into an even more incredible state of pleasure. Barely able to speak between gasps, she managed to moan out to the toy.\n\n\"Yes... Right there... just like that!\"\n\nUsually, she would have felt awkward talking during sex, but all alone she didn't mind at all, urging the animated dildo to fuck her harder, the vibrating shaft sliding in and out of her almost too fast to see now. Lucy's whole body was drenched in sweat, and as she gasped in between thrusts she could feel her orgasm coming. Not ready to come yet, she moved her hand away from her clit, grasping around on the bed for her wand. She wanted more, needed more. \n\nFeeling the gnarled wood beneath her fingers, she curled them around her wand, and without thinking started to wave it in the air. Relying on her subconscious, her brain too preoccupied with the exquisite pleasures she was experiencing, Lucy tried to cast a spell. For a moment, nothing happened.\n\nSuddenly, the young woman felt something soft wrap around her wrist. Letting out a shriek, she opened her eyes to see one of the corners of her bedsheet tying itself in a knot around her. Looking to the other side, she saw the opposite corner doing the same, and in a flash, Lucy was up and off of her back. Feeling the fabric constrict around her, Lucy struggled as her arms were pulled tight against her back, the sheets holding her up in the air, hands bound together and legs kicking wildly.\n\nFor a moment she thought about calling for help, but as the animated dildo continued to pump in and out her, she decided to see where this was going. After all, it wasn't as though the sheets were particularly hurting her, and it was hardly the first time she'd been tied up. As she watched, mouth open and gasping, two pieces of clothing, a scarf and a jumper, flew up from the ground, coiling around her ankles, and pulling her legs akimbo.\n\nNow tied up and helpless, Lucy let out a loud moan of arousal. Fuck, it felt amazing. She'd always loved having her arms held behind her, but now, hovering in the air, legs held wide open and the smooth, vibrating dildo working its way in between her eager lips, she couldn't help but shiver with excitement. Looking around, she wondered what else might come to bind her, and how, but it seemed like that was all for now.\n\nPlayfully she struggled against her bindings, as the magically animated sex toy in her pussy redoubled it's efforts to make her come. Pumping in and out faster and faster by the second, the dildo's vibrations began to fluctatate, moving from a fast and rhythmic pace to slower, more intense pulses. Plunging deep into her soaking hole, Lucy groaned and gasped as the object fucked her hard, almost sinking it's full length inside her with each thrust. \n\nThe feeling was incredibly. Lucy had never felt so aroused. Tied up and spread eagled, with an enchanted toy fucking her tight hole, she began to feel the build up of pleasure inside her coming to a head. As the warmth of her orgasm began to spread out from her groin, Lucy gasped out again, urging the dildo onwards.\n\n\"Yes... yes.. Oh, fuck!... Fuck!\"\n\nSensing her impending climax, the dildo responded by keeping pace, thrusting mindlessly in and out of her, the vibrations of it's shaft radiating out through her pelvis, stimulating her deepest parts and making her body cry out in arousal. Just before she fell over the edge, she felt the fabric around her wrists and ankles tightening, pulling her arms in closer and keeping her legs spread wide as they tried to close involuntarily, to trap her insentient lover deep inside. \n\nWith a loud, piercing cry of ecstasy, Lucy began to come. Waves after wave of exquisite pleasure flooded through her body, spreading out from her pussy until every part of her tingled and spasmed with bliss. Her arms and legs began to shake, held tight by her bindings, as her stomach clenched over and over. Eyes shut tight, all she could do was hold on as her orgasm tore through her body, making her lose all control, giving herself over completely to the lust that consumed her. \n\nAnd then she fell down.\n\nAs she started to come down from the incredible high of her monumental orgasm, her focus wavered, and the magic she'd been using to control the objects around her dissipated, turning them back into regular old bedsheets.\n\nAs she crashed down, Lucy had never been so thankful that she never picked up after herself. Falling onto a large pile of dirty washing, the young witch lay on her back, panting as she recovered from her incredible climax. Not wanting to move, she felt between her legs, and discovered the dildo still pressed deep inside her. Slipping it free, she held it up.\n\nStreaked with her juices, the stone rod looked the same as it always did. Any hint of the magic that had kept it animated and fucking her only a few moments earlier was gone, and Lucy felt a strange twinge of sadness as she inspected the now inert sex toy. \n\n\"Ah well, just have to wait till next time, little guy...\"\n\nLying back, Lucy smiled a content smile. Fuck, that had been amazing. She'd never cum that hard before, especially not on her own, and as she closed her eyes, she started imagining all the other fun things she wanted to try now that she'd mastered animation. \n\n\"You know, I think it might be time to get a you a little friend, what do you say?\" She grinned at the shaft still in her hand. \"Just think of all the fun the three of us can have together...\"\n\nPutting the toy down on the pile of sheets, Lucy had just started to drift off to sleep when she heard an impatient knocking on her door. For the love of god, she thought, clambering up onto her feet, the muscles in her legs aching slightly from the intense workout of her climax. Stumbling to the door, she opened it a crack and peeked out.\n\n\"Hi, who is it...?\"\n\n\"Could you please keep it down in there! I don't know what you're doing, but if you could... oh... uhm... if you could...\"\n\nStanding at the door was Lucy's next door neighbour, the bookish young man from Durlacova. Underneath his thick spectacles the wizard's eyes were wide with shock, and as Lucy watched his cheeks started to blush bright red with embarrassment. Wondering what was wrong, Lucy looked down, to see that she was still stark naked.\n\n\"Oh um, oops, sorry!\" she could feel herself starting to blush now. \"I must have forgotten to.. Well, you know... Um... Bye-bye!\"\n\nSlamming the door, Lucy just stood there, stock still and in silence. Then, she began to laugh. Making her way back to bed, she made a mental note to remember to get dressed before answering the door post-orgasm. \n\nClimbing under the sheets, she smirked to herself. She could always just animate a sheet around herself. That way she wouldn't have to stop her new friend from having its fun. Smiling at the idea of getting pounded while she answered the door, Lucy closed her eyes. Drifting off, she couldn't wait for tomorrow."
    ],
    "authorname": "LindseyLuv",
    "tags": [
        "animated object",
        "light hearted sex",
        "schoolgirl masturbation",
        "bondage female masturbation",
        "dungeons and dragons",
        "hardcore fantasy",
        "living dildo",
        "magic school",
        "solo female masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/exquisite-experiments"
}