{
    "title": "The Designer Pt. 02 Ch. 08",
    "pages": [
        "Author's Note: The backstories I want to tell, as well the the more expanded main story, as well as the new line in the present have required me to be more specific in my headers. I will include the main characters of that section to make it clear. The story itself spans almost half a century - most of Jeremiah's life. Oddly, Jeremiah is exactly my age - 48, so if timeline continuity is your fetish, that should give you some boundaries. Thank you for reading, sharing a comment, casting a vote and I hope you enjoy my tale.\n\nDistant Past: Isaiah & Katie\n\nIsaiah and Katie grew closer as the the school year went on. They enjoyed becoming friends, and then more than friends. They started dating, though both sets of parents didn't approve of dating, and preferred a courtship relationship. In the early sixties, teenagers didn't always follow the rules their parents expected. \n\nIsaiah asked Katie to the prom, and she accepted. Their relationship had grown a lot more physical, with extended make-out sessions in a mostly abandoned road that was highly visited by hormonal teenagers. Though there was no hill or butte called Blueberry nearby, this tree-lined shoulder of road was often referenced as Blueberry Hill. As prom approached, their dates were less and less at the drive-in restaurant and more and more at Blueberry Hill.\n\nOne night, their chemical attraction was in full bloom and Katie willingly succumbed to Isaiah's advances. She shifted her hips in the backseat, and pulled down her underwear, tossing into the front seat. Isaiah was busy exploring the glory of her breasts after he had unbuttoned her blouse and unfastened her bra when he felt her shift and move under him.\n\n\"Are you sure, Katie?\" He asked breathlessly as his eyes focused on hers in the light of the full moon.\n\nKatie only nodded and bit at her lower lip as he chest rose as she inhaled the scent of the fields surrounding them. \n\nIsaiah slipped up and started unbuckling his belt, and Katie rose to help with unbuttoning his khaki trousers, then pushing at his white boxers. Isaiah had to finish pushing them down and shifting his legs free as Katie's hand were busy holding his rigid cock.\n\n\"It's hot,\" she said in a quiet voice, \"I can feel it pulse...\"\n\nAs Katie explored the new sensation of a rigid column of male flesh in her hand, Isaiah leaned forward and pushed her skirt up, his hands feeling the humid warmth of her inner thigh, then cupping over her damp folds. Katie writhed and moaned as her hips lifted involuntarily and Isaiah echoed her groan as he felt her fluids soak his fingers. He cupped and fingered her folds, wanting her to feel as good as her fingers did caressing his shaft. \n\nKatie lifted her eyes from the work of her fingers, and looked at Isaiah as she felt his fingertip press inside her tight opening. \n\n\"I've never...\" she stammered as she felt his fingertip probe deeper, groaning as an ache of need rose in her core. \n\n\"Me either,\" Isaiah said, and kneed his frame closer, feeling Katie tug at his manhood, \"it might hurt when I enter.\"\n\nKatie bit her lip and nodded, as Isaiah felt her push his crown behind his fingers, withdrawing his hand as his hip drove forward. Katie yelped as she felt his head stall at her unbroken hymen, then thrust her hips up as she pulled at Isaiah's hip. Isaiah pushed steadily at her tug and felt a pop and then the feeling of molten heaven as his shaft slid deep into her virgin slit.\n\nA tear slid down Katie's cheek, but she only smiled, then lost her breath as her hips rotated and undulated, The pain evaporated as Isaiah slowly moved his heated shaft along her well lubricated passage. \n\n\"Oh this is wonderful, keep doing that,\" Katie cooed.\n\nIsaiah saw that she was more comfortable and started thrusting harder and faster. Katie moaned and whined sweetly with each of Isaiah's thrusts, looking up as him as he lowered his mouth to hers. Her cries muffled as their mouths met, and his tongue mirrored the movement of his cock, thrusting into her open willing mouth.\n\nIsaiah rose back and groaned, his hips flying faster and faster, as he felt his orgasm rapidly approach. He slammed his hips forward, filling her convulsing passage and fired hot shots of his seed deep in Katie's womb. Katie was bucking under him and the feel of his pulsing cock and the hot jets firing inside made her stiffen and scream. Katie arched her back then bucked as Isaiah froze his hips vibrating as he rode his orgasm. Finally he rolled forward and kissed Katie, his cock slowly shrinking inside of Katie's pussy. They lied together, in the bliss of the afterglow. \n\nAnother round a few minutes later started a habit of practicing this new thrill in regular intervals. By the time prom arrived, Katie was getting sick every morning, and she went to prom in her beautiful dress, six weeks pregnant with Isaiah's heir.\n\nTheir parents were not amused. Katie's parents, devout Protestants were devastated at Katie's sin of fornication. Isaiah's parents were equally aghast at their son's behavior. The sets were completely opposed to what to do with the situation. Zedekiah, Isaiah's father, demanded that Isaiah take Katie to the neighboring county where he knew a doctor that would take care of the problem. Katie's father demanded that the two wed, and make a home for the child. Although he knew life would be difficult, he recognized that Katie loved Isaiah, and Isaiah showed the same love for her. Isaiah couldn't believe his father's demands.\n\n\"Father, I love her,\" Isaiah had said, stricken by what his father suggested was the only solution.\n\n\"Isaiah,\" Zedekiah said with a piousness that was foreign to Isaiah, \"The girl is not pure, she is not like us, we can't breed with the likes of her!\"\n\nIsaiah stood shocked at what his father has said, and silently turned and left the house. He never returned, and never said another word to his father. Katie's parents allowed Isaiah to sleep in the garage, until their marriage was finalized. Isaiah was thankful enough, that he honored their request he not sneak into her room at night. Katie, however, might have found reason to explore the garage late at night.\n\nWith the marriage finalized, Katie's parents allowed the newlyweds to co-habitate in Katie's room. Isaiah took a job as an auto mechanic and started to earn a living. They both graduated that spring, and Katie's baby bump wasn't even visible under her graduation gown. By mid-summer they had found a small apartment. They were a happy couple, and when Jeremiah was born that winter, he lived in a loving household. The money was tight, but the house was full of love and happiness.\n\nPast: Brotherhood\n\nJediah took off his hat and nodded to the woman at the door. Deacon's first-wife was close to Jediah's age, ten years younger than Deacon. \n\n\"How is he doing, Rebekah?\" Jediah asked, \"I need to talk to him.\"\n\n\"He's awake, and can talk,\" Rebekah said with a bowed head, turning to let the man inside her husband's house, \"Try not to rile him up, please Sir. I had a mess of a time trying to settle his coughing down the last time you brought him news.\"\n\n\"I'll try,\" Jediah said as he passed by her, \"But the old man has a mind of his own sometimes.\"\n\nJediah slipped up the stairs into the Deacon's large bedroom, the windows overlooking the open areas of the compound. People filed past the large house in random bunches as they went about their business on the bright spring morning. Jediah stood next to Deacon's bed, and lifted a glass of water with a straw.\n\n\"Need a drink, boss?\" he asked.\n\nDeacon lifted his flinty eyes to see Jediah, then lifted a hand to hold the end of the bent straw to his dry lips.\n\n\"Thanks, Jediah,\" Deacon growled in a low grumble, \"I need to remember to drink, I've been dry for too long.\"\n\n\"Well that's the thing I wanted to talk about, \" Jediah said, knowing that while Deacon was dehydrated, his thirst was for something more, \"Michael found an interesting subject in that Washington college town we sent him.\"\n\n\"What makes her interesting?\" Deacon asked tiredly, after 40 years of this game nothing much surprised him anymore.\n\n\"She doesn't fit the profile,\" Jediah explained, \"Michael says she is insatiable sexually, but she wasn't only a few weeks ago. He is looking into more background, friends, associates.\"\n\n\"You know how these young girls often are when they first taste the forbidden fruit,\" Deacon sighed.\n\n\"Yeah, true boss,\" Jediah continued, \"But, Michael said he had met her after getting out of the hospital, dehydration and exhaustion from too much sex. I know newly deflowered virgins often go a little wild in college. Very few are hospitalized from it.\"\n\n\"You think she was influenced?\" Deacon asked some color returning to his face, \"All the lines have dried up, there is just a few left that we are aware of, and they are nowhere near this area.\"\n\nThe room went quiet as Deacon got lost in some memories, then looked at Jediah, \"Have you heard of what happened to last Baraqiel? What damage she caused?\"\n\n\"Happened before I was old enough to join the ordinations,\" Jediah commented, \"I've heard stories though.\"\n\n\"Deborah was a remarkable girl. With the pure line females, like her, we waited until they were of maturity to marry.\" Deacon said, slipping into a storytelling voice, \"She had just turned 18, and was betrothed to one of the powerful elders in the Samyaza line.\"\n\nJediah slipped into a chair near the bed, listening, while looking out at the compound. He remembered when he was younger, there seemed to be more people than who were left. More children, more mothers. The day was beautiful, there should be more people out enjoying the spring sunshine after the hard winter they had endured.\n\n\"The ordinance was held on a day just like today, bright sunshine, no clouds. It seemed perfect.\" Deacon said rubbing his chin, and feeling the day of stubble on his usually clean shaven face. He hoped he'd remember to tell Rebekah to shave him later. \"The formal awakening of the gifted usually resulted in some odd things happening, but nothing like that day. There hadn't ever been anything like Deborah.\"\n\nJediah knew the story, but indulged Deacon as he retold it. It was a source of conflict for the elder leader of the order. It was a turning point in many ways. The single most amazing show of supernatural power the order had experienced in a long time. As well as striking the most devastating blow to the body of leadership. A three-day sex orgy, led by the last, and most powerful Baraqiel succubus, had absorbed much of the energy of the order, including many powerful heads of other lines. The young succubus fled in the aftermath, escaping the clutches of the cultic brotherhood. \n\nShe left three men dead, including her betrothed, the leader of the cult and Deacon's cousin. Deacon was close in in age, but his cousin was the last of the pure Samyaza line. Samyaza were natural leaders, but also horribly corrupt and evil. They gave off an air of faithfulness to God, but as a branch they swore allegiance to a darker unholy power. Deacon's branch of Samyaza had never had powerful abilities, and any supernatural strains left had been sullied during the war. The leader was the last to die, when the succubus wench bit into his neck and tore out his jugular, spraying the crowd with his warm blood. She fled the scene carrying the leader's breastplate, and was never seen again.\n\nThe last Penemue elder was also killed, ending his line as he hadn't yet produced an heir, only six daughters. His loss was a shock, as the Penemue were known for restraint and self-control. At the height of the orgy, the man had blacked out in the aftermath of a powerful orgasm while taking the young Baraqiel's anal virginity. He never regained consciousness.\n\nThe only powerful line left was represented by Zedekiah of the Yeqon line. Zedekiah wasn't a participant in the ordination, but his father was. His father was the first fatality, trying to overcome the Baraqiel's will and enslave her to him. Her powers induced an artery in his brain to fail while he was frantically trying to force his cock down her throat. Zedekiah hadn't yet acquired his powers, but had watched the last day of the ordeal from the sidelines.\n\nThe United Priesthood's once powerful influence over their members and their expanded organization plummeted. Without the abilities of three lines to influence new recruits, the institution was left relying on normal human means to run their organized crime network. Their funds dried up as their followers slowly began to abandon the cult. \n\nZedekiah was often away from the compound, recruiting new talent for their brothels, or investigating signs and signals that might portend to supernatural causes. The murder of Zedekiah twelve years ago brought the end of the Yeqon line. The murder splashed across the local news, and even caught a national headline. With the news media too close, Deacon shuttered the gates to the compound, and withdrew from the larger community. pushing the small cult even further underground.\n\nZedekiah had been on the trail of the disappeared last Baraqiel, when he turned up in a cheap hotel in Bozeman, throat slit, his blood soaking the cheap sheets. Deacon had tried to find Zedekiah's missing son, Isaiah, after Zedekiah's murder. He manufactured a will, feeding some of the money from the United Priesthood full coffers into an account purported to be Zedekiah's estate. He hired lawyers to track down Isaiah, and had made contact, right before Isaiah was killed on that rainy night in Oregon. \n\nThe criminal activities of vice and prostitution in Nevada had been the lifeblood of the cult. Supernatural influences from the angelic lines had benefited recruitment and training of their much sought after prostitutes. The new Baraqiel succubus would have sealed the reputation of their brothels as the most alluring and mind-blowing in the burgeoning Nevada sex trade. Her abandonment of the cult was the first blow to the United Priesthood plans.\n\nWith the sudden end to three powerful angelic lines, Deacon's transactions meant to entrap Isaiah had instead crippled the finances of the United Priesthood. With formal estate established under Zedekiah's name, the money was locked up in accounts they no longer had access to. While expensive probate lawyers searched for a potential missing heir to Zedekiah's enormous wealth. The news filtered back to Deacon, and each tendril of hope had given him more life, only to be dropped back into the depths of depression when the lead dried up. \n\nIn recent weeks another lead had come to bear, some small movements of money in Zedekiah's estate accounts had Jediah asking questions of the probate lawyers. He'd kept that news to himself, seeing how weak Deacon had become as his age was pressing 90 years old. \n\nThis news of potential succubus activity in the region, only two-hundred miles from the compound, that was news enough to share with Deacon. As Deacon wound down his story of the night of the succubus awakening, the last of the Baraqiel, his color had returned. \n\n\"Get me that girl, Jediah,\" Deacon said coldly, \"I want to see her state for myself, I don't trust young Michael to see the signs. His line has grown so weak from impure breeding.\"\n\n\"Sure thing boss,\" Jediah said, and thought about telling Deacon the news about Zedekiah's money. He thought better of it, as Deacon closed his eyes and started breathing slower.\n\n\"I need my rest, Jediah,\" Deacon sighed, \"Rebekah can show you out.\"\n\nAs if on cue, Rebekah appeared at Jediah's side and pulled him out of the room. \"I told you not to rile him up, Sir. Tales of another Baraqiel, my word, what has gotten into you?\"\n\nJediah left, and headed back into town. He wondered how long it would take to make contact with Michael.\n\nPast: Jeremiah\n\nI felt a tug in my groin, and blinked my eyes, looking to my right to see a tousled mane of red still sleeping on my chest. Turning to my other side I noticed the chestnut ringlets of Alyssa's head shift closer to the ebony locks of Carmen as she shifted in her sleep. Tipping my chin down, I moaned as the halo of blonde strands brushed over my abdomen, inhaling sharply at the exquisite pull of Kelly's talented mouth.\n\nThe three ladies lightly sleeping stirred lazily as Kelly's power started to pulse, then I felt it collapse and feed directly into me. This caused my cock to swell exponentially, and Kelly's approving purr as she licked at the base, looking up at me told me she was experimenting with her powers.\n\n\"I just want you, lover,\" she said cupping my balls, and fisting my shaft, pulling the skin tight around the base of my crown, \"just you, and me.\"\n\nHer voice only made my balls swell in need as she slowly lifted her ass up, bowing her back as a cat getting ready to pounce. She slid her torso forward, warm breasts pressing into my thighs, as her body snaked forward. My arms were trapped by the sleeping heads of the rest of my harem, or I would have grabbed a fistful of her mane and tugged her mouth to mine. \n\nShe showed extreme patience, even as waves of arousal flowed from her to me, and each of her sweet kisses lingered as she went up my abdomen. She used her fingers and palm to stroke my shaft slowly as she enjoyed every inch of my flesh. Her head lifted as she kissed near Lexi's sleeping face, turning to look at her with a warm smile, before rising and fixing her gaze on me. \n\nHer thighs straddled my waist, and I could feel the heat of her sex bathe my shaft. She held the rod against my belly, and ground her wet folds up and down it's length, undulating her hips and thighs as I groaned in pent up need. I watched her, mesmerized by her aura, as she pulled my cock up, and lifted her core, pushing my engorged head into her dripping folds. Her eyes blazed a golden sheen around her deep blue iris as I felt her cunt descend and take my whole rod in one smooth drop of her hips.\n\nSettled into place, she leaned slightly away from Lexi and twisted her torso. She snaked her mouth to meet mine and thrust her tongue into my mouth. She was in complete control of me, as her hips circled and ground in a slow rotation, massaging my shaft and head with her strong inner muscles. She kissed and sucked on me, her breath filling my lungs. I exhaled and she sucked down our shared air as we both started to dance quietly amongst our sleeping lovers.\n\nI could feel her pulses of sexual energy flowing into my pleasure centers, and my desire became singular. To make love to her, to fuck her, to fill her, to please her. Every one of my thoughts centered on the blonde goddess riding my cock. My thoughts streamed into her consciousness through our linked psyches and that drove her to the height of passion she desired. Her hips moving in molten curves of liquid fire. Her arousal flowing down my shaft and over my bouncing balls. Our hips met and parted, what started so slow, had sped to the point where our pent up need had the room echoing with the slapping of our flesh as we fucked.\n\nThe sleeping women stirred as I cried out, erupting in torrents of cum jetting in Kelly's pulsing cunt. She cried out and arched back, her movements waking the three nymphs beside me who blinked awake then purred as they watched us both convulse through our waves of orgasms. Lexi shuddered against me, feeling the pulse of sexual energy and covered one of my nipples with her mouth sucking hard, making my own orgasm crest higher. Alyssa and Carmen slid to their knees beside Kelly. Alyssa moving to suck on the siren's breasts as Carmen leaned over her to kiss Kelly in a deep kiss. \n\nWhile hardly awake, the three girls shuddered as Kelly's powers sucked in their arousal, and pushed it out to all of us forcing us all to orgasm at once. My vision tunneled as my head tossed back, sexual energy vibrating through every nerve and synapse. ",
        "I woke up moments later to Lexi's soft kisses, her green eyes looking at me with concern. Kelly hovered over me as well, her blue eyes wide open.\n\n\"Master, wake up,\" Lexi said, with a tremor in her voice.\n\n\"I'm okay,\" I said, sensing a shift in emotions and Kelly's worried look, \"I'm fine... Wow.\"\n\n\"Jeremiah,\" Kelly said with a tremor of fear in her voice, \"Alyssa... Carmen...\"\n\nShe couldn't complete a thought and I snapped into a high state of consciousness. I rose up to a sitting position, and looked to my side. Kelly slipped behind me, as if afraid, and Lexi clung to my back, her lips quivering on my shoulder. Alyssa was slumped over and Carmen was prone lying awkwardly on top of her. They were both unconscious.\n\nFirst aid training flashed through my brain and I moved to them. I rolled Carmen onto her back, and felt for a pulse... strong, her breath steady. I shifted back to Alyssa, straightening her naked body on to her back, and repeated the same assessment, good pulse, regular breathing. They had blacked out like me.\n\n\"They'll be okay,\" I said, \"just give them some air, they'll come around.\"\n\nKelly and Lexi twisted around to my side, hugging me tightly, their nude bodies warm against my sweat cooled flesh. \n\n\"Are you sure, J?\" Kelly whispered, \"I ... I ... I can't...\"\n\n She couldn't complete a thought, so I scanned her curve and saw it alight with fear and worry. She was afraid of her own powers. I could relate to that, remembering the panic I felt after it was apparent I had changed Kelly and Lexi. I simply hugged her and watched the rhythmic breathing of Carmen and Alyssa's chest.\n\nCarmen blinked first, and swore a low curse in spanish as one hand went to her head, and another to tug on a brown nipple. Her eyes were unfocused as she touched her flesh, then swung her vision to me, and my two worried girls. \n\n\"Papi...\" Carmen said smiling at me, \"Kel, ... wow.\"\n\nAlyssa woke next, her fingers rubbing on her temple, her other hand sliding down to cup her sex. She rolled towards us with a feline grin of contentment, then paused as she saw the concern in our eyes. She concentrated for a second, then a low chuckle.\n\n\"I'm fine, Kelly, more than...\" Alyssa said with a tinge of awe in her voice, \"Wow, intense, and maybe we're more careful with that, next time. But...\"\n\nKelly burst into tears and leapt at Aly, pulling her arms around her and hugging her tightly. \n\n\"Aly, I was so scared,\" she cried, as Aly tenderly rubbed her back, \"The three of you went out like a light, and Lexi was frozen, trembling, her eyes rolling back in her head lie,...\" she mumbled more words, then just cried in heaving sobs.\n\n\"Shhhh, dearest,\" Alyssa cooed in her ear, \"We're fine, we're fine. More than fine, really love.\"\n\nCarmen slid up to hug Kelly as did Lexi and myself. I was a bit at a loss for words, the intensity of the sexual tryst, followed by the palpable fear of the unknown left my nervous system in a state of gridlock. We all just held each other as Kelly's cries slowed and then stopped.\n\nFinally I felt Alyssa's thoughts in my brain, and pushed a thought to the rest. We turned and sat in a circle. I pushed contentment, and other pleasant thoughts, as the girls slowly unwound, and then looked around the circle.\n\n\"We are all new to this,\" Alyssa said quietly, \"I remember when J first told me what had happened, how scared he was, and how worried he was.\"\n\nI nodded, \"I was scared I had permanently damaged you both,\" looking at Kelly and Lexi, \"Is that what you're feeling, Kel?\"\n\nShe nodded slowly, and then spoke quietly, \"I wish I never had special powers, not if it brings you pain, or suffering.\"\n\n\"I thought the same thing, Kel,\" I said, \"I didn't know anything. I thought I was a freak. I felt so alone.\"\n\n\"But you weren't alone,\" Alyssa said, \"You came to me, you told me. You'd told Carmen too.\"\n\nAlyssa leaned over and put her head on Kelly's shoulder and her arm around her waist, \"And you aren't alone either, Kelly. We will figure this out. You will be able to control your powers.\"\n\n\"You are already,\" I said, \"You had it focused right on me at first, the girls slept through our love making until right at the end.\"\n\nKelly, nodded, and smiled remembering the supernatural intimacy we had shared, \"I guess you're right, and it only felt so amazing, I pushed that back to all of you.\"\n\n\"It WAS amazing, eye-yi-yi\" Carmen said, \"to wake up to that feeling, then having it only amplify... I've never felt so connected, and so loved. Even now, I'm full of the energy you shared. With others sex left me feeling empty Kelly. With all of you, I'm always feeling like I am right where I need to be.\"\n\nWe all smiled, and I leaned over across Lexi to hug Carmen, her heartfelt words, left us all at a loss for the next words. Then as I lifted away, Lexi leaned over to me and hugged me.\n\n\"I feel exactly as Carmen said,\" Lexi said quietly, \"My appetite for sex has morphed a bit differently than all of you, but it feels right, and you all have accepted my ... kinky side. I never knew sex before you, Master. And Kelly, and Carmen have loved me through it all. Before we met, I felt ashamed for my tendency towards kink. I masturbated in secret to kink videos when Kelly was away from the room...\" \n\nShe quieted, looking around meekly at her outburst of words. We all watched her, encouraged her, loved her just for being her. Feeling our acceptance, she smiled and shifted to kneel on her knees, and lowered her breasts to the bed, arms stretched forward. A submissive offering, that we all accepted. Surrounding her, touching her and kissing her.\n\nKelly smiled at all of us as we returned to our circle, \"Okay, my loves, thank you for accepting my fears, and talking about them. I feel much better with that off my shoulders.\"\n\nWith that our morning started and five bodies moved to share different showers. Alyssa and Carmen shared the shower in the basement. Kelly alone in the main floor, 'for everyone's safety,' she had laughed. Lexi followed me nude to the upper story,carrying our clothes and fresh towels for the both of us.\n\nI knew that Lexi wanted to serve me, so I stepped in the shower, and let the water run down my body. Lexi moved close to me, lifting on her tiptoes to kiss my lips, then descending into the spray of water, onto her knees and started to wash my body. Her fingers were light but strong, starting on my feet, then up my calves and thighs. She scrubbed my groin and carefully cleaned my scrotum and tugged along the length of my shaft. She stayed focused on her task and slipped around to wash my ass. she rose up to her full height, and stretched to wash my shoulders and back, then twisted around to wash my chest, smiling up at me. \n\nBy the time she was finished, I was hard as a rock. She looked at me, then turned around and offered me her ass, lifting her toes up and leaning into the cool wall of the shower. It felt rude to refuse, even though I knew the day would be busy. I gripped my shaft and pressed it into her folds, and thrust hard and deep.\n\nLexi whimpered, as I gripped her hips and started fucking her harder, then arched her head back, \"Oh Master, please... please... I love this, but please... fuck. my. ass.\"\n\nI slammed forward, as I heard her desire, scanned her automatically and saw this was a real desire, not some remnant of perversion I'd failed to correct. I pulled my cock out, slick with her juices and pressed the head up. She arched her back more, pressing her tight bottom into my swollen head. I felt the firm resistance of her tight muscle, but she sighed and tensed and suddenly, my head drove into her ass. She yelped at the sudden fullness in her bowel, then pressed backwards as she groaned as the pinch of pain. My cock slid deeper in until her tight ass pressed against my thigh.\n\n\"Oh yess... Fuck.. Take me.. Own my slutty ass, Master... PLEASE!\" she cried out.\n\nI gripped her hips tightly and drew my hips back and slammed back inside. My thrusts were heavy and hard, pressing her small frame against the shower as the spray started to cool against my hot flesh. Her body trembled as I took her ass, fucking her harder and harder, then roaring as I felt my orgasm rip up from the base of my spine. I thrust hard, burrowing deep as my cock pulsed and jets of cum filled her bowels. \n\n\"Good, obedient slut,\" said Carmen as Lexi screamed out shaking on my cock.\n\n\"What the fuck,\" I said, looking at Carmen who was fully dressed peeking in at us as I was still balls deep in Lexi's ass.\n\nCarmen looked at me deadpan, with a eyebrow raised, a look of conspiracy that made me feel like she'd tell me more later. She reached out and handed me a heavy rubber plug.\n\n\"Make sure the slut puts this in when you're done with her Master, \" Carmen drawled, \"It will keep her full of your seed all day.\"\n\nI gave the heavy rubber plug to Lexi, who was purring in arousal as I shifted back, my cock slipping from her tight ass. She slipped immediately to a crouch, knees wide and fit the rubber mass into her open sphincter, her eyes closing as I watched her abdomen flex as she adjusted to the intrusive shape. Satisfied that it was seated correctly she rose.\n\n\"Please Master, dry off and get dressed,\" Lexi said, \"this slut will wash herself in the cold water.\"\n\nI slipped out with questions streaming through my head, toweling off, and looking at Carmen. She laughed a low chuckle, and grabbed the towel from me and made a show of drying me off, even kneeling and drying my cock and balls tenderly. Taking my cock in her mouth, and sucking it clean. \n\n\"Don't worry,\" Carmen said, \"I've trained your slut to keep her ass clean, even purging her bowels after each movement.\"\n\n\"This is beyond my experience,\" I said truthfully, both turned on, and questioning everything.\n\n\"You need to understand how the mind of a submissive works, Jeremiah,\" Carmen said standing up and kissing behind my ear, \"To be a good Master you need to know her needs better than she does.\"\n\n\"A tall order,\" I admitted, \"but, I'm going to do everything I can to do just that.\"\n\n\"Good,\" Carmen said, \"Because you have two submissives to care for, Master.\"\n\nShe smiled at me with a feline gaze, and slipped back downstairs. I put on the clothes that Lexi had brought up and admired the view of her drying herself off. She showed off the black base of the plug as she dried her calves and feet, bending from the waist. Her limber frame was such a visual turn on, and the black plug was offset by her pale freckled flesh. I felt my dick stiffen in my jeans.\n\nLexi finished dressing, and we walked downstairs. Carmen was sitting on the sofa, with a grin on her face. She started a bit when we came in the room, as if caught doing something she shouldn't be doing. She laughed for a second, then got up and tossed me Alyssa's keys. \n\n\"Kelly and Alyssa went to Kelly's parents,\" Carmen reported, \"Something about dress shopping, they said we were on our own until after dinner.\"\n\n\"RV shopping, right?\" I said, trying to remain on track.\n\n\"That's right, Master,\" Carmen said, \"Lead the way.\"\n\nWe filed into Alyssa's car. Our hierarchy worked out naturally, I was the driver, Carmen in the passenger seat, and Lexi curled into the back seat. She sat side saddle, which was an alluring site as I turned to back the car out of the drive way. \n\n\"Can't sit proper?\" I asked good naturedly.\n\nCarmen whipped her head around, and Lexi flushed, then turned and sat the right way, her bottom pushed to the back of the seat, and a small grimace of discomfort across her brow. \n\n\"Better, slut,\" Carmen said, \"I'd hate for people to wonder why you can't sit correctly. It might bring embarrassment to our Master.\"\n\nI stopped the car, and was about to say something when Carmen fixed me with a firm gaze. She reached over and shifted the car in park, right in the middle of the road. She unclipped her seatbelt, then turned away from me, pushing her jeans down. She exposed her ass to me, and showed me a similar black plug in her asshole. I was speechless, as she fixed her clothes and rotated, sitting correctly in the passenger seat with a grunt. I could swear the grunt had a purr to it as she rolled her hips fastening the seat belt.\n\n\"Two submissives, Master.\" Carmen said, helping me put the car back in gear.\n\nI put the car in gear, while my brain tried to make sense of the whole situation. I drove on autopilot, heading towards the interstate. Checking with Carmen to make sure I was going in the right direction. She confirmed that the RV super center about 40 miles north on the interstate was where she wanted to go. \n\nWe were silent for the first few miles, it was 15 miles to the Interstate, so we had probably an hour until we arrived there. It was getting close to eleven, so I figured that we'd stop for lunch before we went to the store. Confident that I had the plan straight, I let my thoughts drift back to the more curious puzzle the two girls had presented me with.\n\n\"You'll have to excuse me,\" I said looking at Lexi in the rear-view, then turning to look at Carmen, \"I don't know a lot about BDSM, I hope I can live up to your expectations.\"\n\n\"Master,\" Carmen said, \"This slut will help you, and you'll be a great Master. Your dominance is natural, you just need to understand the mind of a submissive.\"\n\n\"And Master,\" I said, \"that reminds me of 'I Dream of Jeanie'\"\n\nCarmen smiled and Lexi, giggled, \"It's the utmost term of respect, Master,\" Carmen explained, so much more than \"Sir\".\n\n\"How about we start at the beginning,\" I said, \"How can you be a submissive, if you boss Lexi around?\"\n\n\"Okay, Master,\" Carmen said, and I felt she was being formal as an example for Lexi, but I was only partially right, \"May your slut ask you to listen, it might take a bit to explain.\"\n\n\"If you can tell me why we're talking in the third person,\" I said, even more confused.\n\n\"It will become more clear, Master, this one promises.\" Carmen said rubbing the top of my hand.\n\n\"Okay, ... slut ...\" I said, carefully, \"go ahead, but for now, please talk normally, until I know what it means.\"\n\nCarmen purred, and settled into the seat a bit, which made me remember her ass was plugged. Lexi remained quiet in the back listening attentively.\n\n\"I am what's called a switch, in the bedroom,\" Carmen started, \"I can be on top, dominant, or be on bottom, submissive, both bring me sexual pleasure. It's all so much more... stimulating in many senses than vanilla sex. Though, don't get me wrong, vanilla sex is amazing and wonderful.\"\n\nI nodded, and started compiling a glossary of terms as Carmen continued.\n\n\"My mind though, is completely a submissive. A service-whore-slut. I love to serve the people I love and care about. It makes me feel complete, and it's an honor to do everything I can for them.\"\n\nI nodded, it was a role she'd slipped into naturally in our family. Taking care of us, feeding us, cleaning, and she was radiant in the midst of it, and never complained.\n\n\"It's confusing, I know,\" Carmen said looking at me, \"It was something other boyfriends, and girlfriends got wound up about. Me serving them made them feel inadequate, and that lead to so many hurt feelings. But you, M-mas... Jeremiah, you allow it. It seems like it pleases you to be served.\"\n\n\"It does,\" I admitted, never really thinking about it, \"I know I'm capable of taking care of myself, but between you and Lexi, it seems that I have my needs taken care of.\"\n\n\"Lexi is still learning her submission,\" Carmen said, \"She might enjoy serving, but right now, it's more of a test. I do know she is a pain slut, isn't that right pet?\"\n\n\"Yes, Mistress,\" Lexi echoed and ground her ass into the back of the seat.\n\n\"Okay,\" I interrupted, \"How can you be her Mistress and still be submissive?\"\n\n\"Well, I'd rather not,\" Carmen said honestly, \"But I can assume the role, in this hierarchy, until you are more comfortable with yours. So long as I'm topped, I'm happy.\"\n\n\"What makes you think, I'll be comfortable?\" I asked seriously.\n\n\"Because you love us,\" Carmen said, \"and it's an unselfish, sacrificial love. Once you understand our needs, and you start being able to fulfill them. Mmmm... \"\n\nShe snatched my hand off the gear shift, and pulled it to her core as she spread her legs. Her cunt was hot, and jeans damp with arousal, I looked quick to see that traffic was clear, then stared at her.\n\n\"Trust me Master,\" Carmen said, as she rubbed my hand up and down, \"Once you realize what your dominance and power does to a loving submissive, you'll accept it, even crave it.\"\n\nI let my hand dwell on her cunt as her hips started to move in a roll, the pressure of my hand and the friction of the plug making her eyes roll back in her head. She cursed quietly in Spanish, almost panting. She was right, the power I felt having her ... under me ... in that moment was heady. I slowly drew my hand back and replaced it on the gear shift.\n\nShe licked her lips, and softly blinked her eyes, then smiled at me, \"Thank you, Master, for giving this slave a moment.\" \n\nHer meaning was so clear and intense, I knew I shouldn't ask about what a slave was. Part of me tried to pigeonhole it into involuntary servitude. As if I used my power to force her into obedience. Troubled, I scanned her curve, and saw it alight with pleasure in a sector that was associated with obedience. She felt like she belonged, she felt safe, she was alight with feelings of love. It was odd, but it helped me understand how she felt.\n\n\"So it's not intimidation, or involuntary?\" I asked as I was able to let her have her moment, but still needed more answers.\n\n\"It's never involuntary, Jeremiah,\" she said, almost sounding like Alyssa giving a lecture. \"Involuntary would be rape. It's absolutely voluntary. The dominant-submissive relationship is entwined, the power flows through each. The dominant is nothing without the submissive voluntarily submitting.\"\n\nI nodded, still in thought.\n\n\"Like when Lexi bowed in our circle,\" Carmen said grasping for an example, \"God, that made my cunt pulse remembering. Her total and unrestricted faith in us, to submit herself like that. Putting her whole being in our hands...\"\n\nShe faded off, and her eyes were bright, then brimmed with tears, \"That was fucking beautiful, is what that was.\" she said, looking out the window at the passing farmland.\n\nShe blinked a few times, then wiped away her tears, \"I hope I can feel that safe and trustful with you, Master,\" she said, leaning over and pressing into my shoulder, \"this slut has been hurt too many times, it's hard for me to trust. But I do, trust you.\"\n\nWe all slipped into silence for a few miles. Letting the drone of the road noise settle our thoughts. I noticed that each of the girls would squirm slightly every few seconds, then settle down, then repeat. Their bodies always slightly shifting, like they couldn't quite be comfortable.\n\n\"How safe is it to be plugged for so long?\" I asked breaking the silence.\n\n\"It's good you asked, Master,\" Carmen said, \"These trainer plugs are good for all day. They are rubber so they won't do damage. They are a bit uncomfortable, but not painful, right slut?\"\n\n\"I could use something, larger, \" Lexi said quietly, \"no disrespect, Mistress.\"\n\nCarmen chuckled, then sensing the meaning behind my question, \"Do you understand what a plug does to a submissive, Master?\"\n\nI shook my head, and she leaned closer to me, \"It is a constant reminder of you, Master. This one feels that plug begin to ache, and she remembers who placed it there. As she shifts to a new position, she is thinking of her Master.\"\n\n\"But I didn't put your's there.\" I said, looking over at her.\n\n\"Stop at the rest stop,\" she said suddenly, seeing the road sign for the turn off.\n\n\"Sorry Master,\" she caught herself, \"You are right, you didn't. This slut was sloppy and selfish to plug herself without your knowledge. This slut should be disciplined.\"",
        "\"How should she be disciplined,\" I asked curiously.\n\n\"This slut cannot presume to tell you how to correct your plaything, Master,\" she said aloud, then leaned closer and whispered in my ear, \"Spank my bare ass in the empty men's room, while Lexi watches and rubs her leaking cunt.\"\n\nMy thoughts were a whirl as I pulled into the empty rest stop. And I paid special attention to ensure that no trucks were in the truck parking lot. Her words were like fire in my brain, and I understood a bit more.\n\n\"Get out of the car sluts, now.\" I said in a deep growl, \"and follow me.\"\n\nI walked to the restroom, putting in the keys in my pocket. I realized my jeans were tighter than normal, because this talk had made my dick hard. I walked inside, and scanned the area, for any security cameras, and it was clear. The old rest stop had become unnecessary as the towns along the highway grew, and I knew we'd have the place to ourselves, as long as we needed.\n\nI grabbed Carmen as she walked into the men's room, gripping a handful of her hair. I dragged her to the sinks and pushed her head down into the bowl. Her hands instinctively grabbed the sides to protect herself, but her ass pushed out, and rotated like a cat arching its back. She practically purred.\n\nI grabbed the waist of her jeans and dragged them over the curve of her ass, and down her thighs, stopping at the knee. \"Spread your legs apart, slut.\" I said, then turned to grab Lexi, and push her against the wall. I held her there, staring at her, my hand at her throat. I didn't choke her, just held her as my hands unbuckled and pushed down her jeans.\n\n\"Squat, little one,\" I spat out, \"And watch, so you won't make the same mistake your Mistress has.\"\n\nThe more I assumed the dominant role, the more aroused I became. I had the benefit of scanning them, and adjusting my demeanor and words accordingly, they were both buzzing with arousal. I stepped back behind Carmen, and spread her cheeks apart. \n\n\"You're plugged, my slut, who plugged you?\" I asked as I pushed the end of the plug causing it to press inside.\n\n\"This slut did, Master,\" she cried, \"I have no excuse.\"\n\n\"Who's ass is it?\" I asked.\n\n\"Your's Master, all yours.\"\n\n\"Did you plug your ass so I'd punish you, cunt?\" I cursed, grabbing the edges and tugging, rotating and pulling the plug out of her ass. I watched as her tight sphincter muscle slowly closed as she groaned in a mix of pain and pleasure.\n\n\"No Master,\" she cried, \"I wasn't thinking correctly.\"\n\n\"Ten swats,\" I said, \"You count them,\" mimicking some old porn VHS tape I had watched long ago.\n\n\"Mmm yes, Master.\"\n\nI swatted her hard, harder than I'd expected to. She yelped then purred, pushing her ass out, and crying out, \"One, Master.\"\n\nI turned around and looked at Lexi, who was wide-eyed, her knees spread apart her cunt splayed open and glistening, \"Finger fuck your hole, until I tell you to stop, little one.\"\n\n\"Yes, Master, Lexi cried, her hand moving to finger her aroused slit, and biting back the moan she made, not sure how much noise she should be making in a public restroom.\n\nI swatted Carmen again, and she sang out the next number. My cock was hard in my pants, I felt the power of the moment, a Dominant disciplining his willing submissive, his slave, his slut. The thoughts streamed through my mind as I spanked her hard, to remind her who's ass it was. Who was in charge. I looked through the open door, double checking that we were alone. The public display totally private. The dissonance between how intimate it was, as I left red hand prints all over Carmen dark flesh, in a public place only amplified all of our arousal.\n\nFinished with spanking Carmen, I went to Lexi and gripped handful of her hair, \"Open your slut mouth,\" I spat as I pushed my jeans down and released my aching cock. \n\nLexi looked up at me through a glaze of lust, her mouth open and tongue out, her hand still fingering her sex, fingers dipping inside, then swirling around her clit. I shoved my dick into her open willing mouth, and sank it deep into the back of her throat. She gagged, and then swallowed, pressing her head forward in my grip. I tugged her head towards me until I felt her throat fill with thick saliva, pooling around my engorged head.\n\nI looked over at Carmen, who was staring at me over her shoulder, \"Did I say you could look at me?\" I asked, as I repeated the deep thrust into Lexi's mouth. \n\nCarmen turned away as I held Lexi's head, her nose pressed into my pubic hair, drool dripping from the side of her mouth. I saw Carmen lift her chin and watch me in the mirror, and I smiled down at Lexi as she was practically trying to choke herself on my cock. \n\n\"You're a good cocksucker, little one,\" I said, \"You make we harder just watching you.\"\n\nI gripped her head, and then thrust my hips. Holding her head still and face fucking her, with wet sounds that filled the small concrete room that smelled of piss and shit. It wasn't the most tidy place, but it was in that moment the most sexy thing I'd experienced this side of succubus intoxication.\n\nI pushed her head back and she leaned against the wall, still frigging her dripping cunt, leaving a puddle on the floor beneath her, \"Make yourself cum, slut.\" I said and walked back towards Carmen.\n\n\"Grab your ass cheeks and spread them,\"I commanded stepping behind her. \n\nCarmen did, and as soon as I saw her puckered hole, I gripped my cock, and pressed the spit slicked crown into her ass. I thrust hard, wanting to be in her, owning her ass, as I owned little Lexi's in the shower. She yelped at the hard thrust, my cock splitting her open. Her ass cheeks were bright red, from my spankings, and I gripped the tender flesh in my fingers. I yanked her ass back as I thrust forward.\n\n\"This is my fucking ass, slut.\" I said as I started to fuck her hard.\n\n\"Yes, Master,\" she cried, then growled, and purred, \"only yours, always yours, Master. Fuck your slut's ass. Oh Fuck YESS!!\"\n\nI wasn't gentle, I reamed her ass. I owned it, I made it hurt, and she loved every moment of it, her body was alight with tremors as I neared my climax.\n\n\"Please Master, May this slave cum, please please please.\" she panted as she thrust her ass back to meet my pounding.\n\n\"Only after Lexi does,\" I spat, looking over my shoulder at Lexi who had three fingers pounding into her cunt, her other hand tapping her clit.\n\nMy look sent Lexi over the edge and she screamed out and shook. A jet of her fluids coating the floor under her as she came in a rush. Carmen heard, felt, understood and released, her ass clenching as her cunt convulsed. I felt her muscles tremble inside and I slammed home. My balls tightened then clenched shooting a fresh load of hot sperm into Carmen's ass. She collapsed forward onto the sink, gasping for breath.\n\nI grabbed the plug from the dirty sink, ran some water to clean it off with my dick still deep in Carmen's ass. She looked up at me through the mirror and smiled a smile of pure contentment as I slid my cock free, and jammed the plug roughly up her butt.\n\n\"I'll tell you when you can take out my plug.\" I spat, then washed my cock off in the sink.\n\n\"Clean up and meet me in the car,\" I said and walked out of the dirty bathroom.\n\nAs I walked back to the car, I had to force myself not to go back and check on them. I do admit, I scanned them from a distance. They were alight with many feelings, some humiliation that seemed to spark arousal. Some pain, that also sparked contentment. Carmen's curve hummed with feelings of belonging. Lexi's was similar, but also showed a deeper need for more, as if she'd had a taste of something exquisite, and wanted to gorge on it.\n\nI closed my eyes, and forced myself to stop scanning. I waited, eyes half closed, until I felt the car shift, and the two girls slid back inside. Lexi's face was scrubbed clean, her cheeks bright from washing. Carmen's hair was pulled back into a ponytail, and her eyes bright with contentment. They both purred as they ground their plugged asses into their seats. I backed up and headed back up the road, without a word.\n\nCarmen leaned over and laid her head on my shoulder, eyes closing in a state of bliss. \n\n\"Tell me what I am, Master,\" she said softly, almost like a little girl.\n\n\"You are mine, little one,\" I said and squeezed her shoulders, reaching back and gripping Lexi's knee, \"Both of you are mine.\"\n\nCarmen smiled, and relaxed, \"You are a natural, Master.\"\n\nLexi leaned forward her waist still belted in, and kissed behind my ear. \"I love you Master,\" she said then settled back and closed her eyes. They both slipped into a light sleep for the final miles to the RV superstore.\n\nAs I took the exit that led up the frontage road, to the large acreage where new and used RVs lined up along the interstate, my stomach grumbled. Realizing I had three orgasms in the space of six hours I was suddenly famished. I turned and drove to a small greasy spoon restaurant and woke the girls, wanting to fill my stomach before shopping for a camper.\n\n\"Oh, good idea, Papi,\" Carmen said as she saw where we were., \"I am starving!\"\n\n\"Me too!\" Lexi said, the formal protocol of the early drive had lapsed into a more normal form of communication, to my relief.\n\nLexi unbuckled and moaned as she moved along the back seat, the plug reminding her, and she looked ashed, \"I mean, Thank you Master, for thinking of this one's need.\"\n\nI chuckled, \"I think we should relax the protocol while in public,\" I said.\n\nLexi smiled warmly, then ground her ass into the seat before rising, \"That's fine Master, but I'll be constantly reminded of you, sitting in those narrow booths.\"\n\nCarmen laughed and shook her head, slipping out of the car and we all sat and ate a full meal. We talked and laughed, like a group of normal friends. Well, if normal friends shared blissful stares of sexual contentment as they groped each other under the table. We ate a voracious meal, and tipped extravagantly, before heading back out to the car and the short drive to the dealership.\n\nCarmen pretty much knew what she wanted. A large class-C motorhome, that was more the size of a bus. It really was a converted bus, the salesman told us, the frame and engine were basically the same as the Greyhound cruisers. Everything else was customized and features added that would support up to six people comfortably. It had another generator to provide electricity, a large water tank with baffles (whatever that meant). A full kitchen that Carmen spent a lot of time looking and touching. The appliances were naturally smaller, and the refrigerator ran on propane. \n\nThe living area in the front was made of two large sofas facing each other. There was just enough room to walk between them when in normal mode. When parked, however, the sides of the bus slid out with the aid of small motors, doubling the width of the aisle. Both sofa's made out into queen sized beds leaving the same small aisle when they were fully extended. \n\nThe rear end of the bus housed the master suite. Just past a small restroom for the front passengers, there was a sliding door. Opening it reveals a large space with another queen sized bed arranged in the center. The door was supposed to stay open for visibility while driving, but the salesman added they had started mounting rear-facing cameras and monitors to the driver's area so it could be closed in transit. The room also had loads of storage for clothes and a larger bathroom, with a small one-person shower. \n\nThe salesman gave me a strange look when I asked if there was an option for a two-person shower. I decided to not pursue that line, and he went back to giving us the tour. In the driver's area was comprised of two large captain's chairs, the passenger's side could swivel to face backwards. The console had large swaths of buttons, controls, gauges and dials. I felt like I'd need to go to school to be able to drive it. \n\nThe salesman showed me it was much simpler to drive than I imagined. Many of the controls on the console were operation and status gauges for \"the plant\". He explained that a home on wheels had to have all the amenities that are usually associated with a house: electricity from a portable generator, water from a tank and pumping system, another tank to hold wastewater and septic systems. He showed off a series of four VCR tapes that would walk me through the whole systems involved.\n\n\"That's great,\" I said, \"but if I leave my TV at home, how will I know how to run this thing?\"\n\nThe salesman smiled, and pressed a button, that activated a motor that lifted a rolling door exposing a large television, with a full stereo system and VCR beside it.\n\n\"We've thought of everything, sir,\" he said with the smile of a salesman at the top of his game.\n\nI nodded and thought about sitting down on one of the sofas. The salesman pulled up a folding table from the side, and then placed a folder with the prices, and a list of options beyond the normal package. \n\n\"I'll leave you to think about it,\" he said, \"Just wave for me if you want to talk more.\"\n\nI opened up the folder, and looked and the prices and made a low whistle, \"Wow, this isn't cheap,\" I said, \"Wouldn't it be easier just to use hotels?\"\n\n\"Jeremiah,\" Carmen said, \"Think about how much attention you'd get taking four women into a hotel? I know we did it together, but that was in two cars, and we left in two cars.\"\n\nI nodded, \"That's a fair point, but this seems like a lot of money for a one time use deal.\"\n\n\"One time use?\" Carmen asked incredulously, \"C'mere Papi...\"\n\nShe pulled me up, and taking my hand guided me to the read of the cabin, into the large master suite. She slid along the side of the bed, and then ran her hand up the seam between the wooden panels. About every two feet there was a recessed D-ring, she pulled one out and pulled hard on it. Nothing happened, the D-ring held fast.\n\n\"Hard points,\" Carmen said, \"I know you're new to this BDSM thing but these are made for bearing weight, tying off rope, clipping cuffs too.\"\n\nShe waved her hand around the space, and the little almost invisible attachment points lined the sides, and even the across the ceiling. \n\n\"They make them so people can tie down cargo,\" Carmen said sitting down, \"they just happen to have a dual purpose for securing wayward sluts.\"\n\nI nodded, and began to understand. This could be a mobile little love-shack for the five of us. The northwest had plenty of secluded campgrounds, old lumber trails, places where even a bus this big could practically disappear. \n\nCarmen saw me thinking, then slid up to me, slipping her hands along my side, and lifting to grip the backs of my shoulders, pressing her breasts to my chest, \"Besides, in the woods, no one can hear the screams...\"\n\nI chuckled and looked down at her warm eyes. Lexi was busy touring the small space and yanking on the D-rings, her little body really yanking hard to see if they'd budge. They didn't, and she scanned the room with a smile. I could feel her thoughts warm as she thought of kinky things I would do to her.\n\n\"That's all fine, but Alyssa and Kelly aren't in the BDSM,\" I said, \"Don't you think it's a bit rude to assume they'd be okay with our play.\"\n\nI was somewhat shocked at myself, having become enthralled with the thoughts of BDSM in only two small scenes. Carmen smiled and shrugged, \"When they are with us, we go a bit more vanilla. But the options here are limitless.\"\n\nI nodded and went back to the front, sitting down and scanning the price list, and trying to understand the added options. Carmen settled beside me and pointed to things, asking for other add-ons to help make living a mobile lifestyle a bit easier. Lexi sat opposite of us, her eyes big scanning the room, as her bottom shifted against the firm cushions. She wasn't paying attention, and her demeanor made it feel like this decision was outside of her privileges.\n\n\"What do you think, Lexi?\" I asked.\n\n\"Master,\" she said quietly, \"This one trusts your decision.\"\n\n\"I need more than that, little one,\" I said again prompting her to speak her mind.\n\n\"I love it, even just as a way to travel,\" she explained quietly, \"but the ... added features Carmen pointed out...\" she faded off, and I could hear the purr in her mind, \"my ropes, Carmen's flogger... so many ... options.\"\n\nI smiled and checked the boxes for all the things Carmen wanted, \"Go and wave down that salesman little one,\" I said as I looked at the payment options, \"Tell him I need to call my bank.\"\n\nA few hours and a stack of paperwork later, the deal was settled. The customizations Carmen wanted would take a couple of days, and then they would deliver the coach to our home address.\n\n\"Perfect,\" I said, shaking the salesman's hand, as we walked back to the car.\n\n\"We need to do more shopping, I presume,\" I said turning to Carmen. \n\n\"Oh yes, Papi,\" she smiled, and slipped her arm around my waist, \"Camping supplies, and... other things.\"\n\nI just shook my head and let her guide me to several other stops on the way home. Sexually sated, and comfortable with the two lovely fascinating and sexy woman that trusted me so deeply, I enjoyed just spending the day with them. We filled Aly's car with gear for the RV, and even stopped at an adult bookstore along a less populated stretch of highway, and bought some more things that Carmen said we needed.\n\nAuthor's Note: Thank you for reading, commenting and voting. This chapter was interesting, and ended up a bit longer than intended. The characters are sometimes difficult to control, and the plots they discover are fascinating to explore. Thanks to mgenette again for reading, editing and encouraging."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "ffm",
        "anal",
        "bdsm",
        "dominance",
        "submission"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-08"
}