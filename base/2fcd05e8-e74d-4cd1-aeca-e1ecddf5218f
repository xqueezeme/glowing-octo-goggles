{
    "title": "Play Testers Wanted Pt. 12",
    "pages": [
        "Play Testers Wanted: Pt. 12\n\nFirst, I hope this finds you healthy and happy. This one was another fun piece to write and flesh out as it went. Feel free to vote, comment, and offer up suggestions. I'll take them into consideration if I can.\n\nEarth 9919: Impossible and Beyond\n\nMist shrouded trees greeted me on the other side. I pulled up and easily rose above them and took in the very earthly scent of cedar, pine, and flowing water. While it had been winter on one side here it was either spring or fall. The evergreens left me guessing but soon that was the least of my concerns. The sky was darkening, and I suppose the sun had already touched the horizon. Speaking of the horizon, a great mountain range dominated the landscape. The mountains had a strange regular shape to them. I gained altitude and headed for the far side of those rolling jutting stony protrusions. I felt my mind playing tricks as I swore, I was flying over a sloping hip, a very womanly hip as of some reclined beauty. But that wasn't possible! That hip was thousands of feet high. The minutes ticked by as I swung over the ridge and beyond. \n\n\"By Anackire,\" I cursed for below me the hip led southerly to a range in the shape of a dancer's legs. I banked and headed north. Miles of hip dipped to a torso shaped ridge capped with two great ornamental breasts miles across. The great feminine body was twisted with hip touching the ground, yet her breasts aimed at the sky. Her slender neck two miles long and led to a cyclopean head carved into the face of god like perfection. Was this the body of an earth goddess? Was this her corpse or did she yet live? Dare I reach out and attempt to touch a living mind?\n\n\"Coward!\" I cried and let the thermals hold me aloft above her parted lips. I drove my consciousness down into the rock.\n\n'Goddess? Dost thou yet live?' I sent unsure and fearful. I was an insect to be swatted out of the sky if I proved an annoyance. \n\nOne of her arms ran along her torso and under her breasts. The other ran above her head away from her body into the woods and vanished under the canopy of treetops. Had this range of mountains somehow been carved with unearthly skill? Who so ancient a people could have fashioned such a fantastical adoration of the female form? The task was beyond reason. Miles upon miles of cold dark stone formed for worship and praise.\n\n'I must continue to seek out understanding.' I sent before I turned west and left the impossible figure behind me. Had Steph ever seen anything like this? Twenty miles or more from the top of her head to the bottom of her feet. Was she Gaia sleeping and this the dawn of this world's history? Anything was possible. The lightning blast leapt from a series of rolling hills. It missed me by scant feet and prepared I raised a shield around me so that when the second attack came it deflected harmlessly away. I looked down and spied the group of six creatures, one of them was lowering the lightning gun. I winced when I heard their harsh piping voices. I was prepared when the collective of six minds attempted to pierce my thoughts.\n\n'Rude!' I sent in response.\n\n'Sentient!' One of them excitedly exclaimed mentally.\n\n'Alien,' Another growled menacingly.\n\n'Vote.' Yet another of the collective urged. \n\nAs they voted I circled above them. They spent the next few hours debating what to do with me. While I minded them invading my thoughts, they didn't fear me listening in on their surface thoughts. They were torn between destroying me outright, dissecting me, or attempting to communicate with me. I examined them and recognized them as one of the Oldest Races of Earth. In one of Steph's books of lore they were called the Elder Things. The main portion of their body was about seven feet in height supported by a series of five powerful segmented legs that ended in what the author had called a pseudo foot. A series of multicolored tubes crowned their head and was the source of their piping voices, whistling breathing, and occasional shrill swallowing sound. On either side of the torso were bat like membranous wings that when they were stretched out, as they were now, spread out a full fifteen feet from tip to tip. Located about mid torso and spaced equally around their 'equator' were five articulated arms that ended in six manipulator tentacles. The arms ended in thin dexterous tips that hinted at the ability of these beings to produce fine craftsmanship or delicate surgeries. \n\nIf the stories were true, they were extremely gifted genetic engineers and much of Earth's life was because of their manipulations. I shifted into their form but instead of the dull brown blending to steely greys I chose a more monochromatic color scheme with a black torso lightening only as far as gunmetal grey. It took time to get used to their sensory organs and the massive brains hidden within their tough leathery torsos. Much like a cephalopod they had multiple brains scattered over their form giving them a resilience few other creatures I had encountered. The lightning gun was once more aimed in my direction.\n\n'Shoggoth?' One of them questioned. \n\nThe mental image in its head was terrifying. A shifting mass of pseudo flesh that could adopt any function or shape they might require. Their organic technology was embodied in these servitors. They erected their homes, their other machinery, and fought for them as foot soldiers in their ongoing war against the Many Angled Ones. I am not being disrespectful as the entire species are capable of reproduction on their own, so the sense of gender is alien to them.\n\n'Shifter.' I sent since their spoken language was beyond me. 'Shall I take on a less distasteful form?'\n\n'Our form is hardly distasteful as you say. Why are you here?' It asked while the other five observed and listened in.\n\n'My world is threatened by the Many Angled Ones. I seek any weakness they might possess.' I replied and that sent them into a mental frenzy. As they buzzed around like angry hornets I looked around, sniffed the air, and discovered a host of other senses these primordial beings possessed. Was it the fact that fucked a Skrull, or the mask, or the training from the Ia' Kandri that gave me access to these amazing experiences? How do you put into words sensory input that are so alien to anything that I have yet encountered? Their visual organs allow them to taste the entire electromagnetic spectrum. The infrared portion had a lemony flavor while x-rays had a slight bitter aftertaste to them. \n\n'We will help you, if you aid us.' The speaker for the Elder Things announced tearing me away from the chocolatey goodness that was the ultraviolet end of things.\n\n'I never knew that sight could be so delicious,' I replied almost drunkenly. 'What can I do for you?'\n\n'A rogue Shoggoth is creating chaos at one of our mana processing plants. We need you to set things right.' It explained. 'Here are the coordinates for the installation. Good luck, you are going to need it.'\n\nThey spread their wings and flew off. I pulled down my HUD and found I was suffering from sensory overload and advised to change to a less complicated shape. I reverted to the eagle form, checked my current location and then where I was meant to go. I was able to pin the new location to my HUD and follow it as I flew. I wondered what mana processing was. I launched into the air and pondered why I never did this earlier. This isn't as fast as teleportation but much more fun. I reached the plant before midnight. The structure was a series of cyclopean blocks carved from black basalt and polished to a mirror like surface. A deep ruddy glow came from the heart of the complex. \n\nI circled over that portion and discovered that it was in fact an open volcanic rift. At first, I thought I was seeing waves of heat distortion but in fact there were creatures crawling in and out of the vent. I watched fascinated as the Shoggoth leaving the rift moved to a portion of the plant and spat out ingots of bright blue glowing material. That must be raw mana I was seeing. Was it a power source? Did they use it for magic, technology, or did they practice technomancy like the Svartalfar? A shrill piping filled the air as and the Shoggoth seemed to lose concentration and fell into the rift or spat out incomplete ingots that shone with a ruddy light before falling apart and darkening. The piper was a massive Shoggoth, thrice the size of his fellows.\n\n\"Fuck me, no wonder they didn't want to deal with this thing.\" I cursed. How the hell was I supposed to tame it? These things crawl in and out of superheated fissures all day every day. Energy based attacks were going to be useless that leaves my Darksaber out of the mix. Its plastic nature and shapeshifting made it nigh on invulnerable to conventional weapons. The only thing that might work is mind altering spells or abilities. I wonder if Kiai-Jutsu might work. It seemed like a good first attempt. Let's see if I can calm it, or perhaps put it to sleep. If I took on the form of an Elder Thing, it might improve my chances of success. I shifted back to their form and glided down and landed far enough away to be able to teleport if I had to.\n\n\"Calm yourself big fella,\" I crooned using the gentlest voice I could. \"Everyone calm down and go back to work.\"\n\nThe others did just that. They never hesitated to comply with my orders. However, this big motherfucker had a mind of its own. He fought me tooth and nail. Something was going on and the shininess of his flesh dimmed as he changed. He shifted to a standing position as his outline took on a definite humanoid form. By that I meant a rudimentary head, torso, arms and legs took shape. His height tripled and when it popped vestigial wings, an octopoid head, groping talons, and facial tentacles I knew I was going to have to change up my attack plan. It roared sending the other Shoggoth into a panic. It was like a cattle stampede as they raced from the complex into the untouched wilds beyond.\n\n\"Fucking fuckety fuck,\" I cursed. \"Just had to do that huh.\" I let my gut guide my actions and in that way my form became that of a dragon. The change happened without conscious thought. Before I knew it, I was eye to eye with the rogue. He struck without hesitating. His claws raked my armored chest and the pain snapped me out of inaction. \"Yeah... fuck you too!!\" I raged and returned the favor. My talons slashed its face, but the damn thing just shifted and healed instantly. We exchanged strikes as a storm formed above us. I reached out for a mind and found nothing, well nothing that passed for true sentience. It was a malfunctioning machine that wasn't quite self-aware, but I felt I was on the cusp of it. A particularly painful strike got a knee jerk reaction from me.\n\n\"Eat this motherfucker!\" I screamed as an earth-shattering blast of lightning struck the area and forced the Shoggoth into its gelatinous form. \"Ha! Did that hurt!! How... about... this???\" The world went white as I rained down blast after blast of star hot plasma. I felt a rage that consumed me utterly. In the end the only thing left was a bubbling puddle of goo. I fried the remains as the six Elder Things teleported into view. I felt their arrival before I turned to face them. \"It is dead, I can summon the others back if you wish.\"\n\n\"You can,\" one of the replied in perfect English. \"Do so, I find that intriguing.\"\n\nI sang softly and soothed the herd before urging them back to work. They rolled back into the rift and soon the cycle was restored. I levitated one of the ingots for inspection. While they discussed about what they had just witnessed I examined the mana alloy. It was a brilliant mix of a metal and a power source. A weapon forged from this would likely have a keen razor-sharp force field around it allowing it to slice through just about anything and deliver a cauterizing effect while it slays its target. The possibilities just got more interesting from there.\n\n\"We will show you how to seal away the Many Angled Ones,\" they agreed to keep their word and teach me. \"Keep it as a token of our appreciation.\"\n\n\"Your people are truly amazing,\" I said.\n\n\"We know.\" He replied casually. \"Follow us... once you've shrunk down.\"\n\n'Trophy Earned: Shoggoth Wrangler.'\n\nI shifted from the draconic form I had taken. One of them touched a small device attached to a cunningly concealed harness it was wearing. A portal opened and all of us traveled to the citadel of the Elder Things. It was monstrously huge and there they lived in their millions. I was informed that they owed their peace and prosperity to a flexible caste system. Infants of their race were tested across the board to find the best niche for them to serve society. If they tired or wished to improve their status they could apply to an academy and train for a new position. Over the millions of years their race had flourished they found a certain amount of leniency was a good thing.\n\nI got the full tour of the key locations of the city and even got to view the foundry and other places where the mana ingots were processed and turned into tools, weapons, and even works of art. Their own technology rivaled if not surpassed the Dark Elves in a few critical schools of thought. I won't lie, I was finding ways of not just using the ingot in my grasp but how to somehow make my own. Their workstations far outstripped anything I had ever seen. It made the one on my ship look primitive. They could create flexible panels of mana alloy that were one molecule thick and produced an amazing amount of energy. \n\nIt was this development that allowed them to manufacture their signature lightning guns that were so effective against the Many Angled One's minions. They were just the basics in the Elder Thing's arsenal against the world changing threats offered by these extradimensional beings. I spent hours watching and touching the thoughts of engineers, craftsman, and artisans to see how they manipulated the unique alloy. The one secret they kept was its manufacturing. I didn't blame them. If I had something like this, I'd lock it away in a vault at the core of a planet. I was pondering how to apply this to the Darksaber to improve its damage and versatility. I could potentially double if not triple its damage, vary blade length with a thought, and who knows what other nasty surprises I could come up with. \n\nOnce my tour was completed, they handed me a spell tome that instructed me how to fashion something called an Elder Sign. It was one-part mystical seal and one-part crucifix. It could hold them at bay and if placed in direct contact with said bad guy it would drive them back to their home dimension or if a containment area is prepared, seal them away there. My first thought when I handled the pyramid shaped device was that it was akin to a holocron, I was wrong. They directed me to a reading room. Dozens of immobile Elder Things stood transfixed as they held the open devices that gave off a shimmering light and a variety of pleasant scents.\n\n\"Here,\" the librarian said showing me how to open it. \"Hold it close in this position and breathe normally.\" I stood within a specialized spell circle, held the device against my chest under my chin. I triggered the switch and opened the tome. I breathed in through my nose and out my mouth. The scent was faint at first but grew stronger quickly. The sculpted hallucination hit my brain and replaced everything else my conscious mind was processing. \n\n\"Attend.\" The Elder Thing said in flawless English. \"First, you must gather the following ingredients...\" The tome had everything needed to not just create an Elder Sign but a containment cell as well. I watched and tried to memorize the vast quantity of information being given to me. \"Stop! Have you never experienced a living tome before?\"\n\n\"No. This is my first.\" I explained and the instructor made what sounded to me like a rude piping noise as he reverted to his native language.\n\n\"My apologies for such foul language.\" He said.\n\n\"That is okay, I don't speak your language.\" I replied.\n\n\"Unacceptable! How am I to convey the subtle nuances of this art to you. Let us begin anew. I am designated Third Dawn of the Seventh Moon.\"\n\n\"My friends call me Ghost, or Ghost Fire if you prefer a more official form.\" I said.\n\n\"I do not understand. What is a friend?\" He fired back and I knew he was serious.\n\n\"It is a social designation for someone that I trust and whose companionship I enjoy.\" I stated attempting to pass on so alien a concept to him.\n\n\"I do not understand. That would imply there are members of your species that you do not socialize with or as you put it enjoy their company.\" He said with a clear tone of shock in his voice. \"Are you not mentally bonded at birth?\"\n\n\"I am unusual for my people. We do not typically possess telepathy and our spoken language is limited.\" I replied and that sent him into a piping frenzy.\n\n\"A misspoken word... chaos... how do you keep from conflict amongst yourselves?\" He asked and saw the answer in my thoughts. \"War amidst your own... unforgivable.\"\n\n\"We are limited by our evolution. So many flagrant issues with biology alone.\" I said and he tied into my surface images of using the mouth for eating, drinking, breathing, and speaking.\n\n\"I agree. Your species is very inefficient.\" He stated. \"Let us begin our first language lesson.\"\n\nSo, it began. I thought Svartalfar sword combat was difficult. It didn't begin to touch the complexity of thought and mechanism attached to the language of the Elder Things. I spent more and more time in their form to simply be able to produce the sounds required. It was Ossus all over again. I lost track of time but eventually I mastered enough rudimentary skill to 'read' the tome and others they deemed me worthy of possessing. Creating an Elder Sign was a long and arduous process. It would have to be to lock away an ancient god. Then the impossible thought entered my mind, could rune magic be used to lock up said ancient god? A rune item or weapon with a dark entity in it, how cool would that be. What could possibly go wrong? \n\nI closed the book and examined the spell circle I was standing in. I memorized it so that I could dissect it later. No need I discovered, one of the other books possessed precise directions on creating it and its varied uses. Amongst the primary purposes was long term study since its magics kept the being inside of it fed and all bodily processes maintained. They really took education to the next level. I thanked the librarian and that took nearly an hour to explain the concept of that particular human cultural interaction. I was offered two ingots of mana to perform a lecture on basic human culture. They were so intrigued by the alien concepts they wanted to know about specific city states and individual cultures. In the end I earned a whopping twenty ingots explaining our culture as varied as it was to them. For their entire existence there had been one people, one culture, and a single society. They had a field day listening to the nature of human laws and how wide and inconsistent they were.\n\n\"You mean to tell me that rules in one location can differ from another that is across an imaginary boundary?\" One of them asked.\n\n\"Yes, but there are typically governmental laws that outweigh local ones, usually.\" I replied.\n\n\"How do you avoid anarchy and utter chaos?\" Another asked.\n\n\"Patience and understanding usually win out.\" I said. \"They have a phrase we are only human. Which means, we are flawed but we do our best.\"\n\n\"Logical for such a limited species,\" one of them commented and the group agreed. \n\n\"Humans value freedom over logic,\" I added.\n\nIn the end they paid, quite well I might add, for a complete rundown of religious, cultural, and even spiritual traditions. I spent weeks there going over a huge variety of subjects that they found interesting and I was happy to go into whatever level of detail I was able to. They were a methodical race and dissected every mote of data I provided them. I'd give a lecture one day and they would return with a hundred or more questions the next. One thing the Elder Things didn't possess and found almost blasphemous was the concept of artificial intelligence. The closest thing they had were the Shoggoths. But even then, they were designed as a slave race and barely registered on the sentience meter. There were the occasional rogues but that didn't seem to bother them. They simply destroyed the offending batch and tweaked the next generation to improve their control over it.",
        "They were brutally efficient to safeguard their society. My analysis of them was simple, they were a race of thinkers, and they created a servitor race to do all the heavy lifting quite literally. The multi ton stone slabs used in their buildings was done with an ease that was amazing to watch. The Shoggoth would attack slabs of rocks, digest them, and reconfigure the material inside of themselves to produce whatever was required. They were walking breathing processing plants. They made it possible to create the mana ingots. They took whatever was in those fissures and refined it into the glowing bars. \n\nI thought I might be able to wait but since I was given access to one of their workstations, I took some of the ingots I had earned and rebuilt the guts to my lightsaber. From the power assembly to the blade emitters I fashioned them all. I had an audience while I worked, and I felt their confusion. I requested privacy and that demanded a one hour talk about the necessity for physical isolation. They didn't understand it, but they accepted it. I meditated and cleared my thoughts as I brought out the Darksaber and levitated it. I was trembling on the inside as I disassembled it and replaced the old guts with the new. Once the case was sealed, I was on my feet and igniting the black blade and I felt a new smoothness to the action between activation and the blade's appearance.\n\n\"Sweet!\" I giggled and gave it a few tentative swings and couldn't wait to see it in action. I had barely switched it off and placed it on my hip when one of the Elder Things approached.\n\n\"Friend Ghost,\" one of them addressed me. \"While you have enlightened us with your lectures of human society and culture some of us created a parting gift for you since that appears in line with your race.\"\n\n\"Thank you,\" I replied touched that these logic driven entities would go so far as to make me something. \"How many of you were involved?\" I asked knowing that the more that joined a project the greater the gift.\n\n\"Merely half a million, we knew you wouldn't be staying long.\" He replied. \"Follow me to the nearest reading room. It is a book.\" He stated and I figured that was the case. Though half a million to fashion a book seemed like a lot to me. The Elder Things were like living computers and that many working together must have been one hell of a topic. \"We shall share the reading, step into the larger circle.\"\n\nWe faced each other and we both held the pyramid close. It was an intimate level of proximity and when the book was opened our minds were joined inside the smoke. He stood next to me and narrated as the scene unfolded.\n\n\"It was what your species define as pity that moved us. Your woefully primitive form demanded a solution. I am sure you will agree you seem like an intelligent individual.\" He said and with a gesture an image of me appeared. Why was I naked? At first, I didn't notice any obvious changes. I walked over to my doppelganger and spied the external alterations. The gill like slits along the side of his neck as well as though that ran just below his collar bone. \"Amphibious nature is a must given the amount of water on your world. The other slits are for processing oxygen to replace the ill placed trachea. The teeth have been improved and if damaged replace themselves the same way sharks do. Limited taste buds have been augmented as well.\"\n\n\"He smells different.\" I commented.\n\n\"While your species pheromones were adequate, we have improved them so that males and females of the species when aroused are more attractive. We were also able to isolate your shapeshifting organs and tweaked them a little. Yours are quite advanced and I daresay impressive.\" He complimented me and that was a first. \"Here is a display of internal alterations. I'll let you examine them and ask questions as you see fit.\"\n\nI fought to show my shock, but my emotional reaction was too strong to hide. It was the same as that I had seen in real life. I had Traci compare the two. They were identical. Once more the game and real life collided. This felt insane. To see if the game had just pulled up my files or not, I peeled the layers away by the time they were applied. Were they the same as what had happened to me? They weren't. There were gaps and leaps creating six notable and separate jumps in the process. If I didn't know better, I'd say that this poor schmuck had been cloned multiple times. That is the only thing that made sense for the gaps and drastic changes between two transition points. As far as an artificial evolutionary process it made perfect sense. \n\n\"What is that sensation?\" The Elder Thing asked. \"What is... fear?\"\n\n\"When humans encounter a situation and they are unsure it will often trigger what is called the fight, flight, or freeze response.\"\n\n\"A trinary decision-making process, not bad. Why does this gift trigger your fear response?\" He asked.\n\n\"Humans have an emotional guide that we call empathy. It allows us to put ourselves in another's situation and react. In this fellows case, if he is the same individual from start to finish, it would be terrifying having one's consciousness transferred multiple times into different bodies.\" I said fighting down the sense of panic. My hearts drummed in my chest and willed my breathing to remain normal. I did drive my fingers into the palms of my hands until I bled.\n\n\"Interesting. We did not foresee this. Do all humans have empathy?\" He asked and I shook my head. \"Equally interesting, so how are these... what do you call them?\"\n\n\"Either psychopaths or sociopaths,\" I replied.\n\n\"I take it your moral code is determined by a guiding sense of empathy. Yes?\" He continued. \"So, one of these sociopaths would cross lines to achieve their ends. I wonder at what end of your emotional evolution they lie. A warlike species would benefit from sociopaths. A path of peace not so much. I understand your fear. I would not like to find my mind unceremoniously jostled about without my permission. Perhaps this was a callous gift.\"\n\n\"I appreciate all the time and effort all of you put in.\" I told him. \"I will utilize these improvements at every opportunity.\" That seemed to make the time they put into it worth the effort.\n\nWe closed the book and exited the shared experience. Since the Elder Things weren't an emotionally motivated race I was dismissed with the gift and my time with them came to an end. I was ready to depart and get this haunting encounter behind me. I left the Elder Things and headed back to the portal that got me here. I shifted to eagle form and took wing. I soared upward and given the coordinates I had a two-day flight from the citadel of the Elder Things to the portal. It was a leisurely flight for the first day. I enjoyed flying and just relaxing after playing cultural professor for that strange race and the lingering possibility that game and real life were colliding. I rested in a huge oak tree and meditated near the top of its limbs. The landscape was pristine, and the only sign of civilization was the citadel and the mana fissure. At first light I shifted and took back to the air. I had just found a great altitude with a tail wind to help speed me along when I saw it or perhaps it would be more accurate to say that I found a lack of something.\n\n\"No fucking way!!\" I gasped as I realized the mountain range in the form of the reclined woman was gone. The dark earth that had been beneath the mountains was now revealed as a twenty-mile gash in the ground. I never would have noticed it as anything but a natural formation unless I knew better. \"How? Where?\" I gasped as I tried to imagine a twenty-mile tall stone woman wandering around the area. It wasn't like she could hide. One moment I was soaring through the sky the next I was encased in a sphere of rock. \n\n\"Got you!\" A booming female voice declared.\n\n\"Hello?\" I called out.\n\n\"Mine!\" She said ignoring me.\n\n\"Hello!\" I yelled again. I looked around and discovered that the sphere was in fact cupped hands. The segments were clear portions of massive stony digits. I sat down and waited. If this was a goddess my best course of action was patience. I closed my eyes and felt a potent flow of magic as she teleported somewhere. Where were we now? The sphere vanished and I sat in a huge vaulted chamber of gorgeous white and silver marble. Sunlight streamed through large round windows. The floor I was seated upon was a scarlet granite that contrasted the walls. It was an open space without decoration, throne, or furniture of any kind. \n\n\"You woke me up.\" The same voice that had boomed 'got you' and 'mine' was now soft, sensual, and sultry. \"I am Gaia and you are Ghost Fire.\" I looked around but she wasn't manifesting yet. \"First things first,\" she continued as my HUD activated on its own and a dagger, I had fashioned during my time with the Elder Things from their Mana alloy appeared and hovered to the center of the chamber. She was humming as the dagger flared to life surrounded by a cerulean aura. The humming got louder, and runes of varying size appeared on the surface of the dagger's blade, cross guard, and pommel. She was creating a rune weapon, but why? \"Almost done... what do you think?\" The disembodied voice asked as the dagger flew at me for my inspection.\n\n\"Gorgeous,\" I commented seeing the blend of larger runes along the flat of the blade, tiny runes along the cutting edge, and midsized ones for the rest of the weapon. \"Why are you doing this?\"\n\n\"To save you, your soul is poisoned, and I would rescue you.\" She said as some unseen force plucked me bodily off the floor and held me aloft. I saw the blazing dagger and thought she meant to plunge the dagger into me. \"Hush, I mean you no harm. Watch. See. This may hurt a little.\" I screamed as every pore in my body felt like it was on fire. \"I am extracting the poison from you.\" The voice declared as first a mist and then a cloud formed around me. The cloud moved on its own and snarled in a bestial fashion. What in the hell is that?! The pain lessened and the cloud thickened into a swirling shadowy shape. The dagger's point reoriented and flew into the cloud. The swirling took on a more determined nature as it fought the power of the runes and failed as it was meant to. The irresistible force won out and the cloud vanished.\n\n\"What happened I feel... lighter.\" I admitted.\n\n\"Good, I lifted your curse and placed it in the dagger, forever.\" She said and only then did she manifest a physical form. \"No need to thank me.\" Gaia said as she gestured, and my feet settled onto the stone floor. She was tall, not exceptionally so but for a human she was at least six feet, thin and willowy with verdant energy spilling from her eyes. If I were to describe her it would be elfin, as in old world Sidhe. Her features were inhumanly sharp and her eyes so narrow as to make one think she was perpetually squinting. Gaia might as well have been nude with the transparent garments she was clad in were so flimsy as to be fashioned of air instead of silk.\n\n\"Wait, you mean...\" I yanked down my HUD and found my vampirism gone. I felt diminished. I fought down the anger at being cured without so much as being asked. The rune dagger hung in the air and spun along its axis caught up in a shaft of sunlight.\n\n\"The corruption ran deep and threatened to overwhelm you.\" She said. \"I am sorry to not have asked your permission. I can feel your shock. Forgive me.\"\n\n\"I... I won't be able to call storms anymore.\" I stated and she raised a needle thin eyebrow. \"I can?\"\n\n\"I will help you.\" Gaia urged. \"It is the least I can do.\"\n\nThe vaulted dome was simply there one moment and gone the next. Sunlight filled the entire chamber and she raised her hands. I felt her power reach upward and clouds form and darken. The rain fell and we were both soaked to the bone. I shivered for the first time in I don't know when. I was warm to the touch again. I looked at a pool of water and saw my reflection. I was mortal again. I missed seeing my image. Time to see if I could call down the lightning. I raised my arm and strived to tap into the storm she had called.\n\n\"Shit, I am trying too hard,\" I said, and she nodded. I closed my eyes and it was like using old muscles that had atrophied some. I felt it but it was at a distance. I had to be patient. The connection slowly grew but grew it did. I felt her behind me. She placed her hands on my shoulders.\n\n\"Your meridians are choked off from being cursed for so long, may I cleanse them for you?\" She asked her lips by my ear. I couldn't fight the urge to moan. \"MMMM, I'll take that as a yes. Remove your armor, it works better with skin contact.\" I was naked half a second later. \"Eager too.\" She purred. She moved her hands so that one was on the back of my neck cupping where skull and neck joined. Her other hand was at the base of my spine just above my ass cheeks. \"This might tingle a bit.\" I felt power trickle in from her upper hand. It hit my brain like a cinnamon butterfly that sparkled and tasted like mom's cream pie. I gasped and fought to keep my focus on the storm, I failed. The energy was forced down once it filled my skull completely. It slunk down my neck and hit my nervous system.\n\n\"So good,\" I whimpered as both erections were at full mast.\n\n\"It gets better,\" Gaia promised. \"All those nasty blocks need to go. So much psychic sludge.\" She stated and I felt the resistance inside of me slowly break down and give way to her expert manipulations. I began sweating out some seriously nasty funk which stank upon contact with the air. Soon the energy moved uninhibited and the heavy rain washed the crap from my skin. The circuit between us was complete and running smoothly. The last of the crud was gone and she ratcheted up the amount of power she was pumping into me. My skin glowed and then began to crackle to the point I felt the energy behind my eyes. \n\n\"Try again,\" she whispered. I reached up and the connection was instantaneous. It built up faster than before. The thunder boomed at a deafening level and shook the chamber. I called down a blast and it hit one of the puddles scattering it and sending the lightning all over the chamber. \"Good. Now, it is time to push your shifting to its next level. This is a give and take situation. I took much, now I will give back as much. You touched on an advanced level when you took on smoke form.\"\n\n\"I don't understand.\" I said as she let go and I turned to face her.\n\n\"I will show you how to take on an elemental form. Let us begin with smoke and go from there. Try.\" She urged in a lover's voice.\n\nLike weather manipulation I found it difficult at first to change. I think perhaps since I had the mental block of 'you are no longer a vampire' in my head. Instead I went with my instincts. I imagined a foe firing a massive attack at me and let my body do the work. Instead of an inky darkness I took on the shape of a thick grey fog. I slid across the floor and got the feel of the shape before I returned to Gaia.\n\n\"Excellent,\" she praised me. \"Now, take on the aspect of lightning. That is the next element you are familiar with.\"\n\nLightning wasn't a static form. It hit and then vanished. The only shape I could wrap my head around was ball lightning. I focused on a sphere shape and pushed. The world seemed to slow down as my perception shifted in nature. Teleportation came easy as Tempest's gift kicked in. Instead of drifting I bamfed around it. Next was fire and that was easier than lightning. Water was easy and sloshing and crashing against solid walls was fun. Air was like mist but 'thinner' at first until I took on a tornadic vortex form. The element of shadow was an old friend and I embraced it without effort. Light and dark were supremely difficult to master but master I did. There were others to try but she was eager for me to move on to other things.\n\nI reverted to my natural shape and faced the goddess. In her hands the Darksaber, my primary weapon. How the hell had she removed it from my inventory? The same way she took the mana dagger, she was a goddess. I watched as the weapon levitated, broke up into its core components, and she examined it. She touched the stones and flinched. \n\n\"Such pressures and pain,\" she whispered and that was when I remembered that it was believed that Kaiburr crystals were alive on some level. \"Be at ease.\" She continued and wrapped a hand around either gem. I saw light well up from the fist holding the Ghost Fire Diamond and darkness leak out from the hand holding the Star of Ebony Flame. \"Better.\" Gaia purred. I leaned close and saw runic characters on the surface of each stone. \"This weapon is your life, yes?\"\n\n\"Yes. It is my heart.\" I replied without hesitation and Gaia smiled.\n\n\"Now for the last,\" She said as she clutched the Ghost Fire Diamond in her hand and it blazed sun bright in her grasp. Next, she held up her other hand and the Star of Ebony Flame roared to life and something strange happened. The rune dagger she had crafted began to slow down and fade until it vanished completely. \"Perfect, if I do say so myself.\" She giggled like a schoolgirl. \"One last little tweak and all done.\" She passed her hands over the components and casing. She gestured and the weapon reassembled itself. \"Show me.\"\n\nShe tossed me the weapon and I looked over the new and improved Darksaber. While the shape of the casing was unchanged the elegant runic pattern was far more detailed and intricate. I ignited the dark blade and it silently came into existence. I began with form one and alternated between light and dark when I shifted from one combat discipline to another. I was surprised when I first changed from form one to form two. When I activated the Ghost Fire side the blade was invisible as well as silent. There was no distortion or hint of its being there. Gaia explained as I continued through all eight forms.\n\n\"Your gems were slightly flawed and out of sync. I corrected. I understand perfection as you never will.\" She said and I knew she was right. No matter how much I practiced I would never be flawless. I accepted that and with the last strike I deactivated the weapon and bowed. \"Excellent. Now, one final test before you leave.\" She stated and then spoke those impossible words. \"Mimic me.\" Mentally I faltered and balked. \"Take your time,\" she continued as her clothes faded and she hovered naked above the floor of the cavern. I walked around her my feet splashing lightly in the cold puddles of water. I looked upon her perfect avatar and knew I'd fail but I had to try.\n\n\"Okay, here I go.\" I said as I levitated up until I was at her height. I shifted and felt my cells strive to achieve a flawless state. The residual energy she had given me when she purged the vampiric taint kindled and aided me.\n\n\"Interesting,\" she said. \"Is that how you perceive me?\" I knew I had failed her test the moment I heard those words. \"Clever Ghost Fire, you realized your limitations so quickly. Now, watch and mirror everything your perceive. Keep up as long as you can.\"\n\nShe changed and became an elderly woman. I copied her easily. Now she was a young boy holding a balloon. I used an illusion to create the balloon. One form blended into the next. Some were heart-breakingly gorgeous while others were hideous, and still others were plain and nondescript. We left the human form behind and she showed me dozens, hundreds, no thousands of races and states of being. The longer it went on the stranger and alien the shapes became. I began to falter, and she slowed to let me have time to analyze the form before attempting it. We finally reached a point where my mind began to shut down just looking at her.\n\n\"Stop. You lasted far longer than I expected. Rest. Sleep. Tomorrow you leave.\" Gaia said her voice a soothing balm. She cradled me in her arms and there I slept. I dreamt. Formlessness wasn't just a word but a state of being I achieved. I was given a vision of the universe before the first true stars ignited. I saw what the first Dark Elves experienced. There was a certain beauty to the swirling dark energy and entire planets formed of dark matter. It was upon these worlds that the Svartalfar were born and forged their ancient empire. They were born into darkness and it was the loss of that beauty that drove beings like Malekith to strive to revert the universe back to a primordial form. It was true that there were still dark energy nebulae and solar systems governed by dark energy stars with dark matter worlds orbiting them. If any dark elves still lived, they would have flocked to these places.",
        "I awoke with the dawn. Gaia stood transfixed watching the rising sun. I was naked and summoned my armor and gear. My symbiote armor manifested as a pool of shadow on the floor. I stepped into it and it crawled up my body and formed like a second skin.\n\n\"Did you miss me?\" Traci asked.\n\n\"You know I did.\" I replied as I checked out her modified HUD and built in weapons. \"I can see this as an ongoing situation.\" In response she displayed a bright red pop up. Player characters cannot be vampires and remain PC's. Well that explains everything. It was fun while it lasted. I bid Gaia goodbye and headed for the exit.\n\n\"Where are you going?\" Gaia asked as the layout changed, and I found myself walking back to her instead of the exit. \"I haven't explained your mission.\"\n\n\"Mission goddess?\" I replied.\n\n\"Let me explain.\" She replied with a laugh. \"Take out the Darksaber.\" She ordered and I did as she asked. I felt a chill as my fingers wrapped around the weapon. \"Tell me what you feel.\"\n\n\"Cold.\" I replied as I felt its power my former power. I touched the dark stone psychically and swirling at its heart was that vampiric hunger. It was like a caged beast that I knew intimately well. The runes she had placed on the stone and the casing were its prison. It was as much a part of me as my hand or heart. \"It's me, the dark side of me that is.\"\n\n\"It is your vampiric nature given a physical shape.\" She said and then continued. \"Your mission is to destroy a key demonic fortress.\"\n\n\"There is more to this.\" I said and she laughed.\n\n\"The demons are followers of Chthon.\" Gaia explained and let that name sink in. \"Yes. The creator of vampire kind, now you see why it was critical to remove it and place it in a functional form.\"\n\n\"When you say destroy the fortress,\" I said, and her head tilted to the side. \"Ah, so leave no stone unturned.\"\n\n\"No stone atop another, if you please.\" She stated quite seriously.\n\n\"As you wish.\" I replied and the quest activated. Instead of my HUD dropping down a hard-light construct appeared around my left forearm. It listed my active quests and the order of attention. In this case the 'Cult of Chthon' was in the number one position and just below it the 'House of Tohl'. \n\n\"Be careful with that,\" Gaia indicated, and I agreed. I went through the options menu and changed the display language from English to Shiv\u00e4isith, the tongue of the dark elves. \"That isn't what I meant.\"\n\n\"I don't understand.\" I said and waited for an explanation.\n\n\"It is still maturing. When it wakes up, you'll know.\" Her only reply and my thought was my armor. Angela had described it as immature. I didn't have to fight its influence the way MJ did. Well, not yet anyway, perhaps I'd have to change armors when it happened. \"Time to go.\"\n\nThe hard-light device had a built-in compass. I was able to activate it in my field of view. I changed to my eagle shape and took to the air. I felt the chill of the morning breeze across my wings. I had forgotten what if felt like to experience the variety of temperatures. The sun warmed my wings as I aimed south towards the lair of demons loyal to the dark god Chthon. I wonder if the Order had a hand in creating that character. I'd find out eventually. As I flew, I tried to work out a basic attack strategy. I had time to play out quite a few what ifs as the pristine land beneath me changed. The lush valleys, rolling hills, and forests vanished. Now there was dried cracked earth, blasted heath, and a growing nightmarish landscape. The massive fortress appeared on the horizon. It rose nearly quarter a mile high and reminded me of the Barad Dur of Middle Earth sans the Eye of Sauron. I found a spot to land and observe the area around the tower and its base. I was haunted by Gaia's words, 'leave no stone atop another'.\n\nI had a small mountain to dismantle. I could have scouted out the area but if I was spotted, I had an entire tower to contend with. Instead, I summoned a minor earth elemental to spy out the land for me. I told it what to look for and sent it out. I had hours on my hands before it would return. My plan was simple, if no major magic was used to defy the laws of physics, I was going to summon the biggest lava elemental I could under the tower and topple it from below. If there were magical defenses well, I'd attack those anyway I could. Since I was alone, I picked treasures to offer to the elemental as payment for its service.\n\nMy scout didn't return until nearly midnight. It popped up in front of me and frowned.\n\n\"There are no wards to protect the base master,\" it said. \"About the base, it is weightless.\"\n\n\"How in the hell is that even possible?!\" I cursed looking at the immense tower structure.\n\n\"It was built from the top down.\" The elemental explained. \"It took time to discover this. I couldn't get too close to it. It is heavily guarded. However, there are six key nodes that maintain the weightless nature of the tower. If you can damage them, you might be able to destroy the tower.\"\n\n\"Might. Well, it is a course of action.\" I agreed and a soft ding indicated that my quest had changed. \"Here, thank you for your diligent service.\" I said offering a chunk of unprocessed Vorpalite. \"Is that acceptable?\"\n\n\"Oh yes master! Your generosity won't be forgotten.\" It took the gem and molded back into the ground.\n\n\"Well fuck,\" I cursed looking at the tower. \"No easy solution today. Time to fuck some shit up.\"\n\nI sat cross legged looking at the tower and pondered how to destroy it. I found myself ranting aloud and dismissing one plan after another.\n\n\"Lightning storm... no. Earthquake... no. Lava elemental... it might be able to take out the dungeon but would be taken out quickly after that. Nah. I need to take out the damn nodes to collapse the tower that much is clear. Laying siege is foolhardy. Acid rain... hmm... may or may not depending upon any magical defenses. If it fails, they will be on guard and impossible to sneak in after that. Sneaking in is the only way getting shit done. I can use the high explosive grenades and trigger them once they are placed on or near the nodes. That will work, now, what shape do I use to get in. Scary or sexy? If I take on a powerful shape, I'll draw unwanted attention. Sexy might just get me through the front door and then I can vanish and get shit done. Okay... I...\"\n\n\"Purr.\" \n\n\"Cat?! You scared the shit out of me!\" I gasped feeling the Fire Cat rubbing against my leg. \"How did you...?\" I asked as I checked my HUD. Fire Cat was listed as a companion, not a pet. That was weird. Oh well. \"So, you want to help me take out the big nasty tower.\" The look on the cat's expressive face was one of 'really, you are talking to me like that'. \"Let's pick a face.\" \n\n\"Mow?\" The Fire Cat meowed as if to say, 'go cute'.\n\n\"Hmm I see,\" I said and summoned a sheet of water and smoothed it until its surface was mirror like. \"Okay. Something non-threatening so I can slip in easily.\" I tried a traditional succubus form. I glanced at the cat and it hissed. \"Too sexy... alright... perhaps an imp. They are small and cute-ish.\" I shifted to a small furry beastie of almost cartoonish design. The cat rolled onto its back and laughed or what I assumed was a laugh. \"Small but effective in combat.\" I began to tweak it. I grew to three feet in height, created armored plates, and needle-sharp spikes in critical locations. \"Eh?\" The cat purred and I continued with small but spooky alterations. I changed my sclera to black with flickering blue flames in the place of irises. The final touch was wisps of shadowy smoke coming from my joints and gaps in my armor plating.\n\nI dismissed the water and it dropped to the ground and was quickly soaked up by the dry barren soil. Thirsty? I didn't feel like walking the entire way and decided to make an impressive appearance. My only weapon the Svartalfar dagger. If someone scanned me, they'd pick up on its dark aura. Instead of simply teleporting I folded space and stepped into view of the front gate. The cat followed me, and I turned behind me and spoke to a nonexistent master.\n\n\"Thank you master,\" I said for the benefit of my audience.\n\n\"Get it done,\" the dark voice said as I used Kaia-Jutsu and threw my voice and alter it.\n\n\"Yes master,\" I replied, and the portal snapped shut. \n\nI walked up to the gate where two tall battle-hardened demons stood guard. One was roughly humanoid, if barely. It stood twelve feet tall, it had four arms, and its lower torso was serpentine. Its scarred armor hinted at battles survived and hard won. The other was roughly insectoid with multiple spider legs, a bulky central torso, and three slender necks and at the end orb shaped heads with gleaming red multifaceted eyes. The heavy exoskeleton replaced its need for armor.\n\n\"What the fuck?!\" The insectoid demon laughed.\n\n\"I think your girlfriend's abortion just showed up,\" the armored demon laughed.\n\n\"Fuck off shorty or I'll beat your ass and sell you for scraps!\" The spider demon snapped.\n\n\"Bring it on lard ass,\" I fired back drawing the dark elf dagger.\n\n\"Shit, he's got a damned rune weapon!\" The armored demon exclaimed. \"I can feel it from here.\"\n\n\"Put that down you little shit or I'll take that away from you and shove it up your...\" \n\nHe never finished that thought. I hurled the dagger and it struck with the same force as a freight train at full speed. It ripped through his exoskeleton with ease, vaporized internal organs, and killed the demon instantly. It returned to my grip and I looked at the other demonic guard.\n\n\"Go in,\" he said as he gestured, and the gates opened wide for me.\n\n\"Thanks.\" I replied as I strode into the tower. So much for a quiet posture. I focused on my surroundings as I passed under the first portcullis and whoever made this place wanted to impress and intimidate any invaders. The rallying point was also covered on three sides with murder holes from above. A second portcullis was raised allowing me to enter the main chamber on the ground floor. There were guards watching me as I sought out the closest door to the depths of the tower. With a little searching I found the central core of the tower and saw the first of the nodes. I was expecting something small and well protected instead it was a huge shimmering crystal out in the open.\n\nMy first thoughts were to find the nodes, wreck them, teleport out, and then kill anything that crept out. It was a good plan until I saw it, the very wizard looking demon walked down the spiral staircase. I melded with the shadows as it passed and called out to the demons carrying the corpse of the spider demon I had slain.\n\n\"What happened?\" It asked with a noticeably hollow voice. Was it intangible beneath the ornate mask, runic robes, gloves, and what appeared to be dragon hide boots? I want. This guy is so getting backstabbed so I can add his outfit to my stuff.\n\n\"A short little fucker wrecked him with a rune dagger!\" The serpentine demon explained.\n\n\"Rune dagger... hmm... where is this individual now?\" The high ranked demon asked. I assumed he was ranked because of how much deference it was getting. \"Well?\"\n\n\"He's in the tower... somewhere.\" The serpent thing said flinching.\n\n\"Somewhere?\" The robed demon replied clearly unhappy. He moved so fast I barely tracked him. He latched onto the serpent and a flare of dark magic later an illusion of me was displayed. Did he tap into the other's memory for this? Probably. Time to change. I adopted a succubus form and decided to tromp around weaponless and in scantily clad silk armor. I walked up the spiral steps until I was even with the massive rune stone. It was about the height of a human torso and about as wide. I looked up hoping to see the next five, no such luck, only one more hung in the air about thirty feet up.\n\n\"Hmm. Gorgeous.\" I muttered.\n\n\"You are telling me,\" growled a burly troll-ish brute. \"I don't remember seeing you around here.\"\n\n\"The boss brought me in,\" I lied, and he just shrugged and backed off. I turned back to the hovering stone and pondered where I could attach the high explosive where it wouldn't be seen until it was too late. \n\n\"Beautiful, isn't it?\" A hollow voice asked from behind me.\n\n\"Me or it?\" I asked in my best sensual voice.\n\n\"Yes,\" the robed demon declared before summoning an impressive rune covered staff slash penis metaphor. Who was this guy? \n\n\"My, what a big staff you have,\" I said as I trapped the top of his staff between thumb and index finger. I made a slow stroking gesture and stared into the eyes of the mask.\n\n\"Ha!\" He gasped and I flinched when I felt a buildup of power from the staff.\n\n\"Fuck!\" A panicked voice screamed from above. I looked and saw two injured guys in battered armor and bleeding profusely. \"How could you miss?!\"\n\n\"He dodged at the last second... aw fuck it's the Seneschal!!\" The guy in the back howled in dismay. The masked demon hesitated and watched them panic. I hit the pair with a blast of scarlet lightning killing them instantly.\n\n\"You dare?!\" The seneschal snapped at me furious that I stole his kill.\n\n\"You hesitated,\" I said coolly. \"You forfeited your chance to kill them.\"\n\n\"I was savoring their terror. You ruined the moment. You spoiled the kill.\" He fumed. \"But uh...\" he stalled as I summoned a wooden bucket filled with water. \"MMM?\" He gasped as I slowly raised the bucket over my head and smiled as I dumped it over my body. I shivered as the silk clung and turned transparent. \"Aw damn... how can I stay angry with you?\" He stated as I stuck out my lower lip pouting the best I could manage. \"... you were correct. It was a clean kill. I'll let you take the prize, this time.\" \n\nI stepped off into open space and levitated down to the corpses. They had been thrown off the staircase and fallen to the bottom of the shaft some hundred feet or so. I found the bottom four nodes on my way down. The charred and broken bodies lay in a growing puddle of blood. I searched the corpses and discovered they were in fact PC's. This quest had taken me out of the single player portion of the game and into a multiplayer zone of the Disney storyline. I was unable to remove unique personal items but the pair was well stocked with rare building materials, a minor rune book which had led them to the tower, and a shit ton of silver ammunition for a pair of modified needlers that instead of firing crystal shards at ballistic speeds launched the silver spikes. Clever.\n\nIt was time to explore, and since I was in the dungeon, I could work my way up. A new scent caught my attention over the smell of blood. It was sex. I listened and there was a lot of fucking going on. I cloaked my presence and found the demonic breeding pit. It made a party at Studio 54 look pale by comparison. The most disturbing part was the utter lack of human shapes. It was like a furry party on steroids. Well not just fur but scales, wings, horns, pincers, and a whole menagerie of organs and orifices. I won't lie. It was like watching a blend of H.R. Geiger of Alien fame and Clive Barker creator of Hellraiser collaborating. The entire floor was writhing bodies and a host of voices raised in pleasure and pain. Time to go.\n\nI retreated to the steps and each floor was another layer of hell made manifest. I dug into my stash of high explosive grenades I had made for my Katria persona. They could be attached to any surface and remotely detonated. I placed the explosives on the runes as I slowly made my way up the tower. Search parties were still active looking for the imp shape I had taken when I first arrived. The packs of demons ignored me as I climbed the steps to the pinnacle. I could have spent weeks exploring every inch of the place, but I felt a need to complete this before more player characters arrived and spoiled things for me. I placed the last high explosive grenade when I heard the voice from the top of the tower. I recognized the power behind it and stopped in my tracks.\n\n\"No fucking way,\" I cursed softly. The speaker was using Kaia-Jutsu. Had Nightwind taught another player the art? I needed to find out. The nodes were armed and primed for destruction. Security only got more intense as I neared the top of the tower. The guards were easily influenced using the selfsame Kaia-Jutsu to slip past them. I got within one floor of the master of the tower when I encountered the implacable Seneschal again.\n\n\"You again. The Master hasn't summoned you.\" He threatened in his soulless voice.\n\n\"Aw, please,\" I said invoking the compulsion of my voice and hitting a psychic roadblock.\n\n\"Interesting,\" he said as I sensed a return to his rage after my attempt to influence him failed. \n\n\"Return below or face my wrath.\"\n\nI chose conflict. I armed one of the silver needlers for my right hand and Death Kiss in my left. His staff was in his hands and charging. He hissed when I drew the rune sword from its sheath, and she purred. I thumbed the three-shot burst option on the needler and waited for him to initiate his attack. I slipped into defense mode and when the Seneschal leveled his blast at me, I tapped into Kyanna's technique of not just reflecting the energy back but adding to it. It was enough to stagger him and let me close to melee range. Rune blade met rune staff and colossal energies arched from both weapons.\n\n\"I hunger!\" Death Kiss moaned.\n\n\"Feed me,\" roared the staff known as Soulcrusher.\n\nThe duel began in earnest. We both knew what would happen if the other's weapon struck a fatal blow. He was a gifted combatant, but his focus was on the mystic arts while mine was mastering sword craft in nine different schools. I began to wear him down. His defense began to waver and to compensate he teleported away and erected a spherical forcefield. The Seneschal summoned four demonic brutes to aid him as his health regenerated. I thumbed the needler to full auto and began mowing down the newly summoned demons.\n\n\"Die motherfuckers!!\" I screamed as the slender silver shards sheered muscle, bone, and brain matter. The demons roared in agony as the silver burned them from the inside out. The first wave of demons fell dead to the floor and the Seneschal fired off blasts of raw chaos energy at me through his protective shield. After six blasts he summoned the second batch of demons. This cycle repeated itself as I slowly knocked down his health in a minor boss fight. Then I ran out of ammunition. I took a double handed grip on Death Kiss and began taking out the minor demons that way. I was about to slay the last demon when he summoned the next batch. It only got worse from there. Before I knew it, I was fighting eight demons and he was about to call up the next wave. I stumbled and they pounced. I was knocked down until I was on my hands and knees.\n\n'Duh-duh-duh-Dum! Duh-duh-duh-Dum! Duh-duh-duh-Dum!' My hearts pounded in my chest.\n\nI no longer felt the blows falling upon me. Something inside of me tore. The psychic rip felt like a flood of ice water hitting my guts and then spread to my entire being. The primal scream shook the immediate area and slew the demons and tossed the Seneschal away and smashed him against the far wall.\n\n\"We are Ghost Fire!\" We screamed as the larval symbiote shed its old form and reached its adult stage and merged with me. A flood of power coursed through us as Death Kiss spun in the air as I reached out and it flew to our hand and we went on the offensive. A corona of near invisible flame surrounded the rune sword as we smashed through his shield in a single strike. He defended with his own rune weapon and the two indestructible objects clashed.\n\n\"We have reached an impasse,\" the Seneschal laughed. \"Surrender and I might...\"\n\nWe roared and sang the seven lethal notes of the Death Song. The Seneschal was at point blank range. To our surprise instead of killing him, since he was a greater demon, his animating life force was sent packing to Hell. We looted his body and we got a better look at the runic robes he was wearing. The robes were crafted of the finest draconic silk. Dragon silk is taken from the beast's wing membranes, muscle sinew, and other tough resilient materials. They are soaked until they break down and then blended, cleaned, purified, and then spun into silk. The material is incredibly strong, light weight, and is perfect for mages or assassins. Perfect for us to use as a disguise. The runes that were stitched into the robes were mainly protective and done with inhuman precision.",
        "\"Nice.\" We muttered. We picked up the rune staff and it zapped the shit out of us once and then grew cold in our grasp. \"Must still be bound to the Seneschal or a black item.\" We looked at its description and sure enough it was listed as a black alignment item. We couldn't use it. We could sell it though. Off to the inventory with you we thought. We gave the robe and rest of the uniform a try and liked the look. We approached the door to the main boss' chamber and paused. Just in case, we thought as we touched our wrist interface and set a five-minute countdown for the explosives, we had placed on the nodes earlier. We donned the Seneschal's uniform and took on a male demonic aspect to pass for the greater demon. We knocked.\n\n\"Enter.\" A voice like living death bid us to open the door. We reached for the knob when it opened on its own. We levitated into the massive singular chamber that took up the pinnacle of the tower. The door was in fact a portal to the boss' room. We hovered to a spot marked by the rune for home. We gazed upon the aspect of the dark god Chthon a mass of swirling darkness and inky tentacles. It was one-part demon one-part eldritch horror. We flinched when we saw that the fire cat, our fire cat, lounged on the dark god's lap. It was the only stable place on the cosmic horror. \"What was that commotion?\"\n\n\"Just an intruder,\" we said letting the Seneschal's voice disguise our own.\n\n\"I see. Where is your staff of office?\" Chthon asked a hint of distrust in his voice.\n\n\"We didn't wish to offend your sacred space by carrying a weapon,\" we said and bowed our head.\n\n\"I respect that. Do you like my little visitor? She somehow wandered in without you noticing.\" The dark god laughed. \"Clever little thing, isn't she?\"\n\n\"Yes.\" We replied wondering ourselves how the little shit slipped away and ended up here. \n\n\"Was it my imagination or did I hear a practitioner of the Voice beyond my door?\" He asked and we flinched. \"Well?\"\n\n\"You are not deceived,\" we replied being careful with our words.\n\n\"What happened to that practitioner?\" Chthon asked casually stroking the cat.\n\n\"He is no longer a threat.\" We replied honestly. We were no match for a god and so not a threat.\n\n\"I believe you, but you didn't answer my question,\" he continued with a sly grin on what passed for his face. \"Perhaps a little history. It was I that created the art of Kaia-Jutsu. It was I that taught the current master and he only taught two students. I happened to hear the voice of one of those outside my door.\" He gestured and his divine power washed over us. \"Ghost Fire, long time no see.\" He said and I recognized the voice of my former master Nightwind. \"Dear me, where oh where did you get that?\"\n\n\"What?\" We asked as we looked down to find our disguise gone and all but naked except for an ornate loincloth covering our naughty bits. We saw what he was looking at, my left arm. Wisps of black smoke seeped from the forearm and hand. \"I thought it was a dream. Whoa wait, that other voice is gone.\"\n\n\"I have blended both symbiotes into one.\" Chthon/Nightwind declared. \"The Left Hand of Darkness will provide your armor and tactical needs for you now. You can still manifest your armor, but it will be sourced from the Hand.\"\n\n\"Thank you, that was a bit overwhelming.\" I said as my one-minute warning chimed.\n\n\"Ha, time is running out,\" Left chimed in. \"We should go boss.\" I turned my left-hand palm up and there in the middle of my left hand was a crude humanoid face. \"Hello boss.\"\n\n\"No time for introductions, I guess this cuts our reunion short.\" I said as the fire cat launched off the dark god's lap, raced across the floor, leapt and landed on my shoulder. She purred as she rubbed her cheek against mine.\n\n\"Before you leave, I need to do something. I hereby name you the new Seneschal of the Dark Tower of Chthon. Take up thy arms and depart in friendship Ghost Fire.\" He stated solemnly as he performed his last act as Master of the Dark Tower.\n\nI teleported away and still nearly naked activated my new robes of office. I stood outside of the tower as the counter was displayed in my field of vision. Twenty seconds and counting. I liked the fact that the rune staff was now a grey item. While I wouldn't use it, it did make a nice show piece for my tower. Ten seconds and counting. I waited and watched the tower intently as the last scant seconds passed. The ground shook as the nodes went up simultaneously and the entire structure imploded in a rather impressive display.\n\n\"Sweet!\" Left chuckled.\n\nThe ruins of the tower shook and Chthon rose from those massive stone blocks uninjured. He shifted to his Nightwind aspect and approached me. He conjured a table reminiscent of something from Alice in Wonderland. We sat, sipped coffee and chatted.\n\n\"So, you have grown strong since we last laid eyes on one another. Tell me about this dream.\" He said clearly concerned about Left and how I had acquired it.\n\n\"I'll be honest, my memory and dreams have been a bit jumbled lately.\" I began and he gestured that I should continue. \"Okay. I had a dream that I was in a lab back in the real world. They lopped off my left arm and attached something out a frozen sarcophagus. A little one that was just big enough for Left. They called it an Atlantean artifact. But that had to be an in-game thing, right?\"\n\n\"I have heard whispers about Left as you call him or her. Left was in life a Hyperborean sorcerer of great power. Facing his or her mortal death they poured their power into that portion of their body to make it effectively immortal.\" Nightwind said smiling slightly. \"Maybe dream and game have blended. I've had my own hiccups with memory and game play. Perhaps game files drifted in via your A.I. interface. Just tossing out ideas. It's not like that could happen in real life is it?\" He rambled for a bit and it all made sense. Dream and game blended made a hell of a lot more sense than Left being a real-life event. \"Perhaps now is a good time to tweak Left to your needs.\"\n\n\"A good idea,\" I responded as I pulled up the screen for the symbiote. \"It is classified as a follower, that is odd. I need to prove a worthy host it seems before I can get the higher functions. All I can do now is select gender and appearance.\" I locked in a grey personality and looked at the options. I preferred Traci and selected her as the voice and personality since Surfer wasn't even listed. Was that something the game had changed? The game blended the two seamlessly and the facial characteristics could be altered to fit my preferences. In my case I chose a more fun-loving cherub face with crinkly eyes when she smiled. The basics of Left was as Nightwind had said simply an item to deploy armor and weapons. I could preset favored weapons and change between melee and missile effortlessly.\n\n\"Now it makes sense!\" I cried out suddenly remembering Gaia's words, be careful with that. \"She had meant Left!\"\n\n\"She?\" Nightwind perked up.\n\n\"I ran into Gaia,\" I said, and he grinned. \"She sent me here.\"\n\n\"Of course, she did,\" He laughed playfully.\n\n\"Ooh, I can tie shapes into Left later. That'll be interesting. How have you been doing?\" I asked turning my full attention to Nightwind.\n\n\"I... I am surviving.\" He said and I felt he was hiding something serious, but I didn't push. \"What do you know about the original play testers?\"\n\n\"Nothing.\" I replied as the fire cat attacked a biscuit with great gusto.\n\n\"Nick wanted to see the long-term effects of deep dive technology on astronauts. So, he chose testers with little to lose for permanent inclusion into the game.\" He said and let me think it over. \n\n\"Terminal illness?\" I asked and he nodded. \"I'm sorry.\"\n\n\"Eh, life is like that.\" He said with a weak smile. \"Nick gave me a chance to dodge the bullet on all of that pain and weakness. It is just a matter of time before my body gives out. After the other games didn't pan out, I migrated to the mainstream ones and I just want to say of all the players I have trained you are my star pupil.\"\n\n\"Since I have you here, should I train others in Kaia-Jutsu?\" I asked. \"It feels like it might be too much for certain players. I trust you and if you say it is okay then I have a few I might ask and see if they want to devote themselves to it.\" I gushed.\n\n\"It is yours. I gave it to you, and it is your burden to carry alone or pass on.\" He said and then started laughing. \"Was that fortune cookie enough for you?\" He continued to chuckle.\n\n\"Yeah, thanks, I might just use it later on,\" I said and then my HUD dinged. \"What the...?\"\n\n\"And so, it begins,\" Nightwind stated with a knowing smile. \"I designed this place, just so you know. Good luck Ghost...\" he said as he began fading from sight leaving his eyes for last to disappear. \"...and give Nick my best.\"\n\nHe was gone before I could tell him, Nick was dead. I set up my quick menu with my favorite weapons and armor. I selected the runic robes to see how they worked in a fight and had the Darksaber as my primary weapon. It was time to give it a full workout after its recent upgrade. I saved my choices to lock them in and then looked at my new side quest.\n\n'Raid the Ruins: Capture the six minor chests and bonus if you claim the three Boss chests.'\n\n\"Nine chests and all mine!\" I declared.\n\n'Trophy earned: Chthon's Favor. Title Earned: Seneschal of the Tower. Trophy Earned: Left Hand of Darkness Awakens! Home Upgrade: Black Tower. Costume Added: Runic Stealth Suit.'\n\nI flipped through the cosmetic changes since the big upgrade and I found the Runic Stealth Suit. It was a modified version of the symbiote suit that Reed had given me. Instead of just the simple interconnected hexagonal pattern this one had runes inside of those hexagons. The color scheme ran the gambit from white and silver to black and silver or red. I went with black and silver. I added the shoulder cannon, mask, and the gloves that Thor gave me to round out the best of my equipment. The gloves matched the suit, as did the plasma caster, but the Osirian Mask took on a look that reminded me of Dormammu's Flames of Regency with black flames and shimmering blue eyes. \n\n\"Bitchin'!\" I said as I teleported to the edge of the pit and looked down. The broken staircase formed a series of platforms that hung precariously over the abyss. I would climb down to not alert any enemies awaiting me. I activated my camouflage and slipped over the edge. Handholds were limited and forced me to take a specific path. That made me leery of an ambush. Let's see how well this place is designed. I soon discovered that the few handholds there were didn't last long and forced me to move quickly and not scan for enemies. I reached the first portion of staircase and it was teetering over the edge. The first chest was on the far side. I tried to use telekinesis, but it failed. I needed to physically open it to get the loot. I manually activated my web shooters for this environment. I fired off a line to a spot above and beyond the far side of the staircase. I would swing over and while hanging upside-down lower myself to the chest and claim it. What could possibly go wrong?\n\nI swung over and as planned hung inverted. Since I lacked a Spidey sense, I reached out with other senses including the Force. It was while I was vulnerable that I found that once again I was cut off from any mystical powers. Fuck you Nightwind! I settled with the normal ones. I sniffed the air and caught the scent of some profound musky body odor. I peered into the darkness, but nothing revealed itself. I wasn't the only one that was hidden. I slowly lowered myself until I was nearly within reach of the first chest. I heard the soft whisper of inhuman voices. It didn't last long but it was a just wait until he touches the chest to pounce message.\n\n'Just a few more inches!' I thought. 'That is what she said.' I fought the urge to laugh when I saw 'it'. I had to be at the right angle to see the thing's armored exoskeleton. It was a clever form of camouflage and completely non-magical. Even at this oblique angle it was still difficult to see the thing's outline completely. It was arachnid. I slid slowly and finally my fingers touched the chest. A bar appeared in my HUD and slowly filled indicating I was removing the contents of the chest using subterfuge. The bar filled and the chest was emptied. One down and eight to go. I flipped around and stood atop the chest and took aim with the Darksaber. I activated the blade and let it piece the spider's carapace. The strike killed it instantly, but its death didn't go unnoticed. A ripple passed through the others of its kind. I noticed a surge of energy and my fatigue vanished since I was at full health.\n\nI looted the abyssal spider and found its carapace particularly useful. I deactivated my weapon and looked around for my next target. I glanced straight up, and there firmly woven within the very core of the abyssal spider's web was one of the Boss chests. Damn it... how to get you? I was going to have to cut it out and there was no way of getting to it without alerting the entire nest. I guess I'll just single them out until I was forced to take on what was left. \n\nThe next minor chest was only thirty feet away and tucked into a small niche on a thin shelf of rock. If I tried to climb over there, there is no way that shelf would hold the combined weight of that chest and me. Fuck that, I fired off a web and it struck true on the side of the chest. I pulled in the slack and gave it a strong tug. The chest came loose, and I caught it and waited. That sound I had heard earlier returned and much louder. Had I confused them? Had I angered them? Just holding the chest counted as looting it. I got the coins and minor crafting supplies. I was about to set the chest down when I caught the hint of furtive movement in front of me, and then to the sides. I was surrounded. It was only then that I realized that while I was invisible the chest was not. Stupid mistake and likely to get me killed. I tossed the empty chest into the abyss and drew the Darksaber. I waited to see if they would settle or get more aggressive.\n\n\"Fuck!\" I cursed as they swarmed me. The black blade snapped silently into existence. I met them head on. The blade sliced through their natural armor with ease. The more I killed the more that attacked. It was like a living set of falling dominos. The corpses piled up and after the first wave ended, I did a quick loot and looked for a more defensible position. There wasn't one. This was designed to be a killing ground. The corpses tumbled into the abyss to make room for the second wave. \"How many of you fuckers are there?\"\n\nThe second wave was longer than the first. Kill, loot, rinse, and repeat. After the fourth wave I was facing exhaustion. I fired a strand straight up and through the larger web. I climbed the line until I was just below the boss chest. I cut through so I could reach out and claim its contents. The bar showed up, but it took three times as long for it to fill. While that happened, I was attacked from above and below. The Darksaber spun and slashed one handed careful not to cut the strand holding me. What really pissed me off is that they used my own line to climb up at me from below. I cut it and sent three of the fuckers down to the stone pillar beneath. \n\n'Ding!' The Boss chest's contents were my own.\n\nI snagged two other minor chests before I heard the loud scrabbling sound coming out of the abyss. Was it a minor boss or the mother of all spiders? I wasn't about to wait and find out. Ignoring the thing's approach, I snagged the second boss chest which was hidden behind a devious outcropping of fallen debris. I found the rest of the small chests, but the last boss chest eluded me. It must be down there, in the abyss. I finished looting everything and looked down. I cursed silently as the tank sized spider settled onto the center spire of stone. It was pale and covered in a spiked exoskeleton that shimmered as the agitated creature began to do something.\n\n\"What are you up to?\" I whispered as the thing lifted its ass end and launched luminescent webbing behind it in a rough fan shape with the wide portion attached to the far wall. The strands stuck to the side of the cavern before the spider anchored them to that stone pillar. It rotated its body and it was clear what it was up to. It was going to lay out webbing filling the entire cavern below. A new acrid smell filled the air and I saw wisps of green smoke coming off the first strands of webbing. My HUD alerted me that I was being poisoned. I cursed as I watched my stamina and life bars turned green and slowly drop. I couldn't wait or the poison would take me out without the thing lifting a mandible. I fired off a line to the roof of the cavern. Darksaber in hand I swung into battle.\n\nThe energy blade left a long smoking gash across the top of the monster. My health and stamina jumped up and returned to normal for a moment before the poison struck out again. It was clear, I had to attack and maintain it lest it win out. I swung down and landed on the thing's back. It wasn't idle it let out a shrill cry. A new hoard responded from below. Their body color ranged from bone white to transparent. The larger of her children were the pale ones, the smaller ones you could see their internal organs and muscles. They ranged in size from the size of an average hound to that of a hippo. While the larger ones moved slower and would arrive later than the swarm of little ones, they were heavily armored and of a different variety than those that could conceal themselves.\n\nI strove to maintain my balance as the mother spider moved and tilted her body to shake me off while the smaller of her children swarmed up her legs and came at me from all directions. The larger bypassed their mother and scrambled up the walls and set lines above and began to lower themselves towards me. I was besieged on all sides and before they reached me, I began the first song in my list of battle songs. I brought the Darksaber up as the first pounding notes filled my consciousness. My blade rose, fell, spun, twirled, and danced through the air. It pierced, it sliced, limbs were lopped off, smoking holes were left in carcasses, and they fell singularly and in pairs as I activated the second blade with just a thought. I loved the upgrade.\n\nWhen the opportunity presented itself, I slashed at the mother spider and maintained my stamina and health. Their life preserved my own as the power of the rune dagger now belonged to the Darksaber. It would steal life and blood and perhaps even the very souls or spirits of these foul things. Gaia may have robbed me of my vampirism, but she had given it to the Star of the Ebony Flame. It served me well in this fight. For while the poisoned webs were a constant threat the flow of life from the swarm kept me up and fighting. I became lost in the carnage so when it suddenly stopped, I found myself panting and facing not a massive spider but a woman, a four-armed woman.\n\n\"I am the Weaver of Shadows,\" she said in a sensuous whisper. Her beauty was on par with Gaia's. Was she a full-fledged goddess or just a minor aspect of a greater being? \"You have proved yourself to be worthy of my undivided attention.\" She continued and dismissed the webs with a wave of one of her hands. She was scantily clad in nocturnal silk that hinted at succulent treasures where her garment clung tenaciously to breast, hip, and ass. \"I can feel your lust.\"\n\n\"Well, when you dress like that what do you expect?\" I replied and she laughed.\n\n\"What am I going to do with you little thief?\" She asked as a growing sense of dread replaced my desire to bed her. \"Any suggestions?\"\n\n\"All this talk has given you time to heal up, hasn't it?\" I replied instead. \"This is going to get ugly isn't it?\"\n\n\"It depends, why are you here?\" She said as a smile formed on her perfect pouty lips.",
        "\"Fate sent me,\" I stated, and she wasn't expecting that.\n\n\"Fate.\" She frowned. \"Why is she interfering?\" And my thoughts went directly to Istus, the Colorless goddess. \"Ha! She wants it back does she, well she isn't going to get it!\"\n\n\"Get it, get what?\" I asked as she turned hostile. \n\nHer lovely form vanished in an instant and I was forced to backflip away or be crushed by her gigantic spider form. Her plated exoskeleton looked tougher than ever. As I feared there was no sign of our previous conflict she was once more at full strength. The enticement was just a delay so she could regenerate. Instead of flinging out webbing this time her abdomen glowed with that sickly green illumination. \n\n\"Come on and embrace me Ghost man,\" she purred. I activated both blades and went on the offensive. While she seemed to be able to track the black blade the Ghostfire eluded her detection and bit deep. She in turn lashed out with an area effect poison attack. It was strong enough to stagger me and allow her the chance to close in for a bite. I eluded it if barely and her drool marked my arm where she had tried to bite it off. I activated the plasma projector and locked on as we attacked, dodged, and adjusted our strategies on the fly. She was doing more damage with her poison attack than with actual combat. I was gaining some measure of health back when the black blade struck and fed from her.\n\n\"What great treasure are you hiding?\" I asked as I launched a five hit combo that gave me back a nice chunk of life back. \n\n\"The Loom, and it isn't for the likes of you!\" She shrieked. The next poison blast had a different feel to it. I felt my limbs stiffen as I fought off the effects of a paralytic attack.\n\n\"Nice try,\" I said and discharged the shoulder mounted plasma cannon. She let out cry of pain when the blast took out one of her glaring multifaceted eyes. So, enraged in her pain she launched herself off the pinnacle into the abyss. At first, I thought she was robbing me of victory until I saw that she had anchored a tow line to the side of the pillar. The line vanished into the depths. I was about to cut it when I spied a second line and at the end of that one the last boss chest. The line looked frayed and if I tried pulling it up surely it would fall into the depths. I saw only one way of getting it. I attached the Darksaber to my hip and dove off the pinnacle. I impacted the chest, clutched it tight, and curled into a fetal position. I felt the transition between one realm and another. Had I entered the Loom? I tried and succeeded in forming a sphere-shaped shield around me. I had nearly finished looting the chest when I spied the ground or what passed for ground. \n\nI struck the floor of the Loom. It had a spongey consistency and absorbed my impact quite nicely. I felt an intense burning sensation in my lower abdomen and cried out. I lay immobile and gasping for breath. \n\n\"Damn that hurts!\" I cried through gritted teeth. I couldn't take it any longer. I sent my armor back and lay naked on that unnatural surface. I blinked away the tears and stared at the spot just below my belly button. \"What the hell is that?\" I cursed seeing the stylized crimson hourglass design framed with a black border. Then there she was, the spider queen in all her dark glory. She strode out of the darkness larger and more hideous than before. \"I'm fucked.\" She walked right past me like I wasn't there. Naked and vulnerable I slowly sat up as she and a host of her brood strode towards the center of the Loom. A soft ruddy glow began to pulse from the hourglass. It grew brighter and the color cleaner with each moment. \n\n\"Lay still champion,\" Istus whispered as the nightmare realm of the Loom changed. The hanging cocoons were gone and in their place crystal chandeliers. The killing ground of a spider's lair was now a grand palace of light, shadow, and darkness. \"Better, don't you think?\"\n\n\"Yes goddess,\" I replied. \"What is this mark?\"\n\n\"What does it look like?\" Istus asked in response. \n\n\"The mark of a black widow,\" I said, and she shook her head. I looked again. The black lines of the hourglass were more intricate, and I saw it as an X, no it was a Roman numeral ten. \"Ten?\"\n\n\"Yes, my champion, a ten or more precisely a decade, a Black Decade.\" She crooned happily. \"Now champion, let me show you how to use the Loom and the Webway that is attached to it.\"\n\n\"It feels familiar,\" I said as the last of the pain receded and I got to my feet. \n\n\"As it should, you've encountered the Ia' Kandri and the Great Machine. The Webway is a road where all those shortcuts come in handy. Watch and learn.\" She purred as she added the Loom to her realm and grew stronger from it. She was the goddess of time and space after all. I placed my armor back on and followed her to the heart of the Loom. Istus found the center and stood there taking in its essence. I waited patiently as she made her claim official. \n\n\"What is a Black Decade?\" I asked once she was the Mistress of the Loom.\n\n\"It is a title from an ancient time. It marks you as my champion to others that might challenge you in or around the Webway. It is a great honor to be a member of that elite group. Now, bear witness to the Loom and beyond the Webway.\"\n\nI stood as she opened my mind to the intricacies of this new manner of long-distance travel. She touched the gem the Ia' Kandri had given me and activated it full potential. Instead of having to happen upon the shortcuts I could now teleport directly to them and use them to slip passed guardians and watchdogs like Heimdall of Asgard. I thanked her for her gift and grew restless to catch up with Steph.\n\n'Title Earned: Master of the Black Decade. Bonus Earned: Advanced Plasma Caster Schematic. Bonus Earned: Smart Disc Schematic.'\n\nTroubles and Tribulations:\n\nI stepped out of the Webway. I exited it into the alley next to the Baxter Building the same portal I had first used to reach Ossus and my training with Ventress. A moment later my commlink burst into activity. I adopted my mundane shape and street clothes. I walked down the alley and through its overwhelming stench. What the hell man?! Reaching the street was little better. The street stunk to high heaven. I reached out and found Steph's mind. I psychically knocked and her relief was reassuring. \n\n\"You are safe!\" She sent and a moment later a portal opened, and she rushed out and hugged me.\n\n\"Hey, I got you.\" I said as I held her close. \"What is going on?\"\n\n\"Let me show you,\" as she gestured at the portal altering its destination. \"Hold your breath.\"\n\nThe portal deposited us atop a warehouse looking out over New York Harbor. She was right, the stench was far worse here and its source was clear. The towering piles of garbage lined every inch of land that bordered the water. There must be trillions of tons of filth, plastic, and miscellaneous shit that had been deposited there. I tracked the heaps of trash for miles and as far as I could see.\n\n\"It is everywhere.\" Steph explained. \"It isn't just New York, or just the Eastern Seaboard, it is the entire planet. Wherever there is a coastline there is garbage deposited by some unseen force from the ocean.\"\n\n\"Atlantis... did Namor do this? Can he do something like this?\" I asked.\n\n\"Officially no,\" She said. \"Unofficially he has allies that leant their power to his.\"\n\n\"I take it putting it back isn't an option.\" I said and she just shrugged.\n\n\"Stark is working on a solution,\" Steph explained. \n\n\"Correction!\" Toni said from above us. \"Stark has a solution. Watch and hope.\"\n\nThe crimson suit flew over one block of garbage leaving a trail of glittering fog. The cloud drifted down and covered the filth. Nothing happened at first.\n\n\"Work... damn you!\" Toni cursed as she urged her solution to break down the garbage. \"Yes!\" She whooped. \"Let 'er rip Fury! It works.\"\n\nSix helicarriers appeared on the horizon from the direction of Avenger Tower. They split up and launched waves of aircraft. Those aircraft sprayed the coastline. Toni transmitted her success to the World Council, and they did the heavy lifting. They established the Phoenix Protocol. It took on the immediate problem of removing the existing garbage and initiate long term plans for processing and recycling all future waste. It was something that could no longer be ignored. It reminded me of comics when they first introduced Namor of Atlantis. I wondered if someone at Numenor was not so subtly hinting at ecological issues that needed to be attended to in the real world. Toni landed next to us and with a sweeping gesture that she had this in hand with help from several heavy hitting organizations worldwide.\n\n\"I look on this as a good thing,\" Toni stated quite seriously.\n\n\"You don't have to smell this,\" Steph laughed.\n\n\"Oh yeah, air filtration,\" Toni giggled. \"Where have you been Ghost?\"\n\n\"Looking for a solution to those,\" I said pointing at the six icebergs dominating the harbor.\n\n\"Good, what are they?\" Toni asked and I explained.\n\n\"My best guess is that they are powerful minions of the Many Angled Ones.\" I said and felt Steph shiver. \"Yeah. I fear a major crossover event is on the horizon.\"\n\n\"The box?\" Steph asked.\n\n\"No clue what was inside, but I have the means for making Elder Signs. It should help us keep those things under control I hope.\" I shrugged. \"I can't make guarantees.\"\n\n\"We can only do our best,\" Toni offered, and Steph agreed. \"Speaking of, I have a world to clean up. I'll be in touch.\" She flew off and landed on a nearby helicarrier.\n\n\"I'm starved, how about dinner?\" I asked and Steph offered me her neck. I pulled her into my arms and kissed her neck.\n\n\"You are... warm... oh my god! You are cured!\" She said blinking away tears of joy. The kiss was breathtaking and left us both hungry for more. My stomach rumbled and she laughed. \"Well let's get you fed and then we'll celebrate. Maybe something exotic?\" Steph offered.\n\n\"Did someone mention me?\" Shuri's voice came over my commlink. \n\n\"Princess? We didn't mention you by name.\" I stated and she purred.\n\n\"Ghost man! I must explain to your fine self. You remember that elegant piece of software I wrote to alert me when someone spoke my name. I found out that I was being spoken of but not directly. So, when other specific words are spoken aloud, I will know. They include 'fine', 'ass', 'exotic', 'perfection', and others. My humble self has a personal chef here at the embassy if you so choose to visit me.\" Shuri explained and I fought the urge to laugh. \"Oh, you can bring Strange with you, if you want.\"\n\n\"You are very generous,\" I replied, and Steph glared at me playfully. \"We'll be right over.\"\n\n\"You or me?\" Steph offered.\n\n\"Let me,\" I said as I placed my hand on her shoulder. I was shocked that when I reached out for the Wakandan Embassy I found it instantly. There was no delay between wishing to be there and folding space to my whim. \"Here we are.\"\n\n\"How? I felt something but what was that?\" Steph asked as we approached the front gate of the embassy. \n\n\"I have honed my ability to fold time/space.\" I explained.\n\n\"Whoa,\" she exclaimed, and I saw a glint of childlike joy. \"Life is always full of surprises.\"\n\nThe embassy guards were expecting us. We were escorted to the front door where Shuri waited for us. The princess was dressed in tight jeans, a bright blue silk blouse, and her ever present bracelet. She informed us that her brother was otherwise occupied. For the Black Panther that could be anything from combatting villains or perhaps dealing with the trash situation. Shuri leapt into my arms and hugged me. I hugged her back and she gasped.\n\n\"Ghost man, grabbing my ass like that!\" She cried out in shock.\n\n\"I didn't grab your ass Princess.\" I replied.\n\n\"I know. What the hell is wrong with you?!\" She purred and we all laughed. \"Come on you two, my chef is waiting for us.\"\n\nShe led us to a private dining area. It was small and intimate compared to some of the larger rooms where parties were held for diplomats and politicians. Instead of a single chef there were in fact three chefs at work on our meal. Conversation turned to the spectacular event that had changed the world. One morning every inch of coastline was covered in garbage from the ocean. Shuri, Toni, Susan, and other brilliant minds went on the attack. Wakanda had long ago solved its recycling issues. With this event they decided to share the tech with the rest of the world. It was a part of their ongoing program of sharing their advanced society. \n\n\"Morning...\" T'Challa mumbled as he stumbled into the room wearing a dark loin cloth, a layer of gleaming sweat, and a smile. \"Afternoon... aw hell...\" He mumbled as he smacked his lips together. \"My mouth is dry.\" I handed him a glass of water. \"Thanks.\" He said when I reached out and plucked a long red hair from his shoulder.\n\n\"I see our guest is still here.\" Shuri giggled. \"It would take an Asgardian to wear out the Black Panther.\"\n\n\"Indeed,\" T'Challa agreed. \"She is a force of nature.\" Angela, Thor's sister, strode into the room like a conquering heroine. Like T'Challa she was covered in sweat and other stains I suspected were other bodily fluids. She wore a bed sheet awkwardly wrapped around her curvaceous form.\n\n\"Looking good Angela,\" I remarked, and she laughed.\n\n\"Of course, I do,\" Angela declared cupping her ample tits. \"Ghost, it is good to see you.\"\n\n\"Back off she-devil,\" Shuri snapped. \"I let you bed my brother...\"\n\n\"Let?\" T'Challa murmured. \"Am I a mere man whore to be passed around like a party favor?\"\n\n\"No,\" Shuri said. \"You are far too picky for that.\" She continued and we all chuckled as food was brought out. Conversation died as we ate and munched happily. I didn't miss that the sheet Angela was wearing fell open a bit more as the meal progressed. \"You! Strumpet! Collect yourself, your mountainous tits are spilling out!\"\n\n\"Jealous?\" Angela fired off as she thrust her chest out and the silk sheet was unable to keep her cleavage in check.\n\n\"Not in your wildest dreams,\" Shuri declared. \"My ass trumps your meager breasts.\"\n\n\"You just called them perfect,\" the redhead fired back.\n\n\"Mountainous is hardly perfect,\" the princess snarled.\n\n\"Ask his cock when it is trapped between them poor little princess,\" Angela teased.\n\n\"And you wondered why I wanted to go to a diner.\" Steph finally spoke out.\n\n\"I am going back to bed, thanks for the meal.\" T'Challa escaped before I could utter a single syllable.\n\n\"Well Ghost man,\" Shuri said still standing with hands on her luscious hips. \"You are awful silent.\"\n\n\"Silence is the domain of the wise man,\" I said, and Steph called bullshit. \"If and I am saying if Shuri's ass is geometrically perfect, I would be unkind to perfection. If I were to say that Angela's breasts were shaped in the way only the divine can manifest. I fear the taste of them would haunt me in the afterlife.\"\n\nThey both smiled and then Steph glared at me. \"Have a care you silver tongued devil.\" Steph purred.\n\n\"In that case... if I were to say that no one sucks cock like the Sorceress Supreme. I would be failing her ability to please immensely.\" I tried and she nodded approvingly.\n\n\"So, what good is my ass then?\" Shuri growled. I touched her thoughts and sent her some images. \"Ghost man you pervert you! MMMMM!! Pile on!!\"\n\n\"Stand back!\" Steph cried out and I sensed it too. A portal opened in the ceiling and a naked figure fell through it and crashed into the table with enough force to break it in half. I lifted the shattered wood off the figure. \"Loki?!\" Steph growled and began making arcane gestures.\n\n\"She's unconscious,\" I said as I scooped the Asgardian into my arms. \"Room?\"\n\n\"This way,\" Shuri said clearly pissed off at being interrupted. \"She is covered in frost.\"\n\n\"Yeah, I noticed that,\" I added seeing Loki's nipples, lips, and skin had a decidedly blue tinge to them. \"Think she escaped the realm of the frost giants?\"\n\n\"Jotunheim,\" Angela stated. \"It is possible. I wonder what mischief she was up to this time?\"\n\nI tucked Loki under warm covers and sat by her side. Shuri left for a short period of time and returned with a portable medical kit. She went to work cursing under her breath the entire time. \"Asgardian whore... look at you... spikey blue nipples... she's alive... if she were human, she'd be dead. Her core temperature is only forty degrees Fahrenheit. She must have ice in her veins. You Asgardians are a sturdy lot.\" She said addressing Angela.\n\n\"That is why your brother enjoys my company so much,\" Angela laughed. \"He fucks like an Asgardian.\"\n\n\"Yikes woman,\" Shuri hollered. \"He is my brother so keep the details to yourself.\"\n\n\"If you were one of my people you'd rejoice at his accomplishments. Take Ghost man, he is a heroic slayer of women. Aren't you lover?\"\n\n\"I do okay,\" I laughed.\n\n\"Okay?\" Steph fired back. \"You've fucked every woman in this room.\"\n\n\"Ghost?\" Loki murmured in her sleep.\n\n\"You see,\" Angela stated and pointed. \"Even unconscious she senses his sexual power.\"\n\n\"Her core temp is rising,\" Shuri informed us. \"She's going into heat.\" \n\n\"I have that effect on women,\" I said as I placed my hand on her ass.\n\n\"My core temp is rising now,\" Shuri purred. Loki's eyes snapped open and she screamed. Shuri followed with a string of curses.\n\n\"Calm yourself,\" I ordered using Kaia-Jutsu. Loki and Shuri responded to it. Loki's eyes were still open, but she stopped her ear-splitting cry. Shuri on the other hand had a mild climax and leaned against me. \"What was so important you fell from the ceiling Loki?\"\n\n\"Escape.\" She whispered. \"Had to escape. Had to warn Ghost... you about them.\"\n\n\"Them?\" I asked as Shuri stiffened seeing the expression on Loki's face. \"What did you do Loki?\"\n\n\"She was so damn cute,\" Loki purred. \"Long white hair, like spun platinum, eyes like sapphires, and a body like a succubus.\" She paused as she licked her lips. \"It was just a bit of mischief, that is my domain, and what was the harm.\"\n\n\"What did you do Loki?\" Angela asked this time.\n\n\"We snuck into the vault,\" Loki admitted. \"It was supposed to be just a quick peek. I had no idea how dangerous she was. She took it, she took the Casket of Ancient Winters!!\"\n\n\"No fucking way, first Bobby Drake and now this. This isn't a coincidence.\" I snapped. \"Someone or something is collecting ice magic or abilities. The question is why?\"\n\n\"Could it be connected to the ice burgs?\" Steph asked. \"Maybe the Many Angled Ones are at work?\"\n\n\"I need to fashion at least one Elder Sign then. Sorry ladies, I need to go.\" I informed them.\n\n\"If there is fashioning to be done, you will do it here, in my lab.\" Shuri demanded. \"I will help you if I can.\"\n\n\"We will help him,\" Steph added.\n\n\"I have a book of sorts that will impart what you need to know.\" I stated as I found a patch of laboratory floor to inscribe the reading circle for Steph.\n\n\"What is that? Those appear to be Elder runes. They are, aren't they. You've been busy.\" She said the excitement building. I took out the pyramid 'book' and let her examine it. \"Where did you get this?\"\n\n\"From them, the Elder Things, I spent a few weeks there or was it months. I lost track of time.\" I said and explained how the book worked.\n\n\"You charmed them out of a book?\" She asked and I shook my head.\n\n\"No, I had to take out a rogue Shoggoth and I got the book in payment,\" I explained.\n\n\"Shoggoth?\" Angela asked when conflict was mentioned.\n\n\"An almost indestructible blob of plastic flesh the size of a frost giant.\" I explained as I examined and reexamined the spell circle for flaws.\n\n\"We must go hunting these Shoggoth! They will sing songs of our bravery and skill for generations!\" Angela shouted. \n\n\"First things first,\" I stated as I handed the pyramid to Steph. I showed her how to open it and what to expect. \"Now into the circle and I'll charge it for you.\" The Sorceress Supreme entered the mystic circle and held the book near her chest and hesitated. I sent raw magical energy into the circle's heart rune and set it ablaze.",
        "\"Here goes nothing,\" she whispered nervously before triggering the switch. The vapors rose from the device and her eyes drifted close.\n\n\"Someone keep an eye on her, I have to prep things for creating the Elder Sign.\" I asked as I returned to Shuri's workstation. She showed me how to operate the advanced interface she had created and finetuned to her own needs. The best description I had was like autocorrect except it follows your train of thought and helps rather than hinders.\n\n\"I have what we need, I'll need Shuri's expertise for an analysis.\" I said and Shuri fired back with.\n\n\"He said anal-sis,\" she chortled. \"What do you have?\"\n\n\"This.\" I said holding up an ingot of the mana alloy. I handed Shuri the shimmering blue metal for her inspection.\n\n\"Pretty.\" Shuri cooed. She went to work analyzing it and I watched her. I never tired of witnessing her brilliance in action. The scanning station levitated the ingot and scanned it as it slowly spun in the low powered repulsor field. \"Interesting. Fascinating. It emits its own power source. For a mystical object this would be perfect.\" The rest became unintelligible as she began brainstorming faster than I could follow. A holographic control appeared, and her fingers danced across its surface and she delved into the depths of the ingot's secrets. \"Where oh where did you find this little miracle?\" Shuri asked and I gave her the short version of the story.\n\n\"Genetically engineered lifeform that is able to climb down into a volcanic fissure. It came up and spat out processed mana alloy.\" I said and her eyes got a vacant expression as she processed what I had told her. \"So?\"\n\n\"I don't know the details of the ritual, but I could make a next level A.I. with some of this alloy.\" She stated. I asked her how much needed and handed over four more ingots without batting an eye. \"Ghost... I don't know what to say?\" She replied her voice faltering. I pulled her close, kissed her as a promise of more to come later, and then whispered a few naughty suggestions in her ear. \"I can't wait.\" She whimpered in reply.\n\nWhile she went to work on her next gen artificial intelligence, I took the time to upgrade my plasma caster and build two smart disks, one for each hand. The shoulder weapon could now fire single, triple shot, or even fully auto. Even it's cool down was reduced for long duration encounters. The smart disks were razor sharp, returned when thrown, and hit like a truck. I added them to my weapon options and then turned my full attention to the Elder Sign.\n\n\"I need to meditate in preparation of the ritual.\" I said and Shuri took me to T'Challa's dojo. \"Thank you Shuri.\"\n\nI walked around looking at the equipment but didn't touch anything. I was supposed to be meditating. I returned to the center of the room when I heard Shuri's voice. \n\n\"Guest detected. Would you care to activate holographic opponent?\" \n\n\"Um... sure. I need to bleed off some stress.\" I agreed and a hologram of Shuri appeared clad in a skintight black uniform. It was a rather plain if revealing costume. \n\n\"Eyes up here hero,\" the hologram demanded. \"Scanning. What kind of challenge are you looking for Tiger?\"\n\n\"I'd like more than breaking a sweat but not end up in the hospital.\" I replied as I tapped into Left and tried the modified humanoid form the Elder Things had made for me. I needed to see what limitations it had.\n\n\"I understand. Male or female opponent?\" She asked.\n\n\"I guess female would be more fun.\" I said and the hologram smirked.\n\n\"I have chosen Jennifer Walters as your opponent,\" the hologram changed to that of She-Hulk. \"Your goal is to pin her for a count of three to win a round. She must pin you for ten seconds. Any questions Tiger?\"\n\n\"Nope.\" I said smiling that Shuri had marked me with the moniker of 'tiger'. I changed into sweatpants and a t-shirt. \"Ready when you are.\"\n\nThe A.I. provided a virtual arena for us to use. She-Hulk was clad in a tight-fitting white uniform that left her arms and legs free, hid little and distracted a lot. The obvious camel toe was nigh on lethal after all the teasing before Loki arrived. Add to that the diamond shaped cut out revealing her emerald cleavage and my focus was limited at best. My speed was my only asset in this fight. If she latched on, I was done for. I guessed that her strength was triple mine and if she went into a rage it could go even higher quite easily. \n\nI circled her and kept her at a distance for now. I wanted to get an idea how fast she was. What she lacked in raw speed she made up in cunning and excellent training. She didn't feel like waiting and leapt at me easily crossing the distance with grasping hands seeking a hold. I rolled forward with enough force to knock her feet out from under her. She caught herself with her hands and pushed against the floor and sprang up and we spun around at the same time to face each other.\n\nShe nodded and moved slower but just as deliberately this time. Suddenly she stopped and began circling me. Had she rethought her strategy? A flutter ran through the hologram, the room went dark, and then everything returned to normal five seconds later. She was exactly where she had been a moment before. A glitch? I found that hard to believe. Whatever, I was still at a severe disadvantage. I decided to see just how much stronger she was. What was the harm after all? I launched myself at her and she met me as our fingers interlocked and being the shorter of the two, I was able to lower my center of gravity and attempt to throw her off balance. She was having none of that. Her grip tightened and she suddenly yanked me forward, let go of my hands, and locked me into an erotic bear hug. My face was buried in her breasts as she held me tight. Shuri's voice counted down from ten. I was off my feet and unable to fight. I'll give it to Shuri, how she incorporated so many sensory items into her holograms. I could feel the heat coming off She-Hulk, I could smell her scent, and even spied a single rivulet of sweat running between her tits.\n\n\"I can't tell if you did this on purpose or not,\" She Hulk asked as I buried my face deeper between her tits waiting for the countdown to end. \"Are you taking this seriously?\" She asked as she lowered her head down and sniffed me.\n\n\"MMMMHMMMM!!\" I moaned.\n\n\"I'm not sure I believe you.\" She informed me with just the hint of a whimper in her voice.\n\n\"Zero. Point to She-Hulk. Disengage and prepare for round two.\" The A.I. referee ordered. She-Hulk let go and noticed a bulge in my sweats.\n\n\"Try harder,\" She-Hulk demanded. \"I didn't come all this way to just end up in bed with another well-hung superhero.\" Kudos to Shuri for such exquisite programming in this character's persona.\n\n\"Perhaps an incentive for pinning you then,\" I said, and she appeared to be thinking it over.\n\n\"What do you want?\" She asked with hands on her hips.\n\n\"Time in a hot tub, nothing more than you are willing to give.\" I offered. \"You are a beautiful woman and I'd like to get to know you.\"\n\n\"I'd like that. No pressure. I agree.\" She said with a smile. \"Come on then. Do your best.\"\n\n\"Engage,\" Shuri's voice sliced through the air.\n\nI slowly closed as did she. My second attempt to grapple with her went about as well as the first. I tried to attempt one of Black Widow's signature moves, double leg madness. I avoided her grapple and launched myself upwards, caught She-Hulk's neck between my legs, closed the scissor, and tried to use weight and momentum to bring her down. All I managed to do was grind my groin into her face. I hung there powerless as I felt her hot breath through my sweatpants. Once more she sniffed the air and licked her lips.\n\n\"Damn.\" I gasped as she moved her head side to side. \"Hey... stop that!\"\n\n\"NNNNNO!\" She growled happily her eyes dilated and the sense of hunger radiated off her.\n\n\"Point to Ghost Fire for a technical pin.\" The ref declared. \"Disengage.\"\n\n\"I don't want to,\" She-Hulk purred as she managed to tug down my pants and free my erection. \"That's better... ahhhh ummmm!!\" She said just before opening her mouth wide and snaring half the length in one go. So much for not sleeping with a hero.\n\n\"Aw shit woman!\" I gasped. \"I thought a nice quiet time in the hot tub... talk... oh that tongue of yours... feels so real for a hologram!!\"\n\nShe cupped my ass cheeks in her hands supporting me as her head moved slowly forward and back. Soon the talented little minx was taking the entire length. I guess if she went down on Bruce while he was changed, I was hardly a challenge in that department. It didn't reduce the pleasure of the act one whit. Her immense strength made her ability to support my entire body quite easy and barely an effort really. I sat there and urged her on as I felt my climax building swiftly.\n\n\"Damn, I am close already,\" I said as her cheeks caved while she applied more suction. I grabbed her by the hair as I fought and lost control. \"Here... it comes!\" I could hear her swallow as I fired my load down her throat.\n\n\"Ahhh!!\" She smacked her lips as she lowered me to the floor. \"Now for it. Alright Ghost show me your secret. Shuri keeps bragging about you.\" She said and I gave her a baffled look. \"Oh. OH!\" She giggled. \"I'm not a hologram silly man.\" \n\n\"The lights... when they went out.\" I said as she tore her uniform to pieces. \"Secret revealed.\" I said as I summoned the Double Dragon.\n\n\"I'll be double fucked... that's what she meant by two.\" She laughed nervously. \"I've never... what I mean is... Hercules tried to bugger me once. It didn't go well for him.\"\n\n\"I won't push any limits you aren't comfortable with of course.\" I informed her as I tugged off my shirt and slipped out of my sweats.\n\n\"Of course,\" she purred as I took her in my arms and kissed her. I'll give her this she was an amazing kisser. She broke the kiss eventually that left us both gasping. \"Impress me.\" She begged her body covered with a light layer of sweat.\n\n\"Did Shuri tell you I am a shapeshifter?\" I asked and she smiled. \"Let me display some basic shifting skills for you.\" I explained as I knelt, grabbed her by the ass cheeks and went on the offensive. I began with the serpent tongue technique and slid one tentacle like tongue into either hole. She gasped in surprise and then when they elongated and thickened her fingers dug into my hair.\n\n\"Damn! I see why she speaks so highly of you.\" She growled as she ground her groin against me. \"So damn deep and thick in both... I've never let a guy tongue my asshole before.\"\n\n'How are you enjoying it?' I asked touching her outermost thoughts only.\n\n\"Amazing! More!\" She begged.\n\n'Ding!' Went my HUD. 'Demon Tongue Technique Unlocked!' 'Demon Cock Technique Unlocked!'\n\n'I wonder what the hell 'demon tongue' does?' I pondered our thoughts still linked.\n\n\"Do it! I want to feel your demon tongue!\" She Hulk demanded. I activated it and we were both in for a surprise. The tongue lapping away inside of her pussy split again, but this time into three equally long and thick tentacles for lack of a better word. The tentacles began using a kind of undulating piston motion. While one tongue thrust forward the other two withdrew partially and as the deepest one pulled out one of the others thrust into her and then as it receded the third one slammed into her. Soon a diabolical rhythm was established with one long thick tentacle thrusting into her at any given time. \"Oh shit! So damn good!\" She shrieked as she climaxed. I repeated the technique with the tongue in her ass. The climaxes kept coming and even with her superhuman level of stamina I soon had her reduced to a drooling twitching mess.\n\n\"Give me a bit. I need a little breather.\" She gasped. \"I am jealous of her.\"\n\n\"I get that from time to time.\" I said as I approached again. \"More?\"\n\n\"Yes... please...break me, if you can.\" She turned a plead into a challenge.\n\n\"Just a second,\" I said as I pulled out the gloves Thor had given me. I increased my strength and started again. \"I hope you like it rough. It is about to get serious.\"\n\n\"Yeah really?\" She replied in a slight mocking tone as she swatted her own ass. I bent her over and took aim.\n\n\"Hoo-hoo, are you in for a surprise,\" I growled as I grabbed her ass cheeks and thrust hard.\n\n\"UNNN Shit!!\" She yelped in surprise. \"Where did that come from?\"\n\n\"Shut up and take it,\" I growled in her ear. She did. Soon she was thrusting against me as she dropped her head and was grunting in time each time my cock hit deep, and the upper erection slid between her ass cheeks and teasing her unplumbed asshole.\n\n\"Grab my hair!!\" She-Hulk demanded. I did as I muttered.\n\n\"House Rule 36, 'when she says grab my hair it means fuck her harder'.\" I explained as I thrust as hard as I could. I adored the way her ass cheeks rippled as I drove my erection into her.\n\n\"Any... oh god that is good... any other rules I should know about?\" She gasped.\n\n\"Hmmm, let me think, there is rule number two... 'the correct answer to most things is 'yes Sir'.' How about that one? Can I fuck your ass now?\"\n\n\"Yes Sir!!\" She groaned.\n\n\"That's my girl,\" I whispered, and she giggled. I pulled back, lined up the upper erection and slowly pushed. \"I got one more surprise up my sleeve after this.\" She didn't say anything as I buried it deep in her ass. \"I never get tired of that first time.\" I said as I watched her open and accept my offering.\n\n\"UNNNN... so good,\" She-Hulk whimpered. \"What is your last surprise?\"\n\n\"Just this,\" I told her as I shifted my size to match hers. I grew proportionate and she let out a new yelp of surprise. \"Now let's do this, I promised to break you.\" I caught her up by her upper thighs, took her off her feet, and slowly worked her into a standing full nelson hold. \"I've never done this before. You inspired this one.\" I thrust from below and her soft gasps got louder as I added more force over time to my movements.\n\n\"Are you brave enough for the demon cock technique?\" I asked before I even thought of attempting it on her. As I spoke, I summoned an arcane mirror so that she would see what was going on. Her reflection greeted her as she licked her lips and replied.\n\n\"You are kidding right? I said break me!\" She growled and I invoked it. The same effect that my tongues had undergone now happened to my erections. Only this time the thickness was much greater. \"UNNNN!! I've never... tongues are nothing compared to this!!\"\n\n\"I can stop...\" I offered but she would have none of it. On my end of things, it was like tripling my pleasure level. What I didn't learn until afterwards was that the technique doubled my stamina for the duration. I lost track of her climaxes as they tended to blend one into the other. Her final climax left her semiconscious and my six-fold orgasm K.O.'d her. I almost dropped her I came so damn hard. She awoke in my arms and snuggled close. We were both a mess but neither of us cared. I looked at her via the mirror and it was good. She Hulk was trembling in my grasp, covered in sweat, and dripping cum from her pussy and ass. \"You look lovely like this.\" I stated and she agreed.\n\n'Perhaps a Vibranium collar might suffice?' Traci silently suggested via my HUD.\n\n\"Vibranium collar?\" I muttered aloud and she surprised me again.\n\n\"Property of Ghost Fire I suppose,\" She-Hulk purred as she recuperated. \"I suppose I could go for that.\" She spun and kissed me fiercely. I held her close and let her have the moment. \"Damn, I needed that!!\" We washed up and settled onto the couch together. I reverted to my normal size while she remained the same. We sat on the couch with her behind me, my head cradled on her soft breasts like twin pillows, her arms draped around my waist, and her fingers playing with my hair. \n\n\"It is nice to have a lover that isn't so fragile, you know.\" She giggled.\n\n\"I am usually on the delivering end of things,\" I replied.\n\n\"What is bothering you?\" She-Hulk asked her voice still soft and seductive. \"I can feel that despite my best efforts you are still... stiff.\"\n\n\"Yeah. Something is on the horizon, something big. It involves ice... cold... frost... I don't know. She stole Bobby Drake's mutant power. She tricked Loki into letting her steal the Casket of Ancient Winters, a Frost Giant artifact. Lastly, there are icebergs in the harbor and the last time that happened some seriously evil shit manifested. Any thoughts?\" I asked after listing what I knew so far. \n\n\"I worked with the X-Men a few times. Bobby was a nice guy. We are talking dark magic, have you talked to Doctor Strange about this?\" She asked.\n\n\"I've spoken to her and others, but it proves elusive.\" I admitted. \n\n\"On the bright side, you look a lot less stressed out to me,\" she giggled.\n\n\"Why are you here Jennifer?\" I asked and felt her stiffen.\n\n\"Reed. He is on ice here being treated for Zone Sickness, well, that is what Shuri is calling it. He is one of the brightest minds on the planet. I thought he might be able to help me control my powers and change the way Bryce does but in a more controlled way.\"\n\n\"You are stuck in Hulk form.\" I stated. \"I see why Reed would be a good option. He is in stasis though. How can you ask him anything?\"\n\n\"He has a brain/machine thingy in the back of his head. Shuri is trying to contact him through that after Xavier failed to get through to him.\" She said her voice low and painful.\n\n\"Xavier couldn't talk to him?\" I asked.\n\n\"No, he could, it is just that he refused to discuss his research. When Xavier brought it up, he freaked and shut down.\" She explained. \"He damn near went catatonic.\"\n\n\"Sounds like guilt to me.\" I replied. \"Maybe I can talk to him.\"\n\n\"You! Aren't you the one behind Susan divorcing him?\" Jennifer asked sounding quite discouraged.\n\n\"Well, it won't be me asking the questions.\" I said and got up to wash up. \"Shower? I've still got some bits of our wrestling match all over me.\"\n\nWe washed the last of the lust from our encounter, changed into clean clothing, and I sought out Shuri. She took me to Reed. He was still in his stasis pod and the readout said he had just a few days until his system was completely rid of the poison. Shuri warned me that he wouldn't speak with anyone, especially me. I asked to be alone before I pulled my trump card. My time with Mystique, while sexually enlightening, had not been all fun and games. She hadn't pushed my shapeshifting on just a physical level but a mental one as well.\n\n\"If you are going to impersonate someone, you must do it inside and out. You must become that person if folks are to believe you.\" She had said.\n\nOnce alone I shifted to the form of Susan Storm. Traci manifested instantly and warned me off this rash action. I shut her down, literally. I told Left to take over for now. It did so without hesitation. I closed my eyes and picked out all of Susan's little ticks both physical but mental as well. We had been lovers long enough to notice many of them. Sure, that I was as close to her inside and out as I could be, I lightly touched Reed's thoughts.\n\n\"Reed.\" I whispered.\n\n\"Susan!\" He reached out instantly. \"I thought you hated me.\"\n\n\"I don't hate you. I am disappointed though.\" I sent. \"I got tired of coming second to your research all the time.\" I said and I felt the truth hit deep. \"Listen, you are almost out of this. We need your help. Jennifer wants to control her powers and be able to revert back to normal.\" I stated the case and when I said control and powers, I felt a psychic ripple pass through him. Guilt. Fear. Panic. He didn't shut down, but he did close himself off. \"Reed! I don't care about your work!\" I let the anger and pain lace the psychic lance. It tasted of bitterness and sorrow as it struck deep. \"Just tell me how to help Jennifer. I know that you know how to do it.\"\n\nInstead of answering me I felt the download of raw data, but with it the briefest of images and with it another mystery surrounding him. He was up to something and it was morally reprehensible. Nothing else explained this kind of reaction. I took what I had gathered and withdrew. I changed back to my Ghost persona and then passed the data to Shuri. She went to work to help stabilize Jennifer. I meditated on the images I had seen. I recognized the Negative Zone. Reed had a research facility inside it. What the hell are you up to Reed?"
    ],
    "authorname": "Lost Boy",
    "tags": [
        "anal",
        "ffm",
        "harem",
        "magic",
        "oral",
        "threesome",
        "wrestling"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-12"
}