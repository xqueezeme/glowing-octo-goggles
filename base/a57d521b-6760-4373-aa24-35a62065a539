{
    "title": "Ryan Ch. 04",
    "pages": [
        "Dani burrowed out from under the covers with the realization that she was not in her home. She was momentarily confused until her head cleared and memory returned.\n\nShe was at Ryan's house, in Ryan's huge bed. \n\nThis wasn't the first time she'd slept over, but what happened last night threw her for a loop. After the second round of earth shattering love making, Ryan called for delivery from Pappas Greek Restaurant and they spent the hours afterward languishing in their new found intimacy. \n\nBoth of them were nearly insatiable, but Ryan was considerate of her recent virginal status. Dani could still feel the soreness, a souvenir of his thorough mastery of her feminine parts. Just thinking of Ryan produced an aching sting of desire. As she reached down sliding a finger into her swollen vagina, Ryan stepped out of the bathroom, naked. \n\nWhen she caught sight of him, her finger stopped in mid- stroke, still deep within her humid core. \n\nWalking over to the bed, Ryan pulled back the spread and sat down.\n\n\"Don't stop on my account,\" he said huskily.\n\nKeeping her eyes on him as he watched, Dani resumed massaging her pussy, with one and then two fingers. Her breath became labored as Ryan green eyes darkened with desire. She shuddered with growing pleasure wanting him to taste her arousal. For long minutes, she observed him from under the cover of hooded eyes, exploring her sex for his pleasure as well as her own. \n\nRyan sat mesmerized as Dani masturbated, observing closely the slide of her fingers into the slippery well of her heated body. The thick scent of sex assailed his nostrils igniting his lust into overdrive. Quickly, he gave up being a spectator and quickly pulled her moist fingers out of her body, bringing them to his mouth. Achingly, he sucked them one at a time as he eyed her languid expression. Her mouth was slightly opened as she stared at him in a fog of desire.\n\nThrough a haze of lust, Ryan heard a deep groan escape Dani's throat as she bit her lower lip. In quick order, he knelt between her thighs, spreading them to accommodate his body. Leaning forward, he brushed his lips against hers while she drowned in the green fire of his deep emerald gaze. \n\nAgainst her lips he whispered, \"I love you, baby. I love the way you look....feel.... smell and taste. Each word was punctuated by a kiss. \"I love your heart and all the little things that make you who you are. You are part of my soul and I can't live without you.\"\n\nSucking in her breath, Dani almost forgot to breathe. She knew even without the words that he loved her, but hearing them spoken with such conviction wrapped him more firmly around her heart. Without warning, she felt the prick of tears behind her eyes which flooded her face as she wrapped her arms around his neck. With her body, she gently urged Ryan onto his back, ending with her body on top of his. \n\nHer face was buried in his neck as she sobbed, \"I love you. I love you so much, Ryan.\" \n\nRyan, whose heart was in his throat at the unexpected tears, gave a sigh of relief when he realized that the tears were those of joy. As he held Dani and whispered more words of love, his fingers slowly caressed her back. \n\nShe was still crying softly when Ryan rolled her onto her back. Spreading her thighs, he teased the little bud at the apex of her sex with his thumb before bringing her to a shattering climax with his lips and tongue. \n\nWhen Dani's panting subsided she turned the tables, easing Ryan on to his back again and taking his cock in her hands. Lying between his muscular thighs, she swept the underside of his rod with long strokes of her tongue, from the base to under the rim. When she reached the rim, she wiggled her tongue under it extracting a drawn out moan from him. He wrapped her hair around his hand, but allowed her to set the pace for the time being.\n\nDani breathed in deeply, becoming heady with the musky scent of her man. Without warning she engulfed the head of his cock, sucking and stroking the large slit with her tongue, tasting the essence of salty sweet pre-cum. As she continued to work the head, her hand slithered up and down the thick shaft. Eventually, her mouth dipped down to his balls, rolling them in the steamy cavern of her wet orifice, sucking and lashing them with her tongue until he was grunting in pleasure.\n\nSliding her tongue up the shaft and back to his cock head, Dani took it fully into her mouth again, sucking in a bobbing motion, taking in as much as she could, until the head hit the back of her throat. She hastily pulled back before her gag reflex engaged, once more sucking the bulbous crown.\n\nRyan's cock was too big to take down her throat, but that hardly mattered when she was working him like a pro, her lips firmly massaging his hard length. When his orgasm began, he tightened the hold on her head, arched his back and with a strangled groan shot his load. \n\n\"Oh, shit!\"\n\n\"Fuck...yeah, yeah, baby..... Oh fuck, yeahhhhhh!\" he cried out as shot after shot of his hot jizz flooded Dani's mouth. \n\nDani quickly pulled back so that the head of his cock was just inside her mouth, swallowing as fast as she could. As she ran her tongue around the mushroom top, she savored the flavor of his warm essence and continued to alternately suck and run her tongue around the circumference of the fat gland. She indulged her desire until Ryan expended the last spurts of semen and his body slowly lost it rigidity. It took a while longer for him to release her hair from his tight grip. \n\nIn the aftermath, he gently massaged her scalp as his breathing slowly returned to normal. Eventually, he pulled Dani up into his arms and kissed her forehead as she settled her head on his shoulder. Sated, they slipped gently into slumber once again. \n\n* \n\nAs the days passed, the intensity of their love making increased. The places and the variations of their activities was only limited to their imagination. While not voyeurs, his home on ten acres added another dimension to their love making. The seclusion of the property provided the opportunity to fulfill their desire for each other in the beautiful gardens, pool and surrounding wooded area. They even took advantage of the gazebo where they spent hours basking in their passion for each other. \n\nIt wasn't long before Dani decided that she was officially addicted to love making. The things Ryan did to her body were still shocking, but she was eager for every thing that he taught her. He'd even spanked her as he once threatened. It was so hot that she was coming even before he thrust his cock into her pussy. \n\nHer man definitely had some serious skills. \n\n*\n\nSoon enough the night of the dinner with Ryan's family arrived. Dani was more nervous than ever. This was an important night and she was well aware of how far a good first impression would go. Which brought her to her current dilemma, what to wear. \n\nShe was standing in her walk- in closet, regretting that she didn't buy something specifically for the dinner when she went shopping with the girls. She told herself at the time that she had more than enough things in her closet to chose from; some with the price tag still on them. \n\nDani showered over an hour ago, having done so early to give herself plenty of time to choose an outfit and dress before Ryan arrived. Also, if she had waited until he got there, he would have wanted to take a shower together and if she knew anything, it was that they would have been all over each other jeopardizing arriving to the dinner on time. This night was too important for her to risk that. \n\nBut plans often go awry, so here she was scanning her closet and looking for the world like she'd never seen most of the things in there. She didn't want to over dress, but she certainly didn't want to feel out of place by under dressing either. \n\nShe knew that it would have been wiser to choose an outfit earlier in the week, but she'd purposely avoided thinking about meeting Ryan's parents. Their opinion of her was more important than anyone's, save Ryan's. Now she was faced with the consequences of being a procrastinator, growing anxiety. \n\nGrumbling, Dani stepped out of the closet and sat down on the bed. She was exhausted and her head was beginning to ache. Hoping to gain some clarity, she fell back on the bed with an exaggerated sigh and stared at the ceiling. \n\n\"This is just a dinner, why am I tripping?\" she asked herself. \n\nHer alter ego, ever ready with an answer replied, \"Duh, because it's not just a dinner.\" This was the man she wanted to spend the rest of her life with; being accepted by his family was important to their relationship. She'd just have to stop being a ninny and find something to wear.\n\n\"They are just regular people,\" she thought without much conviction. \n\nDani was about to get back to the task when Ryan walked out of the bathroom with a towel wrapped around his waist. The silky dark blond hair on his broad chest glistened with moisture as she eyed his masculine beauty. She thought that if Michelangelo could have seen Ryan first, he would have forgotten about sculpting David. \n\n\"Why aren't you getting dressed? Don't you feel well, baby,\" he asked, the frown on his face mimicking the concern in his voice.\n\nSitting up, Dani took Ryan's hand and pulled him down beside her. Resting her head on his shoulder, she sighed, \"I'm ok Ryan, just nervous about meeting your family. I think I've become brain dead trying to decide what to wear. \n\nRubbing her back, Ryan asked with a grin, \"Is that all it is?' \n\n\"Is that all it is?!\" Dani squawked bringing her head up from his shoulder, her voice filled with fringed indignation. \n\n\"Men; that's just so typical,\" she groused.\n\nRyan chuckled at Dani's outburst knowing she was only kidding. \n\n\"Ok, love of mine, let me get in there,\" he said taking charge. \"I'll see what I can find. It shouldn't be that hard; you have great taste and always look sexy, even in your sweat suit.\" \n\nGlancing at him Dani grunted and retorted, \n\n\"Huh! Sexy is not the first impression I want to make on your parents. I don't want them to think that I'm some femme fatale trying to sink my hooks into their baby boy. Maybe something conservative,\" she suggested. \n\nRyan shook his head at her serious expression.\n\n\"Honey, there isn't a chance that you're going to look conservative unless you wore a burlap sack and I'm not convinced that would work. Your nervousness is making this harder than it needs to be.\" \n\nAfter reluctantly untangling himself from her arms, Ryan got up and said, \"Sit right there and I'll find something that's revealing and hot that accentuates your tight ass.\" \n\nHe got up and headed to the closet, chuckling when she threw a shoe at him. It hadn't missed by much.\n\nAfter ten minutes of rooting around in the closet, Ryan came out with a red sleeveless knit dress. It had a slightly scooped neckline and the waist was accented by a wide band of the same material, but in black. Dani purchased the dress a couple of months ago and promptly forgot about it. She tried it on in the store, so she knew it was form fitting, but not tight. The hem ended a couple of inches above her knees. \n\nHe also had a pair of 3 inch black peep-toe pumps and a black clutch. \n\nDani stared at him with her mouth opened in shocked. \n\nQuickly closing her mouth she stood up; standing on tip toes she gave him a big fat kiss. He wrapped his arms around her and picked her up as he deepened the kiss. \n\nThe dress was perfect. \n\n\"Thank you, Ryan. I'm sorry about the shoe.\" \n\n\"You're welcome, babe. Don't worry about the shoe, I love a spirited woman,\" he responded with a smile before kissing her again. \n\nFeeling his desire rise, Ryan swatted Dani on her perfect ass and said, \"No more of that or we'll be here all night. You wouldn't want to explain to the folks that we missed dinner because we were getting our freak on, would you?\" he cracked as he released her. \n\n* \n\nRyan's parents lived in a sprawling Mediterranean Style home that sat on fifteen acres of beautiful real estate that included a small lake, tennis court, outdoor kitchen, Olympic size pool and a huge outside living and dining area, all surrounded by a lush landscape. Although the home was large, its earth tone colors and tropical gardens evoked a sense of warmth and intimacy. \n\nFollowing the winding driveway to the rear of the house, Ryan parked his metallic gray Jag alongside a candy apple red Infinity. Smiling and nodding towards the car, he said casually, \"That's Caleb's baby.\"\n\nRyan helped Dani from the car and they walked from the car park through the beautiful outside living space. As they approached the house Ryan notice Haley, Matt and Micah sitting outside talking. Haley, the first to see Ryan, called his name and tried to get up, but being eight months pregnant, it wasn't that easy any more. Matt helped her up as Ryan and Dani drew near. \n\nHaley was tall, statuesque even, although during her early teens she was what could be called gangly. But, with age, she'd lost that tom boyish figure and morphed into a curvy woman with full breasts and rounded hips. Her hair was deep chestnut with a glossy sheen, her eyes a soft doe brown. She wore a dark blue sheath dress which flattered her frame and on her feet were sensible dark blue flats. \n\nWhen they were within a few feet of the trio, Haley stepped forward and threw her arms around Ryan's neck and hugged him, getting in as close as she could with her rounded belly. Looking over his shoulder at Dani, who was slightly behind Ryan, Haley smiled and winked at her. \n\n\"One down,\" Dani thought, relieved. \n\nReleasing Ryan, Haley caught Dani's hand and pulled her in for a big hug as Ryan was greeted by his brothers and Matt with slaps on the back and sly grins. \n\n\"I'm so pleased to meet you,\" Haley whispered as Dani hugged her back. \n\nRyan introduced Dani to his brother and brother-in-law who teased her about her questionable taste in men. He laughed good naturedly as they ribbed him by listing, what they told Dani, were just a few of his many faults. Joining in the fun, Dani came to Ryan's defense saying that he must be a reformed man because she'd seen none of the alleged faults. \n\nMicah scoffed at that retorting, \"Damn Ryan, you've totally pulled the wool over her eyes.\" \n\nThey all laughed uproariously, including Dani. \n\nAfter they regained their composure, Ryan took Dani's hand and suggested they go in so that he could introduce her to the rest of the family. Dani followed him with the others in tow.\n\nThe back entrance of the house led into a huge Butler's pantry and that into a kitchen that was a professional cook's dream. The kitchen, living and dining rooms were open concept making what truly could be called a great room. Most of the family congregated in the living room, while Ryan's mother, Micah's girlfriend Amanda and their grandmother, who came up from Ft. Myers, were in the kitchen. \n\nHelen turned as Ryan and Dani crossed the threshold into the kitchen. Immediately, her face was engulfed in a smile that encompassed not only her son, but the woman she knew was making him very happy. \n\nHer emerald green eyes sparkled as she exclaimed, \"Ryan!\" and pulled him into her arms for a hug and a kiss on the cheek. \n\nTurning toward Dani, she hugged her and said, \"Welcome to our home, Dani. It's about time Ryan brought you around. I've heard so many good things about you, but I was beginning to think you were a figment of his imagination.\" Smiling, Dani said, \"Thanks for inviting me. I just know that it couldn't have all been good. Just this morning Ryan was complaining about....\"\n\nShe never got to finish as Ryan playful cupped his hand over her mouth from behind and said in a stage whisper, \"Mom, doesn't need to know about that, babe.\" \n\nEveryone laughed and Dani blushed profusely because she knew that Ryan gave them the impression that she was going to reveal some intimate detail. She was only going to mention that he complained about the scorched scrambled eggs. But that was entirely his fault, he'd been all over her, not that she was going to tell them that part.\n\nEveryone eyed her with that knowing look and Dani knew Ryan wasn't going to correct their impression. She was fast learning what it was like being among the Sinclairs. They were a loving family who was comfortable with kidding each other even when it involved sexual innuendo. \n\n\"Don't worry about it, dear,\" Helen said in a soothing voice, \"we all know what Ryan's like.\" \n\nDani didn't know what to make of that statement, but it did noting to cool the warmth in her cheeks. \n\nBefore they moved on into the living room, Dani was introduced to Ryan's grandmother and Amanda who graciously welcomed her with a hug and said they were pleased to meet her. \n\nThe living room was a big space with a huge sectional sofa at its center. Other seating included a couple of over stuffed upholstered chairs and a large ottoman. Over a section of the Brazilian cherry hardwood floor, was a sumptuous Persian rug which, Dani found out later, was purchased by Daniel years ago on a business trip to the Middle East. The room also had several occasional tables and lamps.\n\nOn the central wall was a large gas fireplace with a granite slab facade and hearth. Although winters were relatively mild in Florida, there were several times during each season when a warm fire was appreciated. \n\nThere was no television in this room. The space was furnished for comfort and social interaction of the conversational type. With the generous size of the room, the family could easily host a considerable crowd, which they did on several occasions throughout the year. \n\nDani was introduced to Ryan's grandfather, who smiled and kissed the back of her hand. There was a warmth and sincerity in his eyes when he told Ryan what a lucky man he was. \n\nThen she was introduced to his father, Daniel, who pressed her small hand into the warmth of both of his and welcomed her to his home with a kiss on her cheek. Lastly, she was introduced to Caleb and his girlfriend Amber, a petite Asian woman with large dark eyes. \n\nHelen informed them that it would be a few minutes before dinner was ready and encouraged everyone to sit and talk. Of course, they all wanted to know about Dani, especially about her relationship with Ryan. But not wanting to embarrass her, they kept the personal questions to a minimum and the conversation casual. \n\nRyan was sitting at the corner end of the sectional, having a heated sports discussion with Caleb seated in an arm chair, while Dani sat next to him discussing the Ybor City Art Exhibition, which was taking place the following month, with Amanda who sat next to her on the sofa. \n\nDani, who was more relaxed now that she realized that she wasn't going to be put on the spot, was unaware that her hand on Ryan's thigh would occasionally caress him. That little show of intimacy wasn't lost on Helen who nudged her husband to get his attention, and then nodded toward Ryan and Dani. \n\nSeeing the display, Daniel smiled, too. \n\n*\n\nThe dinner was a wonderful affair set out in buffet style so that everyone could serve themselves. \n\nAfter dinner, they sat around and continued their conversations, laughingly recalling childhood escapades and pranks. Dani was beyond enjoying herself. She felt like she'd known everyone for years instead of only a few hours. \n\nLater, Caleb talked to his Dad, Micah and Ryan about plans to revamp the outdoor living space at his home. Apparently the renovation bug was going around. Ryan was an avid participant in the conversation having enjoyed designing his own outdoor area. However, when he heard Dani's laugh, his eyes were drawn to where she now stood across the room with his mother, sister and Amber. \n\nHer back was to him, which afforded him the opportunity to admire her ample assets. Her rounded ass was being hugged and caressed by that damn sexy red dress. Her legs were firm and long for her height. He started to flush as he remembered how strong those legs where when wrapped around his hips. ",
        "Almost immediately, he began to feel the first talons of heat in his loins. Ryan was so engrossed that his mind drifted from the conversation, something that didn't go unnoticed by his father and brothers. \n\nFollowing the direction of his gaze, being men, they understood perfectly what distracted him. \n\nCaleb laughed out loud bringing Ryan out of his trance, albeit slowly. \n\nWhen Ryan's attention came back to them, they all were giving him a knowing look. Sheepishly, he smiled and said, \"Ok, I'm busted, but who the hell can blame me?\" \n\nNone of them argued his point. \n\nSighing, he said, \"I still can't quite believe she's mine.\" \n\nSeeing his Dad's arched eyebrow, Ryan said, taking a deep breath, \n\n\"You might as well know, this is it for me. I'm in love with Dani. I have been almost from the first moment that I saw her. She's everything I want and need. Having said that, you guys can stop throwing women in my path now,\" he laughed. \n\nChucking, Micah said, \"All I have to say is that you're one lucky bastard. Just think, if you hadn't gone to Lowe's that afternoon, you might not have ever met her. That's too much of a coincident for me; I have to believe that fate lent a hand. \"\n\n\"Yeah,\" Ryan agreed, \"especially since I rarely go there at that time of day. You know that I like to get my supplies in the evening and start off a project the next morning. But however it came about, I couldn't be happier.\"\n\n\"What about Dani?\" his dad asked, \"Is she in love with you, too? Then he shook his head and said, \"I don't know why I even asked that, anyone can tell just by looking at her.\" \n\n\"And looking at him,\" Caleb chipped in with a grin.\n\n\"Yeah, Dad, she's in love with me. Damn, I never knew it could be like this. I was happy before I met her, but I can't explain it. I... I can't even imagine my life without her now. While I think on some level I should be afraid of that thought, I'm not. It feels right; she feels right.\" \n\nNoticing the sudden sparkle in Micah's eyes and that he was starting to open his mouth, Ryan said, \"Get your head out of the gutter, Micah, that's not what I meant. Well, she does, but... Oh, hell ...\" he broke off.\n\nLaughing Micah concluded, \"Yeah, she's got you all roped and tied. Can't say I blame you, though, I feel the same way about Amanda.\" \n\n\"Well, now,\" Daniel interjected, \"does this mean your mother and I can expect a wedding or two soon and maybe some grand babies soon afterward?\"\n\nThere was a \"Damn,\" from Ryan, followed by an \"Oh, shit!\" from Micah and a \"Don't look at me,\" from Caleb. \n\nDaniel just smiled at his boys. * \n\nA week later Dani received an invitation in the mail. \n\nHaley's best friend, Julianna Styles, was throwing her a baby shower at a downtown German Restaurant. Dani was pleased that Haley thought enough of her to include her in the celebration. \n\nDani needed to get a present for the shower and enlisted her co-worker and friend, Charlotte, to go shopping with her. Since Haley was already registered at The Stork's House Boutique, choosing a gift would be relatively simple, but she wanted the company. She knew that Ryan painted the baby's room yellow and green and Haley had already purchased a crib and dresser in bright white. \n\nSince Dani got started as soon as she received the invitation, there was still a fairly large list of items to choose from. Even so, she wasn't sure what she wanted to get, but Charlotte who already had three children, provided some useful suggestions.\n\nCharlotte's youngest was two years old and Dani had gotten a Lil' Luxuries Whirlpool Bath for her. It was the cutest thing. It was actually shaped like a Spa tub with jets and a shower sprayer, all in miniature size, of course. It was something she knew her friend wanted although she chose not to be registered anywhere. \n\nShe and Ryan agreed to buy one gift as a couple and share the cost. Dani had to talk him into letting her pay her share, but he'd acquiesced without too much grumbling. She ended up getting a Glider, which came assembled. It was a beautiful chair that had a painted white frame and was upholstered in a bright shade of green with a matching ottoman.\n\nTo make the delivery as easy as possible, she requested that the store deliver the items directly to Haley's home on the day of the shower. She then called Haley to let her know to expect the package, but didn't give her a clue as to what it was. \n\n* \n\nThe day of the shower turned out to be beautiful. There had been thundershowers in the afternoon for a couple of days, which had Dani concerned that the weather wouldn't clear in time. Thankfully, they were blessed with a clear, sunny weather. \n\nThe Shower went off without a hitch. Julianna was a great organizer. They talked, ate, played games and generally acted like a bunch of teenagers, but everyone had a wonderful time. \n\nOne of the games they played was 'guess the baby food.' They all were required to sample some baby food from an unlabeled jar; whoever correctly guessed what it was won a prize. It was funny that no one, including Haley, was overly eager to taste what looked like goop. \n\nThe green/brownish mush turned out to be Garden vegetables with brown rice; not great tasting, but not as bad as it looked. Dani found it hilarious watching their faces as each woman sampled the baby food. Haley laughed until she cried. In the end, she got some wonderful gifts, including the glider and ottoman which arrived just as the shower was wrapping up. The delivery men sat the pieces up in the baby's room and they all stood around admiring them for a while before leaving. \n\nTwo weeks later, Haley gave birth to Mallory Matthew Chase. He was named after her husband Matt and his father, Mallory. The baby was twenty one inches tall, seven and a half pounds with dark brown hair and his grandfather's blue /gray eyes. \n\n*\n\nIt was a tough day for Dani. One of the legal assistants, Melanie O'Connell, was out with the flu and no one was certain when she would return. Having phoned to wish her well, Dani had the feeling that she might take ill with the amount of extra work she would have to take on. \n\nMelanie's Boss, Mr. Grainger, had a big corporate case that needed immediate attention. Although there were two other legal assistants, Dani was tagged to research the case law and help prepare the legal brief. She didn't mind, but it was going to put a strain on her workload for a few days at the least.\n\nMcClain, Grainger and McKinney were a large prestigious law firm. Because of the size of their case load, they'd requested an interim assistant from the local work force pool to take care of regular secretarial duties. However, Mr. Grainger didn't want a newbie who hadn't been tested to their standards doing the more detailed work on any of their cases.\n\nDani knew she wasn't going to get home until close to 7 o'clock, so she called Ryan to give him a heads up. While waiting for him to answer, her phone beeped for an incoming call. Looking at the caller ID, she saw that it was her mother. \n\nShe knew her mother was due to get back from her cruise today, but she hadn't figured on a phone call from her so soon. Dani wondered what she wanted, but was sure it wasn't an emergency since her mother would have called her on the cell phone for that.  \n\nShe was thinking of calling Ryan back when he picked up. \n\n\"Hey, baby. Miss me already?\" he asked. \n\nSmiling, Dani replied, \"Of course I miss you, but that's not the reason I called.\"\n\nRyan gave a dramatic sigh and muttered, \"Damn.\"\n\nDani chuckled at him and then got to the point of her call. \n\n\"I called to let you know that I probably won't be home until about seven. Melanie is out today and I've been enlisted to do a couple of her jobs. I'm going to be up to my eyebrows in stodgy research and legal briefs.\"\n\n\"Don't worry about anything, babe. I'm leaving the bar around five. I have to do a little grocery shopping, but I'll fix a nice dinner for us at my place, ok?\"\n\nThankful, Dani said, \"That would be great. I didn't want to think about cooking after I got home. Thanks, baby.\"\n\n\"No problem, sweetheart; plan on spending the night. I'll see you around seven.\"\n\n\"Ok, Ryan. I love you.\"\n\n\"I love you too, babe,\" he responded. \n\nDani looked at her phone after he hung up and decided that now was not the time to call her mother back. Her day was already going to be stressful and she just didn't have time to get into a long conversation about her love life and future grand kids, her mom's favorite subjects. However, she did listen to the message.\n\nThe start of the message wasn't promising. \n\n\"Danielle Marie Carter, what's this I hear about some new man in your life. Crystal makes it sound like you're practically living with this guy and I'm just hearing about him. I take a little break to chill out a bit and this is what happens. Well, call me as soon as you can. Don't make me come down to Tampa.\"\n\nDani sighed. \n\nHer mother was a bit dramatic, but she didn't trust her not to come down to Tampa.\n\nHer parents moved back to Jacksonville a couple of years ago. By that time she and Crystal had their own place and her brother, James, was away at college. Her mother reasoned that they'd done a good job of raising them, so it was the right time to move back to their hometown. \n\nHer father was always agreeable to anything her mother wanted, that's why they've been happily married for twenty nine years. Her mother spoke and her dad said, \"Yes, dear. You're right, dear.\" It worked for them. \n\nThey'd moved to Tampa because of her father's job promotion, which was a really big deal; still they'd missed the friends they left behind. They traveled back home occasionally and a few friends came to visit, but it wasn't the same as having them close all the time. The fact was, they knew their children didn't need them anymore, not like when they were younger. \n\nAfter listening to the call, Dani settled in for a long day.\n\n*\n\nShe made it through the day, but she was bone tired. She'd left twenty minutes later than she intended, but she didn't want to leave any work to carry over to the next day. It was always busy, but if she didn't have unexpected work, she usually managed to complete her 'to do' list and leave the office by 5 o'clock. \n\nShe was grateful for the extra work in a way. It kept her from thinking about her mother's phone call. She wasn't avoiding talking to her about Ryan, well not exactly. Frankly, she thought Crystal would have told their mother long before now. Meeting Ryan no doubt deterred her sister from her usual interfering role. \n\nDani talked to her mother at least then times in the period that she'd known Ryan, but she managed to avoid the subject of her love life by telling her she was very busy at work, which wasn't a lie. She hadn't said she wasn't seeing anyone, she just didn't say she was. She knew, legally, she was on shaky ground with that explanation, but she had been desperate. \n\nThe problem with dealing with her mother was that she let her imagination get the better of her. Her mother would hear 'new guy', then automatically wedding bells would go off in her head and the pitter patter of little feet would soon follow. Unfortunately for Dani, more times than not, she was the one her mother converged on like a heat seeking missile. \n\nIt was one thing For Dani to talk to her Mother about random dates, quite another to talk about her relationship with Ryan. Yeah, her mom would want to know the details. Yeah, those details, including the what, who, how, when and the where of it all. \n\nDani decided she'd deal with that later tonight, if she didn't, her mother would call first thing in the morning. No one should doubt that her mother was anything but persistent. * \n\nDani stopped by her condo to change into something comfortable before heading to Ryan's place. She decided on a short, form fitting floral skirt and a canary yellow knit top. She would also need an outfit to wear to work tomorrow. She had some things at Ryan's already, but there wasn't anything suitable for the office. \n\nWhile she was at it, she decided to take a few other things. Ryan was always complaining that she didn't have enough clothes in his closest. The space was made available by the fact that he had a considerable amount of his clothing in her spare room closet. If they moved in together full time, she knew she would need to edit her clothing, especially those she hadn't worn in a very long time. While not exactly a pack rat, it seemed that her gene for getting rid of stuff was a bit mutated. \n\nIt was after 7:30 when she pulled into Ryan's drive-way. After getting out of the car, she got her things out, locked it and headed to the front entrance.\n\nOpening the door with her key, she could hear the stereo playing some soft blues. She immediately felt at home. She closed the door and proceeded through the foyer into the living space. Ryan was tossing a salad in a large wooden bowl with equally large wooden utensils. He was a fabulous cook and look at home in the spacious kitchen. \n\nDani put her purse down on the end table, the garment bag over the back of the sofa and the suitcase on the floor next to it.\n\nLooking up, Ryan gave her a huge smile.\n\n\"Hi, sweetheart, I didn't hear you come in,\" he greeted her. \n\nDani quickly walked over to him, took the utensils out of his hands, wrapped her arms around his neck and pulled his head down for a sweet lingering kiss.\n\n\"Hi, baby. Gosh, I needed that,\" she whispered against his lips. \n\nRyan grunted and pulled her in closer to his body, slanting his mouth to deepen the kiss. \n\nWhen Dani could take a calm breath again, she smiled at him and said, \"Ummm, it's nice to have my dessert first, but what is that delicious aroma.\"\n\nInstead of answering right away, Ryan gently caressed her butt and then squeezed it. He leaned in for another short kiss and replied before releasing her, \"Lasagna. It's another family recipe, Grandma McMillan's this time.\" \n\n\"Yum, I can barely wait.\" \n\n\"I'm sorry for being late, baby. I didn't want to leave any carryover work for tomorrow,\" Dani said. \n\n\"No apology necessary, sweetheart. I know how work gets sometimes.\"\n\nDani sat on a bar stool while Ryan took the lasagna out of the oven.\n\n\"Oh, by the way, I got a call from my mom. Apparently, Crystal finally broke and told her about us and she wants me to call her with details.\" \n\n\"Why haven't you told your folks about us before now?\" Ryan was curious to know. \n\nDani sighed deeply.\n\n\"To understand that, you'd have to understand that our Mom has been trying to get Crystal and I married since we turned eighteen. I think she was planning our weddings even before then,\" she said only half joking. \n\n\"She has clucked over and vetted every boyfriend and or date with the intention of finding us a marriage mate. Never mind that we wanted to grow up a bit before we took the leap. Oh, yeah and we wanted to find the right guy for us, not our Mom.\" \n\n\"It was hard for us to dodge the boyfriend inspection while they lived here, but once they went back to Jacksonville, we got a breather. Besides, if you remember, she and dad have been on that cruise with their friends the past 6 weeks. There was no point in telling her while they were on vacation, at least that's what I told myself. I know I could have told her before that, but really, I wasn't ready for the drama,\" she said. \n\nWhile they waited for the fresh bread Ryan made to finishing baking, Dani took his hand and led him to the sofa where she snuggled up to him. \n\n\"Anyway, I figured we could spend some time with them now that they're back. I have vacation time available. I could take off a week and if you can get away, I'd like to introduce you to my parents. I warn you, if you decide to accept this mission, you could self-destruct within sixty seconds of meeting them.\" Dani concluded, trying to paraphrase the old Mission Impossible TV series she knew from re-runs. \n\nRyan snorted and said, \"Oh, don't worry sweetheart, I can handle them. You forget, I've been dealing with my family on the marriage subject for more years than you. As for visiting them, yes we can do that in a couple of weeks.\"\n\nAfter the meal and cleaning up the dishes, Dani put in a call to her mother. It was almost nine, but she knew her parents would still be awake for some time.\n\nShe was sitting on the sofa with Ryan lying with his head in her lap, watching TV. The sound was turned down, low enough not to interfere with her call, but loud enough for him to hear. \n\nThe phone was on its fourth ring when Dani's mother answered. \n\n\"Hello?\"\n\n\"Hi Mom, it's Dani.\" \n\n\"Hi, sweetheart, how are you?\" she answered.\n\n\"I'm great, Mom. How are you and Daddy?\" \n\n\"We're fine, except for the usual aches and pains you get when you're getting on in years.\" She replied.\n\n\"I was beginning to think you weren't going to call me back today. I was going to give you until tomorrow to fill me in on your young man, but I'm glad you called. Your father has been nagging me to death about when you're going to call back. He's over at Carl's playing Dominoes right now, so I got a break,\" she chuckled.\n\n\"So, what's he like? Where did you meet him? Is he from a good family? Does he have a brother for Crystal?\" her mother asked almost without taking a breath. \n\nDani knew her mother didn't like Crystal's boyfriend, Isaac because he'd been married before and had two children, from two different baby mamas, neither of whom were his wife. \n\n\"Hold on, Mom, one question at a time. First of all, his name is Ryan Sinclair, he's 33 years old, he's a great guy; dependable, considerate, good with animals, kind to strangers...\" she trailed off resisting the urge to laugh out loud.\n\nShe felt Ryan's shoulders shake with laughter at her description of him and pinched his butt, which only made he laugh again. \n\n\"Are you trying to be smart, Danielle Marie?\" her mom admonished in that stern motherly tone. But Dani knew she wasn't angry.\n\n\"No, I'm not trying to be smart, Mom. You asked,\" she reminded her mother. \n\n\"Ok, child, get serious; good with animals, kind to strangers? Huh! Does he have a good job? He's not one of those men who still lives with his mama, is he? Do they still call them scrubs?\n\n\"Mom, you're incorrigible,\" Dani chided. \n\n\"Ryan has his own business and his own home. Look before the game of twenty questions grows into one of two hundred questions, we're coming up to visit you and Dad in two weeks and we'll be happy to answer all of your questions, within reason.\"\n\n\"Within reason? What is that suppose to mean? I'm always reasonable, ask your Dad,\" her mother said. \n\n\"Seriously?\" Dani thought and almost choked on a laugh.\n\n\"Ha! That man would agree with anything you said,\" she declared. \"If you said the sky was falling, he'd yell, \"Watch out!\"\n\nRyan didn't know what that was about, his mind having drifted back to the TV show, but he found Dani's response amusing. \n\n\"As to the meaning, it means please, please don't embarrass me. He's my boyfriend, not a defense witness being questioned by the prosecution. Besides, you might run him off,\" She said, trying to head her mother off at the pass. \n\n\"Not a chance in hell,\" Ryan whispered.\n\n\"Ok, Ok. I won't cross examine him, but your Dad and I need to know that he has your best interests at heart. From what Crystal told me, this is serious. We love you both. We may grill you about your boyfriends, but it's only because we want the best for you,\" her mother explained. \n\n\"I know Mom,\" Dani said quietly. \"We love you too and although we complain about your interest in our relationships, we do understand your motives.\" \n\n\"I'm glad you do, sweetheart. Give your young man my regards. I'll let your Dad know you're coming. Call us a couple of days beforehand. Goodnight, baby, I love you.\" ",
        "\"I love you too, Mom. Give Daddy a kiss for me and tell him I love him. Goodnight,\" Dani said and ended the call. \n\n\"Whew! That was just a phone call; imagine what it'll be like face to face, Ryan.\"\n\nTurning on his back, Ryan said, \"It'll be fine. Your parents are just like mine, they want the best for their children. Besides, my intentions towards you are completely honorable, and most definitely lascivious,\" he ended with a smirk. \n\nBending down, Dani gave him a soft closed mouth kiss. \n\n\"Yeah, but they don't need to know about the lascivious part, although, personally I'd like another demonstration. How about a shower and then you can uh, give me a refresher course.\"\n\n\"How about a refresher course during the shower,\" he suggested. \n\n\"You're on, Mr. Sinclair,\" Dani agreed, nudging him off her lap. She got her purse from the while Ryan gathered up her garment bag and suitcase. \n\n* \n\nRyan sat the suitcase on the floor in the closet and hung up the garment bag, then pulled Dani into the bathroom. \n\nThe bathroom was spacious, proportional to the size of his bedroom. It included an enormous frameless glass shower stall that could easily hold six adults. The walls were adorned with a beautiful simple handmade ceramic tile with a three inch border of smaller glass tiles, midway between the ceiling and the floor. There was a long vanity area with two vessel sinks. Over each sink was a large dark walnut framed mirror which matched the cabinetry. \n\nThe floor was covered with a mid-tone gray slate tile.\n\nThe bath tub was over-sized, more than large enough to easily accommodate Ryan and another person. It was a spa type, rectangular with a wide profile. Above the tub was a sizable window that looked out into the gorgeously manicured outdoor space, sporting a neutral colored cloth shade for privacy. The toilet was in its own separate room, a water closet. \n\nThe shower was outfitted with two rain scan shower heads in the ceiling, two hand-held shower mounts and a series of jets in the wall, a temperature control panel and a bench seat on one side. All in all it was a very masculine and sexy bathroom. \n\nAs soon as they crossed the threshold, Ryan started to undress Dani, leaving her clothing strewn about in their wake. By the time they reached the center of the room, Dani was only wearing a pair of lacy white panties. \n\nShe tugged Ryan's shirt out of his jeans, sharing soft kisses as they continued to undress each other. Dani pulled his shirt off of his big shoulders, while kissing his chest, loving the feel of the silky blond hair which tapered down into his groin area. \n\nInstead of unbuckling his jeans right away, she stopped to briefly indulge her fascination with Ryan's growing erection. She felt his cock jerk at her touch which created a corresponding response in her aching passage. Ryan's palms slid into the back of her panties, lifting and separating her firm twin globes, holding her loosely as she continued her attention to his swelling cock. \n\nHe sucked gently on the side of her neck, careful not to raise a bruise on the smooth surface, and then licked it. His blood was thick with arousal, his caresses languid as he breathed in her scent and stroked her body into flames. \n\nDani loved the feel of Ryan's hard body, but she wanted more. \n\nSliding to her knees, she quickly opened his belt, unbuttoned and unzipped his jeans. She leaned into his crotch and inhaled the earthy musky scent, rubbing her face against his hardness. Unable to wait any longer, she slid his briefs and jeans down in one swift move. His throbbing cock held down by his tight clothing, slapped up against his hard belly, the tip moist with pre-cum. Ryan stroked her head and stared at her in anticipation. \n\nDani gently took his cock in her hand and kissed the head, then rubbed it against her lips, eliciting a grunt from Ryan and a spurt of pre-cum which she licked leisurely. With her tongue, she traced the fat vein underneath the thick cock, savoring the texture and taste. With the moisture aiding the movement of her hand along his shaft, Dani returned to the crowning jewel at the top. \n\nRyan, with his muscled thighs trembling, pushed the head of his cock into her mouth, rocking his hips with more urgency as she slurped and bobbed his thick tube in and out of her oral cavity. Taking panting, rasping breaths, the speed of his movements increased as Dani struggled to take in more of his raging hard-on. \n\nHe felt the first tingles of approaching orgasm which he tired to stave off by slowing his speed. That only made him more aware of every stroke, every lick, and every flutter of her gloriously talented tongue. \n\n\"Oh, fuck Baby, so good... so fucking good...suck my big dick, suck it. Oh, fuck yeahhh! Damn! You want my cum, baby? Fucking gonna...give it to you... oh, shit!\"\n\n\"Ummmm,\" Dani moaned around his thick meat before licking the length. She pulled back to suck on the bulbous gland, her tongue tracing the slit, sliding around the rim...licking, sucking, cheeks billowing to increase his pleasure.\n\n\"Fuck... fuck... Fuckkkkk! Shit! Ohhh...ummmmm... goddamn! Here it comes baby, here it comes... ugghhhhhhhhhh! \n\nRyan shouted and groaned as his balls constricted and his back arched, sperm rushing through his quivering shaft into Dani's hot waiting mouth. He stiffen, holding Dani's head in a death grip as he shot powerful jets of cum over and over while she stroke him with one hand and rolled his aching ball sac with the soft fingers of the other. For long minutes, his orgasm rolled over him until the volley of cum eased and his cock started to lose some of its rigidity. \n\nDani continue to gently caress his dick with her tongue, lavishing attention on the head, the length, and then his balls. After a few minutes, she eased off and looked up at him. Ryan head was still thrown back as he enjoyed the final pulsing minutes of his fading orgasm. \n\nWith his breathing returning to normal, he looked down to see that Dani still kneeling in front of him. She was beautiful. Her sweet milk chocolate skin glowing, her lids heavy, her eyes glazed with desire, her lips softly swollen and the fingers of her left hand was now stroking her hot, fragrant pussy. \n\nHurriedly, he kicked out of his Jeans. \n\nPulling Dani up, Ryan enfolded her in his arms, his dick rising at the press of her warm, moist body. Lowering his head, he slipped his tongue into her mouth, tasting the last vestiges of his climax. \n\nDani laved her tongue under his top lip and then went in search of his broad tongue, nipping and tasting. \n\n\"Mmmmm,\" Ryan sighed, his tongue dueling with hers.\n\n\"Mmmm, baby. I can't get enough of you,\" he said between nibbling her lips. \n\n\"You're so fucking hot; you're going to give me a heart attack one day. Your mouth is so sweet and sexy, it should be considered a lethal weapon,\" he claimed with a grin.\n\n\"It's your fault, you shouldn't have such a big juicy cock,\" she grinned.\n\n\"I don't think my panties have been dry since we met. Then you popped wood on our first date. There was no way I couldn't feel it,\" she said as Ryan continued to hold her, his hands caressing her buttocks. \n\nLooking down at her, he said, \"I'm sporting wood now; let's find something interesting to do with it.\"\n\nHe pulled her to the big shower stall and turned on the water to the desired temperature. The jets were already pre-set to reach all the right places on their bodies. Helping Dani into the shower, Ryan joined her, soaping up a loofah, then gliding it over her pretty body. It didn't pass her notice that his bare hands were slooshing over her silky skin more than the loofah. \n\nRyan went down on his knees and proceeded to lather between her thighs, stroking her outer and inner labia. Dropping the loofah, he worked his middle finger into her vagina. Dani clutched his shoulders as she became weak in she knees and pressed back against the shower wall. \n\n\"Oh, Ryan,\" she murmured, spreading her legs wider to give him better access to her throbbing flesh. Ryan continued to play with her as she pushed her hips into his caress, whispering his name over and over. \n\nReaching up, he pulled down the shower head from the wall and started to rinse her nether region, opening her folds to his tender ministrations. Dani withered as his fingers resumed massaging her inner walls while the water from the sprayer washed away the soapy residue. \n\nRyan dropped the shower head; then he leaned forward, took her clitoris between his lips and sucked gently as a second finger joined the seduction. \n\n\"Oh, ooohh...... fuck...... Ryaaaaan!\" Dani screeched as she felt the first rushing sting of approaching climax. Ryan increased the speed of the fingers plunging into her warm depths drawing out her pleasure until her body jerked. But before she could spiral into a dizzying orgasm, he stood up and turned her to face the wall. \n\n\"Bend over, Baby,\" he ordered, his voice a deep husky whisper at her ear.\n\nDani bent, pressing her forearms against the shower wall as a cushion for her head. When she was in place, Ryan quickly ran his hand down her back to her buttocks, sliding over the soft plump mounds as she shuddered in pleasure.\n\n\"Mmmmmm, I love this ass,\" he said with a grunt. \n\nWhack! \n\nDani jumped as she felt the flat palm of Ryan's hand strike her ass. Her breath came out on a long ragged hiss.\n\nWhack! \n\nWhack! \n\nWhack! \n\nDani's body quivered, her legs felt rubbery and her buttocks stung with erotic heat that spread to her aching pussy. \n\nWith his hands on her firm flesh, Ryan spread her cheeks, bent his knees and rubbed his cock across her plump juicy lips from behind. Then he slipped the head to her vaginal opening and pressed in with a groan; the big head and two inches popping inside of her. \n\nShe was still tight, damn tight.\n\nDani gritted her teeth then sighed; her orgasm was just out of reach.\n\nRyan heard Dani's sigh and waited for her body to adjust to his thickness, rubbing her back to ease the tension in her body as he stood still. Once she adjusted to the girth, he slid more of his shaft in, inch by inch until she had all of him. \n\nReaching under her, he took her firm breasts into his hands, his thumbs teasing the nipples while his cock slowly rocked her humid passage. For long minutes he caressed Dani while he slowly increased the slide of his thrusting. Then, ratcheting up the pace, he hammered into her depths over and over, his hands now back at her hips, gripping her with the tension of his arousal and approaching orgasm. \n\nHe could feel her pussy clutching at his shaft, the frequency increasing as her own release approached. Panting, almost crying for relief, Dani pushed her ass back onto Ryan's pubes as he rocked his cock into her throbbing pussy. \n\n\"Oh, oh, ohhhhhh...mmmmmm, yes..... yessss.... yessssssss...oh..... fuck...... yesssss...I'm gonna...I'm gonna...cummmmm....baby....baby... baby! Oh fuckkkkkk!\" \n\nDani moaned, her body jerking at the pleasure/pain of Ryan's hand sliding down her body and pinching her swollen clitoris. She opened her mouth and screamed in ecstasy as her orgasm whipped her into an erotic frenzy.\n\n\"Fucking yeahhhhhh!\" Ryan yelled as Dani's inner walls spasmed and choked his swelling cock as he released his churning load into her welcoming body. \n\n*\n\nEventually their orgasms were spent. \n\nExhausted Ryan leaned against Dani's back, breathing heavily and stroking her belly. They stayed in that position a few moments longer, then Ryan stood up and slowly eased his cock from her tight pussy. He drew Dani back under the shower spray and quickly completed washing her body and his own, rinsing with the hand held shower head.\n\nStepping out of the shower, he dried her body and she dried his. Taking Dani by the hand, Ryan led her to bed where they dropped off into a deep dreamless sleep."
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "wm-bf",
        "family",
        "erotic romance",
        "commitment"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-04"
}