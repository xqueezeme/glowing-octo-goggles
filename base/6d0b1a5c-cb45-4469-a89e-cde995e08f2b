{
    "title": "Flying Blind Ch. 02",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nThis story is based in an alternative universe, where history took a different course than the one depicted in my other stories. It also takes place at a fictional town in Colorado called Crystal Pass and a fictional school called Four Corners University.\n\nThe following story contains lesbian sexual activity.\n\nProofread by \"hkf999\"\n\n---------- \n\n\n\"The blind cannot see. The proud will not.\"\n\n~ Russian proverb\n\n---------- \n\n\"How long has she been like this?\" Sasha asked. Her friend Madison was bouncing around her sound-proof booth like a woman possessed. She was smiling and dancing and looking far more energized than either she or her boyfriend had ever seen.\n\n\"Ever since I got here,\" Billy said, his voice betraying both his amazement and his amusement. \"She was already gearing up a ton of playlists. Sasha . . . she's going to play some stuff that's actually kind of cheerful.\"\n\nSasha collapsed back in her chair, but she was grinning from ear to ear. \"She got laid, didn't she?\"\n\n\"I guess,\" Billy replied. \"I've never, ever seen her like this. Maybe she was kidnapped by aliens?\"\n\nMadison turned on the external microphone. \"Hey Billy, would you mind going and grabbing me a soda from the fridge? I'm thirsty, thirsty, thirsty --\" she chanted cheerfully, letting the mike cut out as she continued her little dance. \n\n\"Aliens?\" Sasha muttered, thinking the idea might not be so far fetched.\n\nMadison was on Cloud Nine for the first time . . . well, ever. Last night, she had gone on a date with the most beautiful, amazing, athletic, sexy woman on the planet. She had shifted into her bat form while her date Heda had shifted into the form of an eagle, then they had flown across the night sky as a pair. Madison, an outcast in the world of lycanthropes, except for her friend Billy and his human sorceress girlfriend Sasha. Then Heda had come along and, despite all of Madison's unknowing attempts to screw things up, they had become friends. Last night, they had been lovers. Madison had lost her virginity to a member of the \"In\" crowd, and it had been amazing! For once, she did not care that the rest of the shifter community looked at her like a freak just for being blind. \n\nShe heard the door open. She did not have her echolocation on, since she did not need it in such a confined and familiar environment, so she assumed it was Billy with her drink. \"What took you --\" She was cut off when she was pulled up against a hard body with firm breasts and was kissed with definite vigor.\n\n\"Unless Sasha has changed teams,\" Madison said at last when her lips left those of the intruder, \"or Billy shaved and changed genders --\"\n\nHeda was smiling as she watched the girl's face blush. \"Still wondering who I am?\" she whispered. She took Madison's hands and put them on Heda's ass. \"Feel familiar.\"\n\nMadison buried her face in the crook of Heda's neck. \"Hmm, pleasantly firm . . . perfectly rounded --\"\n\nOutside, Billy and Sasha were both watching on with pure joy as their friend felt up Heda Adler in the sound room at the campus radio station. Heda had shown up to say hi just as Billy was returning with the soda, so she had taken it in instead. Admittedly, Diet Pepsi seemed to be the last thing on Madison's mind at this point. \n\n'Yeah, they definitely had sex.\" For a moment, Sasha was vexed. She was Madison's best female friend. Female friends talked about this sort of stuff.\n\nMadison blushed harder. \"They . . . uhm . . . they're watching aren't they?\"\n\nHeda glance over her shoulder and saw that Billy and Sasha were giving two wild thumbs up. \"Nope,\" she said.\n\n\"Liar.\"\n\nHeda kissed the girl's nose. \"Maybe. Hey, you available tomorrow night?\"\n\nMadison made an unflattering face. \"No. I've got an early evening DJ gig for a private party, then I've got to be back here. Somewhere in there, I need to get started on my homework.\" \n\n\"Damn. I was going to see if you wanted to grab dinner or something.\" That \"something\" conveyed a certain promise that made Madison's face light up a bit.\n\n\"How about Tuesday?\"\n\n\"Can't,\" Heda replied. \"I've got practice, and my stick fighting class starts after that. Stupid combat classes,\" she growled. Four Corners University, which was built by and secretly catered to shifters, had a number of courses on the curriculum that normal humans did not know existed, including a number of weapons classes, magic manipulation courses (for those with the gift), and paranormal history classes. \"I promised my mom I'd stick with some kind of training.\"\n\n\"It sounds cool. I was . . . discouraged . . . from taking stuff like that,\" Madison said, her voice becoming bitter and a bit fragile. Heda did not like her voice like that. She liked Madison's voice when it was low and sultry and sexy-as-hell, which is the way it usually was when Madison was in this booth. It had been the voice Madison had been encouraged to use when they had made love the night before.\n\n\"I'm sorry. That sucks. Hey, I think we might be able to voice your complaint against Alvin this Friday.\"\n\nMadison looked cautiously optimistic. \"Really? I didn't think the Council convened until the third week of school.\"\n\n\"Yeah, but Reichert is back for classes, so I called his office and --\"\n\n\"I'll wait,\" Madison said, her optimism dissipating. \n\nHeda was confused. \"But Reichert seems to like me, or at least he respects my mom. The Reptile King's word would carry a lot of weight.\"\n\n\"Yeah, but . . . just never mind, okay?\"\n\n\"Just tell me what's wrong.\"\n\nMadison actually pulled away and started pulled out more CDs. She looked agitated. \"Reichert doesn't like me, okay? He's this great and powerful macho alpha, and I'm --\" She stopped and tapped her temple, drawing attention to her non-functioning eyes. \"I'm a DM, remember?\"\n\nHeda hated that phrase. DM stood for \"Darwin's Mistake,\" and it was about as nasty of a thing you could say about a shifter. Back in the day, shifters with the kind of disability that Madison suffered would have been left to die in the wild, similar to the behavior exhibited by their wild brethren. The human side of shifters had eventually caused them to ban such practices but even hundreds of years after the fact, not all shifters agreed with what they considered \"charity.\" To many, it should still be survival of the fittest. Never mind that shifters like Madison could still live perfectly normal lives as part of the human community. Shifter purists thought that leaving them in the gene pool was dangerous. What was really stupid, particularly in Madison's case by Heda's way of thinking, was that she was Gifted. A Gift was a special ability or abilities that manifested itself in only a small percentage of the shape-changing community, and these Gifts were generally looked on with great pride and awe. Heda was Gifted, and her Gift allowed her to become stronger, faster, and see farther than normal. \n\nMadison also had a Gift, though only the four people in the radio station at that moment actually knew about it. Madison actually was able to use her souped-up bat ability of echolocation in her human form. She used sound waves to \"see\" the world around her, in many ways more accurately than someone would with normal sight. When it was on, it was impossible to sneak up on the young woman. But Madison still could not see things like \"color\" as far as most people understood the concept, and she could not see the auras given off by other shifters. She had hid her special ability from everyone by hiding her eyes behind her \"blind girl\" sunglasses. A shifter's eyes glowed the color of his or her aura when a gift was being used.\n\n\"Hey, he seemed like a pretty stand up guy to me,\" Heda said. The Kings and Queens of the animal families held a special reverence in the minds of the rest of the community, so having someone be so openly distrustful of one struck a nerve with Heda.\n\nMadison sighed. \"He . . . let's just say I took his anthropology course a year ago as an elective, and he made his disdain pretty obvious.\"\n\nThat stung Heda a bit. She, like many others, tended to put the monarchies up on pedestals, though each shifter had different reasons for doing so. She liked to think that Kings and Queens were wiser than your average person, though part of her realized that was an irrational assumption. \"What did he do?\"\n\n\"He . . . listen, let's just forget it. You still have a future in the community. No need to screw with that by getting you in trouble with the All Mighty Reichert.\"\n\n\"Please, just tell me.\"\n\nMadison was looking very uncomfortable. \"He told me the class would probably be too hard for 'someone like me,' and kept encouraging me to drop out until the due date was passed. I aced all the homework and the first test, but he kept after me until he realized I wasn't leaving. Then it seemed I had to work twice as hard as anyone else. I decided I was going to get the best grade in the class, just to show him up, but I almost lost out due to a bullshit point deduction on the final.\"\n\n\"What did he deduct for?\" Heda asked.\n\n\"Penmanship. I took it before the department head, who was pure human, and challenged it. I managed to get the point back, though I wound up tying for the high score. With, of all people, Alvin Hannity.\"\n\nHeda was feeling a bit uncomfortable herself. The pedestal she had already put Reichert on was showing some cracks, if what Madison had said was true. Madison seemed to sense that discomfort. \n\n\"Sorry,\" she said, backing away as she felt the wind in her sails die down. \"I keep forgetting that no one is supposed to question the monarchy.\"\n\n\"No, you should. Just . . . carefully,\" Heda said. \"Listen, we can go after class on Friday and talk to him. He talked about not preying on other shifters as part of his welcome-to-the-neighborhood speech. He'd lose face if he didn't back that up.\"\n\nMadison really did not want to go, but she nodded anyway. Heda would just have to see for herself. \"Okay.\" She was saved by Billy poking his head in and telling her it was almost time to go on. \"Gotta work.\"\n\n\"And I'm doing a late practice tonight,\" Heda replied. The environment had changed a lot from when she had walked in, with Madison going from hot to cool over the span of one conversation. She placed one hand on the girl's shoulder and the other on the back of her head, pulling Madison closer and upward and planting a slow, gentle kiss on those wonderful lips. \n\nMadison felt that the kiss was just an attempt to buy off her affections after getting her upset. After about half a second, she did not care, melting into Heda's body like a human-sized tube of goo. Her skin was warm with desire and her brain was short-circuiting.\n\n\"Ten seconds,\" Sasha said, poking her head in the door and grinning.\n\n\"I'll talk to you later,\" Heda said, giving Madison's firm butt a quick squeeze before walking out of the booth. Upon the door closing, Billy turned up the speakers so that they could all hear the beginning of the show.\n\n\"Hello,\" Madison started, drawing out the \"l\" sound with that voice that made Heda's heart go pitter-patt. \"This is Madison, your hostess for an evening of the sounds you love We'll be getting to the music straight away, since everyone knows that there's a time for talk, and then a time for using your mouth for other things,\" she purred.\n\nThe eyes of everyone outside the booth were wide open. Heda because she was impressed, while Sasha and Billy had never heard the girl be so openly naughty before.\n\n\"We've got blocks coming from Joan Jett, Ozzy Osbourne, and Alice Cooper, but I thought we might start with a little AC/DC. After all, that means the boys and the girls can get a little thrill out of it.\" She looked towards the door that Heda had left through and said, \"We'll be starting things off with 'You Shook Me All Night Long,' and here's to life imitating art.\"\n\nIt took most of Heda's self control to not walk back into that booth and ravish Madison out of her mind right their on the spot, so she figured she might want to put some distance between them. For a little while. So she headed off to practice with dirty thoughts of what she wanted to do with her little were-bat running through her brain.\n\n------------- ---------------\n\nThe next day . . . \n\n------------- ---------------\n\nMadison was humming a merry tune as she left her Understanding Mass Media class. She needed to get her dorm and get dressed for the party she was DJ'ing for. It was going to be a tedious company event where she was going to have to work her ass off to get people actually moving on the dance floor, but it was a paying gig. Books were weighing down on her this semester, so the extra cash would help. She used her cane, keeping up the illusion of total blindness though she had kicked in her Gift the moment she was at the bottom of the steps. Sometimes she liked navigating campus just by listening, but she was in a hurry. \n\nShe was almost to her building when she noticed that she had company waiting, and not the welcome kind. It was Alvin and a couple of his goons, and they had already spotted her. If she were to change course now, they would know that something was up. Three on one were not good odds, particularly since Alvin was a pretty good fighter by himself, or so she had heard. 'He can't really be planning on fucking with me with a complaint already against him. Of course he could,' she thought. \n\nMadison grabbed her phone as she walked, just another young woman making a phone call. Nothing unusual about that. She just hoped someone was on the other end. She tried Billy's number, as it was still the first one on speed dial. Four rings and nothing but voice-mail. \n\n\"Hey Billy,\" she said, trying to keep her voice calm. \"I'm almost back at the room. Just reminding you that you're supposed to be picking me up in a few minutes,\" she said, saying that last part loudly. Maybe they'd leave her alone if they though Billy was going to be by soon. Then some little part of her twinged. 'Why do I have to keep calling Billy? I can handle this one --'\n\nHer thought was cut off as Alvin approached quickly and knocked the phone of her hand. \n\n\"Hey! Watch it asshole!\" she said. \n\nAlvin got up in her face. \"You're the one who'd better watch out,\" he growled, pressing up against the front of her body. She tried to back up but one of Alvin's buddies had moved in behind her. She thought it was another were-bat named Bill, and he was big and dumber than a fucking box of fucking rocks. The third guy was playing lookout.\n\n\"Alvin, cut the --\"\n\n\"Shut up you little bitch,\" he said, grabbing for her sunglasses so quickly that she was barely able to turn off her echolocation before her eyes were exposed. \"Those fucking things are false advertising. They hide that you're a fucking freak.\"\n\nThis was the part where Madison got into trouble. She was outnumbered, blinded, and overpowered. So the worst thing she could do would be say something like,\"Is that the same as using your hair to hide your mental retardation?\"\n\n\"What'd you say to me bitch?\"\n\n'JUST STOP!' Madison's mind screamed at her. But her mouth had other ideas. \"You didn't hear me? Great. You're deaf and dumb and I'm blind. Triple play.\" Instantly, she felt hard slap against her face. It was almost as shocking as it was painful.  \n\n\"You'd better learn some fucking respect you little defect.\"\n\n\"Screw you! I'm going to nail your ass to the wall you --\" Madison was shoved roughly to the ground, her knee coming down hard on the edge of the sidewalk. She wanted to scream out or cry, but she would not give him the satisfaction. In fact, she kicked out behind her with her uninjured leg, catching someone (she hoped it was Alvin) in the kneecap. \n\n\"Bitch!\" Alvin shouted, just before he kicked her in the ribs. \"Drop you charges against me to the Council, or things are going to get a hell of a lot worse.\" He put a foot on her ass and shoved her to the ground. \"Things like you should be put down, not coddled. You're a disgrace.\"\n\nMadison turned her face back toward him. \"Says the guy who needs his buddies so he can go pick on a blind girl.\"\n\n\"Dude,\" one of said buddies muttered, \"I hear someone coming. Let's get.\"\n\nAlvin shoved her back to the ground with his foot one more time before he took off, and Madison heard a \"crunch\" as he left. Covering her eyes, she looked out with her echolocation and saw that he had stepped on her sunglasses before running off. She got back to her feet, ginger with her injured knee and holding her ribs. She let out a pained gasp as she touched her side, wondering if anything was broken. A few tears finally forced themselves out of her eyes as her mind replayed how things should have gone, with her kicking all their asses and them crawling away instead of her. She'd been training hard, and she had not been able to get off anything except a couple of one-liners. She found her cell phone and picked up her backpack, which was a struggle to walk with due to the pain in her knee. She had to get back to her room on memory, because she was afraid of using her Gift and getting caught.\n\nShe was fumbling with the keys, trying to get into her room when she heard footsteps behind her. She spun around and tried to put herself in an en guard position . \"Leave me the fuck --\"\n\n\"Madison?\" came a familiar feminine voice. It was Sasha, probably coming to help her get ready. \"Madison, what's wrong?\"\n\n\"Nothing,\" was the reply, and Madison turned away and tried to get the key in the lock with shaking hands. \n\n\"Don't tell me nothing!\" her friend said, trying to turn Madison back around to face her. She saw the girl wince when she touched her side, and her concern began to grow. \"What happened?\"\n\n\"I . . . What's the fucking point,\" Madison whimpered. \"I've been training and I thought I was getting good but I still can't fucking defend myself.\"\n\n\"Was it Alvin again? God damn it, was it?!\" Sasha pulled out her cell phone and started punching numbers. \"No more. If the Council is going to drag their damn feet and do nothing, then the police --\"\n\n\"We can't bypass the Council and got straight to human law,\" Madison said, activating her Gift so that she could see and grab her friend's cell phone. \"You know the rules.\"\n\n\"Madison, this was an assault! And if the Council isn't going to do anything --\"\n\n\"You think the campus cops are any more likely to help? The Council will make sure that the complaint gets routed back to them. Maybe I should just --\"\n\n\"Don't you dare say quit! The Madison I know would never give in to someone like Alvin Hannity.\"\n\n\"Well YOU'RE not the one who has to go to work with fucked up ribs and a bad knee,\" Madison whispered, tears flowing freely now. \"I tried being the tough chick and I've tried standing up for myself, and for what? I can't defend myself and I shouldn't have to keep calling you --\"\n\n\"We're supposed to help you. That's what friends do. Hell, once Heda hears about this --\"\n\n\"You can't tell her,\" Madison hissed. \"I don't want her getting in trouble because of me. Promise me you won't tell her or Billy.\"\n\n\"I will promise no such thing. Billy would never forgive me, and you know he'll figure out what happened. He's smarter than both of us put together. And you think Heda won't notice you cringing in pain the next time you make out?\"\n\n\"I probably won't see her until Friday --\"\n\n\"She wanted to drive you to the job tonight,\" Sasha interrupted. \"I was going to help you pack and then she was going to pick you up.\"",
        "\"No,\" Madison responded, \"you have to give me a lift.\"\n\nSasha squared her shoulder, doing everything in her power to resist Madison's plaintive stare. \"I won't let you do nothing and I won't let you hide this from your friends.\"\n\n\"Why are you being such a bitch?\"\n\nSasha glowered. \"Because I have to be. Turns out you're pretty cool most of the time and I like you. So tell me what happened and I'll decide if you're going to the medical center first.\"\n\n\"I can't,\" Madison said, putting her bag down and going to drag out the heavy case of gear she used for smaller parties. \"I need the money Sasha. I really need it.\"\n\nSasha sighed. When Madison started reminding her how poor she was, she had to accept she'd never win the argument completely. Madison had struggled to make ends meet on more than once occasion, and her stubborn pride would not let the were-bat ask for help. \n\n\"Your health is worth more than your job,\" she reminded the girl.\n\n\"But not my rep. I start showing up late for gigs, then I might as well kiss the extra money goodbye.\"\n\n\"Madison, you were mugged.\"\n\n\"What?!\" came a voice from the door.\n\n'Damn,' Madison thought as she realized that Heda had shown up to give her a lift. She should have been happy to see her new friend, but all she could feel was a deep-rooted shame.\n\n\"Mugged?\" Heda reiterated. \"When? Did you get a good look --\"\n\n\"It was Alvin again,\" Sasha interrupted. \"I'm trying to get Madison to go get herself checked out.\"\n\n\"And to call the authorities, right?\" Heda strode in to get a better look at the red mark on the girl's face. \"You have called the cops?\"\n\n\"There's a special line at the campus police for shifter-related issues,\" Sasha said. \n\nMadison felt herself breaking down. \"I can't! I've got to get to work, and it's not like the cops or the Council are going to do shit anyway!\"\n\nSasha mouthed the words \"Do something\" to Heda, who racked her brain for an idea.\n\n\"Madison, either call the cops and let them do their job or I promise you I'll take care of matters myself.\"\n\n\"No! I don't want you getting in trouble!\"\n\n\u2028Heda picked Madison's phone up off the bed and handed it to her. \"Then make the call.\"\n\nMadison was fighting back more tears as she reluctantly accepted the phone and called the emergency number. Then she called her contact for the party and explained that she was running late but would be willing to do gig for free if they still wanted her. When they heard why she was late (at Heda's insistence), they completely forgave her and told her that they would not hold it against her at all if she was not able to make it in. While waiting for the Shifter Security Forces to show up, she was \"strongly encouraged\" to tell her friends what happened. Halfway through the explanation, Billy showed up in response to Madison's odd message, and he soon looked ready to kill someone. The only thing keeping him and Heda from going looking for blood was Madison threatening to tell the cops nothing if they did.\n\nThe were-bat recited the whole story to the Security Forces. Yes, she had encountered problems with Alvin Hannity before. Yes, she could recognize his voice well enough to identify him. No, she did not know for sure who was with him. Yes, she was pretty sure he was the one who had slapped her and then kicked her. When they finally took Madison over to the Medical Center for a check-up, everyone went with her but had to wait outside during the examination. \n\nHeda got a phone call from her roommate Joanna, who had seen some campus cops approach and talk to Alvin at the food court. \n\n\"Did they arrest his ass?\" Heda asked angrily as she paced around the front doors of the clinic.\n\n\"No, they just questioned him for a while. Why? Why would they arrest him?\"\n\n\"The son of a bitch pretty much mugged Madison. Hurt her knee, ribs, and smacked her in the face something good.\"\n\n\"Seriously?\"\n\nHeda was growling by this point, a noise not normally suited for eagles. \"Do I sound like I'm joking? How could they just let that rat-fucker walk?\"\n\n\"I . . . I don't know what they asked him, but they also talked to some of his posse. And Alvin looked pretty damn smug afterward.\"\u2028\n\nHeda stopped pacing and glared at the sky. The sky was unimpressed. \"I can't believe it. You'd think they would at least keep him overnight.\"\n\n\"His family has friends in high places,\" Joanna reminded her. \"My bet is they're playing the his-word-versus-hers game.\"\n\n\"Fuck! We're talking with Reichert on Friday. Hopefully he'll at least get Alvin to back down until the Council starts convening.\" Her conversation with Madison the night before came back to her thoughts. \"Hey, what do you know about Reichert?\" She figured a reptile shifter might have more intel on the King of Reptiles.\n\n\"Besides the fact that he's dreamy and that I'd like to --\"\n\n\"Joanna, focus.\"\n\n\"Uhm, he's probably the single most powerful shifter on the planet, his classes are insanely popular, his ass is hard as a rock --\"\n\n\"I mean is he an on-the-level kind of guy? Madison's worried that he might just blow her off because of her condition.\"\n\n\"Madison may have a bit of a persecution complex,\" Joanna snipped.\n\nHeda rubbed her eyes. The monarchs were held in some reverence by the rest of the shifters, and the monarchy of your own species was even more revered. Trying to get the were-cobra to doubt her own king would take some doing. \"Joanna, that's not fair. Just because someone is paranoid doesn't mean that people aren't out to get them.\"\n\n\"Not Reichert,\" Joanna reaffirmed. \"Hey, I didn't mean anything by what I said. If Madison needs someone to walk her home or to classes or anything, count me in. And count the guys in.\"\n\n\"Volunteering other people now?\"\n\n\"Babe, with these tits, I can convince any straight guy of just about anything.\"\n\nThat actually got a laugh out of Heda. Joanna really had no shame, which was fairly refreshing. \"You could probably convince ME of a thing or two.\"\n\n\"I promise, the second I think of batting for your team, you'll be the first person I sleep with. Just don't hold your breath.\"\n\n\"Wasn't planning on it. Hey, I'm not sure when or if I'll be in tonight. If Madison wants company, I'll probably stay with her.\"\n\n\"That's cool. Are you still going to be up for the movies on Friday, or do you want to skip?\"\n\n\"Let me see how this meeting turns out,\" Heda finished, then said her goodbyes. When she went back inside, Madison was on her way out. A tall, lanky handsome blond clerk at the front was checking her out, the ever-so-patient smile plastered on his face derived from the practice of dealing with sick and whiny people all day. This was just a few days after school had started. She wondered if he would still be smiling in a month. \n\n\"So the doctor left instructions to call if your ribs don't feel better or if breathing becomes a problem. You shouldn't need the pain killers, but you've got the sample packet just in case.\"\n\n\"Thanks,\" Madison said, looking really, really sad and pathetic. She seemed to be walking a little better, which was encouraging.\n\n\"No problem. My name's Detrius, by the way. And I already know that you are the infamous Madison Sloan. No, I'm not psychic.\"\n\nMadison almost smiled. \"I just gave you my student ID. Then I told you my name. Then you --\"\n\n\"Yeah yeah, my great secrets revealed. And I love your show by the way.\"\n\nThat perked Madison up a bit more. \"Thanks. I'll give you a shout out tonight.\"\n\n\"Are you still planning on working? Most people would take a night off after this.\"\n\n\"Those people must not have bills to pay,\" was the reply. She walked outside with her friends, and Heda gave her the rundown on Alvin's encounter with the cops. Another source of irritation to Heda was that none of the others even seemed that surprised. \n\n\"Probably best not say anything about Reichert either,\" Sasha said. \"Not that I don't believe Madison, but he can do no wrong in the eyes of most.\"\n\nHeda looked nervously towards Billy. \"I'm not trying to --\"\n\n\"It's okay,\" Billy interrupted, \"I basically think the whole King-by-might thing is archaic anyway. It's just a holdover from lycanthrope tribal tradition when physical strength was everything.\"\n\n\"Or speed,\" Heda put in. The Bird Queen was not the strongest of the bird shifters by far, having a hummingbird for a totem animal, but she was faster than hell, trained like a ninja, and was incredibly aggressive when provoked. Heda felt fortunate to have Samantha Brown as an old family friend. \"Madison, I've got a suspicion that this is where you'll get defensive and independent on me, but I don't think you should be walking alone until this gets sorted out. You know if you just came clean about your Gift, you could deal with him a lot more easily.\"\n\n\"It wouldn't stop him. It would just make him find other ways to screw with me.\"\n\n\"I'm beginning to think that Heda's right,\" Billy interjected, \"but the decision is up to you. Let's get you to the radio station, okay?\"\n\n\"Babe, I've got a student council meeting to go to. We're talking elections for the year,\" Sasha said, standing on her tippy-toes and kissing her boyfriend. \"I'm going to take off.\"\n\n\"Heda, could you walk her to the student center? I don't like the idea of you walking alone,\" he added, turning back to Sasha.\n\n\"Sure thing. Madison, you want company tonight? I can swing by after dropping Sasha off and picking up some stuff.\"\n\nMadison's heart rate picking up to a level dangerous enough that she almost went back inside the medical center. She very much wanted Heda to spend the night, but she did not want to appear weak. \"You don't have to,\" she muttered.\n\n\"Yeah, but I want to. I've slept on less comfortable things than the floor.\" \n\nMadison got nervous. \"You could sleep in the bed. You know, if you wanted --\"\n\nHeda cut her off with a kiss. It was not as passionate as they had been the other night, nor did it seem like an invitation. It was friendly, and it was a reminder that Madison could feel safe with her. \"I want. I'll talk to you later.\" She and Sasha headed towards the student union.\n\nWithout using her echolocation, Madison knew that Billy was grinning, and it caused her to blush. \"Shut up.\"\n\n\"I didn't --\"\n\n\"You were thinking something nasty. I know you.\"\n\n\"Whatever you say, oh Pied Piper of women's hearts.\"\n\n\"Remember the who 'shutting up' thing?\"\n\n---------- ----------------\n\nLater that night . . . \n\n---------- ----------------\n\nThe Cold crept around the One kept in its Spanish Mantle, a reinforced barrel that had only a hole for the One's head to stick through. This One was trapped, blindfolded, drugged and effectively trapped in the filth which had begun to accumulate over the course of the day. Its hands and ankles were cuffed together with wire, and the barrel was reinforced with magical steel. The One was going nowhere until the Cold had made the message clear. \n\n\"Why are yuh . . . you doing this?\" the One asked, spittle flying over parched lips. It would need water soon, as there was no reason to let It die before It understood.\n\nThe Cold did not respond It would communicate in Its own way and time. But the Message was only just beginning to be written. The Cold grabbed its tongue-tearer, a wicked device that looked like a pair of metal shears with a screw running through the handle. The One would be made to understand, and then the Enemy would remember what fear was like.\n\n----------- -----------------\n\nThe next morning . . .\n\n----------- -----------------\n\nMadison was afraid to move. She was spooning. Or was the correct dynamic \"being\" spooned? Her back was to Heda, and the other girl's arm was draped over her midsection. Her ribs felt better. She had shifted last night, which helped with the healing process, so she knew she could make it through her day without a problem. Her immediate problem was that she needed to pee, but she did not want to pull away from the comfort of Heda's body. They had not had sex, but Madison had allowed herself to be held and coddled, and she had gotten a small thrill from an intimacy she had never expected from a woman she would have once thought was beyond her reach. She did not want to leave that yet. She did not want to wake Heda up. But she REALLY needed to pee.\n\n\"You awake?\" Heda whispered softly from behind her.\n\n\"Yep!\" Madison replied, leaping from the bed and rushing to the bathroom. A few moments later, she let out a tremendous sigh of relief and said, \"Oh yeah. I needed that.\" She instantly heard Heda start laughing her ass off.\n\n\"How long were you waiting?\" the eagle shifter asked from the comfort of Madison's bed. She was dressing in her bra and boy-shorts, which was odd for her since she preferred sleeping nude. She just had not wanted to make Madison feel like she was expecting sex, so she had curtailed things a bit.\n\n\"Thirty minutes,\" Madison said, thankful Heda could not see her blush.\n\n\"It's okay just to get up and go you know.\"\n\n\"I've never done this before. I didn't want to wake you up.\"\n\n\"I can go back to sleep easy. It looks like you're feeling better.\"\n\n\"Yeah, I'm gonna be okay.\" Madison cleaned herself up and opened up the door. \"You don't have to babysit --\" she trailed off. She had paused to use her echolocation and found that Heda was sitting up, her body and her \"bed clothes\" there for Madison's viewing pleasure and making her forget all about her planned objection. \n\n\"It's not babysitting. If you weren't so intent on being willful, you'd probably admit that having a friend or two around these days wouldn't exactly suck.\" Heda heard the were-bat mumble something, which was probably as close to an agreement as she would get. \"I'd stay tonight, but weapons practice is going to run late.\"\n\n\"I understand. You know, I really should just move off of campus. I could take out a little more by way of student loans.\"\n\n\"I don't know if that would stop Alvin, unless you got some ass-kicking roommates.\" Heda stood up. \"I'd volunteer, but I think we're a little early in the relationship to be moving in together.\"\n\nMadison's ears perked up. \"Relationship. Are we dating? I mean, we had sex and I know you've done the one-night stand thing before and I'm not mad or anything because you're been really honest with me --\"\n\nHeda put a finger on the girl's lips. \"Yeah, we have a relationship. I might even say we're in the early stages of dating, which is weird territory for me.\"\n\n\"Weird?\"\n\n\"Yeah, I haven't 'dated' anyone since high school, and I'm year removed from that. So don't be nervous, because this is all kind of new to me too. I really like you, I think you're sexy, and . . . no, I'm not kidding,\" Heda said, cutting off a question from Madison that had been preceded by an incredulous look. \"You're damn sexy and I'd like to keep you that way. Now write up your class schedule and work schedule. I don't want Alvin getting another shot at you.\"\n\n------- ---------------------- \n\nFriday afternoon . . . \n\n------- ---------------------- \n\nMadison seemed even more depressed now than she did after being attacked. She was wearing her nicest clothes, sitting outside of Professor Reichert's office. He was finishing up with another student to close out his regular office hours, but he had promised Heda to schedule her in some time. Madison could not help but notice that he had made an exception for the daughter of Jessica Adler, an honor he did not extend to everyone.\n\nFinally Neil Reichert appeared at the door, escorting a blushing young lady out. Heda saw the red aura of an arachnid shifter, but did not see any of the tell-tale signs of a sexual interlude. It seemed that the Reptile King simply had that effect on young women. Probably older women too.\n\n\"Come in Miss Adler,\" he said warmly. \"I didn't mean to keep you waiting. Miss Sloan.\"\n\n\"Thank you for seeing us on such short notice Mr. Reichert. We just felt that this needed attention faster than it would take to convene the Council. My understanding is that even once they convene, personal grievances can take weeks.\"\n\n\"Indeed. So tell me what has our newest star athlete so worked up?\"\n\nHeda was puzzled. She thought she had been pretty clear that this was about Madison, but Reichert had not so much as glanced her way. \"It's about Madison. In the last week and a half, she's been harassed pretty seriously by Alvin Hannity.\"\n\n\"Ah yes, the Hatfields and the McCoys at it again.\" Reichert's sigh was a tad melodramatic. \"Who started it this time?\"\n\n\"Uhm, Alvin,\" Madison said haughtily. \"Same as the last six times.\"\n\n\"Mind your manners in my office,\" Reichert said coldly.\n\nThis was not how Heda had seen this going. \"Sir, she was being harassed on the first shifter night out in the woods. I saw several bats and a couple of birds chasing her through the trees and one of them nicked her wing.\"\n\n\"And you are sure it was Alvin Hannity. Miss Sloan, you make a great number of accusations against him and yet none of them seem to bear fruit.\"\n\n\"An investigation only actually goes somewhere if, oh say, someone actually looks into it. Wacky how that works.\"\n\n\"Madison, please,\" Heda said. \"Sir, I saw the incident in the woods, and that was before I even really knew Madison. Then she was mugged outside her dorm.\" She looked over at Madison and gave her a \"go on\" nod of the head.\n\nMadison straightened up and told the story as precisely as she could. \"I recognized Alvin's voice for sure. The other guy could have been Bill, but I don't his last name and wouldn't swear by it.\"\n\n\"I received a report from our sources inside the police department on the day you lodged the complaint. Alvin Hannity claims that he was with friends all afternoon and they will vouch for him. Do you have anyone to corroborate your side of things?\"\n\n\"She's got a breakdown from the doctor,\" Heda said. \"C'mon, there's obviously a history of harassment. I saw it the night of the meet-and-greet, and I'm sure Billy Forester and Sasha Baker will back me up on that. Then a bat shifter happens to take a swipe at Madison's wing while in the company of a bunch of other shifters, the same variety that hangs out with Hannity, and then she gets attacked just after she lodges a complaint that actually has a witness. And you don't even think it's worth investigating?\"\n\n\"Of course it is worth investigating. Both of the involved parties have been questioned, but right now it's her word against theirs.\"\n\n\"Did you even send a werewolf or something else with a good nose to see if Alvin was there? His scent would be fresh --\"\n\n\"Alvin Hannity could have been in that area any number of times recently. At the time of the attack, he has corroborating witnesses.\"\n\n\"I told you,\" Madison said angrily. \"He's just like the rest of them.\"\n\n\"Sir, is this really your whole stance on this? Until she gets beat up in front of more people, you're just going to sit back and watch? That's bullshit!\"\n\nAt that moment, Neil Reichert, professor of anthropology, took a back seat to the King of Reptiles. \"Miss Adler, I would expect better of you. I have already asked your companion to show some respect. I didn't think the same would be required of you.\"\n\nHeda felt her skin crawling as the animal part of her wanted to flee the predator before her. But the human part of her . . . the warrior part of her . . . was too proud. \"Respect is earned, not assumed,\" she said as calmly as her voice could manage, \"and right now I'm not seeing much worth respecting.\" She stood up, as did Reichert, and the two of them stared each other down. Heda knew she had to break the gaze, because she was not even close to being alpha enough to challenge a monarch, regardless of the species. \"You're whole opening speech was just talk, wasn't it? We don't prey on each other and all that? But that's the culture you're creating. Is all the shit you said just window-dressing?\"",
        "\"Miss Adler, you had best get out of my office. You want my help, then you come back when you're prepared to behave yourself.\"\n\nHeda turned to follow Madison, who was already on her way out. But before she closed the door behind her, she looked back one more time. \"I've met some good leaders and at least one monarch in my day. You're just a bully with a crown.\" Then she left, but even the door behind her could not completely hide the waves of anger flowing from the Reptile King.\n\n\"Well, at least he's not pissed at me this time,\" Madison muttered, amazed at how quickly and badly things had escalated.\n\nHeda did not say anything, but took Madison's hand as they walked. If Reichert was not going to do anything, then damn it Heda would.\n\n----------- --------------\n\nSaturday night . . .\n\n----------- --------------\n\n\"Yes Mom, I already agreed that pissing off the King of Reptiles was not a wise idea. Yes, I realize that I've only been here for a few weeks and . . . yes, I'll hold.\" Heda rolled her eyes and looked over at her friends, all of who were waiting patiently for the phone call to end. The group was going out to shoot pool as soon as Heda's mother got done chewing her out. Apparently Neil Reichert had called Mommy. \"She's got to get something out of the oven and scare one of her cooks half to death for under-cooking one of the chicken dishes.\"\n\n\"I can't believe he called your mother,\" Joanna said, who was suffering from having her Reichert-bubble burst. \"That's so . . . childish.\"\n\nPeter Smith looked disappointed as well, and his gaze went to Madison, who had finally perked up a bit from her glum listening to Heda's call. \"So it's really always been like this?\"\n\n\"Not the physical stuff,\" she said, sagging a bit under the weight of her life. \"That's new. But the rest, yeah pretty much. For a while, I tried making some noise about it, but Billy was the only one listening.\" Her face was swept by realization, and she said, \"Not that I'm blaming you or anyone else here.\"\n\n\"You should be,\" the falcon shifter replied. \"This is just ridiculous.\"\n\nHeda looked like she was going to agree, but apparently her mother returned.\n\n\"Mom, this is important to me. I am too capable of tact! Oh look who's talking, the lady who tried to ground me for beating her at Scrabble. Yes, it IS your fault that you interpreted that word as the plural of the slang term for 'posterior' instead of the correct definition of 'to estimate the value of something.' Yes mom, the extra letter 's' matters. Mom, I have not jeopardized my entire academic career. I'm just going to avoid dealing with that ass-clown directly. Okay, that might have been . . . okay, it WAS harsh and unladylike. Mom, you showed up at my birthday party coated in insectoid goo after putting down that rebellion, so it's not like you're always the poster-child for feminine virtues. Yes I get to hold that against you forever. I was nine, so you traumatized me in my formative years. Mom, everyone is waiting for me and . . . no, I don't need to talk to . . . Hi Dad. Yeah, she's being difficult. Thanks Dad, I so owe you for this. Talk to you soon. Love ya. Bye.\" \n\n\"Your dad seems much calmer than your mother,\" Carla said, trying not to snicker.\n\n\"Yeah, he needs to be. I love my mother to death, but she's a bit on-edge. Right now, he's carrying on a conversation with absolutely no one just so that my mother thinks that he's still discussing my behavior, allowing us to make our escape.\"\n\n\"Won't she just figure out the ruse and call you cell phone?\" Anthony asked, his eyes roaming over Heda's body.\n\n\"Good point,\" Heda replied, tossing her cell into the drawer of her nightstand. \"And quit undressing me with your eyes.\"\n\n\"No.\"\n\n\"Undress one of the other girls, besides Madison, or I'll gouge your eyes out.\"\n\n\"I accept your terms.\" He turned and looked at Carla, who was crammed up against him due to the large number of people in the fairly small dorm room. \"How you doin'?\" \n\nCarla rolled her eyes, but she had to smile. Anthony could do that to you, namely make you want to hug him and kill him at the same time.\n\nHeda was glad to see Carla smiling at all. She had been captured and tortured by some psychopath who wanted to deliver a message to someone, but Carla had not been told what that message was or who was supposed to receive it. She had been trying to claim her life back one day at a time, and she was going better than most could have expected. \n\nThe phone rang again, but Heda just stared at it. \"It's not possible. Dad can distract her for at least thirty minutes.\"\n\nJoanna picked up the phone. \"Could actually be for me,\" she grumbled. After a moment, she looked dead serious. She put the phone down and, \"Emergency shifter student meeting,\" she said, sounding worried. \"Everyone required to attend unless they've got a damn good reason.\"\n\n\"Every shifter?\" Heda asked. \"Aren't there like --\"\n\n\"Thousands of us?\" the blond replied. \"Yeah. So whatever this is has to be big.\"\n\nThe group put their plans on hold and headed up to the volleyball stadium where the meeting was to be held. They had all been told at sign-up that if there was any breaking emergencies that affected all shifters, that was where they were supposed to go. By the time they arrived, there was already a sizable gathering. \n\n\"Okay everyone,\" the now-loathed Neil Reichert said loudly as he stood up on a makeshift platform, \"a situation has arisen that requires our immediate attention. As most of you know or should know, a shifter named Carla Cowan was abducted and imprisoned by some unknown person or persons. It would appear that this vile creature is not done yet. Another shifter has been kidnapped.\"\n\nHeda's small group of friends quickly gathered around Carla as if to protect her from the memory of what had happened. It would not work, but Carla admired the intent. \n\nCarla was not going to stay in the background though. She looked enraged. \"So the second victim was returned?\" she asked loudly, immediately getting everyone's attention. She, if anyone, deserved to speak.\n\n\"No,\" Reichert replied grimly. \"We were sent . . . a trophy. No, I will not discuss what it was, but there was a note, and the authorities are convinced that this is the same offender. We believe that shifters are being targeted specifically. Mundanes and even magical humans do not seem to be his or her targets.\"\n\n\"So do we know anything about this guy?\" someone shouted from the audience.\n\n\"No, not as of yet. Except whoever it is has an intimate knowledge of shifters and our culture, including the ability to identify them somehow. We cannot rule out that he or she IS a shifter, because to be able and capture one of us is not easy for a normal human. Now we do not want to cause a panic, but the Council members have, in advance of their emergency meeting, contacted me to tell me that any shifter who feels it unsafe to remain here at this time will receive assistance in transferring to another institution.\" He made a pushing-down motion as grumbling began to emerge from the throng. \"Please, keep calm. We have a number of universities that have a wide variety of curriculum, and the World Council would continue to support funding --\"\n\n\"But they aren't shifter schools, are they?\" someone else shouted.\n\nPeter looked a bit flustered himself. \"This is one of only two schools in the country and one of only a few in the entire world that support our kind, and this is the ONLY one that is able to support such a wide variety of us. How do we go somewhere else? How do we know that whoever this is won't follow us?\"\n\nReichert shook his head. \"There is a reason this individual has chosen Four Corners University. If the goal was to just pick off shifters one-by-one, then walking into the lion's den as-it-were would be very dangerous.\"\n\n\"No,\" Carla said, softly at first and then with much more force, \"Whoever it is wants something here . . . wants someone. Every 'message' has a recipient. We need to find out who that recipient is.\"\n\n\"And the authorities are looking into it.\" Reichert met the audiences entire gaze all at once. \"Regardless, the safety of the shifters on this campus is our top concern. The council and I will not allow our kind to be preyed upon.\"\n\nHeda glowered at him from the anonymity of the masses. 'You'd let Madison get preyed upon,' she thought.\n\nThe Reptile King was oblivious to Heda's distaste at the moment. \"If you want to change universities, there will be a special representative at the Registrar's Office starting tomorrow to help with the process. If you want to stay, there are a guidelines that must be obeyed. First, no shifter should be out alone after dark, and ideally we would like for you all to at least go in pairs during the daylight as well. If you leave campus to hunt or just stretch your muscles, take others with you who can keep up in your environment. I would actually advise going in groups of three or more, just to be safe. For those remaining, we are going to be starting a 'neighborhood watch' program. A number of you will be asked to head up teams, so be listening for your names in just a moment. If I do not call your name, then find a group and head home. Further instructions will be sent along shortly.\"\n\nReichert started rattling off names as Heda and her friends started talking class schedules and so forth. None of them could quite wrap their brains around a serial killer that was targeting shifters, so they simply did the best that they could to deal. It did not help matters that Heda heard her name called out over the crowd. All of her friends looked on with curiosity as she made her way to the podium and the King of Reptiles. She was one of perhaps twenty students, and she was joined by her fellow bird shifter Peter Smith. Her gaze met Reichert's for a moment, and it was not friendly on either of their parts. \n\n\"After talking with the Council, your names were put forward as some of the better combat-trained shifters on campus, and you are also leaders. Even those of you who are new here,\" he continued, his eyes glancing towards Heda, \"have shown an aptitude towards leadership. We will need that. Each one of you will be given overlapping zones on campus to keep an eye on and be responsible for. All of you will be given phones with walkie-talkie features for you and your back-up, who you will choose to act as a point-of-contact when you are drawn away to other responsibilities. All of you who choose to remain and accept these responsibilities will be able to get a free completion for one class not directly required for your major. This will allow you to free up more time for keeping track of things. This offer goes for your back-up as well. If you see or hear anything suspicious, contact the Council office. The phone there will be manned twenty-four-seven until this creature is caught.\" He looked at each one in turn. \"Do NOT play hero. If you think you've found something, alert myself or the council. We have no idea how dangerous this man or woman is.\"\n\nHeda was a little conflicted. This type of leadership was more what she had expected of him. Time to push her luck a bit. She raised her hand.\n\n\"Yes Miss Adler?\" \n\n\"Maybe we can use the radio,\" she said. \"Madison --\"\n\n\"That DM?\" one of the others scoffed, and Reichert was forced to intervene before Heda could threaten anyone.\n\n\"I don't see how your friend could help us,\" Reichert said. \"Please --\"\n\n\"Yeah, how on earth could someone with a popular radio show that could distribute information quickly to the entire student shifter population POSSIBLY be of any use,\" she said, sarcasm pouring from her mouth. \"It's a much better idea to try to get a hold of thousands of people one at a time.\"\n\n\"Insolent bitch,\" a reptile shifter growled. For a moment, it looked like there was going to be a full-fledged species brawl as Peter moved up to support his fellow avian. \n\n\"Stop,\" Reichert said, his voice so stern and hard that even Heda felt little choice but to back down. \"We cannot allow ourselves to be divided right now.\"\n\n\"And we also need to use whatever resources we have available,\" Heda replied, taking a step back. \"Sir.\"\n\n\"I will take it under advisement,\" Reichert replied.\n\nHeda nodded, a slight gesture of animalistic submission, then backed away towards her friends.\n\n\"What happened?\" Madison asked.\n\n\"I . . . kinda volunteered you to be a communications hub for the Shifter Emergency Network.\"\n\n\"No really, what happened?\"\n\nBy the time they all got back to Heda's and Joanna's dorm room, Madison had finally accepted that she was getting dragged into this whole mess whether she wanted to be or not. \n\n\"Hey guys,\" Heda said after everyone had gotten settled, \"I was kind of joking with Madison about moving in together, but maybe it's not such a bad idea. We could probably get out of our housing contracts at this point and find an apartment or a place off campus.\"\n\n\"Some big kind of communal orgy type thing?\" Anthony asked, his face riddled with signs of glee.\n\n\"No.\"\n\n\"Let's not discount the idea --\" Joanna started to say, then got shot down by a glare that Heda had learned from her mother. \"Never mind.\"\n\n\"I can't say that the idea doesn't have appeal,\" Peter said. \"Living together I mean. I don't do the group orgy thing.\"\n\nMadison was attempting to quietly blend into the furniture, which just seemed to draw more attention.\n\n\"What about you, Madison?\" Carla asked. \n\n\"I can't,\" the bat-shifter replied. \"I don't have that kind of money. I have financial aid and stuff, but my scholarship only helps with on campus housing.\" The idea of living as part of a close-knit group, in one confined area, might intimidate some people. For Madison and the communal totem animal that shared her soul, the idea tugged at her heart-strings. \n\n\"I could pull some strings with my uncle,\" Peter muttered, doing the logistics in his head. Peter's uncle was the Bird King and was not exactly light in the wallet. \"He's a real estate guru. Maybe he could help find us a house to rent. What are there, six of us? Seven if Madison wants in?\"\n\n\"I really couldn't --,\" Madison tried to interject.\n\n\"Hey, it's just a pipe dream right now anyway,\" Heda said. \"We don't know if any of US can or really want this. But if you're interested and it does happen, maybe we can work something out. Just don't discount the idea before its hatched. Okay?\"\n\nMadison just nodded. Heda sounded indecisive, but Madison was looking with her echolocation, quietly evaluating the members of the group. They looked enthusiastic . . . the kind of enthusiastic that lent itself to action. The idea was so tempting, which made the reality that much harder to swallow. She was barely scraping by as it was, especially after having lost out on her last gig thanks to Alvin Hannity.\n\nEventually they were joined by Billy and Sasha, who did not help matters by expressing an interest in this little commune idea. Hope was a two-edged sword, at least in Madison's opinion. \n\n\"You were thinking about applying for more loans anyway, weren't you? I mean, your tuition and all is covered,\" Sasha was saying.\n\n\"Yeah, but --\"\n\nSasha understood her friend's concerns, but she also knew how much this would mean to the girl. \n\nCarla stood up. \"I want to go shoot pool,\" she said, her voice wavering a little bit.\n\nThere was a moment of awkward silence, broken by Peter. \"Carla, is this really a good time?\"\n\n\"Whoever this fucker is, he already stole part of my life,\" she replied, her voice still shaking. \"I'm not going to be his prisoner here too.\"\n\n'She's got more guts than I do,' Madison said, then forced her feet to move. \"I'll go. Not much for pool though.\"\n\n\"You can be my lucky charm,\" Heda said, grabbing her wallet. She refused to carry a purse, despite their obvious advantages in many regards. And just like that, everyone was going. Heda gave both Carla and Madison hugs around the shoulders. \"Brave girls,\" she whispered.\n\nWhen everyone else was distracted for a moment, Madison turned to the horse shifter next to her and whispered, \"Does being brave feel like someone's squeezing your heart so hard that it's going to pop like a zit?\"\n\n\"I think so.\"\n\n\"Good. Otherwise, I think I'd need to go see a doctor.\"\n\n---------- ------------------\n\nLater that night . . .\n\n---------- ------------------\n\n\"Oh God you suck!\" Heda laughed as Joanna flubbed an easy corner shot in their five-person game of cut-throat. Of course, Joanna's goal in playing pool was not to win, but rather to show off her rockin' body and substantial cleavage as much as possible. She was really good at that part. The group of them had gotten a single table at Dizzy's, a restaurant and pool hall close to campus. Joanna was certainly getting most of the boys attention. The few times Madison switched on her echolocation, she had managed to form a topographical map of Joanna's chest without much difficulty. Then she saw Heda scoping the girl out too, and admiration turned to an irrational jealousy.\n\n'Hypocritical much?' she thought to herself. She felt immensely silly about the whole thing, a situation compounded when Heda leaned over and whispered --\n\n\"She's sweet, but a bit too bubbly for my taste.\"\n\nMadison's skin shivered delightfully when those words and that warm breath tickled her ear. \n\n\"You know, you could play too,\" Heda continued, a bit more seriously. \"If you want to tell them about . . . you know.\"\n\nMadison's heart, which had been in her throat, plummeted to her stomach. \"I can't --\"\n\n\"You can,\" Heda said. \"Here, I'll show you what you're missing. My turn,\" she said, loud enough for the rest to hear. \"Madison's going to help.\"\n\n\"I'm what?\"\n\n\"C'mon.\" The eagle shifter dragged her friend towards the table, and Madison was pulled somewhat reluctantly towards the table. But objections melted when Heda wrapped her arms around Madison's body and put her in \"the position.\" The bat-shifter found herself the butt of a number of \"handling a stick\" and \"thrusting with the right amount of pressure\" jokes, which were both embarrassing and endearing. But mostly, she was very, very aware of the hard body pressed against her back and the strong arms directing her movements. She did not care if she hit the damn ball or not. She just liked \"practicing.\"\n\n\"Ready?\" Heda whispered.\n\n\"Uhm, on behalf of all the guys present, we think you should continue to dry hump . . . I mean 'teach' Madison how to play pool,\" Anthony said. \n\n\"You are such a pig,\" Sasha said, rolling her eyes.\n\n\"Skunk my dear. I'm a skunk. Please get your mammals right.\" He grinned when she stuck her tongue out at him.\n\n\"Can I turn him into a slug?\" she asked her boyfriend.\n\nBill pondered the concept. \"Not until you professors sign off on your training.\" \n\n\"Your support as a male is overwhelming,\" Anthony grumbled.\n\n\"I like her more than I like you.\"\n\n\"Understandable. She's got that whole naughty librarian thing going.\"\n\n\"I do not!\" Sasha half-shouted, half-squeaked. \"Why do people keep saying that?\" She looked for affirmation of her irritation from her boyfriend, but Billy was staring intently at one of the HD-televisions hanging on the wall. He had apparently never seen anything quite so fascinating as sport fishing. \n\n\"She really does,\" Madison whispered, then groaned slightly as Heda kissed her neck. \n\n\"I love the way you sound when you do that,\" Heda murmured. \n\n\"Are you two going to do it?\" Anthony asked, \"because I left my video camera at --\" Anthony stopped talking as Madison pulled back and came close to sinking the ball. \"Not bad. I think she should get another shot.\"\n\n\"You want to keep playing this game?\" Heda asked.\n\nMadison knew this was not about pool. She reached out with sonar pulses and saw that Billy and Sasha were both looking at her expectantly. She had allowed herself to get beaten up just to maintain this charade. Would they treat her like an equal? Would they be upset that she had lied to them? Wouldn't it be nice just to be herself?",
        "\"I'll take this one,\" she said, her world going blank again as she spoke. She felt Heda move away, then kicked her echolocation back into gear. Everyone watched as she lined up another shot, this time sinking it. \n\n\"What the --\"\n\n\"Lucky shot!\"\n\n\"How did she --\"\n\nMadison just stood there, making sure there were not any mundanes around, then slowly removed her sunglasses. She watched . . . openly watched . . . people watching her. Heda looked proud, Sasha and Billy looked relieved, and everyone else looked shocked as hell.\n\n\"Yeah,\" she said, the glow of her eyes fading as she switched her Gift off so that she could talk, \"I guess I have some explaining to do.\"\n\n--------- -----------\n\nHours later . . .\n\n--------- -----------\n\n\"Thanks for walking me back guys,\" Madison said shyly, walking with her sunglasses on but without the use of her cane. She had been peppered with questions ever since her big unveiling, and she had enjoyed the relative quiet of her walk home with Heda, Sasha, and Billy. \n\n\"So, how you feelin'?\" Sasha asked.\n\n\"How ARE you feeling?\" Billy corrected, withstanding a withering do-not-correct-my-grammar glare from his girlfriend. \n\n\"I'm feeling . . . light,\" Madison tried to explain. \"I just never realized how hard it was trying to hide it all the time, and now that I don't . . . I dunno.\"\n\n\"It's called the 'weight of the world,' and it's not on your shoulders. It never should have been,\" Heda said, kissing one of said shoulders.\n\n\"Well, it looks like you're in capable hands,\" Sasha smirked, \"so I think we should be going.\"\n\n\"Yeah,\" Madison muttered as she turned and got caught up in a big embrace and soft, luxurious kiss. \n\n\"I won't even bother saying goodbye,\" Billy chuckled. She was not paying the slightest bit of attention to him anyway. \n\nMadison waved at him behind Heda's back as she was pushed up against the door. She was trying to get her door open before she did something YouTube worthy in public.\n\nThey almost stumbled back into the room when the door finally gave way, then Madison was deposited quickly on the bed. \"So you think your friends . . . (gasp) . . . are okay with me (moan) lying to them?\"\n\n\"OUR friends are okay with it. I think you'll have to pry Kevin off you with a crowbar,\" Heda replied, lowering herself onto the bed to hurry the making-out portion of the evening along. Kevin, the recreational pharmaceutical expert, had been borderline obsessed with his questions about how a blind person with no concept of color interpreted three-dimensional imaging and, more importantly, what effect hallucinogens might have on her. Basically, he wanted to get Madison stoned and have her tell him what she \"saw.\" \"Besides, you know that Joanna absolutely adores you now.\"\n\nMadison grinned and blushed. She had pointed out that Joanna had the most perfectly rounded and shaped breasts she had ever seen, and the quickest way to the bubbly blond's heart was through that perky chest. \"I can't believe I said that.\"\n\n\"It's okay. She does have a nice rack.\"\n\n\"Have you ever thought about . . . you know? With her?\"\n\n\"I don't do the straight girl thing. Too much hassle. It's fun to tease her though, except she teases me right back. And she is gooooooooooooood at it.\"\n\n\"Heda,\" Madison started, then stopped for a moment. \"Thanks. Thanks for pushing me.\"\n\n\"Sasha and Billy were pushing too.\"\n\n\"Yeah, but neither of them are as hot as you,\" she said. \"Well, maybe Sasha.\"\n\n\"Hey!\" Heda thought it over. \"Okay, maybe she is. That whole librarian thing really works for her.\"\n\n\"And she's completely clueless about it, which is weird 'cause she's insanely smart. As soon as she figures it out and realizes that Billy has been 'encouraging' that look, she is gonna kick his ass. Probably.\"\n\n\"Speaking of asses,\" Heda muttered, rolling over onto her back and pulling Madison with her, then grabbing Madison's butt. \n\nThe bat-shifter let out a little yip of surprise, but then melted into the embrace. Her body temperature had sky-rocketed to what she was sure was an unhealthy level, and she briefly switched on her sonar to see what Heda's face was doing. Apparently, it was moving forward in a kissing approach pattern, so Madison braced herself for . . . \"Mmmh,\" she hummed as lips met lips and her brain started playing the Star-Spangled Banner, complete with fireworks. \n\n\"You know,\" Heda said throatily, \"you're getting much better at that.\"\n\n\"I'm . . . not sure . . . hunh?\" Madison blathered. She wanted more kissing. Yummy happy kissing.\n\n\"And tonight's keynote speech will be delivered by one Madison Sloan,\" Heda replied with a chuckle. \n\n\"No makin' fun of me,\" Madison pouted, her lips parting and seeking out Heda's mouth. \n\n\"Then give me something else to do.\" Heda kissed the girl again, pulling her close. She liked this part and always had. Making out was vastly underrated in her book, and people who rushed to the main event did not know what they were missing. She decided to escalate the foreplay by caressing Madison's firm runner's ass, frustrated by the separation caused by the girl's tights. \n\nMadison could not figure out what to do with her hands to save her life. They moved from Heda's shoulders to her neck and then back again. Finally, she just had to ask. \"Okay, what should I be doing?\"\n\nHeda let out a full-bellied laugh. Madison was just too cute when she was nervous. \n\n\"Stop . . . ooh, no laughing!\" the bat-shifter said.\n\nHeda rolled them both over again so that she was on top. She quickly straddled the girl's stomach and pulled her own shirt off. \"What do you want to do?\" she asked, placing the girl's hands on Heda's now-exposed breasts.\n\nMadison swallowed a breath. She was touching boobies. And it was good. But she also wanted to feel that amazing abdomen, so she did, then her hands moved back up to those breasts. Heda leaned forward and offered her nipples to Madison's lips, and the less-experience girl eagerly took them into her mouth. \n\n'Nipples are fun,' Madison thought. The were fun to suck on, nibble on, to twist and turn . . . but what was even more fun was having your own nipples played with. Heda pulled Madison's top down past her shoulders and then did a reach-around to unhook the bra. And while Madison's nipple pleasuring skills were in their infancy, Heda was a nipple-foo master. She pushed Madison's hands away and then lowered her mouth to the bat-shifter's chest. Magic ensued. Madison held onto Heda's head like it was a personal flotation device, unwilling to let go or else be totally lost. \n\nFinally Heda decided it was time for things to progress. She stood up and pulled Madison into a sitting position. Then she put her lover-to-be's hands on Heda's hips. \"Want to help me get these jeans off?\"\n\nMadison nodded. Her hands trembled a bit until she reminded herself to play it cool, at which point she simply slowed her hands down as she unbuttoned and unzipped those jeans. She also took the time to kiss the girl's hard abdomen and tease her bellybutton. When she got the jeans down to Heda's knees, she turned on her echolocation while her friend kick the garment away. Heda was wearing a tiny little g-string that made Madison's mouth water. She reached for it, but Heda slapped her hands away.\n\n\"You don't get the rest until you show me some more skin.\" Then Heda plopped back down on the bed. \"Now strip.\"\n\nMadison blushed all the way to her toes, but she stood up . Her top was already pushed down, so she just finished the job, removing all clothing except her own panties. 'Oh crap,' she thought. 'I'm not wearing the --'\n\n\"Hello Kitty underwear?\" Heda asked. \"How risque!\"\n\n\"Shoot me now,\" she thought, covering her face with her hands and turning away. She heard the bed creak behind her as Heda stood and then wrapped her arms around Madison's body.\n\n\"I think they're adorable,\" the eagle-shifter whispered, \"but I'm really interested in what's underneath them.\" Even though Madison had her thighs pressed tightly together, Heda ran her hand town the girl's stomach and pushed it beneath those cotton panties and forced the girl's legs open enough so that she could insert two fingers into the girl's sex. \"You shaved,\" Heda murmured as she started to penetrate the girl's fold with a slow rhythm. \"You really want me to go down on you don't you?\" she asked over Madison's happy whimpering.\n\n\"Mmh . . . mmh . . .yesssssss,\" Madison hissed. \"I want to go down on you too. I want you to teach me how.\"\n\nHeda grinned. \"Then tell me what you want again, but use the Voice. And say it dirty, or I won't do it.\"\n\nMadison was attempting to roll her eyes back in her head as Heda's fingers lit her body on fire. \"I want to eat your pussy,\" she said in that low, spicy voice that she knew Heda loved. It was her radio Voice . . . her dream Voice. It spoke with the words and the tone that Madison wished she could use in the rest of her life. It was confident and sexy and strong, and only her broadcast booth and Heda's arms seem make her feel safe enough and confident enough to let it out.\n\n\"Well when I'm done making you cum, maybe we can try it,\" Heda replied, her brain tingling under the power of that Voice. Her fingers pressed in and up while her palm rubbed small circles over Madison's clit. She kissed her lover's neck as she brought the girl closer to the edge. She could tell by the way Madison was trying to squeeze her thighs together that she was close, and her ragged breathing helped tell exactly how close. \n\n\"Gonna . . . gonna . . . \" Madison whispered, then her body shook as pleasure raced through it, staring in her nethers and expanding outward. \n\n\"I believe that 'cum' was the word you were looking for,\" he said, her voice filled with warmth and amusement. \"Although 'climax' or 'orgasm' would have also been acceptable.\"\n\n\"Now (gasp), you promised,\" Madison said, then summoning the Voice, \"you promised I could taste your pussy if I came.\"\n\n\"And I'm a woman of my word.\" Heda ran her cum-covered hand up Madison's body and slid them into Madison's mouth. The girl obviously did not have her echolocation on, because she shrank back a bit when her mouth was invaded. \"This is what you're asking to taste,\" Heda whispered, then felt a slight suction on her fingers. \"Like that don't ya?\" She spun Madison around and started kissing her again as they both sank onto the bed. \"Want to taste it fresh from the source?\"\n\nMadison blushed . . . again. 'Why does she make me feel so naughty?' she thought, then out loud, \"More than anything.\"\n\n\"More than breathing?\" Heda said, spinning around until she was in a position to give the girl her first sixty-nine experience.\n\n\"Oxygen is overrated.\"\n\n\"More than food?\"\n\n\"I eat bugs, so yeah.\"\n\n\"More than your Fats Domino album on the wall?\"\n\n\"Get out. I can find another hottie,\" Madison shot back.\n\nHeda burst out laughing. She knew that Madison would guard that thin piece of vinyl with her life if necessary. Then without warning, her mouth descended on Madison's newly shaved sex with considerable vigor. \n\nMadison was not sure what to do as her sex was suddenly stimulated in ways she had never imagined before. It felt sooooooooooooooooo good. But Madison being who she was began to suffer an anxiety attack in the midst of this mind-boggling pleasure. What should she do?\n\n\"Calm down,\" Heda told her when she sensed her friend's indecisiveness. \"We've got all night, and getting oral sex is kind of like pizza.\"\n\n\"Huh?\"\n\n\"Even when it's bad, it's still pretty damn good.\"\n\nMadison smiled even though Heda could not see it. She slowly pushed her tongue forward and up into the cleft, drinking in the scent and flavor of a live-and-in-living-color lover in the most intimate way. She was slightly wet, slightly rich, and very sexy. Madison was fascinated by the fleshy outer labia, so she spent some time playing with them, licking them and sucking them into her mouth.\n\nHeda was pleased with her lover's progress, in attitude if not (yet) in skill. She was in no hurry, so she just started to string together all the techniques she had learned in Europe, applied light pressure and hoping Madison could pick up a few things. Madison was in her own little world at first, but she started to mimic some of Heda's moves.\n\nOnce Madison seemed have a handle on the basics, Heda moved to the intermediate steps, using her fingers to penetrate and separate so that her tongue could get further in. Clitoris stimulus also became the order of the evening, partially because she knew that it had to feel good and partially because every time she touched it with her tongue, Madison let out a little squeaking noise. \n\nWhen Heda started laughing at her, Madison growled, \"Oh yeah? Let's see how you like it.\" Then she began a full-out assault on Heda's pleasure nub, throwing the other girl off guard. Apparently, Heda liked it a lot, though she felt a need to teach the girl a lesson. Never mess with master. \n\nHeda's tonguing brought her companion to the height of pleasure quickly and mightily. Madison's poor body shook and arched, leaving her drained of energy though not of desire. Slowly her mouth encircled Heda's sex once more and sucked gently on her mons. Heda was content to just lay gentle kisses on Madison's inner thighs while she was brought to orgasm by a naive but determined lover. She let out a groan when the moment hit her, an oral reward for Madison's oral attention. Madison drank in what she could, savoring not only the essence that Heda imparted but also the moment.\n\n\"So, THAT is oral sex,\" Heda chuckled. \"Any questions?\" She managed to turn herself around again for some post-coital kissing. \n\n\"That was . . . wow,\" Madison said, her eyes still glazed over. \"Very, very nice. Must do it again sometime.\"\u2028\n\n\"Count on it. Now, lessons in spooning.\"\n\n\"But I already know --\"\n\n\"Meaning that I want to get some sleep.\"\n\n\"So you're just going to go to roll over and --\"\n\n\"Madison, you know I love your voice, right?\"\n\n\"Yeah.\"\n\nHeda kissed her. \"Now is not the time to use it.\"\n\n\"But --\"\n\n\"Shut up.\"\n\n\"Hey!\"\n\n\"Don't make me come over there.\"\n\nThis continued for several minutes before additional kisses and caresses were able to persuade Madison to just lie in the wake of sexual bliss and sleep.\n\n-------- --------------------\n\nA few days later . . .\n\n-------- --------------------\n\n\"Are we sure that this is the right place?\" Madison asked, her echolocation showing her every nook and cranny of the enormous house in front of them. Somehow, she had gotten talked into going on a house-viewing expedition with some of the gang, headed up by Peter. Heda had to bow out at the last second after getting called up on the shifter emergency phone to go investigate a suspicious looking individual, but she had promised to catch up quickly. She had insisted that Madison go along, and Madison suspected it was so that she could develop ties with people that were not always through Heda.\n\n\"This is the right address. My uncle's secretary said that it used to be a residence, got turned into a set of law offices, then got foreclosed on when the owners were indicted for something or another. He said he'd be willing to buy it and rent it out to us for really cheap if we'd be willing to do some upkeep so that he could resell it down the road.\"\n\n\"It's fucking huge,\" she replied.\n\n\"It's sweet!\" Carla said.\n\n\"It's the Munster House.\"\n\n\"Madison,\" Anthony said, \"you're being a real downer.\"\n\nMadison did not want to admit the truth . . . that the house was incredible and that she would giver her right arm to live there with a bunch of other people who understood who and what she was and did not care. She would not mind living with Heda at all, thought that thought gave her some willies as well. What if things between them did not work out? Would Madison get kicked out? It would be better never to feel that sense of community than have it and then let it be yanked away.\n\n\"Let's at least go inside,\" Peter said. \"Look around. Seriously Madison, I think you could afford a stake in this.\"\n\nThe house was actually two full stories consisted of about ten offices or meeting rooms which could be used as bedrooms, four bathrooms, a kitchen, a parking lot big enough to handle everyones' cars, plus a large attic and finished basement. Peter had been given a key and code to get into the building, so they wandered inside. \n\n\"Dude, this could SO be the entertainment room,\" Anthony said of the main conference area. \n\n\"Fliers could go second floor and up, non-fliers could take the bottom floor and down,\" Peter muttered, thinking over the logistics.\n\n\"Hey, there's only three fliers! You, Heda, and Madison,\" Anthony shot back.\n\n\"Guys, I haven't agreed to --\" Madison started to say, but Carla pulled her back. \n\n\"Let 'em argue. Girls always get final say on living arrangements anyway.\"\n\nMadison grinned in spite of herself. \"And you want this?\"\n\n\"Yeah, I do. I'm a herd animal by nature remember? Besides, there are certain advantages --\" the horse-shifter added, her voice trailing off.\n\nMadison switched on the sonar and saw that Carla was scoping out the well constructed ass of one Anthony Valentine. \n\n\"You dog!\" she hissed.\n\n\"Horse,\" Carla muttered back. \"I'm a horse, and I need to get taken for a ride every now and then or I get cranky.\"\n\nMadison blushed, though she doubted Carla felt any need to. \"I'm sure any of the guys here wouldn't mind taking you to the rodeo.\"\n\nCarla snorted. \"If they can't hold on for more than eight seconds, then they're not worth my time.\"\n\nAnthony and Peter looked over at the girls, who had just burst out in a giggling fit. \"What's with them?\"\n\n\"I dunno. They're chicks,\" Anthony said. \"There's no figuring 'em.\"\n\n\"Did you say, 'chicks'? And you wonder why you're single?\"\n\n\"No, I really don't.\"\n\n\"Okay everyone, let's explore.\"\n\nCarla was a big fan of baking, so she checked out the kitchen while Anthony scoured the bottom floor for the ultimate bachelor pad. Peter went to the second floor, but Madison decided to check out the basement. It was cool and solid and quite cave-like, and a quick scan of the walls showed that they probably could hold in sound pretty well. \n\n\"Oh who are you kidding?\" Madison asked herself. \"They'd never let you have the whole room to yourself.\"\n\n\"Why not?\" Peter asked from the bottom of the stairs.\n\nMadison jumped three feet up in the air and came down in her kick-boxing defensive position. She hated not being able to see and talk at the same time. \"Don't sneak up on me!\"\n\n\"Stop being blind,\" Peter said jokingly. \"Well, mostly blind.\"\n\n\"Jerk.\" Madison looked around, her eyes glowing in more ways than one. \"I mean, this room is huge and I wouldn't be able to pay as much and . . . and--\"\n\n\"And you really want it, don't you?\"\n\n\"That's not what I . . . I didn't mean that I would . . . yeah?\"\n\n\"Madison, if we do this, we will try to come up with a solution that works for everyone. It's okay.\"\n\n\"Would your uncle really want ME living here?\" Madison asked bitterly. \"We've already seen what the Reptile King thinks of me, so why would the Bird King be any different?\"\n\n\"He's not like that,\" Peter snapped, then visibly calmed down. \"Sorry. Didn't mean to bite your head off. It's just that Uncle Jason never seemed like the type to me.\"\n\n\"I wish I had family like you,\" Madison said earnestly. \"No one ever sticks up for me like that.\"\n\n\"Heda does,\" Peter said, his smile returning. \"She's doing what I should've been willing to do.\"\n\n\"You didn't know me from Eve,\" Madison said, trying to wave off the whole subject.\n\n\"No, but everyone should be treated with more respect. We shouldn't have been waiting for someone like Heda to point it out. Alvin should never have been allowed to get away with what he did.\"\n\nMadison nodded. \"What's weird was that it wasn't so bad when we both got here. Yeah he was rude, but then after that first Christmas break, he just started to get nasty.\"",
        "\"Not everyone has the Christmas spirit I guess.\"\n\n\"He's the Grinch who fucked Christmas up the --\"\n\n\"Hello?\" came a new voice from upstairs. \n\n\"Heda!\" Madison shouted. \"We're downstairs!\"\n\nThe eagle-shifter came traipsing down the stairs in her volleyball uniform, making both Peter and Madison drool just a little bit. When Joanna joined them a moment later, the feeling was repeated.\n\n\"Hey guys,\" Heda said. \"Gotta be at practice in a while, but I wanted to come by and see the place. Fuck, this is huge!\" She looked around. \"Oh Madison, this is SO your room!\" She walked over to a spot on the wall. \"Your bed here with your Fats Domino album hanging right over it.\"\n\nJoanna nodded. \"Maybe put her --\"\n\n\"Hey, I'm still here. Blind not deaf. And I can put my damn stuff anywhere I damn want.\"\n\n\"So you're moving in?\"\n\n\"I didn't say that! If I WERE to move in which I didn't say I would do, then hypothetically --\"\n\n\"But you didn't say you WOULDN'T move in either,\" Heda said, giving her a kiss and a pat on the ass. She looked at Peter. \"So let's talk economics. After I've seen that attic you were talking about.\"\n\nThe attic was a marvel, with two westward facing windows and a skylight. It was not very tall, but spanned the top of the whole house. From the windows, Heda looked out over the local shrublands and up at the mountains.\n\n\"Oh, that's beautiful,\" she whispered. She did not see Madison slink back down the stairs. Her echolocation, however powerful, would never reach the mountains, so she would never see what Heda saw . . . would never appreciate the world on that scale. She lived in her own little bubble and always would. \n\nHeda caught up with her lover in the kitchen, where Carla was drooling over the stainless steel appliances. \"Can we have it mommy?\" she asked, looking at Heda. \"Can we can we can we --\"\n\n\"That's up to everyone,\" Heda grinned. \"I ain't supporting you clowns. \"I need to find a job for spending cash as it is. My folks will only put up with so much.\" She put an arm around Madison and kissed her cheek. \"So, interested?\" Then she looked at Peter, who walked back in with a cell phone to his ear. \"What's the damage?\"\n\n\"His Majesty would only charge us fifteen hundred a month for the house, but we'd pay all our own utilities. Still, that's . . . let's see, me, you, Kevin, Anthony, Joanna, Carla, Madison, Sasha, and Billy. That's ten.\"\n\n\"One hundred and fifty apiece?\" Madison said, her eyes opening wide. \n\n\"Sounds like something you could do,\" Heda whispered into the girl's ear. She and Peter made eye contact. \"As extra incentive, you could have the whole basement as yours.\"\n\n\"Ooh man,\" Anthony said as he walked in. \"If we could wire the whole house for sound, we could set Madison up as the house DJ! The house would be rockin' twenty-four/seven!\"\n\nMadison tried to appear stoic when she asked, \"So how do we get out of our housing contracts?\"\n\n------------- ---------------\n\nThe next day . . .\n\n------------- ---------------\n\nHeda paced the hallway outside of Reichert's office several times before knocking. She hated doing this. Absolutely hated it. The door opened just as her fist touched it. \n\n\"Come in Miss Adler,\" the Reptile King said. \"Your pacing is giving me a headache.\"\n\nShe walked in and sat in the offered guest chair while he sat behind his desk, giving her an even glare.\n\n\"Thank you for seeing me,\" Heda said between clenched teeth. \"Some of us were looking to rent a house together just off campus . . . you know, the whole safety in numbers thing. It's close enough that I could still perform my neighborhood watch duties, or maybe even assume a new area for shifters who live off campus.\"\n\n\"Sounds reasonable,\" Reichert said flatly. \"Why are you talking to me?\"\n\n\"Because we would need to get out of our housing contracts. You have enough sway to make that happen without us having to pay a lot of penalties.\" Heda actually began to grow uncomfortable under his stare. \"What?\"\n\n\"Very well,\" Reichert said finally. \"It is a reasonable request considering the circumstances. Am I to assume that Miss Sloan will be joining this venture?\"\n\nHeda was suspicious. This was going a little too easily. \"Ideally yes, once we find out the cost of utilities. King Jason Burchill is helping his nephew out a lot, so that's making this financially feasible for all of us.\"\n\n\"Burchill is a good man,\" Reichert replied, almost absently. \"This is a good situation.\"\n\nHeda did not get it. This man was so hot and cold that it made her wonder. \"Thank you,\" she said, standing up to leave.\n\n\"Please, stay for a moment,\" Reichert replied. \"Miss Adler, I am going to need your help in the coming months while this madman is located, and I would like for us to be on the same side for you entire time here at FCU.\"\n\nHeda closed her eyes and tried to remain calm when she said, \"Then why aren't you doing anything to help Madison? Please, I want to respect you and your crown, but how --\"\n\n\"This situation is much more complicated that you think,\" Reichert said. \"If Alvin Hannity is kicked out of this institution, it will not only threaten a significant source of income for this university, but do you think that will help your friend? Do you really think that the Hannity clan is incapable of making Madison's life miserable from afar?\"\n\n\"That's no excuse for letting him hunt her the way he is!\"\n\n\"No, it is not. Teasing or insulting is one thing, but damaging her is another. Please see this from my position. I do not personally doubt that he assaulted her the other day, but the fact remains that he has witnesses that say otherwise and she has no one to corroborate her story. You can confirm that she was injured in the woods several weeks ago, but not that it was him. The circumstantial evidence is strong, but that's all it is . . . circumstantial.\" \n\nHe sighed, then looked away. \"I am not . . . easily moved . . . by shifters such as Miss Sloan with genetic abnormalities. I know that you may hate me for that, but it is true. It is not true, however, that I will allow your friend to come to harm because of my biases. I have spoken with young Mister Hannity and assured him that if the harassment of Miss Sloan continues that I shall be forced to initiate a very thorough investigation that might yield irrefutable evidence that would render any defense, no matter how well funded, to be sadly insufficient.\"\n\nHeda's mind was reeling. Her mother had always warned her that shifter politics was insanely tricky, and now she was beginning to understand. \"Are the Hannitys really that dangerous?\"\n\n\"Yes, they can be. I always found Alvin's father to be quite amiable personally, though his wife is . . . difficult. And Alvin Hannity is, well, a momma's boy.\"\n\nHeda actually snickered. She could totally see that. \"Have you ever told Madison any of this?\"\n\n\"Madison has never shown much interest in anything I have to say. Ever since she was in my class --\"\n\n\"Yeah, she told me about the whole grade thing. Deduction for penmanship.\"\n\n\"And grammar,\" he replied. \"She was given an opportunity to use the editors at the English Department's writing center and she didn't. She said that she could do it on her own. So I graded her on what she turned in. She didn't like it so she took it to the department head who was so afraid of appearing to be biased against the handicapped that he gave her what she wanted.\"\n\nHeda felt a little awkward. She completely understood why Madison had reacted the way she did, but what if she had been wrong, or at least a little bit premature in jumping down Reichert's throat. But Reichert, if he was telling the truth, had not done anything wrong either.\n\nReichert looked her hard in the eyes. \"I am not trying to drive a wedge between the two of you. I am not so insensitive as to think her life has not been exceedingly difficult or that she has not had to work twice as hard or more than others just to get by, but part of her isolation from the shifter community is her own doing.\"\n\n\"That's changing,\" Heda said defensively.\n\n\"I know. But sometimes being normal also means being accountable.\"\n\nHeda got up, shook Reichert's hand, and then headed outside. Joanna was waiting in the lobby so that they could walk back together, keeping with the \"always go in twos\" mentality. \n\n\"So how'd it go?\" Joanna asked.\n\n\"Good. Looks like we'll be able to get out of our housing contracts, but we should do it soon.\"\n\n\"Peter is SO on top of it,\" Joanna said. \"Still, you look kinda glum for someone who had to deal with her arch enemy.\"\n\n\"He's not . . . he's not my enemy, arch or otherwise. And I'm sorry for dissing your king.\"\n\n\"Heda?\" Joanna said, prying one of the eagle-shifter's eyes wide open. \"Are you in there?! Hold on and we'll send help!\"\n\nHeda batted her friend's hand away with a fake snarl. \"I can completely kick your ass, you know that.\"\n\n\"Puh-lease. Like you thought you could out hunt me?\"\n\n\"I had to go and save Madison's cute little butt, otherwise I would've won that!\"\n\n\u2028\"Oh suuuuuuuuuure you would have.\"\n\n\"Hey, I'll throw down right now.\"\n\nJoanna grinned, but was trying to figure any graceful way she could out of this little challenge, since she was pretty sure Heda would indeed kick her behind eight ways from Sunday in a straight up fight. \"Hey, you know that kicking my ass is the last thing you want to do to it.\"\n\n\"Hmm, your problem is that you waited too long. Madison's ass is pretty dynamite, so yours is now expendable.\"\n\nJoanna kept finding ways to back out of another contest all the way back to the dorm room, only to have Heda counter each one. \n\n\"So you see, I think that a good old fashion wrestling match is a perfect reasonable way for you to back up your tough talk,\" Heda said with a grin as they rounded the last corner. \n\nAll their friends were hanging out on the benches in front of the dorms, except for Madison and Billy who were probably on their way to the station. And there was a newcomer in the group that made Joanna's mouth drop open. \n\n\"Helloooooooooooo hunkalicious!\" she purred as the new guy stood up. He was six feet four inches tall and built like a competitive swimmer, with shoulder-length hair that was so black that the light reflected blue off of it. He had full lips, warm green eyes and the most perfect skin she had ever seen. He looked a bit older than most of the rest of the crowd, but was still obviously in his physical prime.\n\nHeda scrunched up her eyes as if annoyed, though her mouth was quirked in amusement . . . or maybe it was glee. \"What the fuck are you doing here?\"\n\n\"Wait, you know this stud muffin?\" Joanna pouted. \"And you didn't tell me about him?\"\n\n\"Yeah, we just found this cat hanging out saying he needed to talk to our girl Heda,\" Anthony said, \"and you KNOW that we weren't gonna let him near her if he wasn't legit.\"\n\n\"When did you become a gangsta?\" Peter asked his friend.\n\nAnthony shrugged. \"Don't be hatin'.\"\n\n\"Heda,\" Joanna almost whimpered, \"introduce your friend!\"\n\n\"Friend?\" Heda shook her head. \"He ain't no friend of mine. So Ed, you going to tell me what you're doing here?\"\n\n\"What? Can't a caring, loving brother check in on his semi-helpless little sister?\"\n\n\"Helpless my ass,\" she replied, smiling openly and giving \"Ed\" a big hug.\n\n\"That's your brother?!\" Joanna squealed. \"You told me you had brothers, but not that they were hot!\"\n\n\"I really like her,\" Ed said with a lopsided grin. \"Could help a man's ego being around a woman like her.\"\n\n\"Name's Joanna, and I'm your sister's bestest friend and confidante,\" she said, sliding up to him. \"Hmm, bird shifter. Man, bird-shifting and hotness both run all the way in your family?\"\n\nAnthony grinned. \"I've seen pictures of their mom, and she's a total M-I-L--\" His voice trailed off as Heda and Ed fixed glares on him. \"I'm sure she's a lovely woman with impeccable character.\"\n\n\"Good save,\" Heda replied. Then her face got that suspicious look. \"Mom wouldn't have anything to do with why you're here, does she?\"\n\nEd shrugged. \"She MAY have dropped my name to the Council as someone to call to help with your disappearances her on campus, and PERHAPS suggested that I check in with you to make sure you haven't gotten into any more trouble --\"\n\n\"Ooh, I am going to give that woman a piece of my mind!\" Heda growled, reaching for her cell phone. \"Sending my brother to spy on me?!\" She started to dial while Joanna moved in for the kill.\n\n\"So, is there a Missus Ed Adler?\"\n\n\"I suspect so, though she and I haven't met yet,\" he replied, grinning and trying really hard to concentrate on her eyes. \n\n\"Hey, my boobs are down here,\" she said, pushing up on them to display cleavage.\n\n\"Conversations with you aren't normal, are they?\"\n\n\"Hi Mom!\" Heda said loudly, glaring at her brother. \"Oh nothing much. Just thought you might want to know that me and some of my new friends are moving off campus. Yeah, the Bird King is buying a house and renting it to his nephew for cheap. There will be ten of us, so it will be really safe and secure and WHY THE HELL DID YOU SEND EDGAR TO SPY ON ME?\" she ended with a shout.\n\n\"Here we go,\" Edgar said, sitting on the bench and staring at his sister. He glanced over at Joanna and continued, \"Heda's conversations with Mom are like spectator sports. Honestly, I --\"\n\n\"I am NOT overreacting,\" Heda growled at her phone. \"I can take care of myself and . . . Yes, I know that he's a privative investigator, but I'm sure the university is quite capable . . . Mother, I will not let you . . . don't you dare put Dad on the phone! I do not want to . . . Hi Dad. Yeah, could you put her back on? Seriously. Dad, don't . . . do NOT put the phone down to go look for her. Dad? Dad!\"\n\nEdgar grinned, then whispered to anyone listening, \"Our father is a master of not letting fights between Heda and Mom escalate. This is his 'let me put the phone down and then I'll go talk to her' ploy. He's probably going to go read in his recliner for a while hoping that Heda will give up. But it won't work. See? She's going to her back up plan.\" Heda had disconnected the phone and is calling Dad's office phone. He'll always answer that and never thinks about it until its too late. Oops, here we go.\"\n\n\"Dad, don't you dare put this phone down! I know it's your work phone, but . . . oh no, I know that trick. Don't even think about it. I know that trick. Hell, I taught you that trick. Put her on now or I'll do it. You know I will.\"\n\n\"And cue the waterworks,\" Edgar said, acting entranced. \n\n\"Daddy,\" Heda sniffed, her voice suddenly tearful and broken up, \"I really need to talk to Mom. She's crossed a line --\"\n\n\"SHE should be a thespian,\" Joanna muttered admiringly. \"I've seen seniors who can't do that kind of drama.\"\n\n\"Thank you,\" Heda said, her voice almost a whimper. Then just as suddenly, \"Do NOT pawn me off on Dad again! Yes, I know I do it, but that's a daughter's prerogative. I don't care. No, having sex with him does not give you the same rights, and ewh! No talking about that in front of your children. What kind of mother are you?\"\n\n\"You wanna go inside?\" Ed asked, \"and you guys can give me the scoop on what's been going on around here. I got a dossier from the University and another from King Reichert. Besides, this looks like it's going to take a while.\" \n\n\"So you're a PI, huh?\" Anthony asked. \"Sounds sweet.\"\n\n\"Yeah, there's not a lot of paranormal private investigators, or at least not many credible ones.\" He followed the crew inside and then started asking about what everyone knew and what they had heard and what was being done. He showed great compassion and tact when talking with Carla about her experience. Joanna knew he must be good at his job. She wondered what else he might be good at.\n\n\"You should talk to Madison too,\" Carla said at last, having relived her ordeal for what felt like the hundredth time. \"She's the one who found me.\"\n\n\"Madison Sloan?\" Ed checked his notes. \"But she's blind.\" When his eyes came up, he noticed that everyone was looking shifty-eyed at each other. \"What? Says here that she's legally blind. Is that not correct?\"\n\n\"No, she's legally blind all right,\" Joanna said. \"Yessiree.\"\n\nHe raised one eyebrow. 'Something is really odd here.' \"She can't see then?\" The redhead raised his hand. \"Yes . . . Kevin, is it?\"\n\n\"Yeah. Uhm, what do you mean by 'see'?\" Kevin's utterance was met by a punch in the arm by Peter. \"What?!\"\n\nEd was really confused. \"Can she or can she not make use of her eyes to intake light and so on and so forth to . . . well, see?\"\n\n\"Nope!\" the whole crowd said at once. \n\n\"Okay, what the fuck is going on?\"\n\n\"Nothing,\" came the synchronized response.\n\nEdgar rubbed his temples, trying to gather his wits. Normally, he was the problem child in the family, but he seemed woefully outmatched here. \n\n\"Here, let me do that for you,\" Joanna said soothingly.\n\n\"Really, that's not . . . okay,\" he said as she put her hands on his temples and her tee-shirt clad breasts on the back of his neck.\n\nThe door opened and Heda came in, growling in a most unladylike manner. \"The nerve --\"\n\n\"What happened?\"\n\n\"My battery died,\" she said, plugging her cell into the charger. \"And they were going to head out to a party before I could get inside and use the land-line.\"\n\n\"So all of that and no resolution?\" Peter asked.\n\n\"Technically, that conversation has been going on for three years,\" Ed informed him. \"It'll pick up where they left off next time. Mark my words.\"\n\nHeda rolled her eyes, then managed to look cheerful for a moment. \"Hey, Reichert's gonna help us get out of our housing contracts, so operation big-house-full-of-shifters is all go. Seriously,\" she added, looking at her brother, \"you have GOT to see this place. Peter's uncle is amazingly cool for doing this for us.\"\n\n\"Well, I'll probably have plenty of chances, since I'm here until this case is solved. North American Shifter Council is footing the bill. You guys getting a house together? That's cool. I missed that part of the college experience.\"\n\n\"You missed the 'college' part of the college experience, you dumbass.\"\n\n\"That too. Hey, these guys won't give me a straight answer, so what is the deal with Madison Sloan?\"\n\nHeda countered his eyebrow raise with one of her own. \"What about her?\"\n\n\"She's listed as a material witness, but she's also listed as blind.\"\n\n\"That's true.\"\n\n\"So she really can't tell me anything.\"\n\n\"That's false.\"\n\n\"She what? Smelled the cage? Heard it?\"\n\n\"She could tell you exactly what it looks like and probably give you a good guess as to what it was made of. But you've probably got all that in your report.\"\n\n\"But she's blind.\"\n\n\"Right.\"\n\n\"How can she --\" Ed stopped and gripped the edge of the chair so hard he heard plastic snap. \n\nHeda grimaced. \"I guess you'll have to meet her for yourself. C'mon, she's usually got some time between sets. I'll take you over there.\"\n\n\"I'm going with you,\" Joanna said. \"You know . . . strength in numbers and whatnot.\"\n\n\"But my brother --\"\n\n\"I . . . am coming . . . with you,\" Joanna said with a knowing look, then glanced at the back of Ed's head.\n\nHeda grinned. Joanna was pretty much an unstoppable hussy.\n\n\"Okay, what do you mean by sets? Is she a stripper or something?\"\n\nEveryone got a snicker out of that, but Heda shushed them. \"Hey, she could! She's got the bod for it.\"\n\n\"And you would know,\" Kevin shot back with a grin.\u2028\n\nEd looked at his sister. \"Let's go. You can explain all of this on the way.\"\n\nThe three of them got up and left their companions to start the mass migration to the new house. Heda refused to talk about Madison's \"sight,\" deciding to leave it up to her. But her brother was tenacious on another front.\n\n\"So you've seen this girl naked?\" he asked.\n\n\"Uhm . . .yeah. Couple of times now.\"\n\n\"A couple of times? So are you dating the girl?\"",
        "Heda's head bobbed around for a moment, then she admitted that she was. Sort of. \"It's early in the relationship.\"\n\n\"You? In a relationship? After leaving a trail of broken hearts and warm beds across half of Europe?\"\n\n\"Oh don't get all high and mighty on me,\" Heda grumbled. \"It's not like you're a saint.\"\n\nHe smiled. \"Never said I was. But a blind shifter?\"\n\nHeda stopped and got in Ed's face. \"You had better be on your best manners,\" she said.\n\n\"Hmm, sounds serious. Don't worry, I don't go in for that 'DM' bullshit. You know that.\"\n\nShe sighed, then hugged him. \"I know.\"\n\nJoanna clapped her friend on the shoulder. \"She's just our protective mother hen.\"\n\n\"Hen?\" Heda said. \"Listen here lizard lips --\"\n\n\"Lizard? Oh, you are in so much shit for that!\" \n\nEd sighed. His sister had not changed at all.\n\nTen minutes later, they were sitting in the radio station office, waiting for Madison to wrap up her between-song monologue. \n\n\"She's got a sexy voice,\" Ed whispered.\n\n\"You don't know the half of it,\" Heda replied. \n\nBilly waved at her. \"You can go in now. You've got about ten minutes 'til she's back on the air.\"\n\n\"Cool beans. C'mon,\" Heda said, pulling her brother by the arm. \"Hey babe,\" she said when she was clear of the door.\n\n\"Hey!\" Madison said, turning around and her eyes glowing . . . \"Crap!\" she shouted, noticing the strange man standing in the doorway. She turned off her Gift and reached for her glasses. \"Sorry, but the light . . . in my eyes and --\"\n\nHeda pulled her friend's hand away and kissed her. Madison was trying to object despite the lip-lock for several seconds before she just gave up and melted. Heda reluctantly let go of that bottom lip and then, \"It's okay. Madison, this is my brother Edgar. Edgar, this is the infamous Madison Sloan. Madison, Edgar is actually a paranormal private investigator that the university has called in to help with the kidnapping.\"\n\nMadison extended her hand in a random direction, causing Heda to sigh.\n\n\"He won't tell anyone, and he already knows something is up.\"\n\n\"But what still escapes me,\" Ed interjected dryly. \"Okay, you're Gifted. Got that part.\"\n\nMadison thwacked Heda on the arm. \"Don't ever just walk in with a stranger without warning me!\"\n\n\"He's not a stranger! Strange, but not a stranger.\"\n\n\"Is one of the two of you going to explain her whole sight thing? Please?\"\n\nMadison shrugged. \"I'm legally blind.\"\n\nEd slapped his face.\n\n\"Madison --\" Heda whined pitifully.\n\n\"Okay, okay. I can use echolocation in human form. Bat sonar. So there.\"\n\n\"Was that so hard?!\" Ed said throwing his hands up. \"Nice to meet you by the way. When would be a good time to talk to you? In a straight-forward way where you just answer my questions rather than confuse me?\"\n\n\"I'm free for lunch,\" Madison said a bit shyly. \"Heda, did you want to join us?\"\n\n\"I've got classes from ten-thirty until two, then I've got practice. Don't worry, Ed will be a gentleman. Because if he isn't, he knows I can kick his ass.\" She kissed Madison while glaring at Ed. \"We're gonna split, but I'll talk to you tomorrow after practice. Okay?\" Another kiss.\n\n\"Sure. Hey, how did the meeting the Fuhrer go?\"\n\nHeda stopped in her tracks. \"Uh, it went well. We can get out of our housing contracts, so Peter's going to call his uncle in the morning. We'll keep a room open for you.\"\n\n\"So he wasn't a total ass?\"\n\n\"No, he was --\" She paused, wondering how Madison would take the idea of Heda consorting with the enemy. \"He was professional,\" she said, and left it at that.\n\n------------- ------------------\n\nThe next afternoon . . . \n\n------------- ------------------\n\n\"Seriously, it was that bad?\" Madison added, trying not to break down into another laughing fit. \n\n\"And don't even get me started on the scrabble competitions. Heda is a NUT for words. When most girls were getting their first Barbie Dreamhouse, my father actually had to build a Barbie Library for her.\"\n\nMadison laughed so hard she almost cried. \"I'm not sure what's scarier. That she would want the library or that she played with Barbies!\"\n\n\"Oh, she won't want to admit it, but she was a girly girl, in an alternative kind of way. She has, and I kid you not, read the dictionary.\"\n\n\"No fucking way!\" \n\n\"Yep. It was a junior dictionary, but it was still fuckin' huge. My mom bet her she couldn't do it as a way of shutting her up. It did for an entire summer. Then my sister walks into the kitchen one day, and keep in mind she was thirteen, and slammed the dictionary on the table. Mom says, 'You know if had just raked the leaves like I'd asked, you could have earned this in an a few hours.' Puts twenty bucks on the table and just looks so smug. Heda goes, 'Yeah, but then I wouldn't have had an excuse not to do chores all summer.' Mom just about shit herself.\" He reached out to keep Madison from falling out of her chair. \n\n\"I knew she was smart, but --\"\n\n\"Oh, she's horrible at the sciences, I promise you that. Words and athletics make her happy. That and being one-up on Mom in their never-ending verbal maneuvering.\"\n\n\"And you've got two other brothers, right?\"\n\nHe nodded. \"The twins, Richard and Rob. Rob's in grad school and is gonna be a lawyer, and Richard's a fire fighter up in Denver.\" \n\n\"Are you all full shifters? I can't tell that, even with the sonar,\" she said dejectedly.\n\n\"Actually, it's just Heda, Mom, and me. Heda got the Progenitor Strain, obviously, but for me the Noah Strain was dominant. Probably Dad's genes. Richard and Rob also have the Noah Strain, but their totem animals haven't manifested. Dad's never did.\"\n\nMadison nodded. There were two ways in the shifter world to gain lycanthropy, which was to contract either the Progenitor Strain or the Noah Strain of the disease. Both Strains existed in the same DNA sequence, but whichever activated first, it killed the other. Those with the Progenitor Strain inherited the totem animal of a parent with active lycanthrope, and those with this Strain always developed the ability to shift. This Strain was only transmitted in the mother's womb. The Noah Strain was a little different in that those who had it dominant might never shift. On the other hand, they might also develop the ability to shift into a totem animal of any species. \n\nNo one was sure why certain species were \"chosen\" and others were not, but it seemed to help keep some great planet-wide balance. Whenever one species began to die out for any reason, the Noah Strain seemed to start favoring that species. Philosophers and scientists in the shifter world were still debating the \"whys\" and \"wherefores,\" but most people just accepted it and moved on. The Noah Strain could be transfered in the womb or by a savage transfusion of blood, such as in an attack. Such attacks were more often than not fatal and had been disallowed by the World Shifter Council. And the older one got, the less likely it would be that the Noah Strain would manifest, with Neil Reichert's late-bloomer status a rare exception.\n\n\"So what kind of bird are you?\" she asked.\n\n\"Raven.\"\n\nMadison let out a little gasp and leaned back. Ravens were the mystics of the bird world. Magic rarely if ever worked on them, and they could trace magic back to the source. But there was another \"gift\" that sometimes happened that was less welcome. \"Have you ever had the visions?\" she asked. \n\nHe shook his head. It was a common question, though it always made him a tad uneasy, as if answering the question would jinx his luck. Raven-shifters sometimes developed the ability to prophetize or see into the future, but it often came with a price in that the seer went mad. \"Nope, and here's to hoping I never do.\" He raised a soda can and clinked it against Madison's, who reacted with a \"Here here.\"\n\n\"Well well well,\" came an all too familiar voice that made Madison develop an unflattering snarl. \"Seems like the Fuck-a-loser club got a new member. Listen buddy,\" Alvin said as he stepped up to the table, \"you look like the kind of guy who can do better than to pity fuck a DM, so why don't you scram so the bitch and I can talk.\"\n\n\"Ed, this is Alvin Hannity. He's already made the DM joke and called me a bitch, so his use as a conversational partner is pretty well spent. Of course, that tirade went on longer than his dates usually do --\"\n\n\"You fucking --\"\n\nEd slowly stood up and turned to face Alvin Hannity and his three goons. Two of them just HAD to be from the football team, and the girl just seemed to have \"For a good time call\" tattooed onto her psyche. \"Alvin Hannity? Any relation to William Hannity?\"\n\n\"He's my father,\" Alvin said.\n\n\"Your father is a great man,\" Ed said. \"I did some work with him hunting down an embezzler a while back. I liked him. So are you really his son, or did the local mailman get a little forward with the missus because YOU are nothing like him.\"\n\n\"Fuck you,\" Alvin said, hauling his hand back.\n\nBefore his opponent could punch, Ed had produced a shiny badge, which got Alvin's attention. \"I'm a Paranormal Private Investigator here on official business of the FCU Council of Shifters and the North American Shifter Council.\"\n\n\"So what? So you're a private dick.\"\n\n\"But at least I'm not a public dick,\" Ed replied calmly. \"But I can recommend to both Councils that someone be held for questioning, and displaying random bouts of sociopathic behavior certainly moves you up the suspect list.\"\n\nAlvin looked perplexed. \"Huh?\"\n\n\u2028\"It means, guano for brains, that he can arrest you and parade you around like a suspect if he wants,\" she said acidly. \"So get lost. My complaint against you isn't going away, though I wish to the Goddess that you would.\"\n\n\"I don't know who the hell you think you are,\" Alvin said, \"but you obviously don't know who you're messing with.\"\n\n\"Actually, I do. I even identified you by lineage.\" Ed put his arm around Madison's shoulders. \"Am I daft, or does he really have a problem with short-term memory?\" He sighed. \"And my name is Edgar Adler.\"\n\n\"As in Heda's brother,\" Madison chipped in.\n\nEd rolled his eyes. \"Usually it's, 'Oh look, it's Jessica's boy.' Now, it's 'Heda's brother'? Why can't I just be known for me?\"\n\nAlvin was furious about being ignored when he was attempting to be threatening. \"You wouldn't be so tough without your badge.\"\n\n\"Actually,\" Edgar replied, his voice so cold that it was almost brittle, \"my badge is the only thing keeping me from beating you into mulch were you stand.\"\n\n\"C'mon Alvin, the bitch ain't worth this,\" Bill Baker said, trying to drag his illustrious leader away. Alvin put up a good show of pretending he still wanted to stay and fight, but something about Edgar's gaze and tone put his nerves on edge.\n\n\"Punk ass bitch,\" Ed muttered under his breath, then he turned a curious eye to Madison. \"Okay, want to explain THAT?\"\n\n---------- ---------------\n\nThat evening . . . \n\n---------- ---------------\n\n'No one is listening,' the Cold thought, moving through its own lair like a harsh Arctic wind. 'Why would they? Fools! They did not listen the last time, but by all that is unholy I will make them understand.' He looked towards the Spanish Mantle and the One inside. The One's tongue had been ruined and it smelled of feces and urine and stank of a fear so tangible it could almost be touched. The Cold approached the One. \"You will go now, and you will let them know. You will speak volumes without saying a word. You will continue the Message.\" It grabbed another special tool off of a nearby tray. \"Prepare.\"\n\n---------- ---------------\n\nSome time later . . .\n\n---------- ---------------\n\nHeda stepped out of the gymnasium after the practice from hell. She was convinced that her coach was the devil herself come up from hell to make Heda run shuttle sprints until she sold her soul in order to escape. It was the only thing that made any sense. Her brother was perched on the short wall that was in front of the gym.\n\n\"Hey, how'd the talk with Madison go?\"\n\n\"I've gotta tell ya, I like this one Heda. She's got a good head and a sharp tongue, as I discovered when one Alvin Hannity showed up. You could've warned my about the 90210 drama ya know.\"\n\n\"It just didn't occur to me. I take it you scared him off?\"\n\n\"Yeah. Madison got a kick out of it. She told me she hasn't had a lot of 'backup' until you showed up.\"\n\n\"It bugs me that people make such a deal about the blindness, which a lot of them probably wouldn't do if she'd just come out about her Gift.\"\n\n\"People who have been wounded are cautious,\" Ed reminded her. \"Be patient. So tomorrow --\" He stopped talking when Heda's cell phone went off.\n\n\"That's not my ring tone,\" she muttered, then remembered her other phone and her heart skipped a beat. \"It's the Neighborhood Watch phone,\" she said, quickly shifting through her bag to find it. She pulled it out, placed it to her ear, and immediately turned pale. \"Yeah. Understood. Actually he's with me. Got it.\" She hung up. \"They found the second victim.\"\n\n----------- -------------------------\n\nTo be continued . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "fantasy",
        "lesbian",
        "lycanthropes",
        "magic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/flying-blind-ch-02"
}