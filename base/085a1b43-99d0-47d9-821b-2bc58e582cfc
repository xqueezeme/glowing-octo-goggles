{
    "title": "Ringside Seats Ch. 03",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\n------------- -----------------------\n\nThe following story is a work of fiction. Any resemblance between actual persons, living or dead (or just confused) is entirely coincidental. Please do not copy/redistribute the story, in part or in total, without the author's permission.\n\nThis story takes place in the entirely fictional city of Springfield, California, so don't go looking for it on a map. And in my little fictional world, there are no unwanted pregnancies or STD's, except as plot driving devices. The author encourages the practice of safe-sex.\n\nThis story is about two of my favorite things: Lesbians and professional wrestling. It is also the third part in an ongoing series.\n\n-------------- ----------------------\n\n\"I can't believe I did that,\" Lilly Kline said as she rocked back and forth on her bed, her knees tucked in against her chest. Several days earlier, she had been employed at a job that she hated and had a secret crush on one a female professional wrestler. Since then, she had assaulted another woman who had insulted the girl that Lilly was interested in, lost her job, and the whole \"secret\" part of her secret crush had been blown out of the water when Lilly had kissed Tiffany in the parking lot of a McDonalds. Then Lilly had run off like a frightened rabbit. She hadn't been able to sleep at all the previous night, but she wasn't sure if that was from her incredulity regarding her kissing Tiffany, or the lingering excitement of that same event. Then she heard a knock on her door.\n\n\"Lilly?\" came a familiar voice at the door. \"I know you're in there! Your car is here and you left your light on.\"\n\n\"Go away Deb!\" Lilly said, leaning against the wall.\n\n\"I don't think so,\" Deborah replied. \"I really think we should talk.\" There was a pause. \"Lilly, I saw the whole thing. But don't worry, I didn't tell anyone and neither did Tiff. I just want to talk.\"\n\nA few seconds later, Deb heard a chain sliding and the deadbolt being unlocked. A very dejected-looking Lilly opened the door, then wandered back to sit on her bed. Deborah closed the door behind her and sat down at the other end of the bed.\n\n\"So . . .\" the blonde woman started.\n\n\"So . . .\" Lilly replied.\n\n\"Well, I guess this means you won't be bringing any boys home to meet your parents?\" Deborah said.\n\n\"You would 'guess' correctly,\" Lilly said despondently.\n\n\"So, let's hear it. The whole story, staring with when you knew, and ending with why you kissed Tiffany.\"\n\n\"Kinda pushy, aren't you?\" Lilly said.\n\n\"Yes. And I'm not easily distracted. We've already established that you and I have never been close. Let's cut that out. C'mon, talk to me. You're going to have to talk to Tiffany sometime, so wouldn't you rather hear it all out loud before that happens?\" Deborah just kept staring at Lilly until she got a response.\n\nLilly sighed. \"She's just so . . . and I'm so . . .\" Lilly was making incomprehensible motions with her hands, trying to find a way of expressing herself.\n\n\"I couldn't have said it better myself,\" Deborah said with a smirk. \"Tiffany's something, isn't she? And did you know she thinks that she's unattractive?\"\n\n\"It's bullshit,\" Lilly replied. \"Probably because of bitches like Gabby talking down to her all the time.\"\n\n\"I think Tiffany's image problems started before Gabby, but she probably didn't help.\"\n\n\"But Tiffany is more than beautiful. She's genuine. She doesn't backstab people to get ahead. She says what's on her mind. She stands up for people who deserve it, even when they wouldn't stand up for her.\"\n\nDeborah felt a twinge at that statement. She and Vicky and Jeanna all still felt a bit guilty about leaving their new friend dangling on her own in the wind as long as they had. Everyone had assumed the powerful woman was impervious to the barbs she had received, but apparently she had felt every sting.\n\n\"That's all true,\" Deb said. \"So why didn't you say anything? It's just in the last few weeks that you've been . . . less irritating than usual.\"\n\n'Could it really hurt just to tell her?' Lilly thought. She sighed again. \"I have trust issues.\"\n\n\"I gathered. Why?\"\n\nLilly rested back on the bed, staring at her ceiling. \"My parents . . . they weren't exactly the most 'hands on' kind of people. They always sent me off somewhere to go to school. That includes a small, all-girls Catholic high school.\"\n\n\"This is beginning to sound like one of my movies,\" Deborah said. \"What happened?\"\n\n\"Well, I began to have feelings . . . I guess that isn't too strange. Most people do at that age. But I didn't feel it for the boys we saw walking past the school.\"\n\nDeborah smiled. \"What was her name?\"\n\n\"Anna Palin. Star of the school's basketball team. Long legs . . .\" Lilly drifted off for a moment. \"We also roomed together in the same dorm. One of the other girls scored some pot . . .\"\n\n\"Now this is REALLY sounding like one of my movies,\" Deborah chuckled.\n\n\"Well, we all got baked, played truth or dare, and there was a whole lot of girls kissing girls going on. Most of it was pretty innocent. But I got dared to kiss Anna, and I wasn't feeling very innocent when I did it. And when she slipped me some tongue, I got the impression she felt the same way. Then we went back to our dorm room . . . and you can guess the rest. We were both fifteen.\"\n\n\"What happened?\" So far, it didn't sound to Deborah like a bad story, which probably meant the worst was coming.\n\n\"For about six months, I learned everything I wanted to know about being with a girl. We had both turned sixteen by the time we were caught. Another student stumbled into our room when we were . . . you know. Anna . . . she told everyone that I had gotten her stoned and then seduced her. She was the star athlete and her parents donated a lot of money to the school. I was . . . expendable. So all her friends . . . all my friends . . . everyone turned on me. No one wanted to be associated with me.\"\n\nDeborah scooted down and pulled Lilly against her. \"I'm sorry, hon. Kids can be cruel.\"\n\n\"It wasn't just kids. The faculty treated me like a leper until they finally got around to kicking me out. My parents didn't care about my side. They just figured that I was a drug addict and a deviant, and sent me off to two years of military school to 'set me straight.' But my permanent record went with me, so I basically got the same treatment. The only people who would talk to me were the guys in the motor pool, so I kind of got assigned to work there until I graduated. But I actually kind of liked having a sense of purpose, so I enlisted in the army. A year in, one of the base officers took a 'liking' to me. When I shot down his advances, things got ugly. He went back and dug up everything that he could on my past, found out I was gay and got me kicked out.\" Lilly was actually beginning to cry. \"And the worst . . . the worst part was having to crawl back to my parents and ask for help. They made it seem like such a burden on them to help out until I could get into college. They've got a fucking house here in Springfield and one in the fuckin' Bahamas, but it was INCREDIBLY inconvenient to let me stay in either of them for a few months.\"\n\n\"Welcome to the club,\" Deborah said, her eyes a bit teary.\n\n\"What club?\"\n\n\"The outcasts.\" When Lilly looked confused, Deborah cracked a smile. \"A single gay mother, a bisexual ex-porn-star and now . . . and now a young lesbian ex-army philosopher.\"\n\n\"What about Vicky and Jeanna? Are they . . .\"\n\n\"I think any questions you have about Vicky and Jeanna should be addressed to them,\" Deborah said sternly. She wasn't going to be the one to out the two women. \"But . . . there's something you should know, but you CAN'T tell your uncle.\"\n\n\"Okay,\" Lilly said, somewhat interested.\n\n\"Tiffany . . . and I . . . well, we've been more than 'just friends' on a number of occasions.\"\n\nLilly's eyes shot open. \"So . . . so I never even stood a chance? She and you . . . but you're married and . . . Damn it, it's not fair!\"\n\n\"Before you go ballistic and hurt me or anything, she and I are NOT an item. We both . . . we both needed someone. And we both needed to be wanted, if that makes any sense. I'm not the one who's going to get to settle down with her and knit potholders with her.\" Deborah smiled. \"That job is still open. But it'll never be you if you hide in your room for the rest of your life.\"\n\n\"But . . . but why aren't you . . .\"\n\n\"Trying to make it work with her? We've already mentioned that I'm married, and I'm not likely to be in a position to change that anytime soon. And I'm not discouraging you because you seem to have good intentions. But keep in mind, any thoughts of Tiffany had better include Sally, otherwise you're in for a wake-up call.\"\n\n\"So . . . you think I should . . . go for it? And there won't be any problems with you and me?\"\n\n\"I think you should go for it you really want it, and I'm not the one you need to worry about. But if you're good with Tiffany, you're good with me.\" Deborah patted the young woman on the leg. \"Now get your swimsuit. A bunch of us are going to Great Falls Water Park this afternoon.\"\n\n\"I can't . . . I'm not ready,\" Lilly whimpered.\n\n\"You can and you should. Of course, I can't make you, but the longer you wait, the more of a chance someone else will come along. And you'll actually have a chance to see her in a swimsuit. I promise, it'll be worth it,\" Deborah said. \"Just . . . just tell her what you told me. Let her get to know you. You're in her good graces right now. Don't blow it.\"\n\n\"I don't have a bathing suit.\"\n\n\"We'll go buy one.\"\n\n\"I don't have the money.\"\n\n\"I'll pay for it,\" Deborah countered.\n\n\"But . . .\"\n\n\"Listen,\" said Deborah, putting her foot down, \"you can go with me to buy a suit and then go to the park with us, or I can call Tiffany right now and tell her where to find you and have her come by your room.\"\n\n\"I'll get my purse,\" Lilly said, finally caving in. 'When did Deborah get so bossy?' she grumbled mentally.\n\n\"Good girl. And don't even try to crawl out the bathroom window. I've seen those movies too.\"\n\n-------------- ------------\n\nThat afternoon . . .\n\n-------------- ------------\n\n\"This has turned into a circus,\" Tiffany said as she got out of her car. Somehow, her friends had sprung this excursion on her at the last moment, and since Jeanna had already brought tickets, Tiffany would have felt bad about letting them go to waste. And when Jeanna had dropped by to spring the news, Sally had looked so excited that her mother couldn't say no. But Tiffany had made the mistake of calling her brother and seeing if he wanted to bring his wife and kids, and her entire family had decided to show up, including cousins. Not that she minded being around her family, but she had got a call just before leaving that Deborah was showing up with Lilly in tow, and Tiffany wasn't sure what was going to happen when THAT young lady arrived. 'Maybe I need a chaperone,' she pondered. She had talked with Deborah on the phone earlier, but her friend was being tight-lipped about her conversation with Lilly. 'Some friend,' she thought irritably.\n\nSally was running around in circles with her cousins under the watchful eye of Vicky, who found herself up to her elbows in pre-teen children. Tiffany was sure that some of the young boys might be sent through puberty a bit early after seeing Vicky in her bikini. It wasn't that it was an inappropriately skimpy suit for a family park . . . it was just that Vicky could make a burlap sack look sexy. But the blonde beauty was having a blast already, and her girlfriend was watching her from nearby. Tiffany wished they would just come out so that they could be a more public couple, but she understood why they had their secrets. And they would probably be especially careful that day, since Vicky had apparently invited the DeFields, as well as Marcia \"Vixen\" Levinson and her boyfriend Tom.\n\nThen, Tiffany saw Deborah's car pull up, and her friend quickly got out. The simple black one-piece suit she was wearing was barely able to contain those enormous tits, and Tiffany was willing to bet that Deborah was going to attract any attention that wasn't focused on Vicky. Deborah stood at the passenger side of her vehicle, trying to coax her passenger out.\n\nFinally, the dark-haired young woman got out of the car, one wonderful leg at a time. Tiffany had never seen the girl in anything but her semi-formals or casuals before, and she liked what she was seeing. Lilly had a hot, tight body! She wasn't built or cut nearly as much as Tiffany was, but Lilly would still have looked pretty good in a fitness competition. Her slim hips were sporting a sexy pair of tight blue swim-trunks that exposed just a bit of butt poking out the bottom, and her handful-sized breasts nicely filling out her bikini top.\n\n\"Damn,\" said Jeanna nearby. \"Not bad! I'm a little surprised to see her here, but the view is nice!\"\n\nTiffany silently but wholeheartedly agreed. She was still glad she hadn't told Jeanna about what had happened last night. This could be awkward enough without her friend's \"good natured\" ribbing. Deborah and Lilly walked over to Tiffany. Deborah gave her part-time lover a friendly hug, then waited for one of the two to say something. They just stared at each other awkwardly. Deborah rolled her eyes, then noticed how many people were nearby.\n\n\"Last one into the water is a rotten . . .\" Deb started, then was almost stampeded by children heading towards the gate, their parents in hot pursuit. Deborah sauntered after them, hooking up with the other grown-ups from NAXW. She glanced over and saw Jeanna walk over to Vicky before doing something that took Vicky by surprise. Jeanna took her girlfriend's hand in her own and moved towards the ticket counter. Vicky's look of surprise was unmistakable, and she quickly flushed with joy.\n\nLilly saw the two women walk off, hand in hand. \"Wait,\" she said, forgetting her own problems for a moment. \"Are they . . . I mean . . .\"\n\n\"Yeah, they are,\" Tiffany said. She didn't think she that needed to keep it a secret if Jeanna and Vicky weren't going to keep it a secret anymore.\n\n\"There's a whole lotta gay women around here these days,\" Lilly said, staring at her feet.\n\n\"Apparently so,\" came the response. \"More of them than I anticipated, or so it would seem.\"\n\nLilly looked Tiffany in the eyes. \"I'm SO sorry about yesterday. That was WAY too forward of me. I had no right . . .\"\n\n\"To hell with 'right.' Why?\" Tiffany was confused, but she didn't want to spook the girl.\n\n\"Uhm. Because . . .\" Lilly steeled her spine. \"Because I'm attracted to you. I have been since I first started working for the company, and because I'd been wanting to do it for so long that . . . that I stopped thinking.\"\n\nTiffany's head was reeling. That was a lot of confession to wrap her brain around in such a short period of time.\n\nLilly waited a moment, then began to babble again. \"I knew it. I knew I fucked up, and now you're trying to figure out how to get out of talking to me. I'll just wait out here until you guys are done and . . .\"\n\n\"No, that's not it at all,\" Tiffany said, finally finding her voice. \"I'm just . . . you have a knack for surprising me. I used to think you hated me like you hated everybody else. This is . . . it's strange for me.\"\n\nLilly was taking deep breaths and trying to get her heart rate back down. 'Okay, second chance here,' she thought. \"I don't hate you . . . or a lot of people. I . . . I just assume the worst about them . . . and I assume that they think the same way about me.\"\n\n\"That's kind of . . . bleak, isn't it?\" Tiffany replied.\n\n\"Yeah, I guess so.\"\n\nTiffany motioned towards the park by tipping her head. \"So why don't you tell me a little about yourself. And . . . and why you feel the way you do? After we go on a couple of rides first,\" she added.\n\n\"That would be cool,\" Lilly replied, thankful for the brief reprieve before starting the whole story again.\n\nActually, Lilly had a lot of fun that afternoon. She hung out with all the girls, as well as Tiffany's family. She and Jeanna actually had to be dragged away from The Screamer, which was a four-story-drop waterslide. Tiffany stuck mostly to the tube slides and kept an eye on her daughter. Vicky spent as much time near Jeanna as she could, though no force on Earth was going to get her to go on The Screamer. Apparently she and Jeanna talked with all their attending coworkers at some point or another, leveling with them about the girls' relationship. While some conversations were serious, no one seemed to be ready to condemn the two of them. In fact, some of them didn't seem all that surprised.\n\nBut Lilly's most relaxing time was when she and Tiffany took a break from the rides, climbed into a couple of innertubes and floating along a canal that encircled the entire park. That was when Lilly was able to tell Tiffany about the unfortunate string of events that led up to her dismissal from the armed services, as well as a number of bad relationships that had occurred in college. Lilly had developed a tendency to wait until she was approached by a woman, under the delusion that if the girl worked at it a bit, it meant that she was more serious in her pursuit. That had turned out to be a fallacy. And Lilly got to learn about the unfortunate set of events in Tiffany's life that ended with a blessing, namely the birth of Sally, and she also found out how close Tiffany had come to quitting the business. Even though she had only known Tiffany for a couple of months, Lilly couldn't possibly imagine her NOT being in a wrestling ring. \n\n\"So Deborah talked you into staying?\" Lilly asked.\n\n\"Yeah. I was going to quit right before the Los Angeles show, but she screamed at John long enough to get me back on the card. Things have been . . . better since then. Well, better except for Gabby, and you kind of took care of that.\"\n\n\"I am SO lucky I didn't go to jail for that,\" Lilly said.\n\n\"Sounds like your uncle doesn't have the balls to deal with your folks, especially for a disposable piece of garbage like Gabby.\"\n\n\"How many have there been?\" Lilly asked.\n\n\"About six within the company, at least that I know of. Deb deserves so much better than him,\" Tiffany said, almost absentmindedly.\n\n\"By the way . . . Deborah told me . . . about you two. For what it's worth, I like her. I'm glad you to were able to help each other out,\" Lilly said. Then she saw Tiffany blush bright red.\n\n\"'Help each other out.' Is that what they're calling it these days?\"\n\n\"I would've called it something else, but it looks like you're about to have company,\" Lilly said, looking at the bank of the canal as Sally leapt from the side directly into her mother's lap. The air was driven out of the woman's body and her butt sank all the way through the hole in tube. She was actually wedged into the hole, with only her head and her legs above the knee visible above the rim.\n\nSally hugged her mom's head. \"Hi Mom!\"\n\nTiffany gasped and tried to smile. Lilly started to laugh, as did the few other people who were gathered on the bank.\n\n\"Huh . . . honey,\" Tiffany finally got out. \"Mommy can't breathe.\"\n\n\"Sorry,\" Sally said. She looked around, then crawled from Tiffany's innertube onto Lilly's. Lilly wasn't sure what to do, particularly when Sally grinned at her, then curled up in her lap and watched her mother trying to extricate herself from her predicament.\n\nLilly noticed Deborah standing on the bank and watching. She had an evil grin on her face. When Lilly mouthed the words, \"What do I do?,\" Deb just shrugged. This is what she had been talking about: Tiffany and Sally were a package deal. \"Did I invite you over here?\" Lilly asked, shaking her head.",
        "\"No,\" replied Sally, pouting out her bottom lip. \n\nLilly smiled and started to tickle the young girl until she squealed and tried to scurry back over to the safety of her mother. But Tiffany paddled just out of reach, and she smiled as her daughter continued to giggle outrageously. It was one of her favorite things to hear.\n\nThe group ended their outing by engaging in an epic-sized bumper boat war. Sally was in a boat with her mother, making everyone else take it easy on them. But Tiffany took advantage of her secret weapon and smashed into everything that moved. Then they finished up and said their good-byes. Sally hugged all her cousins, her uncle and her aunt, and then the group broke up and went their separate ways.\n\nBut before climbing into Deborah's car, Lilly felt a hand on her shoulder.\n\n\"Hey,\" said Tiffany.\n\n\"Hi. Listen,\" Lilly started, \"I had a great time today.\"\n\n\"Would . . . would you like to try it again? Maybe . . . tomorrow?\"\n\n\"Like a date?\" Lilly asked.\n\n\"Yeah. Just you and me. Betty's willing to baby-sit, and . . .\"\n\n\"Absolutely! I'd love to,\" Lilly said. It was more than she thought she should hope for. \"Maybe a movie, or . . .\"\n\nIt was Tiffany's turn to surprise someone. She grabbed the sides of Lilly a friendly kiss. \"I'll see you tomorrow.\" Then she turned around and headed back to her car, and Lilly had to be helped into the car.\n\n------------- -------------------------------------\n\nThat evening, at Deborah's house . . .\n\n------------- -------------------------------------\n\n\"I like it when you girls come by to house sit. Someday, I might even let you do it when I'm not at home,\" Deborah moaned as Jeanna and Vicky jockeyed for position between Deb's thighs and a slice of pie. The girls had all met up after their water-park adventure and been enjoying themselves on and off for a couple of hours.\n\n\"I wouldn't mind sleeping in this bed, but it's much more fun having sex in it,\" Vicky replied, rubbing up one side of Deb's opening just before Jeanna licked the other side.\n\n\"You two make such a good team,\" Deborah cooed.\n\n\"That's why we ARE a team,\" Jeanna said. With Deborah on her back and Vicky between that woman's legs, Jeanna gave up her spot so she could kneel behind her girlfriend and have unrestricted access to the prettiest pussy in all the land. Vicky had been all over her for most of the day since Jeanna revealed her willingness to go public, so Jeanna needed to give the hot blonde a little of what she craved. She shoved two fingers from one hand into Vicky's cunt from behind and then started licking around them as she started to pump. \n\nVicky rested her lips on Deb's opening and began to moan. She had been so turned on earlier that she had already cum three times, but Jeanna was going for more. Vicky stuck her tongue between Deborah's nether lips, but she kept her tongue action leisurely. It was more like she was getting to know that orifice rather than trying to get immediate results. Deborah's huge tits were rising and falling and she was moaning contentedly. 'I think I'm getting better at this,' thought Vicky.\n\n\"C'mon sweet thing, show me what you've learned.\" Deborah was coaxing the younger girl to strive to new heights of oral pleasuring, and Vicky was rising to the challenge. That delicate little pink tongue was taking its sweet . . . sweet . . . sweet time finding all the sensitive parts of Deborah's paradise. \"Jeanna, make her go faster,\" Deborah said, somewhat impatient to experience another orgasm. \n\nJeanna used her free hand and gave her girlfriend a quick slap on the behind. \"You heard the woman,\" she said before continuing her own oral attentions. She flipped over onto her back and pulled Vicky's crotch closer to Jeanna's face. She just started running her tongue deep into Vicky's hole, gripping the girl's ass tightly as she did so.\n\nVicky responded obediently to the spank by licking faster. Like Deborah had taught her, she spent most of her time licking the surface and playing with her fleshy inner and outer labia. She couldn't help but watch Deborah running her hands over the flesh-and-implant mounds attached to her chest. Vicky almost wished she had a dick to fuck those tits with. 'Wait, doesn't she have toys?' she thought, then filed that idea away for later use.\n\nThe only thing that would make Deb's life any better at that moment would be if Tiffany were sitting on her face, but she knew that those days might be coming to an end. 'She's got a date with Lilly tomorrow. I never would've seen THAT one coming,' she thought. 'Speaking of \"coming,\"' she added as a few well-placed tongue-lashings had Deborah's brain reeling. She could never cum in the quantities that Vicky had become famous for, but she gave it her all as her juices flowed onto the younger woman's face. And like the trooper she was, Vicky didn't stop licking until Deborah was finished.\n\n\"Can we get the toys now?\" Vicky asked innocently, wiping the cum from her chin.\n\n\"If you insist,\" Deb replied. \"They're in the top drawer . . . middle . . . of the dresser.\"\n\n\"Gotta keep 'em handy,\" Jeanna said, lying next to her buxom hostess while her girlfriend ransacked the plethora of dildos, vibrators, anal beads and plugs that had the honor of keeping Deborah company on those lonely nights. Jeanna draped half her body onto Deb's and started feeling up those big old tits while Deborah grabbed Jeanna's ass.\n\nVicky was rifling through the toy drawer, trying to decide what to use first. She settled on the seven-inch, flesh-like dildo and strap-on harness. \"I . . . I want you . . . to suck it,\" Vicky said, trying to find her voice when talking to Deborah.\n\nDeb grinned. 'So, the mouse wants to be a lion?' She got on her hands and knees, sitting her butt down on her feet until she was sitting like a pet dog. She looked up at Vicky. \"What do you want me to do again? Say it . . . louder.\"\n\nVicky was smiling as sweetly as a girl sporting an \"erection\" could. \"I want you to suck my cock!\"\n\nDeb grabbed the shaft with one hand, opened her mouth and sucked gently on the head of the phallus. She didn't stay there long though, moving her hand out of the way as she sucked the whole toy into her mouth.\n\nJeanna sat on the bed behind her, reaching down and pushing a couple of fingers into Deb's box from behind. She was enjoying seeing this side of her lover, but she hoped it didn't go too far. Jeanna kind of enjoyed being the \"powerful\" one of the couple.\n\nVicky was pumping her new appendage into Deborah's open mouth. There was a certain feeling of power that the act filled her with. She looked over at Jeanna, who flashed her a look of approval as she finger-fucked Deb. \"I want to fuck your tits now,\" she said, looking back to Deb. Deborah pulled her lips away from the fleshy toy, leisurely getting back onto the bed and laying down. Vicky followed her, straddling her stomach.\n\n\"I've seen guys do this in some of those videos . . .\" She blushed, looking over at Jeanna and remembering their time together in the video booth at Captain Dick's Adult Emporium down in Los Angeles.\n\n\"Jeanna, could you grab that bottle of lube?\" Deborah asked. She poured a generous helping between her tits, then pushed them together.\n\n\"She looks so sexy,\" Vicky said just before Jeanna kissed her. The two of them were staring at Deb as she made her \"sexy porn face\" while Vicky fucked her tits. Jeanna leaned in and began sucking on Deb's nipples as the sex toy traveled the canyon between them. Deb licked her lips.\n\n\"Hey Jeanna, why don't you have a seat over here so I can see what you're made of?\" Deborah asked. Jeanna was quick to take her up on the offer, straddling Deb's face while facing Vicky. She kissed her tag-team partner as Deb's tongue crept into Jeanna's pussy. Vicky kept pumping her toy between Deb's tits and fondling those same globes, while Deb had two handfuls of Vicky's ass.\n\n\"I want to fuck her now,\" Vicky said, albeit a bit reluctantly. She also wanted to keep kissing her girlfriend.\n\n\"As long as she keeps doing what she's doing,\" Jeanna moaned. Deb gave better head than any girl she had ever met. Jeanna placed her hands on Deb's now vacant breasts and held on for dear life. Meanwhile, Vicky was positioning herself between Deb's thighs and thrusting the dildo deep into the woman's warmth. Deborah locked her ankles together behind Vicky's back as the younger girl proceeded to violate her depths.\n\n\"Harder,\" moaned Deb between licks. Jeanna's thighs were pressed tightly against the sides of Deb's face, but Vicky still heard the plea. She slammed the dildo home repeatedly, not satisfied until she heard the audible slap of latex on flesh. And the harder she pounded, the better Deborah seemed to like it. And the more Deborah liked it, the faster her tongue and lips moved in their pleasuring of Jeanna's privates. It was a win-win situation.\n\nVicky was fucking Deborah was a passion, and Jeanna was staring straight at her lover. Vicky was getting wilder every time they got together, and Jeanna wondered if she had bitten off more than she could chew.\n\n'Am I going to be good enough to hold on to her?' Jeanna wondered suddenly. But her mental train of self-doubt was temporarily derailed as Deb's face froze. Jeanna watched as her girlfriend pulled out of Deb's pussy and shoved the latex cock into the woman's asshole. Deborah gasped as her backdoor was unceremoniously penetrated and filled with sex-toy-goodness. It took her a second to adjust, but when Vicky started slowly pumping the device in and out of her ass, Deborah returned to Jeanna's pussy with almost fanatical fervor. What had once been one of the most talented mouths in the porn industry was giving Jeanna everything it had, and Jeanna could barely stand it!\n\nVicky saw her girlfriend's eyes starting to glaze over, and she couldn't help but smile. She knew quite well what Deborah's orals skills felt like, as several damp spots on the comforter provided testament to. Vicky placed her fingers on the swollen upper portion of Deborah's mound and started rubbing them in small circles while she fucked Deborah's ass. She knew Deborah liked it best when she had both of her lower openings being stimulated at the same time. Deb's ass was as tight as a clamp. 'I wonder if she exercises it somehow,' Vicky thought absentmindedly.\n\n\"Oh good God,\" Jeanna groaned as her hips shuddered, her abdomen clenched and her body experienced a delicious orgasm. Vicky heard Deborah actually gargling as Jeanna's cum came flowing down. When she was done, Jeanna collapsed onto Deb's body, nuzzling Vicky's hands aside so she could gently lick Deb's clitoral area. Vicky stroked Jeanna's head while they double-teamed their hostess once again. \n\n'She may be better than either once of us,' Vicky thought smugly, 'but NO woman can take on both of us.' Her confidence was quickly rewarded by Deb's first orgasm. Five minutes later, it was followed by a second. Only then did they let Deborah free, delightfully aware that Deb couldn't care less about getting \"free.\"\n\nThree sweaty, exhausted women huddled up together for a moment, exchanging kisses that ranged from friendly to passionate. \n\n\"You girls don't have to rush off do you?\" Deb asked suddenly. \"I mean, would you mind staying the night? John won't be back, so you could take the spare bedroom if . . .\"\n\n\"Nah, we can stay,\" Vicky said, moving over so she could snuggle with Jeanna.\n\nJeanna felt a little better. Having Vicky's body pressed against her soothed some of her anxiety. It was . . . comforting . . . natural.\n\n----------------- --------------\n\nThe next morning . . .\n\n----------------- --------------\n\nJeanna and Vicky were sitting out by the pool while Deborah took her morning shower. Both girls were lounging naked, thankful for the warm morning sun. \n\n\"Jeanna?\"\n\n\"Yeah?\"\n\n\"What's wrong?\" Vicky asked. \"You've been so quiet this morning. Normally you've made at least five off-color comments and a couple of sexual references by now.\"\n\n\"I'm exhausted,\" Jeanna said. \"Keeping up with you isn't easy.\"\n\nVicky rolled her eyes and then rolled her body over until she was lying on top of her girlfriend, staring down at her. \"Now, what's REALLY going on? Lying to me doesn't work, remember?\"\n\n\"What? I'm . . . I'm not . . . lying . . .\" Jeanna sighed. \"I . . . are you wanting . . . more than me?\"\n\n\"What . . . what's that supposed to mean?\" Vicky asked, suddenly very much awake.\n\n\"It's just I know how you feel about Tiffany . . . and about Deborah . . . and you seem to like having them around just as much as me these days.\"\n\n\"That's not true!\" Vicky said, sitting up as she turned to face her lover. She grabbed on of Jeanna's hands. \"I thought . . . you liked it when we had someone else to play with . . . and I do LIKE Deb and Tiff, but I don't feel anything towards them like I feel about you! You have to believe that!\" Vicky was terrified. She thought Jeanna was going to break up with her or something.\n\n\"I believe that . . . that you like me differently . . . God, I've never been this nervous before. I was so scared about letting people know about us that . . . I began to wonder if you had gotten tired of waiting. Last night I began to wonder if there was anything special about me anymore.\"\n\nVicky was confused. \"Everything about you is special. Why . . . why would you think my feelings towards you changed? I feel the same way about you that I did that first night . . . and that first morning I woke up in your bed.\"\n\nJeanna sat up and gripped Vicky's hands. \"I feel different. When we first met, I was so infatuated by you . . .\"\n\nVicky started to pull away, wanting to cover her eyes before she started to cry. She knew it! Jeanna was tired of her. But Jeanna held her hands fast.\n\n\"Now I realize I love you. And I'm afraid that I've waited too long to tell you and now . . .\"\n\nJeanna's sentence was cut off as Vicky went from trying to escape to hugging her so tight that she could scarcely breathe. \"You waited just long enough,\" Vicky whispered. \"I've loved you from that first moment. I've been so scared you would never feel the same . . . I like Tiffany as a friend and mentor. I like Deborah as a teacher and lover. I love you because you are whatever I need, whenever I need it.\"\n\nJeanna pulled her partner towards her and they kissed again. There was no sense of urgency or sense of time . . . just soft lips and warm breath exchanging necessary pleasantries.\n\n\"Let's go away next week,\" Jeanna said at last, struggling to regain her breath. \"Just you and me . . . to that bed and breakfast just up the shoreline.\"\n\n\"We'll have to miss practice,\" Vicky responded, still a little weepy. \"And I'll have to let the schools know I won't be available.\" Vicky's second job was as a substitute teacher.\n\n\"Practice will go on without us, and they can find another substitute. I'll take a couple sick days at the hospital . . . I love Deb and Tiff, but I need to be with just you for a while,\" Jeanna said.\n\nVicky blushed. \"So, what day do we leave?\"\n\n------------- -----------------------\n\nA week and a half later . . .\n\n------------- -----------------------\n\nLilly was wondering if children were related to cats. Because it seems that the children of the Thurman clan identified which adult was least prepared to deal with them . . . who were allergic, if you will . . . and descended on them like rabid animals. Sally and her cousins were running in circles around Lilly as she tried not to move.\n\n\"Okay, leave Miss Lilly alone,\" came a voice from behind her.\n\n\"But Great Grandpa . . .\" the children whined in unison.\n\n\"You know, I think Kurt was almost done grilling the hot dogs and . . .\"\n\n\"HOT DOGS!\" the pack howled, then took off through the house into the backyard.\n\n\"Works every time,\" said Michael Thurman, slowly sitting down on the porch swing beside Lilly.\n\nLilly grinned. She and Tiffany had been forced to cancel a couple of dates the previous week due to Sally catching a cold, but Tiff had insisted on rescheduling and had invited Lilly to her grandfather's birthday barbecue. Apparently, her family had a lot of these, using them to celebrate just about any special occasion. It was a bizarre concept for Lilly, primarily because her own family usually tried to AVOID spending time with her. \"They're not so bad.\"\n\n\"Don't get me wrong,\" Michael said, lighting up his pipe, \"I love 'em to death. But they're a handful.\"\n\n\"And those other ones were all Tiffany's brother's?\"\n\n\"Four of 'em were Kurt's. A couple of them were neighbor kids, and three of 'em are from cousins. And there's a couple more that I have no idea where they came from.\" He took a puff on his pipe. \"So why aren't you out back with the others?\"\n\n\"I'm a little nervous around crowds. I just needed a break.\" Lilly looked around. \"Where's . . .\"\n\n\"Tiffany?\" Michael grinned. \"She's in back. Betty and Thelma . . . Tiffany's cousin . . . cornered her. I suspect they're grilling her about you. Tiffany hasn't brought a date over in a very long time.\"\n\n\"Really?\" Lilly said, momentarily flushed with pride.\n\n\"Tiffany's played things pretty close to the vest since Sally was born.\"\n\n\"So I've heard. Do you . . . did you ever have any contact with Sally's father?\" Lilly instantly wished she hadn't said anything, as Michael's face clouded over with utter contempt.\n\n\"No. But if we ever do, William's got a shotgun in the closet with that bastard's name on it.\" He shook his head, trying to shake his dark feelings. \"Sorry. Don't much care for a man who walks away from his responsibilities, especially not when my granddaughter is involved.\" He looked directly at Lilly. \"So, word has it that you beat up that Gabby bitch. Good for you.\"\n\nIf Lilly had been drinking, she probably would have choked on it as she coughed in surprise.\n\n\"Sorry. Tiff has told me about her before. I'm glad someone finally put that woman in her place. Enough of that though. Tiffany also said you went to military school?\"\n\nLilly told him about her brief military career and gave a toned down version of why she had been kicked out of the army. Michael had looked annoyed when she gave him the reason. Then he began to talk about his own war experiences. He had been a young man when he had served in the Navy during the Second World War and a bit older when he served in Korea. He had a million war-stories to tell, and was pleased as punch to find someone who hadn't heard them all. William and Rebecca (Tiffany's parents) eventually made their way out to the front porch, rolling their eyes when they heard Michael tell his stories AGAIN. But they humored him. After all, he was turning eighty-seven years old. Eventually, Betty and her cousin Thelma showed up with Tiffany in tow, the latter woman looking someone vexed at her companion. Michael scooted over so Tiffany could sit next to Lilly, and Tiff was looking incredibly embarrassed about something.\n\n\"Don't ask,\" she whispered under her breath when the conversation at large allowed. Lilly put her hand over her mouth to hide her smile. Kurt wandered in with a platter full of food, and the conversation moved to more pleasant things.\n\n------------- ------------------\n\nSeveral hours later . . .\n\n------------- ------------------\n\n\"Okay, WHAT were you blushing about earlier?!?\" Lilly asked as Tiffany walked her to her dorm room. \n\n\"You REALLY don't want to know!\"\n\n\"It was about me, wasn't it? C'mon, tell me!\"\n\nTiffany chuckled and covered her eyes. \"I told my cousin that you used to be in the military. She said, 'Oh, so she likes \"discipline.\" How interesting.' Guess where the conversation went after that?\"\n\n\"I don't think so,\" Lilly said. \"I don't do that . . . you know,\" she said, blushing herself. She turned around and leaned against her door. Things had gone well for her that day, and she wasn't sure how to say goodbye. 'Should I hug her? Shake her hand? Kiss her? Take her inside and fuck her brains out?' She shook her head, trying to get that inappropriate but highly tempting idea out of her head.",
        "\"Neither do I,\" replied Tiffany. At that point, both girls were feeling a bit awkward. \"Well, good night,\" she said.\n\nAt the same moment, both women went to give each other a hug and wound up smashing their foreheads together.\n\n\"Ouch!\" the said in unison. They shared a laugh.\n\n\"C'mere,\" Tiffany said. She gave Lilly a quick kiss on the forehead. \"There. All better.\"\n\nLilly just stared for a moment. Then she kissed Tiffany on the lips. \"All better.\"\n\nTiffany licked her lips, but then she sighed. \"I don't think I'm ready for . . . anything else . . . yet. If we're going to do this, let's do it right.\"\n\nLilly hugged her date. \"I don't think I expected anything else.\" After another quick kiss, but this time on the cheek, Lilly went inside her dorm room for a fast masturbation session and a cold shower while Tiffany headed back to her parent's place to pick up her daughter.\n\n-------------- -----------------------\n\nThe next Saturday night . . .\n\n-------------- -----------------------\n\n'What the fuck is that bitch doing?' Tiffany thought as she stood on the ring-apron, grasping the ring-rope and watch Gabby and Marcia in the ring. Gabby was distracted, making her even more incompetent than usual. Her hateful stare kept falling on Tiffany, even when she wasn't in the ring, as well as on Vicky and Jeanna, who were her tag-team partners in a six-woman tag match. It was \"Good Girl\" Gabby and the Warrior Maidens versus Demonica, Freaky Francine and Vixen. Gabby had taken it badly when Jeanna and Vicky had outed themselves to the company at the Friday practice after they had returned from a sort of honeymoon. But John, in an incredibly dumb move, decided to put a raging homophobe and total bitch in the ring with three people she hated and two people who sympathized with them (one of whom Gabby had almost crippled). It was a single match in a pool of gasoline, and things were about to get explosive.\n\nGabby threw Marcia into the turnbuckle and waited for the tag to Demonica. Tiffany jumped over the top rope and charged. Gabby wasn't selling a single move and her punches and chops were landing a lot harder than they were supposed to. Tiffany began to get a gut feeling that something was up. Finally, Gabby actually got to her spot and Tiffany clothes-lined her over the top rope. Gabby landed on her feet, even though she wasn't supposed to. When Tiffany slid under the bottom rope to continue the fight on the floor, Gabby did something that was unpardonable in professional wrestling. She made it personal. As Demonica was sliding out, Gabby reached under the ring apron and grabbed what appeared to be an actual lead pipe. Not a cardboard tube wrapped in aluminum foil or a well-disguised plastic pipe . . . actual lead. And she swung it at Tiffany's head.\n\nTiffany was caught off guard, but she was still able to raise her arm, taking most of the blow on her elbow. Her arm exploded in pain. Through the haze that suddenly covered her eyes, she bum-rushed her enemy as Gabby took another swing, once again catching Tiffany in the elbow. Gabby was sent sprawling to the floor as Tiffany grabbed her elbow and took several steps backward. The pain was so intense that she was afraid she would pass out.\n\nThe referee, Ron Brown, was stunned. He had to call for the bell and a disqualification, because anything else would look ridiculous to the crowd. But he had not expected this. No one had. Jeanna and Vicky had both dropped character and along with Francine and Marcia dog-piled onto Gabby before she could get up. The crowd either booed or looked confused, and the trainers and medical personnel came rushing out. \n\nAnd through it all, Gabby just kept screaming, \"You're not so tough, are you?!? You sick bitch! And you two are next!\" she yelled at Vicky and Jeanna. Marcia and Francine had Gabby suitably restrained, so Jeanna had to keep Vicky from beating the crap out the prone psychopath.\n\n------------ ------------------------------------\n\nAfter the commotion died down . . .\n\n------------ ------------------------------------\n\nDeborah had just gone to check on Tiffany before she had gotten loaded into the ambulance. All the girls had been sent to separate locker rooms, so she went to the main office, looking for her husband. She found him sitting in his chair, his head in his hands.\n\n\"Have you called the cops yet?\" she asked irritably. She couldn't believe the audacity Gabby had just displayed.\n\n\"Cops? Why would I do that?\" he said, looking pale and puzzled at the same time. \n\nDeborah stopped in her tracks. \"Why? Because that bitch just assaulted Tiffany! That wasn't a mistake! That wasn't part of the script! That was a criminal act, you fucking moron!\"\n\n\"Now let's not be too hasty. We'll give everyone a chance to cool off, and then I'll get Gabby to give her side and . . .\"\n\n\"Shut the fuck up!\" Deborah snarled. \"There is NOTHING to discuss! She attacked my friend! Not only should she be charged with assault, she should be charged with a hate crime! Don't EVEN try and tell me you don't think this was about Tiffany being gay! You heard her . . . \"\n\n\"I heard someone who was very upset at the time and . . .\"\n\n\"UPSET? That wasn't upset! I'M upset! Tiff's seven-year-old daughter is going to be upset! Good God! If you don't call the police right this minute, then I will!\"\n\nJohn's face was red with either anger or shame. Deb couldn't tell which. \"Hey, I'm the president of this company, and I'LL be the one who decides how to handle this!\"\n\nDeborah sat back on a desk. She looked her husband over with a cool and calculating stare. \"I don't care how many times you've fucked her or how good she is in bed. She's a fucking criminal and she WILL be going to jail.\"\n\nJohn went from flushed red to pale as a sheet again. \"I don't know what . . .\"\n\n\"Don't fuck with me. I know you've been 'fucking' with her! Just like you want to do with Marcia, and just like you did with at least five other girls! Just like you did with that ring-girl, as well as your secretary at the real-estate office. I know all about your damn affairs,\" she snarled, \"but I let them slide. But you're so worried about your fuck-buddy getting sent away that you're willing to risk the lives and health of your employees to keep her. It's not going to happen, John. It's never going to happen again!\" Deborah picked up the phone and called the police while her husband just sat there in his chair. He was helpless. He had vastly underestimated his wife's will and resolve, and he had just become a spectator in his own life.\n\nDeborah hung up the phone with a trembling hand. \"The police are on their way. I'm going to go make sure that Gabby stays put until they arrive.\" She picked up the phone and handed it to John. \"You might want to call your lawyer,\" she said in an icy voice. \"Because I want a fucking divorce.\" Deborah turned on her heel and left her husband sitting there, an empty husk watching things fall apart around him.\n\n------------ ----------------\n\nThe next evening . . .\n\n------------ ----------------\n\n\"Damnit!\" Tiffany muttered, then looked around and hoped that Sally hadn't heard. Tiffany was struggling to get her pain medication out of the \"child proof\" bottle while only using one hand. Finally she had to use both, despite the pain in her wrapped and slung elbow. The elbow was broken, meaning she would be out of action for at least six months, and she was supposed to take it easy on the arm for at least three of those months. Luckily, the doctor's didn't see the point of keeping her at the hospital, since she could convalesce just as well at home. Her career . . . her life . . . had been put on hold.\n\nSally was apparently still in her room and hadn't heard her mother cuss. Tiffany sat down on the couch, grimacing all the way. She couldn't wrestle. She was going to have to call into her bartender job to see if they'd let her work. Her income had just been cut, and she didn't have any health insurance. To top things off, the monthly bills were sitting on her coffee table, almost as if to mock her. She leaned back and wiped tears from her eyes with her one good hand. She glanced over at her answering machine, which was blinking red. There were a number of messages there, but she hadn't felt like talking to anyone all day.\n\n\"Mom?\"\n\nTiffany sniffed and quickly wiped her eyes again. \"Hey honey. Your homework done?\"\n\nSally nodded her pretty blonde head. She was carrying a piece of paper with her as she sat down next to her mother. She handed a crayon picture with stick-figure depictions of her and Tiffany at the water park. There were also figures that Tiffany guessed where Deb, Lilly, Jeanna, Vicky, and all of her relatives. \"I'm sorry Mom,\" Sally said, putting her head in Tiffany's lap.\n\n\"It's okay sweetie. Mommy will be just fine,\" Tiffany said through gritted teeth. She hated lying to Sally. She knew she wasn't \"fine\" at all.\n\n\"Do you need to cry? I cry sometimes. But you make it better,\" Sally whispered. She was only seven, but she could sense her mother's distress.\n\nTiffany was developing a headache just trying to prevent herself from crying. Then she heard a knock at the door. Sally got up. There was a stool next to the door, and she used it to clamber up and look through the peephole. \"It's Lilly and Deb,\" she said. She got down and pushed the stool out of the way, opening the door before her mother could concoct a reason to send them away.\n\n\"Hey,\" Deb said.\n\n\"Hey,\" Tiffany said, putting her tough face back on. \"What are you gals doing here?\"\n\nBoth of the women stood there and stared at her blankly. \"Uh,\" started Lilly, \"to see how you're doing?\"\n\n\"Okay I guess,\" Tiffany said. She forced a smile. \"I won't be winning any push-up contests any time soon.\"\n\n\"I . . . I need to talk to you,\" Deborah said, then looked at Sally.\n\n\"Grown-up talk?\" Sally asked.\n\n\"Grown-up talk,\" Deb replied with a slight smile. 'That's going to be one smart kid,' she thought.\n\n\"Wanna show me your room?\" Lilly asked, trying to contribute something. She had already heard what Deb was going to talk about. She had just wanted to see Tiffany.\n\nSally's face lit up. She loved talking about her stuff, and it was time for a tea party with her dolls. She grabbed a nervous Lilly's hand and let her back to Sally's room.\n\nDeb sat down next to her friend and spoke quietly. \"With no bullshit or posturing, how are you doing? What's the damage?\"\n\nTiffany's mouth opened. She wanted to hand out a denial or at least a platitude, but both died on her lips. \"It's broken,\" she whispered. \"I'm out for at least six months, assuming things go well. Which they don't for me, at least not anymore. I'm broke, I've got no insurance, I can't work . . . so how the fuck do you think I'm doing?\" She couldn't hold it back anymore. Tears leaked out of the corners of her eyes. \"I hate that fucking bitch,\" she said. \"If I ever get my hands on her, I'll break her neck!\"\n\nDeborah was more than a little afraid of Tiffany, because she honestly believed that her friend would do what she promised to Gabby in the frame of mind she was in. \"It might be a while before you get a chance. She's in jail right now. She won't be able to make bail for a bit. God . . . Tiffany . . . I'm SO sorry. I should've done something sooner . . .\"\n\n\"Don't start! This isn't about you! And it doesn't matter whose fault it is, because I'm fucked!\" Tiffany hurled the bottle of painkillers across the room. \"What's the point of even suing that . . .\" Tiffany realized that she had been steadily raising her voice, so she stopped and took a labored breath. She didn't want to get mad. She didn't want to yell at one of the only friends she had in the world. But she was losing control, and she knew it.\n\nDeborah sat quietly next to her friend for a few moments. \"I know how much you hate this . . . being in a position where you might have to ask for help . . . but you need help. From what Lilly told me, your parents would do anything for you. And you know I'll help you. As a matter of fact, I might be looking for a roommate soon, and I could help with babysitting for Sally and . . .\"\n\n\"Wait,\" Tiffany said through her drug-induced haze. \"Why would you need a roommate?\"\n\nDeb sighed. \"I'm divorcing John. He . . . he wasn't going to do anything about Gabby, even after what she did. He was so afraid of his 'cover' being blown that he was going to let her get away with it. When I was the only one getting hurt, that was one thing, but I'm NOT going to let him hurt you.\"\n\n\"Deb, don't . . . not for me. I'm not worth it. There's the whole company to think about!\"\n\n\"NEVER say that you're not worth it! And I am thinking of the company! John is willing to let people get hurt to cover up his affairs. He doesn't care about you guys! And if I do NOTHING else, I'm going to take the company away from him. He cheated on me so many times I lost count, he let you get hurt, and he's cheapened everything the wrestlers have worked for. I'm not letting him do it anymore. And damn it, I deserve better! And do you know who made me realize that? You!\" Deb stopped for a breath. \"I want to help you. Your parents want to, and I KNOW Lilly wants to. And I'm going to need your help. I don't know how to be single anymore, and believe it or not, it scares me. I'll get a place and cover your portion of the rent until things improve. I'm going to need your support, because I don't know how long this divorce is going to take. Don't be stubborn and prideful just for the sake of it.\"\n\nTiffany rested her head on the back of the sofa. She had already admitted that she couldn't do it on her own . . . at least for a while. \"Sally?!?\" she called to the back. Sally came rushing out, holding on to Lilly's finger. Lilly was wearing the \"guest hat,\" which Sally had all her tea-party guests wear, and she was looking a trifle embarrassed about it. \"C'mere sweetie.\" She waited for Sally to have a seat, the little girl gripping her mother's good hand. \"Debbie was going to look for a new place to live, and she was wondering if we would like to go and live with her. How do you feel about that?\"\n\nLilly was impressed. Tiffany was giving her daughter a chance to participate in her life choices, and Lilly got the feeling that the girl would probably become more accustomed to making the right choices as time went on.\n\nSally's eyes lit up like Christmas tree lights. \"Can I pick out my own room?\"\n\n\"Deborah would get first pick, but then yes . . . you could pick your own room.\"\n\n\"Could Lilly live with us too?\" Sally asked. \"I like her.\"\n\nLilly blushed.\n\n\"Lilly has her own place, but she can come over whenever she wants,\" Tiffany said, looking at the young woman who in turn simply nodded. \n\nSally scrunched up her face, making as if she were pondering the greatest mysteries of the universe. \"Okay,\" she said at last. \"As long as we can take my stuff.\"\n\n--------------- --------------\n\nA few weeks later . . .\n\n--------------- --------------\n\n\"Isn't this place a little big?\" Tiffany mumbled, her arm throbbing after bumping into her brother Kurt. Her brother, sister and parents had all insisted on helping her move, while her grandfather was \"directing traffic.\" Her father was especially pleased that she was upgrading her living conditions. Her family had been furious when they heard about Gabby's attack, but they tried not to bring it up. All of them realized how bad things must have been in order for Tiffany to finally ask for help.\n\nDeb had decided to buy a house rather than rent. Tiffany hadn't realized how savvy of a businesswoman her friend was until then. Deborah still had controlling interest in a couple of strip clubs and had money coming in of her own, outside of anything she might expect from the divorce. And since her money had been instrumental in getting the wrestling organization off the ground, her lawyer thought she had a reasonable claim to that business. Due to a smartly written prenuptial agreement, Deb wasn't exactly going to be hurting for money anytime in the foreseeable future. Tiffany also realized that Deb really didn't NEED a roommate so much as she WANTED one. So Deborah had put a down payment on a pleasant little four bedroom place in the suburbs that wasn't so far away from Sally's school that she would have to switch. All the rooms were bigger than any of the ones at Tiffany's old place. Sally had shown absolutely EVERYONE which room was hers, mentioning over and over that she had picked it out herself.\n\nOver everyone's objections, Tiffany was helping move. She might have only had one good arm, but she was bound and determined to use it. Her boss at The Dark, the lesbian club where she worked as a bartender, had given her a week off, but Tiffany had begged him to let her start back shortly thereafter. She was moving a little slower than normal, but she had managed to survive her first week back. She was even helping out on some of the evening shifts, picking up some extra money and much better tips. Word had apparently gotten out that she had been assaulted by a homophobe, and the tips had noticeably increased. After all, there were a lot of rich, famous and influential people that enjoyed the environment that The Dark had to offer, and they didn't enjoy the intrusion of that type of hatred, even though it hadn't actually happened there.\n\n\"Well, that's the last of it,\" William said. \"Hon, are you sure there isn't anything else we can do? We don't mind helping get stuff set up.\"\n\n\"Nah Dad, that's cool. As long as the bed is set up, I'm good,\" Tiffany said. \"It's going to be a while before we figure out where everything is going.\" She sighed, then grumbled, \"So I'll be seeing you tomorrow morning then?\"\n\nWilliam smiled. \"Yes. And stop complaining. We didn't buy you a car when you turned eighteen like proper parents, so we're doing it now. I don't want my granddaughter riding around in that heap,\" he said. They both knew it was an exaggeration. With Lilly's help, the car was perfectly serviceable. But her parents knew she was going to have to put a lot of miles on it, and they wanted her in something a little more reliable. Her father turned to Lilly. \"I understand you'll be joining us?\"\n\n\"Yeah,\" Lilly said. She was the closest thing to an automotive expert they had, so she was going help car shop. And she was going to make sure that Tiffany showed up in the first place, because she was driving. \n\n\"Okay, see you both tomorrow morning then,\" William said, then ushered the rest of the family out and leaving Tiffany to soak in her new surroundings. Things were a mess, but she felt a little optimistic for the first time since the attack. This was a better place for her to be, and a better environment for Sally. \n\n\"I feel gross,\" Tiffany said. The limited amount of physical exertion she had performed had left her uncharacteristically exhausted.\n\n\"Why don't you take a bath?\" Deborah suggested. \"I need to make a run to the grocery store. We need . . . everything. Hey, can I take Sally? I hear having a kid around helps you pick up girls.\"\n\nSally giggled, and Tiffany and Lilly joined in. \"I guess that'd be okay,\" Tiffany said. \"Just keep an eye on her. Despite what she may claim, I do NOT let her have Twinkies and chocolate milk for breakfast.\"\n\n\"But MOM!\" Deborah said, causing Sally to giggle again. She gathered up the young girl and headed out to the car.\n\n\"Crap, I guess I'd better take a shower,\" Tiffany grumbled.\n\n\"Not a fan of bathing?\" Lilly asked.\n\n\"It's not that. It's just taking a bath isn't an option because I can't get in and out of the tub very easily, and it's hard to reach . . . you know, everything . . . when I've got this thing on,\" Tiffany added, motioning towards the sling on her arm. \n\nLilly bit her bottom lip, then decided to go for it. \"Would you like some help?\" When Tiffany shot her a strange look, she explained, \"You know, scrubbing your back and . . . stuff. No funny business, but I don't want you hurting yourself again.\"",
        "Tiffany rolled her eyes. She had fallen down in the tub the other day trying to scrub her own back. She sometimes took for granted how having both arms made balancing much easier. She didn't like the idea of being naked and vulnerable in front of this attractive young woman, but she also realized it was a sensible suggestion. \"Sure. I guess that'd work.\"\n\n\"Great,\" Lilly said, hopefully not to eagerly. She held the door open to the bathroom that Tiffany and Sally were going to share. \"Let's go.\"\n\nTiffany went inside and heard the door being locked behind her. Then she sensed a shirt hitting the floor at her feet. \"What . . .\"\n\n\"I'm not going to be able to help much without getting wet,\" Lilly explained. \"Do you need a hand with your stuff?\"\n\nTiffany struggled with her pants and managed to get them off without assistance, but she acknowledged that she would probably need some help with her shirt unless they were both willing to wait a while. \n\nLilly helped extricate her friend from the garment, finally getting a good look at the body she had fantasized about so many times. In Lilly's mind, Tiffany was perfect, with every muscle developed in incredible detail, much like Michelangelo's statue of \"David.\" She tried not to let her eyes rest on those powerful butt cheeks for too long though. 'One thing at a time,' she thought.\n\nTiffany glanced over and saw Lilly's profile in the bathroom mirror. She looked . . . softer than before, which was a strange thought since Lilly had a fairly athletic body. She wasn't cut like Tiffany was, but she wasn't exactly suffering from excess body fat. Rather, the perceived \"softness\" was from a more relaxed air than she had been in before. The slinky panties and sports bra didn't hurt either. 'Is she staring at my ass?'\n\nLilly helped put a protective wrapping around Tiffany's elbow to protect the bandaging from the water. Then Lilly finished undressing, they got the appropriate toiletries, got the water warm and flowing and both stepped into the shower.\n\nFrom the moment Lilly's hands first touched Tiffany's body, the latter woman started to feel abnormally warm. It wasn't that Lilly was doing anything special. The younger woman was just shampooing and conditioning Tiffany's hair. Then she was washing Tiffany's back, including a quick soap-and-rinse of her buttocks. The muscular woman wondered if her companion was taking a little longer down there than necessary. But she liked the way it felt. She realized that she had become increasingly comfortable with Lilly.\n\n\"Well, I think we're done,\" Lilly said throatily. She let her fingers linger on Tiffany's hips. \"But Tiff, your legs are getting a lit-tle hairy. Want me to take care of that?\"\n\nIt was such an absurd proposition that Tiffany almost laughed. It was almost the equivalent of \"stretching\" your arm in a dark movie theatre and wrapping it around your girlfriend's shoulders. It was obvious . . . it was ham-handed . . . and sometimes, it was welcome. \"Sure,\" she whispered.\n\nLilly spread shaving lotion all over Tiffany's legs, swirling it around with her fingertips. Tiffany was breathing heavily as Lilly adeptly slid her razor along those powerful leg muscles. The young woman traced the smooth skin left behind, still slick from the lotion. Up and down one leg, then the other . . . Lilly was taking her time. Then Lilly's attention fell between Tiffany's legs.\n\n\"You don't have to . . .\" Tiffany started.\n\nLilly looked up at her, her dark hair plastered to her forehead and face, but her beautiful eyes still visible. \"I . . . I know. I want to. And I don't want to wait for six months.\" She rubbed lotion along both sides of Tiffany's opening, and she quickly shaved the kitty clean. \"But I'll stop right here if you want . . . \"\n\n\"I don't . . . but . . . Deborah and Sally will . . .\"\n\nLilly blushed. \"Deb and Sally won't be back for a while. Deb's taking her for ice cream first, THEN going to the grocery store.\"\n\n\"You . . . you set this up?\" Tiffany said, almost panting. Lilly's thumbs were rubbing Tiffany's outer mound. \n\n\"Yeah.\" Lilly leaned in and breathed on Tiffany's opening, which was swollen in anticipated desire. \"I've waited a long time Tiff. If you want, I'll wait a little longer.\"\n\n\"No,\" Tiffany said. \"I don't want to wait.\" She shuddered as Lilly kissed her sweetly on her pussy lips. 'What am I doing?' she thought. 'I can't even shower on my own! I've got no business having . . . having sex.' Lilly was basically hugging Tiffany's hips while her mouth continued to stimulate Tiffany's pussy. But the girl wasn't using her tongue except for light caresses. Lilly's lips were so soft and gently that Tiffany couldn't believe them capable of the harsh words she had heard them utter once upon a time. She couldn't imagine why those lips were making her feel the way she did, or why Lilly even wanted to.\n\nLilly's pace was excruciatingly slow, even for her. There were so many things she wanted to do to Tiffany's body, but she had to take it easy until Tiffany's arm got better. But she had seen Tiffany becoming increasingly discontent about her sudden dependence on other people. Lilly wanted her to realize that . . . sometimes . . . leaning on people could have its rewards. \n\nShe suckled on one of Tiffany's inner labia, savoring it like a connoisseur of fine wines before moving on to the other. Finally her tongue slipped out of Lilly's mouth, but just enough to press against Tiffany's clitoral hood while she applied a suction pressure to that area. Then she broke the suction, sticking her bottom lip down, then dragging it up half the length of Tiffany's slot before engaging her suction action again. \n\nTiffany was biting her own bottom lip, trying not to groan. She was also careful not to move her injured arm too much. It would be a crime to have that wonderful sensation end because of an errant movement. She felt the pressure on her throbbing clit temporarily subside as the tip of Lilly's tongue finally penetrative half-an-inch into Tiffany's box before moving up and down like a light switch. But it must have been a faulty switch, because Tiffany was turned on whichever direction that tongue went.\n\nLilly was growing tired of the taste test . . . she wanted to drink of Tiffany's bounty, and she wanted to drink deep. She pressed the flat of her tongue into Tiffany's opening, then wiggled it back and forth. Her hands were firmly grasping Tiffany's taut ass, not wanting the girl to escape. After a few more tongue wiggles, she went back to sucking on the clit. She took a long, slow suck, released, then did it again. And when she sucked her breath in the third time, she felt Tiffany tremble. She felt that beautiful pussy twitch, then felt warm cum dribbling onto her chin. Lilly released the clit and moved her mouth down, slowly licking up Tiffany's juices.\n\nTiffany felt the tension temporarily leave her body, but it was replaced with remorse. She wasn't in a position to suitably reciprocate, and she was the sort of person who always carried her own weight. She was . . .\n\n\"There IS something you could do for me,\" Lilly said from below, looking up that chiseled body. She had anticipated that Tiffany would want to contribute something, and she had already thought of something. She turned off the water, toweled both women off and then led a strangely pliable Tiffany into the woman's bedroom. She lay Tiffany down, then helped prop up and support Tiffany's injured arm with a pillow. \"Now put your hand here,\" Lilly suggested, placing Tiffany's good hand on her own crotch, palm facing upward. Tiffany got the idea, and she stiffened her fingers as Lilly straddled her hips. Lilly lowered herself slowly, letting Tiffany's fingers penetrate her hot, young pussy. Three fingers found their way inside.\n\nLilly settled all the way down, her hips meeting Tiffany's. She needed to take it slow, so as not to aggravate Tiffany's arm. But Tiffany's fingers weren't taking it slow. They had already begun their slight pumping motion. So Lilly didn't wait any longer. She started humping Tiffany's hand with short, smooth shifts of her hips. She lowered her torso, placing one hand on either side of Tiffany's head as the two women developed a rhythm.\n\nTiffany was pressing her hips as far up as she comfortably could. She let her palm rest against Lilly's upper mound, applying a bit of pressure to Lilly's clitoral area. But she never stopped her fingers from moving. And the ceiling light was right behind Lilly's head, letting the girl \"shine\" in an almost heavenly glow. She was so lean . . . so fit . . . so smart . . . and she seemed utterly dedicated to making Tiffany feel desirable. 'As soon as this arm gets better, I'm going to fuck her brains out,' Tiffany thought in a much less romantic vein. But looking at Lilly, she had a feeling the girl could go all night if inspired.\n\nLilly squeezed the invading digits with her powerful vaginal muscles, keeping them locking in place and enjoying feeling filled. Though it obviously caused her a bit of discomfort, Tiffany lifted her torso up for a moment so her lips could latch on to one of Lilly's young, firm breasts. Lilly lowered her torso a little more to make things easier, still careful not to rest any weight on Tiff's arm.\n\n'It's funny,' Lilly thought. 'The mother is nursing like a child.' But the feelings that Tiffany's mouth and fingers were providing her were anything but child's play. She curled her feet in until her toes were resting on the insides of Tiffany's legs, and she gently bounced away on Tiffany's impromptu phallus.\n\nOn one upstroke, Tiffany released Lilly's breast from her mouth and slipped her pointing finger out of Lilly's cunt and pushed it up into the young woman's asshole, all in a single motion. Lilly clamped down on both openings in an almost emergency fashion. This was relatively new, but not entirely unpleasant, territory for her. She gave herself a moment to adjust, smiling at her lover for her temerity, then kissing Tiffany softly on the lips. She was kissing Tiffany, not as a POTENTIAL partner, but as an ACTUAL lover. Lilly didn't want that kiss to end. She forgot to keep her hips moving, but Tiffany didn't forget about her fingers, as those digits explored both Lilly's front and backdoors with equal tenacity.\n\nLilly pressed her tongue further into Tiffany's mouth than she had her pussy earlier, and she was reward when Tiffany's tongue caressed her in return. Meanwhile, her anus had relaxed enough to enjoy the new sensation.\n\nTiffany was running out of breath, but was also unwilling to break the passionate liplock. It was strange . . . being wanted like that. This wasn't just comfort sex or casual sex. Lilly had wanted her and was willing to be what Tiffany needed . . . a loving companion. 'Hell, she's already met my family and didn't go running. That's GOT to mean something,' Tiffany thought. She thrust the finger in Lilly's ass a little deeper as her lover began to sway her hips again. Tiffany's hand was beginning to cramp a bit due to the awkward position, but it was worth it. Deborah had taught Tiffany how to properly stimulate a woman's asshole, and Tiffany was nothing if not a good student.\n\nLilly's back arched outward and she sucked her gut in, causing her to FINALLY let go of that wonderful kiss. Her abdominal muscles shivered under her skin and both her pussy and asshole clamped down again, but this time so she could orgasm. And climax she did, putting her whole body into the action. It would be her only chance tonight, so she made it count.\n\nTiffany was finally able to extricate her hand. Without even thinking about it, she brought it to her lips and sucked the juices from it. She offered one finger (that hadn't been in Lilly's butt) to Lilly, and the younger woman gave it a leisurely miniature blowjob. Then they kissed again . . . actually, they kissed several times, each as lingering as the last.\n\nLilly realized it was time to break the silence. \"Thank you,\" she said, thought she wasn't sure why. \"I guess we need to get dressed,\" she added reluctantly. \"They'll be home soon and . . .\"\n\n\"Stay,\" Tiffany interjected, looking as nervous as could be. \"I mean . . . yeah, we should . . . get dressed, but . . . I would like it if you would stay tonight.\"\n\nLilly was confused. \"But what about Sally, and . . .\"\n\n\"I love my daughter, but she's going to have to learn to accept that I'm going to have people over sometimes. I . . .\"\n\nLilly felt her skin growing warmer. \"How many . . . have you . . . I mean . . . You know, it doesn't matter,\" she said. She decided not to question Tiffany's motives or her own luck. She helped get Tiffany into her pajama bottoms and an overly large nightshirt. Lilly had to borrow a set herself, but she somehow made do.\n\n---------------- ----------------\n\nThe next morning . . .\n\n---------------- ----------------\n\n\"Morning,\" Deborah said as a sleepy-eyed Lilly emerged from Tiffany's bedroom. Deborah was grinning from ear to ear. As soon as she had gotten back the previous night, she knew that the plan she and Lilly had hatched had worked like a charm. But even Deborah was impressed that Lilly had earned herself an overnight visit. She knew from her own conversations with her friend that Tiffany hadn't had an overnight visitor, at least when Sally was in the area, in many years. \"So, how are we this morning?\" she asked coyly.\n\nLilly cracked a still uncharacteristic smile. \"I guess that 'we' are fine. Deb, it was . . . it was perfect!\" She chuckled. \"Of course, it was a little odd. I woke up this morning and this tiny person had wedged herself between us,\" Lilly said. Deb wandered over, opened the bedroom door and peeked inside. Sure enough, Sally had snuck in sometime during the night and had an arm draped over her mother's stomach.\n\n\"You're going to have a fight on your hands if you're trying to get Tiff's attention,\" Deb said, closing the door behind her. \"You don't seem upset by that.\"\n\n\"I'm not. I don't know . . . I'm not sure I can handle being a part-time mother figure . . . hell, I'm only twenty-three . . . but I want to try.\" Lilly was a bit surprised by her own conviction.\n\nDeborah gave her soon-to-be-ex-niece a hug. \"God it's strange. I can't believe you actually came from THAT family. She's lucky to have you.\"\n\n\"Thanks Deb. Thanks for everything. And we're okay?\"\n\n\"For the last time, yes, we're okay. I never would've helped you out otherwise. Someone will come along for me. In the meantime, I need to get through this divorce and then . . . then we'll see.\"\n\nAbout that time, a tired-looking Tiffany arrived, carrying Sally with her good arm. She flashed Lilly a shy smile, then sat down while Deborah served everybody some orange juice. Sally was trying really hard to glare at Lilly, who she suddenly considered an interloper. But once Lilly stuck her tongue out at the little girl, the two started a silly-face contest that left Sally in stitches.\n\n'This might just work,' Tiffany thought, just as Lilly leaned in and gave her a quick kiss on one cheek while Sally kissed her on the other. Now all she had to endure was car shopping . . .\n\n-------------- ----------------\n\nA few weeks later . . .\n\n-------------- ----------------\n\n\"One . . . two . . . three!\" Francine said, counting Vicky down as Sally pinned her to the mat. John Wells had called a last minute, mandatory meeting which he himself was late for. All the wrestlers were around ringside area, but had already divided into their little cliques. Since Gabby was gone, Lilly had accompanied Tiffany and the two were the recipient of a number of stares. But Lilly didn't care. She was just there to support Tiffany and to look after Sally. Once Vicky had seen Sally, the fun had begun and the two had been playing around for about ten minutes. Vicky and Jeanna, both of whom had been in fairly constant contact with Tiffany since the assault, seemed to have bonded even more after taking some time off together. And when Vicky and Sally were around, there was fun to be had despite the overhanging sense of unease surrounding the meeting.\n\nFinally, Deborah showed up and sat apart from the general crowd. John Wells showed up shortly thereafter, accompanied by a man familiar to the true students of wrestling.\n\n\"Hey Tiffany, isn't that . . .\" Francine whispered.\n\n\"Yeah, it is,\" Tiffany mumbled as Sally sat gently on her lap. She had seen that pasty face, glasses and substantial paunch before. His name was Jim Cornette, and he was something of an institution in the wrestling business. He was a lifelong fan of professional wrestling. He had been the manager for one of the premiere tag-teams of all time, namely the Midnight Express. He had owned his own wrestling company called Smokey Mountain Wrestling, he had worked for every major wrestling company and currently oversaw activities at the WWE's other farm league, Ohio Valley Wrestling. Some of the biggest names in the business owed it all to that man's involvement in their careers. Him being there was big news for NAXW. \n\nJohn grabbed a microphone. \"I guess I'd better explain why you are all here,\" he began, he voice grating and his teeth clenched. \"A recent series of events has . . . left the direction of this organization in a bit of a mess.\" He stopped and glared at Deb for a second. She rolled her eyes. If her husband had been a real man in any way, none of this would have been necessary. But when John's gaze accidentally drifted over Tiffany, his head jerked away. \"Vince McMahon and the WWE have already invested a lot in this organization, and chaos doesn't fit into their plans. This is Mr. Jim Cornette,\" John continued, \"and he'll be in charge of production and talent until miscellaneous legal entanglements are taken care of. Mr. Cornette?\"\n\nThe pasty-faced man in question stood up. \"All right people, I'll make this short and sweet. I'm here to get things back on track. I don't care about your personal grudges or any of the other crap that's been goin' on around here. I've looked over everyone's files and video, and I see some definite talent . . . assuming you can pull your heads out of your asses long enough to utilize it.\"\n\nHalf the company looked offended. Some looked confused. Tiffany chuckled. Jim Cornette was, in her mind, one of the most entertaining personalities in the business. \n\n\"Anyway,\" Jim continued, \"this Saturday's show will go on as scheduled, but after that there will be some changes. Over the next week and half, stop by MY office,\" he said, looking over at John, \"and sign up for a time-slot. I'm gonna want to talk to each of you, one on one. That's all.\"\n\nThe wrestlers and other staff looked around at each other. What did all this mean? Some glared at John, while others muttered about Deborah \"screwing with the system.\" Tiffany sighed. She finally had a chance to talk to someone of note, and she was crippled. What possible use would anyone have for her?\n\n-------------- --------------------------------------\n\nThe next Saturday, before the show . . .\n\n-------------- --------------------------------------\n\n\"Come in, Ms.. . . Thurman?\"\n\n\"Thank you,\" Tiffany said, making her way into the office. Mr. Cornette was seated behind a desk that was adorned by a massive pile of papers. She had dressed as nicely as she could, borrowing some clothes from Deb to look more presentable. She had even worn a dark-colored sling, trying not to draw attention to her arm.\n\n\"Please, have a seat,\" her temporary boss said, waving at an empty chair. Then he looked at her, he eyes beady but penetrating. \"I'll get right to the point, Ms. Thurman. I've read your file and I must say that I'm impressed. You've got actual wrestling training, a college degree, and somehow you find time to be a mom.\" He lowered his glasses and looked at her again. \"I saw your daughter in the ring the other day. THAT young lady is going to be a handful.\"",
        "Tiffany smiled in spite of her nervousness. \"Not 'going to be.' She 'is' a handful.\"\n\nHe flashed a smile of his own, but the smile quickly vanished. \"But I've also noticed your name comes up on a lot of incident reports. Admittedly, you don't seem to have instigated any of them, but it does raise some red flags. I've already spoken with some of your colleagues and their opinions of what is going on and . . . well, your name started coming up again. Everyone seemed to have an opinion about you, whether I asked for one or not. Mind telling me why?\"\n\nTiffany was flabbergasted. \"I . . . I really couldn't say.\"\n\n\"Bull-hockey,\" Mr. Cornette said. \"I want to hear it from you. Why do some people dislike you while others are pretty damn loyal to you?\"\n\nTiffany was beginning to get a little angry. \"Mr. Cornette, I have no ability or right to justify other people's opinions about me. Okay, I'm a lesbian. There! Are you happy?!? Some people can't deal with it, others can. The ones that CAN deal with it realize that I'm DAMN good at what I do, and the rest will never care. All they'll see is that I'm a pervert or something like that. But I'm not! I love wrestling, and . . .\" Tiffany's tirade was cut off when she leaned forward and her elbow bumped into the arm of the chair, causing her to wince in pain.\n\n\"Settle down, Ms. Thurman. I don't want you aggravating that . . .\" Mr. Cornette said, pointing at her arm. He looked at it for a moment longer. \"I didn't mean to question your ability, young lady. And I watched the video of what happened that night. Quite frankly, I found Ms. Gabriel's behavior repulsive. Wrestlers need to be able to get over their personal problems and trust each other in the ring, and quite frankly I'm glad she's gone. And I heard about an encounter with her and your former ring announcer . . .\"\n\n\"Lilly was just defending 'my honor,' so to speak, and she was mad at what Gabby almost did to Francine.\"\n\nJim smiled. \"I understand that you and Lilly are . . . an item? Don't worry Ms. Thurman. As I said, 'Gabby' seems to have been a poison around here. But I won't tolerate any more of these physical altercations . . . not on my watch. Understand?\"\n\nTiffany blushed and nodded. \"Yes sir.\"\n\n\"The question then becomes, what do I do with you? I've seen your tapes. You've got talent . . . hell, you're probably one of the most talented people here. And no, I'm not going to get rid of you because of that arm, so stop trying to hide it from me.\" Jim Cornette put both his elbows on the desk, leaned forward and looked Tiffany in the eyes. \"This company needs leaders. I don't understand . . . and quite frankly don't care . . . about what's going on with Mr. and Mrs. Wells. That's not my problem. But experience tells me that when things in the office get bad, things in the locker room follow suit. I'm here to restore some faith and trust in the former, but I can't do much about the latter. I think that you could be of great help as a leader back there. Some people might resent you taking charge, but you can't give them a choice. They can either learn to listen and accept advice from someone qualified to give it, or they can pick up their walking papers. I've noticed you working with some of the other girls, including that new one . . . Marcia? Anyway, when people listen to you, they get better, and that's the sort of thing we need around here. How long are you on the shelf?\"\n\n\"Six months, give or take a month. It depends on how the healing goes.\"\n\n\"Well I've got a proposition for you. I had the great privilege of firing that other trainer . . .\"\n\n\"Thank God!\" Tiffany interjected, then blushed. \"Sorry, but the man was incompetent.\"\n\n\"My point exactly. But you seem to be much more reasonable. And you have the training, so I'd like for you to take over for him, in an official capacity.\"\n\nTiffany was speechless . . . for a moment. \"But . . . I haven't done any physical training or therapy in years!\"\n\n\"But I'm willing to bet that you remember how, and you have a better idea for wrestling-related injuries than some greenhorn from off the street. And I want you to keep working with the other wrestlers. With that Gabby chick out of the way, and considering the way she went, I'm thinking that even the people that don't like you will at least listen to you.\"\n\n\"I . . . I appreciate your confidence . . . but what happens when my arm is better?\" \n\n\"Yes, you'll be allowed to return to the ring. But I have a question, and please don't take this the wrong way. Is wrestling something you really want to do? I mean, if you make it to the big time . . .\"\n\nTiffany sighed. \"I know it will be hard. And if it looks like I can't do it and still be there for my daughter, I'll quit in a New York minute. But . . . I can't stop. My family . . . my friends . . . they actually got this silly idea in my head that I'm good at this. And . . . I was there for War Games at the Great America Bash. I watched Hogan versus Andre so many times that I wore out the videotape.\" She grinned. \"I watched the Midnight Express go against the Road Warriors in a scaffold match!\" That got a smile out of Jim Cornette. He had hated those matches, but there was something exciting about them as well. \"I'm just not sure I want to give that up yet. But I've got a while to think about it, don't I?\"\n\nJim Cornette kicked back in his chair, his heels on his desk. \"Miss Thurman, I think you and I are going to get along just fine. So, are you interested in the trainer position? At least for a while?\"\n\n\"Yeah! I might need some help, just because I'm short a hand right now, but . . .\"\n\n\"I was thinking of getting the trainer an assistant anyway. Come by on Monday sometime and we'll work out the details.\" He grimaced and grabbed the next file on his desk. \"And could you send the next bozo in here? I'm getting a headache, so let's hurry this along.\"\n\n------- ---------------------\n\nMonday evening . . .\n\n------- ---------------------\n\n\"You always seem to land on your feet,\" Lilly said happily.\n\n\"Actually, I always seem to land on my back,\" Tiffany replied, just as Lilly's tongue pressed its way in between Tiffany's inner labia. Tiffany had gotten another girl to cover her shift at The Dark so she could go sign some contracts with Jim Cornette and, since she couldn't drive, Lilly had volunteered to chauffeur her. They had gotten back to Tiffany's place with an hour to spare until Sally got done with work, so Lilly had gotten her girlfriend's pants on the floor and her back on the sheets before devouring Tiffany's pussy. She badly wanted to give Tiffany a quick thrill before she had to share the woman's time with her daughter.\n\n\"Are you . . . sure . . . you don't . . .\" Tiffany started.\n\n\"Stop worrying about it,\" Lilly said. Tiffany sometimes complained when she was getting pleasure without giving some back. But Lilly GOT pleasure from doing this to Tiffany. \"Besides, I'm just collecting power-ups. As soon as that arm is better, you're going to owe me the fucking of a lifetime!\" Lilly meant every word of that statement. She had a powerful, beautiful girl to share a bed with, and she was looking forward to getting screwed to within an inch of her life. She dug her thumbs into Tiffany's box and spread her opening, sending her tongue in deep. She usually didn't stick her tongue in that far, but every now and then she liked tasting her lover's innermost treasures.\n\n\"You're on,\" Tiffany moaned. She was thinking she might even borrow one of Deb's strap-ons, bend this little minx over and hammer her until she passed out. 'Shit, is that ME thinking?' Tiffany thought. 'Deb and the girls have had a bad influence on me.' She spread her legs as wide as she could, but she was barely able to see the top of Lilly's head over the injured arm that was propped up and lay across her stomach.\n\nLilly got an idea. She pulled her purse over and dug out a very small vibrator. It was her \"emergency\" toy. It wasn't good for deep-dick action, but it wasn't built for it either. Being only the size of her thumb, that device was used for \"surgical strikes.\"\n\nTiffany heard a faint humming noise, then felt vibrations emanating from the lower part of her pussy. 'Where the hell did she get that from?' she thought as a smile became plastered on her face. Lilly circled her entire opening with the device, making every square inch of her cunt tingle. Then Lilly pushed the slim head into the bottom of Tiffany's slot before sucking on her inner lips, pulling them outward and causing more of them to come into contact with the toy.\n\nTiffany felt a twinge of pain as her back arched and stretched her arm a bit, but she wasn't going to say a damn thing that might make Lilly stop what she was doing. \"You're pretty fucking resourceful, did you know that?\"\n\nLilly sucked momentarily on Tiff's clit, waiting until she got a pleasurable groan. \"I AM and educated woman,\" she said smartly. Just for kicks, she moved the vibrator down until the head was pressed against Tiffany's asshole, then started some long, shallow licks straight up the woman's pussy. Tiffany was groaning more liberally, so Lilly kept it up. 'It's amazing how sensitive her asshole is,' Lilly thought. 'Kind of like mine was.'\n\n\"Tiffany?\"\n\n\"Yesssss?\" Tiff sighed. She was getting close.\n\n\"Would you think less of me if I asked you to . . . play with my ass next time?\"\n\nTiffany's entire body was flushed with heat and pleasure already. \"I'll do anything! Just don't stop!\"\n\nLilly grinned. \"Anything?\" she asked, then latched her lips onto Tiffany's clitoral hood, sucking gently as her sex toy lit up Tiff's sphincter. A short pussy-twitch later and Tiffany started to cum. It was a mellow, pleasurable orgasm. It was a kind of pleasure that only Lilly seemed to be able to induce.\n\nLilly crawled her way up onto the bed and gave Tiffany a kiss. \n\nTiffany blushed. \"Uhm . . . Lilly . . . as long as we're on the subject of requests . . . You wouldn't happen to still have your old school uniform, would you?\"\n\nLilly chuckled. \"I'm ASSUMING you don't mean my military school uniform?\" Tiffany shook her head. \"So you like the Catholic school girl thing too. I thought that was just guys. Actually, yes, I still have it. Though I'm sure it would be a little small on me . . .\" Lilly stopped when she saw a shit-eating grin cross Tiff's face. \"Which would be the point. Well, I'm sure I could dig it out with the proper incentive.\" When Tiffany pulled Lilly's head down and planted a kiss of her own, Lilly was given all the incentive she needed.\n\n-------- -------------------------\n\nTwenty minutes later . . .\n\n-------- -------------------------\n\nTiffany and Lilly were sitting in Tiffany's brand new station wagon, with Lilly in the driver's seat, waiting for Sally to get out of school. Normally, Sally would ride the bus or Tiffany's sister would pick her up, but Tiffany wanted to surprise her baby girl. The two women were holding hands, and Lilly rested her head on friend's shoulder. It was solid . . . like Tiffany herself.\n\n\"I like this,\" Tiffany said at one point. \"Sitting here . . . waiting for Sally to be done after . . .\" Tiffany blushed. \"After a quickie in the afternoon . . .\"\n\nLilly kissed her on the cheek. \"I just like being able to trust someone.\" She sighed. \"I can't believe how lucky I got. And to think of all the dumb bitches who passed up on you when they had the chance . . .\" Lilly had meant that to be flattering, but it had come out wrong. Tiffany's face clouded over briefly, so Lilly tried to do damage control. \"Hey, I didn't mean . . .\"\n\n\"No, it's okay,\" Tiffany said, flashing a smile. \"I know what you meant. It's just . . . I began to think no one even saw me . . . like that . . . not for a long time.\"\n\n\"Until Deb saw it,\" Lilly pointed out. She had been given the whole story at one point, and she actually respected Deborah more because of it. \"And Vicky and Jeanna . . . Tiffany, do you miss being with them? I'm . . . I'm not saying that you're acting dissatisfied or anything but . . .\"\n\nTiffany kissed Lilly, but this time on the lips. \"Sometimes. Mostly because they've all helped me through so much shit recently. Especially Deb. I'd have been done with the business and gone twice now if it weren't for her. But she made her choice, and that was to stay with John despite what was going on. Vicky and Jeanna are just living their lives a little loose. You, for whatever reason, thought I was worth the risk of almost getting arrested and then getting fired, and you've stood by me through everything. It's been a lot easier choice than you might think to be with you.\" Tiffany felt a strange sensation of calm overcome her when she realized that she truly believed what she was saying.\n\nThe two of them just enjoyed each other's presence for a minute before Lilly broke the silence.\n\n\"Still, we need to . . . help Deb out. She deserves someone better than my uncle.\"\n\n\"But she won't want to go dating anytime soon. She'll probably say that it's too soon to find someone new.\"\n\nLilly blushed but grinned at the same time. \"Maybe, but who says she needs someone 'new' right away?\"\n\nTiffany returned that grin. \"What . . . exactly . . . did you have in mind?\"\n\n----------- -------------\n\nA week later . . .\n\n----------- -------------\n\n\"Thanks,\" Deborah said as she turned the key in her apartment door. Vicky and Jeanna had taken her out for some food and drinks to help her get her mind off her divorce proceedings, which were becoming increasingly ugly. She had kind of wished that Tiffany and Lilly had been able to make it, but they had both said they were busy that night. But as soon as the door was open, Deborah found out what they had been \"busy\" doing. She and her friends heard some moaning from Tiffany's bedroom. \"Those little . . .\" Deb whispered, but she couldn't help but smile. She liked that Lilly and Tiffany had become so sexually comfortable with each other.\n\n\"The door is open,\" Vicky said quietly. The three of them snuck over to the slight crack in the door and peaked inside.\n\nDeb was feeling like a kid, sneaking around her own apartment. But what was going on in that room was not child's play. Tiffany was lying on her back, her arm propped up and protected. She was completely naked, but Lilly wasn't. Lilly had on a short, plaid skirt, a loose white dress shirt that was tied in a knot above the midriff, and white fishnet stockings that came up to her mid-thighs. Her hair was done up in pigtails, and she was straddling Tiffany's hips, rocking back and forth. She was, in Deb's mind, the sexiest looking schoolgirl she had ever seen, and Deb had done entire porn films based on THAT fantasy. And the way she was moving, Deborah had a feeling that there was a strap-on cock buried in that tight little body.\n\n\"Okay, the girl is hot,\" Jeanna murmured. She and Vicky were actually in on Tiffany and Lilly's little plan, but she didn't know that Lilly was going to wear that outfit. The three friends watched the two women gently hump each other. Lilly put her hands on her hips and slowly tugged at the hem of her skirt, exposing the black thong underneath that had been pushed aside so that the massive dildo buried in her pussy had smooth access.\n\nDeb licked her lips. Even though Lilly was only related by marriage (and soon wouldn't even be that), she had never really looked at her as a sexual entity before. True, she had seen Lilly as attractive, but seeing her dressed like that and riding Tiffany like a saddle was something else. The sex toy buried in her box had to be at least two inches across, but she was handling it well.\n\n\"Look at that ass,\" Jeanna whispered into Deborah's ear. \"Don't you just wanna eat it up?\"\n\n\"Jeanna!?!\" Deb hissed. \"How could you even think that? She's . . . they're . . .\"\n\n\"SHE'S not really related to you, and THEY'RE apparently open for suggestions,\" Vicky whispered. Almost as if on cue, Lilly turned her head and stared at the crack in the door. She was smiling, the hair on her head plastered against her sweaty face. Deb wondered how many orgasms she had already had atop her \"stallion.\" Deb guessed it to be a couple.\n\n\"What kept you?\" Lilly asked towards the door.\n\n\"What?\" Deb asked. Then she glanced evilly at Jeanna and Vicky, both of whom were grinning like devils. \"This was a set up?!?\" Deborah pushed the door open and walked inside. \"You two could have just asked me to join you,\" she said to the women on the bed.\n\n\"What fun would THAT have been?\" Tiffany asked, gyrating her hips and pushing the eight-inch cock into her girlfriend's body.\n\n\"This is so wrong,\" Deborah muttered, still staring at Lilly's ass, mesmerized by its smoothness. She barely felt herself being undressed.\n\nLilly's eyes were drawn to Deborah's enormous tits as they came into view. She thought that Tiff's were sizeable, but Deb's were massive. Vicky and Jeanna both shed their own clothes, then latched lips on Deb's pert nipples and sucked away. Each of them periodically glanced at Lilly. They knew that everyone who got a good look at Deb's chest wanted a piece of it, and they were going to get Deb primed.\n\nLilly turned back to Tiffany, leaning in and kissing her. \"Are you sure you're okay with this?\" she whispered.\n\n\"I'm only dating one girl in this room, and she's the same one I'll be dating in the morning. Nothing is going to change that,\" Tiffany murmured back just before kissing Lilly's on the neck. \n\n\"Okay,\" Lilly said, looking back at the other three women. Then her head whipped back to face Tiffany again. \"You're talking about me, right?\"\n\nTiffany laughed. \"Yeah, I'm talking about you.\"\n\n\"As long as we're clear on that,\" Lilly said, untying her shirt and letting it slide off her shoulders.\n\n\"Oh my!\" Vicky said as Lilly's beautiful back came into view. She let go of Deb's tits and started kissing the back of Lilly's neck, working her way down the girl's spine. Jeanna followed suit, working the other side of Lilly's neck and back.\n\nDeb wandered around and sat next to Tiffany's head, and both Tiff and Lilly were staring at her. \"This is kind of cool, but still feels . . . Oh!\" Tiffany had pulled Deb closer, then she and Lilly took over their friends jobs of sucking on those heavy melons. And Lilly especially knew how to use her teeth, pressing them lightly on Deb's nipples to elicit pleasurable moans.\n\nLilly was having problems concentrating. Her pussy was stretched to the limit by the dong in her cunt, and Vicky and Jeanna were lighting up the skin on her back. She had never been with more than one woman at a time, and she was seeing some definite positives. Each of those women had hands on Lilly's ass, squeezing it with noticeable strength, and they had also started sucking on Lilly's earlobes. \n\n\"Lilly?\" Tiffany started.\n\n\"Yes?\"\n\n\"Would it be okay if I watched Deb eat you out?\"\n\nLilly actually looked shocked. Deb looked hungry. Vicky and Jeanna looked mischievous, pulling Lilly off of Tiffany and pushing her back-first onto the bed.\n\nTiffany looked at Lilly. \"I promise, you'll like it.\" Tiffany knew quite well what Deb's tongue could do. \n\nDeb's eyes had lit up a bit. This was naughty, even for her. She was about to eat out her soon-to-be-ex-husband's niece. She got down on all fours and crawled over to the bed, kissing her way up Lilly's inner thigh until she was face to crotch with the beautiful young woman. Lilly's skirt was pushed up, her thong was pushed sideways and she was so wet already, so Deb started by just licking up her residual juices before moving on to her traditional long, slow tease of the outer labia.\n\n\"Oh . . . oh . . . oh . . .\" Lilly's eyes glazed over as Deb's professional tongue did what it did so well. She did notice Tiffany prop herself up with her good arm so that she could watch.\n\nVicky, noticing that Tiffany didn't have a free hand to pleasure herself with, so knelt on the other side of the bed and pushed her had between Tiffany's legs from behind. Tiffany got the idea, spreading her legs so that Vicky could slide some fingers into her friend's moist sex just underneath the strap-on harness, exploring Tiffany's warmth.",
        "While her girlfriend fingered Tiffany, Jeanna moved in behind Deborah. She lay on her back and scooted until her head was under Deb's hips, then she started some oral action of her own. She licked the upper part of Deb's slot while sticking some fingers in the lower slot. Her lips were intentionally sloppy, sucking on fleshy bits before letting loose of them with a snap. She knew she was doing a good job when Deb pushed against her face and groaned contentedly.\n\nLilly was the beneficiary of Deb's groan, as the humming sensation reverberated through her crotch. Deb's cunnilingus abilities were every bit as good as she had heard. Her pussy was already tender from having ridden that big strap-on cock for fifteen minutes before the other girls had arrived, and Deborah was taking advantage of that heightened sensitivity. There wasn't a square millimeter of surface area that her tongue hadn't stimulated.\n\n\"Put it in me,\" she whimpered. \"Please?\"\n\nDeb rewarded her with some long and fast licks right down the center. Usually her girls didn't need the deep action, but Lilly seemed to crave it. While her tongue was splitting the great divide, her thumb found its way into the bottom of Lilly's opening. Between the two invaders, she had Lilly cumming in no time. It was a gentle orgasm, but it served its purpose. The subtle but sexy lines of the girl's muscles were standing out against her skin as her fluids flowed onto Deb's face. But Deborah didn't have time to revel in her victory as her own body was succumbing to Jeanna's attentions. And it was a good orgasm: long, leisurely and a little wet.\n\nJeanna crawled out, her face suitably glistening. She gave Deb a quick spank, then the two women hugged. \n\nTiffany looked at her girlfriend's sweat-covered face. \"Wanna return the favor?\" she asked.\n\nLilly blushed. She sat up, pulling Deb onto the bed. She reached into the nightstand and grabbed her mini-vibrator. 'Hell, it worked with Tiff,' she thought. She positioned herself on the floor between Deb's legs, but postponed her pleasuring attempts as she watched Vicky bring Tiffany to orgasm. Tiff was trying to keep her body relatively relaxed, but it was hard to do with Vicky nibbling on her shoulder and fingering her snatch. And when Vicky pulled her fingers out, she shoved those sticky digits into Tiffany's mouth to get a thorough washing.\n\nLilly finally was able to start her work on Deborah's pussy. She switched on her little vibrator, running the tip around Deb's mound while Lilly suckled on the inner labia. She was sweet as honey, and Lilly had a sweet tooth. She was distracted a bit as Jeanna climbed onto the bed and straddled Deborah's face. 'She's got a really nice butt,' Lilly thought before returning to the matter at hand. After inserting her mini-vibe into Deb's pussy, she moved her lips up to the clit, drawing them in from a wide circle to a small circle, sucking on the nub and then moving them out again. \n\n\"If I'd known you were this good, I'd have invited you over for Christmas last year,\" Deb said, smiling as she did. Then she bit her bottom lip to prevent from screaming as Lilly jiggled the slim-line vibrator inside Deb's body. Then Deb went back to sucking on Jeanna's pussy.\n\nMeanwhile, Tiffany was on her back again while Vicky lowered herself slowly onto the thick, black plastic cock springing forth from Tiff's harness.\n\n\"It's so big,\" the blonde beauty said as she settled down onto Tiffany's hips, her paradise filled to the brim with cock. \"It's still got Lilly's cum on it,\" she said, grinning evilly at the aforementioned woman. Lilly would have said something back, but her mouth was full.\n\n\"Let us know when you're gonna cum,\" Jeanna told her girlfriend. \"Lilly just HAS to see that!\"\n\n\"What am I, a sideshow?\" Vicky muttered as she bounced lightly on the dildo. Tiffany was using her good hand to fondle one of Vicky's smallish breasts, including pinching her pink little nipple. Even with one arm, Vicky felt that Tiffany was more than enough woman to satisfy any woman.\n\nLilly was curious, but she had other things to worry about. She pulled the little vibrator out of Deb's front door and pushed the head into her backdoor. Even as Deb squealed in delight directly into Jeanna's pussy, Lilly doubled her sucking efforts on Deb's clit. She pulled on the clitoral hood, waiting until the nub itself became exposed, then she kissed it and sucked on it until she knew that Deb was close. Then, she let loose, flicking her tongue against it rapidly. Deb couldn't take it any more, and she came like a madwoman, smearing her cum onto Lilly's face. She was moaning like crazy into Jeanna's box, and Jeanna didn't mind at all. Deb's lips were like vibrators themselves, and they had engulfed almost all of Jeanna's mound. Even as Lilly nuzzled her crotch in a post-cunnilingus warm-and-fuzzy moment, Deb's lips and tongue kept moving. She even snaked a hand around so that she could rub Jeanna's clitoral area in small circles while her tongue explored a little lower in the slot. \n\nLilly moved around to the other side of the bed so she could watch Vicky ride Tiffany's strap-on. Almost gingerly she bent over and kissed her girlfriend on the lips while fondling one of those firm, man-made tits. Then she sucked on Tiff's breasts as Vicky rode the dildo.\n\n\"Oh God!\" Jeanna shouted as Deborah's talented tongue pushed her over the brink and into happy-land. Her pussy spasmed and quivered and she ground her crotch against Deb's face by swiveling her hips. And for the second time that evening, Deb's face was coated in girl-juice. \"No wonder Vicky's gotten so good at doing that! She's got the best teacher in the world,\" she added, then leaned over and gave her girlfriend a kiss.\n\n\"Don't distract me,\" Vicky said after the kiss. \"I'm getting fucked.\"\n\n\"Sweetheart, if I stopped talking to you every time you were horny, I don't think we'd EVER have a conversation.\"\n\n\"You're exaggerating,\" Vicky said.\n\n\"Is she?\" Lilly asked. She put her head between Tiffany and Vicky's abdomens, then began licking Vicky's clit as she rode the plastic pony. \n\n\"That's . . . that's nice,\" Vicky cooed. \"More of that!\"\n\nLilly didn't need much more encouragement, so she kept her face wedged between the two women, keeping her tongue against the top of Vicky's slot as that big plastic cock slid in and out of her box. Lilly felt Tiffany stroking her head as she pleasured another woman. Lilly had no plans to make this a regular event. After it was all said and done, she would come clean about her major reason for suggesting it. But in the meantime, she was having too much fun.\n\nVicky settled down on the hefty device and squeezed her pussy muscles. She sort of wished that Tiffany was in a little better shape so she could really use the toy like Vicky knew she was capable of, but she would have to wait. Assuming that she and Lilly would be willing to participate in something like this again. For the time being, she had a wonderful orgasm to think about.\n\n\"Oh . . . oh . . . sweet . . . I'm . . .\" Vicky's mind shut off as her climax rampaged through her body.\n\n\"Good grief!\" Lilly said as Vicky's pulsing snatch flooded Tiffany's hips with cum. \"There's no end to it!\" She licked up some of the copious quantity of fluid as it poured out. Vicky seemed to tremble forever while waiting for her orgasm to subside, and she was sweating like a racehorse by the time it finally did.\n\nJeanna helped pulled her semi-lifeless girlfriend off the strap-on toy and lay her on the bed, then lay on top of Vicky's body and began kissing her. \"You're so cute when you do that,\" the dark-haired girl whispered.\n\nWhile they made out, Lilly had one more thing she needed to try. The dildo was as slick as could be, so she stood on the bed and slowly lowered herself towards it.\n\n\"Are you sure you want this now?\" Tiffany asked. She didn't get a response except for her girlfriend to sink lower.\n\n\"Try what?\" Deb asked, wiping some of the cum off her face. Then she saw Lilly hiking up her skirt again, and the head of the dildo wasn't headed in the traditional direction. \"Hon, that's a monster. Are you sure . . .\" Lilly's head whipped around and she had a look of pure, animalistic lust on her face. \"Oh . . . kay,\" Deborah said deliberately. Then she got an idea and she cracked a smile. \"Let's at least get you prepped.\" She straddled Tiffany's legs right behind Lilly and pulled the head of the dildo away from the girl's backdoor for a moment. Then she spread the girl's ass cheeks as far as they could go. With her obstacles out of the way, she caressed the area around Lilly's asshole with her tongue. \n\nLilly began groaning and whimpering as that slimy little muscle circled her sphincter and pushed just a bit inside. 'God, she can eat ass as well as she gives head,' Lilly thought. 'A woman with talent like that shouldn't be single.' But there was time enough for matchmaking later.\n\n\"I think you're ready,\" Deborah said at last. She moved the dildo back into place at the entrance to Lilly's rear-end. \"It's going to hurt like hell at first . . .\" she warned. She watched as the head pushed its way slowly inside Lilly's bottom, and heard the girl squeal a bit. She reached around Lilly's body and cupped her soft breasts, then pressed Deb's own heavy tits against the girl's back.\n\nLilly's asshole felt like she was trying to pass a Buick. She was seriously wondering if she had bitten off more than she could chew, but she wasn't about to surrender. \"Is it . . . all the way . . . in?\" she gasped.\n\nDeb whispered in her ear. \"Nope. Just an inch and a half is in.\"\n\n\"Damn . . .\" Lilly was drenched in sweat. Her asshole was stretching even further and she felt every agonizing centimeter of plastic as it filled up her butt.\n\nTiffany was enjoying the show. The sex toy seemed impossibly large for what Lilly was trying to do with it, but Lilly had a kind of determination that Tiffany had never seen before. It was that determination that had won her a special place in Tiffany's small but close circle of friends. About half the toy was now in Lilly's tight little ass and she was determined to go as far as she could. Tiffany reached forward with her good hand and stuck a few fingers in Lilly's pussy, curling them so she could massage the front of Lilly's vaginal wall. Lilly's eyes lit up, happy to have some distraction from the excruciating pressure in her sphincter. \n\n\"Oh boy,\" Lilly grunted as the pain in her hind-end began to diminish. It was like a set of painkillers had just kicked in, and she was left in a state of euphoria. \"How much?\" she asked of the woman behind her.\n\n\"About six inches,\" Deb replied, sucking on Lilly's neck while fondling her breasts from behind.\n\n\"That . . . that's good enough for now,\" Lilly said. She began a long slow withdrawal, then sat back down on it. It was a little difficult for her to move with Deb's hands on her tits and Tiffany's fingers in her cunt, but she figured she could manage. She felt a little flushed, and was still a little nervous that she might pass out. But she kept her butt moving, and she started to enjoyed this new sense of \"fullness.\" \n\nDeb got another idea. She released Lilly's tits and stood next to the bed, keeping Lilly's skirt lifted high. \"You know, there's another common fantasy involving school girls,\" she practically purred, then brought one hand down smartly on one of Lilly's cute little ass cheeks.\n\nLilly squeaked. 'That stung!' she thought. But she also noticed a very aroused look on Tiffany's face. 'So, that turns her on?' Lilly looked back at Deb. \"Harder,\" she growled.\n\nDeb raised her hand again and swatted the other cheek. Lilly bounced harder on Tiffany's fake dick. And she continued to bounce as Deborah delivered several more light spanks. \n\nTiffany's arm was getting jostled a little more than it probably should, but she barely noticed the pain. She wanted to see her girlfriend cum so badly that a little discomfort was worth it. And she didn't have to wait long. About six and a half inches of black rubber were buried in Lilly's puckered rosebud when the opening to her pussy clamped down on Tiff's fingers and held them as best it could while covering them with sticky girl-juice. \n\nLilly was in the midst of one of the longest orgasms of her young life. Her body was shaking like she had the chills, but her skin was hot to the touch. She saw Tiffany withdraw her hand, shimmering with Lilly's cum. She leaned in and sucked each finger dry, one at a time. \n\n\"Hey beautiful,\" was Tiffany's next statement. \"How you feeling?\"\n\n\"Pretty well fucked,\" Lilly said. She extricated herself from the dildo, then got some help from Deb in getting the harness off the muscular Tiffany. Lilly then lay down at her lover's side and the two just stared at each other's faces for a while.\n\nDeb smiled. She knew the women were on the right track to experience something special. She nodded toward the door, and Vicky and Jeanna headed out. Deb had every intention of curling up with the two young lovelies in her own bedroom, but before she could, she stole one last glance and Lilly and Tiff. Both of them shot her shy smiles and knowing glance. She smiled back, blew them a kiss, then closed the door behind her.\n\n------------- ----------------\n\nThe next morning . . .\n\n------------- ----------------\n\nDeb was brewing a fresh pot of coffee, dressed only in a terrycloth robe while humming happily to herself. She, Jeanna and Vicky had enjoyed themselves a little longer after leaving Tiff and Lilly, and she was feeling VERY relaxed. She heard the door to Tiffany's room open and Lilly came out, dressed in a pair of Tiffany's pajamas. They were a bit large for the girl, but Lilly wore them well.\n\n\"Morning,\" Deb said, giving her young friend a warm hug. \n\n\"Mornin',\" Lilly slurred, plopping her butt down at the dining-room table. She wasn't normally a morning person, but she had set the alarm so she could go pick up Sally from her grandparent's house. \"Coffee . . . soon.\"\n\n\"Yes cavewoman,\" Deb joked. She poured the girl a cup, then sat down across the table. \"So, how long had you girls been planning that?\"\n\nLilly cocked one sleepy eye open. \"About . . . a week. I think? Yeah, that sounds right. We thought it would be fun.\"\n\n\"Whose idea was it?\"\n\nLilly blushed. \"Mine.\"\n\nDeb smiled. \"Sounds a little . . . bold . . . for you.\"\n\nLilly took another sip. \"Well, I . . .\"\n\n\"It's okay. You can tell me anything.\"\n\n\"I just noticed . . . and kind of felt that you shouldn't be alone right now. I know how weird things can get when you're in the middle of the divorce. You did so much to make Tiffany feel special that I thought you might have forgotten how to feel that way yourself. And . . . and because I wanted to feel like I belonged.\"\n\nDeb looked quizzical. \"How so?\"\n\nLilly looked skyward. \"All you girls have this kind of history together. And although none of you meant to do it, I kind of felt like the odd girl out. I mean, I get to be with Tiffany and I appreciate that, but I wanted to be part of her WHOLE life.\"\n\n\"Well, you've got that now,\" Deb said, standing up and giving Lilly a quick kiss on the cheek. \"So, where's the munchkin?\"\n\n\"She's at Tiffany's parents. They were bugging her to let Sally stay over anyway, so we figured it was as good a time as any. Speaking of which, I need to get cleaned up and go pick her up and take her to school. I figure Tiffany could use a little sleep and . . . what?\" Deb had been staring at her bemusedly.\n\n\"You're lucky, you know that? She's trusting you with her heart . . . her fantasies . . . and her daughter . . . and she doesn't trust ANYONE with Sally without good reason.\" \n\nLilly paused. She hadn't really thought about it, but Deb was right. Tiffany was trusting her with a lot, and that made her heart warm. She hurried through her shower, got dressed and left, but not before giving Deborah another hug.\n\n------------ -----------------\n\nA little while later . . .\n\n------------ -----------------\n\n\"Hey Deb. Where's Lilly?\" Tiffany asked, emerging from her room like a bear from its cave after a winter's hibernation.\n\n\"She went to get Sally, and I think she was going to pick up some breakfast for everyone on the way back. Jeanna and Vicky are still in bed.\" She looked at her own bedroom. \"They're a cute couple.\" She looked back at Tiffany. \"Kind of like you and a young philosophy student.\"\n\nTiffany blushed. \"She's good for me, Deb. I really like it when she's around.\"\n\n\"I can tell.\"\n\n\"And I can't wait until you find someone like that. Someone show sees in you what the rest of us do.\"\n\nDeb smiled and brushed a stray hair from her eyes. \"A little early in the morning for sentiment, isn't it?\"\n\n\"Never.\" Tiffany suddenly appeared quite stern and she looked around. \"Deb . . . when my arm gets better . . . I don't know if I want to wrestle anymore. At least not in the big times.\"\n\nDeb's eyes were as wide as manhole covers and she slowly lowered her cup to the table. \"What? But . . . but . . .\" Then Deb noticed an odd look of relief on Tiffany's face. \"You're serious, aren't you?\"\n\n\"Yeah. Yeah I am. I mean, I'd still like to wrestle locally but . . . but I don't know if I really WANT to work for the WWE anymore. I mean, do I really want to spend over two hundred days of the year away from my daughter? Do I want to deal with the type of shit I've seen in this industry on a national scale? I like being around the game. I LOVE helping Vicky and Marcia get better. Is it weak of me to say that maybe . . . maybe my dreams aren't what they used to be? I told Jim Cornette that I would think about it, but now . . .\"\n\n\"Sugar, are you sure?\"\n\n\"No, but it's something I've been thinking about a lot in the last few days. I haven't even told Lilly yet. This isn't the first time I've thought about quitting lately, but it IS the first time I've thought about it clearly. I've got it good, Deb. Okay, the broken elbow sucks, but I've got friends, a girlfriend who I could get serious about, a potentially cool new job and a decent paying old job . . . would it really be so bad for me to be happy with what I've got?\"\n\nDeborah placed her hand on the side of her friend's face. \"Tiff, I'll support you in whatever you do, and I know Lilly will too. And I understand you not wanting to spend that kind of time away from your girl, because you're a good mom and good moms always think about their kids. But if you decide to stay local and be a wrestling trainer and a physical trainer, do you think you can be happy? Without that one perfect moment at Madison Square Garden that you always talk about?\"\n\n\"Your dad had his 'moment' at a random event down in Mexico. Why does mine HAVE to be at the Garden?\"\n\n\"It doesn't. It's just you've always talked about it like it was Mecca that I couldn't imagine you NOT going there.\"\n\n\"A part of me will always want to go. And I can't say for sure that I would say 'no' if they offered me an opportunity. But . . . every time I reach for the brass ring, something bad happens. And every time I'm here with you guys, things are good. Maybe it's the universe's way of telling me something.\"\n\nDeb blew a strand of hair out of her face. \"You know that's not true. You're a damn good wrestler and you deserve . . .\"\n\n\"It doesn't matter. There are a million talented singers out there, but only one gets to be an American Idol,\" Tiffany said with a smirk. \"But you know something? I want to be a good mother. I want to be a good influence on the younger wrestlers, and I want to be happy. And if that means being a small-time wrestler and a trainer rather than being a superstar . . . I think I can live with that.\" She sighed. \"I'm sorry though. I know how much you risked for me . . .\"\n\n\"Don't you dare apologize again. Sweetheart, I did what I did because I like you and because I thought that was what you wanted. If you want to help make NAXW a success and do all the things you just said you wanted, then I'll back you one hundred percent. I just don't want you to settle . . .\"",
        "At that moment, the door swung open and Lilly wandered in, carrying a box of doughnuts and a bag from McDonalds. \"Crap! Sorry, the line at the doughnut place was really long,\" she said, giving Tiffany a kiss on she side of the face, then another on the lips. She blushed a little when she saw Deborah smiling at her. \"Sally wants a PowerPuff Girl lunchbox by the way. Not like her old one but like a NEW one.\" Lilly plopped some incredibly unhealthy food down in front of her girlfriend. \"I told her I'd talk to you about it, which I have now done. She's an insistent little bugger, isn't she? And . . . What's so funny?\"\n\nTiffany had started to chuckle. She looked at Deb. \"In regards to your last statement, I don't think I am.\"\n\nLilly looked confused, but she obviously wasn't meant to understand. So she lightly rubbed Tiffany's shoulders as they enjoyed a quiet breakfast together.\n\n------------------ --------------------------\n\nEpilogue: Seven months later . . .\n\n------------------ --------------------------\n\n\"No regrets?\" Lilly asked as she, Tiffany and Sally sat in an empty arena, watching the janitors start to clean up.\n\n\"No, not really,\" Tiffany said, almost surprised that she meant it. The arena they were sitting in was Madison Square Garden. It had only been a house show, but it had been Vicky's WWE debut venue as well. \n\nIt made Tiffany smile. She had turned all her attentions to coaching many months earlier, and several of her students had been approached within a relatively short period of time. Several scouts had come by, and with Tiffany content to stay in California, both Vicky and Francine had been called up from the minor leagues to stretch their legs. Injuries to the WWE's ranks had made them need attractive young women to help repair an ailing women's division, and Francine (now known as \"Francesca\") and Vicky (still known as \"Vixen\") had fit the bill perfectly. Jeanna was basically on standby, but she was happy for her girlfriend's success. WWE officials had been so impressed with the marked improvement in some of their new farm league's wrestlers that Tiffany's stock had risen, and she was getting a lot of wrestler's getting sent her way to help recover from ring rust after injuries as well as some promising new talent. She had even gotten a phone call from Vince McMahon himself. And when the two new WWE talents had heard that they would be wrestling at the hallowed halls of Madison Square Garden, everyone in NAXW had sprung for plane tickets so that Tiffany, Sally and Lilly could make it out. Jeanna had bought her own way, insisting that no one was going to make her miss it. Deb, who had won primary control of the company in her divorce settlement, had meetings to attend, but she had wished the girls the best of luck.\n\nTiffany stretched her mended arm. It still creaked a little when the weather was cold, but it tended to warm up again when it wrapped around her girlfriend or her daughter. She had quit her job at The Dark, seeing as she was making enough money as it was, but she hadn't left her old boss empty handed. Lilly had taken her place, and was quite a popular bartender. The young woman had found a place where being sexy and smart really worked in her favor. The two women were still together and had grown even closer. Lilly had actually taken to helping Sally with her homework on a regular basis, and she and Tiff had been discussing the idea of Lilly moving in with them. Tiffany stood up and took a look around.\n\n\"Hey,\" said Vicky, appearing at the entrance to the locker rooms, Francine and Jeanna in tow. The beauty looked like a million bucks. She had been a little nervous and stiff in the ring, but the fans hadn't cared. She was hot and she could move, so she kept their attention. She ran up and gave Tiffany a bone-crushing hug. \"Thanks for getting me here.\"\n\nTiffany cried, but just a little. \"Hell, I just pointed the way. You did the hard stuff.\"\n\n\"Bullshit. You made me good enough . . .\"\n\n\"You made 'us' good enough,\" Francine interjected.\n\n\"Absolutely,\" Vicky agreed. \"So dinner in New York is on me! But first . . .\" Vicky glanced over her shoulder towards the empty ring. \"You know, I asked the ring crew to give us a few minutes before they started take-down. Think you can still go? Old woman?\"\n\nTiffany grinned and hopped over the guardrail. Jeanna and Francine sat down on the rail while Lilly picked up Sally (who was now eight years old, as she liked to remind people) and held her so that she was facing away. She still didn't like seeing her mom in the ring. Tiffany and Vicky fell into one of their old programs, and the wrestler-turned-trainer felt pretty good. A couple of the actual WWE superstars, including Victoria, Trish Stratus and a couple of the boys, came out to watch, and they were appreciative of Tiffany's skills. Several of them had actually heard of her. Tiffany and her friend ended their impromptu match with a double disqualification, and they received a standing ovation from about a dozen people. For Tiffany, it was as much of a perfect moment as she would ever need.\n\n------------ ---------------\n\nThe end . . . "
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "tiffany head",
        "tiffany blushed",
        "lilly back",
        "good deb",
        "kissing lilly",
        "heard tiffany",
        "mother tiffany",
        "tiffany good",
        "thought lilly",
        "lilly eyes"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/ringside-seats-ch-03"
}