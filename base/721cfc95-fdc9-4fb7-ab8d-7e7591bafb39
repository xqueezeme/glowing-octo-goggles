{
    "title": "Dark as Ivory Pt. 03",
    "pages": [
        "One last content warning: They're closer now, but still play pretty rough. But I hope you liked their story. This one was a fun one! Let me know what you think and have fun :)\n\nTuesday\n\nIt took the entire ride to a parking garage but by the time he parked I was a little more coherent again. And it was mostly thanks to that hotter than hell sports car he had that I started coming back to reality. Otherwise I might have just stared at Flatline some more, like a fucking idiot. But when I saw his car, my eyes went wide. \"Woah. Bitching ride. What made you decide on it?\"\n\nHe grinned and then I was talking to him easily because I wasn't looking at him, instead distracted by the smooth as silk interior. His car was one of my favorite models for my own reasons but I wanted to hear his. And it was easy to talk about that because Flatline and I had enjoyed many conversations, both sexual and not. Distracted by something else to look at, it was easy to talk with him and as the conversation went on while we disagreed on engines and talked older cars and newer cars and sports models, it started to sink in that this was a man I knew. He had fucked me in perverse ways, cut me, made me fear for my life, kept me safe, lecherously licked my tears, castrated me from orgasms for days at a time, and always, always taken care of me with every game.\n\nHe took a second to kiss me in the parking garage, smiling again. \"There's my Tuesday again. Come on, baby, let's go see a show.\"\n\n\"A show?\" I trailed after him, my heels a little strange for me but not uncomfortable. He hadn't been cruel with those and they were small kitten heels. \"What kind of show?\"\n\nHe laughed at that. \"Dearest Tuesday, you haven't broken my rule about questioning my games yet. Don't start now.\" He pulled me beside him, shaking his finger in a tsking motion. \"No ruining my fun surprises.\"\n\nI was smiling, still staring every now and again, and even more dangerously enamored than before. God, he was beautiful in a way that screamed sin, with that dark hair and the way his entire demeanor shouted warning and danger. It wasn't just his massive stature or his obvious muscle build. It was his gait, the way his eyes sharply noticed everything, the way he didn't ask any questions but seemed to know exactly what he was doing. And the way he glanced at me every now and again when he felt me watching...\n\nDear God. Even on a date and without the collar there was no way I could forget I was his sexual object to hurt and fuck at will. Even dressed like a princess, I was his slutty masochist of a princess, and any glance he gave me just underlined that fact in bold.\n\nHe guided me to a theater, covering my eyes with a flirtatious whisper in my ear, \"Just a little longer.\" And I had to laugh at his insistence on his surprises but I'd never fight him with those. He only kept my eyes behind his palm while we walked through the door.\n\nThe place was gorgeous, but also currently had a strange vibe in the exotic sense of the word. Just like some of the people I saw were... slightly strange. A few of them anyway, the ones that stood out. Most everyone was actually pretty normal, but the attire was definitely formal. Flatline led us to a box overlooking an auditorium, making sure I couldn't see any kind of indicators as to what was going on. He was in high spirits too, tugging me along with a playfulness like the night he collared me and said he had to kill his private room coordinator.\n\nWas that playfulness... wait. Was that Flatline's form of being nervous? It was way different than anyone else's brand of nervous if it was. He was so smooth and easy and of course to him there was nothing unusual about talking to me when he saw me all the time, most often naked.\n\n\"My God, you are unfair to look at.\" I watched him in our mostly private seating, glad for that privacy. It felt like a chance to breathe and take him in. He had buttoned his suit up and put on a tie, fixing it in his car mirror and it was a deep red one that matched me. To me, female formal attire had so much variety and men's seemed almost boring, but he for damn sure didn't make it look boring.\n\nHe laughed, talking with me softly in our seats, his arm easily around my shoulder. And I realized that almost naturally I was leaned into him, my body aligned towards his to speak to him. It was all totally feeling based but so subconscious too, a side effect of having felt him while blind for so long. \"If you'd look in the mirror a little more often, you'd realize that you are too.\"\n\nAmazing. My belly tossed with butterflies. He didn't apologize for looking gorgeous and didn't deny it, but I knew he wasn't a narcissist either. My God, he'd been dating me without even using his good looks so he obviously didn't need to delude himself about it. He was just confident, in a way that made me remember three goddamned days of his edging torture. \"That might be true.\" But I laughed. \"But I like my sleep a lot too, so I end up rushing past the mirror. Also I can't see hair colors when I try them and end up with tiger stripes.\"\n\n\"Dear lord, you tried to dye it yourself? You are not one to let a physical setback stop you from adventure at all, are you?\"\n\nHe was smiling in a way that made me smile, a way that made me love my impulsive antics. Some people I'd tried to date before I knew myself well enough had always treated that recklessness like a failing, but not Flatline. He approved and it was clear that he did. Of course he might have been biased since that same behavior led me to date him. \"Not at all. I could give a little more effort in something like styling though, it's true. I don't even have a color excuse for that.\"\n\nHe stroked a stray hair behind my ear gently. \"Oh, I don't know. I have dreams of those French braids you wear like a little Million Dollar Baby and that Osgood hockey jersey with nothing else beneath it while you serve me scotch or coffee.\"\n\nI laughed. \"I started buying his jerseys after the octopus thing because he really was bloody brilliant. Okay, what's your favorite cookie?\"\n\nHe lifted an eyebrow. \"Favorite cookie? Peanut butter chocolate chip, I suppose.\"\n\nHe would choose a difficult bloody cookie. I jumped when the lights went down, catching a glimpse of the wicked little smile on his face before it was dark and the stage was lit. I buried my face in his shoulder, blushing but delighted, when the introduction said the phrase \"annual burlesque show\". He nudged me, his whisper insistent. \"Really? I release you from months of blindness and you hide your face? Not on your life, Tuesday.\"\n\nI grinned and turned back to watch what he wanted me to, knowing it was to tease me all the more. When he got a chance he disappeared for a moment and came back with two small glasses. \"Tell me, have you ever had absinthe?\" Sparks danced in his eyes, sadistic sparks, and I shook my head.\n\nHe lifted a glass to my lips and I obediently drank. It hit my tongue like licorice flavored fire and my eyes went wide with delight. Much like any other intense sensation, it killed any hope of taste for the rest of the night. He fed me both small glasses after that and the night seemed to grow more and more magical with every sip.\n\n\u2014\u2014\u2014\u2014\n\nHe had a penthouse suite - but what else would he have - and after our foray of high class, jazzy sex fun - my bad, the proper word is obviously sensual - that's where he took me, taking me up an elevator and laughing at the ridiculous shit I was spouting off about why transexuals had never been a fetish of mine. Maybe it was the absinthe, maybe it was that my body was starting to catch up with my eyes and I was getting used to the beautiful sight of him. I wasn't sure but after watching a burlesque show with him, it was impossible to not feel amped with the sex he had injected me with over the past three days.\n\nHe closed the door and turned to me with a predator's look, taking off his jacket and tie and throwing them over a chair while his eyes stayed on mine, his smile wicked. It reminded me of the absinthe all over again and I shivered, horny and eager. \"Now it's your turn.\"\n\n\"My turn?\"\n\nHe winked and lifted a remote until music played throughout his wide living room. But his music wasn't jazzy, no. It was edgy and dark, industrial rock that pulsed both sex and violence. \"Your turn to tease me, baby.\" He lifted the dress over my head, his hands stroking down my sides, his gaze hot when it moved over the sheer bra. I turned with his motions when he manipulated me and my body was forced into a dancing rhythm to the beat from his surround sound, but it was a kind of dancing rhythm that brushed my ass against his cock and I moaned, feeling the length as hard as it was. My body took over from there, arching erotically in his arms because fuck, was I riled up to insanity. It was so easy to tease him like the slut he obviously wanted when I felt so slutty and needy. \"More,\" I moaned when he pulled away.\n\nHe chuckled and came back, but he didn't grind his cock against me again. Instead I felt my collar at my neck and he clasped it and locked it, having already removed the necklace to place back in its beautiful box. It was mine, he'd said, but I asked him to hold onto it because he could match it while I couldn't and I was terrified of having something like that, terrified of hurting it. \"Such a horny fucking girl you are. But I want a nice tease for me and my little slave serves, isn't that right?\"\n\n\"Yes, master.\" I practically purred those words while he pulled me to the middle of the room where a chair was and sat down. If it were anyone else I would feel stupid and find a reason to stop. But I didn't dare stop with Flatline, didn't dare rebel anything he demanded. I was eager and hot all over, my pussy alive with need, and it was impossible to not feel like a sex object. And then the last reason I couldn't feel stupid like this?\n\nFlatline never let me have control, never let me take any reins, and he didn't start with this. Like with everything else, he took over and he didn't ask. He just did, taking of my body as he willed. His hands moved me to the rhythm and he purposefully arched up so that I felt his cock brush me, which made me whine and grind and tease him as he wanted. When he wanted me bent forward he reached up to stroke over my tits in the bra. I moaned with greed and arched to his touch while he spoke, low and encouraging and fucking filthy. \"That's it. Be a horny little whore for me. My little set of holes to use as I want.\"\n\nWhen he turned me to face him I was insane for him, actually out of my mind. I couldn't think past the pure need that screamed in me and now that I could see his eyes, had permission to look on his face? I moaned and straddled him like he guided me to, my ass lifted like an animal in heat. I arched the way he wanted and, oh yes, I teased. I licked my tongue across his lips while he growled, his eyes holding me captive. He raised me higher, his gaze traveling down my body with hunger in it, until my pussy was right at his face, the rhythm shaking me. His nose skimmed my sex so that I cried out, breaking. \"Please! Please!\"\n\nHe snarled and undid his suit pants beneath me, pulling them down even while he impatiently pulled my thong off, leaving me in the garter and heels. And he switched up from the chair to his couch, throwing me back onto it, sideways, while he crawled over me. One hand locked over my wrists on the armrest and held them still while the other stroked up my back first and then reached down to guide himself inside of me.\n\nHis cock head against my slit made me arch with cries of desperation. I writhed upward, a wild thing in heat, and I thought that after his cruel edging and the show and the absinthe and the pure sexual sensation of getting to see his face and my God, dancing for him? I thought I might have attacked him. As it was my hands made clawing motions in his grasp and my body fought his, but not to get away.\n\nHe laughed above me. \"Aw, look, you're like a little cat caught by the scruff of its neck. Are you my horny little pussy, baby?\"\n\nI moaned up at him, arching for him, and I was in pain. Actual pain. Everything hurt with anticipating need. \"Yes, master, I'm your horny little pussy!\" I would agree to anything, do anything he asked, for his cock.\n\nAnd he knew it. He held still above me, his eyes watching in greedy pleasure at my mindless agony from his build. \"You seem to want some cock. And yet...\" He mock sighed. \"I haven't even hurt you yet. Let's make a deal then.\" I moaned in fear and dread because I was going to bow to whatever it was and regret it later. I was too far gone to think past anything but the burning need. \"I'll be a kind master and give you this orgasm for free, but each successive one is going to cost you a compounding interest of pain. And needless to say, I'll be deciding how many you pay me for.\"\n\n\"Yes! Yes, master!\"\n\nHe laughed above me. \"You're going to regret that, horny little slut. By the end of the night, you'll wonder why you didn't beg for weeks more of denial and edging instead.\"\n\nI shivered at the deliciously ominous words and stared up into his eyes as they glinted with twisted deviancy at seeing me brought low, to this point where I would have agreed to anything, absolutely anything. He might as well have been a god-king of my world right then. And I did agree.\n\nHe watched me struggle for one more minute and then grinned evilly, thrusting inside of me so abruptly I squealed with the sudden feeling of being impaled on his massive size. But I ignored the pain and thrust up against him. It took two strokes and I howled with release while he grunted, my pussy constricting and milking his cock with my hunger.\n\nAnd then came what he'd promised. The pain. He stopped his thrusts to bend down and bite my nipples between his teeth until I keened under my breath, hissing from the way he continuously worried the peaks. He alternated back and forth in a circuit until they were sore and then he still kept going until I wished it were the clover clamps instead. But then his next thrusts were bliss that sent me spiraling again. I tried to make it last as long as it could, whimpering in fear even when I finished, knowing that the next pain would be worse and now I was able to think clearly and realize that he was going to make this go for a long, long time. It was a special night, our first real date, and he'd shown me his face.\n\nThis was going to be torture.\n\n\u2014\u2014\u2014\u2014\n\nI woke up in his bed the next morning with a moan and he actually had to wake me up. He was as bad as his word, putting me through orgasm after orgasm after orgasm. The last one had been so expensive that he'd had to cock gag me to muffle my shrieks while he caned candle wax off my pussy and tits, pierced my breasts through with needles again, and all while a spreader bar held me open. The spreader wouldn't have been so bad, except he had placed it on me hours before and held me at the widest setting in his bed. After so long it hurt, a continuous discomfort that quickly went to pain. From the orgasms leading up to that? My ass was bruised and my shoulders had markings from a short stock whip while my thighs had taken the tawse. He would torture me and then deliberately hold me down for a wand vibrator while he said, \"Time to cum for me, baby, so you'll owe me more pain for the next one.\" And I dreaded the orgasm build. I started to fight them for fear of what followed, but he was relentless and a sexual god and I always ended up crying out in bliss. And then instantly sobbing in terror when he grinned wolfishly.\n\nHe shook me awake a second time and I moaned again, never wanting to move from his bed. It was the black sheets and covers I had seen in his photos and my God, it was more comfy than anything I'd ever felt. Fuck me, but I was willing to even try the continuation of a relationship for the hope to one day sleep with him in that bed. His sheets were like Egyptian cotton or something I didn't indulge myself in because I once upon a time thought it would be dumb. But laying in it with my body throbbing all over from his torture and sex spree made me seriously reconsider what had been missing from my life.\n\nHe chuckled. \"I would be a very bad master if I let you continue sleeping, lovely. You have a few extra things to do this morning, little Tuesday.\"\n\nGoddamnit. He was right. I had a fucking life and bullshit. I opened my eyes to see him standing above me and he smiled in approval when I nodded up to him unwillingly. \"Grr.\"\n\nHe laughed and took my hand. \"Come on. Shower is this way and I have clothes for you. I can spend some of the morning with you, too, and keep you company.\"\n\nNo. Fucking. Way. How perfect was he? He wasn't going to do it. No one was kind enough to do that after a sex spree when they could stay in that heaven of a bed.\n\nHe fucking did it. He drove to work with me and helped me open the store. He'd even given me a gamer shirt and jeans, which made me cringe to put on over the marks he'd left all over me. And oh God, the marks were torture through the day, a constant source of arousal.\n\nHe even hummed. In the morning. He hummed. I didn't know what to do with him. What, he just woke up with all that sexual energy he continuously had with me? How? I mean, granted, I had the sexual part too because I was a horny fucking slut, but the energy? No, that took coffee. Which I made as soon as I was in the store.\n\nWith the coffee came my mental ability. \"Master?\"\n\nHe looked up from one of the tables where he looked out of place going through Magic cards. \"Yes, lovely?\"\n\n\"Does this mean... um, is the routine going to change? You know, how you call and tell me what to do and all that?\"\n\nHe smiled. \"Oh, it will, but I think you'll enjoy the changes. Just keep telling me your schedules and following my lead. I'm sure you'll do just fine, my little relationship phobic sub. In the meantime, how do you play this?\"\n\nI laughed, but it gave us something to do so I set across from him with some of my decks and showed him, going through the rules and how each card changed those rules. Flatline was a delight to show games to, I soon discovered, and he adored anything with strategy. It wasn't an accident that he had beaten me at chess that one night. He was good. I let him look through all of my Magic decks, both current and past expansions, to see how they worked.\n\n\"Mine mostly suck or are beginning learners' decks because I sell the truly rare cards from my packs. If it's a lotus or anything else coveted, I'm not keeping it when it pays for the pack I opened multiple times over.\"\n\nHe laughed. \"Ah, the decision between being a gamer or a businesswoman.\"\n\n\"Business wins for me,\" I answered easily.\n\nI stood up when I saw one of my regulars, glancing back at Flatline when he looked thoughtfully at the door to watch the man pause and then leave. Which didn't shock me. He was a strange one, not that I could judge that at all. He was overly shy. Usually nice enough, always polite, but he didn't stay around when other people were around sometimes.\n\nHe would either call or come back later, though, because for some reason he got along well enough with me.\n\nI went and sat back across from Flatline, who studied me. \"That's who saw us that one night.\"\n\n\"Him? Are you sure? Don't answer that. Dumbest question I ever asked. Of course you're sure. It's just weird. I've never had him come in at night before. It's too busy then and he's too introverted.\"\n\nHe smiled at my monologue, chuckling when I instantly struck doubt from him. \"I'm just telling you. Be careful for me, little Tuesday. I'm becoming a bit fond of having my own personal torture toy, so if you have problems, you are still to come to me. If you end up in danger and I find out it's some fault of your own, I'll have to introduce you to some real punishment, baby.\"",
        "I shuddered at the thought of his punishment when he'd done everything last night as mere sadistic playtime. The thought of his wrath truly terrified me, so I softly said, \"Yes, master\" in the meekest voice I was capable of. And then I blinked, watching him go about my store, picking things up. \"W-what are you doing?\"\n\n\"I have to go soon so I'm getting what I want to buy from you.\"\n\nI watched in awe. He picked up the only copy I had of the Blackgrave and Darkgrave pack - the one I'd gotten shipped literally the day before - picked up Death of the Family, picked up an MTG starter kit. He also got the first graphic novels in the Sandman series. And I watched, shaking a little in a sudden terrible realization, a little bit of panic choking me.\n\nHe nodded. \"That's all for now, I think. What's wrong, baby?\"\n\n\"I don't know how to...\" I gestured at the register and then him and then felt really stupid because goddamnit, this was my job.\n\nBut... He chuckled and circled around the desk where no one had ever trespassed because I had made the last person who dared to try cry. And where was my assertiveness now? Where was any of me now? \"Little slave heart. Come here.\" He wrapped his arms around me, going to the POS, his voice slow and methodically soothing. \"You do it like this. Go to your transaction start.\" I obeyed that mechanically, quivering a little, because what the actual fuck? At the same time my body thrummed all over from what he'd done to me the night before. \"Now type in the password to start it.\" Again, I obeyed. And he wrapped his hand around mine, moving it like I was his doll again to lift up the scanner. He rang the game and the books... and the cards... using my hand while I leaned into his arms. And then he pulled away to get his card and I shivered once at the absence before he held me again, clicking the manual card option. And he used my fingertip to type in the numbers, finishing it.\n\nAnd it was over. He left from behind the counter and leaned over to kiss my forehead. \"You do it just like that.\"\n\nGod, I was fucked where he was concerned. Those three words got trapped painfully in my throat and it felt fucking stupid to not tell him when he had to know by now. But he never once pressed it. And he didn't that time either. He merely winked and helped me bag what he'd gotten before he said his goodbye with one last command. \"Get online tonight and play with me.\"\n\n\"Yes, master.\" And I was smiling again, easily.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nMy bond with Tuesday turned into something almost too much for me to bear after I showed myself to her. Jesus, the look in her eyes when she turned to me. I'd never forget it. It was singularly adoring and worshipful all at once, with awe all over her features. It was the kind of expression that every dominant soul both hoped to see and never expected to actually see. Almost like movie romance and how real life never played like that.\n\nThat's how Tuesday looked at me. And then after our first date she had asked that one question that almost made me laugh at her, and not in my usually controlled sadistic way, but a way that might have hurt her feelings. Because she'd asked me if things were going to change, if the routine was going to change.\n\nAnd damn straight it was going to change. After that date I realized what I'd been missing and that was more of her company which I instantly started to demand more of. I made her get online to play a game with me at nights or to make her masturbate while I listened. But then two days later when she had a day off I made her come to the address for the jewelry store I was working at. It wasn't the one closest to where she lived either but I was in charge and fuck me, but I demanded more of her. My possession was a raging force far worse than it had been with anyone else I'd ever tried to date. I wasn't for sure as to why that was, but thought it likely the beast inside me recognized Tuesday as the first person who could handle his bullshit, who might be able to take it even when I finally took her to my dungeon where the worst would wait. And he didn't want her out of sight with that hope. It was driving me a little crazy with the hope and I was terrified I was becoming suffocating, that it would only drive her away.\n\nBut Tuesday didn't complain because she was a miraculous goddamned angel. She laughed when I sent her the address with an easy, \"Yes, master.\"\n\nAnd another thing? Remember how I didn't usually dig on commanding a slave's dress or appearance or eating habits and all that? I damn well discovered a new fucking fetish. With her and after having her closer, I got all over it, burning for every kind of more control. \"Wear your short black uneven skirt with the stockings, your furry boots, and long sleeve leotard that I like. And hair in French braided pigtails.\"\n\nI partially waited for a protest to these kinds of things. She hadn't signed for this bullshit so she had every right and yet still she didn't. \"Yes, master,\" she answered easily instead. Yes, master. Always those two words. I didn't deserve her, would never deserve her, but she obeyed anyway and I was grateful. I was almost scared that I had lied to her when describing how her slavery would go with me, that I would start to command where she slept and shit, but then remembered when she'd been in my bed and how happy she'd been. And I breathed a little easier. Because that's exactly where I wanted her, right beside me, exactly where the monster inside of me wanted her too so he could roll over and take his advantage whenever we wanted.\n\nShe opened the door of my jewelry store, carrying a box and two coffees, and stared in wonder. \"So this is another of your businesses.\"\n\nI smiled at the sight of her, wearing exactly what I commanded her to. Deepest satisfaction filled me and I took the coffee she kindly handed to me. \"This is my main one. It's a chain actually. You'll notice I rotate between stores when I call you to visit.\"\n\nShe laughed in delight and it wasn't the fake laughter I'd gotten before when showing off my stores. No, Tuesday was the exact same cloth from me in every way so she was interested. \"Is this another one co-owned with your brother or just yours? And are there any others?\"\n\nI smiled and leaned against a window, watching the workings in the store with her. \"These are solely mine. The club is mostly my brother's and my interest is mostly capital and accounting work there. There is one other, however, that I do own by myself and that's a fetish wear and toy store, but this one is my main life. Well, in a way. I put so much time and effort into its first few years that it almost runs itself now. I spend my days rotating the stores each week for visits, choose one day a week to go to the fetish store and take calls with the person I have managing it while I'm here. Then I choose some nights or weekends to go to visit my brother at the club and make sure it's good. My management here, though, are amazing. Heh heh. They're gems, if you will.\"\n\nShe laughed at me, her facing shining. \"No! I don't will.\" But she was grinning. \"Wow, that actually doesn't sound bad to have multiple interests and with two under your sole ownership, the taxes would actually be decently straightforward.\"\n\n\"They are, believe it or not, which is why I think you would enjoy branching out. You would just need to train Tate to manage and he knows his shit. I've heard him and how well he does and my God, he's definitely loyal to you.\"\n\nShe considered that. \"A vape store, huh? It does actually interest me.\" And her eyes were shining with thought and intelligence. She knew how to open and operate, had done it before, so I knew she was considering where to begin. \"Let me do some google work. The clientele would be easy to traverse from the gaming store. You were right about them having the same bloody demographic, but I would have to learn the ordering really quick, which shouldn't be a problem and-\" She grinned at me. \"I'll see how it goes.\"\n\nI kissed her forehead. \"I would love to help you, baby. Come on. Let me show you my office. And what's that?\"\n\nShe blushed and looked down at the box. \"It's... it's for you.\"\n\nI chuckled at the shy look on her face, the way she wouldn't quite meet my eyes, and the awkward way she fidgeted with the box. I took it from her and smiled, opening it while she followed me to my office.\n\nShe'd baked me chocolate chip peanut butter cookies. I smiled my pleasure down at her because the way to a submissive's heart was partially through her pain tolerance and partially through the words \"good girl\". \"Thank you, little Tuesday.\" And I knew my expression was enough when she beamed, the smile transforming her face into pure angelic beauty. I closed the office door behind us and went to my desk. \"Now, come here.\" When she was beside me, I pointed to the space beneath my desk where my feet would go, the spot that was hidden by the back. \"It's just Tuesday sized, isn't it, baby?\"\n\nHer eyes went wide in lust from the thought of kneeling and I smiled, pushing her down. No one would see us and this was where I craved to have her while I worked. Well, when she had the day off, that is. I didn't think I could ever take my Tuesday's life from her even for my deep selfishness of her. But I could take what was free, and did. She crawled beneath the desk, curling up like my slave should, as if she were a kitten afraid of the people outside this room.\n\nBut I had another surprise for her that day. I had finally chosen the perfect leash for her and this moment. It was one I already owned, though I had never used it, a little clasping leash that I wrapped around my desk handle and then clipped to her collar before taking my seat.\n\nMy mind was clearer with her at my knees. I fed her bits of the cookies she'd made me while eating the other parts and closing my eyes in pleasure because they were freaking amazing. Whenever I wanted a burst of satisfaction, I looked down to see Tuesday curled in obedience and she lifted her head to meet my eyes each time, smiling in her own satisfaction.\n\nThe next time I had her visit I refrained from doing that, instead letting my other employees meet her and talk with her about her own business because she wasn't just my mistress or fucktoy or something. I might tie her under my desk with a leash but I wouldn't fuck her in my office, which sounded hypocritical when put next to all the times I'd violated her in her own back room. But my office had other people around and I was too proud of her to reduce her to a sexual creature where they could see. I wanted them to respect her and they quickly did.\n\nBut of course I had zero problem turning her into a sexual creature between the two of us. And just because my thoughts were of respect and romance? Oh, it still didn't mean I suddenly got the dom sentiment of wanting to protect her from myself or wondering why I wanted to hurt her. Whatever created that seemed to be missing entirely from my being because if I ever would have felt it, it would have been with her.\n\nBut I didn't. And I didn't get kinder. I got worse and worse. The more of her tears I tasted, the more intensity I craved for. Like a vampire, I took of her and took some more, allowing her reprieve only so she could replenish that force to let me feed on it again. A week after our date, I took her back to my penthouse again after work and in my luxuriant bathroom I filled her bowels with uncomfortably warm enema water until her belly bulged from it and the pain of cramps spasmed in her eyes. While she cried in misery I held her gaze with my hand on her jaw and hissed in her face. \"You hold that in your asshole until I say otherwise or you'll be in denial for a week while you sleep with vibrating chastity belt toys in this penthouse.\" Her eyes went wide with my cruel voice and she nodded frantically because I'd fixed her with a thick cock gag.\n\nI cropped her thighs while she shook beneath me and she somehow pulled on enough control to manage to not release her bowels.\n\nThe next night I made her stand before me warily in my bedroom. \"Well, little Tuesday. I think we learned something about you yesterday, about just how terrified you are of the chastity belts and denial training, so I thought we might play a fun little game together. It's called 'How high can we take Tuesday in one night? How much of a slut can we make her and what all can we make her suffer in exchange for an orgasm?'\"\n\nShe groaned and I laughed, starting to fit her in her toys. First was the chastity belt with adjustable attachments. I got a nice thick vibrator for her pussy and a fun little anal toy that not only vibrated but would have weight inside of her. I fitted her to that and then a spreader bar on its widest setting at her ankles. I ignored her cuffs, using a different set to bind her just above her elbows, and those bindings were the ones I roped up to the carabiner from my bedroom ceiling. Lastly, I fitted her with the cock gag that was becoming my favorite. It muted every sound to an arousing amount, reducing her to a body that was to suffer at my delight. And she was that. When I was done, the view was such that my little fae was turned away from my king bed and facing my doorway. I deliberately went and got my book from the dresser where she could see, carrying the controls to both of her toys in plain view as well. And then I lay down and turned them on, flipping to the page I was on.\n\nI left her there for a truly cruel amount of time, turning the vibrators off and on to torture her while small little whimpers of distress escaped her. She danced in her strict bondage and I saw tears when they fell on my bedroom floor. She shifted in her dark hell, poor little Tuesday.\n\nWhen I finally took her cock gag out, she was begging instantly. \"Please! Master, please!\" I stroked her between her legs, teasing her around the metal of the chastity belt so that she sobbed even louder.\n\n\"What will you give me in return for an orgasm?\" I asked it so calmly while she was falling apart, clothed where she was naked except for constraints. Each little thing was another fuel for my power imbalance delight.\n\n\"Anything!\" She cried it desperately and I smiled. I loved her this way, ready to take whatever torture I would give and so hot that she could take more and more pain.\n\n\"Anything? That's not persuasive at all, Tuesday. You'll give me that anyway or I'll just take it from you. Your past doms may have enjoyed your willingness but you'll find that I don't need, or sometimes even want, it. Now that I think about it, you don't really have anything at all to offer me in return.\" So cruel, so mean, and I said it in the most condescending and disdainful voice I could. She broke, her cries and tears coming in full and I smiled at the sight. \"You're just my little slave and if I never wanted you to cum at all, if I only wanted you to suffer, then you would.\"\n\n\"Y-yes, master,\" she whimpered.\n\n\"And if I didn't want you to feel any pleasure, you wouldn't, would you? You would stay in bondage just like this and wait for me to whip you or cane you or clamp you or do whatever I wanted to hear your screams. And you could try to fight me, but let's be honest, I'm bigger and you would have restraints to make it so very easy for me. Isn't that right?\" Her sniffles were pathetic and it was turning me on something fierce. A sense of hopelessness was crossing her face even when she still shuddered with the horrible arousal I'd put her through.\n\n\"Yes, master.\" It was a small little mouse sound, so broken and defeated.\n\n\"And every orgasm is a gift from master, isn't it? And it's one you should gratefully suffer for, while thanking me for every whip stroke, isn't it?\"\n\n\"Yes, master.\" Again, so quiet with pain and torture.\n\nI was hard as fuck. I unlocked her chastity belt and casually eased the toys out of her while she whimpered, but then she moaned when I unhooked her cuffs from the ceiling and shoved her over my bed, manhandling her in her spreader bar. She squealed when I thrust first into her pussy and then forced my way into her tight asshole, delighting in every pained, delicious quiver she gave me, her hole squeezing on me with protest. \"And if I want you to be a set of filthy little holes for me to fuck when I get aroused off torturing you then you're just going to take it in whatever way I say. Because whose little asshole is this, Tuesday?\"\n\nI barked it at her, slapping her ass while she writhed helplessly. \"Yours, master!\" She arched to me, taking me deeper. I lifted my hands to cinch her nipples so that she cried out in sexual need.\n\nAnd then I leaned over her when every stroke of mine ignited a whine from her, when every whimper was of desperate madness on her part as she still held back her orgasm. My hand seemed to automatically move to her hair and I clasped the smooth column of her throat, pulling her back so that my lips were at her ear. \"Cum for me, Tuesday.\"\n\nLike a firecracker, she gasped with shock... and then screamed with pleasure so that I laughed, covering her mouth and punishing her asshole with my cock. \"God, you sick little fuck. You loved the thought of that.\" And she did because her orgasm was as hot as any she'd had with me.\n\nI made her do things like go to lunch with me but at nights I abused her so she couldn't think too much about her relationship phobia. She was never without the marks of my love on her. Cane tracks, whip licks, crop bites, scratches where I clawed at her. She ate it up like candy when I gave it to her while I whispered in a cruel voice in her ear that she should learn to like those marks like a uniform. I hissed that she should get used to feeling the bite of pain on her ass every time she sat because it made me horny. And she was fucking mine to do with as I pleased.\n\nThere were other games too, where I called her work phone when she was finishing her close off and purred in her ear. \"Take the subway to the park and when you reach the entrance, run, little Tuesday. And you'd better give me a thrilling chase or I might have to find other ways to amuse myself.\"\n\nShe would laugh in my ear. \"You're a bloody fiend!\" And she would be excited with the game, but invariably whenever she reached the destination I commanded her to she would have fear in her eyes and be looking over her shoulder because I stayed out of sight and watched the emotions crest in her. And then she would start running, going to different trees to hide herself. I chased her with a grin through the \u202a24/7\u202c park and when I reached a hard surface where she was near? I tapped a cane on that surface, threatening her out loud as if I didn't know where she was. \"I don't think I'm nearly satisfied, baby. You might want to try harder.\" And by then she'd learned terror at the sound of the cane in my hands so she did absolutely try harder, sprinting while I laughed. But when I caught her? Nothing bad ever happened. We had a late night snack. Don't give me that look. I'm damn well aware it's a fucking park and I'm not out for a sex offender record, believe it or not. We ate fucking crackers together and talked about ICP, Jesus.\n\nBut I never crossed that line that we both approached with baited breath. I never offered to show her my dungeon and she never asked, perhaps with some instinct that the dungeon was where we'd pass a bridge and burn it. I already had ideas about her in there, all of them extreme and brutal. It wouldn't be a light little play session that she would just get to walk away from. It'd be something special and terrible. So we didn't talk about it, but it waited for the both of us, an event that made my heart race. Don't get me wrong. I didn't have a problem with admitting my love for Tuesday. But I wasn't sure about her and wanted to give her a little more time.\n\nBut that \"little more time\" was fast becoming ridiculous when she showed me every day how much she loved me with her messages wishing me a good morning and the delicious cookies she would bake me. It thrilled me because it seemed more and more clear that I would have to be the one to cross that line and it would be far more interesting if I did.",
        "\u2014\u2014\u2014\u2014\n\n\"What are you doing?\" Tuesday giggled against where I held her on my love seat. We'd rented a movie and made dinner together, having a lazy date night.\n\nI kissed her again, turning her face to mine and this time I teased her lips open with my tongue, smiling. \"Movie turned very boring. But fortunately I have a slave to entertain me during my boredom.\"\n\nShe giggled up at me and purred, kissing me back for our make out session. Like two teenagers, we nipped at each other, tasting each other curiously. I held her away from my cock since she would have jumped me for it and that wasn't allowed just yet. I just wanted to be playful for a minute. \"You taste like cinnamon now,\" she whispered with a giggle.\n\nI chuckled, biting her lower lip. \"So do you.\" Because we'd had a dessert of cinnamon rolls and shared a few shots of cinnamon Jack afterwards.\n\nShe laughed, breathless and so happy against me that it made my heart soar with amazement. \"Wait! I have to go get something from the car before we keep going.\"\n\nI sat back against the love seat with a grin. She'd told me she'd left something even when we'd gotten to my door and she was smart to bring it up now before I got started. Once I did, she would be mine until my dominance was satisfied. \"Alright, go on. I wouldn't take too long though.\" I stroked my cock thoughtfully through my jeans while she swallowed. \"Who knows what I might come up with if given the time?\"\n\nShe giggled and threw a Twizzler at me from the coffee table while I laughed. \"You're absolutely satanic, you know that?\"\n\nI grinned, watching her go to the door and delighting to the fact that she both felt comfortable enough to tease me and was scared enough to run from me. \"Laveyan belief is actually just atheism and sexual intercourse has 17 letters, Two,\" I called after her.\n\nShe turned around with a bemused but laughing look. One might even say it was bemused and amused. Heh heh. \"What? Okay, you're just spouting random shit to keep me longer so you can be more cruel and that's wrong of you.\" She turned and left, hurrying while I jumped up and waited by the door for enough time to pass that she would be out of sight. And then I still looked left and right to make sure.\n\nTrue facts? Stalking someone is definitely not a glamorous thing. Oh, don't get me wrong, I had absolutely tons of fun doing it but it required some quick and not very graceful work every now and again. Like those times when I'd had to make sure that Two was distracted in her store and wouldn't see me hiding her blindfolds in the book. I had to both stay out of her sight and not get Tate's or Jackson's attention. And using binoculars to watch her masturbate? There's no way to hold those to your eyes and not feel like Jack Nicholson just led you from your cell for a fishing trip. But it was fun and it had led to even more fun.\n\nEven after she saw my face I liked to play ridiculous games. I darted down my stairwell after her, snickering to myself. And when I reached the parking garage I had to skirt around a long ass way to get to my designated parking spaces, but it kept me out of sight, and I stayed back, grinning when she walked into view. She was already looking over her shoulder with laughter in her eyes because she knew me that fucking well. I had every intention of waiting for her to unlock my sports car and then grab her from behind while she squealed in laughter behind my palm. And then I'd fuck her in the back seat where the tint would hide us while I growled in her ear that her teasing me had made me too hard so this was all her fault and she didn't get to cum. She was just to take it and service me because she was a filthy little slut of a tease and deserved it.\n\nOf course later I'd take her upstairs to my bed and make her scream while I ate her out. Maybe I'd make her lay on my table while I licked chocolate off of her. Two hated feeling sticky, I'd learned, and it made me happy to hear her beg for a shower, saying she felt gross even when she clearly didn't quite want to get up because she wanted to cum all over my tongue some more.\n\nI never got the chance to do any of that. The smile quickly faded from my face with a sense of foreboding running up my spine. Something wasn't right and I didn't know what made it feel that way for me, but Two leaned down into my sports car and I didn't jump on her. She stood up with the papers she'd needed for work, still with a sense of wary playfulness in her eyes and it unfolded in front of me like a trainwreck happening.\n\nI knew we'd been watched when we kissed in her store one night. And I knew I'd seen the figure other times too, but people being at her store late at night wasn't an odd occurrence. She operated those kinds of hours because it was smart for her business. But it had struck me as strange when she knew the person who'd seen us, when it wasn't someone who came in late at night.\n\nIn an ironic, terrible twist, I saw the garrote around her throat and her eyes went wide with first laughter and fear, and then just fear when her body knew that something was very wrong. The guy who'd seen us was not my size and she clawed at her neck instantly, so hard I saw blood even when I ran forward. And also ironically, where I had once been so aroused and incited by her blood and the sight of red anywhere on her body, I was aroused again at this in more ways than one. My cock was half hard, yes, but there was a more dominating sense of arousal burning through me.\n\nIt was the kind that a bull had where I felt like I could kill instead. Somehow I had the presence of mind to remember that murder is bad and we don't cross that line, but for a brief second it was a near thing. My fist hit the side of his head and he dropped and that was it. It was over as quickly as it'd started and I was looking down at his prone form, wondering how the hell I had managed that kind of restraint. My gaze lifted from the man, taking in the sandy hair, my guess of his height and weight, and then lifted to Two who stared down at him as well.\n\nShe shuddered, a single, full body shudder that made me scared to see. Her eyes lifted from her assailant to mine and she choked and her eyes scared me even more. They were wide and dilated and she choked again, as if she might throw up. I grabbed her shoulders, shaking her gently. \"Hey. No, look at me, Two. No! I said look at me, Tuesday Holter. I didn't say to look back down.\" Her nostrils were flaring with her panicked breaths and I held her tighter. \"Tuesday. Listen to me. It's okay, it's all okay.\" She whimpered and tears fell from her eyes while she just stared at me with a bereft expression that I wasn't going to forget for a long time. \"Goddamnit Tuesday, don't you dare do this on me. You're my girl, my brave girl, and you don't let anyone get to you like this.\"\n\n\"What the fuck just happened?\" It came out of her in a panicked yelp, a shrill sound that was too hoarse to be terribly loud.\n\nThere we were. Some words. I smiled gently at her. \"I don't know, baby, but we really need to go inside and call the police and wrap you in a blanket. Come on. Let's get away from here and go somewhere safe. Can you do that for me?\"\n\nShe nodded, eyes shining with her frightened tears and I discovered that I hated the sight of them when they weren't for me or safely for a game. These weren't the tears for me to lick. These were tears I rubbed away with the pads of my thumb and I hated them all the more because it felt like such a waste when her tears were gems more precious than my diamonds and tasted like decadence.\n\nWhen I had her back in my apartment, I settled her into my loveseat, rubbing her shoulders while I did what any sane person would do and called the police for possibly the first time in my life. It was an interesting affair when they showed up because my attention was mostly on Two. I managed to pep talk her a little bit before they got there so that she was coherent. I introduced myself at the door while she stayed in the background of the apartment, as if she were hiding behind me. But when the two officers approached her, she had her voice under control and answered quietly. They noted the marks around her throat and she told what we had worked out together about who it was. I didn't touch her during these recantations because if I did I would end up stroking her hair soothingly or touching the back of her collar in a silent encouragement to be brave. And these were the kinds of things I liked to keep private. They were my things with Tuesday and no one else's.\n\nBut when they left? I let it out then. \"Very good, baby. Now, you heard their recommendations to have a doctor look at those, right? Are you sure you don't want to go to an emergency room? I won't make you, Two, but I don't want a dead friend because you were too goddamned stubborn and fell into shock or some dumbass shit.\"\n\n\"Please, no.\" She whispered it in such a broken little voice that it tugged at my heart. \"I just want to stay here and for you to t-tell me what to do. I don't want anymore decisions and I'm scared and-\"\n\n\"Shh.\" I stroked her hair. \"Hush. Pretty girl.\" She would get herself worked up again and I didn't want that if she refused to let someone check her vitals.\n\nBut I also had an issue with her request. I was absolutely capable of being nurturing for her, but my nurturing came with the dominance and my dominance came with sexual desires and that came with my harsh roughness. I could certainly refrain from cruelty but the harsh part? The part that was so strict and stern it was terrifying even when I tried to pull back on my sadism for submissives who couldn't take as much pain? That would bark out in my voice and I couldn't keep it entirely in check.\n\nSo I made an effort to compromise. We both needed to reassure ourselves of her safety after that. \"How would a nice bath sound with some hot chocolate?\"\n\nBut her eyes were still distressed when she looked at me. \"I... that sounds good, I think.\"\n\nGod, I hated the events that would take my brazen fae and turn her into this scared little girl. She looked so lost and unsure of everything and I could understand that. I remembered that look on her face. First the fear and pleasure that was so quickly replaced with nothing but the fear. \"Come on, Two. Let's keep you calm and clean up your neck.\"\n\nI went through the motions, starting her water and getting a few things from the medicine cabinet. Things like antibiotic cream and gauze to cover her through the night. She hadn't cut herself very deep at all but it was in a visible place and I wanted to make sure that it would heal well so it wouldn't come back to haunt her.\n\nWhen I turned back around Tuesday still stood where I'd left her, watching me. \"Come on, baby. Strip. Now.\" I snapped my fingertips before I could even think about it, flinching even while she inhaled sharply and instantly scurried to obey, pulling off her shirt first. I'd had to let her wear bras every now and again with the good sense that support was a good thing but they were always of my choosing and underwear? She rarely wore that unless I was in the mood to have her message me with pictures of all the cum that collected in her thong.\n\nNormally I would remind her of that, circle around her and massage that pretty pussy, asking her why she was bare for me. And she'd say, \"Because I'm to always be available for you, master.\"\n\nNo. Bad. That was the sexual inserts in my day to day dominance. Not the kind we're going for right now, jackass. Take a bath, Tuesday, and take as long as you need.\" I needed to give her space or I'd start doing that shit automatically.\n\n\"Don't leave me,\" she whispered.\n\nAh, hell. Of course I couldn't give her space. \"I won't.\"\n\nStill she stared at me, not looking at the bath. I waited for her to obey me, and yes I'm fucking capable of patience especially when I'm in love and she's traumatized. And sure enough she finally voiced a little of her pain. \"I got turned on.\" Tears filled her eyes. \"Even when I knew it wasn't you, it still didn't go away.\"\n\n\"And I got hard off seeing you struggle, baby. But I still felt rage and I still wasn't okay with it. Your body reacts to fear, Tuesday. That's not something you can control and it's not a psyche problem. It's who you are.\"\n\nShe still stared at me for a little while but then she nodded. \"I... I could see that. You can't even control it?\" She asked it with a shy grin and I smiled.\n\n\"Fuck no. Come on, Tuesday, before the water gets cold.\" Somehow, hearing that from me seemed to do a little bit of the trick and I was abruptly very glad that I was the first person Tuesday went to. There were a lot of other people who wouldn't see it that way and a lot of other jackasses who would throw her under the bus for the games we played.\n\nShe settled down into the bath water, her expression still a little shellshocked but more alive and aware and she'd given me that grin. I didn't touch her, just sat beside her and thought about how strange the events had been. Had I somehow inspired or had something to do with this? The coincidence of my games with Tuesday and this event seemed too great. And then there was the fact that movies were complete bullshit when it came to dramatic events. They were both not as dramatic as they were portrayed while being more dramatic in a different way. For instance there hadn't been any screaming or sobbing, no breakdown during police questioning on Tuesday's part. As for the police interrogations, they had been procedural, pre-written instructions that worked.\n\nBut then there were the subtle things that were more dramatic, like that wary look in Tuesday's eyes when she glanced at the bathroom door. Like the way she touched her neck when she saw her reflection in the water, knowing the marks were there, and the way she sat still so stunned in the water. I sighed when my attention turned to her. She was swirling her fingers in the bath absently, but not entirely present and not washing off. I hadn't wanted to exert even this kind of control but my hands were reaching for her before the thought even finished in my mind. \"Come here, pretty sub.\"\n\nShe obeyed so naturally and readily, leaning forward and lifting her legs for me to bathe. When I reached her hair, I spoke with a little more command, too much of it. \"Head back, Two, and don't move.\" It was as natural to me as obeying was for her now.\n\nBut still I flinched from commands and tried. So hard, I tried. But then I went to bed with her. Whenever we got ready for bed before now I would give her some demeaning order, something like telling her to bend over the foot of the bed with her legs spread. But I wouldn't fuck her that way. I would merely stand behind her, touch her little pussy every now and again to see how wet she was, comment on it, and then I would ask her why I made her bend over if not to fuck. And she would be so aroused by then, just by the actions and questions and she would say, \"For your viewing pleasure and my availability, master.\"\n\n\"Good girl. You bend over like a little slut because you are my little slut.\"\n\nThat night, I did none of that and I got her silken pajamas that she never wore anymore. For a moment she blinked but then dressed and curled into the bed. I thought the crash of adrenaline would be more than enough to make her sleep. It wasn't.\n\nShe woke first with a soft cry until I wrapped one arm around her and caressed a few lingering marks from a previous session with the other. But then she woke again, tossing beside me, and I hesitated, but then tried my hand curled around her throat. And that worked for a while too, like a charm, enough that she stopped shivering and went still. But again it didn't last. She shook all over beside me the next time and I sighed. Because I had a feeling I knew what would work. \"Be right back.\"\n\nI got her cuffs and another matching set and some rope. I worked quickly when I went back to her, cuffing her wrists first and loosely tethering them together and to her collar's O-ring. There was carefully not a lot of stricture but enough that she would feel the tug when she tossed. I did her ankles the same way while she stared up at me. \"I'm sorry,\" she whispered.\n\nFor her answer, I kissed her forehead and curled beside her again. \"Don't be.\"\n\nAnd after that, she didn't shift at all.\n\n\u2014\u2014\u2014\u2014\n\nNo matter my intentions, the only thing that soothed her random little shocks of terror was dominance. When she was scared to leave for her store, I commanded her on what to wear and the route she was to take, telling her to call me when she got there. And, like an angel, she nodded and said, \"Yes, master\" and obeyed gladly. A few days afterwards she did something she'd never done before.\n\nShe tested me. I had taken to giving her small commands when she left to make her feel safe and we had silently fallen into the routine of her staying at my penthouse. And through anything she was to call me if something held her up or if anything at all happened. And then one night she was thirty minutes late.\n\nIt was just thirty minutes, but the problem was it was exactly thirty minutes. So I knew exactly why she was doing it. Beyond that, there was fear and anticipation in her eyes as soon as she walked in the door. She looked right at me as if in expectation and stood dead still while I smiled thoughtfully, setting my scotch aside and studying her. I hadn't touched her since it'd happened, hadn't had sex because I thought it was too soon. But that, too, posed a problem. Our sex life had exploded together and I had taken to indulging in her and her pain so much that three times in a night was a lazy movie date night. Now that had come to an abrupt halt and she was getting more and more restless.\n\n\"My, little Tuesday. This is the first time you've ever put me to trial, by my count. Which leads me into a predicament. I could either be a bad master or a bad boyfriend at the moment, since adding strain is not, theoretically, a very good way to help you right now.\"\n\nShe swallowed and shivered, but then stayed silent, staring at me as if waiting. I studied that look for a long while, noting that it was both wary and held a smallest bit of defiance. Not so much insolent defiance. No, this was more like the defiance of someone craving a little structure. And that was what made me decide. \"Come here, little Tuesday.\"\n\nShe obeyed. \"Yes, master.\"\n\nI stood up from my chair and gestured to it while taking my belt off with my other hand. \"That look in your eyes says that's enough of a break for the both of us. I miss our playful nights together. Take your jeans off and bend over with your hands in the seat.\" Again she obeyed quietly, but now there was a serenity in her eyes that made me satisfied to see. \"Why am I doing this, Tuesday?\"\n\nShe practically sighed the answer in the way a submissive would push her boundaries and then be reassured when they were, in fact, sturdy. \"Because I didn't follow your safety rules, master, when I trust you to keep me safe.\"\n\nMy God, it was like a transformation before I even did it. Her entire stature was relaxed and waiting and pure happiness seemed part of her even though she had to know my punishments would be rough when everything about me was rough. \"Count,\" I commanded. \"I want it nice and polite, little slave.\"\n\nShe counted obediently and I gave her a nice, strict belting followed by time in the chastity belt with nothing in the anal toy attachment. I left that open instead so I could fuck her there while she suffered, and then left her in chastity while tying her down to a chair for dinner, feeding her to make her hotter.\n\nAfter all that, even though it was punishment and because we both needed it, I took the belt off and fucked her pussy until she came. Three times.\n\nThat event turned out to be a stupid one, a freak bullshit incident, but the effects would reverberate in both of our lives. For instance, we didn't talk about the fact that she lived with me after that. She just did for both of our peace of mind. And the police did eventually get back in touch with us. The man had been caught and there was a story and that story did suggest that I had a slight influence on what had happened.",
        "The guy had a mental disorder was the short answer, and had gone off his medication. It was part of the reason why he was so reclusive and why he got along with Tuesday alright. Not well, but alright. The mental disorder wasn't disclosed but it sounded awful close to what I knew of schizophrenia. Tuesday was sweet and patient and talked to shy people every day, so naturally he had been okay to talk to her.\n\nBut then he'd seen us together - and some of this was pure speculation on my part - but it seemed likely that he had seen me accost her outside her work a few times when I was being frisky and wanted to jump scare her. I would grab her from behind and have her in a choke hold while we grappled playfully. So the guy hadn't been bad at all. My personal theory was that, in much the same way of a disconnected child, he had been merely copycatting, thinking that it was a forgivable action. As for why he had gone \u202aafter Tuesday\u202c? No one really knew that, but he was getting the help he needed and Tuesday was safe again.\n\nWe still didn't separate our lives from where we had become so intertwined. We started playing again and I felt myself come back into my old happy, almost sociopathic, playful version. I would visit her at work all the time when I got done with my day, especially when she held tournaments or dungeon campaigns. There was a fun joy in those nights and I loved watching Tuesday work. She joked with her workers and had a biting sense of humor, but it was so funny and charming that no one cared when it was sometimes assertive. Like when Tate was having a rough week and had evidently made a couple of mistakes that had cost Tuesday some time to fix and then messed up a ring on the tournament night? Tuesday had rolled her eyes at him with a fae grin. \"Dear God, Tate, do me a favor and just don't touch anything expensive in the store. I feel like it'd just break by some naturally assumed collateral damage at this point. And I'll just clear my schedule for, like, two weeks just in case.\"\n\nTo which he had put his face in shaking hands with shame, but he was still laughing and he made it through the night with Tuesday's encouragement.\n\nShe was more than anyone deserved and there was also a bit of a bitch resting in her heart. She both naturally encouraged due to her submission and still had room for disdain for things like puppies. It amazed me how much she hated dogs. Seriously, who hated dogs? It wasn't even fear, I learned. She just couldn't stand how needy and clingy they were, according to her explanation. Not that it mattered since I didn't have time for a dog, or the inclination to get one. It just made me laugh.\n\nThings went back to normal in a way, even while some things would never be the same. My life, for instance, would certainly never be the same. With Tuesday living with me I learned that I was irrevocably in love with her and that I was going to marry her. One day I would. I didn't know how the proposal would go, didn't have a date, didn't even have any plans at all on how to breach that subject. I knew it would require care and also knew that convincing her might be the most difficult thing I'd ever bloody well done, but I was determined.\n\nFirst, I had to get her to admit that she loved me. And that was the pivotal point in everything really. That one thought. I gave her chance after chance and enough time for her heart to ever desire. She made me cookies and her eyes would shine with my pleasure. She would get me small gifts with a shy grin, would ask me how I liked her outfits. One morning she woke up before me and waited until I got out of my shower. For a minute I didn't know what to think because her job was a later start than mine so there was no reason for her to be up. \"Good \u202amorning, Tuesday\u202c. To what do I owe this pleasure?\"\n\nShe grinned when I asked. \"Oh, nothing. Just serving you your coffee.\"\n\nAnd she did have it. And that's when I realized she had her hair in those French braided pigtails and was wearing that Osgood jersey... with nothing else. I laughed so hard because it made me that happy. And I gave her a kiss that ended with my hand around her throat while I bit her neck. \"Do it again tomorrow,\" I said in a horny growl.\n\nBut there came one night where I finally tired of giving her chances and decided enough was enough. Tuesday got home, having warned me that she would be late, and she was carrying a box when she walked in the door.\n\n\"Now, what's this then?\" I said it teasingly, knowing all the best ways to get a smile from her when she got me a surprise.\n\nShe did grin and she blushed furiously. \"A present. For you, Flatline.\"\n\nFlatline. I was suddenly jarred by the name and realized that she hadn't heard me say my name to the cops that night. Somehow, someway, she still didn't know what it was. How? I hadn't told her yet? I thought through and realized that no, I hadn't. And she had never once asked, never once broken that rule I'd given her. \"A present for me.\" I laughed, but I was having, dear God, feelings. And a lot of them. She still didn't even know my name and hadn't even placed a damn bit of value on it, instead going beyond all that pretense and bullshit to love the man beneath it. And the monster too.\n\nI opened it while she stood back and watched, lifting the lid. And I stared down and blinked.\n\nOne night we had played a drinking game together and I had confessed that my favorite silly game to play for hours was Spyro. Don't judge me. There's something damn well addictive about hearing the sound of gems collecting in that game. And Tuesday hadn't forgotten that I said it. She had learned how to cross stitch and completed a massive poster work with the first three Spyro game covers all connected. And she had done this, somehow, without me seeing it when we fucking lived together. Jesus, it was huge and it must have taken her so much time to create it.\n\n\"What do you think, Flatline?\" She was bouncing on her toes anxiously, but already smiling because she knew I would love it more than anything. \"I had to choose something that had the colors predesignated for me, but it turned out really well and-\"\n\nI shut her up with a kiss, one of my deep ones, forceful but with all the feelings I had for her in it. I had rarely ever kissed before her and now wondered why the hell that was. They were delicious things, intense and heated. \"My name is Ivory,\" I said when I finally pulled away from her. \"And I think that's been enough time for you to come clean about how you feel for me. Since you won't say the words, I will, and you'll find my language is rather interesting, baby.\"\n\nShe stared at me, still grinning, but then my words seemed to start to sink in. First my name and then the rest of it. And she knew me so well that the implicit threat was well received and well feared. She swallowed and backed away from me while I watched her and bared my teeth in predatory amusement. \"Wait, but I... what do you...\"\n\n\"Where are you going, little Tuesday? Haven't you been waiting for me to show you one specific room for a while now? Hasn't there been only one room that has stayed locked to you, the most important room? Isn't it the same room that goes with the feeling in your heart, the one that you're too much of a coward to vocalize?\"\n\nMy voice was the key indication that I was going to do something excessively terrible, at least for her. She turned and ran for the door but I barked out laughing and caught her before she could make it. Just like old times she struggled frantically, terrified in my arms, while I was calm and amused. \"No, no, little Tuesday. It's time to see your pretty new home. Did you know that I've been touching it up here and there to make sure it's ready for you? Hush, my love. I can give you enough pain to erase that fear so you can tell me the words you wish to. Time to take a nap, Tuesday.\" I held her in a stranglehold while she tried and failed to speak, my arms cutting off the oxygen and blood supply while she scrabbled at my hands and I made gentle shushing sounds.\n\nWhen she went still I worked quickly. She wouldn't be out for so very long and it was going to be a fun night now. A very fucking dark night, too.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nI tried to shout awake only to find that I couldn't and that made me panic all the harder. He had both placed a mask over my eyes and placed me in the cock gag that made me the most afraid. I had learned the cruel purpose of that gag and that was to block as much sound as possible and turn me into nothing but his vessel.\n\nI heard his humming behind me and made to move my arms, only to discover he was tethering them behind me in an uncomfortable, yet loose, reverse prayer position. They felt encased in something like a single glove, or wrapped in leather, and my slim day collar was replaced by something much taller and restrictive.\n\nHe chuckled at my movements, but didn't say anything. Nothing at all. He just kept working and the more he added, the more afraid I got. When he was done with the gloves and my arms were encased, the spreader bar was next and he adjusted it to its widest setting while I whimpered through my nose a little. The spreader was torture after enough time. But I couldn't think of that for very long because I felt his anal hook pressed into my asshole and then felt it threaded up my collar and that toy was recognizable because he loved the hook, loved to control me with it and watch my pain when I didn't move quickly enough. But this time whatever he used to tie the hook was also tied up the gloves behind my back. He made me stand and then it got even worse with the pull and I was forced up, presumably connected to a ceiling attachment.\n\nThere was the tickle of a permanent marker writing on my tits and then nothing for a little bit while I danced on my toes and tried to alleviate some of the pull from the hook. But I forgot about all of that too when he came back and I felt the board lifted to the bottom of my breasts.\n\nI screamed, actually screamed behind the gag, panic rising in me. I hadn't felt this yet but he had already mentioned it before and it scared the hell out of me. The sounds were laughable behind the gag and I don't know how he kept the board held up beneath my breasts and didn't care. I felt the tip of something sharp in a thin strip of flesh of the right breast and tried to shake my head, only to scream again when the motion tugged on my anal hook.\n\nBut he didn't have any mercy. He started nailing, using a hammer that was viciously loud, and I screamed again, the pain exactly how I would have imagined. It seemed to last an eternity, especially when every struggling movement twisted the already tight anal hook. And that was just one nail to the board. He did the second one while I tried to focus and stay still, sweating from the effort. There were four nails barbarically placed through each breast, which wasn't a lot, but it might as well have been fifty. I shook all over by the time he was done, my throat raw from the most dissatisfying screams. The soreness wasn't even worth it with how muffled my shrieks were. And he didn't stop there. The board I was nailed to was pulled up until I shrieked again, and stood on tiptoes desperately with the spreader bar.\n\nAnd after all of that he finally spoke, his hand stroking through my hair around the gear straps. His voice was low and ominous and menacing, more terrifying than ever. \"Welcome home, little Tuesday.\"\n\nI heard a door open and close and sobbed more tears behind my already soaked mask, completely helpless. His leaving was probably the worst part of it. I wasn't even wearing any toys and he hadn't even sexually touched me except to fill me with the hook. I struggled to keep my position on tiptoes and when I failed, torture shot through my breasts, which felt like they'd never be the same. He had done it. He had actually nailed them. Had I been silly enough to think he would ever joke about anything like that? Or that he might change his mind when I knew he got worse and worse with the more feelings he developed?\n\nHe left me there with that gag because I wasn't even his sex slave at that moment. I was what he called a pain slut and my only job was to suffer for his amusement. The fact that he hadn't said a word beyond those last four made me cry even harder. He hadn't given a command, hadn't asked me to do anything, had only forced me into this torturous position. Because there was nothing he wanted me to do.\n\nExcept suffer.\n\nMaybe it wouldn't amuse him to make me suffer for very long? He always loved my sex. Maybe he would want that instead. His words had been romantic and maybe he wanted me to break and tell him I loved him and that would be it.\n\nMaybe?\n\nMinutes passed. I think it was minutes. It felt like hours where I lifted painfully on my toes and cried and did nothing else while he didn't even watch me.\n\nI jumped in a mix of hope and terror when the door opened again. But it fast just turned to terror when he didn't speak again. He lowered the board my tits were nailed to but didn't remove the nails and I shook at the weight hanging from my breasts.\n\nAnd then I heard the whip and choked, shaking more. He was evil, more evil than any other game, like this. It was the whip from his videos, or one like it, and I knew that when he abruptly cracked it by my ear, not hitting me, but scaring me. It worked and I screamed behind the gag again, forgetting to not move and snorting when the hook caught me. The next stripe actually did strike me and I jumped again, swallowing frantically as best I could around the gag.\n\nI learned something. The cane was generally the more painful implement, but nothing followed the rules with Flatline - Ivory, I amended to myself - and he made the whip somehow even worse than the cane. I don't know how, but he utilized it to full effect with every lash, the hiss and crack turning into nightmarish sounds. He made every strike even, too, so that the tail snapped across my back in something like a roll of pain with every little bit of fire being on a narrow strip like the cane.\n\nSomething else? It was terrible, but it was also like a song across my back and thighs. Every now and again I would feel a soft tickle of blood and he moved in a rhythm that was almost lulling. I quit counting at ten and he kept going and behind the mask my world felt strangely surreal, as if I were just this side of unconscious. And perhaps I was. I kept seeing that first video of his dungeon replay in my head, where he'd cracked the whip against the post and I had been so horny for it. This was every bit the next level I could have ever hoped for, too, so terrible that I was drowning in pain.\n\nI was quiet near the end of it, though, and he rehung the board on my tits so that I was forced to wait in more pain again. Okay. The whip. He had shown me his whip and it was a horrible thing that I already wanted again, but not at the moment. And maybe that was what he'd wanted to show me? Maybe that was his way of breaking me into saying I loved him and if I just did it he would let me down from this hell? My breasts throbbed and I felt like I was hanging from them and the hook in my asshole alone by now, but it was hard to stay standing on my toes for so long. It hurt so bad.\n\nBut... as my whip lashes throbbed I considered how beautiful he was when I couldn't even see him. Just from the feel of him dancing with that whip, he was beautiful.\n\n\u2014\u2014\u2014\u2014\n\nWhen the door opened again I squealed at the sound, trying to turn to him, tossing to get his attention. How long had he left me again? I felt as if I were dying by then. Each second was more than I could bear and I needed to beg. I'd give anything just for the gag to be removed so he could hear my voice and maybe understand that I couldn't take anymore. He chuckled at the sight of me and I must have been a mess. But I didn't care because he undid the straps of the gag and it was the only hope I had now.\n\n\"Please!\" I screamed it, howled it. \"Please tell me what to do! Please, I don't know what you want!\"\n\nBut then he laughed at those words and I sobbed out miserably because my hopes were dashed to fucking pieces at the sound of that laugh. Every one of them evaporated, vaporized like so many useless delusions. \"What I want? Whatever do you mean, Tuesday?\"\n\nHis voice was so pleasant, goddamn him, and I remembered how much I hated his laugh all over again, that laugh he so casually gave while my world was agony at his whim. \"How do I p-please you, master? P-please tell me what to do.\"\n\n\"Oh, but I thought you understood. You are doing it, Tuesday. I don't want you to do anything, exactly. I just want to see my pain slut tortured some more. That was your last chance to talk. Open your mouth back for the gag.\"\n\n\"No! No, please!\" I squealed it, panicked and shaking and dying a little.\n\nFor an answer, he slapped me and I broke down into sobs. But when he spoke, it made me cry all the harder because it was absolute menace. \"Open your fucking mouth or I'll sew your cunt closed too, and you'll stand here for another hour.\"\n\nI screamed but it was a different scream than my others. This one was a wildfire scream from... something. I say that because I don't even know exactly what it was. My body was in agony and it was far too much for me to physically orgasm to. And yet my mind shot so high into mental arousal that it was something like an orgasm. Maybe it even was a fucking orgasm. I don't know but it was more intense than anything I'd ever had, even the night he'd raped me, and it was from pure masochism and the humiliation of being brought this low.\n\nHe was laughing when I came back into any kind of coherent thought, and the gag was locked back in place. \"Well, I was going to save it for punishment but that was such a strong reaction. I can't resist that when it just begs for me to follow through my threat, can I?\"\n\nI shivered once, but didn't make another sound. I didn't deserve to make another sound because he had heard that hidden, terrible desire as much as I had felt it. There was no hiding whatever had happened to me at his threat, at how my body craved him to do what he said.\n\nOnly small, hopeless whimpers escaped me when I felt his hands, clad in talc gloves, at my sex and felt the needle pierce me to start his stitch work. I shuddered with each pull and my face flamed when I heard him laugh. \"Such a messy fucking cunt for being tortured.\" But still, I didn't make a sound. I was broken, his agony having done what he liked it to do, having taken me to that place he spoke of where there was only darkness. We had never been to this level of dark before, though, had never been so deep in it that I felt like I would never see the light again, that there was truly no hope for escape and he would hold me imprisoned this way forever.\n\nMy body shuddered violently again midway through, though this time I no longer screamed. He still noticed and had to clean me again before he could continue. \"I know you're a little maso whore, but try to control yourself.\"\n\nHis words made me cry and he laughed at it in his amusement.\n\nEach stitch took me both deeper and higher. I was floating, flying, my tortured tits only amplifying the effects. By the time I heard him pull his gloves off and the door opened and closed again, I was floating like an ethereal ghost of a creature, ready for more. My body felt opened to his pain in the same way he forced it to open to his cock. I felt empty, completely dead and cold, but it wasn't bad. It was an amazing kind of peace where he was my cruel god and master and my existence was simple.\n\n\"I don't want you to do anything,\" he had said. No, because I had one task and it wasn't something I had to work at or do anything for. That was to suffer. I let the pain swallow me, giving up any hope because he had seen my reaction and it had pleased him and now he would use it against me.",
        "\u2014\u2014\u2014\u2014\n\nI didn't even react when I heard the cane tap beside me after the door opened again. I just waited for it to coat my whip marks or stripe the insides of my thighs under my stitched pussy. But the cane didn't fall. There was just more small laughter and the blindfold was removed instead. I blinked, taking in the dungeon that I had only seen in videos and my first real sight of it was with the eyes of hopelessness he had given me. \"Welcome home,\" he had said. I wondered where he would take me next when he tired of this. The rack, perhaps, where he could make me stand and hold the bars with weights hanging from my tits? The throne of a chair where he'd drive me insane with edging? Maybe he would take orgasms away entirely and I would be left only to whatever bliss I had found in his torture. Or maybe he would tie me to the padded bed and make me serve him sexually, with his cruel electro toys that he sometimes used, upping their intensity while making me blow him. When I wasn't quick enough in pleasuring him, I suffered so much wild pain.\n\nFinally, when I considered all of this, my gaze fell on him where he stood to the side of me, his face smiling in intense satisfaction. My screams had obviously been his delight and whatever look he saw in my eyes gave him incredible pleasure. Somehow, in this state, he was more beautiful than I'd ever seen him. My sadist god. I didn't know what had started the thought of him like that but he was almost too much for me to look on in the moment. My gaze lowered, but he lifted the cane he held and tapped it against my cheek. \"No. Look at me. I want to see your eyes some more.\" When I obeyed, he purred and abruptly licked the side of my cheek obscenely, turning his face to whisper. \"Such delicious fucking tears. My God, that look. Smile for the camera.\"\n\nHe stood back and I couldn't smile around the cock gag even if I wanted to. But he did indeed have his phone and he took the pictures. He went to my pussy as well, stitched as it was, and I spasmed at the thought of it again, which made him laugh. I felt his fingertips stroke me and he paused while he was trying to get a certain picture image. When he had it to his liking it was obvious. \"Would you like to see how much of a filthy little fucktoy you are, how goddamn foul you are?\"\n\nHe lifted his phone to show me the picture, watching my reaction.\n\nMy eyes went wide and I moaned around the cock gag. Fucking hell. Holy God fucking hell. He laughed at the look of horror I must have had that instantly became the hottest arousal I had ever known. Because he had gotten a picture of his fingertips, held slightly away from my pussy, with cum stranded all over them and dripping from me. The black stitches were covered in my cream.\n\nI snorted and tossed my head and Flatline's eyes went fucking satanic with his heat. \"There it fucking is,\" he growled.\n\nHe cut through the rope above me that held my anal hook through my gloves and collar and pulled it out of me. I snorted in shock and a lot of fear, dancing on my toes because I didn't know what this switch of his mood meant.\n\nI learned when he disappeared behind me for a moment and then came back and I realized he had been lubricating himself. He thrust into my asshole, as brutal as brutal could be, and I screamed around my gag, in both misery and ecstasy. He snarled behind me and thrust again, his sounds so fucking feral it made me feel even hornier. And he didn't stop there.\n\nHe grabbed the rope that held the board and cut it as well, pulling the rope tails to hear me squeal. He fucked me like he hated me, with more intensity than ever, and his cock was so damn hard with the pure lust ride he got from torturing me so hard. Without the ropes holding me, my body threatened to collapse but Flatline wasn't having that shit. He held me by the gloves that still bound my hands behind me, jerking them like reins and pulling me back to fuck me even harder.\n\nI squealed behind my gag and thrashed with desperation, my whole body alive and so hot that it was a transforming moment to tie my trust to him all the tighter. The memory of those strange mental orgasms screamed through my head and there was so much pain still and he had me bent forward with the spreader bar holding me wide, my body nothing but nerve endings that he commanded.\n\nI threw back my head with the force of the orgasm that ripped through me, shrieks of shock and bliss and humiliation and all the best things. This was the most intense he had ever taken me and he punished me on his cock as violently as he ever had, turning me inside out.\n\nAnd then my world went black while he was still using my only free hole like his toy and I floated in heaven.\n\n\u2014\u2014\u2014\u2014\n\nI moaned, turned over, and then moaned again. All of me felt so sore, so used, so... replete. I grinned into the big fluffy comforter that was my favorite, nuzzling it, and grinned wider when a whip mark on my back throbbed. A hand stroked my hair and my eyes snapped open.\n\nHe was staring at me with a smile that made me feel whole and treasured. Deep satisfaction filled me at that smile, a terrifying kind of it. And I remembered nights of restlessness, when I'd been panicked, where he tied me in his bondage and settled me. And I knew now that it wasn't because of the bondage and never had been, but it had always been because of him.\n\n\"How dare you,\" I said softly while he laid beside me and watched.\n\nHe lifted an eyebrow, lips rising, and stroked his fingers down my cheek. \"How dare I what, mouthy little slave?\"\n\nI stretched and moaned and flinched at the pain. The wounds of his nails and stitches brushed lightly against the blanket and it felt like sandpaper, no matter how soft it was. \"How dare you let me wake up all free and not in hopeless hell anymore.\"\n\nIvory laughed and it was musical to my ears because I was in love with him. I was so in love with this dark god of pain that it hurt my chest. \"That is truly terrible of me, isn't it?\"\n\nI giggled and nodded. \"Without any bondage at all and everything. I'm filing a management complaint.\"\n\n\"I'll have to send it to the owner.\" He winked and I wanted to curl closer to him but didn't dare move from where he'd put me.\n\nSo instead, I said those words. Those little words that were so damn terrifying. \"I love you.\"\n\n\"Too,\" he said softly.\n\n\"Huh?\" I tilted my head, as if he said my name.\n\nHe smiled. \"Your phrase now is 'I love you, too'.\" I tilted my head curiously and he rolled over, getting his phone. He opened a picture up and showed it to me.\n\nOn my tits, in marker and before he'd nailed me to the board, were the words \"I love you\".\n\nI launched myself to his arms, fear or no fear, and he growled with delight at my response, turning onto his back so I was straddling him. I was wet, so wet and ready for him still, that he filled me easily now. And I got to do something else for the first time. When he filled me so full and the world turned to bliss, I cried out his name. \"Ivory!\"\n\nHe thrust up inside of me, the kind of hard thrust that hit me with painful delight while my pussy still felt tender from where he'd sewn me. \"Yes, my love?\"\n\nHis smile was wicked when he went still while I stared down at him, wide eyed and frantic for more of that exact kind of movement. \"Please, Ivory, please.\"\n\nHe obliged, thrusting again, and I squealed. \"Yes, baby?\"\n\n\"Ivory, master, Ivory, Ivory, please, please, master!\" I cried the words in a list and he laughed, lifting me in that punishment rhythm I loved so much. \"Oh my God, oh my God, I'm so sore, it's so good...\"\n\nHe purred beneath me and held me down to grind into me while I shook with orgasm. \"It's such a good thing for you to be nice and hurting, isn't it baby?\"\n\n\"Oh, yes, master. I love how you hurt me.\"\n\n\"Oh, I noticed. I should have left that pussy sewn shut and used your asshole instead to remind you what a little pain slut you are.\" He laughed when I squealed, milking him with the pleasure his words gave me. All I could think of were those strange paingasms and how much more intense they were than orgasms, how much I wanted more of them and didn't want more of them at the same time. \"Christ, Tuesday. I love you.\"\n\n\"I love you, too.\" I smiled, breathless, flushed with pleasure and the words came easy when I was in that state, though when I came down it seemed mortifying how cheesy he had fucking turned me. Seriously? I not only met his eyes while we fucked but also confessed to love while looking in them? What kind of sappy ass movie shit was that?\n\n\u2014\u2014\u2014\u2014\n\nAfter he crossed the \"I love you\" line with me, he started to have romantic moods every now and again. I learned to dread them.\n\nOn the first occasion, he sent me a bouquet of roses that were carved out of wood because he had discovered than I didn't like real flowers or balloons. I cried like a child when they wilted or went down, which he had learned with the rose from his collaring me. At first I was delighted, clasping a hand to my mouth when they were delivered to my work midday. And then I was wary because I didn't know this mood of his.\n\nHe was already home waiting for me when I arrived and he wasn't drinking scotch which usually meant he wanted a rough session in the dungeon and intended to get drunk on me instead. \"Hello, my pretty love. Did you have a good day?\"\n\nI grinned, still wary, but nonetheless in love with my flowers. \"It was amazing. But I'm sure you already know part of it.\"\n\nHe chuckled and gestured to the table, where I obediently placed the beautiful fake flowers in the center. \"It was the least I could do after my rose, pretty girl. And I've been in a rather romantic mood the past couple of days.\"\n\nI blinked and trembled because he was clipping my leash to my collar and grabbing a pair of scissors from the drawers. He casually cut through the pretty shirt he had gotten me, this one a graphic tee, while I watched and waited. \"I thought I would enjoy this one on you, but there's no red in it, pretty little fae.\" He had me take off my skirt while he watched, his eyes appreciatively going to my pussy since he had commanded me to no underwear. \"Why do I have you wear skirts without panties, little slave?\" \n\nI obediently answered, instantly, and my arousal was already climbing. \"To be available for you, master, whenever it pleases you.\"\n\n\"Such a good girl. Come with me, little pet.\" He rattled the leash and I went to his side, hesitantly, but that caused him to frown. \"I see the collar isn't enough tonight. Move faster when I say, Tuesday.\"\n\nI whimpered when he switched the leash clip from my collar to my nose ring and now I definitely jumped at his command, eager to avoid anything pulling on that sensitive ring. The first time I hadn't moved fast enough, he had left me tethered in the dungeon with the leash tied through a hook in the ceiling. I was forced on tiptoe for an hour and, like the night with my tits and the board, I learned quickly the pain of it and jumped when the leash was clipped to it. But he mostly didn't do that anymore so long as I scurried like a mouse to follow him.\n\nThis time he did. He took me to the archway rack, tapping the side while I looked at the whipping post once and shuddered. His smile was odd, something that made me nervous until I figured out which mood he was in.\n\nThis time it didn't take long to figure out his mood. He started with my cuffs, pulling my wrists apart so that they were down at my sides but stretched out. The ankle cuffs were next and he cuffed those as wide as he made the spreader bar. He used the leash attached to my nose ring and tethered it above me in a humiliation hold. I trembled because that humiliation made me sure his romance would be... harsh.\n\nAnd then he approached me with the cock gag and the blindfold harness and I felt tears in my eyes already. He hadn't even started yet but I knew what the cock gag meant. He had burned it into me.\n\n\"Ah, such pretty tears. I haven't even done anything, baby.\" He lifted the gag. \"Is this why you're crying?\"\n\n\"Yes. Yes, master.\" My voice was scared and pathetic.\n\n\"Why cry at the gag, lovely? Is something wrong with it?\"\n\nHe knew there was nothing wrong with it. Our exchange was a lead up to one moment where he would ask a specific question. \"No, sir. Nothing's wrong with it.\"\n\n\"Is it because of what the cock gag means, baby?\" I nodded slightly, the motion pulling on my ring, and waited for the next question which lit me up like a flame with its twisted answer. \"What does the cock gag mean for the night, little Tuesday?\"\n\n\"It means that I'm your p-pain slut.\"\n\n\"Very good, pretty girl. Some nights I prefer my little whore but I'm feeling too romantic tonight. I prefer my sweet pain slut instead. Open for the gag, Tuesday. Behave yourself. You know you don't need to talk for this and you know how I prefer you to make less sound.\" I opened helplessly, my face feeling stretched with the gag and the taut leash in my nose ring. He fit me with the blindfold next. \"All you need to worry about is suffering for me.\"\n\nI trembled all over already, scared because when he said the phrase \"pain slut\" he meant dark experiences like the first night I'd been in his dungeon. This time was no different. He always ceased speaking because he didn't want anything from me and said he had no reason to talk to a little torture toy. He didn't need to when he wanted me to hurt.\n\nThe cane was first this time. Sometimes he liked to torture me all over with it, but this time he evidently decided he wanted to focus on one specifically tender area and that was my thighs. I squealed behind my gag when he started with the insides of my thighs. He flicked his wrists in efficient, brutal stripes, alternating between my each leg. He worked his way down too, going low to my knees where the marks would show when he made me wear shorts and walk in the park with him. He paced around me and eventually made it to the backs of my knees and thighs and here, it was obvious that he could have a much better swing with the cane. I felt the intensity of the stripes that I knew would be bloody. He had trained me with the cane so hard and well that I could tell now when my body would show my blood. I was screaming with every flick, each line like a paint of pure fire. It was as if he had brushed over my flesh with kerosene and then struck a match. And my screams and tears didn't stop him. He kept going until I had that raw feeling in my throat like the first night, that feeling of screaming so much for so little sound to make it through the cock gag.\n\nI sobbed when he stopped, shaking, my head held all the way back because I couldn't find the strength to even stand, let alone stay on my toes. My master decided to help with that. By \"help me\" I mean that he got a standing beam and attached a thick dildo to it. When he had it positioned beneath me, he used a crank pedal to fit it inside me, forcing me still with the toy and that steel beam that was so heavy and sturdy that I couldn't carry it. Impaled and held up, with my ankles still pulled so painfully apart, he tilted my head even further with the leash attached to my nose ring so that everything was stretched and painful and sore. Next, he came back with a leather harness that he fit even over the gag and he spoke for the first time with it, slapping my face. \"You make too much fucking noise even through that cock down your goddamned throat.\"\n\nI whimpered once, through my nose, but then went still like I had that first night, my ass and thighs throbbing with so many stripes. And there would be no sound escaping from that second strip of leather gear covering. It was wide, going up to my nose, and cinched tight.\n\nWhen he placed something sharp at the tip of my breast, I moaned and there was only the smallest escape of any sound at all this time. A nail again? I quivered. No, it was the needles again, not that that was much comfort. Where the nails were through the edge of my breasts, the needles were something he always applied into a nauseating area. He didn't use those like surface play piercings, preferring to lynch them a little deeper in the flesh, and this time he didn't just play with the small amount of four needles he had before. He made something that felt like half circles around my tits that broke into lines down my stomach. And the lines, blessedly, were play piercing style. It was a small mercy when there were so many needles that I lost count and only knew the feeling of sweat breaking over my flesh with the soreness and the pain. I tried to make some sound partially through his working, tried desperately to get through to him that I wasn't sure how much of this I could take.\n\nIn answer, he stopped his pattern and went up to my nipples, making me squeal with the application of needles through those. My desperate sounds were always only ever met with pain and more pain, my body his torture toy. His punishments for my sounds were always long too. This time he didn't stop after he placed three needles through each nipple. He went down to my pussy and I squealed the most silent shouts while he skewered above and below my clit, that swollen bit of flesh around my piercing. And with those I felt something like a cork placed at the ends of the needles so they wouldn't pierce my thighs.\n\nAfter that I lost hope again and he kept going with his pattern, whatever it was, and I didn't even care because if he wasn't satisfied by the end of the needles, it would be the whip or something else. I just cried, suffering. And then I spasmed in that feeling of horrible pleasure, pure humiliation from how I enjoyed what he did to me. \"Filthy little fuck.\" He growled it and his voice was right by my ear. \"Maso fucktoy.\" He licked up my face in the obscene way he had and kissed my lips over all the leather keeping me quiet. \"Smile for the camera.\" It was a laughable command. I was in agony and my lips weren't even visible. He laughed at his own sick joke too while I spasmed again on the shaft impaling me, my body betraying me with the amount of mental pleasure this gave me.\n\n\"Don't cum.\" He snarled it in my ear when he finally surged into my ass. \"Don't cum from me fucking you. This is for me, understood? You got your pleasure from the pain like you should but a fucking, even in your little asshole? No, that's too good for a degraded little masochistic whore like you.\"\n\nI obeyed, easily holding back orgasm after those spasms had rocked me. There was something about them that made them so intense even orgasms paled in comparison. He used my body like his toy. And then he left me there to sit on my cock, held in painful bondage while my whole body throbbed and I couldn't do anything to rub it away.\n\nI waited... and waited. But he didn't come back. My body started to burn with the stretch of his horrible bondage and I shifted on the toy, hurting. And it was only getting more intense. Once more I spasmed in one of those tormented mental orgasms, milking the toy. Finally I heard him again and he pulled off the leather harness cover for my gag. I felt him remove the hollow inside of it, pulling my head even farther back my hair.\n\nAnd then something was poured down my throat and I moaned because I recognized the taste for what it was. How many times had I been in my bathroom and drank my piss because it made me so goddamned hot? But it was nothing, fucking nothing so good as being degraded by Ivory while he poured his own piss down my throat. My body went off like a firecracker to this fantasy, so that I was shaking and trying to swallow through my chokes of pleasure. I got it down, swallowing the massive amount he fed me.\n\nAnd then I passed out, body still pulsating around the wide toy that had become the center of my world.\n\nWhen I woke back up, I was chained to his bed spread eagle and when I turned my head to the side, he had taped a picture of me up, one of the ones he had taken after what he'd done. Because he had made a heart with over a hundred needles. \"Romantic, isn't it, little slave?\"",
        "I turned to see him in the doorway of our bathroom. \"Yes, master,\" I whispered. Because it was. \"I love you, master.\" Because I did.\n\nHe crawled over top of me for an answer and was inside me in a second, riding me hard and slow while the sheets chafed across the soreness in my ass.\n\n\u2014\u2014\u2014\u2014\n\nThere was also another proclivity he had. He, of course, knew when my period started or was about to start. For a while he left me alone on these days, except to make me hot cocoa or something comforting. Mine weren't bad or anything but they made me sore and he studied me during this like he studied my reactions to everything. And then one day my soreness started the night before I would start, like it always did, and he was waiting for me when I got home, his eyes excited in a way that made me shiver. That gaze aroused me even though my pussy felt sore and raw at the moment and my body was weak all over. The night before was always the worst for me and he knew as much.\n\nHe circled around me right inside his door, kissing my temple. \"Do you know there's something I've never gotten to take advantage of and indulge in? You see, I had most of my forays in sex clubs and females are there for sex. Needless to say, I haven't gotten to enjoy torturing a submissive while she's already so nice and sensitive from this time. It seems like such a waste when there's so much pain, so much feeling, to be capitalized. But now it occurred to me that I have a little slave whose purpose is to serve me in these ways. And I'm feeling a little romantic actually.\"\n\nI moaned, staring up at him in dread, knowing this was going to be bad. And oh, it was.\n\nHe let me wear boy shorts and a sports bra, telling me that during days like this it was what I would always wear, both red. And his reasoning was ominous. \"First, I value the cleanliness like you. And second, well, I don't think I'll need access to piercing needles through these tits or this cunt in order to have you in satisfying amounts of agony while you're like this.\"\n\nAnd he knew that. He knew that because he had studied me this whole time. I trembled while he tied me to that throne of a chair, using rope to tether me down with my ankles apart and my arms on the slats that served as armrests. More rope wound through the back slats, holding my torso in place with the figure 8 pattern he wound around me. I whimpered up at him when he brought that cock gag, but it wasn't much of a protest. I was too bowed by basic biology. Ivory chuckled and pat my hair. \"There, there, little pain slut. We're just going to experiment a little. Well, I'm going to experiment and you're going to suffer for me.\"\n\nHorribly, he also dispensed with the eye mask, opting to let me see and for him to see me instead. I watched him warily while he smiled in pure sadism and got an entire range of toys, from the crop and the tawse to the short whip and the small dowel he used for a cane occasionally. \"Let's see what reactions we can get from this oh, so very sensitive body.\"\n\nI quivered but then just waited. There was no fight at the moment, just resignation.\n\nHe started with the crop and I jumped in my ropes, whimpering, because he licked it against my lower belly. He worked me over that way and he knew what to do, of course he did. By then he had seen me curl up with a pillow when I slept because it felt nice during that time. He knew where every sensitive part of me was.\n\nAnd he used it. The crop was torment with even just the small licks he gave me. I lowered my gaze, miserable, and unable to even feel the general sexual pleasure I usually got from his sadism. No, this was all pain and discomfort in nothing but the bad ways. Ivory touched the crop to my chin, forcing my gaze back to his. \"Look at me,\" he said softly, in his intense voice. \"I want to see it.\"\n\nI obeyed, staring into his eyes as a way of coping, his wildly green eyes. My face flamed when I felt tears at the corner of my eyes and I didn't know why the hell they were there. He was being more gentle than ever, though that wasn't saying overly much. Even so, I had suffered so much worse at his hands. He smiled wickedly and switched to the tawse. \"Let's see what else we can pull.\" The tawse made me shiver a little. Now that could be true pain, if applied correctly, and Ivory for damn sure knew exactly how to apply it correctly.\n\nHe cracked it on the tops of my legs and I squealed, staring up at him and whining, crying. And his eyes made me feel even more hopeless with the amount of excitement those reactions so obviously gave him. He snapped the tawse down while my nerves screeched with protest at his assault. My head fell back against the chair and I stared up at Ivory. After a few hits, he smiled evilly... and slapped it against my pussy. I screeched instantly, shaking and whimpering and then the tears really fell. They fell even harder when he moved on to the dowel, stroking the cool strip down my legs once before he flicked his wrist and I moaned, my eyes fluttering. And then I felt the horrible mental arousal that came from the fact that this was pure torture. Of course his other nights of agony had been too, but this was somehow even worse since everything already hurt in such a way that I wouldn't be having even one of those mental orgasms. Somehow that knowledge gave me even darker masochistic pleasure than usual. Besides that, there was the pleasure of how effective this was, of being brought so terribly low and having my body turned against me so thoroughly it was almost an art form on his part. The horrible thought of no pleasure or any kind of release at all gave me just enough arousal to edge me for him. \"So much feeling you have, pretty girl. So much to take advantage of. I've always admired your gender for the fact that you are made to feel more in every way. More physical sensation and, yes, more emotion.\"\n\nI stared up at him while my tears fell in those ridiculous, desolate amounts when I didn't even know why. All I knew was that my body had been tired and aching all day and I had dissatisfied a customer which would raise my anxiety on a normal day. And suddenly I knew what he was doing.\n\nOh, it was partially for his deviance, for certain. He was, indeed, cruelly capitalizing on how much my body could hurt at the moment. But, while that kind of game was generally the only reason we played, there was an ulterior logic this time.\n\nHe knew how much I hated being a female, how much it irked me to feel such bullshit emotions that didn't make sense when this time started to occur. He knew also that I shoved those emotions almost angrily aside as best I could and anytime I could. There were things that would normally make me shed tears that I wouldn't break for during this time for fear that it was female bullshit. He had seen it.\n\nAnd he was giving me an excuse that would be acceptable in my own eyes, an excuse to cry all I damn well wanted. I broke beneath him in the best kind of way, tears pouring down my cheeks in a catharsis that was so much relief. It didn't matter if he saw me cry. Or rather it did matter because he loved my tears, wanted to bathe in them sometimes. He chuckled above me and snapped the dowel against my pussy. Then down my thighs. He struck my tender abdomen so that I squealed the loudest and suddenly I was much more animated and alive and... weirdly happy. It might not have made sense but his breaking me down gave me more energy. It was like I had been so cold and dead all day and his pain was a fire to heat me until I vibrated again.\n\nOh, it still hurt like hell. I stared up at him to let him see what he obviously wished to see, which was that every strike, no matter how gentle he made it, was far worse during this time. And he loved it, his smile growing with greater and greater satiation at every little reaction. \"My God, what a waste to not take advantage of this and use you as a pain slut this way. You can't even get off on one of those masochism orgasms you have, can you?\" I shook my head frantically, my eyes wide but I stared into the depths of his and adored him. His gaze darkened and he approached me, his hand curling around my throat. \"Take it,\" he breathed. \"Horny little victim. Look at all this pain and it still arouses you, doesn't it? But you can't have any release at all.\" I'll be damned if I didn't almost reach that point just from his words alone, but my body was just too sore and he was snapping the dowel against my pussy, thighs, and abdomen in sharp, militant snaps. He laughed in my face when he saw that I still couldn't quite reach the point of tortured pleasure, even when my eyes snapped to those strict motions of his wrist and that sight always turned me on. Especially when he was wearing short sleeves like he was now. I moaned around the gag, lifting to the dowel now to try to deal with the tease of pleasure. And I knew that action damned me by the look in his gaze, the sudden excitement that appeared there.\n\nHe leaned over the chair, his left hand holding mine in the chair arm while his right stroked the dowel up my thighs. \"Have I ever told you that what you just did is one of my most favorite fetishes? The way you just lifted to the dowel to try to chase the masochistic pleasure in your mind away since you won't be getting relief? It's my favorite game to deny orgasms for a week or more until my submissive comes to me begging me for the cane with tears in her eyes because the torture is preferable to the maddening edging. Imagine it Tuesday. Imagine all that fiery lust inside you that I can build up with you and imagine how desperately you would bow to me and beg. Imagine coming home when I'm so casually reading or watching something and you're burning alive and the only mercy you have hope for is for me to torture you.\"\n\nOh, I could imagine alright. He had been complete hell when he'd edged me over a three day period, making me hold vibrators to my pussy until I was crying. He hadn't done that lately with my living with him, but I couldn't keep from reacting to the dread and high octane lust it gave me just thinking of it.\n\nHe laughed, grabbing me to lick my face. \"No more orgasms until I say otherwise. Since it's this time of the month, the first little bit should be a nice, easy start to your denial. I want to see you break for me, Two. I want to see you an insane animal for me.\"\n\nI moaned but went still so easily, thinking of how he'd given me an out to cry, even around the pride that made me hate my own gender. God, I loved him. But more to the point, I trusted him with my life by that point. I knew it would be a horrible trial, but I also knew that every game we played, no matter how long, always ended up being worth it.\n\n\u2014\u2014\u2014\u2014\n\nNot even three days later, I thought I was already insane. The first day of my period I was bleeding too badly to play much but it was the only day like that, which he well knew. So he used that day to torment me with commands and so soon after his very effective torturing I would obey them and turn heated for him, thinking of his threats and what was in store for me. The second day was a little less of a respite day. He had me stand in the bedroom where he tied me in my boy shorts and held a vibrator over them. He had me fitted with the cock gag and one command and that was to not cum. And the worst part was it wasn't actually a hard command to follow. He used a mercifully low setting and it was over clothing so I had enough control especially after his previous denial training periods. But it was effective, a low humming tease of pleasure that I readily fell to after all of his torment on my overly receptive body. In the way of his usual use of me as his pain slut, he didn't speak to me, didn't give me any other commands past the one. I went to bed restless.\n\nAnd the third day was when he upped his ante. He woke me early to shower with him and in the shower was when he used my asshole, placing his hands over mine against the wall and growling his reminder in my ear. \"Don't cum.\" I moaned at that, the soreness having left my body, and pleasure was fast in its assault. It rose like a storm, my sexuality hating even small two day breaks from his sex. I was more than ready to ride him to an anal orgasm, but his command held me fast, and I whimpered pathetically instead while he filled me with cum. He dragged me from the shower only to paddle me, but that was so gentle that it only fed me more hot arousal. He left with a satisfied look in his eyes while I shook and shivered. \"I want you to go to the room after I leave and hold the vibrator to your pussy for ten minutes. Make sure to get up early to get ready for work and do it again for another ten minutes.\"\n\nI stared at him in horror even while my mouth opened and said the words, \"Yes, master.\"\n\nHe was smiling sadistically when he left and he gave me one last terrible thought to consider. \"Once you stop bleeding, I can start fucking your pussy while you're in denial, have fun eating it out, and then we can really watch you spiral to hell.\"\n\nI moaned in dread, shaking and wondering what game I had gotten myself into. It was as if Satan had leaned over me and purred out his idea of the worst kind of torture for a damned soul and I had agreed to it. I ended up calling Ivory before I even left, just to hear his voice and to beg him for something to distract me with. There was deep pleasure in his words at the sound of my desperation. But he still didn't hurt me. He fucked my ass again as soon as I got home and then again before we went to bed, leaning down to whisper, \"I'm going to need to use you all the more for this. God, it turns me on to watch you suffer.\"\n\nAnd he did. He woke me up again in the morning to use me and in the shower I whimpered it out. \"Please strap me, master, please.\"\n\nHe laughed in disdain. \"No, because that was a pathetic excuse for begging. Hold the vibrator to yourself for two twenty minute sessions instead of ten since that was obviously too nice.\"\n\nI started crying. Denial was true hell. What was worse about it? His casual use of me without my own pleasure being allowed at all made me so fucking hot to think about that it alone would have made the denial hell. My masochism reveled in that type of use and if this was a head fuck, I would have been able to get off from the thought alone. And even worse? His dick turned so fucking hard at the sound of my misery and he growled with delight. \"Get to work after I leave and I'll know if you disobey, little slave.\"\n\nAfter that I was definitely going insane with it. I edged myself obediently while sending him the video I knew he would want. Then edged again before work and when I left I was antsy and whining, throwing myself into work like before. This time he called me during lunch, purring cruelly in my ear. \"I can't inspect my little cunt at the moment so I want you to message me and describe how badly that pussy aches.\" I did. I messaged him with begging and pleading.\n\n\"Please hurt me!\" I threw myself at his knees that night and he laughed, placing his boot on my head to make me bow lower.\n\n\"Good girl. That's more like how my slave should beg me. It's a pity you already ruined it this morning. No, and you can try again tomorrow. In the meantime, that turned me on.\" He lifted me and bent me over to chair again, fucking me so violently I would have cum three times if I'd been allowed to. Instead I took it, shivering and whimpering when he whispered menacingly in my ear after he came, \"Good little fucktoy. And that's what you are right now. Your pleasure doesn't matter and it's mine that does, isn't that right, little slave?\"\n\nHeat and fiery arousal sizzled through me at those words but he knew that and it's why he said them. \"Yes, master.\"\n\nGod, I felt like a slave. I woke up to his touch the next morning and my head was bowed in terrified defeat. We both knew my bleeding was over. He took me to the shower again, his eyes eager and intense and I knew what was coming. It was torture when he fed his cock into my pussy and he prolonged it with soft, horny growls in my ear, stretching me deliciously since I hadn't taken his cock in a week. I whimpered with each inch and shuddered around him when he was seated as far as he could go. \"Don't cum.\" He snarled it like an animal. \"Don't you dare.\"\n\nMy voice was defeated. \"Yes, master.\" I spread my legs wider, so submissive and in such a headspace with his denial. I let him have me for his enjoyment, opening myself wider, arching myself even while I whimpered soft, pathetic little sounds of unrequited need. He switched to my asshole at the last minute and that was to cum inside of it. And then he knelt in front of me with an evil little smile and lapped my pussy in the shower, laughing when I whimpered in pleasure, delighting in my torture. That didn't last as long but it served to amp me into madness. \"Twenty minutes twice again, little fucktoy. Understood?\"\n\n\"Yes, master.\"\n\nAnd it went like that. He fucked me three times a day while I cried. Although that night when I threw myself at his knees and begged for pain, I was sobbing, actually crying and pleading with him, and it made him pleased enough to fetch his cane. \"Over the chair, Tuesday. This is mercy for you so I'm not going to help you. We can keep going until you decide you've had enough.\"\n\nI had to close my mouth tight to keep from begging him to stop when he started, knowing that he'd oblige as soon as the words left my lips and I needed the pain to focus. Each stroke was torture that took the edge off a worse torture and I arched up as a coping mechanism. \"Good girl.\" He cooed it over me, stroking me when I curled into his arms and whimpered. He didn't get any easier with his gentleness.\n\nHe made me sleep in the chastity belt with both the anal and vaginal toy attachments instead, making it far worse. Six days became nine where I begged for more and more pain, where he started to make me reverently kiss his cane, where he pet me with that terrible strip of agony. Nine became twelve where my body started to get so confused in the worst ways. I sank into any torment he gave me, readily and eagerly, and our dynamic had turned into something with less talking between us but with far more depth. I started to turn fiendish at the thought of the cane because... here's the thing.\n\nIt hurt like hell and at first it was to save me from my own arousal. But then, horrifically, it became tethered with that same arousal it was supposed to be saving me from. I had to start to focus on the pain for it to work at all when I was becoming so goddamn turned on by what he was doing and how effective his conditioning was.\n\nTwelve turned to fourteen and when I went home, my head was bowed in defeat. I was broken and didn't have any hope that he would ever let me up from this because he made it clear time and again that it aroused him so much, as much as it aroused me. And while the defeated feeling was dark, it wasn't a miserable dark. It had transformed me like every other dark thing he did to me so that this was just hopeless desire.\n\nHe was waiting for me when I walked in the door and he had me in an instant, his assault rough and horny. He pulled my shirt over my head and threw it while I gasped up at him and then just as quickly fucked his fingers inside of me. The only times he spoke were to torture me with word porn and he did that while I whined desperately. \"God, you're always wet for me now. I don't even have to work to make you ready for me when you're this desperate. Taste how wet this pussy is for me, baby.\" He shoved his fingers into my mouth while I suckled, my eyes closing because there really was so much cum it was obscene. He shoved my skirt down while barking at me to get out of my shoes and then I was lifted against the wall and his cock was free and-\n\n\"Mmmmph!\" The sound was slutty around his fingers and my mouth parted with desire. Every motion he made brushed against my clit and I shook with the effort of holding off orgasm, of not climbing that ladder of pleasure, and I had practiced so much that it was becoming terrifyingly easy so long as I didn't think about the cane and my wicked relationship with it. Even so, my clit felt swollen, engorged, dying for just that one touch and his permission... but I had lost hope for either of those things and I focused on his pleasure instead, opening for him to use.",
        "Ivory purred against my ear, his hands forceful around my waist. \"Who do you serve?\" He whispered it, voice intent in my ear.\n\n\"You, master.\" I cried it when he took his fingers from my mouth.\n\n\"Good girl. Look at me. I want to see it when you suffer for me.\" Obediently, I did, meeting his eyes and staring into them for a bond that hurt. Pain giver and pain bearer. Depraved pride and pleasure radiated from his gaze and it gave me strength, made me stay sane. I shuddered when my body climbed up a notch of pleasure against my will and had to breathe to get control again. Ivory held me by my hair so I couldn't look away and he could drink in every spasm and desperate fight I had to hold back. He chuckled at my pain. \"Pretend your clit isn't there. Just relax and take it.\" I did that and this time was different than his other times using me. He moved slowly, making me feel every inch in a way that made me dread this. Had he masturbated before I got home? I didn't know but if he had he could make this last for a long time.\n\n\"Yes, master.\"\n\n\"Poor girl. You were begging me in your sleep, a little slut for me even then.\"\n\nI moaned because I didn't doubt him. \"I dreamed about the cane again,\" I whimpered. Again, because he had made me tell him every terrible transformation he was putting me through, made me recant every dream and desire.\n\n\"Did you? You beautiful little pain slut of my toy.\" He reached around me to smack my ass and I moaned. \"It doesn't even help anymore, does it? It makes you so fucking hot that even the cane can't save you at the moment.\" I cried into his neck but he grabbed my hair again, growling. \"No, look at me.\" And I obeyed because I'd do anything he asked after what he'd done to me.\n\n\"Are you pleased?\" I finally asked it softly, whimpering it like a dog begging for a shred of approval.\n\nHis grip tightened and he growled, biting my bottom lip in a vicious tease of a kiss, as if he were too afraid he'd hurt me if he indulged in the real thing. \"Am I fucking pleased? God, look at you. You've been bowing on my leash for a week now, you've licked my ankles without even being told when I sat down, and you'd lick my shoes clean if I told you to. You bend over even farther for me to use you easier and you let me see your suffering because you know I love it. You're so covered in cane tracks and welts that I don't even have a place left to torture you anymore until you heal and you're begging for more like a wanton in your sleep. My God, am I fucking pleased?\" He snarled and pulled out of me, taking me to the floor in the doorway instead, and I gasped with wide eyes when he thrust back inside me. He was on his knees over me, pulling me up at a strange angle that was nonetheless torturously deep and I moaned with a shocked sob of desire. \"Let me show you how beyond pleased I am. Let me show you how goddamned ecstatic you make me.\" He forced me back, impaling me as deep as he could in one fierce stroke while his other hand slapped my pussy right on my clit and I jolted, my body contorting as he ripped my control straight out of the stranglehold I'd had it in for two fucking weeks.\n\nAnd then he said the magic words that released me and made me blind for hours. \"Cum for me, Tuesday!\"\n\nI arched, too blinded by pleasure to see straight or scream with it. Instead all that came out was a soft squeaking whine and my body pulsated around his. He laughed at whatever my face must have looked like and fucked me so fucking hard while I rode out every last tidal wave of halcyon bliss. I don't even remember much for a while after that except for pure, hedonistic ecstasy. I do remember that when he made to pull away, I launched myself at him like an animal in our foyer floor. Because he had the only cock I wanted anymore and, goddamnit, now that he released me from that control, I shattered and he was going to fill me and make me whole again if I had to claw him raw to force him.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nShe went wild, absolutely crazed. I had riled her into a tortured bundle of subspace energy so bright it was like a supernova, and had forced her to control and contain all of that. They had been two of the hottest weeks I had ever participated in but when I released her?\n\nGod. There wasn't anything like that.\n\nI remember one time hearing the theory of the biblical flood coinciding with the breaking of the super continent. Supposedly, the people of biblical times had never seen rain before that and Pangea had been intact, but then God ripped open the gates and it didn't just rain. Water burst forth through the land itself and broke the single continent straight the fuck apart with its force.\n\nThat's what she was like. Pure masochistic energy burst from her and she was savage with it. She clawed her hands through my hair and bit me and I didn't even care. I threw the dominant rules straight the fuck out the window and let her ride me. I had to turn her over and fuck her doggy style right in the goddamned floor while holding her hair like reins on an untamed thoroughbred. And that was just so I could get her calm enough to lift her and take her to the table where I could eat her since she'd made me cum with all that feral, frantic energy.\n\nShe spread her legs over the table nice and wide, the way I'd commanded her to when I would lay her in the same spot to torture her over the previous two weeks. That's how cruel I had been to her. I had been lapping her pussy for thirty minutes at a time while she couldn't cum and the sight of the automatic obedience, even when she was an animal, made me growl. I used my nails to pull the protective hood of her clit back and stroked my middle fingers over it so that she arched so hard I thought she might break my table. When I stroked that magical little button that I had previously told her to pretend didn't exist? She thrashed and I had to have more, had to taste more, so I thrust my tongue deep inside of her, making her squeal and writhe around me. I punished her on my tongue so that her legs shook again... and again... and again... I didn't want her able to walk when she next tried to stand. I wanted to see her collapse to her knees before me while she still begged for more cock.\n\nAnd she did. I forced her up and over until she was shaking all over and then lifted her and got to see my wish. She whimpered and staggered, then fell, her legs weak with pleasure even while she stared up at me, her eyes delirious, and her lips mouthed the word \"please\" over and over again.\n\nI thought I'd take her to the bed but didn't make it, settling for the love seat and snarling over her while I sucked and laved and bit her nipples.\n\nAnd then I finally made it to the bed. Where the cane was. I lifted it just to watch her spasm to the sight of it, and then laughed with vicious elation because I'd ruined her and she would keep craving the cane after this, even when it made her cry in misery.\n\nMy beautiful Tuesday. My angel Tuesday.\n\n\u2014\u2014\u2014\u2014\n\nThat hadn't been the end of our spree. I woke her in the night after she was finally fucked out and exhausted and coherent again. And she'd come awake eagerly, eyes going dark with lust at the feel of my cock. \"Again?\"\n\n\"Yes. Fucking yes, again. And again after that.\" I'd used her and used her. But it wasn't using anymore. She was riding back on me no matter how I took her.\n\nIt was hotter than hell and if I were slightly less of a sadist, I might have considered it even hotter than the build up where she had been so desolate with need. But I was that sadist and would always prefer her pain in all its forms. I had taken the sickest glee off of her reactions when she was hurting and sore from her period and couldn't wait to indulge in it every single month. I was an asshole and I was more terrible than ever while in love with her. Two weeks of denial while I spent evenings lapping her pussy while she lay on my table and spent nights with her shivering in chastity belt toys? Where I forced her to hold the vibrator to herself to make it worse? I hadn't been so evil to anyone.\n\nBut she'd lapped it up like candy, hadn't she? She'd cried and whimpered and begged and sobbed in anguish and she'd taken it, taken me. And there was more to her two weeks than just those highlights too. I had crafted a continual torture for her, every message sent another way to make her hot. I had made her send me pictures of her dripping cunt. Some nights when she walked in the door, I had made her sit in a chair and pulled up the pictures she'd sent me. Then I would stand behind her with one arm over her shoulder and hold the pictures up to study with her, cruelly whispering in her ear. \"Look at how red and swollen those pussy lips are, baby, how needy you are. And see how engorged and full that clit is, how it's begging to be touched? I bet it's buzzing for you right now.\" Christ, I had been a terror and she had followed all of that through with me.\n\nAnd the sex spree afterwards... Holy fuck.\n\nWhen I woke beside her I was so exhausted that I knew she'd be out for another hour or so. It was a Sunday, one of the few days we had off together more often than others, and we could be lazy. I smiled at the sight of her beside me. She lay on her side, curled up almost in a fetal position with her hands tucked together at her cheek. Her breathing was so deep and even, so relaxed. God, she had been such an animal and it'd been so beautiful. I was already eager for the next denial build. I would have to push even harder, be even worse. Maybe I would make her stand for hours with a vibe taped right against her clit while I trained her in control, flicking a cane when she started to show signs of being too close to orgasm, and stopping the vibe until she regained safe discipline. And then we would start again, over and over. I would fuck her while she was forced to hold back, so horny for me, and do it even more than I had this time.\n\nGod, my fantasies already went rampant again. She shifted, a soft purring snore escaping her, and I smiled, reaching slowly to my nightstand to grab the piece of jewelry this whole thing had really been about.\n\nShe would still be exhausted in total satisfaction when she woke and after our wild intensity, after the gift of trust she'd given me in the denial build, I could safely ask her my question, the question. I opened the jewelry box with a smile.\n\nShe had been staring at my onyx cut ring for months now, the strange heart shape I always wore. It was my sole piece of jewelry besides things like cuff links and I have no idea why it had become the only piece I wore and never took off. It had absolutely zero meaning to me, none at all. People asked all the time. Was it given to me by a family member? Nope. Gave it to myself. Symbolism? A fucking heart, are you stupid? No one puts symbolism in a gay ass, widespread picture like that.\n\nWell, alright, except for now when I was the idiot putting symbolism in it. Tuesday's ring was a ruby - I wasn't settling for goddamned garnet in her engagement ring so I found the perfect ruby with the right depth and shine - and it was heart cut just like mine, except hers had small diamonds creating an outline.\n\n\"Yes.\" The whisper made me blink and then turn to her. She stared up at me sleepily, still stretching. My heart thundered and I swallowed nervously, but she grinned shyly at me. \"The answer is yes, but you have to give me one of those massage things you do.\"\n\nI beamed. \"It wasn't going to be phrased as a question anyway.\"\n\nShe giggled and held out her hand while I took the ring and fitted it perfectly on her finger. Her eyes went a little wide at the sight of it when she wore it though. \"It's huge.\"\n\n\"Get used to wearing red,\" I answered and she laughed while I obliged her request and kneaded her shoulders, stroking away all the tension that I had created.\n\n\"You'll have... have to... match the clothes...\"\n\nI didn't bother answering because she was already out again, this time wearing my ring as well as my collar. I had every intention of finishing her well earned massage and then getting breakfast and coffee ready, but I never made it that far. The feel of her so relaxed beside me made me feel relaxed and I ended up tucked back in beside her, holding her close to my chest. My right hand rested close to her left, the black heart shining beside red. \n\nI smiled and decided that I didn't even feel the need to push her for a wedding. This was enough for as long as it took her to feel comfortable. She could have the rest of our lives if she wanted, although I hoped she'd agree fairly soonish. If our businesses were intertwined through marriage it could give her more benefits and we could build other interests for her together. Both of us being business owners also meant she could comfortably keep all of our bank accounts separated without torturing herself in guilt over it, like I knew she would if given half the chance. She was brilliant with the accounting work, too, so she could take over all of my own accounts, and just give me the end of the month records, eventually. It would be an act of trust that would draw her out of her relationship phobia and give her some power over me. Power that I knew she wouldn't do a thing with, except keep my books for me. My mind went through all of it, ways to coax my little Tuesday out in hopes for her to set a date.\n\nIt turned out I didn't need to even overthink all of that. She had an idea when she woke up and it was actually soonish. Tuesday really impressed me with it because she asked for a logical two years of engagement and then we could start to plan the wedding. It was actually more than I'd dared hope for from her skittishness, although she seemed to be worried that she was asking for too much. I replied to that by grinning and shrugging, telling her that two years was 24 times I would get to torture her during that sensitive time of the month and I wasn't upset with that. \"Ivory!\" She laughed though, throwing a pillow at me and running from me through my apartment.\n\nAnd later that night we played Scrabble. Because we'd bonded over games, we played games in every aspect of our lives, and I safely knew that we would keep playing games together as we grew. It was why I was so certain of marrying her. So long as there was a Breakfast at Tiffany's topic we could go back to when things seemed rough and so long as she never tired of taking my kinks, we would be just fine. And our kinks were soul songs to each other.\n\nOnce upon a time, I had craved for more thrill at nights and that's how I found her online. My Tuesday, who'd been named that because she was born on Tuesday. My Tuesday who was so real and down to earth.\n\nAnd now I didn't crave for anything else except for more of her.\n\nOh, one last thing. The key to her apartment? Don't worry. I used it. I had to send her to get her things from her apartment when we decided to move into mine together. And no, we didn't decide on my apartment for a sexist reason. It was just because I had the dungeon in my penthouse and Tuesday loved my bed. Also because she didn't give a fuck.\n\nBut I had her go and start packing when she thought I was out of town with my brother. The night before I had taken the Beretta apart, stripped it down and removed the firing pin, kept it unloaded, and put the safety on. I held it with me while I hid in her closet. \n\nShe definitely wasn't expecting me either and I had to clap my hand over her mouth to muffle her screaming, wearing a ski mask just for old time's sake. At first, I didn't say anything, just lifted the 9 mm threateningly, keeping it right in front of her eyes, pointed away from both of us. \"Are you going to be a good fucking girl for me, Tuesday? Because here's what's going to happen. I'm going to rape your little asshole and when I'm done, you're going to tongue bathe my cock clean of how filthy you are and it might take a while. You see, I want to make sure you taste yourself off me and get the full flavor of it. And then you're going to wash that down with all the piss I'm going to give you straight from my cock and you're not going to spill any. And you won't give me any problems, will you?\" I nuzzled her temple while she couldn't take her terrified eyes off the gleaming Beretta. When she didn't immediately answer, I shook her with the hand that still covered her mouth. \"You give me a fucking answer when I ask you a question, you little bitch. Are you going to give me any problems, Tuesday?\"\n\nShe trembled, whimpered, and finally shook her head no. For a moment, she shook with a body spasm that made me worried I'd thrown her into the bad kind of panic. But then it subsided too quickly to be that. So I lifted her little skirt to feel her pussy and make sure she was okay that way instead.\n\nShe was more than okay. She had cum coating her thighs, that spasm having been her orgasm from this setup alone, and I could feel it dripping from her. \"Horny fucking whore.\" She groaned to my foul degradations and I smiled, inhaling the scent of her hair and her fear.\n\nGod, I loved Tuesday. I loved her more than dragons loved jewels and fire."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/dark-as-ivory-pt-03"
}