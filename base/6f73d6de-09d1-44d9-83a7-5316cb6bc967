{
    "title": "Captured Ch. 03",
    "pages": [
        "Under Thoran's careful watch, Sirah sullenly weaved a web in her prison. Again trapped behind Devil's Mist, she knew every passing second drew her closer to being bound as the Demon's mate.\n\nThe room imprisoning Sirah was well-sized and surprisingly comfortable for underground. The walls were coloured a gentle blue to give the environment a lighter, more cheerful appearance, and there was a pond of sparkling fresh water that any nymph would love to be near. The bed Sirah sat upon was soft and large. The only disconcerting aspect was that it was large enough to also accommodate Thoran.\n\n\"Will you speak to me, little one?\" Thoran asked, observing her with an indulgent smile.\n\nSirah didn't answer and glared down as the sparkling web became irksomely tangled between her fingers. No longer afraid for her safety, she was now trapped in an unsettling future with a demon. Her slender shoulders tensed every time she felt the insistent twinge of her wings, unused to the forced confinement against her back.\n\nThe web in her hands hardened to a stiff, knotted bundle, much like her new restrictive life. Sirah cast the ruined trap aside with some distress, and began to design another.\n\nThoran turned to check on a bubbling cauldron, eyeing it with satisfaction before turning his attention back to the alluring creature he'd captured.\n\n\"Are you not grateful I spared your virtue?\" he tried again to break her silence, his eyes dark with frustration and desire.\n\nSirah made a petulant sound and worked more fiercely on the new web.\n\nThoran thoughtfully raised his chin. He could use his lure and make her desire him. He could frighten her into submission. These tactics were a demon's nature, after all, but he found the dark energy tiring and bothersome.\n\nBesides, Sirah's spoiled, innocent demeanour was as amusing as it was tantalising. For anything to hold his interest for long was a rarity, and he was certainly not growing bored of her.\n\n\"Spared, thus far,\" Sirah finally muttered, still refusing to look at him. Her pale-green eyes brightened with angst and new tears. \"How my father could...\" she angrily shook her head and swallowed a sob.\n\n\"It was his only way to protect you. He has wisdom worthy of a King,\" Thoran mused, linking his fingers together as Sirah adorably grit her teeth.\n\nFinally she rolled the newly ruined web toward a shimmering pile of failed attempts, and sighed.\n\n\"I want my wings back,\" she complained.\n\n\"You have them,\" Thoran answered, before laughing at his little joke.\n\n\"I want them free,\" Sirah hissed, clawing at the soft blanket of her bed.\n\n\"Look to me, and ask,\" he replied.\n\nSirah stared stonily at the blanket, and Thoran felt a ribbon of pleasure coil within him as he watched her, wondering whether he could truly wait until she was bound to him before taking her.\n\n\"Very well,\" Thoran continued. \"I prefer you become acquainted with these surroundings first. And I do not want them to interfere with...\"\n\nIn an instant, Thoran leapt to his feet as a spurt of red brightly dashed across Sirah's blanket.\n\n\"You little fool,\" he growled, quickly crossing through the mist. He seized her wrists before she could press the jagged piece deeper into her chest.\n\nSirah faintly cried out as Thoran swiftly extracted the silver weapon and immediately placed his large hand across her breast. The flow of blood ceased, and Sirah moaned as the wound painfully sealed.\n\n\"This will scar for a while. A fine sight to present your father!\" Thoran thundered, keeping his hand against her skin. \"I keep my word. He will not fear for your welfare.\"\n\nSirah wriggled uncomfortably, irked by the beguiling effect of his nearness.\n\n\"Nymph magic is impish, not malicious. How did you craft the weapon?\" he demanded to know, but Sirah paid him no attention.\n\n\"I am not sure what you know of my kind,\" he continued, clearly fighting his temper. \"Demons can heal, and they can resurrect. These are not pleasant things to endure,\" he growled, pressing his hand for emphasis.\n\n\"Whatever you do, you won't escape me. I will bring you back and each time you force my hand, you will lose part of your essence. All that you will gain from the endeavour is humiliation and suffering,\" he added, though wondered if he would really proceed with an act so callous.\n\nThe demons' ability to resurrect was not a kind inclination. It was another cruel trick to prolong suffering, until eventually the victim returned as an empty shell of their former self. Even at that point, the victim could still feel physical pain. Demon's often practiced this dark pastime when leisure was abundant and sport was scarce.\n\n\"Leave me!\" Sirah wept, feebly tugging at his hand.\n\nThoran didn't budge and watched her fiercely, angered by the startling fear she just caused him. \"To hurt yourself, to prematurely end your life, is futile. Do you understand?\"\n\nSirah reluctantly nodded.\n\n\"If you succeed, Sirah, I will bring you back and tie you so that every limb is restricted. Do you understand? Look at me,\" he said sharply, finally withdrawing his palm from where a furrowed pink scar had formed. It was pale pink, a shade slightly fairer than her rosy lips, and he wanted to kiss both places.\n\nWith her body still tingling with something other than anguish, Sirah stubbornly fixed her eyes on his large, bare chest before her face. He was bigger and more muscular than any nymph or mortal she'd ever seen. The idea this male intended to mate with her, made her feel faint with dread.\n\n\"Sirah?\" Thoran quietly warned. The ominous tone of his voice compelled her to uneasily return his stare. \"Do not fool yourself. We belong to each other.\"\n\n\"I am not bound to you, yet!\" she sniped, shrinking away from him.\n\n\"Not yet,\" Thoran said softly, his tone suave as she began to affect him. \"But once you are...\"\n\n\"If you can heal, why not free my wings?\" Sirah persisted, feeling alarmed as he became distracted by her body. His large hands began to move over her, tracing down her waist with a gentle pressure that made her heart flutter.\n\n\"Thoran! Thoran, wait!\" she shrilly begged as his black eyes burned lustfully, enthralled by her lovely features.\n\nThe next moment he was atop her again, pressing her back to the bed. Holding her down, Thoran's lips slowly trailed up her neck, his teeth pulled her earlobe and his mouth kissed past her hairline to where he deeply inhaled the scent of her long, light blonde tresses.\n\n\"You've bewitched me, Sirah,\" he murmured against the silky strands, then chuckled at his private joke.\n\nFinally he pulled back and admired the new colour in her cheeks, her quick inhalations as she tried to catch her breath and appear indifferent. Noticing his scrutiny, her eyes shamefully lowered until Thoran gently pinched her chin, guiding her to look at him.\n\n\"I release no charm to tempt you. You respond on your own, Sirah,\" he said gravely, as though delivering a hard truth. \"When our time comes, the pleasure will take your breath away and you will never want it to cease.\"\n\nBefore she could utter denial, he moved close again to feel her slender figure shudder against him with reluctant desire. Thoran felt her thighs edging apart beneath him, and was certain she hadn't realised. Conscious of his own magnetism, there was a growing awareness that he was becoming addicted to Sirah's entrancing aura.\n\n\"Sirah, if I release your wings, will you promise not to harm yourself?\" he whispered against her full mouth, lips parting invitingly at his proximity.\n\n\"I have a journey to make. I must leave you alone and trust you not to be foolish,\" he confided, smiling tenderly at her dazed expression. It was hardly the first time he'd seduced a female, but somehow Sirah's reactions captivated him as if she was his very first.\n\nWhen she hesitated, he brushed his lips across hers convincingly. \"Accept your lot with me, and I will teach you what your kind never dared. You were made for greater things than to be a kept Princess. Can I trust you?\"\n\nSirah hesitated before slowly nodding. Thoran's hand stroked through her hair and down her neck, lingering at her chest. Then he leaned in and kissed the new scar on her breast.\n\nSirah gasped at the strange tingling that flowed from the point of injury. It was unusual and slightly discomforting, but not unpleasant. She wanted to feel it again, just to gauge the new sensation.\n\nAfter warmly watching her confusion, Thoran became serious. <br ><br >\"I have preparations to make, and rules for you to abide. For your safety,\" he added, as Sirah showed new signs of petulance.\n\n\"What preparations?\" Sirah asked, shocked by her breathlessness. Thoran chuckled at it.\n\n\"For your provision. And should visitors come.\"\n\n\"Visitors?\" Sirah asked, unable to hide the hope in her voice.\n\n\"None that would aid your escape. My brothers - malevolents,\" Thoran forebodingly clarified. \"I hope to return before they arrive, but may not.\"\n\nSirah timidly looked away as Thoran pulled her to a sitting position before smoothing his palms down her back where her wings neatly folded. A moment later, Sirah felt them extend, and her sudden childlike joy brought a smile to Thoran's face. He crossed through the mist and watched Sirah prance about the room, the glimmering tones of rainbow blurring prettily at her slender back.\n\n\"That is better,\" she sighed out loud, forgetting Thoran's amused perusal. As it came to her attention, the radiance on her face reddened to a blush.\n\n\"Thank you,\" she said shyly, with real gratitude.\n\n\"My pleasure,\" he grinned, and Sirah's cheeks burned a deeper shade by the tone of his voice, now fully aware that she was indeed his pleasure.\n\n***********\n\nAs the messenger approached the great doors of Devan's residence, they burst open before he could announce himself. Devan bore down upon the startled young nymph, his face drawn and anxious.\n\n\"Who sends tidings? Is it of Sirah? Speak!\"\n\n\"I- yes,\" the nymph blinked rapidly. \"Thoran has... um...\"\n\n\"What!\" Devan shouted, losing his temper. \"What has he done? Is she hurt?\"\n\n\"No. H-He forbids visitors for six days,\" the nymph whispered back, terrified. \"None are permitted to approach his land in that time. Not even you.\"\n\n\"Why?\"\n\nThe nymph shook his head mysteriously. \"He did not say, only that it was for the safety of all.\"\n\n\"The safety of all!\" Devan bitterly repeated. His magnificent, blue-black wings had noticeably lost much of their purple tones in Sirah's absence, and were so taut they looked ready to snap.\n\n\"You could have accompanied me,\" the messenger nymph said pointedly, at the same time taking a tentative step back as Devan glared at him.\n\n\"I will not see her until after the binding, and that has yet to pass.\"\n\n\"Why does he wait?\"\n\n\"I have no idea,\" Devan spat, though he was beginning to suspect a reason. He frowned at his feet as his mind whirred. \"He has her now...\" he muttered, wringing his hands. \"There is no contest. But now we must stay away? I can think of only two reasons, though who knows the whims of a demon...\"\n\n\"Reasons for what?\" Noah pried, having just arrived to catch the Devan's last words.\n\n\"The demon has temporarily banished us from his land. For our welfare, he would have us believe.\" Devan took a deep breath. \"If she were dead, I would know. I praise the sky for the small mercy.\"\n\n\"Thoran has not yet bound her?\" Noah frowned, disrupting Devan's thoughts. \"Why?\"\n\n\"There is a possible reason.\" Devan looked meaningfully at Noah, while the messenger nymph stared curiously between them.\n\nNoah drew a deep breath. \"You told him?\"\n\n\"Their kind are cunning. He realised soon enough.\"\n\n\"And now? What does this mean?\"\n\n\"I believe...\" Devan murmured, his green eyes troubled. \"I believe Thoran is planning a journey. And he will leave Sirah unguarded.\"\n\n\"But if she is not bound, we could rescue her!\" Noah exclaimed. \"His threat is empty-\"\n\n\"Not if his brothers arrive,\" Devan softly interrupted. \"On Demon soil, it would be easy slaughter for them.\"\n\n\"But-\"\n\n\"An agreement has been made, under dire circumstances. But an agreement, nonetheless. I cannot risk committing an act of treachery that would put my daughter at risk or cause unnecessary deaths. Much as I wish to turn Thoran to dust, he takes his oath seriously. I must keep my end of the bargain. Distasteful as the situation has become, Thoran is not one to make idle threats.\"\n\n\"What does the demon know?\" the messenger nymph curiously intruded, flinching as Devan turned on him.\n\n\"You have delivered your message. You may leave and inform the others of the warning,\" he growled. \"Strengthen our borders. Outward travel must cease for six days. No nymph is to leave the safety of these surrounds, and there will be no exceptions to this rule.\"\n\n**********\n\nThree very tall figures of men came to stand before Thoran's abode.\n\n\"Thoran!\" one bellowed, cupping two large hands by the sides of his mouth. The fierce shout echoed dauntingly underground, with no answer.\n\n\"Where is he?\" another snarled, sniffing at the air. \"Food. He prepared for us.\"\n\nThe third demon smiled coldly. \"The great Thoran dallies with mortal women.\"\n\n\"Aye, Scarn, and you crawled between the thighs of one just now,\" Plyon scoffed, annoyed by the criticism. With no retort Scarn shrugged, looking bored.\n\nTogether they made their way into the formidable cavern. All three, like Thoran, were misleadingly attractive versions of men; predators designed to entice and destroy innocence. Plyon and Vertar swaggered ungracefully ahead, while Scarn followed behind with more cautious agility.\n\nPlyon and Vertar were blood brothers, with ice-blue eyes and lengthy, unkempt light blonde hair. Scarn was tallest of the three, with dark hair and black eyes like Thoran. Though uncropped, he kept it tidier than his fellow demons. They were all naked, save for a strip of leather about their waists to flimsily conceal their nudity. Demons preferred nakedness, but it was easier to catch more difficult prey if they maintained some appearance of decency.\n\n\"Agh!\" Vertar lifted his foot with disgust after stepping into a shallow pond. Opening his mouth to growl complaint, his voice abandoned him as he stared around.\n\n\"Thoran...\" Plyon began, but words also failed him.\n\n\"Has clearly lost his senses,\" Scarn finished the sentence, sneering at the change in environment and wondering how much softer Thoran could possibly become whilst still calling himself a demon.\n\n\"Feast!\" Vertar suddenly roared. Carefully avoiding other pools of water, he and his blood brother advanced to the table, piled high with preserved meats.\n\n\"Halt.\" Scarn's eyes curiously scanned the area, alerted to an unfamiliar, delectable scent. \"We are not alone.\"\n\n\"Trust Thoran, for once, and be done with warnings,\" Plyon growled, collapsing at the table and reaching for food.\n\nScarn sniffed the air again, his handsome features perplexed. \"It's not possible...\" he mused staring around. \"A creature so foolish to...?\" he breathed, his mind darkly racing. After pausing for a stunned moment, he vanished in a blur of movement.\n\n\"Don't like his strangeness,\" Plyon gruffly complained with a mouthful of food.\n\nVertar gulped down more meat and cleared his throat. \"He's clever.\"\n\nPlyon shrugged. \"Trickery. He's not like us.\"\n\n\"Thoran is the same.\"\n\n\"I like him better. Scarn is traitorous.\"\n\n\"If Scarn hears you...\"\n\n\"Bah!\" Plyon made a dismissive gesture, and gave the food his full attention.\n\n*********\n\nSirah heard a light step, and sensed a new presence. She sat up in her bed and looked to the mist, wondering if Thoran returned early. Though she couldn't see anything, she felt a strong urgency to remain still and silent.\n\nOn the other side of the mist, Scarn interestedly perused the barrier, unable to see the other side. Whatever was there must be very precious, to compel Thoran to conceal it from the sight of his brothers. Scarn sensed it was something living. Something innocent and delicious that Thoran had stowed for later. Something Scarn would like to ravage before taking apart piece by piece...\n\n\"Why do I wait?\" he smiled thinly, stepping to the whirling smoke obstructing his view.\n\nAs soon as his bare foot planted within the smoke, he was violently thrown backward. On the other side, Sirah gasped as the cloudy barrier indignantly shuddered.\n\n\"A mist against demons? I'll rip your throat out, Thoran!\" Scarn snarled, dusting fragment of stone from his legs and readying to take on the challenge.\n\nInstead of trying to enter the mist, he placed both palms outside of it and closed his eyes, his striking features flexed with concentration.\n\nFor a long moment, nothing happened. With his jaw clenched, Scarn persevered until finally, the mist murkily swirled and slowly turned transparent. With breathless wonder, Scarn dropped his hands and gazed upon Sirah's unusual beauty, taking in her wide, innocent eyes, and small rainbow wings.\n\nThen his eyes moved over the gleaming blue dress, fitted to her delectable form like a sheath, down her slender legs to her dainty small feet. Recovering from a stunned speechlessness that he hadn't experienced in many decades, the shock on Scarn's face quickly morphed into a charismatic smile.\n\n\"You are very lovely. What is your name?\" he asked pleasantly. His deep voice richly thrummed with deceptive charm.\n\nTrembling with terror, Sirah didn't answer. The handsome demon beamed at her nervous silence, and Sirah discovered that Thoran truly was different from his kind. Perhaps Thoran was wicked and forceful, but the demon leering at her was very malevolent.\n\nHis dangerous presence triggered Sirah's instincts from the outset, long before the mist's visual block dissipated. Now, she fully understood Thoran's precautions and warnings, and was very grateful for them.\n\n\"Of course, you are shy,\" the new demon purred, in a tone that dripped with kind reassurance. But his black eyes glinted with something far from kindness.\n\n\"My name is Scarn. I am Thoran's blood brother,\" he introduced himself with a lie. After a tentative pause, he continued. \"It is not custom to greet brothers through a barrier,\" he gently chided.\n\nStill furious at being blocked from prey, Scarn wondered how Thoran managed to singlehandedly capture a beautiful nymph. More importantly, he pondered how to get past the mist. Perhaps the mist was only for him. There was one way to find out.\n\nAs the thought formed in his twisted mind, Scarn grinned before extending his arm to direct a substantial amount of desire to Sirah that would have driven ten mortal women running his direction.\n\n\"Uh...\" Sirah frowned, alarmed, as she was unexpectedly hit by a feeling, an invisible sensation that immediately compelled her to stand and step toward the barrier. It was very strong, and Sirah recognised it as similar to how she felt when Thoran was close to her.\n\nWith Thoran, it was refreshingly natural. Clearly he spoke the truth about his ability -- he hadn't unleashed it on her. He never directed a falsely constructed urge toward her as this demon did. Scarn's lure was harshly compelling and created a strong, addictive yearning within Sirah that was unpleasant to endure. But it was a powerful desire nonetheless.\n\nBut Sirah closed her eyes and controlled herself, not coming any closer though her body screamed for her to go to the new demon, to gift herself to him and satisfy his every whim. Opening her eyes, she saw Scarn's arms lowered and his jaw slightly ajar with astonishment. Then he frowned, his inquisitive gaze travelled from her flawless face, to the unique wings nervously fluttering behind her.\n\n\"What are you?\" he asked softly. \"Not even a nymph could resist the lure within this range.\"\n\nSirah's provocative silence began to irk him. Scarn wanted her to talk, to hear a voice undoubtedly as sweet as her appearance. He no longer craved to act with cruel violence, but there was a definite craving nonetheless.",
        "Scarn was alluring himself, like all demons, with an appetite for lust. If he craved release he signalled for a female to be used and subsequently discarded. But he was not one to desire a particular other -- his desire was a base urge that independently rose within him and was quickly satisfied.\n\nAnd yet for the first time he felt the reverse effect upon him. Scarn realised he was sexually drawn to the creature, regardless of his inclination. He was being unwittingly snared like the prey of a predator, and it oddly pleasured him. The unfamiliar sensation was fascinating and thrilling, so long as it could be indulged and sated.\n\nJealously shadowed Scarn's face as he absorbed the truth of Thoran's acquisition and understood the bizarre adjustments to the home's interior. Thoran always managed to find the best of everything. Of course he would capture a mystifying creature with unmatched beauty and keep her hidden. He was always a secretive bastard.\n\nDecades ago, Thoran declared a complete disinterest for binding a female to him. But he clearly changed his mind, and appraising the contender, Scarn could not deny Thoran's choice was more than worthy. Physical exceptions aside, there was something else about her that he couldn't place. Not only did she have her own luring aura, she was resistant to his. She was powerful.\n\nBut she wouldn't talk to him, and Scarn struggled to gauge whether she was Thoran's mate, or prisoner. Scarn lifted his chin thoughtfully, holding Sirah's frightened gaze. Her demeanour was difficult to articulate in his mind - she was delectably fearful, yet innately unafraid.\n\nAs an idea occurred, Scarn's perplexity reverted to wicked intent. Perhaps she could resist one demon, but not three.\n\nSirah watched apprehensively as the demon gave her a last hungry stare. It was a flirtatious glance of accepted challenge that warned an ordeal was in store for her.\n\n******\n\nIt took very little effort for Scarn to pique his companions' curiosity and have them join him to observe Thoran's new conquest. Plyon and Vertar looked upon Sirah with unconcealed admiration, growing restless as they felt her enticing energy.\n\n\"We cannot enter the mist. I want to know if she is imprisoned, or chooses to withhold herself. Let us merge the call with the lure,\" Scarn ordered, and the three of them raised their palms to face the smoke wall.\n\nSoon after, Sirah felt distinctly uncomfortable, a budding discomfort that rapidly intensified to an overpowering mix of agony and pleasure. Then, male voices penetrated her mind, speaking from deep within her skull.\n\nCome to us\n\n \n\nCome to us\n\n \n\nCome to us\n\n \n\nThe desire heightened until it was blinding, like a searing hot hellfire alight within her. It hurt, and the pain seemed enhanced by the alluring voices dominating her thoughts. Sirah whimpered and inwardly begged her body to relent without yielding to the demand.\n\nBut the sensations continued and finally her feet lightly stumbled as though pulled by invisible rope attached to her limbs. She touched the mist and was thrown back to her bed, but in a far gentler manner than Scarn had endured when he attempted the barrier.\n\n\"Ah. She is a prisoner.\" Scarn ruefully rubbed his chin and the others looked disappointed. \"Well, I suppose we will wait.\"\n\nHis companions looked to him stupidly.\n\n\"Wait for Thoran's return,\" Scarn snapped, his temper soaring as the others slowly comprehended.\n\n\"But we must journey to the North.\"\n\n\"Then go, both of you. Go and barter with savages, while I enjoy her beneath me.\"\n\n\"Huh,\" Vertar said thoughtfully, a gleam of new interest in his sky-blue eyes. \"Will Thoran share?\"\n\nScarn laughed roughly. \"Thoran? The superior one, who renounced the traditions of his brothers?\"\n\n\"Aye,\" Vertar conceded. \"But if she is bound, there is no cause.\"\n\n\"Do you smell him on her, brothers? She is not yet bound,\" Scarn smiled sinisterly.\n\n\"What do you plot, Scarn?\" Plyon said sharply, settling an accusatory eye on his companion. \"This is Thoran's land. She belongs to Thoran.\"\n\n\"You were willing to draw her out, just now.\"\n\nPlyon rubbed his neck uneasily, remembering the magnetic pull he felt to the female. \"Aye, the girl has a lure about her.\"\n\n\"Aye, I want her,\" Vertar agreed, also looking uncomfortable. \"But it would be unwise to interfere with a demon's intended, especially if that demon is Thoran. The penalty would be severe.\"\n\n\"Unless he disappeared altogether,\" Scarn countered in silken tones.\n\nPlyon roared and struck the wall. The underground shuddered and stones fell from the ceiling, but otherwise the interior of Thoran's home remained well in-tact.\n\n\"You speak treachery, Scarn. We are loyal to none but each other.\"\n\nScarn looked to Vertar, who seemed in agreement with his blood-brother. Shrugging nonchalantly, he gestured to Sirah.\n\n\"Then you will go on without me.\"\n\nSirah felt a bizarre temptation to plead with the two other vicious malevolents to remain. Though she wouldn't trust them for ten orbs, they clearly had some respect for Thoran where Scarn had none. Above all, she did not want to be left alone with him. But clearly Scarn was leader of the three, and she bit her tongue as the two light-haired demons turned to depart.\n\n\"Before you leave,\" Scarn called after them, and gestured to the smoke wall. \"How about some sport?\"\n\n\"Sport?\" Plyon echoed broodingly, still unsettled by Scarn's earlier suggestion.\n\n\"Well, we are trapped on either side. We cannot harm her. Why not test our lures? Why not see if we can't help her experience the full measure of womanhood from the other side?\"\n\nThe others smiled at the scheme. During times of boredom, they would cast specific lures which compelled young women to kill themselves by jumping off cliffs or into water. Sometimes they resurrected the unfortunate women before making them die again. It would be fun to see the desirable little being throw herself toward them, to pleasure her painfully until she begged for mercy.\n\n\"What say you, brothers?\" Scarn bantered, already knowing his suggestion struck a chord of appeal. \"Shall we find out if Thorn's mate is mute?\"\n\nSirah fearfully shook her head, not entirely grasping the meaning of their plan, but knowing it did not bode well for her.\n\n\"Pain, before the lure,\" Scarn instructed the other two, who nodded their understanding.\n\nThe three starkly attractive impressions of men stood tall, shoulder to shoulder, smiling down at Sirah from the other side of the mist. She was still helplessly shaking her head, silently pleading, but it only excited them more as their palms raised toward her.\n\nSirah anxiously edged back on the bed, flattening herself against the wall behind to increase distance between them. Then she shrieked as her skin burned acidly from the inside, before ebbing to a painful lust that magnetically drew her from the bed, toward the smoke. Dimly she heard masculine tones above her screams, cruelly laughing at her.\n\nThe suffering was constant, and then her clouded thoughts were again penetrated by male voices that tormentingly pierced her mind like sweet music.\n\nCome to us, we will do you no harm\n\n \n\nCome to us\n\n \n\nLet us pleasure you\n\n \n\nCome to us\n\n \n\nWe will pleasure you\n\n \n\nSirah tightly closed her eyes, but still she staggered forward. As a desperate battle raged within her, she managed to hold off from touching the misty blockade.\n\n\"The girl is resilient!\" she heard Plyon marvel.\n\nBut then fresh agony washed over her, the burning of her skin amplified, and she silently pleaded with the voices tempting her.\n\nStop, please, stop, it hurts!\n\nRegistering her appeal, the demons collectively chuckled.\n\n \n\nThen come to us \n\n \n\nCome to us\n\n \n\nWe will make it stop\n\n \n\nLet us pleasure you\n\nA sharp sting reverberated behind her eyes, and Sirah felt her resolve snap with an ensuing wave of lust that made her feel as though she might burst with longing. Her body ignored her mind's objection and leapt to the mist. As soon as she touched it, she was immediately thrown back to the bed.\n\nShaking, Sirah miserably opened her eyes to the sound of loud guffaws echoing throughout the room. Daring a look, she saw the two blonde demons roaring with laughter, but Scarn was not. He was watching her with an amused, calculating smile. A smile that told her this was not just a game to him.\n\n\"Again,\" he loudly commanded, prompting the others to lift their palms, eager for another spectacle.\n\n\"No! No, please!\" Sirah begged, weakly sitting up on the bed.\n\nScarn's dark eyes flared with elation as the soft plea delighted his ears and stirred his loins.\n\n\"Wait,\" he said abruptly, reaching to push the brothers' arms downward. \"I want to try something else.\"\n\nStepping back, he lifted his hand to Sirah, who recoiled at the gesture. Then his fingers curled, as though he was slowly trapping a butterfly in the centre of his palm.\n\nSirah's heart skipped a beat and she gasped, staring down her body as the sacred place between her legs began to throb and tingle. Forgetting her plight and her audience, she wantonly moaned and tugged up her dress to spread her thighs as the delicious, thrumming heat centred in that place.\n\nPanting heavily, she arched and smoothed trembling hands over her breasts, down her trim waist to her inner thighs. Then the pleasure suddenly disappeared, and again she heard laughter.\n\nBut the sound was not heartless amusement as before; the demons' mirth was thick with lust. Their delight was more than sadistic boredom. They were far from unmoved after watching the little nymph squirm with pleasure. The sight titillated their ancient senses, far more than when they indifferently toyed with prey.\n\nScarn felt the difference very strongly. It was a foreign sense of thwarted pleasure. After catching a brief glimpse of Sirah's delicious nudity when she lifted her dress to display herself, he ached to lash that tender flesh with his tongue.\n\nHe wanted to plough through the smoke barrier, leave his brothers on the outside and seize the would-be nymph. He would catch his hand in her sleek hair, force her back to the bed, and unleash his lure on her full strength until she cried out for him to possess her bodily treasures.\n\nThe pale-jade eyes would widen invitingly, and her soft, pouting mouth would press sweet kisses to his lips and wherever else he desired. He would plunder her innocence, and take her every way he wanted. And she would have no choice but to encourage him.\n\nHorrified, humiliated and not least of all terrified, Sirah quickly dragged her dress back down and curled up on the bed with her hands clasped over her ears. Never had she been so traumatised in all her years, save when she was first abducted, but this was worse. She felt desperate for Thoran's protective presence, and wished he would quickly return to end her torture.\n\n\"And now...\" she heard Scarn's dulcet voice, slightly shaken with desire.\n\nOnce again the internal layer of her skin sizzled like fire and Sirah scrambled from the bed to the floor, twisting in agony. She'd half fallen into the pond, but the cool water did nothing to alleviate the burning inside her. Her breath came in unsteady gasps, and if she was able to sob, she would have. But the pain came at such strength, the air seemed to catch in her chest. Through the demon's voices, through the confusion swirling about her mind, she imagined another voice. Her father's voice, making remark on her suffering.\n\nThis is why I kept you home. This is why I warned you. This is why...This is why... This is why...\n\nThen the pain ceased, her father's voice vanished and an exhausting lust flooded her. It shattered her thoughts like an ocean's wave crushing a feeble boat in a storm. The desirable voices returned, summoning her.\n\n \n\nYou will come to us\n\n \n\nCome to your masters\n\n \n\nDon't fight, let us pleasure you\n\n \n\nCome to your masters\n\nWith her mind overcome, Sirah recklessly dragged herself from the floor to run full speed at the mist, toward the tempting men offering such wonderful promise.\n\nThe mist repelled her again, but Sirah hungrily clawed and struggled, dragging herself like an animal caught in mud, like a baby deer swallowed by quicksand.\n\nBlissful silence quietened her mind as the pleasure ebbed and pain did not return. Pitifully gasping to catch her breath, Sirah opened her eyes and froze. She was on the ground, looking up at the three demons towering over her. They gazed down, their expressions mirroring Sirah's bewilderment. But where her face showed fear, theirs was fascination.\n\n\"The siren passed through the mist.\"\n\n\"Impossible. The block must have been for demons.\"\n\n\"Do your eyes lie, brother? It threw her back before. She broke through where we failed.\"\n\n\"I knew it,\" Scarn said quietly, though his chest trembled with fresh, triumphant excitement. \"I knew you were special.\"\n\nSirah was in a terrible position of being too afraid to move, aware a flight attempt was pointless, but knowing it would be blind folly to remain idle and let them do their worst.\n\nTaking advantage of their shock, she summoned her instincts and in the blink of an eye, vanished in an exit that would have baffled a mortal. But not demons. They immediately gave chase, barrelling after her through Thoran's dark abode.\n\nThe underground was full of winding tunnels, interlocking and dividing in a confusing web of shadowed paths. The floor was smooth stone, the walls chiselled earth.\n\nSirah ran desperately, her feet barely touching the ground as she fled at great speed, her small wings vigorously fluttering to propel her movement. Unfortunately, they were not long enough to let her glide. But it would have made no difference.\n\nSirah was fast, but they were much faster. The demons followed behind at an easy pace, knowing she escaped in the opposite direction of safety, and was in fact delving deeper and deeper into Thoran's maze. For them, the chase was fun. It wouldn't be the first time they'd pursued a doomed prey till it succumbed to exhaustion.\n\nWhen Thoran pursued her, there were hiding places, trees and an abundance of twists and turns that gave Sirah a fighting chance. In a demon's lair, she had none. In her wake, the demons mused their discovery.\n\n\"I want her wings,\" Vertar panted, as they turned a particularly sharp corner.\n\n\"She is Thoran's,\" Plyon retorted with growing exasperation, eyeing Sirah's frantically blurred wings with longing. It was true that the fluid, pretty colours teased him to tear and taint them. \"She cannot be harmed. But she is not bound, so we can at least take our turn on her.\"\n\n\"I will decide if you have turns,\" Scarn smoothly overrode their discussion, hardly exerted. \"But her wings are not to be touched. I do not want her essence tarnished by a resurrection.\"\n\n\"Oh, do you claim her for yourself?\" Plyon snarled, his suspicions about Scarn's contempt for Thoran confirmed. \"Perhaps you'll bind her for your mate, too?\" he added sarcastically.\n\n\"Perhaps I will.\"\n\nScarn's dark eyes glowed as Plyon's flippant retort took hold of his mind. He would be the envy of all demons, and enjoy stealing something precious from Thoran. The satisfaction of owning a mythical female that Thoran carefully selected for a mate, and flouting her under his very nose whenever possible, presented the theft with increasing appeal. Scarn could excruciatingly taunt the arrogant bastard for all eternity, whilst enjoying the nymph at his leisure.\n\nHe pictured himself the master of a rare creature, a delicious, unknown being that roused his desire like no other. Scarn wondered the extent of her abilities, and what he might achieve by them...\n\nScarn's imagination took him to a first exquisite moment of burying himself inside the nymph, and feeling her tight, virginal walls squeeze him to release. The idea created a thrill within him beyond anything he could remember. It was a thrill of an anticipatory conquest that made his prior existence of seduction, rape and cruelty seem repetitive and mundane.\n\nAnd just like that, the fleeting thought solidified to a firm intention. He was going to trap the creature and bind her to him, before Thoran could."
    ],
    "authorname": "Bellie444",
    "tags": [
        "captive",
        "nymph",
        "demon",
        "prisoner",
        "lust",
        "romance",
        "trapped",
        "romantic",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/captured-ch-03-5"
}