{
    "title": "Adventure of the Incidental Ogle",
    "pages": [
        "Taking a long, lingering look can have surprising results...\n\nAuthor's note: This is my entry for the 2019 Nude Day contest, mostly because the next installment of 'One Prince' isn't ready, yet. This is intended as a fun little story of no great social import. I hope you read and enjoy this bit of Fantasy with a side of Willing Suspension of Disbelief. Also, regardless of the contest, voting and constructive comments are how I learn how well I'm doing entertaining you, the Reader. Onwards!\n\n*~*~*~*~*\n\nShe was lying on the beach blanket, masturbating. Granted, there weren't that many people around, since her part of the beach had a rocky point sticking out into the lake. Most everybody was a good hundred yards away or more to the south, families with kids, singles young and old, playing in the sandy shallows.\n\nThe only reason I saw her was because I was walking the beach for exercise. She was probably late twenties to early thirties, and she had a killer bod. Even with gravity pulling her tits down and to the sides, she was still stacked. And her arms lay across firm, toned abs, her hands resting on her mons while she diddled herself.\n\nShe was breathing hard with her eyes closed, moaning softly and writhing all over the flat rock that formed her sunbathing spot. And I was getting an instant hard-on.\n\nI will admit it. I am a voyeur and a letch. I stopped to watch. And to record it on my phone as I walked up to her. My timing must have been excellent. I was about six feet away with a beautifully framed video of her doing herself when she exploded.\n\n\"Oh, fuck! YES!!!\" She stiffened for a couple of seconds, then convulsed several times in what was obviously orgasmic bliss. I waited until she calmed down a bit.\n\n\"Thank you,\" I told her as I watched her, framed in the video display. Her eyes snapped open and she sat bolt upright, glaring at me. She didn't even try to cover up.\n\n\"What the fuck do you think you're doing, pervert?!?!\" she yelled at me. A reasonable question.\n\n\"I'm preserving a delicious memory that will be wonderful masturbatory material for later,\" I told her, \"and thanking you for an amazing performance. And I thought you should know, there's another group of hikers coming along behind me, three minutes, maybe four. Good day, ma'am.\" I turned to leave.\n\n\"Hey! What's your name, asshole?\" she demanded as she grabbed a beach robe and slipped it on.\n\n\"I'm sorry...\" I paused and looked back. \"Do I look stupid today? I really did try to wash it off before I came to the beach...\" I turned to leave again, but not before catching her trying to suppress the smile.\n\n\"No, you look like a dirty old man pervert who probably won't get any use out of that video because you're too fucking old to get it up!\" she told me. I sighed. I get that, a lot.\n\nI am a 65-year-old weather-beaten male who looks older than I am, but whose testosterone has not deserted him, as has happened to a number of my friends. The ones that are still alive, that is. I wear very loose khaki shorts and a loose tropical shirt to the beach for a simple reason... when I get hard watching the hard-bodies, the tenting doesn't show as much.\n\nI slipped my phone in my pocket, turned back to the woman and dropped my pants. Oh, yes... I don't wear underwear. Too confining. Her eyes locked on to my genitals like targeting radar.\n\n\"Oh!...\" It was all she said, but I knew I'd made my point. The video of her was going to make great masturbatory material later. At least she had the good graces to compliment me by continuing to stare at my bobbing erection.\n\n\"If I may ask a personal question,\" I began, continuing to expose myself to her and acutely aware that I had about a minute before the hiking group coming up on us would be in sight of me, \"why would an absolutely gorgeous woman like you, albeit with an attitude, be pleasuring herself out here on the open beach, instead of being entangled with some special man, or woman, of your choice?\"\n\nShe looked at me without saying a word, and I am sure she was just as aware of the group approaching us. She grabbed her purse and started fumbling in it. I waited just a bit, then sighed and started to pull up my shorts.\n\n\"Hey!\" she called out, and I looked up at her. Click! That bogus shutter sound on her phone as she took a picture of me with my pants down and my rather hefty hard-on sticking out like a flagpole. \"So I can identify you in the police lineup,\" she commented with a smirk.\n\n\"Should be easy,\" I nodded, with a slight smile, and fastened my shorts. Again, I turned to walk away.\n\n\"Hey!\" she called again, and when I looked, she was holding out a piece of paper. I took the couple of steps needed to reach it and took the opportunity to survey her body. It wasn't helping me go soft.\n\nShe had handed me a piece of an envelope on which she had scrawled \"Anne\" and a phone number.\n\n\"Just in case you want an actual answer to your question,\" she told me, then got up and gathered her purse and towel, and headed over the rocks towards the trees and what I presumed would be the lot where she parked her car. I watched those luscious hips swaying away from me and gave a brief thought to what calling her might entail. Then I stuffed the scrap of paper in my shorts and headed on up the beach.\n\n* * * * *\n\nDinner was half-backed Dungeness crab, a veggie-rice pilaf and a carafe of Chenin Blanc. Tony knew exactly how to prepare the crab to my liking, which is why I kept coming back to his place. Now I was relaxing over my wine and musing on the day's events.\n\nAfter my encounter with Anne, presuming that was her real name, I had finished my walk ending up back at the family section of the beach and the lot where I'd parked my car. I retrieved some chilled juice from my trunk and then hung around, people watching until sunset. I really do love the sunsets over the lake.\n\nI tossed a mental coin and decided to head back to my place, to change clothes before heading out to dinner. This was Friday night and it was a weekend habit of mine to go people-watching in town. I'm comfortably retired and can do whatever I want, but I've found a certain routine amuses me, so I generally stick to it. Watching people and speculating on their histories is one of them. Writing fictional accounts based on my musings is another.\n\nMy \"place\" is my vacation-turned-retirement home on the shores of the lake, about 15 minutes north of the town and the public beach. About 800 shore-feet, and from the lake to the highway which averages 400 feet deep, mostly evergreen and birch woods with some oak, maple and elm thrown in for fall color. Just about 7 acres of heaven, from my point of view. I inherited it from my father and grandfather, who had built it in the early 1950's. It was ahead of its time, but has had some technological upgrades since then. It is simple, not pretentious.\n\nIt is the place I chose for my retirement. I'd done 20 years in the Navy, 20 working for the CIA and 5 as a private contractor. After that, I figured I'd earned the right to call it quits. Along the way, I'd gotten married to Wife One, Betty, had a kid, gotten divorced, gotten remarried to Wife Two, Julie, gotten two more kids, got my Widower Card when Julie died from cancer, and finally retired.\n\nThese days I liked to keep my hand into a wide range of hobbies. Sailing, diving, automotives (which includes bikes, cars and trucks), hunting, fishing, woodworking, music and sex. Especially sex. Sex had replaced, most agreeably, the contact sports I'd loved.\n\nIt's a knock on our culture that the only \"old guys\" that are deemed sexy are the ones with a seven-figure income or a lot of screen time. Especially if the woman is under thirty. Sean Connery and Patrick Stewart may rank high on their lists, but Jason Smeltnish doesn't. Never heard of Jason? Neither has anyone else. He's an 82-year-old veteran whose paperwork keeps getting screwed up by the VA.\n\nIn any case, in the pursuit of sex, I'd taken to ogling as a precursor. And the beach was a great place to ogle. There was a wide range of bikinis there, from Very Young to Well Aged. If I was lucky, there would be women there who liked to be ogled, and flirted with, and dated, and eventually bedded. Currently, I wasn't so lucky.\n\nMy two Friends With Benefits for the last couple of years had left town. Myrtle had gone to live with her older sister and help her out after a nasty illness. No idea when she'd be back. Jasmine had left to go stay with her daughter, who'd just had her third child and needed some help running roughshod over the others. No idea when she'd be back, either.\n\nSo I would occasionally entertain myself by ogling the women at the beach and having the occasional dinner at Tony's, and ogling the women there. It generally kept me out of trouble. Which is why I'd decided to come to Tony's tonight.\n\n* * * * *\n\nI saw Anne enter the restaurant and the hostess direct her to a small table near the front. Dining alone, I thought, then motioned my usual waitress over.\n\n\"Suzanne, do you see that woman just being seated?\" I asked and she nodded. \"Whatever she orders, give me the check. I'm covering it. Don't tell her it's on me or point me out or anything. Okay?\"\n\n\"Sure, Mr. Stevens,\" she smiled slightly, \"but you sure do have a strange way of picking up women...\"\n\n\"Now you be careful with that mouth, young lady,\" I told her with a smile, \"or I might have to put you over my knee.\"\n\n\"Promises, promises,\" she quipped, then moved off to handle her other customers. I just sat in my booth in the back, my favorite for people-watching. And now, for Anne-watching.\n\nWhen most people look around a room, they look in the brighter lit spots, and where there's more traffic, and so forth. Not so much in the corners or dimly lit areas. Or ones partially blocked by the busboy's station. Anne looked around, as I had expected. She didn't see me, as I had hoped. I saw that she ordered a Chef's Salad and apparently iced tea to go with it. Tony makes a mean house dressing... the kind that takes an extra 20 minutes' workout to burn it off. Anne appeared willing to do the extra minutes.\n\nWhen she asked for her check, Suzanne went and got it, and brought it to me. I paid it and the receipt for the meal went to Anne, who appeared shocked and started looking around. I made myself as obscure as possible behind the busboys and it appeared she didn't notice me. So far, so good. I paid my bill and waited, finishing my wine and waiting for Anne to leave. When she did, I gave her a reasonable head start, then ambled up to the front of the restaurant, where I could see the parking lot.\n\nI half expected her to lie in wait, to see who was stalking her. In fact, she did -- just beyond the edge of the porch, where the steps went down to the lot. From where I was, I could see her and she couldn't see me. Even more perfect. I waited until she gave up and headed for her car, then followed along behind until I found out which one was hers. I noted the license plate number, then moved -- unnoticed, I hoped -- over to my car and got in.\n\nWhen she left, I tailed her. She wasn't being careful, which made it easy on me. The town isn't large and if she wasn't going home, there were only a couple places she might go, and Margie's Emporium was one of them, and was in fact the place she picked. Margie is my cousin-in-law, or whatever you'd call it. She's my first cousin Ben's wife. Anyway, while Anne was browsing, I slipped inside and pulled Margie into a private conversation.\n\n\"Whatever she buys,\" I told Margie, \"tell her it's paid for, then put it on my bill. Leave my name out of it, okay?\"\n\n\"Jack, are you trying to get laid again?\" was Margie's initial response. To my look, she added, \"okay, okay, I know... 'this one is special'... fine. Whatever she buys, goes on your tab.\"\n\n\"Thank you, luv,\" I told her and kissed her forehead. \"I'm not going to screw around with her very much longer, I promise. I just want today to be memorable.\"\n\n\"Oh, it'll be memorable, alright,\" Margie snickered. \"I just want to be there when she finds out it's you.\"\n\nI suddenly became suspicious. \"Why?\" I asked, in my best suspicious voice.\n\n\"You know who that is, right?\" was Margie's response.\n\n\"No...\" I got that uneasy feeling that it would definitely be in my best interests to know who she was.\n\n\"That's Anne Richards, widow of Lawrence Richards,\" Margie told me and I started to get a knot in my gut. I definitely knew the name. Never had a face to go with it. \"Ex-Special Forces, then trophy wife, now rich widow in her own right,\" Margie went on. \"She is not going to take kindly to being fucked with.\"\n\n\"Okay...\" I let go the breath I was holding. \"Do the bill-me thing anyway and don't let her know it's me, okay? And do you happen to have a home address for her?\"\n\n\"Jack, please tell me you're not going to do anything illegal, right?\" Margie had reason to be suspicious, I'll admit. \"Or stupid?\"\n\n\"Nope, I won't do anything illegal,\" I crossed my heart. \"I won't even go near the place.\"\n\nShe gave me the hairy eyeball on that one, but got me the address anyway. Once I got it, I snuck out and drove over to the mortuary. John, the mortician, was also the town florist. I ordered a dozen peach roses and one white one, and had them delivered to Anne's address with a note.\n\n\"Thanks for a wonderful day,\" I put in the note. \"I hope you enjoyed it as much as I did.\" I signed it \"J\".\n\nThen I drove on home, satisfied with my day's work of wreaking havoc, sowing doubt and confusion and generally just enjoying myself. My phone didn't ring until 10pm. It was John.\n\n\"I know you said to keep it anonymous,\" he told me in a hurried voice. \"But Jesus, Jack! Anne Richards just called -- my home number, Jack -- and wanted to know who ordered the flowers! She is not someone to mess with, Jack, trust me... she can be really intimidating. I told her I wasn't sure. Just, some guy comes in off the street and orders the flowers, pays cash and leaves. She gave me your description, Jack! She asked if it was you. I told her maybe... the guy she described could have been the guy that ordered the flowers. But I didn't let on to knowing you, Jack. You better watch yourself, dude... she isn't one to take 'no' for an answer!\"\n\n\"I hear you, John, and thanks for the call,\" I told him. \"She's going to figure it out pretty soon, I'm sure. It's just a friendly little allurement. If she puts my name to the description, you don't have to deny it. You're cool. And thanks again.\"\n\n\"Okay, Jack, well... you just watch yourself, hear?\" John was one of my longer-time friends in the town.\n\n\"Sure, John, I will. You have a great night.\"\n\nWe rang off and I thought about it for awhile. I decided to walk the beach again tomorrow. She might be there, she might not. I needed the exercise, regardless.\n\n* * * * *\n\nShe was there. Gloriously nude, stretched out on her bit of flat rock to catch the midday sun. Little beads of moisture breaking loose and running down her curves in rivulets. Absolutely tantalizing.\n\n\"Hello,\" she said as I drew near, before I got particularly close, and without opening her eyes. \"Back for more fapping material?\"\n\n\"Not really,\" I smiled. \"The video was good for a couple of orgasms. This is my midday Constitutional.\"\n\n\"Only a couple?\" she chided me. \"I'm disappointed. I would have thought I was worth more than a couple.\"\n\n\"Well, I didn't have the entire masturbatory scene on video,\" I temporized. \"Only the last little bit. And besides, it was a late night for a dirty old man pervert like me. I was a bit rushed.\"\n\n\"A late night sneaking around, paying widow's bills for them, Santa?\" she asked and we both knew she was fishing.\n\n\"Don't let the white beard and bit of a gut fool you,\" I told her. \"Actually, I'm only one of his helpers. I was up late working on a dollhouse.\"\n\n\"A dollhouse?\" Now she sounded intrigued.\n\n\"Yes, for my granddaughter. I want to have it done by her birthday.\" On the word granddaughter, Anne had struggled to sit up a bit, open her eyes and stare pointedly at my left hand.\n\n\"Granddaughter,\" she iterated. \"No wedding ring...\"\n\n\"Widower,\" I told her. \"I put it away the day after I buried her. It will go to my son when I'm gone. I don't want to bother you, Anne. I saw you sunning, beautiful as ever, and decided to say hello. I've the rest of my walk to do, so I'll get going.\"\n\n\"Where are you walking to?\" she asked, looking north along the shoreline.\n\n\"The old cannery ruins,\" I told her. \"That makes about a 5 mile round trip when I start back at the family beach. Anyway, I'll leave you to your sun-worship, Anne. Have a great day...\" I turned and started to walk away.\n\n\"Just a moment...\" and after a long pause, \"Jack!\" I stopped. She'd obviously been a busy girl herself.\n\n\"Stop here on your way back,\" she smiled, thinking she'd surprised me. \"I'd like to talk to you for a bit.\"\n\n\"As you wish, Ms. Richards,\" I told her with a bit of a smile and a nod, then turned and headed on up the beach. We were both obviously dancing around each other, I knew. I just didn't know the point to the dance. For me, it was being able to mess with her mind in nice ways. For her... I hadn't a clue.\n\nI spent the rest of the walk musing about the meaning of our dance, and her gravity-defying tits. She shaved her pussy, as well. And, I'm betting, legs, arms, armpits and maybe her face, for all I knew. She was beautiful and she knew it. Light auburn hair with red and reddish-gold streaks to her waist, tanning salon skin -- unless she spent the winters in the tropics on private property, which was a possibility -- crystal blue eyes that kind of had their own inner light, all on a frame that was 5'5\" or 5'6\" -- hard to tell in town, when she had on heels -- and I would guess 34-24-36. Probably a C, maybe a D.\n\nAnd she walked with a confidence a lot of women don't have. Maybe it was the Service, maybe the money. It didn't matter. She was hot and she knew it. She was a lot like a modern Rita Hayworth. I was starting to think she might be out of my league. Except, I've never been particularly good at knowing my place. Or staying there.\n\nShe was still there when I got back, but now she had on a tiny white bikini. Tiny, as in Band-Aids would have covered more. She was sitting up with a floppy hat shading her face as she worked her cell phone.\n\n\"Hi, Jack!\" she called out as I approached. \"Would you like something to drink?\"\n\n\"Hello, Anne,\" I answered as I moved to her rock. \"As long as drinking you in with my eyes doesn't count, then yes, please.\"\n\n\"You are so smooth, Mr. Stevens,\" she smiled as she fished out a bottle of cold lemonade from a cooler off to the side. \"A man of mystery who isn't all that easy to ferret out.\"\n\n\"Really?\" I answered, sitting down and accepting the drink. \"I didn't think I was the type to try to hide anything.\"\n\n\"Well, you gave three of my private investigators fits, trying to find out who you were and what kind of insidious game you were playing with my mind,\" she chuckled. \"They didn't think to ask the waitresses at the restaurant whether they knew who you were... with a picture suitably edited, of course. Thank goodness, I did.\"\n\n\"If I were you, I wouldn't pay them,\" I told her. \"They aren't particularly good at their jobs.\"\n\n\"No, they aren't,\" she agreed, still smiling. \"They did find out you have a long history with the Navy and the CIA. And private contracting. All that stink of government secrets could have a lot of interesting stories hidden in there.\"\n\nI dismissed it with a wave of my hand. \"A forty-five year job,\" I told her. \"I'm retired, now. A boring old nobody.\"\n\n\"Uh-huh,\" she agreed with about as much skepticism as you can pack into two syllables. \"That was a cute trick with the roses... and I have no idea how you knew I love peach roses! For all you laid out for me -- and it wasn't even a date! -- I'd like to return the favor. If you are willing, I'd like to invite you to dinner.\"",
        "\"Dinner?\" I asked. This was taking a twist I hadn't expected. I figured a nice thanks for the day would be about it. Now she was inviting me to dinner?\n\n\"Yes, dinner,\" she iterated, teasing. \"You know... the evening meal? Served around 6pm at my place? I'm sure you have the address, since you sent the flowers. You did send the flowers, didn't you?\"\n\n\"Yes, I did,\" I admitted. \"It seemed like a good way to say thanks for the entertainment.\"\n\n\"Oh, it was... it was,\" she told me. \"Long story, which you may hear someday. Shall we say tomorrow night? So you can work on your dollhouse tonight.\"\n\n\"That's very considerate,\" I nodded with a slight smile. \"My granddaughter will appreciate it.\"\n\n\"In which case,\" she told me, standing up, \"would you care to walk me to my car? I parked down in the main lot today.\"\n\n\"I'd be happy to,\" I smiled.\n\n\"Good. You can carry the cooler,\" she decided. I'm not sure I'd classify it as a setup, exactly...\n\nLawrence Richards was a well-known real estate mogul in the area, and had maintained a philanthropic public face which endeared him to quite a few charities. He had also amassed an impressive stock portfolio, and apparently a heavy interest in overseas investments because he'd been known to take extended trips to Europe, Africa and South America. His taste in mansions and trophy wives wasn't lacking, either.\n\nAfter he'd died from a sudden and unexpected heart attack, the much younger Anne -- thirty at the time, I had heard -- had been bombarded by suitors eager to cash in on the sizable estate. She wasn't having any of it. She became a partial recluse and was never seen in public in the company of a man. Even her chauffer was a woman. Mostly, she traveled solo. She couldn't have advertised \"I'm Not Interested!\" any better if she'd hired a skywriter and taken out infomercial time on all the local cable channels.\n\nSo seeing her walking down the beach with me turned a helluva lot of heads. Like Anne, I'm a sort of fixture, a part of the scenery, but well-known to only a small group of friends. The general populace doesn't know who I am, nor do they care and I like it like that. They knew who she was, though, and I could feel the tongues starting to wag. I tried to politely ignore the staring and comments.\n\nWhen we reached her car -- a very practical Audi Q7 -- she popped the back hatch for me and I put the cooler in. She stepped up to me as I was closing the lid.\n\n\"Thank you, kind sir,\" she told me with a not-so-quick peck on my cheek. \"I look forward to dinner.\" I'm sure I was looking shocked as she slid into the driver's seat and started the car.\n\n\"A girl has to do something to keep the people talking,\" she told me as she was backing out. \"I'd hate to become irrelevant.\" With a smile and a wave, she took off and I stood there feeling the touch of her lips on my cheek. A very large part of me wanted to get to know that woman a whole lot better.\n\n* * * * *\n\nI did spend the night working on the dollhouse, and most of the next day. I was close to finishing it and wanted to keep up the momentum. About noon I sent a text to the phone number Anne had given me, asking about dress for the evening. \"Casual... be comfortable\" is what I got back. I also spent some time on Google Maps.\n\nHer place is farther up the lakeshore from mine, and sits on a pretty large chunk of land. Almost 100 acres from what I could estimate. The main house was situated near the shore, as mine was, with a number of outbuildings. I could guess that at least one of them was a barn with paddocks around it. There was also a swimming pool and tennis court, and what was probably a putting green. Lawrence Richards had known how to live in style. And now it was Anne's.\n\nI knocked off and cleaned up in plenty of time to be at the gated entrance to her estate by 5:55pm. Dockers and a dress shirt would do, I'd decided. Now I was waiting for the tinny voice in the box to let me in.\n\nThe gate lurched into motion, sliding sideways, until I had enough clearance to drive through. I followed the road to the house, where I pulled around the plaza with the fountain and stopped near what I presumed were the front doors. Richards must have given his architect fits, because the house was a mishmash of everything from Neoclassical to Prairie School. And the inside turned out to add Rococo and a few others. Living there would have driven me nuts.\n\nAs soon as I pulled up, an attractive young woman in a sort of grey jumpsuit approached me.\n\n\"May I park your car, Mr. Stevens?\" she asked pleasantly, and I figured she must be the hired help. I usually don't trust valets, but here I figured why not? The car was out of my control once I went inside, anyway. I got out and gave her the keys.\n\n\"Through those doors, Mr. Stevens,\" she told me, pointing to the double doors I'd figured were the front entrance. \"Someone will assist you.\" I turned and walked to the house as she was getting in my car, and right into the main front foyer, designed to impress by opulence. To me, it just looked chaotic. I was looking at some of the fancy filigree when the second of the servantry appeared, this time in the form of another young woman, with long blonde hair, whereas the car jockey had been a brunette.\n\nShe had on the same grey jumpsuit, though, which I figured must be the uniform of the staff.\n\n\"Please follow me, Mr. Stevens,\" she greeted me. She waited to be sure I was going to follow her, then began leading me through the house. By the time we got to the veranda, I was convinced Richards had been schizophrenic. I counted no less than five different styles of architecture and interior decorating, none particularly compatible with each other. The servant opened a set of double doors leading out onto the balcony and stood aside.\n\nI nodded to her and said thanks, then walked on out. The view was stunning. Because the land fell away towards the shore, I was standing on what was essentially a third-floor deck, covered in the fashion of the open-air long galleries in New Orleans. To my left, the veranda extended to the end of the house, with a number of pieces of occasional furniture, mostly tables and chairs with a few couches, obviously intended for relaxing and quiet conversation. Ahead was a wonderful view of the lake, with coniferous and birch forest framing the view. And to my right was a long dining table, set with linens and fine china, and my hostess standing at the end.\n\n\"Mr. Stevens,\" she acknowledged after giving me a chance to take in the scenery. \"I am glad you came. Please join me.\" I did.\n\nI noted that she was wearing a long cloak, covering her to her neck, and she had her red mane up in a Gibson Girl style bun. Rather odd for a casual dinner, I thought. If she's trying to impress me, she already did, back on the beach.\n\nAs I got to the table, I noted two places set, one at the head and one to the right side of it.\n\n\"Please, sit,\" she asked me, indicating the place at the head. That, also, confused me. The head would have normally been reserved for the host or hostess. I did as she asked, though, and stood next to the chair, waiting for her. Simple manners. I was still standing when one of her servants arrived to help her off with the cloak.\n\nI should have been sitting.\n\nBeneath the cloak, her sole item of clothing was a very fancy, Egyptian-style necklace with four chains coming off of it... one to each nipple and two to her groin. I swallowed hard.\n\nShe stood there in her very radiant beauty and waited. I took the hint. I sat.\n\nAlmost immediately a servant appeared to assist her to sit, and the appetizer course arrived. It took about three seconds to figure out she intended to do a lot more than impress me. She was ensorcelling me. I was already stunned by her beauty. Now she was on to the seven-course meal.\n\n\"I hope you enjoy our menu, good sir,\" she told me. \"It is seldom that I have the opportunity to entertain a man of my own choosing. Particularly one with intelligence, humor and a... je ne sais quoi. Virilit\u00e9, perhaps?\"\n\nMy God, I'm being hunted, I thought. Let's see what kind of manners I can remember.\n\nThe Appetizer was a shrimp cocktail with Sauvignon blanc. And conversation was about the dollhouse. I forced myself to keep my eyes on hers and not on her magnificent chest.\n\nThe Soup was chicken and wild rice with a medium dry Riesling, and conversation was about my hobbies, in general, and my interest in sailing in particular. I was picking up subtle clues about her likes and dislikes during our talking, and was making copious mental notes for later.\n\nThe Salad was a small fruit and cheese salad with plain old sparkling water. Conversation was about my love of scuba diving... what kind, where, which wrecks, most memorable and so forth. I found out she liked to dive the Bahamas and Tahiti. That got filed for future reference, too.\n\nThe Palate Cleanser was a lime sorbet with Moscato d'Asti... an interesting combination I'd never had before. I realized I needed to slow down on the wine a bit. My thoughts were turning most impure. I gleaned from her that she liked parasailing and hang gliding. The only time I voluntarily jumped out of a perfectly good airplane was when I was being paid to do it. Same for cliffs or being dragged behind a boat.\n\nThe Fish course was Orange Roughy with a nice Chablis. She directed the conversation back to me and we discussed my love of things mechanical, like cars, and making things -- my woodworking, metal-smithing and other creative pursuits. I was getting hard thinking about my three loves... sex, guns and making things. And her mode of dress was getting harder and harder to ignore, especially when she would lean forward to make a point, or sit back with an excited smile on her lips and in her eyes.\n\nThe Meat course just about did me in. Tender venison Backstraps with a down-home Maple-Bourbon gravy, garlic mashed potatoes &amp; steamed veggies, served with a Pinot Noir. I was surprised at the venison until two things occurred to me. The first was that she was probing my boundaries, seeing if I had an objection to eating Bambi. The second was that it was her lead in to discussing my passion for hunting and fishing. It turned out she was an avid hunter and angler herself. Not for the last time, I started wondering if I was falling in love with this perfect woman.\n\nOr at least falling in Lust. Major lust. Major, you'd-better-get-it-under-control lust.\n\nDessert arrived and she put the capstone on Perfect. A Black Forest Torte served with Aussie Shiraz. And an open ended question about my other passions.\n\n\"So, Mr. Stevens,\" she asked. \"Are there other interests of yours that I've missed? You do realize, I want to know all about you.\" She had been addressing me as Mr. Stevens throughout the entire meal.\n\n\"Well, Mrs. Richards,\" I answered, also playing at staying with the surnames, \"I can only think of two more, and one is probably unfit for dinner conversation. The other is music.\"\n\n\"Music? Truly? Pray tell, what kind, Mr. Stevens?\" she smiled. \"I will admit, I would have a hard time guessing what might interest you.\"\n\n\"Everything except rap and the screaming stuff, like heavy metal, punk rock or industrial,\" I told her. \"Other than that, I love everything from Bach to the Beatles, Vivaldi to the Ventures, Prokofiev to Pink Floyd. I have certain favorites, like Hayden, Mussorgsky, Tchaikovsky and similar classical composers. But I also love Dire Straits, Eagles, Jackson Brown and Cream. So pretty much, take your pick.\"\n\nI could have sworn I saw her eyes dilate as I rattled off the music I like. And maybe even saw her nostrils flare. Music might be a way to this woman's... um... heart.\n\n\"So, Mr. Stevens,\" she eyed me coyly. \"Shall I guess at the taboo subject?\" I didn't miss her eagerness.\n\n\"I don't think there'd be much guessing involved, Mrs. Richards,\" I told her. \"I'm fairly certain you know.\"\n\n<br >\"So, Mr. Stevens,\" she smiled. \"What kind of sex do you like?\"\n\n\"Well, you see...\" I hesitated. \"That's a lot easier to explain by demonstrating than by talking about it. I don't consider myself much of a talker in that regard. I'm more of a doer.\"\n\n\"My thoughts exactly,\" she said softly, then arose. So I did, too, right with her. \"Will you take in the sunset with me, Mr. Stevens?\"\n\n\"I would be delighted,\" I told her, wondering what the hell was going on. But she didn't give me long to wonder because she held out her hand to me and I reflexively took it. She gently steered me in the direction of a couch down at the other end of the porch while her servants quickly and efficiently made dinner disappear, and then they did, too.\n\nShe stopped in front of the couch and then waited. I went to assist her to sit but she just shifted a bit to let me know she expected me to sit first. So I shrugged and did. She knelt beside my legs in a very servile attitude and continued her head game, whatever it was, that put her in the subordinate role and me in the dominant one, whether I wanted it or not. I kept my mouth shut and looked out over the water.\n\nShe was messing with my mind and doing a damned good job of it. She was my hostess and this was her house and her servantry, and yet she was treating me as if she were my slave. And provocatively dressed, or undressed, to play the part. Her beauty was only enhanced by the jewelry-and-nothing-else she was wearing. I was sporting a permanent erection, barely hidden by my trousers, and which was being politely ignored by the cause of it.\n\nSo here I was, sitting very comfortably on the veranda, taking in a rather spectacular sunset in deep reds, pinks, oranges and yellows, with my servant at my feet and... that's when the mint julep appeared in my hand, courtesy of one of the mostly invisible staff. Something in me just couldn't accept it. Nor leave it alone.\n\n\"Anne...\" I started, intentionally using her given name and resting my hand on her shoulder. She turned from her kneeling position to look up at me and my guts started twisting in knots. This was so fucking hot, and so taboo to my way of thinking. I needed to stay focused.\n\n\"Yes?\" she asked, her eyes wide and those brilliant blue crystals boring their way into my soul.\n\n\"Anne, I am one very confused man,\" I told her. She just continued to look up at me expectantly.\n\n\"Dinner was great,\" I made myself go on and not get lost in her eyes. \"And I love talking with you. There's a lot more to you that the fa\u00e7ade of a trophy wife would show. I really hope we'll see each other more often. But... I don't get the servant routine. Don't get me wrong, that outfit you're wearing is amazing. And incredibly exciting. Maybe too much so. In any case, you aren't my servant, and even if you were, I'm really uncomfortable with it. With the civil war going on in my brain between the civilized guy who tries to respect women appropriately and the primitive knuckle-dragger who thinks owning and using you for my own pleasure is a wonderful idea. So can you tell me, what's going on?\"\n\nShe didn't answer my question. She asked one of her own.\n\n\"Would you like to own me, and use me for your own pleasure?\" The knots in my guts started getting knots.\n\n\"Part of me would, yes,\" I answered honestly. \"But that's not the part I allow to have control. I'd really like us to be on an even keel. You know... keep parity between us. You're way out of my league and you know it. But that doesn't have to fuck up a friendship. Pardon my French.\"\n\nShe cocked her head and looked at me for several moments, with no discernible expression. Then she finally responded.\n\n\"I am not out of your league, Jack,\" she told me and I was relieved she'd dropped the formal Mr. Stevens. \"Would you like to know why I chose this attire for this evening?\"\n\nI sure as hell did! A simple \"yes\" would suffice, though, and did.\n\n\"This is the way Lawrence preferred to have dinner,\" she explained and I'll admit it surprised me. \"I wanted to see how you would react to it.\"\n\n\"He wanted you to be his slave?\" I know I sounded incredulous.\n\n\"Essentially, yes,\" she smiled slightly. \"In bed and out. He liked to use me as his 'closer'... he'd line up a deal with a client, and the client got to fuck me as part of signing on the dotted line. I like sex, Mr. Stevens, and most of his clients were a fun tumble. A few were more work than play. Rough was Lawrence's purview, though. His staff were all males, and they were rude, crude and obnoxious, and Lawrence didn't appear to give a shit. I only dressed like this for Lawrence, but that didn't stop the catcalling and comments, figuring I was just a glorified whore. Which is the first change I made after he died. I fired the lot of them and replaced them all with women who would respect me. I kept one man on board until I could complete the transition, and that was Lawrence's Chief of Security. He had actually been nice to me and I felt I could trust him to help me.\"\n\n\"Wow, is that fucked up,\" I mused. I'm not sure whether I meant to say it out loud.\n\n\"I thought so, too,\" she answered and I realized I'd actually said it. \"However...\" Her eyes took on a kind of brilliance I found fascinating. \"It has been incredibly fun to see how this role can give me power over a man. Specifically you. You are the first man to be invited to this house, or to see me as I am dressed, since Lawrence died. You, Jack, intrigue me that much.\"\n\nI consider myself fairly sophisticated. Or at least, I can be when the situation requires \"unflappable.\" But I was currently very flapped. Her game had gotten to me and she had me mesmerized, and I needed to get some control back, so I could at least be a gentleman.\n\n\"May I join you on the couch, Sir?\" she asked.\n\n\"Um, sure, why not?\" I managed to answer. \"It's your house. You can do whatever you want. Why would you even ask?\"\n\n\"Because I'm enjoying the role-play,\" she smiled, slowly standing up and damn near making my cock rip my britches. Standing over me, wearing nothing but the jewelry, she was beyond awesome. And regardless of her opinion, she was way out of my league. She moved to sit down beside me.\n\nI made sure to make some room and she took my hand as she sat, then kept up the surprises by curling her feet up onto the couch and leaning her head into my shoulder, keeping hold of my hand.\n\nI decided to risk it. \"If you don't mind my asking,\" I eased into it, \"how did you get hooked up with such a POS, anyway?\"\n\nShe gave me a wry smile before answering.\n\n\"I met Lawrence very soon after I left the Service,\" she told me. \"He courted me with a globetrotting whirlwind seduction, carefully hiding the darker side of things until after we were married. I was still fairly young and na\u00efve, a swept away by the lifestyle. It didn't take long after we were married to figure out what my role was supposed to be. At that point, I was committed. I take vows seriously, including marital ones, Jack. I was resigned to the long haul. Then his heart did me a huge favor. And now...\n\n\"I haven't felt this comfortable, or excited, in a very long time,\" she told me as she nestled into me. \"I've been missing sex with a man... kind of easing my way back into the water. I like you a lot. You intrigue and attract me. I'd like to know a lot more about you.\"\n\nI took a long pull on my mint julep. I was going to need the bourbon's assistance.\n\n\"All you have to do is ask,\" I told her. \"I don't think I have any deep, dark secrets to keep from you. I know you were Special Forces, so I know you understand Classified. Outside that, what would you like to know?\" I took another pull on my drink.\n\n\"Would you like to fuck?\"\n\nI damn near choked. So much for my sophistication. \"Um...\" was my less than elegant response.",
        "\"I hope there isn't a conflict there,\" she added before I could recover. \"My background check on you didn't indicate any committed relationship at the moment. Certainly no remarriage since your wife died. If I'm crossing some kind of boundary, just let me know. I don't intend to cause problems for you.\"\n\n\"No, no conflict...\" I managed to get out. \"It's just, um... I guess I'm not all that used to being hunted... by a woman... for sex.\"\n\nShe laughed. It was delightful. I was almost embarrassed, true, but I'd rolled with worse in the past and wasn't about to get self-conscious now.\n\n\"Jack, you've been nothing but an absolute gentleman this evening,\" she told me, looking up from my shoulder with a smile. \"You've been discreet and thoughtful, attentive to more than just my tits, very in control of your manners and avoiding all suggestion of impropriety. No boorish behavior at all. Which turns me on like you wouldn't believe. The question is, how much of your well-controlled animal do you let out in the bedroom?\"\n\n\"How much would you like?\" I thought it was a reasonable question. I didn't miss the catch in her breath.\n\n\"I doubt you would allow yourself to be as abusive as my previous owner,\" she said slowly, shifting to serious, \"but I do like it a bit rough. I also like gentle, and pretty much everything in between. How about you?\"\n\nI took a breath and let it out slowly.\n\n\"I guess if I had to characterize my preferences, I'd say I like gentle, building up to passionate -- not necessarily rough -- and that I kind of insist my partner be satisfied before I am,\" I told her. \"That approach has served me well in a number of relationships, and I see no reason to switch to Asshole now. I will say that I prefer a partner who is vocal... who communicates what she wants and doesn't mind giving directions if I could be pleasuring her better.\"\n\n\"There is a God,\" she muttered, looking away, but I caught it. Then she looked back to me with those hypnotic eyes. \"I would like you to fuck my brains out, Jack. Are you up for that?\"\n\n\"Here and now?\" I asked, looking around. \"I suppose...\"\n\nShe laughed again, then felt my crotch and the rather insistent hard-on I'd been keeping on a leash since first seeing her. I held very still and tried not to freak out.\n\n\"I do believe you mean it,\" she smiled. \"But, no... I was thinking elsewhere.\" She stood up. \"Come.\"\n\n\"You first,\" I quipped as I stood. \"I take a little longer.\"\n\nShe laughed again, took my hand and began leading me through the house. There wasn't another soul stirring that I could see. She led me up one floor and down a hallway to a huge bedroom suite. It took up maybe a quarter to a third of the end of the house, with floor to ceiling picture windows facing the beach and part of the woods, and its own porch, plus a fireplace, conversation pit, gigantic bed, and a hallway leading to what I presumed would be the closets, dressing area and bath.\n\nShe moved to the end of the bed, which had already been turned down, and turned to face me, raising her arms.\n\n\"Mr. Stevens,\" she asked. \"Would you care to undress me?\"\n\nCare to? I was almost foaming at the mouth wanting to... I really wanted to know if those were clamps or piercings. But I was going to sit on it and act the sophisticate if it killed me. I walked slowly up to her.\n\n\"Yes, ma'am, I do believe I would like to do that,\" I told her, reaching out and gently taking one of the chains that led to a breast. I traced it down to the ring at the end and realized it was a piercing.\n\nJumping to the Oh-My-Fucking-God conclusion, I followed one of the chains down to her labia majora. It was a piercing, too. And she had a small barbell piercing through her clitoral hood. \"Undressing her\" was going to require a bit of finesse. Going back to a nipple, I realized it would be easier to disconnect the chain than remove the ring, so I did. Same for the other nipple. Both stood out a mile as I inadvertently stimulated them while detaching the chains.\n\nWell, maybe not a mile, but you get the idea. Somewhere, I got a wild hair up my ass. After detaching the second nipple chain, I sucked the ring and its attached nipple into my mouth and started flicking the ring with my tongue. To say I got a reaction would be severe understatement.\n\n\"Oh, my God! Jack! Oh, fuck!!!...\" Apparently I was doing something right. I felt her starting to tremble a little, so with one last tug of my mouth, I let go and switched to the other nipple. And got a similar reaction.\n\n\"Oh, Jack... oh, God, you're driving me crazy! Where did you learn to do that? Oh...\"\n\n\"Physics, biology and imagination,\" I told her, taking my mouth off long enough to answer, then going back to sucking and licking.\n\n\"She must have been one hell of a Science teacher,\" she told me, right before another long, loud moan. As she moaned and quivered, I realized I still needed to take off the other two chains. The ones attached to her pussy lips. Letting go of her tit and going down on my knees seemed the appropriate thing to do.\n\nShe just stood there trembling as I reached out to detach the first of the two, and got yet another surprise. As soon as I moved the chain, and consequently her labia, a gush of her essence leaked out and ran down her leg. She had to be sopping wet.\n\nI took a chance. I reached a finger between her lips and gently probed. I got definite confirmation that she was hot, wet, swollen and sensitive. As I slipped my finger just inside her vestibule, she put her hands on my shoulders, shook hard for a moment and whispered, \"Oh, God... cumming...\" while I felt her pulse against my finger. I still hadn't gotten the chains off, so I didn't want to screw up and hurt anything. I eased away and went back to detaching the chains. By the time I got the second one off, she was trembling.\n\n\"I believe, Mrs. Richards,\" I told her, dropping back into the formal, \"that you would be best served lying on the bed where you do not risk injury from falling. Turn around.\"\n\n\"Thank you, sir,\" she answered as she turned her back to me. I reached up to the clasp and undid the necklace, gently taking it from around her neck and setting it on a nearby chair. Now the only jewelry she had on were the piercings and the hairpins holding up her beautiful mane. One by one, I eased them out, and her locks fell in cascades down her back.\n\nI was seriously thinking Goddess Territory ahead as her slightly curled tresses flowed over her perfect skin.\n\nI reached out and caressed her shoulder, tracing the line of her hair down her back and brushing the small of her back, ending up resting my hand on her hip. I don't think I could have avoided that simple touch if I wanted to... she was just that beautiful standing there with her back to me, and me completely mesmerized.\n\nI felt her shudder and heard her sigh as my hand transited her back to her hip, and I got a small glow of satisfaction that my touch was that acceptable to her. I was surprised, though, when she moved away from me, walking to the foot of the bed and then crawling up onto it, eventually lying down on her stomach in the middle. My brain went into overdrive trying to figure out what an appropriate next move for me would be.\n\nIf she was doing the kinds of things \"Lawrence\", whom I was now beginning to think of as \"Asshole\", had wanted her to do -- to be meek and subservient and available for his pleasure -- then anything I did that seemed to be using her would be a bad thing, I thought. But if I kept too much distance, she might think I wasn't interested, or maybe apprehensive... and therefore not what she was looking for.\n\nI've taken some pretty direct approaches at times in my life, but I can also do subtle if I put my mind to it. I needed to put my mind to it. I moved up alongside the bed, sitting on it so I could reach her but not climbing in. I went ahead and touched her again, gently, starting at her shoulder and following her hair down her back. Again, she shuddered and moaned slightly as my hand crossed the small of her back. That's when I noticed the very thin white lines... and I knew exactly what they were.\n\nI was really starting to wish the Asshole didn't die painlessly.\n\nI switched to the backs of her calves and gently massaged them, moving slowly up to her knees and thighs, and eventually to her perfect ass. Truth be told, in addition to wanting to give her pleasurable touch, I was looking for more scarring. I found it -- very, very light and only noticeable because of her tan. And not a lot. But enough. Enough to piss me off.\n\nI stood up and pulled off my shirt, shoes, socks and pants. I was thanking the Powers That Be that I'd remembered to put on a pair of boxers. I usually didn't bother. Now, though, it allowed me a veil of separation as I moved onto the bed, straddling her waist as I moved her hair aside and began to slowly and methodically massage her wonderful body.\n\nMy cock refused to stay detached but the boxers at least kept him out of the way. I started with her neck and shoulders and did my damnedest to loosen and relax her muscles, gently but firmly, without it going sexual. I wanted it to go sexual, believe me, but I was going to stay the gentleman if it killed me.\n\nThat's funny, I realized. I thought that before...\n\nI worked at staying the gentleman as I massaged a lot of stress out of that goddess' body. And I succeeded. I made it down her shoulders and back, her waist, thighs and butt, her calves and her feet. And the more I worked loose her tight muscles, the more I was getting positive feedback in the way of moans and shivers.\n\nAt one point, when I was working on her thighs, she spread them, giving me unrestricted access to her most intimate parts. I studiously avoided that trap. I kept going down her legs, but not without first noticing that her essence was soaking the bed beneath her.\n\nGood, I thought. Some non-threatening, practical hedonism will probably profit us both...\n\nI spent a particularly long time on her feet, paying attention to every nuance I could, heeding Heinlein's admonition to Rub Her Feet. At last, it was time to take the next leap.\n\n\"Mrs. Richards, if you would care to turn over, I will continue to pleasure you,\" I suggested. The initial response I got was a heartfelt moan that bloody well reverberated throughout the room.\n\n\"Jesus Christ, Jack!\" she groaned as she tried to move. \"It's Anne! And I don't know if I can turn over! You've turned me into Jell-o.\"\n\n\"Then allow me,\" I told her as I knelt next to her on the bed. I slid one arm under her, going above her breasts, and one going under her hips. I may be sixty-five, but I can still dead-lift a helluva lot more than she weighed, believe me. I put her at 120 lbs. tops, at a guess. She actually shrieked a little as I lifted her and tried to find something to hold on to with her hands, but the only thing to grab was me. I lifted her, rolled her and deposited on the bed, tits side up, without any ungentlemanly touching.\n\nI think I was frustrating her. The look on her face let me know she'd noticed my flagpole. But she didn't say anything. She just sighed.\n\nIn any case, I started in on her feet and began working my way up her front side. I took my time and stayed away from her pussy and tits. A certain Machiavellian side of me realized that if I drew out the massage, our scrumptious dinner would have had plenty of time to settle. Continuous belching or acid reflux while making love is inelegant.\n\nI made sure to avoid her pussy and her tits until I had everything else reduced to mush. She was so relaxed, I thought I might have put her to sleep. Until I caressed her breast, that is. A very light stroking along the side of her fullness, continuing on up to the nipple and ever so slightly squeezing it between thumb and forefinger, got a sharp intake of breath, a long sigh and a muttered \"finally...\"\n\nSo I tried it on the other side. And got what I could best describe as a low purr. Figuring I was on a roll, I lightly stroked my way down her fantastic belly to her mons and lightly caressed that, as well. Another purr and some hip rolling told me I was on the right track. Next was gently making circular petting motions around, but not on, her clit. Her response to that was a louder moan and spreading her legs.\n\nWhich I avoided, continuing the light circular massage for a bit before stroking my way back up to her luscious breasts and playing with them. When I had both nipples so turgid it seemed they would explode, I'd pet my way back down to her mons and indirectly go after her clit until it appeared to be its turn to erupt. Then I'd go back to her breasts, and continued going back and forth until she was writhing beneath my hands like she was plugged into the wall outlet. I was also slowly figuring out how to use the piercings as a kinky marital aid.\n\nFinally, she'd had enough. When my hand was on one of her breasts, she grabbed it, threw her other hand over my neck and pulled me down into a very passionate kiss... one I tried to return before I got completely lost in it. I'm not certain she was trying to suck out my immortal soul, but she was having that effect. Then just as suddenly, she grabbed me by my hair and ears and pushed me back, looking up at me with those incredible eyes.\n\n\"Are you going to fuck me or not?!?!\" she demanded. She looked rather intimidating with her red mane swirling around her blazing eyes.\n\n\"I don't know...\" I answered honestly.\n\n\"What???\" She seemed astounded. \"What do you mean? Why?\"\n\n\"Well, it seems like that's what every other asshole has done, particularly your late husband, so I thought I might try something different,\" I explained. And it was partly true. I didn't want her reacting to me like the other males who had used and abused her.\n\n\"Aaarrrgghhh!\" she cried out in obvious frustration, throwing herself back into the bed and not letting go of my ears. I'll admit, it smarted.\n\n\"Jack!\" she snapped, and I figured I'd better pay attention. \"Don't you get it? I want you to fuck my brains out!\" She finally let go of my ears.\n\n\"The 'every other asshole' you're talking about just took what they wanted from me!\" she went on. \"They were seldom nice about it. They didn't give a rat's ass whether I was getting any pleasure out of it. They just did what they bloody well pleased! And now that I've finally found a guy who doesn't want to just use me, he doesn't want to fuck me, either???\n\n\"What is with you??? It's been damn near three years since I've felt a man's touch, let alone wanted him so badly I'm soaking the mattress! Is there something wrong with me, that you're not inter-\"\n\nThat's as far as I let her get before I shut her up by kissing her with everything I had. Thank God she melted into me. For me, kissing her was a religious experience. Second on my all time favorites list. It would be damned difficult to dislodge Julie from the Number One spot. But Julie was gone and Anne was here and she was taking over every part of my consciousness. I was rock hard and pressed against her belly and trying my best not to be just another asshole.\n\nShe broke the kiss.\n\n\"What is it, Jack?\" she asked, rather than demanded. \"What's wrong?\"\n\n\"Nothing,\" I told her. \"Not a damn thing. You are an incredibly sexy woman, a walking wet dream, and I would love nothing better that to make slow, sweet love with you all night long.\"\n\n\"But...\" she prompted.\n\n\"Not but,\" I corrected her. \"And. And I'm not going to take from you like the other assholes. It's your choice, not mine.\" I eased off of her and lay back. \"If you want it, you're going to have to take it. Your choice to take what you want.\" I paused for a moment before getting a silly grin on my face. \"With my complete cooperation, of course.\"\n\nShe smiled back and I could see the wheels turning in her head. She obviously made up her mind and raised up next to me, leaning over and pushing me down on my back. She was looking into my eyes when she ran her hand over my chest and I could feel her exploring me as if it were a novel experience. Her eyes, though, were hypnotizing me, like a cobra with a bird right before said bird becomes a meal. Yeah, I know it doesn't really work like that, but that's the myth and it sure as hell applied to me right at that moment.\n\nWhen her hand got to my boxers -- now severely tenting -- she tugged slightly on them and I took that as an indication she wanted them off. I lifted my hips and helped her slide them down and off.\n\n\"You know, I don't think I have a strap-on that big,\" she observed as she drifted her hand to my cock. I couldn't help the moan I let out as she circled me with her thumb and fingers and began slowly stroking me. I was definitely leaking precum. \"Actually, I don't think any of my dildos are this big. I wonder if it will fit?\"\n\nI was seriously contemplating her question and possible courses of action when, without warning, she struck. Or straddled, actually. She swung her leg over me, grabbed my rigid cock, aimed it at her pussy and sat down.\n\n\"Oh, GOD, you're big!\" she cried out. \"Oh, FUCK!...\" I did my best to hold still and keep my mouth shut. Difficult to do when every cell in my body was on fire from my cock being plunged into her velvet oven. Actually, more like a blast furnace. She was hot, and she was wet, and she was driving me crazy as she ground down onto me, getting herself stretched out.\n\nBut I'd meant what I'd said about it being her choice. I wasn't going to take that away from her.\n\nWife One -- Betty -- had taught me to take charge. She wasn't terribly adventurous and pretty much liked whatever I did, mostly because I was trying to figure out how to please her before I got off. Wife Two, though -- Julie -- had taught me to let her drive, most of the time. She liked being in charge and she never failed to pay attention to my needs and wants while pursuing her own. I figured this was more like a Wife Two situation. I was going to let Anne run the show.\n\n\"It is not like riding a bike,\" she informed me as she continued to rub her clit into my groin and keep me buried to the hilt in her wonderful pussy. \"It's like graduating to a motorcycle. A big motorcycle. Jesus...\" She didn't quit, though. She kept moving and sighing and moaning, and eventually I guess she was stretched out enough, because she started lifting, then sitting, then lifting, and so forth. Basically, fucking me. A nice, long, slow, intense fucking.\n\nAge has its advantages. Being able to last more than the time it takes to unzip is one of them. It had become a point of honor to me to see how many times we could get her off before she made me lose it. And she was going to make me cum. I'd have to have been a eunuch not to respond to her, and even then I'm not so sure. All I wanted to do was last long enough so that she was happy. I had no delusions about being able to satiate her once she got going. I'd settle for happy.\n\n\"Jesus, Jack... you've got me so filled up! You're bigger than most of Lawrence's clients, and a hell of a lot bigger than Asshole himself,\" she told me as she rode me. \"I hope you don't mind me just using you for a fuck toy for a while.\"\n\n\"Use away,\" I smiled. \"I live to service. Or serve. Or whatever it's supposed to be.\" The response I got was a big grin and an increase in her rhythm, really starting to pound down onto me then.\n\n\"Oh, fuck...\" she moaned, and I knew she was ramping up. \"I knew you'd be good when I saw your stiffy on the beach. I didn't realize you weren't completely hard...\" That's when I decided to become proactive.",
        "I reached up and took both her nipples in my thumbs and fingers, gently rolling and pulling on them.\n\n\"OH! FUCK! YES!!!\" She arched up and clamped down on me and moments later I felt one of the strongest cums from a woman I'd ever experienced. She was pulsing so hard on me it was almost painful. Almost. My balls pulled up and my ass clenched, and I wanted to cum in her so bad...\n\nBut one cum for her wasn't Mission Accomplished for me and I fought the intense urge to empty my load in her. It also made me realize I might be being stupid. I wasn't fixed.\n\n\"Anne...\" I asked as she started to calm down, the aftershocks wreaking havoc with my self-control. \"I'm not protected... are you?\"\n\n\"Mmm, God! That was good...\" she murmured, then realized what I'd asked. \"Hmm? Oh, yeah... protected. Mirena IUD. And I'm disease free. Or at least, I was until you skewered me. Are you good?\"\n\n\"Disease free as of six months ago,\" I told her. \"No partners since. And for the record, I didn't skewer you. You impaled yourself.\"\n\n\"Is it important?\" she asked, looking at me weirdly.\n\n\"To me it is,\" I nodded. \"This is about me helping you pleasure yourself. There's no way we undo all the damage in one glorious sexual romp. But I want you to be in charge. I want all of this to be your choice.\"\n\nShe sat quietly astride me, still gently rocking, as she mulled over my words. I was lightly stroking her sides and hips and ass.\n\n\"You're some kind of special, Jack,\" she finally decided. \"Guys don't act like you.\"\n\n\"Some do,\" I shrugged. \"You just haven't met them. Think like one of your SOCOM teammates' attitude was translated to the bedroom.\"\n\n\"Always got your back,\" she murmured. \"Is that what this is, Jack? A mission?\"\n\n\"Sort of,\" I admitted. \"Not for you, though. This is just a couple of days of fucking your brains out and getting caught up on all the pleasure you've been missing.\"\n\n\"A couple of days?\" she asked, and I wasn't sure if it was excitement or trepidation that made her pulse and breathing quicken.\n\n\"Well, however long you want,\" I amended. \"Except I have to have the dollhouse finished by next Thursday, and I've got about a half a day's work yet to do on it.\"\n\n\"The dollhouse,\" she smiled. \"You really are building a dollhouse for your granddaughter.\"\n\n\"Yep,\" I confirmed. \"One of my three pleasures... sex, guns...\"\n\n\"And making things,\" she finished for me. \"When it's done, allow me to buy some furniture to go in it.\"\n\n\"Why?\" I asked. Some of the twists and turns of her mind escaped me.\n\n\"Because you'll have earned it!\" she told me, starting to speed up her grinding again. And her hot, wet cunny hadn't allowed me any down time. I was right back up there with her. She kept saying \"oh, fuck!... oh, fuck!... oh, fuck!...\" on every bounce until she finally fell off into a stream of moaning and mewling as she approached her peak.\n\nThank God for being able to last longer. But it wasn't going to be much longer...\n\nShe tripped over again and damned near brought me off. I was really struggling to hold back. I figured I'd like her to get off one more time before I did, so I tried something different. I didn't give her much time to come down before I put my hand on her mons and started using my thumb to rub her clit.\n\nThat did it. In more ways than one. She went right back up into a crashing cum while I felt myself hitting that Point of No Return.\n\n\"Oh, fuck, Jack!\" she cried out. \"I'm going to fucking...\"\n\n\"Me, too!\" I interjected. \"Oh, fuck!...\"\n\n\"CUM!!!\" she announced as she blew over the top and I was right with her. I came so hard, everything in my groin was clamping down and on fire. I spent rope after rope into her hot, wet, cunny and it felt like it went on forever. She, too, kept pulsing and moaning as her pussy massaged me with wave after wave of orgasmic bliss.\n\nI have no idea how long we kept that up, but eventually she collapsed down on top of me, her face into my neck, her hips still rising and falling, fucking me. I dropped one hand to her ass and one across her shoulders and held on as the ecstasy slowly subsided.\n\nShe slowed down, too, finally coming to a stop with me still well seated within her.\n\n\"Oh, my God, Jack... that was awesome!\" she murmured into my neck. \"Thank you, thank you, thank you, THANK YOU!\"\n\n\"You are quite welcome, my Lady,\" I told her. \"Keep the customer satisfied, I always say.\"\n\n\"Customer?\" I could hear the challenge in her voice.\n\n\"Those who willingly take part of my services,\" I clarified, with a smile.\n\n\"Well, your servicing is just fine, thank you very much,\" she told me, raising up a bit. Enough so I couldn't resist the temptation to suck one of her nipple rings back into my mouth.\n\n\"Oh, FUCK! Jack...\" she almost exploded. \"Oh, please... don't start right yet... I'm wiped...\"\n\n\"Okay,\" I agreed, letting go of her tit. \"I'm rather done in, too. Just wanted you to know your pleasure is my business.\"\n\n\"Oh, you gave me the business alright,\" she smiled and her voice was like music, clich\u00e9 as that is.\n\nWe lay there, holding each other and letting our bodies calm down until I eventually fell out of her. She rolled off of me at that point, but stayed tucked up under my arm, her head on my chest.\n\n\"I have needed that for a very long time,\" she told my chest softly. \"You have no idea how good that felt.\"\n\n\"Oh, I think I have some idea,\" I told her. \"Not bad for Round One, though, huh?\"\n\n\"I hope this isn't a title fight,\" she moaned and I chuckled.\n\n\"Not up for fifteen Rounds?\" I asked.\n\n\"Not tonight,\" she told me. \"I need some recovery time. You stretched the hell out of me and I'm going to feel it when the endorphins wear off.\n\n\"Not that I'm complaining,\" she hurried to add. \"You're going to take some getting used to... and I have every intention of doing so.\"\n\n\"I hate to break the mood,\" I told her, suddenly realizing a problem, \"but with all that wine with dinner, I need a bathroom.\"\n\n\"Me, too,\" she giggled as she struggled to sit up and slide out of bed. \"This way...\"\n\nI followed her, figuring if she needed the toilet, I could use the shower. It turned out, I needn't have worried. The master bath was enormous, with a walk-in tub, a separate shower, a standard toilet and a urinal, a three-basin vanity, a huge walk-in closet and a bunch of other stuff I'm forgetting. She took the toilet, I took the urinal. When we'd finished, we walked on back to the bed and crawled in, me sitting up against the headboard, her curled up against me, holding me as I held her.\n\n\"So when do you have to go home?\" she asked as we lay there, lightly petting each other.\n\n\"Well, this is Sunday night,\" I mused. \"Maybe Wednesday morning?\"\n\nHer very audible sigh of delight was unmistakable.\n\n\"Then we have time to do each other over, and over, and over...\" she smiled. \"I like that. Do I need to have Greta wash your clothes each evening, or are you comfortable hanging around in a robe, provided by your hostess?\"\n\n\"A robe is fine,\" I shrugged. \"And don't sweat the laundry. I'll throw the clothes in the wash when I get home.\" She snuggled into me a little more and drifted her hand down to my flaccid cock.\n\nShe began playing with it as she asked, \"so, if you're a dirty old man pervert, how often can you get this bad boy up?\"\n\n\"Up, or off?\" I asked. To her confused look, I added, \"I can get back up within half an hour. It's usually one to two hours between orgasms. I've slowed down a bit from my youth.\"\n\n\"So, how big are you?\" she asked and I figured she was being serious.\n\n\"Somewhere shy of two-and-a-half hands,\" I told her, not being serious.\n\nShe gave me that C'mon, really? look and waited. \"About 9 long,\" I told her, \"I think. And maybe 6 in girth. I guess.\"\n\n\"Jesus, you sure feel bigger than that in my cunt, I'll tell you,\" she smiled. \"I thought I was getting fucked by a horse.\n\n\"But that's fine,\" she hurried on to assure me. \"You stretch me just fine, thank you. It'll be fantastic, once I've adjusted to you. Guess I'll have to hit the toy store, for something more your size.\"\n\nI took a chance and hoped I wasn't offending her. \"Aren't your Ladies in Waiting going to wonder, when you come back with a larger strap-on?\" I asked.\n\n\"Oh, they won't wonder...\" she smiled again. \"They'll know.\"\n\nAnd all this time, she'd kept playing with me and sure enough, I was coming up again.\n\n\"Can I have my way with him again?\" she asked softly, looking down at my cock.\n\n\"You can do whatever you like, my Lady,\" I told her. \"I am at your service...\"\n\n\"Oh, that sounds so good...\" she murmured and instigated losing the rest of the night to pure sexual hedonism.\n\n* * * * *\n\nI figure we got maybe two hours of sleep before being wakened by a servant bringing in a huge tray of breakfast. It all looked good to my groggy eyes, but most importantly, there was a big carafe of coffee. And a very beautiful naked lady next to me in the bed.\n\nShe struggled awake, not bothering to try to hide her nudity... or mine, when she got out of bed to head for the bathroom and took half the sheets with her, uncovering me. The servant -- Greta, I learned later -- simply didn't acknowledge anything, going about her business in a very businesslike way.\n\nGood for Anne, I thought as I grabbed a pillow and pulled it over me. She's got competent, professional staff. Who are probably all lesbians.\n\nThe allure of breakfast, set out on a small table near the windows, was too much. I looked around and didn't see my clothes, nor the robe she'd mentioned. Then I remembered robes in the closet in the bathroom. Taking a deep breath and letting it out, and deciding against embarrassment, I eased out of bed and headed for the bathroom, first to grab a robe and second to answer Nature's call.\n\nAnne was just finishing up and the two of us ended up walking out to breakfast together in the provided robes. The morning was glorious and I felt incredible, sitting to breakfast and looking out over the woods and beach and lake. We'd only gotten through Round Four last night, but it was more than enough to leave me sated. And her, which was the important thing.\n\nWe were discussing what we might want to do with the day, besides fucking our brains out, when Greta showed up again, this time with a letter for Anne. She took it and opened it as Greta left, scanning the contents in silence. She read through it twice more, each time looking more worried.\n\n\"What's going on?\" My curiosity wouldn't leave it alone. \"You look worried.\"\n\n\"Do you know Lester Porkus?\" she asked without looking up.\n\n\"You mean 'Pig' Porkus, the crime boss?\" I asked. She nodded.\n\n\"Well, he's into extortion and blackmail,\" I went on. \"Mostly protection rackets. Dabbles in gambling. Allegedly into money laundering for the bigger boys. Hasn't ever been caught with his hand in the till. Why?\"\n\n\"Apparently, Lawrence and he were business partners and he is now suggesting a terrible accident might happen if he does not receive the two million dollars worth of diamonds that Lawrence was supposedly acquiring for him. According to the letter, the money was paid upfront and the product never received. The tone of the letter suggests he thinks I've got them.\"\n\n\"Do you?\" I asked, thinking I knew the answer.\n\n\"No. I didn't know anything about this... transaction... of Lawrence's.\" Kind of what I figured.\n\n\"So what do you want to do?\"\n\n\"Eliminate the threat?\" she looked up at me with a suggestive half-smile. \"Before my place burns to the ground.\"\n\n\"Other than that,\" I probed. \"Something that doesn't involve 'Pig' reaching room temperature.\"\n\n\"Find the diamonds and give them to him?\" she proposed. \"But I wouldn't know where to start looking for them.\"\n\n\"Then I think we just figured out how we're going to spend the time we're not fucking our brains out.\" I was already trying to think of ways to find the missing diamonds, or money if the diamonds hadn't been acquired. And it involved a bunch of snooping and calling in favors from old friends.\n\n\"How about you start by answering Pig's letter?\" I asked. \"Tell him you didn't know about it but are willing to try to find them. Ask him how the money was advanced to Lawrence, so we have a place to start. Tell him you'll get back to him inside two weeks with whatever you can find out. That should placate him long enough for us to figure out what the hell Lawrence did with the money.\"\n\nShe looked at me kind of funny. \"Just a 45-year job, huh? And you're retired...\"\n\n\"Pretty much,\" I smiled. \"Would you like to fuck before, or after, I start making phone calls?\"\n\n\"Both?\" she smiled and we both chuckled.\n\n\"Can I get a nap, first?\" I asked. \"After breakfast? And more coffee? I seem to be slowing down in my old age.\"\n\n\"Slowing down, my ass,\" she told me. \"I haven't been fucked like that, ever. But yes, I think we'd both benefit from a bit more sleep. Then I'll write Porkus while you make your calls.\"\n\n\"No, wait...\" she corrected herself before I could. \"Then we'll fuck, then I'll write Porkus while you make your calls, then we'll fuck again.\"\n\n\"Sounds like a plan,\" I smiled as I poured us each another cup of coffee.\n\n* * * * *\n\nAnne was wonderfully insatiable.\n\nOkay, well, not exactly insatiable, but certainly very ready, willing and able most of the time. And part instigator, too. The word \"voracious\" came to mind. But honestly... none of my balling buddies since Julie died were as good as Anne. Not that they were bad -- they weren't. But Anne had a sixth sense about how to make me feel good that was beyond normal. It took me a while to figure out what she liked the most, but she was quite cooperative in teaching me.\n\nI was really, really getting hooked by this woman, and I saw absolutely nothing wrong with it.\n\nWe got our nap, then our fucking, then her writing Pig and me making calls, then our fucking, then a late lunch, then fucking, then a stroll on her beach, then fucking, then dinner... you get the idea.\n\nOn our stroll, I asked why, if she had such a wonderful private beach, did she choose to lay out on the rocky point by the public beach?\n\n\"Attention,\" she told me. \"I'm part exhibitionist. Or maybe I was trolling for a husband...\"\n\nThat brought me up short. The look on my face must have been priceless, because she couldn't help laughing at it.\n\n\"What?\" was my rather artless response while I wrapped my mind around the idea. \"Well, if you were trolling,\" I admitted, figuring now was as good a time as any, \"then you got me, hook, line and sinker. Even if I am in the wrong age category. You're a pretty amazing woman, Anne, and I like you very, very much.\"\n\n\"I'm glad you said that,\" she answered, and to my confused look, she explained, \"I'm glad you said like and not love. Love you can grow into and it can last forever, but like is how you tolerate someone day to day. It's what makes it possible to be together. And I like you, too, Jack. Very, very much.\n\n\"Do I dare ask what phone calls you made?\"\n\nI thought about that for a minute. One of my buddies was an ex-SEAL and a CIA operative, and he knew a hell of a lot about following the money. And clandestine diamond smuggling operations. I explained my problem and he told me to call him after Anne's letter got a reply. We'd figure out which way to go from there. He told me he might have to call one of his buddies in the FBI, if it turned out to be domestic.\n\nWhat I decided to tell Anne was, \"you can ask, but I'd rather you waited until Pig answers your letter and we have a starting place. My end of it is going to depend greatly on his end of it. And you might want to beef up your security, against 'accidents'...\"\n\n\"I already have,\" she told me, then looked around the beach. \"Damn! Wish I'd thought to bring a blanket. Fucking here would get sand in places only a proctologist could love.\" I nodded towards the water.\n\n\"Want to get wet?\" I asked, giving her my best lecherous smile. She was out of her clothes in three seconds flat, running into the waves.\n\n\"What are you waiting for?\" she called back to me. \"An engraved invitation?\"\n\nI laughed as I stripped off and chased after her. She was a damned good swimmer and she dragged out letting me chase her until she caught me. We didn't really try to fuck in the water, but it was great for mauling each other, relieved of our weight and being pushed around by the waves. The kissing and petting was hot and heavy, and it kept an edge on an otherwise perfect day.\n\n* * * * *\n\nThe next afternoon, after a morning of lazy fucking and walking the beach naked, and energetic fucking and lunch naked, and... well, actually the FedEx arrived during lunch.\n\n\"It's from Mr. Porkus,\" she told me as she opened it.\n\n\"That didn't take long,\" I nodded, surprised. \"What's he say?\"\n\n\"He'll take me up on my offer,\" she told me. \"And there's some money transfer info in here. A Cayman Islands bank... or wait, Colombia? And Algeria... and South Africa. Weird. Somebody moved a lot of cash around. And a note -- 'the clock is ticking'. Gee, how melodramatic.\"\n\n\"Can you scan me a copy?\" I asked. \"I need to send it to a friend.\"\n\n\"A friend?\" Skeptical would be a good characterization.\n\n\"Yeah, a friend,\" I iterated. \"He's good at chasing money trails.\"\n\n\"Not a problem,\" she nodded and called for Greta. I passed the information on to my buddy and went back to pleasing Anne any which way I could. I really was going to have to go finish that dollhouse soon.\n\n* * * * *\n\nIt only took Chuck a week to get back to me. Enough time that Kerry got her dollhouse, furnished in large part by Anne. The time not spent on the dollhouse was spent on each other, and not all of it was sex. A pretty good portion, yes, but not all of it. We went out to dinner a few times, feeding the local rumor mill, and went into the city one night to catch a play. We spent time sailing her Shark 24 and shooting trap at her gun club. We spent a day cruising around on my hog, and damn! she looked good on my pillion. Even in full leathers and a full-face helmet. I didn't know women could get custom-tailored leathers that looked sprayed on and yet stayed functional. I guess you can, with enough cash.\n\nWe also spent time talking. Just talking. About our pasts, our hopes and dreams, our expectations and sometimes about nothing at all. Or nothing important, anyway.\n\nChuck's response changed the game. Pig's money had gone from Columbia to a Cayman Islands bank. Lawrence had picked up the money there and taken it to Algeria. At the same time, it appeared a package presumed to be raw -- read stolen -- diamonds had left South Africa on its way to Algeria. Lawrence had left Algeria and gone back to the Cayman Islands, then home. He didn't declare anything over $10,000 and wasn't flagged going through Customs. So my best guess was, the diamonds were still in the bank, waiting for Lawrence to figure out how to retrieve them and smuggle them past Customs.\n\nWhich gave me an idea. A way to remove Pig as a threat and have the Justice Department owe me one. I asked Anne to go through Lawrence's finances and see if she could find anything related to a Cayman Islands account, particularly a lockbox account. It took her awhile, but she did. She came up with a bank name, a box number and a key.\n\n\"But I'm not on the signature card,\" she pointed out to me.\n\n\"So we commit a little fraud,\" I told her. \"You write a letter from Asshole to the bank adding you, as his wife, to the account. We'll 'add' his signature. Date it to before he died. We take that and your marriage license, and a big purse, to the bank. You tell them it's the first chance you've had to get to the bank to update the account. You have the key, they let you in, we clean out the lockbox and we leave.\"",
        "\"We make a deal with the Justice guys for a reward cut of the money. We deliver the diamonds to Pig, he gets busted with them when he leaves the rendezvous.\"\n\n\"But he'll kill us as soon as he has the diamonds,\" she pointed out. \"Two million plus is worth no witnesses.\"\n\n\"Okay, a couple of extras, then,\" I temporized. \"What did you qualify marksman?\"\n\n\"Expert,\" she frowned. \"Rifle, Pistol, Machine gun, SMG. All four. Why?\"\n\n\"I think I love you,\" I told her and she smiled. \"I'll deliver the diamonds and a threat to leave us alone. You'll cover me from a safe distance. Pig will accept the standoff, take the diamonds and go. Then he gets busted.\"\n\n\"Okay, that could work,\" she nodded. \"So... I tell Pig we found them and we're going to go get them, and then we'll arrange a meet. Interested in a vacation?\"\n\n\"To the Caymans with you?\" I smiled. \"You bet your sweet ass!\"\n\n\"That's one you haven't done, yet,\" she laughed -- and started me thinking.\n\n* * * * *\n\nChuck put me in touch with a guy from the Treasury department and I explained our idea. He said he'd need to coordinate with Homeland Security and the FBI, but it was viable. He did point out that we weren't going to get the diamonds back into the U.S. without assistance.\n\nWe arranged a sit-down meeting for me and Anne at the closest FBI field office. We came out of it with a deal to courier a diplomatic pouch (actually a small trunk) to the American Consulate, and to bring it back. We were assigned a Diplomatic Courier from the State Department to handle the actual transfer, once Anne acquired the diamonds. We were reminded that firearms, and most weapons, were illegal without a special permit.\n\nPassports ready, no visas required, we packed for a vacation.\n\n\"You know what's nice about the Caymans?\" I asked her.\n\n\"No casinos?\" she guessed.\n\n\"Well, yes, and bars if you want them, but I was thinking...\"\n\n\"SCUBA!\" we both said together. \"Have you got your cert?\" I added.\n\n\"NAUI and PADI Master, and yes,\" she smiled.\n\n\"Ditto.\" Just one more reason to fall in love with this woman.\n\nWithout getting into too much of a travelogue, we sent a message to Pig that we'd be gone for a week, getting his \"stuff\" and we'd set up a meet once we were successful. Anne made sure to point out that her neighbor (me) was helping her and not to even think about screwing with either house while we were gone because we'd secured them. That wasn't strictly true about my house, but I did have a silent alarm to the police and fire, and very sensitive motion and imaging sensors. Her place came with armed guards.\n\nWe flew into George Town and got settled in our hotel, then scoped out the place. It was tourist trap city, but friendly and mostly, I wanted to get in dive time. So did Anne. But we did the sensible thing and after a light dinner, we went back to the hotel and fucked.\n\nThe next morning, we went to the bank to be sure she could access the safety deposit box. It took a supervisor to review her proof of ownership and add her to the signature card, but they eventually did it. Anne noted that there was one other name on the card besides Lawrence, and it wasn't her. We took a look in the box and discovered a number of things, besides the diamonds, that we really wanted to have back at her house. Some were going to have to go the diplomatic courier route with the diamonds. Some we could take back with us. We decided to let everything sit and go enjoy ourselves.\n\nUSS Kittiwake, Babylon, Stingray City, Ghost Mountain... all excellent, excellent dives, especially when we found a tour operator that didn't mind naked diving. Beautiful sunrises, beautiful sunsets, beautiful starry nights wrapped in each other's arms on the veranda of our villa. Anne was the one that picked the Beachfront Villa at the Caribbean Club on 7 Mile Beach. In the future, she gets to pick all the hotels.\n\nThere was something amazing about having her legs wrapped around me while I rocked gently deep within her and we could hear the surf and the sound of the wind in the trees, and those damned coqui frogs and cicadas! I swear, we went back inside and finished screwing with the doors closed, those buggers were so loud.\n\nAnyway, at the end of our week there, we went to the bank, emptied the lockbox into Anne's gigantic purse and headed straight for the Consulate. My buddy Chuck was there, along with the Diplomatic Courier, a guy named Harrison. We showed them what we wanted couriered, they agreed with two exceptions which they confiscated... I'm not getting into the specifics... and we set up a rendezvous at the FBI office back in the States. They also agreed, in principle, with my idea of how to take down Pig.\n\nAnne and I had a boring trip back, unfortunately. I'd thought about trying the Mile-High Club routine with her but the lavatories were a bit small for two people and it wasn't a night flight. We settled for screwing in the Admiral's Club during our layover in Miami.\n\nWe got back to find out that Pig's people had been nosing around. Anne's security personnel reported a couple of skulkers who didn't try to get close to the house and my video surveillance showed a couple of people, male by the looks of it, who were checking out my property but not stupid enough to try to get into the house. We got hold of the law enforcement people and met with them at the FBI office.\n\nTo keep Anne and myself out of any more legal entanglements than necessary, the LEO's would stake out my place, I would tell Mr. Porkus to meet me on my beach for the transfer, one bodyguard only, and I'd give him the diamonds. After he left my property and was on the highway, the cops would bust him. They were going to hit him with every RICO, trafficking and tax evasion charge they could come up with. If he tried to implicate me or Anne, they'd basically do an immunity deal. I didn't bother telling them about my plans for backup for the exchange. All they needed to know was that he was leaving my place with the diamonds.\n\nThere were some by-the-book assholes at the meeting, but they were backed off by the Justice and Treasury people who wanted Lester really, really bad and figured he'd be spooked off by anyone other than Anne. And friend.\n\n\"You guys really need to stay off my property and stay invisible,\" I told them. \"There's several places on the other side of the highway where you can hide vehicles. I'm willing to put in eavesdropping equipment and a relay in my house, but I don't want any bugs or wires. Just in case Pig has sophisticated debugging equipment.\"\n\nThey weren't happy about the conditions, but it was the best shot they were going to get, so they went along with me.\n\nI went over the plan with Anne that night as we lay in her bed, \"docked\" and just petting.\n\n\"God, I'm glad you were a horny, perverted old man,\" she sighed after one of her mini-cums, where she just lay there and let it wash through her.\n\n\"Were?\" I teased.\n\n\"Are,\" she corrected. \"But I mean, as proper as you are in how you deal with people, I'm glad you stopped to video me jilling off.\"\n\n\"You were too beautiful to pass up,\" I told her, and I meant it. She wiggled her ass back into my crotch, forcing my cock deeper into her. I moaned, because... well, it was just that good.\n\n\"I like vacations with you,\" she told me. \"I'd like to try some more, where we aren't recovering stolen diamonds. What do you think of Bora Bora?\"\n\n\"I like Tikehau better,\" I teased.\n\n\"Tikehau is for honeymooners,\" she told me with a straight face. \"Great diving, though.\"\n\n\"Of all kinds, muff and otherwise,\" I agreed. \"Wait a minute! Are you suggesting...?\" I couldn't help myself. The look on her face was priceless. Or, the first one was, anyway. The look of surprise, ready for a quick denial. The second look, however, was a lot more serious and thoughtful, and was giving me second thoughts about my teasing.\n\n\"That's not a bad idea...\" she drawled and somehow I knew she was taking the idea seriously. \"I think I'd want a few more laps around the test drive track, though, if you don't mind...\"\n\n\"What kind of laps?\" I was curious.\n\n\"Well, we've dated some, and done some serious getting to know each other, and we've had our first joint vacation...\" she ticked off on her fingers. \"No fights, yet, though. There's the living together, and picking out the furniture, and merging our music collections...\" She was teasing me, and I knew it, but I didn't care.\n\n\"True,\" I acknowledged. \"Nor have you invaded my man cave with an eye to making it more efficient.\" She raised an eyebrow.\n\n\"Wife Number One,\" I explained. She nodded.\n\n\"And you haven't tossed out my favorite pair of grease-stained jeans just because they were stiff enough to get up and walk around on their own,\" I offered. To that raised eyebrow, she got \"Wife Number Two.\" I got a knowing smile from her.\n\n\"Hmmm,\" she added. \"And you haven't torn out my carefully cultivated Wild and Ornamental Grass Prairie because it was in the way of where you wanted to run the walkway to the pool.\"\n\n\"I presume he thought they were weeds?\" I ventured.\n\n\"Something like that,\" she smiled. \"As opposed to his Weed which you can still find scattered around the woods, thriving.\"\n\n\"But my dear...\" I put on a heavily affected British accent, \"useful items, such as clothing and rope, are made from hemp!\"\n\nShe just sniggered and rotated her wonderfully hot pussy that was then sheathing my very close to losing it cock.\n\n\"Anne, sweetheart, you keep that up and we'll be done for the night in short order,\" I told her.\n\n\"Done for awhile,\" she corrected me, \"but I doubt for the night. You've got amazing stamina and recovery for a guy in his sixties.\" And then she got serious about taking her pleasure.\n\nSince she was well impaled on me with her back to me, she reached between her legs and started diddling her clit while she ground up and down and around on me. I'm big enough that she had to stretch a bit to accommodate me, and that made her feel like a hot, wet, tight velvet furnace. She was pushing all my buttons and I had to struggle to wait for her to get off. She did, though, and I was right there with her.\n\n\"Oh, fuck, Jack!\" she moaned and the now familiar sound let me know she was close. I reached my hands around in front and held her tits, rolling her nipples between my thumbs and fingers. It was exactly what she needed to explode.\n\n\"Oh! Fuck! Yes, Jack, yes! Fuck! Yes, just like that! Oh, fuck! I'm gonna... you're gonna make me... oh, Fuck! Cumming!!!\"\n\nI couldn't hold back as she clamped down on me and pulsed, hard.\n\n\"Oh, fuck!... I can't hold it... I... oh, fuck! Cumming!\" I went over deep within her, my balls pulled up and emptying their hot load into her hot, smooth pussy. Her cunt seemed to have a way of just milking me, making me keep on cumming, getting aftershocks even after the main part was spent. She was, in a word, fucking amazing!\n\nWe finally collapsed, exhausted, and decided that actually getting some sleep might be a good idea. But she wouldn't let me pull out of her. She insisted that I stay right where I was until I fell out \"from natural causes.\" Who was I to argue? We fell asleep docked.\n\n* * * * *\n\nTwo days before our scheduled meet with Pig, Anne showed up at my place to set up her \"nest\"... the spot where she and her lasered and scoped Remington 700 were going to be sitting during my encounter with the bad guys. Okay, I was impressed. I was even more impressed when the Ghillie suit came out. When she pulled out the suppressor, I realized she was taking this way seriously.\n\nThen she put the suppressor back.\n\n\"Don't need it,\" she told my questioning look. \"If I have to shoot somebody, everybody's going to know about it, anyway. And besides, I'll be recording video of the whole encounter. You've got some really nice, tall evergreens overlooking the beach. I'll set up in one of them.\" She then headed off into my woods. I intentionally didn't want to know which tree she was in... much harder to accidentally give it away.\n\nLater that afternoon, as we were lying in my bed for the first time, she cuddled up and asked, \"is it weird having me sharing your space... and your wives' space... like, I'm trespassing or something?\"\n\n\"You're not trespassing,\" I reassured her. \"You're right where you're supposed to be. This was a vacation home until after Julie passed. I turned it into my primary residence about the time I retired from the CIA. My balling buddies have shared this bed, but I don't see any conflict there. So no, it's not weird.\"\n\n\"You've got a nice place...\" she told me.\n\n\"Says the woman who has a hundred acres and a mansion on the lake,\" I teased. She took me seriously.\n\n\"A hundred acres and a mansion she inherited from an Asshole who abused her,\" she responded. \"Not a great consolation prize. Except when you're there.\"\n\n\"And speaking of being there,\" she went on after a moment, \"tomorrow, plan on spending the night with me, then driving me back here in the morning, before the meet. Pig will probably have the place under surveillance, but I doubt he's stupid enough to put someone on your property without an invitation. I'll just take a mid-morning walk in the woods.\"\n\n\"Sounds fine with me,\" I smiled. \"What are we doing tonight?\"\n\n\"Oh, I don't know...\" she told me with a straight face. \"Parcheesi, maybe?\" When I gave her my best skeptical What??? expression, she added, \"Strip Parcheesi?\"\n\n\"How the hell do you play Strip Parcheesi?\" I asked in my best fake serious voice.\n\n\"I don't know,\" she told me. \"I'll make it up as we go along. It starts with you taking off all your clothes.\" Then she laughed. \"Of course, at that point, forget the Parcheesi!\"\n\nWe ended up driving into Tony's restaurant for dinner, then back to mine for some slow, sweet lovemaking, and a good night's sleep. Morning had her driving back to her place. I checked my security monitoring, making sure everything was functional, then sent an email to an inconspicuous address, indicating all was in readiness for a noon meeting on the beach. I iterated the lack of interference aspect and told them they would get a text message on the number they'd given me as soon as Pig and company had left my property.\n\nI expected the unsavories to park near the creek just south of my place, follow it to the beach and walk up the beach to where I'd be waiting for them. No weapons, no backup (cough, cough)... just a bag of diamonds. If they played nice, they'd leave intact and with the diamonds. I was fervently hoping that Anne wouldn't be needed, except to send the text that they'd gone.\n\nI had everything as ready as I thought I could get it... including putting the diamonds in my big Liberty Fat Boy safe. The place would be crawling with cops before they ever got that bugger open! A quick shower, a change of clothes, an extra change in an overnight bag and I was on my way to Nirvana. I'd decided that's what her place should be called.\n\nI got there to be told she was down on the beach, expecting me. When I made my way down there, I found she had a small fire going and was getting ready to do some grilling. She was wearing some kind of sarong thing that wrapped around her marvelous hips, rippling in the slight breeze, naked otherwise. Her nipples were standing way the hell out. She looked like some kind of tropical goddess... not that I was prejudiced or anything.\n\n\"Jesus, you really love showing off!\" I commented as I approached.\n\n\"For an appreciative audient, such as yourself, definitely!\" she smiled, effectively making her the focus of my world. I clapped my hands together, once.\n\nTo her confused look, I told her \"an applaud from the audient.\" That got a big grin.\n\n\"You prefer brats or burgers?\" she asked, opening a cooler and looking inside.\n\n\"Both?\" I asked. Again, she laughed.\n\n\"Now why didn't I expect that?\" she asked. \"I've got both, and buns for them, and condiments, and some rabbit food to nourish your Neanderthal side while it's distracted by the meat.\"\n\nI moved up next to her and put my arms around her from behind, low, around her waist, and hugged her to me. \"You better be careful,\" I told her softly, bending over and tickling her ear with my beard. \"There might be some serious falling in love going around...\"\n\n\"Too late,\" she told me, then stood up and moved my hands from her waist to her breasts. \"And God! I love the feel of your hands on me!\" She waited a couple of moments before turning in my arms to face me, putting her arms around my neck. \"You know, if we're not careful, the food's going to rot before we get around to eating it.\"\n\nI was still back at \"too late...\" I had been talking about me falling in love with her. I hadn't even thought it possible from her side. I had figured she'd see me as a fun guy to have as a balling buddy. Not fall for. And now I had all kinds of tingles running around inside.\n\n\"Anne, just so I don't step in it big time,\" I asked, \"are you saying you're falling for me?\" I'm sure the tentative quality to my voice was obvious.\n\n\"No,\" she told me and I breathed a sigh of relief. \"I've already fallen for you.\" So much for the relief.\n\n\"Jack, don't worry about that right now,\" she told me. \"We'll work it out later. I think we've both fallen pretty hard. But we've got time. Let's get through tomorrow and Lester's pig shit, and then see where we are.\"\n\n\"Okay, deal,\" I decided. \"About those brats...\"\n\nShe didn't need a staff to cook for her. She was, at minimum, a Master Griller. The burgers and brats were cooked to perfection, the Dijon mustard, English piccalilli and Vidalia onions were perfect, I don't know what brioche is, but the buns were excellent, and she capped it all off with Heineken Special Export. And she even had lettuce and tomato for the burgers. I think that's what she was calling the rabbit food.\n\nWe chowed down until we were full, then lazied around while it settled, taking in the sunset and not talking much. I was lying back against a log with her leaning back, in front of me, when my cell chirped. I dislodged her a bit with a \"Sorry...\" and fished it out of my pocket. There are very few people who have my cell number.\n\nI looked at the Caller ID and it was Unknown Name, Unknown Number. Lovely. I had a good idea who was on the other end and I really considered letting it go to voicemail. But something in my head told me I should answer it.\n\n\"Yeah?\" I definitely didn't sound happy.\n\n\"You gonna be there?\" a wheezy voice asked from the other end.\n\n\"Yeah, Lester, I'm going to be there. It's my house, for fuck's sake. I'll be standing on my beach at noon, in the nice wide open, where I can see you coming. I'll have 'em with me and if you play nice, we exchange pleasantries and you walk away with them. You get to bring one goon and that's it. I'll know if you put someone else on my property, believe me. And it won't be pleasant.\"\n\n\"Don't try to get cute, Bub,\" he told me. \"I don't like cute.\"\n\n\"Oh, I won't be getting cute, Lester. I'm going to do exactly what I say I'm going to do. Let's see how good you are at it, when two million in high-density carbon is on the line.\" I hung up on him. Anne was watching me carefully.\n\n\"You're going to piss him off,\" she said quietly.\n\n\"I hope so,\" I told her. \"Pissed people make mistakes. He isn't going to follow the rules. He'll have one bozo with him, definitely. Armed, certainly. He'll be your problem, if he gets creative. I'm going to have a clunky, obvious old hearing aid on. I'm an old man, after all. You keep me apprised of what you can see, both from your perch and from the video monitors relayed to your phone. You'll be able to hear and record my conversation with him. Blustering egomaniacs like Pig don't scare me. Their collective stupidity does. Which is why we're stacking the deck.\"",
        "\"Whatever you say, Boss,\" she smiled up at me. \"I've already alerted my lawyer that he might have to make my bail. I wouldn't tell him why. I did mention the Feds were involved, so he should play nice.\"\n\n\"God, that must've been spooky,\" I told her. \"With your history? Wow...\"\n\n\"Actually, I'm more interested in my present and my future,\" she told me, and her voice had fallen serious. \"I want tomorrow done and then I want to concentrate on us.\"\n\n\"But before that,\" she added, crawling up my body and rubbing those marvelous tits everywhere she could, \"I want you to take me back inside and fuck my brains out. Over, and over, and over...\"\n\nI got the point. I got up and started damping the fire while she started putting away the food. Together, we made short work of it and twenty minutes later we were in the house, in her bedroom, in her bed and into each other. Me literally. For her part, she was wrapping more than her head around me.\n\n\"Oh, God, Jack... you fit me so good,\" she murmured as we rocked together. \"This is never going to get old.\"\n\n\"No, but we will,\" I cracked, and immediately wished I hadn't.\n\n\"Shut up, Jack,\" she told me softly but seriously. \"That one's taboo right now. And for the next couple of decades. When I hit menopause, we can talk about getting old.\"\n\n\"When you hit menopause, you'll be taking your frustrations out on me as you wheel me around the house,\" I commented. \"God help me if you're at the top of the stairs when you get pissed. It'd be a bumpy ride.\"\n\nShe laughed. And when she laughed, sheathing me, it felt really strange and really wonderful. Kind of like jiggling on me. Awesome.\n\nWe spent several hours accomplishing the over, and over, and over mission, before we fell out in each other's arms. I slept like the dead until the alarm went off.\n\n* * * * *\n\nI rolled into my driveway about 5:30am.\n\n\"You stay there,\" I told the lump of canvas on my back seat. \"I'll let you know when my monitoring says it's clear.\"\n\n\"Right,\" Anne's voice replied softly from beneath the lump.\n\nI went into my house and headed for the monitoring console in my bedroom. Nobody had screwed with the house and there wasn't any evidence of anyone in the woods, not visibly and not thermally.\n\n\"Looks clear,\" I texted her and moments later she emerge carefully from the backseat of my car. She had on an anti-IR jumpsuit and she headed directly for the woods. I knew she'd already stashed the Ghillie suit and rifle in her nest. It was going to be a long wait, but she'd been trained to handle this kind of situation and although it wasn't in the riding-a-bicycle category, I was confident she'd do her part and do it well.\n\nKnowing there weren't any lurkers that early in the morning, I got out the bag of diamonds, went down to my beach and buried it about two-thirds of the way to the waterline, smoothed it over and put an innocuous looking rock on top. Then I went back to the house. I was too keyed up to rest, but pacing wasn't going to help, either. So I spent the time going over the plan in my head and all the different ways I could see it going down the tubes. I was very used to having Murphy riding shotgun. Well, up until I retired. Things had gone a lot better after that. This, of course, was just begging for his infamous Law to kick in.\n\nI waited until 11:30, when I saw the heat signature from the car stop on the side of the road by the creek and four figures got out. One stayed at the car while the other three headed down the stream.\n\n\"You got four?\" I texted.\n\n\"Yep,\" I got back. \"1 car, 3 walking.\"\n\nI waited a few more minutes, then started to head out. I got a text that said \"1 stopped in woods. 2 walking.\" I hurried on down to the beach. I wanted to be standing by my special rock as they approached. I stood there in shorts and a t-shirt, obviously unarmed, and waited for the fat man and his gorilla to close the distance.\n\nHe noticed my hearing aid and started in with a particularly obnoxious voice.\n\n\"You got somethin' of mine,\" he almost yelled. \"Give it over.\"\n\n\"What?\" I answered him, a little loudly, \"C'mon, Lester... no pleasantries? No idle chit-chat? No 'hey, thanks for going and getting my stuff on your own dime'?\"\n\n\"That's enough, wiseass,\" the goon with him told me and pulled a 1911-style pistol out of a shoulder holster.\n\n\"Put it away, Asshole,\" I told him quietly, forcefully and without flinching.\n\n\"Shut up and give da Boss his stuff,\" was Asshole's brilliant reply.\n\n\"Lester, you want to tell your ape to look at his chest and put the toy away,\" I told him levelly, with just an edge of threat. Both Pig and the goon looked at said goon's chest where there was a bright red dot dancing around his center of mass.\n\n\"Fuck!\" Asshole started trying to brush it off, which would have been funny if he hadn't been waving the damn gun around, half the time covering me with the muzzle. Then, in a classic move that made me want to kiss Anne, Asshole managed to \"flick\" the dot off of him and onto Lester, who really started to panic.\n\n\"Shit! Nick! Put the gun away! For Christ's sake, put the gun away!\" He, too, was trying to move away from the red dot, but it kept following him.\n\nGoon Nick was a little slow on the uptake, but he finally did reholster his pistol. As soon as he did, the little red dot went away.\n\n\"Since you don't want to be nice, Pig,\" I told him as soon as the laser dot disappeared, \"let's get some things straight. If you have any hope of seeing your stuff, you're going to stop fucking around and get polite. You're going to tell your guy waiting back in the woods to go join his buddy at the car and both of them get in it. Once I know they've complied, and you're not going to do something stupid, I'll give you the diamonds we retrieved, you're going to turn around and walk away with them, and you are never, ever, going to threaten me, Anne, or any of our family, friends, relations or staff.\"\n\n\"If you do, you will die an unpleasant death, or live and be in mortal agony the rest of your life. So will most of your goons. And just to be very clear, neither you nor Asshole intimidate me. You'll never find my backup. And if he has to sight on you again, it will be to shoot you. So tell your man to get out of the woods.\"\n\nI shut up and stood there, waiting. Pig waited a moment, then pulled out a cell phone. My own had never left my pocket. He told \"Johnny\" to go back to the car and wait inside it with \"Jimmy.\" I continued to wait, saying nothing, until I heard Anne's voice in my ear telling me \"two warm bodies back in the car.\"\n\n\"Okay, you're going to need to step back a little,\" I told Lester, before he could tell me his guys had done what he'd told them. He and Asshole took two steps back and I started digging in the sand, eventually drawing out the bag. I stepped forward a little, angling for Asshole while telling Lester, \"you're going to want to check out the contents to be sure it's what you think it is.\" Then I tossed the bag at him.\n\nBoth he and his goon were watching the bag sailing towards him. I closed with Asshole, drew his gun from the holster and took five or six quick steps back, putting me almost out of range while he was confused between Lester trying to catch the bag and me relieving him of his sidearm.\n\n\"I think I'll just hold onto this,\" I told the men while I took a few more steps back. \"While you check out the bag.\" Asshole Nick obviously wanted to do something stupid, like charge me, but he realized I was the one holding the loaded weapon. He chose to be smart.\n\nLester, for his part, wasn't watching until after he caught the bag, and when the surprise wore off, he decided to play it cool. He opened the bag and looked in. I thought he was going to piss himself.\n\n\"Okay, so you can see we've delivered, and now it's time for you to turn around and walk away,\" I told him.\n\n\"Yeah, you've delivered... so what is she to you?\"\n\n\"It doesn't matter,\" I told him. \"But just so we're clear, she is my neighbor and very good friend. Almost family. Which is why, if you fuck with her or hers, you are going to have a very painful rest of your short life. Are we clear?\"\n\n\"Yeah, we're clear,\" he grunted.\n\nSo I dropped the magazine in the gun into my off-hand and started thumbing the cartridges out onto the sand. Goon wasn't a complete idiot. He knew there was still one in the chamber. When I'd emptied the magazine, I reinserted it and pulled the slide to eject the last cartridge onto the sand and lock the slide open. I hit the slide release, pulled the trigger and tossed him the gun.\n\n\"Before you reach for your spare magazine,\" I told him, \"or your spare gun, remember the little red dot. You would not make it off this beach alive.\" He took the pistol, checked that it was empty and reholstered it. Will wonders never cease? A goon who believed in gun safety, at least some of the time.\n\nPig didn't even bother to say goodbye. The two of them just spun on their heels and walked quickly back down the beach.\n\n\"Okay, darlin',\" I said to thin air as I watched them. \"Let them know he's got the diamonds, they're leaving and their car is parked by the creek's culvert. Then you can come on down. I'm going to police my beach, then head for the house.\"\n\n\"You got it, sweet cheeks,\" came Anne's voice in my ear. \"Meet you in the house.\" I picked up the cartridges, smoothed over the hole in the sand and headed back up to the house.\n\n* * * * *\n\n\"Now we play a waiting game,\" I told her as I doled out the evening's fare... ham and cheese sandwiches and minestrone soup from a can. \"I know,\" I added. \"Not particularly elegant. But it's simple and keeps me alive. You're going to find, I am a simple man.\"\n\n\"One of the many things I can appreciate in you,\" Anne smiled. \"Your complexity is simple. You've got a deep and varied background, but you keep your priorities straight and it gets simple. I probably ought to try that.\" She looked around my humble abode for a few moments before adding, \"what if I sold my place and moved in here with you?\"\n\nI damn near dumped hot soup in my lap.\n\n\"To point out the obvious,\" I kind of blustered as I tried to recover, \"I don't have a swimming pool, tennis court, stables, dock...\" And the butler and maids and the servantry, I thought. Thanks, Led Zeppelin. \"You'd be trading down, big time.\"\n\n\"Well, if those are important to you, you'll just have to move in with me,\" she decided. \"I don't want you living separately from our kids.\"\n\nScreeeeeech... Crash-Bang-Boom! rattle-rattle-rattle... The sounds of a wreck as my brain derailed. \"What?\"\n\n\"I don't want you living separately from our kids,\" she iterated.\n\n\"No, no... I heard that part,\" I told her. \"What kids?\"\n\n\"Well, I'm thirty-three, in pretty good shape, and my biological clock is ticking,\" she told me. \"I can't think of a better man to father my children, but I'd rather you were around to help raise them. I believe children thrive best when there are two parents involved in their lives. Not that single parents can't do the job... just that it's better with a mother and a father. You've obviously got experience in the kid raising department, so having you in close proximity makes sense. I won't push it as far as proposing marriage.\"\n\nI didn't say anything. I couldn't. I got up, walked over to my liquor cabinet, pulled out a bottle of Southern Comfort and took a couple of healthy chugs out of it before putting the top back on, setting it down and walking back to the table. She was laughing at me. Quietly, but laughing.\n\n\"You want to run that by me again?\" I asked. I was hoping she was joking, because if she wasn't, it was going to tempt a part of me I was trying to keep buried.\n\n\"You probably think I am certifiably crazy,\" she told me, \"and most of society would probably agree with you. However... I'd like to have children and you seem uniquely well qualified to sire them. And help raise them. Yes, I know you are sixty-five and the odds of you living until they graduate high school are pretty slim. On the other hand, you are in great shape and keeping yourself that way, and I can afford to make sure you get the best health care possible.\n\n\"So I keep running this what's wrong with this picture? scenario in my head, and although I see negatives, I also see positives. So I want you to think about it. I can see you're hesitant, and I suppose you should be. I'd like to revisit this, though, over the next couple of weeks. I would like you to take me seriously and give the idea due consideration.\"\n\nI looked at her and took a deep breath. Then let it out in a long sigh.\n\n\"Anne, I won't promise to decide in your favor,\" I told her, \"but I will give you the respect of treating the idea seriously. I'm going to have a lot to think about, and we're going to have a lot to talk about, over the next few weeks. In the meantime...\" I didn't get a chance to finish the thought.\n\n\"Would you like to fuck our brains out while we wait for the cops to tell us they've busted Pig?\" she interrupted me.\n\n\"Um... that's not where I was going to go with that, but... yeah, sure, why not?\" I smiled.\n\n\"You can keep in practice for siring babies,\" she grinned. \"While you slowly come to the realization that I am right.\"\n\nHonestly? With the way I was drawn to her, it was going to be a couple of weeks of interesting mental gymnastics. But that was for the future. Right now, getting naked seemed like a very good idea.\n\n~ Finis, for now ~ "
    ],
    "authorname": "eidetic",
    "tags": [
        "exhibitionist",
        "mind games",
        "nude day 2019",
        "older man",
        "voyeur",
        "younger woman"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/adventure-of-the-incidental-ogle"
}