{
    "title": "Date with a Drifter",
    "pages": [
        "Author's note: this story has been re-edited to bring it up to my current standards as part of an effort to make Ebooks. It features improved editing, grammar, punctuation, and also includes rewrites and expanded scenes where necessary. Please see my bio for more information.\n\nCHAPTER 1: LONE WOLF\n\nThe roar of an engine roused Matt from his daydream, loud enough to shake the windows in their panes. He brushed off his white apron, preparing for the ringing of the bell that would indicate that a customer had walked into the diner. It was almost midnight on a Sunday and business was slow, he was staffing the restaurant by himself tonight but whipping up a meal for the handful of customers that he expected to pass through was not difficult. His family owned the establishment, the only eatery in their small town, located up in the North of Washington state. There was a neon sign hanging outside that cast the parking lot in its pink glare, a checkered linoleum floor, along with a jukebox and all of the other little amenities that one would have expected.\n\nIt was not a themed diner, the outdated d\u00e9cor was not ironic, it was merely as old as his father's sensibilities. Matt found it insufferable, but it was the family business, and he had turned out to be one hell of a cook. It must run in his blood. Working in a diner was one way to pay for college, round these parts it was either that or logging. Most of the people who he served were truckers carting felled trees from the logging camps up North, and he was sorry to say that they rarely appreciated his talents. Eggs over easy and a pot of coffee was about all they ever ordered, he wouldn't be charring a cr\u00e8me brulee with a blowtorch or serving any aperitifs while he worked here. You would think that for an aspiring chef the family business being a restaurant would be a boon, but cooking in this town made him feel like a Broadway singer performing on the side of the street for loose change.\n\nHe glanced out of the long window that lined one wall of the diner, the yellow glow from the visitor's headlights going dark as the rumbling of their engine subsided. The weather was cooling, and the pine forests that surrounded their lot on the lonely road had an eerie quality at this time of night. The Moon was waxing, and its pale glow was just enough to light the trees as they blew back and forth in the wind.\n\nMatt watched a figure walk past the window, it was a woman, her black road leathers lit by the neon sign. The bell above the door rang as she stepped inside, pulling a tinted crash helmet from her head and shaking out her long, raven hair. Her face was pale, and it stood out against her dark leather clothing, her chiseled features striking. Her black jacket was studded with badges and pins, gold buttons and zippers catching the light as she walked. Her pants fit her form so snugly that light from the neon sign outside spilled through the gap between her thighs. She creaked when she moved, her outfit so tight that it looked as if she had been vacuum packed into it. Matt had to make a conscious effort to avoid looking her over too conspicuously.\n\nHer black boots trod heavily on the checkered floor as she made her way over to the counter, placing her helmet beside her as she took a seat on one of the stools. She leaned on the polished surface as she withdrew a packet of cigarettes from her pocket and caught one between her lips, then flipped open a silver Zippo lighter, holding the cigarette over the dancing flame before snapping it shut and taking a long draw. Matt waited patiently for her to exhale, the woman loosing a puff of smoke as she finally looked up at him.\n\n\"You here all on your own, kid?\"\n\nKid! She didn't look a day over twenty-five herself, but he held his tongue as he passed her a laminated menu. She took it in her gloved hand, more leather, and looked it over as she rolled her cigarette around in her mouth.\n\n\"Yes, I'm staffing the diner tonight, it's a slow season. What can I get you? Would you like some recommendations?\n\nShe seemed disinterested in the menu, casting it aside and turning her attention to him instead. Her eyes were a cold shade of blue, and he felt a flush in his cheeks despite himself as he met her gaze.\n\n\"I've been on the road since this morning, came down over the border. This is the first stop I've come across since I left BC.\"\n\n\"You've not eaten since breakfast? It's midnight!\"\n\n\"I guess so, these parts are pretty lonely. I like the backcountry roads though, makes for a scenic drive. Give me something hearty, I like my meat rare.\"\n\n\"You got it,\" Matt said, turning and making his way to the kitchen. Finally, an excuse to cook something that wasn't just grease! She sounded like the kind of person who would enjoy a good steak, he could throw in a few onion rings and some crispy sweet potato, seal the deal with some chimichurri sauce. He lit the stove top and oiled up a pan, trying to keep the conversation going as she waited. The door was open, and the kitchen wasn't more than a few paces away from the counter.\n\n\"So, you a biker?\"\n\n\"What gave that away?\" she asked sarcastically, \"the motorcycle helmet?\"\n\n\"Well mostly we just get truckers passing through here,\" he explained, the cut of steak sizzling as he dropped it into the oil. \"It's unusual to see a biker, especially at this time of year. In the summer we sometimes see people on their way up to Vancouver, but this is a first. What brings you down our way?\"\n\n\"Just passin' through,\" she replied.\n\n\"Headed anywhere special?\"\n\n\"Not really. For a few days a month I like to just...get on my bike and ride. See where the road takes me.\"\n\n\"Well I envy you,\" Matt said as he turned over the steak, pressing his spatula down on it and watching the juices leak forth. \"Wish I could just get on a bike and start riding.\"\n\n\"Don't you like being the head chef in the last port of call?\"\n\n\"I'd be lying if I told you that I didn't have higher aspirations than making greasy sandwiches for truckers,\" he grumbled.\n\nBefore long he had her meal ready, setting the plate down in front of her. A bloody steak, fried sweet potatoes and a side of onion rings. There was a dollop of sauce atop the meat, white and garnished with chives.\n\nHer eyes widened, she was clearly impressed, taking up the cutlery to carve out a piece of steak. It was pink inside, leaking red juice, and she hastily put out her cigarette in a nearby ashtray in order to take a bite. He watched her as she chewed, her cold expression warming.\n\n\"Well ain't this a surprise,\" she mumbled through her second mouthful of meat. \"To think that I had to drive out to the middle of the damned woods to get a decent steak. What's the name of this sauce?\"\n\n\"It's called chimichurri,\" Matt replied. \"It's parsley, minced garlic, some olive oil, oregano, some flakes of red pepper, and a few spices and herbs on top of that.\"\n\n\"Just what the hell are you doin' cooking at a truck stop, kid?\"\n\n\"It's a diner,\" he clarified, \"my parents own the place. I'm working off college debt.\"\n\nShe was really digging into the meal, she must have been famished. Matt watched in awe as she packed away the steak like someone three times her weight.\n\n\"You know, I was gonna settle for a shitty sandwich and then just drive right on through this podunk town, but maybe it's worth sticking around for a while longer. There a motel round these parts?\"\n\n\"Yeah, on the road to the South. It's not exactly the Ritz, but they can give you a bed for the night. The guy who runs it is a friend of mine, tell him Matt sent you and he might even give you a discount.\"\n\n\"Discount motel? Just my style. You gonna be around to make me breakfast, kid?\"\n\n\"It's...Matt,\" he repeated, \"and yeah. I'm on duty until spring, we open at six AM.\"\n\n\"Shit, six? Unless you close up in the next ten minutes, you ain't gonna get more than a few hours of shut-eye. Aren't your parents workin' you a little hard?\"\n\n\"To be honest, we don't get many customers around this time of year. I can get away with sleeping at the counter most days.\"\n\nHe waited for a few minutes as she finished up, stopping just short of licking the juice from her plate before setting her cutlery down and rising to her feet. She picked up her crash helmet and stowed it under her arm, rummaging in one of the pockets of her leather jacket for her wallet. She pulled out a twenty, planting it on the counter.\n\n\"Keep the change, I'll be back tomorrow morning.\"\n\n\"Thanks! I'll be here.\"\n\nShe shot him a smile before turning to leave, Matt's heart leaping into his throat, his eyes lingering on her as she made her way to the door. The old adage came to mind, hating to see someone go but loving to watch them leave. Those leather pants couldn't have gotten any tighter, and her jacket cut off just above the small of her back as if to put it on display.\n\nHe averted his gaze as she left the building, the bell above the door ringing, and she turned towards the parking lot. Before long he heard the guttural roar of an engine and the yellow glow of her headlight lit the trees across the road. She pulled out, the noise swelling as she accelerated, fading quickly as she barreled away into the night.\n\nWhat an odd encounter. She was beautiful, intriguing, and he hadn't even gotten her name. The faster he closed up, the sooner he could get home and sleep. She had promised to return the next morning, and he intended to be ready for her.\n\n***\n\nMatt was up bright and early, the golden rays of the sun doing their utmost to penetrate the morning mist that hung over the pine forest, giving everything an ethereal quality as he unlocked the door and stepped into the diner. The air was crisp, cool, the scent of the conifers rising above the smell of wet grass and asphalt.\n\nThe little bell rang as he pushed the door open and he quickly got to work prepping the kitchen, losing himself in his daily routine as he awaited the telltale roar of the mysterious woman's engine. The hands of the clock that was mounted on the wall in the kitchen had just passed seven AM when he heard it, the swell of her motorcycle as it neared. A yellow beam glanced across the diner as she turned off the road, her headlight shining through the long window on the face of the building, and he felt a surge of excitement in his chest as it went quiet.\n\nThere she was, walking along the front of the diner, removing her black crash helmet and shaking out her long hair again. She was wearing the same clothes as the day before, a black leather jacket adorned with buttons and patches and a pair of matching pants so tight that he swore she must have been sewn into them.\n\nShe raised a gloved hand in greeting as she entered, the bell above the door ringing to announce her, Matt returning the gesture as she sidled up to the counter and took a seat on one of the stools. Her leather getup creaked as she placed her helmet on the polished wood, her porcelain skin ever radiant, red lips and blue eyes standing out against it like pastel strokes on a canvas.\n\nMatt tried not to stare as he handed her a laminated menu, unsure of whether he should be treating her as a customer or as a friend.\n\n\"Forget the menu, kid. Surprise me.\"\n\n\"Sure thing, I'll see what I can whip up.\"\n\nThat was a total lie, of course. He had lain awake the previous night mulling over a dozen different recipes that he thought might impress her and the ingredients for many of them had already been set aside in the kitchen. He disappeared into the back room, and the woman rose from her seat, wandering around the diner as she waited for her meal.\n\nHe had decided on ham steaks with a topping of melted Gruyere cheese and a side of bacon and mushrooms. She seemed to be big on meat, and as he coated his frying pan with oil, he heard her call to him.\n\n\"So what's the deal with this place, anyway? It looks something straight out of the fifties.\"\n\nHis face reddened, she must be examining the ancient jukebox and the period decor. Matt didn't find his father's refusal to modernize the diner very flattering.\n\n\"It's not what I would have gone with,\" he called back to her, \"my dad is kind of particular about how a diner should look and feel. He says people come to diners for the experience, not just for the food. The guy acts like he's running a damned Chuck E Cheese rather than a restaurant. If there were any girls in town willing to wear roller skates, he would have hired them as waitresses.\"\n\n\"And how should a restaurant look?\"\n\nHe had mulled over that question many times, and he was glad of the chance to express his feelings on the matter, placing one of the ham steaks into his pan and raising his voice above the loud sizzling.\n\n\"I'd go with something a little more rustic, wood furnishings, maybe some paintings of the surrounding area on the walls. Landscapes of the forests and the mountains, things like that. There's so much natural beauty out here. I always admired English pubs. They're very homely, they have that lived-in feel that you just can't get from checkered linoleum and plastic chairs. Lots of dark oak, all kinds of curiosities hanging from the walls, dim lighting so that people can relax. We could serve both drinks and meals that way, this place would actually bring in some money rather than having to share business with that seedy bar in town.\"\n\n\"I passed that place on the way down, looked pretty shady.\"\n\n\"It's where all the truckers and logging crews go to drink when they're working nearby, let's just say that it's not exactly a family-friendly establishment.\"\n\n\"So are you gonna be here all day?\" she asked.\n\n\"I'm supposed to be, yeah. Why do you ask?\"\n\n\"Well, you said that business was slow, I figured you might want to show me the sights. Your parents are out of town, right? If you close up for a few hours, they'll never find out.\"\n\nHis heart skipped a beat, was she asking him out on a date? He was supposed to be running the diner, but this was their slowest season. At the absolute worst he might miss one or two customers if he went out for a while.\n\n\"Er...yeah, I can do that. Sure.\"\n\n\"Don't worry, I won't bite,\" she chuckled.\n\nHe almost dropped his skillet, glad that she couldn't see him, then he composed himself and began to melt the cheese over the ham.\n\n\"I never did catch your name,\" he said, waiting for a reply with bated breath as he chopped mushrooms.\n\n\"Do you need it?\"\n\n\"I guess not...\"\n\nOnce the food was done, he brought it out to her, her eyes lighting up at the sight of the plate packed high with meat. The bacon was cooked to perfection, not too soft and not too crispy, lightly drizzled with a creamy parsley sauce. There were two ham steaks, each covered in melted Gruyere cheese and garnished with herbs, along with a side of finely chopped mushrooms. She took a seat at the counter and wasted no time digging in, carving up a slice of ham and forking it into her mouth.\n\n\"Oh God,\" she muttered as she chewed. \"You're a wizard, kid.\"\n\n\"It's Matt,\" he corrected, but she ignored him as she took another bite.\n\n\"What kind of cheese is this?\"\n\n\"Gruyere, it's a kind of Swiss cheese, great for soups and fondues.\"\n\n\"How the hell did you learn all of this anyway?\" she asked as she selected a choice strip of bacon, white sauce dripping from it as she took a bite.\n\n\"I went to school for it. I got an AAS degree in culinary arts, and now I'm working off the debt.\"\n\n\"Most kids go for the low hanging fruit, liberal art degrees and the like,\" she added. \"How'd you end up wanting to become a chef?\"\n\n\"I guess it runs in my family,\" Matt replied with a shrug. \"My parents have always worked in the food industry, and as you already know, they own this diner. I always had a knack for cooking, and I thought that I might as well make a go of it. Earning a living doing what they love is everyone's dream, right?\"\n\nShe was too occupied with eating to reply, wolfing down the ham as if somebody might steal it from under her nose. Before long she was done, pushing the empty plate away and resting a hand on her belly as she exhaled.\n\n\"That really hit the spot.\"\n\n\"You want me to get you anything else? Something to drink, a coffee maybe?\"\n\n\"I'm good, kid. Now get your coat, we're going for a ride.\"\n\n\"A...ride?\" Matt stammered.\n\nShe grinned at him, standing and picking up her helmet.\n\n\"Yeah, you said you'd show me the sights. What's the matter, never ridden a bike before?\"\n\n\"Oh, I thought you just meant...walking down into town or something.\"\n\n\"Well you seem to like forests and mountains, you're a nature guy, right?\"\n\n\"I guess you could say that,\" he replied sheepishly.\n\n\"So show me,\" she insisted, more of a command than a request.\n\nHe nodded, feeling his cheeks reddening as he stepped out from behind the counter, pulling on his coat and rummaging in his pocket for the keys to the diner as he followed her out of the door. He turned to lock up as they stepped outside, the morning mist now starting to burn away as the sun rose higher in the sky, a carpet of white fog still lingering in the shade beneath the pine trees.\n\nShe beckoned to him, walking off towards the parking lot as he hurried after her. He felt out of place next to the leather-clad biker, wearing a pair of worn jeans and a flannel shirt beneath his blue parka and sporting a pair of scuffed tennis shoes. She didn't seem to mind, however, leading him over to where her motorcycle was waiting on its kickstand.\n\nIt was a beautiful machine, painted the same black as her clothing, its exposed engine and curved exhausts shining in bright chrome. It was an older style of bike with long forks and high handlebars, it had a windshield and two large saddlebags to either side of the plush seat. It was obviously well traveled. This was a machine that she rode for the joy of it, not something that she owned just for show. There was a painting on the gas tank, a scene of half a dozen timber wolves baying at a full moon with forests and mountains in the background. It was hopelessly cliched, but it made him smile all the same.\n\nShe swung a leg over the motorcycle, sinking down into the seat and extending her arm to offer him her crash helmet.\n\n\"You can wear the helmet if you like.\"\n\nWanting to appear more confident than he was really feeling, he refused, and she shot him a knowing smile.\n\n\"Suit yourself kid. Just hang on tight, okay?\"\n\nHe climbed into the seat behind her, and she stowed the kickstand, balancing the bike on her toes as she kicked the ignition lever a couple of times. The engine sputtered to life, roaring as she revved it, Matt could feel the powerful vibrations as the vehicle shook between his legs. He was unsure what she expected him to hold on to. Noticing his hesitation, the woman reached behind her, taking his hands in hers and planting them firmly around her waist.\n\nHis grip tightened as she pulled out into the street, the wind blowing in his hair and rushing past his ears as she barreled off up the road, the roar of the engine deafening. So much for showing her around. She hadn't even asked for directions, she seemed to know exactly where she was going.\n\nMatt had never ridden a motorcycle like this before, it was exhilarating. The road that wound its way through the pine forests was empty, and the sensation of speed was incredible. They probably weren't going over eighty miles per hour, but seeing the asphalt fly past beneath the bike gave him the impression that it was twice that. The trees to either side of the road were a blur, adrenaline coursing through his veins as she leaned into the sharp turns. He was starting to get the impression that she was just fucking with him.\n\nHe had been hesitant to hold on to her, but now he didn't have much choice, his arms were wrapped tightly around her hourglass waist for dear life. Her dark hair blew in his face, too long to be contained within the helmet, her leather-clad body pressing up against him through his thick coat.",
        "She drove away from the town, heading towards the mountains that overlooked the forest, taking snaking roads rarely traveled by anyone but logging crews. He was beginning to understand what she saw in this. Unlike traveling in a car, feeling the wind and acceleration gave one a distinct sense of freedom.\n\nThey couldn't speak during the ride, the noise of the wind and the purr of the engine would have drowned out their voices, so Matt contented himself with admiring the scenery. They climbed the foothills, the tops of the pine trees looking like an ocean of greenery as they rose above them, the road winding and twisting as it hugged the mountainous terrain. The sun was rising higher in the sky now, its golden rays beating down on the snowy peaks in the distance, sheathed in puffy clouds.\n\nThey finally pulled into at a layover at the side of the road, the motorcycle slowing to a stop as its engine petered out. The sheer drop down into the valley was guarded by a metal railing that would stop any curious sightseers from falling over the edge. The woman propped her bike up on its kickstand and hopped off, stretching her legs and pulling off her helmet. She walked over to the railing, leaning on it as she peered down into the evergreen forest below, a gentle wind rustling the pine needles as the trees swayed back and forth.\n\nMatt joined her, his legs shaky, not from fear or nervousness but from the exhilaration of their ride up there. He sidled up beside her and looked out over the valley, shielding his eyes against the glare of the sun with one hand.\n\n\"I like it up here,\" she said, running her fingers through her blowing hair. \"The air is clean, there's no civilization for miles. You take a step off the road, and suddenly it's like you're walking through an untouched land. I wonder who besides me has stood where I'm standing. The last person might have been some trapper a hundred years ago, or maybe a native even further back. Perhaps nobody has been here before, and I'm the first.\"\n\n\"Sounds like you don't enjoy city life,\" Matt replied with a chuckle.\n\n\"No, I don't. I have to live in the city for work but once a month I take a few days off, and I ride down into Cascadia, see where the road takes me. This time it took me to you.\"\n\nHe wanted to ask her name again, but things might get awkward if he pressed the issue. It seemed like she was trying to escape from something. Perhaps a crappy job and a pokey apartment as she claimed, or maybe it was something more than that. He didn't know her well enough to ask such probing, personal questions yet.\n\n\"Have you always lived out here?\" she asked.\n\n\"Yeah,\" Matt replied, \"I grew up in town. Besides spending a few years at college, I've never really left. Not for any significant amount of time at least.\"\n\n\"Do you like it here?\"\n\n\"Yeah,\" he said, after considering his answer for a moment. \"I do. Sometimes I complain about the internet connection being terrible or how long it takes for packages to reach me, but I feel pretty lucky to have had the chance to grow up somewhere like this.\"\n\n\"Close to nature,\" she added, and he nodded in agreement.\n\n\"I love walking my dog in the woods, I can let him off his leash so that he can have a run around and there's no danger of him being hit by a car or anything like that.\"\n\n\"You have a dog?\" she asked excitedly. \"I love dogs!\"\n\n\"Yeah, a Husky called Smoke. It's nice to have someone to come home to.\"\n\n\"My landlord won't let me keep pets, it sucks.\" Her tone became sly, and she turned her attention away from the landscape to glance at him. \"I take it there's no Mrs.Chef, then?\"\n\n\"Most assuredly not,\" he laughed. \"The only girl I know works down at the bar, and she's older than most of these trees.\"\n\nShe was so forward, so confident. It made his heart skip, and it was more than a little intimidating. He didn't really know anything about her, but that seemed to be the way that she wanted it. She was a mysterious stranger, and she intended to stay that way.\n\nShe sauntered around behind him, her tight road leathers creaking again. As he turned to face her, she pressed up against him. He backed away, feeling the cold metal guardrail against his butt, the biker planting her hands to either side of him on the rail as he leaned back precariously over the sheer drop. She was a little shorter than him, her soft breasts compressing against his parka through her form-fitting jacket. He could smell the leather, and he could feel the warmth of her body contrasting with the chill of the mountain air.\n\n\"I like you,\" she whispered, her rosy lips an inch from his cheek.\n\n\"Aren't you...moving kind of fast?\" Matt asked, her aggression taking him off guard. \"We only met yesterday, we don't really know anything about each other yet...\"\n\n\"You have to move fast when you're short on time. What's the matter, don't you like me?\"\n\n\"Of course I do,\" he laughed nervously, \"but I don't even know your name.\"\n\n\"Who needs names? Will you enjoy my company any less if I never tell you?\"\n\n\"I...suppose not. But why all the secrecy? Why do you say that you're short on time?\"\n\n\"Why all the questions?\" she shot back, grinning up at him. She hadn't exactly told him to can it, but the implication was there, and he wasn't about to jeopardize whatever was happening here by being too curious. Never look a gift horse in the mouth, and never question why a biker chick in skin-tight pants is coming on to you.\n\n\"I'll only be in town for a couple more days,\" she said, \"then I'll have to move on. So let's have a good time, okay?\"\n\nHe nodded, and she pecked him on the cheek, his face flushing red as she smirked at him.\n\n\"Stop worrying about the details and just go with it, you'll find life a whole lot more enjoyable that way.\"\n\n\"Like following the road and seeing where it takes you?\"\n\n\"Yeah,\" she said with a smile, \"like that.\"\n\nHe cleared his throat as she stepped back to let him free, standing with her hands on her hips as she waited for him to make the next move.\n\n\"You know, there's this spot a ways up the mountain that overlooks a river,\" he said. \"It's pretty scenic. I like to walk down to the bank and take my shoes off, dip my feet in the water. What say we drive up there and stay a while? By the time we make it back to town, it'll be about noon, and I can make you some lunch down at the diner.\"\n\n\"Deal,\" she replied, putting her helmet back on and walking over to her bike. Matt brushed himself off, straightening his parka as he made his way over to join her.\n\n***\n\nMatt watched as the woman finished off her burger, marveling at her appetite as she sucked her fingers clean. She was so trim, yet she ate like it was going out of style. He had scarcely had time to make it halfway through his own helping. He had made them some beef burgers using steak and blue cheese, a gourmet twist on some common fast food, and she had gone wild for it. Cooking for her was a lot of fun, she seemed delighted by whatever he produced. It was refreshing to meet somebody who appreciated his cooking skills rather than just asking for an omelet or a sandwich.\n\nHe would close up the diner again when they were done eating, he wasn't about to pass up the chance to spend the rest of the day with her for the sake of the one or two truckers who might pass by. He doubted that anyone would even notice that the establishment wasn't open. His parents weren't due back for weeks, and they weren't exactly expecting him to be rolling in money when they got home.\n\n\"So what else is there to do round these parts?\" she asked, pulling a cigarette from the packet with her lips as she leaned on the counter and flicking her Zippo lighter until it finally produced a wavering flame. She took a long draw, exhaling slowly, seeming to savor the taste. \"What do you people do for fun?\"\n\n\"Well, there's the bar, besides that there's not really any entertainment to speak of. We don't have a movie theater or a bowling alley, no arcade, no mini golf. Most people in town hang out down there, waste their paychecks on beer, play pool and darts. It's a veritable roadhouse.\"\n\n\"Sounds like my kind of place,\" she said as she exhaled a cloud of smoke. Matt prepared a retort before looking her up and down, choosing to keep his mouth shut. It probably was, she certainly looked the part. She wouldn't have been out of place in some dingy biker bar.\n\n\"So I take it you don't think much of the nightlife in your little corner of the North West?\"\n\n\"I'm not much of a drinker, nor am I logger or a trucker. You can probably imagine that small town watering holes aren't very welcoming of college boys and gourmet chefs. Not that I'm complaining, drunken brawls and poker games aren't really my scene.\"\n\n\"They say that you should do one thing every day that scares you,\" she said with a smirk, Matt's brow furrowing.\n\n\"I'm not scared to go to the bar.\"\n\n\"Then you won't complain if we go down there and get a few drinks in us.\"\n\nHe spread his arms in a gesture of exasperation as she stood and beckoned to him, walking backwards towards the door and sporting a villainous grin.\n\n\"Come on kid, putting a little liqueur in your system might loosen you up a bit, and trust me when I say that getting me drunk is in your best interests.\"\n\nCHAPTER 2: TOUGH AS LEATHER\n\nMatt followed her through the door of the bar, the stink of cigarette smoke and booze immediately stinging his nose. The dingy room was lit by yellow lamps, casting their dull glow through the hazy atmosphere, almost like smog rolling in over a city as it lingered in the air. Flickering neon signs pierced the gloom in bright blues and pinks, advertising different brands of beer as they hung above the bar. Their light reflected on silver taps that lined the counter and the shelves below them were illuminated by lighting strips, stacked with colorful bottles of spirits and liqueurs.\n\nThere was a red felt pool table in the center of the room, surrounded by burly truckers clad in denim and flannel, many as wide as they were tall. They nursed frothing pints of beer, the butts of their cigarettes glowing orange as they lined up shots with their cues, some of them turning to get a look at the newcomers. The space was populated by maybe a dozen tables, most of which were occupied, their patrons looking up from card games and their conversations halting as they noticed the strangers. There were a few drunks at the bar, leaning on the counter as they chased their troubles away with harder drinks. The bartender paused as he filled a glass from one of the taps, sizing up Matt and his female companion as they made their way between the tables towards him.\n\nHis companion took a seat on one of the stools at the bar, Matt following behind sheepishly, sitting down next to her as he glanced about the room. He could feel the eyes of the patrons on his back, it was like a damned Twilight Zone episode.\n\nHis new friend lit another cigarette, exhaling a cloud of smoke as the bartender walked over to her. His white apron was a patchwork of stains old and new, his rolled-up sleeves exposing forearms that could only have been described as furry. His face was adorned with a bushy beard that was peppered with grey hairs, and his eyebrows looked like a pair of fuzzy caterpillars. If Santa Claus had ever done a stint in prison, this is what he would have looked like.\n\n\"What'll it be?\" he asked, his tone giving Matt the impression that he wasn't too thrilled to have them in his bar.\n\n\"Neat bourbon, on the rocks,\" the woman replied. The bartender turned his attention towards Matt, who looked so out of place in his blue parka that he might as well have been wearing a sequined ball gown.\n\n\"I...don't really drink,\" he stammered, \"I'll just have a-\"\n\n\"Give him the same,\" his companion interjected, shooting Matt a sly grin.\n\nMatt leaned closer to whisper to her as the bartender left to pour their drinks.\n\n\"Come on, I told you that I don't drink.\"\n\n\"Well today you're drinking,\" she shot back, punctuating the statement by blowing a smoke ring into his face. Matt wafted it away, suppressing a cough as she laughed at his reaction.\n\n\"You know those things will kill you,\" he said, but she just rolled the cigarette around with her tongue and winked at him.\n\n\"Loosen up, kid.\"\n\nThe barman returned and handed them their glasses, filled with ice and amber liquid. Matt took a tentative sip, finding it smooth and pleasant, the drink warming his belly. The woman wasted no time, rolling her cigarette to one side of her mouth and taking a swig, clearly an advanced user. He took a second draw, and she leaned over to give him a hard pat on the back that almost knocked the air out of his lungs.\n\n\"See, it ain't so bad. Now I'm going to get drunk and then you're going to take me back to your place...\" She finished the sentence with a suggestive pause, watching Matt's cheek redden with a smile on her face. \"...to meet your dog,\" she added.\n\nHe laughed nervously, taking another sip of his drink and glancing about the room. Many of the patrons had gone back to their business, but a few of the men who were hanging around the pool table were muttering under their breaths and staring in their direction. Matt had never been inside the bar before, but he passed it every morning and every night on his way to and from the diner. He had witnessed more than his fair share of drunken brawls in the parking lot, and the dive had a bad reputation in the relatively small town.\n\n\"It's all about confidence,\" his companion muttered, Matt turning his attention back to her.\n\n\"What?\"\n\n\"Confidence. That's what people respond to, not your clothes. The clothes don't make the man, you don't need leather and tats to be cool. You can rock that parka, you just have to own it.\"\n\nShe was remarkably perceptive, like she could smell the insecurity on him. He had to admit, he would have expected most women to be turned off by that, what was her game? Why had she taken a liking to him as quickly as she had? Was it the food? They did say that the path to a person's heart was through their stomach after all, but he doubted that biker chicks appreciated the sensitive types.\n\n\"So,\" he started, mustering all of his courage and putting on a confident face. \"Are you gonna tell me more about yourself or is it a secret?\"\n\n\"Depends what you want to know,\" she replied, swirling the melting ice cubes around in her glass of bourbon.\n\n\"Well you won't tell me your name, so maybe I can get to know you in other ways. What kind of music do you like?\"\n\n\"Guess...\"\n\n\"Korean Pop,\" he volunteered sarcastically, and she laughed into her gloved hand.\n\n\"Try again.\"\n\n\"Mongolian throat singing?\"\n\n\"I don't think you're taking this very seriously,\" she whispered, failing to suppress her grin as she took another long draw from her glass. She was burning through it remarkably quickly, she wasn't joking about wanting to get drunk. Come to think of it, she drank and smoked like someone twice her age, yet she was healthy and spry. To his annoyance, she kept referring to him as kid too, but by the look of her she couldn't have been a day over twenty-five. While travelers often accrued wisdom and experienced beyond their years, it was not enough to explain her mannerisms.\n\n\"Alright, Mot\u00f6rhead.\"\n\n\"What am I, a stereotype? You're getting warmer though.\"\n\n\"AC/DC.\"\n\n\"Invalid,\" she said, wagging her finger at him. \"Everyone likes AC/DC.\"\n\n\"You'll have to give me some kind of clue,\" he pleaded, and she considered for a moment as she nursed her drink.\n\n\"I say Kashmir, you say...\"\n\n\"Led Zeppelin?\"\n\n\"Bingo.\"\n\n\"So like...late sixties, early seventies rock?\"\n\n\"I might be a stereotype after all,\" she chuckled, slamming her empty glass down on the counter to get the attention of the bartender. The stout man walked over to her, his expression one of perpetual displeasure, scowling at her as he began to pour her a refill. Matt noticed that one of the patrons a few seats over to their left was now passed out drunk, or perhaps sleeping on the counter, the bartender seemed indifferent and made no attempt to rouse him.\n\n\"Still think this is your kind of place?\" Matt asked, his voice low so that the other patrons didn't overhear him.\n\n\"I'm liking the vibe so far, but we'll see where the night takes us.\"\n\nShe almost seemed to be waiting for something, but Matt wasn't sure what that might be.\n\n***\n\nThey drank and chatted for perhaps another hour. She had been right, Matt was getting looser and more relaxed as he worked his way through his drink. The woman was now on her fourth or maybe even fifth refill. She drank like a fish, and she showed no sign of slowing down. He felt that it should have been enough to floor someone of her weight, and yet she remained alert and conversational, the two of them talking at length about music.\n\nShe regaled him with amusing stories about the concerts that she had been to, but Matt was fairly knowledgeable when it came to classic rock, and he was certain that some of the bands whose concerts she claimed to have attended had not toured since the mid-eighties. Even if she had been able to sneak into those concerts at fifteen or sixteen years old, that would put her current age at well over forty. Was she lying? If that was the case, then they were elaborate lies. Besides, asking her age would have been incredibly rude.\n\nAs she was recounting one of her many stories, a large man wearing a faded denim jacket sat down heavily to her left, occupying the closest empty seat between her and the sleeping drunk. He was somewhat overweight but heavily muscled, he looked to Matt like a shaved gorilla in human clothing. He sported a trucker's cap, and his chin was adorned with a bushy, black beard. He had not come to order a drink, he already held a can of beer in his hand, dwarfed by his sausage-like fingers. Matt remarked that he smelled of alcohol, inebriated judging by the way that he swayed as he leaned an elbow on the bar for balance.\n\n\"Hey beautiful,\" he said gruffly, leaning closer to the woman than was appropriate as if attempting to whisper. He was too drunk to control the volume of his voice, however, and the whole bar could overhear the conversation.\n\n\"How 'bout you ditch this pussy and come home with a real man tonight?\"\n\nHe patted his beer belly as if to punctuate his statement, laughing riotously as Matt recoiled in disgust. The woman simply continued to sip at her drink as if she hadn't heard him. There were some cheers and whistles of encouragement from a table across the dingy room, no doubt the man's cohorts. This was something that Matt should have foreseen, they probably didn't get many women in this establishment and wasted truckers who might have been on the road for days did not make for polite company.\n\nMatt was no fighter, and this man looked to be thrice his weight, he had hairy fists the size of cinder blocks.\n\n\"I think that's our cue to leave,\" he whispered hurriedly to his companion. She didn't respond, however, and she made no move to get up from her seat. He didn't sense any fear in her, yet she was smaller than Matt was, tiny in comparison to her burly neighbor.\n\n\"Hey, I'm talkin' to you,\" the man slurred.\n\n\"We were just leaving,\" Matt added in an attempt to diffuse the situation, getting out of his seat and trying to pull the woman along with him by the arm. She sat stoically on her stool, taking another drink from her glass of bourbon as the drunken trucker glanced between the two of them.\n\n\"What are you?\" he asked, directing his attention towards Matt now. \"Her boyfriend or somethin'?\"\n\n\"Look, buddy, I think you've had too much to drink. Just let us leave, and we'll be out of your hair.\"\n\nMatt looked towards the bartender for support, but he was merely watching, drying a pint glass with a rag as the confrontation played out. The trucker took the woman's forearm in his large hand, pinning it against the bar, apparently angered by Matt's suggestion.",
        "\"You ain't goin' nowhere,\" he snarled, rising to his feet with his other fist clenched.\n\nThe woman sprang into action with a creak of leather, reaching up over her shoulder and taking the trucker's denim collar in her hand. She yanked him down with surprising strength, his face impacting the wooden counter with enough force to make his head bounce like a basketball. His nose crumpled, blood streaming from his nostrils, the trucker releasing his hold on her as he stumbled backwards and clutched at his face.\n\nMatt scampered out of the way as she leapt from her seat and delivered a powerful jab to the man's side, the sound of a rib cracking echoing through the now deathly silent bar. Even as drunk as the man was, he made an attempt to defend himself, bringing up his fists and taking a swing at her. She dodged under the blow and came up from below with an uppercut that lifted him off his feet, sending him crashing into a table behind him and flattening it. The men who had been sitting there jumped clear, their upended drinks drenching the now unconscious trucker.\n\nMatt was horrified, but the biker's eyes were bright and fierce, she looked alive. How the hell had she dropped that trucker so fast? She couldn't have weighed much more than a hundred pounds, the trucker probably had a hundred pounds of muscle on him alone, and yet he was now snoring amongst the detritus of the ruined table. She hadn't used any martial arts or special tricks, she'd just hit him hard enough that he didn't get back up.\n\n\"Fuckin' bitch!\"\n\nOne of the trucker's friends rose from his seat at their table, knocking his chair over in anger and marching across the room towards her. His two companions followed behind him, rolling up their sleeves and preparing for a fight. The first lunged at her with his fist aimed at her head, but she used her forearm to knock it aside, sending him off balance and taking advantage of the opening to punch him in the throat. He dropped to his knees, gasping for air, his fingers wrapped around his neck and his eyes bulging.\n\nThe second came around the table to her right, breaking a beer bottle on its wooden surface and brandishing the jagged glass, trying to take her by surprise as her attention was focused on the first assailant. She reacted quickly as he came into range, delivering a kick to his knee with her heavy boot that buckled it. He fell forward as a cry of surprise escaped his lips, dropping his improvised weapon to shatter noisily on the ground. He rolled on the floor of the bar as he cradled his knee, whining in pain, down the for the count.\n\nShe cracked her knuckles in anticipation as she sized up the third trucker, the portly man glancing around the bar as he began to panic. He spotted a pool cue resting by the red velvet table and snatched it up, wielding it as a weapon, circling her as she walked towards the center of the room. She still had a lit cigarette in her mouth, she hadn't even dropped it during the fight. She exhaled a cloud of grey smoke that rose to join the acrid haze that hovered in the air as she squared up to her next opponent.\n\nHer assailant swung the cue like a club, aiming for her head, but she blocked it with her arm. It shattered, the wood splintering, she didn't so much as flinch. She didn't give him time to prepare a second swing, darting forward with surprising speed, reaching up to take his long hair in her leather-clad hand and bringing her knee up to meet his face as she dragged his head down towards it. There was a dull crunch, and he stumbled backwards as she released her hold on him, covering his mouth with his hands as blood stained his white t-shirt.\n\nShe closed in and punched him hard, her fist sinking deep into the paunch of his belly that hung over his belt line, and he crumpled. He lay on the ground wheezing, four men now downed by her hand, in various stages of incapacitation as the rest of the bar looked on in shock and awe. The bartender had stopped drying his glass, his sour expression changed to one of surprise, frozen like a statue as he stared at her. She waved her hand as if to dispel the pain in her knuckles, plucking the cigarette from her mouth and flicking it at the writhing trucker, then she turned and sauntered back towards Matt.\n\nHe spread his hands as if to beg a silent question, what the fuck, and she shrugged at him with a smirk on her face. She reached into her pocket and planted a crumpled fifty dollar bill on the counter, the bartender motionless save for his eyes as they tracked her.\n\n\"Hammerbox,\" she said, turning towards Matt.\n\n\"What?\"\n\n\"My favorite band. Hammerbox.\"\n\n\"O-Okay...\"\n\nShe headed for the door, and Matt followed behind her, stepping gingerly around one of the prone truckers. They emerged into the cool night air, the waxing moon lighting their way and reflecting in the puddles on the wet asphalt, Matt still trying to process what had just happened.\n\n\"How...how did you do that?\" he asked as she walked towards her bike.\n\n\"I would have thought that was obvious,\" she replied, \"have you never seen a fight before?\"\n\nShe seemed happy, excited, there was an energy to her now that hadn't been there before. Was it possible that the brawl had been nothing more than a workout to her? Had she expected to be bothered, planned for it even?\n\n\"That's not what I mean,\" he said, standing beside her as she swung a leg over her bike and put on her helmet. Her leather pants were distracting, unreasonably tight, leaving nothing to the imagination as he struggled to keep his eyes off the curves of her thighs and ass. \"You can't be that strong, it's just not possible. You're shorter than I am, you're like...a hundred and twenty pounds at best.\"\n\n\"Was Bruce Lee a six-foot bodybuilder?\"\n\n\"You didn't do any Bruce Lee shit,\" Matt insisted, \"you just hit them hard enough to put them down. Someone of your size shouldn't be able to do that.\"\n\n\"Don't worry about it,\" she chuckled, as if the whole thing was so easy to dismiss. She turned to pat the seat behind her in invitation, and for a moment, Matt considered pressing the issue. But if she wouldn't even tell him her name, then she wasn't about to spill her secrets just because he insisted on it. He shrugged with exasperation and climbed on behind her, wrapping his arms around her waist as the engine roared to life.\n\nCHAPTER 3: A FLEETING MOMENT\n\nMatt patted her shoulder to indicate that they should turn off the main road, and she drove them down a winding dirt path through the forest, more suited to a dirt bike than her motorcycle. The way was lit by the yellow beam of her headlight, the bright moon now obscured behind cloud cover. His house lay at the end of this back road, his parents had owned the property for about as long as they had owned the diner. It was out of the way, perhaps half a mile through dense woodland and built in a clearing. It was scenic, private, though some might have called it isolated.\n\nAs they emerged from the trees the house came into view, it was old and sprawling, the wooden slats that made up the walls weathered and darkened in places by the elements. It was large, too large for Matt's liking. Even when his parents were home they scarcely even used the upper floor and the attic.\n\nIt was a story as old as time, or at least as old as predatory real estate salesmen. A couple tired of city life get the idea in their heads that living out in the boonies will be relaxing, so they scrape together what money they can and buy some run-down house out in the middle of nowhere. They tell themselves that they'll renovate it, that they'll relax and enjoy a peaceful life in the country, close to nature. They'll wake up every morning to crisp mountain air, and they'll eat a breakfast of wholesome vegetables grown in their own garden. Of course, that's never the way it goes. They eventually realize that living out in the sticks is fucking boring and that there's nothing to do, and that renovating a run-down country house is thankless and tedious work. The wife gets bored and pines for her friends and her social life, the husband finds out that installing a shower in the upstairs bathroom is far beyond his capabilities, and that hiring people who actually know what they're doing is going to cost more than they had budgeted for.\n\nIn the end, they treat the house as more of a vacation home, leaving it to rot as they go back to their usual business or leaving it in the care of their hapless son as was the case with Matt. He appreciated not having to pay rent and work was a short walk from where he lived, but his social life wasn't exactly flourishing under these conditions.\n\nAs they pulled up by the front door and the biker turned off her engine, they heard barking, a massive shape barreling around the side of the house. It was a Husky, its puffy fur colored in gradients of grey and white, its tail starting to wag furiously as it recognized its master.\n\nMatt hopped off the bike and crouched to tackle the dog as it crashed into him, rubbing its fluffy flank as it tried to lick his face, whining a greeting.\n\n\"Hey Smoke,\" Matt laughed, the dog almost large enough to knock him off his feet. \"You miss me boy? Yeah?\"\n\nThe dog never ranged far from the house, and they didn't get any visitors out here, so it was safe to leave him outside during the day. He had the run of the place, spending much of his time out in the woods chasing squirrels. It was a good life for a dog, though he did miss his master when he was at work.\n\nSmoke bounced excitedly, then turned his attention to Matt's female companion, his tongue lolling from his mouth as he trotted over to greet her. He sniffed her curiously as she dismounted her bike, standing there with her hands on her hips as the dog lowered his head to smell her boots. Smoke whined, then lay down in front of her, rolling onto his back with his legs in the air in a display of submission. She smiled and crouched down to rub his belly, one of his hind legs kicking as she ran her fingers through his long fur.\n\n\"Wow,\" Matt marveled, impressed by Smoke's reaction. \"You really have a way with dogs. Smoke is friendly, but I've never seen him roll over for a stranger like that before. You usually have to give him a treat or play tug of war with him for a while before he'll give you the time of day.\"\n\n\"He's a lovely dog,\" she said, \"he seems happy to be living here with you.\"\n\nThat was kind of an odd comment, but Matt shrugged it off as he led her towards the house, the dog following close behind. He pushed the front door open with a creak, turning on the hallways lights with a flick of an old-fashioned switch on the wall. A somewhat musty smell washed over them, the floorboards groaning their displeasure underfoot as Matt led his guest down the hallway. They passed a rickety, wooden staircase that led up to the second floor, taking a left into the living room.\n\n\"Big house,\" she mused, craning her neck to look around. She wasn't exaggerating, the living room alone was the size of an average apartment in the city. There were two couches spaced around a wooden coffee table, an armchair, a television and a large speaker system. The walls were stacked with shelves that held as many knick-knacks as they did dusty books. Old lamps cast the room in their yellow light, and an imitation chandelier hung from the high ceiling, wrapped with cobwebs. Where the walls were exposed they were decorated with wallpaper that Matt found dated and tasteless, the carpet was at least something that he was able to keep clean.\n\nHe shrugged off his parka and took a seat on one of the couches, sinking into the faux-leather, Smoke sticking close to his new friend as she walked around the room to examine the oddities.\n\n\"Too big if you ask me,\" Matt said, \"you'd need a team of maids to keep the place clean. I basically just live on the ground floor. If you want to spend the night here rather than at the motel, we have a guest bedroom. I could get you some clean sheets.\"\n\nHe heard the creak of the floorboards as she walked up behind him, leaning over the back of the couch and draping her arms across his shoulders, the smell of cigarettes and leather rising to his nose. His heart skipped as he felt her warm breath on his ear, her lips no more than an inch away as she whispered to him.\n\n\"Not that I don't find your naivety endearing, kid, but I don't have time to beat around the bush. I gotta be gone by tomorrow night, so let's make what time we have left count.\"\n\nMatt felt her gloved hand below his chin, turning his face up towards her, his fingers digging into the armrest of the couch as she pressed her soft lips against his. She locked him in an upside-down kiss, his heart pulsing in his ears as her warm, smooth tongue entwined with his own. She teased him with slow, gentle strokes, his face burning as she subjected him to a deep and sensual embrace that made his toes curl. She tasted of copper, with a hint of her preferred brand of cigarettes and the bourbon that they had both consumed at the bar, her deft and practiced movements making his spine arch off the cushions beneath him as she held his face firmly in her grasp.\n\nShe pushed deeper, the strokes of her slippery muscle taking on a more sexual and tantalizing quality, painting his inner cheeks and the roof of his mouth as he rose to meet her with a desperate urgency that surprised even himself. Her gloved hand slid down towards his neck, resting around his throat, the light touch of her fingers sending an electrical current through his trembling body. He felt feverish, his mind going blank, all that he could concentrate on was her maddening proximity and her smooth lips as she mouthed softly.\n\nHer long, raven hair fell about his shoulders, tickling his skin as she dragged out the kiss. Her clothing creaked as she shifted, her zippers and buttons clicking near his ears, a pleasant shiver coursing through him as she gave him one last lingering stroke.\n\nIt was over as suddenly as it had begun. She released him with a wet smack to sink back down into the couch, leaning on the headrest and peering down at his red face with a satisfied expression. She wet her rosy lips, her gaze covetous, Matt making a futile attempt to regain his composure. His heart was beating against his ribs like there was a jackhammer trying to break its way out of his chest, his breath coming in ragged bursts. He opened his mouth to beg a question, but she cut him off.\n\n\"We've only got this moment,\" she whispered. Before he knew it, she had walked around the couch, and she was climbing atop him. She straddled him, her hands resting on his shoulders. The tight leather of her pants pressed against his growing erection through his jeans and he raised his hands as if in surrender, afraid to touch her. She took them and guided them around her hips, leaning close to plant a sucking kiss on his neck, her weight sinking them both deeper into the cushions.\n\nHer lips crawled across his skin, sparks flying in his brain, until she found his earlobe and sucked it into her mouth to chew on it gently as he squirmed beneath her.\n\n\"Stop thinking so hard,\" she chuckled, \"just go with it.\"\n\n\"I just...don't know what you see in me,\" he stammered.\n\n\"Let's just say that you're my type,\" she answered cryptically. \"Now are you going to let me fuck you or not?\"\n\n\"Yes,\" he replied, his heart throbbing in his chest.\n\n\"Finally, something that you can be certain about,\" she teased as she sat up and began to unzip her jacket. She dragged the zipper down slowly, teasing Matt as his eyes followed it down to her waist, the leather garment opening to reveal a black t-shirt beneath. She shrugged off the jacket and threw it to one side, pulling her shirt over her head, exposing her porcelain skin. Her body was slim and toned, sporty, she had a narrow waist that flared into pleasantly wide hips and a lightly muscled belly with taut abs that were visible below the skin. Her six-pack flexed and twisted as she succeeded in freeing herself from the shirt, throwing it over her shoulder as her long hair fell over her face. She brushed it out of the way then reached behind her back to unhook her black bra, Matt taking the liberty of resting a hand on her hip and feeling her twitch at his touch. Her skin was as smooth as glass and as soft as silk, warm beneath his fingers, his partner smirking down at him as she discarded her bra. He had expected her naked body to be a patchwork of tattoos, but there were none that he could see, her skin was flawless and radiant under the light of the old lamps.\n\nShe covered her breasts with one arm to hide them from view, their milky flesh spilling over her forearm like dough around a rolling pin, grinding gently against his erection for a few moments as she made him wait. She finally released them from her grasp and let them fall, two pert and shapely boobs with erect, pink nipples bouncing gently as they settled. They were perfect handfuls, Matt wasting no time as he reached up to cup one in his hand, feeling her firm nipple pushing into his palm as her breast deformed in his grasp. Her supple fat spilled between his fingers like wet clay, and as he pressed into the firmer breast tissue beneath, he felt her thighs tighten around his waist, an appreciative gasp escaping her lips.\n\nShe took off her gloves and began to unbutton his shirt, opening it up to expose his torso and running her fingernails from his chest to his belly. Matt was in decent shape too and she seemed pleased by what she saw, biting her lower lip as her eyes played over his body hungrily.\n\nShe slid down onto the carpet and parted his thighs with her hands, her breasts hanging just above the tent in his jeans. A pleasant shiver ran through him as she placed a wet kiss on his belly, her tongue flicking out to taste his skin. She caught his zipper in her teeth and dragged it down, her dark hair tickling him, then she pulled open his fly. His erection bounced up, freed from the bonds of his jeans but still restrained by his white underwear, the biker taking the bulge in her hand. She stroked it gently through the fabric of his shorts, the warmth of her body permeating the cotton, making him grunt as she gave it a firm squeeze.\n\nHis nameless partner moved her head down to hover over his crotch, taking the tip of his member into her mouth. He felt her tongue circle his glans through the fabric as her warm saliva dampened it, her maddening teasing making him swell and throb in her grasp.\n\nShe relented, looking up at him with her ice-blue eyes, hooking a finger below his waistband and pulling his underwear down. His member jumped out at her as it cleared the elastic, bobbing in time with his heart as she ran her index finger slowly from the base to the head.\n\nShe brushed her cascade of raven hair out of the way again, ensuring that he could see her face and his member as it pulsed an inch away from her rosy lips. She breathed warm air on it, watching it twitch and flex in response, then she lowered her head.\n\nMatt's butt rose off the couch as he felt her smooth lips slide over his glans, the biker taking it into her mouth and painting his tender flesh with slow strokes of her wet tongue. She circled the head, her saliva making their contact slippery, feeling his cock swell as she held it in her mouth.\n\nIt was all that Matt could do to stop himself from thrusting into her throat, her dark hair tickling his belly as she withdrew to plant a kiss on his sensitive underside. She let him stew for a moment, her absence marked by the feeling of cool air on his erection, then she drew him into her warm mouth again.\n\nHer tongue lashed against his sensitive anatomy, her lips pursed firmly around his head, her smooth muscle dragging across his glans and drawing slow shapes as she subjected him to a doting blowjob of such intensity that it made him feel as if his legs were melting. His every nerve was aflame with harsh sensation, waves of pleasure washing up through his body as her dexterous organ crawled across his skin, her slim fingers stroking his shaft in a slow rhythm as she went.",
        "She increased her pace, pumping up and down his length as she kept his head between her soft lips, lapping at it greedily as a bead of precum welled at the tip. His knees were going weak, it was a good job that he was already sitting down. His brain was fizzing and popping as if it was a hard drive that someone was running a magnet over.\n\nShe took him a little deeper, her lips crawling halfway down his shaft and her hand falling to rest on his belly, Matt gritting his teeth as his glans pressed against the back of her throat. She held him there for a moment then drew back, pushing his member into her cheek and bulging it outwards, her satin flesh gliding against him as he twitched and groaned.\n\nHe could scarcely formulate a coherent thought, his fingers digging into the faux-leather of the couch as she maneuvered his member around in her mouth with her tongue and slid him back into her throat. She pressed deeper this time, kissing the base of his member as she took him to the hilt, the smooth muscles of her gullet closing around his glans like a velvet prison.\n\nHis hands shot into her hair as she swallowed around him, her slick muscles massaging him as they contracted and squeezed, her tongue fighting for space as it stroked his length. He felt her spasm around him as she kept him there, her body fighting to expel the foreign object until she eventually withdrew to let his member fall from her mouth along with a sagging web of stringy saliva.\n\nShe took a moment to catch her breath, his cock in her hand and her cheeks flushed pink, apparently enjoying herself judging by the wide grin on her face.\n\n\"You were packin' heat, kid. It's always the quiet ones...\"\n\nShe took him into her mouth again before he could stammer a reply, his spine arching as her tongue curled around his erection, the suction strong enough to make his head spin. This wasn't a situation that he had expected to be in when he had gotten out of bed that morning, she wasn't kidding when she said that she was pressed for time.\n\nShe pressed him deep into her throat once more, and he covered his burning face with his hands, his hips rising reflexively to match pace with her as she started to bob her head in his lap. She gripped his hips, putting her weight on him to prevent him from pushing so deep as to choke her. He sank back into the couch when she paused to take a breath, keeping him on edge with slow glances of her tongue as she watched him with covetous eyes, running her fingers through the slippery saliva that glazed his member as she stroked him.\n\n\"Tell me when you get close,\" she said, before slamming back down on him. She was relentless, his eyes rolling back into his head as harsh pleasure coursed through his body. She had him dancing like a puppet on a string, at the mercy of her skilled tongue.\n\nHe couldn't take much more of this treatment, he could feel a familiar pressure rising in his loins, building inside of him until he couldn't stand it any longer.\n\n\"Coming,\" he hissed through gritted teeth, his muscles clenching as he tried in vain to stave off his impending orgasm. He had expected her to pull back, but she doubled down instead, drawing him as deep into her throat as she could tolerate as the first pulse of his climax tore through him. She swallowed it as it came, her lips locked around the base of his member as he pumped a thick wad of his ejaculate directly into her waiting mouth, the slick muscles of her throat milking it from him as she swallowed rhythmically. With every wracking throb of pleasure that shot through him, he pumped another load into her throat, the sensation of her muscles contracting as she drank only serving to encourage him.\n\nHe felt like she was sucking the very life force out of him, a shiver running up his spine as his cock jumped in her mouth and loosed the last of his emission, her tongue glancing across his sensitive head as she dragged her lips up his shaft and released him. He lay back against the couch with his forearm covering his eyes, his chest rising and falling heavily as he recovered. After a few moments, he felt the woman pat him on the thigh to get his attention.\n\n\"Don't get too comfortable, it's my turn.\"\n\nHe pulled his arm away from his face, blinking as his eyes readjusted to the light, watching her as she stood and leaned forward to unbutton her pants. Her pert breasts hung from her chest, wobbling as she danced on the spot, her leather garments so tight that getting out of them was apparently an ordeal. They slid down to expose her milky thighs and a pair of black panties, his nameless companion stepping out of them and kicking them away across the carpet. She noticed that his eyes were playing up and down her body, posing for him with her hands on her hips and a smile on her face.\n\n\"Are you just going to look, or do you want to touch?\"\n\nMatt felt a new aggression rise up inside him, the biker loosing a burst of surprised laughter that petered out into a comely purr as he wrapped his arms around her hourglass waist and pulled her down onto the couch. He lay her on her back as he climbed atop her, taking one of her shapely breasts in his hand and leaning down to suck the engorged nipple into his mouth, trapping it between his lips as he battered it with his tongue. She rubbed her thighs together gleefully, her slim fingers gripping his forearms as he mouthed and kissed, kneading the tender meat of her boob as she writhed beneath him.\n\nHe moved down, planting kisses on her flat belly, her abs rippling beneath her smooth skin as he reached her hip.\n\n\"Pull 'em off,\" she whispered, and he hooked his fingers around the waistband of her panties. He dragged them down and positioned himself between her parted legs as she peered down at him, nibbling on a fingernail in anticipation of his touch.\n\nMatt planted a kiss on the burnished skin of her inner thigh, smooth and cool beneath his lips, feeling an appreciative shudder run through her body. He rose towards her belly, mouthing as he went, skirting around the trim tuft of her pubic hair. She reached down a hand and spread her loins for him in invitation, exposing the pink flesh between her puffy lips, her delicate folds shining with a glaze of her juices. He lowered his head towards it, feeling the feverish heat that radiated from her on his face, her feminine scent rising to his nose and exciting him in the most primal of ways.\n\nShe leaned forward to watch eagerly as he neared, his red cheeks brushing her cool thighs as her legs tightened around his head, guiding him forwards. His lips touched hers, and she quivered, her chiseled abdominal muscles tensing as his tongue slid out to taste her. He dragged it between her labia, lapping at her vulva, her sour juices flowing forth to make her damp and slippery. She tasted metallic, sour, but he was far too aroused to care as he explored the folds of her sex.\n\nHe felt her fingers delving into his hair, taking a handful as he mouthed and licked, his wet muscle gliding across her most intimate anatomy and circling her leaking opening. She was so wet that her excitement was dripping from his chin, and he dared to slide his index finger inside her as she tightened her grip on his hair in response.\n\nHe was received by slick muscle, her smooth walls clamping down around his digit like a fist, sucking him deeper with rolling contractions that were surprisingly strong. She was in good shape, and her pelvic floor muscles were no exception, her silken passage wringing his finger and hinting at the pleasures yet to come.\n\nHis tongue traveled up towards her clitoris, probing for the swollen nub of flesh beneath its protective hood. When he located it, he pressed his lips around it, drawing it into his mouth and painting slow circles on its shiny surface as her insides clamped down on his finger and her spine arched off the cushions. She kept a tight hold on his hair, her thighs gripping his head like a bear trap as if afraid that he might pull away. Instead, he began to move his digit in and out of her as her sodden flesh clung to him with all the suction of an eager mouth.\n\nShe rolled her hips, grinding them against his face as he wrapped an arm beneath her butt for purchase, sliding a second finger into her twitching hole as her juices leaked around it in thick strands. He sank his fingers into the meat of her ass, firm and springy like rubber, the woman reacting to his every touch with gentle shudders and low sighs. She crossed her legs behind his head and doubled over as he increased the pace of his licking and probing, moving his fingers in and out of her furiously as he grazed her hard protrusion with his tongue.\n\nShe seemed lost in a fugue as he glanced up at her over her mound, her eyes closed as she bit down on her fist, her pale cheeks flushed red. He felt the slimy walls of her passage squeeze down on him with greater frequency, building towards a crescendo as her whole body began to move in time with them, her free hand mauling one of her breasts as she opened an eye to peer down at him.\n\nJust when he thought that she might pop, she stopped, releasing her hold on his hair and pushing his head away from her loins. He knelt on the floor in front of the couch, his face connected to her swollen sex by a fat rope of her fluids that broke to fall to the carpet, the two of them breathing heavily as they eyed each other up.\n\n\"Not yet,\" she panted, \"I want you first.\"\n\nShe stood on shaking legs and pulled him to his feet, pressing up against his body, squashing his member against her flat belly as she embraced him. She was a little shorter than he was and so she stood on her toes as she reached up to kiss him, tasting her own juices on his lips but not caring as her tongue pushed into his mouth. He ran his hands down the gentle curve of her spine, tracing the indent with his fingers, roaming lower to cup the ample cheeks of her rump. He sank his digits into the yielding fat, feeling the firm muscle beneath it flex, her abs almost as hard as his erection as his manhood throbbed against them.\n\nShe lingered for a moment, teasing him with quick strokes of her tongue before pulling back and turning him around. His back now to the couch, she reached out a hand and placed it gently against his chest, pushing him off balance so that he fell backwards onto the cushions.\n\nShe swung a leg up onto the couch, then another, kneeling over him with her dripping loins hovering tantalizingly close to his aching member. She rested her hands on his shoulders as she positioned herself, her long hair tickling his chest as she looked down between her legs, biting her lip in anticipation. She was good and ready, a string of her clear juices falling from between her puffy lips to land on his erection, a droplet of it sliding slowly down his shaft.\n\n\"Shouldn't we get a cond-\" Matt began, but she placed a finger against his lips to quiet him.\n\n\"Don't worry about it,\" she whispered, her smile faltering for a moment. \"I can't...y'know...\"\n\nShe couldn't have kids? He wanted to say something comforting, something to reassure her, but before he got the chance, he felt her fingers closing around his shaft. She rubbed it up and down her vulva, wetting it with her viscous emissions, tingling pleasure forcing Matt's eyes closed as his glans brushed against her hot flesh. She pressed the head against her opening and lowered herself down onto him. Even with her copious lubricant, there was a moment of resistance before he broke through. She sat on him, taking his member to the hilt in one smooth motion, the two of them gasping in unison. His erection swelled and flexed inside her, the walls of her narrow tunnel clinging to him like wet velvet. He could feel every crease and contour as her loins molded around him like molten plastic. She was so damned tight, muscular, every quiver and tremor that passed through her taut body translating into his member as if there was a hand gripping him from the inside. In turn, she felt every throb of blood that coursed through his length, his member burning inside her like a molten iron in a forge and his every vein scraping against her tender passage to drive sultry gasps from her throat.\n\nThey stayed locked together for a few moments, basking in the sensation, afraid to start moving lest the pleasure overcome them and drive them to an early and disappointing climax. His partner took the initiative, Matt's hands reaching to her wide hips as she began to rock slowly back and forth, twisting and grinding his rigid erection against her insides as she gyrated on top of him.\n\nHer ample chest bounced enticingly as she sat back, resting her hands on his thighs for balance as she started to rise and fall on his shaft. He couldn't resist plunging a hand onto one of the soft globes, the other holding on to the polished skin of her waist, feeling her loins clamp down on him as he trapped her nipple between his fingers and squeezed gently. He dug deeper, kneading her supple fat like warm cookie dough beneath his digits, watching her boob deform and then spring back to its original shape when he relented. One of her hands rose to rest atop his own, encouraging his squeezing as the slow rhythm of their courtship increased in tempo.\n\nShe began to bounce on his shaft, their bodies clapping together as the couch beneath them shook. His pulsing shaft was visible for brief moments when she reached her apex, covered in a reflective sheen of her sticky juices, before she came down on him again and buried it to the base. As her thighs closed around his hips, he felt the steely muscles that lurked just beneath their glass-smooth surface tensing. They were firm and shapely, sheathed in a subtle layer of fat that was as yielding as melting butter under his fingertips.\n\nBeads of sweat welled on her pale skin, gliding down towards her belly as they followed the contours of her muscle. They caught the light, shining like droplets of morning dew, her abs cutting channels in her flat tummy that guided the glistening droplets on their way. One such droplet pooled in her navel and Matt couldn't help himself but raise his hand from its place on her thigh, sliding it from her chest to her groin as her sudor made her skin slippery and damp. He felt her muscles beneath the surface as they twitched at his touch, flexing and shifting with her every movement, her lovemaking had all of the grace and skill of a sensual dance.\n\nMatt could do little beyond obeying the ebb and flow of his passion, his hands exploring the soft and alluring curves of her body as she twisted and bounced atop him, doing his best to meet her downward motions with upward thrusts that made their bodies slam together.\n\nHer fingernails dug into his shoulder as she increased her pace, rising to her peak then letting the weight of her body bring her back down to drive him into the couch. The springs in the old furniture squeaked their protests, the wooden frame creaking under the strain, the woman throwing her head back so that her long mane of raven hair fanned out behind her as she rode him.\n\nShe slipped a hand down between her legs as she probed for her clitoris, her fingers dampened by her flowing excitement. Her body tensed as she found it, rubbing as his member plunged in and out of her sopping loins, her breath becoming ragged and irregular. Matt kept up his pawing, delving his fingers deep into the sensitive tissue of her breast as the other one hung free, bouncing in time with their frenzied lovemaking.\n\nShe had already been close when they had started, and now he wasn't far off either, the ache in his cock taking on a more urgent quality as she drove it against her yielding walls with the relentless shaking of her hips. It was like she was trying to scratch some maddening itch deep inside of her, taking him ever deeper and harder as his erection plunged her reaches, the heat and friction building along with their groans of pleasure.\n\nShe buried her burning face in the nape of his neck as she collapsed onto him, clinging to him as he felt her hot breath on his skin. The pleasant scent of her shampoo filled his nose as her dark hair cascaded over him, her small frame sliding against his as their sweat made their urgent coupling wonderfully slippery.\n\nTheir pace became frantic, unbridled, grasping fingers roaming across damp skin as they wrestled on the couch. Matt flipped her over and pinned her beneath him as her legs locked around his waist, her fingernails drawing red trails down his back as she clung to him. He thrust into her, gripping the headrest for leverage, a primal grunt escaping her lips as he fucked her into the cushions. His burning organ scraped the depths of her spasming passage, shivers spreading through her body as this new pleasure set her nerves alight. She let out a low and wanton moan that only served to encourage Matt, his lust coursing through his veins like hot magma as she peered up at him with her striking blue eyes, the moisture on her skin making her long hair stick to her face.\n\nThey found a punishing rhythm together, their bodies feeding into each other, driving one another higher and higher towards the peak of their shared ecstasy. For a precious few moments there was no thought, the higher functions of their minds blanked out by primal carnality and a passionate desperation as they rutted like beasts, the heat and friction of their joined bodies such that Matt feared they might catch alight.\n\nHer loins clung to him, walls of rippling, silken muscle gliding up and down his shaft as she milked him in wracking waves. He buried his member to the hilt inside her, her long lashes batting with every thrust, the impact enough to shake the furniture beneath them.\n\n\"Fuck! D-Don't stop,\" she stammered, her thighs tightening around him like a trap as the maddening contractions of her passage grew stronger and more frequent. He felt as though his brain was boiling in his skull, he could scarcely think, it was like having a hand gloved in damp satin wringing his cock. He felt an orgasm bubbling up inside of him, impossible to hold back. As his member jumped and throbbed inside of her, she glanced up at him with a salacious expression on her red face.\n\n\"Come inside me,\" she whined, an invitation that was impossible to resist as her salacious request pushed him over the edge. His body tensed as crippling pleasure spread through his him like a fever, his erection pulsing inside of her as it forced out a thick wad of his emission, his partner gasping and quivering as his warmth flooded her.\n\nHe gritted his teeth against the ecstasy, pushing into her depths as another rope of his ejaculate left his body, the harsh massage of her slippery tunnel drawing more out of him as she started to come too.\n\nMatt wrapped his arms around her, pulling her close as she panted in his ear, every shudder that ran through her tight body chased by a pained gasp or a low mewl that made his heart skip. Her muscles tensed and flexed beneath his fingers, wet with their sweat and fluids, her body convulsing as she wallowed in her climax. Everything around them seemed to fade away, the living room melting like a watercolor painting in the rain until all that was left was them.\n\nSlowly, gradually, they recovered from their shared orgasm. Like climbing out of quicksand, their conscious minds struggled to the forefront, smiles and stifled laughter replacing the moans of pleasure as euphoria inundated them in its sweet glow.\n\nThe biker reached up to kiss him, her palm cool against his cheek, her gentle embrace shooting through the haze of his afterglow like a bolt of lightning and triggering one final burst of pleasure. She twitched as she felt his member throb inside of her, Jules finally leaving the warmth of her enticing body as he pulled back.\n\nHe slid out of her, her tight passage finally relinquishing its harsh grip on him, and he looked down at her as his lingering erection jumped in the air. She lay spread-eagled on the couch, her previously straight hair now a tangled mess, sweat making her porcelain skin glisten and a mixture of their shared juices leaking from her in sagging strands. Her shapely chest rose and fell, a finger sneaking down to rub her mound, easing out another throb of pleasure that caused her sodden thighs to rub together.",
        "She looked up at him with a satisfied smile on her face, biting her nail again as her eyes traveled from his flushed face down to his still rigid member.\n\n\"You got a shower?\" she asked, brushing her hair out of her face. He nodded sheepishly. \"Good, you're coming with me,\" she announced as she struggled to her feet on trembling legs. \"I'm not done with you, kid, not by a long shot.\"\n\nShe took his hand and led him out of the room, Smoke raising his head to watch them leave, then returning it to its place on his paws as he resumed his nap on the adjacent couch.\n\nCHAPTER 4: INTO THE NIGHT\n\nMatt stood beside the bed as his guest emerged from beneath the haphazard pile of blankets and pillows, watching her as she stretched her arms above her head and yawned widely, rubbing her eyes as she looked up at him. She was still nude, her body hidden beneath the sheets, and she had a case of bed hair that made her look like she was wearing a wig made out of bird's nests. The pair of thick curtains that covered the window made the bedroom gloomy, the light beyond casting its shadows on the wooden floor.\n\n\"Morning, or should I say afternoon,\" he said. He placed a tray across her lap, upon which was a plate of bacon and eggs along with a glass of juice and some slices of toast. \"I thought you might want some breakfast.\"\n\nShe eyed the food for a moment, then a smirk brightened her groggy expression, and she took up the fork.\n\n\"You're gonna give me diabetes, kid. By the way, do you...happen to know where my clothes are?\"\n\n\"Probably still in the living room,\" he replied, \"I'll go fetch them for you.\"\n\n\"Wait,\" she said, talking with a forkful of scrambled eggs in her mouth. \"What time is it?\"\n\n\"It's about four in the afternoon,\" he said as he paused by the door, \"I guess we got kind of carried away last night. I don't think we went to bed until maybe seven AM.\"\n\nHer expression darkened as she chewed on a strip of bacon, seeming steeped in thought.\n\n\"Thanks for the breakfast kid, but I gotta get going soon.\"\n\n\"A-Already?\" Matt stammered, apprehension twisting his guts. \"I thought we might at least spend a few hours together today.\"\n\n\"I told you that I was pressed for time. I gotta be out of this town before nightfall. I'm sorry kid, I'd like to stay longer...but I'm on a schedule.\"\n\n\"Yeah...yeah, I know. I knew this was going to be a temporary thing going in, I just...I'll go get your clothes.\"\n\nShe returned to her food, glancing up as he turned his back and disappeared through the doorway, not wanting him to see the trembling of her lip. They had really hit it off, he was a great kid and knowing that she would have to leave soon made her heart sink. She had already played things too loose, she should have set off already. He was smitten with her, and she knew that leaving would hurt him, but it was for his own good.\n\nMaybe leading him on had been cruel, but she hadn't planned for this. She had hoped that things wouldn't have gotten serious with the kid, but he was young and naive, and maybe she had secretly hoped that this would happen despite herself. Anything for a taste of normalcy, anything just to feel the warmth of another person again, to be wanted.\n\nIt couldn't be, however. She preferred Matt brokenhearted rather than dead.\n\n***\n\nMatt followed her out of the house, Smoke trailing behind them as they stopped beside her bike, the woman swinging her leg over the motorcycle with her crash helmet clasped under her arm. The sun was getting low in the sky, casting its golden rays over the treetops and painting the horizon in beautiful shades of pink and orange.\n\n\"So...will I ever see you again?\" Matt asked sheepishly, Smoke sitting at his feet as the Husky looked between the two of them. \"You can't give me a number? Not even a name?\"\n\n\"It ain't my choice, kid. I feel bad about it, believe me, but I'm-\"\n\n\"Pressed for time, I know. Can you at least tell me why? You act like the devil is on your heels. If you're running from trouble or something, maybe there's a way that I can help?\"\n\nShe reached up with a gloved hand and took him by the collar, pulling him in for a kiss, his worries melting away for a brief moment as her lips met his. Her tongue coiled in his mouth, slow and placating, almost conciliatory as her gentle strokes made his heart leap in his chest. She broke off, sliding her helmet over her head and snapping down the tinted visor.\n\n\"For what it's worth, this is the most fun I've had in a long, long time. You're a good kid, keep up the cooking and work off that debt. Maybe the next time I come through here, there'll be an English pub in the place of that throwback diner.\"\n\nMatt nodded, stepping back as she kicked her ignition, the bike's powerful engine roaring to life as Smoke scampered away from it to hide behind his master's legs. She revved it, but the rumbling purr petered out into an unhealthy chugging before finally going silent. Matt didn't know anything about motorcycles or engines, but even he could tell that this hollow clanking wasn't normal. The woman leaned over to get a look at the exposed engine, cursing to herself.\n\n\"Shit shit shit, fuck. Not now, not now!\"\n\nShe hopped off the bike and kneeled beside it, pulling off her helmet and placing it beside her on the dirt. She reached towards the metal and then cursed loudly, waving her hand as the hot engine burned her through her glove. Her frustration was palpable. Matt was almost afraid to offer help, watching her as she pounded the bike with her fist.\n\n\"Er...engine trouble?\" he asked.\n\nShe turned to look at him over the shoulder of her leather jacket, the expression on her face almost one of pain.\n\n\"Tools, you got tools here?\"\n\n\"In the garage maybe, but I don't drive, and I don't know my way around an engine. That was more my dad's area of expertise.\"\n\n\"Where?\"\n\nHe pointed towards a structure that adjoined the house with a sliding door on its face, and she rose to her feet, practically sprinting to cover the distance as her long hair billowed out behind her. Just what the hell was so urgent? She didn't just want to ditch him, nobody treated a walk of shame like a life or death scenario, something was really wrong. He couldn't for the life of him imagine what.\n\nHe followed her over to the garage as she crouched by the door, hooking her fingers under it and raising it through strength alone, her biceps visible through the tight material of her jacket. She rushed inside as Matt slipped in behind her, watching as she scanned the room frantically.\n\nThe garage was full of gardening tools and spare parts, his dad's old 1968 Camaro taking up most of the space, draped in a protective cover and with its engine block sitting to one side. The space was coated in dust and cobwebs after years of neglect. Matt had no use for it, and his father hadn't worked on the car for a solid decade, another money-wasting project that had quickly been abandoned.\n\nThe woman searched for a few minutes, becoming increasingly agitated, before finally locating a toolbox. She brought it outside and placed it beside her helmet on the ground, popping it open and sifting through the tools that had been haphazardly stored inside.\n\n\"Do you know what the problem is?\" Matt asked, hovering nearby. \"We could always walk it down to the garage in town, wouldn't take more than an hour or two.\"\n\nShe shook her head, pulling out a tool that Matt didn't recognize and beginning to disassemble parts of the bike. It might as well have been a nuclear reactor for all he knew. She worked on it for maybe fifteen minutes, pulling out all kinds of parts and components, checking them and cleaning away oil and grime with a rag. She made a pile of what looked like random pieces of metal to Matt, in all manner of shapes, the bike now little more than a skeletal frame with a fuel tank and two wheels. She wiped her brow with the rag, inadvertently smearing grease on her face, then stood to appraise the machine.\n\n\"You figure out what the problem is?\" Matt asked.\n\n\"Yeah, I got a shot conrod. Looks like the big-end bolt failed, and it snapped.\"\n\n\"Can you fix it?\"\n\n\"No, I need to replace the part.\"\n\nShe kicked her bike angrily, startling Smoke who was sitting nearby, then she leaned her hands on the leather seat and hung her head as she considered her options.\n\n\"How far is the walk back to town?\" she asked, Matt pausing to think for a moment before replying.\n\n\"Ninety minutes, maybe an hour if you jog.\"\n\n\"What if I cut through the forest?\"\n\n\"I...wouldn't advise that. You'd shave some time off, but these woods are dense, and the sun is setting. You'd get lost for sure. What if I called a tow truck? They could take your bike down to the garage, I'm sure they have replacement parts down there.\"\n\n\"It would take too long,\" she complained, glancing warily at the sun as it crept down behind the mountains in the distance.\n\n\"Listen,\" Matt said, growing frustrated with her cryptic bullshit. \"I can't help you if you don't tell me what's wrong.\"\n\nShe laughed bitterly, and he was taken aback, it wasn't the reaction that he had expected.\n\n\"If I told you, you wouldn't believe me.\"\n\nShe stood suddenly, seeming to come to a decision, then turned to face him with an uncharacteristically dour expression. It was almost frightening, her complexion was ashen, as if all of the blood had drained from her face.\n\n\"I'm going to ask you to do something,\" she told him, her tone deadly serious. \"It's going to sound strange, crazy maybe, but you have to promise me that you'll do as I say. Promise me,\" she insisted, \"can you do that?\"\n\nMatt shrugged with exasperation.\n\n\"Yeah fine, whatever.\"\n\n\"Go into the house and bolt the doors, close the windows and draw the curtains. Keep the lights off until the sun comes up again. Do you understand me? Don't go outside for any reason. Stay quiet, don't even light a fucking candle. No matter what you hear, no matter what you might see, you have to stay hidden.\"\n\n\"Why do I-\"\n\n\"Promise me!\" she snapped, her eyes wide.\n\n\"Yeah okay, I promise. But I don't understand. What's going to happen? Where are you going to be?\"\n\n\"Don't worry about me, I'll be fine. Just trust me, okay? Please do as I ask.\"\n\nShe was pleading, frightened. What she was asking of him made no sense, and yet he got the distinct impression that she was entirely serious.\n\n\"Alright, I'll do it.\"\n\nThat seemed to ease some of her tension, and she nodded, walking closer to him. She threw herself into his arms, burying her face in his chest, hugging him tightly as he looked down at her in confusion.\n\n\"I'm sorry,\" she mumbled, \"I was selfish. I should have just driven straight through this town, I shouldn't have stopped at the diner, and I shouldn't have strung you along the way I did. I just...I liked you.\"\n\n\"You don't have to apologize for liking me,\" he laughed. \"Yesterday was...the most fun that I've ever had, hands down. Spending time with you has been a real adventure.\"\n\nShe broke away from him, lingering there for a moment as she looked up at him, before turning her back and setting off into the forest.\n\n\"Hey!\" Matt called after her, \"you're going in the wrong direction! The town is that way!\"\n\n\"I know!\" she shouted back, vanishing into the treeline.\n\nMatt watched her go, shaking his head in disbelief, then called for Smoke to follow him as he walked back to the house.\n\n***\n\nThe bolt snapped loudly as Matt locked the front door, Smoke following him through the house as he secured the windows on the ground floor and drew the curtains. He felt like he was preparing for a damned hurricane. He couldn't begin to guess at what her reasons for asking this of him were. It seemed like she feared for his safety, but from what?\n\nThere were biker gangs that were notorious for drug running, like the Hell's Angels or the Bandidos. Perhaps she had crossed one such organization, and they were hot on her tail. She might fear that they would harm him to get to her, but if that was the case, why stop in some podunk town and waste time hanging out with a stranger? If she truly feared for her life, then she wouldn't be giving her pursuers a chance to gain ground on her. She wouldn't have left her bike out in the open either, that was proof that she had been here and it would lead them right to her.\n\nHad she committed a crime and she was fleeing from the police? No, it couldn't be that. Again, she had left her bike here, and she had caused a ruckus at the bar that would surely have drawn more attention than a fugitive from the law would have wanted.\n\nNo, it was something else.\n\nHe proceeded to the top floor, the wooden stairs creaking under his feet, moving through the house and doing as she had asked him. The property was large, but before long he had secured all of the doors and windows, and he had turned off all of the lights. It was late in the evening, not quite dark outside yet, the rays of the setting sun were still bleeding in through the curtains.\n\nWhat was he going to do now? The woman had run off into the forest, if she made her way back, she wouldn't be able to get inside with all of the doors bolted. Besides, her cryptic warning had included the instructions that he shouldn't open the doors for any reason, no matter what he saw or heard. No lights meant no TV, no reading. Maybe he'd listen to some music on his phone and turn off the screen, that should be fine as long as he used his earbuds.\n\nHe collapsed down onto the couch and flicked through his playlist, Smoke curling up on the carpet by his side. He selected a few albums to play on repeat then shut off the screen, the living room cast into relative darkness. The sun finally seemed to be slipping behind the mountains. He'd get some sleep, and then he'd go out and look for the biker in the morning.\n\nCHAPTER 5: TURNING\n\nMatt was woken by Smoke's whining. He blinked groggily, resisting the urge to turn on his phone's screen to see where the dog was. He pulled his earbuds out, listening to the Husky grumble and whimper. He was somewhere over by one of the windows in the living room.\n\n\"What's wrong Smoke?\"\n\nAs his eyes adjusted to the darkness, he saw the dog scratching at the wall below the window and whining as he looked out beneath the curtain. His ears were up and alert, tracking something. This was the noise that he usually made when he saw something to chase in the forest near the house, and he wanted to be let out.\n\n\"No Smoke, you can't go outside,\" Matt mumbled. He rolled over, intending to go back to sleep, but then Smoke barked loudly. Matt slid off the couch, knowing that he'd get no peace as long as his pet was excited. If the dog didn't quieten down, he would have to shut him in the kitchen. Smoke yapped again, whining, something in the woods surrounding the house was getting him riled up. It was probably a squirrel or a deer.\n\nHe rose to his feet reluctantly and walked over to Smoke, gripping him by the collar and pulling him down from the windowsill, he had scarred the wallpaper beneath it with his sharp claws. Smoke immediately tried to jump back up, ignoring his master entirely, all of his senses focused like a laser beam on whatever he had seen outside.\n\n\"Smoke, bad dog,\" Matt grumbled. \"Smoke!\"\n\nThe dog barked again, his tail as straight as a rod. Something really had him spooked.\n\nA howl rang out over the forest, loud enough to be heard clearly inside the house, making Matt's skin crawl and his blood run ice cold as it echoed through the trees. Smoke barked excitedly, tugging at his collar as Matt struggled to hold him.\n\nThat was a wolf! Had to be. Matt knew that there were timber wolves in the Pacific Northwest, but they tended to steer clear of humans and population centers.\n\nWait a minute, the biker was out there, alone in the forest. Timber wolves could grow to be as long as a human was tall and they hunted in packs. If they had come across her out in the woods, then she might be in danger. As much as he loved nature, reintroducing those animals into the wild had been a fucking stupid idea. Who knew when some lost hiker or wayward camper might fall prey to them.\n\nHe released Smoke, rushing to get his boots and his coat. Her cryptic instructions be damned, he wasn't about to wait around while she got savaged by a pack of wild animals. He had a gun, most people who lived out in the boonies did, an old double-barrel shotgun that would deter a wolf if it didn't kill it outright. It belonged to his father, but he had shot it a couple of times in his youth, and he knew how to handle it well enough.\n\nSmoke shot towards the front door, smart enough to know what was going on. He sensed that his master was on the hunt. The dog whined and scratched at the door as Matt tied his laces and threw on his parka, retrieving the gun from its place beside the coat rack and opening the break action. No shells, he had forgotten that it wasn't kept loaded, but he knew that there were some loose shells in one of the kitchen drawers.\n\nHe raced to the kitchen, fumbling in the drawers until he found the shells, loading the weapon with two of them and shoving a loose handful into his pocket. He made for the door, unbolting it with a loud click as Smoke spun excitedly nearby.\n\n\"No Smoke, stay! Stay!\"\n\nThe dog was ignoring him, so Matt raised his voice, his tone stern.\n\n\"Smoke, sit! Stay!\"\n\nThe dog sat reluctantly, his ears still standing erect and his eyes fixed on the door. Matt opened it a crack, trying to slide through without giving Smoke room to escape, but the dog was large and powerful. He bolted past his master like a bat out of hell as soon as he saw an opening.\n\n\"Smoke! Come! Bad dog!\"\n\nToo late, the Husky had vanished into the trees. Matt cursed under his breath and set off after him, at least the damned dog would lead him straight to the wolves. If he could at least scare them out of the general area, then they hopefully wouldn't find the biker. He should have kept Smoke on a leash, damn it. He was a big dog, but he couldn't face off with a timber wolf.\n\nMatt jogged towards the treeline, Smoke now out of sight as he entered the forest, hurrying in the direction that he had seen the dog run. The air was cold, stinging his mouth and nose as he panted, the shotgun held ready lest he meet one of the wolves. The pine forest was dark and steeped in shadows that might hide all manner of critters or beasts, lit by a bright full moon that was at its apex in the sky, the night cloudless and dotted with twinkling stars. It was fortunate, he could at least see where he was walking. In his haste, he had neglected to bring a flashlight with him.\n\n\"Smoke!\"\n\nHe couldn't hear anything besides the rustling of the trees in the breeze. There were no howls or barks, no whining or shouts for help. He got the impression that he wasn't alone, however. The feeling was making the hair on his arms and neck stand on end, as if there was some unseen force watching him from afar. He clutched the comforting heft of the shotgun in his hands, feeling the wood grain beneath his fingers as he shouldered the stock. He had to be careful, the last thing he wanted to do was shoot Smoke accidentally if he came barreling out from between the trees, he looked enough like a wolf himself.\n\nAs he made his way through the forest, he spotted something on the ground, black and shiny. He walked over to it and crouched down to examine it, realizing with a pang of anxiety that it was the biker's signature jacket. He lifted it, fearing that it would be torn and bloody, the evidence of some horrific attack. It was intact, however, undamaged. Almost as if she had taken it off herself. Why would she have done that?\n\nThe eerie silence was broken by another blood-curdling howl, this one sounded closer and whatever was making that ominous noise was fucking big. It was deep and powerful, guttural, somehow wrong. That wasn't how a wolf should sound, it sounded more like a bear, but bears didn't howl like that...",
        "Matt fought the instinct to run back to the safety of the house. He had come out here intending to find the lost woman, or at least to scare away the wolves. He sure as hell wasn't going back without his dog at the very least. He mustered the courage to shout again as he rose to his feet and continued on, his voice echoing through the forest.\n\n\"Smoke! Come!\"\n\nTo his immense relief, after a few tense moments, his dog appeared from the undergrowth a few feet in front of him. He was wagging his tail as his pink tongue hung from his mouth.\n\n\"Smoke!\" Matt hissed, \"come here you stupid dog!\" He patted his thigh, but the damned mutt didn't budge. Instead, he shot back into the forest as Matt gave chase. He could hear the rustling, the dog's paws impacting the ground as he ran after him. If he had to get a hold of his collar and drag the dog back to the house by the neck, he would.\n\nMatt ground to a halt, his eyes wide, feeling as if he had just been stabbed through the chest with an icicle. There was something in the forest, something huge and hairy lurking between the trees perhaps thirty feet away. He darted behind a nearby tree trunk as he held the shotgun with shaking hands. What the hell was it?\n\nHe dared to peek out from behind his hiding spot, watching the thing as it was illuminated in the moonlight. It must be eight feet tall at least, covered in a coat of shaggy fur, walking on its hind legs. It had to be a grizzly bear, nothing else was that large. Could his shotgun stop a grizzly? He gritted his teeth in horror as he watched Smoke trot up to the thing, practically begging for a paw swipe that would gut him like a trout, but Matt was too terrified to cry out to him.\n\nThe dog lifted its head towards the creature, which lowered its nose to smell him in turn, the two of them touching snouts. Matt breathed a sigh of relief. At least for the moment, the bear did not seem to be aggressive towards the dog, but that surely wouldn't last. He had to find a way to get back to the house. He couldn't take on a bear, but he didn't want to leave his best friend out here to die.\n\nIf there was a bear in the area then there wouldn't be any wolves nearby, perhaps the woman would be safe as long as the grizzly didn't find her. He would call the police when he got back to the house, which is what he should have done the moment the strange woman had wandered off into the forest alone. What the hell had been going through his head when he had humored her bizarre request? He had been thinking with his dick, that was the problem, and now she might be bear bait for all he knew.\n\nJust as he was mustering the courage to slink off back towards the house to call for help, Smoke appeared beside him, wagging his tail happily. Matt's heart stopped cold in his chest, the stupid dog had given him away. He was going to get them both eaten.\n\nThis was his chance. He reached down and gripped Smoke by the collar, dragging him along with him as he trudged through the undergrowth. He went as fast he could, but not fast enough, hearing the movement of something large and heavy behind him. It panted, sniffing the air loudly, tracking him. Keeping one hand on Smoke's collar, he swung his shotgun in the direction of the sound, his blood running cold as he looked up at the silhouette of something monstrous standing between two tall trees and looming over him.\n\nIt wasn't a bear, its build was all wrong. It looked like a gigantic timber wolf that was rearing up on its hind legs. No, it was more humanoid than that, with muscular arms and legs that were placed wrong for a canine. The light of the moon illuminated it as it took a step forward, emerging from beneath the shadow cast by the trees. Matt was frozen in terror, unable to move as his eyes played over it.\n\nThe creature had the face of a wolf with a wet, black nose on the end of its long snout. Its hackles were raised and its black lips were drawn back in a snarl, exposing long, pearly teeth that glinted in the pale light. Slaver hung from its jaws in long strands, its eyes yellow and intense, staring at him with a primal hunger that was almost palpable. It was covered in thick, grey fur that blew gently in the wind, obscuring many of its features. Its body was...wrong. It was humanoid, standing upright on a pair of legs that were jointed like those of a dog. Its two arms ended in distinctly human hands, its fingers tipped with black claws that scoured the bark on the trees where it gripped them.\n\nSmoke seemed unconcerned by the thing, but Matt felt like he was about to soil himself, finally regaining control of his faculties as he aimed his shotgun at its head.\n\nThere was a crack like thunder as he fired both barrels, a roar of anger deafening him as he turned and ran, not waiting to see if he had even hit the thing. He let go of Smoke, sprinting back towards the house, the bellows of the creature echoing behind him as he stumbled through the dense woodland. He wasn't even sure that he was going in the right direction, he wasn't thinking, adrenaline was coursing through his veins and his most base and primal instincts were compelling him to flee. He could hear his heart pounding in his ears as he emerged into the clearing around his house, running towards the door, faster than he had ever run in his life.\n\nHe slammed into it, still hearing the snarling of the monster on his heels, fumbling with the handle and rushing inside to slam the door behind him. With shaking hands, he closed the bolt, and not a second after it slid into place something impossibly heavy slammed against the door from the other side. Matt fell backwards, scrambling along the floor, watching as the door shook on its hinges. The monster hammered on the wood, he could hear the creature's panting breath as it took in his scent, its rumbling snarl as it tore at the door with its wicked claws.\n\nFor a moment he feared that it would break down the door and come in after him, but the house was old and sturdy, the beast giving up after a few moments. He could hear the slow plodding of its feet as it circled around the house, practically feeling the vibrations through the floor. The thing weighed as much as a damned truck.\n\nIt snarled and growled with every breath, the very sound of it instilling him with a primal terror stronger than any fear that he had ever felt before. It was stalking him, trying to find a way inside. He crawled towards the living room on his hands and knees, staying low and out of sight. He saw its shadow pass behind the curtain and he trembled as its long, hooked claws scraped against the glass. Its breath misted the pane, its yellow eyes visible through the thin fabric of the curtain. He prayed to whatever deity might be listening that it wouldn't pry open the window and find its way inside.\n\nIt moved on, lumbering around the side of the building, reappearing at the window on the far wall. The living room was at the corner of the house, and it had two large windows, one facing North and the other facing West. Again its long claws scraped against the glass, squeaking like nails on a chalkboard, its shadow blocking the light of the moon as it tried to figure out a way to get to him. It was strong enough to easily break the glass, but it might not be able to squeeze through the opening. Was it smart for having realized that, or was it stupid for not having tried? Just what the hell kind of animal was it?\n\nHe took refuge behind the couch, hoping that it wouldn't see him, his arms wrapped around his knees and the shotgun resting at his side as he considered what to do next. Buckshot wasn't going to stop the thing, it was too large, but it might at least deter it if it managed to get inside. He dug in the pocket of his parka for the spare shells, popping the spent ones out of the shotgun and reloading it, the weapon doing little to comfort him. The thing's nose pressed against the window with a bump, smearing moisture on the pane as it tried to smell him, then it broke away and moved on.\n\nHis heart skipped a beat as he realized that he could no longer see it. He wracked his brain trying to remember if there were any other ways to get into the house that he might not have accounted for. Fortunately for him, the biker had told him to secure the house earlier, or the thing might well have broken in by now. Had she somehow known that this would happen? How was that possible?\n\nHe was startled by a loud thudding sound, coming from the back door no doubt. The beast at least knew what a door was and it was trying to break in. Matt scrambled to his feet, raising the shotgun as he crept towards the kitchen, his heart leaping in his chest as he watched the back door shake in its frame. The thing was throwing all of its weight against it, trying to get inside, but it was locked tight. It lowered its snout, blowing air under the door as it breathed in his smell, snarling and gurgling wetly as it caught his scent.\n\nHe felt a moment of relief as it seemed to pull away, but then he saw it standing by the small window just above the sink, with no curtain to cover it. Its glowing yellow eyes pierced him, wide and unblinking, with dilated pupils like black circles. It was looking right at him, making eye contact, betraying a calculating and predatory intelligence. He fled, taking cover behind the fridge, not wanting to look at the thing for a second longer.\n\nWhen he dared to look again, it was gone, moving on to some other door or window no doubt. All of the windows on the upper floor were closed up too, and he doubted that it could have reached them. It was very tall, but not that tall. He heard the shattering of glass, and he shouldered his shotgun as he rushed towards the source of the sound, his adrenaline fading now to leave him frightened and exhausted. He rounded a corner into the living room to see shards of broken glass on the carpet, the creature's long arm reaching in through the opening and grasping with its clawed fingers. It resembled a man's arm at first glance, with a five-fingered hand, but it was unnaturally elongated and coated in a layer of shaggy fur.\n\nMatt wasted no time, aiming his weapon and firing it, buckshot pockmarking the wall around the window as the beast shrieked with pain and withdrew its hairy limb. It couldn't get in that way at least, the opening was too small for it, and he watched as the shadowy figure fled around to another side of the house.\n\nThe windows on the ground floor were the largest, but it couldn't get in through any of them. As long as the doors were all bolted and locked, he should be relatively safe. He popped open the hinge on his shotgun and plucked out the spent shells, cursing as he burned his fingers on the hot metal. He only had three shells left in his pocket, but there were more in the kitchen if he needed them. He struggled to load the gun with trembling hands as he kept an ear out for any untoward noises.\n\nHe heard huffing coming from the back of the house, and he hurried out of the living room and down the hallway. It sounded like it was coming from the direction of...the garage!\n\nOf course, there was a third door to the house, the one that led to the garage. He hadn't even thought about it. The garage door had been closed for years, and it had only been opened so that the biker could search inside for tools. How could he have been so stupid? He sprinted towards the door, knowing that if he could lock it before the creature figured out how to open it, he would be safe.\n\nHe froze on the spot as he watched the garage door swing open with a creak, a pair of glowing, yellow eyes peering at him from the darkness beyond. A breeze blew into the hall, carrying the smell of oil along with it, joined by the musk of an animal. It knew that it had Matt cornered now, he could see the satisfaction in its eyes, the claws on its paw-like feet scraping against the wood floor as it stepped over the threshold.\n\nMatt made to fire his weapon, but the thing was on him in a flash, swiping at the long barrel of the shotgun and batting it out of his hands. It was so large that it filled the hallway, its head brushing the ceiling even as it crouched to fit, its shoulders broad enough to scrape against the walls. Its jaws were open, the pale teeth of a carnivore bared as fat strings of drool hung from its dark lips, the flesh on its long snout furrowed as it loosed a heart-stopping snarl that shook him to the bone.\n\nHe turned and fled, the beast tearing after him, slowed by its sheer size as it struggled through the house. Matt headed towards the staircase, hoping that the old wood might not be able to support the thing's weight. It squeezed through the doorway behind him as its grasping claws tore at the back of his parka, slicing through the material like a knife through butter.\n\nHe mounted the stairs, flying up them as his pursuer splintered the door frame, shouldering through it as it chased after him. The floorboards creaked beneath its feet, so heavy that it might well break through them and crash down into the basement below, but it was too much to hope for. Matt cleared the landing and broke into a sprint, heading towards the bedroom. He heard the sound of claws on wood as the beast struggled its way up the stairs behind him.\n\nHe made it inside and slammed the old oak door, locking it just as the creature barreled into it from the other side, the key flying from the lock under the impact and clattering onto the floor. It howled, a haunting and terrifying sound, perhaps trying to call more of its ilk to the hunt. Matt scrambled across the room and slid beneath the bed, taking refuge as it clawed at the door, panting and slavering as it threw all of its strength at the obstacle. When it had been trying to get into the house, it had been stalking, cautious. But now it was in a blind rage. He could hear its massive fists hammering against the wood, its shoulder shaking the door on its old hinges as it tried to knock it down. Matt covered his ears, the growling and yapping getting to him, praying that it would not break through.\n\nWhile the door was made of thick oak, the hinges were old and rusted. As the beast slammed into the door one final time, the hinges snapped off, and the heavy slab of wood fell to the floor with a monumental crash.\n\nMatt covered his mouth with his hand, trying to stifle the sound of his frightened breathing, watching in horror as it stepped on top of the felled door. Its long tail waved behind it, covered in puffy fur like that of a wolf. He heard it sniff the air, tracking him like a bloodhound.\n\nIt paused near the end of the bed, taking in deep, rumbling huffs. There was no way it wouldn't find him here, he was done for. He watched as its clawed feet moved around to the side of the bed, he could feel the vibrations in his chest as he lay prone on the floor, it was heavy enough to make the boards sag.\n\nSuddenly its yellow eyes were staring at him. He felt a hand grip him by the ankle, dragging him out from beneath the bed as he kicked and fought. He stomach lurched as it held him upside down, flinging him onto the bed, the mattress bouncing beneath him.\n\nHe rolled onto his back to face the thing as it leaned over him, the only light in the room filtered through the curtains, the moon's pale glow illuminating the beast. Matt resigned himself to his fate. He was caught, he could only hope that his death would come quickly as it pressed closer and opened its jaws near his neck. He shut his eyes, just wanting it to be over, preparing himself for the killing bite.\n\nHe felt its hot breath wash over him, its pearly canines pressing into his skin, the musky smell of it rising to his nose as its thick saliva dripped down onto his collar. It seemed to hesitate, its wicked fangs withdrawing. He shivered as it thrust its wet nose into the nape of his neck, hearing it huff and sniff loudly as it breathed in his scent. One of its large hands came to rest beside him on the bed, sharp claws digging into the fabric, and he winced as it took his face in its fingers and turned his head as if trying to examine him.\n\nIts jaws were so close, he could smell its breath, surprisingly not rancid as he had imagined. He could hear it panting, hear the movement of its flat tongue in its mouth as it licked its chops.\n\nHe dared to glance up at it again, opening his eyes to see its long snout hovering an inch away from his face, its black lips now covering its sharp teeth. Had it decided not to eat him? It had caught him now, it had no reason not to finish the job, and yet it seemed far more interested in sniffing him.\n\nIts long, pink tongue left its maw to lick him, dragging from his neck up to his cheek like a damp towel. It was like a dog's tongue, flat and flexible, hot and coated with viscous drool. Matt resisted the urge to wipe away the trail of saliva lest he startle the creature, feeling it move down to his chest, trying to push its wet nose beneath his parka.\n\nHe heard the telltale pitter patter of Smoke's feet as he came up the stairs, Matt turning his head slowly to watch as the Husky trotted into the room, sitting on the floor beside the furry beast.\n\nWhat the hell was going on? Smoke was not afraid of it, and he didn't seem concerned for his master's safety in the least. Balto must be rolling in his grave. The towering creature seemed indifferent to the presence of the Husky too, as though the two of them had found some sort of truce.\n\nThe thing's claws dug into the fabric of his coat, tearing it open with ease as if it was made of nothing more than tissue paper. It hooked its sharp talons beneath the flannel shirt that lay beneath, grazing his skin as it ripped it apart to expose his bare chest, a string of its slaver falling to land heavily on his belly. Maybe it had been confused by his clothes, and now that it had uncovered his body it was going to tear into him like a hungry lion?\n\nHe lay still, the only movement coming from the slow rise and fall of his chest, the wolf-like creature lowering its dripping jowls towards his exposed torso. He felt its hot breath on his chest, its black lips pulling back to reveal its wicked teeth and its impossibly long tongue sliding out of its mouth to drag across his skin. The fear was making him hypersensitive, the smooth flesh of its damp organ tickling him, and he opened his mouth to breathe a gasp of surprise.\n\nIt loosed a deep rumble, like a growl but not quite as aggressive, shaking Matt's bones. Fear was hard to maintain and his terror was fading along with his adrenaline rush, replaced by fatigue as the thing lapped at his belly with its wide tongue.\n\nIt was so wet, coating him in its stringy saliva, clear ropes of it hanging from its dark lips with the consistency of jelly.\n\nNow that he was less terrified, he took the opportunity to get a closer look at the beast's body. It was covered from head to toe in thick, grey fur, identical to that of a wolf. It was humanoid from the neck to the knees, its lower limbs tapering into the Z shaped configuration of a canine's hind leg. It was bipedal, however, balancing on wide paws that were tipped with the same sharp claws that were to be found on the ends of its fingers. It was like someone had taken a man, covered him in fur and blown him up to eight or nine feet.\n\nEr...make that a woman...\n\nHe spied two heavy breasts hanging from its chest, emerging from the forest of thick fur as they swayed with its movements, their surface covered in a thinner layer of grey hair that parted to reveal two black nipples. They were enormous, larger than his head. It was like someone had put two watermelons in socks and had hung them from its body. Its hips were wide too, giving it a distinct hourglass figure, with thick thighs to support its immense weight.\n\nIt almost looked like a werewolf, but those weren't real, right?",
        "The creature roamed down towards his trousers, drawing in huge lungfuls of air as it sniffed loudly, drool raining down on him. It reminded him of Smoke when he cooked bacon, sitting beside the stove and salivating, hoping that a scrap might fall to the floor.\n\nHe squirmed and gritted his teeth in discomfort as it dug its claws beneath his waistband, tugging at his pants as if trying to pull them off, the denim too thick for it to easily tear. It pressed its snout against his hip, the cold of its nose contrasting with the heat coming from its mouth, chewing at the fabric in an attempt to get through.\n\nIt finally succeeded in ripping through the denim at the belt line, dragging the jeans down and throwing them aside, the rain of gooey drool now falling on his bare thighs. His hands moved down towards his groin, slowly so as not to startle the animal, attempting to cover his crotch. It beat him to the punch however, gripping his hip with one hand as it ripped off his shorts with the other, its claws pressing into his skin to leave red indents.\n\nHe now lay naked before his captor, increasingly unsure of its motives, and he lurched as it leaned down to smell his loins. A quiet whimper escaped his lips as its soft, flat tongue dragged across his balls, blood flooding into his member despite his fear and confusion. Now was not the time to get an erection, for all he knew the damned thing might just bite it off like it was a Vienna sausage.\n\nIt pushed its wet nose into his pubic hair, air blowing as it sniffed, then it roamed down and licked his inner thigh. He realized that he was trembling, his legs shaking, his breathing now ragged and irregular. He felt as if he might melt into a puddle on the bed. He didn't understand what was happening, nor did he understand his strange reaction to it.\n\nThe wolf found his erection, grazing its length with its tongue, like someone had soaked a washcloth in KY jelly. He gasped and writhed, its slippery muscle grazing the sensitive underside of his glans as it withdrew, coating his manhood in its warm slaver.\n\nWhy was he so goddamned hard? It was wrong, insane, but as the monster came back down to lap at his balls, his spine arched off the mattress and his member throbbed in the air. It teased him, perhaps unintentionally, its powerful organ roaming across his thighs and belly. It was covering him in its spit, there was so much of it, warm and slimy as it clung to his skin in globs.\n\nThe creature seemed to examine him, its black lips poised an inch above his member, nostrils flaring. Its tongue was flexible, reaching out to curl around the tip of his pulsing erection and enclosing it in hot flesh.\n\nMatt's knees were weak, and he was short of breath, an unwelcome pleasure coursing through his body like a tingling fever as the creature drew his cock into its mouth. His member throbbed against its tongue, and he felt its teeth graze his shaft, duller than they had looked at first glance and certainly not sharp enough to cut unless force was applied. It maneuvered his erection around in its mouth, glazing it with beast drool as his exposed glans brushed against its smooth palate, its nose rubbing against his belly as it made obscene licking sounds.\n\nHe reached a hand down in a futile attempt to ward it off, finding that it didn't pull back when he touched it. The long fur on its head was silky and soft beneath his fingers as he tried to push it away.\n\n\"S-Stop,\" he breathed, a burst of pleasure shooting through him like an electric shock as its silken organ coiled around his shaft inside its warm mouth. He couldn't take much more of this, he felt dizzy, stars dancing before his eyes as it lapped at his cock. He tried to shuffle away from it, but one of its dinner-plate sized hands reached down to grab his waist, the sharp claw on its thumb digging into his belly as it held him still.\n\nGod, he couldn't think, it wouldn't stop. He felt as if his member was melting inside its mouth and he found himself lifting his butt off the sheets to push deeper, a reflexive response to the seething pleasure that he was being subjected to.\n\nHe clawed at his burning cheeks with his fingernails, beside himself, at the mercy of this terrifying creature as its tongue roiled around his member like it was a popsicle.\n\nAn unbecoming moan escaped his throat as it closed its black lips around the base of his erection, sucking wetly. He couldn't stand much more of this, some strange combination of fear and arousal was lighting up his nervous system like a Christmas tree. Its tongue was so long and wide, like a blanket of damp velvet that scoured his skin, leaving trails of warm saliva wherever it roamed. It was large enough to lick his balls, his thighs and the length of his shaft all at the same time.\n\nMatt reached down into the mane of shaggy fur around its head and neck, taking handfuls as he thrust into its dripping maw, his sexual urges finally winning their long-fought war against his common sense. His glans rubbed against the roof of its mouth, the flesh smooth and silky, yet textured with bumps and ribs that grazed his tender head. When the creature dragged its muscular tongue up his shaft, it pressed the head of his member against its palate, sending a burst of cruel pleasure coursing through his body.\n\nA gasp of disappointment escaped his lips as he watched his member slide out of the beast's jaws along with a stringy mass of sagging saliva that oozed down to coat his groin in a sticky sheen. He felt embarrassed, he wanted it to continue, wanted to finish. It was so wrong but it felt...so good.\n\nThe beast's yellow eyes played over his twitching body, its flat tongue lolling from its jaws like that of a dog as it seemed to consider. Its clawed hand shot down toward Matt's neck, and he flinched away, fearing that his assailant might rend his head from his shoulders. Instead, its thick, furry fingers closed around his throat. A quiet wheeze was all that he could muster as it tightened its hold on him. His face was going red, his fingers clawing at the wolf's muscular forearm impotently as it pressed him into the sheets, slowly choking him.\n\nThe bed shook and creaked as the creature brought up one of its thighs, as round and as thick as a damned oil barrel, resting its knee on the mattress. The now sodden sheets slid against his naked back as Matt was dragged downwards, feeling his ass impact the wooden floor as he was pulled unceremoniously off the bed and deposited on the ground.\n\nThe iron grip on his throat was released, and he took in a deep breath, sputtering and choking as tears stung his eyes. When he opened them, he was face to face with a forest of fur, at eye level with the creature's groin as he sat on the floor with his back against the bed. He looked up, seeing its golden eyes peering down at him expectantly over the hanging globes of its generous breasts.\n\nThe werewolf, because that was surely what it must be, pressed closer to him. The silky fur of its inner thigh slid against his cheek, the beast bumping its crotch into his face. No, not it, this thing was a she. It was impossible to think of her in any other terms now that his face had been thrust between her legs.\n\nWhat she wanted was obvious, and he was ashamed to admit that his member was throbbing in the cold air at the prospect. She reached down two clawed fingers into the thick fur between her legs, splaying her black labia open wide. He saw a flash of pink, glistening flesh, her sex drooling just as her maw did. A fat rope of clear juice fell from her opening and Matt felt it splash against his belly. It was warm, and it had the consistency of honey. He felt a similar strand of liquid drip into his hair from above, the beast licking her chops as she waited expectantly.\n\nHe reached out a hand and ran it through the thick fur on her thigh. It was as luxurious as a mink coat and beneath it was a layer of soft fat that yielded under his probing fingers. Deeper still lay a wall of hard muscle, flexing as he touched it, like taut steel cables. She seemed to grow weary of his explorations, taking a fistful of his hair and giving him a harsh tug that stung his scalp, his face bumping into her belly. Her fur was soft against his cheek, and it concealed twin rows of rock-hard abdominal muscles. It almost felt like she was smuggling apples under her skin. He buried a hand in her silky hair, running his fingers over their chiseled contours. It was as though someone had draped a Greek statue in a fur coat, her protruding muscles as hard as hewn marble, rippling under his fingertips.\n\nHaving him admire her body was not her goal, however. He felt a heavy hand on his head as she pushed him further down, pressing his face into her sopping loins. She was larger than a human female, and her womanhood was similarly oversized, her puffy flesh protruding from beneath her fur. Her smell was strong, musky and feminine, bestial but distinctly sexual. It was oddly alluring, and he noted that his heart began to pump faster as he felt the warmth that radiated from her loins on his face.\n\nHe extended his tongue, woefully inadequate compared to her long organ, pressing it against her slippery vulva. She tasted sour, her juices flowing over his tongue in an unending torrent, leaking down his face and hanging from his chin in thick strands. Her flesh was feverish, so hot that it almost prompted him to pull back, but a firm hand resting on the back of his head kept him close.\n\nHe dragged his tongue up between her puffy labia, her loins swollen with excitement and pulsing in time with her powerful heartbeat. He kissed and mouthed, crawling his lips across her anatomy as he explored her intimate details with his questing tongue. He pushed it into her opening, feeling her muscular passage close around it, too slippery to get a grip but trying all the same.\n\nShe thrust forward again, knocking into him and splashing him with her womanly juices. She began to grind her massive hips in an attempt to fuck his face, perhaps not understanding how this was supposed to work. It made him question her intelligence. Was she an animal or was she sentient? What would bode better for him? Being ravished by a feral beast whose only concern was its own selfish pleasures, or being at the mercy of some cruel and calculating intelligence?\n\nHe sputtered and coughed as her fluids filled his mouth, his hands coming up to push against her steely thighs. She was undeterred, continuing her rhythmic rubbing, a kind of indignant anger rising inside Matt. He surprised himself with his sudden surge of defiance, gripping a handful of the damp fur on her pubic mound for purchase and slamming two of his fingers deep into her twitching hole.\n\nA tremor passed through the massive beast's body, her thighs quivering as her insides clung to his digits with all the force of a bear trap. God damn, she was powerful! Her muscular walls clamped down on him with enough strength that it hurt, squeezing his fingers together, the bones of his joints rubbing against each other uncomfortably. Fortunately, there was little friction due to her copious emissions. It felt as if someone had upended a jar of honey inside her, blobs of the thick fluid forcing its way out past his fingers.\n\nIt amused him, being able to stop her in her tracks like that, but the humor of the situation soon wore off as she pressed him against the side of the bed with her weight. She smothered him with her vulva, his fingers still buried up to the knuckle inside of her rippling tunnel. Matt felt the firmness of her clitoris on his nose, quickly bringing up his tongue to lap at it. If he didn't get her off soon, she might well suffocate him with her clumsy thrusting.\n\nAnother rolling shudder washed over her furry body as he pressed his lips around the swollen bud of flesh, drawing it into his mouth and battering it with his tongue. Both of her large hands came down to cradle his head, big enough to encompass it completely. He felt a wave of vulnerability wash over him, she had the strength to twist it off like a cork if she wasn't careful. He began to move his fingers inside her, at first attempting to drive them in and out but finding that the suction was too strong. Instead, he began to curl them upwards in a come-hither motion, assuming that her vagina was as similar to that of a human on the inside as it looked on the outside.\n\nThe wriggling of his fingers must have glanced her sweet spot because she loosed a low grunt and her insides gripped him like an angry fist, causing him to wince as the already intense pressure around his digits increased. He treated her clitoris far more cruelly than he would a human woman's, drawing it out from beneath its protective hood and lashing it with his tongue. He painted shapes on it with his damp muscle, his saliva mingling with her excitement, trapping it between his lips as he applied suction.\n\nHis Goliath of a lover seemed to appreciate his attentions, emitting more rumbling vocalizations as she drooled in his hair. Her fingers were still wrapped around his head, holding him between her thighs, the movements of her wide hips buffeting him as he tried his best to hold on to her. He wriggled his fingers inside the confines of her slippery tunnel, drawing on her swollen clitoris as he teased it with his tongue, feeling her increase the pace of her thrusting in response. Her tail hung between her legs, brushing against his member inadvertently as it waved back and forth. It was like being tormented with a feather duster, his cock jumping in the air as the fluffy appendage stroked him.\n\nLust blended with shame confused his addled mind as her fluids clung to his face. At some point, this had ceased to be a one-sided attack. Now he was servicing her ardently, enjoying her taste and his rough treatment at her hands. The fur on her mound and thighs was soaking wet with her juices now, matted with thick blobs of it, the fine hairs sticking to his cheeks as she rubbed against him. Her movements were becoming clumsier and less regular, her tight loins wringing his fingers with a strength that could have turned coal into diamonds. He sensed that she was getting close, redoubling his efforts as her claws pricked his scalp.\n\nA long string of clear saliva fell from above to land on his cheek, Matt glancing up over her furry mound to see the beast staring down at him, her jaws open wide and her teeth exposed in a snarl. His eyes were drawn to her breasts, hanging heavily as she leaned over, swaying as gravity fought to wrest control of them. They seemed so far away due to her exaggerated stature. She pulled his hair when she sensed that he was slacking off, his cock jumping in response and his heart skipping. Damn it, that wasn't the appropriate response, what was happening to him?\n\nMatt returned to his work dutifully, lapping at her vulva and circling her firm protrusion with his tongue. His fingers squirmed inside of her, battling against her velutinous walls as they pressed around his digits. He curled them to dig into the roof of her tunnel, and her body tensed, her muscular thighs shaking as a contraction tore through her passage. She bucked, pressing his head into the mattress, a torrent of her fluids gushing from her burning tunnel as she started to come.\n\nHabit told him that he should keep it up, easing out every wave of pleasure that he could as she loosed a bestial growl, his tongue dancing across her sensitive clitoris. Her walls closed around his digits to the extent that he could no longer move them, feeling every tremor that coursed through her slippery insides, the werewolf growling as her orgasm set her nerves on fire.\n\nHer syrupy ejaculate filled his mouth and spilled down onto his chest, his incessant licking prolonging her climax as she pressed her quivering loins against his face. After what felt like an age, she finally pulled back and let him take a breath, releasing his head as her hands roamed down towards her dripping sex. His lips were linked to hers with sagging strands of fluid that broke fall to his nude body, and her fur was sodden with it. He wiped her clinging excitement from his face, trying to scrape it away without much luck. He couldn't help but watch as she rubbed her pink flesh with a furry finger, shivering softly. She looked almost cute in her post-coital state, afterglow washing over her as she enjoyed the dying embers of her pleasure.\n\nNow sated, he hoped that she would lose interest and leave him be, but that was not his fate. Her yellow eyes flashed, and she took him by the neck again, lifting him up onto the bed and dumping him on the mattress. He lay on his back, his erection standing prominently as she loomed over him, her slaver joining her sexual fluids as it dripped down onto his stomach.\n\nThere was a wet slap as her tongue lashed against his belly, dragging up his torso towards his neck as he tried to fend her off by pushing her head back down. He didn't want those teeth anywhere near his throat. She was strong, however, far stronger than he was. A shiver ran down his spine as he felt her wet nose press against his cheek.\n\nHer jaws opened wide, fangs as long as his finger brushing against his skin, the beast poised there as if unable decide whether she wanted to eat him or fuck him. The she-wolf pushed her long snout into the nape of his neck, her slavering maw opening wide, thick saliva dripping forth in fat ropes to wet his chest and shoulder. Matt was so confused by this point, he didn't know what to feel. His body was telling him one thing, and his brain was telling him another.\n\nShe closed her jaws around his neck, large enough to encompass it entirely. Her upper set of pearly teeth pressed against one side, the lower against the adjacent side, her flexible tong lolling forth to lap at his throat. His thighs rubbed together, his hands clawing impotently at her furry face, her hot breath blowing on his damp skin.\n\nThere was no killing bite, no stab of pain as she broke his neck, she merely held him down as he squirmed. The fear of impending laceration was making him so sensitive, so responsive. It was as if the sensitivity of every nerve ending in his body had been amplified tenfold, every droplet of drool that fell to his tender neck making him twitch and gasp. She huffed and panted as she pinned him there, Matt unable to break loose.\n\nThe beast wasn't done yet, and he was still hard and ready. It was like she could smell the arousal on him. There was a monumental creak as she climbed up onto the bed, the wooden frame threatening to collapse and the springs in the mattress compressing to their limits. He sank into the bed beneath her as she put her weight on him, her clawed hands resting to either side of his head, her thighs large enough to sandwich his entire torso like a hotdog in a bun as she straddled him. She was remarkably flexible, bent double to keep her hold on his neck despite her exaggerated stature. His member brushed against her fluffy mound, her sodden fur sticking to his skin, his manhood twitching with an involuntary throb of anticipation.\n\nA shiver ran through his body as the werewolf pressed down on top of him clumsily, trying to take him inside her but failing. She squashed his member between her hot, dripping loins and his belly as he loosed a gasp of mingling pleasure and discomfort. She was not very intelligent, that much was clear now. The beast wasn't quite running on pure instinct like an animal would, but her faculties were reduced in comparison to a human. She tried a second time, his shaft rubbing against her slippery vulva as she thrust her hips downwards, the sensation of her wet fur against his skin surprisingly stimulating.\n\nShe was going to break his dick if he didn't do something about it. He reached a hand down and angled his erection towards her loins. He couldn't see anything besides her mane of grey fur as she held his neck gently between her jaws, so he felt his way along as he found the warm dampness of her sex and guided his erection towards it.",
        "There was an audible squish as his glans pressed between her labia, met by satin flesh and syrupy fluids, the she-wolf's tongue lapping at his neck as she rumbled appreciatively. Showing no consideration for Matt, she slammed down on him, driving him deep into the mattress and engulfing his member in her narrow passage. Despite her size, she was heavily muscled and remarkably tight, her insides clenching around him with a strength that forced a cry of surprise from his lips. His arms wrapped around her head, her shaggy fur tickling his skin, his body tensing as his vision was clouded by dancing points of light. His thoughts were muddled, raw sensation washing over him in crippling waves as if his nervous system was being flooded with static.\n\nDespite the abundance of lubricating fluids their contact with rough, his imposing partner immediately finding a harsh pace that he could scarcely tolerate. Matt struggled to contain his gasps and moans, every impact of her furry body against his driving bolts of harsh sensation up his spine. He gripped handfuls of her mane as her dripping maw rested about his neck, her teeth pressing into his skin, never enough to hurt but just enough to remind him of who was in control. Her long tongue lashed as his skin, hot and slimy, his body tingling as his instinctual urge to protect his vulnerable throat heightened his sensitivity.\n\nHis eyes rolled back into his head as her hips came crashing down hard enough to bruise, fucking him into the mattress beneath them with an almost willful disregard. She would rise on his shaft as her sodden walls clung to it like a latex glove, every fold and texture of her insides rubbing against his tender anatomy as they scoured him, before letting her immense weight bring her back down to slam him deep into her reaches. She gripped him with her mouth all the while, keeping him from squirming out from under her, like a tomcat mating with a queen.\n\n\"F-Fuck,\" he mumbled, clinging to the fur around her neck for dear life. \"Slow...slow down...\"\n\nHe hoped that some semblance of humanity remained in her, that he might be able to reach her somehow. His hopes were dashed, however, her only response to his pleas was to tighten her grip on him. The creature was bouncing atop him now, every downward thrust punctuated by a bestial grunt from her and a low gasp or a pained whine from Matt.\n\nWhile he was indignant at her callous treatment, the intensity of their coupling was quickly washing away his resistance. She was so damned tight, so vigorous, the feeling of her silken tunnel as it wrung his aching member with cruel muscle contractions was exquisite. She was so much more than he could handle, overwhelming, and somehow that fed into his lust. He realized with a pang of excitement and shame that he was enjoying this treatment, his body bucking upwards to meet her rolling hips, his member swelling and twitching inside of her.\n\nThis creature was wanton sexuality made manifest, shameless and greedy, so abandoned in her obscene rutting that a human mind could scarcely process the thought of it. The pleasure was unlike anything that he had ever felt before, an overbearing ache that permeated him to the core. He was vulnerable, in such a compromising position, it made every inch of his skin as sensitive as the head of a penis. He was almost numb from the waist down, his legs had turned to useless jelly, sharp bursts of pleasure from their joined loins flaring in his mind as her rhythmic mating dragged on. He went limp, surrendering to the she-wolf and letting her do as she pleased, his resistance futile as the ecstasy overpowered his higher faculties. He was adrift in a wild ocean. Like a tiny raft surfing the crashing waves, all that he could do was ride out the storm.\n\nThe werewolf seemed to sense the change in him, and her huge jaws pulled away from his throat, joined to his skin with thick strings of drool. She looked down at him with her yellow eyes, triumphant perhaps in her mastery over him. She slowed her ruthless grinding, coming to a stop as his erection lay buried to the hilt inside her, pulsing and leaking a steady stream of precum.\n\nShe wasn't moving anymore, why wasn't she moving? She sat up straight, her breasts quivering like mounds of jello as they settled. Matt could have sworn that he saw a smile curling her black lips. His member throbbed and jumped, desperate for the stimulation to continue. The warmth and wetness of her smooth passage as it pressed around him was enough to drive him crazy. He lifted his ass off the bed, thrusting up into her as she sat perched atop him, a satisfied rumble reverberating from her in a deep contralto.\n\nDid she want him to reciprocate, was that it? It wasn't enough for her to have her sordid way with him, she wanted her lust to be returned. She watched him as he ran his hands through the downy fur on her thick thighs, roaming higher towards hips that were twice as wide as he was. He sank his fingers into the doughy fat for leverage as he pushed into her, feeling her loins ripple as he moved.\n\nThis seemed to please her, and his reward was having the werewolf resume her pitiless assault, coming down on him hard enough to knock the air out of his lungs. She rolled her wide hips to drive his erection against her smooth walls, gyrating and twisting, her chiseled abs rippling beneath her fur. He felt her curved claws on his back, one of her long, furry arms sliding beneath him as she kept up her punishing dance. She lifted him upright, her sharp talons pricking his skin, her other hand coming to rest against the back of his head as she thrust his face into her cleavage.\n\nHe was greeted by a forest of deep, lush fur, fluffy and soft against his flushed cheeks. The enormous globes of her breasts engulfed his head, their considerable weight pouring over his shoulders. He felt as if there was a damned barbel weighing him down, exhaling a sigh into her fluffy chest as she buffeted him with her frenzied thrusting.\n\nHer claws raked down his back, drawing red trails in his skin, pricking his scalp as she delved her fingers into his hair and his hands roamed across her generous body. He traced the hourglass curve of her hip, gliding upwards and across her ribs, the bones concealed beneath a web of taut muscle. Her breasts were irresistible, so large that if he was to wrap both arms around one, his hands would have scarcely met on the other side. They were plump and surprisingly firm, keeping their shape as they hung from her chest. He delved his fingers into her flesh, feeling a tremor pass through her massive body, her loins tightening their cruel grip on him in response. The fur on them was thinner and silkier than the longer coat that covered the rest of her body, the delicate fat beneath spilling around his hand like memory foam. She had two black nipples, hard and erect, and he heard her snarl as he pinched one of them between his fingers.\n\nIt was frightening, but he soon realized that it wasn't a display of aggression when she slid her hand down towards his lower back, using the leverage to take him deeper and harder. He felt dizzy, his head spinning as his face sank deep into her pillowy bosom. He breathed in her musky, animal scent. It was undeniably sexual, tickling the most base and archaic parts of his brain, his member surging inside her and his hands grasping with renewed vigor.\n\nHer body was a beautiful mosaic of muscle and fat, she was hard and toned, yet all of her weight went to the most flattering and enticing of places. He slid his hands down her furry back, clawing at the meat of her ass, finding it springy and muscular. You could have bounced a bowling ball off her cheeks. He took great handfuls as he squeezed her supple fat, filling his palms and feeling her flesh spill between his fingers. Her fluffy tail wagged back and forth, whipping his forearms as her slaver leaked down into his hair.\n\nA mischievous thought popped into his head, and he searched for the base of her tail, gripping it in his hand. He gave it a hard tug, feeling the burning flesh of her passage contract around his cock and hearing a yelp slip through her dark lips in response. His chuckle was cut short as her fingers curled around his neck from behind, her sharp claws pressing into his throat. She pulled him out from between her breasts, Matt glancing up at her as she looked down at him with an expression that could only have been described as annoyance.\n\nShe begged a silent question; What the hell do you think you're doing?\n\nMatt grinned sheepishly, and she planted her wide palm against his face, pushing him down into the sheets. With her hand resting on his head, she hastened her thrusting, teasing him with shimmies and figures of eight from her rolling hips. They were so wide, she could have carried a cannonball in her belly without breaking stride. There was a whirlwind of sensation around his member, tender and sore from their prolonged and brutal courtship. His bestial lover had such fine control over her voluptuous body. From the twisting of her rock-hard abs to the soft massage of her pelvic floor, her taut muscles had all the dexterity and precision of a nimble hand.\n\nHis spine arched off the bed, pushing into her as she came down atop him, all of his fear and apprehension forgotten. She wasn't going to hurt him, he knew that now, they both wanted the same thing.\n\nThe beast planted her hands to either side of his head, her breasts swaying as she leaned down, her flexible body bent double so that her nose was level with his. She watched him with those golden eyes, like two bright moons in their own right, her drool dripping from her jaws to land heavily on his cheeks.\n\nHer thick fingers shot into his hair and took a tight grip, his member pulsing in response. When he opened his mouth to gasp she filled it with her tongue, the flexible organ bulging his cheeks. It was coated in her thick drool, slimy and wet as it explored the inside of his head. While a human tongue was strong and dexterous, hers was thin and flat, tickling his inner cheeks and the roof of his mouth as she lapped at them. Her black lips were mismatched with his, her embrace clumsy and exploratory, more of an invasion than a kiss. It just kept coming, her tongue piling into his mouth, its copper flavor pricking his taste buds. It was like having a length of cloth that had been soaked in jelly pushed into his mouth.\n\nThey were completely incompatible, but she remained undeterred, licking his tongue and pushing her massive organ deeper. She glanced the back of his throat, her viscous slaver leaking down his chin and pooling in his mouth, keeping a tight hold on him so that he couldn't squirm free. Had it been truly unpleasant, he could have bitten her, and she would have surely withdrawn. He was growing accustomed to the sensation, however, stars dancing before his eyes and seething pleasure burning inside him as she subjected him to a deep and lascivious kiss. It was so sexual and unrestrained, with none of the care and finesse that kissing normally entailed. Her movements were rough and crude as she glazed the inside of his mouth with her bestial slaver.\n\nMatt was drenched in her juices now, both inside and out. Her scent was inside him, on him, her slimy excitement leaking from her swollen loins to cling to his thighs and belly in fat blobs. Her bubbling saliva was on his tongue, slipping down his throat, drying on his neck and chest in a sticky sheen. He was completely overcome, his brain was sparking and buzzing, he couldn't think straight. Rational thoughts slipped through his fingers like sand, intangible and impossible to grasp. It was as if he was becoming an animal himself, his only desire to rut. All that he wanted now was to revel in their obscene union.\n\nA searing wave of pleasure came crashing over him, the incessant thrusting of her hips driving him towards the edge. His heart hammered against his ribs, his erection throbbing in time with it. He could feel the silken walls of her loins responding in kind as they shifted around him. It was like they were linked, every spasm and contraction of one felt by the other, feeding into each other as they ground their hips together like they were trying to start a fire.\n\nIt was an ever-mounting pressure, like a boiler about to explode, building to an unbearable intensity as she broke off from her sloppy kiss in order to concentrate on their violent lovemaking. Her long tongue slid out of his mouth, her lips pulling away with a pop, connected by a drooping web of slaver. Her yellow eyes were closed, the skin on her long snout furrowed as she bared her pearly teeth. Her weighty breasts knocked together like a giant executive toy above him, fighting gravity as she gyrated and bounced, her already ruthless pace quickening. The iron muscles in her thighs clenched about his hips, her knees practically reaching his armpits due to the exaggerated size of her legs. Was it not for the soft cushion of pliant fat that enclosed them, he feared that she might have popped him like a ripe cherry. She seemed lost in a fugue, her sensuous movements taking on a trance-like quality as she rocked on top of him, her clawed fingers digging into his chest to leave red welts as she pushed down.\n\nThe bed springs screamed beneath them, their combined weight near enough to snap them, the wooden frame cracking and creaking ominously as it threatened to give out under the strain. The headboard knocked against the wall, chipping the plaster, the whole room seeming to shake as she drove him deep into the mattress.\n\nHis member was buried so far inside her, the damp fur of her sodden mound slapping against his belly when she dropped down, using gravity to aid her as she took him into her innermost depths. She liked it hard and rough, her pink tongue hanging limply from her maw as saliva rained down on him, smothering Matt with her furry body.\n\nThey were locked in a death spiral, heat and friction mounting along with their pleasure, building towards an inevitable peak. Matt cried out as he felt a powerful contraction rip through her loins, the muscles behind her luxurious, cushiony insides squeezing him angrily. He could feel her begin to climax, every wracking tremor that rolled through her massive frame causing her to flinch and tighten in waves, wringing his member from the base to the tip as if she was trying to force his ejaculate from his body.\n\nHe took handfuls of the fur on her thighs for purchase, clinging to her as her legs shook, her fangs bared in a silent snarl as she shivered and trembled on top of him. For a moment the hulking beast seemed vulnerable, affected. For all her size and strength she was reduced to a quivering mess by her orgasm all the same, Matt taking the opportunity to reach down into the matted fur of her mound and seek out her clitoris. He found the swollen bud of flesh, his fingers already dripping with her flowing juices, rubbing it so that he might sustain her pleasure a little longer. Her eyes opened wide, her jaws parting to loose a yelp and her hips resuming their thrusting as the ecstasy got the better of her.\n\nShe trapped his neck in her jaws once more, leaning down and closing them around his throat, his fingers moving furiously beneath her matted fur as her teeth pressed against his skin. She was trying to mate with him, keeping him trapped beneath her as she rode out the pangs of her climax. With her weight crushing him against the bed and her mouth pinning him, the only thing that he could move were his arms, and so he carried on his rubbing. Her hot flesh was slippery against his fingers, so warm that he was surprised that she wasn't giving off steam, her insides milking him with an almost mechanical force.\n\nThe werewolf's tongue lapped at his neck, grazing his sensitive throat. She bit him hard enough that he could feel it, but not enough to break the skin, as if to serve as a warning in case he should attempt to break free. That was the last thing on his mind, however, and he gritted his teeth as her torturous rhythm wrung the first throb of his orgasm from his body.\n\nIt felt like someone was pulling a knotted rope out of him through his cock, the she-wolf's teeth vibrating against his jugular as she growled rapturously, feeling his warm emission splash against her tender walls. She choked off his pained groan with her jaws, her thighs locking around his waist as his muscles wrenched, thick wads of his come pouring into her waiting loins. Her passage sucked at his twitching member like a pair of eager lips to draw more from him, the raw intensity of it searing his nerves. He could feel every load as it was squeezed out of him, his head spinning as he prayed that he wasn't about to father a litter of werewolf puppies.\n\nThe corners of his vision darkened, tormenting pleasure surging through him as he shot the last of his ejaculate into her, finally ebbing as a seething euphoria settled over him like a warm blanket. A deep satisfaction permeated his being, lingering tremors tickling his senses. He felt almost giddy. In his haze of afterglow, the beast's fur felt soft and luxuriant under his hands. Drunk on pleasure, he combed her pelt with his fingers, feeling her shiver appreciatively at his touch.\n\nThe werewolf was enjoying the fading embers of her own climax, and he withdrew his hand from within the damp fur that concealed her sex, watching with fascination as a string of her clear juices formed and then broke. She was breathing heavily, they both were, her sumptuous breasts wobbling gently as her chest rose and fell above him.\n\nShe seemed sated now, her bestial thirst for him quenched, staring down with drooping eyelids as she wet her lips with her pink tongue. Her long lashes fluttered, one final burst of enduring pleasure coursing through her tired muscles, Matt wincing as he felt her leaking passage clench around his sore erection.\n\nHer wet nose pressed against his cheek as she leaned down closer to him, her tongue leaving her mouth to paint his face in warm saliva, a show of canine affection. Her attitude was somehow doting now, as if she had claimed him as her own. Perhaps, in her animal mind, she now considered him the father of her offspring. It didn't seem like they'd be compatible, but a goddamned werewolf was straddling him, anything was possible.\n\nShe rose off him, his member flexing involuntarily as her tight passage dragged against his shaft, a lewd mess of their combined fluids spilling out of her in shocking quantities. The obscene concoction splattered against his thighs and belly, clinging to the matted fur between her legs as she shuffled off him. They looked like the losers on some kind of children's game show, it was as if someone had upended the contents of a giant tube of personal lubricant all over them. The bed was ruined, and everything was sticky, but the werewolf did not share his displeasure.\n\nShe flopped onto her side, lying down next to him and bouncing him clear into the air. Matt rolled into her open arms by virtue of her weight alone, like they were marbles on a sheet of stretched fabric in a gravitational model of the solar system. Once in her clutches, she pressed his head between her breasts, giving him no choice but to breathe in a deep lungful of her musky scent.\n\nHe was exhausted, completely spent, the warmth of her body and the softness of her coat tempting him to sleep. Her hot breath blew his hair, one of her massive thighs engulfing him as she hooked her leg around his body. There was fur and muscle on all sides, like he had been cocooned in a werewolf-scented sleeping bag, her fat boob serving as an admirable pillow beneath his head.\n\n\"Fuck it,\" he mumbled, closing his eyes and letting his fatigue overcome him.\n\nCHAPTER 6: ONCE BITTEN\n\n\"Matt! Matt!\"\n\nHe opened his eyes as the biker shook him vigorously, rolling over to face her. They were in bed together, buried beneath the ruined sheets, the mattress covered in claw marks and stains. She seemed alarmed. Her eyes were wide, and she looked as if she had been about to burst into tears.",
        "It must be morning, sunlight was bleeding in through the curtains, and he felt movement at the foot of the bed as Smoke glanced up at him. Memories flooded his head as he struggled to wake up, remembering his night with the werewolf as he examined the broken hinges where the bedroom door used to be.\n\n\"What's up?\" Matt asked, yawning widely. She seemed taken aback by his aloofness, her hand leaving his shoulder and her expression becoming confused.\n\n\"Matt...are you okay? For a moment there I thought that...\"\n\n\"I'm fine,\" he replied. He tried to sit up straight, realizing that he was covered in scratches and bruises, every muscle in his body ached as if he had run a marathon.\n\n\"Actually,\" he grumbled, flopping back down onto the torn up mattress. \"Let's downgrade that from fine to alive...\"\n\nHe felt her arm around his chest, and she buried her face in the nape of his neck, hugging him against her as he winced. They were both nude, she must have...turned back into a human?\n\n\"Oh Matt, thank God. I was so afraid, I thought...I thought that I might have killed you. What happened last night?\"\n\n\"You're a werewolf,\" he announced awkwardly, and she averted her eyes as if he had just accused her of something terrible.\n\n\"If I had told you, you wouldn't have believed me. I'm so sorry Matt, I was supposed to be gone long before the full moon, but-\"\n\n\"Your bike.\"\n\n\"Yeah...\"\n\nShe seemed embarrassed and ashamed, as if she had been caught doing something horrible. He couldn't stand to see her that way. Whatever had happened, he was sure that it wasn't her fault.\n\n\"Hey,\" he said, reaching down to turn up her chin. She had tears in her eyes, her cheeks flushed perhaps with embarrassment, strands of her unkempt hair falling over her face. \"I'm fine, no harm done. I might have a few scars to remember you by, but it's cheaper than getting your name tattooed on my arm, right?\"\n\n\"You...aren't afraid of me? You don't want me to leave?\"\n\n\"Hell yeah I was afraid of you, but it's hard to stay afraid of someone when they're...well, I had to reevaluate a few things last night. You might feel better if you talk about it. I already know your secret, so tell me how and why.\"\n\n\"You won't be mad?\" she mumbled.\n\n\"Cross my heart.\"\n\nShe collected herself for a moment as Matt watched, then she began to tell him her story.\n\n\"I was born in nineteen sixty-five. I don't look it because I don't really age in the way that normal people do, not anymore, but I'm fifty-two years old. I contracted lycanthropy when I was a teenager. I don't know if it's a disease, a virus, or a magical curse. All I know is that whenever the moon is full, I transform into this savage, violent creature. That's why I drive out into the wilderness once a month, away from population centers. It's so that I can't hurt anyone.\"\n\n\"That's why you're so strong,\" Matt mused, \"and why you told me that you were on a schedule.\"\n\nShe nodded.\n\n\"You don't seem shocked.\"\n\n\"Well, I was kind of forced to come to terms with the whole werewolf thing last night,\" he replied. \"Let's just say that I'm intimately familiar with the concept. So how did it happen? How does one contract lycan...\"\n\n\"Lycanthropy. I was maybe eighteen or nineteen when it happened. Even after all these years, it's still fresh in my mind. Like it was only yesterday. It's so mundane when I think about it,\" she said, laughing bitterly. He gestured for her to continue and so she did.\n\n\"I was kind of like you when I was your age. I liked nature, liked being on my own. I decided I would walk the Appalachian Trail, I thought that I could handle it. Even if I hadn't encountered...well, even if everything had gone as planned I doubt that I could have completed the trek. The trail is a hiking-only route that passes through fourteen states, about two thousand miles long. It's sort of America's answer to climbing Everest, a coming of age thing, a way to prove yourself. Most people walk the trail for a few days at most, but I was one of those hardcore hikers. I wanted to do the whole thing. I had a rucksack full of supplies, and I was going to restock at the various trail towns along the route. I had a tent, all of my orienteering gear, and a can of bear mace just in case.\"\n\nMatt could guess where the story was going, but he let her continue. Perhaps she would glean some kind of catharsis from sharing it with him.\n\n\"I was camping in the woods one night, off the beaten path so that I wouldn't be disturbed. I had made it to North Carolina, and I was headed to Tennessee. I had set up my tent in Great Smoky Mountains national park, and there was a full moon that night.\"\n\nShe laughed again, hugging the sheets against her chest as she reminisced.\n\n\"I felt safer because there was more visibility, can you imagine? I remember thinking that it was a bear at first, huffing and sniffing around the tent. I got the mace ready, and when it found me, it tore through the fabric like it was paper, the tent collapsing on top of us. The thing was savage, I knew that it would kill me if I didn't act quickly. It closed its jaws around my leg and tried to drag me out from under the tent, that's when I hosed it. I knew where its face was because I could feel its teeth scraping bone. If you know what pepper spray does to humans, then you can imagine what it does to animals with a keener sense of smell. The thing let go of me, howling in pain, and it vanished into the night leaving me wounded in the forest. Being bitten by an animal is one thing, but accidentally spraying your wound with bear mace is quite another. I was too far from the trail, nobody could hear my cries. I was losing a lot of blood. When I finally calmed down and closed my eyes, I didn't think that I'd ever open them again. When morning came, the pain was gone, and my wound was healed. I couldn't understand it. I thought that maybe it had been some horrible night terror, but the trashed tent and the dried blood proved otherwise.\"\n\n\"So it's transmitted like rabies, through bites?\" Matt asked.\n\n\"Oh God Matt,\" she yelped suddenly, \"did I bite you? Oh no, oh please, please tell me that I didn't bite you.\"\n\n\"You didn't break the skin I don't think,\" he said, running his fingers over his neck and checking for wounds. \"Plus, I feel like I've been beaten with clubs and none of my scars have spontaneously healed. I think I'm in the clear.\"\n\n\"I could never forgive myself if I put you through that,\" she sighed, her lower lip trembling.\n\n\"Finish your story,\" he said, trying to keep her mind off it. She nodded and took a moment to compose herself before continuing.\n\n\"The first time I turned, I...hurt some people. You're not conscious when it happens, it's like you fall asleep and someone else takes control of your body. You wake up in a strange place not knowing what you did the night before. It's a horrible feeling, not knowing if you've killed someone, not knowing where you are or how to get home. The news reported it as an animal attack, but I knew better. From that day on, whenever there was a full moon, I'd make sure that I was away from people. Locked up somewhere, or out in the woods where I couldn't do any harm.\"\n\n\"And that's why you ended up at my diner.\"\n\n\"Yeah, I wanted to be out in the wilderness when it happened. I didn't plan on meeting you, didn't plan on putting you in danger. It was selfish of me, you're so young, so naive. I could have killed you, or worse...bitten you. It was a moment of weakness. I just wanted to pretend for a while, wanted to spend a night with someone without having to answer a thousand questions about why I couldn't stay with them. I wasn't even going to tell you my name, you'd never see me again, and I'd be gone before the full moon. What would it matter?\"\n\n\"In a way I'm flattered,\" Matt chuckled. \"You took all of those risks because you liked me. Maybe it wasn't the most responsible course of action, but you know what they say. The heart wants what the heart wants.\"\n\n\"I don't want you thinking that I do this often,\" she added hurriedly, \"I can't do the whole one-night-stand thing. It makes me feel...dirty...used. I can't have long term relationships either because, y'know, I might eat my boyfriends.\"\n\nMatt laughed, then quickly sobered as he realized that she wasn't joking.\n\n\"You were quirky, cute, we connected. I thought that we could have some fun and there wouldn't be any consequences. But there are always consequences. When my bike broke down, I was certain that you were going to die. I ran as far into the forest as I could before I started to turn, but I guess the werewolf found its way back here.\"\n\n\"It's kind of my fault too,\" Matt admitted, \"I didn't take your warnings seriously, and I went out looking for you. I might have been alright if I had stayed inside like you said, but I heard what I thought was a wolf and you were out there alone.\"\n\n\"My hero,\" she replied sarcastically.\n\n\"Really Smoke is to blame, he knew you were a werewolf, and he didn't tell me. Isn't that right, you old mutt?\"\n\nSmoke raised an ear in their direction, then resumed his nap at the end of the bed, the biker laughing at the dog's reaction.\n\n\"So do I get to know your name now?\" Matt asked.\n\n\"It's Jessie.\"\n\n\"Nice to meet you, Jessie.\"\n\n\"So...what did I do last night...exactly?\" she asked as she looked around the trashed bedroom. Now it was Matt's turn to be embarrassed, and he rubbed the back of his neck as she watched him expectantly, trying to find a polite way to phrase it.\n\n\"Well I locked up the house like you said, but Smoke was going crazy all night, trying to get out. He knew that something was going on outside and when I heard a wolf howling, I thought that you might be in trouble. I didn't know why you'd asked me to batten down the hatches, I wouldn't have suspected the truth, not in a million fucking years. Me and Smoke went out to find you, turns out he's best buds with your werewolf alter ego, led you straight back to me. I shot you a few times, sorry about that by the way, but it didn't seem to do you any real damage. I made it back to the house and holed up inside, but you were persistent. You managed to break your way in. You cornered me in the bedroom and then you kind of...\"\n\nHer questioning expression turned to one of surprise, her eyes widening as she looked at his red cheeks and the shredded bedspread, putting two and two together.\n\n\"I...I don't...I'm so sorry Matt. Was it...consensual?\"\n\n\"Not at first?\" he replied, unsure of why had phrased his answer as a question. They both began to laugh nervously, Jessie sensing that he wasn't angry with her. She seemed relieved.\n\n\"And you're okay? I didn't hurt you?\"\n\n\"I'm alright. A little sore maybe, but none the worse for wear.\"\n\n\"What was that like? I've videotaped myself you know, when I turn. Just to see what I looked like, how I behaved. What I saw...it terrified me. Giant, vicious, hairy. Like some kind of rampaging beast.\"\n\n\"You're a handful in more ways than one, I'll give you that. At least now I can say that I've slept with a werewolf. In all honesty, at first I was scared out of my wits. When you were trying to get inside the house, hammering on doors and smashing through windows, I thought you'd tear me to ribbons if you got your hands on me. When you had me on my back, and your jaws were an inch away from my throat, I made my peace. But that bite never came. It was like you recognized me in some way, like you knew my scent. You stopped, and your whole demeanor changed. I'm certain that there was some part of you still in there, some remnant of your personality.\"\n\n\"And it...liked you too?\"\n\n\"Oh yeah, it liked me alright.\"\n\n\"I didn't, uh...know that you were into that kind of thing,\" she said with a sardonic smile.\n\n\"Nor did I.\"\n\nHer tone became serious again, and she stared at the opposite wall as she went over what had happened in her mind.\n\n\"I know that no matter how many times I say I'm sorry, it won't change what happened,\" she said. \"I can't take back the stupid, selfish decisions that I made. I can't take back what I did to you. But I am sorry, Matt.\"\n\n\"You have nothing to apologize for,\" he insisted, curling his arm about her shoulders and pulling her close. \"The last couple of days have been a ride. I've been bored out of my mind living in this town, never meeting anybody new, never being able to go anywhere or do anything exciting because I have to manage the diner. You've given me my fill of excitement and adventure, that's for damned sure. If I could roll back time, I wouldn't do anything differently. Your jacket is in the woods by the way,\" he added, and she snickered.\n\n\"I told you you'd give me diabetes,\" she complained, leaning her head on his shoulder. \"You're too sweet for your own good. It almost got you eaten by a werewolf.\"\n\n\"You can stay you know, for as long as you need,\" he blurted. \"You're not going to hurt me.\"\n\n\"Don't be cruel,\" she grumbled, \"you know that I can't take you up on that.\"\n\n\"Why not?\" Matt protested. \"I live alone in the middle of the woods, miles from civilization. I've met your werewolf, and whatever she is, she isn't feral. She recognized me, she showed empathy and restraint. She could have killed me at any point, but she didn't. I'm not afraid of meeting her again. Besides, I know your secret now, which means that you don't have to hide. You don't have to slink off into the woods, you don't have to make excuses. You could even have a real relationship. I mean...if that's what you want.\"\n\n\"That's a funny way of asking me out.\"\n\n\"What if I am asking you out?\" Matt said defiantly. \"Every relationship comes with caveats you know. I have a large dog, for example, we're a package deal. You have a...somewhat larger dog.\"\n\n\"You're serious, aren't you?\" Jessie asked. She turned her face up to stare at him, gauging his reaction.\n\n\"I know you probably have responsibilities up North, a job and a social life. But even if you can only come down here on the weekends, or even if it's only once a month, I'll take it. Hell, even if you-\"\n\nShe reached a hand up towards his face and cupped his cheek in her palm, bringing him down for a comforting kiss and silencing his rambling. She locked him in a slow and passionate embrace for a moment, before breaking away and staring up at him with her blue eyes.\n\n\"I take it that's a yes?\" Matt mumbled.\n\nJessie nodded, a warm smile brightening her features.\n\n\"Do you, um...have something that will fit me?\" She gestured to her nude body beneath the torn bedspread, and he began to chuckle.\n\n\"Yeah, I guess we should go find your clothes. Hey Smoke, want to go for a walk?\"\n\nThe Husky jumped down onto the floor, whining excitedly and spinning on the spot as his master eased himself out of bed, taking a few tentative steps. Damn it, that werewolf had really tenderized him. It would take him a month to recover enough for round two. Jessie watched from beneath the sheets, her eyes playing over his body. She saw the scratches that decorated his back, imagining what must have happened the night before.\n\n\"What do you want for breakfast, by the way?\" Matt asked as he struggled to pull on a pair of jeans. \"I've got eggs, bacon and sausages, I could make pancakes.\"\n\nShe grinned at him, stretching her arms above her head and interlocking her fingers, the sheets threatening to fall away and expose her.\n\n\"Forget the menu, kid. Surprise me.\"\n\nTHE END"
    ],
    "authorname": "Snekguy",
    "tags": [
        "femdom",
        "size difference",
        "werewolf",
        "large breasts",
        "rough",
        "reluctant",
        "oral",
        "fearboner",
        "muscle",
        "scratching"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/date-with-a-drifter"
}