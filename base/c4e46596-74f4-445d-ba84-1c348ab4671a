{
    "title": "The Old King and the New Bride Ch. 01",
    "pages": [
        "Hey, guys! Welcome back to my world of erotic fiction. I've missed you! For those of you who finished the 'Dealmaker' series with Claire and her demons, you'll recall them mentioning old Lucifer arranging to marry a miss Michelle Harlowe at the end. Well, here it is. This is young Michelle's story, and it's my first story written in the first-person POV. Tell me what you think.\n\nEnjoy!\n\nChapter 1: A Wedding for the Ages\n\nI glare at the ornate mirror in front of me, sending my seething hatred out into the smooth glass. A pretty young woman with a lovely oval face, warm hazel eyes, full lips and lightly tanned skin glares back at me. Her dark hair is piled on top of her head, tiny strands of pearls weaving in and out of the intricately twisted locks of hair. Most people would remark how beautiful she looks today, with her soft lips and shimmery eye shadow.\n\nAll I can think of is how pissed I look.\n\nIt's my wedding day. I should be happy. But elation is the last thing I'm feeling. Dread, anger and horror better describe my state of mind. My mother has royally fucked up this time, and now I'm having to pay for her mistakes. Fantastic.\n\nMy mother has had dreams of becoming part of royalty since she was a girl. Four years ago, she made the colossal mistake of making a deal with the Devil himself, in order to gain that prestigious place in society. My mother got her wish, marrying into the English Royal family after my father 'coincidentally' died in a car wreck.\n\nUnfortunately, as is often the case with my mother, she forgot to hold up her end of the bargain. Once she got her ticket to the crown, she had to make her payment by promising her soul to be a servant to Lucifer himself for the next three centuries. My mother found a way to weasel out of the bargain, so I was put in her place. Though, instead of being Lucifer's servant, he's decided to take me as his bride.\n\nServant or bride...I honestly can't say which fate is worse.\n\nI continue to glare at my reflection, ruefully taking in every facet of my appearance as my mother bridesmaids finish the last details. They flit around the room, nervous about the wedding that's just minutes away. I don't know why they're so freaked. I'm the one getting married to Hell's ruler, not them.\n\nStill, I've grown tired of arguing over this whole charade. The demons that came to claim me promised that mom wasn't completely free of her deal. Once this wedding is over with, she'll have to pay up anyway. That brings a small smile to my face, and I spend a moment looking over my reflection, reveling in the thought of sweet payback.\n\nAs demanded for such a formal occasion, my mother has decked me out in the finest wedding dress she could find. Unfortunately, since I'm marrying Lucifer, it can't be too formal, so she made a few adjustments to the dress to make it more appealing to his palate.\n\nI end up wearing a sleeveless white satin fit-and-flare gown. It hugs every curve I possess, making me feel more like a runway model than a bride. The dress reaches the floor, even with my heels, and has a long train trailing behind me that's trimmed with lace along the edge. A thick ribbon sash is tied around my waist, cinching my figure in and showing off my curves even more. A high chocker-style lace collar wraps around my throat, with three buttons at the back of my neck that hold my dress in place.\n\nHonestly, that's all that can be called 'demure' about my dress. The rest of it is fantastically audacious. My dress is backless, with miles of skin showing from my shoulders to the small of my back. The lace collar and trim along the bottom is jet black, as is the ribbon tied around my waist. There's also a generous oval cutout in the front, stretching down from the base of my throat down to the bottom of my sternum. It shows much more of my cleavage than is really necessary.\n\nIt's a beautiful dress, but incredibly sinister as well. God, I hate my mother right now.\n\n\"Stand up straight, Michelle.\" My mother makes sure my intricate hairstyle is secure. \"At least smile a little. It's your wedding day!\"\n\nI deepen my scowl just to piss her off. Normally I'm lively, happy and loving around everyone I know. It's who I naturally am. Not today, though. I think I deserve to be a little disappointed and begrudging today. After all, this is my mother's fault, not mine. I can be pissed if I want to.\n\n\"Come on, Michelle. This is important!\" She checks to make sure that my dress is secure.\n\nYes. God forbid I have a wardrobe malfunction on my wedding day. It is Lucifer, after all. Wouldn't want to shock him.\n\n\"I'll stick with my frown, thanks.\" My tone is sharper than she's prepared for.\n\n\"Michelle.\" She comes around to face me, hands on her hips and her mouth set in a thin line. She's dressed in her black satin evening dress and wears a row of pearls around her neck.\n\nHow my mother and I are related, I'll never know. I stand at least three inches taller than her, even without my heels, and my body is far slimmer. My hair is a dark chocolate brown than curls down past my shoulders. Hers is a dirty blond that's pin straight and stops are her collarbone. My lips are fuller, my face leaner, and my skin two shades paler. Her eyes are a bright emerald green; mine are my father's soft hazel-gold. The only physical attributes we share is her straight nose and slender jaw. Other than that, we're as different and a mother-daughter combination can be.\n\nNot that my mother's unattractive, but she's far from the knockout she believes herself to be. The only reason Richard married her was because Lucifer charmed him into it as part of her deal. My step-brother Daniel has told me many times that his father would have chosen me way before my mother. Not that I'd marry Richard, anyway. He's a nice guy, but way too old to be my type. Besides, he's blonde.\n\n\"We need this to happen,\" she snaps at me. \"This is all part of the deal we made. We have our power and our wealth. Now we have to pay it back.\"\n\nI glare at her. My mother's never been good at admitting guilt and taking responsibility. Today is no exception.\n\n\"No,\" I bark. \"This is all part of your deal that you decided to skip out on. You have your wealth and money, and I'm paying it back for you.\"\n\nShe rolls her eyes at her, her trademark defensive mechanism. If she can make me feel guilty, then she doesn't have to shoulder as much of the blame. I love my mother, I do, but she's incredibly self-serving. She's also got an ego the size of China.\n\n\"Stop this.\" Her eyes narrow, matching mine. \"This has to happen. Would you rather have him come after all of us?\"\n\nWell, you're screwed anyway, so what do I care?\n\nShe does have a point, though. My stepfather and my two stepbrothers had nothing to do with this deal other than being pawns in it. They haven't made any deals or tried to win any bets against Lucifer. They've just put up with my mother and I for the last four years, handling my occasional outbursts of rage and her hyper-neediness. They've been good to us, and they don't deserve to be dragged any further into this than they already are.\n\nI sigh and cross my arms over my chest, glaring at my reflection once more.\n\nFine then. For Daniel, Richard and Marcus. But only for them.\n\nThis is where I start to despise this soft heart of mine. It's impossible for me to knowingly harm someone unless I know I'll save them later. I've inherited my father's kindness and selflessness as well, and it's gotten me into, and out of, a few sticky situations.\n\nToday, my tender heart has sentenced me to an eternity of marriage to Lucifer.\n\n\"Come on,\" she grips my shoulders and spins me around. \"Your wedding starts in ten minutes. We have to get you down to the service.\"\n\nI am shoved towards the door of my dressing room, laughing to myself. My family and I have never been Catholic; we're not affiliated with any religion whatsoever. But Lucifer himself has chosen to have the wedding in one of California's most prominent cathedrals. It's the ultimate middle finger to God himself.\n\nMy mother and I rush out the door, followed closely by my bridesmaids. They're all succubae, really. No one I know or care about. They're just here to add to the ceremony. The five of them are gorgeous, voluptuous and completely heartless.\n\nMy maid of honor, Leyna, follows close behind me. I know she's staring daggers at the back of my head, but I'm too panicked to care. She's tall, with long cherry-red hair, pale skin and bright yellow eyes. She's also insanely jealous that I get to marry Lucifer and she doesn't. Leyna's had a crush on her master for centuries, trying in vain to get him to notice her over the so-called 'skinny human girls' like me. But her luck has run out, and now she's pissed because I get the honor she's been craving.\n\nBelieve me, Leyna. If I could put you in my place, I would.\n\nWe race down the intricate halls of the cathedral, rushing past carved statues of saints and dead priests. I can almost feel the rage radiating off my soul-sucking bridesmaids. They hate the religious crap as much as I hate my situation. This is the last place any of us want to be.\n\nWe finally stop just outside the main pathway of the church, hiding behind one of the massive stone walls. There's a long red velvet carpet laid out on the cold marble floor of the church. It's covered in dead flower petals. How fitting\n\nAcross from us, on the other side of the entrance, a line of groomsmen -- all high-ranking demons -- waits for their cue to start the procession. My mother ushers my bridesmaids forward, lining them up in their respective spots. Leyna passes me for the last time in my unmarried life, glaring at me and turning up her nose at my obvious humanness. I roll my eyes at her and turn to face the wall, pressing my forehead to the cool stone. The cold feels good and allows me to gather myself for a moment.\n\nMy mother rushes back to me, turning me so I face her. She runs her hands over my dress and hair, making sure nothing is out of place. An unknown male demon races up to us from around the corner, handing me a bouquet of dead roses and bowing his head slightly. He slinks back into the main hall of the cathedral, taking his seat in the pews.\n\nMy mother's warm hands cup may face, forcing my head up so I have to look at her. She smiles softly at me, reaching out to bush my cheek with her fingers.\n\n\"You look so beautiful,\" she whispers.\n\nI give the best smile I can force. Her pep talks are the last thing I want to hear right now.\n\nShe laughs to herself, tucking a stray strand of hair behind my ear. \"Your father would have had a heart attack looking at you now.\"\n\nThat makes me smile. I remember my father as the most loving, kind, compassionate man I've ever known. The person who taught me how to read, who helped me with my homework, who comforted me after every nightmare. Tears threaten to escape my eyes. He didn't deserve to die the way he did, crushed between two hulking beasts of metal. He died because my mother wanted power, because she couldn't care less about what happened to him as long as she got what she wanted.\n\nBut he died being my father and loving me. That makes my mother's sacrifices even harder to bear.\n\nI narrow my eyes at my mother. \"He's not here to see this because of you,\" I whisper.\n\nShe sighs and tries to guilt-trip me again. \"Don't do this. He wouldn't want to see you upset on your wedding day.\"\n\nI bite down on my lip, holding back all the hateful words I want to say. They won't do me any good here. Besides, she hasn't gotten off scot-free from her deal. She'll have to pay up the moment this wedding is over. I can let loose then.\n\nI jerk my head out of her hands, turning my gaze to the wall again. \"Go sit down.\"\n\nShe sighs again and nods, patting my shoulder gently before she turns to leave.\n\nWow, mom. How much more love could you show to me in one day? You're smothering me.\n\nShe rounds the corner of the wall I'm hiding behind, disappearing from view as she goes to take her seat. Music starts, a soft, rhythmic melody, and I watch as the pairs of demons and succubae start their walk down the aisle. I sigh and press my head against the cool stones again, trying to clear my head of any emotions.\n\nA soft tap on my shoulder brings me out of my pity-party. I turn to see Richard standing beside me, giving me the warmest smile he can muster on a day like this. His blonde hair is combed back, and his warm amber eyes smile at me in the sunlight. He's dressed in a beautifully tailored tuxedo, with silver cufflinks gleaming on his sleeves and a navy tie. For an old English royal who will never see the throne, he looks - dare I say it? - dashing.\n\n\"You alright?\" he asks in his signature upper-crust British drawl.\n\nI smile at him. \"About as good as I'm going to get.\"\n\nHe smiles wider. \"I know. Days like this, you don't really feeling dancing, do you?\"\n\nI shake my head. \"Not really.\"\n\n\"Hey.\" He loops his arm around my shoulders. \"I know this is one hell of a difficult position to be pushed into, but I know you, Michelle. You'll make it work. You always have. You have a resilience that would make most soldiers applaud you.\"\n\nI smile again. Richard's a great stepfather, nearly a perfect replacement for my own dad. He loves me as his own kid, even though he only married my mom four years ago. He could cheer up the most depressed soldier in a matter of minutes. He should consider becoming a professional inspirational speaker.\n\nThe music changes, switching from the soft melody to the traditional wedding march. My death knell, really. Richard pats me on the shoulder and starts to lead me towards the plush red carpet the stretches down the aisle towards my soon-to-be husband.\n\n\"Head up,\" he whispers. \"And do try to smile. I know you don't want to, but it's best if the old demon at least thinks you're enjoying yourself.\"\n\nI nod and straighten my spine, holding my bouquet straight and plastering a small smile on my face. It's honestly the best I can do.\n\nWe reach the carpet and turn towards the enormous cavern that is the main foyer of the crush. It's beautiful, with carved marble columns that reach the ceiling, dark-stained oak pews and breathtaking stained glass windows. The light they let in stains the marble floor red, blue and green. It's lovely, but empty and hollow like the former angel I'm about to marry. Ironically, the monstrous wooden cross that sits at the back of the church has been kept uncovered. Yet another 'fuck you' to God.\n\nI'm going to be struck down here and now, aren't I?\n\nAt the end of the carpet stands a bishop at his podium, his Bible hand, a warm false smile on his face. My bridesmaids line the left side of the podium, some still glaring at me. The row of demons line up the right side, standing behind my husband. I force my eyes down, hoping to avoid looking at the dark creature I've been sacrificed into marrying.\n\nTaking one final breath, Richard begins to walk me down the aisle. The pews are lined with people, most of them demons. The only humans here besides the priest are my mother and stepfamily; the rest of my family abandoned us long ago.\n\nI keep my head up as we walk, trying to avoid eye contact with every person in the room. I manage to catch glimpses of people in the pews. My mother and my stepbrothers sit to my left. Mom's dabbing at her eyes with a handkerchief while Marcus and Daniel glare at the demons in front of them. We've grown close these last few years; they don't want to see me married off like this.\n\nTo my right sits the gorgeous Claire Harding and her group of demons. Thaltos, Silthos. . . I can never remember the last one...Darrow! That's it! The three hulking hellions sit a few seats back from the pulpit, smiling and laughing as they whisper lewd jokes to one another. Claire is dressed in a floor-length saffron-yellow gown that glows against her pale skin. Her dark hair just brushes her slim shoulders. Her grey eyes find mine as I pass her, and she smiles at me.\n\nI can understand her reaction. She's one of the lucky ones who's had a decent time in Hell with her demons. Three sons and three loyal demons make for a fairly acceptable environment even in the pits of tortured souls.\n\nThe last person I see as we walk makes me feel a little better about my chances here. Kara Haven, infamous in the underworld for having the balls to put Lucifer in his place, sits to my right directly opposite Claire. Her long, ink-black hair has teal ribbons woven into the braid, and her sapphire demon's mark radiates off her ivory skin. Her long violet gown is fitted perfectly to her every curve. She sits beside Darian, her half-blood husband; her other lovers, Ladrian and Lyzander, sit next to Darian.\n\nKara also sees me, her cobalt-blue piercing my own. She grins at me, then mouths a few silent words of encouragement.\n\nI watch her lips move. \"If he gets too rough, kick him in the balls.\"\n\nI nod and hold back my smile. It's valuable advice from someone who's dealt with Lucifer first-hand. I'll keep it in mind in case something goes awry and I have to defend myself against my ravenous fallen angel.\n\nI return my gaze to the priest ahead of me. He's decked out in full catholic wedding regalia, and is smiling warmly -- albeit falsely -- at me. I smile back, my heart nearly bursting from my ribcage. I ponder the thought of running away, of turning around, picking up my dress and hauling ass out the doors of the church. It would certainly give them something to talk about, but I dispel the idea.\n\nI'm marrying Lucifer. If I run, I'm not going to get far.\n\nRichard and I stop at the end of the carpet. I'm shaking as much as he is, but Richard never loses his composure. Ever the born-and-bred gentleman he was raised to be, he smiles at me, kisses my cheek and steps back to take his seat with the rest of the crowd.\n\nI'm alone for a heartbeat as I take the final steps to my side of the pulpit. I can barely breathe, and I'm shaking so hard I could almost be considered epileptic. Still, I stand my ground, remembering that I'm doing this to protect what's left of my family from being dragged into this deal as well.\n\nThe priest starts the ceremony, talking about the dearly beloved and how happy of an occasion this is. Happy my ass. If he were in my position, he'd be halfway to Cuba by now.\n\nOh ,yes. I'm just ecstatic to be here.\n\nI stare at my bouquet of rotten flowers, watching as the delicate, lifeless petals rustle and shake as I adjust my grip. A few of them break off, floating down onto the marble floor. My heart skips a beat watching them fall, my thoughts turning to how my family has fallen from upstanding citizens to wheelers and dealers with the Devil.\n\nThe priest asks if anyone opposes our union. The room is deathly silent. No one dares to say yes. Damn it.\n\nIcy fingers reach out and cup my chin, startling me out of my trance. Gently, they tilt my head upwards so I can look my husband-to-be in the eye. Of course there has to be some semblance of torture here. Lucifer can't have his bride avoiding him during our wedding. I relent and let him raise my head, figuring it's better than fighting him in front of our audience. I take a breath and flick my eyes up to meet his.\n\nMy breath catches in my throat. My God, he's beautiful. Lucifer stands just feet away from me, his glory and absolute beauty nearly overwhelming me. I can see how he was picked as the best and most beautiful angel. He's flawless.\n\nBright golden eyes meet my own, shining in the warm sunlight filtering into the church. They're gorgeous, almost hypnotic. I fight the urge to get lost in those gorgeous eyes. If I do, I'll never come out.",
        "The rest of him is just as striking. Fawn-brown hair lies perfectly across his head, just long enough for the strands to brush against the tips of his ears. His face is expertly chiseled, the angles of his face so sharp and straight I'm afraid I'll bleed if I touch him. His lips are full and soft, his nose straight as an arrow and his jaw strong. His cheekbones could cut glass.\n\nHis body is as mystifying as his face. His flesh has been loved by the sun just enough to tan him to perfection. The muscles of his chest and stomach are carved without being absurd. Strong biceps and slender shoulders compliment each other perfectly. He's wearing soft, ripped jeans and nothing else. Even his feet are bare. A pair of enormous jet black wings are folded against his back, the feathered tips splayed out on the marble floor. They gleam in the sunlight, tiny flecks of indigo and ruby shimmering along the surface of the feathers.\n\nHe's beyond perfect, and I suddenly feel incredibly insignificant.\n\nHis succulent lips turn up in a warm smile, and I have to take a deep breath to make sure I don't faint. He's absolutely gorgeous, yet undeniably sinister. That's a deadly combination if I've ever seen one.\n\nHe nods, and says 'I do.\" I briefly wonder why he'd say such a strange, random thing. Then I remember why I'm here and my stomach does a double back flip. We're at the part of the wedding where we agree to our marriage. I've been staring at him for so long I've missed the entire opening ceremony.\n\n\"Miss Harlowe?\" The priests' soft voice breaks me out of his hypnotic gaze.\n\nI shake my head and turn to him. \"Yes?\"\n\nHe cocks an impossibly bushy eyebrow at me. \"Do you take Lucifer to be your lawfully wedded husband?\"\n\nDo I?\n\nI contemplate saying no, then dismiss the idea. That would just get me in trouble, perhaps even getting my family killed. I sigh to myself and nod, forcing a smile.\n\n\"I do.\"\n\nThe priest smiles and nods. \"Would the couple like to say a few words?\"\n\n\"No!\" I bark without thinking. I want this over with as soon as possible. The fewer delays, the better.\n\nOut of the corner of my eye, I watch Lucifer nod in agreement. He and I have different reasons for skipping this par of the wedding: he wants to consummate our marriage as quickly as possible and I want to get the hell out of here. Our minister is shocked for a moment, then collects himself again and nods, clearing his throat.\n\n\"No vows then, I assume?\"\n\nI shake my head. What am I supposed to say? That I really don't want to be here and that I hate my mother with every ounce of my being. I don't think that would go over well.\n\nLucifer also shakes his head. \"The rings will do.\"\n\nGod, even his voice is perfect. I don't stand a chance.\n\nThe priest nods again. He motions for the best man - best demon, actually - to bring the rings forward. The hulking hellion steps forward, opening his massive palm to reveal two shining silver rings. The priest reaches out and grasps them from the demons' hand, though beyond his passive expression I can see fear flicker through his eyes. The priest turns to us again and asks us to each take a ring.\n\n\"You shall now exchange rings to symbolize your eternal affection and loyalty to each other,\" he announces.\n\nI swallow, my throat suddenly tight. Besides knowing I'll have to kiss Lucifer at the end of this, this is the part I've been dreading the most about my wedding. Exchanging the rings symbolizes that we belong to one another. It will make our union real.\n\nThe priest blesses the rings then turns to Lucifer and asks him to place his ring on my hand. He smiles at me and reaches for my hand, holding it gently as he slides the slender silver band over my finger. It's a beautiful ring. Sterling silver, no doubt, and carved with tiny intertwining vines.\n\nThe priest turns to me and instructs me to do the same. I manage to move my arm, reaching out to hold his hand steady. I'm shaking out of nervousness, making my aim go from bad to awful. Still, I manage to set my emotions straight and slide the matching ring onto Lucifer's long finger. I pull my hands back, gripping my bouquet so hard I'm snap some of the dead stems and the flowers tumble to the floor.\n\nFollowing Lucifer's own request, the priest brings forward a small candle for us to light. It's black as a startles night, ridiculing the sacredness and purity of our marriage. He hands each of us a match, and we light it together, symbolizing our unity. My hand trembles as I light the small flame, and I wonder if setting the church on fire will get me out of this.\n\nThe priest takes the candle thanks God for our loving union, asking for us to have a long and happy marriage. I can't even imagine how pissed the old geezer must be right now. To see his rebellious son mocking him in a marriage to an innocent human girl...the old man must be causing a volcano to erupt somewhere.\n\n\"Buy the power vested in me,\" the priest announces to our audience, \"I now pronounce you husband and wife.\"\n\nOh no.\n\nMy gut twists. This is the part I've been dreading. We have to kiss. I sigh inside myself, silently cursing my mother. If it wasn't for her and her damn deal, I would be back home studying for my final exams and gearing up for Spring break. But no. She's ruined my entire college experience for the chance to see the English throne. What an incredible tradeoff.\n\n\"You may now kiss the bride.\"\n\nI sigh and bite my tongue. As much as I detest having to kiss this beautifully sinister fallen angel, I come to the same conclusion I've found before: it will be easier and safer to just do it and get it over with.\n\nI look up to see him smiling at me, his golden eyes gleaming with excitement. He steps forward, halting just a few inches away. He towers over me, gazing down at me with ravenous eyes. I can feel the icy chill radiating off his skin and a shiver slightly.\n\nHe pauses, allowing me to take one last deep breath to steady myself. He may be the master of Hell, but at least he has a little bit of chivalry in him. He closes the final few inches between us, wraps his arms around me and pulls me into a deep kiss.\n\nMy heart nearly stops. His lips are icy, soft and smooth as satin against my own. His mouth tastes of honey and chocolate and every other decadent flavor I can imagine. I manage to close my throat off for an instant, cutting off an involuntary moan. I can understand why Leyna wants him so badly. He's' beautiful, powerful and delicious.\n\nI have to catch myself before I fall into him and completely give in. I want to walk out of here on my own two feet, not carried in his arms like a ragdoll because I got an overdoes of his kiss.\n\nHis moist tongue teases against my mouth, barley running over the curve of my lower lip as he contemplates ravaging me here and now. He pulls back, though, and never invades my mouth. We both know this isn't them time or place for such a ballsy display of affection. That will come later.\n\nSatisfied that our bond is sealed, He pulls away, still holding me in his arms as he smiles down at me again. My head is spinning from that kiss, my body suddenly craving more of him. My stomach clenches in hunger. I mentally shake myself. I can't want him like this!\n\nNo! Bad body! No!\n\nThe priest asks us to turn and face our guests, giving me time to collect myself and get my emotions under control. Lucifer grasps my hand and turns to our audience, taking me with him. I stare out into a sea of humans and demons. Hundreds of pairs of eyes stare back at us, excited and relieved. I've done my job and nobody was killed. Success.\n\nUnfortunately, not everyone is so happy with our new union. From the corner of my eye I see Leyna staring at me. She looks ready to eat me alive, yet she doesn't dare. I'm Lucifer's wife now. If she attacks me, she can kiss her perfectly formed ass goodbye. The rest of my bridesmaids don't give me the evil eye of death. Most stand silently, smiling and happy that their ruler has finally found someone new to torment. A few stare at the ground, disappointed that I have their coveted place.\n\nOh, ladies. If I could switch places with you and cheer you on, I would.\n\n\"Ladies and gentlemen. Humans and demons. I give you the king and queen of Hell!\"\n\nThe congregation erupts in applause. Some cheer, some stand and clap wildly. My mother sits in her seat, dabbing at the tears spilling down her cheeks. Tears of joy, not sorrow or regret. She's realized what I figured out this morning: Not only is she now married into British royalty, but her daughter now rules Hell. To my mother, that's a double dose of wealth, power and privilege.\n\nI scowl at her, furious. I knew I was her collateral if she's flaked on her deal. I never expected her to use me so freely. My mother now stands passes over Leyna on my list of people I hate.\n\nLucifer steps down off the small platform we're standing on, turning back to me as he tugs at my hand. I snap out of my planning for how I'm going to kill my mother and stare back at him, flustered. He smiles and tugs at my hand again. I nod vigorously and step down cautiously. I saw Evalyn, one of my maids, almost trip on the skirt of her dress as she walked up the aisle and I'm terrified I'll actually complete the foul-up.\n\nYes. God forbid I embarrass myself now.\n\nOnce I'm on the carpet, my equilibrium stars to sink back in. Mentally, I'm still in shock that I now have Lucifer as a husband, but I'm no longer too stunned or frightened to speak or move fluidly. I have better control of my emotions now, and I manage to force a warm smile.\n\nIn the few heartbeats I have to think, I spot my mother sitting down in her seat, smiling at me and wiping away her power-happy tears. I smile back, a slow, evil, vengeful smile that rears its ugly head less often than Halley's comet circles Earth. She see it, and her face drops. She knows what I know: She's screwed me over in the most putrid way possible, and I'm eventually coming after her for it.\n\nMy evil train of though is interrupted by none other than my new, loving husband. Following tradition, he steps forward and scoops me into his arms, turning to carry me down the aisle. I sigh and relax my body, hanging limply in his arms as he makes his way to the doors of the church.\n\nMy head hanging over his arm, I watch as our audience stands to follow us out. They're walking on the ceiling to me, all of them upside-down and laughing. From this angle, it looks like they're laughing with frowns and floating above the earth. A bubble of laughter escapes me as well. This whole thing -- the marriage, the contract, the people -- it's absurd. This would be a fantastic comedy sketch if it weren't real.\n\nWe exit the church, stepping out into warm sunlight and a cool autumn breeze. At the bottom of the fantastic staircase leading up to the church sits a gilded carriage that would make Cinderella throw a tantrum if it weren't so menacing. It's all black -- the wheels, the straps, the carriage itself. It's trimmed with lush red velvet and has delicate gold filigree detailing around the edges and on the steps.\n\nI perk up a bit, taking in every beautiful detail of this hell-bound limousine of death. It's stunning, but horrifying as well. But as ominous as the carriage is, it's the horses and coachman that really freak me out. The horses are enormous, as black as the carriage they pull. Their eyes are red as blood, and their hooves send a shower of sparks flying when they tap the ground.\n\nThe coachman sits motionless stop his platform, his billowing black cloak whipping around him in the soft breeze. His tattered top hat sits perilously on his head, as if it may fall off and disintegrate at any moment. At the sound of our approaching crowd, he turns to look at us as we approach. His face is pale, bloodless and hollowed from centuries of ageing in the pits of fire. Eyes the color of swamp water stare out from deep sockets, piercing and cold. He nods to us, touching the brim if his ragged hat.\n\nI shiver. He's the most horrifying thing I've seen since watching \"The Blair Witch project\" when I was ten.\n\nLucifer begins to descend the staircase, thankfully taking care not to jostle me around too much. I appreciate his kindness, but I'm still cautious. He is the Devil, after all. How much can I trust this creature knowing the reputation he has?\n\n\"Tarioc!\" he calls out with his incredible voice.\n\nThe coachman nods again and cracks the slender reins in his hands. The gilded door to the coach swings open, revealing the luxurious fabrics and d\u00e9cor on the inside. It's all dark velvet, rich satin and stained wood. The crimson curtains inside are drawn, making it look even more sinister.\n\nNo sense of modesty, I see.\n\nAm I surprised? Not really. My dress is just as ambitious and outspoken as the carriage. Besides, it's Lucifer. What else would I expect than the highest quality and most expensive? Yet another 'fuck you' to the old man upstairs.\n\nWe reach the bottom of the steps and head straight for the carriage. I look back and see the rest of our party has declined to follow us. Mom, Richard, Daniel and Marcus wait on the side of the steps, watching us as we leave. Well, Richard and mom are watching. Daniel and Marcus look as if they're about to toss my mother into oncoming traffic.\n\nEveryone else waits at the top of the stairs, waving and calling out stupid, unfunny comments. I'm confused. Shouldn't they be following us for the reception?\n\n\"They're not coming with us?\" I ask\n\n\"Yes, but not yet.\" His voice is like melted chocolate poured over ripe cherries and covered in fresh caramel. \"We'll meet them back home. But first, I believe a reception and food is in order.\"\n\nHome.\n\nThe word echoes in my head. Not the home I grew up in, not the house I played in. My new home. A world of fire, pain and screaming souls that will never quit whining. That's where I'll be living for the rest of eternity. Oh, the joy. I'm so excited to live there I could almost jump out of his arms and run screaming down the street.\n\nCautiously, Lucifer climbs the step of the carriage, careful to maneuver me so I don't smack my head on the elaborately pained wood. Still, I involuntarily pull my head in. I don't trust him that much just yet. Once inside, he turns to set me down on one of the plush seat cushions. He's still holding me, which means I'm devoid of any balance. I grip his arm for an instant to steady myself, feeling his icy, smooth flesh under my fingers.\n\nI find my equilibrium again and rest my back against the cool wood of the carriage. Lucifer takes his seat across from me and smiles, his bright golden eyes gleaming in the darkened room of our ride. He snaps his fingers and the coachman's reins crack again. The door swings shut, cutting off any contact I have with the outside world.\n\nTarioc cracks his reins a third time and the coach starts to move. It's smoother than I'd expected it to be, as if we're riding on polished glass. I peer out through a crack in the curtains and watch as our guests start to move toward their own carriages. I hadn't seen the rest of the hellish rides before; they'd been pulled around behind the church, waiting for ours to depart.\n\nI settle back into my seat as we continue on our way. Through the small space of the window, I can see cars passing by us on the small, narrow streets. I wonder if they can even see us in our carriage.\n\nWith nerves wracking my body, I stare down at the handful of dead flowers in my hands. My nervous shaking has gone away, but my heart is still pounding. I'm now married to the most deviously infamous character in Christian theology, so I've got plenty to be nervous about.\n\n\"That's a lovely dress.\"\n\nI look up to see him staring at me, a slight smile on his perfect lips. He's crossed one of his legs over the other and balances his elbow on his knee, resting his chin in his palm as he gazes at me. His feet are bare, yet I can see a sticky black slime coating the bottom flesh of his foot. It drips off in small globs, sizzling softly as it lands on the floor of the carriage.\n\nGross.\n\nI swallow. \"Thank you.\"\n\nHis lips twitch. \"I'd love to see it unbuttoned.\"\n\nAnd we're off.\n\nI pull back an inch, my eyes widening and my cheeks flushing. He's certainly straightforward. No petty compliments or time-consuming flattery. Nope. He's ready to go. I'm horny, and you look sexier than hell. Let's do it now.\n\nI clamp my mouth shut. What do I say to that? Does an appropriate response exist for such a statement?\n\n\"Would you allow me such an honor?\" His brows rise an inch, expectant.\n\nI'm again rendered speechless. Most of the guys in my life who've wanted to date me usually started slower and waited for me to say I was ready. Lucifer has turned the waiting game on its head and stepped up to the plate in a way only he could. I'm out of my element here.\n\n\"I-I don't know.\" My heart wants to break out my chest and bolt out of the carriage.\n\nHe smiles and closes his eyes. \"My dear Michelle, you have no idea what you've been tossed into, do you?\"\n\nI shake my head. \"Not really. I know who you are and what happened between you and mom, but I'm not sure how this whole thing works.\"\n\n\"I see.\" His smile widens. \"Then allow me to explain. I have been alive for far longer than you could ever imagine. Before the world was created, before humans were walking around. I lived with my father and the rest of the angels in what you would call Heaven.\"\n\nI nod and stare at him, enraptured by his voice.\n\n\"Unfortunately, dad and I didn't get along too well. He said you were perfect, incredible, better.\" His eye twitches. \"He and I had a disagreement and I was kicked out of the house and put in charge of running the septic systems you call Hell.\"\n\nI nod again, still speechless. I figure it's safer to let him have his say than to interrupt.\n\n\"And over these many millennia, I've grown lonely. I have no one to talk to or play with or fuck endlessly. I've been rejected by a horde of young beauties all because I am who your preachers say I am.\"\n\nI shrink back in my seat, afraid he'll explode.\n\n\"But then,\" he smiles again, \"your mother comes along and grants me the opportunity to have a partner in this world of mine. True, she never did pay her half of the bargain, but that will be cleared up soon enough. What I'm excited about is you, my new queen.\"\n\nHe stands, taking slow, paced steps toward me.\n\n\"You. My young, beautiful, virile new queen. The person who will keep my bed warm at night and give me something to play with.\" He stops just inches away from me, and I crane my neck to stare at him. \"Stand.\"\n\nI'm frozen for an instant before I can get my gears moving again. Shakily, I manage to haul myself to my feet and stare into his eyes. He still towers over me, and I suddenly feel like a tiny speck of dust in the wind. God, he's gorgeous.\n\nHe smiles wider and twirls his finger. \"Spin.\"\n\nI nod and turn around, relieved to not have to face his eyes for a few brief seconds. His cool fingers brush against the skin of my back, making me jump. They slide up the length of my spine, chilling my flesh and making me shiver inside myself.\n\n\"You have flawless skin, Michelle.\" His fingers find the buttons at the neck of my dress. \"I'd love to see the rest of it.\"\n\nSlowly, carefully, he undoes each of the small buttons, pulling them apart and letting the dress slide down my body. I'm trembling now, my breath barely audible in the silent carriage. I don't want him to do this, to get so close to me and touch me so intimately. But I don't dare think of what would happen if I pulled away.\n\nHe unhooks the final button and the front of my dress falls away. I fight the urge to cover my chest with my hands, still terrified that any wrong move with piss him off. I'm suddenly cold, and I look down to see my body reacting to the sudden cold. My breasts, the same soft tan as the rest of me, are dotted with goosebumps and are flushed red. My nipples have tightened almost painfully.",
        "\"Spin.\"\n\nI turn quickly, aiming my eye s down to the floor. I can't look at him while I'm standing here half naked.\n\nSmiling at me, he sighs quietly. \"Oh, Michelle. How lovely you are.\"\n\nHe traces my collarbone with one long finger, making me shiver.\n\n\"And so responsive.\" He grins.\n\nHis icy hands move down to my breasts. He cups them in his palms, making my breath hitch. I don't want to feel it, but tiny sparks of pleasure radiate out from my nipples when he pressed his thumbs against them. I understand why he's call the great Tempter and the Wicked One. He's definitely tempting and extremely dark. I have to hold my breath for a moment to regain my senses.\n\nI stare at his hands, watching as he rolls and molds my breasts with his icy fingers. As big as his hands are, they're not quite able to fully contain my chest. It's the one thing my mother's blessed me with. They're not ridiculously huge, but enough to make me the center of attention with guys when I got out with friends. They're the center of my self-esteem, and I take pride in making sure they look damn good.\n\nI watch his smile widen as he explores my body. \"So warm and soft. For a human, you're impressive.\"\n\nI bite my lip, fighting a growing ache in my belly that begs me to throw my arms around his neck and kiss him again.\n\nHis eyes meet mine again, shining with wicked delight. \"I have something for you.\"\n\nOh, shit.\n\nHe reaches into the back pocket of his jeans, still grinning at me. He pulls his hand out, holding his fist palm up. Every scenario is running though my mind of what he has in his hand: a whip, a snake, a spider, a swarm of bees. I'm terrified to find out what he's got, but too curious to look away.\n\nHis palm opens, revealing not a swarm of hornets but a necklace. The chain is slender and as black as his wings. Small carved gems of red, black and cobalt extend downward, gradually growing in size until they reach the center. There, a breathtaking ruby, exquisitely carved in the image of a peacock, shines in the sunlight. It's incredible.\n\nOh. Oh, my God.\n\n\"It's lovely,\" I whisper. I'm lying; it's beyond beautiful.\n\nHis smile widens another inch. \"Spin,\" he commands again.\n\nI turn quickly, still mesmerized by that superb piece of jewelry. I watch as he brings the necklace around to my throat. The ruby hangs just about my cleavage, the smaller jewels glinting in the light. The metal is cool against my skin as he fastens it behinds my neck.\n\n\"One of the crown jewels of my kingdom,\" he whispers into my ear.\n\nI raise my hand to my neck, racing the carving with my fingers. \"Where did you get this?\"\n\n\"Payment owed to me by Louis XVI. He wanted that little Austrian girl to solidify his status as king. There. Let me see.\"\n\nI turn again, facing him head-on. Strangely, with this necklace, I feel strong and proud. I feel respected, loved and cherished. I feel safe, warm and admired. I'm beginning to feel like a queen.\n\nHe smiles again. \"It's perfect.\"\n\nHe leans in and kisses me a second time, and for a second time, I feel out of control and overwhelmed. I fight the urge to throw him onto the seat and straddle him. Taking a deep breath, I let the kiss go on, allowing myself to enjoy the intimacy we now share. I know for him, using this much restraint must be torture.\n\nHe pulls away and smiles, brushing my cheek with his fingers. \"Never take that off.\"\n\nI shake my head staring into to his impossible eyes.\n\nNo. Never. I promise.\n\nI hear the screeching of car tires, the shattering of glass and the crunching of metal. The racket startles me out of his hypnotic trance and I peer through the curtains to see what happened. There's a six-car pileup just outside our carriage, with nearly every car totaled. The drivers of the cars stand in the street, staring wide-eyes and fearful as they watch our carriage pass by.\n\nSo they can see us.\n\nHe reaches down to grip the front pieces of my dress, never even flinching at the commotion outside. I'm not surprised that he doesn't seem to notice. Destruction and chaos must follow him wherever he goes.\n\nHe lifts the front pieces of my dress, reaching around my neck to put me back together.\n\n\"I'd love to keep this open, believe me,\" he smiles, \"But I don't think that would be appropriate for the reception.\"\n\nI nod. Even with me now being married to Lucifer, my mother would have a fit if I came out half-naked. For someone who's willing to sell off her own daughter to the Devil himself, she's surprisingly prudish.\n\nHe finishes buttoning my dress, adjusting it so it lays flat against my skin. The blood-red gleam of the ruby sits right in the middle of the front slit, shining through the sea of whit and black like a beacon. A beacon of doom, I suppose.\n\nStill smiling at me, he retreats to the other side of the carriage, falling back onto the soft cushions of the seats. I stare at him, unsure of what he's planning. I twist and untwist my fingers nervously, waiting for his next move.\n\nHe crooks his finger at me, calling me forward. I hesitate, trying to figure out what he's thinking. He pats his thigh, motioning for me to sit. I nod and step towards him, my heart racing again. I can't begin to imagine what he wants: my poor mind can't get that dark.\n\nI finally reach him, staring into his warm, bright eyes. He pats his thigh again, his smile never wavering. Swallowing, I gather the hem of my dress and turn so I sit in his lap. I feel like I'm five again and waiting for my father to tell me another one of his fantastic stories. Only, it's not my father I'm staring at.\n\nHe reaches up with one cold hand, his thumb tracing the curve of my bottom lip. I watch his eyes light up as an idea comes to his mind, making my guts twist. Oh, no. this is going to be bad.\n\n\"You have a beautiful mouth, Michelle,\" he purrs.\n\nI inhale sharply. Something inside me stirs, knowing exactly where this conversation is going.\n\n\"I'd love to see it go to work.\" His smile widens, the spark in his eyes now a full blown bonfire.\n\nOh no. Oh no, oh no, oh no...\n\nHe traces the carved ruby of my necklace. \"I've given you a lovely present, no? I think it's only fair that I get something in return for my generosity.\"\n\nFuck.\n\nMy heart drops and my stomach completes a triple axel. Nothing about Lucifer comes without a catch. I know what he wants. What sane man would turn down a free blowjob? And if that man was Lucifer? Double fuck. I sigh inside myself, convinced yet again that it's better to go with the flow than fight him.\n\n\"What do you think, Michelle?\" he asks, mocking me.\n\nI sulk for a minute, cursing my mother once again. Damn her for setting me up like this. No doubt she knew he'd milk my insecurities for all they're worth, yet she never warned me about how depraved he could get. I swear, once we get to the reception I'm going to dunk her head in the punch bowl.\n\n\"I suppose it's a good thing I had a few boyfriends in high school,\" I mutter.\n\nI blush and stare at the ground. What possessed me to say that?\n\nHis brows rise and inch. \"So you've had experience, then?\"\n\nNice move, genius. You've screwed yourself now.\n\n\"And how experienced are you?\" He leans forward a bit, staring at me with interest. What's this? I've caught his curiosity.\n\nI shrug, still mortified by my mindless confession. \"Not too much. I'm no porn star, but I've...practiced.\"\n\nStop! Stop!\n\nHis eyes are on fire now. \"Have you? Care to demonstrate?\"\n\nI stare at him, horrified, then sigh. I dismiss the idea of saying no, standing up and leaping out of the carriage. I'd love to toss myself out the window, duck and roll down the street, then take off running for home.\n\nAs if I'd even get that far.\n\nI chew my lip for a moment, considering my options. I'm fairly talented when it comes to sucking men, and Lucifer is someone who loves to make deals. I could use this to my advantage if I play it right.\n\n\"Would it mean I get a few hours of reprieve?\" God, I hope this works.\n\nHe cocks his head to one side, pursing his lips slightly. \"Meaning what?\"\n\n\"Well...\" I start off easy, hoping I don't piss him off. \"Say I'm not quite ready to consummate our...marriage. If I sucked you off, could I get a few hours to myself so I can adjust?\"\n\nHe closes his eyes and laughs to himself, shaking his head. \"Using sex to bargain with me. You're clever to try, I'll give you that.\" He opens his eyes again, smiling at me. \"If that's what it takes, then yes. Prove to me you're as good as you say you are and I'll give you the night off.\"\n\nMy heart leaps for an instant, then my cautiousness kicks in. He is the master of lies and deals, after all. He could just be saying that to get me to blow him.\n\nI narrow my eyes at him. \"How do I know you're not luring to me?\"\n\nHe scoffs, placing his hand across his chest. \"Ye of little faith in me!\"\n\nDamn straight. I know better.\n\nHe shakes his head again. \"Michelle, I have no reason to lie to you. You're my wife now. If I wanted to, legally I could just toss you over this bench now and fuck you like a madman. But I don't. I know that going from an innocent college girl to a queen isn't an easy task to achieve.\"\n\nI nod. How true that is. Giving up my family and friends will be something I'll have to adjust to. I'll never sleep in my own bed again, or have my favorite books with me. That said, at least I'll get to skip my exams and have some freedom from my mother. Okay, so maybe not everything about this will be bad.\n\n\"Believe me, I'll give you sufficient time to adjust to your new life with me. But if having our first night off will make things easier for you, then fine.\" His smile is softer, more sincere than hungry.\n\nA manage to force a smile. \"Thanks.\"\n\n\"So we have a deal, then?\" He strokes my fingers.\n\nI nod. Indeed we do.\n\n\"Good.\"\n\nHe shifts in his seat, forcing me out of his lap. Reaching down, her grips the zipper of his jeans and starts to pull it down.\n\nWhy waste any time? We have valuable bj's to give.\n\nAs he unbuttons his pants, I try to think of the best way to do this. I'm still fully dressed in a gown that could easily get torn or destroyed if I move the wrong way. I reach down and gather the skirts of my dress and settle awkwardly down to my knees. The carpet under me is soft and lush, made of the same rich velvet as the carpet in the church. No expense was left out for this affair.\n\nHe finishes undoing his pants and smiles down at me. \"Ready?\"\n\nDo I have a choice?\n\n\"It's quite a prize you're going to swallow.\"\n\nOh boy.\n\nI nod regardless. I have a night to myself riding on my performance.\n\nNe nods back at me and opens the fly of his pants. Commando, I should have known. His erection springs forth in an instant, tall and proud and ready to go. It's thicker than I'm used to, and points straight to the sky. The flesh is a pale golden tan with thick veins criss-crossing up and down the length. I notice that the veins are black, not blue, which means even his blood isn't normal.\n\nDespite the intimidating thickness and the odd colored veins, it's a stunning piece of anatomy. Michelangelo should have carved his man David with this instead.\n\n\"Come on, Michelle,\" he croons. \"You said you were experienced. Prove it.\"\n\nOh, a challenge, is it? I scowl slightly in annoyance. He wants me to prove myself. Unfortunately, that's brought my competitive spirit roaring to the surface. Usually, I don't get cutthroat unless it's a dire situation where I have to defend myself or beat mom at a board game. But giving blowjobs is an arena I've fought in before, and I tend to come out the victor. He wants mind-blowing? Then I'll give him mind-blowing.\n\nI suck in one last rational breath before plunging into the masterpiece that is, regrettably, Lucifer. I reach out and caress it lightly, running my fingers over the smooth flesh. It's as cold as the rest of his body, but sturdy as steel. I grip him gently and stroke his length, getting a feel for the task I'm about to take on. My hand barely fits around his girth, and I briefly wonder if I'll even be able to take him.\n\nYes, you can. Show him what you've got.\n\nMy mental pep rally has me fired up. Keeping my hand on him so I can aim better, I lean forward and force his cock into my mouth. I've decided to skip foreplay; I want to prove to him that I'm good enough to bring him to his knees. I swallow him, forcing him as far back as I can. He tastes of honey and cinnamon and campfire smoke and thousand other flavors.\n\n\"Holy fuck!\"\n\nHis temporary loss of control excites me. I've already shocked him a bit. If I can score a perfect ten on this, I'm home free.\n\nI keep my grip on him to hold him still. The last thing I need is to have him flying around when I'm trying to score a bit of freedom.\n\nI start slow, moving up and down at an easy, languorous pace that will relax him. I need him comfortable if I'm going to win this fight. It works, and his hips slide forward as he settles into his seat. I keep up the gentle tempo, wanting to make sure he's well settled before I take him for a spin.\n\nHe groans, and his hands reach down to caress my hair. He pulls out a few of my hair pins, letting a handful of strands tumble down to my shoulders. He laces his fingers in my now loosened hair, giving him something to hold onto as I suck him off.\n\nGood. Let's take him for a ride.\n\nI reach down with my free hand and start stroking his balls through the soft denim of his jeans. His body jerks at the contact, and I smile inside knowing I can make him twitch.\n\nAtta girl! Teach him to challenge you!\n\nI pick up the pace a bit, wrenching another groan from his throat. I cup his balls in my hand, molding and rubbing them through his jeans. What's wrong with him? This is way too easy. He's acting like he's never had a blowjob before. I feel like I'm being tested, as if this is just the preliminary round so he can see how much training I need.\n\nThe thought annoys me. I don't like being quizzed on a moment's notice. It makes my uncomfortable and irritated. Still, a small part of me wants to know I've got the skill to please the Devil himself, so I keep up the pace and rise to the challenge.\n\nTaking a tiny risk, I gently scrape my teeth along his cock as I pull up. He inhales sharply, and his fingers twist almost painfully in my hair. I keep the pace, wanting to hear him lose control. It's payback time for his little games, and I'm going after everything he's got.\n\nHe barks out a laugh. \"I apologize for ever doubting you.\" He strokes my hair. \"You can stop now.\"\n\nOh no, darling. You're mine, now.\n\nI quicken my pace again, pulling back so I suck on the hard tip. He groans again and twists his fingers into my hair. He tries to pull me off, much to my utter shock, but I give his balls a quick, hard squeeze and he releases me.\n\n\"Michelle, stop!\" he begs.\n\nLucifer? Begging me? To stop? What kind of messed-up Twilight Zone did I fall into?\n\nI disregard his plea and continue on towards my goal. He's not going to stop me from winning this. Regrettably, this challenge is also allowing me to blow off a little steam. I'm still pissed at my mother for tossing me into this mess, and taking it out on Lucifer's cock seems the least damaging way to get back at her. For now, he's taken my mother's place as I deal out my punishment.\n\n\"I said stop!\" He digs his fingers into my scalp. \"You've earned your freedom for the night. I don't want to come until I've got you splayed out in my bed.\"\n\nOh. That's why he wants me to stop?\n\nI regain my control and pull myself free of his grip. I let his balls go and sit back on the floor. A small, mischievous smile adorns my face. I've proved my point and beaten him at his little challenge. Game, set, match.\n\nI look up to see my husband laid out on the seat of the coach. The lower half of his body hangs completely off the cushion, and for a moment I'm afraid he'll fall. His chest rises and falls rapidly; his eyes are closed and his lips parted as he sucks in quick breaths.\n\nAfter a brief silence, he manages to catch himself. He starts to laugh again, throwing his head back as he fastens his pants.\n\n\"Oh! My Michelle!\" he barks out a sharp laugh. \"If I've ever made a mistake in this deal, it was doubting you.\" He reaches out and strokes my cheek with his fingers as he smiles at me with those gorgeous eyes. \"You did very well.\"\n\nI lift my chin an inch and smile proudly. I've just give Satan himself one of the best blowjobs of his immortal life. I mentally pat myself on the back. I've proved myself tonight.\n\nHis smile falters a bit. \"Oh, dear. I've ruined your hair, haven't I?\"\n\nI look down to notice thick locks of my hair curling down around my breasts. He's pulled out a good number of my hair pins, and now my elegant up-do is falling apart.\n\nHe sits up and sighs. \"Well, we certainly can't have that. They'll know we were up to something.\"\n\nHe beckons me to stand. I follow orders, still a bit giddy that I've pleased him. Michelle Rebecca Harlowe: The Tamer of Lucifer's Libido. Yes, that's a perfect moniker for me. I'll request for that to be carved on my gravestone so people can know just how awesome I was tonight.\n\nHe stands to face me, picking up a lock of my hair and twisting it through his fingers. \"How will we remedy this?\"\n\nI shrug. \"To be honest, I actually prefer it down.\"\n\nHe pauses for a moment, considering my suggestion. He moves suddenly, slowly pulling out each hair pin that's been jammed into my scalp. More chunks of my hair tumble down, until he removes the last pin and there's nothing adorning my head. He takes a step back, cocking his head to the side as he inspects me.\n\nA soft smile plays on his lips. \"Yes, I like that.\"\n\nI smile back. I've played his game well and came out alive and on top. Not bad for a nineteen-year-old human girl. I'd say I deserved a trophy.\n\nI suppose being a trophy wife will have to do.\n\n\"Sire!\" Tarioc's voice deep resounds through the carriage, startling me. \"We're almost there.\"\n\nLucifer nods. He smiles at me again, adjusting my hair so that I look as acceptable as possible.\n\n\"We wouldn't want your mother finding out, would we?\" He winks.\n\nI mull the though around in my head. Would I really care if mom found out? After all this, not really. At the moment, I'm too proud of myself to give a damn about what she thinks. She can't keep her end of the bargain, but I can make Lucifer beg.  \n\nTake that, mother.\n\nThe carriage slowly grinds to a halt as we pull up to the magical place Lucifer has picked for our reception. My mind flits between hoping for a bright, sunny field filled with flowers, and knowing he's probably picked something much darker and less cheerful. Out of caution, I prepare myself toe the worst case scenario.\n\nI can hear the sounds of numerous hoof beats outside as the rest of our party closes in behind us. Lucifer steps toward the door, beckoning me to follow. The door opens and I watch as Tarioc steps aside as he waits for us to exit. Lucifer steps down first, the turns to me and holds out his hand so I have some balance. I step carefully down out of the carriage and into the warm sunlight.\n\nThe reception area that's been chosen is a mixture of both my worst fears and a lovely setting. The graveyard is enormous, with lush, grass knolls of the countryside spreading out for miles. The headstones themselves are made of carved white marble and free of vines or weeds. Someone cares for this place.\n\nThere's a long table set out on one of the grassy mounds. It's covered in rich, dark cloth and has every kind of food imaginable laid out on its surface. There are dozens of large shady trees to sit under, and for some reason a bevy of songbirds has come out to serenade us.",
        "It's lovely here. Still, my gut turns slightly. We'll be eating and dancing on top of dead people. How macabre.\n\nThe reception whizzes by, and I lose track of time momentarily. I don't really remember much, just the sights of people playing games, and the sounds of champagne popping and laughter. Oh, and me having to resist the urge to drown my mother in the punch bowl. I'm slightly relieved that Lucifer stayed by my side the entire time and gave me something else to focus on.\n\nI do experience a slight piece of revenge on my mother, but it comes from an unlikely source. Mom and Leyna are engaged in a conversation about who knows what. They're laughing and smiling, making sly jokes at the expense of those around them. Suddenly, Leyna's lovely face changes from jovial to enraged. Mo mother must have said something to piss her off, a common occurrence with my mom. Leyna stands, tosses her drink in my mother's face, and storms off. My mother is left sitting in her chair, covered in spiked punch and looking traumatized.\n\nI smile. It's not much of a comeback for what I've been through, but it's enough to carry me through the rest of the day.\n\nIn the moments before sunset, Lucifer and I bid goodbye to our guests. He ushers me gently towards the carriage, and I can see the excitement and anticipation in his eyes. He may not get to sleep with me tonight, but he's got his queen on his arm. I'm sure in his eyes it's a major accomplishment; having a queen is more than his father can say.\n\nI manage to escape his hold and run back into the crowd. For the last time, I embrace Richard, Daniel and Marcus. I tell them how much I love them, say how much I'll miss them, promise I'll find a way to visit. My mother steps forward and throws her arms wide, waiting for her hug. I sigh and embrace her begrudgingly. She is my mother, after all, and I still love her. I just hate what she's done to me.\n\nMy goodbyes complete, I race back to the carriage. Lucifer leans against the carriage, staring passively at me. I'm glad he's not upset that I ran off like that. Not a good idea to start our weeding night off on a bad foot because I said goodbye to my family.\n\nWe climb into the carriage and Tarioc takes off again. I stare out the window, slightly more at ease with what's happened. True, I'm not particularly happy about being married to Lucifer against my will, but I've resolved to make the best of it. I still avoid his hypnotic gaze and stare out the window. The sun is setting, painting the sky in vibrant shades of burgundy, tangerine and violet. Set against a backdrop of marble gravestones, it's quite a sight.\n\nTarioc snaps the reins and our carriage takes a sharp left. The ground seems to slope downward now, and we're gradually gaining speed. I look out the window to see nothing but darkness. The horses' hoof beats echo in the surrounding blackness, and I suddenly feel claustrophobic.\n\nI look at Lucifer. He's reclining in his seat, his head tossed back with his eyes closed and his hands folded behind his neck. He looks so relaxed. I'll bet I look terrified.\n\n\"Where are we going?\" I try to keep the fear out of my voice.\n\nHe never opens his eyes. \"Home. Don't worry. We'll be there soon.\"\n\n\"But we're going down!\" I barely keep myself from screaming in terror. The darkness is starting to turn me into a five-year-old.\n\nFinally, he cracks one golden eyes open. \"Michelle, where is Hell according to your Bible?\"\n\nOh, of course. Hell is the Underworld, below Heaven and earth. I want to bury my face in my hands out of embarrassment. I sit back in my seat and turn my head away, avoiding his gaze and wallowing in my stupidity.\n\nOut of the corner of my eye, I notice small flashes of light pass by the window. I peer at them, trying to get a better look. Small bits of flame, no doubt breaking off of the now flaming wheel of our carriage, whip by as we descend deeper and deeper into the earth. I watch them as we continue on, secretly hoping Lucifer has closed his eye again and is no longer watching me.\n\nMoments later, the carriage levels out, the sound of hooves nowhere near as frantic as before. We're slowing down, which must mean we're nearly in Lucifer's\n\ndomain. I swallow loudly as I start to shake again. We're finally home now, and I'm nervous about how I'll be received. There must be millions of demons waiting to greet Lucifer and his new bride. I just hope they don't eat me.\n\nThe horses come to a halt, which means we're finally here. My heart is pounding out of my chest. I'm trembling at the thought of being welcomed by a mass of demons. The chilly reception I got from Leyna was enough to make me assume the worst. Still, I intend to do my best, so I stand and smooth my dress, hoping to make a good first impression.\n\nShowtime, Michelle.\n\nAgain, Lucifer rises and heads for the door, opening it and standing outside waiting for me. I grip his hand for balance and exit the carriage, stepping into a world more wondrous that I've ever imagined.\n\nI'm standing in an enormous caver of a hallway that stretches on for miles. The walls and floor are inlaid with black marble slabs. Granite statues of fornicating humans and demons line the length of the hallway. Elaborately carved metal sconces are imbedded in the marble, cupping soft white flames that cast beautifully curved shadows along the floor. There are enormous cutouts the run along the length of the wall, each bathing the cold floor in the soft orange light that glows beneath the window..\n\nAbove me, an arched ceiling is filled with stained glass panels. Soft streams of cobalt, crimson, emerald and gold trickle through, coloring the dark marble. It must be sunlight pouring through those hunks of colored glass. I'm not surprised. This is Hell, and Lucifer can make it any way he likes.\n\nDamn.\n\nWho knew Hell could be so gorgeous?\n\nI stare up at the ceiling in wonder. \"This is nothing like what the bishops said it would be.\"\n\nHe laughs, a beautiful sound that drowns my sense of reason for an instant. \"Ah, you're thinking of the pits of fire and ice that hold the damned. Those are below us. You needn't worry about that area. You won't be going down there until you're ready. Come.\"\n\nHe begins to walk down the hallway. I scurry after him, still distracted by the absolute beauty of this place. If the preachers knew this was the part of Hell where Lucifer lived, they'd throw a fit.\n\n\"Why so lavish?\" I admire the craftsmanship of the statues.\n\n\"Why not. If I'm going to live and work with the lowest filth of the human race, I might as well make my home as comfortable as possible.\"\n\n\"Was Heaven anything like this when you were still up there?\" I ask without thinking. I suddenly wish I could take the words back. Reminding him of his old home was an awful idea.\n\nA sly smirk crosses his lips. \"Not even close.\"\n\nI drop my head, mortified and hoping I haven't pissed him off. We continue down the hall in silence; the absence of noise allows me to understand what he meant by the pits being below us. I can hear the screams of tortured souls as they're ripped apart and crushed under the weight of their sins. But the sounds come from outside the windows, emanating up from the soft orange glow.\n\nI shiver and rush forward to keep pace with him. I stand beside him, putting him between me and the open windows. If a wayward demon accidentally shoves me, he's going to be my barrier between those pits.\n\nThe hall is empty besides us, which means I'm not going to be shown off tonight, more likely, Lucifer is waiting until tomorrow to introduce me to his followers. I'm slightly relieved. That will give me time to either adjust to this wondrous place or completely lose my mind.\n\nWe stop in front of an enormous door imbedded into the marble slabs. It's solid oak and stained so dark it looks black. It's expertly carved with effigies of human souls wrapped in fire with elated demons dancing above them. Horrifying, but such lovely handiwork.\n\nLucifer steps up and opens the door. Inside, a vast room decked out in gleaming white marble, lush fabrics and a hoard of female demons awaits me. He motions for me to enter, a move I counter with a confused look.\n\nHe smiles at me. \"It's our wedding night, Michelle. And while you've earned a reprieve from consummating our union, I can't have you coming to bed in your wedding dress, as lovely as it may be.\" He motions to the group of demons inside the room. \"They're your assistants. They'll prep you, set out your clothing, and anything else you may need.\"\n\nOh. I have hired help. How upper-crust.\n\n\"And I need them now because...\" I eye him cautiously, trying to imagine what he's thinking.\n\nHe grins. \"I've given them instructions for how I want you. They'll have you ready for me.\"\n\nI glance at the girls, then back at my husband. \"You do remember giving me the night off, correct?\"\n\nHis smile never falls. \"Doesn't mean I can't enjoy the view. In you go.\"\n\nI sigh and nod, turning towards the open door. I just barely make my way inside when he moves to close the door behind me. Just before he does, his smiles through the small crack between the door and the wall.\n\n\"I'll see you in a moment my dear.\"\n\nHe closes the door behind me, cutting me off from everyone and everything but my new maids. There's ten of them standing in front of me, each a striking beauty that makes me feel incredibly insecure. They're dressed in an array of clothing styles: some wear dresses, other in jeans and shirts and others in what looks like leftovers from a cutting room floor. I certainly have an interesting menagerie to work with.\n\nThey start immediately, rushing forward and beginning their duty of turning me into a queen for the night. They undo my dress and help me out of it. My heels are removed, my hair is brushed and makeup wiped away. While they clean me up, I take the time to look around my dressing room.\n\nIt's solid slabs of pure white marble from floor to ceiling. The ceiling itself is made of carved wood effigies pieced together like an enormous puzzle. There are marble columns reaching up to the ceiling, with black marble vines twisting up to meld with the dark wood at the top. The d\u00e9cor is sparse, but it's all carved stained wood and polished mirrors. There's no bed in this room, so my nights will be spent with Lucifer's bed, not here.\n\nOne of the girls reaches out for my necklace. I know she's just doing what she's been told -- undress the queen and clean her up -- but my hand flies to my throat. I shake my head. I promised Lucifer I wouldn't take it off, and I don't want to get in trouble because a naive demon wants to follow orders.\n\nShe nods and pulls her hand back, giving me an apologetic look. She rushes over to a rack of clothing hidden behind an enormous dresser and wheels it out so my outfit can be chosen. Two more demons join her and start scanning through the rack, nodding and shaking their heads at different pieces of clothing. The rest of the girls finish undressing me. I'm stripped completely naked and stand awkwardly as I wait for my newest outfit.\n\nAfter several minutes, the group of girls nod together and make their way back to me, carrying heaps of clothing in their arms. Another maid drags a long fabric-covered bench over to where I'm standing. She helps my designers spread out the clothing on the bench, allowing me to take along at my choices.\n\nIt's all skimpy lingerie. Corsets, garters, stockings, thongs, the works. There's at least ten choice of each item, all in different colors and designs. Two more girls come rushing out carrying armfuls of shoes. They set them out on the floor, lining them up along the edge of the bench. Stilettos, I should have known.\n\nShit. So I am going to be paraded around tonight.\n\nI sigh and cross my arms over my chest. Well, this is certainly unexpected, isn't it? Lucifer wanting his new little bride dressed up like an expensive escort even though he's not getting any ass tonight. I have the urge to dress in every piece of clothing available just to piss him off, but I reject the thought. Instead, I jump at the chance to feel sexy and scan through the scraps of cloth laid out fro me.\n\nI reject anything yellow, green or white, along with any shoes I don't feel are a safe height to fall from. I'm left with three sets of lingerie to pick from. I scan the again and settle on a satin burgundy corset with black lace panels on the side, matching thong, sheer black thigh-highs and red patent leather heels. If I'm going to be with Lucifer, I might as well be dressed hot enough to set fire to everything.\n\nThe girls lace me into the corset and help me keep my balance as I step into my shoes. Two more start painting my face and fixing my hair. I'm sure by the end of this I'll look enticing enough to put the whores of Babylon to shame.\n\n\"He likes it down,\" I tell the girls working on my hair. The stop and nod at me, removing the pins and adornments they've started to shove in my scalp.\n\nFive minutes later, I'm ready for show and tell. The girls all smile and step back, admiring their work. I wither look absolutely fabulous or horrifyingly awful. One of them rushes off, returning with a large free-standing mirror covered with gold filigree. She drags it in front of me so I can see how I look.\n\nI'm stunned. The shoes make me five inches taller, and the stockings I've picked are just sheer enough to tease the eyes. My legs look fantastic here. The corset shows off my waist and shoves my breasts up to my chin. My hair is pulled away from my face and held in place by a single jewel-encrusted hair in. The makeup is minimal but striking: red lips, barely flushed cheeks and smoky eyes. The girls have done their job.\n\nBravo, girls. You've made me look like a Wall Street hooker.\n\nBefore I can take a breath, the girls begin to usher me to the door.\n\nOh, we're going now?\n\nThe answer is yes as they rush me out of the room. I'm lead down the hallway, surrounded by a gaggle of laughing demon girls. I'm still clad in nothing but my lingerie and I suddenly feel self-conscious. I cross my arms over my chest and stare at the ground as we walk. Heaven forbid any stray demon walks into the hallway and sees me. I think I'd race back into the dressing room and Lucifer would have to come collect me from the closet.\n\nWe stop at the end of the hallway, coming to another enormous door. This one is solid oak like the last one, only its carvings are of huge bonfires and dancing pagans. It's far more intimidating than the door of my dressing room. The girls all gather behind me and gently shove me towards the door.\n\nThis must be where Lucifer and I are to sleep together. It's certainly dark enough. I take a deep breath and take a reluctant step towards the door. I turn back and thank my girls. They smile happily at me, then scatter into the hallway, leaving me alone.\n\nWell, they're certainly supportive, aren't they?\n\nI gather my strength and raise my fist to the door. This is what I have to do. Now that I'm in Hell, running away won't do me any good, especially not in these heels. Besides, where am I going to run to? Lucifer can find me anywhere. I shake my head, cursing my fate and knock on the door.\n\n\"Yes?\" Lucifer's deep voice booms through the door. He sounds annoyed, like he doesn't want to be bothered.\n\nFine, then.\n\n\"You want to let me in or not?\" I snap.\n\nThe door swings wide open. I smile to myself. He may not be getting anything tonight, by the threat of not having his virile new bride in his bed is enough to wake him up. I straighten my spine and step through the archway, listening as the door slams behind me.\n\nDark grey marble, strewn with thick veins of blue and white, is the central theme here. Again, more enormous columns stretch from floor to ceiling, with clusters of small carved coral flames licking their way to the top.\n\nOur marriage bed is the central masterpiece of the room. Rich dark wood has been molded into a beautifully sculpted headboard. Spires of oak reach up from the four corners of the bed, cradling a mass of sheer black and cobalt fabric that spills halfway down the bed frame. The thick sheets are pure white and embroidered with rich crimson scrollwork on the edges.\n\nIt's going to take me a while to get used to all this luxury.\n\nLucifer stands beside the bed, leaning against one of the thick posts. He's naked, allowing me to see every rippling muscle and sinew in his perfect body. His brows are raised a slight smile plays on his lips. Oh, yes. I look like a perfect little escort, don't I? I hope he like the view, because he's not getting any of this just yet.\n\n\"You look stunning,\" he purrs. His voice is low, and I can almost feel the lust radiating off him.\n\nI square my shoulders and smile back. \"Thank you. Your girls are very proficient.\"\n\n\"Aren't they?\" He strides towards me, his smile growing another inch with every step. His walk has a natural, perfect swagger to it that most wannabe rappers would sell their souls to have. \"Although, I do believe you're far too overdressed.\"\n\nI swallow, suddenly concerned that he's backing out of our deal. \"You promised me the night off.\"\n\nHe nods. \"I did. But I still want you naked.\"\n\nI step back, my hands flying to my hips and a scowl plastered on my face. \"And if I refuse? Maybe I like this outfit.\"\n\nHe stops in his tracks, his eyes wide with a mix of shock and outrage. \"You're going to challenge me on this?\"\n\nI shrug, calling forth every ounce of strength I have. \"Maybe. Depends on how bossy you're going to be tonight.\"\n\nHe scowls at me and my gut twists. Oh, boy. Now I've set him off. And while my mind is begging me to apologize and strip naked, my ego won't let me. I stand my ground, determined to prove my point, even if it means bodily harm.\n\nHe closes his eyes and sighs. \"I was hoping you'd be more agreeable than this.\"\n\nI shrug again. \"You take my mother for a ride, steal my life as collateral and force me into a corset for your entertainment. You expect me to call you 'master' as well?\"\n\nHis eyes narrow at me. He lifts one hand, points his finger at me and swipes his hand through the air.\n\nMy eyes nearly pop out of my head. Try as I may, my lips are sealed shut. My vocal cords are frozen, so I can't even squeak out my shock. I can't talk! No...I can't argue.\n\nHe smiles again and continues striding towards me. \"Your mother warned that you had a mouth on you. The fantastic blowjob aside, she was correct.\"\n\nDamn it, mom.\n\nHe steps around behind me and leans forward. I can feel his chest against my shoulders, his nose in my hair.\n\n\"Now, let's get you out of this lovely corset.\"\n\nHe taps my shoulder and a chill roars through me. I try to turn around, but I'm stuck. Panicked, I try to move my arm, my foot anything. He's frozen my body as well, a precaution, no doubt, in case I try to break free. Damn him.\n\nI feel his cool fingers as they work at the ribbon laces of my corset. He flies through them, and my top falls to the floor within seconds, leaving me completely exposed.\n\n\"Still wearing your necklace?\" His fingers caress my collarbone. \"Good girl. So you're not completely insubordinate.\"\n\nHe moves around to my front and drops to his knees. He starts working at my stockings, pulling them off my legs. At the touch of his hand my legs unfreeze, though I'm only allowed to move as much as he allows me. My stockings gone, the pulls my thong down as well, tossing it aside as he stands.\n\nI'm naked now, and feeling more exposed that I've ever felt in my life. A deep blush works up to my cheeks, though I manage to hold my expression still. He stares at me for a moment, taking in every curve I own. A new smile breaks onto his face.\n\n\"You're very nice, Michelle. Very nice. Now, let's go to bed.\"",
        "He steps forward, puts one hand behind my back and scoops my up in his arms. Much like when he carried me out of the church, I'm limp in his arms. But this time it's not from exhaustion or hopelessness. I'm unable to move or talk, so I can't do much more than lay here and wait.\n\nGently, he deposits me on the bed, flipping the sheets back to slide me under and rolling me onto my side. He follows, pressing the entire length of his body against mine. His cold skin makes me shiver, though the warm blankets help ease the chill a bit.\n\nHe loops his arms around me, pulling me close and molding my body to his. He nuzzles my neck, making me shiver again.\n\n\"I take it you don't want to play?\" His voice is soft, but I can hear the lust and need coursing through it.\n\nHe kisses my shoulder and I'm free again. I open my mouth to take a deep breath, stretching involuntarily as I regain control of my body. He tightens his grip on my body. Free as I am, he's not letting me go anywhere.\n\nI shake my head. \"No.\" I'm not in the mood to play.\n\nHis hands slide up my torso, cupping my breast in his hands again. \"Not even a little?\"\n\nHe squeezes and massages my breasts in his palms. A tiny spark of lust, no bigger than a grain of sand, stirs in my belly. I force it down. No matter how good this feels, no matter how much I may hate to admit that I want him, I'm in no mood for games. The tricks he's pulled have cost him his chance at another blowjob for the next three days.\n\n\"No.\" I shift slightly, trying to put a little distance between us. I bury my face in one of the many soft pillows and close my eyes, cutting him off.\n\nHe groans and reluctantly moves his hands back down to my waist. \"Fine.\"\n\n\"Thank you.\" I settle into my new bed, allowing the warmth and softness to coax me into relaxation.\n\nI feel Lucifer's hands leave my body as he rolls over. He silent for a moment, then I hear him let out a litany of soft moans. He's masturbating, no doubt about the missed opportunity with me. At this point, I don't care. He can jerk off all her wants. Right now, I'm exhausted.\n\nI close my eyes and exhale loudly. I feel my body sinking into the soft sheets, hear my heartbeat subtly growing slower. The sounds of Lucifer's moaning become muffle and the world falls away as I drift into sleep.\n\n* * *\n\nI dream that night. It's a strange dream, even by my standards. I'm walking down a cavernous hallway lit only by candlelight. The walls are made from huge slabs of dark marble and lined with endless doors on either side. There's no one else in the hallway, just me. An icy wind whips around the corridor, chilling my skin as I walk. I rub my arms to warm myself, but it doesn't do much.\n\nI continue walking, scanning for any sign of life or company. The hall remains empty, and my gut twists with dread. I like having my own space, but I hate being completely alone like this. I peer down the hallway as I walk, hoping to see someone, anyone, while I'm down here. I'd even be happy if I saw my husband. At least then I'd know I'm not completely alone.\n\nI'm too cold to continue, so I dart into one of the many open doors that line the hallway, hoping to find some relief from the chill outside. I slip between the small space of the door -- an enormous piece of wood carved with effigies of humans and demons -- and close it behind me. Finally, a little relief from that damned wind.\n\nI turn around and hold my breath. The room I've picked I filled with mirrors. They line each of the four walls, stretching from the marble floor to the carved ceiling. Small flickering candles offer some light, but not enough to see exactly where I am.\n\nRegaining my balance, I decide to explore. What harm could a room full of mirrors pose besides being nothing more than an illusion and actually lined with spikes? Nothing that I'd be surprised by. This is Hell after all. There's danger everywhere here.\n\nI walk along the cool floor, taking cautious steps as I go. The floor has been polished to a mirror's surface as well, and I can't see any cracks or impurities in its surface that would let me know its real marble. Suddenly, my illusion idea seems much more possible. Still, I keep moving. My curiosity has me itching for answers, and I'm not about to turn around and quit searching just because I'm scared.\n\nI stop dead in my tracks. From the corner of my eye, I catch sight of my reflection in the enormous mirrors. I turn towards them, facing myself head on, peering through the dim candlelight to see what damage has been down.\n\nI'm quite a sight here. First off, I'm completely naked except for a single layer of translucent silk draped around my hips. My nipples, once a soft pink, are now bright red and swollen. And for good reason: they've been pierced. Small black crystals dangle from thin, inch-long chains attached to tiny gold hoops. My navel is pierced as well, another small stone dangling from a matching gold circle there.\n\nI stare at my reflection, dumfounded. I've never been one to desire body piercings or tattoos; I find them unnecessary and too trendy to be taken seriously. Yet here I stand with both my nipples and my belly violated. I blush at my own reflection, feeling uncomfortable in my own skin than I have in years.\n\nHow in the hell?\n\nI continue to stare at my reflection, trying too imagine what circumstance I must have been in to agree to this.\n\nSomething warm brushes my skin, dragging me out of my musings. I watch in the mirror as two warm hands glide across my hips, resting on the slender bones and holding me tight. A muscled chest presses against my shoulder blades, making me shiver at the contact. Finally, my husbands head peeks around mine. Bright golden eyes shine in the delicate candlelight, boring into mine through the mirror.\n\nThe planes of his face seem more sever than usual, the shadows of the light sharpening the angles of his features. He smiles at me and nuzzles his cheek against my neck.\n\n\"You look beautiful,\" he whispers.\n\n\"Thank you.\" My voice is soft out of embarrassment. I know how much he's lusting after me, and this is the last thing I want him to see.\n\nHe continues to smile as one of his warm hands slips down over my hip. His flingers slip between my thighs, finding my clitoris with impossible speed. He circles it lightly with one finger, making me shiver again.\n\n\"Why not here?\" he asks.\n\nI speak without thinking. \"Because I'm scared.\" It's not what I really wanted to say, but it is the truth.\n\nHe places gentle kisses along my neck. \"Of what?\"\n\nI chew my lip. \"The pain. The last ones weren't very enjoyable.\"\n\nWhat am I saying? I agreed to this?\n\nHe purses his lips for a moment. His hands leave my hip and thighs, skimming over my body and cupping my breasts in his hands. I stifle a moan; they're so warm and soft I almost feel dizzy. He rolls my gilded nipples between his fingers, and I wince from the tiny sparks of pain that echo through my body.\n\n\"Tender?\" her asks.\n\nI nod, the pain lessening as he continues his gentle teasing.\n\nHe kisses my neck again. \"It wouldn't be so bad.\"\n\n\"It would still hurt,\" I counter.\n\n\"Only for an instant.\"\n\n\"Down there? I don't think I could take it.\" I shake my head.\n\nHe sighs, disappointed. I'm sure he finds this image of me more than just appealing. Knowing him, though, I'm sure he would have been more pleased to have me go the whole nine yards and get everything pierced. But my dream self is apprehensive and not willing to play his game.\n\n\"I think you could,\" he whispers. He grips the slender chains of my piercings and tugs slightly, making me wince again.\n\nI whimper. That hurts. I'm not a masochist by any standards - I hate pain.\n\n\"I think you could.\" He tugs the chains again. \"A little training and stamina in you and you could take all the piercings I could give.\"\n\nMy lip quivers as he tugs harder. I desperately want to get away from him, but I'm frozen in my place. He's holding me hostage without having to touch me. I think it's his eyes. They're so beautifully hypnotic it almost hurts to look at them.\n\nHe pulls the chains again and I cry out from the pain.\n\n\"Stop,\" I beg. \"Please. That hurts.\"\n\nHis smile returns. \"Oh, the things I could do with you. You're so sensitive, Michelle. That gives me more to work with.\"\n\nI whimper again. He keeps the chains taut, holding them out so my nipples are tormented endlessly. I understand how he got his reputation as a ruthless tyrant of damned souls. This is torture in itself.\n\n\"Stop!\" I beg again.\n\nHis smile turns wicked. \"I think not. I want to test just how much you can take. If you're going to be my queen, you need to have a bit more endurance than this.\"\n\nHe loops the chains around his fingers, his wicked smile growing more sinister as my eyes widen. I know what he's going to do, and I'm helpless to fight him off.\n\n\"I'll break you in, my sweet queen,\" he purrs. \"Don't you worry about that.\"\n\nI take one final breath before he jerks hard on the chains. Pain sears through me, burning my breasts and rendering my thoughts useless. I scream in agony, tears rolling down my cheeks as I wonder how much more of this I could take.\n\n* * *\n\nI bolt upright in bed. My breathing is frantic, my heart nearly bursting out of my chest. I'm drenched in my own sweat. I scan the room, looking in the numerous shadows for anything that might cause me harm.\n\nNothing moves. Only the delicate flicker of the sconces provide any movement. I sigh and relax a bit. There's no room of mirrors here. I'm safe in my bedroom, unharmed and warm. I pull the sheets to my chest and close my eyes, trying to regain my balance.\n\nA memory flickers through my mind. The piercings in my dream! Frantic, my eyes snap open as I pull the sheets away from my chest and inspect the damage. My breasts are fine. There's no gold chains hanging from my nipples. No black stones dangling from my bellybutton. I'm unscathed as well. Good. All of that was just a dream and nothing more.\n\nAnother memory of my dream bubbles up -- my husband. Was he making me dream that? He certainly could. He's made stranger people imagine worse things. My curiosity stirs. Taking a deep breath, I look over to my side and gaze at my new husband.\n\nLucifer lays beside me in bed, his eyes closed and his mouth slightly open. He's so still when he sleeps. The only signs of him being alive are the tiny twitches of his fingers and mouth as he dreams.\n\nI watch him, captivated. He's truly beautiful here. Not that he's ever been hideous, but here, asleep beside me, he's so calm and peaceful he almost doesn't seem real. His soft hair is unruly, his perfect lips are parted just enough to breathe. I can see how God picked him to be the most beautiful. Even sleeping he's almost impossible to imagine.\n\nMy inner child bursts to the surface. Like an idiot trapped in a cage with a ravenous sleeping tiger, I have in irresistible urge to touch him. Cautiously, I stretch my hand out towards him keeping my eyes on him in case he wakes up. My fingers barely brush against his cheek, his soft, icy flesh searing my fingertips. I hold my breath as I caress him again, hardly believing that this incredible creature is both unbelievably evil and my husband.\n\nHis eyes flicker slightly and I freeze. They flutter open, those bright golden eyes spearing me through the dark. They narrow at me in confusion, and he blinks several times to clear the sleep from his mind.\n\nShit.\n\nI pull my hand back slowly, chewing my lip in embarrassment. \"Sorry.\"\n\n\"What's wrong?\" He rolls over and pushes himself up. He sits on the bed staring at me, his unnatural eyes making my heart race.\n\n\"Nothing,\" I lie. \"Just a dream.\"\n\nHis flawless brows rise an inch. \"What kind of dream?\"\n\nI blush and look away. I can't tell him that! It'll put more absurdly evil idea in his head!\n\n\"I can't remember...\" I hope my hesitation will kill this conversation so I can go back to sleep.\n\nThe corners of his mouth twitch. \"Was I in this dream of yours?\"\n\nI suppose that's safe...\n\nI nod. \"Yes.\"\n\n\"With you?\" His smile widens.\n\nI nod again.<br> His smile breaks into a full grin. \"And what were we doing?\"\n\nI stare at him wide-eyed, my face on fire. I don't dare tell him. \"I don't... I can't really...\"\n\nHe leans forward, his eyes staring into mine, a dark smile on his lips. \"You're lying.\"\n\nI lower my eyes involuntarily, affirming his suspicions.\n\nStill smiling, he grips my shoulders and spins me around, then pulls me back against him. His chest pressed against my shoulders, bringing flashes of my dream into my kind. He loops his arms around my waist and holds me tight, leaning his chin on my shoulder.\n\n\"What were we doing?\" Hs voice is high, excited to hear the details of my dream.\n\nI swallow loudly, contemplating my choices. If I lie, he'll know and possibly punish me. If I'm honest, he might want to try having me pierced. As frightened as I am to talk, I know that having Lucifer happy is much better than having him pissed.  \n\n\"We were standing in this room full of mirrors. I don't' know why...there was so many of them.\" I make my voice as even as I can, trying to hide my anxiety. \"We were staring at my reflection.\"<br> \"Oh? Why were we staring?\" His hands start to roam my body, caressing my waist and hips with long fingers.\n\nOh boy. Here it comes.\n\nI swallow again. \"I was ...pierced.\"\n\nHe perks up, his body tensing against mine. \"Pierced? Oh, tell me more.\" I can hear the excitement in his voice. He leans against me again, his hands never stopping their exploration.\n\nI sigh. \"My...nipples and my bellybutton.\"\n\nSomething hard twitches against my hip. It takes me a barely a heartbeat to recognize what it is. He's aroused, just as I thought he'd be. Now I'm really nervous, and I start mentally praying that he won't suggest such an awful idea.\n\nHis hands finally stop roaming my body, coming to rest at my breasts. He cups them gently, rolling my nipples between his fingers. They harden instantly, and I squirm against him.\n\n\"That's a very titillating idea, my dear,\" he purrs in my ear.\n\nDamn.\n\n\"We might have to try that sometime.\" He massages my breasts, making my toes curl.\n\nNow you've done it! I knew this would set him off!\n\n\"I don't know...\" I trail off.\n\nOh, fuck! What now? How the hell do I diffuse this?\n\n\"Why not?\" He's honestly curious.\n\nI shift uncomfortably against him. \"I don't like pain.\"\n\n\"Who said it would be painful?\"\n\nAren't nipples piercings usually uncomfortable to start with?\n\nI pause for a moment, confused. \"I thought...\"\n\n\"Oh, there are ways of making it far less painful than you think.\" He tweaks my nipples gently.\" I could even make you enjoy it, if you wanted.\"\n\nWell, that would certainly make it less frightening.\n\nI bite my lip again, an idea suddenly popping into my head. This entire marriage is based off my mother's failed deal. Maybe I can use a deal to my advantage. If I have to go through his evil plan, maybe he does, too.\n\n\"I...I have an idea.\" My heart is racing at my plan.\n\n\"Oh? And what would this idea be?\" He's happy now, excited that I'm willing to go along.\n\n\"Say I was interested in doing your thought. About getting pierced.\"\n\n\"Yes?\" I can hear the excitement in his voice. He presses his palms against my nipples, making me shiver from the cold.\n\n\"I thought...maybe we could make it fair. Even.\" My gut twists in worry.\n\nHe never stops teasing my breasts. \"How so?\"\n\nThank God. He's going along with it.\n\n\"Like...if I get a piercing, you get one, too.\" My stomach does a back flip as I wait for his answer.\n\nHe laughs, the sound inhumanly beautiful and impossibly seductive. \"Oh, Michelle! That is an idea!\"\n\nI squirm again. Now I've really done it.\n\nHe pulls me close, his lips pressing against my neck. \"I love it. Do I get to pierce you?\"\n\nI relax a bit, relieved that he's not angry. \"I-I suppose so. Only if I get to do the same to you.\"\n\nWhoa! Where did that come from?\n\nHe groans and he lays back into our bed, pulling me with him. I'm locked against him, laying on top of his body, staring up at the ceiling.\n\nHe kisses my neck again. \"I love it. Piercing each other. What a way to bind us together.\"\n\nIndeed. What better way to let others know you're taken than showing them your matching monogrammed nipple rings?\n\n\"It's a deal, then. You and I will have so much fun with this, Michelle. I can hardly wait.\" He pauses for a moment, and I feel another risqu\u00e9 idea coming on. \"You know...we still have to consummate this marriage of ours. As far at the world's concerned, we're still not properly married yet.\"\n\nI scowl. Yes, I know we're not but I've been promised the night off and I intend to have my own time tonight. I try to squirm away, but his hands fly to my breasts, freezing me in place. Damn his touch. It gets me every time.\n\n\"What do you say, Michelle?\" He croons in my ear as he massages my breasts. \"I know how tired you are, how exhausted. How about a nice, quick fuck to seal the deal? It'll be fast and easy, and you can straight back to sleep once we're finished.\"\n\nSurprisingly, the idea is a welcome one. That damned spark of lust is back, only now it's grown into a small campfire. It makes me squirm again and I try to quell the need building between my thighs. But my attempts are in vain. At nineteen and with no sexual experience aside from giving blowjobs, my hormones are begging me to give in. They want to know what it's like to have my body ravaged and find that warm place of bliss I've had to find myself for so long.\n\nWhat's the matter? they ask. Why not let someone else do the work for once?\n\nI sigh to myself. Fine. A quick fuck should be enough to drown the fire in my veins.\n\n\"Okay,\" I whisper.\n\n\"Excellent!\"\n\nLucifer rolls us over so that my face is pressed into the sheets. He slides off me and rears up, gripping my hips so my ass is lifted off the bed. I move my arms under me so I'm somewhat supported.\n\nHis chilled palm caresses the bare flesh of my ass, the cold making me shiver.\n\n\"Michelle, you are a delight to stare at.\"\n\nHis hand moves from my butt, slipping lower. His fingers brush my thighs, sending a fresh flurry of shivers coursing through my body. The move higher, slipping between my labia and gently stroking the entrance to my body. My toes curl involuntarily and my breath hitches in my throat.\n\nI hear his muffled laugh behind me. \"And so damn responsive. You're going to be so much fun to break.\"\n\nI twist my fingers into the bed sheets and exhale loudly. I want this -- my body's practically begging for it -- but I hate the way he draws things out just to mess with me.\n\nHis fingers move without warning, sinking into me and gently stroking me from the inside. I freeze, the small bubble of fire in my belly growing into a full-blow inferno. God, that feels good! His fingers massage and caress my favorite spot, making me tremble and relax a bit.\n\nSilently, I damn my family for never explaining the basics of sex to me. Mom had pulled me out of every sex ed class available, knowing that knowledge like that might diminish my chances of arriving to Lucifer a virgin. Even masturbation was something I had to discover out of my own curiosity. If I had known it would feel like this, I'd have pounced on my high school crush long ago.\n\nToying with my body was a good card for him to play. I'm moaning softly now, swaying my hips back and forth, begging him for more attention. He laughs again but acquiesces, pressing harder against my sweet spot. I drop my head into the pillow and groan into the softness. He certainly knows how to please a girl, I'll give him that.\n",
        "\"I think you're ready.\" He withdraws his fingers without warning, making me whimper. \"You're full of surprises, Michelle. Arguing with me one moment, begging me for more the next. I'll have to teach you how to be more of one and less of the other.\"\n\nI feel the bed dip as he shifts forward. The smooth flesh of his cock replaces his fingers, resting against my pussy, poised for action. It's as cold as the rest of him, but harder than steel and covered in soft, silky skin. The memory of sucking him off floods my mind for an instant, and I shift my hips against him.\n\nHe pulls back and inch, the think head of his cock pressing against the entrance to my body. I freeze and try to relax, knowing my instinctive reaction will only make this uncomfortable.\n\n\"Good girl. The more you relax, the easier it will be.\"\n\nHe eases forward inch by inch, the full length of him slipping into me. He's bigger than I remember, but his thickness is wonderful and beyond satisfying. Feeling the first few inches sliding in, I'm finally able to relax my body and sink down into the sheets. As leisurely as he's moving, it's still magnificent. It must be torture for him to go so slowly. I know he must want to tear me to pieces, yet he holds back enough to chip away at me bit by bit.\n\nA tight, sharp pain sears me from the inside. He may be going at a snail's pace, but my body still had some resistance to it. My virginity gives way, and I'm left gasping for air for a moment as I adjust to cashing in my V-card. It wasn't as bad as Katie had told me it was when she a Regan had first done it, but it's still uncomfortable.\n\nA handful of heartbeats later, his hips brush against my butt and he stills. My body has now adjusted to his girth and the loss of my purity, allowing me to regain my balance. God, he's huge! I'm surprised he could even fit. I shift my hips, getting a better angle and I'm able feel a little less overstuffed.\n\n\"How are you feeling?\" One finger traces my spine.\n\nI take inventory for a moment, checking to make sure all the valves and pipes are in line and at working pressure. \"Good. I'm okay. Just a little stunned.\"\n\nHe laughs at my inexperience, my innocence, my insecurities. I feel him pull back a bit, the feeling of his body gliding against mine indescribable. He holds still for a second, letting me adjust to the feeling of being filled then drained. I appreciate the moment of silence and take a deep breath, digging my fingers into the sheets and prepping myself for whatever he's planning.\n\nPlease go slow. Please go slow.\n\nHe bucks into me hard, slamming his hips against mine. I cry out in surprise. I swear I was begging him to go slow!\n\nHe pulls back and thrusts forward again. I lose myself temporarily. My hands slip out from under me and I collapse into the bed. God, that felt good! I lay there reeling, still not quite sure what happened. All I know was that he moved forward and three tons of dynamite went off inside my body.\n\n\"I'm going to ride you like a stallion.\"\n\nHe grips my hips, pulling me back against him. I panic and manage to grab the sheets again, holding myself steady. Whatever that was, I want more. I take one last cleansing breath, shift my hips in his hands, and close my eyes. I feel a tsunami coming, and I'm bracing myself against whatever floodgate I can find.\n\nLucifer gets the message and wastes no time flooding the levees of my body. He bucks his hips against me repeatedly, the bottom edge of his cock stroking my sweet spot over and over again with deadly accuracy. I twitch with every quick thrust of his body, my senses numbed to nothing bur the delicious feeling of fire racing through my veins. I moan and twist my fingers into the sheets, silently praying that he'll never stop.\n\nOne of his hands leaves my hip. I feel his fingers twist into my hair, and he pulls my head back sharply. He keeps his other hand melded to my hip, a precaution in case I manage to find my senses and try to crawl away. Fat chance of that. The way he's indoctrinating me into the world of sex may be a bit more brutal than most, but I'm not about to sacrifice this kind of ecstasy for anything. Not even red velvet cake with homemade frosting. This is way better.\n\nSatisfied that I can take him, Lucifer starts to really play with me. He slows his thrusts but moves with more power. A few seconds later, he's moving faster than lightening. Again he switches, angling his hips so that every inch of him grinds against the inner wall of my pussy. At every alteration I cry out in shocked bliss. He's toying with my body, using me as he sees fit, and I have no arguments.\n\nDeep inside me, something stirs. It's a feeling I've only barely tasted when I masturbate: it's an orgasm, alright, but this is no ordinary climax. My body has never been used so freely or pleasured so fully in my life. What's coming isn't just a small little explosion of pleasure and relief. What's coming is a raging ball of pent up lust, angst and ten years worth of curiosity. When it detonates, it's going to blow our room into a pile of rubble.\n\nLucifer never stops his mindless thrusting. I can hear his harsh breathing, feel his hand twist tighter in my hair. He's as close as I am, maybe closer, but he's not showing any sign of stopping. I'm not sure I want him to. If he could d it, I'd have him keep going for the rest of the night.\n\nHe unravels his fingers from my hair and grips my hips again. I guess at what's coming and grip the sheets with everything I've got.\n\nI've guessed right and my precautions had saved me. He rams his body against mine, thrusting so quickly and so deeply I would have fallen over if I hadn't gripped the sheets. He never slows his pace, though, and I'm left kneeling on my hands and knees and pure, raw lightening roars through me. I cry out eat every push and pull of his hips. It's beyond incredible, and I'm sure this feeling is so perfect it was never mean for a mortal body like mine.\n\nHe thrusts against me one last time and I shatter beneath him. I throw my head back and scream, my body nearly shaking as my climax bowls over every barrier I have. Fireworks appear behind my eyes, and I collapse into the bed, nearly passing out from pure bliss.\n\nLucifer follows close behind. He rams into me once more before he stiffens. His fingers drill into my hips as he yells out his own release. His body involuntarily bucks against mine as he unloads what must be centuries of his seed into my body. I take it silently, still reeling from my own climax, though I wonder how my body could take such a load without breaking apart.\n\nMaybe I already have,\n\nSlowly, his fingers release my hips. He pulls away, leaving me empty and feeling more alone that I can ever remember feeling. His arms loop around my waist and he pulls me down with him as he settles back into bed. I fall willingly, exhaustion now flooding my limbs. My fingers untangle themselves from the sheets as he pulls me close. His lips press against my neck and his hands reach up to cup me breasts again.\n\n\"Well done! You took that like a soldier.\" His kisses follow the curve of my neck.\n\nI giggle mindlessly, my body still recovering from the explosion. I'm tired now, and I want to sleep. All that hard, awesome sex has rendered my limbs useless. My mind is slowly being rebuilt after being decimated by the blast. But it was worth it. So worth it.\n\nHis hands massage my breasts again, but I'm too tired and sated to squirm against him. He notices my lack of resistance and smiles against my throat.\n\n\"I take it you want to sleep now.\"\n\nI'm barely able to nod. I want to sleep so badly I'm barely able to keep my eyes open.\n\nThat was fabulous. Now let me sleep.\n\nHe laughs and nuzzles my neck. \"Then sleep. I'll wake you up in the morning and we'll present you to our people.\" He continues to massage my breast in his hands, just enough to keep small sparks flowing through my veins. \"You did so well, my queen. One of these days, I'll show you some real fun.\"\n\nI close my eyes and settle into bed. Lucifer pulls the blankets over our bodies, and I'm warm and safe again. He continues to kiss my neck, and I stretch my neck out to give him more access. Satan he may be, but who am I to turn down a free kiss?  \n\n\"We'll have so much fun together, you and I. So much fun. Oh, my Michelle.\" He pauses, and I can almost hear the smile creeping onto his lips. \"My Michelle.\"\n\nYes, I suppose so. And I guess that makes him my Lucifer. It's a perfect balance, now. We've claimed each other. No one else can have either of us. I have my husband now; my beautiful, evil, irresistible husband. And he has me. Now that's a trade most people would have never imagined. Nevertheless, I intend to make the most of this union, even if it kills me.\n\nMy Lucifer. What am I going to do with you?\n\nI never get to answer my own question. My mind blacks out just as I get around to finding an answer, abandoning me to the sweet darkness of my subconscious. I dream again, but this time, there are no mirrors or nipple rings. Just distant memories of my childhood with my father and the image of him wishing me the best of luck.\n\n* * *\n\nSo? How'd I do? I hope you enjoyed it, because this took me a LONG time to write out (34 pages doesn't come out in 24 hours). Chapter 2 will be posted as soon as I can write that one out. Thanks for reading and I'll see you soon!\n\nAlso, the parts of this story will all be listed under the main title: \"The Old King and the New Bride\", so you won't have to confusion of finding the chapters like in the 'Dealmaker' stories. Also, I promises to number these chapters. I promise.\n\nFinally...thanks, Matt! I really appreciate your help on this! "
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "blowjob"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-old-king-and-the-new-bride-ch-01"
}