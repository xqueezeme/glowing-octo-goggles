{
    "title": "Great and Terrible Things",
    "pages": [
        "The gunshot echoed across the prairie. I looked down at poor Whiskey as I slowly reloaded my Peacemaker. He was a good horse and his death was on me. Well, me and the damned rattlesnake that spooked him.\n\nI was half asleep in the saddle and noticed the rattler at about the same time as Whiskey. The old boy reared and threw me, which was embarrassing enough for someone like me, but then to add insult to injury, he came down wrong and broke his leg. Shooting him was the only decent thing to do.\n\nIt was a shame too because even though Whiskey was a little long in the tooth and could be an ornery cuss at times, he was a decent mount. We'd only been together for a few months, but I'd miss him just the same. It wouldn't be easy or cheap to find another stallion as well trained.\n\nI checked to make sure the hammer of my Colt .45 was on the one empty chamber before holstering it. Some men didn't like limiting themselves to five bullets. I preferred to make sure I didn't accidently shoot myself in the leg or foot. Go figure. Besides, if I needed more than five bullets I'd be using my Centennial instead. Speaking of which, I needed to make sure the rifle hadn't taken any damage from the fall.\n\nI reached down and pulled the Winchester from its saddle holster. Thankfully, the barrel wasn't bent and there was nothing obvious wrong. I'd need to take it apart and make sure everything was in working order before I used it again, but the odds were good that it was fine.\n\nFirst things first, I needed to gather my gear and make for the nearest homestead. Thankfully, I'd passed one a few miles back. I sure hoped the family there was friendly because the combination of my saddle and gear wasn't light. I could only carry them so far and I didn't want to leave anything behind because scavengers would come for Whiskey's carcass and I wasn't willing to take the risk that they'd leave the equipment I left behind untouched.\n\nBurying the stallion wasn't an option. He was close to half a ton and I wouldn't be able to move him. Besides, the scavengers would just dig him up anyway.\n\nIt took some doing to remove the saddle. I guess I should have been happy Whiskey was a Morgan and not one of those draft horses they used to pull artillery or supplies.\n\n\"Still thinking like a soldier,\" I snorted to myself as I slowly worked the saddle free. I guess it made sense after so many years in uniform, but I swore that that part of my life was over. I'd fought in the War to Preserve the Union and the Indian Wars that came after. I was done fighting. It was time to enjoy the fruits of my labor, whatever that meant.\n\nThe trip to the homestead was worse than I expected. I had to be lugging eighty pounds between my saddle, guns and gear, and I was traveling light. The smart thing to do would have been to look around and create some sort of litter to carry everything. I could have then dragged it all behind me, but I'd convinced myself out of it when the idea first came to mind because of the amount of brush I'd have to navigate. I'd nearly changed my mind when I finally arrived.\n\nThe sun was on the horizon and close to setting, but it was still easy enough to make out the ranch. The main house was off to the left while the stable was to the right. Both looked to be in good repair. I thought to make my way to the house when I heard someone in the stable. I figured it might be best to wait for whoever it was to come out. I didn't want to spook anyone into doing something stupid.\n\nI moved to the corral and placed my saddle and gear over one of the fence posts. I damn near groaned in relief as I rotated my arms and stretched my back. That's when the person in the stable came out into the corral leading a horse.\n\nThe sun was behind them so I couldn't make them out clearly, but the lines of the horse were definitely promising. I thought that the woman leading it was a small man at first because she was wearing pants and chaps, but her outline made the fact that she was female obvious. That's not to say that she was overly curvy. She wasn't, but there was just something about the way she moved that was all woman despite the men's clothes she was wearing.\n\nShe was so focused on the horse that she didn't notice me at first. I started to make my presence known, but hesitated when she started working with the horse. It quickly became obvious that the woman knew what she was doing.\n\nI'm not sure what came over me, but the sight of her and the horse working together with the sun setting behind them got to me. It was somehow peaceful and comforting to an old soldier like me. That's why I became annoyed when I felt someone sneaking up behind me.\n\nWhoever it was, was doing their best not to make a sound, but compared to some of the Rebs and Indians I'd faced, they were sorely lacking. I turned and drew my Peacemaker in one smooth motion. I wasn't a gunslinger or anything, but I'd had enough practice to surprise whoever was behind me.\n\nI saw the rifle pointed in my direction and nearly pulled the trigger, but thankfully the person behind the gun squeaked in surprise and stepped back, making the barrel waver when they realized I was ready for them. Whoever it was, was either young or female, possibly both. That didn't mean I was going to ignore the old Henry rifle pointed at me.\n\n\"Name's Josiah Mosey,\" I said in as calm a tone as I could. The would-be bushwhacker looked to be a girl, and a might young one at that. I was guessing a teenager, somewhere around fourteen, maybe a bit older. Unlike the woman in the corral, she was wearing a long skirt. That didn't make the rifle in her hand any less dangerous. \"My horse broke his leg out on the prairie and I had to put him down. I passed here earlier in the day and was hoping to either buy another horse or get a ride to the nearest town. I don't mean you or any of yours any harm.\"\n\n\"You look like a horse thief to me!\" Her tone was downright hostile and her eyes flashed angrily despite my soothing words. She was a pretty little thing with blond hair and sky-blue eyes. I expect she couldn't see me any better than I could her friend in the corral because of the setting sun. Seeing a person is shadows tended to give most people a bad impression. I would have shifted to the side so she could get a better look at me, but I had the feeling that moving would be a mistake right about now.\n\nI was pretty sure that the young woman couldn't hit the side of a barn with the way she was holding the rifle, but I couldn't take that chance. If she shot at me, I'd kill her. Plain and simple.\n\n\"Why don't we both put our weapons down and talk? I promise not to move until you and your friend behind me are satisfied that I'm not dangerous.\"\n\nI'd heard the woman from the corral make her way forward from behind me. I also heard her drawing my Centennial from saddle holster. I sighed, not bothering to turn toward her. This situation was going from bad to worse.\n\n\"I wouldn't use that Winchester. My horse fell on it when he broke his leg and I haven't had a chance to fully check it out yet.\"\n\n\"You want me to shoot him Abigail?\" The girl in front of me sounded game. I would have been more concerned if the weight of the Henry wasn't clearly starting to wear on her. The barrel kept dropping. There was a long silent pause.\n\n\"Clementine, put the rifle down before you get us both killed.\" The voice sounded surprisingly calm. It was a touch raspy, but very female. \"Best case, with the way your aiming you'll hit him in the leg. That won't stop him from killing you. I might be able to shoot him first with this Centennial, but I don't think he's lying about his horse falling on it and I'd rather not take the chance of it blowing up in my face.\"\n\n\"But if he's a horse thief...\"\n\n\"Clem, put it down.\" I couldn't tell the age of the woman behind me, but she was clearly the older of the two. I was guessing sister and not mother based on the conversation. \"If he wanted to steal a horse then walking onto the ranch carrying a saddle just before sunset would be awfully stupid.\"\n\n\"But he looks dangerous!\"\n\n\"He is dangerous,\" the woman behind me clarified. \"And yet he hasn't shot you yet so that's saying something. He could have done it before I reached his rifle. He clearly knew what I was doing despite having his back to me.\"\n\nThe little blond in front of me still hesitated. I'd been forcing myself to be patient which was never one of my virtues. Of course, I'd gotten better over the years like most people, I guess, but it was wearing thin right about now.\n\n\"I would have waited until after midnight and snuck in while you were all asleep if I were a horse thief,\" I interjected. There were actually a lot of ways to go about stealing horses. I'd done a lot of them in my younger days down in the south, but that was war for you. We'd raid the southern towns and steal horses and provisions while the Rebs would do the same in the north.\n\n\"If you're not a horse thief why didn't you announce yourself?\" Damn. It was a fair question and an embarrassing one to answer.\n\n\"I was about to, but got distracted.\" I hoped that was enough, but the teenager wasn't buying it. I sighed and added, \"The young woman behind me is clearly very good with horses and the sun was just setting behind them. The sight of them moving together was impressive.\"\n\nThe blond hesitated a moment later before finally dropped the barrel of her rifle so it pointed toward the ground. She also shook her head and added with more than a touch of sarcasm. \"Men! Always distracted by a pretty skirt, even when the woman isn't wearing one.\"\n\n\"Enough Clementine.\" Apparently, I wasn't the only one embarrassed by what the teenager was implying. I lowered my Peacemaker and shifted position so I could see both women. I have to admit, I was more than a little curious about Abigail.\n\nThe sun was dropping below the horizon quickly now and the woman was leaned forward and looking away from me as she put my Winchester back in its saddle holster. She was still difficult to make out so I stepped closer to get a better look.\n\nThe first and most noticeable thing about Abigail was the scar that ran from the corner of her eye down the length of her left cheek. It surprised me, but I took it in stride. I'd seen it's like before. It was obviously the result of a knife wound, and not a small one at that. I'd seen plenty of them through the years some a lot more gruesome that hers.\n\nAbigail stood as I moved closer and watched me carefully. There was a touch of concern there, but also something else. Actually, a couple of something elses, all of which combined, caused me to shift back into my original position as she stood there facing me. It wasn't her scar that made me do it either, although it was possible that she thought so.\n\nNo, my reaction was a direct result of what I saw in her eyes. There was an obvious warning there that was anything but false bravado. I wasn't the only dangerous person here. I'd met enough to know one when I saw one, man or woman.\n\nAbigail had met the darker side of human nature and faced it down. That much was as obvious as the scar that marred her face. It was a damn shame too because it was a pretty face before she'd been marked.\n\nNot that she wasn't still attractive in her way. Abigail stood tall and straight, and had a well-formed body which was impossible to miss despite the fact that she was wearing men's clothing. Her hair was tied in a long braided that came over her shoulder and currently rested down between her breast. She saw me glance at it and quickly pushed the braid back over her shoulder. I thought it was strawberry blond in color, but it was tough to tell in the light.\n\nAbigail was a bit older than I expected, but still probably near a decade my junior. I was guessing her somewhere in her late twenties. She had blue eyes that were a touch deeper in color than Clementine's. Hell, they were deeper in more than just color.\n\nI'd been a lifelong soldier up until recently, but that didn't mean I hadn't met some interesting women along the way. I'd even married once, but I'd never reacted toward any of them the way I was Abigail. Frankly, it was a bit jarring and threw me. That combined with the returned interest in her eyes is what made me step back from her. Still I stared, trying to come to grips with what I was feeling. I was pretty sure the strawberry blond was doing the same.\n\n\"Don't you think it's time you holster that pistol?\" Clementine's question broke me from my stunned reaction to Abigail. I silently cursed my stupidity. Now was not the time to be distracted by a pretty skirt, as the blond put it earlier.\n\n\"You're still holding the Henry,\" I replied with a shrug, turning toward the teenager. It was safer to stay focused on her.\n\nThe fact that Clementine was still holding a rifle that was clearly too heavy for her to use accurately had little to do with why I still held my Peacemaker, but she didn't need to know that.\n\n\"Give me that before you hurt somebody,\" Abigail said as she climbed over the corral. The teenager moved to her and handed the older woman the rifle. That made me feel better, but still didn't get rid of the itch I'd felt at my back ever since I discovered the teenager sneaking up on me.\n\nThe strawberry blond took the Henry from Clementine which was both good news and bad. The good news was that I trusted her a lot more not to do something stupid. The bad was that she looked awfully comfortable holding the rifle. Unlike the teenager, Abigail was definitely the type to hit what she aimed at.\n\n\"You're going to have to put the colt away if you expect us to trust you.\" It was a seemingly reasonable statement, especially coming from Abigail. The only problem was that all my years of army training warned me against doing it.\n\nI took a deep breath and let it out slow before holstered my weapon. I wasn't in the army any longer. I was facing a family on their farmstead, not the Rebs of my youth or the more recent Indians. Trust was a mutual kind of thing. In order to earn it, I had to offer it.\n\nIt would have been a lot easier if I didn't know that the itch I was feeling meant there was someone else out there with a gun pointed at me. I decided to trust that he or she wouldn't shoot. At least whoever it was, was much better at sneaking around than Clementine. That meant training and that gave me hope.\n\nI was pretty sure that the person was perched in the stable loft. I heard something from that direction while facing off with Clementine. It had been a slight sound, but it didn't belong and I'd been hyper aware at the time. I shifted a couple of feet to the right so that the two women were in a direct line between me and the stable. That made me feel a lot better. It was time to end this, one way or the other.\n\n\"Now why don't you tell whoever is in the loft to come on down? It's too dark for them to be sure of hitting me at that distance, especially with you two standing between us.\" Clementine's eyes grew big, but the strawberry blond didn't seem surprised by my words.\n\n\"Dang it!\" the cry came from exactly where I thought it would. It was an older man's voice and he was clearly unhappy. I couldn't make out the words, but he continued to cuss as he noisily made his way down from the loft and out of the stable.\n\nClementine looked nervous as the man stomped toward us. He was carrying an old Spenser Rifle, but I was betting it was well cared for and that he was good with it. I would have been more concerned if I didn't notice that Abigail was fighting a smile. She clearly loved the old man and wasn't particularly concerned about the obvious temper he was in.\n\nHe was a smallish man with a full thatch of white hair. His skin was sun bleached and he limped badly, but he moved like a man confident in himself despite his age and infirmities.\n\n\"Girl, what part of wait until I give the signal didn't you understand?\" he snapped at Clementine, ignoring me for the moment. \"I wasn't only halfway up the loft when I heard you two jabbering! Gave me heart palpitations, it did. Dang near caused me to fall off the ladder!\"\n\n\"Sorry Grandpappy!\" the teenager cried, sounding and looking like she meant it. \"I couldn't see him clear with the sun setting behind him. I didn't think he'd hear me sneaking closer.\"\n\n\"Granddaughter, just because I showed you a few things from my scouting days, that don't mean you're good enough to sneak up on a man like this one. He's carry both a Peacemaker and Centennial. That means he's dangerous. He's also not a particularly young pup which means he's experienced.\" There was frustration in his voice, but also love and concern. \"And I know'd the sun was in your eyes. That's why I was making my way to the stables so I had a clearer shot, just in case.\"\n\n\"And you,\" he sighed, turning to Abigail. \"You did a good job keeping your head and not letting the situation get out of hand, but then you go and let him put you and Clementine between us and block my shot.\"\n\n\"I did it on purpose Uncle William,\" Abigail answered unapologetically in that same calm voice she'd used earlier. \"I figured he knew about you when he didn't put the Peacemaker away after Clementine lowered the Henry and I put his Winchester back in its saddle holster. Besides, he was careful not to turn his back on the stable without ever looking in your direction.\"\n\n\"So that made you decide to put you and your cousin at risk?\" The incredulousness in his voice damn near dripped with the emotions behind his words.\n\n\"Uncle William, if he really was a horse thief or something worse, he most likely wouldn't have come in the way he did. It seemed to me that he was doing his best not to let the situation get out of hand, but he obviously wasn't the trusting type. I needed to do something to put him at ease. I figured having Clementine and me between him and you would make him comfortable enough to put away the gun.\"\n\n\"And if you'd been wrong about him being trustworthy?\" her uncle asked in annoyance. She met his eyes before answering.\n\n\"Then I'd have shot him with the Henry.\" Her matter of fact tone in talking about killing me would have frightened some people. It made me smile.\n\nI liked a smart woman, especially one who could take care of herself. The west was no place for one of those sheltered girls from back east. My one-time wife had been like that. She'd said she loved me, but only spent two months at the fort I'd been stationed at before running back east to her family.\n\n\"I expect you would have,\" William said after a brief pause, sounding much calmer as he finally turning toward me.\n\n\"Calvary scout?\" he asked without preamble.\n\n\"Yes, sir. Once upon a time.\" It was the truth too. Of course, I'd been a lot of things during my sixteen years of service in the army.\n\n\"Thought so,\" the old man smiled, holding out his hand and introducing him. \"William Holbrook. In my younger days, I served as a scout in the Mounted Ranger Battalion and later in the First Dragoons.\" Both units were the precursors to the U.S. Calvary. I wasn't surprised. The old man had the look.\n\n\"Josiah Mosey,\" I replied easily, quickly deciding this old man and I were going to get along fine. There was something likable about him. I didn't like to talk about my army career, but it would have been rude to leave it at that. \"I served in the War to Preserve the Union and stayed on for the Indian Wars up until a few months ago.\"\n\n\"You mean the War of Northern Aggression!\" Clementine interjected angrily. I'd seen the reaction before.\n\n\"Sorry for your loss.\" I refused to be bated into an argument with the teenager, especially one who'd clearly loss someone close.\n\n\"Her father died fighting for the South at the Battle of Spottsylvania. Her mother died in Savannah with most of his family,\" William explained, his expression showing an old pain. \"I wasn't happy when my daughter moved south to be closer to her husband's family, but I understood and Jonathan was good man.\"",
        "\"War is hell.\" It was the best I could offer and it was true, but I'd forgotten where the quote originated. Clementine damn bear exploded and frankly, I didn't blame her. It was a stupid thing to say to a person who'd lost someone in Atlanta or Savannah.\n\n\"Don't you dare quote that monster! Sherman should have been tried and shot for what he did, but instead he's a hero! I was there. I saw what he let his troops do! I was three years old, but I'll never forget seeing what they did to my mother!\" I realized I'd been off a couple of years when I'd guessed the blonde's age. She was sixteen, not fourteen.\n\nMy natural instance was to come to a fellow union soldier's defense. I thought about sharing with Clementine how I lost my best friend when Champ Ferguson and his men invaded one of the Union's field hospitals and massacred over two dozen patients after the First Battle of Saltville. I wanted to explain to her how 'Bloody Bill' Anderson capture, scalped, skinned and dismembered twenty-two union soldiers.\n\nI was sorely tempted to tell her about the confederate prison at Camp Sumter where one hundred union soldiers died a day, but there was no point. It wouldn't change her mind, and if I were being honest, she wasn't wrong. Sherman was a monster, but then again, during war all soldiers are at one time of another, especially the officers. I'd served under a couple that made Sherman look like a saint.\n\n\"Peace cousin,\" Abigail said softly. \"That war's been over for a long time ago and Mr. Mosey isn't Sherman.\"\n\n\"I served in Tennessee mostly,\" I put in, hoping it would help. \"I didn't take part in either the Battle of Spottsylvania or what happened in Savannah.\"\n\n\"Battle of Nashville?\" William asked in curiosity.\n\nI nodded and then surprised myself by adding, \"And Fort Pillow.\" He obviously knew what that meant based on his expression.\n\n\"That was more of a massacre than a battle. Not many union soldiers survived that one.\"\n\n\"I almost didn't,\" I said slowly, remembering. \"I was shot in the shoulder, but two of my troopers helped me escape. We fled down a river dyed red with the blood of our friends as the Rebs killed everyone in sight, even those who were surrendering.\"\n\n\"No more talk of that war,\" Abigail said shaking her head. \"It's been thirteen years. The North may have won, but no one got away unscathed.\" I thought she was cutting the conversation short for Clementine's sake and I'm sure that was partially true, but she was looking at me when she said it. It made me feel an odd kind of warmth.\n\n\"I'm done with all wars. I'd had my fill of fighting and prefer not to relive the battles I've seen.\" I offered more than I planned. \"Besides, it's not a fit conversation for mixed company.\"\n\n\"When you're right, you're right,\" William smiled, slapping me on the back in camaraderie with far more vigor than one might expect for a man his age. \"Although, you'll find that the women out here in Wyoming territory are made of sterner stuff than the woman-folk from back east.\"\n\n\"I can see that.\" I made sure not to glance Abigail's way when I said it because the old man was watching me. It was surprisingly difficult. The old man's smile turned into a grin briefly.\n\n\"This here is my niece Mrs. Abigail Collier, widowed.\" William's introduction forced me to look at the strawberry blond.\n\n\"Mrs. Collier.\" I tipped my hat and offered a smile. She smiled in return and I caught myself noticing just how nicely shaped her lips were. Thankfully, her uncle continued the introductions which forced me to look elsewhere.\n\n\"And this is my granddaughter, Miss Clementine Walker.\"\n\n\"Miss Walker.\" Again, I tipped my hat, but the blond offered nothing more than a brief nod in return.\n\n\"We'd best get a move on. It's getting late.\" William turned to his niece.\n\n\"Now you go put Domino back in his paddock, and don't you be dilly dallying. We'll be eating shortly.\"\n\n\"Fifteen minutes!\" Clementine added, seeming much calmer despite her tone. \"If you're not in the house in fifteen minutes we're eating without you. I refuse to eat cold food again because you lost track of time again. You and your horses!\"\n\n\"I'll be there,\" Abigail promised. The funny part was her uncle's reaction. Clearly, her being late to dinner was a common occurrence.\n\n\"Maybe you should borrow my pocket watch?\" It was a question, but he was already pulling the timepiece from his pocket. I think he was teasing her. I couldn't be sure because I didn't know them well enough so I kept my smile to myself.\n\n\"No, thank you.\" The moon was full and out already. That let me see the mix of embarrassment and annoyance on her face. It suddenly became much harder to hide my amusement. Thankfully, William turned back to me, requiring my attention.\n\n\"You'll be joining us, of course.\" It might have been a question, but William's tone didn't make it seem like it. \"We can sell you a horse, but it's too late to leave tonight. We can also give you a ride to town tomorrow if you'd prefer. We need some supplies.\"\n\n\"Thanks. I'll take a look at what you've got in the morning and make my decision.\"\n\n\"Our horses are the best in the area,\" Clementine said proudly, finally smiling. It was the first time she'd done it since I arrived. She was a pretty young thing and would make some man happy one day. \"Or at least that's what they say.\"\n\n\"That's mostly due to Abigail. She's got a way with horses that's downright spooky at times.\" William was looking at his niece in pride. She once again looked embarrassed.\n\n\"Do you have any Cavalry trained mounts?\" I figured the question would distract her from her discomfort. Plus, I really was curious.\n\n\"I thought you were done with war and fighting?\" Abigail question came with a raised eyebrow. It caused me to hesitate. She was right in a way. I didn't really need a horse trained to war since I was no longer in the army.\n\n\"I am,\" I finally said slowly. \"But I've been riding only cavalry trained horse for a long time and I'm too old to change my ways now.\"\n\n\"You're not that old.\" The words seemed to slip out of Abigail's mouth before she realized it. I saw her eyes grow big, but only briefly. I had to give her credit. She continued on as if nothing happened. \"And I'm sure you'll like one or two of our horses.\"\n\n\"Of course, if you insist on cavalry trained, then you'll need to go to one of the bigger towns. Church Hollow won't have what you want.\" She frowned thoughtfully before adding, \"Maybe Twisted River would. Certainly, Fort Laramie, but that's a ways away, a couple days ride at least. What do you think Uncle?\"\n\n\"You got it right,\" William replied thoughtfully. \"I can give Mr. Mosey a ride to Twisted River in the morning. We could use some supplies. If he can't find what he's looking for there, then he'll have to find his own way to Fort Laramie.\" I nodded in thanks and understanding.\n\n\"We'll all go,\" Abigail comment was offered in an offhand manner, but I didn't miss the grin she and Clementine exchanged. Neither did the old man. They obviously liked the idea of going to Twisted River. My guess was that it wasn't somewhere they traveled often. Abigail looked at me and added, \"I know all of the good trainers in town. That will cut down your search time considerably.\"\n\n\"Thanks.\" I tipped my hat to the strawberry blond again. I figured I didn't need help finding a mount, but then again, I wouldn't mind her company along the trail, any of theirs really. I'd been alone far too long.\n\n\"Don't get your hopes up though,\" she cautioned. \"I'd be surprised if you find a decent cavalry trained mount there.\"\n\n\"I understand,\" I smiled. \"I'm willing to take my chances.\"\n\n\"You all better go inside and get ready for dinner.\" Abigail didn't seem like the nervous type, but her eyes darted away from mine as she spoke. \"I may be good with horses, but Clementine is an amazing cook. You don't want to ruin a meal she made by letting it get cold.\"\n\n\"You just want me out of the way so you'll have more time with Domino.\" Okay, so maybe I was flirting a little, but it felt good and I hadn't done it nearly enough over the last few years. Mostly because there hadn't been time, but also because I hadn't met anyone like Abigail before.\n\n\"There is that too.\" She met my gaze once more as her throaty laughter flowed over me and caused much of the tension I'd felt over the last few months since I left my regiment to dissipate.\n\nI'd mustered out of the army because it was time, but that didn't mean I knew what came next. After so many years having my life mapped out, it was surprisingly uncomfortable not knowing. I mean, I had a general plan, but no specific deadlines to meet.\n\n\"Mr. Mosey,\" the strawberry blond smiled politely.\n\n\"Mrs. Collier,\" I nodded in return.\n\nI watched as Abigail handed her rifle to her uncle and moved toward the corral gate. It was too bad she didn't climb back over. I continued to watch until Clementine's teenaged sigh reminded me that I wasn't alone.\n\n\"Men.\" The girl was looking at me pointedly, but I refused to be stared down by a teenager. Eventually, she sighed again, loudly and turning her attention back to her cousin. Well, second cousin actually, but it was close enough. \"Ten minutes until dinner,\" Clementine cried and began walking toward the house. It didn't stop her from calling over her shoulder, \"And I'm locking the door so if you're late you're not coming in until we're done eating!\"\n\n\"You know, I think she means it.\" I was mostly talking to myself, but that didn't stop William from responding.\n\n\"It wouldn't be the first time,\" he laughed. \"Those two act like mother daughter half the time and like sisters the other half. It's enough to drive a grown man crazy.\" He paused and looked directly at me for a few seconds. He was no longer laughing, but his eyes were still lit in humor. \"Although, I'm betting Abigail will make in in on time tonight.\" I knew what he was implying, but refused to comment on it. I couldn't deny my interest in Abigail, but I wasn't staying.\n\n\"We best be going,\" William added when I didn't take the bait he'd laid out. \"Leave your gear. We'll deal with it later. We need to get washed up before dinner and I don't want to have to break down my own door to get into the house.\"\n\nI thought he was kidding, but the little I knew about Clementine didn't lend itself to that belief. I shook my head and followed the old man to the well. I was uncomfortable leaving my Winchester out in the open like that, but I understood that the old man didn't want me to bring it with me.\n\nWe took turns pumping and washing up when we reached the well. The cold water was bracing, but honestly, after the day I'd had it felt good. We talked about army life because it was something we both knew. I shared a story or two, but mostly I listened as the old man relived some of his fonder memories. I was just finishing cleaning up when I felt him standing over me.\n\n\"I've always been pretty dang good at judging people Mr. Mosey,\" William said slowly. He was no longer smiling. Instead, he was holding the Spenser again in both hands, obviously more comfortable with it than the Henry. His stance was more of a warning than a threat. \"And you seem like a good man.\"\n\n\"I'm inviting you into my home with my family, and they mean the world to me. If I'm wrong about you, then don't let these old bones fool you. You're clearly a dangerous man, but there was a time when I was too.\"\n\n\"I expect you still are when you need to be.\"\n\n\"Yes, I am.\" The warning in his voice didn't lessen in the least. \"You're younger and faster so I probably won't survive the encounter if things turn bad, but then again, neither will you.\"\n\n\"Understood. I won't be causing any problem for you or yours.\" I stood there meeting William's eyes letting him read whatever he cared to see. I'd done things under orders I wasn't proud of during my time in the army, but I still thought of myself as a man of my word.\n\nThe old man stared for a few moments longer before nodding to himself. The tension in the air lessoned considerable and William smiled again. \"Good, now if you don't mind, hand me that Henry and let's get going. I'm hungry.\"\n\nI didn't quite shake my head and I picked the Henry up from where he'd left it while we washed up and handed it over. He was definitely a strange old guy, but the more I learned about him the better I liked him.\n\nWe moved onto the main house's porch. It had a warm, well used feel to it. There were a couple of rocking chairs and a chest I was guessing held some blankets, or possibly some knitting supplied. One of the rocking chairs had a blue sweater half made resting on it.\n\n\"Abigail,\" William supplied, which surprised me for some reason. He saw my expression and laughed. \"I know, you wouldn't think a woman who likes to dress in men's clothes and is as good with horses as she is would be a knitter, but she makes most of our clothes.\"\n\n\"I expect she'd be good at anything she put her mind to,\" I said without thought.\n\n\"Everything, but cooking.\" The mirth in his expression made it obvious he was remembering some of her more impressive failed attempts. It faded slightly as he added, \"I think that's why Clementine took to it so quickly when my missus died a few years back.\" I nodded, but didn't respond. Words would have seemed disrespectful to his obvious loss.\n\nWilliam led me into the house without another word. We pulled off our coats and dirty boots in the foyer. There was a shelf for our hats. After that, he led me to what was obviously his den. The house was a lot bigger than I thought when I'd ridden up. William had obviously done well for himself based on the furnishings.\n\nThere was a case for the rifles in his den and William started unloading the Spenser. I was brought up never to wear a gun in another man's house. It showed mistrust, and plain and simple, was downright rude so I unbuckled my gun belt and put it on his desk, but not before pulling my Peacemaker out of the holster and unloading it.\n\n\"Don't just stand there,\" he said gruffly when I was done. \"The Henry won't unload itself.\" I didn't quite laugh as I picked up the rifle from where he's laid it down and started removing the cartridges. It wasn't long before we were both done. William put the rifles the rack and locked it. He also took my holster and hung in on a high hook clearly made for the purpose. There was another pistol hanging next to it. I took a closer look and smiled.\n\n\"A Colt Dragoon,\" I said in admiration. \"You don't see many of those around these days.\"\n\n\"Cost me an arm and a leg back in the day,\" the old man smiled. \"But it was worth it. That pistol saved my life on more than one occasion.\" He shook his head before adding, \"Of course, it's just for show these days. I wouldn't trust shooting it.\"\n\n\"I had an 1860 Colt Army when I first started out. That was the only cap and ball revolver I ever owned.\"\n\n\"They were good enough back in my day, but the cartridge guns used nowadays are something else,\" the old man said wistfully. \"I've seen a few like your Peacemaker before. Even shot one once, but I've yet to see a Schofield up close. You ever tried one?\" There was real interest in William's voice and it brought back many fond memories of my conversations with fellow cavalrymen.\n\n\"Yeah,\" I smiled remembering. \"I knew a trooper who could shoot, reload and shoot again before I could shoot and reload my Peacemaker.\" I paused and then shook my head. \"But truth be told, I never much cared for them. Too many moving parts to maintain, and don't get me started on those short .45 Schofield cartridges they need.\"\n\n\"That same trooper was out of luck for a couple of months when all we had were the .45 Colt cartridges. The Peacemaker can shoot either. I think that was the main reason why the army now buys only the colts.\" The old man started to ask another question when we heard the front door open and close.\n\n\"That's Abigail. If she beats us to the table they'll be no hearing the end of it.\" William quickly led me through the house and into the kitchen. I didn't even bother trying to hide my grin as I followed.\n\nClementine was just putting the food on the table. There was a little boy somewhere around seven or eight helping. He was clearly too old to be Clementine's child. I guess he could have been her little brother, but he was the spitting image of Abigail, only with light brown hair.\n\n\"Billy, come meet Mr. Mosey,\" William said with obvious warmth. \"He'll be eating dinner with us.\"\n\n\"Hello.\" The boy smiled tentatively. He looked at me with obvious interest, but the closer he got the less excited he seemed. \"You're tall, but not nearly as scary as cousin Clementine described. And where's your revolver? Did you really point it at her? Grandpappy says we should never point a gun at someone.\"\n\n\"She pointed the Henry at me first.\" It was probably not the best response, but the little boy's words surprised me. It was hard not to laugh when he turned on the blond-haired girl.\n\n\"You pointed the Henry at him?\" The accusation and his tone were down right comical.\n\n\"He was sneaking up on your mamma while she worked with Domino.\" His momma. It took me a second to digest the confirmation that Abigail was Billy's mother. It was right about then that I realized the boy was staring at me again.\n\n\"I wasn't sneaking up,\" I clarified. \"I was about to introduce myself, but became distracted watching your mother training a horse.\" That made the boy smile again.\n\n\"I love watching momma with Domino, or any other horse.\" He was about to say something else, but then looked passed me. His smile turned into something far brighter. \"Momma!\"\n\nThe boy ran to her and gave her a hung. She hugged him back with one arm. She had my Centennial in her other hand as she took in everyone in the room. I saw her glance at my hip before nodding to herself and relaxing slightly.\n\n\"I didn't want to leave this outside unattended,\" she said in a voice that wasn't particularly believable. I understood the message, but then she smiled and added, \"I'm going to put it in the den with the other guns. I'll be back shortly.\" That earned her a frown from Clementine, but no argument.\n\nAbigail left, followed by her son which was a good thing because I could hear the boy asking question and after question as they disappeared down the hall. I really hadn't had all that much exposure to kids since I left home and I'd forgotten how inquisitive they could be. It was better if Abigail explained what happened.\n\nThoughts of the strawberry blond made me smile. I was well aware that she could have left my rifle outside or that she could have brought it in and put it in the den before joining us in the kitchen. She carried it into the kitchen to make sure everything was alright.\n\n\"You know, I get the feeling that your niece is almost as dangerous as you,\" I said to William as we sat at the table.\n\n\"In your case, I'm thinking she might be a wee bit more dangerous,\" he laughed, adding, \"At least in some ways.\" The man was about as subtle as a train.\n\n\"I'm just passing through.\" I guess my comment could have been consider 'out of the blue', but he needed to understand. They all did.\n\n\"Where are you headed?\" That question came from Clementine.\n\n\"My sister and her family settled a homestead about a week's ride from here,\" I answered, smiling at the thought of Jenny and her husband Charles. They had a whole gaggle of kids I was looking forward to seeing. \"She has four children. This will be the first time I'm meeting two of them.\" Abigail and her son rejoined us.\n\n\"Four kids?\" Billy interjected. He clearly liked the idea. \"Momma, when am I going to have a little brother or sister?\" In the candlelight I could make out more of Abigail's features. It turns out she blushed the nicest shade of red when she was embarrassed.\n\n\"Not any time soon.\"\n",
        "Clementine was grinning a little too widely at her cousin's discomfort. I was betting that was why Abigail added, \"Although with the way Clementine was mooning over the Phillips' younger son at church last week, you might be getting another cousin soon.\"\n\n\"A cousin would be nice.\" Billy was clearly oblivious to the storm that was about to erupt based on Clementine's expression.\n\n\"So,\" William said pointedly. \"Are you planning on staying with your sister long?\"\n\n\"Not really,\" I answered, understanding what he was trying to do. I did my best to help. \"I'm planning on going back east to Ohio. That's where I was born. I still own the family business, but the foreman deals with the day to day operations.\" That caught Billy's interest and thankfully, allowed the original subject to drop.\n\nClementine gave Abigail a calculated look that was clearly a sign that she would get her revenge another day, but she thankfully chose let it go for now. I couldn't stop myself from smiling as we all started eating.\n\nThe conversation meandered for a while and I sat silently enjoying the food and interplay between the different family members. Well, that and stealing glances at Abigail.\n\nThe strawberry blond was prettier then I'd first thought. Unfortunately, the scar down her face was also more pronounced. Then again, I'd seen plenty of scars before, many a lot worse than hers. Hell, I had a couple, just not on my face. Besides, nothing could mar the wit and humor that quickly became apparent as she interacted with the others. I loved the way her deep blue eyes danced when she found something funny.\n\n\"Do you still have family in Ohio?\" William asked, drawing me back into the conversation when we were done eating.\n\n\"Some,\" I answered, turning to face the old man. \"My parents are gone and both my brothers died during the war. That's how I ended up inheriting the family business. I do have a couple of sisters who still live there.\"\n\nTrue be told, my oldest sister Mary married young and moved a few days ride away. We only saw her a few times a year and I never really knew her all that well. Sarah was a different story. She and my brother Samuel's were twins. They were six years older than me and thick as thieves. I had some fond memories of both of them.\n\nSamuel been the first to die from a bullet wound to the stomach. He'd gone to West Point and been the one to convince me to join the army. My other brother Mark only joined after the war started. He died eighteen months after Samuel.\n\nIn Mark's case it was disease and not the enemy that took him, which always struck me as wrong. He's been one of those men who were larger than life. The idea of him getting sick and dying just seemed impossible.\n\nMark's death was the harder for me to face. He and I were close since we were only two years part. Jenny was a late in life child for my parents. She was five years younger than me.\n\n\"I haven't seen them since I left home.\" I thought I'd leave it at that, but something about the way Abigail was looking at me made me continue. \"I wasn't the same man after the war and frankly, I wasn't ready to see them.\"\n\nI paused and shook my head as I continued to look at Abigail as I spoke. There was something in her expression that made me think she'd understand. I'd never talked about my family other than Jenny, particularly with strangers, but it just felt right.\n\n\"Samuel was my sister Sarah's twin. He had a wife back home who was waiting for him to return from the war. I hear she remarried a few years later. Mark was the brother who was going to take over the family business. He was the only one who had the talent for it. My father and him were thick as thieves.\"\n\n\"Their deaths made no sense. They had so much more to live for than me.\" I shook my head as a lot of old feeling resurfaced. \"I couldn't go back and face my family as the one who didn't die.\" I paused again, swallowing with some difficulty. \"I guess if I'm being completely honest with myself, the reason why I never went home is easy to understand in the end. Cowardice, plain and simple.\"\n\n\"You can't be a coward,\" Billy interjected with a frown, surprising me. \"Clementine said you stood up to Grandpappy, momma and her without batting an eyelash. A coward wouldn't have done that.\"\n\nThat gave me a laugh that I desperately needed. I'd shared way too much and it embarrassed me, but Billy's innocence and the look of understanding on Abigail's face made it bearable.\n\n\"I felt a lot like that when I left the army,\" William interjected, deep in thought. \"I think everyone who survives does.\"\n\n\"How did you get past it?\" I found myself asking. It had been thirteen years and it still bothered me. The old man surprised me by giving me that grin of his again.\n\n\"The love of a good woman.\" William was now pointedly looking back and forth between his niece and me. I couldn't understand why he was pushing so hard.\n\n\"So instead of going home you stayed in the army and fought in the Indian Wars?\" It sounded like a question, but it really wasn't. It was an out Abigail offered from our shared embarrassment. I took it gladly.\n\n\"Yes, and each year that passed gave me less and less reason to return to Ohio.\" I took a pull from the glass in front of me. It was just water, but it helped. \"Mom passed first. By the time the news reached me, my father had joined her.\"\n\n\"And your sisters?\" Abigail asked.\n\n\"My older two sisters and I fell out of touch, but my younger sister Jenny wrote me every month and kept me abreast of what was going on with them. Well, at least until she and her husband Charles moved out here and started a family of their own.\"\n\n\"When's the last time you heard from one of them?\" Clementine asked.\n\n\"It was Jenny, about nine months ago. I expect that there are a couple more of her letters trying to catch up with me as we speak. She still writes every few months. I even visited her about four years ago while on leave.\"\n\n\"Then it's good you'll be seeing her again soon.\" Abigail offered. \"Family is important. She'll probably have news of the others.\"\n\n\"Knowing my little sister, you're probably right,\" I laughed gently, shaking my head. \"She's stubborn about keeping all of us in touch.\"\n\n\"I think I'd like her.\"\n\n\"Oh, you would,\" I laughed outright now. \"But then again, everyone does. Jenny's just that kind of a person.\"\n\n\"Did you really fight Indians?\" Billy held the question in longer than I expected. I could tell from the moment that the Indian Wars were mentioned he was dying to ask.\n\n\"Yes,\" I answered, smiling at the boy.\n\n\"Are they really savages?\"\n\n\"They certainly fight that way,\" I sighed, remembering how many friends I'd lost during the Indian Wars. \"But there's an honor to them too.\"\n\n\"Did you fight at Little Big Horn?\" The boy's excitement was clear, but the question made me grimace. That battle was two years passed. I hadn't been there, but the sheer waste of life was appalling.\n\n\"No, Custer didn't want my troops in his regiment.\"\n\n\"You knew General Custer?\" the boy asked, his excitement ratcheting up a notch.\n\n\"Lieutenant colonel.\" I did my best not to grimace. It wasn't easy. Custer had been a major general at the end of the civil war, but reverted to his permanent rank of captain after his regiment was mustered out. He was promoted to lieutenant colonel when he joined the 7<sup>th</sup> Cavalry. Everything was a bit confusing back then with whole regiments being deactivated and others being formed. There were some politics involved too with Custer. \"Yes, I knew him.\"\n\n\"He was a hero. The savages had him surrounded and he and his regiment fought to the last man!\"\n\n\"He's thought of more of a Martyr than a hero these days,\" I got out with some difficulty. I should have left it at that, but I couldn't do it. \"Truth be told, in my opinion, he wasn't much of either.\"\n\n\"What?\" The look in the boy's eyes made me regret my words immediately. It didn't help that every adult eye was on me with more than a tinge of disapproval. I thought to keep silent, but after a moment I sighed and finally relented.\n\n\"Custer was a brave man.\" Brave and stupid, but the boy didn't need to know that. \"And his men were heroic. They were ordered into an unwinnable situation without reinforcements and they fought bravely.\"\n\n\"And even though we lost that battle, we won the war!\" I smiled at the boy's enthusiasm.\n\n\"At least that one,\" I said agreeably. \"Crazy Horse is dead and Sitting Bull is hiding in Canada somewhere.\"\n\n\"Time for bed,\" Abigail said to her son, while giving me a grateful smile. A boy Billy's age deserved his heroes, even when it was someone like Custer. The two left the kitchen.\n\n\"Was Custer really that bad?\" Clementine asked once Billy and his mother were out of the room.\n\n\"He was a bigoted dolt, so full of himself that he ignored direct orders to wait for reinforcements and attacked with a force that was greatly outnumbered,\" I snapped, but then took a deep breath and let it out slowly. \"But that's just my opinion, and honestly there was bad blood between us for years before he died.\"\n\n\"Really?\" Clementine asked, but I had no intention of explaining further, not with a girl with such obvious southern ties. Who was I kidding? Not with anyone.\n\n\"It's about time I turn in as well.\" I stood, thanked her and her grandfather for dinner. I then turned to William and asked, \"Is it okay if I sleep in the stable loft?\" The old man nodding, looking a little relieved. I understood.\n\n\"Why would you do that?\" Clementine asked, nervous for some reason. \"I was planning on making up the guest bedroom for you.\"\n\n\"That's kind of you,\" I smiled. \"But I'm not a guest. I'm a stranger who dropped in out of nowhere. The loft in the stable will do me fine. I need to go out and get my gear anyway.\"\n\n\"That's ridiculous!\" the girl insisted. \"We have the empty room.\" I knew the house was bigger than I originally thought, but five bedrooms seemed a bit much. Unless maybe Billy slept in the same room as his mother? It didn't matter. I wasn't sleeping here tonight in either case.\n\nI could tell that William was waffling. His granddaughter had put him in an awkward position by offering the bedroom. I decided to make it easy for the old man. He deserved a good night's rest. So did I, and for some reason I didn't think being under the same roof as Abigail would help with that.\n\n\"The stable is fine.\" My tone left no room for argument, but then again, if I'd learned anything from my short time with this family, I had a pretty good idea that Clementine would continue. Still, I wasn't expecting the outburst that came next.\n\n\"I knew you were a horse thief!\"\n\n\"How do you figure?\" I asked, not bothering to hide my laughter.\n\n\"Who else would chose to spend the night sleeping in a stable instead of a nice warm bed?\" The accusation in her eyes was a bit over the top, but there was logic there. \"You're going to wait until midnight and slip out with the best of our horses!\"\n\n\"I think you give me more credit than I'm worth,\" I said, still laughing. \"But I tell you what, I'll leave my guns in your grandfather's den until the morning.\" Still the girl looked ready to continue, making me add in exasperation, \"You don't think I'd leave them behind, do you? What kind of thief would I be if I walked around weaponless?\"\n\nThe best part was that Clementine was obviously still game to argue, but thankfully, her grandfather cut her off this time.\n\n\"Enough child,\" the old man interjected. \"First off, you can't insist a man sleep in the house with the family one moment and then call him a horse thief in the next. It don't make no sense! And second, there aren't any horses left to take even if he were a horse thief. Jason and the rest of the ranch hands took them to market.\" That explained why I hadn't seen anyone else other than William, Billy and the two women.\n\n\"What about the special ones Abigail is training, like Domino?\"\n\n\"No man would be stupid enough to take one of those. Everyone knows your cousin would hunt them down and kill them worse than dead!\" William's exasperation with his granddaughter was downright funny, but I refused to laugh at him. The man deserved more respect than that. \"Now enough is enough. Tomorrow's going to be a long day with us going to Twisted River. We'll need to wake up extra early to do our chores, especially with how shorthanded we are now. We could all use a good night's sleep.\"\n\n\"Miss Walker,\" I said with a nod. \"William.\" I excused myself and slipped out of the house before the girl could continue the argument, finding my gear already neatly stacked in the stable. I smiled and promised myself to thank Abigail in the morning.\n\nI grabbed what I needed and climbed the loft. My arms still ached from carrying all my gear from where I left Whiskey so it took longer to go to sleep than usual. Plus, my mind wandered for a while. Talking about my family brought them to mind. William and his family were also in my thoughts.\n\nI hadn't forgotten what he'd said Abigail would do if someone stole one of her horses. I doubted he meant it literally, but I couldn't be sure. The thought made me smile for some reason. I guess I liked the idea of the strawberry blond being able to take care of herself.\n\nI'd seen plenty of people in my life, both men and women, who been victims of something bad. Too many of them broke. Most found a way of moving on, but a rare few were able to come out stronger. I didn't know Abigail's story, but she'd clearly fit into the last category, and that only added to whatever was drawing me to her.\n\n\"Damned fool!\" I snapped at myself and shifted in the loft, trying to get comfortable.\n\nI had more than a mild case of curiosity when it came to Abigail and her story. That was only normal. Who wouldn't be interested? Still, the anger and need to do something that washed over me whenever I thought about whoever it was who scarred her face like that was something else entirely, and certainly not normal.\n\nI was finally nodding off when I heard a noise that brought me back to fully awake. Someone was out past the corral and coming this way. No one with good intentions came on to a ranch this time of night. I cursed silently when I instinctively reached for my Peacemaker and came up empty. I'd left it in the house.\n\nI still had the advantage of surprise and I'd only heard one person out there, but I needed to find something to use as a weapon. I glanced around the loft, but it was pretty bare up here. William was too conscientious to allow anyone who worked for him to leave tools lying around.\n\nI knew there was probably something downstairs I could use. Maybe a pitchfork. I silently slipped out from under my blankets as quickly as I could. It was cold, but I ignored it. There'd be plenty of time to warm up later assuming I survived.\n\nI'd need to use my old scouting skills to get out of the loft without making any noise, but it shouldn't be too hard of a task assuming I had the time. I glanced out the loft doors one last time to see if I could spot whoever was coming.\n\nI caught myself wondering if it maybe was a true horse thief, or something worse. It certainly wasn't an Indian. None of them made this much noise when they were sneaking up on you. That's when I heard another noise.\n\n\"Damn! Two of them!\" That changed things, especially since the second sound came from the direction of the house. My mind was racing through my options when the first one came into sight. Thankfully, it was a cloudless night and the full moon lit the sky.\n\nI frowned when I saw what looked like a boy not much older than Clementine slip into the corral. He was clearly trying to be quiet and failing miserably. That didn't mean he wasn't dangerous, but then again, he didn't have any weapons I could see.\n\nA possibility slowly started to dawn on me when I remembered Clementine's earlier insistence that I sleep in the house instead of the stable. Now that I thought about it, she been more than simply obstinate. That's why I wasn't surprised when I saw her long blond hair come into sight a few seconds later. That didn't stop me from cursing to myself.\n\n\"Teenagers!\" I grumbled, settling back down and pulling my blankets back over me. Clementine was nervously looking between the boy and my location. She was clearly intent on cutting him off before he reached me.\n\nThe boy, young man really, was smiling when she joined him in the corral. That only last until he took in what she was saying. I couldn't make out the words, but honestly, I didn't try very hard. I was sure it was something to the effect that they'd have to call out their clandestine meeting for tonight. The boy didn't take it well.\n\n\"Sorry boyo,\" I snorted, not really meaning it. I caught myself wondering just how long this had been going on and how innocent it all was, but knew it was none of my business. Still, I might mention it to William in the morning.\n\nThe teenagers talked for a few more moments before they shared an awkward kiss. It didn't last very long and the boy disappeared afterward. There was obvious longing there on both their parts, but they both looked far too tentative for their relationship to have gone very far.\n\n\"So, still reasonably innocent,\" I mused out loud. \"Maybe I'll tell Abigail instead of William. He'd probably insist on a shotgun wedding. Abigail would be smarter about it.\"\n\nAnd there I was, once again lost in thoughts about the strawberry blond. I even let myself daydream about how I would have handled it if the noise outside was Abigail sneaking out to the stable instead of her sister.\n\n\"Well, this isn't helping me sleep any.\" I was grumbling, but I also had a half smile that I couldn't quite get rid of, at least not until later when I realized just how much the moon had moved in the sky while I daydreamed about the scarred woman. I cursed myself, rolled over and promised myself I'd be gone from this family's life by this time tomorrow. It was the only safe thing to do.\n\n**********\n\nI came awake suddenly, seeing that the sun was just starting to rise, but that wasn't what woke me. No, that was the sounds of someone moving down below.\n\n\"Let's go girls. We need to get you two fed. You're going to give us a ride to Twisted River as soon as the sun's good and up for a bit.\" Abigail's calm, raspy voice made me smile despite how tired I was feeling. It turned to downright laughter when she called up to me, \"You too Mr. Mosey. That is, if you want breakfast before we leave.\"\n\n\"I'll be down shortly,\" I said, standing and stretching. I glanced down and saw her watching me. \"And call me Josiah.\" It was a touch forward of me, but it just seemed like the natural thing to do.\n\nI noticed that Abigail was embarrassed again. She seemed to be that a lot around me and I had the feeling that was odd for her. I was guessing it was for being caught staring up at me, but it could have been for my somewhat brazen offer for her to use my first name considering how little we knew each other. Hell, it could have been for both reasons.\n\nThat didn't stop an odd kind of warmth from filling me when she blushed slightly and nodded once in agreement before turning back to her horses. I rolled my blankets and gathered my stuff before making my way down from the loft.\n\n\"Here, let me help with that,\" I said when I saw her reaching for the pitchfork. I smiled when I saw it. It reminded me of my desperate search for a weapon from the night before. Well, that and Clementine and her guest. I still hadn't decided what to do about that so I kept my peace. Instead, I added, \"And thanks for bringing my stuff in here last night.\"\n\n\"You're welcome,\" she said, not quite looking at me as she went about her chores. \"Breakfast is on the table in the kitchen. Feel free to go on in. Everyone is awake.\"\n\n\"In a little bit.\" I continued helping her. We remained silent, but it was companionable. I did find myself grinning when I started mucking out one of the stalls. That caught her interest. \"What's so funny?\"",
        "\"Nothing,\" I answered, but then relented at her curious look. \"It's just been a while since I've done something like this.\"\n\n\"I thought you were cavalry?\"\n\n\"I was,\" I said, refusing to clarify. Instead, I changed the subject. \"Why don't you show me these horses of yours?\" I'd already decided to go into town and hope for a cavalry trained stallion, but I did want to see the horses she'd trained. Besides, I loved how her expression lit up when she started talking about them.\n\nWe spent the next fifteen minutes with her introducing me to each of the horses available. They were all good horses, some downright impressive, especially Domino now that I could see more than his lines in the morning sun. I was sorely tempted to buy him, but I was still holding out for a cavalry trained horse.\n\n\"He's got more stamina than you'll know what to do with and he's fast. Not racehorse fast, but close enough and he can keep up the pace for a lost longer.\" I guess I was grinning a little too widely as I listened to her talk about Domino.\n\n\"What's so funny?\" She was frowning and I didn't like that.\n\n\"I like the way your face lights up when you talk about your horses,\" I said with a shrug. It was the honest truth. \"The only time I've seen you happier is when Billy hugs you.\" Oddly, she didn't seem embarrassed by my words. I decided to pry a bit. \"So, how long have you and Billy been living with your uncle?\"\n\nI was just trying to learned more about her, but Abigail's hesitation spoke volumes. I thought she wasn't going to answer until she finally started talking. There was far less exuberance than when she talked about her horses.\n\n\"Since just before Billy was born.\" She hesitated again, sighed and then shrugged, mostly to herself I thought. \"I was with child and Uncle William was the only kin willing to take me in.\" There was obviously a lot more to her story, but I refused to press her further. She would tell me or not. I actually thought she might before Billy came running into the stable.\n\n\"Good morning, Mr. Mosey!\" the boy grinned. \"Clementine says that if you don't come in right now there won't be any breakfast for you. She also sent me out to help momma with her chores.\"\n\n\"I best be going,\" I said, regretting the interruption, but also thankful for it. I knew for a certainty that whatever Abigail was going to say next would have somehow draw us closer together, and I didn't want that, or at least I thought I didn't. I wasn't the settling down type, and this woman deserved a man who was.\n\nI did notice a couple of older men around the ranch as I made my way to the main house. I was guessing that they were the few hands who probably remained behind to help out while the rest took the herd to market. I hadn't seen any of these men last night, but that could have been for many reasons. They seemed curious, but friendly enough.\n\nBreakfast was a simpler fare then the night before, but just as good. Afterward, I went into William's den to check out my Winchester. I had it mostly apart when William and Billy came in. I don't know which one was more interested. I grinned and explained what I was doing as I worked.\n\n\"This is the carbine version,\" I was saying some time later. \"The barrels a few inches shorter. It easier to use on horseback.\" It also held less cartridges than the other versions, but it was a tradeoff, like most things in life. Besides, it still held twice what my Peacemaker did and was much easier to reload.\n\n\"That was one of the reasons why I guessed you were formerly a cavalry man,\" William interjected, but mostly he stayed silent and let Billy and I talk. He was sitting at the spare chair in the room. I offered him his own when he first arrived, but he's waved me off. Young Billy was too excited to sit at first.\n\nSomewhere in the middle the boy climbed into my lap to get a closer look. Truthfully, I'd been so focused on what I was doing and saying that I didn't really notice, at least not until I caught William looking at us with a speculative look. It made me uncomfortable, but it's not like I could push the poor kid away, and frankly, I found his inquisitiveness enjoyable. Thankfully, the old man didn't say anything and kept his attention on what I was doing with the Winchester after that.\n\n\"There, the Centennial is good as new!\" I smiled at Billy once the rifle had checked out and I'd put it back together. He grinned back in return. That didn't stop him from having more question.\n\n\"Why do you call it a Centennial?\"\n\n\"It's not just me,\" I laughed in reply. \"It's because it was released during the country's centennial, when the United States celebrated one hundred years.\"\n\n\"Oh! I remember that! It was a long time ago.\"\n\n\"A couple of years,\" I corrected gently. I guess to an eight-year-old that was a long time ago. \"You should have seen the first repeating rifle I bought after the southern rebellion was put down. It was called the 'Yellowboy' because of the shiny brass receiver.\"\n\n\"Really?\" Billy asked, obviously not quite believing me.\n\n\"Really,\" I repeated. The boy glanced at William who was nodding in agreement. That's when I noticed Abigail standing by the door. Actually, she was leaning on the doorframe with an odd expression as she watched her son and me. It quickly disappeared when she realized I saw her.\n\n\"Come on Billy. We need to get you ready. We're leaving shortly.\"\n\n\"Let's go!\" the boy cried excitedly as he jumped off my lap and all but ran to his mother.\n\n\"You'll have to excuse him,\" she said with a shake of her head, giving her son a loving smile as he ran past. \"We go to Church Hollow every Sunday, but it's a small town and doesn't have much to interest a boy Billy's age.\" Abigail followed her son out of the room.\n\n\"The woman folk have decided to make a day of this trip so I'd better go make sure there's nothing the ranch hands need to ask me before we go,\" William said, standing slowly from the chair. I saw the thoughtful look in his eyes so wasn't completely surprised when he added, \"You're good with the boy.\" I shrugged, not sure how to respond to that.\n\n\"I have to go get the rest of my gear from the stable.\" The old man nodded easily at my change in subject as he took my Peacemaker down from the wall and handed it to me. I nodded in thanks and left.\n\nThe wagon and horses were out already out front and ready to go. I found my saddle on Domino and grinned. Apparently, Abigail was going for the hard sell. I saw that my gear was also tied to my saddle. I checked it all after putting my Centennial in the saddle holster and buckling my Peacemaker back in place.\n\nI also took the time to appreciate Domino. He really was a magnificent horse. I was scratching where his withers met his neck when William and his entire clan finally arrived. Clementine and Billy were excitedly chattering which made me smile. William was watching them both fondly as he climbed up onto the wagon. Abigail was watching me and Domino.\n\n\"Still trying to make a sale, I see.\" I was teasing her and she knew it. I couldn't stop myself from grinning at her noncommittal shrug.\n\n\"You should feel honored Abigail is willing to sell you Domino,\" Clementine interjected with more than a little attitude as she followed her grandfather up into the wagon. \"She's very picky who she sells her horses to.\"\n\n\"I do,\" I said, not quite laughing as I reached down and lifted Billy to the wagon without thought. Clementine abrasive personality somehow made me want to laugh more often than not. Well, when she wasn't holding a rifle on me anyway.\n\n\"Thanks!\" the boy cried and he settled in between the two adults.\n\n\"You're welcome, son.\" I had to give Abigail credit. She'd done a good job raising the boy so far.\n\n\"Don't talk Grandpappy and Clementine's ears off the whole ride.\" I was sure Abigail's warning would go unheeded.\n\n\"Leave the boy be and mount up.\" William was clearly ready to go. \"We'd burning daylight.\" The old man snapped the reins and got the wagon started. I could already hear Billy asking his first question. I exchanged a look with Abigail and we both laughed as me reached for our horses.\n\n\"Thanks for the use of Domino,\" I said to her after we caught up to the wagon. \"I much prefer the smooth gait of a horse to the bone-jarring ride of a wagon.\"\n\n\"Me too,\" she admitted. It didn't really surprise since she sat her horse as well as any cavalrymen I knew.\n\nWe spent the first half hour riding close to the wagon, but I couldn't take much of that and shifted ahead. I guess it was the scout in me that needed to be out front, scanning for trouble. Abigail kept pace. We were in a much-traveled part of the territory so there was probably not much to worry about, but I kept my eyes open just the same. Wyoming was far from being settled and safe.\n\nThe more I rode Domino the more impressed I became by the horse and his trainer. It was too bad he wasn't cavalry trained or I've have definitely bought him. I was seriously thinking about doing it anyway. The horse was everything Abigail promised.\n\nWe stayed in view of the wagon, shifting from about a hundred yards on one side of the trail to a hundred yards on the other. We also checked on the backtrail every once in a while. It wasn't much, but it was enough to allow me to feel reasonably certain I'd spot trouble if it was coming.\n\nOddly, despite riding together Abigail and I didn't speak about much. Maybe it was because we both realized we'd soon be parting ways or maybe it was because neither of us wanted to face the attraction we felt for each other. Of course, It could have been simply because we kept shifting around the wagon so much. I don't know, but oddly, it was okay. Just being next to Abigail was somehow comforting.\n\nThat's not to say we didn't speak at all. We just kept the conversation light and infrequent. We shared some memories of our childhood and discussed the different places we'd been without getting into too much detail about our lives while there.\n\nFor example, I described the differences between Ohio, Tennessee and the other places my regiment took me. They were all beautiful in their way. Abigail talked about being a little girl in Pennsylvania and moving to Virginia with her family as a child. I didn't bring up any of the pain and suffering that I'd seen as a soldier and she didn't talk about how she ended up a widowed, pregnant young woman with a scarred face and not much else other than an uncle and aunt who were willing to take her in.\n\nTwisted River ended up being a four-hour ride which wasn't as bad as I feared, especially not with Abigail for company most of the way. She did go back to the wagon occasionally to talk with her family. She even allowed Billy to ride with her for a while at one point. We arrived in town a little before lunch time.\n\nThere were a lot of people about, many of whom waved and smiled at William and his family as we rode in. I received a few curious looks, but that was typical when a stranger came into a town this size. Most people seemed pleasant enough.\n\nThe settlement bordered the river that gave it its name. I could see the water flowing down from the north and shifting off to the east at a reasonably sharp angle. I noticed that the rock was different on the southern edge. I was guessing that's why it direction twisted the way it did.\n\nWe entered town where the river shifted direction. The main street with all the businesses lay along the west to east portion of the river. There was also a road going off to the north. I could see houses in that direction, as well as a church steeple off in the distance. William pulled the wagon off to the side and stopped.\n\n\"I'd like to treat you all to a meal in thanks for your kindness, if that okay?\" I asked as Abigail and I did the same.\n\n\"No need,\" William replied, but I insisted and eventually he relented. He pointed off to the right a couple of building in and on the north side of the street. \"The hotel yonder has a caf\u00e9 that serves decent food, but I have couple of things to settle first.\" He turned to Abigail and added, \"Why don't you take Mr. Mosey and help find him a horse?\"\n\n\"Billy and I will go with them,\" Clementine interjected quickly. \"The last time you said you had a couple of things to settle we were stuck in that land office for hours.\"\n\n\"I want to go to the general store to see what kind of candy they have in!\" Billy's eyes were lit in only the way a child's can be when you talk about sweets.\n\n\"Of course you do,\" Abigail said with a sigh that I'm sure mothers have been perfecting since back in Adam and Eve's time. I did my best not to laugh.\n\n\"Why don't you take Billy to the general store for some candy and then meet us?\" Clementine offered. \"I may not know half as much as you do about horses, but I can show him whichever place you want Mr. Mosey to stop at first. Speaking of which, where do you suggest?\"\n\n\"A cavalry trained mount of any worth is going to be hard to find.\" Abigail was frowning as she tried to come up with the most likely place. \"You'll most likely need to go to Fort Laramie, like we said last night. Would a gelding do?\"\n\n\"I prefer a stallion,\" I clarified.\n\n\"Of course you do.\" The fact that she said it in the exact same tone as she'd used with Billy when he asked for candy wasn't lost on me, or any of the other adults for that matter. Clementine grinned and William barked out a laugh. She ignored them both and added, \"Your best bet is to stop at the blacksmith and ask him. He'd be the best person to know if anyone has what you're looking for.\"\n\n\"Thanks,\" I smiled, and then turned to Clementine who was getting off the wagon. \"You don't need to come with me if you'd prefer to go to the store with them.\"\n\n\"No,\" she said a little too quickly. \"The blacksmith is on the other side of town. Walking there will give me a chance to see what's changed since the last time I was here. Besides, I've been sitting for hours. I could use the exercise.\"\n\n\"But isn't the livery stable near the blacksmith? Won't we need to leave the wagon and horses there?\" The stables were typically close to the blacksmith in most towns. Abigail and Clementine shared a look at my question that I didn't understand until I saw William's reaction.\n\n\"Not in this lifetime,\" the old man replied gruffly. \"The owner of the livery stable is a thief! I'm not paying what he's asking to care for my horses and wagons for a few hours. It robbery! I've got a friend nearby who'll let the horses graze in her front yard. Hattie's son and daughter-in-law moved in after her husband passed a few years back. The grandchildren love taking care of the horses.\"\n\n\"They love the sweets you give them for doing it,\" Abigail said pointedly, but then smiled and added, \"I'll pick up some extras when I take Billy.\"\n\n\"You all get going,\" William ordered. \"But tie the horses to the wagon first.\"\n\nClementine climbed down from her perch easily enough, but Billy was quicker. He jumped off, making the old man's gruff demeanor soften into a smile. I was grinning a little myself as I dismounted and did as William requested. Abigail did the same.\n\nI didn't realize I was watching the strawberry blond a little too intently as she did so until I noticed Clementine roll her eyes at me from the corner of my eye. Thankfully, that was the extend of the teenager's reaction, but I began talking to hide my embarrassment.\n\n\"Thanks for the use of Domino.\" I silently congratulated myself for coming up with a good excuse to be looking at Abigail. I was sure Clementine wasn't buying it, but I now had plausible deniability, which was something every good soldier knew about. \"He sure is a good mount.\"\n\n\"I can give you a good price on him if you're interested, but you'd better decide soon. I'm sure someone will make an offer for him while we're in town.\"\n\nAbigail was smiling as she took Billy's hand. She was serious, but she was also having a little fun teasing me. She knew I wouldn't commit until I'd had a chance to look for a cavalry trained mount and I was reasonably confident she would check with me one last time before selling Domino to someone else. According to Clementine, Abigail would probably turn down most offers anyway unless she knew and trusted the buyer. It made me feel good that she was willing to sell him to me.\n\n\"Oh, I'm interested.\" I didn't realize how that sounded until Clementine snorted. William was grinning that grin of his that annoyed me so and poor Abigail was blushing again. The only one who seemed oblivious was Billy. What was wrong with me? I sounded like a damned fool! \"Domino is everything you said he would be.\"\n\n\"He's one of the best I've ever trained.\" There was confidence and a touch of pride in her voice that sounded just about right.\n\nIt's funny, but the more I got to know Abigail, the less I noticed her scar. Don't get me wrong. It was there and impossible to miss. I just stopped focusing on it the more I got to know her. It was easy. There were plenty of other interesting things to focus on.\n\nFor example, it was too bad that her hair was always tied in a long braid. I was betting it would look magnificent down. Of course, with me leaving later today I'd never see it like that, but that didn't mean I couldn't imagine it.\n\n\"Let's get going,\" Clementine grumbled. It made me smile because I realized she sounded just like her grandfather. I guess that made sense since he'd been the one to raise her.\n\n\"William. Mrs. Collier.\" I tipped my hat in their direction. \"Billy.\" The boy was out and out bouncing in place impatiently by this point. I grinned at his antics and followed after the short, fiery blond already ten steps ahead, leading me east, down the main street. Clementine was clearly on a mission. I wondered what was on her mind.\n\nWilliam got the wagon moving again, up the north road to his friend's house. Abigail and Billy crossed the street and heading in our general direction. I understood why when I saw the general store a few doors down. There were plenty of barrels and supplies out front as well as a couple of wagons.\n\nTwisted River was a nice, bustling little town. Not too big or too small. The streets were crowded and the stores busy. I was guessing it was due for a growth spurt soon. We were about halfway through it when the teenager stopped dead and turned toward me.\n\n\"I see a friend I need to say hello to. You can't miss the blacksmith if you just keep walking.\" I raised an eyebrow at the girl and glanced down the street. It didn't take me long to spot him. It could have been a coincidence, but I wasn't buying it. I wondered how the Phillips boy convinced his father to let him come to town today. I was sure Clementine must have told him we were making the trip today.\n\n\"I'm sorry Miss Walker, but I can't leave you alone unchaperoned. What would your grandfather say?\" I fully expected an explosion which I was in no mood for so I decided to see if I could shock her into silence first. \"Is that young Mr. Phillips over there? I think I saw him wandering around the ranch last night. I wonder how he knew you'd be here today?\"\n\n\"I have no idea what you're talking about.\" Her tone left no room for argument, but she was fooling neither of us and blushed badly. I decided to take pity on her.\n\n\"Why not invite him along?\" Besides, I wanted to get a better feel for the boy before deciding what to do about him.\n\nI couldn't believe she thought she could convince me to leave her alone in a strange town, but I guess we were all young and stupid once. Clementine hesitated so I called out to the young man. \"Come on over, son.\" That earned me a nasty look from her and a confused one from him. I ignored them both and waved the boy near.\n\n\"Why Miles Phillips! Imagine meeting you here.\" I didn't quite roll my eyes as she greeted the young man.\n\n\"Hello Clemen..I mean Miss Walker. It's good to see you,\" the boy said gamely.",
        "\"This is Mr. Mosey,\" the girl continued, introducing us. \"We're going to see if we can find him a horse so that he can be getting back to his own business.\" I raised my eyebrow at her lack of subtilty. The girl refused to flinch, but did have the decency to blush again.\n\n\"Pleasure to meet you Miles.\" I'd used his first name on purpose. He hadn't earned the respect I'd give to a man yet, not with his sneaking around the ranch last night. \"We're going to the blacksmith. Come along.\" I started walking, not giving them a chance to argue. The two followed, somewhat reluctantly.\n\nThey were mostly silent as we made our way through town. I figured it was probably because of me so I tried to get the conversation going. \"Miles, I hear you live on the next homestead over with your family. How many siblings do you have?\"\n\nThe boy started talking slowly, but he clearly loved his family and quickly picked up steam. Eventually Clementine joined in. She was obviously friends with most if not all of his family. It didn't take long to realize that they might make a good match. The glances they gave each other when they thought I wasn't looking were definitely telling.\n\nI found myself wondering if Abigail and I looked similarly ridiculous, but decided not. We were far too old to act so silly. Then again, I found myself grinning at the two very much like I'd caught William watching his niece and me on more than one occasion. Thankfully, we arrived at the blacksmith before I could put much thought into that.\n\nThe blacksmith was built short and wide. He frowned when I told him what I wanted. In part because I'd interrupted his work for something that probably wouldn't bring any business to him, but also because cavalry trained horses were as scarce around here as Abigail implied.\n\n\"Well, you could try old Pete Tillman.\" The man voice was deep and reverberated through his well-muscled chest. His lips were stained black from the obvious wad of chewing tobacco in his mouth. \"But your best bet would be Robert Washington, unless that's a problem for you?\"\n\n\"Problem?\" I frowned. The man spit a stream of tobacco juice before answering.\n\n\"He's colored.\"\n\n\"Why would that matter?\" Clementine's question surprised me and actually raised her a bit in my estimation, especially for someone from the south. Of course, she'd be raised mostly by William and he was clearly the type to care more about what a man could do than his skin color.\n\n\"Does for some,\" the blacksmith replied, his wide shoulders shrugging. He then gave us directions in short terse sentences. We were halfway there when Abigail and Billy found us. The latter was sucking happily on what looked like a peppermint stick. We told them where we were going.\n\n\"I thought he'd send you to Robert, but there might have been someone new in town.\" Abigail was obviously friends with Mr. Washington based on her tone and use of his first name. She and Billy fell in walking with us.\n\nIt didn't take long to find the place the blacksmith directed us too. There were serval horses in a corral out front. They were nice enough, but nothing special. Mr. Washington wasn't there, but his wife and son Robert junior were. I was guessing the latter was in late teens. He was also considerably darker skinned than his mother.\n\nThey did have one cavalry trained mount. The boy went into the stable and came out with a horse after I described what I was looking for. It was a gelding which wasn't the end of the world, but not really what I wanted. Still, it looked like I wasn't going to have much choice. Domino was looking better and better.\n\n\"It's a solid horse,\" Abigail said after giving it a once over. I'd already done the same and come to a similar conclusion. I asked a few questions and they did their best to answer, but I wasn't satisfied.\n\n\"Here comes Robert now,\" Mrs. Washington said in relief as she glanced down the road. \"He'll answer whatever other questions you have. He also has a string of new horses with him. Maybe you'll like one of them.\"\n\nI turned, saw her husband and immediately knew he was former cavalry from the ease in which he sat his bay horse, and what a horse it was! Clearly a stallion and cavalry trained. Frankly, I couldn't picture this man riding a mount that wasn't. He was leading a string of four other horses, but they paled compared to what he was riding.\n\n\"Love at first sight,\" Clementine snorted, watching my reaction to the horse.\n\n\"Can you blame him?\" Abigail asked. She was clearly as impressed by the horse Mr. Washington was riding as me.\n\n\"Is he for sale?\" I was almost certain I knew the answer, but I had to ask.\n\n\"No,\" Mrs. Washington sighed. \"Robert won't sell Trooper no matter how much he's offered.\"\n\nTwo things were obvious from her tone. First, they'd been offered a lot for the mount. And second, the woman clearly didn't understand her husband's love of horses, particularly this one. I had no problem seeing why he refused to sell Trooper.\n\n\"That's too bad, but I'm not surprised.\"\n\nRobert Washington was an average sized man. His hair was cut short and neat. He wore a mustache and had a small patch of hair under his lips, but above his chin. There was a confidence about the man that I'd seen many times before. Everything about him screamed non-commissioned officer. I would guess at least a first sergeant. There was something familiar about his name, but there were a lot of Washingtons in the colored service.\n\n\"Mrs. Collier.\" The ebony skinned man said in greeting as he rode up and dismounted with the ease of long practice. He had a surprisingly deep baritone.\n\nHe smiled at his son and handed him the lead rope before leaning down and kissing his wife on the cheek. All three were obviously happy to see each other. It looked like he's been away for a few days at least. I was too busy staring at his horse to pay attention to what they were saying, at least until Abigail introduced me.\n\n\"Robert, this is Josiah Mosey.\" She paused and smiled slightly before adding, \"He wandered onto our ranch last night. Clementine originally thought he was a horse thief, but he's proven to be trustworthy so far.\" Her smiling widened considerably before she continued. \"Although, I wouldn't leave him alone with this big guy if I were you.\"\n\n\"I won't be leaving Trooper alone with him, or you for that matter,\" the man grinned in response, making Abigail laugh. He then turned to me and offering his hand. \"Robert Washington.\"\n\n\"A pleasure,\" I said as I took and shook his hand. \"I'm looking for a Cavalry trained mount. I'd be willing to make more than a fair offer for Trooper.\"\n\n\"Not for sale.\" He hadn't even paused before answering so I didn't bother to pursue it. It was obvious that Mr. Washington wasn't going to sell the mount no matter how much I offered.\n\n\"I don't suppose you have another like him?\"\n\n\"There are no others like him,\" the man responded with more than a little pride. \"I do have one or two other cavalry trained horses, but frankly, since Mrs. Collier's brought you here, I'm assuming she's a friend. As much as it pains me to say it, you'd be better off with one of her horses if she's willing to sell you one. My best mounts were all bought up last week by Michael Murphy's foreman. Everyone's were. He bought out the Gilbert place and hired a bunch of new hands.\" Abigail frowned at the name.\n\n\"She offered him Domino.\" I'd almost forgotten Clementine was there. She and Miles looked more interested in each other than the horses, but were thankfully keeping Billy occupied.\n\n\"You're finally selling him?\" Robert's interest was obvious. \"I could take him off your hands, but Murphy would probably offer you more.\"\n\n\"Possibly, for the right owner, but Michael Murphy will never be that.\" Abigail's tone made her distaste for the man clear.\n\n\"Not all of us can pick and choose who we sell to.\" Mrs. Washington was a bit put out by the strawberry blonde's words.\n\n\"A fair point,\" Abigail admitted, trying to make peace with the woman. \"Murphy is a bigoted fool, but his money is a good as any other.\"\n\n\"You're not wrong,\" Robert snorted. \"There's no denying he dislike coloreds, even though he'll do business with us. Then again, he's pretty even handed in his bigotry. He treats Indians and women folk just as badly. Frankly, I don't think he's too crazy about white folk either.\"\n\nThat made Abigail laugh briefly and Clementine, who was clearly listening in, snort. Robert's misses even smiled.\n\n\"He's definitely one of the orneriest men around. The only regard he shows to anyone are his sons, Thomas and Ryan.\" Th soldier was shaking his head.\n\n\"And Ryan is just like his father,\" Clementine interjected. \"I had hope for Thomas, but ever since his cousin Alby came to live with them last spring he's gotten a lost worse.\"\n\n\"All of the Murphy's are full of themselves, but Alby is something else. He's downright mean.\" This came from Miles who clearly wasn't crazy about the family either.\n\n\"No, I won't be selling any of my horses to that family any time soon,\" Abigail grimaced. \"But I don't begrudge you doing so. Everyone needs to make a living the best way they can.\"\n\n\"Well then, you're a better woman than me,\" Mrs. Washington replied, obviously over her earlier offense and maybe feeling a little bad about it. \"If the older boy treated me the way he did you, I'd be a lot less forgiving to those who did business with that family.\"\n\n\"Truth be told, the town made more out of what happened than it was,\" Abigail shrugged. \"Ryan wasn't the first or only person to say some unkind things to me when I first arrived in town. He was just stupid enough to say it at a church social in front of Minister Walton.\"\n\n\"More likely, it was more arrogance than stupidity, but with that boy it's tough to know,\" Robert sighed, and the decided to change the subject. \"Now if you're serious about selling Domino, let's talk.\"\n\nI was curious about this Ryan character and his family, but decided it was none of my business. Besides, I needed to focus before Robert bought Domino out from under me.\n\n\"Domino's not for sale yet,\" I interjected. \"Thanks for your time Mr. Washington, but we'd best be going. We're meeting Mr. Holbrook for lunch.\"\n\n\"No problem. Nice meeting you Mr. Mosey,\" the man said easily, but then paused as if remembering something. \"You know, I heard of a Josiah Mosey with the Cavalry, down in Texas and the New Mexico territory. You wouldn't be him, would you?\"\n\n\"If I were, would that convince you to sell Trooper to me?\" The man paused for a moment and thought about it.\n\n\"Sorry, no,\" he finally said. \"Maybe if you hadn't mustered out.\"\n\n\"Understandable,\" I smiled, shaking the man's hand once more. I guess I shouldn't have been surprised that some people might know me even up here, far from where I was last posted.\n\n\"It really was a pleasure meeting you, sir.\" I can't deny that a part of me liked the added respect in his tone, but that part of my life was over.\n\n\"You too.\" The man had the bearing of true soldier, one of those special ones who came along few and far between. That's when I remembered where I'd heard the name before. I'm sure there were plenty of other men named Robert Washington in the west, but I was almost certain I was. \"You're Sergeant Major Robert Washington of the 5<sup>th</sup> United States Colored Cavalry, aren't you?\" The man nodded almost reluctantly. I snapped to attention and offered a salute.\n\n\"Sir, that's not necessary.\" He was clearly uncomfortably with my action, but he didn't deny he deserved the salute. He returned it and we both relaxed.\n\n\"Necessary? No, but certainly deserved.\" Sergeant Major Robert Washington was one of the two dozen or so men who served in one of the colored regiments during Great Rebellion to earn a Medal of Honor. There was no regulation that stated he should be saluted, and I probably shouldn't have done it since he wasn't wearing the medal and neither one of us were still in the service, but you did somethings instinctually. For an old warhorse like me, this was one of them. \"It's an honor.\"\n\n\"Um, what's going on?\" Clementine asked, frowning. Mrs. Washington was smiling with pride. So was her and Robert's son. They both obviously knew why I'd reacted the way I did. Even Abigail seemed to understand.\n\n\"I need to settle in this string of horses, get them fed and watered. Come along junior.\" He turned and left with his son. His wife offered me one last smile before joining the. Robert pulled her into a hug once she caught up.\n\n\"Isn't anyone going to answer?\" The annoyance in Clementine's voice made me smile, as usual.\n\n\"My father says Mr. Washington is a war hero.\" Miles wasn't wrong, although that didn't explain half of it.\n\n\"Sergeant Major Robert Washington took command of a company of cavalry when all the officers were killed during one of the lesser known battles during the War to Preserve the Union. He turned the tide and helped win that battle readily.\" Okay, maybe I was baiting William's granddaughter, but it was so easy and for some reason I found her temper funny.\n\n\"War of Northern Aggression!\" Clementine wasn't stupid, just emotional. She knew what I was doing. She took Billy's hands and stomped down the street.\n\n\"Son,\" I said to Miles with a barely hidden grin. \"You're going to have your hands filled with this one.\"\n\n\"She's worth it.\" There was no doubt in his expression. There was also a look in his eyes as he watched her walk away that I recognized. It could be the beginning of something special. I slowly lost my smile, remembering the first time I saw the young man.\n\n\"If you really mean that,\" I began slowly. \"The next time you visit her grandfather's place, walk up to the front door and knock. Court her the right way.\" Miles had the decency to look embarrassed. I was impressed that he didn't try to deny what happened. I noticed Abigail watching us intently, but she kept her peace.\n\n\"I will.\" Miles words were more than just a promise. They were a commitment that made me realize that maybe, just maybe Miles wasn't the only one who was lucky in their relationship.\n\n\"Good man,\" I said, my smile returning as I slapped him on the back. \"Now go catch up to Clementine and try and keep her and Billy out of trouble. I going to impose of Mrs. Collier to show me to Mr. Tillman. The blacksmith mentioned him someone else who might have what I'm looking for. I don't expect he will based on what Mr. Washington said about this Murphy character buying up all the good horses, but I should check.\"\n\n\"I'll do my best, but no promises.\" We shared a brief laugh before he raced after them.\n\n\"That was nicely done,\" Abigail said once we were alone. \"I saw them last night as well. I was having problems falling asleep for some reason and I heard her sneak out of the house.\" I remembered my own difficulty in falling asleep the night before and wondered if it was related. It was an uncomfortable thought, but one I found dangerously intriguing.\n\n\"I watched from my window as they met in the corral,\" she continued as we slowly began walking down the street together. There were plenty of other people doing the same, but frankly, I didn't pay much attention to anyone other than Abigail. \"Thankfully, you were in loft so I didn't have much to worry about last night, but I knew I had to do something before it happened again. They make a nice couple, but I don't want them to start off the wrong way.\"\n\n\"Did you come up with any interesting ideas?\"\n\n\"A few,\" she grinned. \"They varied from telling Uncle William what I saw and dealing with the shotgun wedding he'd insist on, to warning the boy off and reminding Miles that my window faced the stable and that I'm a very good shot with the Henry, to trying to talk some sense into Clementine. Thankfully, you've saved me from having to use any of them.\"\n\n\"Frankly, I would have loved seeing you try the third option. That girl certainly has a mind of her own.\"\n\n\"Yes, she does, but it's a good one, if a bit too impulsive.\" I liked the way she came to her cousin's defense despite her frankness.\n\n\"Last year I would have bet she'd end up with Thomas, the younger Murphy boy, but she was smart enough to give up on him when he started hanging out with his cousin. Alby is trouble with a capital T. He carries two Scofields low at his waist and is clearly not afraid to use them. I hear he's fast. He hasn't killed anyone yet, but honestly, it's just matter of time.\"\n\n\"I know the type.\"\n\n\"I expect you do,\" she sighed, shaking her head. \"I'm happy Clementine smartened up and started noticing Miles instead of Thomas. He's a good kid. He'll treat her right.\"\n\n\"That he will,\" I nodded in agreement. \"And I think that there may be a core of strength in that young man that he'll need to deal with a firecracker like your cousin, at least I hope there is.\"\n\n\"You and me both.\" We exchanged a look and smiled at each other. Every time she did that I felt a thrill travel up and down my spine.\n\n\"Mr. Mosey, you are a dangerous man.\" The comment seemed to come out of nowhere.\n\n\"Why do you say that?\" I asked, not bothering to deny it, but I had the feeling she didn't mean it in the normal way. \"And didn't I tell you to call me Josiah?\"\n\n\"It's been a long time since a man looked at me the way you do,\" Abigail replied in her typical blunt manner, but that didn't stop her from smiling nervously before adding, \"And I think calling you Mr. Mosey is probably safer.\"\n\n\"I can't help the former. You're a beautiful woman, but you may be right about the latter.\"\n\n\"I'm two years past thirty and my faced is marred ugly, pure and simple. I may have been beautiful once, but it was a long time ago.\" I was surprised by her age. She looked younger, but in the end, it didn't really matter.\n\n\"That's still a might bit younger than my thirty-eight years, and the scar on your cheek is just that, a scar. It doesn't affect your beauty, either on the inside or out.\" I's been talking in earnest, but I needed to be careful. I didn't want Abigail to get the wrong impression. \"I'd have to be deaf, dumb and blind not to see that, but I'm not the right man for you. You need a man looking to settle down, and if almost sixteen years in the Cavalry taught me anything, it's that I'm not the settling down type.\"\n\n\"And yet you're on your way back to Ohio to take over the family business.\"\n\n\"Yes and no,\" I sighed, admitting my doubts for the first time. \"It's where I should be heading, but even if I go there, I can't see me stay long. Ohio holds nothing of interest for me. Well, other than my two sisters and frankly, I'm afraid they'll be strangers to me.\" I paused as I realized just how true my words were.\n\n\"Certainly, I have no interest in the family business. If I had, I would have mustered out and returned long before now.\"\n\n\"So, what exactly are you looking for Mr. Mosey?\" It was a fair question. I only wish I had an answer.\n\n\"I'll be damned if I know,\" I sighed, cussing in frustration. Thankfully, Abigail wasn't the type to be easily offended. Still, she deserved more respect than that. I'd have to be more careful in the future. \"The Cavalry's been my life for a long time and I have no idea what to do now that I've mustered out.\"\n\n\"Then why did you do it? Why did you leave?\" Again, a good question. One I would typically avoid answering, but not with Abigail. \"Was it the killing?\"\n\n\"Not particularly,\" I shrugged, refusing to lie to her. \"The God-awful truth is that some men need killing.\"\n\n\"Yes. Yes, they do.\" Abigail's voice was strong, but also somehow quiet. I was certain that it had to do with her story, but she clearly wasn't ready to share more yet.\n\n\"And for better or worse, I'm good at it.\" I wasn't quite sure how the conversation got here, but here it was, and it felt good to share my thoughts and feeling with another human being. Well, not just anyone. Abigail.",
        "\"The Great Rebellion was a horrible war, but it was worth fighting. Slavery is wrong, pure and simple, but it's more than just that. Allowing our great country to split apart was unacceptable to me. The United States has come a long way in the hundred years since we came into existence, but we have so much further to go.\" She was looking at me in that way again. I did my best to ignore how it made me feel.\n\n\"Slavery is now outlawed in our great land. The lasting effects of it will be felt for generations to come, but we're moving in the right direction.\"\n\n\"Women also have the right to vote in both the Wyoming and Utah territories,\" Abigail offered. \"That's a far cry from what I saw growing up in the north, much less in Virginia. One day that will spread to the other territories and states. Maybe not anytime soon, but someday.\"\n\n\"Exactly,\" I smiled. She understood.\n\n\"So then, why leave the army?\" Abigail asked again. \"Was it the Indian Wars?\"\n\n\"In part,\" I admitted. \"I have no issue with protecting settlers from savage Indians, but not all Indians are savages and as a nation we differentiate between the tribes less and less. Many of them are just looking for a way to live in peace, but that's not going to happen. The more settlers than come out west the more the Indians are going to fight back or be forced into smaller and smaller reservations.\"\n\n\"As a soldier and an officer, I understood that, but some days it was harder to face than others. In the end, I think I left because war is for young men. You reach and certain age and you want your fights to be more black and white.\"\n\n\"Or maybe it's just that you see the greys better.\" Abigail wasn't wrong. In fact, she might have been more right than I cared to admit.\n\n\"If a man needs killing, I'll do it, no regrets, but I grew tired of leading good men to their deaths against men who weren't all that different except for their skin color and a different way of life.\" The silence that followed was only a pregnant pause.\n\n\"Sounds like you left at the right time.\" Abigail's agreement with my decision wasn't necessary, but it did make me feel oddly better. \"The only problem being, doing so has made you feel a little lost.\"\n\n\"More than a little,\" I laughed, self depreciatingly. \"Some days, I feel like a fish out of water.\" We finally reached the Mr. Tillman. He was a wiry old man who reminded me of William except for his bald head. Abigail smiled at me warmly.\n\n\"You'll figure it out eventually.\" I wished I had half the confidence that she did on the issue. I was sorely tempted to ask her why she thought so, but now wasn't the time so I nodded, more in thanks than agreement.\n\nWe didn't spend long at Mr. Tillman's place. Just long enough for me to see what he had to offer. He didn't have any cavalry trained, but a couple of the horses were impressive. He'd just brought them in the day before. Of course, none of them were up to Domino's standard. That didn't stop the old guy from going for the hard sell despite Abigail's presence. He obviously didn't like her and didn't do much to hide it. I was hoping it was because she was competition, but I wouldn't bet on it.\n\n\"Not a particularly pleasant person is he,\" I said once we were able to get away from him.\n\n\"No, not particularly,\" she agreed, but then left it at that. I could have pressed, but I got the feeling nothing productive would come out of it. Mr. Tillman was an old man from a different time. An unmarried woman with a child branded Abigail a certain type of woman in his mind and that was that.\n\n\"I say we go to that hotel caf\u00e9 and get some food.\" I decided the best bet was to change the subject. \"I'm sure everyone else is waiting there for us by now.\"\n\n\"I am a might peckish, as Uncle William would say.\" She was smiling again, which made me feel better.\n\nWe didn't talk about anything serious as we made our way to the hotel. In fact, we didn't say much for a large part of the journey, but it was an enjoyable silence. I loved the fact that Abigail didn't have an incessant need to fill the silences fir inane chatter. Yet another one of my ex-wife's habits I could do without.\n\nWe saw a couple coming out of the hotel in a hurry just as we arrived. They were in such a rush that they barely glanced our way as they slipped past, but I saw the wife's eyes grow big at the last second when she saw Abigail with me. She tried to say something, but her husband dragged her away from the hotel before she could.\n\nSomething was obviously wrong, so I moved in front of the strawberry blond as we stepped up onto the wooden porch and between the pillars on either side of the hotel's entrance. I led the way inside, but Abigail was right behind me.\n\nI can't say that what I found there didn't shock me, but I'd learned to deal with these kinds of surprises a long time ago. I didn't make a conscious decision to draw my Peacemaker. I'd simply done it, thankful that I'd walked in first.\n\nThere were four of them. One held Clementine, one hand over her mouth and the other around her shoulders and neck. She was fighting against him, but he was a big guy and had little trouble holding on to her. Another easily held Billy off the ground. The boy's mouth was covered as well to stop him from crying out. The third was leaning over Miles' prone form, pummeling him.\n\nThe final man had two pistols drawn, keeping the few other hotel patrons back while laughing, if not quite maniacally, certainly with great cruelty.\n\n\"That's enough.\" I didn't yell, but I'd use my command voice which had been honed over many years of service. It drew the attention of the two holding Clementine and Billy as well as the young man with the guns. The forth and youngest one continued to punch Miles. He seemed about the same age and Clementine and Miles.\n\n\"Stay out of this!\" the gun toting twenty-something snapped, annoyed that his fun being interrupted. \"This is none of your business.\" I noticed that he had one of those fancy cartridge belts around his waist along with along with holsters for both guns.\n\n\"Son, I'm afraid it is.\" I met his eyes, letting him know I was serious. I didn't like what I saw there. There was something twister in this young man that I'd seen before.\n\nThe army was filled with men good at killing. Most, like myself didn't mind doing it if the person was deserving. There were also some that liked it, but were careful to follow a code. And finally, there was a small third group who loved killing for killing sake. All three types were dangerous, but the third was unpredictable, which to military man was bad news. I took great pains in my career to weed out that kind of man from serving under me.\n\nYou see, although some of them could control themselves most of the time, eventually they slipped up and some innocent or even not so innocent paid the ultimate price. It wasn't always the enemy. Hell, it wasn't necessarily a civilian either. A lot of times it was men in their own unit, which to my mind was the worst of the three. I know that sounds cold, but a soldier has to rely on his brother-in-arms and if he can't do that, then his ability to protect the innocent and fight the enemy is deeply marred.\n\nThe young man in front of me was definitely in that category. Some hid it well. Him, not so much.\n\n\"I'm not your son!\" he nearly growled. I was sorely tempted to shoot, but there were a lot of innocents in the hotel lobby that might get hurt in the cross fire. The two that mattered most to me were Clementine and Billy. Thankfully, Abigail was behind me, or at least she had been when we walked in. I should have known better.\n\nThe strawberry blond came around from my left making sure not to get into the way of my aim. That only made her appearance marginally better. Now the monster in front of me had another target I cared about.\n\nThere was a moment when I saw the fear in Abigail's eyes at what she was seeing, but it instantly disappeared, replaced with something far more useful in this situation. Anger, the controlled type.\n\n\"Alby Murphy, put those guns away!\" she snapped coldly before dismissing the young man and turning toward the teenager laying into Miles. \"And Thomas, stop that this instance!\" The boy was too far gone in what looked like a drunken rage. Abigail clearly didn't like being ignored. She moved quickly and shoved Thomas off of Miles. That's when Clementine bit the hand of the young man holding her.\n\n\"You've killed him! You've killed Miles!\" she cried, not helping the situation any. First off, although Miles was unconscious, I could see that he was still breathing. Secondly, Alby's eyes lit up at the thought of her words being true.\n\nThe sickness inside that boy close to the surface, far closer than most I'd seen. One day soon, he was going to lose it. That much was obvious. I was just hoping it wasn't going to happen right now.\n\n\"He's alive,\" I said calmly. I saw the glint of relief in Thomas's eyes as sanity returned to his drunken expression. More important, he stayed down. None of that stopped me from noticing the disappointment from Alby.\n\n\"Jeremy Higgens, you let Clementine go! What would your mother think?\" The giant sized young man was clearly drunk and embarrassed. I think he released the blond without really thinking about it. Clementine turned, slapped his face hard once and then quickly went to Miles. I was surprised the big man took it.\n\n\"And you Luther Miller, put my son down now.\" If anything, her voice had grown colder. The young man holding Billy had on an arrogant smile, thinking he had the upper hand. He should have known better. I'd only met Abigail the night before, but I was certain that there was no way she was letting him use her son as a hostage.\n\n\"Fuck off, you ugly, scar-faced bitch!\"\n\n\"Such language, Luther,\" Abigail tone softened, confusing the young man as she moved closer to him and her son. \"And in front of women and children, for shame.\"\n\n\"I don't give a damn about...\"\n\nThe young man was mean and clearly stupid. A part of me wanted to show him the error of his ways, but I needed to keep my attention on Alby. The only thing keeping the gun wielding Murphy boy from shooting was my Peacemaker pointed at his heart, and honestly, I wasn't sure that was going to hold him in check for long.\n\n\"Luther, Luther, Luther,\" Abigail interjected, sounding disappointed as she shook her head. The young man opened his mouth to spew something else unkind. He should have been more focused on what Abigail was doing, but then again, he was young, stupid and too inexperienced to recognize the threat staring him in the eyes.\n\n\"Luther...\" Alby began, clearly more knowledgeable in dealing with dangerous people, but it was too late by that point. Abigail put Luther down with one well-placed killed right between his legs. I doubt she'd have been able to do it if she were wearing a skirt or if he hadn't stupidly let her get so close.\n\nAbigail caught Billy before he could hit the ground. She hugged the boy briefly, but with a fierceness that only a mother could have before placing him on the ground telling him to go into the cafe and out of harm's way. She used a tone that brooked no argument. Billy paused for a moment, but then did as his mother demanded. I saw Alby follow the boy's progress with one of the pistol. The other was pointed at me.\n\n\"You do, and I'll blow a hole in your chest big enough to see through.\" It wasn't an idle threat. I didn't make those, but I wasn't sure it would work. Thankfully, Alby became distracted by what was happening between Abigail and the man she'd just kicked.\n\nNeither had remained stationary as Billy escaped. Abigail was too smart to think her kick would keep Luther down for long despite where she'd struck. The young man was already back on his knees and reaching for her despite his obvious pain. Maybe she'd hadn't caught him as square as I thought.\n\nEven I was a bit taken back by the way Abigail smiled as she cut Luther's grasping hand with a knife I didn't see until she used it. It wasn't a bad cut, but between it and her expression, Luther hesitated. I guess because even stupid had its limits.\n\n\"I thought since you like my scar so much, you'd like to see what caused it,\" Abigail hissed in barely controlled anger, never losing her twisted smile. \"I took this knife from the man who gave me this.\" She gestured toward her face. \"And stuck him like the pig he was. You sort of remind me of him. Make one move, and as the Lord is my witness, you'll get to feel exactly the same way he did as I watched the life drain from his eyes.\"\n\nLuther remained motionless. I'm sure it was a combination of being kicked, the cut to his hand and the fact that Abigail looked like she really wanted to stick him with her knife, but the question was how long would he stay that way? I didn't want to find out.\n\n\"So, Alby, what's it going to be?\" I was betting I'd have to kill the young man to end this, but I figured to give him once last chance. The situation had changed considerably in the last few seconds. Maybe that would make him see reason, but the problem with men like him was that once they smelled blood it was man near impossible to change the outcome.\n\nI heard the cocking of a rifle coming from the direction of the caf\u00e9 and swallowed with some difficulty. I didn't let the relief show when a gravelly old voice called out from that direction.\n\n\"Alby, this here Spenser Rifle and I are both on the old side, but neither one of us will miss from this distance.\" William's no-nonsense tone didn't seem to get through to the young man any more than mine had. One of Alby's guns was now pointed at me and the other at William. The damned fool looked like he was still contemplating taking his chances. That's when I heard the level of yet another rifle.\n\nThis one came from the direction of the hotel's small font desk. I looked and saw a dark haired, middle-aged man in of all things, a suit standing there. He had a full beard that was more red than brown. It was neatly trimmed and well maintained, just like everything else about this man. Thankfully, his rifle wasn't pointed at me.\n\n\"Alby Murphy, you've had your fun. Holster your guns, grab you boys and head on out. This is my establishment and I can't have you threatening the clientele.\"\n\n\"Are you sure about what you're doing Monty?\" The threat in Ably voice was clear as day. \"My uncle won't like it and he is your partner.\"\n\n\"I'm Mr. Townsend to you, young man, and I plan on speaking to him about this as soon as he's back in town,\" the man replied in a clipped accent. He was definitely a more recent transplant from back east. \"I came out here because he guaranteed me that Twist River was in need of a hotel. That won't be the case if people start ended up dead here.\"\n\nI doubt it was the man's logic that finally get through to Alby. More likely it was the three guns pointed in his direction.\n\n\"You're lucky I was here with my cousin and not my own men.\" Alby finally holstering his Scofields. He was grinning, but I could sense the barely controlled rage burning inside that boy, fighting to get out. A part of me knew that he needed to be put down and put down hard before he did something horrible, but now wasn't the time or place.\n\n\"We both are,\" I said, drawing his attention back to me. I was dead serious and he knew it.\n\nAlby Murphy was the type who not only liked death, but the power the threat of it gave him over people. He was also from a rich and influential family which meant he was used to getting his way. He'd probably never faced any real repercussions of his actions. Bottom line, he wasn't used to someone standing up to him and he didn't like it. No, he didn't like it one little bit.\n\n\"Stranger, you made a mistake today, butting yourself into my business.\" He was watching me. I guess he was expecting some sort of reaction. The fact that I gave him none only made him angrier. I just stood there waiting, gun still drawn and pointed in his direction. His expression turned dark as he looked at Mr. Townsend and added, \"You too Monty. This isn't over.\"\n\nI didn't like the sound of that, mostly because I saw the burning hatred his eyes that went along with it. I knew what that meant. Alby wasn't making an idle threat. He meant what he said and he was definitely the type to hold a grudge. Frankly, I expect for a man like him when facing someone not afraid of him or his family name.\n\n\"You'd better hope it is because if we meet with guns drawn again, you won't survive it.\" It was more of a promise than a threat, but the young man was too full of himself to see that. He turned and left the hotel, not even bothering to see how his cousin was doing.\n\nJeremy, the big man who'd been holding Clementine was now helping Thomas to his feet. I hadn't bothered putting my Peacemaker away. I'd simply shifted my aim to good old Luther. Abigail saw and frowned for a moment, looking almost disappointed.\n\n\"You're lucky Billy is okay.\" She stepped back with more than a touch of reluctance.\n\nTruth be told, I sort of hoped he'd do something stupid. I didn't like the way he treated Billy any more than Abigail did and I sure as hell didn't like what he said to her. Unfortunately, he took one look at my expression as I continued to hold my Peacemaker on him and stumbled out after Alby. Jeremy helped Thomas and they soon followed the others out the door. I was finally able to holster my six-shooter.\n\nBilly came running back into the room followed by his William and most of the guests staying at the hotel. They'd all seen what happened.\n\n\"Shouldn't we report this to the marshal?\" It seemed like an obvious action, but no one seemed to have thought of it.\n\n\"As long as Miles is alive, there's no point,\" William said as he joined us. \"The man is bought and paid for by Murphy. If you want any real justice you have to wait until the county Sheriff makes his rounds. Happens about once every month or two.\n\n\"But I will be speaking to Mr. Murphy and soon,\" Mr. Townsend added in annoyance. I had to give the guy credit. He looked more annoyed than afraid. \"This has got to stop.\"\n\n\"Be careful of Alby until you do,\" I warned, figuring he might not understand what just happened. \"And probably afterward too. Alby's threat was anything but idle. That young man will hold a grudge to death and beyond, and he loves hurting people. It was obvious in his expression as he watched Thomas beating on Miles.\" The man frowned at me, but then nodded. I only hoped my warning would help.\n\n\"Speaking of Miles, how is the boy?\" William was obviously changing the subject and I understood why. We were in mixed company after all. Still, I didn't regret giving the warning.\n\n\"Hurt,\" Clementine replied, her worry obvious. She was still on the ground next to him. \"He broke a few ribs and God knows what else.\"\n\n\"I'm fine,\" the young man groaned. I was happy to see he was conscious again. He looked at me and frowned guiltily, despite his obvious pain. \"I'm sorry. I wasn't very good at keeping her out of trouble.\"\n\n\"That wasn't your fault, or even mine for that matter,\" Clementine interjected. \"They were all drunk and Alby convinced Thomas that you were stealing his girl. As if I'd ever be Thomas Murphy girlfriend!\"\n\n\"Let me go find some of the staff to help clean all this up,\" Mr. Townsend said, looking around at the ness Alby and his friends made. \"I think I'll also drop by some of the homes of the town council. This type of situation has got to be dealt with. Feel free to ask my staff if you need anything.\" I nodded in thanks and then turned back to the group as he left.\n\nBilly was once again in his mother's arms. The concern in Abigail's expression was real as she gave her son a full once over. In some ways it was almost impossible to reconcile the woman in front of me with the one who kicked Luther, cut him with a knife and looked ready to do a lot worse. In others, not so much. I noticed that the knife was gone again.",
        "\"You know, you are truly an amazing woman.\" Abigail looked away from her son and at me. I guess she thought her actions or the little piece of her story she's let slip would make me see her differently, and I guess it did somewhat, but not in a bad way. All of it only made me respect her more. \"And one of these days, you're going to have to tell me where you hide that knife.\"\n\n\"Mr. Mosey, I don't know you nearly well enough for that.\" She didn't quite smile, but I saw her eyes light in humor.\n\n\"Only time will tell,\" I shrugged, before turning my attention to her son. It was safer, a lot safer. \"How are you doing Billy?\"\n\n\"I'm okay,\" the boy said, but he was obviously holding back tears. \"It was scary when Miles and Thomas were fighting. Miles was winning until the other guy with the two pistols used one to hit Miles over the head from behind. I tried to help. Honest! But the big one wouldn't let me go!\"\n\n\"Of course, you did,\" I said with a smile as I moved closer and messed the boy's hair, trying to ease him past the shock and guilt of what happened. \"You were very brave.\"\n\n\"Billy, do me a favor and keep that part of the story to yourself,\" Miles sighed as he fought to sit up. He almost didn't make it until Clementine helped. \"My pa is going to fighting mad when he hears about this and I don't want my family in a feud with the Murphys.\"\n\n\"Going to be hard to stop,\" William put in with a frown, obviously thinking hard before he nodded to himself. \"If it does happen, make sure your pa knows me and my ranch hands will back him.\"\n\n\"Mr. Holbrook, I appreciate the offer, but are you sure? Murphy's got more men than both of our ranches combined.\"\n\n\"I'm sure. You came to my granddaughter's defense. Doing the same for you and yours in the least I can do.\" William hadn't hesitated in his reply. \"But here's hoping it don't come to that. Michael Murphy isn't my favorite person in the world, but he's a good businessman, and everyone knows that feuds are bad for business.\"\n\n\"Yes sir,\" Miles said, trying to stand. He seemed more than a little embarrassed when he couldn't do so, even with Clementine's help.\n\n\"Take it easy son,\" I frowned. \"We really should get those ribs rapped before you do more damage than good trying to stand. We can't have you puncturing a lung. Does this town have a doctor?\"\n\n\"Yep, and not a bad one either, if a might young,\" William said, moving toward Miles. \"Let's get those ribs wrapped and the boy settled in a room, and then I'll go track the doctor down.\"\n\n\"I can go get him,\" Clementine offered, obviously worried about Miles.\n\n\"No, I'll go,\" Abigail said a little too quickly. I knew that she had the same fear I did. Neither of us trusted that Alby character and for good reason.\n\n\"Not going to happen. You help your uncle and Clementine with Miles and I'll get the doctor.\" She looked ready to argue, so I added more softly, \"Billy needs you. Besides I'm the one with the Peacemaker, just in case.\" Abigail nodded, unable to argue with my logic, but she didn't seem happy about it.\n\n\"William, I don't suppose you have my Winchester with you?\" I asked, pretty sure I knew the answer already. Frankly, I was surprise he had the Spenser on him.\n\nA town wasn't the place for carrying rifles and guns. In fact, many towns outlawed it outright, but not Twisted River, at least not yet. I'd asked William about it on the way over. That's why I'd kept the Peacemaker with me. I figured if it wasn't outlawed then there might be a reason to carry one. Good thing too.\n\n\"No, it's with the rest of your gear at Hattie's,\" he replied, scratching his white-haired head and frowning. \"The only reason why I have my Spenser with me is because some hooligans galloped through the edge on town on my way to her place making a ruckus. This used to be a quiet town, but ever since the old marshal got married and left town it's been getting rough. Well, that and the arrival of certain troublemakers.\" I nodded in understanding.\n\n\"I'll be back shortly with the doctor.\" I was halfway to the door when Abigail caught up to me. William was holding Billy now.\n\n\"Josiah, be careful,\" she said, touching my shoulder in a way that sent shivered through me. It was the first time she'd used my given name. I liked the way it sounded when she said it. Who was I kidding? I loved it. It also scared the hell out of me.\n\n\"I always am Mrs. Collier, I always am, but what happened to being safe?\" She frowned at the reminder of what she'd said about using my first name while we were walking to the hotel and dropped her hand from my shoulder, but then she smiled and shrugged.\n\n\"You might as well call me Abigail after what we've just been through together.\" I looked at her and shook my head. She'd clearly come to a decision about us despite my earlier warnings about me not being the settling down type.\n\nThat made my heart beat a whole lot more erratically than it had a few moments earlier. I knew what it meant, but it didn't mean I had to act on what I was feeling. Abigail deserved better than a wandering soldier.\n\n\"Been through together? I just stood there pointing a gun. You did all the real work. Besides, I'm pretty sure calling you by your first name is far more dangerous for a man like me than facing down the Murphys.\" I was afraid she'd be offended or hurt. Instead, Abigail laughed.\n\nI tipped my hat and left before I could say anything more. It wasn't nearly as simply as it sounded.\n\nThe doctor was tougher to track down than I expected, but at least I didn't see hide nor hair of any of the Murphy boys while I looked. That was something. Eventually, I found and led a doctor who seemed more like someone's kid brother than a practicing physician back to the hotel. I watched him while he worked on Miles.\n\nDoc Jenson might have been young, but he was clearly competent. I'd seen enough doctors at work after a battle was over to get a sense.\n\n\"He should be fine with some rest, but don't move him from this room for at least a week. The boy's taken quite a beating.\"\n\n\"Thank you, doctor,\" Clementine said, sounding far more controlled than usual. I understood, but found myself missing the old, more innocent version of her. \"Grandfather has already send someone out to the Phillips' farm to let them know what happened.\"\n\nI walked the doctor out of the room and made to pay him, but William was outside waiting and refused to allow it. He finished walking the doctor out of the hotel and I'm sure, settled the bill.\n\n\"So, are you going to make an offer for Domino or not?\"\n\nThe question came from out of the blue and made me laugh. We were on the second floor of the hotel. You could look down at the first either over or through the wooden railing that was really just an extension of the banister. Abigail had been doing the former before turning and asking her question while Billy had his face pressed against the railing doing the latter. It was a sign of how tired I was that I didn't notice either of them until she spoke.\n\nI hadn't slept much the night before. I guess between that, the long ride into town and the confrontation with the Murphys, it made sense. It didn't help that I was hungry too.\n\n\"Why don't we discuss it over lunch?\"\n\n\"It's long past lunchtime.\" Her words were delivered in an offhand manner, but the look that followed was anything but.\n\nAbigail was smiling at me in a way that let me know she hadn't changed her mind about her earlier decision about us. She wasn't some infatuated teenager. Abigail was all woman, and a beautiful one at that. She knew her mind and wasn't shy about showing it.\n\nSuddenly, I was wide awake once more. I found myself swallowing with some difficulty. It was impossible not to react to the way she was looking at me. Abigail's deep blue eyes lit with amused enjoyment as she saw what she was doing to me.\n\nI called her a dangerous woman earlier and it was certainly true in more than one way. I hadn't forgotten, but in that moment, I simply didn't care. I took a step toward Abigail and the amusement in her expression began morphed into something different, something warm and welcoming.\n\n\"Momma, I'm hungry.\"\n\nI froze in surprise. How could I have forgotten Billy? Only, I don't think I so much forgot the boy as much as allowed the promise in his mother's eyes to overwhelm my common sense. I was pretty sure that the embarrassment in Abigail gaze meant she done something similar, and suddenly we were both laughing. Billy clearly didn't understand. I didn't blame him.\n\n\"Let's go down to the caf\u00e9 and get an early dinner,\" I said, shifting away from the strawberry blond and holding my hand out to the boy. It was a lot safer that way. Billy took my hand and smiled as I added, \"Maybe we can convince your grandpappy to join us.\" Abigail took his other hand and we moved to the stairwell.\n\n\"We'll need to bring something back to the room for Miles and Clementine. He can't be moved and she won't leave his side.\" I nodded in agreement and let go of Billy's hand when we reached the stairwell. It was too narrow for the three of us to use together, but that was only part of the reason. I stepped in front of them and went down the stairs first, my hand resting very near my gun belt.\n\nI was on edge and knew it. Some instinct told me to be careful and I wasn't about to ignore it. Hell, I'd survived all my years because I always listened to my instincts. They seldom led me wrong and right now they were screaming. Alby had promised what happened wasn't the end of it and I believed him.\n\nOn the other hand, I wasn't going to worry myself into a stupor either. If the young man tried something, I'd be ready. He was younger and probably faster, but I was more dangerous and experienced. I'd dealt with his type before. I doubt very much that he had mine. The proof being he was still standing.\n\nWilliam did join us for dinner. The meal was good and the conversation almost normal. Still, I wasn't the only one keeping an eye on the main entrance to the hotel.\n\n\"Billy and I will take dinner up to Miles and Clementine,\" Abigail said when we were done eating. \"Thanks for the meal.\"\n\n\"My pleasure,\" I smiled and then turned to her son. \"See you later Billy.\" The boy nodded, but I doubt I'd see him again tonight. He looked half asleep already. I shifted my gaze back to his mother and added respectfully, \"Mrs. Collier.\"\n\n\"Abigail,\" she corrected, making me smile. Not that I was going to call her that. I's already proven on the balcony overlooking the lobby that I couldn't be trusted with her. The two went back upstairs, leaving William and I alone at the table.\n\n\"You know, you don't seem the type to be happy in a place like Ohio,\" William said into the silence that followed. \"You could come back and settle down after you visit your sister. There still plenty of land to homestead nearby, and I wouldn't mind having you as a neighbor.\" He paused, but I had no idea what to say to his offer.\n\nThe reason why I actually considered his idea was beyond me. Oh, I knew it was because of Abigail, but I wasn't the right man for her and I knew it. William nodded as if my lack of reaction was answer enough. \"And who knows? My Abigail could do worse than a former soldier.\"\n\n\"I really don't understand why you'd think that after only knowing me for a day.\" Maybe I was being too blunt, but the man had left me little option. William paused briefly and scratched his fingers through his thatch of white hair before answering.\n\n\"I guess maybe you're right. I know I'm pushing I might hard.\" He only sounded mildly apologetic. \"If you don't find her attractive...\"\n\n\"Abigail is beautiful,\" I interjected in annoyance. The old man smiled. I knew full well he was playing me, but I couldn't help coming to her defense. \"But that's not really the point.\"\n\n\"Maybe, maybe not,\" he shrugged. \"Still, you'd be amazed at how many men don't see it. They can't get past her scarred face or choice to wear men's clothes.\"\n\n\"I've got my own scars.\" I remembered the first time I saw Abigail. Her marred face was a surprise, but didn't affect me nearly as much as her deep blue eyes.\n\nMy mind drifted to a more recent memory. It was Abigail standing next to the railing upstairs smiling at me as she asked if I was going to buy Domino. Her scarred cheek didn't even enter my thoughts. How could it with the way she was looking at me?\n\nI'd stepped toward her, ready to do what we both wanted. There'd been warmth and welcome in her expression, but also anticipation. I could still picture Abigail as her breathing sped up, making her chest heave slightly. The swell of her breasts shaped the men's plaid shirt she wore into something far too enticing. If not for Billy's interruption...\n\n\"And men's clothes or not, your niece will never look manly.\" I came out of my daydream somewhat embarrassed by what I'd said so I quickly added, \"Besides, clothes don't make a man or woman. I've seen officers in immaculate uniforms who ended up being monsters and savages in buckskins or less who were some of the most noble men I've ever met.\"\n\n\"Exactly,\" William said meaningfully. We fell silent with the old man watching me and waiting.\n\n\"Do you really think that the fact that I find your niece attractive is a good enough reason for me to settle down here?\" I eventually blurted out.\n\n\"It's a start,\" he replied with a shrug, but then sighed and shook his head. \"But there's more to it than that and you know it.\" He waited for me to react again, but I refused this time. We sat in silence for a bit before he continued.\n\n\"It's no secret that Abigail's life hasn't been an easy one,\" William said slowly. \"It's not my place to tell you the details, but you're not a stupid man. You know she's faced too much. You also know she survived it.\"\n\n\"More than survived,\" I said, half to myself. \"She came out the other end stronger.\" That caused the old man to give me a calculated look before continuing.\n\n\"Most people don't see that. All they see is a woman scarred and not quite normal, maybe even dangerous.\"\n\n\"Definitely dangerous,\" I corrected. \"But that's not always a bad thing.\" I'd seen the fear in Abigail's eyes when we walked into the hotel and took in what was happening. I also saw how it morphed into something far more useful. She'd knocked Thomas Murphy away from Miles, faced down the giant Jeremy and dealt with Luther. \"Your niece was the only reason why this afternoon didn't end up with a whole lot of people getting hurt or worse.\"\n\n\"Not the only reason, but certainly one of them.\" William was obviously remembering the danger to his family based on his expression and the fact that he tensed up some. He shook his head, clearing it before continuing. \"Her dangerous side doesn't scare you.\"\n\n\"No, it doesn't,\" I admitted, remembering my ex-wife again. Her rich family had spent the money necessary to make the divorce happen, not that I fought it. \"Frankly, I find it refreshing. The territories are no place for damsels in distress.\"\n\n\"True,\" the old man agreed easily. I wasn't obvious to the fact that he was watching me again. It made me damned uncomfortable, but worse than that, it made me think about my feelings for Abigail.\n\n\"Of course, none of that would matter if not for one thing,\" he said, standing and readying to leave me to my thoughts. I looked up at him and waited. \"Abigail's been living here since just before Billy's birth and you're the first man she's shown interest in. The boy likes you too.\"\n\n\"He's a good kid.\" It was the safest answer I could give. William smirked knowingly, but then let it go.\n\n\"I'm going to stop by Hattie's and let her know we're spending the night at the hotel. She should be fine with us leaving our gear there, but I'll make sure,\" he said, changing the subject. \"I'll also pick up the Henry and your Winchester.\" He didn't mention Alby and the possibility of him returning with some friends. There was no need. William left and I paid the bill.\n\nRobert Washington and his wife were just entering the caf\u00e9 while I was leaving. I guess they decided on a night out to celebrate his homecoming. I didn't salute again, but I did nod in greeting. Robert stopped for a moment and let his wife move ahead.\n\n\"I heard you had some trouble with the Murphys earlier.\" It wasn't really a question, but I answered it anyway.\n\n\"The youngest son and cousin. Thomas beat on Miles pretty badly after Alby pistol whipped him. Some of their friends held Clementine and Billy while it happened.\" I shook my head at the memory. \"It was pretty ugly there for a while. Alby held everyone else back at gun point while it was happening and had the look of a man hoping someone would try something.\"\n\n\"Oh, he was,\" Robert said confidently. \"Alby Murphy's is a cold-blooded killer. He's one of those ones who likes it too.\"\n\n\"Yeah, I've seen the type before.\" The former cavalry man and I exchanged a look, but didn't need to say anything more on the subject.\n\n\"Rumor has it that his father sent him out here to live with his uncle and cousins because of some trouble back home. I hear the man got tired of cleaning up after the boy and dumped him and the worst of his friends on his younger brother Michael because it started affecting his business.\"\n\n\"Wouldn't surprise me.\" Robert hadn't stopped just to say hi. He wanted me to know just how dangerous Alby Murphy was. I'd pretty much figured it out already, but the thought was appreciated.\n\n\"Alby supposed faced down two men and killed them both in the middle of the street. They say both were dead before they even drew their guns,\" the Ebony skinned man added. \"I don't know if it's true, but I've seen him draw. He's fast. Fastest I've ever seen.\" I nodded in understanding.\n\n\"It's a shame about Thomas.\" The subject change was abrupt, but understandable. Robert wasn't one to harp on an issue. He'd given his warning. \"He used to be the best out of the bunch, but ever since his cousin showed up it's been a completely different story.\"\n\n\"So, I've heard.\" It was probably a case of hero worship gone wrong. If the boy didn't mend his ways soon, he'd be a lost cause. Probably get himself killed too. That was sad, but not my problem. \"Well, enjoy your dinner, and thanks for the warning. You be careful too, because that boy ain't right in the head. He's as likely...\"\n\n\"Yeah, I know,\" Robert interjected, pulling a sawed off, double barreled shotgun out from under his coat. \"That's why I'm carrying this. Probably a waste of time, but it pays to be prepared.\"\n\n\"Yes, it does,\" I smiled, shaking the man's hand once more and moving to the hotel lobby. I ordered a drink at the small bar and found a place to sit, lost in thought until Abigail came down and joined me. She settled into the chair on the other side of the small end table where I'd put my half-filled glass earlier.\n\n\"Billy passed out in the room with Miles and Clementine. I left him there. Figured it was safer to have the three of them all in one place.\" I nodded in agreement as she lifted my glass from its resting place and took a drink. I watched the way her lips pressed against the rim. She saw and smirked. Abigail obviously liked the way she got to me.\n\n\"Your uncle went to talk to Hattie and make sure leaving the wagon and our gear overnight is okay. He also promised to pick up my Centennial. That will make me feel a lot better.\"\n\n\"The Henry too?\" she asked, and smiled in relief when I nodded. It reminded me how comfortable she looked with the rifle. I'd originally thought it was William's, but now I wasn't so sure. He was attached to his Spenser. The Henry could be Abigail's. She was definitely the type to own one.\n\nI took the glass from Abigail's hand, took a sip and handed it back. I noticed her watching me while I drank, but didn't comment. Still, it was nice to see the attraction was mutual.\n\n\"Now, exactly how much are you asking for Domino?\" I needed a distraction."
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "literotica writers go west story",
        "go west",
        "old west",
        "gunfight",
        "romance",
        "western romance",
        "historical romance",
        "old west romance",
        "drama",
        "love story"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/great-and-terrible-things"
}