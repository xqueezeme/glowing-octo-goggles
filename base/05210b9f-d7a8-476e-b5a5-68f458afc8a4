{
    "title": "Lilith's Emporium Pt. 03: Night w/Nessira Ch. 03",
    "pages": [
        "Alan awoke dazed and confused as to what had just happened. He remembered walking into the shop and not seeing anyone inside. That sexy redhead was nowhere to be found until he turned around and saw her standing there with a smile on her face before she sprayed him with something that caused the room to start spinning and he fell to the floor before everything went dark. Now he found himself in a dark room with what looked like some sort of enchanting table near a pot over a fire. He looked down and saw he was naked and chained to a wooden platform that was holding him upright. Another thing he noticed was his cock was hard and sticking straight out in front of him. \n\nIt was actually kind of uncomfortable as he really needed release but he then noticed something terrifying on the floor a few feet away from him. There was a large flower pot with some sort of black plant with red veins flowing through it. The head was long with a hole in the tip that was just big enough to fit his cock but was filled with what looked like razor-sharp teeth. It began to growl a little like a small dog would as it started biting like it wanted to bite his member.\n\n\"Beautiful isn't it?\" A woman's voice said as he raised his head a little more to see someone sitting in a chair behind the plant. \"This was a forest nymph before I had a friend of mine corrupt it into something far more deadly, but yet still an amazing and beautiful creature.\"\n\n\"What do you want from me?\" He asked watching the strange little plant creature.\n\n\"Where are my manners, I am Nessira but maybe you already knew that, and you are?\"\n\n\"Um... my name is Alan.\"\n\n\"Well Alan, you see I've noticed you watching my shop for weeks now, driving by and scoping it out, scoping me out, so here's what we are going to do, I am going to ask you some questions and if I don't like your answer I am going to slide my little pet here a few inches closer to you, so if you make me mad I will get him close enough to start biting off your manhood.\"\n\n\"Oh shit, please don't kill me, I'll tell you anything!\"\n\n\"Oh I'm sorry I should have mentioned, I am going to kill you, but your death can go one of 2 ways, I can let this thing eat your cock and let you bleed to death, slowly and painfully, or I can show you so much pleasure your heart will stop, it's your choice.\"\n\nAlan gulped listening to his options of death. He looked around seeing if there was any way to escape this nightmare but there was not. He was at the mercy of this beautiful woman and her carnivorous plant.\n\n\"What do you want to know?\"\n\n\"First off why were you here today?\"\n\n\"Oh, I was looking for a gift for someone, my girlfriend.\"\n\n\"You see, I don't like that answer.\" She said taking her foot and sliding the plant a few inches closer. \"Now again. Why were you here today?\"\n\n\"I wanted to see you, up close I mean.\"\n\n\"Go on?\"\n\n\"That's why I've been watching the shop, I've been working up the nerve to come in and ask you out.\" He said waiting for her response.\n\nShe slid the plant even closer as it kept biting at the air like it could tell his cock was getting closer. \"Keep trying.\"\n\n\"I... I um...\" he said as she slid the plant even closer than it was literally inches away biting towards him to the point it could feel its saliva or whatever it was spraying on his throbbing member. \"Okay okay, please, I'll tell you!\"\n\n\"Well, I'm waiting.\"\n\n\"I was hired to watch you, and watch the shop and report back what I saw.\"\n\n\"Really, to whom?\"\n\n\"I don't know.\" He said as she put her foot back on the pot ready to push it forward. \"Seriously I don't know, he called me out of the blue and wanted to hire me for this, I do little jobs like this, I'm a thief, a con artist, he found me but he didn't tell me his name he just transferred the funds into my bank account and gave me a number to contact him, he never said his name even when I asked him.\"\n\n\"Hmm, do you have any useful information about him?\"\n\n\"In my wallet, in my pants wherever you put them, there's a card with the number on it.\"\n\n\"Right here.\" She said suddenly holding his wallet in her hand.\n\n\"There's a blank white card with a phone number written down.\" He said as she looked through.\n\nNessira pulled out the card to look at it but it burst into flames the moment she touched it. \"Interesting, your employer is some sort of warlock I see.\"\n\n\"Please, I didn't know it would do that!\" He said panicking a little.\n\n\"Don't worry, that told me enough.\"\n\n\"I didn't know what he wanted, I was just supposed to watch you but you never leave this place, I assumed he was some stalker who had the hots for you, please don't let that thing bite my dick off!\"\n\n\"One more question, do you find me attractive?\"\n\n\"I uh...\"\n\n\"Interesting answer, you hesitate with a dangerous creature seconds away from biting your dick off?\"\n\n\"Please, its just you have me at your mercy, if I said yes right away it would seem like I'm just telling you what you want to hear.\"\n\n\"I see, you are smarter than you look, but I like your answer so that buys you a few inches.\" She said pulling the plant back letting him relax a bit. \"Now, do you want me?\"\n\n\"Of course I do, you are stone cold gorgeous, any guy would be lucky to have you even for a few minutes.\"\n\n\"That's a very good answer, you get a few more inches.\"\n\n\"I mean it, seeing you were the best part of this job.\"\n\n\"Okay you can stop now, I think I've made my decision.\"\n\n\"Are you gonna let me go?\"\n\n\"Oh heavens no, but you have earned some fun.\"\n\n\"Fun?\"\n\n\"You see I put a spell on your cock that makes it so no matter how many times you cum you will never be satisfied, also unlimited semen as well which is what my little plant here and some other pets of mine need.\"\n\n\"Wait, I thought that... please don't!\"\n\n\"Don't worry, it just needs a little to transform.\" She said getting up from her chair and walking over to him.\n\nHe watched this beautiful redheaded woman walk towards him and he couldn't help but notice every sexy curve on her. Her dress hugged her body perfectly and even if he didn't have some sort of strange magic spell on his cock it wouldn't take much for him to be turned on by her. She pulled the plant closer to him but still not close enough to bite him before she placed her hand around his cock and began stroking it gently. Alan tilted his head back enjoying her touch. Despite the situation he was in he couldn't help enjoy the feeling of this beautiful woman stroking him off even though he wasn't sure what his fate would be. It didn't take long to get him to orgasm. The plant had opened its mouth wide ready to receive his cum as his cock began to twitch and he blew a load out letting the plant swallow every bit of it as his orgasm was much stronger than usual. His cock squirted many time which he assumed was due to the spell she had mentioned but it eventually stopped and he started to catch his breath.\n\n\"See that was fun wasn't it, don't worry, you will cum many more times before I'm finished with you, but first see what you helped create.\" She said pointing down at the plant as it began to grow sprouting vines and becoming taller.\n\nThe pot shattered as it continued to grow sprouting what looked like arms and legs until there was a humanoid figure standing before him. It looked like some sort of elf as the ears were pointed but her skin was still very dark with red veins all over her body that faded in areas. She had large shapely breasts but not too large and her hair seemed to be the same red color as her veins, she also had eyes that seemed yellow and not human. There were two large horns sticking straight up out of her head almost a foot tall and a long tail sticking out of her back with red fur on the end of it.\n\n\"Wow, Isn't she Beautiful?\" Nessira said gazing upon her new pet. \"I think I'll name her Shadow!\"\n\n\"Oh my God!\"\n\n\"Now, have some fun with him, he's earned it,\" Nessira said before she walked out of the room leaving Alan there with this sexy dangerous looking nymph as she approached him licking her lips and showing off the same razor-sharp looking teeth that she had as a plant while she smiled.\n\nAlan feared for his life as she pushed the wooden table he was chained to down in a flat position before climbing on top of him. She licked her hand before rubbing her saliva all over his cock. It was warm almost burning a little, not enough to hurt but it made his skin tingle. She kept smiling before she positioned herself above him. He looked down fearing her pussy might also have teeth but when she lowered herself onto him but he slid in with ease and it felt warm wet and soft. She let out a strange little moan closing her eye's as if enjoying the sensation.\n\nWhatever Nessira had done to him his cock was ready to go again as if being jerked off moments ago had never happened. The creature began to move her hips slowly at first enjoying the sensation and running her fingers along his chest scratching him a little as she did. He felt the inside of her tighten like a snake coiling around his cock squeezing it as it slid between her wetness. It was an amazing feeling and he couldn't help but moan himself as this creature continued to fuck him.\n\nShe leaned down on top of his chest sticking out her tongue which was long with a pointed tip like a snake almost. She traced it up his chest and across his lips living a tingling sensation on his skin. Her tongue ventured further down leaving a layer of her spit along his nipples which tingled and burned at the right amount that it increased his pleasure as he bucked his hips right before he blew his load inside her. She let out a strange screeching sound as her pussy tightened and sucked up every last drop he had to give her. He shot much more than usual but enjoyed every second of it thinking this woman was going to pleasure him to death with her pet here or maybe even other creatures.\n\nAlan laid there as she climbed off of him. His cock was still hard and ready to go again and she was lowering her face down towards it sticking her tongue out and wrapping it around his shaft. The saliva coated his cock along with the wetness from her pussy and it was an amazing feeling almost too much to handle. Her tongue was like a wet snake as she stroked his cock with it trying to get more from him. The whole time he was nervous about those sharpened teeth inside her mouth and what she was planning to do to him but he was enjoying so much pleasure he almost didn't care. Her hand slid under his balls gently caressing them making him buck his hips up and moan out as she continued to have her way with him. She could sense he was about to cum and wrapped her lips around the tip letting his warm seed shoot into her mouth so she could suck up all of it before she let go.\n\n\"So are we having fun in here?\" Nessira said walking back in through the curtain.\n\n\"Oh fuck, she's so...\"\n\n\"Yes she is, this is what happens when you let a forest nymph youngling feed on the cum of an ancient god, do you like her?\" She asked him as she ran her hand through the creature's hair letting her rub against it like a cat.\n\n\"She's an interesting creature to say the least.\"\n\n\"That she is, you'd be dead by now if I hadn't placed that spell on you.\"\n\n\"Are you still going to kill me?\"\n\n\"Of course I am, but that doesn't mean we can't have some fun first, now let's see, what else do I have that needs a good feeding?\" She said walking out on to the shop floor again before coming back in holding a small bottle of a green liquid.\n\n\"Please, please don't kill me.\" He pleaded hearing her say it again.\n\n\"Look, the more useful information you give me the longer you will live, don't look at this as a punishment, I am going to give you the best last day of your life.\"\n\n\"But I...\"\n\n\"But what? I am offering you pleasures nobody has ever felt before, even if I let you go now you'd be back here begging me for more, trust me, I am being merciful here.\"\n\n\"What is that?\" He asked unable to do anything about it if he tried.\n\n\"This is a very interesting little creature, similar to water nymphs with a few alterations, now we can make the pleasure last longer if you tell me more, anything at all you think would be useful, or I can just take this knife here and kill you now?\" She said holding up the curved blade with a gold handle holding it near his crotch.\n\n\"Um I um... my phone, check my phone, the number may still be in there, the same number from the card.\" \n\n\"I already checked, your phone exploded!\" She said bringing the blade closer to him.\n\n\"There was a name, he wanted me to look into as well but I never got a Chance.\"\n\n\"What was the name?\"\n\n\"Patrick, he said he'd tell me the last name when I was ready to start watching him.\"\n\nNessira squeezed the handle of the knife getting closer to his balls when she said: \"and when was that going to be?\"\n\n\"I was enjoying seeing you so much I never bothered to check him out, I have no information about him because I don't know anything.\" He said praying she wouldn't use the knife on his member but she had a red glow in her eye as she stared at him. \"You have to believe me, I wasn't interested in following some guy around, it was more fun to watch you.\"\n\n\"I see, did you ever masturbate watching me?\" She said suddenly smiling at him.\n\n\"What, no of course not!\"\n\n\"Really, you never imagined what it would be like to fuck me, to feel my warm wet pussy around your cock?\" She said as she watched his cock twitch as he thought about it. \n\n\"I um, I... not while I was watching you, when I got home maybe.\"\n\n\"Maybe?\"\n\n\"What do you want me to tell you?\"\n\n\"I want to know how badly you want me, because I am considering finishing you off myself.\n\n\"I... it was strange, like I could see you in my mind and it made me cum in a matter of moments.\"\n\n\"Very good, succubi have that effect on men.\" She said opening the bottle and grabbing his cock before pouring the contents all over his throbbing member.\n\nIt was a warm viscous fluid as it covered every inch of his cock. As it poured down it seemed to stop and harden a little leaving a gooey green residue around his cock like it was trapped in a jello mold. The creature who had had its way with him before had seemed to go off to the corner of the room and laid down in a small bed and gone to sleep as if she had gotten what she needed from him.\n\nHe watched her before he felt a strange sensation from the slime on his cock. He looked back and saw the goo had seemed to be pulsing around his member and it felt nice. It was like his cock was getting massaged by the blob or something but he couldn't help but enjoy what he was going through as Nessira watched with a smile on her face. She grabbed his balls and gently played with them which felt amazing as the slime continued to pulse. The feeling was intense and it wasn't long until he blew another load into the goo which seemed to absorb it into itself.\n\nOnce he was done he watched as the blob of slime began to grow and change shape getting bigger and surrounding his cock and his waist. It sprouted two tentacles from its sides which transformed into what looked like arms and hands. Two large mounds formed on the front which looked like breasts and then a head popped from the top and there was suddenly a green goo girl straddling him. He could see his cock inside her stuck and at her mercy.\n\n\"What the fuck!\" He said looking on in amazement.\n\n\"Haha, isn't she gorgeous, it's not very often I have a penis here to do with as I please.\"\n\n\"I can't think of a guy who wouldn't enjoy this.\"\n\n\"Yes but then I have to kill them, just like you.\"\n\n\"But I gave you...\"\n\n\"Shhh, its okay trust me, when I am done with you you'll have nothing left to live for, now enjoy yourself.\" She said walking away again leaving him at the mercy of this new sexual creature.\n\nHe wasn't sure what she was going to do but he started to feel a tight feeling around his cock like the slime was squeezing him. He looked down and saw his foreskin sliding up and down inside her but she wasn't moving at all just smiling and giggling as the goo milked his member. It was starting to feel very good but he couldn't move his hips as she was holding him down. She began to lean forward getting her breasts closer to his face. He tilted his head forward but he was unable to reach the amazing green boobs inches from him as she began to jiggle them in front of him. The rhythm around his cock suddenly sped up and he let out a yell as his cock began to shoot more of his white goo into her as she absorbed it into herself.\n\nHe wasn't sure how long he was on that table or how many orgasms he had but it seemed to go on for hours. Over and over again the slime squeezed his cock and milked more and more out of him but the spell Nessira had on him made his balls and an endless reservoir of cum and no matter how many time he orgasmed he wanted more. It was getting maddening but it still felt incredible. After a while, Nessira came strolling in watching the nymph milk another glob of cum from him. She watched his cock twitch inside her before a milky white color flowed upwards disappearing into a sea of green as Alan was covered in sweat not sure if he was being tortured or was in heaven.\n\n\"How was it?\" She asked looking down at him.\n\n\"It was... it was... fuck!\"\n\n\"Don't worry, I am almost done with you.\" She said giving him a gentle kiss on the lips.\n\nShe looked up at the water nymph who slithered off of him leaving a green residue all over him before she slid into a bucket. Alan wasn't sure what he had left after cumming for hours but his cock was still rock hard and ready for more.\n\n\"Please make this stop!\"\n\n\"It's alright, I think you've had enough, just one more okay?\"\n\n\"One more?\" He said barely able to keep his eyes open.\n\nSuddenly the room had changed and he was laying on something soft. He looked and realized he was no longer chained to that table and was in a bedroom with red curtains all over the walls and laying on a large comfortable bed. He was still naked and his cock was still sticking straight up ready for release when through the curtains Nessira came in wearing a bathrobe and sitting on the end of the bed smiling at him.\n\n\"Are you ready for this to be over?\"\n\n\"I... I don't know.\"\n\n\"Well, I am going to give you a choice.\"\n\n\"Choice?\"\n\n\"Uhuh, you can leave,\" she said raising her hand and the curtains opened to reveal his car outside \"you can leave and the spell will wear off and you can go and live your pitiful excuse of a life, or\" she said standing up and removing the robe letting it fall to the floor and showing off her amazing naked body. \"You can have me.\"\n\n\"And... my death?\"\n\n\"It is said there is no greater pleasure than death by a succubus.\"\n\n\"I... I don't know.\"\n\n\"Well let me move aside, your freedom is there in front of you, unless you want something else?\" She said running her hands along her body showing off to him as he stood up and glanced at the exit then back at her.\n\nHe stared at her and wanted nothing more than to shove his raging cock inside her and fuck the shit out of her. He looked at the exit and thought about escaping and ending this horrible spell he was under but he hesitated. He looked back over to her as she was suddenly standing right next to him looking like the sexiest thing he had ever seen as she traced her fingers along his shaft smiling at him and sending shivers through his body.\n\n\"Fuck it, I've had a good life.\" He said pulling her close and kissing her before they both fell on the bed together.\n\nShe tasted amazing and her skin was soft and warm as she rolled him over pinning him beneath her and smiling at him before saying \"wise choice.\"\n\nShe lowered her head down kissing his lips then working her way down his chest slowly taking her time kissing his skin over and over again until she approached his cock which was there waiting and begging for her to touch it. She looked it over before tracing her tongue up his shaft making his body shiver with delight. She started tracing her finger along his shaft again and just smiling up at him teasing him.",
        "\"Oh fuck! That feels so...\"\n\n\"I am going to make this last as long as I can, you will be the first man to die at the hands of Nessira the Red in a long time.\"\n\n\"I feel honored.\"\n\n\"You should, I used to take pleasure in tearing the lives of men from their bodies, fulfilling their wildest fantasies and leaving them an empty corpse with a smile on their face.\"\n\n\"Why?\"\n\n\"I'm a succubus, It's what I do, and it's time the world remember that.\" She said grabbing his cock and licking the tip a little driving him crazy before lowering her mouth onto it tightening her lips and slowly raising her head back up before doing it, again and again, making him buck and moan at the sensation. She grabbed his balls and gave them a gentle squeeze while rubbing the skin between his balls and his asshole with her her finger making him moan even louder. Alan felt like he was trapped in purgatory with a porn star who knew every trick in the book. She would bring him to the brink of orgasm and then stop and let his cock calm back down. Her tongue was talented and her lips were soft as she continued to have her way with his cock.\n\n\"You want to cum so badly don't you, even though you know what that means, every time I bring you to the edge in your mind you are begging me to let you cum, but not yet, I'm not done with you yet!\" She said as her eyes flashed red and she started working on his cock again bringing him even closer to the point cum was dribbling out of him but he wasn't quite having an orgasm yet.\n\nIt was amazing and horrible at the same time. His mind was conflicted as he wanted nothing more than to cum but he knew once he did he was going to die. He had never been with a woman this beautiful or talented before. She tortured him so much he almost wanted to grab his cock and finish himself off if he had to but he could not.\n\n\"There we go, your cock is ready to explode, giving me your seed and your lifeforce, but you want me to have it don't you, you want me to take it because when I do you will feel pleasure that will shatter your soul and complete your existence.\"\n\n\"Oh Fuck yes!\"\n\nShe let go of his cock and climbed up towards him with red eyes and a devilish grin on her face. She took his cock again and squeezed it between her breasts before she pushed them together and began to slide them up and down his shaft. She released him and began kissing and biting his chest sliding closer to his face. She finally got up face to face with him biting his bottom lip a little as he could feel the heat of her pussy hovering above his cock. He waited and prayed she would lower herself soon as he thrust his hips forward but could just barely reach her opening. She lowered herself gently teasing the tip of his cock again with her soft pussy lips driving him crazy.\n\n\"Are you ready?\"\n\n\"Yes, please fuck yes!\"\n\nShe lowered herself and her pussy engulfed his throbbing member letting him slip inside her. He almost blew his load right then and there but she must have done something to stop it. She began to move her hips milking his cock as their lips connected and his arms began to feel her whole body. She was everything he could have ever wanted, her skin felt amazing and her scent was intoxicating. Her lips were perfect and tasted incredible and he suddenly didn't care about dying anymore. If dying while emptying the contents of his balls into the beautiful seductress meant his death then so be it.\n\nShe pushed herself up straddling him as her breasts bounced in front of him. He pulled himself up burying his face in them, kissing them and sucking on them as she ran her fingers through his hair. She started to think of Patrick and how she missed how he was able to please her sexually. She was going to enjoy sucking the life out of Alan as it was a pleasure all its own but Patrick just knew how to pleasure her in a way no man has in a long time, but that was over and she knew it had to stay that way.\n\nAs Alan got closer to orgasm she could sense it and pulled his face up to look at her as she kissed his lips before whispering \"it's time.\" \n\n\"Oh god, I'm ready.\" He said as his cock was so close to jizzing his own life away.\n\n\"I am going to count to 3 and then this will end.\"\n\n\"Oh yes please!\"\n\n\"One.\" She said as he moaned feeling his cock pulsed as if under her command. \"Two.\" His member pulsed even harder feeling like it was ready to explode holding right on the edge of orgasm and no matter what he did he couldn't get there. She leaned in close to his ear kissing the side of his neck a little. He could feel her breath and nothing more as the world around him fell silent and he waited for her merciful permission to cum. \"Three!\"\n\nTime seemed to slow down as there was a sudden tingling of orgasmic delight that started in his cock and spread throughout his entire body. He could feel his soul being wrapped in warmth as if pleasure was a blanket wrapping it up before pulling it out of him through his cock. She listened to him scream as his cock erupted inside her and she sucked everything out if him almost envying the pleasure he was feeling as she held him tight and felt the life drain from his body and into hers. It was a sensation she hadn't felt in a long time and couldn't help but enjoy as his very essence filled her.\n\nSoon his lifeless corpse was in her arms before she let him go letting him fall to the bed with his eyes stuck open and a smile on his face. She climbed off of him enjoying the meal as she grabbed her robe and put it back on. She stretched and turned back to the dead man on her bed and smiled.\n\n\"Well, you went out better than your boss will when I'm done with him.\" She said heading back down to the shop letting her robe turn into a dress as she went.\n\nWhen she got downstairs she noticed the mail had arrived and saw a small envelope made out to her and not the store. There was something small and hard inside it which made her curious as she opened the letter and saw a dried out bloody tooth fall out of it and land on the counter. She was a little disturbed by what she saw but then when she read the letter is said.\n\n\"Nessira\n\nI see you've captured my spy, I'm sure he is dead by now and I hope you enjoyed him, I, on the other hand, have a friend of yours named Patrick, you see Alan was a decoy who was never going to find Patrick for me as I knew where he was all along, the tooth is just one part of him but if you don't leave your little protective shop and come to me the next thing I send you will be his balls.\n\nSincerely \n\nSomeone who is very eager to see you.\"\n\nNessira read this letter and her eyes began to glow brightly. There was an address on the bottom telling her where to go and she memorized it before the letter burst into flames in her hand and she let out a scream that shattered every window in the store and scared wildlife for miles. "
    ],
    "authorname": "maestro84",
    "tags": [
        "forest nymph",
        "succubus",
        "capture",
        "chained",
        "stalker",
        "water nymph",
        "bondage",
        "magic",
        "succubus sex",
        "penis spell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-night-w-nessira-ch-03"
}