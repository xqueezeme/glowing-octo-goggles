{
    "title": "TRC - Searching for the Sky Ch. 12",
    "pages": [
        "For those of you reading The Runesmith Chronicles for the first time I recommend going back and starting with the first book The Runesmith Chronicles (it's actually Oni and the Farmer but it's too late to change it here :P). Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters. Edited/Proofread by: oldfart and 2muchdiggity \n\n------\n\n\"Ready?\" Kal asked.\n\nThe gorgon looked around her home and nodded nervously, \"I am.\"\n\n\"Good there's only a couple more things we need to take care of. The first is this.\"\n\nHe gave the snake-haired woman a light shove sending her stumbling backward a couple of steps until she bumped into the wall behind her. She looked up in surprise and annoyance to see the mage holding a hand out toward her, the red strength rune shining. Stone rods extended from the wall and wrapped around her wrists and ankles, locking her in place. She cried out in alarm as a stone slab appeared next to her head and wrapped partway around her face, blocking her vision. Serpents with glowing eyes extended from around the mask and hissed viciously at him.\n\nIt had taken a couple of days, but Kal finally figured out what Gerda meant by pushing and pulling at the same time. The tendrils of magic he used to form the gorgon's stone manacles didn't look any different from those he made a few days ago but upon closer inspection, there were now four separate magic cords attached to the stone.\n\nAfter days with no progress, he had a flash of inspiration as he was watching the snakes of the woman's hair. In particular, a few of them liked to hold their bodies up and out from her head. The careful observation of these serpents gave him the answer needed. As the snake moved about, he saw how the muscles on one side contracted while the other side expanded, making the snake's body move much like Gerda's magic when she was showing him this new method. He then took a moment to call himself an idiot because it was the same way his own muscles worked, but with only a single pivot point at the joint.\n\nAt first, it still didn't work. Once his captor had fallen asleep, he had made dozens upon dozens of attempts with no success. He couldn't seem to figure out a way to push or pull without moving his hand. After numerous failures, he tried pushing more power into the bottom side of the tendril while leaving the top at a more normal level. The bottom part of the magical rope expanded, lifting the tiny piece of rock out of the crack in the wall. He'd waved it about in the air for a couple of minutes as he tested this newfound skill before accidentally dropping it on the floor down by his feet. He lay there for a few hours, frustrated with his carelessness until he remembered that he could just pull another pebble from the wall.\n\nPulling and drawing things toward him proved to be its own challenge. It consisted of strengthening all four parts of the tendril, then weakening three of the cables to tilt the piece of stone towards him, then repeating the process with each of the magical ropes in quick succession. By his last night, he had gotten fairly quick at it.\n\nNow he was using his new skill for some playful revenge.\n\nKal knelt down in front of the woman with his eyes closed. He hadn't made her mask particularly tight against her face and didn't know just how pissed she might be with him right now.\n\n\"What the 'ell are ye doin'?!\" she yelled at him. She was now terrified that she had severely misjudged the human and he was about to kill her. Her fears were alleviated when she saw him on his knees in front of her reaching for the bottom hem of her tunic.\n\n\"Just a little payback,\" he said, lifting the fabric and leaning forward. A very different hiss came from her as he extended his tongue and ran it over her lower lips, occasionally brushing over her clit lightly.\n\nThe gorgon wouldn't say she was happy with her situation, but if he was going to keep doing what he was, she was okay with seeing where this game would take her. He continued laving her sex, spending more and more time paying attention to the tiny pearl at the top of her pussy. Her legs were shaking as she panted and moaned from the wonderful sensations his tongue was bringing her. She had just begun to feel the tightness in her belly signaling an impending orgasm when he pulled away.\n\n\"The hell?!\" she shrieked indignantly while tugging at her bonds.\n\nKal stood and grabbed one of her nipples through the tunic, twisting it roughly and making the woman moan with desire. \"I have work to do,\" he said as he reached up and smoothed the surface of her shackles to a fine polish. There was no reason to let her scrape her skin raw if she wanted to struggle. \"I'll get everything packed up, you just wait right here.\" With a light pat on her crotch, he walked into the other room and called for the avatar of his bag of holding.\n\nHer nipple ached deliciously, the discomfort in the tender flesh sending jolts of pleasure straight to her sex. If he had twisted the other one as well she was certain she would have gotten off. She let out a frustrated groan, the dull pain from her breast wasn't letting her come down from being so close to climaxing. With a sigh, she leaned forward against the piece of stone covering her eyes.\n\nRia spun around to take in her surroundings as she flitted up to hover in front of Kal.\n\n\"How can I help you Master Kal?\"\n\n\"For starters, quit calling me 'Master'. To me you're a friend, not a thing,\" he said with a frown.\n\n\"Grumpy today, aren't we? However, I refuse. I will stop calling you 'Master Kal', but not until something special happens,\" she said looking up and down his body while biting one side of her lip.\n\n\"Seriously?\" he asked, unimpressed.\n\n\"Yes! Seriously!\" Her voice rose as she got angry from his lack of reaction, \"You keep telling me I'm a friend but still treat me like a thing! You have Kahrin and Silma and Sandy and all of the dog girls who you are only friends with but have no problems getting intimate with them. Then off to the side is the one you have traveled with the most over the last few months, me.\" Her face fell, \"After a couple of new owners, I won't remember you anymore. I look around and see how much they all like being your girls or one of your women. I... I guess I want to know what it's like too.\"\n\nKal looked down at the floor as he thought. After everything he had been through the last few days, Kal really wasn't in the mood to deal with this. He had to concede that she had a point. However, Marda, Ada, and all of the harpies were people he considered friends as well and would never lay a hand on them. He felt it would be best not to bring them up. He knew what she was asking and throwing the women whom he wasn't sleeping with in her face would only make her think that was the category she fell into.\n\nWhen he looked back up at the sprite, her face was nearly invisible with embarrassment and she'd brought her hands up to cover her mouth.\n\n\"I'm so sorry, Kal!\" she blurted. \"I don't know what came over me.\" Her expression became worried as Kal had yet to show any change in emotion.\n\nThe mage reached out and cupped his hand behind her back just below her wings then pulled her into his chest, earning a surprised squeak from the tiny woman. \"No, you're right. You're fundamentally different from all of the other women I've been with. That makes me more cautious with you than I need to be, judging by what you just said. I know you're impatient, but I need to ask you to wait.\"\n\nThe sprite sighed heavily, \"What am I waiting for?\"\n\n\"Look around the corner,\" he replied. Letting her go, he waved at the door to the room he had just come from.\n\nRia zipped into the other room, filled with curiosity. A few seconds later she came flying back, her eyes wide.\n\n\"What the hell, Kal? This isn't like you.\"\n\n\"I'm not hurting her, Ria. At least not in any way she doesn't like. This is going to sound awful but... I need this.\"\n\n\"What?!\"\n\n\"Before you jump to conclusions...\"\n\nThe mage took a few minutes to explain what had happened since he met the gorgon and what his experience had been like.\n\n\"And this?\" asked the avatar.\n\n\"I know. Revenge like this isn't my style and it doesn't sit well with me, to be honest.\"\n\n\"You said you needed it.\"\n\n\"In order to keep myself from resenting what she did to me, yes, I need this. It's only a fraction of what she put me through, but I think it's important for her to understand what she did to me and the rest of her victims.\n\n\"She's already given all of her belongings over to me. Store anything that isn't trash and keep an eye out for books. The gorgon said she put them in a small alcove just outside the cave after an unfortunate incident with a magic-user.\"\n\nWhen he asked the snake-haired woman about the lack of books in her cavern, she told him about a man who bolted at first when finally released from her gaze. At the exit of her home, he stopped and turned around looking for something. Seeing the pile of books behind her he ran back to get his spellbook, making her think that he was attacking her. Like so many others, she froze him with her gaze then bit him with the fangs in her mouth, not her hair, turning him to stone. She didn't realize until the man was completely petrified that he hadn't even been looking at her, his attention solely focused on the book. Since others had used the drawings and writing within the pages to attack her, she considered it a weapon and didn't give it back with the rest of their belongings. Moving the books out of sight made them assume their spellbook was lost and every magic user since had scanned the room then run back to the dwarves as quickly as their legs could carry them.\n\nRia nodded and flew out the exit in search of the books since she knew Kal would be most interested in them. Meanwhile, Kal wandered back into the room with the tent and the bound gorgon. Sensing his presence, the woman spat a string of dwarvish curses at him. The curses turned into a long moan as he knelt and put his tongue to work on her again.\n\n------\n\nAbout two hours had gone by and the gorgon hung limply from her shackles, a fine sheen of sweat covering most of her body from being kept on the very edge of orgasm for so long. Her hair had given up long ago and seemed lifeless as it hung from her head. She whimpered when she sensed him getting up from where he sat next to her. The human dropped to his knees in front of her and tears began pouring out of her eyes.\n\n\"No, please,\" she begged, \"I can'na take anymore. Please, stop.\"\n\nShe picked up on his moment of hesitation at her words and was filled with a flash of hope that he might let her go. Instead, the damnable mage leaned in once again. A moan of both pleasure and despair escaped her lips as his tongue teased her clit. Surely, this human was trying to kill her.\n\nAnother whimper escaped her lips as she approached the point where he would stop and leave her to suffer once again. She hardly got the chance to realize he wasn't stopping this time before his hands came up and painfully twisted her already tender nipples.\n\nThe gorgon's world exploded. Thrashing against her bonds, she shrieked at the top of her lungs as she came.\n\nKal's face went from a smirk to panicked worry as her back arched, nearly breaking his nose and pushing him backward with her pubic mound. Scrambling to his feet, he pulled his cloak over his head with one hand while holding the other out and shattering her shackles. Wrapping her in the cloak he gently guided them both to the ground, cradling the trembling woman who was still in the throes of her orgasm. He rocked her gently, massaging her bruised wrists and ankles and rubbing down her body as he kissed her face and whispered heartfelt apologies into her ear for taking things too far.\n\nHer expression was indescribable as she looked up at him. Fear, relief, desire, happiness, panic, hatred, love, he couldn't quite place how she was feeling. There was one exception. Hurt.\n\n\"W... W... Why?\" she asked, her body shivering.\n\n\"Because we needed to be on the same level before we set out,\" he replied, holding her tight and trying to share his warmth. \"This was very close to what I experienced each and every time you had sex with me over the last few days. Instead of being fun like it should be, it was more like torture.\" He clenched his teeth, \"As childish as this sounds. I consider us even now.\"\n\n\"S...Sorry I didn'na know. The first dwarves I met were the only ones I've frozen who talked ta me afterward,\" she explained, her voice getting stronger as she spoke. \"Didn'na really want ta do anything with 'em though, only humans.\"\n\n\"I'd guessed that. You don't come across as hateful, just trying to survive and enjoy your life as much as possible. Now that you've experienced something close to what you put me and the other humans through, I hope you will be a bit more careful the next time you do it. I want you to know that I will never do this to you again.\"\n\nShe nodded and wrapped the cloak around her shoulders tighter as he started rocking her again. She had just experienced the most amazing, most intense, most mind-shattering orgasm of her life at his hands. Now that she knew what to expect, she wasn't rejecting the idea of doing it again in the future.\n\nAfter a while, Kal healed her bruises and carried the gorgon inside the tent, drawing a warm bath for her to soak and relax in. They were met by the sprite when they finally emerged again.\n\n\"What's your name?\" asked Ria.\n\nThe woman had heard the human speaking to someone but was still surprised to see the ghostly sprite come flitting in through the doorway. \"The dwarves call me gorgon.\"\n\nKal shook his head, \"That's what you are, not your name. It would be like you calling me 'human'.\"\n\n\"Am I supposed to call you something else?\"\n\nKal froze with the realization that he hadn't given her his own name yet.\n\nRia began laughing hysterically. \"That's two now! First Dax and now her!\" she said, doubling over and holding her stomach.\n\n\"Dax? Two?\" the gorgon asked.\n\n\"Daxas is one of my lovers,\" he explained. \"We got intimate and she even got pregnant before I even knew her name.\"\n\nThe woman's eyes widened and a hand went to her stomach. \"Does that mean I'm...?\"\n\n\"Probably not, but it's still early and I don't know exactly how your body works. In humans, it can happen anywhere from a few minutes to a couple of days. Some monster girls have seasons or cycles that are the only times they can get pregnant. Others have a means of only having a baby when they decide to. Near as I can tell, they all have some means of knowing when they are with child. If you don't know within a couple of days, then you probably aren't. On our way back to the surface, we'll see about getting you some gondas weed and you can use that until you decide you want to have children.\"\n\nShe frowned, \"There are times that I can't calm down no matter how much I touch myself. Is that my 'cycle'?\" Those periods were unpleasant, and she'd masturbated to the point of pain on more than one occasion. Unfortunately, she hadn't had any human visitors during those times and while male dwarves had the right equipment, she wasn't excited enough by them to seek the stocky men out for relief.\n\n\"Most likely,\" he said, nodding. \"If you weren't having one of those then there's little chance of you being pregnant.\"\n\nRelief warred with disappointment on her face for a moment until she remembered that he agreed to help her when she wanted children. Better him than any of the others who either attacked her or ran away.\n\n\"Before we go any further, my name is Kal and this is Ria,\" he said, indicating the sprite who had finally quit laughing and was now listening to them talk.\n\n\"I'm a bag of holding,\" she said, pointing to the leather satchel on Kal's belt. \"I've stored all of your stuff except for a couple of things that looked like junk. You'll want to look them over in case any have special meaning to you. I've them laid out on the floor in the other room.\"\n\n\"I'll get the tent packed up while you do that.\"\n\nThe gorgon frowned as she walked into the main room of her home. It felt so empty without any of her decorations. She quickly scanned through the array of items on the floor. Most were broken, rotted, or otherwise destroyed pieces of gear and clothing she'd taken off of those turned to stone or who had run away without collecting their belongings.\n\nShe pointed, \"That's one of my first memories, none of the rest are important.\"\n\nRia nodded. Then with a wave of her hand, the dried-up piece of snakeskin that looked to be taken from only the back half of the serpent turned into a glimmering point of light and flew into the other room where Kal was.\n\nThe woman turned to the sprite. \"Ria, what should I pick for a name?\"\n\nThe avatar giggled, \"I'm the worst person to ask, Kal gave me my name.\"\n\n\"He can do that?\"\n\n\"I belong to him, of course he can.\"\n\n\"Can he give me a name?\"\n\nRia thought for a moment, \"I don't see why not. Most races assign names to their children at birth, so it might feel a little strange for him. You could always come up with a name yourself. You may want to run it past Kal first though, you don't want to pick something that will sound awful or mean something bad by accident.\"\n\nThe gorgon nodded as Kal came back into the room and tossed the fabric square of the folded tent at Ria. It only made it about halfway to her before turning into a speck of light and floating back into the sprite's bag.\n\n\"Ready?\"\n\nBoth of the women nodded.\n\n------\n\nAs they made their way through the tunnels, and further away from the vein of glowing mithril ore, the gorgon's hair fanned out looking like it was trying to go in all directions at once. When Kal asked about the serpents' odd behavior, she explained that they were what allowed her to navigate the darkness and kept her from running into walls. He was surprised to find that she couldn't see in the dark like most cave dwellers, relying completely on the snakes' ability to detect minute changes in temperature. She also mentioned that between the residual heat in her body from the bath and having him walking with her, she felt like she was walking around with one of those sticks with fire on the end that humans sometimes used.\n\nThey hadn't made it very far when a loud roar came from behind them. The gorgon cursed, knowing that it was probably her scream from earlier that attracted the monster. Turning, she walked back behind Kal and patiently waited for the beast to show itself. At the light tap on her shoulder, the woman looked over to see Kal shaking his head.\n\n\"You aren't alone anymore,\" he said. Holding out both arms, he squatted down next to her. After a couple of moments of intense concentration, he closed his hands as though grasping something and stood up like he was lifting something heavy. The red rune on his bracer shone brightly. The gorgon's eyes bugged out as a stretch of the cave floor they'd just walked over rose up to meet the ceiling in tandem with the mage's movements.\n\nKal turned and had to hold back a laugh as he saw the woman next to him staring slack-jawed at the brand-new wall in front of her. Even funnier, each of her snakes was also staring with their mouths hanging open. She slowly turned to look at him.\n\n\"Let's go,\" he said, smiling.\n\nShe threw another glance at the wall before dazedly taking the lead once again. This man could have squished her like a bug but instead chose to tie her up and drive her nearly insane with pleasure. She wasn't sure exactly how she felt about that.\n\nThe trip back to dwarven tunnels took the better part of a day with the gorgon leading them. After spending most of the past weeks in her bag, Ria was enjoying a little bit of freedom, though she did lament being stuck flying around inside tunnels instead of out in the open air. Ria's soft glow turned out to be a bother for the gorgon, since what she saw in the faint light didn't match what her snakes were telling her. Kal got her to agree to a compromise and cast the darkvision spell on her. After a moment of disorientation, she was quite happy with her new sight. She still used a couple of her snakes for navigation but no longer required the full halo.",
        "Kal couldn't resist breathing a deep sigh of relief when he saw the telltale flicker of a burning torch coming from around a corner up ahead. It was getting close to a week since Sandy had dropped him off and he was thankful for any signs of civilization no matter how small.\n\nKal realized how numb he had become to the serpents on the gorgon's head when they ran into their first dwarves. What appeared to be a group of engineers saw a woman with reptilian eyes and patches of skin walk into the small cavern, the snakes attached to her scalp pointed in their direction.\n\nSome of the dwarves knew of the gorgon and covered their eyes immediately. Others drew short swords or small axes as they turned to face the threat, knocking over their various pieces of measuring equipment in their haste.\n\nKal ran forward, suddenly realizing what the snake-haired woman must look like. Holding out his empty hands towards the group of small men he called out, \"Woah! We aren't your enemy! I was asked to remove the gorgon from your mithril vein. She and I are on our way to the surface.\"\n\n\"She ain't dead?\" said one of the dwarves covering his face, his face going red as he realized how dumb the question was.\n\n\"No, she's not,\" replied Kal, his voice barely above a growl.\n\n\"Well that's a relief,\" said another one lowering his hands.\n\n\"Whaddaya mean 'a relief'?\" asked a female dwarf who seemed younger than most of the others. Kal noticed those who had hidden their faces were the elders of the group.\n\n\"She can turn livin' things straight to stone just by lookin' at 'em. When it got out she was found livin' in a mithril vein, a couple o' the nuttier dwarves were wantin' ta start a church around her. But evr'yone knows ye don't stand 'tween a dwarf and his mithril. Though it sounds like when the high muckety-mucks decided to get rid o' her, they couldn't find anyone willin'. That's when they started hirin' the humans, hopin' one of 'em might do what this one has,\" he said, indicating the mage.\n\n\"And if the humans killed her?\" Kal was still unimpressed with the story, though it did explain why they hadn't just dealt with the gorgon themselves.\n\nOne of the older dwarves shrugged, \"Ye don't stand 'tween a dwarf and his mithril.\"\n\nLooking over his shoulder he could see the hurt in her eyes. While not necessarily friendly, she had always considered the dwarves friends as they were the first race she had contact with and had taught her how to speak to the other intelligent races. As Kal watched, her face hardened.\n\nStepping in front of him, she addressed the group of dwarves. \"If ye... you were willing to stand by and let someone kill me, then I believe I'm done with all of you. Which way ta... to the surface?\" she snarled as her hair hissed menacingly at the engineers. Kal noted that she was suppressing her dwarvish accent and trying to talk more like him. Because of this, she stumbled over the unfamiliar way of saying a few of the words.\n\nMany of the dwarves covered their faces but one of the older ones smiled and pointed down an adjoining tunnel. \"Yer rightly pissed,\" he said. \"Though I don't imagine it'll improve yer thinkin' o' dwarves, there's a lot of us who're goin' ta be happy this is how things turned out.\"\n\nWithout answering, the gorgon strode in the direction the barrel-chested man had indicated. Kal silently followed as there didn't seem to be much else to say.\n\nRia, however, didn't agree with the mage's assessment. Nearly vibrating with rage, she flew in front of the dwarven engineers.\n\n\"Assholes!\" she screamed.\n\n\"Git on with ye, fairy,\" one of the elders said, waving her off.\n\nSpinning around she slapped an ass cheek. \"Kiss it,\" she spat, before buzzing off after the gorgon and mage. When she finally caught up to them, Kal was biting a lip trying not to laugh as the snake-haired woman continued striding forward, but with a huge grin on her face.\n\n------\n\n\"Fuckin' hell!\" yelled D\u00fbldin. Upon seeing the gorgon coming towards him and Sandy, he immediately reached for his axe as well as a small hatchet for throwing.\n\n\"Stop him,\" Kal said calmly even as his speed rune flared and he stepped in front of the woman while bringing his shield up. It wasn't necessary, his companion's glowing eyes had already locked the dwarf in place with his arm drawn back, about to loose the small axe.\n\n\"D\u00fbldin!\" screamed the golem seeing the dwarf freeze in place. Kal covered his ears at the horrendous screeching noise as the gorgon winced and her hair hissed loudly at the rock girl in unison. Seconds later, Ria made two earpieces appear in the mage's hand.\n\n\"What about her?\" asked the gorgon as Kal fitted the pebble into her ear. After Felli, Silma, Dax and the dog girls, he was honestly surprised to find she had human ears beneath the snakes.\n\n\"She's a friend and carrying one of my children, don't hurt her.\"\n\n\"Oh, he's still alive,\" said Sandy. She looked up at the woman with Kal. \"How did you do that?\"\n\n\"Better question: how do you know he's still alive?\" asked the mage.\n\nThe golem tapped her head next to her eye. \"I can't see through him. Also, he's not really stopped as I thought at first. He's just moving extraordinarily slow.\"\n\n\"From experience, I can tell you his mind is working at full speed. I was stuck like that for just over six days. Since you can see him move, can you tell how much time will pass for his body while 'frozen'?\"\n\nSandy watched the dwarf for a few moments, \"I'd guess thirteen seconds.\"\n\n\"That seems oddly specific.\"\n\nThe golem shrugged, \"It's not like watching rock move in places where the earth is cracked. With those, it's hard to tell if it will break loose a hundred or a thousand years from now. He's moving a lot faster than that.\"\n\n\"I assure you it doesn't feel like it to him.\"\n\n\"We were just coming down to check on you. He said that if you were still alive, you should be making your way up through this tunnel.\" She smiled at the gorgon, \"I'd say that you were successful.\"\n\n\"Since I was going to continue on to Lantaris after this, I thought you were going to head home?\"\n\n\"I was, until the dwarves summoned me back here.\"\n\n\"Why?\"\n\n\"You have a visitor and I can get to you quicker than anyone else. I saw D\u00fbldin walking in the tunnel a few minutes ago and stopped to talk to him. He wanted to check on a group of engineers surveying for a new ventilation shaft, then we were to come looking for you.\"\n\n\"Considering Gerda was the only other one who knew I was coming here, it's not hard to figure out who my visitor is.\"\n\n\"But...\" Sandy prompted.\n\n\"But... if it was Gerda, she would have come with you. Okay, I'm curious now, who is it?\"\n\n\"Not telling,\" she said with a coy smile, \"and if we had more time I'd make you work for it. Sadly, it's urgent so we need to get going.\"\n\nKal's companion looked confused, \"Dax? Gerda? This one...\"\n\n\"Sandy,\" he offered.\n\n\"Sandy. How many women do you have?\"\n\n\"More than I can handle, to be honest,\" he replied, smiling. \"Sandy here isn't mine, and technically neither is Dax. If you don't want to be one of my lovers because of this, I'll be sad but I'll understand. Sharing a man isn't for every woman.\"\n\n\"You're carrying his child but aren't his woman?\" she asked the golem.\n\n\"Nope, I've been working with this kingdom off and on for years now,\" she looked down at the frozen dwarf next to her. \"Now that I have a little one on the way, I might broaden my horizons a little bit. As long as someone here,\" Sandy tapped the dwarf on the forehead, \"can get through his thick dwarven skull that Kal will be the father to any daughters I have in the future. Because of that, he gets first dibs on my body whenever he's around. Assuming I don't go finding him first,\" she said, grinning.\n\n\"Why would you only let Kal give you a child?\"\n\nThe golem gave her a puzzled look then turned her gaze on the mage, \"You haven't told her?\"\n\n\"Told me what?\" asked the gorgon while also turning toward Kal.\n\n\"Remember how you said that you didn't feel any desire for the dwarves? The same is true for all monster girls. Also, you can't have children with dwarves, only with humans.\"\n\nThe snake-haired woman frowned at the frozen dwarf within their midst. \"Doesn't seem like a problem at the moment,\" she deadpanned.\n\nSandy sighed. She couldn't really blame the woman, with all of the people the dwarves had sent to remove her. \"Your friend is waiting, we should go.\"\n\n\"What about him?\" asked Kal, pointing at the dwarf.\n\n\"These tunnels have been cleared for more than a decade. He'll be fine for as long as it will take me to drop you off at the front gate and come back for him. Anything I need to know about his condition before we go?\"\n\n\"No sex.\"\n\nSandy's eyes narrowed, \"Now you're just being jealous.\"\n\n\"No, he's not,\" the gorgon piped in, \"Kal gave me a taste of what I put him through. No sex.\"\n\n\"Fine,\" she said, \"I'll wait until he's... thawed? Unfrozen? Whatever. I'll wait until he's moving again before doing anything like that.\" She held out a hand to each of them.\n\n\"Sorry Ria,\" said Kal, apologetically.\n\n\"No worries,\" the sprite replied, smiling. \"The quicker we get topside, the better. I want to really stretch my wings.\" A moment later the little avatar faded away.\n\n\"Where did she go?!\" cried the gorgon in a panic.\n\n\"Back into her bag, she's fine. Now take Sandy's hand, we'll be going up and through the rock as though it were water, but you will still be able to breathe so don't panic. You may want to close your eyes too, there isn't really much to see.\"\n\nThe gorgon hesitantly took the rock girl's other hand alongside Kal. Stone grew out of the woman's wrists and soon covered hers and the mage's hands and forearms, locking them together. She looked over at Kal in panic but saw that he was completely relaxed. As she tried to calm herself, the golem lifted a leg and stuck a foot on the side of the tunnel. The snake-haired woman stared as Sandy began moving upwards as if lifted by the foot attached to the wall, only her body didn't move as she rose toward the ceiling. The gorgon let out a little shriek as she was lifted by her rock-covered hand. Looking up she saw the golem pass into the stone above, followed by her hand, then arm, and finally her head. Once her toes disappeared from the tunnel, they accelerated upward. Letting out the breath she didn't know she had been holding, the gorgon looked around for a moment then followed the mage's advice and closed her eyes for the rest of the trip.\n\nBack in the tunnel, D\u00fbldin raged at the mage and the gorgon. Pissed as hell that they would deny him the chance to be with the rock woman just because he was stuck like this, and completely unaware of the fate they had saved him from.\n\n------\n\nThey caused a bit of a commotion as the three of them suddenly appeared in the back of the stables not far from the large gates at the entrance to the underground kingdom. Dwarves scattered at the sudden appearance of a golem, a human, and a reptilian woman with snakes for hair rising up out of the stone floor.\n\nSandy turned to Kal and gave him a searing kiss, doing her best to rub her entire body on the man. As she pulled away the gorgon saw the pebbles covering her breasts and crotch reappear in the front.\n\nThe golem smirked at the snake-haired woman. \"Sorry. It's probably going to be a very long time before I get to do that again. You're a lucky woman.\" She turned to the mage, \"She's waiting outside the front gate. Good luck to both of you.\" With a wave she fell backwards as if toppled over and disappeared into the floor.\n\nOnly a few seconds had passed when a fully armored dwarf threw open the doors to the stable and came tromping back to where they were standing.\n\n\"Yer the mage?\"\n\n\"I am.\"\n\n\"S'posed ta take ya to the gate.\"\n\nKal looked over at the raggedy tunic the gorgon was wearing. \"Could we stop at the market first?\"\n\n------\n\nThe bazaar was close to the gate for the sake of the occasional human who came in to trade their wares and drop off supplies for the owners of the land they lived on.\n\nDwarves had no desire to live above ground, so they employed humans and other surface races to grow crops and manage livestock. Those who didn't want to work for the kingdom directly just paid a percentage of their earnings in taxes and land lease.\n\nLuckily this meant that they sold clothes for humans as well at the market. By the time they left, the gorgon had a number of new outfits and was wearing an emerald green tunic that closely matched the color of her scales and a pair of loose-fitting light brown pants. She also picked out a new belt, insisting on one that was the same size as her old one. Kal thought it curious that she was wearing almost the exact same clothes she had worn going into the market, just newer and with the added pants. If she decided they were going to continue a physical relationship, he planned on trying to convince her of the benefits of dresses like Perra wore. She seemed to enjoy the ability to just hike up her skirt whenever she was feeling frisky and Kal certainly couldn't complain about it either.\n\nHe also convinced her to get some good traveling boots since he didn't know how long they would be on the road together. She wasn't excited at the idea of wearing something to cover her feet but warmed to the idea once she tried them on. This quickly led to the purchase of two more pairs, one for day to day work or hunting and another for wearing inside the tent. She loved the carpet but even in her short stay, the tickling on her feet became annoying.\n\nA quick stop at an apothecary led to an uncomfortable talk with the woman behind the counter about the proper use of gondas weed, thanks to Kal mentioning it was the gorgon's first time using it. Like Lady Nina, they also used something to mask the taste but instead of mint leaves, it was a dried mushroom that had a slightly sweet flavor.\n\nTheir escort took to grunting or clearing his throat every time Kal or the gorgon asked a new question, plainly indicating his desire to be done with this task. As annoying as Kal found his behavior, he was appreciative of the guard's presence. The armored dwarf seemed to cut a wide swath through the throng of buyers and sellers, though it could be argued that it was more due to the gorgon than the dwarf. Thankfully, dwarves weren't as hateful toward monster girls as humans tended to be, but since monster girls had no interest in dwarf males they typically got a very cool reception from the race as a whole. Even so, people were reluctant to get close upon seeing their escort which helped them conclude their shopping quickly. Hawkers in a bazaar don't like it when your presence prevents other customers from approaching. This meant Kal got some decent prices without a lot of haggling just so they would leave quickly.\n\nAs Kal and the gorgon approached the outer gate, a familiar harpy came running up to them amid the streams of dwarves and humans coming and going.\n\n\"Ruce?\" Kal asked, confused.\n\n\"Come quickly, Kal. I've been waiting hours for...\" the harpy's face fell upon noticing the gorgon, \"...dammit.\"\n\n\"Why are you here, Ruce? Perra told me you have a new chick. Besides that, how did you even find me?\"\n\n\"Marda is watching Lada until I get back, which is why I was trying to hurry. As to how I found you,\" she held out a hand and a small paper bird flew from it and unfolded itself in front of Kal's face, reading:\n\nI Love you!\n\n-Perra\n\nKal caught the piece of parchment as the spell expired.\n\n\"You would be surprised at how fast these go once they get above the trees and into the open air,\" Ruce continued. \"Your friend presents a problem. Kuto wasn't expecting two to be coming back, at least not in time for your baby to arrive. Are you coming?\" \n\n\"Yes, he is,\" said Ria from the mage's shoulder. He'd summoned her back when they were at the bazaar.\n\nHe looked over at the small woman who was now standing with her hands on her hips glaring at him. \"What?\"\n\n\"You're so damn worried about getting to Ikuno in time for her to come back. Did you ever think about how she is going to react when she finds out you had the opportunity to be there for the birth of yours and Perra's baby and didn't take it? She'll kick your ass up one side of Felli's mountain and down the other! That's if she doesn't walk away and never have anything to do with you again. You. Are. Going.\"\n\nKal opened his mouth to speak but instead, his breath came out in a sigh as he visibly deflated. Damned if she wasn't right, and no argument he could drum up had even the slightest weight to it.\n\nHe turned to the gorgon.\n\n\"I have to go.\"\n\nThere was a look of profound sadness on her face, \"I understand. It's your baby, I can go back to my cave.\"\n\nKal shook his head. \"I hate to ask that of you since there's nothing left for you there. I'll only be gone a couple of weeks...\"\n\n\"That's a guarantee, Perra said if you did come home, two weeks was all she would allow, then she's kicking you back out on the road.\"\n\nKal gave the harpy a mock frown, \"Last I checked, I own that property It might be hard to kick me out.\"\n\nRuce smiled, \"Who said anything about kicking? One of us will just pick you up and drop you in the northern forest.\"\n\n\"Give me to our gorgon friend,\" said Ria. \"Much as I would love to see Perra's baby, I have the tent and plenty of meat left from Dax and her girls.\n\nKal shook his head, \"Even if you know the words to set up and seal the tent, I would still have to set it up before I can give her permission to use it.\"\n\n\"Then let's find a place to set it up so you and Ruce can get going.\"\n\n\"Ho there!\" Kal called to one of the guards standing near the gate, \"I am needing to leave but my friend can't come with. Is there anywhere we could set up a camp for her until I come back?\"\n\nThe dwarf scratched his beard as he thought. \"Don't like non-dwarves on the mountain and foothills. Go south until ye come to the flatlands. There'll be a forest on either side of the road, but ye can'na camp there. It's our sport huntin' grounds. But, if'n ye go through it to the west yer gonna run into some wetlands in a bit. The edge o' those is pro'ly the nearest place ta set up a camp.\"\n\n\"Got it,\" said Ruce before turning to the gorgon, \"Stay nearby, I'll be back for you in a few minutes.\"\n\nKal yelled in protest as the harpy jumped up and grabbed him by the shoulders before beating her wings powerfully and lifting them into the air. The mage's feet barely cleared the surprised onlookers' heads as the falcon raced off to the south.\n\nRia turned quickly to the gorgon who was looking very scared and alone despite the myriad of dwarves walking past her. \"As she said, stay close,\" the sprite said in a hurry. \"She'll drop Kal off and be...\" The avatar faded away suddenly as Kal moved too far away with her bag.\n\nSwallowing hard, the snake-haired woman made her way in between the arriving merchant and supply carts over to the side of the entrance and sat down against the wall, drawing her knees up protectively to her chest. Occasionally, she would peer out the gate at the distant blue ceiling with the white things called clouds tumbling across it. The dwarf who taught her how to speak had told her about it but seeing it in person was terrifying. More terrifying was the idea that the bird lady was going to come back and carry her up into the \"sky\" as well. It didn't help that the mage hadn't seemed very happy about it either.\n\n------\n\nFar faster than he expected, they were beyond the hills and angling west in search of the wetlands. The wind from their speed was so intense that he had to cast the spell for the face shield to block it just so he could breathe. Ruce found a small clearing where the ground didn't look to be soaked and landed.\n\n\"Ria,\" Kal called as his feet touched the ground. The harpy touched down next to him a second later.",
        "As soon as the sprite appeared she flew up into Ruce's face, \"You've left her scared half to death! Get back there this instant!\"\n\nThe falcon was scowling but not at the little avatar. Instead, she was looking down at her chest. The harpy's normally smooth breast was sporting two lumps with wet spots beneath them. She cursed under her breath before jumping into the air and jetting northward again without saying a word back to the sprite.\n\n\"When she said a few minutes, I think she meant it,\" Kal said to the sprite as he watched the harpy tear off into the sky. \"Let's get set up. Tent please.\"\n\n------\n\nRuce scared the dwarven guards as she dove toward the entrance to the kingdom at break-neck speed before flaring her wings and nearly coming to a dead stop just as she touched the ground. Dashing over to the gate, she saw the gorgon just inside and ran over to her. \"Come on,\" she said, grabbing the woman's hand and tugging, \"Kal is waiting for you.\"\n\n\"But, the sky...\"\n\n\"Is where I live and for the most part there's nothing up there but birds and a couple of bats at night. It's not like you're staying up there like I do. I'm dropping you off as quickly as possible then leaving with Kal,\" she explained as she dragged the woman out into the open. \"Now stand up tall. Kal has magic to make sure he can breathe but you don't, so you will have to fly backward.\"\n\n\"There's no air up there?!\" she woman yelled, close to panicking.\n\n\"Sure there is, and lots of it. But we will be going so fast it will make your lungs pop if you try to breathe without these.\" Ruce tilted her head and showed the gorgon two odd-looking protrusions just inside her nose. \"The other option is flying backward. By the way, make sure none of your friends bite me or I will drop you.\"\n\nThe harpy turned her back to the mountain and stood the nervous woman facing her. With a quick hop, she threaded her talons beneath the gorgon's arms and took off. Beneath her, the snake-haired woman screamed with terror as her feet left the ground.\n\n------\n\nKal spoke the command to make the tent bigger and it went from a large two-man tent on the outside to a round one with a conical top and an entrance a person could walk through without ducking.\n\nHe and Ria heard the screaming before they saw the harpy and gorgon. As she back-winged to set the woman down, Ruce yelled, \"Get her off of me!\"\n\nThe mage saw that the gorgon's hair had coiled around the falcon's legs and seemed to be holding on for dear life next to the woman's hands. Unable to hover, Ruce laid herself out on the ground as gently as she could after her passenger's feet touched down.\n\nAs she felt the ground on her back, the gorgon's look of unadulterated horror began to fade but it still took a couple of minutes for Kal to unravel the serpents from around the harpy's legs. Luckily none of the venomous snakes had been foolish enough to bite her.\n\nAfter a couple of minutes of everyone relaxing, the harpy stood up and looked down at her ample and leaking breasts. \"Dammit, I was hoping we'd be gone before they got a chance to do this. I need you two to drain me,\" she said looking between Kal and the gorgon. \"If you don't, we won't be getting you home any time soon and certainly not before Perra is due.\"\n\n\"Inside then, we can sit on the bed and get comfortable.\"\n\nRuce nodded and began walking towards the magical abode. \"Just as a warning, I'll need something to rub myself on. Feeding Lada just makes me feel good and a little sleepy but when it's Thom I get extremely turned on.\"\n\n\"I really don't see a problem with that if you don't mind me watching you,\" said Kal following her inside.\n\nThe gorgon hesitated. A big part of her wanted to drop to her knees and bawl her eyes out from the stress of everything that had happened today. Another large part of her was having the time of her life. As much as she hated to admit it, this had been the most interesting and exciting day in her entire existence. Admittedly, she could have done without the flying. She was NEVER doing that again. Now she was about to go and suck the milk out of the bird woman's tits so she could fly away with Kal and be at the birth of one of his children. Shaking her head with the strangeness of it all, she stepped into the tent.\n\n------\n\n\"You watched me now I get to watch you,\" said Ruce as she mashed her sex into the linens covering the bed. The smell of aroused harpy was thick in the air and Kal would be lying if he said it wasn't affecting him, especially since his arm was soaked with her juices. She had him put a hand on the bed between her legs then proceeded to rub herself to multiple orgasms on his forearm as he and the gorgon sucked on her nipples. Once they had finished emptying out the falcon's breasts, she suggested they make love as it would be their last opportunity for some time. The mage's face fell when the gorgon shook her head.\n\n\"I suppose I can't blame you after everything that's happened today. Like I said, not every woman is okay with sharing their man,\" he said sadly.\n\n\"You misunderstand. You said she was due in a couple of days meaning she may want to spend some time with you before then.\" She reached out and stroked him through his trousers. \"I will be looking forward to you coming back.\"\n\nKal was perfectly happy to admit that he had misread her as he looked down and grinned at the woman. \"I appreciate that, but it will be a day or so before I get home. I think I'll be recharged by then.\"\n\n\"That depends on you,\" said Ruce.\n\n\"How do you mean?\"\n\n\"My type of falcon is the fastest thing in the sky, especially when diving to catch prey. Harpies like me can maintain that diving speed with the help of a little bit of magic.\" She lifted her head and ruffled the feathers on her neck showing them a thin necklace with three mana crystals set into it.\n\n\"How did I never notice those?\" asked Kal.\n\n\"I rarely wear it since they take forever to recharge,\" she explained.\n\n\"How long are you thinking to get back then?\"\n\n\"Five or six hours, depending on how long you can feed me magic and maintain your wind-mask.\"\n\n\"Wind-shield.\"\n\n\"That's silly. You have a shield on your arm and that one goes over your face, it's a wind-mask.\"\n\n\"Wait... five or six, hours?! It took ten days to get here!\"\n\nThe falcon just gave him a half-smile in return.\n\n\"Go on,\" said Ria, \"don't forget to give me to our snake-lady here before you leave.\"\n\n\"Snake-lady?\" asked the harpy.\n\n\"Um... about that, what are you called?\" asked the gorgon.\n\n\"My name is Ruce, I'm a falcon harpy. Why?\"\n\n\"I heard someone say something I thought was really pretty after you flew off with Kal and it sounded like a name.\"\n\n\"What was it?\" asked Kal.\n\n\"One of the people said it looked like you were stolen away by a seraph. If she's not a seraph then maybe that could be my name?\"\n\n\"A woman with creatures that slither along the ground on her head and able to turn people to stone having the name of an angel. Lots of people are going to find that very ironic,\" he said, smiling.\n\n\"So, my name can't be Seraph?\"\n\n\"Perhaps not seraph as it's another name for an angel or seraphim, making it like gorgon or human or harpy,\" he said, motioning to her, himself, and Ruce in turn. \"However, I believe Seraphina is an actual name. Fair warning, you will get called Sera a lot.\"\n\n\"Seraphina... Sera...\" she said slowly and with a far-off look, as if testing how they felt. When her eyes focused back on the other two, her face nearly glowed with happiness. \"I like it! My name will be Seraphina!\"\n\nRuce smiled at the woman's excitement as she stood up from the bed, then frowned down at the wet spot she left behind. She rather enjoyed watching Tain and Ghoss make love, especially if Thom was taking her from behind at the same time. She had really been hoping to get a show out of these two and she couldn't help but be curious what a man able to satisfy so many women had hiding in his pants, enchanted or not.\n\n\"If that's all taken care of I suppose we should be going,\" said the harpy. \"I want to get there while it's daylight since I still have to get Lada from Marda and Rone. With the days getting shorter, we may not make it even now.\"\n\n\"You don't seem to be in as much of a rush as you were earlier,\" said the mage.\n\n\"Back then I was trying to get us in the air and on our way back before my milk came in. We stop producing when we're flying.\" She looked over at Sera, smiling. \"You weren't in my plans, but I can't really complain about how things turned out.\"\n\nKal nodded in understanding then reached over and pulled the gorgon into an embrace, his lips meeting hers. Ruce cringed as the woman's hair seemed to join in and draped itself over the human's head and shoulders. It had been weird enough when the woman was sucking on her nipple and one of them would touch her. Thankfully, the gorgon realized the harpy was uncomfortable with her hair and did her best to keep it off the bird-woman.\n\nOutside, Kal officially lent Ria to the gorgon for the next two weeks.\n\n\"I've got a feeling I'm going to regret not bringing you with me,\" Kal grumbled.\n\nThe sprite kissed him on the nose. \"Show me how much you missed me when you get back,\" she said, spinning around and shaking her bottom at him.\n\nWith goodbyes said, Ruce lifted Kal into the air, climbing until the air started to feel thin and Kal was having a hard time breathing. He'd barely gotten off the ground and was already regretting not having Ria, he'd forgotten to get his breathing mask from her... and his staff... and his... oh dammit.\n\nRuce flipped over and dove, her wings beating frantically as they gained speed. Kal was finally getting to test a pet project of his that he had worked on ever since he discovered the wind-mask, as Ruce called it. Back when he and Ikuno first went to Felli's mountain, he had wondered if there was a way to keep his cloak from whipping about on the blustery slopes. Tucked under one of his vambraces was a small strip of leather with a rune that glowed brightly even though it couldn't be seen. It worked much like the wind-mask but covered his body in a rounded cone that ended down by his feet. It blocked or diverted strong winds but nothing else, so it didn't interfere with Ruce's grip on him. He couldn't help but smile at the thought that something he had only wanted in order to look impressive on windy days was turning out to be genuinely useful.\n\nSeeing the faint glimmer from her necklace indicating that she was beginning to use her ability, Kal started pushing energy into the harpy through her feet. Ruce's eyes widened at the sudden surge of power. With a smile, she began pulling out of her dive, Kal's magic keeping her from losing any momentum.\n\nThe mage watched the world whip by beneath them, the speed they were going was difficult to comprehend but he no longer doubted she could turn a days-long journey into a few hours anymore.\n\n------\n\nPerra looked up from her conversation with Kuto and Elta as they finalized things for the upcoming birth. There had been a loud flapping of wings outside that seemed to stop for a moment before proceeding over the house and toward the setting sun. Curious, she got up from her chair to go check the door.\n\nBoots struck the wood of the steps and crossed the porch with a familiar cadence.\n\n\"No...\" she whispered, not daring to hope. He was still more than a week away from here.\n\nThe door burst open and Kal strode through, a mischievous grin on his face.\n\nThe speed rune flared as he dashed across the room, catching a very surprised Perra under her arms as the pregnant woman's knees gave out.\n\nLowering her to the floor, he knelt in front of her and took her face in his hands. Glancing down her body, Kal looked into her eyes, \"Have I told you how beautiful you are today?\" he asked, pulling her into a tender kiss.\n\nPerra's chest heaved as she began sobbing, tears of happiness running down her cheeks. Throwing her arms around his neck, she held him as though he might disappear while pressing their lips together with bruising force.\n\nWhen the shaking of her body pulled them apart, she laid her head on his shoulder and cried. \"I... didn't... think... you'd... come,\" she said between sobs.\n\nKal smiled and squeezed her tight. \"Do you know how hard it is to mute yourself for as long as it took to get here?\" With his words, his presence exploded in her mind, quickly followed by mental shouts of surprise and happiness from Bea, Aradelle, and Gerda.\n\nKal picked Perra up and stood with her in his arms. Behind him, his woman's visitors quietly exited with a soft click of the front door as he carried her to their room. She pulled herself up to kiss him again as he kicked the bedroom door closed.\n\n------\n\nI update my Bio with the latest Chapters and projects I'm working on each time I put up a new post.\n\nAs always votes and feedback are greatly appreciated! TTFN!\n\n-Blu"
    ],
    "authorname": "BluDraygn",
    "tags": [
        "fantasy",
        "gorgon",
        "harpy",
        "lactation",
        "magic",
        "medusa",
        "monster girl",
        "monstergirl",
        "trc"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-12"
}