{
    "title": "Beneath the Ice Ch. 08",
    "pages": [
        "Thank you for coming along for this ride. I've enjoyed writing it and reading your feedback and thoughts for each chapter. I loved this couple from the first and I'm happy that so many of you feel the same way.\n\nThis story, as you might or might not guess, was partially inspired by the past several months I've been living with a single parent and three-year old kid in the apartment above mine. Although, they are nowhere near as nice as any of my characters and certainly have made little to no effort to curb their noise levels. It's been frustrating, to say the least. So in that spirit, I did want to make one comment, or suggestion, whatever you want to call it: if you live in an apartment building, with someone else living in the unit below you, whether or not you have kids, please be considerate and aware of your noise levels. Yes, kids will be kids and they're allowed to have their fun but everyone is entitled to some kind of peace in their own home. Some people may or may not be as understanding as I am (and believe me, I'm being far more understanding than my upstairs neighbor deserves) but it doesn't hurt to be considerate and kind to those that live around you, and you can do that without taking the fun away.\n\nThere. Done. I'll get off my soapbox now and let you get on with the story. Note: have tissues ready. ;)\n\nAs always, take care and happy reading! M.\n\n****\n\nTo say Charlotte didn't sleep well that night would be an understatement. She didn't cry after her attempt to end things amicably with Alexei. She washed her face, brushed her teeth, and crawled into bed after he'd left, all the while replaying their fight in her head. Was it even a fight? She'd broken up with him, and he'd refused to accept it. No, she'd tried to end things. Hadn't she?\n\nBut the things he'd said-- Did he mean them?\n\nHer heart skipped around in her chest when she realized the truth. That he never said anything he didn't mean. He hadn't since the day they met. And she'd tried to cut him from her life? Cart before the horse indeed. Maybe she should have listened to Ursula.\n\nBut no, ending things now, before they'd really become attached, was better. Right? It had to be. It would have hurt far more if this had gone on for another year. Or two.\n\nRolling over, she pressed her hot face to her cool pillow and tried to sleep. Zoe would be up early enough as it was and it was going to be a busy day.\n\n\u2500\u2500\u2500\u2500\u2500\n\nChristmas morning was as chaotic and loud as it always was with Zoe. Charlotte sat back with her morning coffee and grinned as Zoe enthusiastically went through her stocking from Santa. After the furor died, she made them breakfast of French toast and bacon, and then they watched a movie together before getting ready to head to Sarah's mother's place.\n\nYes, it was a great day but the big, gaping hole in the center of Charlotte's chest told her it wasn't right. As she sat in the middle of the living room hours later, with Sarah and her lovely family surrounding her, Charlotte knew deep in her bones that she'd made a colossal mistake.\n\nShe didn't want this anymore, this brave face as she spent time alone at friendly parties and the like. She wanted Alexei beside her, holding her or taking care of Zoe across the room. She wanted everything he'd said to her the night before when she'd been trying to let him go.\n\nHad she lost her damn mind?\n\nAs her lips began to tremble, Sarah sat down next to her, the couch cushion bouncing under both of them.\n\nHer friend started to hand her a glass of eggnog, but stopped when she noticed Charlotte's expression. A minute later, Charlotte found herself bustled into a guest bedroom on the second floor, the door closing out the noise of the rest of the family gathering.\n\n\"Talk.\"\n\nCharlotte looked up at Sarah as she perched on the edge of the bed. She let out a shaky breath. \"I broke up with Alexei.\"\n\nSarah shook her head, her mouth opening and closing a couple time before she managed to speak. \"I'm sorry. It sounded like you said you broke up with Alexei.\"\n\n\"I did. Last night.\"\n\n\"No.\" Sarah crossed her arms over her chest. \"That can't be what you're saying right now, not when you and I both know he's perfect for you.\"\n\nCharlotte covered her face with her hands but the tears came anyway. \"I'm so stupid, Sarah.\"\n\nHer friend sighed and sat down next to her, one arm going around her shaking shoulders. \"Okay, start at the beginning. What's going on?\"\n\nCharlotte tried to explain through fits of tears and sobs but by the time she stopped, she only reaffirmed what she'd realized downstairs in the living room: that she wanted a life with Alexei and she should never have let him go.\n\n\"What am I going to do?\"\n\n\"Oh, sweetie.\" Sarah tugged her closer and pressed a kiss to her head. \"You've managed to work yourself up into quite a state, haven't you?\"\n\n\"I thought I was doing the right thing. Alexei can do so much better than me.\" She sniffled and wiped her cheeks.\n\n\"Why would you think that? You're funny, smart, hard-working, a wonderful mom.\" Sarah sat back and half-turned Charlotte to face her, hands on her shoulders. \"He'd be crazy not to love you.\"\n\n\"I don't want him to wake up in ten years and think he's made a mistake in settling for me.\"\n\n\"Charlotte Woods. I could smack you right now.\"\n\nThat startled Charlotte out of her tears for a moment. Sarah was blunt, no doubt, but she'd never threatened violence. It made her smile, even if it wasn't genuine.\n\n\"How about you let Alexei decide for himself what he wants?\"\n\n\"Okay, so sure, he wants me right now. But I don't know if he'll feel the same in ten, fifteen, twenty years.\"\n\n\"Good lord, no one knows that going into any relationship. We don't even know if we'll still be friends in ten years.\"\n\nCharlotte gasped and threw her arms around Sarah. \"Of course we will!\"\n\n\"Yeah, well, it's because I'm so fabulous.\" Sarah squeezed her back before pulling away again so she could look Charlotte in the eye. \"But this thing with Alexei, I get that you're spooked. You've never been in love like this before. You've been on your own for so long, you've tricked yourself into thinking you can only do this alone, and you're wrong.\"\n\nCharlotte had no ready response to that.\n\n\"It can be scary giving your heart to someone, of course, but you can't cut it off before you get hurt. That never works.\" She tilted her head, giving Charlotte a pointed look. \"Are you feeling unhurt right now?\"\n\n\"No.\" Charlotte rubbed her chest. \"I feel like I scrambled my insides with a rusty knife.\"\n\n\"And I can guarantee Alexei is feeling the same right now.\"\n\nThat made Charlotte crumple into Sarah's hold again, fresh tears starting all over.\n\n\"He's never going to forgive me. I'm so damn stupid.\"\n\n\"No, you're not.\" Sarah rocked her and set her upright again to dry her tears. \"Now, I'll give you a few minutes to pull yourself together. Why don't you call or text Alexei? Tell him you want to see him tonight.\"\n\nThat made Charlotte start crying all over again. Stupid, selfish, stupid. What had she been thinking? Poor Alexei was all alone on Christmas because of her idiotic attempt at a break-up the night before.\n\n\"He won't want to see me ever again.\" Even as she said it, thought it, she was pulling her phone out of her pocket.\n\nSarah stood up with a smile. \"No. You told me what he said last night. He's never letting you go, sweetie, and you're only a fool if you keep trying to push him away.\"\n\nCharlotte watched her friend leave and stared at the closed door for a long minute before drawing in a shaky breath. She didn't know if she could talk to him without bursting into tears again, but she didn't want to send a text. He deserved better than that.\n\nHe answered on the first ring.\n\n\"Charlotte.\"\n\nShe closed her eyes and let out the breath she'd been holding. She'd been half-expecting him to not answer and still knowing he'd always take her call.\n\n\"Merry Christmas.\"\n\nA pause. \"Merry Christmas, lyubov moya. Are you having a nice time with Sarah and her family?\"\n\n\"I am.\" There was a noise in the background on his end, a shout of laughter and then a slamming door. \"Where are you?\"\n\n\"I came to Olle and Joelle's.\"\n\n\"Oh. Please tell them hello and happy holidays from me.\"\n\n\"Of course. Are you all right?\"\n\n\"Yes.\" She sighed and rubbed her cheek, stifling the tears that threatened. \"Well, no. Not really.\"\n\n\"Can I help?\"\n\n\"Not right now.\" And she wasn't about to cut Zoe's fun evening short just because she'd been a damn fool the night before. \"Can I come over later, so we can talk?\"\n\n\"Yes. I'll always want to talk to you, lyubov.\"\n\nShe knew that. Looking down, she plucked at the hem of her Christmas sweater and let out a breath. \"Okay. I'll be home before nine.\"\n\n\"All right. Text me when you're leaving and I'll head home too.\"\n\n\"Okay.\"\n\nA silence fell between them and Charlotte listened to his steady breathing.\n\n\"All right, well, I'll see you later.\"\n\n\"Yes, you will.\"\n\nThey ended the call and Charlotte sat in silence for a few minutes longer before rejoining the gathering downstairs.\n\nWhen she finally bundled Zoe back into the car to drive home, her little girl was asleep by the end of the block. Charlotte glanced at her in the mirror and smiled. She was glad Zoe had had such a good day. She'd been spoiled by Sarah's family, as the surrogate only 'grandchild', and Charlotte was grateful beyond words, yet again, for Sarah's friendship.\n\nAt home, she parked and wondered how she was going to manage to get the sleeping girl and all their gifts upstairs. She climbed out of the driver's side and was staring into the trunk when she heard a footstep and jumped in surprise.\n\n\"Alexei!\"\n\nHe gave her a crooked smile, a rare one that never failed to make her heart turn over. He approached, his hands in his jacket pockets. \"Sorry. I didn't mean to scare you.\"\n\n\"That's okay.\"\n\n\"I saw you as I was parking.\" His hazel eyes skittered over her face and then down to the trunk. \"Do you need help?\"\n\n\"Yes, please. Can you get Zoe? I can manage the rest of this.\"\n\nHe nodded and moved around to the back door of the car to pull Zoe out of her car seat. Charlotte watched him for a second before shaking her head and gathering up the bags and one plastic bin of presents. She dug her keys out of her pocket again and waited for Alexei to hoist Zoe up over his shoulder. It wasn't quite a fireman's carry, but near enough that it made Charlotte snicker, the lightness of the moment easing some of the tension in her chest.\n\nThey rode the elevator in silence and inside her apartment, Alexei put the little girl to bed after removing her winter boots and jacket. He didn't bother with changing her into pajamas and it didn't matter. Zoe snuggled up to her pillow and didn't bat an eyelash as he backed out of the room, closing the door behind him.\n\nAfter setting everything down in one corner of the living room, Charlotte removed her own outer wear and faced Alexei with a smile. \"Thank you.\"\n\n\"You don't have to thank me.\" He shrugged out of his jacket and toed his shoes off.\n\nCharlotte nibbled on her lower lip as she watched his movements. \"Can I make you some tea?\"\n\nHe shook his head as he faced her again. \"No, thank you.\"\n\nThey stared at each other, silent, and Charlotte shifted on her feet until she turned and walked into her bedroom. Alexei followed and shut the door behind him, leaning back against it as she paced alongside her bed, her fingers at her braid, pulling it all loose until her hair was a wavy mass around her shoulders.\n\n\"Alexei, I'm so sorry about last night.\" She stopped near the foot of the bed and looked up at him, forcing herself to meet his eyes, as shuttered as they were. \"I was--\" stupid, idiotic, selfish. Terrified. \"I don't know what I was.\" She dropped her gaze to the St. Christopher medal laying on the outside of his shirt. A shirt she was now noticing had an imprint of a Christmas elf's green outfit, with red ornamental trim around the cuffs and neckline and actual bells dangling off the bottom hem. \"What on earth are you wearing?\"\n\nHe looked down and sighed. \"Olle made me put it on. He said if I was going to spend Christmas with them, I had to.\"\n\nCharlotte clapped a hand over her mouth and struggled to hold in her laughter. But she met his eyes again and couldn't contain it. His lips quirked in a smile and he sighed again, sounding aggrieved. God, she loved him so much.\n\nShe all but threw herself into his arms and he caught her against his chest, as if he'd been waiting for her to do it. His mouth came down on her head, muttering Russian words into her hair and she buried her face in his chest, the cold medal brushing against her skin.\n\n\"I'm so sorry, Alexei. I don't know why I said we had to break up.\" She jerked back to look into his eyes. \"I don't want to break up. I love you.\"\n\nHe brushed a tender hand over her head, smoothing the hairs that had come loose from her braid. \"And I love you.\"\n\n\"I know.\" She blinked, tears filling her eyes. \"I understand if you can't forgive me for trying to push you away, but I want you to know how sorry I am. I should never have said those things.\"\n\n\"Lyubov moya, I will always forgive you.\" He pressed his lips to her forehead and cupped her face in both hands. \"And I will always be here. You can't break up with me so easy.\"\n\n\"Do you mean that? Because I can't promise I won't ever have another meltdown again.\"\n\nHe chuckled, the sound vibrating from his chest to hers, making her shiver. \"I'll be here for the next one. And the one after that. You're my family, lyubov, you and Zoe.\"\n\nCharlotte let the tears come. Overwhelming relief made her weak and she found herself scooped up into Alexei's arms. A moment later, they were on her bed and she was sprawled out against his chest, soft sobs hitching her shoulders.\n\n\"I'm so sorry, Alexei.\"\n\nHe hushed her, kissing her forehead, her cheeks, brushing away tears with his thumb.\n\n\"But I am, I don't deserve you and I was awful last night.\"\n\n\"You said some things you didn't mean.\" He kissed her once on the lips, not lingering. \"We'll have more fights, lyubov. I'm not worried.\"\n\n\"How can you not be?\"\n\n\"Because I love you.\"\n\nShe sighed and pressed her face to his chest, letting her tears dry up.\n\n\"Can you tell me why though?\"\n\n\"Why?\" She lifted her head to meet his curious gaze. \"What do you mean?\"\n\n\"Well.\" He paused, rubbing a hand up and down her back. \"I thought we were okay when I left on the road trip, but something must have happened before I got back. I just want to know what I did, or said, to make you so upset.\"\n\n\"Oh, Alexei, no.\" She lifted up and grabbed his face. \"You didn't do anything. It was me being... I don't know, scared, I guess.\"\n\nHe frowned. \"Scared of what?\"\n\n\"Of us. Of growing too attached to you and having it end.\"\n\n\"Why would it end?\"\n\nShe shrugged. \"Why does any relationship end? I freaked out and didn't know what to do.\"\n\n\"So you tried to break up with me?\"\n\n\"Yes. Stupid, right?\"\n\n\"No.\" He touched her cheek, his expression softening. \"You're not stupid.\"\n\n\"Thank you.\" She turned her face in his hold and kissed his palm before drawing his hand down. \"Honestly, it was something Theresa said to me.\"\n\n\"She was mean?\"\n\n\"No, nothing like that. She meant it in the best way, really. I just took it the wrong way, I think and it freaked me out.\"\n\n\"What did she say?\"\n\nCharlotte recapped what she could recall of her conversation with Theresa. Repeating it out loud now made her realize how foolish she'd been, and how silly to jump to the extreme that she had, in trying to end things with Alexei.\n\n\"I've been on my own with Zoe for so long and I've loved having you step in and become a part of our little team, you know?\"\n\nHe nodded, his brow still furrowed as it had been while she explained.\n\n\"Then I freaked out that I might not have it forever.\"\n\n\"Lyubov--\"\n\n\"No, I know that you never intended to leave me.\" It made her warm all over, inside and out, when she replayed his words in her head but she shoved that aside for now. \"Now I do, anyway, but after dinner with Theresa, and what she'd said, I don't know. It rubbed me the wrong way and I let it take over my head. Does that make sense?\"\n\n\"Yes.\" He rubbed his palms up her arms and down to her elbows. \"I understand.\"\n\n\"I love everything that you do for me and Zoe, even if I seem stubborn sometimes.\"\n\nHis lips thinned, as if he was holding back a smile. \"Yeah.\"\n\n\"And I was scared that I'd come to rely on that too much, only to have the carpet yanked out from under me. Again.\"\n\n\"I would never do that.\" His hand lifted, sinking into her hair and drawing her head down to his until their foreheads connected. \"I'll always be here to take care of you.\"\n\nCharlotte closed her eyes and soaked in his warmth and familiar scent. It had only been a day since she'd last been this close to him but she'd missed it.\n\n\"I know that.\" She opened her eyes, blinking at him. \"But I also didn't want you to think I'm only with you because of what you can do for me, or buy for me.\"\n\n\"I never thought that.\" He started to rub his hands up and down her back. \"We've hardly even done anything that requires more than our time.\"\n\n\"Well, there was the dress thing.\"\n\n\"Sure.\" He chuckled. \"And you gave in eventually.\"\n\n\"Yes.\" She shivered as she recalled exactly how she'd given in later that day. \"I am scared still that we're not equals in this relationship though.\"\n\n\"Equals?\" He looked confused now.\n\nShe smiled and shifted, stretching out beside him a little more. Now that she was back in his arms, her relief and contentment was making her more and more relaxed.\n\n\"Yeah, I mean, you're you, with your big career and all. And I'm me, single mom with little to no savings, and only a vague plan for returning to school for a degree in something.\" She let out a dry laugh. \"See? I don't even know what I want to go back to school for!\"\n\nHe laughed with her and turned so they lay on their sides, facing each other, sharing one pillow. \"What were you going to major in when you were in college?\"\n\n\"I hadn't declared it before I got pregnant.\" Charlotte rubbed her fingertips over his St. Christopher medal where it dangled now. \"But I was considering psychology, or something along those lines. Maybe get my masters and become a school guidance counselor.\"\n\n\"You'd be wonderful.\"\n\n\"Thank you.\" She smiled at his simple praise. \"But it seems too daunting now to consider it. Working, taking classes when I could afford it. God, I'd be forty by the time I finished.\"\n\nWhen she met his gaze, she had to laugh at his expression.\n\n\"You know I can pay for it. All of it. You wouldn't have to work.\"\n\n\"I know that but I would never ask.\" She pressed a kiss to his chin, bristly with whiskers.\n\n\"You're not asking. I'm offering.\"\n\n\"Alexei--\"\n\n\"I am. Right now.\" He lifted his hand and cupped it around her neck, making her shiver yet again. \"I will pay for your school if you would like to return.\"\n\nShe stared at him, her mouth opening and closing. \"You mean that.\"\n\n\"I mean everything I say to you.\"\n\nShe knew that. Of course she did. \"You are so--\"\n\nHe waited, one eyebrow arched, and she let out a giggle.\n\n\"I love you, Alexei.\"\n\nHis expression relaxed into a smile and he rolled her to her back a second later, covering her mouth and smothering any more of her giddy laughter. It turned into moans and gasps in seconds and she squirmed under his weight as he slid his hands down her sides, finding her warm skin under her sweater.\n\n\"Lift.\"\n\nShe shuddered at his deep-voiced command. God, she loved his single word orders. She lifted her arms and he swept the sweater off her torso. Then his hands were at her waist, plucking the button of her pants loose as he closed his lips over hers again. She opened under him, groaning at the taste of him and curling her tongue around his as she lifted her hips so he could slide her pants and panties off.",
        "\"Off.\" He lifted over her as he spoke, tugging at the strap of her bra and she twisted, snagging the catch with one hand and pulling it loose.\n\nAs she tossed it away from her, left completely naked under his heated gaze, Charlotte's breath caught. One of his hands skimmed up her hip, over the curve of her stomach, and up to cup the underside of one breast. His thumb stroked the taut nipple and she bit her lip to hold back a sound.\n\nHis eyes snagged on hers as he did it again, something in his gaze making her stomach flip.\n\n\"Can you be quiet, lyubov?\"\n\nShe didn't know, not after being away from him for so long, and after the past twenty-four hours. But she nodded, afraid that if she said no, he'd stop.\n\n\"Take your shirt off.\"\n\nHis lips curved up at her soft demand and he tugged the shirt off, the bells giving little tinkles that made her giggle. She turned her face to the pillow as he tickled her sides in retaliation and squirmed as his hands moved to her thighs, and between them. Her breath left her in a whoosh when he bent down between her legs, closing his lips over the center of her, where she was so hot and all but melting for him.\n\nHer hand came down on his head, the soft strands of his hair so achingly familiar. His tongue slicked over her, again and again, so light and teasing. No matter how much she wriggled under his mouth, or begged with desperate whispers, he didn't ease up or go deeper. And still, he brought her right up to the edge of reason, only to lift his head and meet her foggy gaze with a wicked grin.\n\n\"Alexei--\"\n\n\"Yes?\" As he spoke, he opened his mouth and flicked his tongue over that one spot. Her back arched off the bed and she clenched her hand in his hair.\n\n\"Oh, God.\"\n\n\"You like this?\" He did it again, pressing a little more with the tip of his tongue.\n\n\"Yes. Holy-- yes, yes!\"\n\nHe lapped at her as she gasped, undulating against his mouth. At last, he relented, pressing her down and devouring her until she was half-twisted, her cries muffled into her pillow. When she looked up again, he was shucking his pants and spreading her out on her back again.\n\n\"You want me now?\"\n\n\"Always.\" And she drew him down to her, their chests rubbing together and her legs parting even wider to accommodate his big body.\n\nHe thrust into her once, claiming her in a single, bold move. She moaned against his lips and he kept their lips sealed as he moved in her. He pulled back, pushed deep again, then did it over and over until they were both mindless with pleasure and desire. She clung to him, desperate for more, even as she had him inside her. She'd never get tired of the way he owned her, body and soul.\n\nAt last, he lifted his head, his hips still moving between her thighs, jagged and uneven though his movements were. He kissed her, licking the corner of her mouth, and shoved his hand through her hair. He held her like that, their eyes locked, breath mingling, as he pounded into her, losing himself in her body.\n\n\"I love you.\"\n\nHer whispered words were nearly drowned out by his roar of release. He continued to move in her as he buried his face in her neck, struggling to muffle the sound. She laughed, euphoric and so happy her heart was ready to burst out of her chest.\n\nA little while later, Alexei cradled her to his chest and pressed a kiss to her lips, his expression worried.\n\n\"What's wrong?\" She brushed a hand over his furrowed brow.\n\n\"We didn't use anything just now.\"\n\n\"Oh.\" She blinked as she realized he was right. She counted the days for a moment and shrugged. \"I should be okay.\"\n\n\"I'm sorry, lyubov.\"\n\n\"It's not your fault. I wasn't exactly thinking straight either.\" She smiled and cupped his face before a yawn escaped her. \"I'll go to the doctor next week and see about getting a prescription for the pill.\"\n\nHe blinked and settled down next to her, stifling a yawn of his own. \"Are you sure? What if--\" He didn't finish the thought but she smiled and snuggled into his chest.\n\n\"It would be a surprise, but not an unwelcome one.\" Another yawn. \"That being said, we can be careful from now on. I'm not worried.\" And she meant it.\n\n\"Okay.\" He matched her yawn, and relaxed beside her.\n\n\"Good night, Alexei.\"\n\n\"Sweet dreams, lyubov moya.\"\n\nAnother kiss, light as a feather, then she slipped into dreams.\n\n\u2500\u2500\u2500\u2500\u2500\n\n\"It's okay if you're nervous.\" Clyde leaned close to Alexei's side as they stood at the kitchen island in Clyde and Theresa's home.\n\nAlexei faced the other man with raised eyebrows. \"Nervous?\"\n\n\"Yeah, about meeting the parents.\" Clyde leaned on his elbows, grinning up at Alexei. \"I was, the first time.\"\n\nAlexei huffed out a laugh and shook his head. \"I'm not nervous about meeting them.\" He glanced over at Charlotte and Theresa, who were sitting on a couch, Zoe between them, reading from a children's book Theresa had given her. \"I'm nervous for Charlotte to see them again.\"\n\n\"Ah.\" Clyde nodded. \"I understand.\"\n\nCharlotte had assured Alexei she wasn't worried, although he knew she was a little nervous about seeing her parents for the first time after so many years.\n\n\"After last night, I feel like I can face anything,\" she'd said to him that morning before hugging him tight. \"With you, I'm already happy. Reconciling with my parents would be great, but I'm not scared to face life without them, not anymore.\"\n\nHe ached at her plainspoken words, knowing she meant them. He knew from experience that yes, one could live life without parents, but he didn't want that for her, not if it could be helped. On the other hand, after the way they'd cut her and Zoe out of their lives, he wasn't sure their presence now would be good in the end. Still, it wasn't his decision either way. He was there to support his girls.\n\n\"Can I get you another drink, man?\" Clyde pointed at his nearly empty beer. \"Or something else?\"\n\n\"Maybe just water.\" Alexei lifted his bottle to his lips to finish it off. \"I have practice in the morning. Don't want to overdo it.\"\n\nClyde nodded and moved off to pour him a glass of ice water. As he handed it to Alexei, the doorbell rang, announcing the arrival of Charlotte and Theresa's parents.\n\n\"Showtime.\" Clyde grinned and headed off to answer the door.\n\nAs expected, the arrival was awkward. Alexei moved to Charlotte's side as she stood to greet her parents. Zoe stood between them, one arm wrapped around Alexei's leg as she liked to do when struck with her occasional shyness.\n\nCharlotte's parents, Debra and Tom, walked into the living room, Theresa and Clyde a step behind them, and for a moment, no one moved or spoke.\n\nDebra looked from Charlotte to Zoe, and back again. She took another step forward and a smile spread across her face, though it was stilted, as if she was unsure of the reception she'd get.\n\n\"Merry Christmas, Charlotte.\"\n\nCharlotte hesitated before stepping forward to hug her mother. It was brief and not even half as heartfelt as Charlotte and Theresa's greeting had been earlier in the day. \"Merry Christmas, Mom.\" She turned and lifted a hand for Alexei, which he took. \"This is Alexei, my boyfriend.\"\n\n\"Nice to meet you, Alexei.\" Debra shook his hand and Tom stepped forward to shake his hand as well. \"Debra and Tom.\" Her gaze dropped to Zoe, still clinging to Alexei's leg. \"And you must be Zoe.\"\n\nZoe nodded, her little fist going to her mouth.\n\n\"I'm your gr--\" She stopped and lifted wide eyes to Charlotte. \"Um. That is--\"\n\nCharlotte sighed and bent to lift Zoe into her arms. \"Zoe, sweetie, this lady is your grandma.\"\n\nZoe's eyes grew wider and she looked at Charlotte. \"Like Grandma Gladys?\"\n\nAlexei saw the way Debra's expression pinched and he kept his own neutral, continuing to let Charlotte take the lead.\n\n\"Yes, sweetie, except this is Grandma Deb. She's my mom, like Grandma Gladys is Auntie Sarah's mom.\"\n\nZoe frowned but nodded in understanding, her eyes flickering to Tom at Debra's elbow.\n\n\"And this is Grandpa Tom.\"\n\nZoe nodded again and stuck her hand out towards them. \"I'm Zoe.\"\n\nTom shook her little hand first, his smile genuine. \"Lovely to meet you, Zoe.\"\n\n\"Yes.\" Debra took her hand next for a firm, little shake. \"Theresa has told us so much about you.\"\n\n\"Has she?\" Charlotte lifted an eyebrow and set Zoe back on her feet.\n\n\"Yes, of course. Who else?\"\n\nAlexei sucked in a breath at Debra's tone.\n\nCharlotte stiffened as well but turned to meet him with an even smile. \"Alexei, would you take Zoe to the movie room? I'll come get you both for dinner when it's ready.\"\n\nClyde lifted a hand and followed. \"I'll come with you. Make sure Zoe doesn't pick the wrong princess movie.\"\n\nZoe giggled and darted ahead of her Uncle Clyde and Alexei, who shot one more look at Charlotte before leaving the room.\n\nShe could handle the coming conversation with her parents, no matter which way it turned out. And he would be there to hug her or high-five her, whatever she needed.\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte waited until she was sure her daughter was out of earshot before she faced her mother again. She hadn't expected the first barb to come so soon, but here they were. Theresa had stayed beside her, and after their last talk, she knew her sister would have some thoughts to share as well.\n\nSo, Merry Christmas and families and all that.\n\n\"Was it really necessary to send her away?\" Debra glanced in the direction Zoe and the men had gone. \"We just met her.\"\n\n\"And who's fault is that, Mom?\"\n\n\"You don't need to take that tone with me, young lady.\"\n\nCharlotte let out a dry laugh. Here we go. \"I'm not a young lady, not anymore. Not for about five years now. So, let's get it all out in the open, shall we? Then we can move on with tonight, or our lives, and that'll be that.\"\n\nTom frowned at her and she returned his look with a mild one of her own. After her night with Alexei, she did feel that she could face anything, including this long-overdue confrontation.\n\n\"Look, I'd love for you both to have a relationship with Zoe. With me.\" Charlotte pressed a palm to her chest, ignoring the rapid pace of her heart. \"But I'm not going to allow you to belittle me or make snide comments, especially not with Zoe in the room.\"\n\nDebra sniffed and moved around Charlotte to take a seat on one end of the couch. Tom followed, still frowning at Charlotte. \"After all these years, we can't even have one nice night together?\"\n\n\"Mom.\" Theresa rolled her eyes and walked over to sit in the couch across from her parents. \"That's not what Charlotte is saying.\"\n\n\"And you're ganging up on us now?\" Debra sniffed again.\n\nCharlotte rubbed her forehead as she took a seat next to Theresa. \"That is not what's happening. We need to talk, all of us, and you know it.\"\n\n\"Okay.\" Debra dabbed at the corner of her eye with a tissue. \"Let's talk. Why have you kept our granddaughter from us all these years?\"\n\nCharlotte had to close her eyes and count to ten before she could respond with any semblance of calm. \"I have done no such thing, Mom. I've called you every year since you kicked me out of your house to let you know where we are and how to reach us. You were the ones who never contacted me, never asked to visit, never invited us over.\"\n\n\"We're your parents. Did you need an invitation?\"\n\n\"Are you serious?\" Charlotte scowled and clenched her hands into fists on her lap. \"You kicked me out of the house, Mom. Yeah, I figured I'd need an invitation after that.\"\n\n\"You're being dramatic, Charlotte.\" Her father shook his head, reclining back on the couch with a look of disapproval on his face. \"We told you that you didn't have to leave.\"\n\n\"No, you said I could go and never come back as long as I intended to keep my baby.\" Charlotte lifted her eyebrows, the memory one she would be hard-pressed to forget. \"Am I wrong?\"\n\n\"Well, no.\" Debra lifted her chin. \"But you made your choice.\"\n\n\"Yes, I did. I kept Zoe, and didn't come home. Just like you said, and now you're really going to sit there and claim I've kept her from you?\" Charlotte scoffed and would have jumped up to start pacing, or to storm out, she wasn't sure which, but Theresa's hand came down on her knee. She glanced up at her sister and let out a breath. They'd only been reconnected for a few short weeks and she already knew her sister was an ally in this.\n\n\"Look, I meant it when I said I'd love for you to have a relationship with me and Zoe, but not if it's going to be like this.\" Charlotte sank back against the couch cushions. \"I'm not going to continue to defend my decision, not when I have no reason to.\"\n\n\"You were nineteen, Charlotte.\" Her father's tone was sharp. \"Did you expect us to throw you a party?\"\n\n\"I expected to not be disowned by my family.\" Charlotte glanced at Theresa. \"I expected you not to force Theresa to cut ties with me as well. I expected to not have to go through everything alone.\"\n\n\"You made that decision yourself,\" Debra said. \"You know we would have supported you if--\"\n\n\"Yes, I know, if I'd gotten rid of her or given her away.\" It made Charlotte sick to her stomach to even consider not having Zoe in her life. \"That wasn't going to happen.\"\n\n\"Then here we are.\"\n\nThe four of them exchanged stubborn stares for a long moment before Theresa broke the silence.\n\n\"Mom. Dad. You were wrong.\"\n\n\"I beg your pardon?\" Debra turned shocked eyes on her eldest daughter.\n\n\"When Charlotte told us she was pregnant, you were wrong to threaten her the way you did, to force her to choose between us and Zoe.\" Theresa reached over and clutched Charlotte's hand. \"To force me to choose. We've lost years because of it. Years. Birthday parties, and first words, and sticky fingers, and all of it, because you were too proud to admit it.\"\n\nFor a moment, she seemed to have stunned their parents into silence.\n\nDebra swallowed, looking down at the tissue in her hands. \"We did what we thought was right.\"\n\n\"Well, you were wrong.\" Theresa shook her head. \"And we can't change that, any of what happened. Charlotte and I are working on our relationship now, and I don't know if she forgives me completely, not yet, but I'm going to be a true sister from here on out.\" She glanced at Charlotte, her smile a little misty. \"And I know she'll do the same.\"\n\nCharlotte swallowed the sudden lump in her throat as she turned her hand in Theresa's and squeezed in return.\n\n\"So far, neither of you are asking for forgiveness, and maybe you never will, but Charlotte's right. If we, any of us, have any hope of moving forward and having any kind of relationship again, we need to let go of the anger and disappointment of the past.\" Theresa gestured with her free hand between them. \"Can you do that? Or are you going to bring up the fact that Zoe exists every time we're all together?\"\n\n\"Well, we can't pretend she doesn't exist.\" Debra sniffed.\n\n\"You know that's not what she meant.\" Charlotte gave in and rolled her eyes. \"Are you going to make comments and look down your noses at me, at both of us, any time we see you?\"\n\nDebra looked for a moment like she might say yes, but she let out a breath and seemed to deflate right before their eyes. Their father put an arm around her shoulders and gave her a squeeze, the affection nothing new. Until that schism when Charlotte got pregnant, they'd been a close family. Or so she'd thought.\n\n\"I am sorry, Charlotte. I just wish you could understand how disappointed we were when you told us.\"\n\n\"I do.\" As a mother now, and far from having to face anything of the sort with her own daughter, Charlotte did understand differently than she did when she was pregnant and terrified. \"But I would never do to Zoe what you did to me.\"\n\nThey both winced at her words, spoken more sharply than she'd intended.\n\n\"Look, it was an awful time for all of us, at least we can agree on that.\" Charlotte glanced at Theresa who nodded in agreement. \"If you want to move past it, then I'm willing. But you will promise here and now, to never ever say anything to Zoe like what you've said to me. I won't allow you in her life, or mine, if you say one thing to her that I don't like.\"\n\nDebra's eyes skimmed over Charlotte's face, a look that was at once foreign and familiar. \"I understand.\" She exchanged a look with Tom and drew in a deep breath. \"Of course we want to be a part of your lives.\"\n\n\"We can't get back the years we've lost,\" Tom said, squeezing his wife's shoulders. \"But we can move forward, as you said.\"\n\nCharlotte nodded and looked down, blinking back tears. Maybe it was wishful thinking to think that this was it, the only disagreement they'd ever have again, but she'd take it, for now.\n\n\"Okay.\" Theresa squeezed Charlotte's hand once more and stood up. \"I'm going to check on dinner. Why don't you all go join Zoe and the guys for the movie?\"\n\nDebra and Tom stood and walked downstairs to join the others in the movie room, but Charlotte followed Theresa into the kitchen.\n\n\"Thank you, Theresa.\" She hugged her sister and held her shoulders as she released her. \"I appreciate your support.\"\n\n\"You should have had it a long time ago.\" Theresa smiled and sighed. \"I hope they meant what they said.\"\n\n\"Me too, but we'll face whatever comes.\"\n\n\"Yeah. Neither of us are alone anymore.\"\n\n\"No.\" No, Charlotte would never be alone again, and the euphoria she'd felt the night before came roaring back. She exhaled and hugged Theresa one more time. \"Now, can I help with anything?\"\n\n\"Sure.\"\n\nThey worked side-by-side for another fifteen minutes, until dinner was ready, and then called for the rest of the family to join them in the dining room. Dinner conversation was a little stilted and awkward at first, peppered with a lot of small talk about the weather. Then Tom started to grill Alexei about the team and the remainder of the season, and Zoe shared her thoughts as well, insisting Alexei would always be the greatest hockey player in Chicago there ever was or will be.\n\nLater, at home in bed, with Alexei wrapped around her again, their bodies still hot and sweaty from what they'd done after putting Zoe to bed, Charlotte let herself be happy, truly happy. She snuggled into Alexei's chest, sighed when he kissed her forehead, and slept, safe in his arms.\n\n\u2500\u2500\u2500\u2500\u2500\n\nTwo months later, Charlotte let herself into Alexei's apartment. She'd been running a little late after her meeting at the college and traffic had been a nightmare. Thank goodness Alexei didn't have a game or she'd have probably made him late, or miss it, not that he would have been angry.\n\nShe was about to open her mouth to call out to them, when she heard a giggle, followed by Alexei's deep voice. Toeing her shoes off, Charlotte slipped closer to his bedroom and tilted her head to eavesdrop, her heart melting at the sweet tone of their whispered exchange.\n\nIn the weeks since Christmas, Alexei and Zoe had become even closer. The little girl had dropped the 'Grumpy' nickname, and now called him Alexei, though she had asked Charlotte a week ago if she could call Alexei 'Dad'.\n\nNow, Zoe was giggling at something Alexei said, making Charlotte smile. She never ceased to be amused by Zoe's infectious laughter.\n\n\"Now remember, it's a secret, right?\" Alexei said, his tone low but Charlotte could still make out his words. \"You can't tell Mommy.\"\n\n\"Okay. I won't. But when will you tell her?\"\n\n\"Well, I won't tell her anything. I'll ask her.\"\n\n\"Fine. When will you ask her?\"\n\nCharlotte's heart tripped in her chest and she covered her mouth with one hand.\n\n\"Soon, zaya.\"\n\n\"And then I can call you Daddy?\"\n\nThere was a pause and when Alexei's voice came again, it was rougher than before. \"You would like to?\"\n\n\"Yes.\" Always blunt. \"You are, aren't you?\"\n\nCharlotte blinked, tears slipping over her cheeks.\n\n\"If you would like me as your Dad, then I am. Always.\"\n\n\"Okay.\" A rustling noise. \"I love you, Daddy.\"\n\nCharlotte choked back a sob.",
        "\"I love you, Zoe.\" Again that rough voice, thick with emotion. Charlotte knew without having to see his face that he was fighting tears of his own. \"I have something for you too, zaya.\"\n\n\"A present? For me? Is it another princess dress?\"\n\nA chuckle. \"Not this time. Here.\"\n\n\"Your necklace?\"\n\nOh, stop. My heart. Charlotte squeezed her eyes shut as more tears slipped out.\n\n\"Yes. It's yours now.\"\n\n\"Won't you miss it?\"\n\n\"Not at all. It's meant for those about to go on a journey or adventure, and you, zaya, are going to go on so many, I just know it.\" More rustling, then the voice grew in volume. \"You'll have this with you, and you'll know I'm with you, protecting you and sharing your adventures.\"\n\n\"Do you promise?\"\n\n\"Always.\"\n\nCharlotte fell back from the door as Alexei opened it, Zoe cradled against his side in one strong arm. He took one look at her face and sighed. \"You heard.\"\n\nShe couldn't even form words. She threw herself at him, her arms going around both her true loves.\n\n\"Mommy! Look.\" Zoe patted her shoulder and Charlotte lifted her face to see Zoe holding the familiar St. Christopher medal out from her slender torso. \"Daddy gave me this.\"\n\nAlexei's eyes grew wide and darted to Charlotte. It was the first time she'd ever seen him look uncertain. She bit her bottom lip and nodded at her daughter. \"It's beautiful, sweetie. Did you say thank you to Daddy?\"\n\nAlexei continued to stare at her and she met his gaze steadily, neither of them moving as Zoe squirmed from his hold a moment later. She darted to the living room, the TV clicking on as she settled on the couch.\n\nMoving closer, Alexei's arms went around Charlotte and he dropped his head to hers, his body trembling with a long inhale.\n\n\"Yes?\"\n\nShe nodded and lifted onto her toes to circle his big shoulders with her arms. \"Always yes.\"\n\n\u2500\u2500\u2500\u2500\u2500\n\nEIGHTEEN YEARS LATER\n\nZoe Novikov wasn't nervous about graduating from Yale. She had her five-year plan detailed down to the second. Well, almost the second. Never had she doubted herself on her path to this point and she supposed it was because of her family.\n\nAfter all the speeches and cap-throwing, Zoe found her family in the crowd. Her little brother, Alexei Jr., or AJ as he preferred to be called, was the first to spot her. He wrapped his twiggy little twelve-year old arms around her and squeezed.\n\n\"Congratulations, Zo.\"\n\n\"Thanks, champ.\" Zoe hugged him back. He was rapidly approaching the age where he'd be 'too cool' for big sister affection so she took it when she could get it.\n\nA moment later, two more sets of arms circled her and AJ. Grinning, Zoe looked down and bent to kiss the tops of her twin sisters' heads. Katerina and Sarah both smiled up at her, gap-toothed smiles nearly identical. After her siblings let her go, Zoe embraced her Auntie Sarah, and Sarah's husband, Andre.\n\nSarah sniffled and dabbed her eyes as she hugged Zoe. \"So proud of you, Gremlin.\"\n\nZoe laughed at the old nickname. \"Thanks, Aunt Sarah.\" She wasn't her biological aunt, but Sarah would always be Auntie to her. She wished Auntie Theresa, Uncle Clyde, and her grandparents could be there, but they'd opted to stay behind in Chicago to help out, since Grandpa Tom was having knee surgery the following day. They'd been there for her high school graduation, and every other big milestone, and they would be there for any others to come, Zoe knew.\n\nAt last, her mother stepped forward and swept her into a tight, achingly familiar embrace. Zoe sighed and closed her eyes. Nothing had changed over the years, not her love for her amazing mother, nor the warm comfort of her arms.\n\nPulling back, Charlotte Novikov clasped warm, soft hands to Zoe's face and blinked more tears free from eyes so similar to Zoe's. \"I am so proud of you, sweetie. You have achieved so much and I can't wait to watch you do even more.\"\n\n\"Mom.\" Zoe tried to roll her eyes but they filled with tears. Okay. Today, she'd allow everyone to be maudlin around her. It was a big day, after all. She'd graduated from Yale and would be heading off to Princeton medical school next. After that, who knew?\n\n\"I never doubted for a second that you'd finish at the top of your class.\" Charlotte wiped her cheeks and kissed Zoe's forehead. \"My little, energetic genius.\"\n\nZoe grinned and nodded, hugging her mom one more time. \"I'm not little anymore.\"\n\nA gruff voice joined the mix from over her head. \"You will always be little to us.\"\n\nTilting her head back, Zoe smiled at her father. \"Everyone is little to you, Dad.\"\n\nAlexei nodded and then gave her one of his rare, genuine smiles. \"You are beautiful in your gown and cap, zaya.\"\n\nHe'd never stopped calling her his little bunny, from that first day that she could barely recall. At some point, she'd stopped calling him Grumpy, and he'd become Dad. After he'd married her mother, they'd made it a legal fact, not that any of them had needed it.\n\n\"Thanks.\"\n\nWhen Charlotte finally released her oldest daughter, Zoe turned and let herself be folded into Alexei's big arms, his big chest a familiar resting place for her cheek, and his big, big heart thumping steadily underneath.\n\nNo, she didn't remember the days before her father had come into their lives. And the days before didn't matter. All that mattered was that Alexei was her dad, and he'd been the rock she'd always leaned on, the warm hug she'd never pulled away from, and the firm strength she'd been more thankful for than she could ever express.\n\nHis lips came down on her head and she sighed, squeezing her eyes shut. She'd kept it together through everything but now, with her dad whispering words in Russian against her hair, she started to cry. She'd learned enough of the language from her dad over the years to know what he was saying. That he'd never been so proud and that his life hadn't begun until she'd stomped her way into his heart.\n\nWho would she be without this man? Without his love? What had she done to deserve a father who didn't share her blood?\n\n\"You will take over the world, zaya. I have always known.\"\n\nShe laughed, the sound weak and watery as she continued to cry into his big chest. \"No pressure?\"\n\nHis responding laughter rumbled under her cheek and his hand rubbed a familiar pattern up her back and down again. \"You can take over or not. I will be proud of you no matter what.\"\n\n\"We both will be,\" Charlotte said and Alexei lifted one arm to bring her into their embrace.\n\nOne-by-one, the other three Novikovs joined in, and Auntie Sarah straight-up sobbed as she took pictures on her phone.\n\nNo, Zoe wasn't afraid of graduating, or of going to medical school. She wasn't afraid of anything and hadn't been since the day Alexei decided they were it for him. Under her robe, the St. Christopher medal rubbed against her skin. With that and her family's unflagging love and support, she thought she could do anything.\n\nTake over the world? Why not.\n\nTHE END"
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey romance",
        "hockey player",
        "hockey team",
        "athlete",
        "sports romance",
        "sports",
        "single mom",
        "hockey"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-08"
}