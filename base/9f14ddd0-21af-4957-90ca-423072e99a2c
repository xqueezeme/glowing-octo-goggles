{
    "title": "Welcome to Hart House",
    "pages": [
        "The storm had been unexpected. It came from the west, a sheet of rain and clouds pouring through the mountain pass up ahead, washing over my car, the winds strong enough to shake my vehicle. \n\nThat morning, before I left the motel, I had checked the forecast. They had predicted clear skies all day and night. Still, I supposed, they said that the weather was unpredictable in the mountains. That didn't help me. I was four days into a cross country trip, from my old home to my new one on the west coast. My car was on its last legs and this sudden weather assault was more than it could bear. \n\n\"Oh fuck no!\" I shouted to no one as the lights on my dash began to flash and the engine began to sputter as I lost power. I let the vehicle slow as I steered to a pull-off area beside the steep road. I gripped my steering wheel hard and sighed deeply. I was alone in the car. Alone on that road. With my wife, Rachel, back home packing up the last of our stuff before she joined me at our new house, I felt utterly alone in the world. \n\n\"What the hell are you supposed to do now, Drew?\" I asked myself, speaking aloud, my own voice keeping myself company as it had these past few days. I scratched at my full beard, dirty blond slightly shot through with grey these days, a habit I had when I was perplexed or nervous. \n\nI looked at my cell phone and groaned. I had no service and hadn't had any for hours here in the mountains. There was no way to call a tow truck with that now-useless hunk of plastic and glass. \n\nWith my headlights going out, the road was dark. Sheets of rain slammed into the windshield and poured down the windows. I could see maybe three feet into the darkness. I was in a bad space. I could see nothing ahead of me in terms of getting help.\n\nI looked back over my shoulder and, though I couldn't see it now, remembered that I had seen lights, presumably a house shining in the darkness off the road maybe three miles back. I had noted it because I had thought what a nice place to have a home. Remote and secluded surrounded by wilderness. That might be my best bet, I figured. \n\nGrumbling to myself I dug around behind me, grabbing a hoodie out of my bag and pulling it on. I took a deep breath to steel myself and opened the door to my car, getting out. \n\nInstantly I was hit by powerful waves of rain and gusts of wind that I had to lean into to keep my footing. In a blink of an eye I was soaked, the hoodie providing no protection from these elements. My jeans felt like they sucked to my legs, and my leather boots filled with freezing water. \n\nI pulled the useless hood up over my head, covering my short trimmed blond hair and began trudging back the direction I had come from. \n\nI don't remember the details of that walk very well. When I bring it to mind all I get are flashes of discomfort and cold. Being wet and miserable. I don't know how long it took but it felt like it dragged on for hours and hours. I was wet, angry and exhausted before I came to a turnoff that seemed to be the right one. \n\nThere was an old iron gate across the driveway that seemed to be locked. I shook it and there was, of course no response. The bars were far enough apart, however, that I was able to push myself through them and get to the other side of the barrier. \n\nAt that point, due to the storm and the darkness I could not see the house I thought I had noticed before but I took it on faith that it was there, heading up the drive, under an arched canopy of tree branches that met above me transforming the driveways to a kind of green tunnel. \n\nTrudging up that long curving driveway as fast as I could I could only think of getting inside and calling for help. My teeth had begun to chatter painfully and I had my own arms wrapped around me. Eventually I could see a dark shape ahead of me. \n\nSudden lightning flashed across the sky, a long jagged fork of electricity that lit the world, creating a dark silhouette in the shape of a large house in front of me. It was like a scene from a cheesy old horror movie and I laughed at myself for jumping in startlement. \n\nFinally I was close enough that I could make out weak yellow light leaking through the windows in the upper level of the house. \n\nThe house was large. Three stories with steep gabled roofs. A large covered porch wrapped around it and there were several steps that led up to a large wooden door carved with an intricate floral motif. \n\nIt was all so gothic and over the top I couldn't help but smile despite my deep discomfort. I strode up the steps and sighed happily when the porch roof blocked the pouring rain. I was still shivering with cold but at least I wasn't being actively rained on. \n\nI looked around for a doorbell to ring but did not see one. There was, however, a large iron knocker. I reached out to grip the swinging part but my hand paused just before touching it. I had never seen a door knocker quite like this one. \n\nWhile you might expect, on a strange old gothic house like this, a knocker in the shape of an animal's head, the ring through its mouth, or even, a macabre human face, this one was very different. The pitted metal was rather large and in the shape of a nude female upper torso. The details were quite fine. Her eyes were closed and her head pressed back into the door. Her finely detailed face showed her biting her lower lip. Her back seemed to be arched and her chest was thrust out towards me. There were two knockers, not just one. A metal ring pierced each of her erect, iron nipples. I got the impression that the artist who created this wanted to give the impression that this iron woman wanted you to pull on the rings.\n\n\"I don't mind if I do,\" I muttered to the door knocker, the ridiculousness of the design making me feel silly. \n\nI gripped both of the rings, one in each hand and lifted them. It was the rain and the darkness and my own discombobulation, I supposed, that made me imagine a woman's voice in my mind. \n\nYes - it whispered in my mind. - Yes. Pull on them. Pleeeease!\n\nI chuckled at myself and tugged the iron rings. \n\nOh yes!! Don't stop! - The voice keened in my mind. \n\nI had had enough of my own game and swung the rings down, causing a pair of loud bangs that I could hear echo through the door. I swung them again for good measure, in case whoever lived here was asleep, then released them. \n\nI could have sworn I heard that same female voice whine as I released the rings but I could hear movement on the other side of the door so instantly forgot that. \n\nAs I waited impatiently for the sounds of deadbolts being pulled on the other side, I pushed back my hood and wiped water from my eyes. Finally, after what seemed an eternity, the door swung open with a loud creak. \n\n*****\n\nDim light and palpable warmth flooded out of the door as it was pulled open. After the darkness of the night and storm it took me several moments for my eyes to adjust enough to see who stood in front of me. \n\nGiven all that I had seen so far, I wasn't surprised to see an old man in a very formal suit standing there one hand on the door knob looking expectantly at me. He had long, stringy white hair that hung to his shoulders, but the top of his head was bald and shone in the light from inside. His nose was so long it seemed to dip below his upper lip. His eyes were bright blue, but sunken in deep dark circles. His shoulders were hunched and the hand that rested on the doorknob was gnarled.\n\n\"Thanks for opening the door,\" I said. \"My car broke down up the road and I don't have any cell service up here and...\" I shrugged. \"I'd be really grateful if you would let me use your phone to call a tow truck. If that's ok.\"\n\nThe man looked at me for another few moments, just to the point that I was getting uncomfortable under his steady gaze before he spoke. \n\n\"Ah,\" he said, his voice thick with a British accent, \"well that's rotten luck isn't it, your Auto breaking down in such a terrible storm! I'm sure I would be happy to help but unfortunately this horrid weather has wreaked havoc on the phone lines. Not even a dial tone, I'm afraid!\"\n\n\"Oh, shit,\" I said, \"that sucks! Ah. Sorry for swearing.\"\n\n\"Quite alright,\" he chuckled. \"It is indeed, 'shit'.\"\n\nHe regarded me another few uncomfortable moments before speaking again. \n\n\"Oh! But I am so very sorry,\" he finally said. \"Here I am leaving you wet and cold on the doorstep! Please come in and get warm! Get dry! The mistress of the house would be very upset with me for leaving you like this! Come in! Come in! This storm, if I know anything, will last at least the night! You must come in, get changed and dry and spend the night as our guest!\"\n\nHe stepped aside and gestured for me to walk past him and enter. Despite my soaked and freezing condition I hesitated for just a moment. This was all very strange and almost unearthly. My hesitation, however, did not last long. I was too cold and tired to think too deeply about all of this and pushed past the old man, stepping onto the thick rug that went from the door down a long hallway. \n\nThe butler grinned as I entered and, pausing just a moment to run his fingers over the cast iron door knocker's breasts, swung the door shut behind me. He noticed me watching his old fingers on the knocker and he smiled slyly at me. \n\n\"Oh, the old slut loves it,\" he whispered at me in a conspiratorial tone. Then louder he said, \"Welcome to Hart House...what is your name, sir? I,\" he bowed as he spoke, \"am your humble servant, Nicolas.\"\n\n\"Oh,\" I said, holding out my hand, \"I'm Drew. Thanks. I don't need to stay,\" I said. \"Just maybe warm up and hopefully get at the phone when it works again.\"\n\n\"Oh Drew,\" Nicolas said. \"The phones will likely be down for days! They do take their time fixing these lines up here in the wilderness! But no bother! Stay the night and in the morning our groundskeeper can help you get your car to some sort of mechanic. Please. On behalf of my mistress, I beg you to stay the night.\"\n\nI sighed. I did not have many other options at that time. It was either accept the hospitality here or go back out into the storm. \n\n\"Ok,\" I said finally. \"Thanks. I'd like to thank...who is this mistress?\"\n\n\"Ah,\" he smiled again. \"Mistress Elisabeth Hart. She is the owner and mistress of Hart house. Unfortunately for you she has retired for the night and it is unlikely you will meet her this evening. Perhaps tomorrow but she does like to keep to herself.\"\n\nI took this moment to look around. While the house was obviously grand it had, I could now see, seen better days. The rug under our feet was intricate and obviously of great value but it looked threadbare. There were electric lights but they were all dark, the only light coming from kerosene lanterns set up along the hall. I assumed the electricity was out. \n\nThe hall was lined with dark wood paneling with many doors leading off of it. Between those many old portraits hung. To the left there were stairs that led up to an upper level.\n\n\"You obviously need to warm up and change out of those very wet clothes.\" He looked down the hall and clapped, shouting out. \"Annabelle! Come! Please escort Mr. Drew to his room!\"\n\nI heard a sound on the stairs and saw a figure move down them out of the darkness above. My eyes widened as I saw the figure emerge into the light. \n\nShe was wearing a maid's outfit and it was her garb, or lack thereof, that made me swallow. You will have seen the 'sexy french maid' halloween costumes, I'm sure, and this seemed to be the original that those were based on. \n\nWhile the modern costume outfits always look cheap and cheesy this one was clearly made of high quality fabrics and fit Annabelle as if it had been specifically tailored for her. My eyes quickly moved up her body, bottom to top, taking her in. \n\nShe had simple black leather flats on her feet, thigh high black stockings, above which was the flouncy skirt. The skirt only came low enough to cover the very tops of her thighs so I could see inches of milky flesh between the stockings and the hem. It was clearly corseted, pulling the girl's waist in tight and pushing up her impressive bosom. The top off the shoulder on both sides with frilly short sleeves. Her breasts were covered by the very thinnest black material, cut very low on her large breasts, with a deep line of cleavage on display. Her nipples seemed to be hard at the moment and made little tents in the fabric. A black velvet choker was right around her long neck. He had no hat, her curly red shoulder length hair hair pinned behind her ear on one side. Her face was young, pale and round. Her lips were full and pouty, painted a bright red. Her eyes were a deep green and looked at me in a way that I couldn't understand. Hunger? Pity? \n\n\"Please, sir,\" she said to me from several steps above me, \"follow me to your room.\" Annabelle seemed to have a slight accent. It was hard to place. Eastern European, maybe?\n\nI glanced over at Nicolas and could see the old man leering at the girl. He looked at me and winked. \n\n\"Go on, son,\" he said to me. \"She will take care of you.\" Then he winked. \n\nI shook my head and smiled up at the girl. \n\n\"Ok, Annabelle, was it? Lead the way.\"\n\nShe grasped a kerosene lantern that was lit, turned and began leading me up to the upper level. I followed her, a few steps behind. \n\n*****\n\nLooking up at her as she led me was both amazing and a terrible idea for a happily married man. From below her I had a wonderful view of the backs of her thighs and, above that the white globes of her ass as her skirt flounced. From where I was looking it seemed like she wasn't wearing any underwear, or maybe a g-string. \n\nI shook my head and tried to look away from the sight which was already making my cock start to grow despite the discomfort of the wet clothing. I had been married for six years at this point and was very happy. I had never seriously considered cheating before and was not going to start now. Besides, I figured, I was 41 years old. She was probably half that age, so way too young for me. \n\nMy view changed when I reached the top of the stairs much to my relief. I was able to calm myself and follow her halfway down a long hall that seemed to go the length of the house, with many closed doors leading off of it. \n\nThere were paintings lining this hall as well. Some were portraits, some were landscapes, and others were group paintings. \n\nI glanced at some as we passed, curious, and was mildly shocked by what I saw. The portraits of the men were normal enough; Severe looking men in stuffy Victorian or Edwardian suits glared out of the frames, surrounded by libraries and things of that nature. The portraits of the women, however, were much more interesting. They tended to be young and beautiful, with less clothing on than I was used to seeing in old paintings. None were fully nude but they were in thin night shifts, or negligees, full bosoms almost spilling out of them. Those expressions were...lustful almost. As if they were begging the viewer or the artist to ravish them. \n\nThe landscapes were normal enough, if pedestrian to my untrained eyes. The other paintings, however, were much more risqu\u00e9. The first one I passed was a forest scene that depicted an orgy of sorts between satyrs and maybe a dozen young women. It was quite graphic with oversized cocks being sucked and fucked in many imaginative ways. Another was a painting depicting two women kneeling before a standing hooded man, both licking his erect cock, looking at him lovingly.\n\nJudging by this art, the cast iron door knocker and the costume that Annabelle was wearing...this seemed to be a pretty sexy household. I shook my head again. Not that anything would happen with me...still I had better keep my door locked that night. \n\nThere were other paintings along the hall but I didn't get a chance to look at them because Annabelle stopped in front of a closed door. \n\nShe looked back at me over her shoulder. \n\n\"This is your room Mr. Drew,\" she said with a slight smile pulling at the corners of her mouth. I walked up beside her where she stood with one hand on the door. She seemed to be waiting for me to arrive to open it. \n\nWhen I came to her she turned and quickly, surprising me, moved to stand very close to me. She was short. I am 5'11 and the top of her head only came up to my chin. She moved so that her full breasts were only millimeters away from my chest and looked up at me. I looked down, first into that deep line of her cleavage then into her bright green eyes. \n\n\"Mr. Drew,\" she said. \n\n\"Just Drew. Please,\" I answered, swallowing a lump in my throat due to her closeness. \n\n\"Mr. Drew,\" she insisted, \"there are some pajamas in the dresser so you can change out of those wet clothes. And a shower to warm yourself.\"\n\nShe blinked up at me through long lashes. \n\n\"Will you need help removing your wet clothes?\"\n\n\"Um...ah,\" I stammered. \"No. Thank you. That won't be necessary.\" This was all a bit much for me. I was sorely tempted to agree, to see how far her hospitality would go, but I had a flash in my mind of my beautiful wife, and shook my head. \"No.\"\n\nAnnabelle pouted and moved even closer. I could feel the hard nubs of her nipples against my chest and I swallowed again. I could feel myself reacting, my cock growing hard in my wet jeans. \n\n\"Are you sure, Mr. Drew?\" She asked. \"I'd be very happy to help. We don't get very many visitors.\"\n\nWith a strength of will that surprised me I shook my head. \n\n\"I'd just like to get changed on my own thank you. The shower sounds great too.\"\n\nShe pouted again but moved away from me, but not before her eyes darted down to my groin and the obvious bulge that had formed there. \n\n\"As you wish, Mr. Drew,\" she said and opened the door. \n\n\"When you have refreshed you should come down to the kitchen. We can make you a warm drink and give you a snack.\"\n\nShe handed me the lantern she had been carrying then stepped back and began to walk away down the hall. \n\n\"If you need...anything,\" she said looking back over her shoulder, \"please ring the bell in your room. We will be happy to service you.\"\n\n\"Ah,\" I said watching her walk away with some regret. \"I see. Thank you.\"\n\nI shook my head. One thing I knew for sure: I would be jerking off that night to the memory of her. \n\nI stepped through the open door into my room lighting my way with the lantern. \n\n*****\n\nThe bedroom was not terribly large. It was dominated by a large ornate four poster bed, covered in thick blankets, with thin white curtains hanging around it, gathered with red ties. There was a dresser on one wall below a cloudy old mirror. To one side was an open door that led into a small bathroom covered in small black and white tiles. There was a large cast iron tub in there with a shower head with curtains that wrapped around it. \n\nFirst things first, I thought and began to peel off my sodden clothing. My hoodie was soaked and the simple tee shirt I wore under it was almost see through and plastered to my chest. I pulled this over my head before sitting on the bed, pulling off my boots and peeling my sodden jeans down my legs. This was partly hampered by the hardon that I still spotted from my brief interaction with Annabell. \n\nFinally I stood alone in the room, naked, but still cold and wet. I stepped towards the dresser and looked at myself in the mirror. It was old, and the silver backing had clouded giving it a swirly, smoky effect. \n\nI smiled slightly at my reflection. I took care of myself, running several days a week, doing one marathon a year. Though I was over 40 I had avoided the worst of a 'dad bod'. My beard might have a bit of Grey but my barber kept it and my hair trim. My chest was broad with only a small tuft of hair between the pecs, and my stomach, while not a washboard, was flat. \n\nMy eyes wandered down to my cock, standing straight and hard, from my trimmed (I had no interest in shaving and looking like a child) patch of pubic hair. I was no pornstar but it was a good 8 inches when erect and thick. It was uncircumcised, the head now three quarters pushing out of the hood. Before getting married I had pleasured many women with this member. In fact, in the days before getting married I would have had plenty of fun with that Annabelle, I thought. ",
        "Thinking about this I gripped myself and began to slowly stroke myself while watching in the mirror. I had images of Annabelle in my mind, her full tits popping free as I yanked her top down, causing them to spill out. Of her pouty red lips wrapped around my cock. \n\nI sighed as I slowly brought myself closer to my climax when I saw something move in the mirror over my shoulder. It was the form of a woman, I thought, with long hair. The cloudy nature of the mirror hid her details. \n\nI jumped, startled, embarrassed and slightly ashamed with myself. I spun around, trying, but failing to cover my hard cock as I did so. \n\n\"Annabelle,\" I exclaimed as I spun. \"I'm sorry, but what the hell are you doing in...\"\n\nI stopped. There was no one behind me. As far as I could tell I was alone in the room. I looked around, head swinging back and forth quickly, making sure that the figure had not just moved with me. \n\n\"What the hell,\" I muttered to myself. I walked to the door and turned the handle, pulling it open towards me. Hiding my naked body behind the door I stuck my head out into the hall and looked both ways. There was no one there. \n\n\"That's fucking weird,\" I muttered. I shook my head. It had been a weird night. My mind was playing tricks on me. That explained it. \n\nPushing the incident out of my mind, I opened the top drawer of the dresser and saw that, indeed, there were several sets of pajamas. They were white with thin blue pin stripes. The top buttoned up and the pants were held closed by a cord, it seemed. They looked old and smelled like they had been in there some time. But they were about my size and looked comfortable. I set them on the end of the bed and crossed to the bathroom. \n\nIt was small but well appointed. The tub was large and the white enamel gleamed in the light of the lantern. There was a reddish brown stain by the brass tap but seemed clean. I ran the water and it was clear and clean and before too long it was hot. I stepped in, pulled the curtain shut and pulled the knob to turn on the shower. \n\nThe hot water began to course over my body and I was forcefully reminded how cold I had been. I let the water's heat seep into my muscles and the steam into my lungs to warm me. It must have been half an hour I stood there under that hot water, bringing my body back to life after the discomfort of the storm. \n\nEventually I reached forward and stopped the water and stepped out into the bathroom. I toweled off and headed back into the bedroom. \n\nAnnabelle had mentioned food and I was actually hungry so I thought I would put on the provided pajamas and head out to try to find the kitchen. \n\nWhen I walked to the bed, however, I felt a wave of lethargy wash over me. It came on suddenly and washed over me like a fast rising tide. I stumbled a step and then dropped, still naked atop the blankets on the old four poster. It was, I assumed, the result of the cold storm followed by the hot shower. I groaned and weakly pulled a blanket half over me and felt my eyelids drop as if they had heavy lead weights attached to them. \n\nAnd then I faded into a deep black sleep. \n\n*****\n\nI felt wonderful. My body was sunk into a soft surface, the room was warm and, most delightfully, a wet warm sensation was coming from my cock. I loved when my wife, Rachel, woke me like this; with a long slow blowjob to start my day. \n\nI slowly opened my eyes to look down, lovingly at my wife. She would, I knew from experience, look up at me, mouth full of cock, smile around it and wink. I would stroke her hair and encourage her. We had done this many many times before. Then my eyes widened. \n\nI was in the same room in that weird old house and I had to be dreaming. That was the only explanation. It was not my wife between my thighs, sucking me, but a completely different woman. At first the idea that it might be Annabelle crossed my mind but that didn't make any sense either. \n\nThis...woman in my bed was...transparent. Or at least translucent. While I could clearly make out her shape, I could see right through her to my legs and the bed below her, though the image was blurred like I was looking through clouded glass. Her long hair hung on either side of her face, which was a nice oval shape, eyes closed, cheeks slightly indented from the suction of sucking me off. Despite her otherworldliness, she was clearly beautiful. I could make out the shape of her, the back arching towards a round heart shaped ass. One of her hands was on my hip and the other gripped the base of my cock as her mouth worked up and down. \n\nStrangely I could see my cock inside of her as she sucked, like a cartoon cutaway drawing that shows the insides of something. \n\n\"What...\" I said, dumbly, \"what the hell? Who... what...what's going on?!\"\n\nThe figure did not stop sucking but her eyes opened and looked up at me. Instead of whites with an iris and pupil that you might expect, what I saw looking out of her face were two pools of silver, with no black dot at the center. \n\nHer hand gripped my hip more firmly, translucent fingers pressing into the flesh as she pulled her mouth down further, my 8 inch cock being buried completely into her beautiful face. \n\nI groaned at that amazing feeling and rolled my head back, eyes closed as I felt lost in the moment. My hips raised, as if of their own volition pushing myself deeper into this strange mouth. There was no gagging or any sound at all coming from the woman as she took me as deep as possible. \n\nMy eyes snapped open. Even in a dream this felt wrong. Like a betrayal of my wife and I couldn't keep doing this. \n\nI reached down and put my hands on either side of the translucent head and tried to pull the delightfully sucking orifice off of my cock. While the mouth was warm and wet, the silvery hair, when my fingers sank into it, felt cold like strands of ice water. I pulled upwards but she gripped my hips harder and sucked with more force. I groaned but increased my efforts until finally her mouth slipped up and off, making a popping sound as I came free of her. \n\n\"Wait,\" I said, voice strained, \"stop...I can't...shouldn't...\"\n\nThe figure sat back on her heels, knees on the bed between my legs, and looked at me with those silver eyes. I could just make out a pout on her semi-transparent face. I could finally get a good look at her. Despite her see through nature, me being able to make out a blurry image of the dresser behind her, I could clearly notice that she was nude. Her hair hung down past her shoulders and down her back. Her breasts were medium sized, much smaller than Annabelle's but about the same size as my wife's. As my eyes moved down over her smooth stomach, I could see that her toned thighs were parted, and could make out the lips of her pussy. When she saw where I was looking, a predatory smile twisted up the corners of her mouth. She began to crawl up my body. \n\nUp until that point I had either been lost in pleasure or wracked with guilt. As she moved up along my body I began to feel fear for the first time. The weight of her in the bed, the way the sheets dented down under her knees and hands made her seem suddenly real. She was dragging her breasts up my thighs, across my pelvis and cock, and her skin was cold, as if a thin layer of ice water sheathed her body, though there was no wetness. Her small nipples were hard buttons as they dragged across the skin of my belly and up my chest. My cock stood hard and proud this entire time, glistening with her saliva. \n\n\"Wait,\" I said. \"Stop! I can't...we can't do this! I'm married!\" The absurdity of denying sex in a dream occurred to me but at that moment this did not seem like a dream at all. \n\nThe thing ignored me and continued to move upwards. I reached out and gripped her shoulders to try and stop her but she was stronger than she looked. She reached up, grabbing my wrists and pushed them down by my shoulders, pinning them there. Her fingers were like cuffs of ice and despite me being relatively fit she overpowered me. \n\n\"Fuck,\" I grunted as I strained against her unnaturally strong hands, \"wait...\"\n\nIt was useless, however, as she pushed me down into the bed. Her hips slid up to straddle mine, my cock sliding between us, pinned against her sex. \n\nWhile her body and touch was ice cold her pussy was hot and wet, like her mouth had been. My shaft was pressed between her lips pointing up towards my stomach. I could feel her hard clit pressed against the bottom of my clock and the feeling making me groan. \n\nShe began to slide herself up and down my shaft, her lips wrapped around it, my cock becoming slathered with her wetness. It felt amazing and wrong. \n\nThen a voice came to me. It was a woman's voice and it made me shiver more than the ice cold touch of this creature in my bed did. I did not hear it with my ears but I felt it in my head.\n\nFuck me - the voice said. - Do not fight.\n\n\"No,\" I cried out into the room. \"No!\"\n\nFuck me. I neeeeed it - It was whining now. \n\nEach time she slid up higher, the head of my cock was closer and closer to pushing up inside of her and at that moment, despite the pleasure I wanted nothing less than to fuck her. She slid up again and I could feel the head of my cock nudge her opening, almost pushing inside before slipping past and moving between the lips once more. \n\nFinally I grunted, gathered my strength and pushed the hands holding my wrists up away from the bed. I was able to twist and shove her to the side, toppling her off of me. I scrambled out of the bed and ran the four steps between me and the door to the room, completely ignoring my nakedness. \n\nNo! - cried the voice in my head. -Please!!\n\nI gripped the brass knob and twisted it, yanking on the door. Nothing happened. The door stayed sealed tight. I cursed myself as an idiot and pushed, thinking I had just tried to open it the wrong way.\n\nAgain, nothing happened. I might as well have been pulling on the wall for the amount that the door moved. \n\nMy heart was pounding and I could hear movement behind me. Giving up on the seemingly sealed door I recalled Annabelle saying that I could ring for service. I cast my eyes around the room for any kind of bell. \n\nA step away from the door was a thin brass chain hanging out of the wall with a red tassel on the end. Above it a tarnished plaque read: Service. \n\nI moved to it and grasped it as I felt a cold presence behind me. I pulled and could hear a faint ringing. I felt a cold body press against my back. The thing's hard nipples pushed into my bare skin, the breasts flattening against me. Her arms reached around me and a cold hand gripped my still- hard cock and squeezed. \n\n\"Oh fuck,\" I cried and continued to yank on the chain, as she began to stroke me. \n\nPlease - the thing begged me. -Fuck me. I'm empty. Fill me. \n\nI closed my eyes and my hips, as though acting without my direction, bucked, moving myself through her fingers. \n\n\"C'mon,\" I snarled, \"answer the fucking bell!\"\n\nThere was no response and the hand that stroked me was insistent. My ability to think clearly was failing and I moaned with pleasure. \n\nThis could not be real, I tried to reassure myself. Transparent women who wanted to fuck me did not exist. The entire evening must be some sort of delusion. \n\nI put my hands flat on the wall in front of me and shoved back hard, pushing the thing behind me backwards, giving myself room to wriggle away from her, breaking her grip on my throbbing cock. I spun and looked, seeing the figure still there in my room.  \n\nThe creature stood there looking at me for a moment, seemingly surprised by my movements, then lunged forward again, wrapping strong, cold arms around my shoulders and pressing her breasts against my bare chest. My cock was pressed between us, pointing up. \n\nShe jumped and, in a smooth movement, wrapped her legs around my hips, hanging off of me. She slid her wet pussy up my shaft until it popped back between her thighs, my cockhead, again, resting against her opening. \n\n\"Wait...\" I cried, but it was no avail. She shoved herself down, impaling herself on me. \n\n\"Fuuuuuck,\" I groaned as I felt the wet warmth of her cunt swallow my cock, sinking deep into her in one movement. \n\nShe was tight, but well lubricated. I easily filled her, the feeling unlike any I had felt before. \n\nYesssssssss - the voice said in my head. -Fill meeeeee.\n\nThat was the moment I lost the struggle. The feeling of her hot cunt around my cock was too much. As she sank down I thrust my hips, shoving up as deep as I could into her. Her ghost-voice moaned in my mind as I gripped the cold globes of her ass and lifted, slipping my cock almost entirely out of her before pulling her down again. \n\nCarrying the thing, her impaled on my cock, I walked towards the bed until my shins hit the edge of it. I let the two of us fall forward, landing on the soft surface, never letting myself leave the warmth of her pussy. \n\nI shoved her along as I crawled up onto the bed, disturbing the covers as we moved. She moaned as my pelvis ground into her clit, my cock shoved as deep into her as it could go. Cold fingers raked across my back, a pain I barely registered.\n\nOnce we were fully atop the bed I gripped her shoulders from below and pulled back before slamming forward again. And again. And again, fucking her hard, making the bed springs creak. \n\n\"Is this what you want?\" I snarled as I fucked her. \"Is this what you want?!\"\n\nYessss!! - the voice cried. - Yes!!\n\nI was lost in the feeling, no longer noticing how cold her body was against mine. Thoughts of my faithful wife pushed out of my head by the sensation of my cock fucking a tight pussy. Each time I slammed forward she raised her hips to meet mine, her need matching mine. \n\nTime did not seem to matter anymore and I lost track of it. I have no idea how long i railed into her like that but eventually I wanted, needed something different. \n\nI pulled out of her, and she whined at my absence. I felt her legs reach back up to try keep me inside of her but I roughly grabbed her shoulders and flipped her onto her stomach below me. She responded by raising her ass up to me. \n\nI grinned and gripped my cock in my hand, lining myself up with her presented sex, driving forward, deep into her again. \n\nIt was a strange thing, fucking something that was translucent. I could see my cock through the blurry area of her ass, as it pumped in and out of her. Each time I drew back she moaned and when I drove back forward she shrieked in pleasure. \n\nI reached forward, gripped a handful of her hair and yanked back, causing her back to arch. She raised the front part of her body off the bed, holding herself up on her hands and continued to push back against me. \n\n\"Is this what you want?\" I demanded again. I reached around with the hand not in her hair and grabbed one of her breasts, fingers sinking into the translucent flesh, feeling the hard nub of her nipple against my palm. I gripped one of her nipples and rolled I between my fingers as she moaned. \n\nYes! Fuck me! Fill me! Cum in me! - she demanded. \n\nI was close to my orgasm and knew that I could not help but comply with her wishes. I could feel my balls tightening and that tingling feeling deep behind the base of my cock that telegraphed the oncoming climax. \n\n\"You,\" I grunted, \"first! Cum for me!\"\n\nHer voice moaned again, and I could see, through her body, the hazy outline of her fingers reaching between her legs and rubbing her clit as I fucked her. \n\nOh! Oh! Oh! I'm close! I'm... I'm... Oh! Oh! Oh!\n\nI felt her cunt clamp down on my cock, quivering as she came, responding to my demand. Her words became formless shouts in my mind, then moans, finally her entire body froze, pussy clenching my shaft. \n\nI held her there as she came, letting her wave of climax crest over her, before I began slamming into her again, chasing my own. \n\nI was already close and the feeling of her orgasm brought mine on quicker. I was grunting with every thrust. Almost shouting myself. I was on the edge teetering, holding myself back to prolong this feeling for as long as possible before...\n\nYes! Fill me! Fill me! - she shouted without words. -Cum in me!\n\nI closed my eyes, releasing my pent up orgasm as I shouted in triumph. I felt her push clench on my own, her sounds matching my own as she came again to the feeling of me cumming inside of her. \n\n\"Oh! I'm sorry Mr. Drew!\" an accented voice said behind me. My eyes flew open and my head spun around. \n\nMy door was open and Annabell stood there, looking in, her eyes wide. I saw her look down at the bed and my own eyes followed hers. \n\nI expected to see my cock buried in the cunt of a see through woman, but instead it looked like I was alone in the bed, no unearthly creature to be seen. \n\nI was on my knees, back straight, hips thrust forward. My cock was hard as a rock and was spraying my climax across the disheveled bed covers and not into any kind of woman.\n\nI was too far gone to stop, so while Annabelle looked on I spurted out more thick globs of cum onto the bed, looking around bewildered. Where was the woman!! I looked back at Annabelle, mortified but still too shocked to cover my dripping cock. \n\n\"If you wanted help,\" Annabelle said, smiling a small smile, \"you should have asked earlier, Mr, Drew.\"\n\nHer eyes looked down at my manhood and her hand crept up to her full breast, kneading it through the thin, silky material that covered it. \n\n\"Ah,\" I stammered, thoroughly embarrassed. I cast my eyes around the room and spotted a dressing gown hanging on the bedpost. I grabbed it and wrapped it around myself. My cock caused a clear tent in the front of it but at least I was covered. \n\n\"I'm sorry,\" I said quickly, getting off of the soiled bed. \"I'm...what the fuck! Where is the woman?!\"\n\nAnnabelle tilted her head slightly to the side, quizzically. \n\n\"I,\" she said, \"am the only woman here, Mr. Drew.\" Her thumb was rubbing across her hard nipple as she stood in the doorway and spoke. \"It seems, however, you are no longer in need of one. Unfortunately.\"\n\n\"No,\" I said, suddenly angry. \"Fuck that! What is happening? There was a woman! A woman who was...see through...she forced me...fuck.\"\n\nI shook my head. It sounded so stupid when I said it aloud. \n\n\"The door!\" I said, remembering. \"The door was fucking locked! Did you lock me in here?\"\n\nShe shook her head, seemingly confused by what I was saying. \n\n\"Locked?\" She said. \"It was not locked. Not by me. I heard your bell and came to see what you needed. I knocked but you did not answer. I came in and saw you...on the bed.\"\n\nI sat down on the edge of the bed, my shoulders sagging in defeat. Maybe I had just had a very vivid dream, I thought. That was the only explanation that made sense. I took in a deep shaky breath. \n\n\"I...I am sorry,\" I finally said. \"I'm sorry I shouted. Sorry that you...found me like that. I'm very embarrassed.\"\n\nShe chuckled. \n\n\"Oh,\" she said smiling at me, finally releasing her own breast. \"Do not apologize. You are not the first guest to have a strange dream here at Hart House. It must be the architecture. It causes the imagination to run wild.\"\n\nShe stepped into the room and motioned for me to stand which I did. She grabbed the blankets off my bed and yanked them to the floor and then crossed to an old wardrobe, removing fresh bedding. \n\n\"Let me tidy this up. You have...made a lovely mess. And please,\" she continued as she worked quickly and professionally, \"do not be embarrassed. You have,\" she looked blatantly at the now receding tent at my crotch, \"nothing to be embarrassed about.\"\n\nThis made me even more embarrassed as I stood there while she remade the bed, replacing my cum covered covers. \n\n\"Ah,\" I stammered. \"Yes. Um. So. Have you...worked here long?\"\n\nShe continued to work as she spoke. \n\n\"Hmmmm,\"'she said. \"It is hard to say. I suppose I have been here some time. Things do not change much here from day to day. They all seem to blend together. That is why it is so nice to get a visitor like yourself. We are all very happy to have a guest. We do hope you enjoy your stay.\"",
        "\"Oh,\" I said, \"it's not really a stay. Just overnight. I'll get my car towed tomorrow.\"\n\n\"Oh,\" she said and pouted a bit. \"Of course. We will see.\"\n\nI didn't like the sound of that. Something else caught my attention. \n\n\"All of us? Who else is there besides you and, what's his name, Nicolas?\"\n\n\"Oh, the Mistress of course. And some other...staff,\" she answered cryptically. I was about to press her but she bent down gathering up the soiled bedding, giving me a look at her round ass and a brief glimpse at the pink lips of an unclad pussy. All questions left my mind at that moment as I took it in. My cock which had almost completely deflated began to stir once more, then she stood and crossed quickly towards the door. \n\n\"I will wash your mess, sir,\" she said. \"You must be famished. You should come to the kitchen so we can serve you. Go to the end of the hall and take the stairs down two flights. You will find the kitchen there.\"\n\nThen she left the room before I could respond. I blinked stupidly for a moment before crossing to the door and looking out. \n\nShe must move fast, I thought, as I did not see her in the hall at all once I got there. I shook my head at the weirdness of everything then sat on the edge of the bed. \n\nI must have been having a very vivid dream, I decided. That was the only explanation. I sighed. It had been a good dream. \n\nI realized that Annabelle was correct. I was very hungry. I pulled on the pajamas that were set aside for me and wrapped the dressing gown around me. I found some slippers under the bed and pushed my feet into them. They fit very well. I stood and crossed to the door to go find some food. \n\n*****\n\nAs I walked down the hall towards the back of the house, away from the stairs that had led me up to the second level, I made a point to ignore the ribald art that was hung there. I had had enough stimulation that night and wanted to avoid embarrassing myself any further that evening. \n\nI kept my eyes down at my feet watching the intricately woven oriental style rug under my feet. This one, like the one on the main level, was a bit worn, with a lighter trail running down the center where years and years of feet had trod before my own. \n\nAfter a bit I looked up, assuming that I would be by the stairs that should lead to my meal but stopped dead and blinked. The end of the hallway, as far as I could tell, was just as far away as it had been when I left my room. \n\n\"What the fuck,\" I muttered to myself and looked back the way i had come. It looked unchanged except... suddenly I wished I had paid more attention to the paintings on the wall. The one hanging to my left seemed different. \n\nIt was a portrait of a woman but there was a dark figure standing in front of her, his back to me. The woman's eyes were closed, in an oval face framed with dark hair. Her lips were red and full. My eyes traced down her body, past the low cut of her top showing deep cleavage, a stomach held in a corset, and a long black skirt. I could see that the figure's hand was pressed between her legs. The painting was well executed and I could see the folds of fabric where his hand pushed against her skirts. \n\nI shook my head and walked forward quickly, meaning to get out of this hallway as soon as possible. I was watching the end of the hall and though I could feel myself moving forward, I could have sworn that the wall ahead moved away from me keeping pace with me. \n\nI stopped and the sensation stopped. I looked to my left and it seemed to be the same painting but different this time. The dark male figure's hand was still between her legs but in this painting her top had been pulled down, freeing one breast. The artist had perfectly rendered her pink nipple, standing hard on the milky white breast. \n\nI swore and looked back again. And again it seemed like I had made no progress down the hallway, still about halfway between my room and the end. I panicked and broke into a run, charging down the hallway, my slippered feet making slapping sounds as I pounded down the hall. No matter how hard I pushed myself the end of the hallway seemed to come no closer to me. \n\nAfter a couple of minutes of my fruitless running I stopped, breathing heavily, heart pounding. The same painting was beside me but changed again. \n\nThis time both of her breasts were exposed and one of her hands was raised up, cupping the left one, finger and thumb pinching the nipple. Her lips were parted, her eyes still closed. Her skirt was off now, pooling on the ground at her feet. The hand of the dark figure was between her legs, with its fingers clearly buried in her pussy. \n\n\"This can't be happening,\" I muttered and staggered further down the hall, blind with panic, needing to be out of this endless trap. I was moving quickly when I thudded hard against a wall. \n\nI had been looking over my shoulder and had not seen the end of the hall arrive so suddenly. My shoulder hit it first and my head snapped forward banging painfully against the dark wood paneling. \n\nI staggered back, bright lights dancing in front of my eyes and almost fell back in my ass before catching myself against the wall. \n\nThere was a final painting on the wall to my left. My hands were shaking with fear and adrenaline as I regarded it. \n\nIt was the same woman but now she was laying on the ground completely nude. The dark figure was gone but her legs were spread wide and her own hand was between them, her own fingers inside of her. Her back was arched, pushing full breasts to the sky, her head back mouth open as if she were crying out. The artist was amazing and I could see how wet she was, represented by careful but expressive paint strokes. \n\nI spun away from the painting and saw a narrow staircase to my right. This one was not as grand as the one I had climbed up to this level. It seemed like more of a servants passage but I hurried down it regardless, needing to leave that hallway behind me. \n\nI made it down one of the flights of stairs, around the corner, descending another when I felt the air around me grow cold. I stopped and looked around me but as far as I could tell I was alone. \n\nI began to descend again when I felt two hands placed on my back and then a hard shove as they pushed me forwards. \n\nI yelped as I felt my balance give way and I began to tumble forward. I swung my arm out and just managed to catch the railing. I stopped myself from going head over heels down the staircase but my shoulder felt yanked and I swung to the side, my ankle twisting as I fell forward. \n\n\"Fuck!\" I shouted as I felt the sharp pain stab into me and run up my leg. \n\nI looked back behind me, to confront my assailant but, again, I was alone. \n\n\"This place...fuck this place,\" I muttered bad began to slowly, painfully go down the stairs, wincing each time I placed pressure on the damaged foot. \n\nFinally I reached the lower level. I could see that the stairs continued downward but I had no intention of going into this place's basement. \n\nI could feel warmth coming through the door in front of me and pushed it open, seeing a dimly lit kitchen behind it. \n\nI limped through the doorway and looked around. \n\n*****\n\nThe kitchen was large, designed to prepare large meals and banquets. The ceiling was low but it was spacious with large, long wooden prep tables. The oven across the room was massive and radiating heat. It smelled, at that moment like baking bread and a savory soup smell. It was by far the most inviting room I had seen in Hart House so far. \n\nBy the far wall was an old wooden table with benches along it, seeming to be the staff eating table. I could see Nicolas sitting at it drinking a cup of tea. Annabelle was at the stovetop stirring a large pot with a long handled wooden spoon. \n\n\"Ah,\" Nicolas cried out when he noticed me standing there. \"Finally you join us, Mr. Drew! Please come and sit! Have a cup of tea and a bowl of soup! Isn't soup just the best thing to eat on a cold stormy evening!\"\n\nI sighed looking at the distance I would have to cross with my twisted ankle and then began hobbling towards the strange butler. \n\nEarlier I had found him slightly sinister but after what I had just gone through, in my room as well as in the hall and stairs, he almost seemed benign. I could understand a lecherous old man. \n\nWhen I got closer the old man seemed to notice that I was in pain and stood up crossing over to me. \n\n\"Oh, my boy!\" He exclaimed. \"Whatever happened to your poor foot?\" He put his shoulder under my arm and began to help me to the table. I was afraid at first that I would be too heavy for him but he bore my weight surprisingly easily for a man his age. \n\n\"Tell me,\" he said as he helped me to sit on the bench, \"how did you come to this state? Raise your foot up here on the bench. You have to elevate these things, you know!\"\n\n\"Oh,\" I said, turning so I straddled the bench and stretched my leg out, laying it along the old wood. \"I...\"\n\nI paused. What could I say? That some invisible figure pushed me on the stairs? He would think I was lying or crazy. \n\n\"I guess I slipped,\" I said finally. \n\n\"Oh you must be careful in these old houses, my boy,\" Nicolas said. \"All sorts of ways to slip up in here.\"\n\nHe turned to Annabelle who was still at the stove. \n\n\"Come girl,\" he called. \"Bring the man some soup. And take a look at his ankle.\"\n\n\"Oh no,\" I protested. \"I'll be fine in a minute.\"\n\n\"Poppycock,\" Nicolas scoffed. \"Annabelle has many talents. First aid is just one of them.\"\n\nAnnabelle crossed the kitchen holding a bowl of steaming soup and placed it and a spoon in front of me then sat on the bench by my extended foot, straddling it, facing me. I couldn't help but glance down, knowing that she was not wearing any underwear, but unfortunately (or thankfully, depending on how you look at it) her gathered skirts covered her there. \n\nShe reached out and lifted my foot into her lap, her soft hands removing my slipper and rubbing the slightly swollen ankle. \n\nNicolas moved and sat behind her, also straddling the bench and looked over her shoulder as she tested the movement of the joint. He laid his hands on her shoulders and I could tell he was looking at her tits. \n\n\"How is it girl?\" Nicolas asked. \n\n\"I think he will be fine,\" she said but didn't not release my foot. \"It is only slightly sprained at worst.\"\n\n\"That's good news, isn't it boy?\" Nicolas asked and I nodded, slightly annoyed that this man was calling me 'boy'.\n\nMy eyes widened slightly as I watched Nicolas slide his hands down Annabelle's shoulders, move them to her front and slide back upwards. He cupped her breasts one in each hand. I expected her to protest but instead she leaned back, pressing herself against his chest. \n\nHis fingers stroked the soft material of her top before gripping the low neckline and pulling down. First one then the other breast popped free, exposed to me. \n\nI swallowed. Despite the fact that I had so recently cum all over my bed, my cock hardened again to see these full tits. The nipples were thick and a fiery red, soon to be cupped and pulled on by the old man behind her. \n\n\"Ah,\" I said, uncomfortable. \"I should...I should go to bed.\"\n\n\"Nonsense, my boy,\" Nicolas said. \"Annabelle doesn't want you to leave, do you, girl?\"\n\nShe smiled at me and began to slide her hand up my calf. \n\n\"No,\" she said. \"I do not. \"I want Mr. Drew to stay.\"\n\nAnnabelle reached behind her with her other hand I could tell that she was fishing Nicolas' cock out of his pants. Her arm began to go up and down as she, hidden from my view, began to stroke him. \n\nHer hand continued to slide up my leg, over my knee and up my thigh, finally coming to the bulge my cock was making in my pajama pants. \n\n\"Oh,\" she said, grinning. \"Is this for me?\"\n\nAll of my restraint I had shown earlier in the evening, all the thoughts of not betraying my wife, were gone. I needed more than just this woman's hands on my cock. The room seemed to take on an unearthly look, hazy on the edges of my sight. It felt like a dream again as I realized all I wanted was to have this woman in front of me. \n\nLuckily Nicolas pushed Annabelle forward then, his wrinkled old hand on her back. She allowed herself to be moved forward so that her hands rested in my upper thighs and her face was beside my still-covered cock. \n\nI looked up to see that the old man had his trousers open, an impressive cock standing out from it. The pubes above his member were grey but the circumcised head was purple and the shaft was long and thick. I would guess that he was a bit bigger than me but as Annabelle pulled down the hem of my pants I stopped caring about comparing. \n\n\"Shit,\" I groaned as the woman between the old man and I opened her mouth and sucked my uncircumcised cock between her red lips. \n\nMy hands came down to rest on her head, fingers digging into her dark hair. I pulled her further onto me, raising my hips. Her eyes closed as I felt the head of my cock reach her throat, but she took me deeper without complaint. \n\nBehind her Nicolas maneuvered her, so that her knees came up to rest on the bench and her ass was presented to him. \n\n\"Oh, she's a good girl, isn't she,\" he said as he lined himself up with her pussy. \n\nI nodded, moving myself so that I was standing, still favoring my twisted ankle. Annabelle was now on her hands and knees on the bench and as Nicolas sank into her she was pierced in either end. \n\n\"Now, Drew,\" Nicolas said as he began to stroke in and out of her, making her move back and forth on my cock, \"do not be shy. Little Annabelle likes a hard fuck. Do you not, Annabelle?\"\n\nShe couldn't talk because my meat was filling her mouth but she nodded slightly, and grunted the affirmative. \n\nI began to stroke in and out of her myself, matching the pace of the old man behind her. I had never shared a\n\nWoman with another man before so I was letting them take the lead. \n\nNicolas began to speed his thrusts and I could hear his saggy old balls slap into her. She was grunting around my shaft each time he sank into her. I began to speed myself, watching three quarters of my cock disappear into her face each time. \n\n\"C'mon, Drew!\" He cried. \"Let's give her what for!\"\n\nHe was fucking her faster and harder now. Their bodies slapped together with a wet sound. Each time he connected with her she would grunt around my cock sending shivers up my spine. \n\nI heard his encouragement and felt no resistance from the woman, so I doubled my efforts. I gripped handfuls of her hair and pulled hard, thrusting forward at the same time. Each time I fucked into her face my cock would fill her throat and her nose would hit my pelvis. I would hold her for a moment, enjoying the feeling of her throat working my cockhead as she gagged around me. \n\nThen I would pull back then slam forward again. And again. \n\nNicolas was cackling with joy and triumph as he fucked he from behind. I was trying to focus on the delightful throat fuck I was giving the woman below me and not think about he letcheous old man behind her. \n\nI was deep in her throat when I reached down under her and grabbed a handful of one of her beautiful soft breasts. I squeezed the nipple between thumb and finger as I held her breath at bay. She was gagging and trying to pull back off of me but I held her there another moment before releasing her, giving her breath. She moaned as my full, dripping cock fell out of her mouth, gobs of her spit dangling from it, connecting my member to her mouth with strings of spit. \n\n\"That's the ticket, boy!\" Nicolas laughed. \"She just came around my cock from that, didn't you girl?\"\n\nAnnabelle was gasping for breath and nodded, but took me back in her mouth and pulled on my ass, encouraging me to face fuck her some more. \n\nI did not need much convincing as I shoved back into her hot waiting mouth, again pushing into her throat. I was grunting as I fucked her face, my balls slapping into her chin, getting coated in her drool. Her eyes were watering and her makeup was streaming down her face in an incredibly sexy way. \n\nDespite having cum not so long before I was getting close again. I sped my fucking, my hands locked at the back of her head. \n\n\"Gonna cum,\" I grunted. \n\n\"Good!\" Nicolas shouted. \"Good! Me as well. Let's fill this slut up and seal our accord!\"\n\nI had no idea what he was talking about but I did not care. I held back as long as I could before I knitted my fingers and the back of her head and shoved as deep as I could, releasing myself directly into her throat. I could feel her gagging but I did not release her. It felt too good. \n\nI realized that I was shouting. Not real words just sounds of lust and triumph as I came into her, spurt after spurt. \n\nNicolas was shouting as well, in the same way I was. His wrinkled old face was bright red and his teeth were gritted. Annabelle seemed to be Cumming as well, losing her ability to support herself, hanging there between us, held aloft by our cocks. \n\nFinally I fell back, my cock falling out of her mouth, followed by a string of cum and spit. She collapsed, moaning onto the bench, gasping for air.\n\nThe three of us stayed there like that, recovering for a few minutes before Nicolas stood up, tucking his cock away again. \n\n\"Well,\" he said, smiling at me. \"That's that then. I trust you can find your own way to your room, sir. I'll help poor Annabelle here to bed. She's had quite the evening.\"\n\nHe pulled the woman upright and put her arm over his shoulder and led her away as I watched the two of them leave together. \n\nI blinked and looked around, suddenly realizing where I was. Then what I had just done. The hazy, dreamlike feeling left my mind and I gasped. \n\nI had just cheated on my wife! I had fucked the face of a stranger and taken part in a threesome! It was unfathomable. I had never strayed before and to have transgressed in such a blatant and buzzard fashion...\n\nI stood and almost fell when a jolt of pain shot up from my almost forgotten twisted ankle. I caught myself on the edge of the table and then lurched towards the door. \n\nI do not remember the return to my room. All I know was that it did not take as long as my trip to the kitchen. No ever-long hallways. No changing paintings. No ghosts pushing me on the stairs. \n\nFinally I came to my room and shut the door behind me, leaning against it. I couldn't believe what had happened that night. I was breathing heavily and my heart was pounding. I staggered to the bed and fell into it. \n\nI wouldn't sleep, I thought. I was way too worked up for that, I was convinced. It turned out, however, that I was wrong. As soon as my head hit my pillow my eyes began to droop and within moments I had fallen into a deep, deep sleep. \n\nMy last thought before losing consciousness was, Tomorrow! Tomorrow I will get out of here and be free! Then I was gone to the world. \n\nI was, it turned out, very wrong. It was quite some time before I truly escaped from Hart House. \n\nTo be continued."
    ],
    "authorname": "JK1979",
    "tags": [
        "blowjob",
        "cheating",
        "ghost",
        "ghost sex",
        "haunted",
        "haunted house",
        "mmf"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/welcome-to-hart-house"
}