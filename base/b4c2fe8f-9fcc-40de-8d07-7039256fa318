{
    "title": "Home for Horny Monsters Ch. 57",
    "pages": [
        "Hi all! I have returned in the season of pumpkin spice, renewed and invigorated!\n\nAre you a new reader? You're going to be confused, because this chapter is the beginning of the end of Book Four of HFHM. So much shit is about to happen, and I'm a slow-burn kind of writer, but hey, be my guest and dive in.\n\nReturning readers, this is it! What has the shadow been up to? When is Mike going after Cecilia? How will the house handle Halloween? And will Tink finally wear underwear? You're about to find out!\n\nAs always, thank you so much for the support you have all shown. Thanks to T.J. Skywind for helping me with final edits and to really nail down Suly's dialogue. I hope this chapter has a little bit of something for all of you, but Lily lovers are definitely winning out this month.\n\nDon't forget to rate and comment, or shoot me a letter, I read them (eventually). I'm working hard to make sure the next few chapters are quality, as Book Four will wrap up with Chapter 60 (and Book Five will start with chapter 61, so don't fret).\n\nIt's my favorite time of the year, people, because it is finally\n\nSamhain\n\nMike sat with Naia on the edge of the fountain, their arms wrapped around each other. He took in her scent, which was reminiscent of rain and the forest floor. When she finally released him, she had a scowl fixed on her face.\n\n\"You had better come back alive,\" she told him. \"Or I will be very cross with you.\"\n\n\"Don't worry. I'm going to be very careful. If things start to go south before I get there, I'll come back and try again next year.\" Truthfully, he hoped that wasn't the case. How many years had Cecilia been stuck in the faerie realm already? Every morning leading up to today had filled him with the anxiety of knowing that an hour to him could be months to her. Was she still okay? Would she be happy to see him?\n\nHe had started having dreams about her when Lily wasn't inside his head. Cecilia would try to warn him away, and he would chase her until his dream filled with mist and he became lost. No amount of Dreamscape trickery allowed him to part the veil and find her, which made him wonder if it was a variation on the anxiety dreams.\n\nWhen he stood, he looked up at the roof. Though he didn't see her, he could feel Kisa's presence up there, almost like an itch that couldn't be scratched. Ever since the incident at the centaur camp, he could feel her no matter where she was, and she claimed a similar experience. Luckily, the centaurs had provided her with some herbal tea which acted as birth control. He had been very happy to see her drink it down without any hesitation.\n\nLily had suggested that Kisa get spayed, which prompted Kisa to try and take a chunk out of the succubus.\n\nRatu had examined both Mike and Kisa and said that their magic was now linked in a similar manner to the way a witch would bond with a familiar, but nobody knew what that now meant for the two of them. She also announced that it was likely that Kisa would go into heat on every full moon from now on, unless she sequestered herself away from the sight of it. Kisa's protest at this announcement was mellow by her standards, and he wondered if perhaps she didn't mind. She had definitely softened in her approach to him, and he had spotted her lurking around more often.\n\nThe others bade him farewell as he picked up the backpack he had prepared for this trip. When he made it down the hill to the gate, Beth was waiting to see him off.\n\n\"Good luck,\" she told him. \"Sorry I couldn't find out more about the geas, or your contract with the queen.\"\n\nHe smiled. \"Learning about Samhain was more than enough. I'm leaving you in charge. Make sure Tink brushes her teeth, and no parties. It is Halloween, after all.\"\n\nShe laughed. \"Do you suppose we should let her go trick or treating? She could pass for a kid in a costume.\"\n\n\"If you can get her to actually wear underwear, then maybe.\" He looked up the hill at Tink, who was busy with a giant spool of electrical cable. She was almost done rewiring the house, but the large industrial spool of wire she had ordered by accident had been way more than she needed. She was using it as a spare table now, and he couldn't help noticing that she kept it pretty far from the edge of the roof. \"But I did see the giant bag of candy hidden in the back of the pantry. I assume you bought it?\"\n\nBeth smiled. \"Like you said, It is Halloween. I don't expect anyone to come to the door, but you never know. When I was a kid, this neighborhood always had the best candy, and some years, a few kids would be brave enough to ring the bell. Maybe this year, someone will answer.\"\n\nMike nodded, wondering if Beth would wear a costume. Would it be something cute? Maybe something simple, like cat ears and a tail? Would that piss Kisa off?\n\n\"Guess I'm headed out.\" He didn't know whether to hug her or shake her hand, and the moment was quickly becoming awkward. She seemed so distant recently, and that insecure part of him kept crying out that she saw him as a failure.\n\nIt really shouldn't matter, but he couldn't shake the idea that she might not value his company. Maybe it was just that she was happy enough with Asterion and Sulyvahn, but it wasn't something he could just come out and ask her.\n\nHe offered her a slight wave and unlocked the gate, then stepped through. Once on the other side, he passed the key back through and watched Beth lock the gate.\n\n\"You sure about this?\" she asked.\n\nHe nodded. \"I don't want anything coming out while I'm gone. Besides, if everything goes well, Cecilia will bring me back the regular way. If not...\" he shrugged. \"Try not to let the next disaster get you down if you fuck it up. Gotta keep trying and all that.\"\n\n\"Is that another one of your boy scout mottos?\"\n\n\"Uh...no. Just good advice is all. Gotta go. Got a date with a banshee.\" He turned away from her and walked into the woods. Once the mist gobbled up the gate behind him, he put his fingers into his mouth and blew a loud whistle.\n\n\"Date with a banshee, really?\" Lily stepped around a nearby tree. \"Shit, watching you two is like watching shitty prime-time TV.\"\n\nMike startled, then put a hand to his chest and let out a breath. \"Really? From behind a tree?\"\n\n\"Trick or treat, Romeo.\" She moved next to him and put her hand over his. \"That was the trick. The treat is that I'm coming with you on your little trip. Just to the gate, anyway.\"\n\n\"I thought you couldn't?\"\n\nShe shrugged. \"I changed my mind. My presence might attract demons, but I'm also going to be riding with you on the back of Cerberus. Even if they show up, they'll hightail it out of there. Besides, I figured we could chat.\"\n\n\"About?\"\n\nLily transformed into Beth, then pressed herself against him. \"So, Mr. Radley, do you wanna fuck or what?\"\n\nMike's stomach dropped, and he turned around to make sure that the gate was still a good distance behind them. What if Beth heard? \"What are you doing?\" he asked in a hushed town.\n\nLily was herself again, and she rolled her eyes. \"Please. Watching you two pine over each other is giving me blue balls. Let's talk about us, instead.\" A grin appeared on her face, but then faltered when a giant shadow manifested in the mist.\n\nCerberus had arrived.\n\n\"Hello,\" Mike said, stopping to scratch each head. Cerberus soaked up the attention, but threw Lily a trio of dirty looks.\n\n\"Play nice,\" he warned her, eliciting a whimper from one of the heads.\n\n\"Someone is learning,\" Lily muttered behind him, but he ignored her.\n\n\"Let's hunt for some wayward spirits,\" he said, then pulled himself up by Cerberus' shaggy mane until he sat behind their shoulders. He stuck a hand out for Lily, then hauled her up to sit behind him.\n\nCerberus wandered into the woods, leaving the mortal realm far behind. They were on the prowl, which meant Cerberus would stop on occasion to sniff the ground, then change directions. Lily's hands were tight on Mike's belly as they moved through the mists of the Underworld, and he was suddenly very aware of how her hands kept sliding lower toward his crotch.\n\n\"So how long do we do this?\" she asked. \"Seems kind of like we're walking around with your dick in our hands.\"\n\nNot yet, he thought to himself, thinking of her slender fingers. \"Samhain is supposed to start at sundown, and I figured if we left a little bit early, it would increase our odds of seeing the spirits as they come through. Honestly, I don't know what to expect, but\u2014\"\n\nA ball of light formed in the mist off to their left and then rocketed past, blipping out of existence just past his shoulder. Cerberus lifted their heads and sniffed, then turned toward where the ball had come from.\n\n\"Was that a spirit?\" he asked.\n\n\"Fairly certain it was fae. The boundary's thin, but the fae are more powerful. Any spirits hanging about likely won't come out until tomorrow.\" She leaned forward over his shoulder to reveal that her face was now painted in black and white, making it look like a skull. \"Dia de los Muertos, mi rey.\"\n\nHe understood the first part. \"Day of the dead. It's tomorrow.\"\n\n\"Interesting how it overlaps with Samhain, isn't it? You'll find that so many cultures have celebrations that line up like that for a reason. The pagans were pretty good about noticing those things, they've always been in touch with the world and its inner workings. The Catholic church pretty much stole most of their holidays, because the only things they want to touch are money and little boys.\"\n\n\"Harsh,\" he muttered.\n\n\"Truer than you think. Remember, never trust a man who claims to be noble. Judge him instead by his actions.\" Her hands had moved low enough that she could tease the tip of his cock with the edge of her fingernail.\n\n\"You sound oddly philosophical,\" he told her. \"Did you eat someone nice, or are you done playing hard to get.\"\n\n\"Hmmph.\" She pressed her face into his neck. \"If you're gonna be a dick, I can always just walk home. If you're lucky, I won't accidentally show a horde of demons through your backdoor.\"\n\n\"Yeah, well, last time you brought something through my backdoor, it started off scary and ended up being enjoyable.\"\n\nHe heard a slight hitch in her voice, followed by a chuckle. Her hand moved lower and she pinched the fabric of his jeans just hard enough to capture the head of his cock between her fingers.\n\n\"Now you're making me blush, Romeo,\" she said. \"I wasn't aware that you ever thought about that.\"\n\n\"We spend so much time in the Dreamscape that I think about it a lot. Those first few days of confusion, that bet that you lost.\" He grinned at the memory. \"I've gained a newfound perspective on life this month. Probably growing as a person.\"\n\n\"You speak like a man who knows what he wants, but I sometimes wonder; do you know what you want?\" With one fluid motion, she had undone the button on his pants, exposing his cock to the outside world. She was stroking him from behind, and he closed his eyes at the sudden rush of pleasure that moved through him.\n\n\"Uh, Lily, I'm not sure\u2014\"\n\n\"Oh, it's fine, she's not going to eat you. Remember, she's an animal. Worst case scenario, pretend like you're marking her as your property.\" Lily's other hand found the base of his cock and moved past to stroke his balls. \"But let's talk more about you. I know you're attracted to Beth, I've been inside your head, remember?\"\n\n\"Um...\" He had no idea what to say. What was Lily trying to do to him? He was supposed to be tracking wayward spirits in the Underworld, but now she was messing with his dick and talking about Beth.\n\n\"You know, I could do this better if you moved the backpack.\" She took it off his shoulders and transferred it to hers. \"There doesn't seem to be a lot in here. What did you pack?\"\n\n\"Mostly sandwiches,\" he replied.\n\n\"Really? Off to fight the queen of the faeries and you packed sandwiches?\"\n\n\"Nope. Sofia packed them for me. This way, I don't end up starving to death while getting there.\" He was distracted when another orb shot by him and Cerberus changed direction once again.\n\n\"Oh, Romeo, what am I going to do with you?\" Her hands found his cock once more. \"Oh. Right. Beth.\"\n\n\"I don't really know how I feel about her,\" he said. \"Being a hundred percent honest, I feel an attraction, but I'm not sure why. I'm literally surrounded by exotic women of all shapes and sizes, have sex on a daily basis with many of them, and know that Beth is far more interested in men who are more...legendary, if you catch my drift.\"\n\n\"Maybe you like her for her brain?\"\n\nHe thought about it. Beth was very intelligent, but did she really compare to others? Ratu had the wisdom of centuries, Tink could fix anything, and Zel was like a walking pharmacy. Any aspect of Beth taken individually paled in comparison to someone else, but whenever she was near, he felt his old lack of confidence come up.\n\n\"Maybe I like her for her,\" he replied. \"She's like the female version of me, tossed into a crazy place with\u2014\" he grunted as a wave of pleasure shot up his spine, then watched as a series of sparkling lights moved between the trees up ahead. \"With monsters. She has taken the whole thing in stride, so I would have to say it's her confidence, or maybe her capability, who knows?\"\n\n\"Interesting. Is that confidence enough?\" Lily's tail slithered into view, then moved up his leg until the tip of it hovered over his dick. \"What about me? Are you attracted to my confidence?\"\n\n\"Okay, I know for a fact that won't fit in there,\" he told her.\n\n\"You worry too much,\" she whispered, and then the tip of her tail opened up, creating a wet sleeve which enveloped the top of his cock.\n\nHe gasped in response as a sensation like a sucking mouth worked the tip of his penis. Her hands and tail worked in unison, sending warm waves of pleasure up and down his legs.\n\n\"You didn't answer the question,\" she told him.\n\n\"Your confidence is unnerving,\" he said, then leaned against her. \"Don't take this the wrong way, but it scares me sometimes. Not because I think you shouldn't be confident, but because I worry you'll do something to get hurt someday.\"\n\nCerberus paused, then looked back at the two of them.\n\n\"Mind your own business, bitch,\" Lily snapped.\n\nCerberus growled, but resumed their walk. Every time Mike felt like he was getting close, Lily backed down her ministrations and asked him another question, or squeezed the base of his cock to chase away his orgasm. Tiny little sparks danced all along his stomach and thighs, and occasionally along Lily's tail. Most of the questions were casual, some were serious, and he noticed that the frequency of passing spirits was increasing, but he wasn't exactly paying attention to the shifting scenery.\n\nLube flowed from her tail onto his shaft, keeping him well oiled. Cerberus kept looking back to see what was happening, but continued moving through the Underworld. The trees had changed, and most of them looked like they were dead, or close. The ground was littered with ash and leaves, and when Cerberus stepped around a grouping of rocks, Mike found himself staring at an old stone archway with symbols carved into the blocks along the top. Lily clamped one of her hands across his mouth to keep him quiet.\n\nThe archway had diagonal iron bars embedded inside that looked just wide enough to be squeezed through. Cerberus walked around the gate, but he couldn't help but watch it as they passed. The air smelled of dust with a slight trace of sulfur, but there was another acrid odor he couldn't place. Once they were away from it, Lily dropped her hand.\n\n\"Where did that one go?\" he asked.\n\n\"Hell,\" Lily told him. \"The bars allow you to go in, but what you don't know is that they're like shark-skin, covered in microscopic barbs. Smooth one way, rough in verse, and if you try to back out, it tears your skin off. That's the best case scenario.\"\n\n\"Why would anyone go in there on purpose?\" He looked over his shoulder at her.\n\nHer face darkened. \"There are things here that are far worse than Hell. Your version of Hell is a rather new idea, but the Underworld itself is ageless. It's been around since the beginning of everything, maybe even before. There are things here that would love to get ahold of a wandering mortal, or even a soul that is firmly rooted here.\"\n\n\"But wouldn't Hell be worse?\"\n\n\"It's all a matter of perspective. There are things out here that mortals have forgotten the names of, creatures made of hooks and chains that feast on suffering. But enough about that, because it's making you soft.\"\n\n\"Oh.\" He looked down to see that she was right. \"I mean, you don't have to do that.\"\n\nLily bit his ear and started stroking him even harder. \"I did not spend all that time edging you through the Underworld just to have you blow me off, Romeo.\"\n\n\"Why are you edging\u2014ow!\" She had bitten him again.\n\n\"Lots of reasons. Because I'm a tease. Because I thought it would be fun to jerk you off while riding a three-headed dog. Because I thought it might help you relax, or maybe just because I thought you might enjoy it.\" Her hands were working overtime now, as if to make up for lost ground. It was having the desired effect, and his thoughts were beginning to swim, his concentration lapsing.\n\n\"Lily, I\u2014\" he stopped mid-sentence when she started licking and sucking on his neck. The sensation of her lips on his neck was sending chills down his spine to meet up with the fire that blossomed below. Sparks now crawled along his entire body, and he felt the pressure building.\n\nThe vegetation had become so dense that the branches dragged along his skin like grasping fingers, and the trees were actually moving out of the way to let Cerberus through. Suddenly, the trees were gone and he found himself looking at a giant river. Cerberus padded carefully across, the water coming up just past their belly.\n\nThe water was black in places, and appeared to climb up Cerberus' fur to reach for Mike. He caught the odor of brimstone, and his mind immediately jumped to a time and place from his youth, and he could hear the rancid screams of his mother bouncing around inside his head. Long forgotten memories rushed forth, filling his belly with lead. He clenched his fists, letting the anger rush through him.\n\nLily turned his head and put her lips on his. Her scent washed over him and he felt the memories of his youth vanish in the surge of energy that passed between them. When she broke the kiss, they were on the other side of the river, near the mouth of a large cave that fed the river.\n\nSilver columns supported the ceiling of the entrance, and he couldn't help but think the folded walls of the cavern looked like an eager vagina, beckoning him to enter. He was about to tell Cerberus to take him inside when Lily's tail shifted and sucked him in deep.\n\n\"Oh...my... nghh!\" The lightning danced out along Cerberus fur as Lily's tail milked him, and the legendary beast trembled, then shook itself off, scattering water away from them. The succubus groaned as the magic traveled up her tail with his semen, her hands squeezing him tight while he released his load inside of her.\n\nHe shook his head and frowned at the cave. The sudden compulsion to go inside had vanished, and he thought he saw a figure in the mouth of the cave step back into the darkness.\n\n\"What just happened?\" he asked. \"What is this place.\"\n\n\"That's just some post-nut clarity,\" Lily replied. \"We should keep moving.\"\n\n\"Okay.\" He looked over his shoulder at the cave and caught the glimpse of a figure disappearing around the corner of the rocks. The strangest urge to go back and check it out pulled at him, but Lily put her mouth near his ear and whispered a single word.\n\n\"Cecilia.\"\n\nHe nodded, and looked away from the strange cave. The forest ahead was thinning rapidly, and he now saw buildings, or what was left of them. They looked like they had been bombed out, but as they approached, they faded away. They were now surrounded by whirring lights as spirits shot past them, and shadows milled about amongst the phantom city.",
        "\"Where is this place?\" he asked.\n\n\"War zone, most likely. As for where, I couldn't say.\" Lily swiped at a nearby building and it vanished. \"When you have enough death in one place, the boundary between the Underworld and your world thins to accommodate the sudden transfer of souls. In a way, they are both here and there at the same time.\" She paused as a large shadow, nearly twelve feet tall, lumbered past them. \"This may not even be our world.\"\n\nCerberus stopped and belched fire at a nearby copse of trees. A group of creatures scattered from behind it and bolted into the woods.\n\n\"Scavengers,\" Lily said. \"Looking for an easy meal when someone crosses over.\"\n\n\"This part of the Underworld seems a little more dangerous than over by the house,\" he told her.\n\n\"The house has a Cerberus watching it. This place? Not so much. Actually, I don't know that we want to run across another Cerberus. It may not be very happy to accept the condition this one is in.\"\n\nCerberus looked back at the two of them and grunted in the affirmative, or so Mike thought. They continued onward for another hour when he patted Lily on the leg and looked over his shoulder.\n\n\"Can you grab a sandwich out of my bag?\" he asked. He heard her rustle through his backpack and then went quiet.\n\n\"This isn't a sandwich, it's a whole fucking meal.\" She handed it forward and he took it. It was essentially a BLT on a long hoagie roll, with some type of aioli that Sofia had whipped up this morning. \"She made five more of these for you!\"\n\n\"She didn't want me going hungry. Want some?\"\n\n\"No. You're gonna need your strength when you inevitably fuck the faerie queen.\"\n\n\"You really think it will come down to fucking her?\" He pulled off a piece of his sandwich and held it back for her. There was a moment of hesitation before she took it from him and he heard her chew on it.\n\n\"Honestly? I fully expect her to betray you somehow, then you'll seduce her with that big dick of yours. Probably fuck her in the ass in the hopes of dislodging the massive stick that's up there.\"\n\nHe laughed, which caused him to cough a bite of sandwich into his sinuses. This triggered a coughing fit, and Lily smacked him on the back, which allowed him to swallow the offending bite. He finished his sandwich and had Lily hand him a water bottle, which he promptly drained. The scenery was going from urban to jungle now, and they were walking along the side of a river that was cold enough that chunks of ice were caught in its current. From the side of his eyes, he thought he saw people clinging to the chunks, but when he looked directly, they were gone.\n\n\"Seriously though, is there a plan? If she betrays you, I mean.\" There was absolutely no humor in Lily's tone now.\n\n\"If she betrays me, she still has to let me return home. She can't harm me directly, that much I know. It's likely she will try to do something regarding Cecilia's capture, but I'm not sure what.\" He sighed in frustration. \"Honestly, the only trick I have up my sleeve is that I can challenge her to a duel, but she has to accept. If we agree on the outcome of the duel, she gets to pick the weapons that are allowed, and I get to pick the location. I debated having Tink build me a giant faerie trap, but that could be seen as outside interference. So the duel is out.\"\n\n\"Maybe you'll get lucky and she'll choose genitals as the weapon of choice.\" Lily ran her hands along the front of his pants again. \"Then you could pick somewhere romantic, show her that thing you do with your lightning...\"\n\nHe grabbed her hand and moved it off his crotch. \"Sorry,\" he told her. \"Got told by a trusted source that I'll be banging a faerie queen later, so I need to have some gas in the tank.\"\n\nShe laughed, pinched his stomach, then leaned her head against his shoulder. He thought he heard her sigh, and he couldn't help but smile.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth was busy washing her dinner dishes while looking out the back window. Mike had been gone a few hours already, but she felt like it had been far longer.\n\nShortly after he left, she had gone out front to see if the sundial would turn for her. On the one hand, she was relieved when it didn't. That meant that Mike was still alive. On the other hand, it also meant that she would be unable to activate the home's defenses if he became trapped in the Underworld, and she wouldn't put it past the queen to find a way to trap him there until the house was overrun by the society, angry gods, or whatever was waiting to pounce on the place.\n\nThe others were having a semi-quiet meal in the dining room. Tink was discussing some interior improvements with Reggie, and Sofia sat between Yuki and Quetzalli, the three of them going over some artbooks from the Library. Kisa had stopped in briefly to grab her meal to go, and Beth suspected she was up on the roof.\n\nDana was out back with some redesigned drones, trying to get in some last-minute adjustments before the sun went down. Undoubtedly she would take her place across from the mysterious door once night fell. Beth wasn't certain what Dana had discovered, if anything, but had heard her talking to the rats a lot of nights in hushed tones. At first, she had wondered if they were helping her make progress, but it turned out that Dana rambled when she had an audience. Her inner monologue would float down the hallway for troubled sleepers to hear, and most of it had been a mess of alchemy, astrology, and Dana's personal thoughts on both.\n\nA small drone whizzed around the yard, then chased a pair of fairies. Cerulea and Olivia left sparkling trails behind as they dashed out of the way, then took turns riding the thing as if it were a bucking bronco. Beth wondered if they would be able to stay on it for eight seconds when she heard the doorbell ring.\n\nThe others looked at her with puzzlement as she walked through the dining room, but she noticed that Tink was missing. By the time she made it out to the front room, she noticed the goblin stood at the window with Jenny, both of their faces pressed to the glass. Tink was hopping up and down in excitement, and when Beth looked through the peephole, she saw a witch, a Frankenstein's monster, and a nervous-looking army man.\n\nThe door creaked when it opened, and she looked down at the children as they lifted their bags and shouted with enthusiasm.\n\n\"Trick or Treat!\" they shouted.\n\nStunned, she realized that she had forgotten to retrieve the bag of candy and asked them to wait. She locked the door and sprinted to the kitchen, then grabbed the bag of candy so fast that she accidentally spilled a box of pasta. On her way back, she noticed that Yuki and Quetzalli now stood at the window, and she was about to open the door when a hand fastened around hers.\n\n\"Oh, please, allow me,\" Yuki asked, then took the candy from her. Her features shifted, making her ears bigger and her nose longer and more fox-like. She threw a card on the ground to summon a large chalice roughly the size of a bucket and then dumped the candy in.\n\nStanding back from the door, Beth watched Yuki open the door and growl at them.\n\nThe witch shouted \"Trick or Treat\" one more time, but the army man broke and ran down the front walk. Frankenstein's monster stared as he took his candy, but the witch clapped her hands in excitement.\n\n\"Your costume is so cool,\" she declared. \"Can I get an extra piece for my brother?\"\n\n\"Sure,\" Yuki told her.\n\n\"Thanks. I like your decorations, the dragon in your yard is so cool!\" With that, the witch and the monster departed down the long path to the road and the safety of their parents. Beth couldn't help but notice that the Jabberwock opened an eye as they passed, then puffed out a wisp of smoke.\n\n\"Wait, they can see the Jabberwock?\" Beth looked at the others with concern. \"What happened to the geas?\"\n\n\"It's Samhain,\" Yuki replied. \"The thinning of the barrier between our world and the spirit world. My guess is that barrier may include the geas somehow. It's still up and protecting us, I can feel it. But maybe the visual protection is weaker. It's not like Emily ever had someone stand out front to test it on Halloween, we always just kept to ourselves. The Jabberwock, on the other hand, is bound to be noticed.\"\n\n\"It won't eat anyone, will it?\" No sooner had she asked her question, the doorbell rang again.\n\n\"Hold on.\" Yuki closed her eyes for a moment, then opened them. \"It'll just watch, for now.\"\n\nTink ran between them and snatched the bucket from Beth. She yanked open the door to reveal a princess and a teenager wearing a rubber horse head.\n\nThe princess rose her bucket eagerly, but the horse took a step back. \"Bro, your costume is awesome!\" he shouted, then took a picture of Tink with his phone.\n\n\"Extra candy for cute princess,\" Tink said, then bared her fangs at the teenager. \"Tink is not bro,\" she declared, then slammed the door on him.\n\nOutside, Beth heard the teen laugh. When she looked through the peephole, she saw that the fairies were now whirring around the yard, leaving spectral trails in their wake. Along the grounds, the carefully cultivated greenery that the centaurs had planted were now illuminated by flashing lights that shot out into the darkness.\n\n\"Of course,\" Yuki said from against the window, \"you have a gate to the Underworld out back. With the veil thinning, the souls are using this place as a nexus.\" She furrowed her hairy brow and looked at Beth. \"But why haven't I seen this happen before?\"\n\n\"Did Emily ever open that gate?\" asked Beth.\n\nYuki shook her head. \"Not to my knowledge. But we also didn't have the grim reaper living with us, or a dullahan hanging out in the front yard.\"\n\n\"Speak of the devil,\" Beth muttered when she looked back through the peephole. Sulyvahn was watching a group of kids as they came up the walk, but they didn't seem to notice him until he popped off his own head. One of the kids screamed and ran down the path, but the others laughed and kept going, clearly under the assumption that he was animatronic. \"Well, there's only one thing we can do.\"\n\n\"Which is?\" Yuki turned to face Beth, a look of seriousness on her face.\n\n\"Not run out of candy.\" The doorbell rang and she smiled. \"Can someone else get that? I have a costume I want to wear.\"\n\nShe sprinted up the stairs, nearly taking out Dana, who was near the top. Once in her room, she started digging through a couple of boxes from her apartment, eventually opening one near the bottom. She dug through the box and pulled out a black cape and tossed it onto her bed. Digging around some more, she found a small black box and a black dress with spiderweb lace.\n\nShe stripped out of her clothes and then slid into the dress. It hugged her a bit more tightly than she remembered, and she wondered if it either shrunk the last time she washed it, or if Sofia's cooking was putting some pounds on her ass. When she checked herself out in the mirror, she grinned. It still looked good, so who cared?\n\nSeeing her teeth reminded her to pick up the box. When she opened it, she found a set of false fangs inside and some black lipstick. She popped the fangs in her mouth and examined the lipstick. It looked like it had cracks in it, so she slid it across the delicate skin of her wrist and frowned when it flaked off.\n\n\"Oh well,\" she muttered, then picked up the cape. The inside had red silk trim, and there were finger loops that allowed the cape to move with her hands. She held her arms out wide and smiled at Beth the vampire.\n\nShe picked out a pair of comfortable black pumps and then stepped out of her room. Dana looked up from her position at the weird door and then did a double-take.\n\n\"Is this...Are you just in costume or is this something I should be worried about?\" she asked.\n\nBeth laughed. \"It's Halloween, and we actually have trick-or-treaters! Do you want to pass out candy?\"\n\nDana shook her head. \"No, thanks. Have you ever had a freshly made sopapilla? 'Cause kids smell like those to me. I'm good up here, thanks.\"\n\n\"Suit yourself.\" She went down the stairs to see Quetzalli handing out candy to a group of kids all dressed as Power Rangers. A couple of them jumped when they got zapped, but nobody complained. Down by the sidewalk, a small crowd of parents had formed as another group of kids got ready to head up the walk.\n\n\"This...is unusually busy, isn't it?\" Yuki asked.\n\n\"Yeah, it is, but if we're the house with a dragon out front, people will drive across town to come see it.\" Beth watched Quetzalli close the door, then took the candy bucket from her. \"Good god, how much did you give those kids?\"\n\n\"Just a handful of candy for each of them,\" Quetzalli said.\n\nYuki laughed. \"If you give me some cash, I'll head out to get some more.\"\n\n\"I...\" Beth was tempted to tell her no, but if anyone could handle a trip outside, it was Yuki. \"If you think you're up to it, then\u2014\"\n\n\"Tink go too!\" The goblin was hopping from foot to foot. \"See decorations, make tricks, steal candy!\"\n\nRemembering Mike's comment, she knelt so that she was eye level with the goblin.\n\n\"Mike said you could go out if you wore underwear.\"\n\nTink's face fell for a moment, but then her expression was replaced with one of determination. \"Tink make big sacrifice for Halloween,\" she declared, then ran up the stairs. When she returned, it was obvious that she had put on a pair of Mike's boxers backward, allowing her tail to poke out of the fly. They were baggy and looked like shorts on her, but if it meant she was decent, then it would be fine.\n\n\"Tink ready!\" she declared, then opened the closet and pulled out her club. \"Smash pumpkins, maybe!\"\n\n\"Are you just trying to get out of the house to make trouble?\" Beth asked.\n\nTink looked her directly in the eye and nodded her head slowly. \"Yes.\"\n\n\"Don't worry, I'll try to keep her from doing anything too inappropriate.\" Yuki took Tink's hand and then opened the door just as a trio of ghosts were pushing the bell. \"Excuse us,\" she told them and squeezed between them.\n\n\"Your kid's costume is so cute,\" one of the ghosts declared.\n\n\"Tink is not a fu\u2014\" Tink was cut off when Yuki clamped a hand over her mouth and dragged her the rest of the way down the walk. Once Beth handed out some candy to the ghosts, she wondered how Yuki was going to get to the store without a car, but figured it was best if she didn't know.\n\n\"Bold move, for sure and for certain, lass,\" Sulyvahn declared as he came up the stairs, the ghosts walking around him. \"Letting a trickster and a goblin out on Samhain.\"\n\n\"A trickster?\" It suddenly occurred to her that Yuki was, in fact, a fox demon known for trickery. \"Ah shit.\"\n\nSuly laughed. \"I'm sure it will be fine, lass. I bet they just have a harmless bit o' fun, being as it's been such a busy time and all.\" He leaned against the door frame. \"And look at yerself, would ye now? Ye be lookin' mighty fine as a creature of the night.\"\n\n\"Thank you,\" she replied.\n\nSulyvahn followed her inside and sat down on the couch next to Quetzalli. Sofia wandered in from the dining room with a disappointed look on her face.\n\n\"Well, I would like to thank everyone for leaving me to clean up.\" She dried her hands on a small towel she held. \"Wait, where is everybody?\"\n\n\"Sent Yuki out for candy, and she took Tink with her.\" The bell rang and Beth picked up the chalice.\n\n\"Hold on a second.\" Sofia crossed the room and crouched to look through the peephole. She opened the door and stepped through the door to tower over the cluster of children who stared up at her.\n\n\"Whoa,\" came from a young man in a Scream mask.\n\n\"Indeed.\" Sofia turned to take the chalice from Beth and then handed out candy. \"You all look amazing. Listen to your parents, and look both ways before crossing the street.\"\n\nThe kids thanked her and then ran down the walk. She closed the door and handed the chalice to Beth. \"I haven't seen a proper child in decades,\" she stated, her eye suddenly misty. \"I'm headed back to the Library tonight. You know where to find me.\"\n\nWith that, she walked into the office and activated the magic book, and vanished.\n\nPuzzled over Sofia's reaction, she sat down next to Suly. \"Are all those spirit lights in the yard something to be worried about?\"\n\n\"Nay. They be spirits that've moved on, just comn' back for a wee visit. They be peaceful.\" Suly curled his fingers around a lock of Beth's hair. \"If not a tad bit mischievous.\"\n\nShe smiled and had put her hand on his thigh when she heard Quetzalli groan. Remembering that the dragon was with them, she leaned forward to see that she was gazing at something in her hand with contempt.\n\n\"What's wrong?\" Beth asked.\n\n\"This...this chocolate tastes terrible! And I fear I have been pranked, for some fiend has put coconut inside of it.\" Quetzalli threw the half-eaten Mounds bar onto the coffee table, where it slid across and onto the floor. A rat that was passing through scurried over to pick it up, then ran off with it.\n\nOver the next hour, Beth answered the door for the children who rang the bell. The traffic was heavy and she was almost out of candy when Yuki appeared with a couple of large bags tucked under her arms.\n\n\"Thanks, you're a lifesaver. Where's Tink?\"\n\nThe kitsune scowled. \"I lost track of her after she pantsed some guy dressed like a preacher. She is out there raising mayhem, and everyone assumed I was her mother, so that wasn't fun for me. I ran into Death, he said he'd keep an eye on her until I get back.\"\n\nBeth frowned. Could the grim reaper even do anything if someone tried to take the goblin? \"You're headed back out?\"\n\n\"I am. Some guy in a hockey mask kept shouting baka at me, so now that you have your candy, I'm going to hunt him down and teach him to be afraid of his own shadow.\" She stormed back out the door and ran down the walk. A little girl dressed as a princess stared in awe as Yuki vaulted the stone wall to bypass the group of parents that waited between the lions.\n\n\"Now that I'm thinking could become a fair bit o' trouble,\" Suly said.\n\n\"I hope not.\" Beth wasn't sure she agreed with Yuki letting Tink wander off, but there was nothing she could do about it now. If something happened to Tink, Death would be able to come home and let somebody know. The idea that Mike may come home and discover she was missing didn't sit well with her at all. Or Yuki, for that matter. She wasn't supposed to be their babysitter by any means, but she suddenly felt like the situation was starting to spiral out of control.\n\nQuetzalli and Beth alternated handing out candy. Jenny and Reggie stood in the window and watched them come and go. More than a few kids stopped to take selfies with the Jabberwock. Beth got asked by more than a couple of adults if she was the new owner, and she noticed a bunch of people milling about the yard and admiring the gardens. The centaurs had long ago left, locking their portal door behind them, and she sent Sulyvahn out into the yard to chase off some people who decided to wander the hedge maze.\n\nThere were so many people coming and going that she didn't bother to close the door anymore and just waited with the screen shut for the next group of kids to arrive. The energy in the air was high, and she bid farewell to a group of high school kids dressed as ninja turtles when she looked up to see a dark figure in a black hoodie standing at the bottom of the porch.\n\n\"Hey there,\" she said in greeting, but her smile turned to a frown when the figure pulled back the hood to reveal their identity.\n\n\"Hi, Beth.\" Marco stood defiantly on the front walk of the house, his hands in his pockets. \"I was wondering if we could talk?\"\n\n\"About what?\" She set down the candy bucket and scowled. \"Why are you here? Clearly, it isn't for candy.\"\n\n\"It's for you.\" When Marco lifted his head to look at her, it revealed that his eyes were wild, his pupils dilated. \"It's always been about you.\"",
        "\"Oh for fuck's sake.\" She stepped toward him and crossed her arms. \"Is this about a stupid crush? We worked together for years, why the sudden interest now?\"\n\n\"Yes. No, I...\" He looked confused for a moment, his attention wandering across the face of the home. \"I haven't been able to get you out of my head, not since the night I dropped off those boxes. I keep thinking about how I didn't appreciate you when you were there, and how you make me feel. Now I have to protect you from yourself, surely you understand?\"\n\n\"Are you on something? Is that what this is about?\" She took another step toward him. \"You're broadcasting some major creep vibes right now.\"\n\n\"It's not about me, though. It's about you. This place is dangerous, Mike is dangerous. Don't you see? All this money he inherited was just part of it, and now you're under his thrall. He's controlling you!\" His eyes were pleading now, and she wondered if he was going to cry.\n\n\"I've had enough of this. Get off my property before I come down there and kick your ass.\"\n\n\"Please, Beth.\" Marco took a step back. \"This place does things to you. You haven't been the same since you left, don't you see that? He even has you dressing up for him, now. I get that you don't see it, you're on the inside looking out, you're caught up in all of this, but please, if you'll just come with me, I can explain everything.\"\n\nShe shook her head, hoping that Sulyvahn would reappear soon. Marco's posture made her nervous, and he stepped aside to let some kids past. She greeted them and gave them candy, her eyes never leaving his. Once the children were gone, she pointed at the street.\n\n\"Seriously, Marco. Get off my property before I have you removed.\"\n\n\"My property,\" he snarled. \"He already has you thinking like him, doesn't he? You really are lost.\"\n\n\"Marco.\" She narrowed her eyes at him. Between the wild eyes and the weird statements, her best guess was that he had taken drugs earlier. \"I will have your ass fired. This is not okay.\"\n\n\"It doesn't matter anymore,\" he told her. \"None of it does.\"\n\nWith that, he turned and walked down the sidewalk until he vanished around the corner. Sulyvahn reappeared from the garden and shook his head.\n\n\"Yer never gonna believe at what I caught them doing...are ye okay, lass?\"\n\n\"Yeah. I guess so.\" She frowned at the street. \"C'mon, let's go inside and turn off the lights. I think I'm done giving out candy.\" She set the bucket by the door and flipped off the porch light. \"Hey, Abella? Let me know if someone starts trouble in the yard.\"\n\nUp above, she heard what she assumed was an affirmative thump. Satisfied that at least someone was willing to hang back and help out, she went back inside and sat on the couch to await Tink and Yuki's return.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike jolted awake and shook his head. He had dozed off momentarily, so he rubbed the sleep out of his eyes and looked at his phone.\n\nAnother hour had passed. Cerberus was setting a good pace, and the swirling lights now occasionally blinded him with their intensity. The air had become cold, and he shivered, grateful for the warm arms around him.\n\nThe landscape had faded into an obscure mist, and distant cries like screams sent chills up and down his spine. He clutched Cerberus' fur tightly in his fists and closed his eyes.\n\n\"It's so awful here,\" he said. \"I can feel it sucking the joy from my bones.\"\n\n\"Sorry, Romeo.\" She slid around him so that she sat in front, and he leaned into her, his head between her breasts. \"This isn't meant to be a pleasant place.\"\n\nHe swallowed, his throat suddenly dry. It wasn't just the heat leaving his body, but the absolute misery that rushed in to replace it. Thoughts that weren't his own flitted in and out, depressing things that whispered to him to step into the void. Large cracks had appeared in the ground all around Cerberus, and they stepped around them carefully.\n\n\"Remember why you're here,\" she whispered to him, like a mother to a child. \"You have important things to do.\"\n\n\"You came along to protect me, didn't you?\" His own voice was a whisper, and he heard it as if from far away.\n\n\"I was always planning to come. This is a bad place, waiting to swallow you whole like a snake. If not for Cerberus, I would have brought some of the others as well, your very own harem honor guard.\" She stroked his head, her long fingernails dragging through his hair like a comb. \"I'm bad at being up front with you. I'm bad at a lot of things, actually, but I want to be better. If I'm being honest, Naia knew, too. That's the only reason she let you go without sending everyone in with you.\"\n\nHe smiled. It had seemed rather strange that everyone hadn't demanded to come, but he had attributed it to Cerberus.\n\n\"Was the handjob her idea, too? To keep my spirits high?\"\n\nLily chuckled. \"Let's just say I wanted some gas in the tank of my own. Just in case. While you're gone, I think the shadow is going to try and do something.\"\n\nMike sat up and looked at her. \"I do, too. It's why I left the house to both of them, in case he came for me. Even if he took me out, he would have to get both of them afterward.\"\n\nLily opened her mouth to say something, then tilted her head to the side. \"Do you hear that?\" she asked.\n\nHe nodded his head. It was music that rang through his body, filling him with both joy and sorrow. He pictured golden musical notes that hovered in the air and wrapped around him, daring him to seek them out. Tears were running down his cheeks, and he wiped them away, his whole being flooded with emotions.\n\n\"Focus, Mike.\" Lily pinched his ass and he jumped.\n\n\"Right.\" He took the backpack from her and found the pair of earplugs inside, then stuffed them in his ears. The music dimmed and he was able to hold his thoughts together. \"I assume we are almost there?\"\n\nHe felt Lily tense up as Cerberus stepped over a hill and revealed a clearing surrounded by large stones in a pattern that reminded him of Stonehenge. In the middle was a brilliantly polished golden door that had opened just a crack, allowing a stream of light to illuminate the shadows of the Underworld. Faerie creatures slipped through the crack and immediately turned into motes of light before shooting off in every direction.\n\n\"Is that really it?\" he asked. \"Are we really here?\"\n\n\"It would seem so.\" Lily was clearly shouting, but he barely heard her. Cerberus got close to the door and sniffed around before letting them down. Once on the ground, he turned to look at Lily, who handed him his backpack.\n\n\"I guess this is my stop,\" he told her.\n\nA sly grin broke out on her face. \"I guess so,\" she shouted. \"When you see the queen, can you do me a favor?\"\n\n\"Anything. Well, almost.\" He could think of a number of things he probably shouldn't do to the faerie queen.\n\nLily took his face in her hands and held him tightly, her eyes reflecting the supernatural light of the faerie realm. For just a moment, she looked like someone else, as if her demonic visage had been stripped away, leaving behind someone far more mortal than monster.\n\n\"Give her Hell for me!\" she shouted, then planted a kiss on his lips. \"She's not going to be happy to see you!\"\n\n\"I'm fully aware.\" He looked at the door and took a deep breath. This was it, the moment of truth. But first, he took a moment to caress each of Cerberus' heads. The demon dog closed their eyes and rubbed up against him, then panted openly when he planted a kiss on their noses.\n\n\"Go home, Cerberus. Protect it until I get back.\"\n\nCerberus whimpered, but then bounded off into the mist, leaving Lily and Mike behind. When he looked at her, she gave him a mock salute, her wings flaring open behind her.\n\n\"I'm taking a different route,\" she informed him. \"I have some business to attend to.\"\n\nCurious what it was, now wasn't the time to chat about it. \"Be safe,\" he cautioned.\n\n\"See you in your dreams.\" She blew him a kiss, then threw herself into the sky and vanished.\n\nNot wanting to dawdle any longer, Mike grabbed the door by the edge and pulled it open. The stream of fae that came out passed around him, and he fought the tide of creatures to walk into the golden light. Once properly inside the door, he had to close his eyes and was unable to see. The resistance of the fae vanished and he opened his eyes to find himself stumbling down a cobblestone path that looked very familiar.\n\nIt was the outside of the Queen's Court. Though it looked the same as before, it was empty now, and he was shocked at how his footfalls echoed throughout the abandoned city. Was everyone gone on account of Samhain, or was it something far more sinister? Not wanting to take any chances, he paused long enough to drink a little bit of water and then broke into a jog, heading straight toward where he had last seen Cecilia.\n\nThere was nobody to stop him when he reached the bridge onto the faerie island, but he stopped when he saw that it was empty. Chagrined, he wondered if the queen had somehow reneged on their bargain and moved her entire court. He strode across the bridge with determination and felt the air ripple around him like water.\n\nThough the court stayed empty, Cecilia's cage appeared, and she sat on the swing with her back to him. He took another step forward and cast his eyes about. Seeing no signs of resistance, he walked up to the cage until he was next to the bars.\n\n\"Cecilia?\" he asked.\n\nWhen she turned to face him, her hair hung in the air as if it was floating in water. The gossamer strands of hair fell in slow motion to reveal her face, and he noticed that the red streak in her hair was more pronounced than ever. There was a look of disbelief on her face, and she pressed herself into the bars. Her bare skin sizzled on contact, but she seemed oblivious to it.\n\n\"A mhuirn\u00edn, 'tis really you!\" She reached through the bars and touched his face, and he took her hand in his. A spark passed between them, and for a moment, her white eyes flashed a brilliant green. He slid his arms through the bars and held her tight, then pushed her away when she let out a gasp of pain.\n\n\"Stand back,\" he told her, then looked at the door of the cage. It didn't seem to have a lock, but if he needed to rip the world apart to get it open, that's what he intended to do.\n\n\"You shouldn'a come,\" Cecilia groaned. \"It's all been a trap. I tried to warn you through your dreams.\"\n\n\"Yeah, well I've always been bad at following directions.\"\n\n\"A contagious inclination, based on your presence.\" The voice behind him froze him on the spot, and he turned to see that the faerie queen stood on the bridge behind him in her full glory, wings extended out, and a swirling, glittery aura around her entire body. She scrutinized the golden chalice she held in her hands and then poured out the wine with a scowl. \"I didn't expect to see you, Caretaker, and now I've been put off my drink. You were never supposed to survive the trip through the Underworld.\"\n\n\"So you're surprised to see me, then?\" He grinned smugly.\n\n\"Indeed.\" There was a fire in her eyes as the magical aura around her intensified. \"It looks like I'm going to have to deal with you myself.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nKisa stayed out of sight as she followed the man in the hoodie.\n\nShe had been up on the roof watching the trick-or-treaters and hoping to maybe scare Tink when she came home when the man in the hoodie had shown up to talk to Beth. The conversation had struck her as odd, not so much because the guy was clearly a creep, but mostly because Beth hadn't seemed to notice the shadow figure that practically hung off his shoulders.\n\nYou can see it, can't you? He's made her into one of his whores, he's turned her brilliant mind into little more than a sexual pawn. She even dresses like a whore for him, like a witch, or even a priestess for his cult. You must get her out of there if you wish to save her. When the shadow spoke, it sent a chill down Kisa's spine, but Beth never reacted.\n\n\"Please, Beth.\" Marco took a step back when the shadow pulled too hard on his shoulder. \"This place does things to you. You haven't been the same since you left, don't you see that? He even has you dressing up for him, now. I get that you don't see it, you're on the inside looking out, you're caught up in all of this, but please, if you'll just come with me, I can explain everything.\"\n\nKisa never even heard Beth's reply, because the shadow was now shouting over her.\n\nShe is lost! the shadow cried. This is not something you can do on your own. I warned you this would happen! She pulls away from her own kind, from your attempts to save her! What more proof do you need?\n\nWhen the conversation ended, Marco stormed off, and Kisa followed. There was something familiar about the shadow, and she watched it flit in and out of existence as Marco walked beneath the bright street lamps of the neighborhood. Occasionally he would stop and look back, but Kisa could feel the darkness as it wrapped around her, could easily walk between people or in front of them without being noticed at all. She was little more than a touch of the breeze, or a whisper on the wind as far as anyone else was concerned, and she followed Marco for over a mile before he got into a car and slammed the door shut.\n\nFrom outside, she heard him arguing with the shadow. She crouched and slid beneath the car, hoping he wouldn't start it up and peel rubber to leave. Nearly an hour passed as she listened to Marco yell, and the shadow's voice went back and forth between cajoling, pleading, and outright anger.\n\nThe conversation had dimmed, and she tilted her head, eager to hear anything of use. Alarms were blaring in her head now, and she fought the urge to run, pinned in place only by her own curiosity and fear of being spotted.\n\nThe car went silent except for a litany of whispers from the shadow, which was finally punctuated by two words that Kisa heard with no problem at all.\n\n\"I accept,\" said Marco.\n\nShe didn't know what to expect, but silence wasn't it. A minute later, Marco stepped out of his vehicle and opened the trunk. He slammed the lid and started walking back toward the house at a clipped pace.\n\nKisa crawled out of her hiding spot and tailed him. The hour was late, and only a few people roamed the darkness, but when Marco stopped beneath a streetlight, he pulled out his cellphone and called someone. He had a baseball bat casually slung over his shoulder. When he turned in her direction, she felt an intense urge to hide, so slid behind a parked car and made herself small.\n\nFrom where she sat, she could see that his eyes had gone completely black. He was too far away for her to hear the conversation, but a large grin broke across his face as he hung up the phone and stuck it in his pocket. He whistled as he walked back to the house, then stopped a block away.\n\nAlmost nobody was out now, and Kisa stayed hidden away, watching and waiting. Nearly forty minutes later, a car pulled up and a woman got out. She wore a black trenchcoat and had a very long braid that hung from the back of her head down to her waist.\n\nAfter a couple of minutes, the newcomer's face turned to one of surprise, and Marco nodded. They seemed to be coming to some sort of agreement, so Kisa tried to move closer, hoping to catch the tail end of it.\n\n\"\u2014and all I want in return is the house itself,\" Marco said, his voice slightly distorted as if speaking at two discordant pitches. \"This body won't last more than a couple of days at most, so I will need a new vessel. This man simply has no magic to sustain me, so I consume his life force instead.\"\n\n\"You shall have that, and more, if you can actually deliver.\" The woman looked tired and angry, and she leaned toward Marco with a sneer on her face. \"Though I wonder how you will manage with those accursed lions protecting the place.\"\n\nMarco grinned. \"Oh, don't worry about those. I've been invited, after all, they won't touch me. Once inside, it will take some time to get you what you want, but you have my guarantee, as your goals align with my own. With any luck, I will leave before he comes home, and then we can come up with a plan to strike while he's devastated by his losses.\"\n\nThe woman nodded, then reached into her pocket and pulled out a wand and handed it to him. \"If you should fail, I want you to know that Amir is not a forgiving man, and he is in a terribly foul mood. For your sake, you had better not be wasting our time.\" She opened up the door of her car and put one foot inside before looking back. \"You have until dawn to signal me for extraction. Otherwise, you are on your own.\"\n\nWith that, she slammed the door and left. Marco was practically skipping down the sidewalk toward the Radley house. He even stopped to pet the lions on the way in while Kisa hid behind the neighbor's car.\n\n\"I've missed you so much,\" he told them. \"And I cannot wait to make you mine again.\" He pulled himself up the wall and trailed his fingers along the cold stone muzzle of the beast and pulled his phone out again. He seemed enchanted by something on the display, and then let out a burst of laughter that raised the fur on Kisa's neck.\n\n\"It may be Samhain, but you know what happens at midnight?\" he asked the lion while stroking its paw. \"Dia de Muertos. The day when the dead shall walk again.\" He hopped off the lion and hid the bat behind himself.\n\nSulyvahn stepped onto the walkway to block his approach. The dullahan wore a friendly grin that definitely didn't extend to the rest of his features, and he made a shoo-ing gesture with his hands.\n\n\"There'll nay be trouble here tonight, lad, so jes' you\u2014\"\n\nMarco was now close enough that he spun around and used the bat to knock Sulyvahn's head clean off and across the yard. Sulyvahn's body stumbled about and made a grab for Marco, but he deftly sidestepped around the spirit and ran to the front door, the wand in his hand radiating energy.\n\n\"Knock knock,\" he said, then pointed the wand. The front door exploded inward and he ran inside. Panicking, Kisa ran into the yard, following the angry cries from Sulyvahn until she found his head. It had landed next to the Jabberwock, who hadn't moved a muscle.\n\n\"Find Yuki!\" he said as she tossed his head toward his body. \"Tink, too. Tell them the house is under attack!\"\n\n\"How do I find them?\" she asked.\n\nHe picked up his head and stuck it on his neck with a macabre grin. \"Wasn't talkin' to ye.\" He pointed to the sky and she looked up in time to see Abella, wings spread wide, shoot out into the neighborhood.\n\nThere was a flash of light from inside the house, followed by a scream. Sulyvahn broke into a run, and Kisa was right behind him. They made it into the living room together and saw that Beth was busy picking herself off the ground, one hand clutching her face.\n\n\"Lass, be ye okay?\" Sulyvahn asked.\n\n\"He went out back,\" she told them, then lowered her hand. There was blood on her palms and a wicked cut along her brow that bled heavily. \"I was asleep on the couch. I wanted to make sure Tink and Yuki made it home okay. He took the key to the gate from me. How did he even get in?\"\n\n\"It was the shadow man,\" Kisa said. \"I saw them talking, and I think he's riding around inside of this Marco guy.\"\n\nNaia shouted in alarm, and all three of them ran for the backyard. Once outside, they heard a loud roar from the gate below and saw that Marco was fumbling around with the lock. Some rats had come out to see what the commotion was, but quickly hid once more when Cerberus howled. On the other side of the gate, the forest lit up at the sound of hellfire being blasted in every direction, revealing that a giant castle of black stone now stood menacingly beyond the treeline.\n\nMarco yanked the lock free and pulled the gate open, a look of triumph on his face.\n\n\"Is he going in there?\" Beth asked.",
        "\"No, he isn't.\" Kisa's eyes widened in terror at the sight of the spectral army that had been waiting on the other side as they stormed into the backyard. There were dozens of them, men and women in antiquated armor that held their weapons high as they marched up the hill. Through the gate itself, she could see columns of hellfire burning in the forest as lost souls continued to file in. \"Can't you see them?\"\n\n\"See who?\" Beth looked down at Kisa, then over at Sulyvahn.\n\n\"Lass. Things be about to get messy.\" Sulyvahn grabbed his hair and ripped his head off, black smoke now leaking down his chest and shoulders as his free hand reached down his throat and he pulled out his spine. With a quick flick of his wrist, his whip unfurled to an unnatural length, the bones laying on the grass and causing it to wilt.\n\nThe shadow army charged, and as they passed through Naia, the water in the fountain froze up, trapping the nymph in place. At the same time, the features of the spirits temporarily sharpened and Beth gasped, and she took a step back.\n\n\"You have your orders,\" yelled Marco as he slid behind some nearby bushes.\n\nAs he vanished from sight, his army broke into a run, and Kisa covered her face and hid against the wall of the house, fearing the worst. She felt a chill as the spirits passed through her, and when she screamed, she could barely hear herself over the roar of rage from Cerberus.\n\nThe yard went silent, and when she opened her eyes, she saw Beth lying on the ground, holding a hand to her stomach. Sulyvahn was gone, and Naia's fountain was completely iced over, the nymph missing as well.\n\n\"Shit, that felt terrible,\" Beth said, then looked at Kisa. \"Where did everybody go?\"\n\nKisa shook her head and was almost to her feet when she heard the ghastly roar of the Jabberwock. She stumbled over to Beth and helped her up, and the two of them ran back through the house and into the front yard.\n\n\"Suly!\" Beth cried. The dullahan was trapped in a circle of spirits that assailed him from every direction. With every crack of his whip, a spirit would burst into a puff of light, only to be replaced by two more. The spectral army was everywhere now, but a large concentration of them swarmed the Jabberwock.\n\nNo, that wasn't right. They were entering it. One at a time, the spirits were embracing the beast and sinking inside, and the Jabberwock let out a roar as its eyes turned a sinister shade of green. Its movements were jerky as it turned to face the house, and it swayed from side to side as if regaining its balance. Suddenly, it froze up, let out a cry, and then charged the front porch.\n\n\"Shit!\" Kisa grabbed Beth by the back of her dress and pulled as the Jabberwock slammed into the front of the house, shaking the foundation. Inside the home, the spirits were running from room to room, tossing furniture about and creating mayhem. A spirit near Kisa took a stab at her with a spear, but it passed harmlessly through her, leaving behind nothing more than a dreadful chill that made her want to barf.\n\nThe Jabberwock shoved its face through the window and snapped at them with powerful jaws. Kisa and Beth were forced against the wall, pressing themselves flat to avoid the huge sharp teeth that nearly reached them.\n\nThe Jabberwock opened its mouth and screeched, forcing them to cover their ears. It scrambled at the window with its front claws, trying to pull itself further inside, and was making progress when the beast suddenly cried out and withdrew.\n\nLarge snowflakes were drifting through the air now, and a giant block of ice had pinned the beast's tail to the ground. The Jabberwock was squirming free when Abella dropped out of the sky and slammed into its face, gouging out its eyes with her talons.\n\n\"They're back,\" Kisa muttered in relief. Yuki had appeared between the lions and was summoning a barrage of icicles to fire at the Jabberwock as Abella rode its face, holding on with her feet and raining punches on it.\n\nThe front room flooded with darkness, and then Kisa was grabbed by her tail and flung across the room. She landed on her feet and took a swing at her assailant, her claws passing right through it.\n\n\"How do you fight something you can't touch?\" she hollered.\n\n\"At least you can see them.\" Beth had picked up what was left of a chair and was swinging it around at nothing in particular. The spirits were teasing her now, pulling at her skirt and her hair, and when she stepped forward to swing at empty air, she got knocked onto her butt. \"Ow, god dammit! I saw them before, why can't I see them now?\"\n\nThe temperature in the room was cold but was now dropping drastically, and Beth was breathing out giant clouds of fog. The spirits that swirled about paused and looked around in confusion as thin sheets of ice formed along the walls. At first, Kisa thought that Yuki had come inside, but she could still hear the kitsune shouting out in the yard, swearing in a language she didn't recognize.\n\n\"That's right, assholes, you fucked up big this time.\" Beth pushed herself up against the wall and laughed, her fingers pointing to the remnants of a shattered dollhouse. \"I might not be able to touch you, but I know someone who can, and you just pissed her off.\"\n\nThe lights flickered on and off for several seconds and then exploded in a fountain of sparks, sending glass onto the floor. Kisa pressed herself into a corner, her tail poofing out completely as a young woman with long black hair manifested in the middle of the room. She wore an antique dress, and her body was stooped as if her bones had been installed incorrectly.\n\n\"Fuck 'em up, Jenny,\" Beth said.\n\nJenny tilted her head to one side, allowing her hair to fall away from her face to reveal a jack-o-lantern grin that stretched from ear to ear.\n\n\"Old Mother Hubbard, went to her cupboard, to fetch her poor dog a bone.\" Her rasping voice faded in and out like a radio trying to find the correct station, and after speaking, Jenny leapt across the room and snatched a spirit by its throat with long fingers.\n\n\"But when she bent over, Rover came over, and...\" Jenny's face twisted in delight as the spirit cried out and kicked its legs uselessly. She abruptly folded it backward, causing its spine to snap and burst up through its stomach. \"Gave her a bone of his own,\" she whispered, then grabbed the spine like the handle of a suitcase and gave the spirit a shake, laughing maniacally while she did so.\n\nHorrified, the spirits could only stare as Jenny slammed the ghost into the ground, causing it to explode into a series of flickering lights that shot out the open window as if trying to get away. Her head spun in place, doing a full rotation before settling on a large man holding a shield.\n\n\"Play with me,\" said Jenny in a child's voice.\n\nThe spirits scattered in a panic and Jenny flickered and disappeared, her haunting laughter bouncing through the house, followed by the shrill cry of tormented souls.\n\nOut front, the Jabberwock roared in agony, and Cerberus howled out in pain, the sounds reverberating through the house. The night was nothing more than a swirl of chaos, and Kisa looked over at Beth.\n\n\"Where did Marco go?\" she asked.\n\n\"I don't know, but...\" Beth stepped away from the wall and brushed some debris off her dress. \"Once I find him, he's a dead man.\"\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\nOne of the best parts about writing about an imaginary, magical house is that you get to destroy it over and over without having to actually clean it up.\n\nWhat final trap has the queen laid for Mike? What is the shadow up to? Can Beth handle an army of spirits? It's going to be a bumpy couple of chapters, and I can't wait to share them with you!\n\nHave a happy Samhain, everybody, and I can't wait to see you next time!\n\n \n"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "action and suspense",
        "bizarre insertion",
        "edging",
        "halloween",
        "harem",
        "monstergirls",
        "reverse tail penetration",
        "succubus being kinky",
        "they did the monster mash",
        "spirits"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-57"
}