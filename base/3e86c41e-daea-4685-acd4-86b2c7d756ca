{
    "title": "When a Woman's Fed Up Ch. 04",
    "pages": [
        "Hello readers,\n\nThank you all for reading Dark Chocolate: A Mature Story. This is continuation of that story. The character Keisha was introduced briefly in chapter two of that tale, and for some reason I feel compelled to tell her story. I must state that these are fictional characters and exist solely in my imagination. \n\nThis is an interracial love story. In the last chapter Dylan had enough, but in this chapter, chapter 4, the rubber meets the road. This is the final chapter in this series. I hope you truly enjoy, and I am looking forward to reading what you think.\n\nAllow me to thank both Willieone and Overstar for beta reading and editing this chapter. Any errors that are found are my fault and not these two brave souls.\n\nPlease read it and enjoy. Also I ask that you do not replicate this story without asking. Writing is hard work and I really take it seriously.\n\nIR2R\n\nChase could not sleep. The end was near, and he was frustrated. He had to do something, so the next morning after Lana spoke to Carter, he called Dylan.\n\nDylan heeded Carter's advice, and parked his car at the airport. He went into a restroom to change his clothes. Dressed as a businessman, he rented a car from Avis, and headed to Lafayette. He knew someone was watching him, and he prayed his ploy worked.\n\nHe kept checking his rear view until he successfully crossed state line. His phone rang and it was Chase. Dylan answered, \"Hey, you know?\" he asked. There was no point in pretending.\n\n\"Yes, and Dylan, he will strike. The vision ends in blood, so please be careful.\" Chase implored.\n\nShaken, Dylan doubted the wisdom of going to her and the baby and then Chase spoke. \"He will learn where she is, and you need to be there to protect both of them. \"Chase closed his eyes and saw a majestic bird hovering. You won't be alone, help comes. \" \n\nDylan took a deep breath; He had to get to her now more than ever. As he arrived in Lafayette, he contacted to local precinct. He quickly asked to speak to the commander. Dylan spoke with Chief Harvey Lamden, and explained the situation explicitly. The commander called the Chief in Baird who verified Dylan's identity and confirmed his story. Lamden assured Dylan that they would be on high alert. Relieved and a bit nervous, Dylan left the precinct and headed to the address Keisha gave him.\n\nSoon he was on the street. His heart pounded. He had not seen her in two years, and in a few minutes he would see her face to face. He'd see his baby girl for the first time. He was actually nervous. Within seconds, he was in front of her house. Slowly, he drove into her driveway, and got out. As soon as he walked onto the threshold, the door flew open and Keisha leaped into his arms.\n\nShe cried so hard and held him so tightly that he had to carry her inside. \n\n\"Dylan, I'm so sorry. So sorry,\" she sobbed. \"Never meant to hurt you, but I was so scared...\" she babbled. \n\nHe held her, as tears of joy covered his cheeks, and whispered, \"Baby, it's alright. I'm here now.\" Keisha calmed down, when another cry interrupted their solitude. Someone had woken up and she wanted attention. \n\n\"Wait right here,\" Keisha whispered. She rushed down a short hall, into a bedroom. Dylan took a moment to look around at the home Keisha had made for the two of them. He noticed that she had pictures of him, Carter, Lana, and Chase throughout the room. As he was looking, Keisha spoke. \"Dylan, this is our daughter.\"\n\nDylan turned and the tears he thought he had gotten under control started once more. There they were the two most important women in his life. Keisha walked in holding his daughter who was a light toffee color with his sandy brown hair and gray eyes. She held on tightly to her mother and stared at him, and then she smiled. Dylan was sure of few things in his life, but one smile from that beautiful baby, he fell head over heels. He was not walking away. \n\nKeisha might try and disagree, but as of this moment, Dylan was home. \"Can I....?\" he asked.\n\n\"Yes, 'Licia, this is Daddy. Go to Daddy.\" Alicia hesitated, and Dylan was ok. Keisha tried to encourage her, but he stopped her.\n\n\"It's Ok, she doesn't know me. It's alright. Hey Alicia, I'm Dylan\" he whispered. The baby smiled, and then reluctantly reached for him. Dylan held his daughter for the first time; his heart pounded, and he was overjoyed. Alicia started squirming, and Keisha asked for her to clean her up and dress her for the day. Dylan offered to help, and went with her. Keisha gave the baby a bath and Dylan at first was hesitant about joining them in the bathroom, but Keisha called him in there.\n\nAfter her bath, the two adults dressed the rambunctious two year old. Soon it was a little after seven, and Keisha called her job to take off for the day. Her supervisor gladly gave her the time. She never missed unless the baby was ill.\n\nDylan held his daughter, even fed her breakfast. Alicia wanted to watch her favorite cartoon, and Dylan lay on the floor beside her as Keisha cleaned. While she worked they talked. She told him that the birth was easy. The baby had the sweetest temperament. She decided to just tell everything, so she explained that Talia and Rick helped her. \n\n\"They didn't say.... They came last year and didn't...\" Dylan muttered. \n\n\"I asked them to not say anything. Don't be mad at them. Talia begged me to call, but I was afraid... \"She took a deep breath. \"The way I left was wrong. I should have called you, but I knew you wouldn't let me leave. I had to go. I'm sorry Dylan. I'm sorry I did that to you.\"\n\n\"You were afraid. I understand that, but did you think I couldn't protect you. Did you think because I'm white that I'm weak?\" He asked.\n\n\"No baby, never. I don't want him to hurt you or anyone else. I ran because he is crazy and he will kill me. If it was just me, I would have stayed, but I had to protect her. She is everything I'm not.\" Keisha explained gazing at their daughter. \n\nAt that point the doorbell rang, interrupting their solitude. Keisha jumped. Even now, years later, she was still so afraid. \"Who is it?\" she called out.\n\n\"It's me and Brenda.\" Rick's father answered, and Keisha moved quickly letting them in.\n\nCedric entered and saw the man holding Alicia. It was obvious who he was, the baby was his image. \"Welcome Dylan. I saw your car and was worried. Brenda greeted him as well and Alicia abandoned her daddy to get kisses from the Harris's. Brenda laughed and told the baby that she was beautiful and precious. \n\nThe Harris's didn't stay long, but made the young couple promise to join them for dinner. Talia and Rick would be home and they could all catch up. They agreed, and Keisha smiled. \"I need to call Talia.\" She mused.\n\n\"No, we need time. We can call and talk with others later. Right now, I want you and Alicia to myself.\" Dylan explained.\n\nKeisha smiled. \"Of course, I'm so glad you're here. So glad to just be with you again,\" and he embraced her as well as his little girl.\n\n\"You know Carter wants more pictures, so we'll have to send a lot.\" He teased. \n\n\"Carter! How is he? Lana? Chase? Everyone?\" she asked laughing. \n\n\"Momma, want Zannie and Lannie\" Alicia whined.\n\n\"Baby, they'll be home soon ok. Let's spend time with Daddy, OK.\" Keisha whispered to the baby. \n\nAlicia smiled, looked at Dylan and said \"Daddy, my daddy.\" \n\n\"Yes, your daddy.\" Dylan replied as he scooped up his baby girl. For the first time in two years they were content. He reached over and pulled Keisha into his tight embrace, and whispered. \"I'm never letting you go. I'm home.\" Keisha trembled. \n\nKeisha simply held on, inhaling his scent, reveling in his presence. She was not blind to the fact that a mad man was still after her, or that she was really on borrowed time, but for now her family was whole.\n\nSoon Alicia wanted down, and Dylan let her go. She went to her room and found the toys she liked playing with. Dylan watched her, but he also needed to talk to Keisha. \"Keisha, we really need to talk but now isn't the right time. Will Alicia take nap soon?\" he asked. \n\n\"Yes, and we can talk then. I'll answer all of your questions. Look, Dylan, you have the right to be mad, but promise me you will at least listen.\" She pleaded.\n\nDylan nodded, and changed the topic. \"Well, Carter is now a medical resident at Mt. Vienna Medical Center. Chase has moved to Baird and he and Lana just bought their house. I think they may marry soon; I know Chase wants kids. We've kept in touch with the Greens and Mya. As a matter of fact, I think Carter has a thing for Mya. You know she went to nursing school and is now an LPN. Carter wants to ask her out, but is too chicken.\" He laughed.\n\n\"Wow, Mya's a nurse, and Carter is almost a doctor.\" Keisha was floored. She hoped it worked out because she only wanted the best for her friends. \n\n\"You know Chase sees things, right?\" he stated solemnly. \n\n\"No, really,\" Keisha was curious now, because Chase was always an enigma to her.\n\n\"He told me that both you and the baby were with friends and safe.\" Dylan exhaled. Chase has also told him Deshaun would strike, he had to keep her and Alicia safe. Dylan was silent a little too long.\n\n\"He warned you about Deshaun, didn't he?\" she asked.\n\n\"I will protect you. I've already notified to the local precinct and they are aware of him. I won't lie to you, baby. He has a lot of people fooled. He also has people looking for you. That's why we need to be extra careful. We will stay indoors as much as possible. Whatever you did to vanish, keep your cover. I mean, how? How did you pull this off? I have searched for two years, and nothing. But you were right here, the whole time.\" Dylan exclaimed.\n\n\"The day I left, I knew Keisha Johnson had to disappear. I changed my name, stayed out of sight, and only interacted with a few people. I was worried about being traced through my social security number, but both my jobs had people that helped. They helped me hide. The first time I filed taxes, I knew he'd find me, but my boss, Mr. Preson, had his accountant file for me and somehow he kept me under the radar.\" Keisha exhaled and looked Dylan straight in the eyes. \n\n\"Here I am Arianna Jackson, and no one cares about my past. Alicia's last name is also Jackson, but we can always change that. She should have her right name. I have cost you two years of your time with our daughter because of my fear, and for that I'm sorry. We both know you can never get that time back, but Deshaun is insane and I know he blames me. Alicia is the only thing that I have ever done right, and she deserved a chance to live. It hurt when I walked away, but to keep my daughter safe and to save you and Carter, I'm glad I did.\" She caressed his cheek, \"I'd do the same again in a heartbeat.\"\n\nWith each word, Dylan's pride escalated. His woman was smart, brave, and so very beautiful. She was right, Deshaun needed to be dealt with, and he recalled Chase's words. There was only one way to destroy a serpent. Dylan was no longer under the delusion that all three of them would survive this. He knew someone had to die. He'd make damn sure it was not one of them. \"Keisha, I mean Arianna, I'm here now, and I'm not leaving. I gave you my oath that I'd keep you safe and now I swear once more that vow. I will die before he touches you, either of you.\" He swore as he held her close. \n\nKeisha stood and took a few steps away. \"I won't lie and say I am not afraid, because I am. But Dylan I am also tired of hiding. He might come, but this time I'm ready.\" She declared. The look of determination on her face stopped Dylan in his tracks. \n\n\"For two years I have hid from him, too afraid of even my own shadow. I gave up my shot at true happiness because of fear,\" Keisha exhaled, \"Not anymore Dylan. I want you to keep Alicia safe. If he finds me, you protect her.\"\n\n\"No, I will protect both of you. He will not get near you. He won't come between us. I pro-\" Keisha placed her fingers on his lips.\n\n\"He already has. He was why I ran and ripped us apart. But baby, I'm not running anymore. It's time to end this. She deserves better. She deserves her Daddy. Do you think I've been sitting by idly waiting for him to find me Dylan. No, I've trained, learned judo, and I carry license for a concealed weapon. He might take me out, but I will try my damndest to take him with me.\" She then kissed the man that was her heart. \"I'm done hiding. We end this.\" She declared.\n\n\"Mommy, Daddy, wanna play\" Alicia called running into the room where her parents waited. Dylan scooped her up once more, and joined her for her tea party. Soon the door bell rang and Keisha answered.\n\n\"Licia, Licia\" Zander and Landon squealed for their friend. Hearing her friends Alicia quickly abandoned her Dad and rushed to see them. Dylan followed much to the surprise of Talia and Rick.\n\n\"Zannie, Lannie\" Alicia squealed and the three babies greeted each other. The adults looked on and laughed. \n\nRichard finally broke the silence and addressed the elephant in the room. \"So, Keisha called?\"\n\n\"Yes, though, I wish you would have hinted, but I understand why you didn't.\" Dylan replied. \"Despite everything, you kept her and Alicia safe. I owe both of you.\" \n\n\"I'm just glad you two are together.\" Talia chimed in. Loud laugher came from Alicia's room and the adults giggled. \"Let me peek in on them.\" She walked to Alicia's room, and Keisha joined her. \n\nRick and Dylan talked. \"I'm not leaving them. I'm staying.\" Dylan declared. Rick nodded. \n\n\"What about your job, your brother?\" he asked.\n\n\"Carter can keep the house, and I'll always be there if he needs me. As for my job, I can transfer, or even do something else.\" Dylan replied. \"Besides Carter knows my heart is here. I'll call him later.\"\n\n\"Well, I'm just happy you're here. They need you. Keisha is a strong woman, and she has done well. But being away from you hurt her deeply. Besides, I need another guy around to help when they gang up on me. My Dad is whipped.\" Rick teased. \n\nDylan laughed, \"Man, all of us are whipped and you know it.\"\n\nMeanwhile, in Alicia's room, Talia and Keisha chuckled at their progeny. \"Hey you three, what are you doing?\" Talia asked as she walked in and noticed the dog pile of toddlers, her son Landon being on the bottom. Lifting Alicia, the girl squealed with glee as her two playmates clamored to the adults for attention as well, assuring them that the babies were well. Talia wanted to speak with Keisha privately.\n\n\"Hey, are you alright?\" she asked because she knew how hard these last two years were on this girl.\n\n\"For the first time, yes, I'm fine. He's here and I never thought this would ever happen. Alicia adores him, and he is smitten.\" Keisha explained. \"I asked him to look out for her. You know.\" Talia started to speak, Keisha stopped her, \"No, it's going to come to a head. I can feel it. It ends Talia, because I can't keep being this way, afraid and worried all of the time.\" \n\nKeisha took a deep breath, \"When he comes, and he will; I'll be waiting.\" Talia felt a cold chill. Keisha's tone was so deadly, cold that she knew her friend had reached her breaking point.\n\n\"Look, Keisha, don't-\" Talia started saying. \n\n\"No, I won't find him. He will find me. Just make sure Alicia is safe for me OK.\" Keisha sighed, \"The guys are going to worry; let's join them.\" Keisha added happily as if she didn't just tell her friend she was ready to die.\n\n<center>*****</center>\n\nLana arrived at work the next morning and reported straight to the chief. She told him that Nash had an emergency and would be out a few days. This did not follow protocol, so the chief had some questions. \n\nHe was already upset, because he'd gotten a call from the mayor ordering him to assign Nash a new partner. A new woman was being sent to him, name Kate Lane. Something was not right. New officers were not often reassigned so quickly, and although the mayor had some clout he never used his position to secure positions for anyone.\n\nSomething was fishy here. He ended up assigning Lane with Davis. The two women went on patrol together not speaking. As they were out, Kate decided to ask about Dylan. Lana was instantly protective. She gave short quick answers that did not reveal much. The two women worked together and the day ended. Lana went home and talked to Chase. Chase had not met this new woman, but it was something unique about her. The next morning, he asked to drive Lana to work because he wanted to see this new partner. As they drove in, Kate pulled up, and Chase once again saw a great bird. He smiled, and Lana was ticked. \"What? Why are you smiling at another woman? Do you want-\" he kissed her silencing her effectively. \n\n\"Lana, you are my love, my life. But I had a vision, she will help Dylan and Keisha,\" Lana blinked. \n\n\"Wait? How?\" she asked.\n\n\"The visions reveal themselves to me in pieces. I just know that your new partner is not what she seems.\" Chase explained. Kate looked over and saw Lana talking to a handsome man. He looked at her and smiled. Her body flamed with need. She had never reacted to anyone like this before. Then she saw him kiss Lana, and then he left.\n\n\"Good morning, Officer Davis, was that your husband?\" she asked knowing they were not married but trying to get handle on the heat his gaze caused deep inside her. \n\n\"Not yet, but he will be,\" Lana answered. \"You ready to start.\"\n\n\"Davis, get in here.\" The Chief called. Lana reported to his office.\n\n\"Look, I got a call this morning from the Lafayette PD. I want you to know that Nash contacted them and they are on alert.\" The chief exhaled. \"Watch Williams, if anything changes report it.\"\n\nLana nodded. She was already alerted. Soon, she reported in with her new partner for their assignments. They went out and to several domestic calls. Kate needed Lana's trust, but she wasn't sure how much time they had left. Another work day ended and she waited with Lana until Chase arrived. He drove up and got out. The man was pure male perfection, and her pussy throbbed. Lana looked at her and she knew. \"Kate, he's taken.\" She warned.\n\nKate blushed and looked away. She had to get this under control, or everything would be jeopardized. \"Hey Babe, who's your partner?\" Chase asked.\n\n\"Chase this is Kate. Kate\" she nodded towards her lover, \"Chase.\" After Lana introduced the two, Chase extended his hand and when she touched him, heat shot up his arm and he snatched away. \n\n\"What are you?\" he asked. She appeared to be a normal person, but she was powerful. He'd only ever met one other one with that much power and that was his grandmother.\n\nKate, practically came when he touched her. \"I'm a cop, just a plain old cop.\" \n\nChase nodded. \"You may wear a uniform, but you are more than just a cop.\" \n\n\"Baby, let's go.\" Lana demanded, not liking the look of lust on the other woman's face. The fact that her man reacted so strongly to the other female was a point of great concern. \"Good night, Kate.\" She called as she and Chase walked away.\n\nChase knew Lana was upset, but she had no need to worry. He belonged to her. No other woman would ever entice him. He smiled, and realized that now was the time to let her know how he truly felt. \n\n\"Baby, rest. Let me run you a bath.\" Lana sat and fifteen minutes later her bath was ready. She went in and undressed, Chase appeared and said, \"Tonight, I bathe you.\"\n\nLana slid into the hot rose scented water and Chase joined her. Taking the soap, he gently caressed her skin. Her body tingled, as he touched her. He took extra care and massaged her nipples, pinching them gently. Lana moaned. Then slowly he slid his hands lower to the center of her heat. He cupped her mound and then rubbed ever so gently. \"Up,\" he demanded, as she rose to her knees and he took full advantage and washed her completely. As he washed her, he stroked her clit causing her to moan. ",
        "She was so hot, so wet. He could not resist her warmth if he tried and within seconds he had repositioned their bodies so she straddled above him. \"Lana, I'm yours. You can do whatever you want to me.\" He whispered. \"My heart, my mind, my body are yours Lana. No other woman will ever do for me the things that you do.\" \n\nNot needing to hear more, Lana slowly sank her burning pussy into this stiff member. Both groaned, and she rode him. Within minutes, she came and the feel of her body contracting on him pushed Chase over the edge. With loud shout, he released is seed deep inside his woman's fertile womb. Then for a moment he held her. And he knew that this is where he wanted to be for eternity.\n\n\"She wants you.\" Lana whispered.\n\n\"It does not matter. I'm yours.\" Chase replied. And soon they climbed from the tub and lay together in bed. Before long the two lovers were asleep, as Chase dreamed of holding his son.\n\nThe next morning Chase dropped Lana off again and met her partner. Kate saw the way the two connected and knew that this was a man in love. She could respect that. Besides, she was here to help stop Williams. The two women spoke and reported in. As they were leaving out on patrol, Lana noticed that one of the clerks watched her a little too carefully. This made her uneasy, but she shook it off and went on patrol.\n\n<center>*****</center>\n\nDeshaun awoke the next morning with some girl in his bed. He got up, not waking her but resenting her presence. Keisha should be waking next to me. he mused. The girl stirred, and awoke slowly. She smiled at him, \"Hey handsome, you hit the shower and I'll make breakfast.\" She said.\n\nDeshaun nodded and complied, not because she told him to but because her presumption made him want to strike her. He was pretending to be nice. He'd play along for now, and after he put her out, he would not call her again. She was not his, someone else was. It was time for Keisha to come home. Fifteen minutes later, he found her in his kitchen nook, breakfast set up on the breakfast bar. He sat down and ate with his companion. Her eggs were runny, toast dry, and bacon too crisp. He wanted to refuse the meal, but he had to maintain his ruse of a reformed guy. \n\nThe girl chattered on incessantly. He wasn't even listening. She paused, waiting for him too compliment her. He did, \"Baby, this was wonderful.\" he lied. Soon the meal was done and he put her in a cab home. As soon as the girl left, his phone rang. \"Hello.\" \n\n\"Hey Dee, are you still paying for information on Keisha?\" a voice asked. The person waited. \n\n\"Who is this?\" Deshaun questioned.\n\n\"Look, answer my question. Are you paying? If not, well good luck.\" He replied.\n\n\"Wait, what do you know? If your info is good, then you get your money,\" he replied.\n\n\"The chief got a call from Lafayette. He was asking about you. Now why would he ask about you unless someone mentioned your name? Nash didn't come in and no one is talking. Lana came in a few days ago and spoke to the chief in private. She spouted some excuse about Nash having a family emergency. We both now his only family is his brother, right?\" the voice replied.\n\nDeshaun nodded. \"Good looking out. I'll put my man on it. If this pans out, you have five thousand coming your way.\"\n\nThe two disconnected and Deshaun called his investigator. The investigator headed straight to Lafayette. He was unsure of the report of Nash flying out, and the call from his boss confirmed his suspicions. He knew he'd find the girl.\n\nTwo hours later, the investigator rode into the city. However, right behind him was Officer Lane's team. She told them to shadow Williams. If he moved, let her know. \n\nKate and Lana went on patrol, and Kate could tell that Lana was bothered. She hated keeping her true identity secret. But she ha d to lay low and not blow here cover. She knew the chief had told Lana something, but she was not sharing. Lana was worried, she decided to drive and just patrol. She missed Dylan, over the past two years, they had grown to really rely on each other. \n\n<center>*****</center>\n\nKeisha's cryptic words worried Talia, and she was frightened. However, she was also extremely proud of her friend. She had seen this girl at her worse, and now even at her best. Keisha was right she could not spend the rest of her life hiding and running from this man.\n\n\"What's wrong?\" Rick asked as both women rejoined them but remained too quiet.\n\nDylan suspected, but he waited for Talia to answer her husband. Talia looked at Keisha and Keisha spoke. \"Nothing, Rick. I'm done running. I need to deal with Deshaun.\" Rick protested immediately with Dylan agreeing.\n\nKeisha listened. And when both men finished, she spoke. \"You are the best Rick, and both you and Talia have been true friends to me. You could have turned me away, but you didn't. I appreciate it, but I can't keep running and hiding. He is just a man, and it's time for this to end. I won't call him, but I'm not hiding anymore either. Really I just wanted to protect Alicia and Dylan is here now. She is safe.\" \n\n\"What if he goes after her anyway? From meeting the guy, he isn't exactly sane. Look Keisha, I'm not saying to keep hiding, but we don't want you hurt or worse killed.\" Rick stated. He knew it was a cheap shot, but he really feared for her and the thought of her being hurt by that monster didn't sit well with him. \n\n\"Then, we need to make sure he doesn't get to her then. Besides, he isn't interested in the baby. He wants me to suffer. He always wants me to pay.\" Keisha exhaled. \"It's time for me to stop running and start thinking.\"\n\nThe two couples talked a bit more until the kids interrupted. \"Food Mommy, hungry.\" The boys yelled. Alicia was right with them.\n\nThe adults laughed and headed to the Harris's for dinner. As they ate, the two couples talked and joked, laughing at the antics of the kids. Rick's dad spoke to Dylan privately and assured him that they were there no matter what. \n\nAs they were eating, Talia called her parents. She told them that Dylan was there and everyone was safe. She then called Dalia, who was happy for Keisha but concerned about the threat. Everyone left and went home. Dylan carried Alicia inside and he asked Keisha to let him sit with them as she dressed her for bed. Soon the toddler was fast asleep holding on to her daddy. Gently, Dylan placed her in her bed, kissing her gently. \n\nSoon he was alone with the one woman that meant the world to him. The last two years vanished as he held her close. His body throbbed with need, but he would not rush her. For Keisha Dylan was it. \"Dylan, I need you.\" She whispered.\n\n\"Baby, I'm here. And I'm not going anywhere.\" He answered. He kissed her. Lifting her into his arms, Dylan carried her into the bedroom. After two years of being without her, he would indulge himself tonight. He undressed her slowly, kissing each inch of skin exposed. Keisha squirmed, egging him to please her. Soon she lay before him, her creamy brown skin glistening with sheen of sweat.\n\nHe was over dressed, and Keisha needed him naked. \"Stop, let me?\" She pleaded. She then stood and lifted his shirt from his body. She kissed every inch of him. He'd lost some weight and she could tell was healthier, but he was still hers. Soon Dylan was as naked as she was. The two stood, simply touching, and staring at each other. Then Dylan lifted her once more and covered her body with his. Positioning his member at her waiting cavern, he entered her in one swift thrust. Both moaned for at last they were home. \n\nKeisha moaned as he filled her body. It had been so long, too long really. His member felt hugs. Stretching her and touching every inch deep inside her. Wrapping her legs around his back, Dylan loved her long and hard. Pushing in and out of her body, he knew this woman was it for him. No other woman drove him insane with desire.\n\nDylan loved her thoroughly, completely. Soon, the two were exhausted and satisfied. Dylan held her close and smiled. Keisha held onto him even tighter. She missed him, missed this. No matter what happened tomorrow, she'd forever be grateful for right now.\n\nA few days passed, and Keisha returned to work. She was not sure how long Dylan would stay, but a part of her hoped he would not leave. One morning as she left for work, she didn't notice a dark blue sedan driving slowly past her home. The driver watched carefully, and then made a short call. She secured Alicia in her car seat, and headed to work. After she left, Dylan walked over to Cedric's house. He felt uneasy, but knew he could not do anything about it.\n\n<center>*****</center>\n\nDeshaun was at his office when the investigator called. He smiled as the man relayed his news. He found the BITCH. He made a quick call to his bank and ordered two transactions. One payment of five thousand dollars went to his friend at Baird Police Department, and fifteen thousand to the account of his investigator. After that, Deshaun got in his Lexus and headed to Lafayette. He met his investigator and got directions to her house. He was told that the police was heavily patrolling the area, and he needed to be cautious.\n\nLana had spoken with Dylan and Keisha and relieved that they were together. This morning, Chase was agitated. He called Dylan and told him that the serpent was moving. Lana called Mr. and Mrs. Greene and they conferred Chase's affirmation that Deshaun had left town. She walked into the chief's office and demanded the day off. She needed to go help her friend. After explain to the chief that Deshaun was gone the chief called the Lafayette office. The precinct was on alert. \n\nKate came in, and she sensed something was wrong. The chief was assigning her to someone else. Lana was granted the day, and she was leaving. Kate questioned the chief, but he ignored her query. She asked again and at his refusal to reply. Kate had no choice but to disclose who and what she really was. \n\n\"Chief, I am not a cop. I am with the FBI. My title is Detective Kate Lane. I was assigned as an operative to shadow Davis, when Williams came under our radar. I alerted my superiors about him months ago because something is off about him. We have been watching him for a while and believe him to be a sociopath. We believe he intends to kill Keisha Johnson, and every minute I stand here arguing with you gets him closer to his goal. I'm sorry sir, but I must go.\" And she too left following Lana. \n\nLana was calling Chase when Kate demanded that she come with her. She started to argue. But Kate interrupted. \"We need to get there as soon as possible. I have a helicopter ready, let's go.\" Lana went. Within thirty minutes, Lana and Kate were in Lafayette, meeting with Kate's team. The team knew he would strike, just not sure when. \n\nWhile the police and detectives conferred, Deshaun found Keisha's small house. No one was home, and he disabled her security system, and snuck inside her home. He walked around, becoming angrier by the minute. Pictures, she has pictures of that fucker all over this house. Fuck him! Fuck her! He fumed. Then he noticed the pictures of Alicia. This should be my kid. She fucks White boy and has his baby. I'm gonna kill that bitch and her half-breed bastard. He became even more infuriated. He grabbed a photo and was about to smash it when a voice told him to calm down. Wait, son. She'll be here soon. Hide and be quiet. Don't move a thing. When she and the fucker gets here, you'll get your shot at retribution. The voice whispered. Deshaun had a seat. He took some deep breathes to regulate his breathing and calm down. The voice was right, for two years he'd searched for her, now it was time for her to pay. He knew she was at work, and Fat boy was somewhere with the kid. Imagine there surprise when they came home and found him waiting. Smiling a devious smile, Deshaun thought out loud, \"This is going to be fun.\"\n\nAs he sat contemplating his revenge, the phone rang. It startled him but he did not answer. Soon the ringing stopped, and Deshaun relaxed. I'd better hide, just in case someone peeks inside.  Dylan was at the park watching his daughter. Usually, Keisha would take Alicia to work, but today he convinced her to let him keep her for the day. As he sat watching her, his phone rang and he felt a sense of dread. It was his boss from Baird.\n\n\"Nash, Williams has slipped town; be careful.\" He stated. \n\nDylan gathered Alicia and headed to the police precinct. He wanted to speak with the chief. As he arrived, the captain invited him to his office. \n\n\"He relayed to him that they had been alerted by the Baird PD, as well as the FBI. It was then he saw Lana. She rushed in a hugged her friend. \"Chase is coming. He'll be here in a few hours,\" she assured him. Dylan held his daughter tightly, as if he was afraid to let go. Lana saw the little girl, and smiled at her. The baby, sensing the tension in the room held on to her Daddy.\n\nKate stood and introduced herself. Their presence caused him great concern. He was about to ask about Keisha when she walked in with a police escort. Rushing to his side, Alicia quickly went to her Momma. Keisha held her close, her body rigid with fear.\n\nThe chief spoke to her. Ms. Jackson, your security system alerted the department that the security system at your home has been disabled. For your safety, we want you and your daughter to remain here at the station. We have dispatched officers to secure the area.\" He explained.\n\n\"Deshaun, he's here, isn't he?\" she asked, nervously. She was tired of this; tired of being afraid all of the time, running, hiding, and having him control her life.\n\n\"We think so, but don't worry you and Alicia are safe.\" Lana reassured her. \n\nThen Chief Lamden then spoke, \"The officers that we dispatched are on the scene. They should call back soon.\" Keisha barely stood holding on to her daughter tightly. Alicia was squirming, wanting to get down. Noticing the fatigue on her face and in her body language, the chief spoke once more. \"You must be exhausted, follow me. He escorted them to a conference room and offered them drinks. Keisha did not speak, nor did Dylan. \n\nKate walked back out with the chief. She had to inform him of her role in this. She was not there to do their jobs, but to assist in the capture of the culprit. She took a few minutes and explained. Her team joined her and they shared all of the intelligence they had on Deshaun Williams. The chief was shocked. If what this agent describe was true, they were dealing with a psychotic sociopath. True she had only been aware of him for a few weeks, but what she learned was enough for her to be on high alert: especially the evaluations from his counselors. The last counselor highlighted the things he said and reported it to the judge that assigned him to monitor Deshaun. He felt that if no one intervened, his obsession with Keisha Johnson would lead to her death.\n\nAs Kate and the chief talked, the team called back to report that they had secured the house and found no breaches. The company then tried to reset the system to find that the failure was a down line. They called Keisha and told her a technician would be out today. At this point, Dylan had waited long enough, he needed to search the house. Deshaun was a criminal, and he was not above breaking in. He could be hiding inside. He spoke with Chief Lamben, \"Sir. Thank you. With your permission, can Kei... I mean Arianna and Alicia stay here. I want to go there myself and check.\" \n\n\"I'm going with you. I don't want...\" Keisha started to say.\n\n\"No, you won't.\" Dylan declared.\n\nKeisha frowned. He raised his voice and out of all the time she had known him, Dylan never raised his voice. As shocking as that might be that he raised his voice that did not surprise her. What did surprise her was that she was not frightened by him. He didn't scare her, because with him she was safe and she knew it. \"Wait, Dy-\" He sighed and then spoke.\n\n\"Look, I'm sorry. I didn't mean to yell, but Keisha... I know they say it's clear, but I don't think so. I'll check the house, and if it's safe, you can come. I need for you and Alicia stay here.\" He ordered.\n\n\"Wait a minute, you can't...\" she started to argue.\n\n\"I promised you that I would protect both of you from him. You said you trusted me to keep you and the baby safe. Then let me. If he is there, I will not let him hurt you.\" Dylan explained.\n\n\"Can you take someone with you?\" she asked. \"Chief Lamden, please let one of your officers go with him.\" The chief agreed. After what the FBI had revealed to him, he felt Dylan was not overreacting. Dylan, Lana, and two officers from the Lafayette PD arrived at Keisha's home. Deshaun heard the car and hid. \n\nDylan came inside and searched. He and the other three officers searched every room. Deshaun was crafty, and suspected they'd search closets, but he knew they would probably overlook the hatch to the heating system in the roof. So before the officers entered he pulled down the hatch, crawled up the ladder, and hid behind the heating system. No one even looked up, and he thought to himself, The police is so stupid.\n\nHe listened as Dylan practically tore the house apart. Then he heard his partner, speak. Soon the two Lafayette officers grew tired and needed to report back to their beat. Dylan stopped in the hallway, and noticed the trapdoor above him. He reached for it when the officers got a call. Deshaun's heart pounded, and the danced with glee when he heard the officers state they needed to go. \"Sir, no one is here. We must return to headquarters.\" one of the officers explained.\n\nDylan turned away from the trap door, and complied, but until he was sure that bastard was gone for good, Keisha and Alicia were not coming back here. \"Sir, it's clear. We've searched every room. If he was here, he's gone now.\" The other officer assured him. The young officer insisted. Dylan and Lana left. As they were riding back to headquarters, Chase called. He had arrived and checked into a local hotel. Dylan arrived at the police station, and talked with the chief and head officer handling this case. He offered to help if they needed him, and Chief Lamden accepted the offer. Keisha was waiting with the baby and worried about him. She rushed to him as soon as he walked in. \"I couldn't find him. We searched all of the rooms and closets. But I know he's there.\" He whispered. \n\n\"Baby, it's OK. We're safe now.\" Keisha reassured him. \n\n\"Let's go.\" He demanded. \"We must call Talia and warn her and Rick, Rick's folks too.\" He added. Then he gathered his family. They left and drove to the hotel where Chase was staying. Dylan quickly secured a room for Keisha and Alicia..\n\n\"Wait, I'm not staying here without you. If you're going back to the house, then I'm going with you. I'll ask Talia to keep Alicia. That's my home. He will not...\" Dylan pulled her into his arms. \n\n\"Until we catch him, you will not go back there. He's in that house Keisha.\" He exhaled.\"I'm not sure where he's hiding, but I believe he's in there.\" Dylan whispered.\n\nAs they talked, Cedric called. He and Brenda were worried. They saw the police earlier and were diligently watching the house for any sign of movement. Several of the neighbors joined them. Keisha answered and told them that she and Alicia were fine. Brenda asked for the hotel and was headed to see her when Cedric stopped her. \"Baby, he could be watching us. Let's stay away. We can call and check, but I don't want to risk leading him to them.\" He stated. At first Brenda wanted to argue, but she realized her husband was right. They had to let Keisha and Alicia stay hidden for now. . \n\nKeisha called Talia and explained everything that happened. Talia was worried because Rick called her from work and told her that Keisha had left with the police earlier. She wanted to join her, but Keisha asked her not to. It was not safe. As much as she hated it, Talia agreed to stay away. .",
        "Rick wanted to speak to Dylan, and Dylan told him he'd protect them with his life. He then hang up the phone and looked around. \"Hey partner, what is it?\" Lana asked. After two years, she could read him like a book. \n\n\"Watch out for them for me. I'll be back. Tell Keisha I... I'll be back as soon as I can.\" He turned to leave. \n\nChase followed. \"You are not going there alone. I am with you.\" Dylan wanted to argue, but knew it would be pointless. \"Chase, if he's there. Let me deal with him. I don't want you to get hurt.\"\n\nHowever, Deshaun was thinking. Fatboy, knows I'm in here. He won't let the bitch come here. I have to do something else. He then got up. Fuck this bitch! He then destroyed every picture in the room. He smashed furniture. Found his way to the baby's room, he destroyed everything he could find. She fucks around on me and has another man's kid. The bitch is dead. he fumed. After the damage was done, he felt calmer. Deshaun opened the backdoor and walked. Not caring that he set off the alarm system. The security company called Keisha and the police.\n\nKeisha called Dylan and told him the alarm had gone off again. He and Chase rushed to the house, just as the police arrived. They found the backdoor open and the damage done on the inside. This made Dylan even more anxious. If Deshaun left, then he could be anywhere. He had to decide. He didn't want to leave them on their own, but he needed to try and find that bastard.\n\nAt the hotel, Kate wanted to talk with Nash and Davis. As she arrived, she saw Nash and Davis's fianc\u00e9 leaving. She started to follow when her team alerted her that Williams was moving once again. She suspected that Williams had crossed the line and was now waiting to kill this woman. Sociopaths had no fear, no respect for authority of any kind. He would kill anyone who stood in the way of his goal. She believed that killing Keisha was his goal. He wanted her to pay for whatever crimes he found her guilty of in his warped mind. She alerted her team and they set up parameters to figure out where he might be hiding. \n\nMeanwhile, at Keisha's small home, the police had left leaving Chase and Dylan alone. They went inside and looked around. Dylan noticed the damage he had done, and then he saw Alicia's room. Her bed smashed, clothes askew, and toys ripped to pieces. Deshaun left nothing untouched. Chase waited silently, for he knew Dylan needed to vent. \n\n\"FUCK!\" Dylan screamed. \"I hate this fucker. He needs to die. I'm going to kill him.\" Punching the wall furiously, he vented, his pent up rage on clear display for his friend. Chase let him vent, and he continued his physical assault on the stiff surface. So vicious were his punches, that the section of the wall caved, leaving a vacant hole. Soon Dylan tired out and sank to the floor holding his head. Feeling a failure, he was distraught. \"How can I protect them when I have no idea where that bastard is hiding?\"\n\nChase didn't respond, but let him vent. As his outburst ended, Chase then spoke. \"He will be stopped. We will find him.\" He assured his friend.\n\n\"How? We have no idea where he is. He wants to hurt her Chase, kill her even. How do I keep them safe when I have no idea where he is?\" Dylan asked frustrated. Running his hand across his face, Dylan had to get control of his anger. As an officer, he knew how emotions could make or break a case. This wasn't a case; this was the two most important people in his life. He had to protect them.\n\nChase knew his friend was on edge and he had to help him focus. He was just a worried as him because he cared deeply for Keisha and the baby as well. He had to help Dylan center and gain perspective. \"He is not stupid. He will take his time and we can make sure Keisha and Alicia are someplace safe. Listen to me Dylan. You have everyone behind you on this, and we will stop him. You have to believe that. Let's go back. We need to reassure our women.\" Chase suggested. Chase hoped his assessment was right, but the visions said otherwise. The serpent was agitated and wanted blood. Dylan had to keep his wits about him to defeat the beast. He could not let his anger consume him.\n\nThe two returned to the hotel where Lana, and Keisha were waiting. Mrs. Harris called but did not come by.. They were surprised that Kate was not there. However, Dylan could not worry about a rogue detective, because he had a villain to catch. As soon as he entered, Keisha flew to him. She was relieved that he came back unharmed. She was tired now, tired of being afraid. \n\n\"Dylan, I know Deshaun. He will find me. I want you to take Alicia and keep her safe. He wants me. There is no reason for anyone else-\" Dylan stopped her. \n\n\"This ends now, Baby. We deserve a life together as a family. I will not stand here and allow this travesty to continue. I will find him, and put a stop to this. We will not be apart any longer, and I refuse to live in fear.\" He explained.\n\nKeisha nodded, and then Alicia started to fret. Lana stood, \"Let me take her.\" She offered. She then picked the baby up and carried her into the other room. Alicia held on tightly, yet she continued to fret. Lana held her tightly, and sang a soft lullaby to her. Soon the baby quieted and was relaxed. Lana held her close, and promised her that she'd keep her safe. \n\nChase joined her and asked to hold the babe. Alicia went to him immediately. He held her close and inhaled her scent. She amazed him, and he swore on all that he held dear that that monster would not harm this child or her mother. Alicia began to squirm, and he laughed. \"I guess I was holding on to tight, huh?\" he asked jokingly. \n\nDylan and Keisha sat for a while, not speaking. There was not much to say. \"I can't stop my life because of him Dylan. I have to work, and eventually go home. He will come after me regardless.\" Keisha explained. \"Tomorrow, I'm reporting to work, and I want to take Alicia to daycare. That way you can search without worrying about me.\" She explained.\n\nDylan didn't like the thought of her going to work, but she had a valid point. \"Keisha ...\" But he could not speak. \n\n\"Dylan, listen. I love you and I refuse to keep letting him dictate what we do. You may not agree, but now I'm taking a stand. I asked you to protect Alicia, so keep your word to me.\" Keisha stated.\n\nDylan listened and then he spoke. \"He took you and her from me. Because of him, you ran away and for two years I have been denied my family. You didn't trust me Keisha. You don't think I can keep you safe. That hurts. But, it's Ok. I can understand your fear. But what I cannot do is sit here and let him shit on my family once again. Don't ask that of me. This is not about him, but us. As a man, I must defend my family. You and Alicia are my family.\"\n\nKeisha listened, and understood. She nodded and then had one more thing to say. \"We need to end this Dylan, but I don't want anyone else to get hurt. I won't change my routines, because then he wins. We will stop him this time.\" She vowed.\n\nDylan agreed, and held her for a while. Soon they missed their daughter and found her in the room with their friends. Chase laughed at how overprotective Dylan was even after only a few days. He didn't blame him. Because he knew that if it were him, he'd be the same way. \n\nLana and Chase shared a look, and relinquished their young charge to her mother. Then realizing no one had eaten, Lana volunteered to make a food run. Keisha wanted to go but it wasn't safe. Lana left with Chase, and Dylan and Keisha simply held on to each other.\n\n\"I will never leave your side Keisha. No matter what happens. I want you to know that I'm here and I'm not leaving.\" Dylan swore, and Keisha held on to him tightly. \"Mommy, Daddy, I want juice.\" Alicia demanded. \n\n\"Ok, sweetheart. Aunt Lana went to get some juice with Uncle Chase, Ok.\" Keisha assured her, kissing her and holding her close. Alicia laughed and turned to Dylan, \"Daddy, want Daddy.\" She shrieked. Keisha laughed as Dylan quickly complied too his daughter's wishes.\n\n<center>*****</center>\n\nDeshaun checked into a flea worn motel for the night. The dump was way below his usual standards, but he was certain people were looking for him. All of this was because of that bitch. Soon, he'd be rid of her and the fat fucker she's screwing. He felt bad for the kid, but not too bad. The little bitch would die to. Deshaun smiled as he decided which person to kill first. \n\nKeisha would beg that he spare her daughter. How much? He bet enough to do is dirty deed for him. He'd make her kill the cop, and then he'd use gloves and kill her and the half-breed. When the cops dusted for prints, only hers would be on the gun. They would have no reason to blame him. He'd even make her blow him first with her new man watching. Whiteboy might get jealous at the sight of his thick man meat.  The thought filled him with glee. \n\nFirst, I need to get them someplace alone. That damn Indian and his bitch are here helping them. That Indian is creepy, too damn creepy. Deshaun smiled, I'll kill his ass too. All of them can die, and I'll make her watch. It's her fault anyway for telling them about us and bringing them into our business. Damn, I love that girl. She was the best fuck I ever had. But she's a bitch and a dumb bitch at that. She has to pay. He thought to himself. Feeling better now, he decided that he'd lay low, and as soon as a chance arose, he'd attack. So that night Deshaun slept. \n\nAs he dozed, he pondered, Am I taking this too far? Maybe, just maybe, I should leave her alone for good. \"Nah Bruh, I ain't no punk!\" he answered himself out loud, and the thought faded into the night. \"Keisha is mine, and this time she'll know who she belongs to.\" He growled.\n\nUnable to sleep, Deshaun contemplated ways to get to his wayward woman. The next morning, he drove to Keisha's job. He parked and waited. He was shocked to see Talia's man, that punk-ass bitch, Rick. He worked in the same place as Keisha.  She had to have help. But Talia hates that bitch. But Talia hates me even more. What is that saying, \"The enemy of my enemy is my friend?\" I can flush her ass out. And that uppity bitch and her fuck-toy will help me. \n\nDeshaun watched the entrance and exit at Preson Publishing. After a few hours, he knew what he would do. Rick was worried about Keisha. He knew she was with Dylan and safe, but Deshaun was a wild card. He was having lunch with some guys from the office, and he'd call and check on his friends just as he finished the thought, Gunfire.\n\nThe building went on lock down. Rick hid in his office praying that the terror would end soon as the shots grew closer and closer. Then he heard his voice. \"I want that punk ass bitch, Rick. If you don't want anyone else to die, then bring your ass out, bitch.\"\n\nHis heart pounded, and he was frozen stock still. Women were crying, and Rick didn't want to die. However, he could not let this lunatic keep hurting people. \"I'm here, Deshaun. Don't do this to these people,\" Rick moved closer placing himself between the irate gunman and the others. \"These people have done nothing-\" Deshaun slugged him. Rick went down, the impact from the weapon crushed his nose causing him to bleed profusely.\n\n\"You took Talia, and you think you can take Keisha. Call her and tell her to get her ass down here.\" He looked around, pure insanity shined in his eyes. \n\n\"No, you won't...\" Rick refused as he held his nose to stop the bleeding. Seeing a box of tissue, he applied pressure and the flow of blood stopped. Deshaun was furious. His terrified coworkers took action and one managed to call Keisha. Keisha was with Dylan and Lana when her phone rang. The police had been dispatched, and Kate was already on site. \n\n\"Oh my God! He's at the office. He shot people.\" She sobbed. \"I have to go...\" Dylan grabbed her. \n\n\"No, you won't. I will not risk you. Keisha, listen to me. Let the police handle this.\" He pleaded. Even as he talked, he knew she would blame herself. Soon they headed out and rushed to the office. They stopped and took Alicia to daycare. \n\nThe four of them drove to the office, and the head detective asked for her. \"Can you talk to him? He wants you. Maybe he will listen.\" She said. Keisha doubted her, but to save her friends she'd try.\n\nThe detective called. As they waited ate and her team got in place. The detective dialed an office number. \"Detective, it's nice of you to call. I hope you have good news. All I want is to talk to Keisha. She has lied to all of you. I'm not a bad guy. I'm good. In Newark, people will tell you that. But that, bitch...woman has made me out to be a monster.\" \n\n\"Mr. Williams, I understand, but you cannot hurt people because you're mad at one person.\" She explained.\n\n\"Bitch, I just want what's mine. I want Keisha. Until you bring her to me every five minutes, someone dies.\" He stated and then he hung up. \n\nKeisha flinched. He still scared her, but she was ready to face him now. Even if he killed her, her baby would be with her Dad. She'd be safe.\n\nThe detective waited and called back. \"Mr. Williams, Ms. Johnson is here. She is willing to speak to you. Please, stop and surrender now.\" She called. Kate and her team had a sniper in place, but they did not have a clean shot. Deshaun made sure several people stood between him and any open windows. The local PD had evacuated the section of the building he did not occupy and Talia arrived. She was distraught. Her husband was in danger, and could possibly die. As soon as she arrived, she hugged Keisha and let her know she did not blame her.\n\n\"Ms. Johnson, come.\" She demanded.\n\nKeisha took the phone. What she said could make or break this situation. \"Hello, Deshaun, it's me.\" She whispered.\n\n\"Keisha, you bitch. This is your fault. All I wanted was supper. Because of you I lost two years of my life.\" He ranted. \"And then you made me waste all of this time looking for your trifling ass. Bitch, when I'm done with you, you won't be able to see straight...\" he yelled. \n\nKeisha felt a surge of anger so strong, so profound, she could not help but speak up. \"No, it's not my fault. You did this. This is all on you Deshaun. I have not done anything. I didn't deserve the way you treated me. I didn't-\" He cut her off.\n\n\"Bitch, you're dead. You, that fucker, and your half-breed bastard die today. You're dead. Hear me Keisha. Fuck you bitch, you die today.\" he ranted. Keisha dropped the phone, and he kept yelling. In the middle of his tirade, Deshaun stormed from the center of the room to an open window. Finally he stood unobstructed in front of the window which was exactly what the FBI was waiting for. Within seconds, a sniper fired. He went down and people screamed. \n\nThe police swarmed the office, and rescued the hostages. Talia rushed to Richard, and was relieved he lived. It was obvious that he had been assaulted and he was treated immediately. The officers secured the building and the coroner came and pronounced Deshaun William's dead. His body was removed, and the office shut down for the day. Talia hugged her friend, but right now she was more concerned about her husband, so she left Keisha with Dylan and took Richard home. \n\nEventually, Dylan and Keisha returned to their hotel. Alicia was at daycare, so Dylan called and asked Brenda to get her. He was worried about Keisha. \n\nKeisha stared silent, not speaking, barely breathing. He was gone. The one man that for over the last twenty years made her life hell, was gone. Her nightmare was over. She was finally free. Keisha collapsed. Sobs wracked her body and nothing seemed to calm her. Keisha cried and Dylan just held her. \n\nChase and Lana left them alone, but they too needed time to reassure each other as well. Kate joined them briefly at the hotel to express her well wishes. She liked these people, and was so happy that they stopped that maniac. Her job was done here, so she had to get back to her life. She was returning to her main office and wanted to wish them the best. \n\n\"Well, Officer Davis, it was nice working with you. If you are ever interested in joining the bureau, I'll give you a glowing recommendation. Mr. Holt, it's been nice.\" She added.\n\nChase smiled and shook her hand, \"Thank you for helping my friends.\"\n\nKate smiled, \"My pleasure.\" Then she addressed Lana, \"Girl, are there anymore like him around?\" she teased.\n\nWrapping her arms around his waist Lana replied, \"Well, he does have three brothers.\" \n\nKate laughed. \"Um. I might need to visit Oklahoma on my next vacation then.\" They three laughed.\n\n\"Officer Lane. It's time.\" a member of her team called. She bid her new friends farewell and then headed to catch her flight.\n\nThings had calmed down, and everyone went to Talia's home. Brenda and Cedric brought the kids, all three, to their parents. \n\nKeisha held her baby and cried. For the first time in two years, she could breathe a sigh of relief. She and Dylan could be together, be a family. It was over. She was free, just like her Momma wanted. She imagined that Momma was in heaven smiling because all she ever wanted was for her to be free. Momma he's gone. He'll never hurt me again. she sent heaven ward. Dylan never left her side. Even as everyone talked, ate, and laughed, he stayed right there.\n\nThey learned that Deshaun killed two security guards to gain access to the building. Both Talia and Rick, hugged Keisha and told her it was ok. Talia called her parents and Felix and Desiree headed to Lafayette immediately. Dylan called his brother, who also headed out.\n\nThe day ended, and Dylan took his woman and child back to the hotel. He knew Deshaun had been in that house, and he didn't want to take her back there.\n\n\"Dylan, it's home.\" She whispered. \"I want to go home.\" So both he and Chase complied. Keisha walked in and was stunned at the damage Deshaun had done. Overturned furniture, pictures smashed, and walls busted open greeted her upon entry. \"Momma, I'm sleepy,\" Alicia complained. She walked into her daughter's room to find it destroyed as well. Lana shuddered as Chase held her close. \"It is done. The serpent has been vanquished.\" He whispered. Lana closed her eyes and thanked the heavens that all of her friends survived.\n\nBoth couples secured the house and returned to the hotel for the night. Keisha knew she had to clean and she'd take time off and do so this week. However, she was not alone. \n\nA few days past, and the men had done some basic repairs. What they could not repair, they hired contractors to fix. It didn't matter, because Keisha was moving back home with Dylan soon. However, both Keisha and Dylan wanted to leave the house in the best shape possible. Her landlord should not have to incur repair cost, so they set out to put thing back right.\n\nThe first morning she had Dylan to take her home to clean, she was apprehensive about the task. She was surprised, because when she arrive, they were there. The women, the same women that helped her survive. The women whose strength carried her through her trials. Keisha was stunned. She had to face this, but she was not alone. Desiree, Dalia, Talia, Brenda, Lana, and even Mya came. The women helped her get her small home back in order.\n\nThe outpouring of support filled Keisha with a sense of warmth. These people were her family. Despite the actions of the past, the trials she'd endured, she had family. She wanted to speak to them, talk to these women that risked themselves to help her, but couldn't find the words. She could only think of two. As Mya was teasing her about her daughter being just like she used to be when she was little she said them loud and clear. \n\n\"Thank you. All of you, thank you.\" she sighed. \"You could have turned me away, but you didn't. I will be forever grateful, and I'll never forget what you all have done for me.\" Tears cascaded down her cheeks. \"Goodness, I'm turning into a crybaby.\" she joked. ",
        "\"It's alright, Keisha. We are here for you, never doubt that. OK sweetheart,\" Desiree hugged her, soon everyone joined in. For a moment it was just silence, then ever the jokester, Mya made a smart remark and the mood lightened. They laughed and finished cleaning.\n\n<center>EPILOGUE</center>\n\nFive year old Alicia Elizabeth Nash needed to talk to her Momma. She was upset. Her cousins Lannie and Zannie had a little sister and she wanted a sister. But her Mommy gave her a brother.\n\n\"Mommy, I want a sister like Zannie and Lannie. Their mommy gave them a sister; why can't I have one?\" She demanded.\n\nKeisha smiled at her big girl. So many years had passed since what she now called the Deshaun Trials, and she was so grateful that they survived. Dylan was the perfect man. Two months after Deshaun's demise, he begged her to marry him. She was hesitant, but he promised her it would be alright. It took a few months, but he was persistent. He never wavered and she knew he was the man she'd been waiting for her whole life. Her love for him overrode her fear and she agreed to be his wife. One weekend after the kid's third birthday, they, along with their friends, made the trip to Vegas where they married. He swore to love and protect her forever. Carter and Mya joined them as did Talia and Richard. The Greenes and the Harrises hosted a reception for them when they returned. \n\nIt was on their wedding night that their son, Dyson was conceived. Alicia was the perfect big sister. Talia also had another baby, Eboni, and both her boys were smitten. At two, Dyson often mimicked his sister, much to her chagrin. She wanted a little sister. She and Dylan talked about having a third child, but both were content with the son and daughter they had now.\n\nSmiling at their little girl that looked more and more like her as she grew, Keisha sighed. \"What about your brother? He adores you. Don't you like having a baby brother?\" she asked.\n\nAlicia thought, and she knew Lander and Zander wanted a brother, just like she wanted a sister. Her mommy had her brother first and they just got their little sister. When they would come home to visit, her friends often said how lucky she was. Alicia didn't feel lucky. Dyson was a pest. He messed with her stuff and followed her everywhere. He even broke off the heads of her dolls. She knew he did not mean to, so she couldn't stay mad at him.\n\n\"Momma, can we switch? Give Dyson to Aunt Talia and we get Eboni, ok.\" she asked.\n\nKeisha laughed, \"No, but when they get here this weekend, I'm sure Aunt Talia and Uncle Rick will let you see Eboni as much as you want.\" She promised. \"Besides, Christy and Melanie will be here, and you can hang around the big girls right. Hunter is coming to, so your brother won't have time to bug you as much, ok.\"\n\n\"And Lannie and Zannie. I can't wait. Momma, can I go home with Aunt Talia? I promise to be good. I can help with Eboni.\" Alicia added sweetly. Keisha smiled. She knew that she just wanted to be with her play cousins. Even years later, the three kids were still close.\n\nAlicia smiled, and hugged her Momma. Dyson woke up and called out. \"Momma, 'Licia!\" The two girls sighed and went to check on their youngest charge. Keisha loved her kids completely. She never believed she had the capacity to love another person this much. Dyson was up and moving, and wanted a snack. \"Bathroom first\" she reminded him. She took him and he relieved himself and as soon as he was finished he took off in search of his big sister.\n\nKeisha laughed as she listened to her young ones play. Hmm, a little sister, indeed. she thought.\n\nSoon, Dylan came home. He found his wife preparing a meal in the kitchen. He hugged her from behind, kissing the back of her neck. They went through a lot over the last few years. Counseling helped, and eventually she came to terms with the abuse she suffered. She learned it was not her fault. And she also learned to forgive herself. Dylan went to counseling as well. He had issues with anger. Although Deshaun died, he felt as a failure and this made him resentful. Through counseling and talking, he realized that he had no reason to feel shame. In the end, he protected his family, and that was the most important.\n\n\"Hey Baby, are you enjoying your week off?\" he asked. Keisha left Preson Publishing and for a few years, she stayed home full time. At first she worried that Dylan might want her to work. After all she'd worked most of her life. However, after Dyson was born, Dylan insisted that she stay home. Dyson was two and Keisha once again went back to work. She worked in a daycare, and loved it. \n\nI'm enjoying it. How was your day, Detective Nash?\" she asked. Dylan had earned several promotions and now wore the title \"Detective\". \n\n\"Well Mrs. Nash, it was quiet today, kinda boring. You know what would make it better?\" he asked suggestively. Keisha laughed. She was just as hungry for him as she was when they first came together. \n\n\"Momma, Dyson broke Dolly's head.\" Alicia rushed into the room, her brother right behind her. \n\n\"Nu uhn, Mommy.\" Dyson protested, carrying the dolls head in his hand.\n\nIn one swift move, Dylan scooped up both of his kids. \n\n\"Hey scamps.\" He kissed both kids. \"Let's cool it, OK.\"\n\n\"Daddy, hey.\" Alicia hugged her Daddy. \"I missed you.\" Dylan adored the little pixie. \n\nDyson not to be left out chanted \"Daddy, Daddy!\"\n\nDylan took the doll's head from his son and snapped it back in place. \"Ok, you two Uncle Carter and Aunt Mya are coming over. So are Uncle Chase and Aunt Lana. I want you two to be good. \n\n\"Yay!\" both kids screamed. Each child was vying for attention from their father. He was great with them patient, loving, kind. Keisha was relieved; neither of her kids had to deal with the things she suffered during her childhood. \n\nAlthough she knew her mother did her best, she vowed that her children would grow up in a safe environment with a clear understanding that no one had the right to strike them. Besides, with their Daddy, she pitied any fool that tried. Keisha was quiet, and Dylan noticed. He knew she was thinking about the past. At first he'd tell her not to, but over time he learned that she needed to deal with things in her own time. \n\n\"You, Keisha Arianna Nash, are my heart. I'll die before I let anyone hurt you.\" He kissed her gently. \n\nKeisha held her husband tightly. \"I love you Dylan. You are my life.\"\n\n\"Daddy, Daddy, I wanna play trucks.\" Two year old Dyson demanded. Dylan laughed. \"Come on buddy. Let's do this.\"\n\nAlicia followed her daddy and played with them also. Keisha finished dinner right before their friends arrived.\n\nSoon their friends and relatives stopped by. As they talked, Talia, Dalia, Steve, and Rick drove up with their brood. Alicia was excited to see her friends. Zander and Landon rushed to greet their friend and her brother. Lana and Chase had a son, Hunter, who was now playing with Dyson. Carter and Mya stood watching the gathering not saying a thing. Carter stood behind Mya, gently caressing her lower abdomen. Noticing his movement, Dalia smiled. She caught Talia's eye and nodded. Both women shared a knowing smile.\n\nCarter and Mya shared their news. Soon they would be welcoming a new family member. After visiting for a while, the group headed to Felix and Desiree's home. The kids loved visiting Grandma and Grandpa. That's what they were to all of the kids. As they visited, Desiree talked to Mya and was assured she was well. Carter was a doctor, so she knew she'd be fine.\n\nThe anniversary banquet weekend was glorious. Brenda and Cedric drove over, and spent time showering the kids with hugs, kisses. This year was special for the Greenes. All of their kids had come home. Even, Norman and Davicia, along with their three kids, attended. \n\nFelix sighed, and gripped Desiree's hand. She smiled at her husband. I love you, she whispered. They sat on the platform admiring their family and friends. Sandra stood and told their story once again, and Desiree sighed. Each person had their own story to tell and each journey was an adventure in its own way. \n\nTheir family had grown. They were proud of each and every member. It did not get past Felix that their family was a rainbow. It was a rainbow that was filled with a vast majority of people. From white chocolate to dark chocolate, they were all beautiful.\n\n<center>~~~THE END~~~</center>\n\nWell, we have reached the end of Keisha's journey. I hope you enjoyed it and were not disappointed with the ending. I really enjoyed sharing her story. Please vote and comment. I'd love to know what you think.\n\nIR2R. "
    ],
    "authorname": "Iread2relax",
    "tags": [
        "white man",
        "black woman",
        "love",
        "triumph",
        "diversity",
        "love",
        "friendship",
        "trust"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/when-a-womans-fed-up-ch-04"
}