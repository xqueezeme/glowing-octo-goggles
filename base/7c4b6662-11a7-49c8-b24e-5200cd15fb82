{
    "title": "Fate of the Fishbowl",
    "pages": [
        "Summary: A shy girl and a cheerleader share a secret romance.\n\nNote 1: This story was written in 2021 with plans to be part of the Art of Falling one-day event. Here is a summary of the rules:\n\nFalling, or more specifically, falling in love, is an experience that has been told many times. We never tire of it. The rush of emotions, all the happy juices our brains produce, it never gets stale. Most of us remember that first blush of romance, the first serious attraction we felt as we became preoccupied with a special someone. Maybe it was the beginning of the love of a lifetime, maybe it was an interlude before it faded and we proceeded on to other loves, leaving us fond or painful, memories. These are stories of new love. Not necessarily young or first love, but those early days when it was all fresh and new. Great writers coming together to write love stories, those are the stories we have to tell.\n\nThe idea of attempting to write a straight romance, my first in years after my rarely-read Serendipity back in early 2013, had seemed like a fun challenge. So I went to work on this story. Unfortunately, what had begun as a simple first crush story turned into a 23,000-plus word first love story, and so I missed the deadline for the Art of Falling event and so here it is presented as a Valentine's Day 2022 Contest Story.\n\nNote 2: Thanks to BlackRandi1958 for the contest idea and Tex Beethoven for editing the story.\n\nDo you remember the first time you fell for someone?\n\nThe first time your body betrayed you?\n\nThe first time you felt things you couldn't control and didn't know if you wanted to?\n\nWell my first time, and the awakening of a sexuality I hadn't anticipated, found me not only confused, but it sprang at me out of nowhere.\n\nAt eighteen and a virgin, I knew I wasn't like everyone else.\n\nI wasn't popular.\n\nI wasn't special.\n\nI was just some girl on the periphery.\n\nIn a school of only 240 students in a town of less than 10,000 residents, I wasn't able to be invisible, but I wasn't popular either.\n\nI'd attended school with pretty much all the same kids for thirteen years.\n\nThen one morning my English teacher pulled out a fishbowl filled with small slips of paper and set it on top of his desk with a flourish.\n\n\"Who believes in Fate?\" he asked the class.\n\n\"You mean how me and Beth are destined to be together for all eternity?\" Joey, a smart-ass jock asked, which got laughs from his small legion of followers.\n\n\"Only when Hell freezes over,\" refuted Beth, the most popular girl in our school, who was dating a college guy.\n\n\"It's feeling kind of frosty right now, don't you think?\" Joey quipped, always able to come up with some witty, or witty in his and his cohorts' minds. If he was the standard for popular, it was pretty easy to see why I didn't fit in at this school.\n\nEach and every boy around here was a moron.\n\nI couldn't wait to leave them all behind, go to college, and start meeting sophisticated people. Unlike Wallacetown, where a gun rack was the most popular accessory for a vehicle... even in the cars.\n\nI was a vegetarian by choice, or rather a pescatarian, since I hated the thought of eating something that had once been alive and walking around, but I wasn't willing to go as far as giving up fish. I didn't really tell that to people... just my friends... both of them... since I'd get teased relentlessly if the Neanderthals found out about that oddity of mine.\n\nMr. Parker said, \"Well, today Fate is in your hands. Or at least in the hands of the brave souls among you willing to place their hands into this bowl and withdraw Her decrees. Which in fact will be precisely half of you.\"\n\n\"Ooooooooh,\" some of the boys moaned spookily, as if he'd said something eery about ghosts, unable to be mature for even a second... while I began worrying what this could be about.\n\n\"What's in the fishbowl?\" Daisy asked.\n\n\"Each of your names,\" he said.\n\n\"Why?\" Daisy asked a little impatiently.\n\n\"Because...\" Mr. Parker began, then paused dramatically like he often did, he'd been a theatre major and an English minor in college, which he'd mentioned about a hundred times throughout our one-and-a-bit semesters with him. Our school was small enough to have a single English teacher for grades ten, eleven and twelve. For obvious reasons, the dating pool was quite small. \"Your partner for a two-person, three-minute creation of a scene will be decided by Fate.\"\n\nWhat the fuck? I thought to myself...partly because I didn't swear out loud, but mainly because I'd already picked my best and most trusted friend Jamie to be my partner for this anxiety-riddled assignment he'd foreshadowed last week, my other bestie Cameron having graduated the previous year.\n\n\"Seriously?\" Gretchen asked antagonistically, the blunt bitch of the class.\n\n\"Of course I'm serious,\" Mr. Parker said. \"The human experience is all about overcoming challenges, and about working, hopefully harmoniously, with people who have different thoughts and opinions than ourselves, and thus joining together to create something beautiful.\"\n\nMr. Parker had always seemed a bit hippy-ish, if that's a word, but this newest venture was on an entirely different level of 'You've got to be kidding me!'\n\n\"Why can't we pick our own partners?\" Jamie asked, glancing at me briefly, she being a lot more talkative in class than I was.\n\n\"Because that wouldn't be tempting Fate,\" he said, as he picked up and brandished the fishbowl as if it were the Holy Grail.\n\n\"I'm fine with picking my own partner,\" Joey said. He happened to be seated in the front left corner of our rectangle of school desks.\n\n\"I'm sure you are,\" Mr. Parker said, and he stuck the fishbowl in front of him. \"So reach in and pick one.\"\n\n\"Whatever,\" Joey said. \"But I'd better not get Gus.\" Gus was the social outcast of the school. I mean who else came from a family of nine and wore hand-me-downs from the entire community? He also often wasn't at school... like today.\n\n\"You're in the Hands of Fate,\" Mr. Parker said.\n\n\"Yeah, yeah, so Fate and my subconscious mind are in complete control of my destiny, blah, blah, blah,\" Joey said, \"and even if I'm walking around outside someday and an airplane wheel falls on my head, somehow Fate and I collaborated in making that happen,\" and he reached his hand in the bowl and pulled out a name. He unfolded it and said, \"Cool! Fate gave me the GOAT!\"\n\n\"Sweet,\" Mike, his best friend said. He then added unnecessarily, \"He means 'Greatest of all Time', for anyone not with it.\"\n\nJoey showed the name to Mr. Parker. \"I picked myself.\"\n\nMr. Parker laughed. \"You should buy yourself a lottery ticket today, Mr. Jones. The odds of that were quite slim.\"\n\n\"Yep, 4.5%,\" Ben, our class math genius said, since there were 22 students in the class.\n\n\"You're such a nerd,\" Joey accused, shaking his head and looking at Ben disparagingly.\n\n\"Those are a lot better odds than Ben ever getting laid,\" Mike joked.\n\n\"Boys, enough,\" Mr. Parker said sternly, not willing to allow any bullying in his class... which was good of him, after our tenth grade English teacher Mr. Marks had seemed way too happy to encourage it.\n\n\"So now I do the project by myself and get double the grade?\" Joey asked.\n\n\"No, Mr. Jones, you reach in and draw another name,\" Mr. Parker said, the only teacher who called each of us by our surnames... a practice he claimed evened the playing field in a class... another of his hippy weirdo ideas.\n\n\"Okay,\" Joey said, as he stuck his hand in the fishbowl again.\n\n\"And as this process continues,\" Mr. Parker explained, \"if you draw your own name, or someone who's already drawn from the fishbowl, you'll set it aside and draw again.\"\n\n\"Yeah,\" Joey said, as he pulled his hand out and fist pumped Mike as he showed him who he'd chosen. \"Jill!\" Jill Simmons was a very pretty girl and she had a nice body, but she wasn't the brightest bulb on the Christmas tree. Which to Joey's eyes, was probably perfect.\n\n\"Then I guess Fate has decided to fail you two,\" Beth quipped, this getting quite the laugh from the classroom, since she was always able to make witty comments that were actually funny. She was the prettiest girl in the school. Blonde hair, blue eyes, a pretty smile that seemed to get the attention of every boy here, and since her boyfriend was in college and had gone to a different high school in a different district, she even attracted attention outside of this town.\n\nI'd thought the exact same thing as she'd said, but I would never have spoken out. I wouldn't want to attract any attention, or the possible scorn that could follow my doing any such thing. Instead, I just sat there in my long dress, my ankles crossed, and dreaded my name being called, or If he was going methodically down the row to draw names, I'd be the fifth one to draw. I was funny that way, I guess. I had absolutely no qualms about standing up in class and responding to questions about the subject matter of a class, and I even loved taking part in the school's Debate Club, but the idea of speaking out with any repartee, or... heaven forbid... anything personal about myself, turned me into a quivering wreck.\n\n\"Ms. Tucker,\" Mr. Parker said, moving on to the student seated next to Joey with his 'Fishbowl of Fate', and addressing her in a lot less teacher-ish tone than he had the jock.\n\n\"Sorry, Mr. Parker,\" Sally Tucker apologized, in the way she habitually apologized unnecessarily, only because she feel compelled to, and her tone making it clear she wasn't really sorry. So really, what was the point? Again, not that I'd ever say anything out loud about harbouring such critical thoughts. In any case, she drew Harold Adams' name, who was a quiet boy almost as shy as I was, if that was possible.\n\nAs I'd dreaded, Mr. Parker advanced to the next person in my row, Sandra Saunders.\n\n\"Do I get at least a mulligan?\" she asked, probably joking. Partly because Sandra was a competitive golfer, and partly because she'd just broken up with Adam Whittier, so if they had to be partners, it would get ugly quick.\n\n\"Nice play on words, Ms. Saunders,\" Mr. Parker approved, as he offered her the bowl.\n\n\"I try,\" Sandra said, as she placed her hand in the fishbowl, grasped a piece of paper, began to pull it out, but then dropped it back in and selected another. \"That first one just felt wrong.\"\n\n\"Then Fate decreed it to be wrong,\" Mr. Parker agreed, obviously appreciating her wit.\n\nSandra opened the piece of paper and announced, \"Jamie.\"\n\nMy heart dropped. My only friend was now chosen, and so was no longer available. Once again I cursed to myself in my head, Fuck! Fuck! Fuck!\n\n\"Your Fate is sealed,\" Mr. Parker declared, amused by his own lame word play.\n\nJamie gave me a silent I'm sorry look... since she knew without anything being said, I was devastated. Sandra was a great choice for Jamie however, although she could work well with almost anyone, and Jamie was a theatre girl who would excel at this assignment.\n\n\"Mr. Anderson,\" Mr. Parker said, offering the next person in front of him the fishbowl. \"May the odds ever be in your favour.\"\n\n\"Please stop trying to be funny,\" Ken Anderson objected, since Mr. Parker was always attempting to be witty... for instance, he had a lot of dad jokes, and he wasn't even a dad.\n\nKen reached his hand into the jar and pulled out a piece of paper. \"Carter.\"\n\nI began to feel an anxiety attack rising inside me as Mr. Parker stepped in front of me. He said something to the class, but I was so focused on worrying about what was about to happen, I wasn't listening.\n\n\"Ms. Patterson, it's your turn,\" Mr. Parker said, as I looked up at him with sheer terror.\n\n\"Can't I just do this skit by myself?\" I asked hopefully.\n\n\"A two-person skit requires two people by definition, Ms. Patterson,\" he pointed out.\n\n\"I could do a skit about being bipolar?\" I suggested. I knew that was a lame idea, but I wasn't aspiring for anything clever, I was just trying to wriggle myself off the hook.\n\n\"Sorry, you're required to have a partner,\" Mr. Parker said, for some insane reason unable to detect my complete terror.\n\nI didn't immediately put my hand in the fishbowl, but with twenty-one pairs of eyes watching, including Mr. Parker's, actually only twenty, since one person was missing today, I stuck my hand in the fishbowl and pulled out a name.\n\nI was shaking slightly as I unfolded the piece of paper. I stared at it. I didn't even know how to react as I saw Beth Prince's name staring back up at me.\n\nWhen I didn't say anything, Mr. Parker took the piece of paper from my hand and read it out loud, \"Ms. Prince.\"\n\n\"Nice,\" Beth said, surprising me. She wasn't ever mean to me, but she also didn't really acknowledge my existence. Most people didn't.\n\nI looked over at her and she smiled, which made me smile back.\n\n\"It's your density,\" Mr. Parker said.\n\nI looked up at the Back to the Future reference, my Dad's favourite movie, and someone, one of the girls, called out, \"Dude!\"\n\n\"What? You haven't ever seen the masterpiece that's Back to the Future?\" Mr. Parker asked, slightly wounded that the rest of us were silent. In my case I could have said something sensible, but I never spoke out about anything that wasn't strictly academic.\n\n\"Most of us were born in 2003 or 2004,\" Sandra pointed out. \"That movie came out way back in 1985.\"\n\n\"Fine, fine,\" Mr. Parker said, and he advanced to George, the final student in my row.\n\nFor the next ten minutes I tuned out while I tried to figure out how I was supposed to work with the most popular girl in the school. Sure, she'd smiled at me, but that could have been, and likely was, just her putting on a brave face. No way was she excited by my picking her, whether because of Fate or just random chance.\n\nOnce everyone's partners were chosen, Mr. Parker said, \"We have ten minutes left in the period, so why don't you all meet with your partners and start brainstorming your plans?\"\n\n\"You haven't explained yet what we're supposed to do except to come up with a three-minute skit,\" Beth pointed out. Do you have any guidelines for us, or is this just a free-for-all?\"\n\n\"Right, right,\" he acknowledged her point. \"I suppose knowing your assignment would be helpful.\"\n\nMr. Parker went to his desk and Beth, in her cheerleading outfit, came over to me. \"Move, she said to George, who was seated in the desk to my right.\n\nGeorge hurriedly exited his seat; and Beth pulled it close to me and sat down.\n\n\"Hey, Bailey,\" Beth said.\n\n\"Hey, Beth,\" I said.\n\n\"This will be fun,\" she said, smiling widely, and looked to be sincerely friendly.\n\nMr. Parker handed out a paper and we both read our copy together.\n\nYour task:\n\nPick any play, novel, short story or movie we have read or watched this year, and do one of the following:\n\nA. Create a new scene that enhances the development of any character.\n\nB. Extend a scene to enhance the development of any character.\n\nC. Create a prologue or epilogue that enhances or alters the ending.\n\n\"Oh fun,\" Beth said, appearing very excited.\n\n\"I don't know if that's what I'd call it,\" I said doubtfully. I was a writer, not an actor. I'd written hundreds of poems, a few short stories, and I was probably halfway through my first novel (because who knew how long a novel would be before it was completed)... but I hadn't read any of my work to the other students, except for Jamie... only she and Mr. Parker had read any of my writing.\n\n\"Really?\" Beth asked, placing her hand on top of mine... making my eyes go wide. \"You love to write.\"\n\n\"How could you know that?\" I asked, a little defensively.\n\n\"I always see you writing in your journals in class, at lunch, and even at pep rallies,\" she said.\n\nEverything she said was accurate, and I was surprised she'd noticed. Since as I mentioned, I was the girl out on the periphery. I felt a little guilty about the pep rallies, since she performed at them. \"Yeah, I'm sorry; I'm not really much of a school spirit gal.\"\n\n\"No worries, I'm not much of a writer,\" Beth said, squeezing my hand and then taking hers away, sending a confusing chill up my spine. \"But what I am is creative and dramatic. So we should make a great team.\"\n\n\"But this will be acting, and I'm terrible in front of people, unless I'm talking about academic stuff or pure logic,\" I said. \"If there are actual emotions involved, I get complete stage fright, even in front of just a few people.\"\n\n\"No worries, I can help you with that,\" she offered, her smile so warm, confident and charming... she was more than a little disarming. \"For instance, I suspect that whenever you're doing any public speaking or debating, you're hiding your real self behind a dispassionate fa\u00e7ade where it's safe. True?\"\n\n\"Oh? I've never thought of it like that, but I guess you're right,\" I admitted. And she was right!\n\n\"Then whenever you're acting, you could still hide: it can just be behind your character's emotions instead of your real ones. And while we're rehearsing together... just you and me... you can practice doing that, and I can promise not to judge you if you falter from time to time. Do you think that approach sounds promising?\"\n\n\"Well... yes, actually. And thanks!\" I said, somehow feeling able to do something way out of my comfort zone because of her inspiring words.\n\n\"Not a problem. And why don't you come by my house after school?\" she invited me.\n\n\"Really?\" I asked.\n\n\"Yeah, let's begin with some brainstorming, or at least we can figure out which work we'd like to pick holes in,\" she elaborated.\n\n\"Okay,\" I agreed. Beth lived in the nicest house in town, her Dad having been a CEO for some multinational marketing company, and he'd almost never been home until he never came home again, after dying in a traffic accident a few years ago just before Christmas... I'd overheard her explaining all of that to her friends and fellow cheerleaders once. For a girl so pretty, so popular and so confident, I actually felt a little sorry for her.\n\nOn the other hand, my parents were always home. My Dad worked at the local hospital as their accountant, and my Mom worked at the same hospital as an RN. My family wasn't wealthy of course, but unlike many kids, I actually enjoyed spending time with my parents. Our Wednesday game night was a tradition we'd missed only once in the last five years... which had been because I was in the hospital with an extreme fever that had ended up being nothing, although at the time it was pretty scary.\n\n\"You take the bus to and from school, right?\" she asked.\n\n\"Yeah,\" I admitted, living on the west side of town, while the school was on the east side... which was where Beth lived.\n\n\"I'll meet you right after school, and I'll drive us to my house,\" she offered, just as the bell rang. \"In the parking lot, just outside the school building; is that okay with you?\"\n\n\"Okay,\" I agreed, as she stood up.\n\n\"This will be so much fun!\" she said, still smiling warmly at me. I wanted to trust her enthusiasm; I wanted to trust her sincerity; yet I still felt this just had to be all a charade... which I realized a bit later was a little unfair to Beth, since she'd never been mean to me. I'd thought she never noticed me, but she'd just disproven that assumption. I also realized I was judging her with nothing to go on, which made me angry with myself, since I hated being judged for any reason, unfair or not.\n\n\"If you say so,\" I laughed awkwardly.\n\n\"I do say so,\" she assured me, turning and bouncing, almost skipping, away.\n\nJamie came over to me and observed, \"Beth seems excited to partner with you.\"",
        "\"Yeah, she really does,\" I agreed, looking over to her, now chatting with her usual group of friends.\n\n\"Still terrified?\" she asked, knowing me so well.\n\n\"Oddly,\" I replied thoughtfully, looking over at Beth again while saying, \"as you could probably tell from my face, initially I had serious doubts about pulling this off, but after everything she just said, I'm now more curious to see how it goes than I am terrified.\"\n\n\"That's good.\"\n\n\"Although a complete anxiety-riddled breakdown is still lingering in my subconscious,\" I joked.\n\n\"Well, those are on your schedule every day,\" Jamie teased, as we headed for lunch together.\n\n\"She's driving me to her house to start working on our skit right after school,\" I added.\n\n\"Really?\" she asked, surprised.\n\n\"Yeah, she seems really excited for us to get started.\"\n\n\"Well, that's good, I guess.\"\n\n\"Yeah, I guess,\" I agreed, just a little part of me still skeptical that this could be all part of some sinister plan to humiliate me.\n\nThe rest of the day went by like most school days do... boringly... with only the odd thing of interest... or some sly checking of Instagram during idle moments... and various other whatevers.\n\nImmediately following the bell to end the last period for the day, I stuffed most of my binders in my hallway locker, retained my English binder since I didn't have homework in any other class, and headed out to the student parking lot.\n\nBeth was there waiting for me, leaning against her red car, a very nice one I suppose, although I have no idea what kind it was, since I've never had a clue about cars. I mean if you compare it to a peaceful lake in the mountains for instance, any car strikes me as boring. Useful as a conveyance of course, but otherwise no biggie.\n\nWhen she spied me coming, she waved gaily at me and gave me a bright smile, which oddly sent another chill up my spine.\n\nI awkwardly waved back, and came over to her... feeling oddly nervous, yet equally excited.\n\nAs I approached, her cheerleader skirt blew up in the air, somewhat like in the famous Marilyn Monroe promo shot from the epic Seven Year Itch.\n\nI caught a glimpse of her light blue panties and the crotch of her tan pantyhose for a brief moment, before she pushed her skirt back down.\n\nI could feel my cheeks flush, which confused me as I reached her.\n\n\"Stupid wind,\" Beth giggled, shaking her head.\n\nPlayfully I joked, \"It was very Marilyn Monroe.\"\n\n\"Really? I love Marilyn Monroe,\" she replied, appearing flattered.\n\n\"You do?\" I asked, Marilyn Monroe being my second favourite female icon, right after Audrey Hepburn.\n\n\"Well, she wasn't Audrey Hepburn,\" Beth said, \"but she was still pretty cool.\"\n\n\"Are you kidding me?\" I asked.\n\n\"What?\"\n\n\"You're fond of Audrey Hepburn too?\"\n\n\"Love her.\"\n\n\"Favourite movie?\" I asked.\n\n\"Roman Holiday,\" Beth said.\n\n\"My Fair Lady,\" I said.\n\n\"If you're such a fan, you probably know that a singer named Marni Nixon overdubbed almost all her singing in that movie,\" Beth pointed out, as she opened the passenger door for me, as if she were a chivalrous man.\n\n\"Yeah, but Audrey absolutely nailed that delightful Cockney accent in her speaking lines all by herself,\" I replied.\n\n\"You know,\" Beth mentioned after giving me a closer look, \"you look a lot like Audrey did back then.\"\n\n\"I do?\" I asked, feeling completely flattered.\n\n\"And you dress like her, too,\" Beth said, checking out my long skirt.\n\n\"Thank you,\" I said, my style indeed heavily influenced by Audrey Hepburn.\n\n\"You're welcome,\" Beth said, smiling warmly. After a moment, while we both seemed unsure of what to say next, Beth said, \"Well, my fair lady, your chariot awaits.\"\n\n\"Bewitched?\" I asked.\n\n\"Bewitched,\" she nodded. As I sat down in the car, she watched me, and I couldn't help but feel she was admiring me... as absurd as that might seem. Beth was the most popular girl in the school, and actually in the entire town. She was also without a doubt the prettiest. She was even dating a college boy! Obviously, any such fantasies were all in my head.\n\n\"I didn't know anyone still watched those old movies and television shows,\" I said.\n\nAs Beth kept holding the door open, observing me the entire time with apparent pleasure, she pointed out, \"It was called the Golden Age for a reason.\"\n\nShe closed the door before I could respond, skipped around the car, and buckled herself into the driver's seat.\n\nThe inside of the car was immaculate, and it smelt of cherry. Somehow, which makes no logical sense, I felt the car was sexy, and it was obviously hers instead of her mother's. It just felt like Beth. Perhaps that mountain lake I'd contemplated didn't outclass this car all that much after all.\n\nAs she started driving, almost the entirety of her long right pantyhose-clad leg was within clear view, which I was slyly admiring, since I also really liked pantyhose. Until this moment, I'd just liked them for me. I wore them every day. I'd found from watching those old movies and TV shows they were very popular in the fifties and sixties, which was the time I wish I'd been living, partly because of the garter-belts and stockings, of which I also owned a few... and I even wore them to school sometimes... although not a single person except Jamie and my parents had a clue I owned them.\n\n\"So, I see you like pantyhose too,\" she said out of the blue.\n\n\"Pardon?\" I asked, startled by her words, since I was a little too preoccupied in admiring her right leg, and lost in my own little world.\n\n\"Pantyhose: you seem to like them as much as I do,\" she rephrased her observation, looking at me as she stopped at one of the only three stoplights in our town.\n\n\"Um, yeah, I do, actually,\" I admitted, looking away from her leg, worried what she'd think, since she'd caught me staring. I wasn't a lesbian. I'd never considered a girl in any romantic or sexual way. Which is to say I could tell when a girl was pretty or beautiful, and I admired some women's fashion sense, but that was as far as it went. But with that said, I also didn't have a crush on any boy, and I never had. But I'd always downplayed that as an official sexual preference, since I'd known every guy in our town near my age for years, and had always found them all incompetent fools, or just not my type... although I wouldn't be able to describe what my type was.\n\n\"I think you and I are the only two people in the entire school who particularly like them,\" Beth said.\n\n\"Well, us and Mrs. Walker,\" I pointed out, Mrs. Walker having been our English teacher for the eleventh grade, but she'd been promoted to Vice-Principal this year.\n\n\"Yes, she always dresses with class,\" Beth agreed.\n\n\"I think so too,\" I said.\n\n\"I think pantyhose are sexy,\" Beth said.\n\n\"I've always seen them as an accessory to my outfits,\" I said.\n\n\"But you don't think they're sexy?\"\n\n\"Pardon?\" I asked.\n\n\"Pantyhose,\" she repeated. \"Don't you think they're sexy?\"\n\n\"I've never thought about it,\" I answered, which was mostly true. I mean I saw them as an accessory, something that enhanced my outfits stylistically, but I'd never thought of them as sexy... at least not on me... of course I never saw myself as sexy in any way, shape or form... but on the other hand, on Beth, especially with the shiny gleam of the pantyhose (I needed to get some of that brand, whatever it was), they did indeed look sexy.\n\n\"Well trust me,\" Beth said, bringing her hand to my leg, which sent a confusing chill up my spine, \"they definitely make you look sexy.\"\n\nMy eyes went wide as she gave my leg a brief squeeze, before returning her hand to the steering wheel.\n\nI was speechless.\n\nBeth, the prettiest and most popular girl in the entire school, had just called me sexy.\n\nAs she pulled up to a house three times the size of mine, I blurted out, needing to say it, flustered beyond anything I'd ever felt before, \"I think they make you look really sexy, too.\"\n\n\"Ah, you're so sweet,\" she smiled warmly, bringing her hand to my leg and giving me another squeeze. \"Let's go inside.\"\n\n\"Okay,\" I said, feeling flustered... confused... and... and... my vagina was tingling.\n\nI climbed out of the car and followed her into her house.\n\nShe slipped out of her heels... so I slipped out of my flats and followed her into a living room that was larger than my entire house!\n\n\"Wow!\" I said, looking around.\n\n\"Thanks,\" she said, smiling. After a moment she added, making me blush yet again, \"Oh, you meant the house.\"\n\n\"I-I-I...\" I stammered, flustered beyond words.\n\n\"You really are so cute,\" Beth said with a kind of squeal, as she came up to me.\n\n\"I-I-I...\" I repeated, as she took my hand.\n\n\"Come downstairs with me, I want to show you something really special.\"\n\n\"Okay,\" I said, her hand feeling so good with her fingers intertwined with mine.\n\n\"You won't believe this,\" she said.\n\n\"I imagine I won't,\" I said, trying to figure out what she had in mind.\n\nShe led me downstairs and into a large room filled with movie memorabilia... including a large section devoted completely to Audrey Hepburn.\n\n\"Oh my,\" I gasped, seeing a dress preserved in a glass enclosure that Audrey had worn in Breakfast at Tiffany's.\n\n\"I've never invited anyone down here before,\" Beth said, her fingers still entwined with mine.\n\n\"Really?\" I asked, surprised.\n\n\"Yeah, I didn't think anyone else would appreciate it.\"\n\n\"Really?\" I repeated, wondering at how amazing this was.\n\n\"Yeah, none of my other friends have any idea who Audrey even was, although they could tell you Cardi B's entire life story,\" Beth said, in the same tone I would have used... judgemental.\n\nI scoffed, \"Don't get me started.\"\n\n\"Can I tell you something I've never told anyone outside my family?\" she asked, looking at me with a vulnerability I didn't think a popular girl like her could have.\n\n\"Sure,\" I said, as she took both my hands in hers and looked into my eyes.\n\nI couldn't explain it... but I instantly knew something... something I was as sure of as a math equation or scientific fact... I liked this girl... a lot. But of course I could never tell her!\n\n\"Audrey Hepburn was my great-grandmother,\" Beth said.\n\n\"No way!\" I gasped, even though I believed her... it was just the most surreal truth ever.\n\n\"Yes and this entire collection consists of authentic heirlooms,\" Beth said.\n\n\"You're so lucky,\" I said.\n\n\"I've been blessed,\" Beth said, still holding both of my hands. After a few seconds, as she kept looking into my eyes, I was unsure of what to say,\n\n\"Did you know she was bisexual?\" Beth asked.\n\n\"I did know that, yes,\" I nodded, having read that even though she'd had two sons, her relationships with men had often ended in heartbreak.\n\nThen... after a lengthy pause... while I thought Beth was gearing up to tell me something else significant... instead, she leaned in and kissed me.\n\nMy eyes went wide, as I felt her lips pressing against mine.\n\nYet although I was shocked... I did what came naturally as my entire body warmed inside me... and I kissed her back... my second kiss ever... the first one having been with Simon at a Debate Club night. And the best that can be said about that one was it had been... awkward and embarrassing.\n\nThis one was soft and tender... tentative... sweet... however, when she broke the kiss after only a few seconds, she apologized, \"I'm so sorry, it's just, just, just....\"\n\n\"It's okay,\" I said. \"I mean... it was very unexpected, but very nice.\"\n\n\"Nice?\" she asked, with just the slightest smile.\n\n\"Okay, now I'm sorry. No, it wasn't just nice; it was great... amazing... unbelievable... surprising... marvelous,\" I listed, knowing the word nice wasn't very flattering... I'd been called nice all my life, and I'd never once taken it as a compliment. Then something just popped into my head, as I tried my hand at flirting for the first time ever, by quoting Audrey Hepburn, having a couple dozen of her quotes on the wall in my bedroom, \"I believe in kissing, kissing a lot.\"\n\nBeth smiled then, leaning in and kissing me again with more confidence before saying, employing an English accent that was so similar to Audrey's in Breakfast at Tiffany's, \"Elegance is the only beauty that never fades.\"\n\n\"Oh my,\" I said, my entire head going light.\n\n\"And you... are so elegant,\" she said, kissing me once more, \"and beautiful,\" before she quoted my favourite Audrey Hepburn line, \"And a woman can be beautiful as well as intellectual.\"\n\n\"T-t-that is my favourite quote! It's engraved on my bedroom mirror,\" I said, trembling as she kissed me again.\n\nBeth continued speaking, interspersing her phrases with butterfly kisses, \"I believe...\" a kiss, \"...every day...\" another kiss, \"...you should have at least one...\" yet another kiss, this one lasting a little longer, before she completed another great quote from Audrey, \"...exquisite moment.\"\n\n\"And I believe in miracles,\" I said, as I kissed her this time, with a lustful need I'd never felt for anyone before that moment.\n\nWe kissed for a few minutes... before we heard a door slam.\n\n\"That was the front door; my Mom's home,\" she explained.\n\n\"Oh, \"I said, not wanting this unbelievable moment of intimacy to end. For after all, a special moment like this one alone with her, was likely no more than that.\n\n\"Let's go upstairs,\" she said, this time not taking my hand.\n\nI followed her up the stairs and was introduced to her Mom, who was very sweet and nice, and indeed had more than a passing resemblance to Audrey Hepburn... so I was a little starstruck.\n\n\"We'll be upstairs brainstorming for our English class,\" Beth said, surprising me again by taking my hand and leading me to her room... fireworks sensations popping inside me from just her simple but affectionate touch.\n\nHer bedroom was huge. She didn't close the door and said, \"So what do you think we should springboard from?\"\n\n\"I don't know,\" I said, a little disappointed to be now addressing the actual reason I was here. For the first time in my life, I didn't care a fig about school.\n\n\"I have an idea, but it's kind of wicked,\" Beth confided in a hushed voice, even though there was obviously nobody else upstairs to listen in on us, as she sat down on her king-sized bed.\n\n\"Oh?\" I smiled, gaining some confidence, which was very unlike me, as I approached to join her on the bed, \"As in something lesbian?\"\n\n\"Actually, yes,\" she smiled. \"We think alike.\"\n\n\"As I sat right beside her, our hips almost but not quite touching, I asked, \"So what's your wicked idea?\"\n\n\"How about Hamlet? In our version Ophelia is a lesbian, and she's having an affair with her maid,\" Beth suggested.\n\n\"Oh my,\" I gasped, this departure from Shakespeare not at all what I was expecting.\n\n\"We can create a scene where they're making out and are caught by her father Polonius, and that's what leads to her going crazy,\" Beth explained.\n\n\"We'll be making out in front of the class?\" I asked.\n\n\"Well that's my idea, yes. But only if you're willing,\" she said, placing her hand on my leg again... and for the first time ever, I wished I wore short skirts like Beth and the other popular girls, so I could feel the warmth of her hand directly on my leg.\n\n\"I don't know,\" I said, that being a whole other level of risk. As I've mentioned, I was super comfortable speaking in front of a class about inconsequential things... and I also had an eidetic memory... which meant I could remember an entire script after reading it only once. But when I was portraying strong emotions? In spite of Beth's earlier reassuring words on the subject, if I was kissing her in front of everyone, even though I'd be allegedly playing a role, I didn't think I would be acting!\n\n\"Why don't we start writing the script and see where it takes us?\" she suggested.\n\nTaking a risk... one that was scarier than jumping off a cliff... but needing to do it... I placed my hand on her leg... her pantyhose-clad leg... and said as I did, \"Okay, why not?\" followed by, \"Oh my, are these ever so soft!\"\n\n\"They're Wolfords,\" Beth said as I moved my hand back and forth ever so slightly on her leg... fascinated by the sheer soft silk... briefly forgetting as I became fascinated by the pantyhose that I was attempting to flirt... not that I actually knew how.\n\n\"No way,\" I said, knowing they were an expensive brand. I'd done some googling about them, and they were an Austrian company, but since they had a prominent outlet on Regent Street in London, they were often called 'tights'.\n\n\"Yeah, Mom used to model for them,\" Beth said, and then added, continuing to shock me over and over again during this most surreal, confusing and life-altering day of my eighteen years of life, \"And now I'm one of their models.\"\n\n\"You're what?\" I blurted out with a huge exhalation. If I'd been chewing gum, it would have hit her right in the nose.\n\n\"Yeah, when I missed class last month, I was in England doing a photo shoot for Wolford,\" she said, not in a bragging way... just a matter of fact.\n\n\"Wow,\" I said.\n\n\"Yeah, so I'm now getting free Wolfords for life,\" she added.\n\n\"You are the luckiest girl in the world,\" I said, as my automatic pilot continued to move my hand aimlessly around on her thigh.\n\n\"I especially feel like that girl right now,\" she said, looking into my eyes.\n\nI asked, really wanting to know what was going on between us, since there was no doubt of some sort of intent in her eyes, her gaze and her touch, \"I hate to ask this and ruin the moment, but...\" and then I stopped. I didn't want to ask this. I didn't want to terminate this beautiful, intimate interlude.\n\n\"But it's common knowledge I have a boyfriend,\" she finished the sentence for me.\n\n\"Yes,\" I said, trembling with uncertainty... knowing I'd just detoured our conversation into a realm that could break my heart... a bit less than an hour after I'd surrendered it to someone for the first time.\n\n\"Frank is gay,\" she said.\n\n\"He is?\" I asked, this statement far from what I was expecting to hear.\n\n\"And I'm gay, too,\" she added.\n\n\"You are?\" I asked, trying to process. Usually I was a quick study, but today I felt like I was constantly two steps behind events as they happened.\n\n\"Yes, you silly goose,\" she said, kissing me just once this time. \"I only have eyes for one person in this world, and she's a girl, and she has the loveliest green eyes, and I'm utterly lost in them at the moment.\"\n\n\"Y-y-you do?\" I stammered, \"y-y-you are?\" feeling my face flush, my body tremble and my vagina tingle.\n\n\"Yes, Frank and I date for appearances, since he isn't ready to come out yet, and we've been family friends since I was three and he was six,\" she explained, her hand still on my leg, mine still on hers... although both hands were now static, just resting in place. \"And I'm not ready to come out yet either, and my having a college boyfriend who's 'common knowledge', keeps pigs like Joey from hitting on me. Or in Joey's case, it keeps him from being too much of a pest most of the time.\"\n\n\"Oh,\" I said, still processing all these truths, especially that she'd just declared how much she liked me.\n\n\"This is all likely a lot to take in,\" Beth said, just as my phone rang.\n\n\"Yeah,\" I said, reaching for my purse.\n\n\"Go ahead and answer that,\" she said.\n\n\"It's my Mom,\" I said, a ringtone of 'House of the Rising Sun' playing.\n\nI answered the phone, and explained I was at a friend's house working on a school project. She reminded me she had to work tonight, and I'd promised to watch my younger siblings, which I'd completely forgotten, being swept away as I was by Beth. I said I'd be home soon, hung up, and told Beth I needed to go home.\n\nBeth nodded. She said, \"Look, I have no idea if you have any feelings for me.\"",
        "\"You don't?\" I asked.\n\n\"I mean, I'm used to people admiring me, but they never see the real me,\" Beth said, looking vulnerable, which completely surprised me. Why on earth would she feel vulnerable? And around me? But it was there, it was real, I could see it, and she was asking. So I just went with it.\n\n\"I'm sure I see you,\" I told her, and I did. I saw through her beauty and into her soul... I saw a very vulnerable, and maybe even a somewhat lost soul. Which again was surprising, but obviously real.\n\n\"What do you see?\" she asked, and now she was trembling. It was obvious she'd been living a superficial life where she never got deeply into someone she cared about. Nor, and more importantly, vise versa.\n\n\"I see someone very beautiful just like everyone else sees you, but you're also lost, and longing to be found,\" I said with utter sincerity.\n\n\"Bingo! You always were the smartest girl in the school,\" she smiled that warm smile at me again. I could tell she was saying something light-hearted to avoid getting any deeper into this subject for now, and since I really did need to get home, I let it slide. For now.\n\nI gave her a hug, and she asked, still enclosed in my arms, \"Are you gay?\"\n\nI chuckled softly. I let her go and admitted, \"Before today, I've always been rather asexual. I didn't find boys sexually attractive, but I was assuming and hoping that was just because the boys in our town are all... as you called them... pigs, but...\"\n\n\"But, what?\" she asked, listening to my every word intensely and with hope.\n\n\"But when you kissed me for the first time a while ago...\" I said, \"...my entire body came alive.\"\n\n\"Mmmmmmm,\" she smiled, kissing me again, this time for a few seconds.\n\nWhen she broke the kiss, I said, \"I don't know if I'm gay or not, but at the very least I'm definitely infatuated with you.\"\n\n\"Infatuated, nice word,\" she smiled.\n\n\"And I mean the real you, inside and out,\" I said, leaning in, and I initiated the kissing this time.\n\n\"That means so much to me,\" she said. \"More than you can possibly imagine.\"\n\n\"I want you to know that whatever this is, or might be, and whatever happens in the future, I'll always be there for you at least as a friend,\" I said, wanting to let her know she had a confidante, regardless of whether we established a relationship, or if this was just a one-day blip on the radar of her life.\n\n\"I appreciate that,\" she said, taking my hand, \"and I hope maybe it can become more than just friends.\"\n\n\"So do I,\" I said, my body warming with the possibilities of what might become... in what was already becoming the most life-altering day of my life.\n\n\"I'd better drive you home,\" she said.\n\n\"That would be wonderful; my Mom probably assumes I've already left by now,\" I agreed.\n\nShe held my hand as we traipsed downstairs, she told her Mom she was taking me home while holding my hand right in front of her, and then we headed out. She confided, \"My Mom knows I'm a lesbian.\"\n\n\"That's good,\" I said.\n\n\"Yeah, when I told her she just said, \"Oh,\" and then didn't say anything about it for a few days,\" she said. \"And then she told me I was probably going through a phase, since she's been with quite a few women herself.\"\n\n\"Oh,\" I said, unable to imagine having such an exchange with my Mom. In my head, Mom had had sex three times... getting pregnant each time,,, even though I knew biologically that was ridiculous.\n\n\"Yes, we're really close,\" she said. \"Especially after Dad died.\"\n\n\"I'm sorry,\" I said, recalling her Dad had died in that car accident in a snowstorm three or four years ago... just a couple days before Christmas.\n\n\"It is what it is,\" she said, as she opened her car door for me again.\n\n\"I can't imagine,\" I said sympathetically, as I sat down and she looked at me... then feeling wicked, I lifted my skirt high enough to reveal I was wearing thigh high stockings.\n\n\"No way!\" she gasped.\n\n\"You're not the only enigma inside this car,\" I smiled.\n\n\"So I'm learning,\" she said, admiring my leg for a moment, before closing my door and walking around to her side.\n\nAfter she'd gotten in, buckled up and started the engine, she said, \"Pull that dress up enough for me to feel those stockings, you bad girl.\"\n\nI smiled as I obeyed her request, and feeling sexy and alive for the first time ever, I quoted, \"I'm not bad, I'm just drawn that way.\"\n\n\"You're quoting Jessica Rabbit to me,\" she said, placing her hand on my skirt-less leg as she began to drive. \"She's my ultimate cartoon crush.\"\n\n\"Betty Boop,\" I countered.\n\n\"Of course she is,\" she smiled, as she turned the radio on, which was tuned to a classic rock station instead of some lame station that only played autotune songs... the song just starting happening to be 'Born to be Wild'.\n\nWe sang it together, each of us knowing most of the words, and I couldn't help but wonder if Fate really was watching over us... the fishbowl that had started it all, our shared love for Hepburn (although hers was at least in part DNA-based), and now a song that fit our situation so perfectly... this being the wildest day of my life!\n\nWe sang together through two more songs, the Beatles' 'I Want to Hold Your Hand', where she took mine and gripped it tightly through the classic song, and then I admitted my favourite song was 'While My Guitar Gently Weeps' (I love Eric Clapton... Layla another of my all-time favourite songs), and hers was 'Twist and Shout'.\n\nThe last song was Meatloaf's 'Paradise by the Dashboard Light', which was still playing as she pulled up to my house... the wild 'Will you love me forever/Let me sleep on it' duet section going full tilt.\n\n\"Today was really special,\" she said.\n\n\"It was surreally amazing,\" I said, not wanting to get out of the car.\n\n\"You should give me your number,\" she said.\n\nI gave it to her, and she said, \"For the rest of today, we should only text each other questions and answers about each other and ourselves.\"\n\n\"Okay,\" I said, liking the sound of this game.\n\n\"Nothing serious, let's just have fun with it,\" she specified.\n\n\"I like it,\" I nodded.\n\nShe leaned in and kissed me just once more. \"And I like you.\"\n\n\"I like you too,\" I said, some more fireworks shooting off inside me.\n\n\"Until tomorrow, then,\" she said, looking as sad about my leaving as I was to leave.\n\n\"Until tomorrow, yes,\" I agreed, and I briefly kissed her one last time before reluctantly getting out of the car.\n\nI didn't even get into the house before I received her first text: What's your favourite 80s song?\"\n\nI responded playfully just before entering the house: You need to guess. It's a one hit wonder.\n\nShe texted again a minute later, likely paused at a red light: Our House?\n\nI texted back, realizing she could be guessing for an eternity: That's a good one, but it's Wouldn't It be Good by Nick Kershaw.\n\nA couple minutes later she texted: Mine is a Prince song.\n\nI responded: That could be anything. 1999, When Doves Cry, or my favourite: Kiss.\n\nShe responded back five minutes later, while I'd been staring at my phone, waiting for it to ping: No, no and no... but after today, I may need to reconsider that last one.\n\nI texted: What is it then?\n\nShe responded: Purple Rain, although Let's Go Crazy is a close second, but when I'm feeling frisky, you can't deny the wickedness of Darling Nikki.\n\nI could feel my face flush again at the innuendo... Darling Nikki was a very naughty song. I responded, still feeling playful: Have you ever masturbated with a magazine?\n\nShe responded almost immediately: No personal questions for now.\n\nAs I went to type a response of apology, she texted again: Although I may have to tonight, with no magazine required : ).\n\nMy eyes went wide. My body began to sweat. My pussy again began wanting some attention. I erased the initial apology I'd begun and responded instead, taking more than a couple of minutes to decide what on earth to write, before I sent the weakest of responses: Me too!\n\nShe sent a couple minutes later: I'm home now.\n\nOver the next few hours, we asked each other dozens of questions:\n\nWe both loved Queen, especially Bohemian Rhapsody, although she disagreed with me, thinking the 80s Queen was better than the 70s Queen.\n\nHer favourite snack food was ice cream, and mine was cookies (any kind, really).\n\nWe both chose green as a favourite colour (she mentioned my green eyes, hers were blue). Her second choice was pink, and mine purple.\n\nShe'd traveled lots, I'd done almost none... her favourite place to visit was Italy, while that was the country I most wanted to go to... partly because of Roman Holiday, partly because I loved Italian food, and partly for the history.\n\nShe planned to major in drama; I was going for law.\n\nHer favourite 80s movie was Pretty in Pink, and mine was another John Hughes movie Sixteen Candles, which I got away with by refusing to judge it based on today's moral standards. (The moment the Thompson Twins song 'If You Were Here' starts playing, I still get warm fuzzies all over).\n\nHer favourite designer was not surprisingly Hubert de Givenchy, who'd worked with Audrey Hepburn... while he was a close second to mine: Coco Chanel.\n\nWe talked more about music, more movies, classes, teachers, shoes, food, and so much more... it was so much fun... so liberating, and yet so offhandedly personal.\n\nWe agreed Sandra Bullock was awesome. We both loved The Proposal, While You Were Sleeping, Miss Congeniality, and The Blind Side, even though I didn't like football at all. Our only significant difference in tastes was that I loved Bird Box, while she stopped watching it five minutes in.\n\nIt was the perfect night, and it flew by like no other one had.\n\nOur final few texts were much more tentative. She sent: I had a lot of fun today and tonight.\n\nI responded: Me too. Best day and night ever.\n\nShe responded: Me too. But I have to ask a favour.\n\nI replied: Anything.\n\nShe said: I hate to say this, but for the time being this wonderfulness needs to stay between just us.\n\nI responded, wanting to show my understanding: I agree wholeheartedly.\n\nShe replied: Thanks, Bailey.\n\nI responded: Thank *you*, Beth.\n\nWe both said goodnight, and after I responded to a call from Jamie... who was super worried about me... until I let her know it had turned out okay... even though I couldn't tell her what I really wanted to... and then I ended up in bed... with my eyes closed... slowly rubbing my pussy.\n\nNow I wasn't some prude... I masturbated... from time to time, anyway... although it was usually just for stress release... I'd never really masturbated while daydreaming about a person... neither male nor female.\n\nBut that night I enjoyed a slow rising orgasm while I simply recalled my time today with Beth. I didn't know what we were or weren't... although I hoped we could explore our feelings some more... and one thing was for certain, after spending one day with her, I knew what I was sexually... or I knew what I wanted to be... and even closer to what felt like the truth, at least to my truth, my lack of a sex drive now made sense. I was a lesbian... or I guess just a wannabe lesbian.\n\nInternally, I'd felt more and stronger emotions today than I had before in my entire life. The sparks of her touches, the warmth of her looks, and the beauty of her smiles, all had brought sensations of pleasure and contentment to me in ways I'd never felt before.\n\nI didn't know if I was in love. At eighteen, and never having had any feelings like this before, how could I know? Yet, it was definitely something special. I already missed her.\n\nAs I rubbed myself, I replayed her touch, her soft lips, the way she looked at me, the way she made me feel... and when my orgasm struck, it was unlike any of my previous ones... the rest were no more than activities for the sole purpose of getting off and relaxing my brain and my body a little (I'm told I can be a little high strung!) ... but tonight's orgasm was about someone... and thus it meant so much more.\n\nAs I lay there in the afterglow of my orgasm, I was both excited and nervous about the upcoming day... I had no idea what lay ahead, but for the first time ever, I was looking forward to school for reasons other than earning good grades and thus paving the way to get the hell out of this backwards town.\n\n.....\n\nThe next morning for the first time ever, I couldn't decide what to wear. I always put some thought into my outfits, but only for myself, and not to impress or to be recognized by anyone at school. But today was different. Today I was dressing with a purpose... I was dressing solely to please one person... Beth.\n\nI'd already decided what I was wearing underneath my dress or skirt... my only garter-belt with sheer beige, almost nude shade, stockings with Cuban heels and sexy seams down the back of the legs. I just knew Beth would like those, even though I wasn't sure whether she'd have any opportunities to see them... especially the garter-belt... but whether or not, I still knew that my wearing such sexy lingerie gave me a quiet inner confidence.\n\nAfter thoughtfully considering nine outfits, I went with one I'd never worn to school before... a Hepburn-inspired style slim black dress that accentuated my chest in ways I never did... and although it was long enough to easily cover the lace-top stockings and garter-belt, it was a good six inches shorter than anything I usually wore to school.\n\nI considered changing my stockings, since black seemed like a more logical choice for the black dress, but I really wanted to wear those Cuban heel stockings, and the only colour I had them in was the beige pair... so I kept them on.\n\nI also applied a little makeup and lipstick to my face... which I never did for school.\n\nAt school... I definitely got a few looks... and when Jamie saw me, her eyes went wide.\n\n\"This is a new look,\" she smiled, looking me over and obviously impressed.\n\n\"You mean the dress?\" I asked.\n\n\"The dress, how short it is, and the makeup,\" she said, Jamie having pushed me to wear more makeup ever since middle school.\n\n\"Yeah, I guess,\" I said, wishing I could tell her all about yesterday, wishing I could explain why I was dressed up with more pizazz than usual.\n\n\"So what's with the sexy look?\" she asked.\n\n\"It's not sexy,\" I said.\n\n\"No? Just look around. Lots of the boys are staring at... you know,\" she said, as she pointedly glanced down to my big breasts, which were showcased for the first time at school ever... I normally wore outfits that downplayed my voluptuous breasts, not wanting to be judged in such a superficial way.\n\n\"Really?\" I asked, as I looked around and did indeed see some boys who usually didn't give me the time of day checking me out... or my chest, anyway.\n\n\"Well, I just felt like dressing up today,\" I said, which was at least partly true.\n\n\"Wow, you look amazing, Bailey,\" Beth said, appearing with her three best friends in tow.\n\n\"Thanks,\" I said, feeling my cheeks going instantly red... as in fire engine red... and my heart skipped a beat at the compliment.\n\n\"See ya,\" Beth said, giving a wave and heading off.\n\nAfter a few seconds of complete silence... while Jamie examined me closely while I resisted looking back at Beth, who was wearing a blue and black plaid skirt, mocha coloured pantyhose and a white blouse... she literally looked like she was a student attending a private school requiring uniforms... a look which I suddenly found very hot and sexy.\n\nTaking more than a good twenty seconds to say, since she paused after every single word, Jamie intoned, \"What... the... hell... was... that?\"\n\n\"What?\" I asked innocently... although I knew exactly what she was asking, and I wasn't much of an actor.\n\n\"What?\" she mocked. \"Beth going out of her way to greet you and to give you a compliment. Your flustered reaction. Your obvious struggle not to stare as she walked away. What do you mean, what?\"\n\n\"I don't know,\" I said, now avoiding eye contact.\n\n\"What happened between you two yesterday?\" she demanded.\n\n\"What do you mean?\" I said, opening my locker to still avoid any eye contact with her.\n\n\"You know exactly what I mean,\" she said. \"You're suddenly acting very strange.\"\n\n\"Why? I asked, as I opened my locker and stared fixedly into it. \"Because I wore something a little more provocative today?\"\n\n\"No, because your face went the brightest red I've ever seen because of a compliment from Beth,\" she said. Jamie was a very observant girl. She wanted to become a psychologist, and she was always analyzing people, although usually not me, since she already knew just about everything there was to know about me.\n\n\"I'm not used to receiving compliments,\" I said, which was true... so I wasn't lying.\n\n\"So you have nothing to tell me about yesterday after school or that inconsequential little exchange just now?\" she demanded, looking both accusatory and a little hurt.\n\n\"No, I don't think so,\" I said, feeling squirmingly guilty, since we always told each other everything... but how could I tell her this, even though I was desperate to tell someone, and who'd be better to tell than her? My brand new feelings were overwhelming me... confusing me... and using her for a sounding board to bounce these feelings off of would have been super nice.\n\n\"Fine,\" she snarked in a way that was clearly not fine, and she stormed off.\n\nI sighed as I closed my locker and headed to class.\n\nMy first period class was History, and neither Beth nor Jamie were in that class, since they were both in Psychology.\n\nTwenty minutes into the class, my phone vibrated... so I slyly checked it... I seldom received texts during classes, since my friends knew I wouldn't respond; I was very serious about my studies, and my parents worked, so if they texted that was a bad sign... the last time Mom had texted me during a class was to ask me to come home instantly, whereupon I learned my grandmother had passed... so I checked it. It was from Beth, saying: So sorry to ask, but I need to see you in the cheerleader's change room right now! Please?\n\nMy eyes went wide.\n\nMy cheeks flushed.\n\nMy entire body warmed with excitement.\n\nI shot my hand up and blurted out. \"Mrs. Lloyd, may I please go to the washroom?\"\n\n\"You may,\" she permitted.\n\n\"Thank you,\" I replied, before I walked out and headed towards a room I'd never been in before. Without pausing my hurried strides, I texted: On my way.\n\nThe school wasn't that large, so a minute later I'd reached the door. I looked around and saw no one in the hallway, so I furtively entered, feeling like I was breaking in... feeling both excited and terrified.\n\nBeth was waiting for me right inside the door. She closed it behind me, locked it, pushed me against the wall and began kissing me.\n\nI melted into her.\n\nI kissed her back with the same urgency as she was kissing me... which was way different from yesterday's tender, tentative and intimate kisses.\n\nIt lasted a minute... maybe more... before she broke away, when I would never have broken that kiss! It had my entire body on fire...\n\n\"I'm so sorry to be so needy, but I just couldn't resist,\" she apologised, vulnerability all over her face and even apparent in her shoulders, \"you just look so amazing today!\"\n\n\"I do?\" I asked, feeling overwhelmed from being targeted by such desperate attention and flattery... since the only flattery I usually received was for my brains or my charity work.",
        "\"What do you mean, 'I do'?\" she questioned. \"You have to know what you're doing to me!\"\n\n\"No, I really don't,\" I said, noticing her cheeks were red too... was I making her as flustered as she was making me? Was that even possible?\n\n\"You really don't know how hot and sexy you are, do you?\" she asked, seeming to get a grip on herself and realize how bewildered I was.\n\n\"Hot? Sexy? No one has ever used either of those terms to describe me,\" I said helplessly.\n\n\"Never? Well, that can only be because boys are shallow and stupid,\" she said, gripping my shoulders and pushing herself away from me slightly, so she could look me over with obvious admiration. \"Although I'm sure you're about to start getting some attention, since today you've just revealed to every horny boy around that you have huge, perfect breasts.\"\n\n\"I-I-I o-only wanted to let you know how much I...\" I stammered awkwardly, and then stammered some more, \"I-I-I mean I....\"\n\n\"Did you dress all sexy and mouth-watering like that for me?\" Beth asked. I was still leaning against the wall, and she was once again so close to me I could feel her hot breaths.\n\n\"Yes,\" I trembled. \"I sure wouldn't do it for any boys around here.\"\n\n\"Then you truly have no idea about the impact you're having on me right now?\" Beth asked, trying to process her feelings just like I was.\n\n\"I'm beginning to catch on, but not really, no. I mean you're so gorgeous, inside and out... but... Please just tell me,\" I said, or rather begged, wanting to hear it from her... really needing to be convinced.\n\n\"I'll try,\" she agreed. \"I mean I always knew I liked you. You're so smart, confident and sexy... but I've never felt like this about anyone!\"\n\n\"Like what?\" I asked.\n\n\"I don't know,\" she said. \"I just want to kiss you, to be with you.\"\n\n\"I want to kiss you and be with you too,\" I told her, every word she was saying a mirror reflection of my own feelings... with every word, she was making me feel so desired...\n\nAnd again, her lips were securely against mine.\n\nWe kissed for a few minutes... never allowing our lips to break contact.\n\nAnd then when her tongue parted my lips... I replicated her actions.\n\nOur tongues explored each other's mouths in an exotic form of dancing... an intimacy I didn't know could be found from kissing... not that I had any meaningful experience.\n\nAs we kissed, I felt dampness entering my panties... my passion so intense I just gave in to the intimacy, as my body welcomed the pleasure that resulted.\n\nHer hands went under my dress and to my ass... where she discovered I was again not wearing pantyhose... and as her hands roamed... feeling so amazing in their meandering exploration of my body... and she also discovered I was wearing a garter.\n\n\"Well aren't you full of surprises, you little vixen.\" she remarked, as she broke our kiss and kissed my neck instead.\n\n\"I dressed like this for you,\" I moaned, as her hot breaths sent shivers of pleasure throughout my body.\n\n\"Knowing that makes me feel so hot,\" she said. Her lips were on my ear, and she tugged it gently.\n\n\"Ooooooooh,\" I moaned, as she was driving me wild and making my pussy dampen even further.\n\n\"The things I want to do to you...\" she said incompletely, as she returned her lips to mine and kissed me some more.\n\nWhen she broke the kiss a minute later she said, \"I could do this all day, but we should both get back to class.\"\n\n\"Yeah, I suppose,\" I said, knowing she was right... I'd been gone at least ten minutes... but I too didn't want this... t\u00eate-\u00e0-t\u00eate, I guess you could call it... to end.\n\n\"But I just had to see you,\" she said.\n\n\"I'm so happy you did,\" I said. I then said worriedly, \"But I don't know how long I can hide this from Jamie. She noticed my frazzled reaction to your compliment earlier, interrogated me, could tell I was lying, and then she stormed off.\"\n\n\"I know she's been your best friend like forever. Do you trust her?\" she asked with a slight look of concern.\n\n\"With my life,\" I said.\n\n\"Think she could keep our secret?\"\n\n\"Yes, absolutely.\"\n\n\"I trust you,\" Beth said. \"So if you're confident she can keep our secret until we're ready to come out, I'm okay with her knowing as much as you decide to tell her.\"\n\n\"You are?\" I asked, realizing the permission she'd just given me implied she was willing for me to share whatever our relationship might become in the future with Jamie as well.\n\n\"Yes,\" Beth nodded. \"I have a couple of friends who don't live around here who know my secret, so I can certainly understand your wish to share yours with your long-time best friend.\" I'd known Jamie since before kindergarten, and Beth almost as long, although rather distantly until yesterday, so it was no surprise she was aware of how close Jamie and I had always been with each other.\n\n\"I really do want to keep her in the loop,\" I assured her. \"The past day, or not even a day yet, has been like a whirlwind.\"\n\n\"A good whirlwind?\" she asked playfully.\n\n\"The best,\" I said.\n\n\"So may I make something official?\" she asked.\n\n\"Um, sure I guess,\" I said, unsure of where she was going with this new tack.\n\n\"Will you be my secret girlfriend?\"\n\n\"Yes!\" I agreed with a girlish squeal, likely a little too enthusiastically.\n\n\"Awesome,\" she squealed back, fully matching my enthusiasm. She kissed me again and said, \"I'll go out first to check the hallway. If I don't text you, follow me out in fifteen seconds.\"\n\n\"Okay,\" I nodded.\n\n\"Later, girlfriend,\" she grinned, kissing me one last time. \"And I'm happy I can say that literally!\"\n\n\"Later, literal girlfriend,\" I grinned back, the noun feeling so natural on my lips.\n\nShe left... then fifteen seconds later I left, and returned to class, surfing on a high I can't even begin to describe.\n\nOnce the bell rang, I headed to tutorial.\n\nJamie and I both had a tutorial period next that we were using to apply to various colleges, and to write resum\u00e9 after resum\u00e9, since each school was different enough from the others that we weren't able to write any one-size-fits-all papers.\n\nI walked into the library and Jamie breathed quietly into my face, displaying a mood that wasn't open for any discussion, \"We're going to the washroom. Right. Now!\"\n\n\"Okay,\" I agreed readily, happy she was insisting upon continuing her interrogation, since I was now allowed to tell her the truth.\n\nOnce we were in the bathroom and Jamie had set out the bathroom's Closed for Cleaning sign, which we'd done on a few other occasions when we wanted to talk privately... although all the other times it was about Jamie's relationships... sometimes good, sometimes bad.\n\n\"Spill the beans,\" she demanded, while she went and pushed all three stall doors open to make sure no one else was with us.\n\n\"I will. But first you have to promise you will never utter a word about this to anyone,\" I said in a stern voice.\n\n\"That goes without saying; you know I wouldn't,\" she objected.\n\n\"Ordinarily that would be good enough. But this is an entirely new level of secret,\" I explained.\n\n\"Okay, I swear upon my mother's grave, even though she's still alive and well, I will never, ever, 'utter' a word about whatever you're about to tell me to another living soul. So there, it's official. So just tell me already!\" she said.\n\n\"Beth is my girlfriend,\" I blurted out succinctly.\n\n\"What?\" she whisper-bellowed, this revelation likely not among the top billion possible things she thought would come out of my mouth.\n\n\"I'm sorry I couldn't tell you before, but she'd sworn me to secrecy. But now she's given me permission to share our secret with you, and only with you, so I can tell you whatever you want to know.\"\n\n\"All this cloak and dagger stuff sounds really serious! Is it?\" she asked.\n\n\"Well, we haven't talked about going on any dates, but she did ask me kind of officially to be her secret girlfriend, I said yes, and then we kissed on it before we had to go back to our classes,\" I explained.\n\n\"Beth Prince,\" she said. \"Cheerleader. Most popular girl in school. Gorgeous.\"\n\n\"Yes.\"\n\n\"Beth Prince asked you to be her girlfriend?\" she asked not really as a question, but processing this outrageous news.\n\n\"Yes.\"\n\n\"The Beth who's already dating a college boy.\"\n\n\"Yes, but that isn't what it seems.\"\n\n\"How? When? I mean, I didn't even know you were into girls,\" she said. \"Not that there's anything wrong with that,\" she hastened to add.\n\nSo I told her everything that had happened yesterday and today, including as much detail as I could recall through the near delirium I'd been experiencing.\n\nShe listened, asked a few questions for clarifications, and once she was up to date with the lengthy makeout session in the cheerleader's dressing room and the details of how Beth had made us 'official', she asked, \"And it never occurred to you that all this might be some elaborate setup to humiliate you or something?\"\n\n\"Yes,\" I admitted. \"I mean the possibility did cross my mind for a moment, but you know Beth well enough to agree with me that she's never been involved in any of the silly shenanigans other people have gotten up to.\"\n\n\"Who uses the word 'shenanigans' anymore?\" she said, always teasing me for using words that nobody still used in this century.\n\n\"That's the only question you have after hearing all that?\" I asked.\n\n\"No, I really want to know: how do you feel about all this?\"\n\n\"Overwhelmed, confused, excited, bewildered, confused, apprehensive, and swamped with feelings I've never felt before!\"\n\n\"The word you're looking for is horny,\" she smiled wickedly.\n\n\"Well, she definitely makes my body feel all hot and bothered,\" I admitted, feeling so grateful to be able share all this with my best friend.\n\n\"I can tell.\"\n\n\"You can?\"\n\n\"Your cheeks are all red,\" she pointed out. \"I mean they were earlier this morning in the hallway when I called you out on it, but also right now.\"\n\n\"Oh,\" I said.\n\n\"Well, I'm so happy for you,\" she said.\n\n\"Thanks.\"\n\n\"And if she breaks your heart, I shall kick her ass,\" she added.\n\n\"I wouldn't expect anything less from my badass bestie,\" I laughed.\n\n\"So it turns out my best friend is a lesbian,\" she said. \"Cool.\"\n\n\"Or maybe I'm bi,\" I mentioned.\n\n\"I don't know about that,\" she said. \"You've always loved fish, so I guess I should have put two and two together.\"\n\n\"What does an entr\u00e9e have to do with anything?\" I asked... fish indeed being my favorite main course.\n\n\"You really are that sweet and innocent,\" she smiled fondly.\n\n\"Says the utterly worldly woman. You've had sex with what... one guy?\" I pointed out.\n\n\"I blew another guy once,\" she bragged.\n\n\"Yes, you're a truly experienced sexpot,\" I said, just the idea of sucking a dick always grossing me out.\n\n\"Well, I understand pussy is supposed to taste like fish,\" she said.\n\n\"Really?\" I asked, oddly the thought of tasting a pussy having never popped into my head during this entire wild less than twenty-four hours. I mean... if I was a lesbian... if I was dating a girl... which it appeared that I'd soon be doing... would I be required to lick her pussy? Would I want to? Would I be able to? Would she lick mine? Suddenly I was a rattled mess.\n\n\"I just terrified you, didn't I?\" she said, knowing me too well.\n\n\"I never even thought of that!\" I said, I imagine my face going pale white.\n\n\"Thought of what?\" she asked playfully, knowing full well what I meant.\n\n\"What lesbians do besides kiss each other,\" I said. \"And I suppose... fondle.\"\n\n\"Well, just imagine you're kissing her lips... just her other lips,\" Jamie suggested.\n\n\"You're not helping.\"\n\n\"Then just slide your tongue between them like you did with her mouth,\" Jamie continued, clearly enjoying teasing me.\n\n\"Oh God,\" I moaned, and not in a good way.\n\n\"If you do it well enough, she'll scream those exact words,\" she added.\n\n\"I hate you,\" I said, hitting her shoulder, suddenly feeling overwhelmed. Had Beth ever licked a pussy? She might have... she seemed so experienced. What if she wanted me to do that? And then what if I was no good?\n\n\"Don't worry, Bailey,\" Jamie said. \"You just landed a girlfriend less than an hour ago; I doubt you're moving on to cunnilingus all that quickly.\"\n\n\"Cunnilingus?\" I asked, that a five dollar SAT-sounding word I hadn't heard before.\n\n\"It has a few synonyms. Eating pussy, munching twat, carpet munching, boxed lunch, muff diving, licking the bean...\" she listed off. \"And my favourite: Eating your vegetables.\"\n\n\"Oh my God!\" I repeated, by this time exasperated.\n\n\"I think I might watch too much porn,\" she admitted.\n\n\"Ya think?\" I said sarcastically.\n\n\"And you should probably start watching some,\" she added.\n\n\"Suddenly I feel I'm in way over my head,\" I said.\n\n\"Head is another term for it; or face sitting, jewel munching...\" she continued.\n\n\"Please stop,\" I said, my head spinning.\n\n\"Okay, okay,\" she said. \"This is just too much fun.\"\n\n\"I'm happy you're having so much fun at my terrified expense,\" I said.\n\n\"Don't worry,\" she said. \"I'll get serious if you like. If Beth really likes you, she'll take everything at whatever pace you're comfortable with.\"\n\n\"I hope so,\" I said.\n\nAs we were getting ready to leave, I asked, \"Does it really taste like fish?\"\n\n\"According to many websites, yes,\" she said.\n\nSo instead of working on a college resum\u00e9, I used the rest of the period to research oral female sex on my iPad.\n\nI discovered that every woman has a smell down there which like fingerprints, was probably unique. Very few of us smell like fish, which was a term that mostly men described it as, and most women thought very little of them for doing do.\n\nThe more I read, the more I learned that for a girl with a 1580 SAT score, there was at least one fascinating subject I knew almost nothing about.\n\nLabia (the singular term being 'labium', which is seldom used, since they always come in pairs) come in all shapes and sizes.\n\nThere were various types and textures of pubic hair, and many women actually shave it all off... which I couldn't fathom being other than excessively painful.\n\nMany women are only able to reach orgasm through cunnilingus. (Or Australian kisses, or whistling through the wheatfield, or... Jamie, get out of my head!)\n\nMost women are self-conscious about their own scent and taste.\n\nThe clitoris, or clit, is a part of the pussy that is very sensitive, and it can trigger intense pleasure... (I'd never touched mine in any serious fashion during any of my masturbation activities.)\n\nMost women take 25-45 minutes to reach orgasm when they're with a partner.\n\nI read that you can spell out the alphabet with your tongue to stimulate and tease.... Although that likely won't get a woman off, since most of us need repetition, at least near the end, to reach an orgasm.\n\nI read that treating a pussy like you're licking an ice cream cone can be very effective... which made me smile, because I liked ice cream, and felt I was quite capable of doing that.\n\nThe bell rang, I reluctantly stopped researching, and Jamie asked, \"Learn anything?\"\n\n\"Yeah, I knew absolutely nothing about this,\" I confessed, as if she hadn't known already.\n\nShe smiled, \"But I'm sure you'll be an expert by tomorrow.\"\n\n\"You know me,\" I smiled, since there was no doubt I'd be researching cunnilingus all night. I wasn't sure it was something I'd ever do for real... or ever even want to do... but I was determined to be ready if the situation ever arose. I was not someone ever to do anything half-assed, not even if it was for the first time.\n\n.....\n\nAt lunch, I glanced over at Beth on a few occasions, and almost every time she was already looking at me.\n\nJamie whispered, \"She can't take her eyes off of you; I think she likes you, she really, really likes you.\"\n\n\"Shut up,\" I said, even though I was giddy with excitement that she indeed did 'like' me just as much as I 'liked' her.\n\n.....\n\nIn English class I glanced at Beth a few times, she caught my eyes a couple of those times, and I caught her once, too. With twenty minutes left in the period, Mr. Parker gave us some time to work with our 'Fated Partners', his description of our pairings now, so we could decide on our literary works... which Beth and I had done yesterday.\n\nBeth asked, \"Mr. Parker, may Bailey and I go to the library to discuss our project?\"\n\n\"Certainly, Ms. Prince,\" he agreed, people rarely refusing Beth anything.\n\nI followed her out, and we proceeded to the library. She led me to the back, and we sat down on opposite sides of a somewhat secluded table.\n\n\"How did the conversation with Jamie go?\" Beth asked right off the bat.\n\nI was surprised she opened with that, and that she even knew I'd already had the conversation. \"It went amazingly.\"\n\n\"She was okay with... us?\" she asked, looking a bit worried.\n\n\"At first she was skeptical, which I understood,\" I said, looking around to make sure there was no one within eavesdropping range. \"She pointed out I'd never once mentioned having any interest in girls, which was true, and she brought up a concern that you might be cruelly setting me up for a fall, and we quickly agreed that just wasn't who you are. And then once I'd told her everything and she saw how happy I was, she was very happy for me... congratulatory, even.\"\n\n\"Good,\" she nodded. \"I understand why she was skeptical. I mean I did kind of just start kissing you right out of the blue.\"\n\n\"I'm still processing all this, to be honest.\"\n\n\"Like processing as in coming up to speed, or questioning whether this relationship is heading someplace you want to go?\" she asked, sounding worried. Witnessing such vulnerability and insecurity in a girl who could get any boy she wanted, and was likely able to convince many girls to explore a same sex romance, actually relieved me, even though that's exactly what she'd just done with me. But if I had any reservations about Beth's sincerity, and frankly I did have just the slightest doubts deep down, since this was all a little too Lifetime Channel convenient, they dissipated from the look in her eyes and the tone of her voice.\n\n\"No, it's not that,\" I said, shaking my head. \"It's just...\" I wasn't sure how to put what I was feeling into words.\n\n\"Go ahead, you can tell me anything,\" she assured me, while still looking a little nervous.\n\n\"Well... I... I don't know anything about being a lesbian,\" I said.\n\nHer face changed, as her concern melted into a warm smile. \"There isn't anything to know. You just feel how you feel.\"\n\n\"What do you mean?\" I asked.\n\n\"Well, being a lesbian isn't any different from being straight, except for who you're attracted to,\" she explained.\n\n\"It isn't?\" I asked, my logical mind objecting that there were quite a few very obvious differences.\n\n\"Well, of course there are some devils in the details,\" she admitted. \"But in essence, everyone is the same. Lesbians find some women attractive, while straight people find some members of the opposite sex attractive.\"\n\n\"Well, obviously,\" I smiled.\n\n\"Feelings are feelings, whoever we are,\" she said. \"It's true that some hetero people will judge us because we don't fit into the traditional 'one man one woman' box of expectations passed down from older adults, religion and past beliefs. But I can't control how much or how little I like girls or boys. I can't ignore my feelings for you, because then I wouldn't be true to myself, and I'm through pretending to be something I'm not. Or more accurately, I'm almost through with that, since I don't yet feel brave enough to come out to everyone about who I am.\"\n\n\"I understand that, and I agree wholeheartedly,\" I said. \"And when you do feel it's time, I hope I'll feel brave enough to be standing right next to you and holding your hand. But what I'm struggling to come to grips with right now is the extent to which my feelings about you are consuming me, since I'm not used to that kind of roller coaster.\"",
        "\"Speaking clinically, what you're experiencing is either infatuation or lust,\" she said. \"Although categorizing things that neatly probably doesn't help you one whit.\"\n\n\"Maybe,\" I said. \"I guess what I'm trying to say is that twenty hours or so ago I was straight, and now I'm not, and that's more than a little confusing.\"\n\n\"Were you straight, or were you nonsexual?\" Beth asked.\n\n\"What do you mean?\"\n\n\"Well, straight means you like or liked boys. Some boys or men would make you feel the way I made you feel yesterday,\" she explained. \"Has a boy ever gotten butterflies fluttering in your stomach?\"\n\n\"No, never,\" I admitted.\n\n\"Has a boy ever made you melt?\" she asked, her foot suddenly rubbing my leg under the table.\n\n\"No,\" I trembled, just her touch making me flush.\n\n\"Has a boy ever gotten you all flustered like you are right now?\" she asked, her foot moving up my calf ever so slowly.\n\n\"No,\" I admitted again.\n\n\"So maybe you were never straight at all,\" she concluded.\n\nMaybe that's true,\" I said, her logic actually making lots of sense. I had concluded the reason I didn't like any boys around here was because they were all insipid fools... but I never got excited by male celebrities either, and all my favourite actors were actresses. Only now were the puzzle pieces all coming together... maybe I'd never been straight!\n\n\"How's it going?\" Mr. Parker asked out of nowhere, startling both of us.\n\nBeth's foot moved away from me, although it was unlikely he could have seen it from the direction he was approaching us.\n\n\"Good,\" Beth answered for us.\n\n\"What work have you chosen?\"\n\n\"Hamlet,\" Beth answered.\n\n\"Good choice,\" he said. \"Any idea of a plot?\"\n\n\"Oh, we don't have any dialogue on paper yet, but we have something delicious planned,\" Beth said, her foot brazenly returning to my leg.\n\n\"I can't wait,\" he said.\n\n\"It will be epic,\" Beth promised, and I assumed she'd decided we were going forward with the lesbian idea she'd described yesterday, even though I'd expressed some reservations about the idea, which by now had grown some.\n\n\"Cool,\" he said, like only a young teacher could get away with.\n\nHe left, and I asked, \"Are we really going to do what we talked about?\"\n\n\"Why not?\" she shrugged.\n\n\"Oh, I don't know; how about complete humiliation?\" I said.\n\n\"I don't think it will be like that at all,\" she said. \"I think it will be the two of us triumphantly claiming our sexuality.\"\n\n\"What do you mean?\"\n\n\"Well, if you still feel about me the way I feel about you,\" she said, her foot now resting on mine...once again that vulnerability showing up in her tone... \"Let's come out as a couple during the performance.\"\n\n\"Really?\" I asked, two polar opposite emotions instantly going to battle in my head. On the one hand, she was willing to out herself as a lesbian and as my girlfriend in front of the class, and thereafter be my girlfriend in public. Which could indeed be triumphant. But on the other hand, although I'd always told myself I didn't care about what other people thought about me, and especially my peers, coming out as a lesbian in this small and judgemental community was fraught with risk.\n\n\"If you're uncomfortable, we won't do it,\" she said, sensing my apprehension.\n\n\"Well maybe I am too uncomfortable, but maybe I can get past it; so let's not rush into this decision. But to be clear: you're saying you'd be happy to reveal to the entire school that we're a couple?\" I asked, the idea that I could hold her hand in public, that I wouldn't have to hide my feelings anymore (since today had been exhausting), was very appealing, and I could quite possibly override my fear of being judged for it, which after only a few seconds was already fading... since I couldn't afford to bow to what other people thought, if I wanted to be me.\n\n\"Yes, I'd be very happy to do that; it would be scary, but worth it,\" she nodded, her eyes shiny with just the hint of welling tears.\n\n\"So I'm not the only one who'd find it challenging. That's reassuring, actually. But what about your boyfriend?\" I asked.\n\n\"Frank will understand,\" she said. \"Neither one of us is emotionally invested in the other, we're just long time friends, like I said. And I can't pretend to be someone I'm not any longer. I won't.\"\n\nThe bell rang.\n\n\"Well, think about it,\" she said, as her foot moved away and she stood up.\n\n\"I will,\" I nodded. \"And very seriously, too. I'm not taking this at all lightly.\"\n\n\"I'll text you tonight after practice,\" she said, since she had cheerleading practice after school.\n\n\"Okay,\" I said, as she headed out, leaving me once again with my head spinning in confusion. One day with Beth, and everything was different.\n\nA single kiss yesterday had been all it took to put the ball in motion, and my heart spinning.\n\nA single touch had confirmed my feelings, and sent my emotions into turmoil.\n\nAnd a single day later, I understood how my life until yesterday had been one of living in the shadows, focusing only on my academics, and dying just to get out of here... but now my black and white world had turned into a swirling rainbow of bright colours. It was just as scary as it was exciting.\n\nA day ago my life was simple, and now it was complex.\n\nA day ago my life was boring, and now it was exciting.\n\nA day ago I was straight, or at least I'd thought I was, and now I was a lesbian, or at least I thought I was.\n\nLiving in chaos wasn't an idea I'd ever been comfortable with... it was way too... complex, exciting and... unpredictable.\n\n.....\n\nThat night after supper, just as I was finishing my homework... I received a text from Beth. And for the next hour we texted back and forth, continuing getting to know each other. Not playfully like the previous night, although there were some really cute moments, but somewhat delving into both of our deeper feelings, or at least to the extent we were each able to face up to our own demons and type them into a keyboard. Everyone has major blind spots about themselves, and we both realized we were no exceptions to that, so it would take us some time and some mental effort for us to arrive at where we wanted to go.\n\nShe also repeated that if I wasn't comfortable, we wouldn't out each other in class or anywhere else, and she was fine with our taking it slow if that was what I needed. She also admitted once again how she too was looking at our coming out as a challenge, so her offer might not be 100% selfless if she was being honest with herself, which she was trying to be.\n\nI told her I appreciated all of that, and that I thought I just needed some time to process everything, and then I could see where I ended up. We both agreed, somewhat tearfully on both of our parts I believe, that ending our burgeoning relationship wasn't an option.\n\nShe eventually wished me a good night, which made me feel warm all over, and once I was done texting her... as well as putting the finishing touches on my homework... I resumed my research on being a lesbian.\n\nI first took a quick-ten quiz called 'Am I Lesbian, Bi or Straight', where to my surprise, I scored as bisexual.\n\nThe next test said I was a lesbian, and that I 'prefer to be in the company of people of the same sex'.\n\nIn another quiz I scored 83% homosexual.\n\nI was also labeled a 'coffee shop lesbian', whatever that means.\n\nThe second test said I was 'Definitely a Lesbian' with the two words capitalized. It then added: 'And it's probably not a phase. You're clearly not attracted to men, and it's almost certain you never will be, if you're not by now.'\n\nA couple other quizzes also confirmed I was a lesbian, or maybe just lesbian-curious... which since I was researching about whether I was a lesbian or not, made sense.\n\nI returned to the website I'd looked at briefly at school, doing what I always did when I didn't know enough about something... I researched it.\n\nThis time I was researching how to eat a pussy.\n\nFirst step it said, was to understand the anatomy... which, oddly considering I was female, I didn't know as much about as I'd thought.\n\nFor example, I had no idea the clitoris was the most important location when going down on a woman, since it's very sensitive, and it transmits pleasure to the entire body.\n\nThe labia are hit and miss aspects of the vulva. The sensitivity of the labia varies from woman to woman. For some women their stimulation can drive them wild, and for other women it has little or no impact on their pleasure.\n\nI was a little overwhelmed when I discovered the anus has an enormous amount of nerve endings that can be quite pleasurable for a woman (or a man). This shocked me to the core. Anal sex could be pleasurable? Really?\n\nI was learning a lot, and unlike many learning curves, many of the facts I was uncovering made instant sense. As I read about the g-spot, I became even more fascinated. It's a complete enigma. For starters, it's inside the vagina. Plus, if one touches it properly, it accesses the clitoris internally. How is that even possible? To make things more complex, it isn't easy to find, and similar to the clitoris itself, it only feels pleasurable if the woman is already aroused.\n\nThe overwhelming complexity of the inside of a vagina continued when I read about the cervix. The cervix is also very sensitive, but it can have very different reactions in different women. Some women love having their cervix stimulated, while others actually find it painful.\n\nAs I continued learning (and thus generating more and more insecurity about whether actually pleasuring a woman was too complicated for me to ever succeed at)... I learned something else new: there was something called an A-spot. (I wondered if there were B C and D spots too.) The A-spot was deep inside the vagina and would likely need a dildo to reach (or one of those freakishly endowed porn stars), since it was so deep inside.\n\nAs I continued reading, the next part made much more sense to me. To please a woman fully, you needed to build her up. Start slowly... with kisses... soft touches... kiss her breasts... slowly explore your way down her body... trying to visit as many of the woman's many erogenous zones as possible.\n\nWhen you arrive at the woman's pussy... continue taking your time. Kiss her thighs. Tease her. Make her want it. Make her beg.\n\nTease her some more by teasing the clit over the panties... use both your tongue and your fingers.\n\nOkay, this section was far more encouraging: I wouldn't need to do this perfectly while remembering all those anatomical elements, I'd only need to do it well. It wasn't rocket science, just a highly nuanced playground. Not intellect so much as following my instincts, and being sensitive to the woman's (hopefully Beth's) tells.\n\nAs I continued reading, I focused on the two principal versions of oral stimulation. I felt I was being rather presumptuous to assume I would one day be performing oral sex on Beth, yet if and when the time came, I wanted to be prepared.\n\nThe two versions were called The Pancake and The Vortex. The geek in me enjoyed these choices, since pancakes were my favorite breakfast, and vortex was, of course, a scientific term.\n\nI studied The Pancake first.\n\nIt was quite simple. Stick out your tongue, allow it to drape over your chin, and relax. Then simply make it wide and flat, just like a pancake, LOL.\n\nI kept reading. Start at the bottom of the vulva, making sure your tongue is covered with saliva, then slowly move your head upwards until the tip of your tongue passes gently over the clit.\n\nThat seemed eminently doable. Focus on using your head instead of your tongue. Repeat over and over.\n\nBy keeping the tongue wide, you can cover a wide expanse of the vulva... thus delivering maximum stimulation. You can do this fast or slow, depending upon your inclination at the moment... a long, slow burn, or an aggressive attack leading to a quicker (but possibly less intense) orgasm.\n\nThen I read about The Vortex, which was a completely different strategy. Make an 'O' shape with your lips that's slightly larger than the clit (which is almost always tiny). Be sure your lips are covered in saliva, and place your lips around the clit. Then gently suck on it.\n\nThe easiest way to do this is to maintain a constant level of suction. But you may also provide a variety of sucking and releasing.\n\nI figured I could do that... and then I discovered there were dozens of other techniques available. I read through them all.\n\nI was fascinated, but also returned to feeling overwhelmed.\n\nUse a finger.\n\nFind the g-spot.\n\nTease her anal orifice.\n\nThere were so many variations, each of them being particularly favoured depending upon the woman being pleasured.\n\nI then read a few of the many mistakes men make. Such as using some weird alphabet thing (which in an earlier article I'd read had been lauded), not listening to the woman (which was the most important aspect of all: paying close attention to her words, her moans, and how her body was... or wasn't... responding), being too rough (unless the woman wanted that), and hurrying: not taking his time.\n\nAfter all my reading, I googled lesbian porn, and watched it for over an hour... with headphones on of course, since my parents' bedroom wasn't all that far away from mine. The first one I watched was a crazy one where a girl was blindfolded... apparently it was her birthday... and girl after girl went down on her for a minute or so. It was wickedly hot, and it quickly had my pussy dripping.\n\nAfter a couple videos that just seemed not authentic at all, I tried watching some amateur ones that I felt were more authentic called 'I just ate in our new apartment', 'Girlfriend eats my pussy until I cum' (the idea of having Beth sitting on my face very intriguing), 'Eating her pussy from the back' (another intriguing position), 'Best friend goes down on me putting her mouth all over my wet pussy', 'eating my best friend while her boyfriend makes a store run' (watching the girl being eaten holding the other girl's head and moving her hips around was very hot, as were her moans).\n\nThen I found some 'best lesbian eating pussy compilations', which I watched for another hour while getting homier and hornier but resisted touching myself while I absorbed tons of mental research. Watching how the women ate the pussies, and also how the various women reacted to being pleasured, I felt more and more confident that I too could do some version of this when the time came.\n\nI orgasmed hard when I finally touched myself, focusing on my clit, and enjoyed an amazing orgasm.\n\nI had no idea when I might have the opportunity to do any of this... but I felt more prepared... and more excited to do it. If and when, of course.\n\n.....\n\nOver the next week, Beth and I discreetly spent some time together every day... after the weekend that is, while she was gone with her Mom on a trip to visit her grandfather. That said, we texted all the time, and she sent me a selfie of herself at a mall wearing a new pair of thigh high stockings.\n\nIt made my pussy tingle.\n\nOn Monday we made out in the cheerleader's room for over half an hour before school started. Her hand even went under my skirt, but instead of touching my desperately fevered pussy, she just rubbed my nylon-clad legs.\n\nOn Tuesday she drove us to her house again, where we wrote the entire script for our scene. It did indeed include a makeout scene (PG-rated), and we practiced it... a lot... and to make it more interesting, I played Ophelia and she played the maid... who was quite dominant in their relationship... just as I imagined ours might be if we ever got to that point.\n\nI'd been watching and reading a lot of lesbian porn and erotica, and while lots of it was a little too intense for me... the idea of Beth taking control, making all the first moves, was definitely how I imagined us proceeding.\n\nOn Wednesday I had a doctor's appointment, so I needed to leave school at 10:30. (My Mom was stopping by the school to drive me there.) Beth told me to tell my teacher it was actually 10:00, and we took the opportunity to meet in the cheerleaders dressing room again for a thirty-minute makeout session. Beth even went so far as to open my blouse, unclasp my bra and suck on my nipples... but it only lasted for a few seconds of burning lust, while I discovered my nipples seemed to have a direct connection with my pussy... when suddenly we heard a key opening the door to the hallway.\n\nI frantically did my blouse up, Beth tucking my bra in her handbag, and we were mostly respectable when the cheerleading coach walked in. \"Oh my... Beth, Bailey.\"\n\n\"Good morning, Coach Lane,\" Beth said, while I stood there speechless, with my cheeks as red as the fires of hell, and painfully aware that my hard nipples were poking against my white blouse.\n\n\"What are you two doing in here?\"\n\n\"Practicing our scene for our skit in English class next week,\" Beth said, which could be true, since there was a makeout scene in it. (Without any nipple sucking.)\n\n\"I see,\" Coach Lane said, studying me with an all-knowing look. \"Well, I suggest you two thespians head back to class, and that you give Bailey her bra back.\"\n\n\"Yes, Coach Lane,\" Beth agreed, and she handed me my bra right in front of the coach.\n\n\"Have a good day, ladies,\" Coach Lane said, and she walked past us and into her office.\n\n\"She already knows I'm a lesbian,\" Beth explained, as I put my bra back on, feeling completely humiliated.\n\n\"Then she knows I'm one too,\" I said.\n\n\"She's probably drawn that conclusion, yes,\" Beth said. \"But she won't say anything to anyone. She understands how difficult it is to be gay in this town.\"\n\n\"She does?\"\n\n\"She's gay too.\"\n\n\"Oh.\"\n\n\"She has a girlfriend who's a lawyer in Toronto,\" Beth said, and I was now properly dressed.\n\n\"Cool,\" I said, which I meant.\n\n\"Yes, and on another note, you're just so fucking hot I can't stop thinking of all the things I want to do to you,\" Beth said, with a lustful look in her eyes.\n\nSince someone up above must hate me, my phone rang, even though my heart was beating a million beats a second, \"It's my Mom. She must be outside, ready to pick me up\"\n\n\"Tomorrow, then,\" Beth said, kissing me hard, just once.\n\n\"Tomorrow,\" I agreed.\n\nThat night, all I did was watch lesbian porn and read lesbian erotica. I didn't touch my homework. I didn't talk to anyone, although I'd managed to say enough to my parents over supper to be polite. I just focused on learning how to become a better lesbian... since the look in Beth's eyes and the words she'd said had strongly implied we could soon be advancing past first base... or had her sucking my nipples been second base?\n\nThis, of course, made me google lesbian bases. According to the Urban Dictionary, we'd reached second base today. First base was, as I expected, kissing; second was at least one of us feeling up the other. Third base was passionate kissing here and there on the body. A home run included various possibilities: using a strap-on, scissoring, fingering or oral. Or, I assumed with an inner giggle, all of the above. I knew what all those terms were except scissoring, so I googled that too. After looking at some images, I realized I'd indeed seen that in a couple of porn videos... although I wondered whether it was an effective way of getting off, or just something that looked good for the camera.\n\nAnother orgasm... which I'd managed to delay for three hours... cascaded through me while I lost myself in the selfie Beth sent me on the weekend in a bra, panties and thigh high stockings... with the caption 'thinking of you'... God, she was perfect in every conceivable way!\n\nOn Thursday we asked to go to the library again when the class was given more time to work on our scenes, and Beth surprised me after slowly caressing my legs and even wandering higher up my thigh with her nylon-clad foot, before moving her foot directly onto my pussy, making my eyes go wide and an uncontrollable moan to escape me.",
        "I gazed helplessly into her eyes, filled with both bewilderment and excitement, as her hypnotic blue eyes never left me, staring back at me as she ever so slowly moved her toes in a circular motion. It instantly had my revved up libido (which was constantly revved up these days) on fire.\n\nBeth didn't say a word... she just looked at me intently... the slightest smile on her face... as she bestowed this secret, gentle pleasure upon me.\n\nWhen Mr. Parker arrived, unlike before, Beth didn't remove her foot, nor did she stop what she was doing while he asked, \"How are you two doing?\"\n\n\"Amazingly,\" Beth answered, speaking for us both, which she often did, and which I never minded her doing.\n\n\"Almost done?\" he asked.\n\n\"The script is done, but we're still ironing out a few details in our interpretation of it,\" Beth answered, her toes still driving me wild.\n\n\"Great,\" he said. \"So you two will definitely be ready to go on Tuesday.\"\n\n\"Yes, and we'd like to go first,\" Beth offered, making my eyes go wide again.\n\n\"Are you okay with that, Bailey?\" Mr. Parker asked, noticing my surprise at the offer.\n\n\"No worries about that,\" I said, and then feeling brazen and horny, a dangerous mix for a normally shy girl like me, \"and we're going to rock your world.\"\n\n\"You have me very curious,\" he said.\n\nI don't know why I said this next bit... horniness... shock value... to inform Beth I was up for whatever she had in mind...\"I'm quite curious too...\" I turned to Beth with a purposeful smile before turning back to Mr. Parker and continuing, \"...to see what our audience thinks of our version of Ophelia's deep, dark secret.\"\n\n\"She has a deep, dark secret, does she?\" Mr. Parker asked.\n\n\"Don't we all have some?\" Beth asked, as she pressed her entire foot against my wet, panty-clad crotch and rested it there.\n\nI let out a soft moan, which had Mr. Parker's eyes darting to me with concern. \"Are you okay, Ms. Patterson?\"\n\n\"Actually, I've never felt better in my life,\" I answered, as Beth ever so slowly moved her foot up and down.\n\n\"Well, I'll let you two get back to work,\" he said with just a hint of perplexity in his expression.\n\n\"Yes, like I said, we're still working out the details to make our scene as authentic as possible,\" Beth said mysteriously.\n\n\"Okay,\" he nodded, looking at me one more time before leaving.\n\nOnce we were alone again, I said, \"Oh my God, I can't believe I said what I said.\"\n\n\"Your pussy is really wet,\" Beth pointed out.\n\n\"Golly, I wonder why,\" I smiled, since she was still slowly teasing me.\n\n\"Is it the obvious... because I'm giving you a foot job under the table?\" Beth asked playfully.\n\n\"It's that, but also because all I want is be with you,\" I blurted out, and then worried I'd said too much. We'd only been secretly dating for just over a week... but only kind of, since we hadn't yet gone out on any dates... yet it felt like we knew each other inside and out by now... and that as far as I was concerned, she was the one for me.\n\n\"I feel the same way,\" she said, as she moved her foot away... leaving me at a fevered pitch... then stood up and walked around to me, briefly looked around, and then leaned down to kiss me thoroughly for an all-too-brief interlude. When she broke the kiss, she said, \"I'm completely intoxicated by you, Bailey.\"\n\n\"Ditto,\" I said, borrowing from a Demi Moore movie I knew she loved, from an earlier text exchange.\n\n.....\n\nFriday was a home basketball game... apparently the league final... although I had no clue, having never attended even a single basketball game. (I'd gone to a couple of football games so Jamie could admire the football players in their tight pants.)\n\nBut for obvious reasons, I couldn't miss this one. Beth and the other cheerleaders were wearing their uniforms... all day at school... all including pantyhose... which hadn't been the case all the other times... and I had to assume that was Beth's doing.\n\nBefore Beth I'd noticed the outfits, but that was it. I just didn't care. I wasn't really a school spirited person. But now... I definitely noticed.\n\nUnfortunately, or perhaps fortunately, given my desire to maintain my cool, I had two tests that day, so once I was at school I focused on them.\n\nBeth and I barely crossed paths, and in English class we watched a video... well, Mr. Parker played a video while I was rereading Beth's recent text: Come watch me at the game today, and then come back to my place? PS: My Mom won't be home!\n\nI responded Yes without hesitation, but was pondering the implications of what the night might bring. More kissing, just hanging out, schoolwork, some more second base perhaps, then maybe third base and maybe, just maybe, some variation of a Home Run. I was riddled with anxiety, mixed with excitement. I couldn't explain why, but I felt ready to explore our relationship at a deeper level. Or not, depending upon Beth's inclinations, which by now I felt very contented about trusting.\n\nI glanced over at Beth a few times during the video, but only caught her eye once. She smiled... which got my entire body warm. Just her smile made me melt.\n\nI told Jamie I was going to the basketball game after school, and she smiled and said all sing-song, \"Of course you are.\"\n\n\"Just supporting the school,\" I said.\n\n\"Sure, sure you are,\" she smiled knowingly. \"I'll just come along to keep an eye on you, shall I?\"\n\nI agreed that of course she could, although I'm pretty sure she knew as well as I did that I wouldn't be paying her much attention.\n\nDuring the entire game... which apparently we won with a last second basket, although I didn't see it because... I was watching Beth. Although all the screaming, the hugging and people going crazy all around me told me we had indeed won.\n\nEach time she looked towards me, seeming to be looking directly at me every time, and perhaps she was, my entire body warmed up.\n\n\"You two lovebirds won't be keeping your secret much longer if she keeps looking at you that way and you keep going all red every time,\" Jamie warned.\n\n\"No one but you and I know she's looking at me,\" I replied.\n\n\"I don't know,\" Jamie said. \"She's looking in this direction a lot.\"\n\n\"What can I say?\" I shrugged feeling a raw, sensual power I'd never felt before. \"I'm irresistible.\"\n\n\"Yeah, yeah,\" Jamie said, smiling widely, \"one crush, and you get all confident.\"\n\nThe game over, I realized we didn't actually have a plan for how I was getting to Beth's. I had my license, but no car.\n\nI was watching the celebrations from the sidelines, apparently this was a big win or something, with guys hugging guys, cheerleaders bouncing all around with their pom poms, and people leaving the bleachers to crowd onto the court.\n\nThen Beth turned directly at me from the court, and beckoned me down.\n\n\"Your princess beckons,\" Jamie said dryly (but not unkindly).\n\nI stood up.\n\n\"Don't do anything I wouldn't do,\" she teased.\n\nWith no one around us, since everyone else had gone down to the court, I said wickedly, feeling giddy with anticipation and confident in my newfound sexuality, \"That depends. Would you eat a pussy?\"\n\n\"Bailey!\" she gasped.\n\n\"Or maybe do some tribbing?\" I added with a wicked smile.\n\n\"I didn't think you even knew that word. What's gotten into you?\" Jamie continued her teasing, shaking her head, but with a broad smile on her face.\n\n\"Not a strap-on, that's for sure,\" I said, feeling free and brazen... my anticipation for what could lie immediately ahead leading me to say things (for Jamie's ears only) I never imagined I would.\n\n\"At least now I know what to get you for your birthday,\" she said, \"and fair warning, you'll need to unwrap in in private,\" as I began to head for the court, where compete complete excitement and chaos reigned.\n\nI arrived at the court, whereupon Beth grabbed me, hugged me and kissed me. On the lips. And not a peck, but a lingering, five-second kiss. In the middle of a crowd of people, most of whom knew us.\n\nJoey gasped loudly, \"Holy shit!\"\n\n\"I can't hide it anymore,\" Beth said. \"I'm done pretending.\"\n\nAnd with peers, teachers, parents, and seemingly half the town crowded around us in the packed gym, I said loudly and distinctly, as I looked teasingly at Joey with his stunned expression, \"Oh, just you wait until we get back to your place!\"\n\n\"No way,\" Joey groaned disappointedly (as if he'd ever had a chance at Beth), as I leaned in and kissed Beth in return.\n\nSome other people noticed, including Coach Lane who just gave me a happy smile, and a few cheerleaders, who seemed completely unfazed.\n\nBeth said, \"Let's go, then.\"\n\n'You're not coming to the victory party, Beth?\" Deidre, a fellow cheerleader asked pointedly, as Beth took my hand in hers... which felt as good as the kisses had.\n\n\"We may be arriving a bit late,\" Beth smiled.\n\n\"Hmmmmm-mmmmm,' Deidre smiled knowingly.\n\nJamie blurted out, startling me, \"Don't you dare hurt my best friend.\"\n\n\"Never,\" Beth said, giving my hand a squeeze as her fingers intertwined with mine... my entire body warm with acceptance, my head light with love, and my pussy tingling with anticipation... all based on my assumptions of what might be about to happen... and my hours of 'researching' lesbian porn and erotica.\n\nTwenty minutes later we were inside her house, having held hands but said very little during the drive home, just sang along to the pop songs playing on the radio... and when Katy Perry's 'I Kissed a Girl' came on, we both roared with laughter, and she kissed me at the next stoplight.\n\nWhen we'd arrived in her house, she'd closed the door and pushed my back against it, kissing me with an urgency nobody could fake. She wanted me as much as I wanted her. Her hands roamed over my hips, while mine grabbed her ass and pulled her even closer to me.\n\n\"I need you,\" she whispered, as she broke the kiss for a heartbeat.\n\n\"I need you too,\" I replied, wanting to be with her in every possible way.\n\nAfter a couple more minutes of kissing, she pulled back, looked directly into my eyes and said, \"You're just so beautiful, Bailey.\"\n\nMy entire body was hot with passion and lust, and I said, \"Nobody has ever told me that before.\"\n\n\"Then nobody has ever seen the real you,\" she said, as she reached her hands to the bottom of my dress and pulled it over my head.\n\nI shivered as I said, \"I don't think I've ever seen the real me before. I didn't even think such feelings were possible.\"\n\nBeth smiled as she slowly moved down my neck, \"Nothing is impossible. The word itself says 'I'm possible'!\"\n\n\"You sly minx,\" I trembled, as I now stood before her wearing only my bra, panties, garter-belt and stockings. \"Quoting Hepburn while you're seducing me.\"\n\n\"Am I the one who's seducing you?\" she asked, as she reached behind my back and unclasped my bra. \"It seems to me more like we've been seducing each other.\"\n\n\"I didn't think I was doing a very good job,\" I said, as my bra came off and my firm tits and hard nipples were suddenly free, visible, and confirming my excitement.\n\n\"Not true; you've been all I can think about,\" she said, as she planted her face within the valley of my flesh.\n\n\"Ditto,\" I said.\n\nShe splattered the inner slopes of my breasts with butterfly kisses as I trembled and felt the heat of passion coursing through my very being. Nothing had ever felt this good. My feelings usurped any of my academic successes... which seems obvious, but until my discovering Beth, that was where I'd found all my happiness.\n\n\"Are these hard because of me?\" she asked.\n\n\"No, I've really got the hots for Joey,\" I joked.\n\n\"You brat,\" she accused sweetly, as she swirled her tongue around my left nipple, without actually making contact with the needy nub.\n\n\"You're a brat too,\" I moaned, wanting to feel her lips and tongue on my hard nipple... knowing the ability my nipples had to zap pleasure directly into my needy pussy.\n\n\"Me? A brat?\" she asked, progressing to my other nipple and replicating the teasing swirl.\n\n\"Yes, my nipples are dying to be sucked by your luscious lips,\" I said with an urgency bordering on desperation.\n\n\"My lips are luscious?\"\n\n\"You have perfect lips,\" I said. \"For beautiful lips, speak only words of kindness,\" I added, another Hepburn quote.\n\n\"Mmmmmmmm,\" she said.\n\n\"And suck my nipples until I'm burning with lust,\" I added, not part of the original quote.\n\nBeth smiled and joked, \"I think Audrey would agree with that sentiment. And I'm sorry for talking dirty.\"\n\n\"I hope so,\" I said. \"Because that's definitely what I want to see those ruby red lips doing to my nipples right now. The sucking part; not rubbing sediment on them, thank you very much.\"\n\nBeth placed her tongue under my nipple and pancake-like, rolled it over it... making me moan loudly and tremble.\n\n\"Oh, you liked that, did you?\"\n\n\"Like is far from a strong enough verb,\" I replied.\n\n\"I love your breasts and nipples,\" she said, cupping them both, and taking my right nipple between her lips.\n\n\"Oh my God, that feels so good,\" I whimpered, as I moved my hand gently to the back of her head, just under her blonde ponytail.\n\n\"I want to make you feel good in every possible way,\" she said, as she thoroughly worshipped my nipple.\n\n\"Ditto,\" I replied weakly, her lavish treatment of my nipple sending wave after wave of pleasure through me...pleasure that easily surpassed anything I could ever do to myself.\n\nFor two, maybe three minutes, or perhaps a few eternities, since time was standing still, she worshipped both of my nipples, bathing them with lustful love, transforming me into a fevered, desperate woman.\n\nWhen she backed away, she looked at me and asked, \"Did you dress in this sexy lingerie for me?\"\n\n\"For you and me both,\" I answered, loving the lustful, admiring look she was awarding me.\n\n\"Just like everything else about you, it's perfect,\" she said.\n\n\"Says the perfect woman,\" I replied.\n\n\"Oh, I'm not perfect,\" she said. \"I'm just constantly judged on some superficial beauty.\"\n\n\"No,\" I said, moving to her, putting my hands on her waist, planning to take off her cheerleading sweater, \"I'm looking at the real you, and you're beautiful inside and out.\"\n\nI pulled her sweater over her head, and she trembled ever so slightly. \"I know this is probably going to sound ridiculous, but I need to say it.\"\n\n\"What do you need to say?\" I asked, as I dropped her sweater to the floor and looked into her vulnerable eyes.\n\n\"I think I love you, Bailey,\" she said.\n\nThe words warmed me to the core. I couldn't explain why I had such intense feelings for her, how just being anywhere near her made me flush... it had to be more than sexual attraction... and as she revealed her heart, it brought clarity to my own feelings. I smiled warmly and said, \"I love you too, Beth. I wasn't certain about it until this very moment, but that's what's been growing inside me since the moment of our very first kiss.\"\n\nShe pressed her lips against mine again, and after a minute of passionate kissing, our tongues dancing inside each other's mouths with lustful exploration, she took my hand and said, \"Let's go to my bedroom.\"\n\nI wordlessly followed her lead, just allowing whatever was about to happen to happen.\n\nIn the bedroom she pulled her skirt off, leaving her in just her bra and pantyhose, and to my surprise, no panties, her amazing ass showcased perfectly in the sheer, gleaming hosiery.\n\nAs she went to grab my hand, I protested, \"Hey girl, why are you still wearing a bra?\"\n\n\"You mean this bra?\" she asked, and she pulled it over her head, it being a sports bra, and tossed it at me.\n\n\"Yes, this bra,\" I smiled, tossing It haphazardly over my shoulder as I stared at her amazingly firm tits... which revealed her own excitement, her erect nipples beckoning me in.\n\nI moved to her, reached for her tits, and said, \"And of course these too are perfect.\"\n\n\"As are yours,\" she said, and as I bent down I didn't tease her like she had teased me... I just had to suck on that inviting nipple without delay. I sucked it between my lips and heard her moan... a sound that was the sexiest thing I'd ever heard... and knowing she was moaning because of me was incredibly fulfilling.\n\n\"Oh yes, Bailey,\" she moaned. In porn sometimes it's soft and sensual, sometimes passionate and intense, sometimes verbal and dominant and, of course, a wide variety of all of those... and each version turned me on for different reasons... but at the moment all I wanted was intimacy... to explore every part of her body... to literally make love to her. \"That feels so good.\"\n\nEncouraged by her reaction, I slid my tongue across her breast, to between her valley of flesh where a little sweat lingered, whereupon I mindlessly licked up the salty sweetness, licked my way up her other mountain slope, and took her other nipple into my mouth.\n\n\"Bailey,\" she moaned, as she brought her hand to my shoulder.\n\n\"Yes?\" I asked, as I sucked her nipple gently between my lips, and lathed my tongue across her nipple top.\n\n\"You're getting me all excited,\" she said.\n\n\"You've been getting me all excited since Day One,\" I said.\n\n\"I have?\"\n\n\"You rocked my world that day,\" I said, looking fiercely into her eyes... you made me feel things I'd never felt for... well... never before. You awakened a longing that's been driving me wild ever since the first moment your lips touched mine.\"\n\n\"If I've been doing that well already...\" she said, taking my hand, leading me to her bed, and playfully pushing me backwards onto it, \"...then let me really rock your world!\"\n\nShe hopped onto the bed, and we resumed our passionate kissing... although this time our hands roamed all over our almost-naked bodies. I squeezed her ass, and she squeezed mine. Our hands roamed down each other's legs and over each torsos... our eyes were closed, but we were curious explorers, using our hands and bodies to navigate each other's contours.\n\nI have no idea how long we remained in this intense and ever-changing, undulating embrace, before I was lying on my back with her knee pressed against my pussy, and I was moaning into her open mouth. I opened my eyes when she broke our most recent kiss and I saw her staring down at me. She said, \"I want to taste you.\"\n\n\"I've never done anything like this before,\" I said, even though I was sure she knew.\n\n\"I know you didn't do it deliberately, but thank you so much for waiting, so I could be your first,\" she said, and her hands went to my panties, and she slowly pulled them down and off.\n\n\"I'm thrilled you're the one to be my first. On the other hand, I've been imagining our doing things like this a lot lately,\" I said, parting my legs a little wider, without even realizing I was doing it.\n\n\"Ditto,\" she smiled, as she took my left foot into her hand and brought her lips to my toes.\n\nThis I wasn't expecting, as she took my pinkie toe and sucked it between her lips. It was so sensual, I let out a moan. \"That feels nice,\" I said.\n\n\"Just nice?\" she asked, as she moved to the second toe.\n\n\"It feels amazingly sensual,\" I corrected.\n\n\"That's better,\" she smiled, as she moved to each toe and replicated the soft wet kisses and licks.\n\nShe then silently moved her way up... kissing my ankle... my inner calf... my knee... my thigh... until I could feel her hot breath just above my pussy. I thought she was going to lick me then... which I badly wanted her to do... God, I was so horny... but she skipped over to my other thigh and then progressed down my leg, kissing her way down to my other foot... where she replicated her sensual focus on my toes.\n\n\"You're driving me wild,\" I moaned.\n\n\"That's the point,\" she smiled wickedly as she licked the sole of my foot... which tickled just a little.\n\nShe lay between my legs... ventured up to my face and kissed me... just once. Then slithered her tongue down my body between my tits... kissed my belly before her face was again inches away... less than that, really... from my desperate pussy.",
        "\"Please,\" I said, as I felt her hot breath directly on my pussy... making my legs twitch.\n\n\"Your pussy is so perfectly pretty,\" she said as she admired it.\n\n\"And you've set it on fire,\" I said.\n\n\"Then I guess I'd better do something about that,\" she said, and then she leaned down and... at last... I felt her tongue parting my pussy lips.\n\n\"Oh my God!\" I said rather loudly, since even though I'd imagined this moment, had read passages describing what it felt like to have your pussy licked... nothing can remotely prepare you for the actual sensation... it was somehow intense and sensual simultaneously.\n\n\"So delicious,\" Beth purred, as her tongue went up and down without touching my clit.\n\n\"I've never felt anything like this,\" I said, and I could feel my orgasm rising the instant her tongue made contact with me.\n\n\"Oh you just wait, baby,\" Beth promised as she wiggled her tongue between my very wet pussy lips.\n\n\"Ooooooooooooh,\" I moaned.\n\n\"God, I could eat you all night,\" she said.\n\n\"Then I take it we aren't going to the victory party,\" I said, as I enjoyed the powerful pleasure of her tongue.\n\n\"Mmmmmmmm,\" she responded, as she licked and licked me... the pleasure sending pleasure to places inside me I didn't know could even feel pleasure.\n\nShamefully, it wasn't even a minute before I could feel I was going to come. I warned, \"Sorry, but I'm going to come.\"\n\n\"Then come for me, my sexy girlfriend,\" she allowed, as she brought her lips and tongue to my clit and shook her head left and right repeatedly while licking with her tongue.\n\n\"Oh my God!\" I screamed, thankful her mother wasn't home, as I imagine my scream would have been heard in every room of the house, as my legs stiffened, my back arched, and I came so intensely I think I passed out for a few seconds... pleasure coursing through every crevice of my body... from the soles of my feet to the hair on my head.\n\nShe kept licking as I just came and came and came... so much wetness leaking out of me that I thought she might have broken my pussy.\n\nMy orgasm lasted longer than Beth had been pleasuring me, and I could feel a second orgasm already rising, even as the first one eventually began to dissipate.\n\n\"Oh Beth, it's my turn,\" I said.\n\n\"I can't wait, but I'll have to, since I'm not done yet,\" she said, and she slid two fingers inside my pussy and pumped her fingers in and out while licking my pussy and flicking my clit.\n\n\"Oh God, Beth, fuck!\" I moaned, even though I usually never swore out loud.\n\nBeth didn't say anything... she just fingered me... licked me... sucked on my clit... and as a second orgasm rose during the next few minutes... and it became imminent and inevitable... she found the elusive g-spot, and she tapped on it, and instantly I came again!\n\n\"Yessssssss!!\" I bellowed, while it seemed she was extracting not only all my come, but every vestige of energy in my body!\n\nShe pulled her fingers out, and lapped up as much of my cum as she could, while it flooded out of me.\n\n\"Jesus,\" I said weakly a minute or two later, as euphoria had swirled through me like a tornado touching down and refusing to leave.\n\n\"Fuck, Bailey, you taste so good,\" she said, as she kept licking and licking.\n\n\"That was really intense,\" I said, which was a major understatement, my head still light and feeling a little dazed.\n\nBeth's face finally appeared above mine, her lips shiny with my pussy juice, and she gasped, \"You really are amazing.\"\n\n\"Ditto times infinity,\" I said, which didn't make a lot of sense.\n\nHer face... was it disembodied? I couldn't tell... drifted down and kissed me... while I tasted myself ever so slightly... and I didn't taste at all like fish... more like persimmons, maybe? And for a couple of minutes we just kissed. Finally, I broke the kiss for the first time ever and said, \"now I want to go down on you.\"\n\n\"You don't have to,\" she demurred.\n\n\"True, but I want to,\" I said. Then I corrected myself, \"No, I need to.\"\n\nI pushed her off me, flipped her onto her back so that now it was my face gazing down upon hers, and for a period of time I just admired her. Then eventually, I spoke, saying, \"You're just so beautiful.\"\n\n\"You know, I've been told that hundreds of times... lots more than that, probably... and yet for the first time ever, I believe it when you say it,\" she said.\n\n\"Maybe that's because I mean it with all my heart,\" I said, pondering how everyone, regardless of their levels of beauty and wealth, is looking for the same thing... validation, and someone to love them unconditionally... which is what we all should deserve and receive.\n\n\"I know you do,\" she said, looking so gorgeous in her vulnerability.\n\nI kissed her. Gently. I then kissed her neck here and there several times. I moved down and took my time on both nipples. I swirled my tongue around her belly button, and kissed her firm tummy. I moved on to her pantyhose-clad pussy, brought my lips to hers, and kissed her through the silky fabric.\n\n\"Oh,\" she moaned, before I moved up a tad and sucked her clit through the sheer pantyhose. \"God!\" she added.\n\nI wanted to dive in... I wanted to try one of the strategies I'd read about... but I also wanted to worship her entire body. So I moved down and kissed every inch of her left inner leg all the way down to her red painted toenails... where I copied what she did to me... sucking each toe through the sheer, sweaty, salty hosiery.\n\n\"You don't have to do that,\" she said. \"I did it because I kind of have a foot fetish.\"\n\n\"There are lots of delicious things I don't have to do to you, but I still want to do them,\" I said, and I sucked and licked each individual toe, and then moved to her other foot. Five toes later, I worked my way back up her other leg, splattering her with over a hundred kisses.\n\nReaching her pussy again. I kissed it again. And I sucked on her clit through the pantyhose again.\n\nThen, a wicked idea forming in my head, I surprised her by flipping her onto her stomach and massaged her ass.\n\n\"Oh my, Bailey,\" she said, surprised I think, by my sudden and atypical aggressiveness.\n\n\"Such an amazing pantyhose-clad ass,\" I said. \"Surely you know by now I have a pantyhose fetish.\"\n\n\"We really are perfectly compatible,\" she said, as I bent down and licked between her ass cheeks... her salty sweat tasting so tantalizing on my tongue.\n\n\"You bad girl,\" she moaned.\n\n\"I want to be your bad girl,\" I said, and I licked and kissed her entire ass while I moved my hand beneath her to slowly rub her pussy as well.\n\n\"You're driving me crazy, Bailey,\" she moaned.\n\n\"Glad to hear it. What do you want me to do next?\" I asked.\n\n\"Please lick me, if you're willing,\" she asked tentatively, and there was that touching vulnerability again.\n\n\"Mmmmmmm,\" I said, flipping her back over and looking downwards into her eyes.\n\n\"I've never been so turned on in my life, Bailey,\" she said, looking up at me lustfully.\n\nGod, I loved when she said my name. I spread her legs, and in a rash moment of impulsiveness, I found the seam of her pantyhose and ripped it apart.\n\n\"Oh my,\" Beth gasped.\n\nFilled with a rush of adrenaline and on fire to please her, I dove between her legs, forgetting everything I'd read, and just did what came naturally.\n\nI licked.\n\nI probed.\n\nI explored.\n\nHer outside lips.\n\nHer inside ones.\n\nTracing my tongue around her clit.\n\nFlicking it.\n\nListening to her moan.\n\nHer taste was indescribable. Subtle. Just ever so slightly fruity. Wet.\n\n\"Don't stop, Bailey,\" she moaned, and her hand went to the back of my head, and just like in many of the porn clips I'd watched, she clutched me deeper into her wetness. Taking that as a request to become more aggressive, I took her clit between my lips, and I licked and sucked it with authority.\n\n\"Oh yes, Bailey, yes... that's it,\" she moaned, her hands frantically quivering on the back of my head... as she lifted up her ass... so I slid two fingers inside her, and before I even had time to try to find her g-spot, she declared, \"I'm coming, dearest,\" and then wetness gushed out of her, and I pulled my fingers out and drank the sweet cum that artesian welled out of her.\n\n\"Oh my God,\" Beth groaned a minute later, during which I'd never stopped licking. \"Get up here, you. Now!\"\n\nShe pulled me up, and we kissed passionately, while she wrapped her legs around my waist.\n\nWhen she broke the kiss, she said, \"That was fucking amazing.\"\n\n\"Good, because I really had no idea what I was doing,\" I said. \"I mean I read how to go down on a girl, but all that knowledge disappeared from my head the moment I was down there.\"\n\n\"There's nothing like active learning,\" she smiled, kissing me again.\n\nA minute later her phone rang. \"That will be everyone wondering where I am.\"\n\n\"Then you should answer it,\" I said.\n\n\"I'm only going if you come to hold my hand, and... do whatever,\" she stipulated.\n\n\"I've already come twice,\" I joked.\n\n\"And after the party, we can come back here and you can sleep over, and we'll add to that number,\" she said.\n\n\"Well, I do owe you at least one more,\" I said.\n\n\"Oh, you'll be doing that a lot from now on,\" she smiled, \"we both will,\" kissing me again before reluctantly getting off the bed and picking up the phone. \"Yeah, yeah, we're on our way,\" she said without any preamble.\n\nI admired her in the afterglow of her orgasm, while somehow she was able to look even more beautiful.\n\nWhen she hung up, she said, \"We'll go and just stay for a while.\"\n\n\"Whatever you want is just fine with me,\" I said, and knowing I was about to go to my first high school party, in the company of a girlfriend who was the most popular girl in the school, was pretty wild.\n\n\"Be careful what you offer, my wants are pretty wild and free,\" she warned.\n\n\"And my desire to please you is pretty intense and far out there,\" I shot back.\n\n\"Mmmmmmm,\" she said, coming back to the bed and kissing me.\n\nWe got dressed. She kept the ripped pantyhose on even though the damage was obvious, and just put her cheerleading outfit back on over them.\n\nAnd hand in hand, we headed out and walked to the party, which turned out to be only two blocks away.\n\nI wasn't sure how I'd be treated there... by her friends... by the jocks... by my peers... but it was surprisingly a lot like the movie Say Anything... where the main character discovers at a grad party that everyone at school is actually pretty cool... and while I didn't learn that... all the boys were still jerks... I learned that no one really minded that Beth and I were a couple... although a couple of guys joked how that was why they'd struck out with Beth. Beth, of course, playfully pointed out lots of personal flaws as to why else they'd struck out.\n\nWe held hands all night.\n\nKissed a couple of times.\n\nI played beer pong for the first time ever. Since it's just physics, I was very good at it.\n\nI discovered I kind of liked rum... and I hated beer. So very soon I was playing rum pong instead.\n\nAnd for the first time in my life, I felt that I fit in... which wasn't something I'd ever cared about... but in the moment I felt at peace... and smiled as I thought of another Hepburn quote: 'Life is a party. Dress like it.' Which was exactly what I was doing.\n\n....\n\nThat night I gave Beth three more orgasms, and she gave me two. I'd insisted we finish with equal counts.\n\nWe cuddled together, and we both drifted off to slumber in each other's arms, at peace with who we were, with each other as our lovers of choice, and with a future of endless possibilities, as I pondered how this had all started because of the Fate of a fishbowl.\n\nTHE END"
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "lesbian",
        "18-year-old",
        "nylons",
        "stockings",
        "pantyhose",
        "romantic",
        "romance",
        "love",
        "silkstockingslover",
        "ff"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/fate-of-the-fishbowl"
}