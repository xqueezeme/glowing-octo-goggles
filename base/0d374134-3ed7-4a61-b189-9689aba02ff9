{
    "title": "Nude Day Running Adventure",
    "pages": [
        "The smell of coffee roused her from her morning grogginess.\n\nRachel Gray stood in her kitchen, mug in hand, dressed in a long night shirt and frayed pink cotton panties, and nothing more. The tile floor felt cool against her bare feet. She thought about the day ahead.\n\nShe had taken the day off work. It was Wednesday, July 14, and she had her own special reason for taking the day off. She had not shared that reason with anyone else.\n\n\"I'm going to get naked today,\" she said softly, into her coffee.\n\n\"What'd you say, Mom?\" said Aaron, her son, loping into the kitchen unexpectedly behind her.\n\n\"Nothing,\" Rachel said, glad Aaron had not heard what she had said. Her hands shook, and the coffee almost spilled. That was close. \"Just talking to myself.\"\n\n\"Whatever,\" he replied. Rachel noticed he gave her a quick, furtive look like he was wondering whether Mom was losing it.\n\nRachel knew she had a habit of talking to herself. She had always had the habit, but she had been exercising it more since the divorce from Stan, her ex-husband, a year earlier.\n\nRachel refocused her attention away from her plans and toward helping Aaron get ready for the day. She made Aaron's breakfast, the usual: cereal and sausage and orange juice. Half an hour later he was out the door and on his way in the family car to a friend's vacation home at a lake two hours away. The trip was to be a post- high school graduation celebration for Aaron and his friends. Aaron would be there for several days with his buddies. Rachel didn't even want to think about what they were going to do, but she had no doubt it would involve alcohol and debauchery. The less she knew, the better.\n\nWith Aaron out of the house, Rachel realized that the nest truly was empty. When Aaron left for college, late in August, she would be all alone in the big house that she'd taken in the divorce settlement. Stan, a wealthy real estate developer, had bought a new house -- an even bigger one -- in another part of the city.\n\n\"Time for Mom to have some fun,\" Rachel said to herself over a second steaming cup of coffee.\n\nToday was the first day of Rachel's new life on her own, and it just so happened to be, of all things, Nude Day. She hadn't even heard of Nude Day -- had no idea there was such a thing -- until she saw something about it online two weeks earlier.\n\nRachel wasn't a nudist, or an exhibitionist, for that matter. Other than skinny-dipping once with friends in college, she'd never been nude in public. Stan would never approve of anything so brazen and inappropriate. It might jeopardize his reputation, which he prized above all other things, except maybe his Aston-Martin DB11.\n\nBut Stan was no longer in the picture, and her son was gone for several days, and Rachel keenly felt a new sense of freedom to do things differently.\n\nIt would start today.\n\n\"Game on,\" she said out loud, no longer concerned about anyone overhearing her.\n\nRachel pulled the night shirt off her and tossed it to the floor. Then she shucked off her panties. She stood nude in the kitchen.\n\nShe wanted to see herself. She walked from the kitchen to her bedroom, and she stared into the full-length mirror on the wall and critically appraised her nude body.\n\nRachel knew she was an attractive woman, with a slender but curvy figure maintained by a healthy diet and regular exercise, but she was at an age -- 42 -- when the confidence of youth had begun to retreat before the uncertainty and doubt of middle-age. She felt, acutely, the pull of gravity on her body. She had noticed a gray hair or two. She checked her skin frequently in the mirror for signs of cellulite. She wanted to push back against time's steady forward march. She knew she couldn't control or prevent the future, but, damn it, she could celebrate the present.\n\nRachel walked across the carpet to her dresser, opening the drawer that was stuffed full of her running shorts and tops. Rachel ran five days a week. She was one of those runners that valued style along with high performance in their workout clothes. She knew just what she was going to wear today -- at least for a while, she thought, smiling to herself. Today's outfit pushed Rachel's comfort zone. She had bought it online only a week earlier, and she had never worn it in public before. The shorts were form-fitting, with a mere 2-inch inseam that barely contained her ass. The top was a mere sport bra. Both bra and shorts were baby blue, matching her eyes.\n\nRachel had seen other women running in similarly skimpy outfits, although most of them were younger than she. Rachel had never dared wearing something so revealing. Stan would have thrown a fit. But that was then, and this was now.\n\nShe pulled the little shorts up her shins and thighs, taking the time to enjoy the sensual feel of the slippery fabric on her bare skin. She wore no panties under the shorts, and when they shrugged into place on her hips, she felt the slick snugness of the material between her legs. Looking at herself in the mirror again, Rachel noticed that the shorts were so snug and the fabric so thin that a faint indentation formed between her legs -- a camel toe, that's what it's called, she thought. It wasn't so noticeable as to be scandalous, but it was there, nonetheless, and it sent a thrill of pleasure up her spine to know the shorts would show her off that way.\n\nNext, she pulled the bra over her head until her breasts settled into it comfortably. Rachel had never run in public in just a bra before. It provided enough support for her C-cup breasts, but just barely. It exposed a surprising expanse of cleavage. Anyone bothering to watch her run today would be exposed to more jiggling than Rachel was accustomed to show.\n\nRachel bound her straw-brown hair into a ponytail with a white scrunchie. She slipped ankle-high white and blue socks onto her feet and laced up her brand-new ASICS running shoes.\n\nShe looked herself over again in the mirror. She approved of what she saw. She felt bold to go outside in such a skimpy outfit, but she had to admit to herself that she looked good.\n\nIt was time to start her run.\n\nShe set the house alarm and stepped out the front door, locking it and leaving a key under the mat.\n\nBeyond the front door lay the tony, leafy, suburban glade of Laurel Lane, lined on both sides with spacious houses built seven decades before. It was one of the most desired places to live in the city. Rachel turned left at the end of the driveway and began running at a slow pace. Her limbs were still stiff, and she would take a few minutes to warm them and loosen them before hitting her normal running stride.\n\nRight away, she saw, in the porch on the house next to hers, her neighbor Walter, an elderly widower who said little but seemed friendly, if perhaps at times a little pervy in the way he looked at Rachel overlong across the property boundary. She waved at him as she ran by, and as always, he said nothing, but he gave her a thumbs up and a big smile.\n\nA little farther down the block, she saw another neighbor, Mary Millstone, walking out the front door to her Volvo in the driveway. Mary was the street's self-appointed snoop and gossip monger. Rachel groaned inside. Mary was the last person she wanted to see her in the new running outfit. But there was nothing she could do about it, and, sure enough, Mary looked up from her car keys toward Rachel's lithe, scantily clad figure.\n\n\"Hi, Mary!\" Rachel called in what she hoped was a soothing manner. It didn't have the desired effect. Mary's jaw dropped and then her eyebrows and lips knitted themselves into a disapproving scowl. Obviously, Mary did not believe Rachel's scant attire met the high standards of Laurel Lane.\n\nWell, screw you, Mary, Rachel thought, smiling to herself as she thought it. She felt the delicious thrill of newfound freedom and boldness. Her life was taking a new turn, even if its only manifestation so far was a new running outfit.\n\nWith Mary and Walter behind her, Rachel picked up her pace, and after two more blocks she turned left onto Sycamore Street. The thick tree cover of Laurel Lane gave way to sunlit pavement. No clouds marred the blue summer sky above, and Rachel's skin warmed quickly.\n\nA few more blocks later, Sycamore Street ended at a park next to a river. The river meandered its way through the city. Many years earlier the city's planners had wisely set aside large parcels of land along the riverside as wild areas, to remain undeveloped. A multiuse bike and pedestrian trail known as the Rivertrail followed its banks. It was Rachel's favorite place to run. Because of all the land left wild, one could run through the heart of the city along the trail and yet think one was in a riparian wilderness.\n\nRachel ran through the park until her path joined the Rivertrail. She turned right, to follow the trail downriver. Now her run really had begun.\n\nShe picked up her pace, and she ran with quick, confident strides. The hour approached late morning and the temperature rose fast. Thick stands of trees and shrubs rose all around the trail, sometimes offering shade and sometimes blocking the view to the river. Scents of licorice, lemon, and sage wafted through the air. A faint breeze kissed her skin and whispered through the leaves overhead.\n\nAfter a time, Rachel left the Rivertrail for a skinny dirt trail heading toward the river. The surface was uneven, and the dirt was soft, slowing her pace. The forest canopy and shrubby understory grew denser, and soon Rachel no longer could see the Rivertrail. The dirt trail on which she ran soon hugged the river shoreline.\n\nThis was a side trail Rachel had run many times. For whatever reason, few others ran on it. Rachel always savored the feeling of isolation from people she got from running along this tiny trail. It also provided almost limitless opportunities for exploring the nooks and crannies of the river that most never saw.\n\nAhead of her, after running ten more minutes, Rachel finally spied what she was looking for: an island in the river. A slow-moving channel of water maybe 50 feet wide separated the island from the shore next to which she ran. The island stretched perhaps 200 feet from one end to another, and she had no idea how wide it was, having never seen the other side. Dense brush covered it, but in the middle of it was a little sandy beach, and beyond that an opening in the plant cover. On some earlier run, the date of which Rachel had long since forgotten, she'd gotten it into her head that it would be interesting to explore that island. But she'd have to swim there to do so, fighting 50 feet of steady river current.\n\nRachel had decided to explore the island once and for all, today -- in the nude. She would strip her clothes off when no one was around, hide them in the bushes, and take off for the island. It would be her own personal Nude Day adventure.\n\nBut not quite yet. Rachel wanted to run farther, to a park two miles down the trail, hydrate at the drinking fountain, and then turn around. Her adventure would begin on the way back home. It would feel refreshing after sweating under the increasingly hot sun.\n\nHaving scouted out the location, Rachel returned to the Rivertrail.\n\nAhead, a man ran along the trail in the opposite direction, closing the distance with her fast. She guessed he was somewhat younger, maybe early thirties, and he was good-looking. He wore nothing but running shorts and shoes and a sport watch, and his shirtless body was leanly muscled and lacquered with sweat. Rachel looked into his dark eyes, which were scanning her body up and down. On another occasion Rachel might have been annoyed at his ogling, but not today. That was the whole point of wearing her running outfit, wasn't it?\n\nShe smiled and said \"Hi\" as he approached, and he replied with a mumbled, breathy \"Morning.\" As he passed, Rachel turned, checking him out from behind, and she caught him doing the same to her. Both smiled, embarrassed at catching one another in their mutual ogling, and they ran on.\n\nShe passed several people as she ran downriver, and she caught many of them -- all the men, and even some of the women -- checking her out. One of the women, who looked to be about her age, even said, \"I wish I looked good enough to wear that!\"\n\n\"You do!\" Rachel called as the other woman sped by going the other way.\n\nRachel smiled to herself between increasingly fast breaths. She felt alive bounding along the trail in such a skimpy, revealing outfit. It was the first time she'd warn such an outfit, but it wouldn't be the last.\n\nThe sun continued to rise, along with the temperature.\n\nAt last, she entered the park. Wild grass and shrubs gave way to a well-mown expanse of lawn and stately elm and oak trees. Ahead, twenty feet off the trail, a drinking fountain beckoned. Rachel made a beeline for it and slowed her pace.\n\nBeyond the fountain, Rachel observed three young men on bicycles. Two wore t-shirts bearing the name of the local state college. Their hair was unruly, and their shorts were frayed, and they looked bored until they noticed her, when the eyes on all three went wide.\n\nThat's when she recognized one of them -- Jeremy, an acquaintance of her son who had graduated in the class ahead of him the previous year.\n\n\"Mrs. Gray?\"\n\n\"It's Jeremy, right?\"\n\n\"Yeah.\" He didn't seem to know what else to say. He stood slack-jawed, obviously not expecting to find his friend's mom in a form-fitting and skin-baring running ensemble.\n\n\"What are you up to?\" Rachel asked.\n\nIt took a few seconds for Jeremy's words to form. Obviously, the sight of Rachel had made an impression.\n\n\"Uh, not much. We're going to go across the river and ride some of the dirt trails over there.\" He pointed vaguely in the direction of a bicycle bridge across the river at the edge of the park.\n\n\"Sounds fun. Pardon me, but I have to hydrate.\"\n\nRachel stood closer to the fountain, bent over, and started drinking. She couldn't help but notice that out of the corner of her eye the three young cyclists gathered to the side of and behind her, presumably lining up to get a drink but obviously checking out her spandex-clad rear.\n\nEven so, she took her time, in part because she was thirsty but also... because she liked the attention. She soaked it up. Although she couldn't see the young men's three pairs of eyes, she had no doubt about what they were fixed on. She drank heartily until she'd had enough, then slowly stood up. From the looks on their faces she could tell they had enjoyed the show.\n\nInstead of resuming her run back Rachel decided to tease them a little. She put her hands against the big trunk of a nearby tree and did some calf stretches. Her calf muscles didn't feel sore or tight and she didn't need to stretch, but she was having too much fun with showing off to stop yet.\n\nOut of the side of her eye she could tell that the young men were sneaking glances at her, trying but failing miserably not to be too obvious, while they took turns at the drinking fountain. Finally, she stood up away from the tree, stretched her arms, and turned to run back.\n\nShe knew she was pushing the envelope, and maybe a bit too far, since Jeremy and his friends might talk about her, and her son Aaron might hear about it. But today was about taking some risks. She shrugged It off.\n\n\"Have fun,\" she said to the three young men as she ran by them.\n\nFrom behind her she heard Jeremy call out, \"Looking good, Mrs. Gray!\"\n\n\"Thanks!\" she said.\n\nShe ran swiftly upriver on the Rivertrail, eager to reach the destination for her adventure. She passed more runners, and she enjoyed the attention she got from the men. Her exposed skin tingled.\n\nShe ducked right onto a dirt side trail and before long saw the island ahead.\n\nShe slowed to a walking pace and looked in every direction. She saw no one. Sometimes people chose to run on the narrow, twisty dirt trail rather than the paved Rivertrail, but not too often. Even if they did, the dense greenery between the trail and the river probably would obscure their view of a naked woman swimming to the island, unless that's what they were looking for. She would be taking a risk -- which was, frankly, part of the point -- but not too big of one.\n\nRachel turned right onto an even smaller path, nearly overgrown with wild grasses and bushes. In a few paces the little path gave way to a small dirt bench at the river. It was a spot she'd found on a run before this day, and she'd determined that this would be the spot to start her adventure. It was a secluded spot, a small crescent in the shoreline where the water was still and calm. It lay shrouded on every side by tall trees and dense bushes. Unless someone knew where this spot was and traced her path, which was unlikely, no one could see her.\n\nShe looked across the span of the river that lay between her and her destination -- the river island. She had chosen this particular spot to launch her adventure for two reasons. One was that the foliage of the island shielded her from view by anyone on the opposite side of the river. The other was that it was perhaps 70 feet upriver of the beach on the island for which she would swim. She knew the current, although mild in this stretch, would carry her downriver, and she couldn't afford to let it carry her past the island where she would be exposed to the view of anyone on the other side of the river.\n\nRachel looked in every direction once again, and she listened carefully. She neither saw nor heard anyone. It was time to start.\n\nShe started with her shoes, unlacing them deliberately, peeling them off her feet, and placing them, with a sock in each, under a willowy bush by the riverbank. The damp soil under her feet was cool and pleasant to the touch.\n\nNext, the bra. She peeled it over her head, and her breasts sprang free.\n\nShe had done it. She was topless in public. Sort of public. She wondered if she could get arrested if a sheriff's deputy found her like this. Probably not, but he'd almost certainly demand that she put it back on.\n\nRachel had no intention of doing that. Instead, she slipped her shorts down her legs. She picked up the shorts and the bra and draped them over the top of the bush over her shoes, so the sweat in her clothing would evaporate and they would dry out.\n\nShe removed her scrunchie, too, and put it in one of the shoes.\n\nShe stood, at last, completely naked by the riverbank. This was her Nude Day celebration -- the beginning of it. She felt free, naughty, and adventurous. The feeling was new and exhilarating.\n\nRachel tiptoed down the bank and beyond the river's edge. The cold water lapped over and chilled her feet. Dappled sunlight filtering through the trees over lit her body in patches.\n\nThe cold water gave her pause, but only briefly. She was determined to see the adventure through. She waded forward. She gasped, a little, at the sting of the cold water on her skin, but she didn't let the cold stop her. She gazed ahead at her destination, the little beach. She would have to swim vigorously to ensure getting to it before the current swept her past it. Rachel was a good swimmer, and felt confident she could do it, but a hint of uncertainty gnawed at her. Getting swept by the current past the island and exposed to people on both sides of the river would be an awfully bad idea.\n\nShe plunged forward and immediately commenced a strong, fast freestyle stroke, lifting her head every few strokes to get a bearing on where she was.\n\nThe water was colder than expected and the current was stronger than she had estimated. The chill of the water tweaked her nipples and nipped at her vulva.\n\nLifting her head above water halfway to the island, she saw it being swept past her faster than she expected. Uh oh. She redoubled her kicks and strokes. She could see her landing spot -- the beach -- and though she drew closer to it she wasn't sure she could make it. Downstream of the beach thorny vines crept all the way to the shoreline, and it would be difficult to make a landing there. If she couldn't land, she'd get swept passed the island, naked, in the exposed part of the river. She couldn't let that happen.",
        "She had to swim faster.\n\nShe stroked and kicked as hard as she could.\n\nFinally, huffing and puffing, just as she was about to pass by the beach, her hand touched a rock under the water's surface. She pushed against it and dropped her legs. Her toes touched the river bottom, but as she tried to stand the current knocked her over and she splashed and kept moving. She put one foot down to brace herself against the current and simultaneously flopped toward the island. At last, the water was shallow enough not to knock her over.\n\nShe must have looked ridiculously clumsy to anyone that might have seen her.\n\nIn the shallows now, Rachel splashed forward a few feet to the little beach. This side of the island was in the shade, shrouded in dense foliage. She walked another few feet forward and put her hands on her knees to recover her breath.\n\nA few seconds later she remembered that she was naked and still exposed, and that she was pointing her bare ass at the riverbank from which she had swum. She turned around and looked back. She saw no one. Her clothes still hung over the bush. A light breeze rose off the water and the trees all around rustled.\n\nIt was time to explore. Rachel turned back toward her island and observed a gap in the foliage ahead of her. A faint path lay before her. It wasn't much of a path, and it was overgrown everywhere with vines and bushes and grasses, but it was enough of a path she could tell other people had been here before. She wasn't the first one to be in this spot, but she saw no sign that anyone else had been there recently.\n\n\"I'm all alone,\" she said to herself. \"And I'm free.\"\n\nShe walked forward, along the twisty path, almost on tiptoes, making no noise, even though the river flow undoubtedly denied the ability of anyone, anywhere along the banks of the river to hear her. She didn't feel afraid, but she felt nervous, exploring new territory emotionally as well as geographically. She was naked in the woods, and her clothes were nearly a hundred feet away now, across a river. She was vulnerable.\n\nDespite her nervousness, she felt the exhilaration of her position. She had been reborn, and now she walked through her own private Eden. And it was beautiful: lusher and greener than she would have expected. She pressed on, creeping through the tiny island forest to see what was on the other side.\n\nThe gloom around her brightened as she drew closer to the far, sunny side of the island. The forest cover receded. The canopy of trees overhead drew back. The path opened, revealing the view across to the other side of the river. Without thinking, Rachel kept walking. A little sun-lit sandy beach lay ahead, and Rachel thought it would be nice to lay nude in the sun and cool her feet in the river.\n\nRachel jumped and stopped, however, at the sound of laughter. It came from across the river, and the sound carried easily across the water despite the stronger flow of water on this side of the island. The river was wider and faster on this side, and Rachel's eyes followed the eddies and ripples until they looked up and saw three figures standing on a pebbly beach at the water's edge, skipping stones into the waves. It was Jeremy and his two friends. Their bikes lay on the ground behind them.\n\nRachel realized that she stood not two feet from the end of the shadows and that nothing obscured the view of her by the boys. She drew back and hid behind a thick tree, deep in the island shade. She peeked her head around the trunk and watched what the boys were doing.\n\nThey hadn't seen her yet. If they had, they would have been craning their necks and focusing like a laser on trying to see her naked figure. Instead, they were throwing stones into the river and bantering and insulting each other the way college boys that age do.\n\nRachel's body shuddered. It had been close. A few more steps forward and the sun would have lit up her body like a spotlight, and no doubt those three young men would have seen her and recognized her right away. And then... Rachel didn't even want to think about it. She had no doubt they would tell everyone that they had seen her naked. Everyone -- everyone -- would know she was running around naked showing off her body to her son's friends. She'd never live it down.\n\nBut they hadn't seen her, and for now Rachel was safely hidden in the shadows and behind the tree, and she could watch them and hear them, less than a hundred feet away, while naked.\n\nIntermixed with her fear was a delicious thrill, rippling through her nude body. She looked down at her figure, dry now that the water had evaporated. What the boys wouldn't give to see her. They'd love that, wouldn't they? Watching her step out from the shadows and reveal her nudity. Rachel looked at vulva. They'd get a good view of it, too, because other than a tightly trimmed brown landing strip above her clit, her pussy was bare.\n\nThinking about it stirred a tingling between her legs. Rachel's position in the island woods so near the college boys made her horny.\n\nRachel looked this way and that, at her surroundings. On the right side of the thick tree trunk behind which she stood, a sturdy branch slanted up and away only a few feet off the ground. Between that branch, a light screen of the tree's low-drooping branches hung between her and the young men on the riverbank. Rachel had a naughty idea. She had never had an idea like this one before. It was perfect. She could indulge her new-found enjoyment of her exhibitionism without any real risk that the boys would see her.\n\nRachel reached to a smaller branch that splayed out from the trunk above the large one, and she pulled herself up. It was an awkward maneuver, especially when done naked, and the skin of her bare thighs scraped along the rough bark of the big tree branch as she hoisted herself on it. After a few more seconds and roughed-up skin, Rachel sat on the big branch facing the young men through the light screen of leaves and branches, steadying herself by grabbing the smaller branch overhead.\n\nShe felt confident -- but not entirely confident --that they couldn't see her, even if they looked in her direction. The leaf cover wasn't complete, but it was decent, and they stood in the bright sun while she sat in the forest shade. She could watch them, not far away, knowing that she was completely naked and facing them, but they couldn't see her.\n\nThe sensation was exquisite.\n\nShe spread her legs wider. She was showing her pussy to them now, in a way, even if they couldn't, or didn't, actually see her.\n\nHer left hand held on to the branch. Her right hand drifted lazily to her breast, cupping it and kneading it. Her fingertips closed on an aroused and erect nipple and pinched it. She squealed softly, almost involuntarily. She knew the boys couldn't hear her over the sounds of the water, but she had to be careful, nevertheless.\n\nThe breeze picked up again, and a gust of wind swept the island forest. It felt good against her skin and hummed through the trees.\n\nShe heard the boys' laughter across the flowing water. She couldn't make out everything they said, but she could make out much of it. That's when she heard someone say, unmistakably, her name: \"Rachel Gray.\"\n\nShe saw them high-fiving each other and laughing. One of them cupped his crotch. The words \"hot MILF\" drifted over the river to her.\n\nMy God, they were talking about her.\n\nRachel was surprised and aroused to know the three young men were thinking about her, and that they thought she was \"hot.\" It was one thing that they'd ogled her in the park, but it was another that they were talking about her half an hour later.\n\nRachel's right hand drifted down, from her breast over her belly and down between her legs. It was wet there, from more than just river water.\n\nHer fingers met her flesh. They spread the flesh open, and ran up and down, tickling her lips, mashing them, and pushing them aside to gain access to the pearl of her sex and the slit that lay underneath it.\n\nRachel began masturbating herself. Her left hand still clung to the small tree branch, and her eyes remained fixed on Jeremy and his friends across the river, but the rest of her body surrendered to self-pleasure.\n\nWith the two middle fingers of her right hand, she tapped and rubbed her clit, hitting it, stroking it, encircling it in a swift motion. Then the same two fingers dove deep into her pussy and hooked up to meet her G-spot. Rachel gasped with pleasure. She'd never masturbated in such a public, exposed place before. Her body buzzed with pleasure, making it hard to concentrate on the boys ahead of her.\n\nRachel wanted more. Her preferred method of masturbation required the use of both hands, so she spread her legs wider and used her thighs and shins to squeeze the thick branch under her ass and hold her body in position, and she took her hand off the branch overhead. That hand flew to her clitoris while the other one busied itself inside her pussy.\n\nShe put one finger inside herself, and then two. The fingers curled up and in. As they pressed against the spongy mass inside, the finger on her clit pushed down until the fingers of one hand could feel the fingers of the other. It felt naughty and wonderful.\n\n\"Do you like that?\" she asked, looking through the shade and tree cover to where the boys played across the river. She knew they could not see her, but she liked imagining that they could. She opened her pussy wider with one hand and imagined them all gazing at her pink, wet depths as she squirmed on the tree branch.\n\nA delicious wave swept through her body and Rachel suddenly realized she'd brought herself close to orgasm. Did she dare bring herself to completion with the boys so close by? She did. One pair of fingers circled and mashed against her clit while the other pair rapidly thrust in and out of her pussy.\n\nThe orgasm came in no time -- faster than she expected, and harder, too. Her body shook and she threw her head back and almost wailed in delight before realizing where she was. Only a weird half-squeal escaped her mouth. A hand withdrew from her pussy to cover it and prevent it from making more noise.\n\nThe swift movement of her hand upset her balance on the branch. Rachel's body slipped forward. Her butt scraped against the branch bark and her legs and arms went flailing, trying in vain to recover her position. Rachel fell off the branch and crashed into a bush below. She rolled forward.\n\n\"Shit!\" she called out, heedless of her position or the young men's presence nearby.\n\nShe lay on her butt, sprawled out in a clump of bushes and tall grass, several feet forward of the branch on which she'd sat. The leafy cover that had protected her from view of Jeremy and his friends was no longer there. Rachel looked up from her awkward position and could see them already turning in her direction.\n\n\"What was that?\" she heard one call.\n\n\"Shit,\" she said again. There was no easy or quiet way to extricate herself from the spot in which she'd fallen, but extricate herself she must. She turned around, so they wouldn't see her face, and did her best to scramble through the dense shrubbery. To Rachel, her movements sounded like the noise of elephant herd. There was no way to be quiet.\n\n\"Holy shit!\" she heard one of the boys say. \"That's a naked woman.\"\n\nA few more scrapes and scratches later through the bushes, and Rachel clambered through the brush to the protection of the tree trunk. Its bulk shielded her from view of the boys. She peeked her head slightly out to the side so she could see what they were doing. Her face was shrouded in shadow and screened by bushes again, so she felt safe they couldn't see her anymore.\n\n\"I don't see her,\" said one of the boys.\n\n\"It was definitely a naked woman,\" Jeremy said.\n\n\"Did you get a good look at her?\"\n\n\"No, it was too quick. A little tit, and a nice butt. Dirty blond hair.\"\n\n\"Wait a sec. Do you think it could be --\"\n\n\"Aaron's Mom?\"\n\nRachel closed her eyes. She was mortified. This couldn't be happening.\n\n\"I don't know,\" Jeremy continued. \"She wasn't wearing a scrunchie in her hair. But maybe.\"\n\n\"That would be wild,\" another one said.\n\n\"Let's find out,\" said the third.\n\n\"Think we can swim over there?\"\n\n\"No,\" said Jeremy. \"Current's too fast. And I didn't bring anything to swim in. I'm not stripping naked. Not like that chick.\"\n\n\"Let's ride over there and find out.\"\n\n\"Good idea,\" said Jeremy. \"The bridge is only two miles downriver. If we go fast, we might catch her.\"\n\n\"That would be so wild. Aaron's Mom running around naked.\"\n\n\"She's hot, too,\" said Jeremy. \"The way she looked in those booty shorts.\"\n\n\"I'd tap that,\" said another. \"Let's go.\"\n\nThey didn't speak loudly, but their voices carried across the water and Rachel heard almost every word, until a gust of wind swept over the island and drowned out their voices. She watched as they turned from the riverbank, scooped up their bikes, and took off.\n\nRachel did a quick calculation in her head. She didn't have much time. It wouldn't take the boys long to cover the four miles between themselves and her location. But if she scrambled, she could get dressed, run fast, and maybe make it home before they caught up with her. No one would be the wiser.\n\nRachel, her bare skin tingling with excitement and fear, scurried, naked, back through the island forest to the opposite side. She plunged into the water. Having done so, she realized there was a problem she hadn't accounted for. The little beach she just jumped from was halfway down the island, and that meant that as she swam to the other side the current would carry her downriver, well past the spot where she'd left her clothes and possibly downriver of the island, where she might be more exposed to view. She angled the direction of her swimming upstream and swam as hard as she could to fight the current. Rachel was a strong swimmer, but not strong enough to fight the river completely.\n\nShe attacked the water with strong, swift freestyle strokes. A panicky feeling rose in her breast, making it harder to breathe. But she couldn't stop.\n\nBy the time she drew near the opposite shore, where the river was shallower and the current less strong, Rachel was well downstream of where she had left her clothes. She lurched out of the river onto a dirt bank. The shore between her and her clothes upstream was completely overgrown, and the bank beneath the water fell away steeply, making passage along the river back to her clothes difficult.\n\nFortunately, a little path led away from the bank on which she stood, so she chose to follow it. She hadn't been on that path before and would just have to take her chance that no one else was there.\n\nAs she ran, the breeze rose again, and it chilled her soaking body. Water poured from her hair. Rachel paused as the little path leading away from the riverbank intersected the larger dirt path that ran parallel to it. She turned right. Her wet feet were now caked in dirt from the path. Rachel shook with nervousness. She counted down the minutes. Jeremy and his friends would reach her soon, and she had to hurry to get away from them.\n\nShe found the right-side path and turned on it, and a few paces later she found the spot where she'd left her clothes.\n\nBut they weren't there.\n\nHer shoes still lay on the ground, where she had left them, along with the socks and scrunchie. But her bra and shorts were missing. They were not draped over the bush anymore.\n\nRachel panicked, and turned in every direction. Was this a practical joke? Had someone taken her shorts and bra? There was no sign or sound of anyone nearby.\n\nShe stared at the bush, and its branches twisted toward the river in a sudden gust of wind.\n\nShe realized what must have happened. Her clothes had fallen off the bush because of the wind. They'd been blown into the river.\n\nRachel walked to the riverbank again, and she stared into the current to see if she could spot her clothes. She saw nothing.\n\nThis couldn't be happening. This couldn't be happening.\n\nShe scanned the river, her eyes moving back and forth between the island the riverbank, further and further downstream. She saw no sign of her clothes, but downstream, past where the two branches of the river reconnected below the island, she saw a kayaker. For a moment, he stopped paddling, and he picked something out of the water.\n\nIt was baby blue. It was her bra top.\n\n\"Shit!\" she said again.\n\nRachel didn't know what to do. She was in full panic-mode, and her brain wasn't working very well. The kayaker continued paddling downstream, having taken the bra top. He was too far away to hear her, if she called to him, and, besides, she didn't want to scream that she was missing her clothes to anyone and everyone that might hear nearby.\n\nRachel froze. Her mind couldn't form a plan.\n\nShe could run along the trail after the kayaker, but he was moving fast, and she might not be able to catch up to him. If she did, she'd have to reveal her nakedness to him, and to anyone else that might be running along the way. Jeremy and his friends might catch up to her before that happened, and that... would be a disaster.\n\nRachel was an administrator at a nearby Catholic school. If word got out that she was running around the river naked -- and it would get out, knowing what she did of her son's friends -- she'd lose her job. She was sure of it.\n\nShe didn't know what to do, but she couldn't run naked downriver, away from her home, drawing closer to Jeremy and his friends, uncertain whether she'd even be able to retrieve her clothes.\n\nRachel decided she would have to take her chances running the other way, back toward her house. Somehow or another -- she had no idea how -- she'd have to thread her way carefully along the river and through her neighborhood, back to the house, without being seen. Maybe she could dart from tree to tree or bush to bush.\n\nIt wasn't a good plan, but it was all her panicked brain could come up with.\n\nShe pulled her shoes from under the bush. She dipped her feet in the river to rinse them off, plopping her bare butt down on the damp ground. Her hands shook so badly she could barely get her shoes on, let alone lace them up. But eventually, she managed to do it. She gathered her wet hair with her scrunchie.\n\nRachel stood up, wiped the dirt off her backside, and ran.\n\nShe ran up the little path away from the river and turned right on the dirt trail. She would follow this trail as long as she could, because the traffic on it was much lighter than on the Rivertrail it paralleled. She'd have to take her chances that nobody was using it. She supposed if she paid careful attention, she might be able to duck behind some bushes if she heard someone coming ahead of her, but the trail twisted and turned so much that it would be easy to stumble on someone without warning. She would have to take her chances.\n\nShe ran, as fast as she could, naked, through the woods along the river.\n\nRachel was aware, more fervently than ever, of her nakedness -- her breasts swaying wildly as she ran along the path, her bare flanks drying as the water evaporated from her skin.\n\nShe tried to calculate the time. She didn't know how many minutes had elapsed since Jeremy and his friends had ridden away to find her. She knew she did not have a lot of time left.\n\nThe dense forest cover mostly, but not entirely, shielded her from view from the Rivertrail. Here and there, the forest cover opened. She heard voices to her left, and through intermittent openings in the bushes she saw two older women running together the other way, perhaps 50 feet from Rachel at their closest. They were intent on the Rivertrail ahead and didn't see her. Rachel watched them carefully as they passed by her.\n\nSuddenly, a form loomed in front of her and before Rachel could respond she and the form collided, and she was knocked back. Her bare ass hit the ground. Her legs went flying from under her. Her hands went behind her to catch her fall.",
        "Rachel looked up. Standing over her, mouth agape, was the good-looking younger man she had passed earlier in her run. His shirtless torso was shiny with sweat.\n\nRachel, in an instant, realized she was showing off her breasts and pussy to the man.\n\nShe emitted a high-pitched squeak and covered herself the best she could with her hands and arms.\n\nThe man threw his hands out to his sides, in a gesture apparently intended to show his intentions were good. His face showed a look of concern.\n\n\"I'm sorry!\" he said. \"I didn't see you. I was coming around a bend. Are you... are you OK? Are you in trouble? Did anybody hurt you?\" He looked away from her, scanning the surroundings.\n\n\"No,\" said Rachel. \"It's not like that.\" She wondered how she would explain what it was like. \"I... I went skinny-dipping in the river. My clothes fell in and got swept away. I'm trying to figure out how to get home without people seeing me.\"\n\nThe man turned back to her, but he averted his eyes. Rachel could tell he was struggling between a desire to look at her and a wish to be respectful.\n\n\"Uh,\" he said. \"Is there something I can do to help?\"\n\nSomewhere in the back of her panicked brain Rachel appreciated both that he wanted to look at her and that he wanted to be respectful and not gawk at her nudity.\n\n\"Ah, maybe,\" she said. \"You don't have anything I could wear, do you?\" Rachel was nervous about how much of her body she exposed to him even with her hands and arms draped over her private parts.\n\n\"I'm sorry, I don't. I'm just wearing these shorts, and nothing underneath. I can't give you my shorts. The police probably would be more likely to arrest a naked man than a naked woman.\"\n\nThe police. Holy hell. Until now, Rachel hadn't even considered the possibility of being arrested while running back to her house naked. But she might. It just kept getting worse.\n\n\"I have an idea,\" he said. \"I can try to help get you to my car. I can drive you home.\"\n\nRachel didn't know this man, and she was nervous about putting her fate in the hands of someone she didn't know. But his plan was better than hers. She couldn't imagine any way to run through her neighborhood naked without being seen.\n\n\"Where's your car?\" she asked.\n\n\"It's that way.\" He pointed behind her, in the direction from which she had come. \"At the park, about two miles away.\"\n\n\"Oh shit,\" Rachel muttered.\n\n\"What?\" he asked.\n\n\"That's in the opposite direction from my house. But the other thing is... please tell me you will be discreet and won't tell anybody about this.\"\n\n\"I won't,\" he said. \"I promise you.\"\n\n\"Three young guys saw me, briefly. I heard them say they are bicycling this way to find me. They're coming from that direction. They're friends of my son. I can't let them find me. It would be a disaster.\"\n\n\"OK,\" the young man said. \"I'll help you avoid them. I'm going that way, anyway. I'll help you get to my car and get home.\"\n\nA whisper of relief rose in Rachel's breast. She was still panicky, but just a bit less than before.\n\n\"Thank you so much. Could you... turn the other way?\"\n\n\"What?\"\n\n\"I need to stand up, and... well... it's kind of awkward.\"\n\n\"Oh, sure,\" he stammered. He turned his head the other way.\n\nRachel removed the arm across her boobs and used her hand to push herself off the ground. She stood up facing the man and recovered herself. She saw him turn back to her. He couldn't help but sweep his eyes up and down her body. Rachel smiled faintly despite her predicament. The young man was trying to be helpful, but he was obviously turned on. A little piece of her, buried deep, liked that.\n\n\"I'm Mateo,\" he said, his brown eyes on hers.\n\nRachel wasn't sure she wanted to tell him her name, but if he were going to drive her home he would know where she lived and it wouldn't really matter, would it?\n\n\"Rachel,\" she said.\n\nHe smiled.\n\n\"I'd shake your hand, but --\"\n\n\"Yeah,\" she interrupted. \"Let's take a rain check on that.\"\n\n\"We should probably get going,\" Mateo said.\n\nAn idea came to Rachel. Her brain was growing calmer.\n\n\"Do you live nearby?\" she asked.\n\n\"Why?\"\n\n\"Well, another plan would be for me to hide here, and for you to go home and get something for me to wear and bring it back. I know it's a lot to ask.\"\n\n\"I would do that,\" he said. \"But I live about an hour away. If I did that you'd be out here for hours.\"\n\nThat didn't sound like a good idea to Rachel. She thought about having him drive to her house and pick some clothes up for her, but she would have to tell him where the key was and give him the code to turn off the alarm. She was nervous about doing that with a stranger. Plus, he had nothing to write it down. If he got it wrong, the alarm would go off and the cops would show up, and they'd wonder where she was... she didn't even want to contemplate what might happen then.\n\n\"Then it's Plan A,\" she said. \"Let's go. Do you, uh, mind going ahead of me?\" She didn't want him staring at her ass as they ran to the park together.\n\n\"Of course,\" he said.\n\nMateo, keeping his eyes respectfully ahead, scooted to the side of Rachel on the narrow trail, and he began jogging slowly on the trail, heading back to the park. To stay with him, Rachel had to pull her hands and arms away from her body. She ran behind him, now completely naked again. She thought how strange it was to be running completely naked and exposed just feet away from a stranger. Thank goodness he was being respectful and, for the time being, looking forward and not sneaking glances at her.\n\n\"How fast do you want to go?\" he asked.\n\n\"This is a good pace,\" Rachel replied.\n\n\"If I see anybody, I'll cough loudly. Hopefully, you'll have time to hide.\"\n\n\"Thanks,\" Rachel said. She knew it would help to put some space between her and Mateo, so if he called, she'd have more time to hide from someone. But she felt safer, somehow, staying near him.\n\nThey moved swiftly along the dirt trail. Thankfully, they hadn't run into anyone, yet.\n\nRachel reflected on the craziness of her predicament. She was running, fully naked (except for her running shoes), away from home, trusting in the assistance of a stranger. He seemed nice enough, and he was nice to look at -- tall and leanly muscled. She thought about the weirdness that she was the naked one but that she was checking him out.\n\nIt was a beautiful day: warm but not too hot. The air was fragrant with the many scents of nature in mid-summer. It was a perfect day for running, or for being naked -- but not quite in this way.\n\nMateo suddenly made a loud coughing noise, and Rachel looked both ways for a place to hide. Hiding places were few. But she saw a gap between two large bushes and pressed her way between them, scooting behind one and dropping to the ground. She heard Mateo's voice, unnaturally loud, on the trail ahead.\n\n\"Nice day for a bike ride!\" he called.\n\n\"Shit,\" Rachel whispered to herself.\n\n\"Yeah.\" It was Jeremy's voice. They'd reached her location.\n\n\"Hey,\" he continued. \"You didn't happen to see a naked chick around here, did you?\"\n\n\"Naked chick?\" Mateo asked. \"No. Why do you ask?\"\n\n\"We were on the other side of the river, and we saw a naked chick over here, so we came to check it out.\"\n\n\"You guys aren't going to harass her, are you?\" Mateo's voice sounded stern.\n\n\"Good for you,\" Rachel said to herself.\n\n\"No, nothing like that,\" Jeremy said. \"We just thought maybe we knew her, and we'd say hello. That's all.\"\n\n\"Right,\" Rachel muttered.\n\n\"Sorry, guys,\" Mateo said. \"I haven't seen any naked ladies. Maybe you should keep going upriver a ways and look.\"\n\n\"Maybe,\" Jeremy said. \"But I'm pretty sure she was right around here. She had a hot body. We'll keep looking.\"\n\n\"You do that,\" Mateo said.\n\nA few seconds later Rachel, behind the cover of the bushes, saw the three boys on their bikes ride past on the dirt trail. They were looking for her every which way around them, so she scrunched down as low as she could to stay out of sight. When they were gone, she stood up and returned to the trail. Mateo was there, waiting for her. His mouth dropped open again. Rachel, having grown more accustomed to her nudity, had failed to cover herself. She was giving Mateo a full-frontal view, and he obviously was enjoying it.\n\n\"They're probably going to come back this way,\" Mateo said. \"I should probably stay behind you this time and warn you if they return.\"\n\nRachel said nothing at first. Mateo's reasoning was sound, but he might just want to watch her naked ass while she ran. But he was right. He could block the trail and give her a little time to hide again if Jeremy and his friends came back to them from behind.\n\n\"OK,\" she said. \"Let's go.\"\n\nHer arms were at her side, and she was aware that she was displaying all of her nude body to a man she'd just met. It no longer seemed as mortifying to do so as before. She even felt a tingle of pleasure at the feel of Mateo's eyes on her body.\n\nShe turned and started running again. She picked up the pace. The faster they got to the park, the better chance there was to avoid being caught by Jeremy and the others.\n\nDespite the risk of exposure, she had to admit there was something delicious about running in the nude. She had never done it before. She felt the air on her body in a way she never had. She noticed the way the sun's rays struck her skin. Her senses had sprung to new life. Her ears picked up with greater sensitivity the chirping of birds and buzzing of insects. It was like a musical soundtrack to her crazy adventure.\n\nShe pushed on, running quickly, her feet nimbly picking their way over the irregular surface of the dirt trail. Uncertain of where Mateo was, she turned around. He was not far behind, and his eyes were fixed on her breasts, suddenly come into view with her shift in position. She turned forward again, certain that Mateo's eyes seldom left her ass as she ran ahead of him.\n\n\"He's getting quite a view,\" she said almost silently.\n\nThey moved quickly, but for Rachel, time moved at an agonizing pace. She was still vulnerable while running along the trail to being caught and discovered by Jeremy and friends, and she absolutely could not let that happen.\n\nMore minutes passed, and her breath grew more labored, when at last they reached the edge of the park.\n\nThe wild tree and bush cover stopped at the park's border. Beyond lay green grass and big trees spaced far apart.\n\nMateo pointed. Rachel followed his finger. It led her to a blue Nissan, in a parking lot.\n\n\"That's my car,\" he said.\n\nHer heart sank. The car was at least several hundred yards away. There was almost no cover between where she crouched naked and the car -- only some trees and a small free-standing restroom building halfway between her and the car. She looked around. The one thing she had going for her was that not many people were in the park. Two people threw a frisbee a few hundred yards away. Somebody read a book on a blanket under the shade of a tree.\n\nBut Jeremy and his friends would be back soon. She just knew it. And they'd be coming back on the trail behind her. She couldn't stay where she was, or they'd see her. It was only a matter of time. She and Mateo couldn't wait.\n\n\"I've got an idea,\" she said.\n\n\"I'm all ears,\" Mateo replied.\n\n\"Let's make a dash for that tree, that one there.\" Rachel pointed to an enormous oak tree, with a thick trunk and a broad crown of branches. \"Then if the coast is still clear we'll run to that bathroom building. And if it's still clear we'll run to your car.\"\n\n\"Sounds like as good a plan as any,\" Mateo said. Rachel thought it was easy for him to say. He didn't have a naked ass on the line.\n\n\"All right,\" she said. \"Let's go... NOW!\"\n\nThey ran out of their hiding place into the open park. Rachel's nude body streaked across the grass in broad daylight. She ran as fast as she could for the pseudo-protection of the big oak tree. Mateo ran alongside her. A grim laugh escaped her as she sprinted forward.\n\nThis cannot be real, can it? she asked herself silently.\n\nAll her senses, and the overpowering fear of being discovered, told her the experience was indeed real.\n\nShe and Mateo made it the oak tree. As she slipped her body behind it, she looked back, and at that very moment she saw Jeremy and his two friends emerge from the dirt trail and ride into the park on their bikes. They rode to the Rivertrail and continued riding in her direction. If they kept going on that path their bikes would pass near her, and they would doubtless see her. Rachel began to panic again. Mateo stood next to her, behind the tree.\n\nThe boys stopped their bikes.\n\nRachel was aware that by focusing so much on the boys behind her she ignored the possibility of someone coming upon her from behind. Her bare bottom was exposed. She turned to Mateo.\n\n\"Can you get behind me? To shield me from behind so nobody sees me?\"\n\n\"Sure,\" he said. He placed his body directly behind hers. His body didn't touch hers, but she felt his heat. Rachel was near sensory overload. She feared she might faint.\n\nThe boys stopped their bikes to the side of the Rivertrail, and they turned away, back toward the direction from which they'd come. Rachel couldn't hear what they said, but they pointed and gesticulated, and she guessed they were wondering where she'd gone. Rachel knew the boys wondered where the naked woman had gone.\n\n\"Let's make a break for the bathroom,\" she said.\n\n\"Now?\" Mateo asked.\n\n\"Yes. While they're looking the opposite way. We can't stay here. They'll see me if we do.\"\n\n\"Whatever you say.\"\n\n\"I say this.\" And she sprinted from her place behind the tree, as fast as possible, toward the far side of the little bathroom building. Rachel couldn't remember the last time she had run so fast. She ran like a deer, bounding through the open park in long, quick strides. It took a few seconds for Mateo to catch up with her.\n\nAt last, they made it to the bathroom building. They scurried around it, to the back side. The doors to the bathroom faced the other way, toward Jeremy and his friends.\n\n\"What do you see?\" Rachel asked.\n\nMateo left her side and snuck his head around the side of the bathroom. He ducked his head back immediately.\n\n\"They're coming this way,\" he said. \"I think they're going to use the bathroom.\"\n\n\"I can't take much more this,\" Rachel said. \"I'm a wreck.\" Her body shivered.\n\n\"Hang in there,\" Mateo said.\n\nRachel pressed the backside of her body against the stucco surface of the bathroom building.\n\n\"Can you stand in front of me?\" she asked Mateo. \"Shield me. Don't let anybody on this side of the building see me.\"\n\nMateo obliged her. He stood in front of her, his partially clad body shielding her fully nude one. He drew close.\n\nRachel heard voices. The boys approached the bathroom. Their voices grew louder and more comprehensible.\n\n\"What's happening?\" she asked.\n\n\"I'll check,\" Mateo said. He left her for a moment and glanced around the side of the bathroom.\n\n\"They're coming this way,\" he said.\n\nRachel was trapped. If she tried to run away from the bathroom in any direction, they'd be sure to see her. She had no choice but to remain hidden on the opposite side of it and wait.\n\nMateo took his place in front of her to shield her from view by anyone behind the bathroom.\n\nThe boys' voices became louder and clearer.\n\n\"I thought we might see her,\" Jeremy said.\n\n\"Too bad,\" another voice said. \"That would have been hot.\"\n\n\"She had a nice ass,\" the third guy said. \"I wish I could have seen it again.\"\n\n\"I wonder if that was her,\" Jeremy said.\n\n\"Who -- Aaron's Mom?\"\n\n\"Yeah,\" Jeremy replied.\n\n\"Come on. You don't really think Aaron's Mom would be running around naked, do you?\"\n\n\"I don't know,\" Jeremy said. \"I just had a feeling. It kinda looked like her.\"\n\n\"Guess we'll never know.\"\n\n\"Guess not,\" Jeremy said. \"Now I gotta take a leak.\"\n\nRachel waited with torturous patience as each of the boys used the bathroom. She heard the tinkle of pee coming through the little open, grated window overhead. Mateo stood directly in front of her, shielding her from view of anyone. Her body squirmed with fear and impatience and her hips pushed forward and for a second, she felt a bulge under Mateo's shorts. She glanced down. It was there, no doubt about it. Mateo was aroused to be so close to Rachel's naked body.\n\nEventually, agonizing minutes later, the boys finished. Rachel heard bikes being picked up off the ground and mounted.\n\n\"Don't let them see me,\" Rachel pleaded in a whisper to Mateo.\n\nMateo drew closer to her. Her hands went to his sweaty torso. His hips pressed against her. Mateo was taller than Rachel, and she felt the thick bulge of his cock under his running shorts against her naked belly.\n\nShe kept perfectly still and quiet. To her left she saw the Jeremy and his friends on their bikes ride past the bathroom. They were not forty feet away, but they were looking in the opposite direction, downriver, toward the Rivertrail. If they thought to glance back, they'd see her. Her heart beat fast with fear. Fortunately, they eyes stayed ahead. She saw them ride to the trail, and then toward the bridge to the other side of the river.\n\nWhen she realized she'd been holding her breath for a full minute, she let it out in a huge sigh.\n\nShe almost buckled.\n\n\"God that was close.\"\n\n\"You OK?\" Mateo asked, holding her up with his hands on her arms.\n\n\"Barely,\" Rachel managed to say. \"Let's get out of here.\"\n\n\"Last one to the car is a rotten egg,\" Mateo said.\n\nWith that encouragement Rachel broke free from Mateo's grasp and sprinted at full speed across the park, toward the car. It was a hundred yards, maybe more, across an open lawn with no trees or obstructions of any kind. Without breaking stride Rachel looked in both directions. To her right she saw a man with a frisbee in his hand stop what he was doing and stare open-mouthed at her. She was caught. He cat-called her from across the park. Rachel felt a twinge of annoyance, but there was nothing she could do about it. All she could think about was the relative security and privacy of Mateo's car.\n\nShe pulled up when she got to it.\n\n\"Open the door, please!\" Rachel cried to Mateo.\n\nMateo fumbled for the key in the pocket in his shorts. The seconds passed with agonizing slowness. It was torture to Rachel. Finally, she heard the chirp and the mechanical sound of the door opening. She pulled the handle on the passenger side and got in.\n\nFinally.\n\nShe closed her eyes and sighed with relief.\n\nWhen she opened them, she spun her head around every which way.\n\n\"Don't you have a shirt I can wear?\" she asked Mateo, who was settling into the driver's seat.\n\n\"Sorry,\" he said, sheepishly. \"I decided not to bring one. I figured I'd just get it all sweaty and have to throw it in the wash unnecessarily.\"\n\n\"You drove for an hour to the park, topless,\" Rachel said. \"That's bold.\"\n\nHis eyes gave her the once over. \"You should talk.\"\n\n\"No kidding,\" she replied. \"Can we get out of here? Take me home please.\"\n\nRachel shrunk down into her seat to prevent being seen. The windows were tinted, a little bit, and that provided a bit of comfort, but the tinting wasn't enough to prevent a determined gawker from seeing that the pretty woman in the Nissan's passenger seat was naked.\n\n\"I'm almost home,\" Rachel muttered softly to herself. \"I'm almost home. Just a few more minutes.\"\n\n\"What did you say?\" Mateo asked.\n\n\"Nothing.\"\n\nRachel gave Mateo directions. He pulled the car out of the parking lot and soon they were driving back toward her house on Laurel Lane.\n\nIt seemed to Rachel that the car moved with an abnormal and perverse sluggishness, as though wanting to prolong the chance for her to be exposed. She knew, rationally, that it wasn't so, and that Mateo drove quickly but carefully. To say the least, it wouldn't do to get pulled over for speeding.",
        "No sooner did that thought form when she saw a sheriff's deputy patrol car parked at the side of the road ahead. Her heart rose into her throat. No doubt he had his meter out and was looking for speeders to pull over. She glanced at Mateo's speedometer -- right at the speed limit. She looked at Mateo and could see that he was aware of the sheriff's car. She shrunk further down into her seat to remain out of view of the deputy.\n\nThey passed the deputy's car without incident. Rachel felt like she might pee with nervous relief. She crossed her legs.\n\nSoon Mateo pulled onto Laurel Lane, crowned in its familiar canopy of huge trees. Rachel saw Mary Millstone in her front yard as they passed by, but fortunately Mary was focused on watering her hydrangeas and paid no attention to the blue Nissan.\n\n\"That's it,\" Rachel said quietly, pointing to her driveway. A portion of the driveway extended directly in front of the door. \"Pull in there,\" Rachel directed Mateo. Mateo did as she asked, and the car came to a stop.\n\nRachel turned this way and that, scanning the street. The blue Nissan blocked the view to the door, partly, but not completely. There was no sign of anybody who might see her, but she knew the nosy neighbors on Laurel Lane might be curious about who might get out of an unfamiliar blue Nissan in front of Rachel's house.\n\n\"Come with me, just in case,\" Rachel said to Mateo. She wasn't sure what she meant, but she felt safer with him close by as long as she was naked outside.\n\nHer reconnaissance done, Rachel got out of the car, hunched over, and ran to the front door. She pulled the key out from under the mat, put it in the front door, opened it, and stepped inside, to the air-conditioned safety of her house. Mateo followed her.\n\nRachel hopped over to the house alarm console on the wall nearby and punched in the code.\n\nShe sighed, and she staggered back toward the front door.\n\nShe collapsed into Mateo's arms. He held her up. Her nude body was pressed against him, and that meant her bare breasts were mashed against his bare chest, but she couldn't think about that. Rachel needed a moment not to think about anything, and she needed someone to hold her up.\n\n\"It's OK,\" Mateo said.\n\nShe guessed that he was right, but she needed a little more time to process the thought.\n\nRachel felt spent. Her legs quivered. Had it not been for Mateo, she would have sunk to the floor. She might have cried. But Mateo's arms and steady presence calmed her. He said nothing. Rachel thought how strange it was that she was content to stand naked in the arms of a man she barely knew. She didn't know his last name. She didn't know what he did for a living. She didn't know where he lived. But his body was lean and lightly muscular and comforting, and he had a nice quality about him: masculine and safe. For the moment, she needed safe.\n\nRachel leaned forward, pressing against him, and stood still in his arms.\n\n\"I don't know what you must think of me,\" she said, after perhaps a minute.\n\n\"I don't know,\" he said at last. \"I don't really know you. But you are beautiful. And you have a nice house.\"\n\nRachel laughed a little at that.\n\n\"Thank you,\" Rachel said. \"Thank you for saying that, and thank you for helping me.\"\n\nHer legs steadied, and she stepped back from Mateo, in the foyer of her house. She held her hands at her sides. Her nude body lay completely exposed to him. She gazed, frankly, over Mateo's body -- the long, firm legs, the flat, striated wall of his abdomen, the surprising breadth of his shoulders over his lean torso. But for his brief running shorts, he was as exposed as she was. His skin, hair, and eyes were dark. She knew nothing about him but guessed that he was of Latino heritage. As her eyes moved over his body, his eyes moved over hers. She felt pleasure and comfort in his gaze. His eyes lit up with excitement but his body was composed and still. She felt safe in his presence. After a minute or so of mutual admiration his voice broke the silence.\n\n\"Can I kiss you?\" he asked.\n\nRachel nodded. \"Sure.\" She grinned. \"I think you've earned that.\"\n\nHe approached her and cradled her waist in his hands. His fingers lay strong but gentle against her sides. A hand slid to her ass and pulled her to him. His head went forward and bent to the side and Rachel bent her head to the side the other way to meet him. Their lips met.\n\nMateo kissed her in a way that was unfamiliar to Rachel -- insistent, but slow, and gentle. Stan always had kissed her in a completely different way -- in an impatient rush. Stan was the sort of man who always desperately wanted to get some place but could never take the time to enjoy himself when he got there. His kisses and lovemaking were like that. But Mateo's kiss -- for it was that, just one long, slow kiss -- was completely different. Rachel felt that every part of her lips was being slowly and fully caressed by every part of Mateo's lips. No part of her lips was ignored. His tongue didn't come too fast, but when it did come, it was welcome, and she opened her mouth eagerly to let it in. Their tongues played and danced with each other. Rachel's body shivered.\n\nThey drew their mouths apart. Rachel bent down, and her hands went to Mateo's running shorts. She gazed at his face, and he nodded. She pulled them down, and his cock -- hard and pleasantly long -- sprang forward and wobbled in front of her. She kept pulling the shorts down until they were on the floor, and he stepped out of them. She kicked off her running shoes, and he kicked off his. They threw their socks to the foyer floor. They both stood completely naked before one another.\n\nRachel grabbed Mateo's cock. She liked its hardness.\n\n\"Not here,\" she said. \"Outside.\"\n\n\"What?\" Mateo asked.\n\n\"Outside. It's Nude Day. We have to do this outside. In the backyard.\"\n\n\"Whatever you say,\" he said.\n\nRachel led Mateo by his cock through the house, never letting go, leading him to the backdoor, which she opened with her right hand while her left held fast to his shaft.\n\nThe two of them stepped naked together into the backyard, under the sun again.\n\nRachel pulled Mateo forward, toward the swimming pool. Near the pool stood an enormous grill, one of Stan's favorite toys, encased in tile and steel and concrete. Rachel turned around, sank to her knees, kneeling on the patio tile, and she took Mateo's hard, swaying cock in her hand.\n\nShe enclosed her lips around it -- just the head at first. She sucked hard and her cheeks caved in, and she looked up at Mateo, whose face was, frankly, cute with disbelief at his luck, and she gave him a doe-eyed expression that spoke of submission and supplication that every man she'd ever known wanted. Mateo seemed no different. He stared at her, rapt by the loving attention she gave his penis.\n\nThen she began really sucking. The fingers of her right hand encircled the base of his shaft, and the fingers of her left cupped his balls. Her tongue traced the edge of his glans while she kept up the rhythmic sucking pressure on the helmet of his cock. Her eyes never broke contact with his.\n\nStan had been a demanding but unappreciative lover. At his direction and insistence, she'd learned skills at lovemaking, like giving good blow jobs, but she'd never felt they were being applied to, or appreciated by, the right man. This felt different. Mateo gasped, and his eyes opened wide. Rachel had never felt a harder cock in her mouth. She wanted it hard. She wanted to make this cock happy.\n\n\"That's amazing,\" Mateo said.\n\nIt was amazing for Rachel, as well. Mateo was her first man since her divorce. The hard, thick cock in her mouth was like candy.\n\nShe felt Mateo's hands grasp the sides of her head. He looked at her and his eyes bored into hers, wide and curious, and she nodded as well as she could with the thick cock in her mouth to signal that Mateo should do what he wanted to do.\n\nHis hands pulled her head forward and his cock went deeper into her mouth. Rachel gagged. She'd never quite mastered the art of deepthroating, but she liked the challenge and enjoyed the pleasure It gave her partner to take her mouth that way. Mateo fucked her mouth deep and hard. Rachel had to draw breaths where she could between the rapid thrusts of his man shaft into her. She growled and grunted to signal her pleasure. Drool trickled out the side of her mouth.\n\nThey went on like that for a long time -- how long, Rachel didn't know. But she knew what she wanted, and it was her house and her day and by God she was going to get what she wanted. She wanted more than fellatio.\n\nShe pulled her mouth off Mateo's cock, and it left her with a loud slurpy \"pop.\" Mateo looked at her, puzzled, but Rachel just smiled at him and stood up.\n\nShe turned around, away from Mateo. She leaned forward, setting her hands on the grill counter. She pushed her ass back. She said nothing more.\n\nShe didn't have to. Mateo knew what she wanted, and her needs met his. She felt strong hands grab her hips, and a hand lovingly slap her ass. Then she felt hard flesh -- Mateo's cock -- slap against her backside until it slipped into the crevice between her ass cheeks. It pushed forward, to her waiting lips, and they gave way. He pushed inside, and then they fucked.\n\nHe fucked her, not too fast and not too slow -- with long, steady, deep thrusts, every one of which filled her with indescribable satisfaction. Rachel squealed and grunted, heedless of what her neighbors might hear. The fucking mattered more in that moment than anything else. She pushed back against every thrust to maximize the depth of his cock inside her. The thickness of his cock was a challenge, but she was so lubricated by her arousal that it didn't matter. Her pussy was so wet and slippery that Mateo pistoned in and out of her with ease.\n\n\"You have an amazing pussy,\" Mateo said.\n\n\"It likes you,\" she said back to him. \"Just keep doing that.\"\n\n\"I will.\"\n\nAs their bodies slapped against one another it occurred to Rachel that this was the first time she'd ever made love in her back yard. Once, on a summer evening years ago, she'd suggested doing it to Stan, but he refused. It was too risky, too inappropriate.\n\nIt was pleasant, after the nerve-wracking events of the day, to lose herself in the pleasure of being fucked -- that glorious combination of pure self-pleasure and submission to a man's needy cock. Her thoughts of the day slipped away. All she felt or cared about or thought about was Mateo's hard thrusts into her.\n\nAnd thrust he did. Mateo was a good lover. It was almost surreal to Rachel that she'd only met him a few hours ago, that she still didn't know him, and yet that he was now pushing his cock up inside her in her backyard. But however weird it was, it felt good. Rachel closed her eyes and savored the warmth of the sun on her face and the fast and furious pressure of Mateo's cock against and inside her pussy.\n\nHer body rocked and her breasts swayed wildly at the movement of their bodies together. Her pussy grew wetter with increasing arousal, and the sound of his cock moving in and out of her grew louder.\n\nRachel groaned with pleasure and looked all around. Tall shrubs and trees screened her yard from view by neighbors in almost every direction, so there was little risk that anyone would see her. But it seemed fitting to cap off Nude Day by making love outside, with no ceiling above her but the bright blue sky.\n\nShe heard Mateo's low delighted growling behind her. His fingers dug into her sides. He kept coming at her, stroke after delicious stroke.\n\n\"You're going to make me come soon,\" she said.\n\n\"Me too,\" Mateo said. \"I'm going to come inside you.\"\n\n\"I want that,\" Rachel said.\n\nShe gripped the grill counter tighter, until her knuckles grew white, and she pushed her ass back faster against Mateo, until the slapping of their bodies grew loud. Rachel knew that any of the neighbors over the fence, if they were in their yards and bothered listening, could have heard her being fucked by Mateo. But she was long past caring about that. She wanted to come. She wanted Mateo to come inside her.\n\nRachel came first. Mateo shifted his body, just slightly, but enough to change the way his cock head hit her insides, and it sent her over the edge. Her body surrendered and the wave shook her. Her body spasmed. Flecks of moisture spritzed from her pussy and dotted her thighs and the patio tile. Rachel gasped and then cried out. She couldn't help it.\n\nHer reaction spurred on his. She felt the pace of his cock quicken, and it almost felt like his cock widened at the last minute. Rachel moaned at its thickness in her. She knew Mateo's forceful plunder of her depths would leave her sore the next morning. But she didn't care. She needed to feel his cock spill its seed inside her.\n\nShe got it a minute later. Mateo called out before he came -- a deep baritone bellow into the summer sky -- and then Rachel felt his body shake as he released inside her.\n\nHis fingers clung forcefully to her hips, almost hurting her, as he finished. Their bodies shook together, and when the shaking was done, they stood together in the backyard under the sun, his cock and her pussy still joined, neither wanting to separate from the other.\n\nWhen their orgasms subsided, his cock slipped out of her and some of his cum dripped out. Some of it spilled to the tile patio and some of it dribbled down her thigh. She turned her body back to him and grabbed his face in her hands and they kissed again. The kiss lasted a long time.\n\nThey finished kissing and pulled apart from one another. They looked at each other -- a man and a woman, naked, having just fucked one another, both content and fulfilled, but barely knowing each other. Rachel enjoyed the lean, sculptured masculinity of Mateo's body, and she could tell from the movement of his eyes on her that he enjoyed her body just as much. They said nothing for a while.\n\n\"I'm curious,\" Mateo asked after a long silence. \"What made you do all this? You don't seem like the kind of girl to take such a risk.\"\n\nRachel didn't know what to say. She threw her hands up to the sky and shrugged.\n\n\"It's Nude Day.\"\n\nMateo nodded. \"That's it?\"\n\n\"That's it,\" Rachel said, nodding back.\n\n\"Was it good?\" he asked.\n\nA broad smile swept over Rachel's face. \"It's the only Nude Day I've celebrated, but yeah. It was great. I can say that now anyway. It didn't seem so great an hour ago.\"\n\n\"I'm glad I could do my part,\" Mateo said.\n\n\"You did more than that.\" She drew close to him. \"Maybe we can think about the next Nude Day.\"\n\n\"I like that idea.\"\n\nThey kissed again, their bodies mashed tightly against one another. Mateo pulled away at last.\n\n\"I have to go, Rachel.\"\n\n\"OK. See you later?\"\n\n\"Definitely.\"\n\nMateo and Rachel walked back into the house, and he put his shorts and shoes back on. Rachel stayed naked. She wrote something on piece of paper and handed it to him. \"My number.\" She walked him to the door.\n\n\"Bye,\" she said.\n\n\"For now,\" he said.\n\nMateo drove away.\n\nRachel stood inside her house. She was still naked. She wondered how long it had been since she had worn any clothing. An indeterminate number of hours. However long it had been, she wasn't ready to get dressed yet. After all, it was still Nude Day.\n\nRachel strode through her house into the backyard. All the delights of the summer day still abounded -- the warmth of the air, the scents of flowers, the sounds of life all around.\n\n\"What a day,\" she said to herself.\n\nShe threw her hands into the air and twirled.\n\nShe stopped twirling suddenly when she noticed movement above and to the side, beyond her fence, in a second-story window of her neighbor's house. Her strange, silent, elderly neighbor Walter's face loomed in the window. He was staring at her, and he was smiling.\n\nHe gave her two thumbs up."
    ],
    "authorname": "SimonDoom",
    "tags": [
        "nude day",
        "exhibitionism",
        "blow job",
        "female exhibitionist",
        "female masturbation",
        "naked in public",
        "outdoors",
        "stranger",
        "exposed",
        "embarrassed"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/nude-day-running-adventure"
}