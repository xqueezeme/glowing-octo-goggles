{
    "title": "Silverfish Ch. 03",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, Case of the Murdered Bride series, The Credit Card Caper series, The Hot Wives Investment Club series, Seriously Inconvenienced series, Case of the Paper Trail series, Christmas Mystery Theater, The Porno Set Mystery series, The Medical Murder Mystery series, The Eightfold Fence series, Pale Morning Light series.\n\nSilverfish, Ch. 01-03\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 15 - The Net \n\n2:00am, Monday morning, March 16th. The previous day had been the Ides of March, the day Julius Caesar was assassinated. It was on March 15th one year before that there was an attempt to assassinate me in the street. As always, I remembered how I was able to do what I do:\n\nI think of Laura. The rest is easy.\n\nAnd it was going to be easy tonight, I hoped. We were waiting inside the bank vault for the criminal 'Silverfish' to arrive and take the proceeds of the Reverend Robert Patterson's 'love offering', collected after his moving sermon at First Baptist Church. The church's main auditorium could hold more than 2000 people, and it was an overflow capacity in the chamber to hear the Reverend Patterson.\n\nThe police entourage had carried the money to the bank. On the way to Second National Bank, everyone had been especially watchful. A few police cars stopped at the bank, where people with a bag of money were admitted before the doors were closed and the blinds drawn. The rest of the entourage took the Reverend Patterson and his group back to the Hyatt Hotel. Police details covered the parking lot, lobby and the floor where the Oldeeds Group's rooms were.\n\nNo one seemed to take notice the small, two-car entourage that left First Baptist about 30 minutes after the larger contingent. Inside the front car was Pastor Bundy and an assistant, along with a police driver. In the second car was myself and Cindy, with a police driver.\n\nAfter counting and depositing the money, Pastor Bundy and the bank official left, securing the bank in pitch darkness.\n\n* * * * * * * * * * * * * * * *\n\n\"I don't like this.\" said Henry R. Wargrave as he watched from the back of a black car parked a distance from the County Regional Bank. His bodyguard was in the front passenger seat. \"Something's not right.\"\n\nTwo car door opened. The car driver got in behind the wheel, and a man dressed in all black got in back and sat by Wargrave. He was The Silverfish. \"It's secure, sir. We used thermal imaging. Nobody's hiding inside. I got word from Second National; they've got three people hiding in a back office there, they lit up the thermal imagers like Christmas trees.\"\n\n\"All right.\" said Wargrave. \"Something's not right, but damned if I can see what it is. See that black car parked next to the Depot building?\" He pointed at a black car in the distance. \"The keys are in the ignition. Get to the bypass, curl up and go west out of State. Park behind the empty farmhouse at the location I gave you, and relax until the morning. Plan to meet my agent at 8:00am at the Country Breakfast Diner on the west side of Town. You'll swap keys while eating and take each other's cars. Keep the money that'll be in your getaway car; it's yours. Drive to California and lose yourself in the Bay Area. I'll be in touch in the next couple of months, standard contact method.\"\n\n\"Yes sir.\" said Silverfish. \"By the way, I'm just enormously curious: why are you doing this? It's not like you need the money, sir.\"\n\n\"For the same reason you are, my friend.\" said Wargrave. \"Because these are my instructions. Okay, at your leisure, go. Once you get out of the car, I'm pulling out. Good luck.\"\n\n\"On my way.\" said Silverfish. He got out of the car, hearing the engine crank, and seconds later he was watching the car's taillights disappear down the road.\n\nOne more check with the thermal imaging device, seeing nothing. Then he put on the silk, full-face ski mask, only his eyes showing. He walked swiftly to the back door of the bank and used the code to turn off the alarm. To be sure, he activated a switch that caused the phone system to go down. Residents shouldn't notice until the morning, and it would ensure any unknown secondary alarm systems couldn't notify the Town & County Police of his presence at the bank. He needed the Iron Crowbar and his fellow officers sitting at Second National Back to continue to wait for him there. Alerting them to his presence here would make it a most very bad day for him.\n\nThe key he'd been given worked perfectly; he unlocked the back door and walked in. Locking the outer door from the inside, he moved to the next set of doors, which also opened with the same key. He moved into the dark lobby.\n\nNight vision goggles got him to the vault door, but he'd need a small light to see the numbers and dial the combination to open the large vault door. Crouching at the door, he sat on his knees, immobile, listening intently for the least sound. He could hear light traffic in the distance, but no car came up the road that led directly to the bank.\n\nFinally, he dialed the combination, and at the last number he heard a sharp, loud click. He turned the big wheel, which began moving the large steel rods out of their slots. Round and round and round and round the wheel went. When it stopped, he pulled hard on the huge steel door. It was so well balanced that he alone could pull it open with a bit of effort.\n\nJust as he stepped into the vault, he turned on his flashlight-\n\n\"UUHK!\" he gasped. Hands had grabbed him and hurled him to the floor! He was on his belly, his hands being pulled behind him, a huge weight on his back. He heard as well as felt handcuffs being snapped onto his wrists.\n\n\"Okay, come on in.\" he heard a voice say into a radio. Seconds later the entire parking lot was bathed in the blinding blue and white LED lights of police vehicles. Officers poured in as the lights came on. Silverfish was grabbed and dragged into the lobby, and put in a sitting position on the floor as the indoor lights of the bank were turned on.\n\nHe looked up at the tall, broad-shouldered man in the Tilley Hat with Airborne wings and a police badge affixed, a light trenchcoat covering his black-clad body, a red crowbar in his hands. Next to him was a platinum blonde woman in all black, a blue crowbar... and the silver Sharpie she had removed from his pocket.\n\n\"Mr. Silverfish, I presume.\" said the man. \"My name is Commander Donald Troy. It was so kind of you to visit us tonight... Mr. Jesse Keynes, Chief Accounting Officer of Acme Consolidated, Inc.\"\n\nOnly after saying his name did I reach down and remove the perp's mask. Indeed it was the face of Jesse Keynes that looked up at us.\n\n\"What the hell is this?\" Keynes asked, clearly shocked.\n\n\"This... is the Iron Crowbar at work, Mr. Keynes.\" said Cindy. \"Not much gets by this man, and it was stupid, very very stupid, of you to draw his attention to yourself like you did.\"\n\n\"Sergeant, read the man his rights, and make sure to videotape yourself doing so.\" I said. This was done rapidly, then I squatted down next to the still-stunned Keynes.\n\n\"What this is, Mr. Keynes, is that you are under arrest for burgling this bank. My partner and I were inside the vault itself, where your thermal imaging device did not detect us. We were expecting a visit from you tonight, Mr. Keynes... a.k.a. Silverfish. Okay, guys, take him to Headquarters and book him, then take him to Interrogation-1...\"\n\n* * * * * * * * * * * * * * * *\n\nThe powerful lawyer from Gresham & Mason, P.C. had appeared at Headquarters almost at the same time I did, insisting on being Keynes' legal counsel. I had him escorted to Interrogation-1, and told him to confer with his client within the fifteen minutes it would take me to get in there.\n\nCindy and I changed clothes, into Police Uniforms with light blue shirts, darker blue soft shoulderboards with our ranks, darker blue pants with piping (Cindy's light blue, mine yellow).\n\nWe entered Interrogation-1 and sat down. Keynes and his lawyer opposite us. Sergeant Rudistan was standing in the corner behind them; he always volunteered to do this for the big interrogations, I noted with some internal amusement.\n\n\"So what will you offer for my client's truthful testimony?\" asked the lawyer.\n\n\"Come on, Counselor,\" I replied, \"it's three o'clock in the morning, but I am not asleep at the wheel here. Your client gets no deals at all. He knows, as you do, that his only chance to live is to tell everything he knows before the Big Man comes for him.\"\n\n\"You've got nothing.\" said Keynes. \"You caught me in one little country bank. So what?\" I pointed my pen towards the door. Into the room from the anteroom bounded Detective Joanne Cummings, wearing light blue shirt with darker blue shoulderboards of rank, and a blue skirt and medium black pumps.\n\n\"Why Mr. Keynes, what a surprise to see you here!\" Joanne gushed as she handed me a piece of paper. \"I guess I won't have a chance to talk with you about accounting, after all.\" Keynes' face fell a bit as Joanne turned to go, a bright smile on her pretty face.\n\n\"As you can tell, Mr. Keynes,\" I said, \"It's been pretty obvious to us who the Silverfish is for quite a while. Detective 'Carnes' there got a good piece of information from you... about how you made sure the deposits were in, so that when you stole them it was like doubling your money at the roulette wheel.\"\n\nI continued: \"All I needed to do was set a trap for the Silverfish, who thought he could really humiliate me by hitting the bank he thought I was not at, while I sat at the bank he thought I was sitting at... a trap which we effectively sprang upon you tonight.\" I leaned forward. \"Now why don't you come correct and talk. I'll get you the best deal I can, and maybe I can keep you alive long enough to do your time and get out.\"\n\n\"Plead the Fifth now, don't say anything more.\" said the lawyer. \"That's truly your only hope here.\"\n\n\"I waive my right to counsel.\" said Keynes. \"This man does not represent me. I'll cooperate with you.\" Surprisingly, the expensive lawyer did not argue; he simply stood up to go.\n\n\"Counselor,\" I said as the lawyer moved to the door, \"I'm getting real tired of seeing Gresham & Mason legal beagles in my Interrogation rooms.\" I said. \"You'd-\"\n\n\"We'll be in here when we damn well need to, in order to protect our clients from your abuse!\" the lawyer thundered, menace in his voice. I held up my hand.\n\n\"You didn't let me finish.\" I said, looking the lawyer squarely in the eyes. \"I know you're here to protect your client's... your real client's... interests much more than the people I have brought in here. Tell your boss that my patience is wearing thin... and that I'm coming after him.\"\n\nThe lawyer glared at me, but I could see that he was trying to gauge if I was bluffing, and how much I really did know. After a moment, he left.\n\n\"Okay, Mr. Keynes,\" I said, \"you were saying? Or shall I tell you, and you just fill in the gaps, okay?\"\n\n\"Why do I get the feeling you really could do that?\" Keynes said, a half-smile on his ruggedly handsome face. Cindy could not hide a smile, either.\n\n\"You were in a high position with the Oldeeds Ministries empire.\" I said. \"Inside the Accounting Group. You and others, including Oldeeds himself if I don't miss my guess, came up with the idea to steal the money that you deposited in the banks after the generous donations of Oldeeds' followers. You bragged to Joanne that you personally made the arrangements with the banks. So you knew which bank it was, and all you needed was some information about the banks.\" Jesse's eyes again showed defeat when I mentioned Joanne's visit to him.\n\n\"So, you worked with someone, a friend of Jonas Oldeeds, who had resources to get the information of any bank you needed. Maybe you were told which bank to use beforehand, but in any case you obtained the security codes or means to disable the security, as well as the vault combinations themselves.\"\n\n\"You then went in and, perhaps with a confederate or two, took all the cash. Since it wasn't sequentially numbered or delivered by the Federal Reserve, it was virtually untraceable. And if Oldeeds got $300,000 in donations, they were getting $300,000 in stolen money, effectively doubling their money. The legal money went to the Ministries, the stolen money to the international human trafficking operations-\"\n\n\"Let me tell you right now: I had nothing to do with human trafficking, and I never touched an underaged girl. I never needed that shit.\" Keynes said. I could tell in his eyes that he was being sincere.\n\n\"What do you know about that?\" I asked.\n\n\"Not enough to help the FBI get a conviction of anyone, if that's what you're asking for.\" said Keynes. \"Jonas never let people inside his legitimate Ministries, which included me, work for or with the dark side of that business. He always kept the two separated, like the 'A' and 'B' sections of the Coca-Cola factory. He's dead, so you'll never arrest him, and I simply don't have the evidence nor the knowledge of those operations for you to get anyone else.\"\n\n\"Okay, but I'm right that the money went to that stuff?\"\n\n\"Some of it.\" Keynes replied. \"I kept some off the top for doing the jobs. A tenth. I banked a million in addition to the generous salary Jonas paid me. Jonas also stuffed some political pockets with the dirty money, and gave some bonuses to his top people.\"\n\n\"Why did you stop at ten million?\" Cindy asked.\n\n\"The initial idea was to take the offerings, steal the cash from the bank, and we'd have double for nothing, so to speak, as you said a minute ago.\" said Keynes. \"Jonas used the money for seed money for some of his international smuggling schemes. We knew those would pay off for many tens of millions over time. As we neared ten million, Jonas and I discussed stopping at that point. I knew my luck had been more than good and that it would run out if I pushed it. Jonas didn't need the money any more. So after the last haul, I posted a farewell message and retired. I didn't rob a bank again until this past week.\"\n\n\"And why did you do that job?\" I asked. \"To tweak me?\"\n\n\"I did it because my boss told me to.\" Keynes said with alacrity. \"And that included writing messages about 'Hello Iron Crowbar' and then drawing crowbars. I didn't even know who you were until you were standing over me with that red crowbar at the bank a few hours ago.\"\n\n\"See, partner?\" I said, addressing Cindy. \"I'm not nearly as famous as you think I am.\"\n\n\"So you say.\" said Cindy. \"Mr. Keynes, is your boss Henry R. Wargrave?\" The question took me by surprise. Why did Cindy ask that so directly? I wondered. Gears started turning in my head.\n\n\"He's my boss at Acme, if that's what you mean.\" said Keynes. \"But he's not the guy who helped me with the bank jobs, nor told me to do the ones this past week. And before you ask, I don't know for sure who my boss is. He's known as the Shadow Man to us, and possibly other names to others. He tries to keep the left hand from knowing what the right hand is doing, to quote a Biblical phrase.\"\n\nThat struck me, and set more gears in motion in my head. I realized that I had just heard something very, very important. But I continued with my line of questioning as I said as if musing: \"So he could be standing next to you, and you'd never know who he is.\"\n\n\"Yeah, essentially.\" Keynes said. \"He gave orders by telephone or email, sometimes through Mr. Wargrave.\"\n\n\"Did Wargrave ever have you do anything illegal?\" Cindy asked. She was really pushing the Wargrave angle, I noted as Keynes smiled.\n\n\"Not until tonight.\" answered Keynes. \"I was too public a figure, I was listed on his tax and corporate papers. He only had me do legit stuff until these last four bank jobs the past few days.\"\n\n\"That may technically be correct.\" I said. \"And up to this point, Mr. Keynes, you've been telling the truth, at least I believe you have. But you're not telling the truth about Wargrave. I think you know a lot more.\"\n\n\"Best of luck with that.\" Keynes said. And then I had the insight. I understood what Keynes was doing. I had nothing personally against him, so I felt the need to give him a warning.\n\nI looked the man dead in the eye and said \"Mr. Keynes, you need to be much more careful. This is a dangerous game you are playing here. Both ends against the middle. It can easily get you killed.\"\n\nKeynes peered hard at me, as did Cindy. Keynes's eyes showed me that he understood, fully understood, what I had meant. He knew that I knew.\n\nAt that moment, there was a knock on the door from the anteroom, and Jack Muscone peeked his head in. I rose and came into the anteroom.\n\n\"He's yours.\" I said. \"He needs to be in Federal custody. Protective custody, too, or he's going to come over all dead. We have the bank burglary charge, but he's admitted to the Silverfish crime spree, and the U.S. Attorneys can overcome the Statue of Limitations problem.\"\n\n\"I heard the last bit of it.\" Muscone said. \"Not much on Wargrave?\"\n\n\"Not yet. But I suspect he's going to sing, though he'll pretend to make you force it out of him after your best interrogators spend hours with him.\" I said. \"But in the end, he'll sing like a bird about Wargrave, and he'll likely give you what you need to bring down Wargrave, or at least get on the right path.\"\n\n\"Oh really?\" Muscone said, surprised. \"How do you know?\"\n\n\"I don't know,\" I replied, \"but I'm guessing that Silverfish here is being used, and will follow the script he's been given. He may come to realize it, so act fast.\"\n\n\"Thanks, Don.\" said Jack Muscone. \"Okay, we'll take him.\"\n\n\"Let me just ask one more question.\" I said. I went inside the Interrogation Room again. \"Mr. Keynes, do you know a Mr. Harkins of the Second National Bank here in Town?\"\n\n\"No sir, never heard of him.\" said Keynes.\n\n\"So you wouldn't know where he is?\" I asked. \"Think about it, it's important.\"\n\n\"No, sorry, I have no idea.\" said Keynes. I knew he was telling the truth.\n\nAn opportunity missed.\n\nPart 16 - Solution \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead reporterette from in front of County Regional Bank at 7:00am Monday, March 16th. \"Channel Two News is bringing you live coverage from County Regional Bank, where a burglary was detected and defeated by Commander Donald Troy of the Town & County Police Department last night!\"\n\n\"And my Team, Bettina, and my Team.\" I said to the TV screen in MCD.\n\nBettina continued: \"Channel Two News has learned that the bank robber was a man known to the FBI as The Silverfish, who committed a string of bank heists across the nation about a decade ago. His real name is Jesse Keynes, a high-level accountant at Acme Consolidated in the City. Acme Consolidated issued a statement this morning that they were not aware of any of Keynes's crimes, and will make a further statement when they learn more themselves. The FBI said in a statement that it is not known why someone in Keynes' position would resort to robbing banks, but Keynes was caught in the act as he tried to take the love offering collected for the Reverend Robert Patterson after his rousing revival sermon at First Baptist Church last night...\"",
        "* * * * * * * * * * * * * * * *\n\n\"I'm just a country Sheriff, Commander,\" said Sheriff Sorrells, sitting in a chair in my office with Sheriff Allgood next to him in the other chair , \"but even I can see that this is something big. And there's been a number of things in my county that have spilled over from yours, hasn't there?\" I knew that Sorrells was not the dumbest rock in the box.\n\n\"Yes, Sheriff.\" I said. \"Between the Asylum and this bank heist, you've been dragged into some bigger issues.\"\n\n\"Yes, and that's why I came up here this morning, Commander.\" said Sorrells. He instinctively dropped his voice as he said \"I've been looking quietly into the corruption going on in my county. I thought that Eckhart cult fellow was going to turn out to be behind it, but that's not the case. That guy is more straight-up and has helped a lot more people than he gets credit for. I'm not saying he's totally clean, but he's not the problem.\"\n\n\"I can agree with that.\" I said quietly. \"What else did you find?\"\n\n\"Some of the corruption is political.\" Sorrells said. \"Your police Captain Malone, who was recently found dead in Alabama, was in league with my predecessor and other officials to run drugs and launder money, or at least let certain gangs do so. And I need not tell you about the racial component that Malone used and was a part of. That's rife in my county, part of the fabric there.\"\n\n\"No, you don't need to tell me.\" I said agreeably.\n\nSorrells then said \"But what I also found, just the faintest whiff of it, was that there is another organizing force, maybe behind Malone, maybe separate, but definitely there. And whoever this guy is, he's hidden very, very well. We catch some boys running drugs, and maybe one guy drops a hint that they have a leader, but the rest of them say it's just a local small-time thing... then the best lawyers in the State show up to defend them in Court, and their cases are rigged to be dropped. I try to look into that, and can't find a damn thing, and the judges like Stone and that prosecutor Sanders tell me to lay off, then tell me to watch my back... and the one kid who spoke up ends up floating dead in the River. Now I'm not afraid of these bastards, but I am worried that I can't fight what I can't see... I'm not much at 'shadow boxing'.\"\n\n\"I hear you, Sheriff.\" I said. \"And allow me to suggest that you do lay off, at least when they're watching. There are indeed some big issues, and people have indeed turned up dead because of it. I don't want you to be on the casualty list. Remember that fire at my home on the mountainside?\"\n\n\"That was them?\" Sorrells asked, his face showing shock.\n\n\"Oh yes.\" I said. \"Oh yes.\"\n\n\"So,\" said Sheriff Sorrells, \"who gets jurisdiction on this dog? I've asked for it, and both Eastphalia and Westphalia and their counties have, also.\"\n\n\"The FBI is going to take it.\" I said. \"They're going to connect him to the 30 earlier Silverfish heists, and work to overcome the Statute of Limitations. They also want other information out of him, so I wouldn't count on getting him to your County, Sheriff.\"\n\n* * * * * * * * * * * * * * * *\n\nLunch was at the Cop Bar paid for by FBI Special Agent In Charge Jack Muscone (your tax dollars at work). Also present were myself, Cindy Ross, Daniel Allgood (invited by Jack), Sandra Speer, Lindy Linares and Eduardo Escobar. \n\n\"It was an interesting case, though it was pretty easy.\" I said.\n\n\"Easy!\" gasped Sandra Speer. \"The FBI never solved this in a decade!\"\n\n\"But the Iron Crowbar walks in and gets it done in a couple of weeks.\" said Lindy Linares, her eyes looking at me very flirtatiously.\n\n\"Well,\" I said, smiling, \"it was a stroke of good fortune that I correlated the Oldeeds appearances with the money heists. But once that happened, things fell into place pretty easily... almost too easily.\"\n\n\"How do you mean that?\" Cindy Ross said, the only one at the table who was truly catching on to what I was thinking.\n\n\"Keynes made it really easy by giving us a few new crimes to work with.\" I said. \"And then one that let me trap him so easily. Compare and contrast to Mr. Harkins, who outright lied to police about the money in Second National Bank that was stolen by Silverfish... Harkins knew it had been an Oldeeds event, not a Crown Chemicals payroll, but he made sure to lead my officers astray with his story. Damn, we were so fucking close...\" I did not finish the sentence as I contemplated our bad luck on that one. \n\n\"And now he's on the run.\" said Jack Muscone. \"Not a whisper of a trace of him, either. As to Keynes, he's talking up a storm. Keep this between us, but he is giving us just about everything he has on Henry Wargrave. Not so much criminal stuff, but threads that are leading us to a more complete picture. We may be getting enough to actually go after the guy.\"\n\n\"Another convenient coincidence.\" I said. Muscone's face showed his complete lack of understanding, so I asked \"Did he say why he started the Silverfish heists again?\"\n\n\"He said he was told to, by Henry Wargrave.\" Jack said. \"And that's one of the key things: apparently Wargrave is being squeezed financially. He has billions, but they're either locked up or being blocked from him getting at them. So we're thinking Wargrave asked Keynes to do the heists to get some operating capital.\"\n\n\"Sounds reasonable.\" Sheriff Allgood said.\n\n\"I'm not sure the Commander is as convinced, Sheriff.\" Cindy said, seeing the expression on my otherwise silent face. Everyone looked at me.\n\n\"Crowbar 2 is right.\" I said. \"Something's just a little bit off on all of it. Too many coincidences. Silverfish starts his career back just as I'm being given the information about the 30 heists to look at. Then the Reverend Patterson and the Oldeeds Gang come back to the County just in time for Silverfish to attempt to rob their offering money, and of course that lets me set the trap. As that old Saturday Night Live 'Church Lady' skit would say: 'How conveeeenient!'.\"\n\n\"Put like that,\" Special Agent Escobar said \"it does seem kind of strange. So what does it mean, Don?\"\n\n\"It means that someone knew I was going to be put on the trail of the Silverfish,\" I replied, \"that someone knew this would lead me, and you, to Henry R. Wargrave. So either he is immolating himself, committing 'suicide-by-FBI'...\"\n\n\"Or it's not him that was controlling Silverfish.\" said Cindy, getting it. I was mildly disappointed that all of the FBI agents looked so shocked at her words.\n\n\"So who was it then, Lieutenant Ross?\" asked Jack Muscone, his voice seemingly derisive.\n\n\"Don's buddy.\" Cindy said. \"The Shadow Man, the 'real Moriarty'.\" I was tremendously pleased at Cindy's progress; I had not connected these dots for her. She was all over it like white on rice, and by her own thinking.\n\n\"But why?\" asked Sandra Speer.\n\n\"That is where you have to consult with Crowbar 1... or his mother.\" said Cindy. \"That'll take Troy thinking, and I'm not a Troy.\"\n\nJust then our food was brought to us, and our County's version of the Trojan War was forgotten, especially by Jack Muscone as he devoured his double cheeseburger.\n\nAs we ate, I was contemplating the silver fish symbol that had been left at the crime scenes... now why use that? I wondered...\n\nPart 17 - Springing Another Trap \n\nDeputy Chief Robert Brownlee brought Sergeant McCombs, another man who was a Union rep, and a young patrolman down the hallway towards the Captain's offices, one of them being Cindy Ross's. It was after dark, and the halls were empty and nearly silent.\n\n\"All right.\" said Brownlee. \"I'm going to call her out, then find a way to get her to hit me or something. Then you guys move in.\"\n\n\"Where is her boss?\" asked Sgt. McCombs. \"I don't want any part of this if he's around.\"\n\n\"He went home early, he was up all last night.\" said Brownlee. \"All right, let's go.\"\n\nJust then, Cindy Ross came out of her office. Just as she was going to lock the door, Robert Brownlee came up to her.\n\n\"Ross.\" said Brownlee. \"You are officially off duty. You must have a physical and be re-instated by a Board of Inquiry before you can carry a weapon or be on duty. These are my orders, Lieutenant.\"\n\n\"Bull shit.\" Cindy Ross said. \"You don't have that kind of authority.\"\n\n\"I'm your superior officer, Lieutenant.\" said Brownlee. \"You will obey my orders. If you don't, you'll be suspended and fired, and maybe even given jail time.\"\n\n\"You're full of shit.\" said Ross. She tried to move forward, but Brownlee blocked her path. \"Get out of my way.\" She tried to move past him.\n\n\"You don't tell me what to do, you fucking dyke bitch.\" hissed Brownlee. He grabbed her arm and hurled her back against the wall between the offices, which were windows. As he moved towards her, she tried to move past him again... and when he tried to grab her she executed a couple of jabs at him, followed by a hard shot to the jaw that connected solidly.\n\n\"You fucking dyke.\" Brownlee said again as he pretended to slump to the floor. \"I'm going to have your badge for this unprovoked assault on a superior officer.\"\n\n\"I saw everything, Chief.\" said Sgt. McCombs, coming into the room. \"She threw the first punch.\"\n\n\"I saw it, too.\" said the youngish patrol officer. Brownlee was grinning, but then his suppositions were changed.\n\n\"That's not what I saw.\" said Lieutenant Tanya Perlman, coming up behind them from MCD. \"Brownlee assaulted Ross, she defended herself.\"\n\n\"Totally agree with Lieutenant Perlman.\" said Detective Martin Nash, coming up behind Perlman. \"Looked like a sexual assault by Brownlee, also.\n\n\"It's my word as the Deputy Chief against your lesser word, Lieutenant, and the even lesser word of your lying detectives.\" said Brownlee, getting up. \"And you've got nothing, no proof. Detective Nash, your word is worthless here, and I'm going to have you fired, also.\"\n\nThe door to the other office, the one that had been Harold Malone's but was now Wes 'Coldiron' Masters' office, opened up. Out popped Sergeant Rudistan. He was very jovial.\n\n\"Oh, I dunno, Deputy Chief.\" said Rudistan happily, smiling brightly. \"I got it all on camera here. You pushed first. Trying to hit a woman, too. Pretty cowardly of you.\"\n\n\"You're full of shit, Rudistan.\" growled McCombs. \"This is a trap, Commander. We're taking this one to I.A. and the Union.\"\n\n\"And the Union is right here to back you up, Chief Brownlee.\" said the Union rep, coming into the room.\n\n\"Give me that camera and the tape.\" said Brownlee.\n\n\"No, keep that for I.A. and the Sheriff.\" said Cindy.\n\n\"You'd better shut up, you fucking dyke.\" snarled Brownlee. \"I'm going to ruin your bitch lover's career too, when I tell everyone you both are fucking lezzie queers. It's all over for you...\"\n\n\"I don't think so.\"\n\nEveryone whirled. The tall, broad-shouldered man coming out of Masters' office behind Rudistan was wearing all black and wielding a formidable weapon... a red crowbar. The look on his face was one that no one ever wanted to see... it meant someone was about to get hurt, very badly.\n\n\"I think you know who it's about to be over for, Paper Pusher.\" I said menacingly, then turned to the others. \"Perlman, Nash, take that video evidence and lock it in the MCD safe. Call Lt. Goodwin of I.A. to come get it immediately. Rudistan, keep watch over these two dirty cops and this Union thug. If any of them go for their guns, shoot them all dead. Yes, that is an order from me to shoot to kill, Rudistan.\"\n\n\"I'll be sure to do that, Commander Troy.\" said Rudistan, whose joviality belied his serious intent to follow his Commander's orders.\n\n\"Ross, hold this.\" I said. I handed her the red crowbar, making everyone gasp as I opened the door to Cindy's office. \"No one is to come in here until I come out.\" With that I grabbed Robert Brownlee and shoved him violently into the office, slamming the door shut behind us.\n\n* * * * * * * * * * * * * * * *\n\n\"Think that's going to do any good?\" snarled Brownlee, still grinning. \"Your dyke bitch is going down. She's gone, Troy.\"\n\n\"We'll see about that.\" I said. \"What I saw is you physically assaulting her, you little shit eater... and you're going to pay for that.\"\n\n\"What, you gonna hit me?\" Brownlee said. His hand went towards his gun. He could not have reacted fast enough, I was moving at lightning speed and my blow landed hard on his jaw.\n\n\"Okay, okay, I surrender.\" said Brownlee, having staggered to his knees. That didn't save him. I wound up and threw the hardest punch I've ever thrown in my life. It connected solidly with his jaw just as he turned his head; I was aiming for his nose and mouth. Still, the *crunch!* that seemed to echo in the room was pleasing to hear. Something flew out of Brownlee's mouth.\n\n\"What the fuck?\" said Brownlee, who had fallen flat on the floor, dazed. He was now trying to cover his face as he struggled to his knees.\n\n\"I warned you, fuckhead.\" I said. \"And now comes retribution.\" I threw another uppercut, which was a level blow as he was still on his knees. It connected solidly and Brownlee fell back to the floor again, hard. I then stepped up and kicked him as hard as I could in the testicles.\n\n\"Aauuuuggh!\" he screamed. I tried to kick his testicles again, but he turned sideways, his hands and legs protecting his anatomical regions. So I kicked him as hard as I could in the back, just above the kidneys. Damn, I missed; I'd been trying to hit one of them.\n\nAnother staggering blow to Brownlee's face, smashing his nose, followed by hard punches to his ribs and all-too-fat-protected abdomen.\n\n\"Stop!\" he gasped. \"I said I give up!\"\n\n\"Tough shit, asshole.\" I said. \"I'll stop when you're fucking dead.\" I rained more blows on him, trying to get shots in where I could, but he was getting a bit better at blocking them. \"You will never, ever touch my partner again, you son of a bitch!\"\n\nBrownlee then tried to fight back, trying to kick me. I intercepted the blow, then rose up and kicked him in the back again as hard as I could. I smashed down on his ribs, then turned him over and smashed my boot into his groin again. He was a bloody pulp now, sobbing and gasping.\n\n\"Let me make sure you understand.\" I said, my knee pressing on Brownlee's chest with my full weight on it. I drew Brownlee's own pistol from his holster, and shoved it into his mouth. \"Once again, bitch, you will never, ever fuck with Lt. Ross, or any of my people again. If you do, I will kill you. I don't care if I'm executed or go to prison, you will be dead first because I will have killed you.\" I jabbed the gun into his mouth harder. \"Do you understand, shit eater?... I said DO YOU UNDERSTAND?\"\n\nBrownlee stared up at me in hatred. I pulled the gun out of his mouth and smashed it hard against his temple.\n\n\"I can't hear you, mother fucker.\" I said. \"You'd better answer, because I truly don't care if I go to jail for murder right now.\" I put the gun against his cheek near the eye. \"I said: do you understand?\"\n\n\"All right, all right...\" Brownlee gurgled. \"I'll leave 'em alone.\"\n\nI stood up, backing off a bit. \"I strongly recommend that you resign from the Force, Brownlee. Tonight. If you do anything, anything at all, you're going to get a bullet in the head. Maybe not from me, but you'll be fragged. And if you think you or your corrupt Union buddies are going to kill me, then understand that I have well over one hundred police officers ready to avenge me and kill you if anything happens to me. And then there will be the FBI agents that come after you and will shoot you on sight. And then the CIA on top of that. Think about it, Brownlee. The games are over.\"\n\nI kicked him one last time, really hard, aiming for his head but only getting him between the shoulder blades. Then I unloaded his weapon, picking up the cartridge that cleared when I worked the action. I threw the empty gun at Brownlee and it smashed into the side of his face. Pocketing the magazine and the cartridge, I turned and left the office, going back into the anteroom.\n\nSgt. McCombs said \"Let's go get him.\" As the youngish patrol officer went to follow, I stopped him.\n\n\"Kid, I'll give you a reference if you resign from the Force tonight.\" I told the quaking young officer. \"But you've chosen the wrong side. If you don't quit, your career is over anyway, and may God have mercy on your soul.\" The kid turned and scurried out the office and down the hall and out of the Headquarters building. I walked out, leaving McCombs and the Union rep to help what was left of Robert Brownlee out of the building and into a car.\n\n* * * * * * * * * * * * * * * *\n\n\"I had no idea you were in there.\" said Cindy in my office as I soaked my hand in ice water. \"We just wanted to trap Brownlee, get him off our backs.\"\n\n\"Bad plan, Crowbar 2, bad plan.\" I said. I'd caught wind of the plot: Jenna Stiles had a fake document about Cindy's health that she made sure Gor-don saw, and Gor-don had immediately made a copy and taken it to Brownlee. Jenna was disappointed that her assistant had been caught in an indiscretion, not wanting to believe what Cindy and Tanya had told her about Gor-don. Two birds killed with one stone... sort of.\n\nSo I made Rudistan tell me what was going on, and told him I'd be right with him in \"Coldiron's\" office, knowing that even if Brownlee hit Cindy first, that she as a subordinate would take the fall. That was how the politics worked. And I was not about to let my partner take the fall, despite her bad plan.\n\n\"You're right, it was bad. I'm not a Troy.\" Cindy asked, growing apprehensive as she realized that trouble was coming, trouble for all of us. \"By the way, why did you hand me your crowbar? I can't tell you how shocked I was when you didn't take it in with you.\"\n\n\"If I'd taken it in there, I would've murdered him.\" I said. \"And I didn't need it to beat the shit out of that god-damned asswipe.\"\n\n\"I'm sorry.\" said Cindy, looking downcast. \"I didn't mean for it to go this far.\"\n\n\"Well, on the bright side,\" I said, \"you sped up the inevitable. It was only a matter of time before I took Brownlee down. He was asking for it.\"\n\n\"If that doesn't teach him to stay out of the Crime Lab,\" said Tanya as she came inside, \"then I don't know what will. Goodwin has the tape, Commander. He didn't look very happy about things, though. Think Brownlee is going to resign?\"\n\n\"Lieutenant Perlman,\" I said coldly, \"I think we're going to be very, very lucky if we are not asked for our resignations... all three of us.\" Tanya looked at me in shock, realizing the truth of what I was saying.\n\nAs much as I'd enjoyed beating down Brownlee and asserting my dominance over him, I knew that I'd gone way too far. Way too far.\n\nPart 18 - Aftermath \n\nI entered Sheriff Daniel Allgood's office... his office at the Sheriff Department in the County Building... on the morning of Wednesday, March 19th. I knew what was coming. I acted formal, waiting to be admitted to his office, then waiting for him to ask me to sit down... which he did not do.\n\n\"Commander,\" the Sheriff said, not looking up at me but to the side as if in thought, \"I spent a long night in front of the Town & County Council yesterday. The incident Monday night has created a situation that is almost completely out of my control.\"\n\nHe turned to face me. \"Goodwin turned over the tape and the investigation to Inspector Wellman. Wellman asserted to the Council that Brownlee did physically assault Ross first, but that Ross's physical reaction was more than self-defense. And Wellman says it is very fortunate that no one saw what happened between you and Brownlee. Brownlee was not taken to the Hospital, so there is no formal medical record of whatever damage you did to him, which I understand is considerable but not life-threatening.\"\n",
        "The Sheriff continued: \"The Council is very divided on what to do. Almost half of them want to fire you. Malinda Adams, Pastor Westboro, Thomas Cook, and Kelly Carnes want you gone, especially Carnes, and they want a full Council vote on it to have it on the record. Of course Colby, Schoen, Goldman and Steele want to keep you, and that leaves McGhillie and Reginald B.F. Lewis. Lewis was surprisingly neutral, and McGhillie supports you but was put under pressure to abstain because his son is on the Force. He said he would not abstain if his vote made the difference, which was really all that held back the four that want you out.\"\n\n\"There is good news.\" Allgood said, leaning forward as he spoke, with me still standing at near-attention but my eyes locking with his. \"The representative of the Police Union was asked to comment. To the utter surprise of your enemies, Commander, he said that the Union had no grievance to file against you nor Lieutenant Ross, and they want this to be handled as an internal matter with the Sheriff.\" I was shocked to hear that, but I held my face to stony impassivity.\n\nDaniel continued: \"And at that, I made a point to stand up to the Council and tell them that witness statements and the video showed that Brownlee instigated the incident. I asked the Council to fire Brownlee, which unfortunately I can't do myself. That just added to the divisions within them. So they're doing what politicians do: nothing. They're dropping the matter.\"\n\n\"Officially, you're off the hook, as is Ross... but Brownlee is off the hook, too. It's now up to me, and I'm choosing to not make any formal reprimands to either side. However, I need not tell you that any further physical conflicts of this kind will result in the termination of the employment of the instigator. That is all. Dismissed.\" I turned to go.\n\n\"Okay, the formal part is over. Come back in here and sit down.\" Allgood said. I complied, still saying nothing. I then received a shock as Daniel asked his secretary to admit someone. That someone was Chief Emeritus Griswold. He was dressed in civilian attire. He sat down next to me.\n\n\"I know the threat of firing you is meaningless, Don. I pretty much told the Council that, and they know it, too.\" Daniel said. \"But I want you to think of your officers now. It's no longer about you; it's about Lieutenant Ross, and ultimately all of your Detectives. The only reason Cindy Ross was not fired for hitting Brownlee, which is definitely insubordination, is because no one on the Council wants to go on record as forcing the firing of the woman Medal of Valor recipient, a recorded vote which Jack Colby threatened to force. Chief?\" Tag. (I was being tag-teamed.)\n\nChief Griswold said \"Don, I know you began using the crowbar on Sergei Molotov because you wanted to create a persona and an atmosphere that you weren't playing around, and it worked. And we needed it, God! how we needed it. You've managed to clean up a lot of shit around here, not the least being Harold Malone and Steven Ikea, and to say you've improved the quality of this Police Force tremendously, while I was still there and now afterwards, would be superfluous. But we're reaching a critical point, here. Sheriff?\" Tag.\n\n\"Look,\" Daniel said, turmoil striking his face for the first time, \"I know that we are brothers-in-law, we've become friends, I still don't know why you wanted me to run for Sheriff instead of yourself-\" I raised a hand to stop him.\n\n\"I did that partially because you're willing to say the words you are about to.\" I said.\n\n\"Hell, you're still a step ahead of all of us.\" Daniel replied. \"And yes, I'm going to say the words: I don't think anyone really cares that you, the Iron Crowbar, beat the shit out of a worthless piece of shit like Brownlee. But my concern, over which I consulted Chief Griswold, is that some of your officers are emulating you in ways that are unacceptable. The attack on Katherine Woodburn wasn't by you, but we're not idiots in this County: it was either Ross or Cummings that did that. Chief Griswold?\" Tag.\n\nGriswold turned to me. \"The bottom line, Don, is that you've got to tone it down. Not for yourself, but for the officers under you. I know you love Cindy Ross like family, and I might have done the same thing you did when Brownlee assaulted her... but she never would've begun that incident if she didn't know what you were willing to do. And that goes for whoever attacked Katherine Woodburn. That is definitely a by-product of the mystique of the 'Iron Crowbar', but it is not a good by-product. The news media are increasingly reporting on police abuse incidents, trying as hard as they can to start race riots in cities like New York and Baltimore. I don't want any of our officers adding to that, or giving the Media any fuel for what they're trying to instigate.\"\n\n\"Commander,\" said Sheriff Allgood, \"Think of it this way: if you're gone, there is nobody to protect Lt. Ross or any of your people against Brownlee. They and the entire Police Force would be completely at his mercy. I can't protect them, not like you can, and I really can no longer protect you with the Council. So it's up to you to get your people in line so that both the Council and myself are not put into any more... uncomfortable situations.\" I nodded, realizing that my presence was needed not so much for myself and my work, but the work of my people and the Force itself.\n\n\"The Police Union reps are going to handle Brownlee, who will also receive a strong verbal reprimand from me.\" said Sheriff Allgood, finishing up. \"We will have a new Chief soon; Brownlee will be his problem. In the meantime, if Brownlee starts something, let me and I.A. handle it; no matter how much you want to, don't react to him, leave it to others. Am I clear, Commander?\"\n\n\"Yes sir.\" I said. Lesson absorbed.\n\n* * * * * * * * * * * * * * * *\n\nIt was well after dark when two people entered Robert Brownlee's apartment in the northwestern area of Town where many middle-class people lived, including police officers. Already present were Sgt. McCombs and a woman dressed in leather for driving a motorcycle, the woman who had met Brownlee at the Hyatt to warn him in the past, a warning that Brownlee had been too stupid to heed. The new arrivals were the Police Union rep and State Senator Katherine Woodburn.\n\nThe Senator was not in a good mood. \"Robert,\" Woodburn said, trying to keep her temper, \"what the fuck were you doing?\"\n\n\"That dyke bitch hit me first.\" Brownlee said sullenly. \"She should be fired for insubordination at the least.\"\n\n\"You really are an idiot, Robert.\" Katherine said. \"No wonder your wife left you years ago.\" As Robert looked up at Katherine angrily, she continued: \"There is no way in hell the Town & County Council is going to take your side over a woman that won the County Triathlon, took bullets for her fellow officers and earned the Medal of Valor. She is a genuine hero. The People of this Town and County love her.\"\n\n\"By way of contrast,\" Katherine continued, maliciously hurling her words at Brownlee, \"you are exactly what the Iron Crowbar calls you: a paper pusher. You have virtually no support within the Police Department, and your support with the political powers is eroding fast.\"\n\n\"So what the fuck am I supposed to do, Senator?\" Robert said angrily. \"Just let these bastards walk all over me? I thought you wanted me to set up situations to get them out of there.\"\n\n\"And you've fucked that up beyond repair now.\" Katherine replied. \"We're going to have to retreat and regroup.\"\n\n\"I'm not resigning.\" said Brownlee, misunderstanding.\n\n\"Hell no, you're not!\" yelled Katherine. \"You're staying right where you are. These people and others worked like dogs to get you into the Deputy Chief position, and you're going stay there and be useful to us for a change. You need to just sit in your office and keep your eyes and ears open. You need to just let the Iron Crowbar and his people do their thing, then tell us what they are doing. You need to keep us very aware of what is going on inside the Police Department, and you're finally in the ideal position to do so.\"\n\n\"I'll tell you something else, Robert.\" said the Union rep. \"We can't support you any longer. The Sheriff asked the Council to fire you. We took up for you and the Council decided not to act at all over this incident, but they made it clear that there had better not be a next time. The Sheriff is leashing the Iron Crowbar, and I'm telling you now to just keep things quiet and cool, instigate nothing, and like the Senator said, keep your eyes and ears open.\"\n\n\"I'll go even further and make one more suggestion.\" said the other woman in the room, her voice showing an authority that belied her slender body and normally quiet demeanor. \"You need to delegate your duties to your subordinates, to Captain Aaron and Captain Harlow. Let them run the administrative offices for you. You just sit back, keep quiet, and when the proper time comes, we'll make our move to put you in the Chief's chair. But we can't do that if you get yourself fired because you are too fucking stupid to understand what is expected of you.\"\n\nThe woman got up. \"I've got to go. Senator, I'd suggest you keep a wide berth of the Iron Crowbar for a while, also. He's been smacked down, but only to a point. We'd rather have him here, where we can watch him, than have him quit and go to the FBI, where we'd be unable to watch him at all.\"\n\nWith that the woman left, and a moment later the buzzing of a motorcycle could be heard as she quickly left the area.\n\nPart 19 - Epilogue \n\nCindy and I were sitting on the outside patio of the Cop Bar, alone, on the evening of Thursday, March 20th. The fire in the fire pit was keeping us warm as we drank our beers. The reception we'd received as we went through the Cop Bar, which was full of police officers and firefighters, was very warm and supportive, which made us feel better.\n\n\"Hi guys.\" Teresa said as she joined us on the patio. \"They said you were out here by yourselves.\"\n\n\"Yep.\" Cindy said as I pointed at a seat for Teresa to take and join us.\n\n\"How'd it go with the Sheriff?\" Teresa asked. She had not been at Headquarters all day.\n\n\"We took our ass-chewings.\" said Cindy quietly. \"All we can do now is drive on.\"\n\n\"Aw, c'mon.\" said Teresa. \"That was all started by Brownlee and we've got witnesses--\"\n\n\"Teresa,\" I said, interrupting her, \"that's not the point. We put the Sheriff in a bad situation. He had to go to bat for us with the Council. He's been correct in everything he's done. We are lucky, and Cindy is especially lucky, that the Council didn't kick us both to the kerb. But, as Cindy just said, it's done now and all we can do is drive on.\"\n\nI then said what had to be said: \"Ladies, there is one other thing I need to say, and here and now while we're alone is the best place and time to do it. I've definitely gone too far on a couple of occasions, and I fear that the example I've set has not been a good one. I don't know who beat down Katherine Woodburn, and I don't want to know. But that happened because of the example I set, also.\n\n\"I need for you two and for Tanya Perlman to get the word out quietly and informally, but definitely make it trickle down, that we are going to have to tone it down and hold back. I'm especially going to have to do that myself, and you guys let everyone know that emulating crowbar beatdowns is no longer acceptable. The Enemy is now trying to use this against us, and we have to stop it for that reason. But we also have to stop it because we have to be on the side of Right, and we have to set the example. I am going to start setting a better example, and I need you to do that too.\"\n\n\"No more Iron Crowbar?\" asked Teresa incredulously.\n\n\"Oh, I didn't say that.\" I replied with a bit of a grin, and then I got serious again: \"Not until we've finished with our mission, which is to clean this County up. And that means getting rid of one very poisonous spider in the middle of a very tangled web of crime... a tangled web that once included a Silverfish...\"\n\nFinis"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/silverfish-ch-03"
}