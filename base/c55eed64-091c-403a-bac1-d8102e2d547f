{
    "title": "Bob and the Girl Next Door Ch. 06",
    "pages": [
        "1. All characters are 18+\n\n2. No characters resemble real people\n\n3. Enjoy the fiction\n\nCHAPTER 6\n\nIt was hard to get work done that Monday. Mid-day, I couldn't take it anymore. I grabbed my tablet and pulled up the last few videos of Anna. The most recent one was of yesterday afternoon, when Anna and I masturbated in my bedroom together. I watched the videos and gave myself a little relief, just so I could calm my mind and get back to work.\n\nThat night, I was outside watching Bob do his business when Anna texted me. 'Mom's gone to work. Come over?' It was followed by the peach emoji, which even an older guy like me recognized as a sexy signal. I looked up at her window. She was standing there, watching me. She waved, and I waved back. I gave her a hand signal, indicating her to give me five minutes, and she nodded. She pointed downwards, towards the back door of her house, then disappeared from view.\n\nFour and a half minutes later, I was entering her house via the unlocked back door. Anna was nowhere in sight. I looked around the first floor quickly, but I knew she'd be upstairs. I jogged up the stairs and called for her, \"Anna?\"\n\n\"In here,\" she said with a giggle. The voice didn't come from her room. Then I heard a shower start. The bathroom door was open just a crack. I peeked inside. Anna stood there, completely naked, not looking at the door at all. Then she started speaking to herself, pretending I wasn't there. \"I've been such a dirty girl lately. I need a shower. I just hope Daddy's not spying on me while I'm naked and wet.\" Just like that, she had established the game she wanted to play tonight.\n\nI stood in the hall, simply watching as she rubbed her hands over her breasts, then down her stomach, and around her hips to grab her own ass. The bathroom mirror helped me see all of her body at the same time. Then she stepped under the shower's spray, wetting down her lithe teen body. I watched, enraptured by the vision before me, and I quietly unbuckled my pants to free my erection from its prison. I had resolved that I wanted to fuck Anna, but she seemed perfectly content with keeping me as her voyeur. In fact, that was what really got her off: knowing she was being watched.\n\nAnna actually did bathe. She used her body wash and soaped herself up. I caught a whiff of the scent, registering flowers and tropical fruits. She washed her small chest, then she bent over and rubbed the soap on her long legs. From that angle, I got a good glimpse of her puffy lips from between her legs.\n\nIn the rinsing, she abandoned her attempts at cleaning, and just started playing with herself. She leaned backwards against the tiles of the shower wall, spread her legs open, and worked her small fingers inside. \"Oh fuck. Oh, I think I'm still being dirty. I'm so naughty,\" she called out for me to hear. \"I just keep thinking about my Daddy, and his big, thick dick.\" I rubbed myself and listened to her continue. \"Sometimes, I think about Daddy putting his dick in Mommy, and me watching them fuck. But even more often, I want Daddy to put his dick inside me. I bet it would make me feel so good. I bet it would feel so big inside my little tight pussy. I wish he was here now, watching me play with myself. He could play with himself too, and spray his cum all over the towel so no one finds out.\"\n\nTowel? What towel? I looked around and spotted a folded-up hand towel on the table nearby. Anna had planned this out pretty well. I took the towel and unfolded it for my use.\n\nShe was raising her voice now, getting closer to cumming. \"If he was there, I could say naughty things out loud, to make him cum too. I could say, Oh Daddy, I'm so close. I want your big Daddy dick in me, please Daddy. I want your big dick fucking my tiny pussy!\"\n\nThat talk was getting me close, though it was a little strange to hear her call me Daddy. She'd only said it once yesterday. Now she was saying it out loud, calling me Daddy while she frigged herself with her fingers.\n\n\"I want to cum, Daddy, please. I'm, I'm cumming!\" she yelled, and nearly collapsed in the tub. Watching her, I also came, catching all of it in the convenient hand towel. I watched her stand up, recovering from her ecstasy, turn the water off, and wrap herself in a towel.\n\nI was going to knock on the door and ask her what I should do with the small towel I was holding, full of my spunk, when I heard a rumbling noise. Was that... the garage door opening? Anna heard it too and she started freaking out. \"SHIT!\" she yelled. \"My mom's home!\"\n\n\"What!?\" I hissed. \"I thought you said she was working!\"\n\n\"Well she's home now. You need to get out of here!\"\n\n\"I can't! She'll see me!\"\n\nWe both looked around frantically, trying to figure out what to do. \"Under my bed! Hide!\" Anna told me. We both ran into her bedroom, and I dove under the bed. My pants were still unbuckled, and I still held the jizz towel in my hand, but I got myself completely underneath. Anna rearranged her bed sheet to drape over the side, covering me, or so I hoped.\n\nA knock on the bedroom door was accompanied by Olivia's voice. \"Anna? You still up?\"\n\n\"Yeah mom, just got out of the shower,\" Anna called back.\n\n\"Can I come in?\"\n\nMy brain tried to telepathically tell Anna to say no, but she put on her robe, and said, \"Yeah, okay, I'm decent now.\"\n\nThe door opened and Olivia walked in. \"Hi honey,\" she said to her daughter. I froze, trying not to make any noise at all, or even breathe loudly.\n\n\"Hi mom, I thought you were working all night.\"\n\nOlivia sat on the bed. I saw her feet near my face. \"I was supposed to,\" she answered, \"but it was a really slow night, so they let me go early.\"\n\n\"Oh,\" was Anna's response. \"Well, that's good I guess. But I'm really tired, so I think I'm going to get some sleep.\"\n\n\"Okay, honey.\" Olivia kissed her daughter and told her, \"I think I'll get my own shower. Sweet dreams,\" before leaving and closing the door behind her.\n\nI didn't move a muscle for several minutes. When I heard the shower water come on again, the sheet was lifted from the bed, and Anna gestured me out. I slid out from under the bed and stood up. Anna was grinning. \"That was too close!\" I wanted to yell, but I had to whisper instead.\n\n\"It was fun, though, huh?\" Anna was still smiling.\n\n\"It's fun as long as you don't get caught!\"\n\n\"And we didn't. Good job hiding, by the way.\"\n\n\"I need to get out of here, now.\" I turned and headed for the door, but Anna grabbed my arm and pulled me back.\n\nShe looked into my eyes. \"I hope you enjoyed the show, Daddy,\" she said. Then she kissed me on the cheek. Another first for us. I considered it ironic that I'd seen her naked a dozen times before she'd done that. I was frozen until she nudged me to move. \"Go! Get out!\" I left as quietly as I could, sneaking out the back door, while Olivia was in the shower.\n\n----\n\nI made myself scarce the next few days, staying in my house most of the time. I was still paranoid about Olivia almost catching me in her house, watching her naked daughter in the shower. It had been far too close for my comfort. I didn't even look out my bedroom window, even though Anna had texted me to see if I was watching.\n\nWhen I finally emerged days later to eat lunch on my patio, I wasn't surprised when Anna skipped over. Today's sexy outfit was a bikini top and short shorts. Her breasts, though small, gave a little bounce as she skipped.\n\nShe sat down at the table with me. \"Hi Daddy,\" she cooed at me.\n\nI looked around, paranoid that some neighbor would hear, or worse, Olivia. \"Don't call me that.\"\n\n\"You liked it the other night.\"\n\n\"It was hot in the moment, in private. But it makes me nervous when you say it out in the open like this.\"\n\nShe patted my knee under the table, making me flinch, but she kept it there. \"Don't you want to be my Daddy? Mom wants to go out with you again, by the way.\"\n\n\"Really? She said that?\"\n\nAnna nodded. \"Of course. She thinks you're cute, just like me.\" She dropped her voice to a whisper. \"I even found out a secret you'd like to know.\" Her hand inched up my thigh.\n\n\"Is it a secret if you tell me?\" I asked.\n\n\"It is if you don't tell her you know. Remember a little while ago, I told you she's got a big bush?\"\n\nI nodded, remembering Anna taunting me, comparing her mother's down-there hair to her own clean-shaved pussy.\n\nAnna whispered into my ear. \"Apparently she only did that 'cause she wasn't dating. She told me she trimmed it back now. You know, just in case she wanted to show it to a certain cute, friendly neighbor.\"\n\nI was getting hard, thinking about Olivia's potential desires, and listening to Anna's breathy voice in my ear, and feeling Anna's hand getting close to my crotch. \"She did that?\"\n\nAnna nodded, then her hand started rubbing over my rock-hard dick through my pants. \"Yup. If you fuck my mom, can I watch?\" Her voice was oozing sex.\n\nThat thought was too much; any more and I might cum in my pants. I picked up my dishes and dashed inside. \"I gotta go.\" Anna smirked at me as I tried to hide my erection as I left.\n\n----\n\nI did take Olivia out again that weekend. Anna wasn't mad at us this time, so she gave me a friendly wave when I left with her mother, and told me she'd take care of Bob that night.\n\nThis was a pretty normal date. I took her to dinner, then we walked around park, taking advantage of the warm summer night. I held her hand as she walked. Somehow, despite the fact that we'd already kissed before, holding her hand in a public place felt slightly more intimate.\n\n\"So,\" Olivia started as we sat on a bench for a little rest. \"I've noticed something between you and Anna recently.\"\n\nMy heart jumped. \"Yeah?\" I said, not knowing what she meant.\n\n\"Yeah. Sometimes it seems like you're friends, and other times it's a little awkward.\"\n\nI wasn't sure where this was going. \"Well, she's really nice. And she likes Bob. But she's a teenager, so we don't have much in common.\" That wasn't really true. When I'd had the occasional lunch with Anna, I'd found that we had more in common than one would expect from a 14-year age gap. She liked a lot of the same bands and movies that I liked.\n\nShe considered my words. \"Well, you have me in common. And if you and I continue to date, I don't want things to be weird. So, I had a thought.\"\n\n\"Okay?\"\n\n\"I think you and Anna should go on a date.\"\n\n\"A date?\" It was a weird thought. I tried to make light of it, like a joke. \"Don't you think she's a little young for me?\"\n\nShe punched my arm at my joke. \"You know, time to get more comfortable with each other. Like a daddy-daughter thing.\" I winced when she said 'daddy', thinking about Anna's use of the term, and Olivia saw it. \"Not comfortable with the term daddy-daughter?\" she asked.\n\n\"Just getting used to dating someone with a daughter, I guess,\" I told her. \"I guess that's to be expected at our age.\" Then I spun the argument. \"Let's say for a minute we get more serious,\" I said, and she nodded her understanding. \"Would Anna call me dad? Would she listen to me if I told her dad things, like 'put on more clothes' or 'go to bed' or 'you can't date that boy'?\"\n\nOlivia was chuckling. \"I don't know that she listens to me when I say those things, so no, I can't guarantee that. But I think she likes you, and I want to make sure all three of us get along.\" She squeezed my hand. \"Please? Do this for me? If nothing else, for my own peace of mind?\"\n\nI sighed. \"Okay. For you, I'll take Anna out.\"\n\n\"You can't be any worse than that Ricky boy,\" she said. \"At least I know you won't feel her up in your car.\"\n\nI thought about that situation. I'm not sure that I wouldn't do it. I bet Anna might want it.\n\nWhen we got home, Anna was waiting for us. She was dressed for bed, wearing a long t-shirt. I guessed there were panties underneath, but couldn't tell for sure. Olivia led me inside. \"Anna, Grant has a question for you.\" She motioned me towards her daughter.\n\nI walked closer to Anna. \"Your mom wants to make sure that we're getting along, so she wants us to spend more time together. Anna, would you go on a date with me next weekend?\"\n\nAnna's smile nearly exploded her face. \"Yes, Grant. I would like to go out with you,\" she answered politely. Olivia nodded her approval. But I could see the look in Anna's eyes. In her mind, this was no normal daddy-daughter outing. This was a real date with the man she wanted.\n\n----\n\nI was torn on deciding what to do with Anna on our date. I could play it safe and do something active and public, like bowling. That would certainly please Olivia. Or, I could go more intimate and private, like a quiet, isolated dinner. I'm sure Anna would love that.\n\nIn the end, I tried to put together a compromise. I told Anna I was taking her to a diner for burgers and fries and milkshakes. It was non-romantic, as it was a family-friendly place. Then we'd do a round of mini-golf. Olivia was satisfied with the appropriate plans.\n\nI knocked on Olivia's door to pick up Anna. Anna came out wearing a cute pink t-shirt and a denim skirt that reached just above her knees. Her blonde hair cascaded past her shoulders to her back. Olivia saw us off, wishing us a nice time.\n\nWhen we got to the diner, I slid into a booth, and to my surprise, Anna slid in beside me. \"Thanks for taking me out, Grant,\" she said. That statement was for the public ears, I realized, as her hand patted my knee below the table. The restaurant was generally loud enough, and our booth walls were high enough, that our quiet conversations would not be overheard.\n\nThe waitress came to our table, and looked at us a little funny while we ordered. \"We're on a date,\" Anna blurted out excitedly.\n\n\"Yeah, a daddy-daughter date,\" I clarified. That seemed to mollify the waitress' thoughts, and she left. \"You're going to get me in trouble,\" I told Anna quietly.\n\nShe shrugged. \"She doesn't know us. I could be twenty-five.\"\n\n\"No one thinks you're twenty-five,\" I said to the pretty, petite teenager. \"You're\n\neighteen and you look it. I'm lucky if she doesn't think you're sixteen.\"\n\n\"You don't think I look older?\" Anna said with a small pout.\n\n\"Don't worry, I like you at your real age,\" I said. \"To me, you're the prettiest eighteen-year-old I've ever seen.\"\n\nAnna blushed. \"You're just saying that. I still think my boobs are too small.\"\n\n\"I like your boobs. Perfect little handfuls.\"\n\n\"You've never actually had your hands on my boobs,\" she pointed out. \"Are you aiming to change that tonight?\"\n\n\"Do you know what your mom said about that?\" I asked, and Anna shook her head. \"She said at least I won't feel you up like Ricky.\" Anna laughed her cute little head off.\n\n----\n\nI had thought dinner would be awkward, but it turned out to be really nice. We ate and talked, and I realized I had even more things in common with the young beauty that I didn't think I would.\n\nThen she smiled at me. Like, really smiled. Not a sexy, come-hither smile. It was a kind, glad, friendly smile. It was at that moment I realized that it wasn't just a sexy fling for me. I was starting to fall in love with Anna, and I suspected she felt the same for me.\n\nAfter dinner, we went off to the mini-golf course. Here, I realized that Anna's skirt seemed slightly shorter than it had when I picked her up. It looked like she had hiked it up a little, showing more of her thighs. I looked around. This hot little girl I was with had attracted a few looks from other guys. I felt a little possessive. \"Did you raise your skirt?\" I asked.\n\n\"Why?\" she responded. \"Are you paying close attention?\"\n\nOn the first hole, she sunk her ball in the very first shot. While she did a little celebratory dance with her club, I thought I might be in serious danger of losing this game. Then I watched Anna bend over to retrieve her ball from the hole, and her skirt raised to show the bottoms of her bright yellow cotton panties. She slowly straightened up, then turned back around to confirm that I'd seen her. \"Your turn,\" she said, giving me a knowing smile.\n\nIt was hard to play with Anna's distractions. Every time she bent over, I saw her cute little pantied ass. To make it worse, she tended to brush past me when I was trying to shoot. Nevertheless, I did fairly well, and was only one stroke behind her after the first nine holes. At that point, Anna excused herself to use the restroom, and I sat on a bench, waiting for her to return. When she returned, she was grinning.\n\n\"What's with that smile?\" I asked.\n\n\"Nothing. Just thinking about how I'm going to beat you.\"\n\nI found out very quickly why she was grinning so much. When she sunk her ball on the 10th hole, she bent over to retrieve it, and I saw no flash of yellow cotton this time. It was all skin now. Her cute little ass was visible for me, and probably anyone behind me. She'd probably stuffed her panties in her pocket. \"You're being naughty,\" I warned her.\n\n\"Who, me?\" she said with a cute innocent face.\n\nI had to step up my game to keep up despite her distractions. I also did some distracting of my own. While she was trying to shoot, I would stand behind her, toying at the hem of her skirt with my club. \"Now who's being naughty,\" she said, then sank her putt like an expert.\n\nWhen we got to the 18th hole, we were tied. \"Want to make things interesting?\" she asked me slyly.\n\n\"I think things are pretty interesting already.\"\n\n\"I was thinking about making things interesting in your car,\" she clarified. \"If I win, which I will, I want your fingers inside me.\"\n\n\"Sounds like that's a win for me too,\" I admitted. \"What happens when I win?\"\n\n\"If you win,\" she emphasized the first word, \"I'll give you a blowjob.\"\n\n\"Have you ever given one before?\" I wondered aloud.\n\n\"No, but how hard can it be?\" She said, rubbing her hand on my crotch, emphasizing her double entendre. I was already hard.\n\n\"I think I have an advantage,\" I told her as she prepared her shot.\n\n\"Why's that?\"\n\nI leaned in to whisper in her ear. \"You're trembling inside,\" I said breathily, meaning to turn her on. \"I bet you're so wet, leaving your pussy exposed like that.\" My putter stroked upwards on her leg. \"You're so wet, you're dripping.\" She moaned. My distraction worked.\n\nThen I stood back and watched. She tried to calm her mind and focus, but it wasn't working. She took her shot, and missed. \"Damn you,\" she muttered. She sunk her second shot.\n\nI stepped up and prepared to putt. \"Sink this shot, and I'll take care of you, Daddy,\" she called out. She thought it would mess me up, but now I'd gotten used to her saying it. I hit the ball, and it was dead straight for the hole.\n\nThen it stopped on the edge.\n\nI hoped a stray wind would blow the ball in, but no luck. \"Oh man!\" I said.\n\nAnna whistled. \"That was really close.\"\n\n\"So we tied. What happens now?\"\n\nAnna thought for a second. \"You could argue we both won.\"\n\nI nodded. \"I can see that. And if we both won, we both get rewarded.\"\n\nAnna smiled. \"I think that's very fair.\"\n\n----\n\nI had not fooled around in a car since I was a teenager myself. But I remembered where I used to do it. I drove us to an isolated spot in a park, then parked the car and turned out the lights.\n\n\"Lesson number one,\" I said to Anna. \"If you're going to fool around in a car, you don't do it in your mom's driveway.\"\n\nAnna laughed. \"I never said Ricky was smart.\"\n\n\"Admit it, you only went out with him to make me jealous.\"\n\n\"It worked didn't it?\"\n\n\"It did.\" I shifted my weight a little closer to her. \"All this time, all we've seen of each other, I've never kissed you.\" Then I cupped her face in my hand and brought it to mine. Our lips connected. Her soft mouth moaned against mine.\n\n\"God, Grant, why did we wait so long for that?\" she asked, then kissed me again. Her hand went to my chest, then down my stomach, and rested in my lap. \"I think we have a bet to settle up.\"",
        "\"I think you're right,\" I responded. I continued kissing her as I placed my hand gently on her knee, then slid it upwards, into her skirt. When I reached the forbidden fruit between her legs, she whimpered. \"Am I the first man to touch you there, baby?\" I asked. She nodded. \"I'll be gentle,\" I assured her.\n\nI reached into my back seat and found a towel. I always kept one there for emergencies; it was something my dad instilled in me. I unfolded it onto my lap. Then I gently pulled Anna's little teen body into my lap, so her back was against my door. I pulled her skirt up to her waist, giving me full access to her. I could barely see her perfect pussy in the dark.\n\nThen I stroked her there, and she parted her legs wider, displaying her desire for more. I kissed her as I played with her, teasing her, spreading her wetness all over. She whimpered again as I slipped just one finger past her labia, just barely inside her. I pushed it all the way in, so slowly, and she moaned into our kiss.\n\nI moved my kiss to her neck, and I slid a second finger inside. \"Oh, Grant, oh my god,\" she whispered into my ear.\n\n\"Call me daddy,\" I groaned.\n\n\"Oh, yes Daddy!\" She was excitedly trembling in my arms.\n\nI worked my fingers in and out of her virgin pussy. \"You're so tight on my fingers, baby girl,\" I told her. \"Do I make you feel good?\"\n\n\"Yes, Daddy, so, so good.\"\n\nI held her tight with my left arm. My right thumb found her clit and I stroked it as I continued to thrust my fingers in. She gasped at the contact on her sensitive spot. \"Do you like your little clit rubbed?\"\n\n\"Yes, Daddy. Please rub my clit.\"\n\nI looked down and saw that the towel was a good choice. She was so wet, but the towel was soaking it up. Without it, I'd have her wetness all over my pant leg. I worked my fingers in faster, deeper, faster. \"I want you to cum for me, baby,\" I said to her.\n\nAnna gasped again. \"I'm so close Daddy, I'm close, I'm... I'm... cumming!\" She came hard, and I held her close to me, feeling her muscle convulse. It was a magical moment, and it felt so good to have this beautiful young woman, shaking in euphoria, wrapped in my arms.\n\nWhen Anna started to relax, she looked into my eyes dreamily. \"Thank you Daddy.\"\n\nJust then, her phone rang in the car's cup holder. \"Shit, it's my mom,\" she said. She answered it, and crawled off my lap. \"Hi mom. Yes, we're on the way back. We'll be home in just a few minutes. Yup, see you soon, bye.\" I looked at my watch. It was getting a little late. I put the car in gear and started the drive home.\n\nWe drove for a minute before she spoke again. \"Sorry I didn't get to complete my end of the bet.\"\n\nI smiled. \"I'm not sorry. I wanted to make you cum. Even more than getting my own attention.\"\n\n\"It was so amazing, Grant, I mean, Daddy. It's so much better than when I do it myself.\"\n\n\"I'm glad. But now that you've found that out, just don't let Ricky or any other boys do that to you.\"\n\n\"I won't, Daddy. Only you,\" she told me.\n\n----\n\nWhen we got home, Anna fixed her hair and makeup, making it look like she didn't just get a mind-blowing orgasm from my fingers. I also made sure I wasn't wearing any of Anna's lipstick. \"Stop here,\" she suddenly requested, about a block from home.\n\nI pulled over. \"Why?\"\n\nAnna took a deep breath, and let it out. \"I wanted you to know I really enjoyed myself tonight.\"\n\n\"So did I.\" Her hand was on the arm rest, and I put my hand on top.\n\nShe looked into my face, and I think we had the same thoughts at the same time. Our faces came together and we kissed. It was wonderful, and I felt more love for this beautiful creature than I had felt for anyone since my wedding day. I felt more in sync with Anna after one date than I had with Olivia after three, and it wasn't just a horny man's fantasy. This was a real connection.\n\nWe broke the kiss, and all Anna could say was \"Wow.\"\n\n\"Yeah.\"\n\n\"Grant, I...\" she started, then stopped.\n\n\"I know.\" I told her. \"I feel the same.\"\n\n\"You do?\"\n\n\"Yeah.\"\n\n\"It's... this is crazy, right? I mean, I just started flirting with you...\"\n\nI nodded. \"I know. I don't think we meant for this to happen. But it did.\"\n\n\"Yeah.\" There was an awkward pause, then, \"What... how... what are we going to tell my mom?\"\n\nThat was the most difficult question. \"I don't know.\"\n\n\"We'll figure it out together?\"\n\n\"Absolutely,\" I answered, and she smiled and kissed me again.\n\nI brought Anna back to Olivia, where we gave our brief report of our fun night. Anna told her mother about our tie at mini-golf, implying we needed a rematch sometime to settle the score. Thankfully, she didn't mention the bet, or the sexy results that ensued, or the kissing.\n\nWhen I returned to my car to put it in the garage I spotted Anna's yellow panties in the cupholder. This was a message: thanks for a great night.\n\n----\n\nThanks for reading!"
    ],
    "authorname": "Octave888888",
    "tags": [
        "blonde",
        "voyeur",
        "shower",
        "daddy",
        "date",
        "mini-golf"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/bob-and-the-girl-next-door-ch-06"
}