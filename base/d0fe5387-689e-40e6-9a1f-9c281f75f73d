{
    "title": "A Boiled Frog Pt. 06",
    "pages": [
        "I apologize in advance for the lack of hard-core sex in this section. I didn't want to just throw in random stuff that the story didn't dictate. I want to shout out a round of thanks for the people who aided me in this, especially Misty F and Satinlover_mwf for their female perspective. Also thanks to Sterenn and Skye Stonesoul for their editing work. They are much better than me at making sure the I's are dotted and the T's are crossed. \n\nIf you haven't read my other parts, this won't make much sense. It is a journey and you should really start at the beginning. But if have made it this far, thanks for taking this journey with me. \n\n***** \n\nChapter 1 \n\n\"Hello, Emily,\" I finally got words to come out, even if it was only a raspy whisper. \n\nThe bustling security checkpoint seemed to slow to a crawl around me in anticipation of Emily's reaction. My sister was meeting me as Tina for the first time and, since I had been too scared to tell her beforehand, my appearance had caught her completely by surprise. \n\nI was standing there in my knockout high-heeled boots, some cute stockings, a loose plaid-patterned skirt which draped to mid-thigh, and a pastel purple cotton button-down blouse. I had a black canvas corset pulled tight on over the blouse and although I was wearing one of the bras Lisa had bought me yesterday to accentuate my new, saline-enhanced size, the brassiere felt really tight. \n\nFrozen in the moment, waiting for an emotional blow which might very well kill me, my brain decided to focus on just how similar my sister's face was to my reflection now-a-days. Her hair was the same mousy brown mine had been before the dye job. She had sheared it to a military style cut which made her look much older and far more serious than I knew her to be. Still, I was struck with the dawning understanding of what the women in my life were seeing when they looked at me. I mean, I'd never looked at my sister in a sexual way before, but it was hard to deny her overall appearance was towards the hot end of the scale, even dressed down in track pants and an Octoberfest t-shirt. \n\nNot one bit of those thoughts was any comfort while my sister wordlessly opened and closed her mouth several times as her eyes moved up and down my manufactured hourglass figure. Every second of hesitation was a torture I couldn't even begin to describe. \n\n\"Ca-Chris?\" she stammered. \"Is that really you?\" \n\n\"Yeah,\" I eked out nervously, while nodding, arms raising for a hug. \n\nShe stepped in mechanically and loosely put her arms around my shoulders before stepping back quickly. Her hands gripped my upper arms as she glanced up and down my body once more. \"Wow! You're, um, well...\" and she paused. \n\nAnd with that pause my mind was off to the races. I expected to be 'a massive freak' in her eyes now. I dreaded her next words being something like 'absolute filth' or 'get away from me'. Sure, I will admit there was a part of me that wished she'd say I was really sexy or something, even though I knew my sister hardly ever said stuff like that. I decided the best, though honestly pitiful, hope was that her sentence would end with her asking me if I was a girl now. That, of course, could lead to chilling statements such as her telling me that she was disowning me or disappointed in me. She was the only family I had left. Was my bold decision to come as Tina going to cost me everything? \n\nI noticed people watching us. This could be a very bad spot if she turned hateful and called me out in front of everyone. From how pink her face was getting, that seemed to be where things were going. She inhaled and I cringed, waiting for the hammer to drop, but she must have sensed that very thing because the answer she gave was definitely not what I was expecting. \n\n\"... sooooo tan,\" she completed. \n\nDid I just hear that correctly? I didn't realize I had been holding my breath until my mind processed what she had said and my clenched body relaxed with a sigh of relief. \n\n\"Yeah, we just got back from San Diego.\" \n\n\"We, as in you and Julie. You're still together then?\" \n\n\"Of course! Things have never been better.\" \n\n\"Does that include you going out and about in a blouse and skirt?\" \n\n\"Yes, in fact, this,\" waving my hands at myself in a gesture, \"was all me this morning.\" \n\n\"I see.\" Her lips pursed at that comment and I cringed, but before I could say anything further my sister walked past me towards the far end of baggage claim. I hurried after her, a frosty silence hanging between us. I knew I wasn't out of the woods just yet. I'd hear all about it in the car when I was a captive audience and there weren't other people around. \n\nWhile we were awkwardly standing there, she kept making nutritive glances at me. Once I even noticed her pass her hands over her own bust. Looking away, I noticed some guy staring at us from the other side of the conveyor belt. He was huge in a white shirt and jeans and the way he stood made it obvious he was marinated in manly swagger. I tried to avoid eye contact, fearing that someone flirting with me would only sink me more, but he started to grin and I knew things were about to get worse. \n\n\"Hey, you girls in town for somethin'? If you want, I could drive you...\" \n\nEmily looked both irritated and horrified as the guy continued to try and pick us up. Given a focus for all my apprehension, I reflexively said my confidence mantra and stepped between him and her. This guy was even bigger up close, and I found myself staring right at a chiseled chest that strained his shirt so much it looked painted on. I felt my heart in my throat even as I leveled that gaze Julie and Lisa had used so many times. Chris would have never stand up to this guy, but Tina? I was sure Tina could tear him apart. \n\n\"Thanks, really, but I'm local. My sister's in town visiting me and-\" \n\n\"Whoa, wait, you two babes are sisters?\" His voice was so loud it shattered my inner calm completely. People started to stare again. I felt the moment getting away from me. \"Damn, that's hot! I'm serious, if you want a good time, I can call my buddy on base...\" \n\nAn overhead broadcast system interrupted us by announcing a baggage delay on Emily's flight. She took the opportunity to grab me by the hand and drag me towards the ladies' room. \n\n\"I'm going to the bathroom,\" she said, visibly agitated. \"You're coming with me.\" \n\nI followed along dutifully as she dragged us away from the guy who could not take a hint into the bathroom and its largest stall. I could feel her gaze on me, could almost feel her making the mental comparisons between our bodies as she weighed my feminine presentation. \n\n\"Okay, I have to know. Show me.\" \n\n\"Show you what?\" I asked. \n\nShe reached up and tugged at my blouse, undoing a button and letting my saline pumped breasts surge up through the neckline. The gasp that escaped from her lips made me wince. Even with Lisa having filled me up yesterday, I didn't expect to be so very, well, big. It was fairly evident now that the tightness I was feeling wasn't nerves, but that Lisa had given me far more than just a few hundred CCs. If anything, I was well inside the D-Cup range as my quivering flesh crested the lace-edged cups. I made a note to talk with her about that... \n\n\"Wait, these honking things aren't just plastic shape?\" She exclaimed, loud enough that anyone else in the restroom likely heard her. \"Did you really get some trashy implants, or are you just wearing a very convincing prosthetic?\" \n\n\"Not quite... It's, um, it's complica-\" \n\nEmily interrupted me by squeezing my breasts roughly. Her eyes went wide when my flesh yielded to her pressure a bit more than she apparently expected. I couldn't stifle a moan from the sudden sensation and she flinched back. \n\n\"Chris, I...\" Her expression of confusion hardened. \"Just how much of this shit is permanent? Have you even thought about what you're doing to yourself?!\" \n\nDespite her temper, I had never heard my sister curse before. Not even when Mom and Dad died and ruined her life by forcing her to drop out of school and take care of me. Maybe this was something she picked up hanging with military guys? That, or I had never actually seen Emily pissed. \n\n\"Well, the piercings are, I guess, also the hair removal. These are just temporary though...\" I said, cupping my boobs. \"The saline is processed eventually.\" \n\n\"How long?\" \n\n\"Oh, just a couple weeks.\" \n\n\"You've been this heavily transformed in a couple weeks?\" \n\n\"Oh, no, this all started about four months ago,\" I answered, timidly. \n\n\"Julie didn't try to talk you out of it?\" \n\n\"She, um, ... I mean this is all her idea.\" \n\n\"So, you've been parading about, as a woman, for nearly half a year and you never thought to tell me? On top of that-on top of hiding what you were doing to yourself from me-you're also saying Julie is the mastermind for all of this, am I hearing you correctly?\" \n\n\"Yes. Well, sort of... It kind of was an acci-\" \n\n\"You dress like this full time, right?\" she asked, cutting me off. \"No, don't answer that. There's no way you don't considering how comfortable you look, but it certainly seems like more than an accident, if that's the case.\" \n\n\"Well, yeah, this is actually just business casual for ...\" I noticed her eyes harden and stopped talking. \n\nEmily was silent for a moment, her jaw sliding back and forth as she processed that. \"So, what do you call yourself now?\" \n\n\"Tina.\" It was the most confident answer I had given all morning. \n\nHer eyebrows went up. \"So, you completely identify as a woman then?\" \n\n\"About 90% of the time, yeah.\" \n\n\"Okay... Well, now that Julie's made you her doll, or whatever, is she fucking anyone else?\" \n\nThe question came out of nowhere and I didn't know how to answer that. I mean she wasn't fucking another guy but, technically her and Lisa had been together just a few days ago and then there were all the threesomes between us in the last few weeks. Whatever the answer actually was, she took my hesitation as enough of a confirmation to further assume. \n\n\"That fucking bitch! Is she forcing you to have sex with someone else, too? Someone reinforcing your new... whatever-the-fuck this is?\" \n\n\"Not really. I mean she set us up, but I am happy with it-\" \n\n\"Oh, I bet you are. You'd do anything and everything to please Julie.\" \n\n\"No Ems, it's not like that. She had me-\" \n\n\"Shut up! I don't want you defending her. Just answer my questions.\" \n\n\"Okay,\" I replied meekly. \n\n\"How many people have you been with?\" \n\nHow to answer that one? I mean Lisa for sure. And I've kissed Ash and Dee, but I don't think that counts. Amanda stuck a dildo up my ass and jerked me off, does that count? And Mark gave me a happy ending. \n\n\"I don't know,\" I eked out. \n\n\"Are you freaking kidding me?!\" Emily inhaled to really let me have it when the intercom speaker blared out her luggage had arrived. Letting out the breath in a huff, she turned without a thought of me and stomped out of the bathroom. I again followed dutifully along, my face burning as I redid my button. \n\nI had to figure out how to make this right. Emily was the only family I had left. She had raised me. Our parents had been killed in a car wreck right before my 14th birthday. Other than the nasty gash on my neck which cost me my Adam's apple and a rebuilt trachea, I had escaped unscathed. I didn't even have much of a scar. \n\nEmily had just turned 19 and was in her first semester of college. She had immediately dropped out and put her life on hold to be there for me. She spent her party years driving me to my tennis matches, cheering me on at my baseball games, being my groupie at my band's gigs, and basically being my Mom. I was a hurt, insecure teenage boy and while she sacrificed everything for me, I treated her like shit. Looking back now I felt like an ass; l had never shown her the appreciation she deserved. \n\nShe had never asked me, her little brother, for anything (except to clean my room) until this. I had to make it up to her. She needed my help moving her stuff across the country to Utah. I could survive her tempest of outrage through that. After all, I loved her. \n\nI went to say something, but she opened her mouth first. \"There's my bag, can you grab it?\" \n\n\"Sure,\" I said, hefting the green army duffel off the return and throwing it over my shoulder. I heard someone gasp and I groaned inwardly. It probably looked like a thin woman in a skirt had just hefted a bag I that was bigger around than her waist. I turned to see Emily grab a suitcase and began to wheel it around. \n\n\"Anything else?\" \n\n\"That's it,\" she said. \n\n\"We're in self-parking...\" \n\nAs we walked, she continued to stare at me with her peripheral vision. I would let her break the silence. I ambled along as if nothing was unusual, but it was difficult to carry this bulky duffel in heels. Even if I did feel like speaking, I didn't really know what to say. I wasn't sure how to make this right. I liked being Tina and wasn't ready to give it all up. \n\nI wordlessly loaded up her baggage into the trunk of the GTO, got in, and headed out of the airport. The silence between us was deafening. It was beyond awkward. It was like calling Everest an anthill or Hurricane Katrina a light drizzle. I was so nervous that I held onto the steering wheel for dear life. My knuckles were white as snow. I was bracing for impact, knowing an onslaught was coming, but not knowing what to prepare for. As I drove, she stared at me in thought. \n\nI felt like I was waiting for Mt. Vesuvius to erupt. Every quick glance I made her way, I could have sworn I was seeing steam coming out of her ears. She wasn't saying anything to me, but she wasn't necessarily quiet. Her nostrils flared and she made puffs of annoyance. She would start to open her mouth to speak and then quickly close it with a click of teeth and a half-spoken murmur. \n\nWe kept up the semi-silence until we pulled up to the house. Emily got out and slammed her car door. I quickly turned off the ignition and got out to block her as she stormed for the house. \n\n\"Ems, wait, please. I'm happy. Don't be mad at Julie.\" \n\n\"Sure, you are,\" she snarled. \n\nI called on the confidence mantra again. \"Look, this is my life and I-\" \n\n\"Chris, I promise I won't hurt your wife, or whatever-the-fuck she is to you now, but there is abso-fucking-lutely nothing you can say to me right now that will keep me from speaking my mind to her.\" \n\n\"But-!\" \n\n\"Just get the luggage, Chris\" she said in that flat, commanding tone. \n\nI hurried to obey. Having her boss me around all through my teenage years had resulted in a Pavlovian reflex to a certain tone of her voice. I could give her crap, but when she laid down the law, I jumped. \n\nEmily went straight into the house, yelling at the top of her lungs, \"Julie, where are you? What the hell have you done to my baby brother? \" \n\nI couldn't hear Julie's reply from inside the house, but Emily's came back clear. \n\n\"Of course, he did, Julie. He worships the ground you walk on. That's hardly a reason to turn him into some kind of toy for you! What the hell!?!\" \n\nI slowed down my pace and took my time unpacking the bags from the trunk. I saw no reason to rush into the fray. They needed to get this out and I would only be in the way. In fact, I felt an overwhelming desire to go visit Lisa for a couple of hours. I didn't act on it, of course, but the sense of impending doom made me uneasy all the same. \n\nEmily certainly was loud, I was hoping she would quiet down so the neighbors wouldn't hear. I didn't know the ones on the right, but the Garcia's next door had been friendly. I hadn't talked to them at all though since I had donned my Tina personae, although Julie had. \n\n\"You fucking dressed your husband up like a girl! Who does that? Seriously,\" Emily boomed. \n\nI cringed and blushed red. If any of the neighbors heard that, my life would take a disturbing turn for the worse. I was dying inside, and each yell felt like a hammer blow to my guts. \n\nI only caught the tail end of Julie's retort with a \"the sex has been incredible.\" \n\nAgain, I didn't need the neighborhood to know that either. My ears were red for sure. But then something even worse happened. The Garcia's front door opened, and their 17-year old son Jose came out holding a trash bag. If I could hear the yelling, he certainly could. I rushed over to distract him. \n\nAs Chris, I knew Jose pretty well as I had helped him get his car running when he bought a junker, but I had avoided him, and everyone else for that matter, as Tina. \n\n\"Hi,\" I announced loudly hoping to drown out the feuding girls. \"I'm Tina. Who are you?\" \n\nHe looked me up and down and smiled. \"I'm Jose. You're a friend of Chris and Julie's?\" \n\nI nodded and then Emily's voice boomed clearly. \n\n\"Chris told me you were cheating on him. Is that why you did all this? To make it okay to cheat.\" \n\nMy face spasmed in frustration. It was only a kid, but a kid who could talk. \n\n\"Sorry about that,\" I said. \"Chris's sister showed up and it's been ugly. Please ignore them.\" \n\n\"I was wondering why I haven't seen Chris around,\" Jose said, as he dropped the bag into the garbage can. Some garbage spilled out and he bent over to pick it up. As he did, I couldn't help but notice what a cute bubble butt he had. It would look great in a skirt. \n\nWhat the heck was I thinking?!? When did my mind go into the gutter like that? As Jose stood up I noticed he was slender and attractive and with a little makeup he could pass as a girl. I stopped speaking and just stood there in thought as I imagined what I could do with this little Hispanic boy as my canvas. \n\nThere was a few more yells back and forth but fortunately they were undecipherable. The girls must have disappeared further into the house. \n\nI walked back to the house with Jose. \n\n\"Can you hear all that inside?\" I asked. \n\n\"Nah, not like you can out here.\" \n\nI sighed in relief. \n\n\"Well, good luck, lady. Nice to meet you. Tell Chris to give me a call sometime. I need his help. My birthday is in a couple weeks and I already know my parents got me a new stereo for my car. I need his help to put it in.\" \n\n\"Okay,\" I said. \"If he can't help you, I can. My dad was a mechanic so I'm pretty handy.\" \n\nHe smiled at that shyly, opened the door and went inside. \n\nI breathed a sigh of relief. Emily hadn't broadcasted too much that I felt in danger, just enough to humiliate me. I hoped no one from the other houses around us heard the argument. \n\nThen my phone buzzed with a message from Julie insisting I come inside just as Emily's voice got much louder again. \n\n\"Don't you walk away from me, bitch! I'm not done talking!\" \n\nI cringed and blushed red. I rushed with both suitcase and duffel up the walkway and into the house. I snapped a heel in the process, but I kept my balance as I stumbled into the house. I slipped my heels off and started to close the windows as Julie came in from the office. Her face was beet red, whether from blushing or yelling I couldn't tell. \n\n\"Julie! Are you okay?\" \n\n\"Yeah, just embarrassed...\" \n\n\"Why?\" \n\n\"Well ... Remember those photos I had Francis take of you all dolled up? He got me the prints right before we went on vacation and I got them hung up in there for you as a surprise, but had totally forgotten...\" \n\n\"So, Emily saw them?\" \n\nIn the other room, I could hear my sister swear. \n\n\"She has now...\" Julie acknowledged. \n\n\"How bad are they?\" \n\n\"Well, they look great,\" Julie said. \"They turned out terrific. You are so sexy. But I did hang one of the ones where your breast is exposed.\" \n\nEmily joined us in the foyer, a picture frame in her hand. She started yelling. \"You fucking dressed your husband up like a girl?! Actually, no, not a girl, a porn star! You took pictures of MY brother dressed up like some ... cheap hooker for public consumption!\" ",
        "I cringed and realized I was going to have to look at those pictures. \n\n\"Listen, Emily,\" Julie retorted. \"Chris and I are two consenting adults and what we're doing is none of your concern. I would appreciate it if you mind your own business.\" \n\n\"Mind my own business! Are you fucking kidding me? He is my business. He's the only family I have left. Don't you try to discount our relationship. You might be married to him and say you love him, but we are blood. It doesn't get thicker than that!\" \n\n\"Our marriage has been better because of this,\" Julie remarked. \"Tina has agreed to every step along the way. If you're worried about her having been railroaded, she has said no to a great number of things as well.\" \n\n\"Oh no, you're not getting off that easy. Chris all but told me you were cheating on him now. Is that why you did all this?\" she asked, stabbing the photo with her finger. \"Did you make him a woman to make it okay to cheat?\" \n\n\"That... that wasn't the intent, us having other partners just kind of, well, happened.\" \n\n\"Just kind of happened? How does having sex with someone else just 'kind of happen'?\" \n\nBoth girls looked at me with forced smiles on their face. They spoke at once, in horrifying harmony. \"Well? Aren't you going to explain what happened?\" \n\nI started to talk about what had happened with Lisa, but the mention of her name once again made Emily start yelling again. \n\n\"You know what? Whatever kinky shit you got going on is all going to fall apart and then Chris will come crying to me. I should tell him to divorce your sorry ass right now, so I can take him with me!\" \n\nThere was a moment where Julie looked crushed, but her courtroom demeanor resurfaced right away as her hand grabbed mine. \"You're acting like Tina is mentally incompetent, which is pretty awful, really. How about you let your sister make her own decisions? Just because our relationship is weird to you doesn't mean we aren't just as strongly devoted to each other. This might have started with me, but she's the one driving things at this point and I fully support her in that regard.\" \n\nMy sister looked at me, her expression unreadable. \"Well?\" \n\n\"Can we let this go for now, Ems?\" I pleaded. \"I apologize for not telling you sooner and I promise we can talk more about this later.\" \n\nEmily relaxed back on her heels. When she spoke again, her voice was strained and frosty. \"Okay, sure. I can do that. I can't deal with this anymore. Can I use your computer? I want to send an email to Frank letting him know I arrived.\" \n\nI nodded again and pointed to the office and said, \"It's in there. Help yourself.\" \n\nNeedless to say, the atmosphere at dinner was colder than the weather outside. Icicles could have hung from the table from the coldness of Emily's glare. She was polite and spoke in a precise, calm voice, but if looks could kill, Julie would have been six feet under. I might have been there beside her. \n\nI tried to be the peacemaker and bring up conversations that would get the subject off me. She answered tersely with one-word answers. After a couple of dozen of these, she finally exploded. \n\n\"I know I said I was going to let this go, but I won't stand for you turning my brother into a fucking sissy,\" Emily yelled. \"I go away for a few years and you have turned his world upside down.\" \n\nAt the end of my patience, I finally spoke. My words quiet, yet firm. \"I am not a sissy, Emily. Please do not call me that.\" \n\n\"I'm sorry, bro, but this is ridiculous. I can't handle any of this.\" \n\n\"If I can, you certainly can,\" I calmly spoke, trying to bring down the yelling. \"It's my life. Let me live it and we can talk about it in detail when the shock has worn off.\" \n\nShe looked at me and tears started to leak down her face. I got up and held her. This time she clung to me, pulling me close. Over and over, I calmly whispered 'I'm okay' into her ear. \n\nWhen she finally calmed down, I sat next to her and asked what was the battle plan for the next couple days. That finally seemed to get her to turn her attention to something besides outrage. \n\n\"Well, tomorrow I'm doing some shopping and need to rent a truck. I figure we could load up Friday and hit the road Saturday. I know it's not far, but I want to stop in Iowa City and see Shelly (Shelly was my sister's best bud from high school) for two nights. Monday, I figure we could drive to Cheyenne and Tuesday we could do the last leg. We should get to Ogden Tuesday. Can you afford to take a couple of days off work?\" \n\n\"I'm actually not working right now,\" I said. \n\n\"I see,\" Emily said disapprovingly. \"Well, then maybe you can stay a couple of days with me to help me find a place.\" \n\n\"Sounds good. I have Dee's office Halloween party on Saturday. I have to be back by then.\" \n\n\"Who's Dee?\" Emily asked. \n\n\"Oh, she's a friend from softball I have been hanging out with lately. She needs me to be her date at her Halloween party.\" \n\n\"Her date, huh?\" \n\n\"It's nothing like that,\" I blushed. \"She's just a good friend.\" \n\nAfter dinner, Emily claimed jet lag and headed to her room. I called Dee and informed her of my plans. She told me that she would \"let\" me go and get out of our bowling date for Monday night, but she needed me to stop by tomorrow to be measured for my costume for her party. I agreed and hung up. Then, I snuck into the office to see what pictures could make Julie blush and to see what Emily had seen. \n\nI walked into the office to find three framed photos of me hanging on the wall, each a 16' x 20'. In the first, I was sitting on the bed looking over my shoulder. It was a profile picture but the slit on the dress was open, so you could see my legs encased in stockings and heels. The second had me laying down on the bed in a sexy pose with my hair flared out all around me. But the third, the one Emily had been waving around, caused me to cringe. I had let the dress slip down over one shoulder and my left breast was fully exposed. It was the definition of a boudoir picture and Emily, my sister, had seen that. \n\nAs I went up to bed, Julie insisted on sex - and not the normal kind but loud, passionate sex. She yelled and moaned like I was giving her the greatest performance in history. I think she was making sure Emily knew what we were doing, and it was her way of telling her that we were still a happily married couple. It took me a while to cum as it was distracting to me to think of my sister knowing what was going on. \n\nChapter 2 \n\nI tossed and turned that night in worry so I didn't sleep well. I finally dragged myself out of bed at 9:30 in the morning to find I had the house to myself. Julie was obviously at work, but my GTO was gone so I assumed Emily had taken it. I showered and headed out to my tanning appointment before dropping off dry cleaning and running other errands. I headed over to see Dee around 4 pm like she asked. \n\nI knocked on the door and got a yell of \"It's open,\" so hesitantly I opened the screen door and turned the handle of the regular door and let myself in. The view before me was a shock, and that's an understatement. \n\nDesiree was laying on the couch watching the television completely topless. She was turned on her side with her head propped up on her right arm. Lying next to her was her baby, Jasmine, who was busy nursing at her breast. The other breast was totally exposed. \n\nDesiree looked at me and said, \"Oh, it's you. Hey. Mom just got home and she's upstairs in the shower. She should be down shortly. You can wait here, Oprah's on.\" She gestured at the other chair never taking her eyes off the TV. \n\nI couldn't take my eyes off her. Her breasts were enormous, at least a couple of sizes bigger than Lisa's DDs and her thick caramel areolae were the size of small saucers. Attached to it was a large, long, thick nipple that reminded me of a baby bottle. But what had my complete attention was the bead of milk that had leaked out of her nipple and was dangling there tantalizing me. \n\nIt took all my willpower to walk over to the chair she had gestured to and sit down. I wanted to drop to my knees and crawl over to her and suck that huge bottle into my mouth. The temptation was so strong it almost felt like an unseen force was pushing against my back, urging me into action. I resisted barely. It's a good thing I had a flowing skirt on, my penis refused to be restrained in any way. It felt like I could have drilled a hole through steel as hard as it was. \n\nI listened to the gurgle of the baby nursing away happily while I watched that drop of milk finally fall. It streaked down the side of her breast, begging to be lapped up. Another bead started to form to replace it. I desperately wanted to help. Suddenly, the spell was broken by Dee's voice. \n\n\"Desiree, shouldn't you cover up?\" \n\n\"What, it's just us girls here. Who cares? It's hot.\" \n\nHer actions had me sweating but it had nothing to do with the temperature in the room. \n\nDee looked at me and smirked. Then she gestured to me. \n\n\"Come upstairs so I can take your measurements.\" \n\nI slowly got up and followed her upstairs but I couldn't look away from that breast until my feet carried me out of sight. \n\nOnce we got into the room and Dee closed the door, she whispered, \"If she only knew,\" smiling. \"Go ahead and take all your clothes off. I need to measure you and I need it as accurate as possible.\" \n\nShe had already seen me naked twice so I only hesitated for just a second before I began peeling off my clothes. My shirt got stuck on my chest as I pulled it over them so I had to tug hard. That caused my breasts to jiggle out of control, the bra encasing them looking like it would break in any instant. \n\n\"Woah,\" Dee said. \"You look bigger up top. I thought you said that these would shrink over time.\" \n\n\"Lisa talked me into getting another saline injection. It was supposed to take me to a C cup but I think Lisa got carried away. She claims it was an accident, but I'm doubtful. Anyway, I ended up with these,\" emphasizing the D-cup breasts by wrapping my hands under them. \"I look like a freak for sure.\" \n\n\"Yeah, they're a little big,\" Dee said. \"You look like you're about to fall over. Too top heavy, definitely not natural. That's sexy in its own way, though.\" \n\n\"Well, I hope they don't throw off your measurements too much. I should be down to a B cup by the party. What do you have me wearing?\" \n\nI was standing there in front of her completely naked and she picked up her measuring tape and wrapped it around my forehead. I didn't need to be nude for that. She got out a pen and wrote down that measurement before measuring my waist, breasts and ass. Then, totally embarrassing me, she wrapped the tape around my flaccid penis and measured its girth and length. \n\n\"Your costume is a surprise but I think you will like it. Be forewarned though, it will be revealing and sexy. And you promised to be totally into me that night. I expect lots of fawning and smooching. I need to make a good impression.\" \n\n\"I can do that,\" I said, surprised that I meant it. Dee was starting to grow on me. I didn't love her like I did Julie and Lisa, but I liked her a lot. And she was so very sexy; she turned me on so much. She had started slipping into my dreams as of late and I had even had a midday fantasy or two that involved her. I had replayed that scene of her and Tony fucking several times in my mind. \n\n\"Done?\" I asked. \n\n\"Oh, I almost forgot. I need one more measurement.\" With that, Dee reached down and grabbed my penis. She started to stroke it with one hand and she grabbed my balls with the other. \n\n\"What're you doing?\" \n\n\"I expect you'll get turned on at least once during the night so for the costume to fit properly we need to get an accurate measurement. Now hush and let's get this over with.\" \n\nDee knew what she was doing. I was hard in no time and she took me right to edge before stopping. Then she calmly dropped to her knees and remeasured my penis. Her lips were inches away from my penis and I so wanted to reach over and grab her head and thrust forward, but I didn't dare. \n\nAfter she finished, she slapped my penis causing it to bounce and stood up, saying \"All done. Get dressed.\" \n\nI looked at her in dismay, hoping that she would finish me but too afraid to ask. I slowly bent over and picked up my clothes and put them back on. I followed her down the stairs hoping to at least catch another sight of Desiree's boobs but Jasmine was in her crib and she was nowhere in sight. I sighed and got in my car and headed home. \n\nChapter 3 \n\nThe GTO was there when I pulled up to the house so I knew Emily was inside. I walked in and yelled, \"anyone home.\" \n\nEmily popped her head out of the office and said, \"Good, you're here. We need to go get the truck from U-Haul before they close. Let me get my purse.\" \n\nShe headed upstairs and I looked in the office to see what she had been doing. I saw she had left the Internet up, but had closed out of the tabs of wherever she had been. Curiosity got the better of me and I quickly pulled up the history. I was touched by the results. I could tell by the time stamps that she had been there for two hours and had been reading articles about what transgender is and how to support your transgender friends. \n\nWhile she hadn't said anything to me yet, this showed to me that she at least still loved me and I felt a great weight lift off my shoulders that I didn't even know had been there. I heard her tromping down the stairs and quickly exited my snooping. \n\nThis time the silence during the car ride wasn't awkward to me. It was reassuring, a warm silence as I knew my sister still cared about me. I welcomed it. Just as we pulled up to the rental store and as she was about to climb out of the car, I finally spoke. \n\n\"I love you, sis.\" \n\n\"I love you too, Chris. We'll talk later okay?\" \n\n\"Okay.\" \n\nThat night at dinner, I felt the temperature in the room rise to just chilly rather than several degrees below zero like the night before. The girls were a long way from cordial but outright glares of hate seemed to have dissipated. Emily was adjusting slowly and Julie was doing her best not to bring up any controversial subjects. The talk was mostly about Germany and what she had seen in her travels through Europe. I had never been so I had nothing to input, so I sat there quietly and listened to the two of them talk. \n\nJust then, the phone rang and Julie got up to get it. Julie left the room and came back about 10 minutes later. When I asked who it was, she replied it was Lisa and she would be coming over for dinner tomorrow. She wanted to discuss some things before I left with Emily. Emily's eyes got real big when Julie mentioned Lisa was coming over. \n\nAfter dinner, Julie went up to take a shower. I went to follow her, but Emily grabbed my arm and pulled me into the guest room. \n\n\"Hey,\" she whispered in a hush. \n\n\"What's going on?\" taking her lead and talking quietly. \n\n\"Chris, I got to ask. Julie was talking about Lisa coming over tomorrow. Isn't that that terrible woman that tried to stop your wedding? I remember you crying into my shoulder about how much you hated her. What's going on?\" \n\nMy mind drifted back to that night when I had cried in my sister's arms. She had wrapped her arms around me and held me tight, humming and telling me that it would all work out. Now, I was blushing at the memory. \n\n\"Well, Lisa's kind of my lover now.\" \n\n\"What!?!\" she said loudly, then clapped her hand over her mouth. \n\nSo, I told her in hushed tones about Julie setting me up with Lisa and me having to go to Vegas. By the time I had finished, I noticed that over an hour had passed. Julie must be wondering what was going on with me. \n\n\"That's crazy, Chris!\" Emily gasped. \"I can't believe your wife set you up like that. That's just so weird.\" \n\n\"She's been weird lately, but I'm enjoying myself. It's not all bad. Now I better go get some sleep so we can get everything done tomorrow.\" \n\n\"Ok, we'll talk later. You have to tell me about this Dee person still.\" \n\n\"I'll call her and see if she can come help us pack up tomorrow. She's a nice lady. You'll like her.\" \n\nAnd with that I turned and headed into my room. \"Good night.\" \n\n\"You too, sleep tight. \n\nAnd my response, \"Don't let the bug beds bite.\" \n\nShe smiled at the memory. It was something our parents used to say to us. I hustled out of the room and went to find Julie. \n\nChapter 4 \n\nThe next day was a busy one. Lisa was busy in surgery most of the day and Julie had court so she was out but Dee agreed to help me and Emily pack up her belongings. It took a few hours and was arduous work (especially the piano) with just the three of us but it went smoothly. Dee was on her best behavior. She didn't tease me once in front of my sister and didn't even let on that she knew I was a boy. She was just there as muscle and got along great with Emily, asking her about Germany and her experiences there. \n\nAs they gabbed back and forth, I got out of it things I didn't know. My sister had developed a love of photography, was good at it, and had been hired by an American company to travel around Europe taking pictures for their guide books. She had spent as much time on the road as she had at home, at least until the last baby was born. When Dee asked her who watched her eldest while she was traveling, Emily said that they had found a German nanny who lived in and helped with the chores and child rearing. When she said this, knowing my sister as well as I did, I detected a hint of sadness, but didn't want to delve deeper in front of Dee. I reminded myself to ask her about it later. \n\nAs we left the storage facility waving goodbye to Dee, I promised to check in when I got back in town. Dee nagged me to check in with her every couple of days just so that she would know I was still alive. \n\nEmily said, \"I like her. She's real fun. She seems like a good friend.\" \n\n\"She is.\" \n\n\"Does she know your secret?\" \n\n\"Yes, she does. She's really the only friend of mine that does though. I haven't worked up the courage to tell Rusty or any of my other friends. I've kind of disappeared off the map from them. Dee's become my best friend outside of Julie and Lisa.\" \n\n\"Are you sleeping with her, too?\" \n\n\"No, I'm not a slut,\" I smirked. \"Although Julie has told me I can if I want to.\" \n\nEmily's eyes widened at that. \n\n\"She's okay with you sleeping with other women?\" \n\n\"She pushes it actually,\" I said. \"It's really crazy!\" \n\n\"Um, what about guys?\" \n\n\"She's pushed that too but I'm not gay,\" I stated firmly. \"I don't swing that way, sis.\" Images of Billy without a shirt on drifted into my mind. Why couldn't I get rid of those thoughts? I didn't want them. I certainly didn't need them. Hell, I needed nothing more than Julie and Lisa to keep me satisfied for the rest of my life. They were more than I deserved. Heck, the two of them were more than any guy deserved. \n\n\"This is still so crazy for me to wrap my head around,\" Emily stated. \"I'm still not use to it.\" \n\n\"Me either,\" I replied honestly. \"And it's been four months. I still cringe every time I go into the ladies' bathroom.\" \n\n\"I bet.\" \n\nWe pulled up to the house and parked the car and went inside. Emily said she needed to jump on the computer to check on the kids so I left her alone and went upstairs to pack. \n\nI had asked Emily to cook dinner since she was amazing at it and Julie was in court so I knew she would be late. She made chicken cordon bleu, a real treat since neither Julie or I knew how to make it. We had told Lisa we would have a later dinner and be there by 7 and the doorbell rang at 6:59. \n\nEmily was in the kitchen tossing a salad so I got the door. I opened it and Lisa walked in dressed to stun. She looked ridiculously gorgeous. She was in a sequined royal blue cocktail dress that had bared one shoulder blade while the other was covered completely. Her right shoulder and arm were completely bare while the left was encased all the way down to the wrist. The dress length didn't even reach mid-thigh, emphasizing her long lustrous legs which were anchored in crystal embellished ankle strap heels with a 4\" heel. She had a sapphire choker with sapphire earrings tying it all together. My mouth hung open drooling. ",
        "I composed myself quickly and said, \"You look amazing. We were going casual. We're dining in.\" I, myself, was in a pair of jeans and a t-shirt and poor Emily was in sweat pants and a tank. I had showered when we got home and just thrown on the first thing I saw in the drawer. \n\nShe leaned in and whispered. \"I have to make a good first impression on your sister. We're going to be family now.\" \n\nI looked her up and down. \"That'll do it. You look like a million bucks. Julie isn't home from work yet. Maybe I should go change?\" \n\n\"Nah, it's ok. I just talked to her a sec ago. She's about 10 minutes away. Let me go introduce myself to your sister.\" \n\nWith that she hugged me and then turned away and headed for the kitchen. I followed slowly behind wanting to see Emily's impression of my lover. \n\nEmily was turned around with her ass in the air pulling the chicken out of the oven when Lisa approached. \n\n\"Hi, I'm Lisa,\" Lisa managed to get out before Emily turned around. She was right next to her and in her high heels towered over Emily. \n\nEmily took one look at her and her mouth dropped open and her face turned red. It stayed there for a second before she finally closed it and stammered, \"Hi, I'm Emily, Chris's sister. I didn't realize we were going formal. It's just my chicken. I'm so embarrassed. You look amazing, by the way.\" \n\n\"Thanks,\" Lisa replied. And she opened her arms wide for a hug. Emily looked at her strangely before walking into the embrace. Lisa held her tight, then tilted her head down and when Emily looked up, Lisa moved in lips first. She kissed her! I sat there in shock as I watched Lisa force her way into Emily's mouth, giving her no chance to balk. \n\nEmily's eyes grew huge as she had opened her mouth to say something and Lisa took full advantage, probing her mouth with her tongue and molding her body against Ems. After resisting for a couple seconds, I felt Emily's willpower succumb as Lisa dominated her. My sister was so strong, but there in Lisa's arms, she looked powerless. \n\nLisa eventually pulled back and smiled at me. \n\n\"Lisa, what was that?\" I asked. \n\n\"What, you kissed my sister. It's only fair.\" \n\n\"I need to go change,\" a flustered Emily said. \"I'll be right back.\" \n\n\"Okay I'll open a bottle of wine to breathe,\" Lisa said. \"Jules should be here in about 10 minutes.\" \n\nChanging sounded good and I decided to do it as well. We were halfway up the stairs when Emily hissed at me. \n\n\"You're sleeping with HER?\" \n\nI nodded. \n\n\"Are you pulling my leg?\" \n\nI laughed. \"I swear.\" \n\n\"I mean, Julie was way out of your league ...\" \n\nI interrupted with a \"Gee, thanks.\" \n\n\"No, I'm proud of you, bro, you did good. But Lisa, she should be on the cover of a fashion magazine. It's unbelievable.\" \n\nWe quickly parted ways and as soon as I entered the bedroom, the clothes began flying as I hurried to change. I went with a light summer dress (again, the first thing in my closet - my boy habits were still deeply ingrained despite Julie and Lisa's hard work) and sandals with no heel. I quickly brushed my hair and had just put on earrings when I heard the garage door opening, signaling Julie's arrival. \n\nI think Lisa intimidated Emily as she was much quieter than the night before. This made the dinner a little stilted and awkward for me as I attempted to fill in the gaps of silence. I did get Emily to open up when she laid out the route for our trip and said she was hoping to be on the road by nine. \n\n\"You'll probably need to drive the first leg,\" Lisa informed her. \"I plan on riding Tina hard tonight so that she won't forget us while she's in your care. She won't get much sleep.\" \n\nWho talks like that? I was as red as a tomato as I looked over at my sister. She was turning a little red herself. I grinned over at her a little sheepishly and shrugged. \n\n\"Um, ok,\" was Emily's reply. I don't think she ever expected to hear anything like that either. After dinner, Julie went to help Emily clear up the dishes. Lisa made a big scene by tugging on my arm as I began to help. \n\n\"Unh, unh, lover,\" she cooed. \"You're mine tonight. Let's go get started.\" \n\nEmily watched in astonishment as Lisa dragged me up the stairs. She turned to Julie and said skeptically, \"You're ok with this?\" \n\nJulie nodded and replied, \"I am. Chris has done a lot by dressing sexy for me. Him having Lisa is a small way for me to pay him back.\" \n\n\"You're crazy, and what about ...,\" I heard before Lisa had tugged me out of range. \n\nChapter 5 \n\nOnce we got up to our room, Lisa's face got all serious and nervous at the same time. I wondered what was coming. \n\n\"Tina, dear, I need a big favor,\" she asked tentatively. \n\n\"What's that?\" \n\n\"I was, um, wondering, uh, if you would, uh, mind, if Julie comes and spends a few nights with me while you are away on your trip,\" she hurriedly finished. \n\nThe hairs on the back of my neck stood up in reply. I had feared this day. This was one of the biggest nightmares I'd had since I discovered that Julie had stepped out on me with Lisa. The thoughts came once again unbidden. Has this been a setup all along? I knew the girls conspired about everything. Was this the endgame? Has this all been a plot for me to let them be with each other, and, in the end, I would find myself on the outside looking in at their relationship? \n\nI stuttered and stammered, \"What do you mean?\" \n\n\"Well, it's going to be a few days,\" she paused. \"And I would like to spend some time with her. If that's okay with you, that is. I know we got some alone time in San Diego, but I could really use some more. It's been a while for me and I've missed her.\" \n\nNothing she was saying was reassuring me. In fact, it made me even more leery to say yes. But, how could I be the bad guy? I mean both girls had reassured me that I was important to them and they trusted me. Shouldn't I trust them? \n\n\"Have you talked to Julie about this?\" I mused, wondering if this was all a master plan. \n\n\"Oh, no, not at all,\" she reassured me. \"I wanted to make sure it was okay with you before I broached the subject with her.\" \n\nI must have looked doubtful because she added on to ease my reluctance. \n\n\"I won't do anything you don't want me to if you put it off limits,\" she added. \"I just don't want to be alone and since you'll be gone, it's a perfect time to spend some time for just us.\" \n\nInwards I cringed. If I said no, I was showing my inadequacies and looking like a heel in the process. Yet, if I said yes, I was tempting fate and possibly losing my wife. \n\n\"Stay out of her ass?\" I questioned. \n\n\"Oh, sure,\" she readily agreed, taking that as acceptance. \"I promise I'll make it up to you.\" And with that she kicked off her heels and reached behind her back to unzip her dress. \n\nOutwardly I tried to be brave and nonchalant, but inwardly I was crying. I might have just thrown away my happiness and my marriage. I loved my Julie, but I needed to trust her. She had told me I come first over her and Lisa, and I would always wonder, unless I gave it a shot. They say if you love something, set it free and if it comes back to you... Well, I was letting them be free. I just hoped it didn't bite me in the ass. \n\nLisa lived up to her promise to drain me dry. I came and came and came and came. I was exhausted by the time she and Julie finally turned off the lights in the wee hours of the morning. \n\nThe plan was to leave at 9 a.m. but by 8:45 a.m. I was still out of it. I eventually woke to Emily's persistent knocking and untangled myself from Julie and Lisa and stumbled to the bedroom door to unlock it. \n\nI peeked my head out and said sorry for not being up. I told her I would rush and meet her downstairs ASAP. \n\nI rushed a quick shower, threw my hair in a ponytail and put on a sweater and yoga pants, since we would be in the truck. I grabbed my sneakers and tried to sneak by quietly but the girls woke up and said I couldn't leave without saying goodbye so they climbed out of bed and followed me downstairs. \n\nEmily had made fried egg sandwiches so I grabbed one and started to eat. She was just finishing up hers when Julie and Lisa came downstairs. I was looking at Emily and saw her eyebrow's lift as I heard the girls on the stairs. I turned to see what caused her some surprise. \n\nJulie was in her pajamas and a robe and looked normal but Lisa's hair was all akimbo and she had a fresh-fucked glow surrounding her. She had on a sheer robe and nothing on underneath. The robe hung loosely on her body and her pussy was completely exposed, not to mention that you could see the outlines of her areolae clearly through the thin material. She might as well have been naked. \n\nShe showed no interest in covering up and I think she secretly knew the unnerving effect she had on Emily and enjoyed pushing her boundaries. I got up to block Emily's view and wrapped my arms around Lisa to pull her robe closed, looking for the sashes in the back to tie it together. She embraced me in a solid hug and squeezed her breasts into mine. Then her face dropped to mine and she gave me a kiss. Not a chaste kiss that someone would do in front of someone's family, but an open-mouthed soul scorching kiss that rocketed through my body. \n\nAfter a few seconds, I tried to pull back and disengage, but she moved with me almost in anticipation and continued to explore my mouth. I felt her steamy lips and tongue removing the oxygen from my lungs, causing me to pant. I finally managed to extract myself from Lisa's embrace and quickly glanced over at my sister, feeling the pink rise to my cheeks. \n\nEmily was staring open-mouthed. \n\nJulie moved in to me and started to kiss me as well. She needed to stake her claim and her kiss was every bit as hot and heavy as Lisa's had been and seemed to go on for twice as long. As we broke apart, I saw Lisa smiling ear to ear, obviously knowing Julie was trying to compete. She winked at me. \n\nI didn't know what to say, but remembered I left my purse upstairs so I excused myself and headed up to the room. Julie followed and once we got into the bedroom, she said something that caused shivers up my spine. \n\n\"Lisa said you gave me to her to be her pet for the week while you're gone?\" \n\n\"I most certainly did not!\" \n\n\"What does she mean then?\" Julie questioned. \n\n\"She asked if you could spend a couple of nights with her while I was away so she wouldn't be lonely. I reluctantly agreed. It makes me nervous. I don't want to lose you to her,\" I confessed. \"Oh, and I told her she couldn't fuck you in the ass.\"  \n\n\"So, I don't have to play her games?\" \n\n\"Honey, baby, you don't have to do anything you don't want to do,\" I stated firmly. \"If you don't want to be with Lisa, don't. You're your own person. If you want to be with her, I do understand. I enjoy it. Just please don't choose her over me. And don't do anything with her you wouldn't do with me.\" \n\n\"Oh, don't worry, I won't. I love you so much, Chris. We're soulmates.\" \n\nI wanted to believe her but something nagged at the back of my mind. Lisa proclaimed her love for me as well, but just a couple of days ago I heard her blow off some guy by saying, \"Sorry, dude, guys just don't turn me on.\" And, despite all the sex that we've had, she still claimed to be a lesbian. Was she trying to steal Julie from me? Had all of this been some ploy Lisa put Julie up to, just to get her way. I wondered, but I just had to trust her. What else could I do? \n\nWe walked down the stairs together holding hands to see Lisa talking to Emily. \n\n\"... we are leaving Tina in your care,\" Lisa was saying. \"The one rule is you have to help her cum morning and night.\" \n\nDid I just hear that right? Once I realized I had, crimson spread through my entire body. I looked over at Julie and she was blushing too, remembering that was the rule she had given to Lisa when she took me to Vegas. I looked over at Emily and her mouth hung open in shock, and her face was red as well. \n\n\"Lisa, behave,\" I snapped. \"That's my sister! You asked me to make Ash off limits. Stop messing with Ems. Sister exemption!\" \n\nShe turned to face me, all wide eyed and proclaiming innocence. \n\n\"What did I say,\" she said. \"I just told her the rules, right Jules?\" \n\nJulie looked at her and smirked. \"You're so bad!\" \n\n\"Let's get out of here, sis. This woman is the devil.\" \n\n\"Can I get one more kiss before you leave?\" Lisa requested. \n\nI walked up and kissed her cheek, then grabbed my coat off the couch and put it on. Then, as I headed out the door, she complained. \n\n\"That wasn't a real kiss. Give me a real one.\" \n\nOf course, I couldn't refuse. Then as I stepped back, I got another shock. Lisa held out her arms and said to Emily, \"I want one from you, too. Get over here.\" \n\nCrimson flames rushed out of my sister's cheeks, spreading out like flickering flames, devouring her face. They seeped down her neck and into the shirt she was wearing. Ems stammered a response. \n\n\"Ummmmm, uhhhhhhhhh,\" and then she said it. \"Okay.\" \n\nI couldn't let this happen. I grabbed Emily's arm and pulled her towards the door. She staggered along behind me. I shoved her out the door and turned to the face the girls. I blew Julie a kiss before sticking my tongue out at Lisa. She raised her eyebrows in a \"oh really,\" smirk. \n\n\"I won't be gone that long,\" I said. \"You two have each other. I'm the one who is going to be going without. I love you two, see ya.\" \n\nJulie yelled out, \"Be safe.\" \n\nLisa followed with, \"Don't do anything I wouldn't do!\" \n\nI closed the door and scurried to the truck to avoid the cold. Once we were in the truck and had pulled onto the road, Emily turned to me and said, \"What was that all about?\" \n\n\"Lisa was pulling your chain. It was an inside joke,\" I explained. \"Julie made Lisa do that stuff when she took me to Vegas. It's a long story.\" \n\n\"And the sister remark?\" \n\n\"Well, while we were in Vegas, Lisa's sister kind of developed a crush on me. She's been trying to get into my pants ever since.\" \n\n\"Is she as gorgeous as her sister?\" \n\n\"Honestly?\" \n\n\"Yes, of course.\" \n\n\"She is, in fact, she may even be more gorgeous. Ash is at least as pretty, although she's so young. She's only 19.\" \n\n\"Wow, my little brother has turned into a stud,\" she mused, smirking. \"All it took was him putting on a skirt.\" \n\n\"You don't even know the half of it. I get hit on all the time now.\" \n\n\"You do look good. Even though I don't understand it, I do see that.\" \n\n\"Thanks.\" \n\n\"It's the truth. Weird truth that it is.\" \n\nI yawned and stretched. I was still feeling punch drunk from the lack of sleep. \n\n\"I'm going to sleep for a few. The girls did keep me up all night.\" \n\n\"You poor thing, you. All right, catch some zzzzzzzs. I'll be okay for a while.\" \n\nChapter 6 \n\nI was pounding Julie's pussy hard. The angle was perfect, not only was each thrust causing her to moan in delight, it didn't have me on edge so I would last for a while. I felt Lisa's arm wrap around my waist as I continued to screw Julie. \n\n\"You two look so hot,\" Lisa whispered into my ear. \"I can't just sit and watch anymore. I need to get involved.\" \n\n\"Okay, what do you want?\" \n\nI felt her middle finger tickle my anus. She had already dipped it in lube. \n\n\"Just keep going. I'm going to play back here.\" \n\n\"It's still a little sore from the other day. Be gentle.\" \n\n\"Aw, has Tina's pussy been getting a workout lately? Every woman must learn to adjust when they get a big new lover. And Mr. Big loves you.\" \n\nI knew what was coming, but forced myself to relax, which is kind of hard to do when you are fucking someone. Lisa got her finger inside of me and just moved it in tandem with my movements, twirling it around and slowly stretching me. Before I knew it, a second finger joined the first and then I felt empty inside. \n\nIt was only for a second as I felt Mr. Big knocking at my door. I stopped and paused in my union with Julie to allow Lisa to enter me. That fullness feeling embraced me and I felt her sink all the way into my depths, wrapping her arms around me and pushing her breasts into my back. I stayed paused while I adjusted to Mr. Big's size. \n\nOnce she was fully buried inside me, she grabbed my hips and said, \"Let me fuck the both of you. Let me control the movements.\" \n\nShe stayed buried in me as she ... \n\nEmily slammed the brakes and swerved hard, waking me up with a start. I didn't open my eyes and hoped to get back to remembering the sex from our trip. It had been a good time. Then I heard Emily's mutter under her breath. \n\n\"Keep your eyes on the road, Ems,\" I barely heard. \"You don't want to kill us both.\" \n\nMy cock ached. It was hard as a rock and I slowly opened my eyes and looked down. In my rush this morning to get dressed, I obviously hadn't tucked myself properly into the gaffe. As a result, my cock was clearly outlined by the yoga pants, bulging down one of the legs. \n\nLooking out of the truck, the only thing around was blankets of white snow. What had been my sister been looking at? Then I had a thought. Had my sister been checking me out? No, it couldn't have been that. Could it? \n\nI had never thought of my sister sexually before. Pretending to go back to sleep I checked her out. She was very pretty in her face, and looked kind of like me, expect she had a button nose. I could see the resemblance. Her hair was cut badly, in my opinion. It had looked much better when I was in high school. I wondered why she had switched it. She was also wearing baggy clothes, so I couldn't really tell what her body looked like. I was sure she did that because she still had some of her baby weight though. \n\nShe interrupted my thoughts by pulling over at a rest stop. I came awake and asked what's up. \n\n\"Sleep and relax,\" she said. \"I need to stop here for a while.\" \n\n\"Sure thing,\" I said. Then I glanced into the mirror. \"I can put on some makeup and do my hair, I look like shit.\" \n\nShe did a double take as I said that. I didn't think she expected to hear that come from me. I guess I was constantly surprising her by her expressions. \n\n\"Uh, yeah. Back in a bit.\" \n\nI did get out my makeup case and fixed up my mascara, blush and lips. I wanted to cover myself up so that Shelly wouldn't recognize me. I made sure to put extra cover on my neck scar since Shelly knew Chris had one. I also add a couple of dots to look like large freckles on my forehead to further throw her off the scent. She was a gossip and my whole high school would know my secret by the time the next reunion came around if she found out. I brushed my hair out as best as I could and still Emily hadn't returned. \n\nIt was getting cold in the truck and she had taken her purse and keys. I decided to go see what was holding her up. I opened the bathroom door in the rest room and just as I was about to speak, I heard the hum of a battery-operating device working. I couldn't believe my ears. Was my sister getting herself off with a vibrator? She couldn't wait, damn! I slowly backed out of the bathroom confident she hadn't heard me and made my way back to the truck and feigned sleep. \n\nIt was another 10 minutes before she returned. Without saying a word, she got into the truck and we sped off. I pretended to sleep until we pulled up to Shelly's house. I was a little nervous to be recognized, Emily and I looked so much alike the more I looked at us, but Ems thought it would be okay and I trusted her. \n\nWhile my sister hadn't changed that much since high school, I wouldn't have recognized Shelly at all if I had passed her on the street. She had been a cheerleader, nice and tight and bubbly. Her personality was still the same, but the body that went with it wasn't. She had put on at least 50 pounds, and none of it looked good. She must have forgot what the word exercise was. But, I guess that's what five kids in five years does to a body. ",
        "I got the luggage out of the car while Emily went to knock on the door. When I came up, I was looking for recognition in Shelly's face, but thankfully saw none. Shelly looked at me in surprise, and said, \"Where's the squirt? I thought you were bringing him with ya.\" \n\nEmily grimaced and protected me. \n\n\"This is Tina,\" she explained. \"She is, um, Julie's best friend. Chris couldn't make it so she, uh, volunteered to come with me.\" \n\nI put on my winningest smile. \n\n\"Hey, free trip,\" I said. \"I wasn't doing anything anyway.\" \n\nShelly nodded and seemed to accept the explanation. \n\n\"Well, come in, come in. It's cold outside. Frankie went to the store. He should be home in a few. He'll be sad Chris didn't make it. He said he was looking forward to seeing him.\" \n\nI bet he was. Frankie was a bully from my high school baseball team. He was one of our starting pitchers and thought he was hot shit. He used to pick on me, especially once he started getting pulled out of games for me to pinch hit for him. I had forgotten Shelly married him. I certainly didn't go to the wedding. \n\n\"Well, I'll definitely pass that along,\" I responded. \n\n\"Oh well, I guess he'll be stuck babysitting the kids alone tonight,\" Shelly mused. \n\n\"Why, what's tonight?\" Emily asked. \n\n\"Girls night out,\" Shelly beamed. \"I can't wait to introduce you to my friends. They know all about you.\" \n\n\"I'm not drinking right now,\" Emily said. \n\n\"Then you can drive. Tammy'll be happy about that. It's her turn for designated driver and she's a lush. You must come too, Tina. You don't want to be stuck here with Frankie and the kids.\" \n\nI certainly didn't want to spend any time around Frankie. \"Where we going?\" \n\n\"It's karaoke night at J&amp;A Tap; we usually go there. They've got great tater tots.\" \n\nI was glad at the last minute I had packed my slinky shimmering dress, the one Lisa bought for me in Vegas. I decided I wanted to show Emily why I liked being Tina. \n\n\"Oh, okay, that sounds like fun.\" \n\nEmily looked at me in surprise. I'm not sure what she was thinking. \n\n\"Can I get a glass of water?\" \n\n\"There's bottles in the fridge,\" Shelly commented. \"Help yourself.\" \n\nI got up to get one and left them alone. The moment I was out of sight, I heard Shelly, although she tried to lower her voice. \n\n\"She's gorgeous. She looks an awful lot like you. I'm glad she's coming with us. I wouldn't want to leave her here with Frankie. She'd be all over him and he might not be able to resist her. He does love me, but still.\" \n\n\"I think Chris figured out she's our fourth cousin. Also, I don't think she's into guys,\" Emily quietly lied. \"You should see the girl she's dating. She's a foot taller than me.\" \n\n\"Shut up,\" Shelly exclaimed. \"She's a lesbian! That'll be interesting. The girls will get a kick out of ...\" \n\nI had grabbed the water bottle and returned. She abruptly cut off once I appeared into view. \n\n\"I'm awfully tired,\" I said. \"I was up most of the night packing. Can you show me where I'll be sleeping? I'd like to take a nap if we're going out later. Plus, that'll give you guys some time to catch up without me being a third wheel.\" My real motivation was I wanted to avoid having to deal with Frankie when he got back. \n\nEmily smirked at my comment of packing all night. Shelly said sure and showed me a guest bedroom where Emily and I would be sleeping. It was small, a queen-sized bed took up most of the floor. The closet door was missing and had stacks of boxes filling it. But the nice part was that it had a door that led to a guest bathroom. We wouldn't have to share with the rug rats. \n\nI moved all my luggage into a corner and got Emily's for her as well, telling her to sit and visit with her friend. Then I laid down and took a nap. \n\nChapter 7 \n\nI woke groggily a few hours later to buzzing. It was coming from the bathroom. I recognized the noise from earlier and started. Emily was at it again. Holy crap! I had a horny big sister. \n\nI decided to languish on the bed until she finished. I had no desire to go out and spend time with Shelly or Frankie or their kids. I figured I would minimize my time around them to preserve the chance of discovery. At least that was the excuse I decided to stick to. \n\nI listened closely trying to hear moans or her orgasm, but all I heard was the noise of the vibrator buzzing along. After a couple of minutes, it shut off and I closed my eyes and pretended sleep. Emily exited the bathroom a few minutes later and went out into the living room. I heard voices and checked the time. Shelly had said we were leaving at 7 p.m. and it was already 5:30. I decided to jump in the shower and do myself up right. \n\nI took a quick shower and washed my hair then went through the long task of blowing it dry. It was now past my shoulder blades and thick and wavy. After I fixed my hair, I put on a silver necklace and dangly hooped earrings. I did my makeup for going out, put on my dress and realized I had to dig out a bra. My saline-enhanced chest wobbled way too much to go braless, unlike the breast forms I had worn before. As I looked in the mirror and admired myself, I had to admit I looked good. \n\nSince I had to dig out a bra, I decided to go all out with my underwear. I started over with a black garter belt and silk hose. That was followed by a gaffe tucking me out of sight, followed by my corset as well, cinching it down real tight. I had a new underwire black bra that Lisa had provided when she filled me with the saline and that went next. Then I threw on the dress. I had looked good before, now I looked even better. I slipped on heels and walked out into the living room to wait for our ride. \n\nAs I entered the living room, there sat Frankie, looking much worse for wear from high school with a fat old beer belly. He was splayed out in a lazy boy chair with a beer in his hand watching college football on TV. Emily was sitting on the couch and had on tight jeans and a sweater and sneakers. Shelly was cutting up food for the kids, who were all gathered around the table arguing about ninja turtles. She was also in jeans, although she had a silky blouse on. \n\nAll three mouths were gaped open. \n\n\"What?\" I questioned. \"What's wrong?\" \n\nFrankie popped in first. \n\n\"Sorry, we just aren't used to having any supermodels here,\" he said with a grin. \n\nI rolled my eyes. \n\nEmily spoke next. \"You do know this is Iowa City, right? We're not in Chicago or Vegas.\" \n\nIt finally registered. I was overdressed. \n\n\"Oops. Do I have time to change?\" \n\n\"Don't you dare,\" Shelly pronounced. \"You look glamorous as all get out. In fact, I'm going to put on a skirt too.\" She left the room. I walked over to continue chopping the food for the kids. Emily looked at me in disbelief. Me doing a domestic chore without being asked. I shrugged. \n\nA car horn honked about 10 minutes later and we hustled out to find Tammy and their friends Michelle and Skyler in a mini-van. Emily and I were introduced as we climbed in and the girls nattered on for the 15-minute drive to the bar. \n\nAs we pulled up to J&amp;A Tap, I could see why I was overdressed. Outside the bar was sand volleyball courts and the place looked a little run down. It was a dive bar. The place was doing good business, but not full, as we managed to grab a table close to the stage. Already, some guy was singing about his \"Achy Breaky Heart\" and looked like he had put more than a few away. \n\nEmily looked surprised when I sat my purse down in my spot and went over to get in line for singing right away. I did want to impress her. I didn't think she had heard me sing before. \n\nI hadn't been in the line 10 seconds when the first guy approached me and began flirting. I quickly got rid of him by saying, \"Sorry, I'm engaged.\" He took it well and left. After signing up, I headed back to our table and joined the girls. \n\n\"That boy was cute,\" Skyler said. \"If you don't want him, send him my way.\" \n\n\"Oh, don't worry, they're all yours tonight,\" Shelly said in a very loud voice. \"She's a lesbian.\" \n\nI think half the bar turned and looked at me. I cringed for just a second before I decided this could be to my advantage. \n\n\"I've known my whole life I was into girls,\" I pronounced, giving Emily a wink. She was grinning. \"Boys are gross.\" \n\n\"Oh, honey,\" Shelly exclaimed. \"You just haven't met the right one. Take my Frankie ...\" \n\nI stopped listening and nodded along, watching Emily out of the corner of my eye. I wanted to impress her and show her that I was happy living as Tina, but that I hadn't stopped being Chris completely. It was a delicate tight rope act I was trying to accomplish, and I wasn't sure exactly how to do it. I so wanted her to be okay with me. \n\nMy song finally came up and I got on stage. I had picked Lorde's \"Royals\" and I nailed it. My voice came out flawlessly and I knew the song well so I was able to sway and dance to the beat. By the second verse, I had the crowd into it and Shelley and her friends all agog in shock. Emily even had her hand covering her mouth in surprise. \n\nI finished up and returned to the table. \n\nSkyler blurted out, \"That was so sexy, my panties are all wet.\" \n\n\"That was so good,\" Shelly agreed. \"I'm going to go sign you up for another. What do you want?\" \n\n\"Do 'Brave',\" I said. \n\nShe looked at me funny and I elaborated, \"Sara Bareilles.\" \n\n\"Oh, okay.\" \n\nEmily leaned over to me and whispered in my ear. \n\n\"Oh my gosh, Chris! That was so good. I never would have believed that was you up there if I didn't know better. I didn't know you had it in you. What brought that out?\" \n\n\"Tina,\" I said, shrugging. \"I can't do it as Chris.\" \n\nShe looked at me strangely. \n\nShelly returned just as a guy approached and said, \"Hi, I'm Dave. You looked incredible out there. Do you sing professionally?\" \n\n\"Nope, not at all,\" I smiled, flashing all teeth, the exhilaration still running through me from the performance. \n\n\"Well, that was really good,\" he said. \"My brother and I have this band and wanted to know if you would do vocals for us.\" \n\n\"Sorry, just passing through. Not from around here ...\" I got out before he cut me off by grabbing my bicep. \n\n\"Well, in that case,\" he said, pulling me up to my feet. \"You should come join us and we can talk music for a few.\" He wasn't being subtle at all and he was slurring a couple of his words. He was pretty far gone. \n\n\"Sorry, Dave,\" Shelly broadcasted loudly for anyone who hadn't heard earlier. \"She's a lesbian.\" \n\n\"That just means she hasn't met the right guy yet,\" Doug said, actually tugging to drag me away. \n\n\"I'm sorry, Doug ...\" Emily announced. \n\n\"It's Dave,\" he replied. \n\n\"That's my woman you're trying to drag away. Would you please take your grubby hands off her?\" \n\nHe looked at her closely and let go. Turning he mumbled loudly, \"Fucking bitches.\" \n\nShelly looked at Emily and laughed, \"Your woman?\" \n\nEmily shrugged and said, \"What, I had to say something.\" \n\n\"That's true though,\" I quipped, with a wink. \"We are sleeping together tonight, aren't we?\" \n\nEmily shook her head, blushing. \"You're so bad.\" \n\nThe rest of the night was fun and exciting. I sang three more songs and had three more guys approach. Shelly announced loudly to all three I was a lesbian and off the market. One of them ended up settling for Skyler and she smiled and disappeared on us. Towards the end of the night, a young girl who had to be 21 because of the beer in her hand but looked 16, approached and asked if she could talk to me for a second. \n\nI had just returned from singing my last song and hadn't sat down yet so I turned and followed her off to the corner table. Emily watched like my guardian hawk, as if she was truly my girl for the night. \n\n\"You sing real pretty,\" the girl shyly said. I could barely make out her voice over the din of the bar and the singer trying to stumble through Blake Shelton's \"Hillbilly Bone.\" \n\n\"Thanks,\" I said. \"What can I do for you?\" \n\n\"You're real pretty too,\" she said, blushing as she said it. \n\nWas this a hit on? I hadn't had a girl try to pick me up in a bar before. I looked at the girl. She was very pretty. She had long straight black hair that came past her shoulder blades and her skin was alabaster white. She had a pug nose and these huge blue eyes. She looked incredibly young though. \n\n\"Thanks, you are as well,\" I said. \"I'm Tina. What's your name?\" \n\n\"I'm Dakota,\" she smiled. \"I overheard that girl saying you're a lesbian. Is that true?\" \n\n\"Well, I am into girls, but I do have a fianc\u00e9,\" I said politely. \n\n\"Oh,\" she said, sadly, nodding her head. \"I should've thought of that.\" \n\n\"It's okay,\" I said. I could see the nervousness in her so I tried to let her off gently. \"You were brave to put yourself out there like this. I can't imagine it was easy.\" \n\n\"No, it's not. You have no idea what it's like to be stuck in this town. I'm the only gay girl I know.\" \n\n\"I'm sure someone is out there for you. You're very pretty, you just need to be patient.\" \n\nAt that point, I noticed a boy walking over. \"Dakota, what're you doing?\" he said loudly. \"Why are you talking to that woman?\" \n\nShe quickly popped out of her seat, slipped me a piece of paper, and said, \"I gotta go, sorry.\" \n\nI watched her slip out the front door with the boy following behind her yelling for her to wait up. Once he was out of sight, I glanced at the paper. It had her name and phone number and a call me please written on it. She must have written this in advance before coming to talk to me. I sat there thinking for a minute and Emily wandered over. \n\n\"Does this happen a lot to you?\" she queried. \n\n\"What?\" \n\n\"Getting hit on,\" she said. \"I admit, you are far prettier as a girl than me, especially with that boob job. Is this unusual?\" \n\n\"These are just saline Lisa injected,\" I replied. \"They'll go down over the next week.\" Her eyes lit up in surprise at that. \"They want me to get permanent ones, but I told them I have to talk to you first. We can discuss that later. Not here. Back on the road.\" \n\nShe nodded. \n\n\"I get hit on occasionally, the only time I become invisible is when I'm with Lisa.\" \n\nEmily nodded again. At that point Shelly walked up and asked if we were ready to go. We nodded and headed back home. \n\nAs we pulled in I told Emily I would be a few. I wanted to call Julie and check in. She nodded and went into the house with Shelly. I called Julie and the phone rang and rang. I called back a second time and it rang until voicemail. I called a third time and was just about to give up when I heard the phone answered. \n\n\"Can't you get a hint we're busy,\" Lisa exclaimed, fully exasperated. \n\n\"Hi, Lisa, this is Chris,\" I said. \"Can I talk to Julie?\" \n\n\"Jules is tied up at the moment,\" she giggled. \"I'll have her call you tomorrow.\" \n\nAnd then she hung up! \n\nI stared at the phone for a second in disbelief. Had I just been blown off? I called back and it rang and rang. I called again. This time it went to voicemail immediately. Lisa had turned it off. The bitch! \n\nI dialed Lisa's number. She answered with a \"Sheesh, Tina. Relax. Can't this wait? We're kinda busy over here.\" \n\nI switched to my Chris voice. I had been talking as Tina for so long that it cracked and was actually hard to do. \n\n\"Dammit, Lisa, put my WIFE on the phone!\" \n\n\"She's wasted. Now's not a good time.\" \n\n\"I don't care! If you ever want me to be nice to you again, put her on the phone now!\" \n\n\"Fine, gimme a minute.\" \n\nI waited. And waited. And waited. I was getting pissed off. Finally, Julie's voice came through the telephone. She did sound bombed. \n\n\"Hey, baby,\" she cooed. \"I miss you!\" \n\n\"Julie, are you okay?\" I asked. \"What're you and Lisa up to?\" \n\n\"She tied me into her fucking machine,\" Julie slurred. \"I haven't cum that many times since college. This one has multiple speeds. It can even do both holes at once.\" \n\nI heard a muffled 'sshhhhhhh' in the background. Lisa was being bad. \n\n\"So, what're you doing?\" Julie mumbled somewhat coherently. \n\n\"We just got back from karaoke,\" I said, wanting to focus on her. \"It was okay. But ...\" \n\n\"Did you get hit on?\" she giggled. \n\n\"Yes, four or five guys, even one girl.\" \n\n\"Was she cute?\" \n\n\"Adorable.\" \n\n\"I wanna see. Send me a picture.\" \n\n\"I didn't get any pictures. She did give me her number though.\" \n\n\"Call her. I wanna picture.\" \n\nShe was out of it. I asked her to put Lisa on the phone. \n\nLisa came on the phone with a \"sounds like you are having a good time.\" \n\n\"Cut the crap, Lisa!\" I interrupted. \"What did you give Julie? She sounds totally out of it.\" \n\n\"Nothing serious,\" she said. \"We're just getting reacquainted.\" \n\n\"You're already breaking the rules we agreed on! Do I need to come back home?\" \n\n\"It wasn't bigger than you, I promise.\" \n\n\"But you told me you'd stay out of her ass. She already told me you were DP'ing her.\" \n\n\"She begged for it.\" \n\n\"No more drugs!\" \n\n\"Okay, okay. Relax will ya. I love you.\" \n\n\"Then respect my wishes, please. Julie's not your toy. She's my wife.\" \n\n\"I get it. I get it.\" \n\nI had nothing else to say and told her to put Julie back on. \n\n\"Jules, he wants to talk to you again.\" \n\nI told her I loved her and I would be sending Dee to check up on her. She told me to have a good time and to send her a picture. I sighed and hung up. My nightmares looked to be happening. Was Lisa my ally or my enemy? What exactly was going on? \n\nChapter 8 \n\nIt was late so I put off calling Dee until the morning. I went into the house to find everyone had gone to bed. I walked into the room Emily and I were staying in and found she was in the bathroom. I leaned against the door and heard the buzzing of a machine going again. I shook my head in disbelief. I never knew anyone who masturbated as much as she did. Did I know my sister at all? \n\nI needed to pee so I went out of the room and over to the main bathroom in the hall. I did my business, even brushing my teeth since I hadn't put my toiletries in the bathroom yet. I opened the door and jumped. Standing right there waiting for me was Frankie. \n\n\"You scared me,\" I hissed. \"Sorry, Ems is in the other bathroom.\" \n\n\"Have we met?\" Frankie asked. \"I never forget a face and yours looks so familiar. I know we've met somewhere.\" \n\nInstantly the hairs on my neck rose and panic set in. I was going to be outed with Shelly finding out. I couldn't think of anything worse, except maybe Julie's parents. \n\n\"I, uh, don't think so,\" I said. \"I would've remembered someone like you.\" I was trying to throw him off my scent. \n\n\"No, I know it. We've met. I'm sure it'll come to me. Did you go to Lincoln High?\" \n\n\"No, I'm from New York. You ever been to the Big Apple?\" \n\nHe frowned, scrunching his face up in thought. \n\n\"What about Richard J. Daley community college?\" \n\n\"Sorry no, I went to Columbia,\" I replied, pulling a school out of my butt. \"I did do a TV commercial once though,\" praying for a way to throw him off the scent. \n\n\"Well, it'll come to me eventually.\" \n\n\"If I remember, I'll let you know,\" I said, scurrying past him and into the room in a panic. I closed the door and locked it. \n\nEmily was still in the bathroom so I changed out of my dress and corset, threw on a satin slip that came to mid-thigh and climbed into bed. I didn't want to embarrass her so I pretended to be asleep when she entered the room. She whispered my name and when I didn't respond, she climbed on the bed next to me. I slit my eyes open and noticed she was wearing an old faded t-shirt type sleeping dress. She laid down next to me and whispered my name again. Again, I remained asleep, figuring she would nudge me or something if she really wanted to talk. \n\nI still had my eyes barely slit open when I saw her reach her hand out and brush my cheek. She pulled a few wisps of hair away from my face. I kept up my breathing, trying to make it as normal as possible. ",
        "\"Oh, Chris,\" she sighed. \"Is this my fault?\" How on earth could this be her fault? I wondered what was going through her mind. Then, I almost froze in shock and she took the hand from my face and reached into my slip touching my breast. I managed to keep breathing normally despite every instinct to do the opposite. She slowly squeezed my breast and let it flow through her fingers. \n\nShe withdrew her hand after a few seconds with a whispered, \"Amazing.\" Then she turned over and went to sleep. \n\nI woke in the morning to find Emily already out of bed and the bath door closed. I leaned in and again she was masturbating. Maybe it's in our family genes, I thought. That would explain why I was always horny. I decided to lay back down and sleep until she came out of the bathroom. I wasn't willing to venture out to where I might encounter Frankie without full makeup, despite the need to pee. \n\nLess than 10 minutes later, she came out of the bathroom, shook me awake and said the bathroom was mine, she was going to talk to Shelly. I hurried in and peed, then dressed for the day in a tight sweater and a pair of jeans, making sure I was completely tucked in. I was so nervous I knew there was little chance of getting hard when Frankie was around. I admit, I did my makeup heavier than usual. \n\nI came out to an ambush. Shelly and Frankie wanted to take Emily and me out to lunch. They had a sitter for the kids. I feigned shock and said, \"Oh, I didn't know. I made plans. I've got a lunch date.\" \n\nYou could have knocked Emily over with a feather. \n\n\"You have what?\" \n\n\"I have a lunch date. You know, with Dakota, that girl from last night.\" \n\n\"What about Ju - your girl from back home?\" \n\n\"Oh, this is her idea. She really wanted me to go out with her.\" \n\nEmily's eyes bugged out. I could tell I was flabbergasting her. \n\n\"Well, ok then.\" \n\n\"Besides, I don't need to be a third wheel with you guys. Ya'll have a lot of catching up to do and I'd just be in the way.\" \n\nWith that I turned back into the room and found my purse. I pulled out the slip of paper and texted Dakota hoping she would respond. Luckily, she did and I set up to meet her in 40 minutes at the Olive Garden that was just right down the street. I could walk to it. \n\nEmily followed me into the room. \n\n\"What are you doing, Chris?\" she hissed. \"You can't just go pick up random girls.\" \n\n\"It's not that,\" I whispered. \"That's just an excuse. Frankie cornered me last night. He swears he knows me. I need to avoid him so he can't put two and two together. Can you distract him?\" \n\n\"Well it's going to come out eventually if you keep this up.\" \n\nI pleaded with her with my eyes and she finally relented. \n\n\"Okay, I'll do it,\" she sighed. \"What do you need me to do?\" \n\n\"I'm going to go to lunch with that girl - just lunch, I promise, and then I'll hit the mall and do some shopping. Can you pick me up there at say 5 p.m.?\" \n\n\"Okay.\" \n\nI arrived first and grabbed a booth, one that could see the door so I could wave over at Dakota when she walked in. While last night I was dressed up and she was dressed casual, this time it was in reverse. She had on a pink silk blouse and a jean mini-skirt that emphasized her long legs. She was only about an inch shorter than me but she had on 5\" platform heels that made her seem taller. \n\nShe nervously slid into the booth across from me and said, \"Thanks for calling me. I've been dying inside.\" \n\n\"Can I see your ID?\" \n\nShe blushed and said, \"Is it obvious?\" But she pulled it out and showed it to me. It was not her, a sibling or another relative, but it wasn't her. And her name was not Magnolia. \n\n\"Magnolia?\" \n\n\"Maggie's my cousin. She gave me her old ID when she went off and got married.\" \n\n\"How old are you really?\" \n\nShe dropped her gaze to the table and squeezed her hands together. Shyly, she replied. \n\n\"Seventeen. But I turn 18 in a month.\" \n\n\"Are you still in high school?\" \n\n\"No, I graduated last spring.\" \n\n\"And who was that guy last night?\" \n\n\"That's my brother. He thinks he's in charge of me.\" \n\nShe slowly spilled out her tale. She had just graduated high school and was working at the family store because they needed her help and hadn't gone to college because they couldn't afford to. She realized she was a lesbian in high school when she fell for her best friend, Heather. They had two wonderful months together before they were caught. Her friend was sent to live with her grandparents in Missouri and was out of contact. She now had a boyfriend and didn't want anything to do with Dakota. \n\nDakota's parents had grounded her and forced her to meet with a preacher who basically called her a harlot and a sinner, before trying to force her to date his son. Now, she was stuck under lock and key most days and had no prospects for love and no future. \n\nMy heart broke for her. \n\n\"I'm just passing through,\" I said. \"But if you want to come to Chicago after you turn 18 next month, I have an extra room I can put you up in until you find a job.\" \n\n\"Seriously,\" she gushed. \"You'd do that for me?\" \n\n\"You need some help,\" I replied. \"And I'm not asking for anything in return. I'm happy with my wife. But we do have room.\" \n\n\"I thought you said you had a fianc\u00e9?\" \n\n\"It's complicated. If you come to Chicago, I'll fill you in more.\" \n\nI asked her if she had a car and she said no, but she could take the bus. She had saved enough that she could afford that. I ended up paying for lunch and having her drop me off at the mall. She had to go in to work. I did snap a picture of her and sent it to Julie. \n\nAt the mall, I meandered through the stores and slowly accumulated several purchases of this and that. Mostly clothes for me but I did buy a satiny sleeping gown for Emily. I also found three pairs of heels that were to die for and bought all three. I wasn't worried about money because Lisa had pushed a Visa gift card in my hand for the trip. I had been shocked to see on the back it was for $5,000 but now I was wondering if Lisa had given it to me to buy Julie or if she was doing it out of premature guilt instead of love. I hadn't heard back from Dee yet and was getting worried. \n\nJust as I was becoming a nervous wreck, Dee finally called. I answered breathlessly with a \"How's Julie?\" \n\n\"Gurl,\" she drawled. \"Your girls are into some sort of freaky shit. I told you it would cost you two dates for me to go over there and check on them. I'm upping the cost to three.\" \n\n\"What did you find?\" \n\n\"Lisa let me in after I threatened to call the police and when she took me to Julie she was all tied down on the bed. Are you sure you want to hear this?\" \n\n\"Yes, tell me.\" \n\n\"Julie was blindfolded and had in earplugs and even her nose was plugged. She had a cute naked girl sitting there tickling her va-jay-jay with a feather. She was moaning something fierce and drenched with sweat. I bet they'd been at it for hours.\" \n\n\"Who was the girl? Describe her for me.\" \n\nDee did her best and I figured it was Carrie from Lisa's office. I thought Lisa was exclusive to Julie and me. I guess this is what I get for assuming. \n\n\"I'll catch the next bus home. I need to deal with this.\" \n\n\"No, sugar bear, it's okay,\" Dee replied. \"We got it all worked out. I admit, I stayed and played for a little bit then I took Julie back home. She does have to work tomorrow, and playtime is now over. I even arranged for her to go bowling with me tomorrow night. I'll take care of her. That Lisa is some sort of kinky.\" \n\nDee stayed and played. Did she sleep with Julie and Lisa and Carrie? Holy crap, what did I miss? I started to harden at the thought of all those girls together despite the worry I felt. Was I losing Julie to Lisa? Was I being replaced? \n\nEmily texted she was on her way and I asked her to meet me at an upscale clothing store I'd found. She walked in and looked at the dozen bags I had collected from the various stores. \n\n\"Who are you and what did you do with my brother?\" she said with a smile. \n\nI stuck out my tongue and said, \"Ha, ha.\" \n\n\"Seriously, what're you doing? Aren't you unemployed?\" \n\n\"I'm a trophy wife dearie,\" I said with an exaggerated twirl. \"What do you think of this dress?\" \n\nIt was a red sleeveless poppy laced midi dress with scalloped armholes. I also had on a matching pair of stiletto heels. \n\n\"It looks fabulous on you,\" she admitted. \"How much is it?\" \n\nI shrugged and said, \"Who cares? I'm getting it. Now come with me, I got a couple I want you to try on.\" \n\nI dragged her into a dressing room where I had a couple of dresses inside waiting for her. She looked at me and I said, \"Go ahead, try that one on. I think it'll look great on you. I even put a pair of heels there. I'm thinking you are a 6, right?\" \n\n\"Get out.\" \n\n\"What?\" \n\n\"You heard me. Get out. Just 'cause you dress like a girl, I know you're not and I'm not going to change in front of you.\" \n\n\"Fine, but I want to see it when you have it on.\" \n\nI stepped out and waited. She complained loudly. \"I don't look good in this. It shows too much skin.\" \n\n\"Let me see,\" I demanded. \n\nSlowly, shyly, she opened the door and stepped out. She looked fabulous. \n\nI had put her in a royal blue Telson square-necked straight satin slip dress. It had a scooped neckline and back with spaghetti straps. \n\n\"It's perfect,\" I exclaimed. \"Now put on the shoes.\" \n\nAs she bent over and put them on, I got a flash of cleavage. My sister had grown in the boob department. I guess two kids does that to you. She had been in baggy clothes since we had met and this was my first glimpse of her shape and I approved. \n\n\"That one's good. Try on the other one.\" \n\nThe other one didn't fit right. While she was changing, I took the first one and headed to the register. I had just rung up the total for the two dresses and her shoes when she approached. The total came to just under $1,100. I handed over the Visa gift card. \n\n\"Holy crap, Chris,\" she said. \"What're you doing?\" \n\n\"I'm buying you a dress. Plus, I had to get the red one for me.\" \n\n\"That's crazy, bro. You can't just spend a grand on clothes like that.\" \n\n\"Sure, I can. It's Lisa's money. She gave it to me. And I'm pissed off at her right now so I'm blowing it all. Besides, you looked great in that dress.\" \n\n\"Ya, it would be the nicest thing I own. Seriously, I can't let you spend $500 on a dress for me.\" \n\n\"Already done, sis. You just have to accept it.\" \n\nShe shook her head back and forth in denial but I could see she wasn't arguing too hard. She had liked the dress and the way she looked in it. I had done well. \n\n\"Now, let's get out of here and grab some food. And you can tell me how your day went with Shelly and Frankie.\" \n\nI took her to dinner, then we did a walk and I dragged her into a movie theatre. I tried to put off going back in until it was late enough for me to go straight to bed. Shelly and Frankie were waiting up, wanting to hear all about my date, but I begged off with exhaustion and left Emily to talk to them. \n\nI really was exhausted, as I quickly got ready for bed and laid down, wondering if Emily would masturbate again. I closed my eyes and waited to see, but drifted off before she even came back to the room. I even was too tired to call Julie. \n\nI woke the next morning with her the little spoon and my hard cock pressing into her ass cheeks. It was almost as if she was pressing back into me in her sleep. I slowly tried to extract myself and as I slid back slowly, her ass followed me. I finally managed to get some space and quickly rolled out of bed. I used the bathroom, got dressed, and packed my stuff before heading out of the room. Luckily, Frankie had already left for work and I spent the time with Shelly helping her get her kids off to school. \n\nEmily appeared half an hour later and after some goodbyes, we finally got on the road. The day turned out to be a disaster. A couple hours out of town we got a flat tire and no one had bothered to put a tire iron in the truck so we had no way to loosen the lug nuts. Finally, someone stopped who had a lug wrench that would fit and we were able to change the tire. \n\nSince that put us way behind, we pushed it. This earned us with an overheating motor pulled off to the side of the road, steam coming out of the engine. I tried to look at it, but without tools, there wasn't anything I could do. \n\nAt this point, Emily burst into tears. I found a blanket and wrapped it around us, keeping the cold at bay and trying to comfort my sister. \"It's ok, Ems. I called a tow truck. It won't be that bad.\" \n\n\"Everything in my life is going wrong,\" she complained. \"This blasted truck keeps breaking down, I think my marriage is breaking down and my brother looks better in a dress than I do.\" \n\n\"Your marriage is breaking down? What do you mean?\" \n\n\"I have no proof, but I think Frank's cheating on me with our nanny.\" \n\n\"What makes you think that?\" \n\n\"Well, for one thing, he hasn't made love to me in almost a year,\" she grumbled. \"Not once since Tommy was born. Even when I suggested it.\" \n\n\"That doesn't mean he is cheating. You did have a baby, after all.\" \n\n\"Well, since Tommy, I'm home more. And the looks they give each other seem intimate. Especially when they think I'm not looking. I catch her gazing at him lovingly. What if he's leaving me?\" \n\n\"He is leaving HER,\" I said. \"You're moving to Utah as we speak.\" \n\n\"That's just it,\" she wailed. \"He worked it out so she's coming with us. He claims it's for the kids and it's a favor so she can go to school in America. And, he did it all without telling me or discussing it with me. It came out as an afterthought. I happened to pick up the mail that had her Visa approval in it.\" \n\nI didn't know what to say to that. That sounded pretty condemning so I just held her and hugged her tight, letting her cry into my shoulder. \n\n\"You even smell good,\" she complained once her crying slowed down to just sniffles. \n\n\"You're just as beautiful as me,\" I said. \"Shoot, if you dyed your hair my color and grew it out, you would be a much better-looking version of me.\" \n\n\"I seriously doubt that,\" she said, showing the first hint of a smile since the truck broke down. \n\n\"I would not lie,\" I said. \"You're very sexy and desirable and Frank's a fool if he lets you get away.\" \n\n\"You have to say that 'cause you are my brother.\" \n\n\"Sister, now.\" \n\n\"That's just too weird to think about. It'll take some time for me to adjust.\" \n\n\"Take all the time you need. I love you and hope you can love me too.\" \n\n\"That's never been in doubt.\" \n\nI kissed her forehead then and held her tight without saying anything. I could take care of my big sister now. She had taken care of me all those years ago. \n\nThe truck eventually arrived and we got towed into a hick town where they said we could get it fixed in the morning. Nothing was open but luckily there was a vacancy at the one motel in town. The moment we checked in, Emily ran frantically for the bathroom. \n\nI heard the hum of her vibrator start up almost immediately. Damn, my sister must be insatiable in bed - a real firecracker, I mused. But, after less than a minute I heard the winding down as the batteries slowly died. That led to a curse of frustration. \n\nImagine my shock when Emily poked her head out of the door and said, \"Chris, can you run out and find me some batteries? I need some badly.\" \n\n\"Damn, sis,\" I replied. \"I never knew someone as horny as you. I thought only guys were horny all the time.\" \n\n\"What?\" she said, confused. \n\n\"I never knew someone who masturbated as much as you do. You singlehandedly keep the vibrator companies in business.\" \n\nHer face turned crimson. \n\n\"Oh my gosh, is that what you thought?\" \n\nAfter a pause, Emily pushed the door open and I saw there were two blossoming wet spots directly over her breasts. I could see her nipples through the white shirt. \n\n\"It's my breast pump, you dork. I need the batteries for my breast pump. I don't want my milk to dry up just yet. Tommy's only six months.\" \n\nMy eyes stayed riveted on her chest and I watched the spot on her right breast grow slightly in size. She was leaking milk. I craved to see more. Thoughts of Desiree's huge nipple dripping milk popped in my head and my dick lurched in response, despite being tucked in firmly. It ached to get free and grow. \n\n\"Um, what?\" was all I managed to get out. \n\n\"Can you go get some more batteries?\" she said slowly. \"How many times do I have to repeat myself? Please! My breasts are killing me. I need some relief.\" \n\n\"Sure,\" I nodded, putting back on my shoes. Incestuous thoughts filled my head as I left the room and went to the office. \n\nThe desk clerk eyed me appreciatively as I approached, but no amount of charm was going to get me something he simply didn't have. When I asked around, he told me the nearest place that would be open was more than 10 miles away. Without a vehicle, I was out of luck. \n\nTrudging back to the room, fantasies danced through my head. I imagine myself offering to help my sister and her agreeing. I always did have a vivid imagination. The scene appeared in my mind. \n\nI reentered the room with a sigh, \"Sorry, sis. No luck on batteries. Everything is closed.\" \n\nI looked over at Emily and she had removed her top. Her breasts were red from squeezing. She had been trying to manually milk them, but what caught my eye was her nipples. They were large and succulent and dribbles of milk ran all the way to her belly. My insides roiled in nervousness yet desire swept over me, calming me down. \n\n\"You know, sis,\" I calmly replied. \"I could help you out with that, if you'd like.\" \n\n\"Help me out how?\" she questioned, her face shriveled up in pain. \n\n\"I could suck the milk out for you.\" \n\n\"You wouldn't mind?\" \n\n\"No, not at all. I know it's a little weird but anything to help you out.\" \n\n\"Please, it aches so much.\" \n\nI walked over to her and climbed onto the bed, scooching in close and then laying my head on her lap. Tentatively, I reached up with my tongue and lapped at her nipple. She sighed in relief. I latched on to the nipple and gave it a little tug. It quickly rewarded me with a warm fluid that dribbled into my mouth. It was ecstasy in a liquid form. \n\nAs I inhaled her nipple my cock continuously hardened, getting more rigid with each expression of milk. It painfully tented the dress I had on. Emily caught my hard on out of the corner of her eye. \n\n\"You poor baby,\" she cooed. \"Is Mama's milk getting you all worked up? Do you need to be milked as well?\" \n\nHer hand drifted down underneath my dress, pulling my cock into view. \n\n\"Oh, my,\" she gasped. \"My little brother has become my big, big sister. What were the odds of that?\" \n\nAs I suckled, she started stroking, even grabbing some of the milk that was dribbling out of the breast I was neglecting and using it as a lubricant for her hand job. \n\n\"Frank isn't this big! Would you mind if I tried it out once you're done feasting on me?\" \n\nAs I approached the door to our room, I noticed that I have adjusted myself. In my daze, I had reached into my pants and untucked my cock, which is fully engorged. I am standing out in the open with my cock in my hand. I look around hastily and realize no one is around. Embarrassed, I quickly zipped up my jeans and pulled my shirt down tight to cover my bulge. \n\n\"Can I do this?\" I questioned myself. \"Can I actually sleep with my sister?\" Chris may not be able to, but Tina could, I told myself. I started the confidence mantra in my head, pulled out my key card and reached to open the door. \n\nEND OF PART 6 \n\nThanks for reading this so far. If you liked it, please vote and send me feedback or post. I really like to hear what people think of my story, good or bad. This is my first one so I am constantly learning. I am happy to take suggestions."
    ],
    "authorname": "noobdude",
    "tags": [
        "crossdressing",
        "lactation"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-boiled-frog-pt-06"
}