{
    "title": "UCLA to Big D Ch. 17",
    "pages": [
        "As you might have suspected from the ending of Chapter 16, this one contains celebrity sex and thus was placed in the Celebrities and Fan Fiction category. Like Chapter 15, it contains hot celebrity sex, but also an impactful trip that moves the story towards its ultimate destination.\n\nPlease keep in mind that any references to celebrities or real-life people or places are purely fictional. Any and all sexual situations regarding these individuals are consensual.\n\nI made the final decision to go with 18 chapters (epilogue will be combined with chapter 18), so the amazing ending will take place in the next chapter. I trust you've enjoyed the story to this point and hope you do the rest of the way too. I'm looking forward to sharing...\n\n*****\n\nRyan Nielsen sat quietly in the interview room at the Pacific Palisades police station. There was a one-way mirrored window on one end of the room from behind which two plain clothes detectives observed while discussing his case.\n\n\"What's this guy's story?\" Myers asked.\n\n\"He tried to break into the NFL star Cole Steele's estate. He claims the linebacker is holding his wife against her will inside.\" Gonzalez responded.\n\nMeyers laughed. \"Another housewife falls into Steele's web and the jealous hubby thinks he's going to do something about it?\"\n\n\"Yeah, he got a little roughed up by Steele's gate guards, but I'm sure that doesn't sting as much as knowing that big football player is porkin' his wife!\"\n\nThey both laughed again.\n\n\"Does he have any evidence that she is being held against her will?\"\n\n\"I didn't get that far, we weren't far into the interview before he clammed up and said he only wanted to talk to Chief Jones. He says they are buddies from the club.\"\n\n\"He doesn't know yet?\"\n\n\"Apparently not.\"\n\n\"Okay, let me go talk to him.\"\n\nMoments later the detective entered the interview room. \"Mr. Nielsen, I am Detective Rudy Myers.\"\n\n\"I told the other guy, I only want to speak with Chief Jones.\"\n\n\"I'm afraid Chief Jones is incapacitated at the moment Mr. Nielsen. I'm the only one you can talk to at this time.\"\n\n\"Bullshit, Steve and I are good friends. If he knew I was being held here, he would be here in minutes. Have your office reach out to him and tell him what's going on. I'll wait till he arrives to discuss my case detective.\"\n\n\"I'm afraid you might be waiting a very long time for that conversation Mr. Nielsen.\"\n\n\"What are you talking about?\"\n\nMyers told Ryan what had happened with Chief Jones in the past 24 hours. \"I'm sorry to tell you Mr. Nielsen, but your friend Steve Jones looks to be in a lot of trouble.\" Myers himself was never a big fan of Jones and was not surprised one bit when he heard what the chief was being accused of.\n\n\"Wow, I just saw him Saturday afternoon. He was on some kind of stakeout of a sexual abuse victim in Pasadena. He appeared to be in especially good spirits when I saw him. He said he was firmly behind her and was hoping to cuff his target later that afternoon. I wished him all the luck in accomplishing his mission.\" Ryan said, still in shock as to what the detective had just told him.\n\nDetective Myers gave Ryan a quizzical look as he wasn't aware of a PPPD case involving a sexual abuse case in Pasadena.\n\n\"Well Mr. Nielsen, I'm sorry to break the news to you, but right now, you have your own problems to worry about. Breaking and Entering can carry a felony penalty and jail time. Why were you attempting to enter Mr. Steele's property?\"\n\n\"Because the mother-fucker is holding my wife against her will. If you let me have my phone back, I can prove it to you.\"\n\n\"Those are pretty serious allegations Mr. Nielsen, are you sure about this?\"\n\n\"Yes...I mean no...that is why I went to his house. I'm confident if I can explain to her about the contract...\"\n\n\"What contract are you referring to Mr. Nielsen?\"\n\n\"My wife accidently stole something...but it wasn't really her fault...she was master...trying to put it back...\"\n\nDetective Myers interrupted him, \"Your wife stole something from Mr. Steele? What is this contract you are referring too? Did you say she was mastering something? I'm losing my patience here Mr. Nielsen. You better start making sense or I'm going to throw you in that cell for the next 48 hours to give you more time to think it over! What makes you think she is even at Mr. Steele's residence? How long has she been gone?\"\n\n\"She's been gone about a week and I know she's there because I took her there.\"\n\n\"You took your wife to Mr. Steele's house a week ago and she hasn't returned and you are just reporting this now?\"\n\n\"That's what the contract is about. After the...uh...misunderstanding...I signed a contract to have my wife work as Mr. Steele's personal servant as a means of payback...\"\n\n\"Do you have copy?\"\n\nRyan shook his head.\n\n\"What were her responsibilities?\"\n\n\"Cooking and cleaning and...\"\n\n\"And what?\" The detective asked impatiently.\n\n\"Anything he demanded...\"\n\n\"Anything? And you signed such a document? And so now why do you think she is being held against her will? Isn't she just fulfilling the duties of the deal?\"\n\n\"There's more detective. Please bring me my phone, I'll show you...\"\n\nThe detective eyed him carefully before pushing a call button on the desk phone, \"Please bring me Mr. Nielsen's cell phone.\" Within a minute, one of the uniformed cops brought it into Myers.\n\nHe observed it carefully before handing it to Ryan. \"Okay Mr. Nielsen, no funny business.\"\n\nRyan took the phone and clicked on his email inbox, \"This was sent from an anonymous email account. You might not be able to tell as easily as I can, but my wife is crying out for help.\" He clicked the first video image and handed it to the detective:\n\nThe image flashed to a campfire burning brightly and the sound of two people having passionate sex. The image moved to another camera angle which showed the naked sweaty ass of a large black man pumping aggressively as his massive balls swung wildly forward and back against the thighs of a white woman.\n\n\"...yes Bull...uhn...it's my favori...umph!\" The woman moaned and neglected to finish her sentence as the black man pumped hard into her from behind.\n\n\"How's that big black cock feel now compared to your husband's dick?\" The man taunted.\n\nThe woman continued to moan loudly as he fucked her harder.\n\n\"You didn't answer the question; do you want me to stop?\"\n\n\"Oh...no...no please don't stop,\" the woman begged urgently, \"it feels really nice.\"\n\n\"Nice...puppies are nice! Tell me how that thick stick really feels!\" The black man demanded as he picked up the pace and slammed it in and out and spanked her.\n\n\"Oh, oh...it feels fucking GREAT...it's so much bigger than his...he could never make me feel like this...please don't stop!\"\n\nDetective Myers did his very best to keep a professional outward appearance. Inside he was awed and aroused watching the wild sex on Ryan Nielsen's phone, \"So are you telling me this is your wife in the video Mr. Nielsen?\n\n\"Yes\"\n\n\"I heard her refer to the man as Bull, is he someone you know?\"\n\n\"Yes detective, I am certain Bull is Cole Steele. That is one of the clues as to her non-consent; clearly she is being coerced into calling him by another name as a means of showing his power over her. Also, did you see him spank her, couldn't that be construed as assault.\" Ryan questioned. He was grasping at straws.\n\nThe cop thought to himself that ironically the entire scene could be considered assault...the black man was brutally hammering this guy's wife with a weapon that wasn't too dissimilar from a baseball bat. \"Is there any other evidence of an assault Mr. Nielsen?\"\n\n\"Yes, this other clip shows him forcing her to copulate him as he treats her roughly.\" Ryan clicked on the second video and handed the phone back to the cop:\n\n\"Oh God, fuck them Bull!\" Was the first thing the cop heard.\n\nThe head of a massive black dick was now up against a white woman's lips as she frantically slobbered and licked it as he rubbed it around her mouth.\n\n\"Is this your wife Mr. Nielsen?\"\n\nRyan nodded his head.\n\n\"Is this what you were referring to when you said he forced your wife to copulate him?\"\n\n\"That is only one example detective. There's more...\"\n\nThe cop was happy to hear that...he was looking forward to seeing more of the incredible action.\n\nThe black man pushed his fat veiny cock down and shoved it between the woman's incredible tits and fucked them urgently as he flicked her hard nipples with his thumbs. He was sweating like a bull as he thrust his hips forward and back across her chest. He gripped her soft white breast skin roughly with both hands as he pounded away. As he did so, the man's wife frantically licked and sucked on the fat fleshy head as it extended up to her waiting mouth. The black man groaned and said, \"Get ready bitch here it comes!\"\n\nThe detective watched in awe as Cole Steele tensed and shook as his first big spurt shot over the woman's head. She had a look of shock on her face but she quickly opened her mouth and stuck out her tongue. The next couple of streams landed heavily across her lips, chin and neck. The football player released his grip on her tits, grabbed his shaft and aimed it at her heaving mounds. He stroked it hurriedly as large streams coated her breasts.\n\nWhen he finally finished, her tits looked like snow covered mountains and long cum streams coated her beautiful face. The large black man was huffing and puffing as he grabbed her panties off the bed and wiped his cock clean.\n\nHe then brought her wet sticky panties up and used them to futilely smear his cum around her face. He wiped around her nose before letting the panties rest there. Her slutty panties looked like a well-used respirator air mask sitting across her nose and mouth.\n\nThe cop kept watching as the woman's hands went to her tits; she rubbed the messy spooge around to coat them more evenly... she tried to rub it all in, but it just smeared. The cop couldn't believe the volume...it looked like the black man hadn't cum in a month.\n\nThe football player then said to her, \"Don't worry about rubbing that shit in, they look better all shiny and wet with my seed anyway! Clean it off your fingers.\"\n\nThe cop kept watching for signs of objection by the woman as she now did as she was directed and pulled her cum-stained panties aside and cleaned her fingers with her lips and tongue. The black man brought his cock to the woman's mouth one final time. She kissed and licked around the head before he finally pulled away and the video stopped.\n\n\"Do you see what I'm talking about detective? She is clearly doing these things because he is threatening her. I know my wife; she would never do this otherwise.\"\n\nDetective Myers felt bad for the man who was clearly living in denial. He hadn't seen anything in either video that suggested his smoking wife wasn't giving herself enthusiastically to the football player. He hesitated before he lied, \"Mr. Nielsen, I can easily understand your feelings of anger and frustration but I don't have a lot of experience in domestic cases, do you mind if I take your phone back into the office so I can consult some of my colleagues who do?\"\n\n\"No, I have no objection with it detective. I'm sure they will agree with me. When you're done, can you then send a squad car over to get her out of there and arrest that mother fucker?\"\n\n\"Let me consult them first, then we'll come up with a plan of action Mr. Nielsen. One more thing, \"You said these videos came from an anonymous email, who do you think sent them?\"\n\n\"I'm sure they came from Cole Steele!\"\n\n\"Why would he send you videos of him having sex with your wife if he was holding her against her will?\"\n\nRyan pondered the question. \"I'm not entirely sure detective, maybe he is blackmailing her or something, but isn't that what you guys get paid to figure out?\"\n\nDetective Myers just nodded at Ryan before exiting the interview room.\n\nHis partner was waiting near the one way mirror. \"Well, what do you think Rudy; does the guy have a case?\"\n\n\"Fuck no, his slutty wife is loving every minute of that nigger dick! Check it out.\" He played both videos for his partner.\n\n\"Holy shit, his wife is hot as hell. That poor guy, I can't imagine how he must feel watching her get fucked like that!\"\n\n\"I know, can you believe the size of that dude's cock?\"\n\n\"How about the volume of jism he spewed on her face and tits?\"\n\nThey both laughed. \"Pretty fucking incredible!\" Gonzalez responded.\n\n\"Where are the other guys, I gotta show this to them?\"\n\n\"They are all in the conference room Rudy; let me check it out one more time before you go over there.\"\n\nMyers handed the phone back to his partner. \"Holy shit, I've never seen anything like that! She is fucking hot, I might need to borrow that phone and head into the John when you are done showing the guys.\"\n\n\"Get in line Jim!\" Myers said as he laughed and walked towards the conference room with a bulge in his own pants.\n\nThirty minutes later Detective Myers entered back into the interview room. \"Sorry that took so long Mr. Nielsen, but I wanted to be as thorough as possible in determining our plan of action.\"\n\n\"No problem Detective Myers, I really appreciate your professionalism.\"\n\nMyers nearly laughed at the complement. He had just spent the last 20 minutes showing the videos to his partner and all the guys in the conference room. He also ported the videos to his own phone for future viewing. To a man, none of the cops thought Ryan Nielsen had any leg to stand on in regards to his wife's supposed captivation. No, they all watched in aroused fascination at the wild sex between the stunning blonde and the professional football player. There were lots of jokes and volunteers for conducting full body cavity searches on the poor \"captive\" woman.\n\n\"Unfortunately Mr. Nielsen there does not seem to be any agreement in our office with your theory that your wife is being held against her will. Those who I shared the video with all believe your wife is in fact enjoying herself very much. And since you have no other evidence to the contrary, we are forced to believe that no criminal activity is being conducted by Mr. Cole Steele. I wish we could make a case on your behalf, but the evidence points to consensual transgressions on your wife's part. And while the spanking, rough manipulation of her body, and dominating treatment are, I'm sure, hard to watch, they are things that happen in bedrooms and beaches, albeit not always so intense, all over Southern California. I'm afraid Mr. Nielsen, Cole Steele and your wife are not breaking the law, only your heart.\"\n\nRyan stared at him with tears in his eyes.\n\n\"Can I call you Ryan?\"\n\nHe nodded.\n\n\"Ryan, I think you've been through enough today, I am going to release you and assuming you don't make further attempts to trespass on Mr. Steele's property, we'll forget this incident ever happened. If I were you I would contact your lawyer and see if he can draft a letter requesting a meeting between you and your wife. Perhaps you can talk some sense into her if you meet with her face to face.\"\n\n*****\n\nFace to face was how Jenna and Cole were sitting in his limousine at the moment. He had just pulled his lips from hers. \"Jenna, thanks for doing this favor for me. Try and relax and enjoy yourself, I think you will have lots of fun if you do.\"\n\n\"I'm a little nervous Cole, but I'm excited too...I can't believe I am actually doing this. As I told you earlier, I've been a big fan for a long time. Watching that show has been a guilty pleasure of mine for a long time. I hope I'm not like a stalker when I get there...but the drugs and the tequila have me feeling good, I think I'm ready.\"\n\nCole reached out and squeezed her large breasts through the lingerie, \"Yeah I would have to agree that you do feel really good at the moment!\"\n\nJenna giggled and playfully slapped his shoulder, \"You know I was talking about a different kind of feeling!\"\n\nCole laughed. \"Yeah I got a different kind of feeling stirring in my pants; you better get out of this car before I change my mind and take you back to my place and tear that hot little outfit off of you!\"\n\nJenna giggled again.\n\n\"Anyway, my driver Dave will pick you up here in the morning, try and get some sleep tonight.\"\n\n\"You know that's probably not going to be up to me,\" she responded with her own devious smile.\n\n\"You got a point there...well you can get caught up at my place tomorrow.\"\n\n\"You sure about that?\" Jenna said as she reached out and rubbed his big balls through his shorts.\n\n\"Well you're probably right about that, you can spend the day in bed, but I'm not sure how much sleep you'll get!\" Cole said as he squeezed her tits again. \"But you might get a reprieve; I'm probably going to be pretty torn up myself. Me and a couple of the guys are heading to Vegas for the night as soon as I drop you off; I won't get much sleep either.\"\n\n\"What if I don't want a reprieve?\" Jenna smiled before she buried her tongue between his lips and grabbed his cock one final time.\n\n\"You're terrible girl, get the fuck out of this car now and do me this favor or we will head straight back to my place...\"\n\n\"Promises...promises,\" she said cutely before sliding sexily out the door.\n\n*****\n\nAs the maid exited out of the kitchen, she made eye contact with the black man sitting at the large dining table. A big smile appeared on his face. While she was new to the staff, he recognized her quickly. His wife was sitting adjacent to him looking at images on her phone.\n\nThe maid approached the table carrying a bottle of 40-year-old Dom Perignon. \"Excuse me, do you both desire a glass of champagne?\"\n\n\"Yeah, that'd be nice.\" The man responded as he checked out her fantastic cleavage.\n\nThe maid poured his glass first. \"Ma'am?\"\n\nThe woman didn't look up and simply tapped her glass as if to say \"Fill it up.\"\n\nWhile she poured, the maid looked over at the husband. He got another grin on his face and winked at her.\n\nHe turned to his wife, \"Ahem honey, what's so interestin' on your phone?\"\n\n\"My sisters are at a new club in North Hollywood and it looks like so much fun! They sent lots of pics!\"\n\n\"I'm sure it is, we'll have to check it out suntime soon baby.\"\n\nHis wife let out a frustrated sigh as if to say \"I've heard that before.\"\n\nThe husband then said to the maid, \"What's on da d'sert menu tonight?\"\n\n\"Chocolate souffle, cr\u00e8me brule, raspberry tort, or... um pie...pussy pie!\"\n\nKim Kardashian finally looked up from her phone. She now stared at the maid who was dressed in the sexiest French maid lingerie she'd ever seen. It took a minute for Kim to register what she'd just heard and was now seeing. The maid looked familiar, but she didn't immediately recognize her. Moments later, a big smile formed on her face as it finally came to her. She ogled Jenna's unbelievable body in the stunning outfit.\n\nKim looked back over at Kanye who himself was sporting a big smile as well as a pretty decent tent in his shorts. \"Kanye, how did you...? Cole's party? I thought she was...?\"\n\n\"Happy birfday baby!\"\n\nKim got up quickly and gave him a big wet kiss on the lips. \"I told you this is the best birthday ever honey! I never doubted you would make it that way Kanye. I love you!\"\n\n\"Me too baby...enjoy!\" Kanye said as he started to get up.\n\n\"You aren't going to share...\" Kim said as she looked excitedly over towards Jenna, \"...my birthday...um...present?\"\n\n\"No baby, I'll go help Gabby with North and Saint and besides knowing you the way I do, you probably want to keep yo presents to yoself on your birfday anyway!\"\n\nKim got a hungry look on her face as she ogled Jenna again, \"Kanye you know me too well, sometimes I can be kind of selfish. There are certain things that I like to have all to myself...like uh...dessert!\"",
        "\"I know Keeks, I'll see ya in the morning. Where will I find you, in the guest house or downstairs?\"\n\nKim's gaze turned glossy. \"Definitely downstairs baby...\"\n\n\"I thought so...\" Kanye said before he walked out of the room. On his way to his office, Kanye thought about Jenna again in her hot little outfit, \"She'll be getting some new sesories tonight...he envisioned how'd she'd look in leather restraints, a ball-gag and a collar.\" Kanye knew what the beautiful blonde was in for once his wife confirmed they'd be downstairs. He'd just recently made the final payments to the contractor for the completion of Kim's downstairs dominatrix hideaway.\n\nWhen he got to his office he called Cole and thanked him once again for sharing his gorgeous plaything with his wife for her birthday. \"You shoulda seen Kimmy Cole, I think she was actually in heat. Do you have any idea what yo girl's in for? \"\n\n\"You're welcome Kanye; I owe you guys so much for everything you've done for me. As for Jenna, she might look like the innocent housewife next door, but she's quite a tiger in sheep's...uh...maid's clothing!\"\n\nKanye laughed, \"I wouldn't be so sure buddy, I doubt she'll be in anything for long. Your Tiger is definitely going to be taken by the tail...in more ways than one!\"\n\nThey both laughed and said their goodbyes.\n\n*****\n\nKim sat in her large queen's chair at the dining table.\n\n\"So you are new to the staff huh?\"\n\n\"Yes, this is my first night,\" replied Jenna innocently.\n\n\"I usually interview all new hires, why didn't Charlton have me meet with you?\"\n\n\"I don't know ma'am, I guess he liked my qualifications?\"\n\n\"What special attributes do you bring to the job?\" Kim asked as she eyed Jenna's amazing body from head to toe.\n\n\"I'm a hard worker and I'm really good at following directions.\"\n\n\"We'll see about that! Do you have any other special talents?\"\n\n\"What do you mean ma'am...like what?\" Jenna played along.\n\n\"I shouldn't need to tell you what I'm referring to,\" Kim said as she unbuttoned another button on her dress and unveiled more incredible cleavage.\"\n\n\"I'm really good in the kitchen...you know like cooking and cleaning.\" Jenna said in a ditzy voice. She could feel her panties getting wet as she looked down on Kim Kardashian's magnificent tits.\n\n\"I was more interested in your talents in another room in the house. Anyway, before we get to that, what were those desserts you mentioned before?\"\n\n\"Chocolate Souffle, Cr\u00e8me Brule, and Raspberry Tort ma'am...they are all to die for.\"\n\n\"I thought I heard you mention a fourth dish...some kind of pie?\"\n\n\"You must be mistaken, I don't recall offering anything else,\" Jenna replied innocently.\n\n\"Hmm...I usually have a pretty good memory for these things. But since you aren't offering any pie, bring me one of each of the other desserts and an extra champagne glass.\"\n\n\"Is Mr. West coming back?\"\n\n\"That's not your concern, go now!\"\n\nJenna returned carrying a tray of three desserts and an empty champagne glass.\n\n\"Set the tray on the table and come retrieve my napkin, it accidently fell on the floor.\"\n\nJenna set the tray down and looked over at Kim. The black-haired reality star was pulled slightly away from the table and turned towards her left. The napkin was sitting four feet away.\n\n\"That's a long way for the napkin to have fallen on its own,\" Jenna thought to herself. She moved over to the napkin and knelt down and picked it up.\n\nAs she started to rise Kim yelled, \"Didn't you get any training?\"\n\nThe loud outburst startled Jenna and she accidently dropped it.\n\n\"Since its obvious my house manager is failing in his training responsibilities, I will do it myself. If you are going to succeed on my staff there are only two ways you are expected to retrieve fallen items. The first is as follows. Turn and face the item with your back facing either me or my husband.\"\n\n\"Okay,\" Jenna said apprehensively.\n\n\"Do it now bitch!\"\n\nJenna moved as quickly as the spiked heels would allow. Kim approvingly checked out her long stocking covered legs from behind.\n\n\"Now bend at the waist with your legs straight as if doing a toe touch, let's see if you are the least bit flexible.\" Kim said in a doubting tone.\n\n\"You mean like this?\" Jenna said as she slightly separated her feet and teasingly lowered her torso down against her perfectly straight legs.\n\nKim watched in astonishment as the sexy blonde basically bent in half with her head now down near her shins. The short skirt slid up over Jenna's impeccable ass which was now staring Kim in the face. \"Fuck this chick is hotter than I remember!\" Kim thought to herself. She lost her train of thought as she stared at Jenna's hot ass and fat pussy lips which were camel-toeing against her skimpy panties.\n\n\"Is this the way you want it?\" Jenna asked in an airhead voice after reaching for the napkin.\n\n\"Fuck...look at that shit...\" There was a long pause before Kim responded, \"Um...what...yes...yes that is the way I want you...to do it I mean.\"\n\nJenna started to stand back up.\n\n\"I didn't tell you to stand up. Bend back down!\"\n\nJenna moved back into the bent position once again. Kim sat mesmerized, ogling Jenna's body; she could feel her own pussy dampening. She stared for an uncomfortably long stretch before she was interrupted by Jenna's voice.\n\n\"What is the other way?\" Jenna asked.\n\n\"Huh what?\" Kim responded, sounding distracted.\n\n\"You said there were two ways you like the staff to retrieve fallen items, what is the other one?\"\n\n\"Don't rush me bitch! I want to make sure you are doing it right before I show you the other way.\" It was all Kim could do to keep from burying her face between Jenna's ass cheeks.\n\n\"Yes ma'am,\" Jenna answered.\n\n\"That's enough of this old lady talk, my mom is known as ma'am. You will refer to me as Mistress Kimmy, is that clear?\"\n\n\"Yes Mistress Kimmy, I'm sorry I rushed you.\"\n\n\"Stop talking, I am concentrating on your uh...posture.\" Kim couldn't get over the perfection of Jenna's tight bubble shaped ass and deep crack. \"Okay, not bad, I'll work on that some more. Now hand me that napkin and turn around.\"\n\nJenna stood and handed Kim the napkin.\n\n\"Back up,\" Kim ordered as she looked up at Jenna's tits from her chair. Jenna backed up a couple of steps before Kim dropped the napkin at her own feet. \"Okay, get down on your hands and knees.\" Jenna again did as directed. \"Crawl forward and sit up on your knees and wait for instructions. Jenna moved until she was positioned in front of Kim sitting back on her knees with the napkin between them.\n\nKim looked down between her heavenly tits. They looked every bit as big and inviting as she remembered from Cole's party. Kim ogled her sweet rack and beautiful face. Jenna noticed an aroused look on Kim's face.\n\n\"Look at you...has anyone ever told you you look like a young Kelly Preston?\"\n\n\"No, you are the first Mistress Kimmy,\" Jenna lied.\n\nKim stared for several more seconds at Jenna's face and tits before she spoke, \"Sometimes you service people have filthy hands, and I don't want any of that grime on me or Kanye's napkins, so whenever that is the case, you will use this method to retrieve fallen items. Bend down and pick it up with your mouth.\"\n\nJenna looked at her flirtatiously before slowly leaning forward and picking up the napkin with her teeth. \"Okay, now come replace it in my lap.\" Jenna crawled forward and lowered her head between Kim's legs and released the napkin. Kim reached out and ran her fingers through Jenna's hair. Her pussy was dripping wet and it was all she could do to keep from pulling up her dress and grinding Jenna's face into her crotch, \"Control yourself Kim; she'll be doing plenty of that later...\"\n\nKim tossed the lipstick stained napkin back onto the floor behind Jenna. \"Let's practice method 1 again...\" She proceeded to direct Jenna through a half-dozen reps of each retrieval method. All the while, Kim's pussy gushed with anticipation.\n\nAs Jenna stared back up at Kim on the final method 2 rep, Kim noticed Jenna's eyes looked dilated and she had a little post-nasal sniffle, \"Cole's got this bitch amped up on some of that good cocaine he gets! We'll see if she is as enthusiastic about snorting some more of that shit off of me...\"\n\nKim told Jenna to fill both glasses of champagne, \"Sometimes I allow my staff to drink or smoke while working. Kanye and I disagree, but I think it gets everyone in a better mood to do their job. What do you think uh...?\"\n\n\"Skyler.\" The beautiful blonde replied.\n\nKim remembered her name was Jenna, but played along. \"What do you think Skyler?\"\n\n\"I'll do whatever you want me to do Miss Kimmy.\"\n\n\"Good answer! Empty your glass and fill it up again.\" Kim watched as Jenna impressively slammed the bubbly liquid and re-filled her glass, \"I thought this housewife might be a prissy little bitch, but since Cole must be fucking her, maybe she's a little more adventurous than I thought. Breaking her in will be fun either way!\" \n\n\"Okay, now tell me more about those desserts.\"\n\nJenna was quite the culinary expert and impressed Kim with her description of each of the delectable dishes. Jenna made most of it up as she went along, but knew enough about each dish to fake it.\n\n\"The souffl\u00e9 sounds particularly good, bring that to me.\"\n\nJenna moved sexily back to the tray and brought the dish to Kim.\n\n\"Skyler, use your fingers and feed some to me.\"\n\nJenna hesitated momentarily before sinking two fingers in the dessert and bringing the gooey chocolate to Kim's mouth. Kim opened her sexy lips and Jenna inserted them. Kim swirled her tongue around and sucked the yummy treat from Jenna's slender fingers.\n\nKim's mouth felt especially wet and soft on Jenna's fingers.\n\n\"Mmm, Shareef has outdone himself tonight. Now bring me some of the raspberry tort.\" Kim ordered.\n\nAgain Jenna retrieved the dish, \"Do you want to suck it off my fingers again Mistress Kimmy?\"\n\nKim nodded before licking and sucking Jenna's fingers clean. \"Okay, now the cr\u00e8me brulee.\"\n\nAs Jenna turned to retrieve it, Kim undid another button on her dress and slathered some of the raspberry tort between her luscious tits. As Jenna returned, Kim shouted, \"You need to be more careful you careless bitch, look you spilled that raspberry goo all over my chest!\"\n\nJenna knew exactly what happened, but played along, \"I'm sorry Miss Kimmy, let me clean it up for you!\" She reached for the napkin.\n\n\"You bet you'll clean it up, but not with that! Clumsy staffers like you never learn unless you experience consequences. Drop down here and use your tongue to clean it off!\"\n\n\"But Mistress, I...\"\n\n\"Do it now bitch before I fire your ass!\"\n\nJenna's heart beat a million miles an hour as she dropped her head into Kim Kardashian's amazing rack. Jenna had always loved Kim's tits and Ryan would tease her about it when they watched Keeping up with the Kardashians. \"You'd suck and lick those big things all night long wouldn't you Jenna?\" Ryan would tease.\n\n\"Maybe not all night...\" she would respond with a guilty grin, \"but they do look pretty incredible don't they? Ray J loved them in that video.\"\n\nShe remembered Ryan excitedly suggesting, \"We might have to watch that sex tape again tonight; it gets you all hot and bothered Jenna...\"\n\nJenna nodded her head, but she never told him she was as turned on by Ray J's big black cock as she was Kim's amazing tits.\n\nUntil this moment that whole conversation was but a fantasy, but here she was only inches away from Kim's pendulous mounds. They looked bigger and prettier than she imagined. Suddenly she felt Kim's fingers in her hair pulling her head down against her chest. Jenna instinctively extended her tongue and licked and sucked the delicious fruity dessert from the reality star's amazing rack.\n\nKim watched as Jenna's long tongue and full lips expertly perused the folds between her tits. She thought to herself that perhaps this married chick wasn't as na\u00efve as she imagined, \"Cole's probably got her on a steady pussy diet...I know how much he loves multiple partners.\" Kim pictured Jenna's fluttering tongue doing its ministrations on her pussy and asshole while she held onto a leash connected to Jenna's soon to be installed collar, \"I got to get this horny bitch downstairs asap!\"\n\n\"Okay enough of that, feed me some of that cr\u00e8me brulee.\"\n\nJenna slowly pulled her head from between Kim's tits, raspberry cream messily covered the area around her mouth. Jenna dipped her fingers in the final dessert and brought them up and inserted them between Kim's wet lips. Again the busty reality TV star sucked them clean. They stared into each other's eyes as she did so.\n\n\"Which one is your favorite Mistress Kimmy?\"\n\n\"I'm still waiting for the 4<sup>th</sup> dessert you mentioned.\"\n\n\"I'm afraid I don't know what you are talking about, they only gave me three.\" Jenna responded in her best airhead voice.\n\n\"You don't remember mentioning some kind of pie?\"\n\n\"No, I would remember that, I love pie!\"\n\n\"I bet you do slut, what's your favorite?\"\n\nJenna got a sheepish look on her face as she glanced down between Kim's legs, \"I can't tell you, it's kind of embarrassing.\"\n\n\"I'll tell you what, we are going to go downstairs and work on your training. Maybe you'll feel more like sharing after you learn about the consequences of keeping things from me in this house. I like pie too and unlike you Jenna, I am happy to share...\"\n\n*****\n\nJenna woke from a deep sleep. Her head was pounding as she looked up and saw the reflection of her naked body lying next to Kim Kardashian's. She lifted her hand from between Kim's big naked ass cheeks. Kim stirred and murmured groggily, \"Cole...fuck she has an amazing tongue, when can I fuck her again...\"\n\nJenna smiled as Kim began snoring once again.\n\nJenna looked around. A small amount of light was filtering through a narrow elevated window. She could just make out the features of the subterranean room in which she'd just spent the night with reality TV star. In the reflection above the bed, Kim's big bare ass still possessed some of the red marks from Jenna's spankings...at some point the previous night, master had become servant, but not before Mistress Kimmy had her way with the beautiful blonde.\n\nJenna could feel the tenderness on her own butt from Kim's manipulations. Jenna looked to her left and saw the cage in which she'd spent part of the previous night. The dog bowl inside the cage still contained the remnants of the vodka mixed cocktail that she lapped-up to please Mistress Kimmy.\n\nJenna immediately reached for her neck...the thick leather collar was still attached. She unbuckled it easily now unlike the previous night when her wrists were bound. As she quietly set it on the floor next to the bed she thought about the irony of waking up with a collar around her neck for the 2<sup>nd</sup> time in three nights, \"Why does this keep happening? And worse yet, why do I like being so submissive?\" Jenna thought back to how aroused she was as Mistress Kim had teased and tortured her into some of the most intense squirting orgasms of her life.\n\nJenna quietly rolled out of bed and nearly tripped over one of her spiked heels. She vaguely remembered wearing only the heels, fishnet stockings and garters when Mistress Kim put her into the cage. She looked around and found her French maid lingerie near the smoldering fireplace. She excitedly picked it up but quickly remembered it was no longer wearable...there was a long scissor gash from near the crotch up to the neckline, \"Oh shit, what am I going to wear?\"\n\nJenna's beautiful tits jiggled as she walked nakedly around the room before finding her way into the bathroom. After relieving herself, she found a skimpy cover-up and put it on. Jenna eventually negotiated her way out of the basement and climbed up the stairs to the foyer just as Cole Steele's driver Dave pulled up in the driveway. She hurried outside and climbed into the back of the limousine.\n\n\"What an incredible night that was...\" On her way back to Cole's she reflected on the previous night and all that had transpired in her life over the past week. Jenna thought back to her initial infidelity with Cole and the unforgettable sex in the ensuing days and nights. She pictured Cole's massive veiny dick and his big cum-filled balls, \"God I love his cock...\" \n\nJenna's thoughts turned to the night at Paul Washington's mansion and the two other beautiful women who she had undoubtedly had sex with, even if her drug-induced fogginess blocked her memory of that night's events. Then Jenna recalled her arrest at Cole's mansion and her subsequent rape at the hands of the voluptuous hooker and the two butches in the jail cell before her \"rescue\" by Steve Jones. \"That asshole fucked me for 48 hours straight in that fuck chamber after that...\" But in spite of her disdain for the police chief, she couldn't help but reflect indulgently at the unforgettable experience of the Sybian and the wild orgy with the harem of gorgeous Latina girls.\n\nJenna pushed all thoughts of her husband from her mind.\n\nJenna reached between the folds of the cover-up and touched her moist pussy. She brought her other hand to her face and inhaled the scent of Kim Kardashian's sex. As she did so, she rubbed the smoothness of her bare pussy and re-imagined the toe-curling squirting orgasms Kim had given her when she was strapped to the posts of the reality star's bed.\n\nA slight smile came across her lips when she remembered finally turning the tables on Mistress Kimmy and eating her lustful pussy for what seemed like hours. The reality star went from being the dominant sexual aggressor to a whimpering, begging sex toy for Jenna's talented tongue. Jenna's own orgasms had been incredible in intensity, but they paled in frequency to the number of times she got Mistress Kimmy off. She learned quickly that she could make the big-titted TV star cum in multiple orgasms as often as she wanted. At that point Jenna took over the master role and had actually manipulated Mistress Kimmy into the cage at one point, \"I can't believe I fucked Kim Kardashian all night long. God...is this the sort of thing that living with Cole will bring?\"\n\nShe would get confirmation later that day...\n\n*****\n\nCole wasn't around when Jenna arrived back at his mansion. She took a nice long shower and was standing at his bathroom vanity wrapped in a towel combing her wet hair when he walked in from Vegas.\n\n\"Now that's a sight I could get used to when I walk into my room!\" Cole stated as he strode in with a big grin on his face. \"I didn't really expect you to beat me home this morning.\"\n\n\"I kind of snuck out,\" Jenna giggled.\n\n\"Well based on the way my phone blew up this morning, there was a certain reality TV star who was awfully happy that you stayed the night. Knowing her the way I do, I'm surprised you weren't bound to the bed.\"\n\n\"Oh don't worry, I was at several points last night!\" Jenna laughed.\n\n\"Based on what I heard, you weren't the only one.\"\n\n\"Yeah that bitch got some of her own medicine...\" This time both Jenna and Cole busted out laughing. \"How was Vegas?\"\n\n\"Awesome, I won $250 grand at the craps tables.\"\n\n\"TWO HUNDRED AND FIFTY THOUSAND?\" Jenna asked incredulously.\n\n\"Yeah it was a good night, I couldn't lose. Unfortunately I didn't get any sleep. I'm fucking tired as hell.\"\n\nJenna looked at him with a naughty smile and dropped her towel, \"Too tired for this?\"\n\nCole's eyes nearly bugged out of his head before he scooped her up and carried her into the bedroom, \"I think I can muster a second wind!\"\n\n*****\n\n8 hours later\n\nCole and Jenna were sitting across from each other in the back of his stretch limousine. Cole spoke, \"They are flying me out to Dallas for my introductory press conference. Jerry Jones was in Europe when I signed, so we agreed to wait until later in the summer to have it.\"",
        "\"Do they know I am coming with you? Am I even going to have a seat on the plane?\"\n\n\"No they don't, but we aren't flying commercial, there is always extra room on charter private flights. If not, you can sit on my lap the whole way!\"\n\n\"Oh, that'll be real comfortable with that big thing pressing into my ass for 3 hours.\" Jenna kidded.\n\n\"You didn't seem to mind it the other night!\"\n\n\"Touch\u00e9, you have a point there.\" They both laughed.\n\n\"So tell me about your night with Kim,\" Cole asked excitedly.\n\n\"What do you want to know?\"\n\n\"How was it being with a woman again? It's been a while hasn't it?\"\n\n\"Well since I don't remember anything from the other night at Paul's,\" she looked at him suspiciously and he smiled back guiltily, \"it's been a while, but it was fun!\"\n\n\"I'm glad to hear that, I owe Kim and Kanye a lot and your \"volunteering\" for that difficult assignment really helped me gain some serious cred with my friends. You made quite an impression on her at my party a few weeks back, I knew she'd be really excited to meet you again.\" Cole semi-joked. \"But more importantly Jenna, I thought it would be fun for you and I'm glad you had a good time. Were you rusty?\" He knew full well she wasn't. He'd witnessed her pussy eating prowess at Paul's house and Kim had already gushed to him this morning about Jenna's \"special talents\".\n\n\"No it was like riding a bike, I was able to locate all the important parts!\"\n\nCole laughed, \"I'm glad to hear that Jenna. Based on what I know about your subject, I can think of a few parts that probably weren't too hard to find.\"\n\nShe laughed again. \"No, there were definitely a few that were hard to miss, but I made sure to dig deeply for some others.\"\n\n\"I bet you did. Do you want to do it again?\"\n\n\"I could probably be talked into it...\"\n\n\"Good, you never know when opportunities might present themselves.\"\n\nCole had no idea how ironic that statement would soon be.\n\nThe limo pulled out onto the tarmac at Van Nuys airport. The phone rang inside the cabin. Cole pressed a button, and his driver Dave's voice came over the intercom, \"I think you scored big time on this one boss. I'm looking at a beautiful Gulfstream G-V with a big blue star on the tail section. That's Jerry Jones' private jet; I've seen it in magazines. It's a sweet ride!\"\n\n\"Nice...nothing like a first class welcome! I've heard Jerry's really good at those sorts of things,\" Cole gushed.\n\n\"He can afford to be when he owns a $4.2 billion team!\"\n\n\"You got that right Dave. Let us know when we can get out.\"\n\n\"10-4 boss, just a couple more minutes.\"\n\nCole looked over at Jenna, \"Looks like we are riding in style today.\"\n\n\"I've never ridden on a private jet before, this is really exciting!\" Jenna beamed.\n\n\"Yeah I have quite a few times; it's the only way to travel. Maybe I'll buy one of my own someday.\"\n\nAt first Jenna thought he was kidding but quickly realized he wasn't. She then rationalized that he owned the nicest yacht she'd ever seen, why couldn't he also own his own plane?\n\nThe car came to a stop and moments later Dave opened the rear door. He helped Jenna from the car and Cole quickly followed. They both looked up at the shiny white jet with a big blue star on the tail. Dave retrieved their bags as Cole started up the stairs towards the open door followed by Jenna. The pilots were standing at the top; they welcomed Cole onto Mr. Jones' plane. They did the same for Jenna. Cole ducked inside the doorway and Jenna heard a woman's voice with an unmistakable Texan accent, \"Cole Steele welcome to the Dallas Cowboys! We are all happier than a tornado in a trailer park that you decided to join the Cowboys!\"\n\nJenna had only heard that phrase once in her life, but she immediately remembered exactly where she was when she heard it the first time (hint: chapter 4). As she passed through the doorway, she was astounded to see the same person who'd she'd heard utter those words previously, standing right in front of her.\n\nStanding just inside the doorway was a beautiful brunette with a Texas-sized smile on her gorgeous face. She was dressed in a professional business skirt suit. Plenty of cleavage shown from her v-neck blouse and a classy silver-star necklace with a diamond center dangled between. The outfit clung to her curvy body nicely.\n\n\"Oh I see you brought a guest Mr. Steele, who do we have here?\"\n\n\"Please call me Cole, this is Jenna.\"\n\nThe woman looked at Jenna with a welcoming glance and then did a subtle double-take which Cole noticed. He also observed a certain gleam in Jenna's eyes as she smiled back at the beautiful hostess.\n\n\"Nice to meet you both, my name's Darla Petersen, I'm the Director of Special Services for the Cowboys and we are just so happy to have y'all as our guests this week. The whole city is buzzing with excitement for your long overdue introductory presser Cole. Everyone thinks you're the final piece to the puzzle. With Dak and Zeke leading the offense and you leading the defense, everyone's talking Super Bowl for the first time since 1995! It's especially exciting because the Super Bowl is at Jerry-World this year and we want to be the first team to win one in our home stadium!\"\n\n\"That's very flattering Darla, but you give me too much credit. There are a lot of other good players on the Cowboys defense, if we do well it will be due to everyone's success. And I thought the Super Bowl was in Atlanta this year?\"\n\n\"You're too modest Cole, we all saw the way you single-handedly led the Chargers to the AFC Championship game last year. As for the game, haven't you heard they found some structural issues with the Falcons new stadium? Jerry was nice enough to \"volunteer\" his humble little building for the big game.\n\n\"No I hadn't heard.\" Cole smiled.\n\n\"Well c'mon in y'all and make yourself at home. Jerry and the Jones family asked me to pass along their warmest greetings! They can't wait to welcome you to Big D!\"\n\nJenna and Cole both looked around the posh interior before settling into two Italian leather pivoting recliners. Darla spun the seat in front around and sat down across from Jenna. Cole noticed Darla look puzzlingly at Jenna once again as the blonde returned her gaze with the same sheepish gleam that he'd seen before.\n\n\"Do you two know each other?\" Cole asked intrigued.\n\nJenna answered hastily, \"No I don't think so, I assume you're from Texas right Miss Petersen?\"\n\n\"Call me Darla darlin' and yep, I'm a Longhorn through and through.\"\n\n\"I've only been to Texas once; I can't imagine how we would know each other!\" Jenna volunteered quickly again.\n\n\"I have to say you do look familiar honey...are you sure you haven't spent more time in Texas?\" Darla asked.\n\n\"I'm sure of it. Some people say I have a familiar looking face. A lot of people tell me I look a little bit like Kelly Preston.\"\n\n\"A little bit? You are a spittin' image of that pretty lady when she was younger honey. But I still don't think that's it, I feel like I know you from somewhere else.\"\n\nCole thought Jenna seemed a little too eager to change the subject when she asked how long it would take to reach Dallas in Mr. Jones' jet.\n\n\"A couple-a-three hour's sweetie, the three of us will be tighter than a Dallas Cowboys Cheerleaders' little white shorts by the time we land honey!\"\n\nAside from the incredible sex at the strip club several years previously, Jenna remembered quickly why she liked this girl so much from the first time they had met. Not only was she fucking gorgeous, she was really funny too. Jenna thought back to the night they had met previously, \"How is it possible she is sitting across from us at this moment?\" Jenna could feel her panties dampening.\n\nAfter takeoff Darla popped a bottle of Schramsberg Reserve champagne and they toasted Cole's signing with the Cowboys. The three of them made small talk for about fifteen minutes before the conversation moved towards all the great shopping opportunities in the Metroplex. Cole reclined his seat and kicked off his shoes. Within minutes the All-pro linebacker was fast asleep.\n\n******\n\nThe large black man awoke a while later to a dark cabin. Neither Jenna nor Darla was in their seats. He looked out the window and saw only darkness and a few flickering lights on the ground below. The plane was somewhere over northern Arizona. Finally he heard muffled sounds coming from the rear of the cabin. He hadn't really noticed before, but he now observed a door at the back of the fuselage. He walked quietly back and put his ear up against the door...\"No way, that little horny bitch!\" \n\nCole stealthily opened the door a crack and heard Darla's unmistakable Texan drawl, \"I knew you looked familiar baby, but I could never forget those beautiful titties and that amazing tongue of yours. Eat me like you did that night at the club honey...umph!\"\n\n\"I knew it!\" Cole said to himself.\n\n\"You're as hot as you were back then Darla...uhn! And you taste just as...umph, good!\"\n\n\"Back at you honey and it looks like you've up your game...oh yeah baby lick it...Cole Steele's a hell of a catch!\"\n\n\"We are just dating, but yes, he's incredible...suck on it Darla! I'll wake him up soon and then we can both enjoy that magnificent cock of his!\"\n\n\"No need ladies, your stallion has arrived!\" Cole bellowed as he burst through the door. He was buck naked from head to toe.\n\nCole quickly took in the surroundings. Jenna and Darla were both dressed in g-strings, garters, stockings, and spiked heels. Darla still wore her skimpy, lacy bra, but Jenna's big tits were free and jiggling nicely as they hovered over Darla's stomach. The girls were tangled in a sixty-nine position on a wall to wall bed in what appeared to be Jerry Jones' personal sleeping quarters. They both looked up at him with pussy juice around their mouths.\n\n\"Not that I give a shit, but it looks like I'm a bit underdressed for this party!\"\n\n\"We wanted to leave a little something to the imagination for you stud!\" Jenna responded.\n\n\"Oh, I'm imagining plenty. And by the looks of it, you two aren't being too encumbered by the duds.\" Cole joked as Jenna's fingers were twisted inside Darla's g-string yanking it to the side exposing her muff and swollen pussy lips.\n\n\"Duds? We haven't even landed yet and you're already going all Texas on us!\" Jenna joked.\n\nCole laughed loudly. \"Maybe I am y'all!\"\n\nThis time Jenna and Darla laughed.\n\n\"OMG Cole Steele you're going to fit right in with the Cowboys! You know what they say about everything being bigger in Texas...that cock of yours certainly qualifies! You're big enough to bear hunt with a stick...\" Darla exclaimed excitedly.\n\nCole and Jenna looked at each other and laughed.\n\n\"What did I tell you Darla?\" Jenna chimed in. \"He's hung like a horse, but I call him Bull!\"\n\n\"Damn straight girl! Bull fits...but if elephant was a flattering name it would be more appropriate!\" Darla said as she stared in awe at Cole's big black cock with wide eyes.\n\n\"Okay enough talking, let's get to some fucking!\" Cole chimed as he confidently climbed onto the bed. He set his sights on Jenna's ass and pussy lips which were dangling over Darla's probing tongue.\n\nMinutes later Jenna joined the mile-high club when she climaxed wetly on Cole's massive dick and Darla's pretty face.\n\n\"Wow honey, I remember your sweet horny pussy, but I never saw it squirt quite like that 10 years ago!\" Darla exclaimed.\n\n\"His amazing cock does that to me every time! Climb up on it and find out for yourself.\"\n\nCole rolled onto his back as Darla excitedly straddled him. She grunted approvingly as she impaled herself on the biggest cock she'd ever experienced. She'd had her fair share of big black Cowboy cocks over the past few years, but none housed the combination of length and thickness that the newest Cowboy's dick brought to the proceedings. It took a little work, but within minutes the linebacker was ball deep in the gorgeous little Texan. Jenna climbed behind and unhooked Darla's bra, \"Check these out Bull!\"\n\n\"Nice, Jenna, her titties give yours a run for their money...\" Cole blurted as he took hold of Darla's C-cups in each hand.\n\n\"Are you kidding me big boy, your girlfriend has the nicest fuckin' tits I've ever seen. When I remembered who she was, I couldn't get that bra off fast enough. They look every bit as good as they did back then! I told her ten years ago she could get rich dancing and showing them to Cowboys, oomph. These Texas boys love them some big titties, they'd flocked to her like cattle at feedin' time, oh fuck that's deep Bull...uhn.\"\n\n\"I knew you two knew each other! When we're done fucking, I want to hear how.\" Cole demanded between clenched teeth.\n\nBoth girls giggled.\n\nJenna played with Darla's tits and kissed along her neck as Cole pounded her from below. \"What did I tell you, his cock is amazing isn't it?\"\n\n\"Uh huh,\" was all Darla could muster as Cole's big balls slapped upward into her.\n\nJenna slid down until she was lying on the bed behind Darla. She licked along the crack of brunette's hot little ass. She flicked her tongue on Darla's asshole. \"Oh darlin', that feels better than a broken-in pair of boots, don't you dare stop!\" Jenna got a smile on her face before burying her tongue further inside Darla's hot little ass.\n\nAfter several minutes of tongue fucking, Jenna licked down to Cole's fat cock. It was slick with the former stripper's pussy juices and his ample pre-cum. Jenna ran her lips along the veiny surface and drank in the flavors of their combined fuck cocktail.\n\nEventually Jenna licked further down to Cole's big black nut sack. She kissed and licked each plum sized orb as they thrust up and down off the mattress. \"That's it Jenna, ripen them things up. I'm fixin to cum in this cowgirl's tight little pussy!\"\n\nDarla nearly screamed, \"Don't tease me Cole Steele, I can't wait for it! Shoot your hot load in my stretched-out slit and make me cum again big boy!\"\n\nJenna licked her finger and brought it up to Darla's asshole. She tickled her sphincter before pressing it inside. \"Oh shit honey, that's it, I'm going again...uhn...oomph...oh fuck me deep you black stud!\"\n\nCole grunted loudly himself.\n\nJenna knew what that sound meant. She frantically licked his huge balls as they contracted and exploded deep in Darla's womb. Jenna pulled back and watched as their combined juices spilled from Darla's stretched hole and soaked Cole's balls.\n\n\"Wow, that was fucking awesome you two!\" Jenna exclaimed. \"I nearly climaxed just watching you guys cum!\"\n\n\"You can say that again honey! I haven't orgasm'd like that in a coon's age.\" Darla whimpered as she slowly rolled off of the linebacker. Jenna moved along Cole's other side. The girls both nuzzled along his neck as they rubbed his big muscular chest.\n\n\"Okay, I need to know how you two know each other?\"\n\nBoth girls got big grins on their faces.\n\nDarla spoke first. \"Back in my early twenties I used to work at a club here in Dallas. One night about 8-10 years ago, a really hot blonde and her boyfriend came in and asked for a private 'dance' in one of the upstairs rooms.\"\n\nCole turned to Jenna; she already had a guilty smile on her face.\n\n\"The guy pulled me aside and told me his girlfriend was into girls and asked me to make her feel really good. I remembered thinking to myself after checking her out, \"I can't believe I actually get paid to do this job!\"\n\nShe continued, \"On top of having one of the most unforgettable bodies I'd ever seen, this girl stood out because she was into pleasuring me as much as I was into her. I felt a little bad taking their money because that sweet tongue of hers made me cum more than a ripe filly at a stud farm.\"\n\nCole looked at Jenna again, \"I assume that blonde was you. Was this before or after Santa Monica?\"\n\n\"After...\" Jenna answered sheepishly.\n\n\"I thought you told me you never ate bush since college?\" He knew she had but was having fun fucking with her now.\n\n\"Technically it wasn't a lie...I was still in college,\" Jenna answered in a meek little voice with another guilty smile on her face.\n\nDarla chimed in, \"It might not be any of my business, but she was really good at eatin' it back then, but tonight she was like a savant. I think she's had a little practice...\"\n\n\"Don't give away all my secrets Darla!\" Jenna joked.\n\n\"You are full of surprises!\" Cole said as he looked back at Jenna with a big grin on his face. \"I missed most of the carpet munching while I was asleep. I want to see this talent of yours up close and personal.\" He pulled Jenna up on top of him with her back on his chest. \"Darla do you guys have any fuck oil around here?\"\n\n\"Are you kiddin' me, this is Jerry Jones' personal jet, that horny old man has more cheerleaders in this bed than a high school sleepover party!\" She reached into a nearby cabinet, \"What flavor do you want Cole Steele?\"\n\n\"You choose, you're the one that's going to be licking it from her pussy.\"\n\nDarla turned with a coconut flavored bottle in her hand.\n\n\"Lube my cock up good and spread it all over her pussy and asshole.\"\n\n\"Ooh, my pleasure,\" Darla exclaimed as she splattered it liberally. \"Good thing we have a cleaning crew come in here after we land...\"\n\n\"Oh trust me; they're going to have a lot more to clean up than that, by the time we're through! Okay, rub my stick on her ass and help push it in!\"\n\n\"Only if I get to have this big locomotive in my caboose later...\" Darla teased. She rubbed the head up and down Jenna's butt crack. Jenna moaned as she brought it to her hole.\n\n\"I'm not sure how this thing is going to fit!\" Darla questioned as she compared Cole's cockhead with Jenna's sphincter.\n\n\"Oh don't worry it will fit, she's had it before. Press the head against it.\"\n\nDarla followed instructions until the bulbous knob popped inside. Jenna let out another moan. Darla played with Jenna's clit and watched in fascination as the linebacker worked inch after inch of his black veiny branch into her beautiful ass. \"Nice baby, take that log all the way to his balls.\"\n\n\"Darla, climb up on top of her and bring that slit to these sweet wet lips.\" Cole urged before he and Jenna kissed while Darla spun around and mounted Jenna in a 69 once again. This time Cole had a worms-eye view as Jenna buried her face in the sweet Texan pie. He watched as Jenna playfully massaged Darla's puffy labia with her tongue and lips. Cole himself was really good at eating pussy, but he could see immediately that Jenna had a special talent. He'd seen her with Monica and Gina at Paul's house the previous week, but that night she was super fucked-up, tonight she was sober and her skill-set was even more impressive.\n\nDarla moaned out loud.\n\nCole licked and nibbled along the back of Jenna's ear as she pleasured the pretty pussy in front of her face. The linebacker thrust his hips up and down more aggressively. Jenna's hips pressed upwards while she moaned like it was the first time she'd felt his big black cock.\n\n\"Fuck my ass Bull!\"\n\nDarla was amazed that Cole had the core strength to lift both she and Jenna off the bed as he thrust his powerful hips upward into Jenna's butt. As he did so, Jenna's wet pussy pressed against her hungry mouth. Darla twiddled her fluttering tongue around Jenna's engorged clit. \"Fuck that feels good,\" Jenna whimpered.\n\n\"God I love eating this chick's pussy,\" was all Darla could think about.\n\nSuddenly Cole's cock popped from Jenna's ass, \"Suck on that thing Cowgirl!\" Cole demanded as he lifted his hips and mashed his now released dick along Jenna's fat pussy lips as the head raised impressively upward towards Darla's mouth. The former stripper quickly engulfed the fat black dome and inhaled Jenna's butt flavor. Darla enthusiastically sucked on it as she and Cole worked together to maximize the veiny pressure of Cole's cock against Jenna's gaped pussy lips as he trust up and down. Her juice literally dripped down his shaft onto his thrusting balls.",
        "Jenna moaned. \"Fuck I love it rubbing roughly on me. You guys are going to make me CUM again!\"\n\nDarla reset her sights on Jenna's clit.\n\n\"Oh yeah uhn, Jesus...that feels so fucking good!\" Jenna whimpered before turning her head to the side as she and Cole's tongues intertwined outside their mouths.\n\n\"Let's cum together baby,\" Cole grunted between clenched teeth, \"are you ready?\"\n\n\"Fuck yes Bull, press that big fucking snake on my pussy...\"\n\nDarla reached down and frigged Jenna's clit with one hand while stroking Cole's pistoning cock with the other. She thought to herself, \"These two were made to fuck each other!\"\n\nDarla pulled back and sat upright on Jenna's torso as Cole wildly thrust his massive dick up and down along her slit. Suddenly Jenna moaned and Cole grunted. Pussy juice erupted from between Jenna's legs and splattered along Cole's plunging cock as his first big spurt shot into the air and landed on Darla's left tit. Darla sat mesmerized as juice erupted from Jenna's climaxing pussy while stream after stream of Cole's hot jism landed heavily on her own tits and stomach.\n\nDarla had never seen two people cum so much.\n\n\"Fuck, if I didn't know better I'd have thought neither of you had cum in a month!\" Darla said in amazement as she looked down over her shoulder at them.\n\nThey were lost in a passionate kiss. They were also covered in sweat.\n\nFinally they broke apart, \"Sorry if we got carried away Darla,\" Jenna said apologetically with a satisfied smile on her face.\n\n\"Fuck no apologies necessary, I enjoyed watching; you two should make a porno together!\"\n\nThis time they all laughed.\n\n\"Hey come here,\" Jenna said to Darla as she pointed to her lips. Darla spun around on top of her and brought her own succulent lips to Jenna's.\n\n\"Sorry honey but I'm covered in his cum and it's going to get all over you now too,\" Darla said playfully as she glanced down at her chest.\n\n\"Kiss me and rub your pretty tits on mine, trust me, I'm used to being covered in his hot mess.\"\n\nThey kissed as Cole watched from below.\n\n\"Well, I hope you are honey, cuz this boy's got more in those big balls than half the bulls at the Ft. Worth rodeo!\" Darla joked as she pushed herself up to expose the sticky strings of goo now stretching from her tits to Jenna's.\n\n\"Oh I'm well aware of that,\" Jenna said proudly, \"the only thing with more stamina than his heavy balls is that big fucking cock of his! BTW, you said you wanted it in your caboose earlier, I bet it wouldn't take too much grease to get that locomotive back on the tracks.\"\n\nJenna looked back over her shoulder as she and Darla got excited grins on their faces.\n\nCole smiled back confidently, \"I'm sure the engine could rev back up, but it's going to need a little service first. Are there any mechanics around here that could lube and grease its dome and throttle?\"\n\n\"Ooh I don't know conductor, we're both union, I don't know if that's in our contract!\" Jenna joked.\n\n\"Well I'm sure Mr. Jones can afford it. Why don't you two get the work done and I'll put it on his bill!\"\n\n\"Yes sir!\" They both agreed before sliding down between his muscular legs. Cole spread his thighs wide as Jenna moved in and latched onto one of his nuts. Darla meanwhile held his limp cock with both hands as her lips near the head, \"I think we're going to need overtime pay for this one!\"\n\nTwo hours later the captain's voice came over the intercom. \"Uh Miss Darla, we've been circling around the Metroplex for nearly an hour, we're going to need to put this girl down soon before we run out of fuel. Is your uh...welcoming party nearing an end?\"\n\nThe three of them looked at each other guiltily. Darla looked up at the clock on the wall, \"Oh shit, time flies when you're having more fun than a hungry tick at a dog park!\"\n\nCole and Jenna glanced at each other and laughed.\n\nDarla pressed the intercom button, \"Yes Captain Jimmy we're winding things down,\" she said as she looked around at Cole and Jenna with a smile. \"We just have a little straightening up to do...\"\n\n\"Roger that Miss Darla. I'm fixin' to bring her down in 10 minutes, over.\"\n\n\"10-4, over Captain.\"\n\nThe bed spread and sheets were in disarray and covered in cum spots and sweat. Message oil was splattered around. \"Are you going to get in trouble for this Darla?\" Jenna asked.\n\n\"Hell no honey, my job is to make guests feel welcome when they come to Big-D. And your boyfriend here is definitely a VIP! I don't want to be presumptuous, but I assume you and Cole enjoyed the hospitality?\"\n\nThey all laughed loudly. \"Yeah, that was first class service Darla...I would call this traveling in style!\" Cole gushed.\n\nThey all climbed off the bed and scrambled around looking for their clothes.\n\nFifteen minutes later they were sitting in the back of a stretch limousine.\n\n\"We have a room for y'all at the Omni Hotel in Frisco. I think you'll really like it, it looks down on the Cowboys' practice fields and our new headquarters at The Star!\"\n\n\"What's the schedule Darla?\" Cole asked.\n\n\"We'll get y'all a late supper at the hotel tonight and then your press conference is at The Star tomorrow morning at 10:00 a.m. After that, you'll meet with coaches before getting a tour of the facility before heading over to AT&amp;T Stadium for another tour and a meet and greet with some of our Ring of Honor members. Meanwhile, Miss Jenna and I will be out shopping and getting our hair and nails done. We need to get her all gussied up for the dinner reception at Mr. Jones mansion tomorrow night!\"\n\n\"Dinner reception? Are you sure you want me to attend that Cole?\" Jenna asked, suddenly concerned she would be in the way.\n\n\"You fucking bet I do baby! This is going to be a very special 72 hours and I want to spend as much of it with you as possible!\"\n\nJenna blushed, \"I just don't want you to feel obligated.\"\n\nDarla took the opportunity to chime in, \"I know it's none of my business, but you two go together like shrimp and grits. Honey, trust me, you'll have the time of your life! We can't wait to welcome you both to Dallas!\"\n\nCole grinned, \"Hey Jenna, you heard the little lady, we go together like shrimp and grits, how can we possibly say no?\"\n\nFor a very brief moment Jenna thought about her husband...then she thought, \"fuck that cheater!\" \"Okay, I'm on board. You don't have to twist my arm to shop and primp all day!\"\n\n\"That a girl! We'll have more fun together than a couple of foxes in a hen house!\"\n\n\"I hope so...\" Jenna responded with a giggle. She then bit her lower lip and Cole suspected she was holding something back.\n\n\"Jenna, you seem like you want to say something, what is it?\"\n\nThe gorgeous blonde got a guilty look on her face before she asked Darla sheepishly, \"Do we have to wait till tomorrow to see you again?\"\n\nDarla looked back at her incredulously, \"You want me to join you at the Omni tonight?\"\n\n\"...well I thought if you weren't too busy?\"\n\nDarla looked over at Cole who was smiling from ear to ear. \"Fuck yeah baby, that's the best offer I've had since I got this job!\" She exclaimed before sliding over and mashing lips with Jenna.\n\n*****\n\nAuthors Note: Contrary to what some of you may believe, I too like happy endings. I hope you will read chapter 18 and the epilogue...I will release it in about a week."
    ],
    "authorname": "FifthEstate",
    "tags": [
        "kim kardashian",
        "kanye west",
        "mistress kimmy",
        "jerry jones",
        "darla",
        "mile-high",
        "pussy pie",
        "tornado in a trailer park"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/ucla-to-big-d-ch-17"
}