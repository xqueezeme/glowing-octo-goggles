{
    "title": "Sophia Pt. 03",
    "pages": [
        "Author's Notes:\n\nSorry it took so long to get Part three submitted. It turned out to be much longer than I thought. I want to thank people for all the praise that I was given for Parts one and two, and I hope that this lives up to your expectations. \n\nSpecial thanks to my new and first ever editor Yellow Peril, he did a whole lot of work on this story, with repairs and some positive additions to the story. (Yes, I did just copy that part from Part II, but it is still true so why mess with perfection.)\n\nThanks for Reading\n\nCastleStone\n\nDisclaimer: None of this is real and actually right now, you are dreaming this story. So, if it really sucks just wake up.\n\nPS. At the end of part two I wrote.\n\nI have been informed by my editor that it is sweeps week. Look forward to the exciting conclusion of Sophia in Part Three. There will be romance, sex, cooking, intrigue and comedy. Honest, would I lie to you?\n\nWell I LIED! Actually I was mistaken, but \"Well I Lied\", sounds more dramatic. The story is much longer than I planned for, and it ain't done yet. Personally I like part three better than part two, but there is more to come. There is going to be at least two more parts after this. Part four is with my editor (originally the second half of part three) and I've got half (or more) of part five done, so I hope to have the rest of the story done soon. \n\n(I lied about this too.) It is now a line in Part Five.\n\n\"Carefully she put the laser sight on Don's date for the evening. Try and steal Don, she thought. This is the end for you.\"\n\nI sincerely apologize about the delay. The end of Sophia is significantly longer than parts one and two combined thus it took longer to write. Also my editor's ISP uses drunken scotch drinking seagulls while my ISP uses beer swilling ground hogs. This has caused numerous lost emails and missing files when they do the hand off. Most recently with the part that you're reading now, it should have been posted far earlier. Of course none of this is my fault and yes, my wife really hates all the lame excuses I use around the house.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nThe next morning we were all at the kitchen table while Don was making French toast. Megan was inhaling her coffee as she turned to Robin and said, \"You tell him - I'm too sleepy.\"\n\nRobin brightly replied, \"Okay\" \n\n\"Daddy,\" she yelled.\n\n\"Yes, pumpkin?\"\n\n\"Maria, Vanessa, Kathy, and Freddie all think you're a dork.\"\n\n\"That's true, honey. But I'm a nice dork.\" Don didn't even pause while flipping the French toast.\n\n\"Well, we started a club to undork you so you can be a stud and meet lots of women. Is that okay?\"\n\n\"That's fine; I could use a good undorking. Do we have to pay anything?\"\n\nRobin turned to me and I frantically shook my head no. \"No, Daddy, undorking is free.\" All my friends had their hands over their faces at this point. I think Freddie was struggling to keep from laughing so hard that tears were coming out of her eyes.\n\n\"What's the name of the club?\" Asked Don.\n\n\"The Perfecting Daddy Association,\" answered Robin. Megan wasn't even paying attention, she just sat there and sipped her coffee like this was an everyday occurrence for her.\n\n\"That's a nice name, do we get t-shirts?\" asked Don.\n\n\"No, just ballcaps.\"\n\n\"Well, I guess that's better than nothing.\"\n\nWith those solemn words, we were now officially in business. I was beginning to think that maybe I needed a good undorking too.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\n\"&#9835; I'm a dork, I'm a dork, I'm a dork, dork, dork.\n\nI'm a dork, I'm a dork, I'm a dork, dork, dork. &#9835;\" \n\nI was half singing and mumbling to myself while cooking breakfast, the words matching music from the Lone Ranger/William Tell overture by Rossini. \n\nWhen Robin told me what Maria and her friends thought about me, my immediate thought was, \"No shit, it took them long enough to figure it out.\" Actually it did piss me off a bit because it brought up some bad memories. I must be a dork for my ex-wife to cheat on me so flagrantly for three years with my sisters helping her to cheat. Well, time to calm down. At least my new friends are going to try to undork me. They probably had some bullshit explanation planned to let me know; I'm glad that Robin just cut straight to the chase.\n\nI know that they all are doing it out of kindness, because it is probably going to be a lot of work. On the other hand, I get to take personal lessons from four ex-models; yeah I can live with that. But maybe I should burn the French toast that I serve them?\n\nI finished cooking and sat down at the table with them to eat. \"Okay, when do we start the undorking lessons and what are they?\" \n\nI, of course, cleverly waited until they all either had food in their mouths or were drinking coffee. Food and coffee sprayed everywhere and I gleefully exchanged high fives with Robin. Megan, who had been drinking coffee at the time, was the only one not to spray; she just kept on drinking her coffee.\n\nKathy choked out, \"We thought we would go skiing today, and tonight Maria would give dancing lessons again. That's part of your undorking.\"\n\n\"Sounds good to me.\"\n\nI did pretty good skiing that day. Only my daughters and Freddie chose to stay close to me. I think the others were too embarrassed.\n\nThat night I was disgusted to learn that, since I was the subject of the undorking, I didn't get a baseball cap; what a gyp! On the other hand, the hat might have read \"Official Dork\" and I wouldn't like that.\n\nKathy picked up the explanation after my lessons. \"Don, we all think you're a great guy, but your confidence really took a big hit because of the divorce. We're going to help you not only get your confidence back, but we're going to turn you into an attractive hunk. You've definitely got the potential, but there are some skills that we think you need to gain along with some slight physical improvements, but once we get those done you will be a real babe magnet. Then the four of us will start taking you out on practice dates. When we think you are ready we will get you a real date with some lucky girl. Just leave everything to us.\"\n\nWhy did this entire script start reminding me of \"Pygmalion\"? The thing that really hurt was that they were eventually going to try to get me a date with someone other than them. I was kind of really hoping that one of my new friends was maybe interested in me romantically. Who am I kidding? I was hoping that the kiss with Maria actually meant something and maybe she was in love with me. Let's get real - Maria is a rich, beautiful ex-model and I'm just a cuckolded dork. \n\nMy sisters had turned on me, all my friends had believed I was submissive and enjoyed being cuckolded, my coworkers had had so little respect for me that they didn't tell me about my adulterous wife and just screwed her themselves, the court system decided I had to know about my wife's affairs, and to top it all off and make it even worse, MY OWN DAUGHTERS believed the same things about me for a time! Cuckolded Dork is too good a name for me, something new should be invented just for me. I know if I let my disappointment and sadness show that they will just spout some bullshit to placate me. Hell, they might even give me a mercy fuck! Freddie and Kathy, with their self professed interest in sex, would probably even be willing to lower themselves to give me a mercy fuck, not that they would have any actual desire to do so.\n\nAs for Maria, there is just no way, that she could be romantically interested in me, but I'm head over heels in love with her. I'm a complete joke of a man. I've got to get over a woman that I was never involved with in the first place and I don't know how to do it! A line from a completely appropriate song came into head.\n\n\"&#9835; Unchain my heart cause you don't care about me. &#9835;\"\n\nWith that depressing refrain echoing in my head I complained about being sleepy and told everyone I was going to go to bed early. First, I needed to take a long hot shower. Only wimps cry into their pillows, but when you take a shower nobody knows. I was finally able to get to sleep about four AM after spending most of that time in the bathroom. With daughters, that is the only place a guy is guaranteed privacy. Shit I hurt! But it was my own damn fault - I had built up a fantasy in my head and let it become a possible reality in my own imagination.\n\nThe morning was absolute hell. I woke up about six-thirty. I wanted to hide in my room or go home to my apartment, by myself. I couldn't do any of that. First reason: my daughters. Second, my friends didn't deserve my rejection of them. They liked me, just none of them loved me and I shouldn't have been stupidly imagining anything different.\n\nI kept on looking at my eyes in the mirror. They looked terrible and there was just no way to hide them. I needed some heavy exercise to break me out of this funk. I took another look at the clock, but it was still way too early. Instead of hiding in my room until the last minute, maybe what I should do is sneak down to Maria's gym and work up a good sweat.\n\nSo that's exactly what I did. Normally I like to work out for two hours at a time; sometimes I'm forced by my schedule to only get in an hour. Today I was able to do three and a half, cranking weights, doing crunches and a spending a long time on the treadmill, but it did the trick. \n\nIt was Vanessa who finally found me. I guess everyone had been searching the whole house for me and she was the only one that thought to check the basement gym.\n\n\"Don, we've been looking all over for you. How long have you been down here?\"\n\nI slowed the treadmill down by a mile per hour and reduced the incline by two, so I could talk. \"Oh hi, Vanessa, I just got up a little early. I've been missing my regular workouts and I decided to hit the gym. I wasn't hiding or anything.\" Oh yes, I was.\n\n\"Well, we've got breakfast ready. Hurry up and come upstairs, okay?\"\n\n\"Vanessa, you own a gym, you know how it is. I've got to complete a cool down on the tread mill and then shower. It will be at least twenty to thirty minutes, even with rushing.\" I reduced the incline by one notch and the speed by a half mile per hour.\n\n\"Okay, be as fast as you can. I'll tell everyone where you are and we'll keep breakfast warm for you.\"\n\nMy kids came downstairs a couple minutes later to check on me. They were relieved to find me, and I felt bad for making them worry. They waited until I had completed my cool down, and then chased me upstairs to take a quick shower.\n\nWhen I got to the kitchen I found everyone was eating really slowly so I wouldn't be alone while I ate. Really nice people, they broke my heart but really nice people.\n\nOnce they spiffed me up a little I was going to have to get serious about dating women. Stop living in the past or my little fantasy world. Get hardcore serious and try my best. I really didn't want to grow old alone.\n\nWe went skiing again that day and both Vanessa and Freddie stayed close to me. Kathy and Maria kept their distance. That night there were more dance lessons and Vanessa informed me that I would start physical training in the morning.\n\nBy seven o'clock, Vanessa and I were hard at work in the gym. She began by showing my some new exercises for my stomach and chest area. They were hard, but not that bad.\n\n\"Don, you are physically one of the strongest people I know. The only people I know personally that are stronger are a couple of friends of mine that are powerlifters, and I think you could earn even their respect in terms of your physical strength. So, I hate to say this because you're definitely not out of shape or fat, but we're going to have to put you on a diet if we're going to get you looking chiseled in any reasonable amount of time.\"\n\n\"A diet?\" I asked in horror.\n\n\"I'm sorry, Don, but yes. To begin with we are going to cut your carb intake by half and I'll want you to watch your fats too.\"\n\n\"For how long?\"\n\n\"Don, I've watched you eat. You like your breads, pastas, cakes, cookies and pies. To stay chiseled, even with all the exercise you do and with your high metabolism, you will probably have to be careful with the carbs for a long time.\" I just know she wanted to say \"forever\" instead of \"a long time\". If she said \"forever\" I would have been out of there, baby. \n\n\"We won't make you start your diet until January first. That way, you can enjoy yourself.\" Well, I sure dodged a bullet there. It would have been terrible if I couldn't eat my own EXTREME BUFFET APPETIZER FEAST. No big entrees, just lots and lots of really good, really fattening appetizers &ndash; did I mention they taste really good? With food being served from about three in the afternoon until one AM. On New Year's Eve the only time I leave the kitchen is for the midnight toast. I like to keep making small batches of different foods, that way it's always hot and fresh so nothing gets stale. I also had plans to use Maria's Christmas choo choo train for the night.\n\nAfter our workout that morning we showered, had breakfast and went skiing. That night after dinner I had more dance lessons. The next day was the same routine. On the morning of New Year's Eve I took a three hour drive early in the morning to pick up some fresh seafood that I had especially ordered. I was at the store when they opened at nine AM and back to Maria's by one PM. Let the feast commence!\n\nI chased everyone out of the kitchen; I didn't want them to see the goodies until I started producing them. The first thing I did was program that train of Maria's and set it up so that it pulled all three of its big open cars. Each car was easily big enough for a couple of large serving plates. I walked the train through the virtual track that I wanted it to follow. It would start in the kitchen at its charging station and then it would go to the movie room and loop around the chairs there. After the movie room it would go to the great room to do the same thing, and then it would return to its charging station. The train had antennae feelers all over it, hit one of those antennae and it automatically stops until the obstacle is removed. So, if you wanted it to stop, all you had to do was just stick out your foot.\n\nI started making greasy, delicious food in the kitchen with a couple of my deep fryers. The kitchen would become a disaster zone, but that is the price of gluttony! I started out with one batch of coconut chicken wings and another of coconut shrimp. I had homemade mini-pizzas in the oven and I was also frying up some Italian sausage that I would slice up so you could eat them with a toothpick. Broiled kielbasa was being treated the same way while stuffed mushrooms were in a different oven. I had six ovens to work with and I was in hog heaven!\n\nI sent the first train load out with great anticipation. Sure enough, Maria timidly snuck her way into the kitchen. \"Just how much food are you going to make?\"\n\n\"You ain't seen nothing yet, Baby. I'm just getting started.\"\n\n\"Would you mind if I invited a few friends? There is going to be too much food for just us to eat it all.\"\n\n\"Go right ahead, it's your house. I certainly don't mind.\"\n\nWell, the first to arrive were Carl and his wife, Lucille. They had just gotten back from visiting their kids and grandchildren and Lucille was still using a cane because of her accident. She said hi to me and went back to the movie room with the other girls. Now Carl had brought some wonderful home brew, what a guy. It was a nice amber lager that was awfully good drinking, and we instantly became best friends &ndash; funny how these things work!\n\nHe became my assistant chef and chief bartender. I would stick food on a plate, and he would load up the train. When it came back he would unload the dirty dishes and wash them. Most importantly, when my beer got low he would pour me another. We talked about everything; some of the myriad of important things we discussed were tools, fishing, women, poker, sports, kids, and hunting. I'd always wanted to go hunting but my father got sick and died when I was too young so I never had anyone to teach me, and I never had the time to go.\n\nSomewhere along the way one of us, because of the toy train, started humming \"Chattanooga Choo Choo\", this led to the other singing it in a soft voice and then &ndash; I don't know how it happened - both of us were belting it out. \n\nMaria's kitchen is the most fully equipped kitchen I've ever seen; it even has its own sound system. I don't know where Carl got it from, but he snuck in a CD with songs from the Swing Era. Besides \"Chattanooga Choo Choo\", we were listening to and sometimes singing to (when we knew the words, and sometimes later on even when we didn't) songs like \"In the Mood\", \"Mack the Knife\", \"Sentimental Journey\", \"Ain't Misbehavin\", and \"Boogie Woogie Bugle Boy\". Occasionally we even got to dancing but that never lasted too long - Carl was a lousy dancer and he would never let me lead! I think I need another beer.\n\nWe started sending out loads of seafood like Dungeness crab clusters, mussels, clams, oysters, peel and eat shrimp, and then another load of mushrooms.\n\nMore guests arrived including Nancy and a few of Maria's other friends from the lodge.\n\nEvery once and a while someone would come in and check on me and Carl, but we were fine, half in the bag but fine. I think our singing was scaring them away most of the time, but occasionally they would stay and stare in awe or it could have been shock from the assault on their eardrums. Carl had gone back to his house earlier and brought back some great dark beer and a few more CDs. Maria's beautiful kitchen was a wreck. So what if I spilled a few things, I never spilled my beer!\n\nAt 11:45 we sent a train load of champagne back to the movie room. At midnight my kids gave me kisses, and then they kissed Maria. Maria gave me a short kiss on the lips. I got lots of kisses. It is nice to get kisses from FRIENDS, shit. Carl and I started the final cooking. When we had that done, we sat down with his last six pack and started playing gin at the kitchen table. We were pretty tanked when we finished off the last of the beer and I think I owed Carl a gazillion dollars, for some reason we were playing for a hundred dollars a point. Did you know home brew has a higher alcohol rating than commercial beer?\n\n\"Daddy, daddy?\" Megan was standing there looking concerned.\n\n\"Yesshh, baby?\"\n\n\"I think you better go to bed.\"\n\n\"But the kitchen izzs a messhh. I have to get it clean.\"\n\n\"Don, don't worry about the kitchen. Tomorrow is my regularly scheduled day for my cleaning crew. They'll clean it up.\" It was Maria looking awfully concerned with Vanessa backing her up. Carl was already gone, I didn't remember him leaving, and it's been a long time since I was this drunk.\n\n\"Okaayy sounds good.\" I staggered my way up the stairs with Megan, Robin, Maria and Vanessa waiting to catch me when I fell. But I fooled them - I didn't fall until I made it to the upstairs hallway. \n\nMegan was talking to Maria. \"Daddy hardly ever drinks; the most I've ever seen him drink was four beers in a whole day.\"\n\nI decided it was time to sing. \"&#9835; How dry I am, how wet I'll be, if I don't find the bathroom key. &#9835;\" Nah, that's no good, what to sing next. Vanessa is certainly strong for a lady. I turned my head to look at Maria and came up with the perfect song.\n\n\"&#9835; Unchain my heart \n\nBaby let me be <br/> Unchain my heart <br/> Cause you don't care about me <br/> You got me sewed up like a pillow case <br/> But you let my love go to waste <br/> Unchain my heart set me free &#9835;\"",
        "It wasn't very good singing. Okay, it was drunken mumbling and I ain't Joe Cocker or Ray Charles. But I was getting some really strange and worried looks from Vanessa. I think she was the only one close enough to hear me, must be a music critic.  \n\nThe next morning I woke up in severe pain. There was my oldest daughter looking down at me with a very concerned expression on her face. In one hand she had a mug of coffee and in the other a glass full of ice cubes. Can anyone spell revenge?\n\nShe helped me to sit up and I moaned the entire way. \"Here, Daddy, drink this,\" and she handed me the cup of coffee. Then she went in the bathroom and came back with a lumpy towel. She put the towel on my head. What a good kid, she had put the ice cubes in a towel and folded it over. It felt so good on my pounding head. I always knew I had her for a reason.\n\nVanessa and Freddie came bursting into my room; Maria was following timidly behind them. I apologized for making a fool out of myself last night and they all graciously assured me it wasn't a problem. They raved about all the massive quantities of good food that I had prepared. I only make that kind of feast once per year. I don't think the human body could handle it more often!\n\nInstead of making fun of my hangover, Vanessa and Freddie pretended like I had a valid reason to get drunk and sick. That's nonsense of course. Maria was strangely silent, and gave me some really odd looks. My behavior must have totally shocked her. I hoped I didn't screw up our friendship, I wouldn't want to be the cause of something like that, and it would devastate my daughters.\n\nThey brought me glasses of water and aspirin, then told me to go back to sleep. A couple hours later Megan came back to check on me. I was feeling better, but I still wanted to crash in bed. Before she left I asked her to put a DVD in the player for me, just something to keep me company. She picked up my DVD/CD soft file case and started searching through it.\n\n\"Daddy, would you want me to put the movie Houseboat in the player?\"\n\n\"No Baby, I'm done with that one, I've watched it enough to last me the rest of my life. I think there is an Abbot and Costello movie in there, put that in please.\" She looked at me really oddly, did as I requested, kissed me and left the room.\n\nI spent the day physically and emotionally recovering. My girls and my friends watched movies; there were no dance lessons that night.\n\nThe next day I got up bright and early to hit the gym. Vanessa joined me about an hour later to supervise and get her own workout in. I'm perfectly satisfied at being able to bench three hundred and sixty pounds, but Vanessa seems excited at the chance to train someone to lift some serious metal. I'm a little worried at what I've let myself in for with her as a trainer. Nothing against powerlifters, but I will have to buy some new shirts if she pushes me too hard. For the next four days I exercised in the morning, skied for the remainder of the day, cooked dinner and then had dance lessons. I was kept pretty busy. The only thing that truly sucked was that low carb diet Vanessa put me on. Then my own flesh and blood turned traitor and they both agreed to make sure that I kept on the diet.\n\nMaria rode back with us on Sunday. She and my girls played Yahtzee for almost the entire trip.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI was really worried; Don reacted to the PDA a lot better than I thought he would. He acted a tiny bit odd for a few days but he didn't seem angry at all.\n\nI can't believe all the food that he made for New Year's Eve! And then he and Carl got so drunk &ndash; I think guys need to do that now and again. I suspect he was worried that I would be mad at him; he was extremely polite for the rest of our time in the mountains. To keep him on his toes, I acted coolly toward him, too, that way when we get together again in the future he won't repeat that drunken behavior very often. Am I good at this game or what?\n\nOn Wednesday I went to his apartment as usual - I even got there a little early and let myself in. My girls were thrilled to see me and we had a long conversation about their mother. I was happy with what they were doing about her, but I was a little jealous, too. Nonetheless, they were right and any improvement in their relationship with their mother was really the best thing for them and her. I was just going to have to share them. I could live with that. It was the right thing to do and I needed to adjust my expectations about my relationship with my girls. They were still my girls, but they were Barbara's, too, and I couldn't replace her as their mother. I keep telling myself that half of something is better than all of nothing.\n\nWhen I went into Don's office to see his new chair it still hadn't been delivered. I was going to have to call that company and tell them to get a move on. I was there so early that the girls were able to bring me to meet Ken, the designer of my jewelry. They actually took me downstairs to Don's workshop; Ken was busy working on a few other pieces.\n\nIt was soon obvious to me that Don was right, Ken was out of work. It struck me as ridiculous that so talented a young man couldn't find a job. He was trying to make a go of it by selling custom jewelry and by selling cheaper stuff at street fairs. But materials were costly and he couldn't afford all the tools. He pointed out that, without Don's support and workshop, he would be quickly out of business. It turns out that Don had given him an additional month free rent as well as a check for five thousand dollars since my friends and I were so pleased with our gifts.\n\nI told him that I might be able to help him, but I would need to check on a few things and call him back so we exchanged cell phone numbers. I normally don't wear bracelets, but I was impressed by the ones he made for Freddie and Vanessa so I decided to ask Ken to make a bracelet matching the pieces he already made for me. It would be a bargain and he needed the work.\n\nAfter talking with Ken, my girls and I headed back upstairs to wait for Don. Boy, did he arrive with a glum expression - must have been a really bad day at work.\n\nOn the way to the therapist I told him my idea about helping Ken. He was impressed by my stroke of brilliance, and complimented me by saying I was always so helpful to my friends. Don was more than willing to help with my plan for Ken. Now I just have to enlist Freddie's, Vanessa's and Kathy's help.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nIn a secret location, startlingly similar to Freddie's studio, especially with all the art supplies lying about, the PDA Secret Security Directorate was meeting. They were so secret that not even the President of the PDA knew about it. The blonde haired head of the Directorate, who used the code name Sister D-day, turned to her subordinates.\n\n\"That was agent M on the phone, things have gotten bad. The only music that Don listens to; is that same damn song over and over! Plus, he's thrown out the Houseboat DVD. The situation is getting critical.\" She turned to the red-haired member. \"Sister Flounder, should we reveal these things to Maria or keep quiet?\"\n\nSister Flounder grimaced at her code name, but all the other members had insisted on this nonsense so she went along with it. At least it would make for a good paper in support of my doctorate, she thought.\n\n\"If we tell Maria, I see two equally likely possibilities. One, she still sees herself as the Great Scarlet Woman who is unworthy of Saint Don and says something dumb like, 'Oh this is probably for the best.' Two, she goes to him, rips his clothes off and they don't leave bed for a week. On further consideration, since Maria is acting like an idiot, I would have to say that option one is the more likely. I wish we had had more luck quashing that damn cruel nickname of Maria's that's resurfaced. If we push too hard with people in her social circle to stop using it, they will just start using it even more by reflex. Those shitheads know how much it hurts her and they also know how kind and generous Maria is! They think that, since they never use it to her face, she doesn't hear it. Then they wonder why she doesn't socialize with them as much as she used to, the morons!\"\n\nThe dark haired Sister Bluto remarked, \"Well, shit, what are we going to do?\"\n\nSister Flounder replied, \"Put more pressure on Maria, try to lift Don's spirits and keep all other women away from Don, so Maria has time to grow a brain.\"\n\nSister D-day rose to her feet. \"And that is what this Security Directorate was created for, to keep all other women away from Don. Let us remember that they are both our friends and if Don falls into the clutches of another woman, we might never have THE PIE again.\"\n\n\"Let us now close the meeting with the&hellip;&hellip;\"\n\nSister Flounder spoke firmly, \"I am not doing that stupid secret handshake again - it is embarrassing and obscene. You two have twisted minds, and if you keep it up I'm going to tell Megan and Robin!\"\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nAnother weekend at Maria's house. Freddie and Kathy had called me in a panic for some reason and begged me to bring THE PIE. They're good friends so I brought two. I've given them the recipe; I don't know why they don't make it themselves.\n\nSame old, same old weekend. Friday night we have dinner and the girls watch movies. Saturday, exercises in the morning, breakfast, ski during the day, dinner, dance at night until we get tired, then the girls watch movies and I go to bed. Sunday, exercise in the morning, breakfast&hellip;&hellip;\n\nHold on, Vanessa is speaking to me. \"Don, I was thinking - you work right by my gym. If you're not busy on Tuesdays and Thursdays you can stop by after work and work up a sweat. You would make a lot more progress that way. I know you are exercising at home, but this way would give me a chance to alter your exercises as needed for maximum effect.\"\n\n\"That sounds good, but your gym is a ladies only club. Won't this cause you trouble with your clients?\"\n\n\"No, I occasionally do have men there. If a client objects, then you might have to leave. But that has never happened before. While they do pay to come to a women's only club, they don't seem to mind having a man there every once and a while.\"\n\n\"Okay, then I'll see you Tuesday after work. Would seven PM be okay?\"\n\n\"That would be fine, Don, see you then.\"\n\nSo Tuesday after having dinner finds me following Vanessa's directions to her day spa and gym. Upon arriving I'm suitably impressed; it is a lot bigger than I thought it would be. \n\nAs I walk through the doors I see a display set up for \"Ken's Jewelry Creations\" with pictures of Vanessa, Freddie, Kathy and Maria modeling his work. There is a small stack of brochures, a card holder with his business cards and a website listed. I had created the website for him. Heck, I had improved and updated Vanessa's business website and created one for Freddie's studio, too. I understand that Freddie has the same display for Ken set up at her studio, which has worked out even better for Ken than the display here. Besides her traditional painting, which is fantastic in my opinion, Freddie's main source of income is her body art, tattoos and body painting business. A lot of people who like body art are also into custom, one of a kind jewelry. Maria does have some good ideas.\n\nVanessa is already waiting for me at the receptionist counter. \"Hi, Don, any trouble finding the place?\"\n\n\"No, not at all. I'm really impressed; your club is a lot bigger than I thought it would be.\"\n\n\"That's because we have a full size pool and very few operations like ours have them. I think swimming is one of the best exercises available, especially for our older clients. It was a huge added expense at first, but now it is one of our biggest draws.\"\n\n\"Boy, do I feel dumb. I thought you were a much smaller operation and, in a way of apology to your female clients, I thought to bake some cookies. Pretty stupid, huh?\"\n\nVanessa perks right up and so does her receptionist and two customers at the counter. \"I wouldn't say that, Don, and it is pretty sweet thought, literally. I thought I smelled cookies when you came in. How many do you have in that box?\"<br/>\n\n\"Three dozen chocolate chip and three dozen white chocolate and macadamia nut.\"\n\nI put the box on the counter and open it up. Now all the ladies are leaning over it and making sounds of desire. The receptionist asks me if she could have one.\n\n\"They're Vanessa's cookies, she gets to decide.\" Vanessa nods her head and everyone there reaches in to grab a cookie.\n\n\"Don, I think you are rapidly going to become the most popular member here.\"\n\nI have to use Vanessa's office to change. She then puts me through an intensive workout. Frequently, during that evening, ladies at the club stop by and thank me for the cookies. \n\nThere is method to my madness, now that my stupid fantasy had been destroyed when I finally found out that Maria actually didn't have any romantic interest in me at all, and her friends didn't either. I am going to take advantage of every opportunity I get to meet women. Maria and her friends like my cooking; I figure I can use that to break the ice with other women. But I won't move too aggressively yet, I will wait until I get to be almost a regular here, then I'll start to casually converse with some of the available women at the club. As Maria has said, I am a dork; I am going to use this as a learning experience. If I don't meet an appropriate woman here, I'll use the knowledge I gain for the next time. Enough of this sitting passively in my apartment!\n\nI get in a good work out at Vanessa's club, except she keeps pushing me to lift more weight. I finish up with an hour and a half on the treadmill. Call me a wimp but I hate running on anything but a treadmill, it is so much easier on the knees and feet and, on top of that, it is more comfortable in a climate controlled building. When I am done, Vanessa offers to stand guard while I use the shower in the locker room, but instead I just drive home in my sweats.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..\n\n\"Sister D-day this is Sister Bluto, Don just left here and he brought cookies. I told some of my trusted clients about Don and they made sure to greet him with a lot of warmth. But you know Don, ever the gentleman.\"\n\n\"Did you save me any cookies?\"\n\n\"I tried, but by the time I got back to the box it was empty. Not even crumbs were left.\"\n\n\"Damn, no cookies for me and too many of the women at your club have now eaten his baking. You better be careful - you probably have at least a couple of foodies, perhaps more, at your gym. He's a good looking guy that can cook and bake like nobody's business. To a foodie he is USDA prime marriage material, watch him. If you see any members of your club licking their lips when looking at Don, call me. We might have to scrub operation 'Boost Don's Ego at the Gym'.\"\n\n\"It could have been worse, just think what would have happened if he brought THE CAKE or THE PIE to my club. We would never have had a chance. He probably would have been given thirty or more phone numbers, and some of them written on panties! Hell, I could imagine some of my members kidnapping him. I've got this one chocoholic; she's rich, built like a brick shit house, and she works out constantly because of all the sweets she eats. That girl would have grabbed Don and had him on her Daddy's jet to Vegas and into a wedding chapel after just one taste of THE PIE. I've made arrangements with her trainer to encourage her to use the pool whenever she and Don are here at the same time.\"\n\n\"Yes, we might have made a grave error in suggesting to Don that he work out at your gym. But, we could never have guessed that he would bring food. It almost makes me think that Don is setting out deliberately to meet and entice women, but that would be a radical change in his behavior. We can't back out now; it would be insulting to Don. Do your best Vanessa. If I can do anything to help, call me.\"\n\n\"Thanks, Freddie, I just might have to call on you. Both you and Kathy are members here and it might be necessary for you both to change your work out times to help me keep an eye on Don. I'll let you know if that has to happen. This is Sister Bluto signing off.\"\n\n\"'Bye, Sister Bluto, and remember that the next time Don brings food you had better save some for me and Sister Flounder. She may act like a sex-starved intellectual sometimes, but she is only one step below being a foodie herself. If she finds out you didn't save her any cookies, she will be giving you grief for weeks!\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.\n\nThe next couple of months settled into a routine. On Mondays I saw my therapist, Tuesdays and Thursdays I spent at Vanessa's gym. Every Wednesday Maria came by and we took my daughters to their therapist. Friday through Sunday we were at Maria's home dancing, exercising, skiing and pigging out. The only variation was that on some Wednesday nights, after the therapist, Maria would give us dancing lessons instead of watching movies or playing games with my girls. Though, it was a real pain moving furniture to make an area big enough to dance in.\n\nAt the end of January I had a secret meeting with Ken, and I was almost too late in placing my order. His business was doing very well, but he promised to get my requested job done in time.\n\nOne particular Wednesday Maria spent the entire afternoon at my apartment. She had gotten frustrated with waiting for her Christmas present for me to be delivered so she arranged for the delivery on her own and waited at my apartment to receive it. It was a really nice surprise when I got home. Maria is always so kind to her friends.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..\n\nI was so ticked, Don had some problems at work that really confused our travel plans for February twenty-first and I couldn't ride with my babies to my mountain home. To add insult to injury, Vanessa, Freddie and Kathy teased me unmercifully for the entire ride. I just knew this weekend had better get better, or I was damn well going to have to kill someone.\n\nIt got even worse! Don twisted his knee so he couldn't ski for the whole weekend. I wanted to stay home and nurse him, but everyone insisted that the rest of us had to go skiing. When Megan and Robin gave me their big-eyed \"Pleease\", I just had to surrender. But, if Don's knee were hurt, he had to stay off it and that meant he needed someone to take care of him; I wanted that job but they wouldn't let me have it. With friends like that, who needs enemies?! I insisted that he at least let me call Lucille over to cook dinner for us, and he reluctantly agreed. Why did he seem to be secretly pleased?\n\nMy time on the slopes almost made up for my disappointment. Megan and Robin were so affectionate and playful, and it would have been just perfect if only Don were there with us.\n\nWhen we got back from skiing, the house was full of wonderful smells. Lucille was at the door of the kitchen almost literally standing guard. Don was sitting in the living room with his leg up when we walked in.",
        "\"Hi Maria, Freddie, Vanessa, Kathy and my little dew drops from heaven. Did you all have a nice time skiing?\"\n\n\"Yes, but we're starving!\" I answered, as everyone else scurried upstairs. They must have been really hungry and anxious to get cleaned up and back downstairs to eat. I quickly ran upstairs after them; I didn't want to be the one causing a delay in dinner being served.\n\nWhen I came back downstairs, Megan and Robin were waiting for me. They said that, because Carl and Lucille were here, it had been decided that we would eat in the dining room. They kind of hinted that they wanted to eat there too. It was pretty fancy and I hardly ever used it, but if my babies wanted to eat there I wasn't going to argue.\n\nThe house was full of such wonderful smells that it seemed like someone had prepared a feast. The double sliding wood doors to the dining room were closed. Why was that? Megan took one door and Robin the other, then they slid them both open at the same time, leaving me in the center.\n\n\"HAPPY BIRTHDAY, MARIA!\" Noise makers went off, people were clapping and there was huge banner and balloons with my name on it!\n\nBesides the people that I expected, my friends from the lodge were there, and even Richard, my ex-husband. He was smiling broadly and clapping just as hard as everyone else.\n\nMegan and Robin got on either side of me to give me a big hug and they both said at the same time, \"Happy Birthday\".\n\nI looked to Don, and he had noise maker in his mouth and was giving it some toots, but for some strange reason I thought he was a little sad.\n\nThe table was groaning with food. There were two huge garlic encrusted prime ribs, Yorkshire pudding, Dungeness crab, saut&eacute;ed spinach, asparagus, rolls, pasta with garlic and olive oil, Italian sausage, shrimp scampi and mashed potatoes. We were going to be eating food for a week! On the sideboard was a massive CAKE, already decorated with candles.\n\nThis was the absolute best birthday I've had since my parents died. It was wonderful having a family! I was so happy that my eyes were constantly leaking tears. Megan and Robin sat on either side of me and had to keep encouraging me to eat. Don's eyes seemed to be a little wet, too, and his appetite didn't look to be that good either, Hmmm. \n\nAfter dinner the cake was brought before me with all thirty-five candles lit. The cake read, \"Happy Birthday Maria, We All Love You.\" I pulled in Megan and Robin really close to help me blow out all the candles, and I knew I would need help with the forest fire in front of me! On three we all blew and cameras went off. I think the tears from my eyes helped with extinguishing the flames.\n\nIt was decided that, since we were all too full, we would save the CAKE for later. Then it was time for me to open my presents. I got some lovely and thoughtful gifts from everyone, but when it was time to open the heavy, small box from Don, Megan, and Robin, I did so with both trepidation and a secret plea that it be as wonderful as the gift I got for Christmas.\n\nIt was a platinum and diamond broach, matching my earlier pieces. I slowly turned it over, to see if there was an inscription. \"To Maria, thank you for coming into our lives. All our love Megan, Robin and Don. 2/26/09\" \n\nIt was so wonderful that I completely lost it. My girls both hugged me and all my female friends gathered around to comfort me and share my joy.\n\nThat night we danced and played games till almost eleven. Then all us women folk settled down in our jammies to watch chick flicks while the men catered to us. Nancy and Lucille in particular seemed to be having a good time. The cake was finally cut and we started to pig out once again!\n\nThe men stayed in the kitchen playing cards until about three. During the night, besides the cake and ice cream, they served us pizza, stuffed mushrooms and homemade French fries. Finally, the men all went to bed. Shortly after that we all fell asleep, too, on the various couches, chairs and recliners in the movie room. Throughout the evening Robin and Freddie had been taking a great number of pictures, and I would have to be sure to get copies to help me remember this magic night.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.&hellip;.\n\nI finally got to meet Maria's ex-husband, Richard. He seemed like a great guy. The first thing that he did was apologize to me about the invasion of my privacy that he had instigated with his investigation. He explained to me how Maria was like a sister to him that he had to do everything in his power to protect. I accepted his apology and assured him that I fully understood. \n\nWhile cooking, drinking Carl's beer and cooking some more, I learned a lot about Richard. It turns out, that years ago while Maria was still a model, she had been using a particular financial/brokerage firm to handle all her money. Richard was a junior employee at the firm and was used as basically a messenger between the decision makers at the firm and the holders of the smaller accounts, such as Maria. While Richard was there, the old management team got replaced and the new team started making decisions that he didn't agree with. He knew that it could cost him his job, but he always got on well with the customers that he dealt with and didn't want them to suffer, so he started giving them warnings and advice about what to do.\n\nSure enough, the company got into trouble. The senior management didn't want to accept the blame, so they very publicly stuck Richard with it and fired him, thereby completely destroying his reputation. I knew from Maria that Richard was an orphan and that he didn't have the most impressive academic credentials; he simply hadn't been able to afford the better schools. He was in dire straits, he had very little in savings, and it looked like that he would never be able to find a job in the financial sector again.\n\nMaria and others that had followed his advice had come out of that financial fiasco without any harm at all. Later, when she asked at the firm about Richard, she was told that he had been let go. She had immediately asked for a cashier's check for her funds and went looking for him. She found him in his cheap apartment going through the want ads. Maria first asked and then convinced him to start managing her money, explaining that he was the only person that she would trust with her life savings. Then she went out and dug up some of the other clients that had dealt with Richard and got them to join in. She was careful how she did it, not wanting to get Richard in any trouble with his former employers. Since these were all smaller account holders, and not very numerous to boot, his old firm barely noticed their withdrawals. However, for Richard it was more than enough to start his own company and he was actually able to pay himself more than he had been making before.\n\nOver the next year and a half Maria and he became quite close, especially after the death of her parents. He admitted that it was a mistake that they got married; they did love one another, but more like a brother and sister than spouses. Eventually they admitted the truth to one another and had an amicable divorce. For some reason he warned me about treating Maria right, saying that she was his only family and it was his job to look after her. I shrugged it off, it was not like I was ever going to harm or marry Maria.\n\nWe talked a lot about financial matters and investing. He impressed the hell out of me; he was probably the only financial expert that I would ever trust any of my savings with. I mentioned some of the custom programs that I had developed and used to track and research my investments, and he expressed some interest in seeing them. In turn, he gave me some good advice about other data sources that I could use to make safer investments and make my programs more accurate.\n\nPersonally, at the end of the night I thought all the information he had given me was only provided as a distraction. He and Carl cleaned my and David's (one of Maria's friends from the lodge) clocks at pinochle! As an appropriate revenge, I made sure that David and I got the last two of Carl's beers.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.\n\nOn Wednesday, Maria came by as usual, but we hadn't warned her that we had canceled that night's therapy session. It was decided by my daughters and me that we had to celebrate Maria's birthday closer to the actual date, which was tomorrow.\n\nWhen Maria arrived, we had the banner hung, and balloons and cake were on the table. I figured they had to be sick of chocolate, so I made a white cake with raspberry and lemon filling.\n\nShe got all teary eyed again and insisted that Megan and Robin sit closely by her at the table. For dinner I served that Korean pork dish that they liked so much.\n\nAfter dinner was gift giving time again.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..\n\nThey were giving me another party. I wanted this! I wanted them! I wanted to magically transport the four of us, to someplace where we could start new lives together and forever. After dinner and after blowing out the candles on the cake, I was presented with even more presents. I got toys! No one has given me toys since I was a little girl, it was such fun! They gave me four Nerf guns - two big ones and two little ones with holsters and lots of ammunition. Then Megan, Robin and Don reached behind the couch, opened up cupboards, and got out a whole bunch more Nerf guns with holsters and slings. They were some of the craziest looking things I've ever seen! Megan had a big gun that looked like it had a belt going into it. Robin stood in front of me, pumped her gun and said with an evil grin, \"Do ya feel lucky, punk?\"\n\nOh, the battle was so on! Sides changed constantly, we ran all over the apartment fighting and even took the war down into the basement. At one point Don and I found ourselves on the same side, and we found ourselves defending the kitchen. By that time we had gotten hungry again and needed a snack, but just as we got the food on the plates, my girls launched a vicious attack with some weapons that Don didn't even know they had, and we were chased out of the kitchen. And to make our defeat more complete, Megan and Robin loudly ate the snack, we had just finished preparing for ourselves! Don and I retaliated by setting up a crossfire outside the hallway leading to the bathrooms and bedrooms. Finally, on the evening of February twenty-fifth, a peace treaty was signed, ending the great Nerf Battle of Don's apartment. It was a long a bloody campaign, and I can only pray that it will never happen again until we do it at my mountain home. I have just got to find a gun that holds more ammo first, though!\n\nWe watched movies that night, but only small single shot Nerf guns were permitted, and they were only to be used in self defense per the accords in the treaty!\n\nThe next morning, on my actual birthday, I was sung Happy Birthday at breakfast and I got lots of hugs and kisses from my babies and even a polite kiss from Don on the cheek. Damn it, I wanted a kiss on the lips and for him to suck my tonsils out!  But it was still a wonderful birthday week.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nWhen the big change in my life came, it started at Maria's during Saturday night's dinner. I remember that during that day, while skiing, I witnessed quite a few seemingly fierce discussions between Maria and her friends. My daughters seemed to know what was going on and they seemed to be quite tickled by the situation.\n\nThat night Vanessa spoke to me at dinner. \"Don, you've been doing quite well with your dancing lessons lately and we've decided it is time for your first practice date.\"\n\n\"Does that mean that I've been officially undorked?\"\n\n\"No, you're still partially a dork, but we love you anyway,\" Freddie answered with a grin.\n\n\"There's a good dinner and dance club that opened a couple of years ago, they specialize in ballroom dancing and they have a small live orchestra on Thursday, Friday and Saturday nights. Instead of coming to my gym this Thursday evening, let's go there for dinner and see what you can really do on the dance floor.\"\n\n\"Vanessa, that sounds like fun, but don't places like that have overpriced mediocre food? I would much rather cook you dinner at my apartment. I'll make you whatever you like and we can still pretend to be on a real date there and at the dance club. How does that sound?\" Vanessa's eyes lit up when I told her that I would make her whatever she wanted. If I were going to practice my new method to successfully meet more women, I figured that I had better include cooking, too, just to be complete.\n\n\"Why, Don, I think&hellip;.\" She started to say, but she was suddenly interrupted by Kathy, who was looking surprisingly fierce.\n\n\"Hold it right there! We agreed that you could go first, Vanessa, but none of us knew that Don would be cooking for his first practice date. I think we have to revisit this issue!\" The other ladies seemed to be ready to chime in so I figured I had better defuse the issue.\n\n\"I'm flattered that you all like my cooking. You all know what I think about restaurant food; I would be happy to cook for all my practice dates, rather than spend big money on so-so food. You tell me what you would like, and it would be my pleasure to make it for you. Anything that I've made you already, except for THE TURKEY, please, that takes too long.\" My statement seemed to settle them all down and give them big smiles, except for Maria. She still seemed to be a tad upset.\n\nOn Thursday, Vanessa arrived at six-thirty. I had prepared prime rib, Yorkshire pudding and THE PIE.\n\nI wanted to play the scene for a laugh, since it was only practice, but she had insisted at Tuesday night's workout that I play it straight.\n\nWe exchanged polite kisses at the door. I like kisses from pretty women, even if they are just friendly, polite kisses. Before dinner I showed her around the apartment. Since she had never been inside before she seemed to be mildly surprised when she saw Maria's, I mean the guest bedroom.\n\n\"Vanessa, you really look beautiful tonight.\" She was wearing a short red dress, perhaps too short, but I wasn't going to complain.\n\n\"Did you notice I'm wearing the jewelry you bought me?\" She stopped to wave her bracelet in my face. \"I get so many compliments for these pieces, thanks again for such a lovely gift.\"\n\n\"I don't deserve much of the credit, Vanessa. Ken was the one who really came through for me. I'm just overjoyed that you, Maria, Freddie and Kathy are so happy with them. You've done so many wonderful things for me and my family. For example, what you're doing for me tonight is very generous, and I will have to find some way to repay your kindness.\"\n\n\"You're making dinner and paying at the club is thanks enough, Don. I do get to take the left over PIE home with me, don't I? Her question seemed to have an implied threat to it. I assured her that she could indeed take THE PIE home with her. Years ago I had foolishly made too many of THE PIES for myself and I had gotten a little burned out with them. Currently I was working on a variation of a lemon meringue pie; I wanted something that would hit with all the power of a good glass of lemonade, made with fresh real lemons, but so far no success, though.\n\nI like to serve fruit preserves with my Yorkshire pudding, just for a change; I offered cherry-almond butter. At first it was a bit uncomfortable being alone with Vanessa, but once she started eating, the predator emerged, just like the tiger on her bracelet. I didn't know that tigers liked cherries!\n\nBoth Vanessa and I really enjoy having healthy bodies with lots of endurance, but we never have as much time as we would like during the week to work up a sweat. I was amazed; I thought we had expended every available topic concerning physical activities during my work outs with her, but we found lots of new things to talk about like hiking, bicycling, scuba diving and sky diving. I hadn't been scuba diving in years and I really missed it; as for sky diving, I've always wanted to try it. I think that Vanessa started hinting with me about going on a dive vacation to Hawaii, the Florida Keys or the Cayman islands and it almost seemed like she had some romantic thoughts about me. No, couldn't be, just because she's a woman I think that way; she probably just wants a dive buddy.\n\nVanessa ate three big pieces of THE PIE after dinner. I couldn't believe it after how much prime rib and Yorkshire pudding she had just eaten. Sure enough, just before we started to leave the house for the club, she suddenly got a distressed look on her face. I had pretty good guess what was causing it too.\n\n\"Don, could I use your bathroom, just for a minute?\"\n\n\"Vanessa, please don't think I am rude, but you just ate a huge meal so don't rush yourself. I want you to be comfortable tonight. It's okay if you take an hour or even more. The only thing worse than having an upset stomach; or being stuffed to the gills and having to use a dirty public restroom, is having no bathroom at all. I'm going to take a quick look at my computer while I'm waiting; you just take your time.\"\n\nA look of relief spread across her face. \"Thank you, Don,\" and she sped off for the main bath. I didn't really need to use my computer, but I wanted her to know that I wouldn't be twiddling my fingers while she warmed the toilet seat in the bathroom. Maybe I should have offered her a magazine?\n\nShe was in there for forty minutes. I know my cooking didn't make her sick, she just ate too much. When I heard her leave the bathroom, I pretended to be hard at work on the computer; I didn't want her to be embarrassed. Her footsteps came hesitantly down the hall.\n\n\"Don, are you there?\"\n\n\"I'm in my office, Vanessa, sorry I lost track of time. I was just looking at the latest tool sales. There's a new joiner that I've been thinking about buying, but the thing is never on sale.\" When she came into my office I could see an embarrassed expression leave her face. I clicked off the computer and stood up.\n\n\"I'm ready to go.\" \n\nWe walked out to her car; it was a Mustang GT500, white with red racing stripes. I'm a guy who always picks function over form. I would rather have a minivan, which I can pack to the gills, than a sports car. But after seeing Vanessa's new ride I thought I might have to change my priorities. I was in complete lust with the car! \n\n\"I hope you don't mind me driving, Don, but this club is a bit tricky to get to and I know the best places to park.\"\n\nAs I settled into the passenger seat I said, \"Driving is not something that I enjoy; it is something that I do because it is necessary. I could live very happily being chauffeured around for the rest of life. Especially like right now, I am in a hot new sports car being driven by a fantastically beautiful lady. Forgive me for being such a male chauvinist pig, but this is great!\" I grinned at her.\n\n\"You are forgiven, silly man. I've just had a great meal and I've got half a PIE left. For all that I'll even let you fart and stink up my new car,\" she grinned back at me. Her joke might have been a little crude, but we were work out buddies. I can't even count how many times one of us was busting a gut with some exercise and suddenly we would cut loose with a real stinky one. You've just got to laugh, farts happen. Sometimes it was so loud it sounded like a drive by farting, ha ha. Oh man, was that a bad pun or joke or whatever!",
        "The club was busy, but it wasn't packed because it was a Thursday night. That was nice because that meant we had lots of room on the dance floor. My waltzing had improved enough that I wasn't ashamed, but I was still a beginner when it came to the Tango, and forget the other stuff. Since Vanessa was my primary practice dance partner, we put on a good showing on the dance floor. That short red dress came close to giving me a heart attack on more than one occasion, especially when she went into a twirl. Maybe Maria is a better dancer, but for this crowd Vanessa was pretty hot stuff and she was collecting a huge group of admirers.\n\nWhenever we sat down, someone would almost always come over to the table to chat. Even the owner stopped by; Eva was a nice person. She is only a year or two older than I am and already owned such a successful establishment. We ended up staying until midnight even though we had originally planned on remaining only until eleven. We were having such a good time that we decided to stay until closing. In fact, almost everyone there stayed until about the same time. When I tried to settle up our bar bill, I was told that everything was on the house. I left a big tip for our waiter, though. While I was getting our coats, I noticed Vanessa having a last brief conversation with Eva. Eva handed her something and then walked away.\n\nVanessa was almost bubbling on the ride back to my apartment. \"We knocked them dead tonight, Don. You done good!\"\n\n\"Huh? What are you talking about?\"\n\n\"Boy, you really are unobservant, aren't you? Why did you think everyone was staring at us? Why do you think that everyone was coming by our table to chat?\"\n\n\"Because you're beautiful and a great dancer, why else?\"\n\n\"Well, thank you for the nice compliment, but that is only part of the answer. You're pretty good looking yourself now; in fact you're more than a bit hot. You didn't notice; did you, that over half the people that visited our table were women? We looked pretty good on the dance floor. You don't know many dances or moves yet, but what you do know you've got down cold. On top of that, we were obviously having a blast on the dance floor. That kind of thing is infectious; why do you think everyone stayed until closing? We made the place exciting. The owner put all our drinks on the house tonight because she knew we were bringing in business. In fact, she gave me a couple of VIP cards as we were leaving. We've got special parking privileges, no cover charge and a ten percent discount on everything. I've been here many times, Don, with some pretty good dancers, and I've never been treated this way before. You like your old movies, Don &ndash; well, for tonight we were Fred Astaire and Ginger Rogers.\"\n\nI was more than a bit blown away by Vanessa's enthusiastic speech, but I was certain she had it wrong. You don't go from being a cuckolded dork to Fred Astaire in a few short months. But at least I didn't embarrass myself and that is something to be proud of.\n\nVanessa dropped me off at home and then drove off to her own apartment. For a work night we had been out awfully late.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI was so upset I couldn't do anything but cry and pound the pillows on my bed. The first person to have a private dinner at Don's apartment should have been me! The first person to take Don dancing should have been me! It will be only worse if Vanessa and Don have a great time. And it was my own damn fault. I was too cowardly to take him on a practice date, what if someone I knew saw us and called me that horrible nickname? I was just too well known in Seattle's social scene. Why did I have live down to my old reputation after my divorce from Richard? People had forgotten the old me. With Robert, that asshole, he had his own sexual skeletons in the closet and hadn't dared cast stones. But with Saint Don, I would be too ashamed if he found out.\n\nVanessa, Kathy and Freddie were right, for the benefit of Don's ego, he had to go out and see how much progress he has been making. BUT IT SHOULD HAVE BEEN ME! IT IS SO UNFAIR! And I broke down again, sobbing into my pillow.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;........\n\nVanessa got back to her own apartment and she was completely beside herself. She didn't know what to do. The evening had been almost magical, even with an upset stomach caused by her gluttony. And Don had been so sweet and considerate about it, pretending to be busy on the computer.\n\nShe started to dance across her apartment floor, pretending to be once again in Don's arms. In her head she heard the music again and danced two complete numbers. But then she suddenly stopped.\n\nThere could be trouble at that dance club. So many of the women there had been looking at Don with hungry eyes, and Eva, the owner of the club, could very well be the worst of the bunch. Don had let something slip about being only friends with Vanessa and when Eva had sought to confirm that with her, she had to reluctantly admit the truth. That was why Eva gave them two VIP cards, one for her and one for Don so they could use them separately. But Vanessa had kept Don's card and hadn't given it to him. Better to keep temptation away, she thought. There had been something in Eva's eyes when she looked at Don, which I hadn't liked one little bit.\n\nBut, Vanessa had to admit to herself that she had been bad, too. She had strongly hinted during her dinner conversation with Don about how she would enjoy going on a dive vacation with him. She could easily imagine walking down a tropical beach with Don, hand in hand. Stop it, stop it Vanessa, she told herself, you promised Maria. She deserves the first shot at Don. Remember the way that Don has his guest bedroom set up for Maria? Don't go poaching!\n\nShe started to idly caress her jewelry and thought, but Don had bought me such an expensive and wonderful presents for Christmas. A dive vacation to maybe Hawaii would really not be all that expensive and I really should repay him with a gift of equal value. It would only be fair, just a couple of work out buddies going on a dive trip together&hellip;&hellip;&hellip;.. Hell, that is a TERRIBLE lie to tell myself, good thing I'm so easily fooled.\n\nRunning to her computer, she signed onto her favorite travel sites and started to investigate available dive packages.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..&hellip;&hellip;.\n\nI had everyone meet at Don's apartment for the drive to my home. I wanted to be sure to that I would be riding with MY Don (the hell with farting around about it!) and my girls. I was done with denying the truth to myself. Somehow, someway I would make Don mine. I would continue to go slowly, and I didn't care how long it might take, but he was going to be MINE. Vanessa was supposed to be driving my SUV with Kathy and Freddie as passengers, but at the last moment Vanessa switched out and Freddie drove. I almost objected, but stopped myself; Freddie wasn't that bad a driver and I was fully insured. Time to calm down, I'm with my family.\n\nAs I got in Don's SUV, I was more than a bit disconcerted. Vanessa had kept giving Don glances, filled with a little too much tenderness, in my opinion. I hoped it was only my paranoid imagination, but I couldn't be sure.\n\n\"Don, how did your practice date go with Vanessa?\"\n\n\"Vanessa said that it went very well, but I'm not so sure, she might have been saying that just to boost the old ego. I'm pretty confident that I did nothing embarrassing and, for my first practice date, that is good enough for me.\"\n\nI didn't know how to react to his answer. IT DIDN'T GIVE ME ANY INFORMATION, DAMN IT! Vanessa could indeed by lying to protect Don's fragile ego or Don could be vastly understating things because of his low self esteem!\n\n\"What did you do?\" Let's see him dodge that question!\n\n\"We had dinner, and then we went dancing, just like we planned,\" Don said with an absent minded shrug to his shoulders. I'm going to have to kill him! Thankfully, I was saved from a long prison term by my two allies in the back seat. Don's ambivalent answers seemed to be driving them insane, too!\n\n\"Dad, you're being too much of a dumb man! We want specifics, and if we don't get them we will make you sorry.\" Megan stated forcefully.\n\n\"Yeah, Daddy, give us all the juicy stuff, or no kisses for a month!\" Threatened Robin.\n\n\"It was just a practice date with Vanessa, for Pete's sake! Don't make a big deal about it!\"\n\nAt the same time that I said \"Don&hellip;.,\" in a threatening tone, my girls said \"Dad&hellip;.,\" and we harmonized.\n\n\"Okay, okay, give a guy a chance. It was all pretty boring. Vanessa came by the apartment, I showed her around and we ate dinner. She drove us in her new car. That is a pretty slick ride. You know me, Mister Practical, but I felt more than a bit of lust for that Mustang,\" he continued. Hmmm, maybe I would have to buy him one. I've rarely heard Don express any avarice over any material possessions besides tools. \n\n\"We got to the club and we danced; it was nice dancing to a live band. Several people came to our table to chat, and even the owner stopped at our table frequently. Eva, the owner, seemed to be a nice lady, about the same age as us. We stayed later than we had originally planned. We had gotten there late and we were having fun, so we decided to stay until midnight.\"\n\nThey were having fun?!!\n\n\"When we left, I found out the owner had given us all our drinks on the house, which was nice, but we really only had a couple of alcoholic drinks and everything else was just soda water with a twist. Then in the car Vanessa told me that Eva had given us two VIP cards. Vanessa said something about us being exciting enough that we held the other customers there until closing. She even said we were almost like Fred Astaire and Ginger Rogers for the night. Now don't tell her that I said this, because she seemed thrilled with that VIP card, but that is utter nonsense. While she is a beautiful woman and a very good dancer, I'm not Fred Astaire and there is no way that we could hold a bunch of people in a club until closing.\"\n\nSHIT! It was worse than I had thought. I exchanged stunned looks with Megan, who seemed to partially understand her father's accomplishment, but Robin didn't seem to get it at all. I had met Eva and she was an aggressive and greedy woman - she didn't give away anything for free. For Don and Vanessa to have been that successful on the dance floor, there must be strong chemistry between the two of them, especially since Don is still a complete novice. Hell, I had been a professional dancer and I had never been given a VIP card to that club! I wanted to burst out crying again and I couldn't do it here, not in front of Don, Megan and Robin. \n\nDon saved me by pulling out the Yahtzee game; he never seemed to put a CD in the player anymore, good thing - I don't think I could have sung a note.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.\n\nMeanwhile, in the super secret spy car of the PDA Security Directorate, Sister D-day, Flounder and&hellip;&hellip; Screw it; Freddie, Kathy and Vanessa were talking in Maria's SUV about basically the same thing. Vanessa had already told them about the same events that Don related to Maria, but she continued.\n\n\"Guys, I've got a big problem and I feel absolutely terrible about it. I've been seeing Don a lot lately, almost as much as Maria. We've been getting along together really well at my gym. Last night was almost magical with both of us on the dance floor, like you see in those old movies that Don enjoys. Everyone was watching us, and we were on center stage. I know that Maria has first shot at him, but I've nearly completely fallen for Don. After I got home from our date, I almost booked a dive vacation for the two of us, except I didn't plan on any diving. I planned on romantic evenings and walks on the beach. It was only at the last minute with my credit card out that I stopped myself. I didn't even have Don's knowledge or permission. He hasn't been diving any place nice for years, and he really misses it. I was going to present him with a fait accompli and give him some bullshit line about a friend cancelling out on me and I didn't want to see the money go to waste. Don would have bought it, too; he's a trusting and frugal guy. He would hate to see a few thousand dollars go down the drain. Please don't tell Maria, she's the one that believed in me when I was left flat broke and invested in my club. I'm so sorry, PLEASE don't tell her!\" Vanessa started to cry softly.\n\nKathy spoke, \"I think we have all been spending too much time with Don lately. We've been so concerned about Maria's happiness that we've forgotten about our own. I'm still fitting in the occasional real date, but you two have become fixated on Don. Hell, I agree with you that he is mighty fine catch, but as the saying goes, 'there are other fish in the sea'. It is time that you two got on with your lives. It wouldn't hurt things if you were to stay home one of these weekends and go out and meet some guys. You've devoted almost all your weekends for the past four months to Maria. Live a little - we all owe Maria, but she isn't going to hate us if we want to go off on our own. In fact, there are some mighty cute guys still skiing at the lodge. During other ski seasons we've had them falling all over themselves to get close to us. It's time for us to get back into action. Do you all agree with me?\"\n\nVanessa gave it her best effort, but her \"agreed\" came out a little flat. Kathy was willing to take that as a victory, though.\n\nFreddie started to speak, \"I agree with you, but I'm still going to help Maria and Don. Personally, I'm looking forward to my practice dates with Don; I think that they will be fun, especially with his cooking. So far we've devoted four months to this project and I'm willing to give it a couple more before I start getting antsy. I owe Maria and she is my dear friend, plus I really like Don. I'm not saying you two have to do what I do, but that's the way I feel.\"\n\nVanessa replied, \"I completely agree with you, Freddie. I just have to put my feelings for Don aside. But, as you pointed out, Kathy, it is also time that I start dating again.\"\n\n\"Okay that sounds like a plan; we'll give it our all for at least two more months, but we also try to fit some dating action back into our own lives.\"\n\n\"However, there is something else I think you two should consider. When we informed Don that we would be setting him up with real dates, it completely devastated him. He must have been thinking that after the kiss he got from Maria he had a chance with her. So here we all come, including Maria, telling him that we are going to set him up with other women. In Don's mind he must think that no woman that is romantically interested in him would set him up on a date with another woman. Thus, by his thinking, Maria must not be romantically interested in him, and he has been depressed ever since.\"\n\n\"The same exact thing applies to the three of us. While Don was primarily attracted to Maria, we are three single attractive women and who had been flirting with him for a couple of months. He has been alone for almost three years; he wouldn't be human if he hadn't considered the possibility that, while things might not work out with Maria, perhaps one of us might be attracted to him. Suddenly we burst his bubble and tell him about fixing him up with other women and, just like Maria hurt his feelings, we did, too.\"\n\nVanessa exclaimed, \"Oh, no!\" and suddenly got sick to her stomach and almost asked Freddie to pull the car over so she could throw up. If they hadn't been following Don's SUV she would have. She would just have to do her best to swallow her gorge back down.\n\nFreddie simply said, \"Oh, Shit!\" which caused Kathy to nod her head in agreement.\n\n\"Yeah, and I am the one that came up with this idiocy of setting Don up on real dates. I haven't a clue how I could have missed such an obvious pit fall, but we're stuck with it now. We could have gotten similar results with a lot less heartache if I had never mentioned it at all. We could have just had\n\nDon take us on a whole lot of practice dates, then have Maria turn one of her practice dates into the real thing. Maria has enough brains and kindness to take Don's lack of sexual expertise in stride and teach him gently, and Don has enough brains and kindness not to take offense at being instructed in sex. I think I was too focused on Maria's 'Scarlet Woman' obsession.\" But, as I said, we're stuck with this plan for right now. There is no way I can take back what I said about real dates without explaining to Don that Maria is romantically interested in him, and she is just not ready herself for Don to know that.\"\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.&hellip;.\n\nNormal weekend at Maria's home, not! Everyone was perfect with my babies and we did the same things, but around me the ladies were acting as strange as a gopher in a space suit. Nothing rude was ever said to me, but their body language, tone of voice and facial expressions made me feel like I was a test subject for psychological experiments.\n\nAt times I felt Maria was angry with me, other times apologetic or sad. Vanessa alternated between sad and, if I didn't know she had no romantic interest in me, I would have had to say she was acting timidly affectionate. Freddie, the queen of fun, spontaneity and being laid back, was almost frantically running between Maria and Vanessa. She would occasionally stop and spend some time with me, always giving me warm hug as if trying to reassure me about something.\n\nKathy was the only one to behave consistently. She consistently acted pissed at herself for almost the entire weekend. I almost went home as I was going so crazy with the situation, but my four beautiful friends behaved normally around my girls. So, I just grinned and bore the confusion - it was a good thing I never leave home without some Zantac tablets.\n\nFor the first time ever, I saw some of my friends trying to socialize with other people on the slopes and at the lodge. Maria was always close at hand; Kathy was the biggest social butterfly. Freddie seemed to try a couple of times to meet new people, but then she gave up and returned to just hang out with Maria, my girls and me. Vanessa was behaving more than a bit odd. She would start to converse with some guy, look up see us and suddenly hurry back to rejoin our group, almost as if she were doing something she felt guilty about.\n\nI saw the end of another furious discussion, this time between Freddie and Maria, as I came down the stairs Sunday morning. That breakfast was more than a bit strange. When I walked in the kitchen I found Vanessa hard at work making breakfast; she's never cooked for us before. The table was set and the ingredients for the meal were setup by the range. She must have gotten up at least a half an hour early. \n\nShe was making omelets and took our orders for what we wanted in them. Megan was still barely awake, so Robin grinned as she translated Megan's mumblings into \"ham, Swiss cheese, and onions\". When Vanessa was putting mine on the plate, she had such a look of concentration on her face that I thought she was performing brain surgery. And, as usual when you're trying your best like that, sometimes things can go wrong. It broke in half and part of it fell on the floor. She was so upset I thought she was going to cry. I knew what was going on - I had made so many tasty meals for her that she wanted to return the favor, and now the dumb omelet broke. I felt so bad for her; it took a few minutes for me to calm her down as I gave her a hug and rubbed her back. It was funny for just a split second there when I turned and looked back at the kitchen table over Vanessa's shoulder and I saw Maria with a shocked expression on her face. When she locked eyes with me her expression cleared and she quickly got up to help clean the mess from the floor. She must have been angry about that, but messes sometimes just happen. It was probably just a bad morning for her, maybe PMS.",
        "We were all finally able to sit down at the table. Mine and Vanessa's omelets were the last two. The table was unusually quiet and, without the normal breakfast chatter, no one was even teasing Megan over being a sleepy head. That was normally a great sport for one and all, and it was her mumbling retorts that made it so funny. This morning, however, Megan was looking alert and attentive. Hell must have frozen over! Personally, I thought that on many weekend mornings Megan was just faking it. I've even had a quiet talk with her in the past about it. I wanted to be sure that she didn't mind the teasing because it was all done in fun, but sometimes you can really hurt someone's feelings that way. I'd rather drive a rusty knife through my own heart than hurt my little girl or let others hurt her. However, she had assured that she knew it was all done in fun, with no mean intent behind it, and she strongly hinted that she did enjoy it - it was just another form of attention. I believed she was beginning to look at our new friends as more like a loving family than just friends. I wasn't sure how I felt about that. Vanessa finally broke the silence.\n\n\"Don, how do you like your omelet?\"\n\n\"Just fine, Vanessa, it's great.\" I picked up a big fork full of omelet and stuffed it in my mouth to emphasize my point. Actually I'm not much of an omelet eater, but you never insult the cook.\n\n\"I wanted to cook at least one meal for you after all the times you've cooked for me. Ah, I've got a scheduling problem; I've got to get back to taking care of some personal things. So, if you don't mind, we are going to have to cancel our Thursday night workouts together.\" Vanessa looked at me a little sadly.\n\nI had enjoyed my time with her and it was a nice change having a workout buddy, but I understood. \"I can certainly understand Vanessa. You've devoted a lot time to helping my improvement and sacrificed your own personal life to do it. I want to say that I appreciate it and thank you. So, don't give it another thought, I'm just so very grateful for all that you've done for me.\" I swear after I said that I heard a sigh of relief come from Maria, who was sitting beside me. Freddie spoke next.\n\n\"Don't think that you are going to have Thursday nights off, Don. Thursdays evenings are now going to become your semi-official practice date nights. Vanessa told us about your date last night while we watched our nighty-night movie. Sounds like you did better than anyone could have hoped for; you should be proud of yourself. This Thursday is my turn to be your practice date. Is that okay, do you think you're ready for me big boy?\" Freddie gave me a saucy grin.\n\n\"I don't know; I'll have to ask my booking agents. Well, my little cherubs, is Daddy ready for this blonde haired temptress?\" I asked with a grin.\n\nRobin spoke up quickly, \"Sure, but no making kissy face on the first date!\"\n\nMegan gave a quick glance towards Maria first before replying, \"If you promise to be home before midnight and make sure to put on clean underwear that night, then I'll let you go.\"\n\n\"Gee, thanks, Moms.\"\n\n\"Freddie, my Moms say I can go, so what are your plans?\"\n\n\"You will take me to the art museum where there is a special exhibition of American art. For dinner, you will make me the lettuce thingy with fried shrimp, fried squid, and THE PIE for dessert. I will be at your house at five thirty and we will leave for the art museum by seven.\"\n\n\"Got it, one Korean special hold the pork, and sizzle some sea monkeys.\"\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.&hellip;&hellip;&hellip;.\n\nI was so upset about Don's date, I wanted to get a big stick to smack people with and yell \"HE'S MINE, PISS OFF!\" I longed to wrap Don in chains, kidnapping him, stealing him away to a lonely cabin on a mountain top that I knew about. The only thing that stopped me was my girls. How could I explain it to them? How could I leave them behind while taking their father?\n\nI knew this wasn't anyone's fault but mine, but I had such a hard time controlling my temper. I tried to stay close to Don, but when I felt my behavior was getting out of line, I would get away for a few minutes to blow of some steam.\n\nVanessa's behavior towards Don was giving me the heebie-jeebies; I knew that Vanessa no longer viewed Don as just a friend. I also knew that she was a dear and trusted friend who would never betray me. However, when she looked at Don, a timid look of longing filled her face and when she looked at me she had such a guilty looking and distraught appearance. I loved Vanessa like a sister I never had, the same with Kathy and Freddie, but I found Don first and I was certain she would respect that. Nonetheless, the conversation we are going to have this Saturday night isn't going to be fun. If necessary I could always use a big stick on her, and I had found a beaut out in the garage. I think it was an old ax handle, except it was new. I wouldn't hurt her much, just enough to get my point across.\n\nI made dinner that evening but, what with Freddie being a vegetarian; it is hard to make something that pleases everybody. Don always does it somehow. How does he do that? Everyone seems to like Dungeness crab, so I served that again. For dessert I served two blueberry cheesecakes that I had made myself. I had secretly been practicing making cheesecakes for the past month and a half in order to get it just right. My ex-husband, Richard, and his office staff had been my test dummies and had gotten totally sick of eating them. Almost every Wednesday and Friday I would go breezing into his offices with a cheesecake at lunch. It got so bad that all his staff started hiding from me, but Richard, the dear, took it like a man and sampled everyone, doing his best to critique it.\n\nThe cheesecake was a smash hit. Everyone loved it and had two pieces, even though they were stuffed with crab. In fact I think Don wanted a third, because I caught him checking out how much was left. I think he didn't voice his desire because of the diet he is on.\n\nDance lessons that evening were particularly tough on me. At first Vanessa was very stiff and clumsy with Don, then she finally seemed to forget herself and flow with dance. Eva was right to give them a VIP card and I was right that they were displaying great chemistry. My heart had fallen into my stomach; it was painful to have such a vacant feeling in my chest coupled with a twitching stomachache. I put my modeling lessons to use: the dress is too tight &ndash; smile; the shoes hurt your feet &ndash; smile; you might lose your boyfriend &ndash; smile.\n\nI picked on some minuscule errors that Don was making so I could dance with him myself to show him the proper steps. For only the second time since I started teaching Don, I put on the song Moon River and we waltzed to the piece twice. We were good together, not as good as Vanessa and he were, but still very good. We just needed more practice. From now on, I'm going to dance with him every Wednesday. We've done it before, but we have to move the furniture in his living room to give us enough clear space, which dissuades us most of the time. However, I've seen his basement gym, and it is plenty big enough for a dance floor. It should be, since Don's basement is the basement of the entire apartment building and not just his lone apartment; his tenants aren't allowed access to it, except for a couple of special cases. That was one of the perks that he gave himself when finishing the building. He put in a raised wooden floor in both his gym and workshop because he didn't like walking on cement. The floor is scruffy, but I think it is usable as a dance floor, and I can probably make it even better if I clean it up a bit. Don's even got a sound system down there, so he can listen to his music while exercising. \n\nWhen lessons were over, Don headed up to his room to relax in bed and watch TV, while we girls headed to the movie room. It was time for my showdown with Vanessa.\n\nWhile everyone else stopped in the movie room, I grabbed Vanessa's hand and gently pulled her towards my office. She was looking pretty distraught but she followed me willingly. After I closed and locked the door - no more peeping toms! - I turned to her. \"Vanessa, you know I love you like a sister. I know that you are good person. I also know that you had a special night dancing with Don, and ever since then you've been acting a little love struck. I'm not mad at you, I'm jealous and I'll fight you for Don, but I'm not mad. Do you want to tell me what is going on and what you are feeling?\"\n\nVanessa broke down completely and started to cry. Ah shit, this isn't supposed to be my job! I rushed to her, put my arms around her, hugged her and gave her the \"There, there, everything will be alright, we'll figure out something together, routine.\" But I didn't know if everything would be alright and inside, my heart was breaking too but I had to keep it together for myself, for my friend and for Don. We sat down on the couch together and finally she started to talk, though it was broken up by the occasional sniffle.\n\n\"Maria I'm so sorry, I didn't see it happening! I joked about being interested in Don, because he is such a great guy, but I would never have really made a play for him because I knew you wanted him. It just slipped up on me. I work out with Don four times per week. I'm his practice dance partner, twice a week. We go skiing twice a week, and frequently I'm instructing him and we're alone together. We have just spent so much time together that I've formed an emotional bond with him and didn't even realize it until that dinner at his house.\"\n\nCrap, it started at dinner and not on the dance floor!\n\n\"Then we went to the club and I know you don't want to hear this, but the night was just magical for me.\" No, I didn't want to hear this, but I had too! \"I never even came close to being a big league model like you were, and suddenly, in a room full of people, I was the star, and not just for my looks and it felt wonderful. Don took me to that level; he brought out the best in me and made me shine. I know Don has his weaknesses, quirks and mental hang-ups, but even with all that he is just so solid, that is the only word I can think to describe him. When I was with him on the dance floor I knew I was with a MAN and not just some guy. We're trying to give him some surface polish, but all the things a really man needs to be, he already is in abundance.\"\n\nMy face must have revealed the depth of my fear.\n\n\"No, Maria I'm not going after him. At least I won't go after him as long as you're interested in him. I've partially fallen for him, but I'm positive that he doesn't have the slightest romantic feeling for me. I'm just his good work out buddy and his tough ass trainer. I've spoken with Kathy and Freddie, and we all think that the major part of my problem is that I've been spending too much time with Don and not been out socializing on my own.\"\n\nI suddenly felt very, very guilty. For over four months I've been demanding too much time from my best friends, because of my romantic interest, screw that, because of my love for Don. There I said it. Not once in those entire four months did I give any consideration about their personal lives. Oh what absolutely selfish and greedy bitch, I've been. I didn't have the right to be their friend.\n\n\"Vanessa, I'm so sorry. I'm so, so sorry. I've been so selfish! I've completely forgotten about you three and your own lives. You all must hate me! I've been a terrible friend. For all these months it has been all about me, how can you ever forgive me? I created this situation by not having the courage to be honest with Don about my past.\" Then I broke down and Vanessa was comforting me.\n\n\"There, there, Maria it's alright and we all still love you. We understand, you're just in love woman, and you've got all your attention focused on your prey and his girls. You've been a wonderful friend to us. When I was left broke you rode to my rescue, same for Kathy and Freddie. The only job skills we had were modeling and suddenly they were all telling us that we're too old. Then all three of us had those disastrous first marriages. Freddie and I signed those pre-nups that let those asshole husbands of ours financially rape us. Kathy married that jerk, I don't know why she likes bad boys, and he squandered her savings. Then along comes our knight on a white horse, and that was you. Everything was gone. When you rescued me I was about ready to move back in with my folks; Kathy was almost on the street and Freddie was thinking about stripping for a living. You turned my love of exercise into my successful business, you turned Freddie's love of art into her career and you funded Kathy's return to college. You gave us back our pride and we can never repay you. You've always been there for us and now it is our turn to be there for you.\"\n\n\"Now, Kathy, Freddie and I have come up with a plan. It is really rather simple and we are not abandoning you, but the three of us are going to start going on dates again, although Kathy never completely stopped. I'm going to cut back on my hours with Don and I think we should start shuffling his practice dance partners a bit. I know that is not the best for learning, but I think it is necessary. Kathy thinks that, because we started this silly polishing Don nonsense, we have to go through with it. Stopping it suddenly might really confuse Don. What we think you should do is glue yourself to his side every chance you get. We think it is best if Don gets in a few more practice dates to build his confidence and ego, maybe one or two with each of us three, then it will be time for you to make your move. None of this setting him up on a real date nonsense! You probably already know this, but you're going to have to be patient and understanding with Don the first time you make love. Really patient, really understanding and really encouraging or he might break and run in shame and embarrassment, and you might never get another chance. As for your past, knowing Don, I don't think that there will be any problems. So&hellip;\"\n\nI recoiled from her, everything she said up to that point had reassured me and made sense, but how could Don with his sheltered family life accept my past so easily? Impossible! When I tried to stand up, Vanessa pulled me back down into a hug, god she is strong! She rocked me and stroked my hair, whispering in my ear.\n\n\"I know; I know you're not anywhere near ready to tell him and you think that he will despise you. I know you're making a dreadful mistake and are just letting your fears control you. If you had any sense at all, you would march up to his bedroom, tell him that you loved him and climb in bed with him for a week. We would be happy to take care of Megan and Robin for you. But if you want to take your time and get over your fears, we will stand behind you. We all love you Maria.\"\n\nThis wasn't how I thought my confrontation would go with Vanessa at all! I thought I might get in an argument with her. I thought I might have to comfort her. I never thought that I would be the one needing comforting!\n\nWe finally calmed down, fixed our appearances and rejoined everyone back in the movie room. Kathy and Freddie visibly relaxed when Vanessa and I returned arm in arm to the room. Megan and even Robin were looking suspiciously at us, as if they knew something big had happened. \n\nI decided we all needed a treat so I went to the kitchen to get the rest of the cheesecake. When I got there I found a big piece missing. Don, that sneak, had probably stolen a piece and taken it up to his bedroom to enjoy. I was flattered that he liked it, but should I inform Megan and Robin that he was cheating on his diet or keep quiet? I would have to think about it. So everyone got a small piece of cheesecake, and a medium size piece of THE CAKE, which Don had brought up. I wonder if it was going to become THE CHEESECAKE, with maybe the sound of cows mooing? \n\nThe next morning I got up early to fix breakfast. I intended to show Don that I could be kind and considerate too. When I got to the kitchen I found Vanessa hard at work. Her back was to me, so she didn't see me. I saw RED, she had told me that she wasn't going to make a play for Don and here she was cooking and she hates to cook! I was going to cook for Don, what is going on here?!! I started to step into the kitchen when suddenly Freddie grabbed me, turned me around and put a finger over her lips urging me to be quiet. I settled down a bit and remained silent. She took my hand and led me out to the great room, far from the kitchen.\n\n\"What's going on here, Freddie?\" I asked furiously.\n\n\"I thought you might be upset. This is Vanessa's way of saying goodbye to Don. She really likes him Maria, but she knows you love him. Vanessa has never had him over to her home, never been on a REAL date with him and never cooked him a meal. This is how she is getting closure; this is a goodbye dinner, except it's breakfast. Just let her do this, okay?\"\n\nFreddie had such a concerned and worried expression that it just reinforced my opinion that I was being a bitch again. I took a couple of deep breaths to calm down. \"Of course it's alright; it just surprised me after what she said last night, and especially in light of her own hatred of cooking. Thank you for stopping me, Freddie, from making a complete fool of myself. Both you and Vanessa are my dear friends.\"\n\nI had been so focused on my discussion with Freddie that I had been almost oblivious to the fact that someone was coming down the stairs and could possibly hear our conversation. I turned to find it was the worst possible person to have maybe heard us, it was Don! But he simply said good morning and moved towards the kitchen with his normal facial expression. We just dodged a damn big bullet!\n\nAt breakfast when Vanessa dropped Don's omelet on the floor, I was shocked to see him get up so quickly to comfort her, but she was very upset. He hugged her and patted her back, and did his best to calm her down. But when a moment had passed and my shock had dissipated, it was plain to see that Don was just comforting Vanessa as a friend, and that while Vanessa melted in his arms a bit, she was still holding herself back. That omelet she had dropped represented her goodbye kiss to Don, so I could understand why she was so upset. I would never tell her that Megan and Robin had told me that Don hated omelets (and I must swear them to secrecy about that!).\n\nAt breakfast Vanessa informed Don about the change in their workout schedule, and Freddie told him about the new practice date schedule.\n\nI again rode home with Don and my girls, but we were finally getting tired of Yahtzee. We were going to have to find a new game. It was handy that Don's apartment made a good, safe place for us all to rendezvous and car pool before driving to my mountain home. Otherwise my insistence on riding with him and my girls would look very odd. This way it could simply be explained away as my fondness for Megan and Robin.\n\nWhile we were riding back in the car I explained my idea about dancing lessons in his gym. Don admitted to me that there was plenty of room, but he was doubtful that the floor was in good enough shape for dancing. When I arrived at Don's apartment I took a quick look in his gym to look at the floor. He was right - it was a simple floor made of plywood that had been stained and sealed. There were some large rubber floor mats around the exercise equipment, but that was it. I decided to pull a \"Don\".\n\nWhen I went back upstairs, I spoke with him. \"Don, you're right about the floor, but when I was a kid taking dancing lessons, I had to work on the dance floor in the studio I was at many times (true). I know some ways to tune up a floor to make it usable. If you don't mind I will stop by early on Wednesday and fix things up a bit, it shouldn't really take me much work.\" I didn't tell a single lie, heh heh.",
        "\"Well, if you tell me what to do, maybe I can take care of it Maria?\"\n\n\"No, believe it or not it will be easier for me if I just take care of everything myself.\" All true again; am I good at pulling a \"Don\" or what?\n\n\"Don, how big an area can I take for the dance floor? I would like a twenty by twenty area or maybe even a twenty-four by twenty-four, and where can I put it?\n\n\"We've got lots of space; twenty-four by twenty-four is fine if you want to go that big. Just put in the northeast corner of the gym, I'll move some exercise junk out of the way.\"\n\n\"That's perfect Don, thank you.\"\n\n\"Why are you thanking me, you're giving me lessons, and now you're going to clean my floor? I should be and I am thanking you.\"\n\nWith a perfect \"Don\" completed, I gave Megan a subtle wink to clue her in that it was time for her act.\n\n\"Dad, while we were at Maria's we made sure to get all our homework done.\" (With my, Freddie's, Kathy's and Vanessa's help during breaks in our Saturday movie night.) We thought that maybe, if it's okay with you, and if Maria would like to, we could have a mini-movie night here, with just the four of us?\"\n\n\"Baby, Maria is a wonderful friend to this family; she can stay any night she wants. You just have to ask her. But you said 'the four of us', and I'm not exactly into your kind of movies.\"\n\n\"Oh, that's the best part, Daddy. We were talking, and Maria is a big Alfred Hitchcock fan, and Robin and I like them too. We could start off with \"North by Northwest\" and maybe watch one or two other movies after that, if that is okay?\"\n\nWhen Megan said the name of the movie, Don had suddenly gone on point like he was a hunting dog. Oh, what fiendish girls Megan and I were! I had told her about wanting to get closer to her daddy, and she was willing to help. I was a Hitchcock fan and she had told me how \"North by Northwest\" was her father's favorite. Come here, little birdy, said the hungry kitty, and such a cute little birdy he is. I had made a firm promise to myself that the practice dates would continue, but every time Don turned around I would be there. And in a month, maybe two at the most, I would make my move.\n\n\"Yeah, that would be fun with the four of us watching Hitchcock. What do you say, Maria?\"\n\nBetter and better, he had asked me! Next month Don; and tomorrow world domination will be within my grasp! Nah, all I want is Don and my girls, world domination would probably be too damn much work! \n\n\"Why, Don, that would be wonderful. What's for dinner?\" Hold it, where did that come from, curse Don and his fantastic cooking. I was becoming a slave to it.\n\nDon looked a little bit chagrined. Oh, oh, had I pushed things too far? I was like one of Pavlov's dogs, see Don and think about food. \"Nothing special, I was just planning on making grilled cheese sandwiches, French fries and tomato soup for dinner. Something quick and easy; with maybe blueberry cobbler and ice cream for dessert. It won't be as good as your cheesecake, of course. Does that sound okay?\"\n\nDon's homemade French fries and bread for the sandwiches, oh I think I could handle that and he said my cheesecake was better than his cobbler too! But then it got even better when Robin agreed with her father.\n\n\"Yeah, Maria, your cheesecake was real good, we think it is the best that we have ever had. It's as good as THE CAKE, and might be as good as THE PIE.\" Heady stuff, I now accept the Nobel Prize for cheesecakes, please no photographs. Then it happened, Megan spoke.\n\n\"It was simply the best; Daddy even stole a third piece. Bad Daddy, bad, bad, Daddy.\" Don looked suitably crestfallen, like a guilty little boy. I wanted to step close to him, rub his head and tell him that everything will be alright. \"I think we need to take a vote, but I think your cheesecake should now only be referred to as THE CHEESECAKE!\" I heard it, I heard it, the sound of cows mooing, and it sounded like a whole herd! \"Mooria, Mooria, Mooria!\" And the cows go wild; IT'S A FREAKING STAMPEDE, RUN FOR YOUR LIVES!\n\nSuddenly I became aware of Don's voice, and my shoulders were being shaken. \"Mooria, Maria, Maria, are you alright?\" My eyes focused on him. \"You seemed to have zoned out for a moment there.\"\n\nThat's it, how to catch a man, prove you're mentally deranged. I hid my embarrassment. \"I was just so thrilled at Megan's nomination of my cheesecake that I lost my focus.\"\n\n\"Oh well, we took the vote and it failed, two to one. Sorry Maria.\"\n\nI was completely crestfallen, my dreams shattered, when suddenly Megan and Robin both spoke up, \"Daddy, you big liar! We all voted yes!\"\n\nMy eyes focused on Don, my intended prey. I WAS GOING TO KILL HIM!  He started to back up hastily with a big grin on his face, showing me all his teeth. He was going to need an emergency trip to the dentist after I got through with him. I started looking for something to hit him with, when Robin handed me the silly door stopper from the front door, it was shaped like a big fat stuffed chicken and it appeared to be more like funny shaped firm couch pillow than a door stop. I was doubtful about its effectiveness until Robin said. \"There's a brick in the bottom of it.\" I took it from her with glee, and Don's grin was completely wiped from his face as he started running. \n\nMegan screamed out, \"Don't kill him, we need him for dinner!\"\n\nI yelled my father's motto about hunting back at her. \"Don't worry, we always eat what we kill!\"\n\nThe chicken was pretty awkward to hold and I had to use two hands. I was only able to get two hits on him before he was able to break away and make it outside. Curse his physical training he was able to keep ahead of me. Megan and Robin had followed us outside and were cheering for me, but I had to finally stop because I was too tired, and I was also getting hungry! When he came back to his apartment he was like a meek little lamb for the rest of the night, but I kept the chicken close at hand in case he got out of line again.\n\nDon made another superb meal, even with his over the top performance that he was desperately hurt from my two hits. The top of the fake chicken was soft just like it had originally appeared to me, only the bottom was stuffed with the brick and it was still surrounded by thick padding. On top of that, I had made certain to only tap him lightly with the soft end, the big cry baby! \n\nAfter dinner, he quickly prepared the cobbler and put it in the oven. While he was doing that, my girls and I got changed into our jammies except this time I was actually wearing a nightgown under my silk robe. It was modest while at the same time it was very feminine, and it did show some leg too! Not too much, but enough. My fuzzy bunny slippers kind of killed the whole look, but they were really comfortable. Megan and Robin were jealous of my robe so I decided that the next time I took them shopping I was going to have to get them each one, and some slippers too. \n\nDon finally came out of the kitchen, put the DVD in the player and sat down in his chair to watch.\n\nI cleared my throat, \"Ahem.\" He looked up with a puzzled expression.\n\n\"What's wrong?\"\n\nRobin spoke up, \"Daddy, you have to be in your pajamas, it's tradition.\"\n\n\"But I don't like&hellip;..\" I caught Don's eye and started to stroke the chicken I was holding on my lap. \"Just give me a moment, I'll be right back,\" he said hastily. I think I'll name the chicken Roscoe.\n\nThere was much discussion between Megan, Robin and me on how to arrange the seating on the couch. We finally decided that I would be on one end, then Megan on my left, then Robin, and Don would be on the other end. Robin mentioned how at Christmas time Don had gotten very sweaty and red in the face when he was sitting in the middle.\n\nWhen Don got back in the room, he once again tried to sit in his chair. Robin had to speak up and pat the couch beside her before he even had a clue what was going on. I merely stared at him, stroked Roscoe, and he moved quickly to his assigned seating position. Yes, you are Roscoe; you are a good little chicken, aren't you?\n\nLike we had promised Don, we watched \"North by Northwest\" first. I had observed Don's sitting posture before when he was sitting on a couch. He always liked to lay his arm on top of the back of the couch. Anticipating this, I did it first. He was uncomfortable for the longest times holding his right arm in his lap while my left was on the top of the couch back. Finally he noticed that my arm was very close and even touching the back of the girls' heads. He saw that there was a large space between my arm and the wall, plenty of space for his arm. With a sigh of relief, he put his right arm on the top of back of the couch. Dudley Doright had fallen into my trap once again; sometimes I wish I had a mustache with long handlebars that I could twirl. I wonder if Don likes girls with mustaches?\n\nSo, during the first movie, except for when Don served the cobbler and ice cream, that is where my arm stayed and Don, thinking that he had adequate space, also kept his arm in the same location. Then fifteen minutes into the second show, I moved my arm back a tiny bit and brushed it up against Don's arm. There was a framed picture above the television, the glass in the frame made a pretty good mirror, just like the oven in my kitchen at home. I watched Don go rigid and heard him take a sudden deep breath. I slowly pushed my arm more tightly against his, not so tight that he would withdraw it, but tight enough that he could feel me. He was absolutely stiff during the rest of the movie, and I think he was a bit flushed too. Perhaps I went too far for one night, or perhaps he just got tired (it was a bit late), but when we put the third movie in, he decided to go to bed. As he did, he warned us that it was getting late; maybe we should take the movie to my room. So my girls and I did just that. Megan fell asleep first, then I did, and I don't know when Robin conked out, she might have watched the entire movie for all I know.\n\nThe next morning was the normal routine; drag Megan out of bed, eat breakfast and take my girls to school. I'd been doing it for months every Thursday morning, and now I've added Monday. Little does Don know, but thanks to Megan and Robin, this is going to become a regular event. Some of their friends waved to me, I was becoming recognizable, and it gave me a warm feeling. \n\nAfter dropping my girls off, I called Carl about the dance floor I needed.\n\n\"Where are you Maria?\"\n\n\"I'm on my way back to my condo.\"\n\n\"If you want a dance floor by Wednesday night, you'll have to turn around.\"\n\nCarl has always played it straight with me, so I immediately did as he instructed. \"Why am I turning around, Carl?\"\n\n\"Wood flooring has to acclimate to the room at least two days before you install it, and you've got to have the flooring material sitting in the same environmental conditions. That basically means the same temperature and humidity. So, you need to buy the flooring materials today and have it delivered right away.\"\n\nCarl then asked me for the closest major home supply store to Don's apartment building. I told him the one I pass by every time I drive there, so he told me to go there and pick out a wood or laminate flooring material that I liked. He said glueless laminate would probably be the easiest to install and he would have people (probably his nephews) meet me at the flooring desk so they could pick up the flooring and deliver it to Don's apartment. I did as Carl told me; I went to the store, picked out the flooring I liked that was in stock, and it cost me about a grand with all the little extras I needed. About the time I was done with the purchase, two big young guys showed up. They introduced themselves as Mike and Matt, and they were Carl's nephews. Mike had an old van; they loaded the flooring in and followed me to Don's apartment. I let them in, found a place to hide the flooring (it's a big basement) and they unloaded it. Two hours after Carl told me to turn around we were done. \n\nWednesday morning we were all waiting for Don to drive off to work. Carl came down from the mountains with a friend of his, and Carl's two nephews were also with us. Don drove off and we swung into action. Carl was happy because Don had done a beautiful job (he always does) preparing the floor for us. Carl said that when Don built the plywood floor he made it \"dead nuts level\", and last night it seems that he went and sanded any rough spots and swept the floor clean.\n\n\"I tell you, Maria, this is going to be a cinch. We're not trying to fit this floor into the whole room, just one corner of it. That means that we can make your dance floor any size, and that means we don't have to do much cutting, no finicky custom bits at all. Just put the cushion down and start fitting things together. You go upstairs and rest, it will get kind of dusty down here with the cutting we have to do.\"\n\n\"Carl, Don has his workshop down here too. I'm sure that he won't mind you using it, especially since he used your tools without permission at my house.\"\n\nI led Carl to Don's workshop and his eyes lit up when he saw it. \"I knew there was something I liked about that boy, even if he can't dance. This is going to be a really easy job. It will take us all day doing it right, but still really easy.\"\n\nI went upstairs to stay out of the way, and at lunch time I fetched them something to eat. By the time Megan and Robin got home from school at three-thirty they were almost done. At four they were done. The floor was installed and had been trimmed out on all four sides. Carl had used wide sloping trim boards on the outside of the dance floor, so there would be less to stumble over. The floor was roughly twenty-three feet by twenty-five. At four-thirty they were in their trucks and ready to head for home. I had paid each man four hundred dollars; maybe I could have gotten away with less, but why? I'm loaded; they did a good job and probably needed the money. Carl reached into the back of his truck, opened up a cooler chest and pulled out a six pack of his home brew.\n\n\"You give this to Don and you tell him that if he learns dancing really good, next time I might let him lead.\" With an evil chuckle he took off for home.\n\nWhen they left, I hurried inside to prepare dinner. I figured if I made dinner and had it ready to go when Don got home, we would have plenty of time to eat before my girls' therapy session, that way Don wouldn't have to make dinner so late and he could just rest this evening - after our dance lesson, of course.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.\n\nI got home and I was beat. I still had so much to do. I had to make our 'before therapy snack'; I was getting lazy so I was just going to give them shrimp cocktail, and it wasn't even fresh shrimp! For dinner, hamburgers again; there are some things that I can cook really well, but I don't have that many things that I can cook. To keep my friends happy, I had even resorted to reading cook books and going on line to get recipes. I don't even like to cook! Especially as much as I had been doing lately. My girls are easy to please, but I know one of the primary things that my new friends find attractive is the food I do cook. I'm sick of it! Sure, if one of them were romantically interested in me, I could keep going for a while longer. But&hellip;.. Oh shut up Don and quit your whining. I told myself. You, Megan and Robin are much better off today than you were five months ago. If you have to go to cooking school to keep positive things happening, DO IT! You know it is worth it. Maybe you just need a vacation, or just quit your tech job, you don't really need it. I took some deep breaths to calm down and reenergize myself, and then I opened my front door.\n\nWonderful smells assaulted my nose. Before stepping in, I looked at the floor by the door. Maria still hadn't returned that damn chicken; she had started keeping it on the nightstand by her bed. She had even named it. I would have to check with the police and see if she needed a permit for it. Maybe I could get her to take a chicken safety class. Always make sure your chicken is unloaded and never point your chicken at anybody. Halt, I've got a chicken and I know how use it, \"Buk-buk-baaak\"! With these thoughts, the smell of food, and a silly ass grin on my face, I made my way through my front door and into my house. \n\n\"Hello, I'm home, what smells so good?\"\n\nMaria stepped briefly out of the kitchen with a cute little apron on. \n\n\"Welcome home, Don. I thought if I made dinner before we go, that would give us much more time this evening to relax. I've made spinach salad, stuffed pork chops, mashed potatoes, snow peas and fried mushrooms. I know how much you like mushrooms. I even got THE CHEESCAKE for dessert.\" Why did I hear the sound of cows, mooing for just a moment? Bizarre!  \"How does that sound?\"\n\nI had to close my eyes for a minute to stop the tears threatening to come out and I felt a wave of sorrow envelope my body. It was a nice dream that I had let get too real, she's just a wonderful friend. I figured that she had too much in the way of unused maternal instincts and had attached herself to us because of my girls, but that was all right, too. \"Don, Don - are you okay?\" I didn't want to open my eyes because they were too wet, but I had to.\n\n\"I'm fine Maria; it's just that it is so nice to come home to a wonderful meal when you're tired. I really, really appreciate it, thank you.\"\n\nShe gave me a really strange look and then returned to the kitchen. I hurried to the master bath to wash my face and compose myself. \n\n\"&#9835; Unchain my heart. Cause you don't care about me. &#9835;\"\n\nIt took me a few minutes to get myself together. Suck it up Don, what are you, a little girly man? When I returned to the dining room, the food was already on the table and everyone else was seated. I apologized for being slow and sat down.\n\nThe spinach salad was great, plenty of bacon. The pork chops were wonderful; instead of regular stuffing there was some kind of a cheese, bacon and onion mixture inside. It was nice to be waited on, and by a multi-millionaire no less. I enthusiastically complimented Maria on the meal, and she seemed to be very pleased. Megan and Robin were less fulsome in their praise, but they enjoyed it too, probably not enough cheese and grease for them. It was about time that they had a really healthy meal. My hamburgers, French fries, grilled cheese sandwiches, fried coconut chicken wings and lasagna thingy with extra sausage and cheese were probably not the healthiest of diets. I was lucky we hadn't gotten scurvy yet. We decided to save the cheesecake for later.\n\nWhen we got back from the therapist, Maria led us all down to the gym to practice our dancing. On the way, she asked me a strange question. \"Don, do you recall when that tree fell on my home and you asked for my permission to do a 'little bit of work' cleaning up the mess.\"\n\nGuardedly I said, \"Yes\". What have I done now?\n\n\"Sunday night I said 'I was going to fix things up a bit, and shouldn't really take me much work'. I just want you to remember that and what you said to me about the tree.\"\n\nWith some trepidation now I followed Maria into my gym. In the northeast corner was not a \"tuned up\" piece of plywood flooring but a large beautiful hard wood floor with a sign on the wall that said, \"Maria's Dance Studio, Lessons by Appointment Only\". Maria muttered something about Carl; I think the sign might have caught her by surprise.\n\nThe floor probably cost over three thousand dollars, what with it being a rush job. I turned to look at Maria. She looked me squarely in the eyes."
    ],
    "authorname": "CastleStone",
    "tags": [
        "cheating wife",
        "betrayal",
        "cheating",
        "romance",
        "food"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/sophia-pt-03"
}