{
    "title": "The Extra Person: Watching, Helping",
    "pages": [
        "Tonya and Eric were in a rut. After 25-plus years of marriage with a mostly-satisfying sex life, the kids were in college and they finally had the house to themselves most of the time. But after months of trying to rekindle the \"sex any time, any place\" mentality that dominated their pre-kid lives, they still kept ending back up at \"if you're not too tired\" quickie Saturday nights. Not bad, but not earth-shattering either.\n\n\"Maybe we could try role playing\" Tonya suggested one night as they discussed trying something different.\n\n\"Yeah, maybe we could,\" Eric responded. \"But we never got into role playing before...\"\n\n\"Good point,\" she said not sounding too disappointed.\n\n\"We could do it in the hot tub,\" he countered.\n\n\"That's sounds good...\" Tonya replied with barely more enthusiasm than Eric offered to her prior suggestion. \"...but maybe we save that for a day when it's less than 100 degrees out.\"\n\n\"Yeah, maybe that week that's winter around here,\" Eric added.\n\nAfter a few more less-than-enthusiastic possibilities, they were close to losing any interest in anything for the current night.\n\n\"So what were some of our fantasies PK?\" Tonya asked using the 'PK' acronym they usually used to discuss life 'pre-kids'.\n\n\"The one we talked about so much back then was doing it while someone watched...\" Eric answered wondering how she would respond.\n\nTonya finally wore something resembling a smile as she reacquainted herself with that long-ago fantasy.\n\n\"Yeah, you're right. We had some pretty hot fucks fantasizing about that,\" she said with the first hint of enthusiasm of the evening.\n\nEric loved it when she used the 'F' word. Sometimes they had sex, sometimes they made love, but the best orgasms were when they fucked. Sex was physical release, making love was gentle and sharing, but fucking was intense and hot and wet and extremely orgasmic. It could start with a tease that lasted all day or a quick naked glimpse as she got ready for bed. Or, it could be a request. But it was always the best, most satisfying sex.\n\n\"I maybe like the idea,\" she added as he was thinking of possibilities. \"But I don't see anyone around to watch us,\" she added with a hint of dejection.\n\n\"Maybe not tonight...\" he offered, \"but I might know someone who could be interested. And maybe she would put on a solo show for us as well.\"\n\n\"Really? Who??\" Tonya asked.\n\n\"My friend Kate from college. Years ago we were at a happy hour, and I told her about the night you and Lisa were drunk playing with each other's boobs. She asked if you ever had sex with Lisa and I told her you didn't. She said then that she would have had sex with you,\" Eric said with a wishful grin.\n\n\"That was years ago,\" he added, \"but I bet she would still be interested. And, she's single now so it might've been a while since she's had sex.\"\n\nTonya looked a little surprised at Eric' story, but was willing to explore any possibility. They discussed someone looking through the window compared to sitting in a chair near by enjoying sights, sounds, and any other sensual aspects of the sexual encounter. After Eric reminded her of the coyotes and other critters that roamed the areas outside their country neighborhood, she agreed that someone close by would be safer and could be incredibly arousing.\n\nThat night, as Tonya flipped Eric on his back and lowered herself onto his erection, he was so happy he had brought up this fantasy. As she frantically rode him while playing with the beautiful, pink nipples that adorned her 36D boobs he prayed that Kate was willing to join them for a night of playful voyeurism. When she had a massive, wet orgasm while fucking him, then jumped off so she could milk every last drop of cum from his dick he was wondering how much money it would take to bribe Kate if she was reluctant. And when Tonya said 'now you're going to fuck me again' just before taking him in her mouth, he wondered which one of their two cars would make the best a bribe. This was the hottest, most intense sex they'd in years, and he loved how much she wanted him inside her. He could only close his eyes and imagine how incredible it would be if Kate was in the room with them.\n\n* * * * * * * * * *\n\nThat Friday, Eric met Kate for drinks. As he sat at the table waiting for her to show up he realized how sore he was. For the first time since the first sex they had after the twins were born, he and Tonya had sex three nights in a row. When he tried to get up to greet Kate his well-satisfied but sore man parts made it more difficult than normal to stand.\n\n\"Old man knees?\" she jokingly asked as she watched him struggle.\n\n\"Uh, yeah,\" he replied as he thought 'no, I've been nearly fucked to death this week'. He thought that bit of information might need to wait until after a drink or two.\n\nAfter a short hug they sat and ordered their first drinks. At first the talk was casual - there were the 'how are the kids' discussions followed by the 'how's the job' talk, a little bit of 'newest hobby' before the talk eventually turned to sex. Kate told Eric that it had been a while since she had non-battery operated intimacy, and he asked her for a recommendation for a new vibrator for Tonya. During their second drink he told her of the rut they had been in (until their first fantasy involving her) and their search for something different and exciting. When he shared the discussion they had on her watching them, she was intrigued.\n\n\"So you guys would be having sex, and I would be watching you have sex?\"\n\n\"Uh... yeah?\" Eric meekly answered, not sure if her response meant she was interested or if she thought they were nuts.\n\n\"And I just sit in a chair and watch, like at a movie?\"\n\n\"Well, we haven't really gotten that far in planning,\" he lied. \"We Didn't want to get our hopes up if you weren't interested. I have to tell you, though, we've had some amazing sex recently fantasizing about it. But in our fantasies, you weren't in a chair - you were there, uh... right next to us.\"\n\nEric could tell Kate was in deep thought, and the pleasant look she wore made him think she wasn't opposed to the idea.\n\n\"Really? Next to you guys?! And Tonya's OK with this?\"\n\n\"Yeah, we've played versions of the fantasy all week, and they're all pretty hot. Sometimes you tell us things to do, other times you caress her arm or stomach, or maybe smell her hair, or even hold her down - we've talked about a few different things, and she really gets in to it. She's the one that wanted me to talk to you!\"\n\n\"OK, that's pretty sexy,\" she answered as she continued to think it through. \"What happens after I caress her arm or stomach, or... \"\n\n\"Don't know yet,\" Eric answered. \"Usually about this time we both cum so we haven't gone any deeper into the fantasy.\"\n\n\"...or if I maybe I accidentally touch something?\" She continued.\n\nKate was getting a little buzzed and started to get into the discussion. She was starting to lean in closer and ask more intimate questions while dissecting every word of his answers. Eric was intrigued that she'd worked in 'touching something', but that had honestly never come up when he and Tonya discussed every possibility they could think of.\n\n\"I never even brought that up,\" he answered. \"We had this 'watching' fantasy before the kids were born, before she and Lisa ever played with each other's boobs. Back then I wouldn't have ever thought she would try anything like this, but who knows what else she's in to now?\"\n\nEric tried to let the touching discussion die down. Other than that he was pretty sure Kate was interested, but she hadn't committed yet. He had one last offer he hoped would convince her to at least show up for dinner. Hopefully a good dinner and a good buzz would seal the deal.\n\n\"If you're not sure about the sex part at least come over for dinner and drinks. I was thinking of grilling some shrimp. Sometimes after dinner we just sit on the porch and smoke a joint. The neighbor's aren't close enough to know what's going on. It's so relaxing sitting there surrounded by trees and stars listening to the sounds of nature while getting a nice buzz...\"\n\n\"It would be great to get out of the house,\" Kate responded. The look on her face made Eric think she was imagining different scenarios trying to decide if she wanted to do it or not.\n\n\"Then after dinner, If you're not ready to watch two horny people get naked, we can have a code word to give you a chance to back out. I'll ask if you want to smoke another joint, and if you say 'no' we won't go any further. If you say 'yes' we'll know you want to do it.\"\n\nKate thought about her most recent sexual fantasy she used when taking care of herself. It was so old she couldn't remember what phase of her life she had first imagined it but was pretty sure it was 20th century.\n\n\"So after you guys cum, I just get up and leave?\"\n\n\"Well... we have discussed this part. Is there any way we could watch you cum, too? I mean, hopefully you'll be horny and want some relief as well. You could take a LOOOOOONG drive home before getting that relief, or it might be kinda exciting to do it with us right there...\"\n\nKate thought that sounded quite a bit sexier than her 20th century fantasy, and it would be good for months of enhanced masturbation.\n\n\"Sounds hot - let's do it,\" she answered.\n\n* * * * * * * * * *\n\nAlthough dinner was tentatively scheduled for 7:00, Kate arrived at 7:15. The 15 minutes she was late was caused by the 30 minutes she drove around wondering again if this was something she should do. She was so horny and wanted to watch them - she had thought about it repeatedly since she and Eric met to talk about it. She was comfortable that masturbating was her entire sex life, and some new fantasy material would be helpful. But 'should' she do it? Once everyone came and the thrill of the sex was gone would it be weird? What if someone touched someone - would that cause a problem? Would she want to leave right away but be too drunk to safely get home? She finally decided she was very horny and couldn't drive the one hour home without cumming first. If she didn't go through with it she was going to have to find a secluded place to get relief first, so she turned into their neighborhood and parked in the driveway. Tonya had been looking out the window and met her there with a margarita.\n\n\"Kate! So good to see you again - hope a margarita's OK...\" she said enthusiastically as she handed Kate the drink and hugged her. \"Come on in! Eric's is in the back yard grilling.\"\n\nTonya took Kate by the hand and lead her into the house. She hadn't seen Tonya in years, but any uncertainty quickly subsided from a combination of Tonya's infectious enthusiasm and the long, shapely legs that hurriedly guided them up the sidewalk. She quickly remembered the happy hour years ago when she told Eric she would have sex with his wife, and she wondered if he remembered that when he asked her to watch them. As watched the other woman's ass move seductively as she lead her up the drive it was arousing knowing she would soon see her naked.\n\nOnce they were in the den they saw Eric at the grill.\n\n\"Kick your shoes off and make yourself at home - more drinks are in the blender on the counter if you need a refill. We're a couple ahead of you. The shrimp will be ready in a few minutes. We're SO glad you could make it!\"\n\nTonya was excitedly rambling as she again grabbed Kate by the hand and pulled her to the back door. They met Eric on the patio as he removed the skewers of shrimp from the grill.\n\n\"Hey stranger!\" he smiled as he gave her a quick hug. \"It's been so long...\"\n\n\"Yeah, like almost a week,\" Kate replied with a seductive grin.\n\nAny hesitancy Kate felt on the drive was quickly gone. Looking around the back yard she could see what Eric meant about neighbors being too far away to know if anything naughty was going on. Trees surrounded the back yard, far enough away to provide space for entertaining but close enough and thick enough to shield them from curious eyes. She saw the patio chairs and thought how relaxing it would be to sit in the semi-darkness drinking, and possibly smoking, without wondering who could be watching. Then she imagined Eric undressing Tonya next to the chase lounge with the cool night air causing goose bumps on her naked...\n\nOh man she was already horny. Did they really need to eat? Could they just get down to business RIGHT NOW? Remembering their discussion on safe-word, and the enthusiasm Tonya greeted her with, and the warm, tingly feeling already between her legs, she was ready to let Eric know she was fully in.\n\n\"Eric - it's such a beautiful night. I brought us a little treat - do you mind if I light it up?\" she asked as she pulled a joint from her purse. \"I brought a few... just in case!\"\n\n\"Not at all,\" he said as he looked at Kate and then Tonya with a huge grin. He hadn't told his wife about the safe word he and Kate had discussed, but the huge smile he wore while he looked at her let her know it was going to happen.\n\nKate lit the joint, took the first hit, and passed it to Tonya.\n\n\"I love your camisole,\" she said admiring the small, flimsy, yellow fabric that clung snugly to Tonya's 36D breasts. The thin straps didn't cover the off-white bra straps. \"I wish I'd worn something like that. I wasn't sure what to wear...\"\n\nHer voice trailed off as she thought she wasn't buzzed enough yet to complete the sentence with '...to watch some friends fuck.' Tonya jumped in to rescue her.\n\n\"Is pink OK? I have another one you can wear. Your boobs are a little bigger so it might be tight, but I think it would be soooo cute on you.\"\n\n\"I love pink,\" Kate replied.\n\nTonya took her friend's hand and hurriedly led her around the corner. Eric could hear laughter through the wall separating the den from their bedroom, and he could imagine lots of boobs so tantalizingly close. By the time they returned he had three plates made on the table.\n\nAs they sat he noticed how similar his two dinner companions looked. Tonya was taller and had darker hair, large, full boobs, and long, shapely legs. Her camisole clung tightly to her chest, and Eric noticed that she had removed her bra while they were gone. Kate was blonder and not as tall, and her boobs were at least one size bigger than Tonya's, so they stretched the thin, Tonya-sized fabric. He might have noticed that no bra straps were visible below the small straps of her new top, but his eyes never made it that far. He stopped at the outline of her large nipples straining against the tight, pink fabric. Both of his companions were bra-less and a few quick steps from being undressed, and he had to work hard to suppress his imagination so he could attempt to enjoy dinner without an erection.\n\nDinner went smoothly as dusk faded to darkness. Throughout the meal Eric couldn't help but check out both of their boobs. It was so hard trying to not be obvious, and he was busted looking more than once. As they finished eating and cleaned off the table, their light-hearted discussion changed. Everyone knew what was next on the agenda, but no one was sure how to get it started. As the sky turned from dark blue to black the group headed to the comfortable patio chairs. Kate settled in to the one she'd imagined earlier while Eric and Tonya pulled the couch to where they were facing her. As they all settled in Tonya leaned forward and put a hand on Kate's knee.\n\n\"You wouldn't happen to have another joint, would you? That first one was incredible. It's been a while since I've been this relaxed.\"\n\nKate went to her purse and quickly found another small bundle of courage. She lit it, took the first hit, then handed it to Tonya. As they passed it around the threesome, inhibitions quickly melted away.\n\n\"I forgot how horny pot makes me,\" Tonya said taking another long hit.\n\n\"Well, that's good...\" Kate responded taking it from Tonya and taking another hit. \"...if we're going to do this.\" Any inhibitions had been erased by the combination of pot and tequila.\n\n\"Are we going to?\" Tonya asked with a fairly naughty smile spreading across her face.\n\nKate was ready for something exciting and welcomed the direct approach. She'd tried to imagine the past few nights how it would all get started, but none of the scenarios she imagined involved Tonya being the one who initiated things. She took the joint, took a deep hit, then shook her head 'yes' before handing it to Eric\n\n\"When Eric first brought it up I didn't think he was serious. And then I wasn't sure you were on board. But as soon as I saw you tonight I knew you were OK. I was a little nervous at first, and that's why I was late. But now? I'm not really nervous any more. I was more afraid you guys might change your minds now that I'm ready.\"\n\nTonya had a huge smile as she realized it was really going to happen. She took another hit and continued.\n\n\"We never considered backing out. Our sex life has been amazing this week just imagining different possibilities. I'm guessing it will be even better next week.\" She took another hit as she thought about what to do next.\n\n\"Do you have any concerns about us being intimate, or is there anything that's off limits?\"\n\nKate shook her head 'no' to Tonya's questions, then offered, \"It's been forever since I've done anything that wasn't alone time, so I'm excited about anything. As long as you're OK, I'm OK, but when I watch videos they're pretty tame. You know, basic oral, missionary... You guys don't do any whips or leather, do you?\"\n\nTonya smiled and shook her head 'no'. She was horny and ready to get the nights' events started. She took another hit and handed it back to Kate. She stood up and undid the top button of her shorts. She saw both of her companions staring so she undid the second button. The patio went quite as they both watched her next move, and when no one said anything she undid the 3rd and 4th buttons. She Put her hands on the waistband, pushed down, and shimmied until her shorts slipped down her curvy hips and gravity made them a pile of fabric on top of her red-painted toes. She stepped out of the pile and kicked it off to the side of the patio furniture. Down to a pair of cotton panties and a small camisole, she stepped back to Kate and took the joint. She sat down as she took another hit.\n\n\"Gawd, it feels so awesome getting undressed outside.\"\n\n\"Are we going to stay outside?\" Kate asked sounding a little surprised.\n\n\"Is that OK? Maybe we start out here then move inside later if we want? No ones close enough to see, or even know what we're doing. It's a beautiful night, and being outside adds to the excitement.\"\n\n\"Sounds cool to me,\" Kate responded.\n\nEric followed Tonya's lead and took his shorts off as well. He kicked them towards Tonya's then sat back in his chair. He looked at Tonya who looked at Kate, so he looked at Kate as well. Kate looked from one to the other and quickly realized what they were suggesting.\n\n\"Me too?\" Kate cautiously asked as she saw her two dinner companions staring at her. \"Oh, OK.\"\n\nKate stood, undid her shorts, and shimmied out of them like her partners had. When they dropped on top of her bare feet the satiny material of her panties was visible. The camisole was not long enough to reach the top of her panties, so soft, creamy skin was teasingly visible between the two garments. She wasn't naked, but there was very little left to their imaginations. She sat back in her chair, and now everyone was in just tops and underwear. They were just one more step away from first-nudity.\n\n\"You still OK?\" Tonya asked.\n\n\"Yeah, I'm fine,\" Kate answered. \"You're right - it does feel sexy undressing outside. I could get used to this.\"\n\nTonya now stood and looked at Kate sitting in the chair.\n\n\"I'm glad you like it. I have a favor to ask - if it's too much, just let me know. I know you and Eric talked about watching, but I thought it might be sexy if you helped out a little.\"",
        "Kate look perplexed but was able to mutter a tentative, \"OK, but how?\".\n\nTonya took Eric's hand and guided him to stand in front of Kate. She was pretty sure she knew Kate's answer.\n\nEric's t-shirt mostly covered his boxers, but even in the faint light they could both see he was already hard. While looking at Kate, Tonya lifted his shirt with one hand until they could see the fullness of his erection straining against the boxers. With the other hand she rubbed his cotton-covered hardness.\n\n\"Could you finish undressing him for me?\" She continued to rub his aching hard on while waiting on Kate to respond.\n\n\"I can do that,\" Kate said concentrating on Tonya's hand stroking Eric's dick. She took a pillow off a nearby chair and tossed it on the ground next to Tonya. She knelt in front of Eric and beside Tonya. She briefly considered rubbing his erection as well but decided to wait since this was just the first step in their hedonistic adventure. Instead she grabbed the bottom of his t-shirt and quickly pulled it up over his head and outstretched arms. Next she put her hands on his hips. His hardness tugged at the material so that the waist band wasn't even touching his stomach. It was easy to grab the material and pull it out and over the head of his swollen dick. She grabbed the waist band and tugged slightly until they dropped to a heap on the floor. Now his naked erection was at eye level. She hadn't been this close to a man's hardness in years, and it took all of her will power not to take it into her mouth. She did take a moment to breath in his musky scent. This was the second addition of the night added to her file of masturbatory fantasies she would start using very soon.\n\nOnce Eric was naked, Tonya pushed him down on the couch. Kate was still in front of him so Tonya snuggled close to her and took his dick in her hand. Shoulder-to-shoulder with another woman, she turned to look at her and make sure she was ready. The lustful look in her eyes was all the motivation she needed, so she took his hardness in her mouth.\n\nEric moaned and grabbed Tonya's head. The second, blonde head just inches away from Tonya's familiar darker hair reminded him this was not a regular blow job but the next step in an exciting, sexual adventure. As her mouth took him in again and again the warm wetness of Tonya's soft, full lips wrapped around his erection was even more pleasurable than when they were alone. It would be so easy, and so amazing, to release in her mouth and relieve the sexual tension that had been building in him since dinner. But tonight was not about quick, easy relief. It was about experimenting, and watching, and building memories that could be relived in masturbatory fantasies for years to come.\n\nKate had never been so close to real people having sex. She was just inches away as she saw Tonya's lips moving up and down the shaft of Eric's dick. She could see the tightness of his skin coated in the glistening saliva from Tonya's mouth, and she could hear the gurgling sounds of that saliva mixed with his soft moans. She was so close that she got a faint whiff of Tonya's shampoo and also the combined smell of Eric's muskiness combined with Tonya's saliva. It smelled like sex - hot, wet, live, sex.\n\nAs she watched Tonya's head moving up and down Eric's dick, Kate moved behind Tonya and pressed her own body closer to the soft, mostly-naked curves of the other woman. She felt even closer to the sexual act and couldn't resist running her hands through Tonya's hair while feeling her engulfing his dick. She inhaled the fragrance of Tonya's hair, and even a hint of it's taste as it brushed against her lips. She moved Tonya's hair off her neck so she could nuzzle that sensual area while smelling and tasting her skin. She was now fully, sensuously immersed in their sex, and her own desire was building.\n\n\"Ooooh, I really like that - please don't stop...\" Tonya begged, briefly releasing Eric's dick from her mouth while also pulling her hair off her own neck, exposing her sensitive skin to Kate's lips.\n\nKate did as she was requested, lightly brushing her lips against Tonya's freshly-exposed skin. As she felt Tonya melting into her touch Kate moved her hands down Tonya's curves until she found where her top met bare skin. She separated from Tonya's back just enough to pull her camisole up to her shoulders uncovering her large, soft boobs. She did the same with her own top then again snuggled close to Tonya, pressing her boobs against the other woman's naked back. Her hands explored Tonya's body - tantalizingly caressing her arms, back, sides, and hips, and even occasionally caressing her boobs. The feel of another woman's skin against her own was incredibly erotic, and she felt the excitement building inside her for the second time.\n\nEric normally loved watching his hardness sliding in and out of his wife's mouth, but tonight he barely noticed that as he was distracted by Kate caressing Tonya's body. He wished they were both naked, but the night was young. Beside, even now the sight of her so close to Tonya while Tonya sucked his dick was too much. He needed a break before he came too soon and ruined the night's plans.\n\nTonya could tell Eric was about to explode so she let his erection fall from her lips. She stood up, turned to face Kate, then pulled pulled Kate as well. They were face-to-face, just inches apart, their breasts proudly exposed, their tops gathered at their shoulders, and their panties the last woeful attempt as modesty. Tonya hurriedly grabbed Kate's top and pulled it off.\n\n\"Now do mine,\" she commanded.\n\nTonya lifted her arms up, and Kate lustfully pulled the camisole up and over them. Although the flimsy material had left little to the imagination, her full 36D boobs were now fully exposed to the night air and her companions. The two well-endowed women now stood face-to-face, finally topless, their mostly naked bodies within easy reach of each other.\n\nKate had never really thought about seeing other women naked until Eric told her about Tonya and Lisa playing with each other's boobs one night while drunk. When he told her they never gone any further, her alcohol took over and she told him she would have had sex with Tonya. A few times since that night she'd been intrigued by images or videos of girl-on-girl sex but never really fantasized about being with another woman. Now, with another naked woman just inches away, the tingling between her legs made her realize it was a new bucket list item. There was so much more to happen that night, but she knew if she saw nothing else she would have many satisfying nights fantasizing about Tonya's boobs so close she could caress them. But there was still more to do.\n\n\"Panties, too, please...\"\n\n\"Everything?\" Kate asked looking at Eric, then Tonya, then back at Eric. Tonya shook her head 'yes' and again grabbed Kate's hands. She pulled the other woman toward her, and once Kate's arms embraced her she guided them downward until she felt them on her ass. Their soft bodies pressed against each other providing temporary warmth from the cool, night air. Kate caressed the soft material on Tonya's butt then looped her thumbs in the waist band of her panties. With a quick motion she quickly pushed the panties down Tonya's hips, past her knees until they joined the rest of their clothing on the porch.\n\nFor a quick, incredibly sexy moment, Tonya felt her naked body pressed against Kate. She thought of how she felt when Eric mentioned Kate wanted to have sex years ago, and her mind raced with possibilities of new things they could experience together. But the reality of the moment was that she was about to have sex with Eric. He would scratch the itch between her legs, then maybe later... Tonya stepped back and out of the panties around her ankles and left them on the ground by her shorts.\n\nKate didn't care anymore if they knew she was staring at Tonya's naked body - she looked up and down the other woman's body noting every detail. Tonya was slightly taller than her with large, real boobs. Her nipples were large and dark pink, and seconds ago they had been pressed against her own. The large boobs curved into a small waist which curved into womanly hips which framed her neatly-trimmed pussy. Her long, shapely legs ended with feet adorned with red-painted nails. This vision was another new addition to her file of masturbatory fantasies. Never in her life had she thought of a woman while fingering herself, but she knew it would happen the next time she was alone.\n\n\"Thanks,\" Tonya whispered standing fully naked in front of Kate. \"I've never been undressed by a woman before. It was even sexier than I imagined.\"\n\nShe steep forward and embraced Kate, this time studying how much pleasure she felt where their bodies touched. Tonya had always had above-average sized tits, but Kate's were even bigger. They were full and soft, and felt so sexy against her own. She caressed the silky material covering Kate's rear and thought for a moment about taking her panties off as well. But she was confident she would see her new friend masturbate soon, and she thought it would be sexy to see her start with her hand inside those panties. So she continued to lustfully caress Kate's body, and nuzzled her neck and breathed in the fragrance of her hair. As she took in all the sensuality of another woman, she knew she was wet and needed to cum. She released Kate and sat back down on the couch, then pulled Kate to one side. Then reached out to Eric, took his hand, and pulled him to her other side. It was tight on the smaller outdoor couch, but their three naked, or mostly naked, bodies pressed together added to the sensuality of the moment.\n\nTonya kissed Eric as hotly as she could. First she anxiously explored his mouth with her tongue, then when she had him moaning she started flicking the tip of her tongue across his lips. She had told him once that's how she would eat pussy if she ever got the chance. Tonight with another almost-naked woman on the couch, it was even more seductive than in the past. She finally stopped and looked into his eyes.\n\n\"I need you to make me cum...\"\n\nEric shook his head 'yes' and knelt on the pillow at Tonya's feet. She instinctively spread her legs, gently placing one across Kate's lap. He crawled between them, and without teasing he put his face in her most private area. His slid his tongue deep inside her already-wet pussy, and when she loudly moaned he grabbed her hips and pulled her hard against his mouth. With one hand she grabbed his head and guided his skilled mouth to the points of greatest need while the other reached for Kate.\n\n\"Oh god that feels good,\" she moaned as he alternated between flicking his tongue across her clit and then probing it in and out of her wetness. \"Yessssssss, like THAT!\" she screamed.\n\nKate was sitting next to Tonya on the outdoor couch. It was a strange but very sexy feeling to be almost naked next to a fully-naked woman who was getting oral performed on her by her naked husband. She continued holding Tonya's hand getting more aroused each time the other woman moaned. Her other hand caressed Tonya's leg as it twitched in her lap each time Eric hit a sensitive spot. The sights and sounds of sex were overpowering, and Kate's need for sexual release built each time Tonya felt pleasure.\n\nTonya had her eyes tightly closed as she concentrated on the pleasure her two partner were giving her. When she opened them she saw Eric's head between her legs and almost-naked Kate next to her. She looked into Kate's eyes and smiled, then as she got closer to orgasm she pulled Kate against her so that she could feel their bodies touching.\n\n\"Oh god I'm going to cum,\" she panted as held Kate tightly. \"You're both going to make me cum!\"\n\nEric had gone down on Tonya thousands of times since they first met. He loved the way she tasted and smelled when he crawled between her legs and the way she moved as he brought her to orgasm. Most nights he would get her close only to back off and gently let her down. Then when she was whimpering as the near-orgasm drifted away he would again dive in harder and faster to bring her to a thundering orgasm. Tonight there would be no teasing. Tonight would be about quick, otherworldly orgasms powered by the addition of a nearly-naked spectator holding and caressing her. The traditional slower orgasms they did when making love would need to wait for another night.\n\nEric quickly nibbled on Tonya's clit, then as she gasped from that surprise he forced his tongue deep inside her pussy. She let out a quick scream as the waves of her first orgasm of the night raced from that point he stimulated her throughout her body to her arms, legs, fingers, and toes. Then as her body relaxed he quickly flicked his tongue across he clit extending her pleasure.\n\n\"Oh fuck, I'm cumming - holy shit this feels amazing. I'm... cumming!!!\"\n\nKate and Tonya tightly held each other as a massive orgasm pulsed through Tonya's body. Eric knew her body and her orgasms intimately and knew no more stimulation was needed. He was able to finally enjoy watching their two soft, naked bodies intertwined, and for the first time caress Tonya with one hand and Kate with the other. He had imagined similar images many times while jacking off, but the reality even more incredible.\n\nThe orgasmic convulsions pulsing through Tonya's body finally died down. She took a few breathes trying to relax then finally opened her eyes. Kate was still there with her, their hot, naked skin touched from their embrace. Eric still knelt between Tonya's naked legs, his face drenched in her pussy juices, his hands still caressing each of them. The three of had just shared an orgasm, and it was one of the hottest, most sexually arousing experiences of their lives.\n\n\"Oh my god, that was the most amazing orgasm I've ever had. It felt like it lasted forever,\" Tonya gasped trying to catch her breath.\n\n\"I have to admit...\" Kate added, releasing their embrace and sitting up. \"...you were so sexy. I've never watched or felt a woman cum before. I could get used to that, too.\"\n\nTonya smiled, and as they all sat their recovering from the shared erotic moment, her hand closest to Kate casually caressed Kate's bare leg. Eric got up from between her legs and sat in the chair across the two of them. As often happens with men, his hand lightly stroked his cock as he switched between lusting after their boobs and watching Tonya rub Kate's leg. Tonya finally spoke.\n\n\"So you enjoyed that?\"\n\nKate shook her head 'yes'. Tonya looked pleased and added one more question.\n\n\"Did you enjoy it enough that maybe you need to cum now?\"\n\n\"Oh, yeah - I can definitely cum...\" she answered with a naughty grin.\n\nWith the image of Eric's face buried between Tonya's creamy thighs, and the sounds of her soft moans getting louder as she got closer to orgasm still vivid in her mind, Kate spread her legs and reached inside her panties. She'd been horny since she first checked out Tonya's ass hours ago, and wet since they stripped their shorts off. Her middle finger slid easily inside her wetness, and when her ring finger followed she closed her eyes and moaned as the pleasure quickly began to build. She knew this was going to be fast.\n\nTonya had recovered enough to roll on her side where she could closely watch Kate's every move. She placed her hand on Kate's arm close to where her hand disappeared into the satiny panties and imagined how amazing that hand felt as it explored between her legs. She knew Eric loved watching her masturbate with her panties on, and as she watched the movement inside them she could imagine what was happening in that most private area. This was emphasized by the sound of Kate's fingers moving in and out of her wetness and the thrusting of her hips moving forward to meet her touch.\n\n\"You look so sexy doing this. I bet it feels so good...\"\n\nKate again shook her head 'yes', and her seductive smile reinforced Tonya's assumption.\n\n\"It does feel soooooo good...\" she whispered. \"I'm going to cum so hard after watching you. It's going to be so sexy cumming in front of you guys.\"\n\n\"I can't wait to see you,\" Tonya teased. \"And after you cum, Eric's going to fuck me. Are you going to watch that, too?\"\n\nWhen Tonya said 'fuck me' Kate's eye's closed tightly as she quickly imagined her partners fucking. Then the thrusting of her hips quickened, and the sound of wetness between her legs got louder.\n\n\"Oh, yeah - I can't wait to watch that,\" she moaned.\n\nTonya couldn't take her eyes off the hand moving inside Kate's panties causing sexual pleasure. She was ready for her imagination to take a break and her eyes to see the actual pleasure, so she grabbed the waistband of Kate's panties. Kate dutifully lifted her hips to let Tonya slide them down her bare legs. But instead of adding them to the pile of unused clothing on the patio she instead held them to her face and breathed in Kate's womanly scent. She'd seen Eric do this after taking her panties off in the past, and it added to the intimacy of the evening.\n\nKate wasn't expecting Tonya to smell her panties, and she was surprised at how it aroused her. When Tonya saw how it pleased her new friend she used the satiny material to lightly, teasingly caress Kate's stomach and legs, and as she saw her reaction she even dragged the material across her breasts and nipples. But then she dropped them and again placed her hand on Kate's arm so she could feel the warmth and softness of the other woman's skin and experience each movement as it caused pleasure.\n\n\"Is this OK? I want to feel you cum,\" she whispered looking into Kate's eyes.\n\nKate shook her head 'yes' then whispered back, \"I'm about to cum. It feels so good, I'm going to cum sooo hard.\"\n\nNow Eric and Tonya could see Kate's fingers rapidly moving in and out and watch her face as pleasure built between her legs. They had never seen her orgasm before but knew the signs of impending rapture. Her breathing quickened, and like Tonya, soft moans got louder and more enthusiastic.\n\nKate brought her knees closer to her chest opening her pussy fully to her probing fingers. Her eyes were tightly shut as she concentrated on the pleasure that just reached crescendo, and her hand was a blur as her fingers moved rapidly in and out of her womanhood. As the first wave of orgasm raced through her body she could no longer contain the moan that fought to escape her lips and let anyone nearby know how amazing she felt. She held her fingers deep inside and massaged the last remnants of her first ever orgasm experienced with another couple. When the final waves pulsed through her she finally relaxed, and with a smile she let out a faint laugh.\n\n\"Oh god, that was so hot. I can't believe we just did that.\"\n\n\"It was very sexy,\" Tonya agreed, her hand still on Kate's arm. \"I've never watched another woman cum before, either. Eric always tells me how he loves how I look when I orgasm, and I have to admit - it was so hot watching you. So fucking sexy!\"\n\n\"I'm glad you liked it,\" Kate replied. \"So are you guys going to fuck now?\"\n\n\"I bet Eric's ready,\" Tonya said looking toward her husband. \"He was about to pop when I was going down on him.\"\n\nEric enthusiastically agreed.\n\n\"Well, I really want to watch you guys do it. I never knew I was such a voyeur.\"\n\nKate sat up giving Tonya more of the couch. Her panties had fallen between them, so she grabbed them. She'd never thought of smelling them before, but after watching Tonya do it, she had to try. The musky smell was definitely erotic.\n\nTonya spread her legs and reached her hand out to Eric. He got up from his chair and stood between her legs where she stroked his erection.\n\n\"You ready?\" she asked, knowing the answer by how hard he was.\n\n\"Uh... yeah!\" he answered. Been ready since you guys came out braless,\" Eric answered as he knelt between her legs, Kate just inches away.",
        "Tonya was growing more comfortable with their new partner. A few minutes ago she asked for permission to do do the things she wanted Kate to do. But the time for permission was past.\n\n\"Kate,\" she seductively whispered. \"Since you've been so great at helping out tonight, I want you to put Eric inside me.\"\n\n\"Really?!\" Kate excitedly asked without waiting for a response.\n\nShe grabbed the shaft of Eric's dick and slowly guided the head to Tonya's waiting pussy. The three of them watched the tip disappear inside her, and then as a single, slow push put him fully inside. She moaned loudly, then gasped at the temporary emptiness as he pulled out. He pushed in again a little harder until she made 'that' moan that let him know he found 'the' spot. He pulled out again, this time depriving her of the fullness she craved even a little longer, and when her whimpers told him she was at the limits of his teasing, he thrust in much harder. This time she screamed out loud when he hit that magical spot.\n\n\"Oh yeah, that feels so amazing! Fuck me hard!!\"\n\nEric looked at Tonya from where his dick entered her to her face wearing a look equal parts pain and pleasure. Her hair just touched her shoulders and had the sexy, just-fucked look, her amazing 36D tits moved with each thrust, her small waist curved into luscious, womanly hips that framed her neatly trimmed pussy that absorbed each of his thrusts. With a slight tilt of his head he could see her long, beautiful legs wrapped around him and her red-painted toenails pointed behind his butt like so many times they had fucked during their time together. But unlike all those other times he could also see Kate, just as naked as Tonya, snuggled up next to his naked wife. Her hands caressed Tonya's arms, and stomach, and waist, and as she made circles on Tonya's body her hands brushed against the other woman's boobs and even grazed the hair on top of her pussy.\n\nThe longer Eric fucked Tonya, the bolder Kate got. She eventually squeezed each boob, and even let her fingers graze the hair covering the other woman's pussy. She was only minutes removed from her first orgasm of the night, but she was already in need of another. Part of her wanted to quickly satisfy her own desperate need and possibly cum with them, but just as much of her wanted to continue being a part of her friends' next orgasm.\n\nTonya knew she was going to cum fast and hard. This was a night like no other, and the extra naked body next to them and all the stimulation it provided, were about to give her pleasure beyond any she'd ever experienced. She reached into Kate's lap, retrieved the panties, and again held them to her face. As Eric thrust his erection in and out of her, the scent of Kate's pussy combined with the sound of her own sexual juices for the most erotic stimulation.\n\n\"Gawd, Kate - you smell so amazing\"\n\nEric was too aroused at the sight of the two naked women to hold his orgasm back any longer. Most nights he would kiss Tonya deeply when he came so that he could feel her soft tongue excitedly probing his mouth while he shot his load inside her. But tonight was different, naughtier. Instead of slowly fucking her in the beginning then fucking harder as she got more aroused, he started with hard, passionate strokes as deep in her as he could go. This was unexpected, and even though there was no slow build up, the pleasure was immediate and unusually intense. She spread her legs as wide as she could, and each thrust slammed against the deepest reaches of her womanhood.\n\n\"OH... MY... GOD! THIS IS SO FUCKING AMAZING. I'M GOING TO CUM AGAIN!!\"\n\nEric was surprised at how fast Tonya came. As he watched her body spasm with wave after wave of orgasm, he pulled out. While she continued to cum, he gripped his dick and furiously stroked. Reminiscent of the early days of their relationship so long ago, he came on her naked body. Also reminiscent of his younger days the first pulse landed on her neck and boobs. The second shot of sticky globules landed on her stomach. As the last of his energy ebbed from his body the last few pulses landed in the area above her pubic hair and even in the hair itself.\n\nKate wasn't sure how the big finale would happen, but she was very surprised when Eric pulled out came on Tonya's body. In a way, the public ejaculation was much sexier than if it had been a private act between he and Tonya. As she watched the last drops flow onto Tonya's stomach, she noticed a glob of cum on her nipple - it was the perfect representation of their night together. Without thinking of how it would impact the reminder of the night she absentmindedly placed her finger on the glob and swirled it around on Tonya's nipple.\n\nTonya and Eric both watched as Kate traced a circle around Tonya's cum-covered nipple. During all the fantasies they had imagined since they first asked her to join them, they never once included anything like this. She continued to run her finger through the trail of cum from Tonya's boobs to her stomach, and as they watched her seductively tracing absent-minded patterns in that, they both wondered if their erotic adventure for the night was just beginning. And as they lustfully watched her hand explore the droplets adorning the fringes of Tonya's pubic hair she looked at bother of her horny companions.\n\n\"If you don't think you're gonna like this, you might want to stop me.\"\n\nWithout waiting for an answer she bent down and licked the first drops of cum from Tonya's nipple. Tonya looked at Eric whose smile told her he was definitely going to like it.\n\n\"I don't want you to stop,\" Tonya softly whispered as she started stroking Kate's blonde hair."
    ],
    "authorname": "WhO2",
    "tags": [
        "watch",
        "voyeur",
        "group",
        "mature",
        "helping"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-extra-person-watching-helping"
}