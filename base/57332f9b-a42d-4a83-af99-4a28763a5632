{
    "title": "Trick Shot Hustler",
    "pages": [
        "All characters in this story are over the age of 18.\n\n*****\n\nI blame the color of money. \n\nNo not green! I mean the movie Color of Money. Paul Newman before he became the king of salad dressing, Tom Cruise when he was still more...sane, I guess. And the still young, hot-as-hell Mary Elizabeth Mastrantonio, oh my god the ass on that woman. She was a fantasy of mine from the first time I saw that movie till...\n\nAs I was saying, I blame the Color of Money for my addiction to playing pool. I went out the very next day and tried to find a Balabushka pool cue only to find out it was like trying to buy a true Stradivarius violin. There out there...if you have the money.\n\nWhich I didn't.\n\nAnyway, my shattered dreams aside, I started playing pool at the local pool hall. \"Rackums,\"a place that had been there since my grandfather's day and they hadn't changed anything but the ash trays in all that time. The tables might had been re-felted at some point before I was born, but I'm sure the tables themselves were played on by GIs from both World Wars.\n\nThe guy that ran the place was called Art. He had probably been there longer than the tables. Half-Indian, he looked like he was made from the same mahogany as the table legs. What that old man knew about pool and how to play it, well it could have filled volumes. I would love to say that he taught me all his secrets, but the truth is I think he was annoyed that I was even in the place. He didn't give me the time of day other than to take my money for a table.\n\nNope, I learned to play by watching others play and by trying to do what they did. Sometimes that worked, but not always. Then I made an amazing discovery. There were books on playing pool. Books that would show me how to do the things I couldn't figure out by watching. \n\nOf course, I needed a place to learn to play without looking like a newbie. I didn't want to look like a complete beginner down at Rackums. That was like throwing chum in the water for sharks and jumping in to pet them when they showed up. What I really needed was a pool table of my own.\n\nAgain, back to the money issue... not the color of it, the lack of it.\n\nSo using that classic strategy, I did what everyone without funds does: I mooched off my friends, or as the case would be. a friend. His name is Greg Thompson, and we have been friends since high school. He had gone into the telecommunications business right out of school, meaning he went to work at a T-Mobile store selling cell phones, and now at the age of twenty two he was...still selling cell phones at a T-Moble store. I think he was assistant to the assistant floor manager.\n\nBut...he had a pool table in his basement. Okay, the still-living-at-home-with-his-parents guy's parents had a pool table in their basement, but that is all semantics. He had a table! And he said I could come over and play whenever I wanted to play. That was all that mattered! \n\nSo on one of my typical Saturday afternoons with nothing to do, that was where I was. In my friend's parent's basement shooting pool...by myself. If you've never played pool by yourself, it can be the most challenging game you've ever played, or it can be the most boring thing you've ever done in the world.\n\nI had been playing for about two hours. I was getting past the challenge stage.\n\nThere was, unfortunately no one there for me to play against. My friend was off at \"Cell Phone Hell\" trying to teach a seventy year old lady how to program her contacts list. Not that playing him was much of a challenge anyway. He really sucks at pool. Now his dad, Jack? His dad can give me a hell of a game and doesn't mind playing for hours.\n\nIt's kind of sad that I'm almost a better friend with his dad in fact, than with him. Jack was always a good one to sit with between games,talking over a beer. I think at times he sees me as the son he wished he had. I get all choked up when I think that.\n\nThen there is Casandra. \n\nGreg's younger sister. At some point back when we were in high school I made a joke about his younger sister being in the idde-bitty titty-comittee... and she heard me say it.\n\nYeah...\n\nShe hates my guts with all the tenacity of a pit bull on a rope. She never spoke to me again, ignored me if I said hi, closed the door in my face when I came over. I can't prove it but I think she was the one that hacked my Facebook account. \n\nI swear on a stack of Bibles ten feet high, those pictures are Photoshopped!\n\nAnyway, since just out of high school (vengeful, sadistic, computer-genius, younger sisters aside) that pool table at the Thompson's house might as well have been mine for all the time I spent over there playing. I would practice things, trick shots, ball English, stuff like that...over there till I had them perfect. Then when I was sure I had the whatever-it-was-I-was-trying-to-learn-to-do-perfected I would go to Rackums and try to use that newly acquired skill to hustle the local players. Men who had probably seen that same shit before I was even a gleam in my daddy's eye.\n\nI lost a lot of five dollar bills to Art's denture-grinning friends in those years.\n\nIt was in the wake of one of those educationally expensive butt-whoopings that I went to the Thompson's basement and, taking my old Brunswick Challenger in hand, proceeded to play till my eyes were blurring. I was so pissed at myself. This was no longer just a hobby, this was quickly becoming what I wanted to do for a living. I wanted to play pool for a living, and here I was getting my ass handed to me by a bunch of geriatric cases at a local dime-a-play pool hall.\n\nWith the balls being ignored for the moment, I was sitting with the edge of my butt on a wood stool, leaning my head against the side of my cue, rolling the hard wood across my eyebrows to try to relieve the growing headache between my eyes. I looked up when I heard the basement door open and a rapid fire patter of feet down the stairs.\n\nCasandra in a towel.\n\nCasandra in only a towel.\n\nCasandra who, upon seeing me, jumped like a snake had bitten her and screamed at the top of her lungs!\n\nIn fact she screamed so loudly she nearly scared me.\n\n\"WHAT THE HELL ARE YOU DOING DOWN HERE!\"\n\nMoving the cue out from my cheek, I spun it in my fingers, caught it, and then made it tap the floor.\n\n\"Here is a clue,\" I said, trying to get the first shots in for what I could see was going to be an epic fight.\n\n\"Fucking sneaking bastard, hiding down here in the basement! I didn't know you were here! What if I had come down here naked?\" She pulled her towel tighter around her body.\n\n\"I would have gotten the free floor show. Look, Cassy I'm sorry...\"\n\n\"DONT CALL ME CASSY!\" she screamed at the top of her lungs.\n\nOkay, I wonder what that's about? Everyone in her family calls her that. All her friends call her that. I guess I'm not listed as either one so I have to go with full first names why she calls me lovely pet names like bastard. I leaned my pool cue back against my cheek and waited for her to leave so I could get back to this game of pool solitaire.\n\n\"I don't fucking like it that you get to come and go in my house like this. You're not family; you sure as hell aren't a friend of mine, yet I have to put up with you skulking around in the basement! You're probably why I keep losing panties from the laundry room, you fucking pervert!\"\n\nAlrighty then, not taking that one without something said.\n\n\"If your underwear is going missing you might want to look under your brother's bed. Panty sniffing is more his speed than mine.\" I absently let the end of my cue rub a circle on the floor. I just wish she would get whatever clothes she wanted to get and go her ass back upstairs. I could tell by the look my comment made that that was not likely to happen anytime soon.\n\n\"You nasty-minded shit!\" She looked around for something like she was trying to find something to throw at me. \"I'm going to tell Greg you said that! No! I'm going to tell my dad you said that.\"\n\n\"Feel free, but you still might want to go check under Greg's bed for your underwear. I know I saw something pink and lacy poking out from under there the last time I was up there. When I mentioned them, he claimed they were a gift from his girlfriend.\"  \n\n\"He doesn't fucking have a girlfriend. He has a couple of what claim to be women that he flirts with on World of Warcraft.\" She stopped and then her face changed expression to one of embarrassed disgust. \"Pink? With lace around the top edge?\"\n\n\"Thong,\" I said simply.\n\nCasandra's face turned a brilliant shade of red. I just did hear the low whisper. \"I'm going to fucking murder him.\" In a towering-rage filled huff, she stalked to the laundry room and slammed the door. I heard a long, steady stream of cuss words begin to peel the wallpaper off the walls.\n\nWith a chuckle, I went back to my game. \n\n\"Oh Greg, you sick fucker,\" I muttered as I leaned forward to shoot the five-ball into the corner pocket. It was an easy shot that I managed to make look impossibly tricky. I mean, thank god I called the corner pocket at the last second.\n\n\"Shit shots don't count,\" I said to myself disgusted, and went to get the ball-in-hand. I looked up when Casandra opened the laundry room door. She was dressed in loose jogging shorts and a tank top. I saw the straps of her sports bra. It must have been one that matched the thong in her brother's bedroom; it was the same color. \"Do they?\" I asked her out the blue.\n\n\"Do they what?\" she stopped and looked back at me.\n\n\"Just say yes,\" I told her as I chalked the end of my cue.\n\n\"The hell I will. Do they what?\" she demanded.\n\n\"Do shit shots count?\" I asked, no longer interested in what I was trying to get her to do. I went back to trying to get the six ball to go where I wanted it to go.\n\n\"No, they don't. If you don't call it it doesn't count,\" she said with assurance. \"Unless you're talking about the song by the band Drive-by Truckers. Then yes they do count.\"\n\n\"What?\"\n\n\"Shit shots count if the table is tilted.\" She sang a line from a song. \"They're like one of my most favorite bands.\"\n\n\"Most... favorite? Most? Favorite? Most! Where the hell did you take English classes?\" I asked leaning back from the shot I was about to miss by a mile.\n\n\"The same crappy public school you went to! Unlike you though, I graduated.\" She glanced down at the table then back at me. \"Don't you get tired of playing with yourself?\"\n\nI coolly looked up at her smirking face.\n\n\"Do you?\" I asked in a low whisper. I loved the blush that came to her face. I grinned at her embarrassment. \"Don't try and dish it out if you can't take it right back.\"\n\nLeaning in, I didn't break eye contact with her as I sank the six-ball into the corner.\n\n\"You're so full of shit it isn't funny, you know that?\" she said, cocking her head and shifting her weight onto one foot. I noticed then that the last couple of years had been more than kind to her. She was still not much more than flat chested but she had a very nice pair of legs, and from what I could see, she was filling out those shorts she was wearing rather nicely from behind.\n\n\"How so?\" I asked, looking for the seven ball. Not finding it, and remembering I had already sunk it in the break, I did find the eight. In a place I didn't like it to be at all. Hum...\n\n\"You're trying to come off like you're some kind of hot shot. You're nothing more than a four-eyed, high school drop out, trying to hustle pool to earn a living. How fucking pathetic.\"\n\nOuch...Dig to the bone while you're at it.\n\nLooking up at her, I tried to find a quick response to that, but there weren't words. No... there were not words.\n\n\"Eight in the right side.\"\n\nBringing my cue stick up till the end was nearly touching the ceiling, I popped down on the cue ball with enough force that it jumped into the air. When it came down, it hit the eight, kissing the ball on its black ass, then rolled down the side rail and tapped the nine-ball. The nine rolled to the corner pocket and hung there. The cue stopped right where I wanted it to be. And the eight dropped.\n\n\"Nine in the corner.\" I watched the cue spin over and drop the nine-ball.\n\n\"Luck, as much as anything,\" she said dismissively.\n\nPicking up the chalk I dressed the end of my cue.\n\n\"Can you play?\" I asked as I leaned my stick against the notch in the stool. I started to rack the balls for another game of nine ball.\n\n\"Yeah. Why?\"\n\nReaching into my pocket, I pulled out my wallet. Inside was the very last of my weekend winnings. I had given the punks at another local hole a thrashing. Of course they didn't know where to hold their sticks for the most part, but they wanted to play, and they had cash. Then, feeling at the top of my game, I had gone to Rackums. Mistake. Looking at Casandra, I wondered if I was about to make another one. I had let her tone finally get to me. I pulled three twenties from the wallet and laid them on the stool.\n\n\"Lets see what you can do. Twenty a game, best of five.\"\n\nShe looked at the cash...just sitting there, all willing to give itself to her. I could see those new shoes she was thinking about written on her face. She moved a few feet closer to look at the money. Then she grimaced. It was not an unattractive look, given it was not far from her normal pissed-at-the-world expression.\n\n\"I don't have sixty bucks.\"\n\nI eased my butt around her and hung the wooden-diamond rack back on the wall.\n\n\"Barter, then.\"\n\n\"Do what?\" she asked turning to follow me.\n\n\"We will play for... something...the equivalent of sixty dollars.\" I met her eyes with mine. \" You said I'm just pathetic. Surely you can't lose a game to someone who is pathetic.\" I let my smirk, the one I practiced to perfection in the mirror, appear. \"That would be worse than pathetic.\"\n\n\"What you got in mind?\" she gave me a disgusted look. \"I'll tell you now not to get that perverted mind of yours to even thinking about sex or me showing you any part of me naked. It isn't going to happen.\"\n\nI leaned the end of my cue till it touched my collarbone. \n\n\"Of course not.\" I slowly let my eyes drop from her face, down her body and then back up to her face. My, my, how she had developed. \"That would be some seriously high stakes pool playing, there. Hell, I would have to take out a bank loan to cover that kind of bet.\" \n\nShe rolled her eyes at the flattery.\n\n\"What then?\" she asked looking over at the wall rack of pool cues.\n\n\"Well, twice now you have called me a pervert. If you're going to name me that I might as well show you I can be one. I want the pair of panties you took off before you took your shower.\" I nodded my chin towards her still-damp hair.\n\nHer jaw dropped.\n\n\"What?\"\n\n\"You want to label me a pervert...well, I can be one. I promise you I can. I'll put sixty dollars against a pair of your underwear.\" I pointed my cue at the stool with the money, and my piece of chalk. \"You get twenty dollars every game you win. If I beat you three times I get your panties.\"\n\n\"Are you out of your mind?\" She started towards the stairs then stopped and slowly turned to look back at me. Her eyes glanced to the money. \"What are you going to do with them?\"\n\nSetting my pool cue across the corner, I moved over till I was standing right in front of her. I noticed then that she had the most adorable splattering of freckles across her nose. Up close she smelled of peach shampoo and vanilla body wash. \n\nLeaning in closer to her ear I whispered, \"This pervert, is going to take them home, bury my nose into the exact spot where your sweet pussy lips rested, and breathe in the scent of you as I slowly jack myself off while thinking of you, and fantasizing about fucking you the whole time...That's what a pervert would do, right?\"\n\nTo be honest, I was expecting her to run up the stairs like a frightened mouse at about that point. What I didn't expect was for her to take a deep breath, try to hide a soft moan, then lick her lips and hide her blush by looking away from me. Her eyes locked on the stool with the three bills, held down by a cube of chalk.\n\nNew shoes? Knowing a twisted pervert would be masturbating to your underwear? \n\nI can honestly say I have never had to make a decision like that. That being said, I can give you no clue as to what was going on behind those dark amber eyes. I watched her face as she thought it over for a couple of seconds. You could have knocked me over with a feather when she walked to the wall and got down a cue stick.\n\n\"Nine-ball right?\" she asked looking at the table.\n\n\"That's what I racked for.\" I picked up my cue. \"We can play straight pool if you prefer. Makes me no difference.\"\n\nShe shook her head, her blond hair dancing across her bare shoulders.\n\n\"You can break,\" I told her when she didn't move.\n\n\"You sure?\" she asked confused. \"You don't want to flip a coin or something?\"\n\n\"Ladies first,\" I told her like she should have known.\n\nShe looked at me and her face assumed that grimace-smirk again.\n\n\"Oh, you're being such an gentleman. If we weren't playing to give you the ability to satisfy a sick sex fantasy, I might believe it.\" She moved around to the head of the table and centered the cue. \n\nI just leaned on my stick and watched. Her brother, Greg, had called it my Gandalf pose. My eyes drifted to the curve of Casandra's hip as she leaned a little, and then I watched her ass as she broke. I should have been paying attention to the start of the game, but those damn jogging shorts were an enjoyable distraction. \n\nLooking at the table, I saw what she had. For me it might been a challenge, but for her I'm sure it was a nightmare. She had manged to sink the two on the break but had severely snookered herself on the three. She was frozen against the six ball. As I planned out what I would have done in that I also watched her working out what to try to do.\n\n\"Fuck it,\" she said softly.\n\nAlrighty, then. The cue ball hit the six, scattered every ball on the table to the four winds, and then sunk the seven. As I watched, the cue had the luck to come to rest in the exact spot I would have chosen to place it for ball-in-hand.\n\n\"Your shot,\" she said softly.\n\nI had to restrain the \"no shit\" look from my face, as I walked around her and settled into place.\n\n\"You do know you can move the cue to where you want it, right?\" she asked, just as I was about to shoot. I stopped and looked up at her.\n\n\"I know,\" I told her. Leaning forward, I touched the felt where I wanted the cue to end up. Taking my shot, I watched the three drop and the cue slide back to right were I had touched.\n\nI can't say that I ran the table easily, but she did not get a shot after that. Her \"fuck it\" moment cost her the first game easily. I stood there and admired, what I was coming to appreciate was a very nice ass while she racked the next game. \n\nAs she watched, I sank the eight and the four on the break then made my way all the way through to the six before I rushed a shot and missed a pocket.\n\n\"Hah! My turn now, bitch,\" she crowed and moved around to take the easy shot on the six I had left her. The seven gone, she dropped the eight with no trouble, then the nine ball followed to give her her first win and to tie us up. She turned to me and stuck her tongue out. \"Nan, nan, stinky boo boo!\"\n\n\"Seriously?\"\n\n\"Oh, shut up an rackum ya pervert. You're not getting my panties at this rate, and I'm going to be high-stepping in the new stiletto heels you're going to be buying me.\"\n\nAs I gathered the balls I smiled. \"I knew you were going to use it to buy shoes. What color?\" I asked as I lifted the rack and stepped back from the table.\n\nShe game me a strange look.\n\n\"Why do you want to know that?\" she asked, as she leaned forwards to break.\n\n\"So I can picture you wearing them as I'm fantasizing about fucking you of course.\" I smiled as that image of her naked except for a pair of high heels appeared before my mind. She gave me a fuck off look and leaned in to take her shot.\"You would look sexy in nothing but a pair of red shoes. Tell me, do you like anal sex?\"",
        "Slack thunk!\n\nOf course, she totally missed her break shot and with hardly any movement from the racked balls to show for being hit, she scratched.\n\n\"You fucking prick,\" she said, as I grinned and I took the cue ball out the pocket next to me. I moved around to where she was still standing and let my hip bump hers to get her to move over. \n\n\"Oh, excuse me, I didn't see you there,\" I said as I placed the cue to the right of center.\n\nShe gave me a slight shove.\n\n\"Don't touch me, you pervert.\" She walked away and stood with her arms crossed as I sent the half-racked balls to every possible point on the table. I let slip a grin as the nine-ball dropped into the pocket right in front of her. She gave me a disgusted look. \"Lucky shot.\"\n\n\"Nope, it takes skill to be that lucky.\" I bragged, even though I agreed with her a hundred percent. That had been pure luck. \"Rack 'em.\"\n\n\"I would love to,\" she said and her eyes dropped to my crotch.\n\nWith my balls wanting to draw up at that threat, I stood there with that shit-eating grin while she set the table. I watched her lean forward to place the gathered balls in the rack. I wished, as the sports bra came into view, that she hadn't been wearing that. The cleavage on that tank top opened up very nicely to put her chest on display. When she lifted the rack away, she looked up and caught my eyes then looked down following my gaze. I heard her mutter \"perv\" as she moved away.\n\nI again set the cue ball to the right of center.\n\n\"For the win.\"\n\nWith my best sledge hammer break, I sent every ball rocketing out from the point of impact. From corner to corner and side rail to side rail they bounced, smacking each other over and over. I looked from pocket to pocket, my teeth starting to clench as motion slowed.\n\nShe began to laugh then stopped as the nine slowly rolled towards the side pocket. It stopped right on the edge. She let out a sigh of relief, picked up her cue, and then her mouth grimaced realizing that the yellow one-ball was in the wrong spot. To hit it, she would have to go around the six-ball and the four. I watched her face as it came to her that if she tapped either one of them, I could place the cue so I would hit the one ball into that barely hanging nine-ball.\n\nI have to give her props. She decided to play safe and snookered me into an even deeper hole. As I walked around the table, looking for my shot I decided to stir her up a bit more.\n\n\"You didn't answer my question,\" I said as I looked at the felt, imagining different patterns of trick shots.\n\n\"What question...Oh!\" She blushed as she remembered. Then she got an angry look on her face. \"Ah, that is none of your business.\"\n\n\"It's a simple question,\" I said as I leaned in and lined up the cue. \"Do you or do you not like to be taken from...behind?\" The pool cue tapped the cue ball and it did an amazing dance around the green six, slid past the purple four and tapped the yellow one-ball hard enough to make it move. It touched the seven and the crimson ball dropped. I still didn't have any kind of follow up shot for the two-ball after I sink the one, but I was out of that trap. I looked up at her, enjoying the amazed look on her face. \"Or are you strictly a straight-sex kinda girl?\"\n\n\"Not. Your. Fucking. Business,\" she said getting really angry.\n\n\"Sorry. I just wanted to make sure I did you justice in my fantasy.\" I leaned the cue stick against my collar bone. \"You're too sexy to just make up whatever I like a woman to do. That would take most of the fun out of it.\"\n\n\"You're a sick, fucking pervert, and I don't want to play anymore.\" She started to walk to the rack on the wall to hang her cue.\n\nMy eyes dropped to the just-hidden curves of her ass.\n\n\"That's a shame. You would look sexy as hell in high heels. I saw a pair at Von Maur the other day when I was trying to find me a new fedora. They were a sexy candy-apple red, maybe about a five inch heel. You would look like a goddess in them.\"\n\n\"I would look like a French Quarter prostitute in them,\" she said dismissively.\n\n\"Alright, a sex goddess in them. They were two hundred bucks.\" I let my hand slide slowly, seductively up the length of my pool cue. \"Want them?\"\n\nAh, the beautiful agony of the conflict that flashed across her face then. She clenched and unclenched her teeth together; then looked away from me to the money on the wooden stool. \"There's only sixty there. What do I have to do for those shoes?\"\n\n\"Keep playing,\" I said. She gave a slow nod and started back towards the table. Then I added, \"And answer my question.\"\n\nThat stopped her in her tracks. \n\n\"I can see the wheels turning behind your eyes. Do I answer the embarrassing sex question from the pervert? Will he really buy me a pair of two hundred dollar shoes? Why does he want to know that? Really?\" Leaning my stick against the table, I slowly walked over to stand in front of her. \"Because you have a spectacular ass. Yes, I really will buy you the shoes...because I want to see you in them.\" I leaned in right next to Casandra's ear and whispered, \"And will you please answer my question?\"\n\nI was close enough to her to hear her breathing when it became a nervous pant.\n\n\"No,\" she said softly.\n\nI looked her in the eyes for a second then nodded. Turning, I walked to the stool and scooped up my twenties. Folding them, I stuck them in my pocket and broke down my cue stick to put it away into it's case.\n\n\"I didn't like it,\" she finished.\n\nTurning, I looked at her. Casandra's face was beet red.\n\n\"It hurt. Anal, it hurt.\" She took her left elbow into her hand and hugged herself. \"It hurt and he didn't want to stop, I...I really don't want to talk about it.\" She swallowed and looked away. \"Not to you or anyone.\"\n\nWell, color me a shit heel. I wet my lips and moved over to stand in front of her, but she did not look up at me. Her eyes were focused on a spot off to the right. I knew without looking there was nothing on that part of the basement wall.\n\n\"Casandra.\" I placed my hand over hers on the pool cue she held. \"Cassy...I'm sorry. I shouldn't have pushed. I was just being flirty...in my odd way.\"\n\n\"I said not to call me that,\" she told me softly. \"I don't like that name anymore, and I wish everyone would stop using it.\"\n\nI could see that there was something very bad behind that wish. Some memory that she was pushing away. Curiosity made me want to ask. The more gentle part of me wanted to help. The hustler in me wanted to use it to win.\n\n\"Let's just play,\" she said, twitching her fingers under mine to prompt me to move them. \"It's your shot still.\"\n\nAs I took my hands away, I suddenly didn't like my bet anymore. Hell, I would have bought her the shoes now just to see her smile as she put them on. That fact hit me as I turned to the table. My heart wasn't in the game anymore. The desire to win the bet was gone. Should I play to lose? I've never done that. The hustler in me was screaming, \"Are you fucking insane? You don't have two hundred dollars!\" I leaned in and lined up the cue ball.\n\nThe two-ball and it's next of kin dropped easily. On the four I had a difficult shot and tapped the eight-ball first. The eight touched that teetering nine-ball, and when it dropped, the score was two/two.\n\nAs I got the rack down and started to sort them for nine-ball, I went into autopilot. Not really paying attention to what I was doing, just doing it. My mind was racing over the idea of deliberately losing. Not only losing, but doing it after I had so dramatically raised the bet. Raised it to a point I would be hard put to pay it off. What the hell was I thinking? Looking up at her standing there I realized I hadn't been. I had been just grudge-flirting with my friend's sister. Not a thought in my head other than to make this girl that couldn't stand me mad. Mad enough to lose the bet. Hell, even what I was playing for didn't matter to me. I was not really the panty-sniffing type.\n\nCasandra leaned in, and her stick smacked the cue ball hard. I watched the clean break. The six dropped. Then the four. As I watched her playing, I could not help but still checking her out. I realized as I was watching her move that I was not just enjoying the view, I was savoring it. Like a fine meal, a cold beer on a hot night, a delicious piece of cobbler. At some point in this game she had gone from being a friend's bitch younger sister to a girl I wouldn't mind taking out on a date.\n\nAnd here I was playing pool for a pair of her panties. Not that I was liable to get them the way she was playing now. I was starting to become seriously worried about losing two hundred bucks when she scratched on the six.\n\nAs I took in the table, I realized that barring bad luck, I had the game. Game and match. Bet won, underwear earned.\n\n\"I'm sorry,\" I said in the silence of the basement. She looked up and I saw a moment of anger cross her eyes. She thought I meant about the game. \"That your boyfriend was a prick. I'm sorry he did that to you.\"\n\nWhy I felt that need just then to offer her comfort, I'm not sure. Maybe because I was about to add to her private humiliation by taking something very personal from her.\n\n\"I really don't want to discuss my sex life with you while we're alone in this basement.\" Her tone was final. Then she looked off to the spot she had been staring at earlier. \n\nAs I glanced over there, I noticed now that it wasn't a blank piece of wall after all. It held a memory. A memory that for her was far from pleasant. I remembered then just how scared she had been when she walked down and saw someone down here. That hadn't been simple fright, that had been deep terror and the anger that followed it now made a lot more sense.\n\n\"It's your shot,\" she said with a raised eyebrow. \"What's the matter? I thought you were wanting to sniff my panties...you fucking perv.\"\n\nAfter that the hustler was not going to let me lose either. I felt him rear up behind my eyeglasses like a snake ready to strike me if I did one inch less than my best. Walking around the table, I leaned in and made my shot.\n\nSix.\n\nSeven\n\nEight.\n\nAnd then there was nine.\n\n\"Nine-ball left corner.\" I pointed with my cue to make sure there was no misunderstanding. It was a habit I had learned down at Rackums. Looking at her, I saw there was still a lack of respect in her eyes for me and for the way I played. \"Cue ball back to center.\"\n\n\"What?\" she asked not understanding.\n\nLeaning in, I showed her. The blue-smudged white ball rolled over and just kissed the nine-ball into the corner pocket then, as if it had been put into reverse, it rolled back across the table and came to rest in the very middle of the green felt. You could have taken a tape measure and I would have doubled my bet that it was not off center by more than an eighth of an inch.\n\nI leaned back into my Gandalf pose, the chalked tip of the cue nestled just above my cheek. As I watched her come to understand that she had just lost, I knew that I had also just played one of the better games in my life. Yeah, maybe there had been some element of luck in the way the balls ended up or the way that the final shot worked its way out, but then as I said, it takes a certain amount of skill to make that kind of luck happen.\n\nI lifted my eyebrow when she made no move to pay up.\n\n\"I wasn't wearing any. Panties before I showered.\" Suddenly her face split into a grin. \"Nah, nah, da nah nah! I guess someone's not going to get to smell my pussy after all.\"\n\nA red flash of anger!\n\nEven when I tried out to ran track in high school, I don't think I have ever moved that fast from a dead standstill. I was across the distance and up against her in far less than a second. She let out a squeak as my arm came around her, the wood pool cue pressed into her back, trapping her against my chest. Her face was right in front of mine, and I was breathing in her startled breaths, tasting second hand the mint of her mouthwash and toothpaste. \n\nThe desire to kiss her was overwhelming. Leaning in those last few inches, I used my hold on her to keep her from moving back, and I placed my lips on hers. She let me kiss her for a second then began to pull her face away from mine. I wonder if she felt my smile just as our lips began to part? The gasp from her, as my left hand moved up her thigh and my fingers went under the edge of those shorts, all but sucked air out of my mouth.\n\n\"A bet is a bet,\" I told her softly.\n\nMy fingers brushed warm silky-soft skin, puffy lips dusted just slightly with a bit of stubble. I ran them down between her outer lips, just letting my middle finger ride across her clit then dipped it slightly inside her. She lifted herself up onto her toes as I brushed a finger a half an inch or so into her warmth. A breathy moan that was so soft I would not have heard it if I hadn't been so close escaped her when I pulled that finger back out and removed my hand from her shorts.\n\nCasandra was panting, her eyes wide as I stepped back, my hand still with the pool cue brushing across the tight muscles of her back. Her eyes followed me as I brought my left hand up to my face. Holding my fingers under my nose, I breathed deeply the scent that was on them. All warm vanilla sugar perfume mixed with a hinted-at musk that was her own scent. \n\nHer jaw dropped as I placed my finger into my mouth and let the taste of her flood my tongue. I closed my eyes and breathed deep as I pulled them out. The her scent was all wet and warm and it filled my nose with an aroma of heaven. I wanted to suck my fingers clean of it and dip them back in for more, like I was licking cake batter from a bowl with my fingers.\n\nWhen I opened my eyes, she was watching me, her chest rising in a steady pant. Her face was a deep red flush.\n\n\"My god, you taste delicious.\" I let a smile slowly build. \"I was right, you would be some very high stakes betting.\"\n\nShe blinked, blushed, blinked some more. Slowly, she collected herself and decided angry was what she needed to be...\n\n\"I cannot believe you just fucking did that to me. I cannot...\" she sputtered.\n\n\"Wish I had done it years ago. You're a wonderful kisser as well.\" I grinned. I let my eyes drop down her body \"And sexy as hell.\"\n\n\"You! You...\"\n\nI turned away from her.\n\nBreaking down the cue stick, I spun it off the threaded end and walked over to my case, ignoring her slowly building diatribe of riotous anger at me for having stolen a kiss and a taste of her pussy. I was still sliding in the pieces when I noticed the sudden silence. Turning to look, I found out I was not the only person in this basement that can move very fast.\n\nCasandra's mouth slammed into mine with almost brutal force! Her breath, tasting heavily of mint, pushed its way into my nose as her tongue drove its way into my mouth, seeking mine. Her hands clawed at my hair, pulling me deeper into the kiss. I vaguely registered the sound of her pool cue hitting the floor behind her.\n\nThen her full weight was on me as she jumped up and wrapped her legs around my hips and pulled me tight to her. Her mouth never stopped kissing me, and by this time, I was starting to figure out just what was happening.\n\nAlrighty then. No objections to this from my side, I'll tell you.\n\nCupping her ass with both hands, my fingers under the edge of those shorts, filled with soft warm flesh, I moved forward till I felt my knees against the side of the pool table. I used it to help hold my balance, and I returned her wild kisses for everything I was worth. Her fingers, strong and delicate-looking at a distance, were all but claws as she pulled at my hair and my T-shirt. She seemed to want to rip the clothes off of me to get at me. I let those vice-like thighs hold her weight long enough for me to peel my shirt over my head. She pulled at the cloth when it blocked her access to my mouth then all but loosened a tooth as soon as it was out the way.\n\nDamn, what had gotten into this girl? \n\nWell, I could say with the way things are going, I knew exactly what was about to get into her. My mind raced, trying to remmber if I had a condom in my wallet. The answer of \"Yes there are three.\" came from some currently unoccupied part of my mind. I thanked it and then told it to find something better to do with its time. It answered by suggesting the sliding of a hand under Casandra's shirt and the filling of my palm with a bra-covered breast.\n\nWho am I to turn down that sort of suggestion?\n\nThe wildcat in my arms purred when I did just that. I felt a nipple as hard as a pebble under that thin cloth, and gave it a gentle pinch. She moaned and moved her mouth from my lips to just by my ear.\n\n\"Not so idde-bitty titty-comittee now are they?\" she asked, then began to gnaw on my neck while she waited for an answer.\n\n\"Not at all,\" I answered. I gave her breast a hard squeeze, feeling the moan through her teeth into my shoulder muscle, as she nibbled her way down the side of my neck.\n\nCatching the bottom edge of her shirt, I pulled it easily over her head then went looking for the snaps for this sports bra. A quick check front and back reveled there wasn't one. At her giggle she sat back from me and caught the bottom edge. I watched her peel it off over her head, but my eyes were instantly glued to those dark rose nipples. Unable to help it, I leaned in and sucked one into my mouth. She gasped and clawed my head closer to her chest smothering me in those firm breasts.\n\nAs some point in this she had loosened her grip around my waist and she was now sitting on the pool table. Sucking on a nipple, reveling in that nub of pleasure, I realized just what it was that I really wanted just then. Releasing her nipple with a sucking pop, I leaned back and looked down at her slim body. Her legs were straddled around me still, with me at the perfect \"V\" between them. As she started to move forward to kiss me again I stopped her with a hand between those perky breasts.\n\n\"What?\" she asked, and then her eyes went a bit wide as I applied pressure and made her lean back onto the green felt. I let my finger leave that valley as it flattened out and travel down across the soft white plain of her stomach, I circled her navel which made her giggle. I put that knowledge away for a later day as I let my fingers travel even further south. \"What are you doing?\" she asked.\n\nLeaning in, I let my lips touch her skin just above that sensitive belly button. I loved the way her stomach muscles contracted under the touch. The warm heat of her skin was so very briefly against my mouth. I tried to let my tongue dip out to taste her skin, but the muscles again flinched back before I touched. Looking up at her across the valley of her cleavage, I smiled at her. She gave me a strange look.\n\n\"What are you doing?\" she asked again with a puzzled smile.\n\nI licked my lips and smiled back.\n\n\"I want another taste.\"\n\nMy hands caught the waist band of her shorts and they were out from under her ass before she knew what I was about to do. Her legs came up either side of me quickly, but that would have only aided me in getting her completely naked. Naked was not what I was after at the moment. A mouth full of her pussy, warm and wet with passion was. \n\nWith both her her legs extended above me towards the ceiling, those shorts around her knees ignored for now, I leaned her legs back enough and simply buried my face into her. Her gasp of surprise became a scream of pleasure as I wasted no time in sampling the menu before I feasted on the whole buffet. Wet lips, slick with her juices, moved under my mouth, opening up to my tongue, as I tried to see just how far into her I could taste. She gasped when I proved that was quite far indeed. I let my mouth explore, finding all the secret places where pleasure hid. I opened those hidden spots and made her understand that I was not making any plans to leave here till I found every single one. She screeched when I touched her clit, ever so briefly. ",
        "Then with a shudder that ran the length of her body, she squirmed her ass on the green felt table. Her thighs parted, and my face was compressed between soft pillows of warmth. Her heel hooked the back of my head inviting my face to go even deeper into this lovely young woman.\n\nI tortured her. Call it some form of mental payback from the welched bet from earlier, but I began to play her. I would let my mouth take her clit in fully, licking at the little fingertip nub till it poked proudly from under its hood. I would lick and lick and listen to her as she grew more and more vocal. Pants became moans, moans becaem guttural cries. Those then began to become orgasmic screams!\n\nAnd I would stop.\n\nJust as she was on the very edge, I would stop and let my mouth drift away from the center of her pleasure and find some other part of her to amuse me. Her fingers would dig at my scalp, trying to physically pull my head back to her clit, but I took the pulled hair and digging fingernails as a sign I was doing exactly what I wanted to her. I would suck at her lips both inner and outer. I would chase my tongue around the opening to her then let it push in as deep as I could.\n\nThen back to her clit I would go! Listening the whole time to her pleasure spike, but never letting it peak. Keeping her right on that edge the whole time. Just how long I allowed this to continue, I don't know for sure. She was a panting wreck, gasping for air, her thighs against my face, shivering and twitching with uncontrolled spasms. I was not sure but at one time I almost swore I hear her start to cry when I moved my mouth from her clit. Finally I decided to end her suffering. I moved back to her clit and didn't just mouth it between my lips but sucked at it hard.\n\nCasandra's hand went to my shoulders, and her fingernails dug deep enough to break the skin. I could tell she was trying to keep me in place on her clit, but I had no intentions of moving now. I sucked and sucked at her. I moved my hand from caressing the side of her thigh and slipped it under my chin to dip my thumb into her opening. She gasped a surprised moan when that thumb entered her pussy.\n\nThat gasp was nothing compared to the sound she made when my thumb came out dropped lower and came to rest against her little swirled rose. I didn't try to enter her, I just applied pressure as I doubled them maybe even tripled my sucking pressure on that point of nerves that were now afire.\n\nCasandra's orgasm was by far and away the most fierce I have ever brought about in a woman. Her hands shot away from my shoulders, and she clawed at the table top. One hand found the cue ball where it had been moving lazily from all the table shaking. She clutched at it so hard that if it had been anything else she would have shattered it to powder.\n\nShe screamed primal cries toward the ceiling above her. Her hand began to tap the cue ball on the table like a wrestler begging submission, but I did not relent. I kept up the suctions, my tongue licking a dance across those inflamed nerve endings, till she shrieked again then again. Her thighs clamped tight against my head, an almost painful pressure.\n\nThen they fell slack, down across my back, trapping my head between her twitching legs and those jogging shorts I hadn't had the time to remove. Lifting her legs, I slipped out from between her thighs reluctantly. I took that moment to slip those short the rest of the way off her.\n\nTrying to catch my breath, I wiped at my face finding it awash with her juices. I picked up my T-shirt from where it hung on one side rail and wiped my face and chin. I looked down at her sprawled naked on the top of the green felt pool table, her legs hanging off-kilter. For a moment I was really worried, I had heard that some women pass out from orgasm, but I had never seen one do it. She was still breathing, her breasts rising like perky mountains to their rosy tips. When I saw her eyelids start to flutter, I knew she was going to be okay.\n\nMy hand fished my wallet from my back pocket, and I held the wrapped condom between my teeth while I opened my belt. As my pants dropped around my knees I bit hard onto one corner and ripped off the top edge of the foil pack. I regretted that as soon as I got a taste of oily lubricants. Wiping my mouth on my shoulder did nothing but add a copper taste to the first flavor. It was then that I noticed I had dozens of deep scratches across both shoulders.\n\n\"Fuck, that stings,\" I muttered quietly. The sound must have gotten through to her though. I looked down on her as she opened her eyes full. There was a lusciousness to her the way she was lying. The condom rolled down the length of me easily. I was slick with pre-cum.\n\nCatching her legs behind her knees I opened her legs wide, and with not a second's hesitation drove the whole of me into her.\n\nThe sound from her as I touched bottom nearly rivaled the orgasmic screams of earlier. I intended to see to it they not only rivaled them but surpassed them fully. Pulling her thighs tight to me, I began to listen to my own needs now. Oh, I still wanted her to fully enjoy this, but I was so horny at just that moment I could have fucked a cactus and enjoyed it.\n\nLooking down, I saw her looking up at me, watching my face as I fucked her. She gave a smile and shifted her ass a bit to allow me to stop hitting the side of the pool table with my thighs. I pulled her a little closer, and she lifted herself up and slipped towards me till the curve of her back was across the rail and I was holding her hips with my hands full of her ass.\n\nOh, how to describe the feeling of her. I could revel in how tight she was, how warm, how she gripped at the length of me, but these simple descriptions do not begin to describe the sinful pleasure I was getting with every stroke. Then the backs of her knees where on my shoulders and she opened herself fully to me so that I could enjoy every inch of her and she, every inch of me. She moaned and lifted herself up to meet my strokes. Arching her back off the wooden rail driving me deeper into her. At that moment when I thought this could feel no better, she let a low, growly moan slip from her throat, and I felt her begin to orgasm around me.\n\nWith her muscles contracting down the whole of me, there was no way that I could hold back for even a second longer. A deep grunt of almost pain came from me as I cried my need out in breathy gasps. \n\nCasandra's grip on me seemed to tighten even as I felt myself soften. Her body clung to me, reluctant to give up the physical bridge of my flesh within her. Ever so slowly, I slipped out.\n\nLooking down at her, lying there sweaty and so sinfully naked across the pool table, still trying to catch her breath, I knew then two very simple facts.\n\n\"I'm going to be play a lot more pool over here,\" I told her with a grin. She smiled back at me, then giggled when I caught her foot and lifted it to beside my cheek and gently kissed her ankle. \"And someone very special is going to be getting her a pair of red high heel shoes for these lovely feet...(just as soon as I can win enough money down at Rackums to pay for them)... if?\"\n\n\"If what?\" she asked.\n\n\"If you will tell me just what I did that got you this hot. Was it the kiss, or that first taste?\" I asked, my lips just over her Achilles tendon. \"I mean one second you were angry at me the next you were kissing me.\"\n\nShe blushed. Bare naked with her sex still open from what I had done, and she had the nerve to blush. I lifted an eyebrow.\n\n\"The taste.\" She shrugged. \"No one has ever tasted me...down there...before. That you said I was delicious, and you wished you had done it years ago. I don't know just all of a sudden I was hot as hell for you.\"\n\n\"You are delicious...Casandra.\" I looked down at her pussy and softly ran a thumb across her puffy outer lips. \"In fact, if that condom hadn't been lubricated, I would probably be back to tasting you right now.\"\n\nI lifted my thumb to my lips, enjoying the deeper musky smell of her now even more than before. I let my tongue lick the side. Yep! Lubricant. I went back to nibbling on her ankle to get the taste out of my mouth. When I looked down at her she was smiling.\n\n\"What are you doing to my foot?\" she asked, wiggling her toes.\n\n\"Kissing it.\"\n\n\"I can see that!\" she snapped with some of her earlier sass.\n\n\"Good. Nice to know I haven't fucked you blind or anything.\" I continued my gentle nibbling on her ankle, and then my lips tasting the soft skin of her calf.\"\n\n\"What are you doing, and don't say kissing my leg?\" she demanded.\n\nI lifted an eyebrow and gave her a quirky smile. \"That's going to be hard to do both. I mean I can't really tell you what I'm doing but not tell you at the same time.\" With a shake of my head, I went back to what I was doing. She gave me an exasperated sigh then laid back and simply enjoyed it, without further questions.\n\nWhen I reached the back of her knee she began to breathe harder and squirm on the felt. Then as my lips crossed the back of her thigh, closer to my destination I hear a short gasp from her.\n\n\"I thought you said you weren't going to go back down on my pussy because of the lubricant,\" she panted.\n\nI took a mouth full of soft thigh and, while holding it in place with my teeth, licked and sucked at the sweet salty skin. My mouth left her skin with a pop.\n\n\"Who said I was going down on your pussy?\"\n\nPushing her up onto the small of her back, by pressing against her thighs by her knees, I opened her up fully to my eyes. The wet gash of puffy flesh looked so incredibly welcoming, but I had no desire to have a mouth full of lube. But below that, like a pink rose on a dewy morning, sat my goal. The tight swirl of skin showed no evidence of stretching from its previous ravishment by her idiot boyfriend. Leaning in, I placed a kiss upon it as an apology from the whole of the male race.\n\nThe gasp from her brought a smile to my lips, even as I placed a second kiss, letting it linger. Then like a pink snake, my tongue struck out, pushing against that wrinkled rose. I loved how she tensed up, trying to stop the tip, but so slick was my tongue it still found purchase. Then as I felt her slowly relax, I probed again, causing another quick contraction, this time trapping the end of my tongue.\n\n\"Oh, my god you are a pervert! Oh, how could you do that? That is so nasty,\" she moaned.\n\nHer breath was a heavy pant as she continued to demand how I could do something I relish, even as I was giving her tight depths no mercy. As it got wetter and wetter, more and more of my tongue went into her. My nose touched her outer pussy lips, and then she squeaked when I let my teeth come into play. A soft nibble that almost made her leap out of her skin.\n\n\"Oh, please...\"\n\nSmiling, I placed a soft kiss where the curve of her ass cheek meets her thigh. \"Please what?\" I asked teasing. \n\n\"Please don't stop. You have no idea how good that feels.\" She shook and shivered, her whole body a tremble. \"Please.\"\n\n\"My pleasure,\" I said, and went back to licking.\n\n\"Time to make her squeal,\" I thought with a wicked grin. \n\nCupping her ass in my hands, my thumbs opened up her ass cheeks just a little bit more. As she gave a soft moan at being so exposed, I drove my tongue into her as deep as I could! The sound I got from her was everything I had wanted, but I wasted no time listening to what was going to be the first of many just like it. I began to all but plow the silky depths of her ass with my tongue. The first panicked contraction gave way quickly to her relaxing to this sudden invasion and making my efforts all the more effective by bucking her hips towards my mouth.\n\n\"Oh, god , oh god, oh god,\" she repeated in a mindless mumble. Then even that simple phrase seemed to become too complex for her mind to grasp at. A panting moan that grew deeper and deeper heralded a growing inner tremor that my tongue communicated to me as I tried to lick even deeper. Her silky neither passage pulsed and contracted, but no longer tried to bar my way.\n\nI heard a tapping of stone on stone and realized that she had grabbed one of the pool balls again and was all but about to shatter the poor thing against the green felt in a rhythm a woodpecker would be proud of.\n\nThere was nothing even resembling words to the next sound she made, a pure guttural cry to the heavens. A demand that the pleasure she was feeling never end, even as that ending was overwhelming her. \n\nThen a second cry, just as loud, echoed through the room. Then a third, that died off into silence, broken only by her panting, gasping for breath.\n\nStanding up, I looked down at her as I fished a second condom out my wallet and got it opened, without tasting the lubricant this time. Her eyes were closed. I didn't know if she was lost in the little death this time, or just enjoying the the last tremors of her orgasm. Sliding on the condom I caught the back of her knee, opening her back up as before. With a steady pressure I pushed the head of my cock into the wet place my tongue had just vacated. I slid in with little resistance and not a sound from her proving that she had in fact passed out again. As I slid in tight against her, I closed my eyes, and just reveling in the tight, incredible warmth that covered my cock. She was giving little breathy gasps as I slowly retreated and advanced.\n\nAs Casandra's eyes began to flutter I placed my thumb above her clit and began to make small slow circles. I let myself stop at my full depth and just caressed her wet outer lips with my thumb. Slowly she opened her eyes and looked at me with a look of exhausted lust. There was a sexy wantonness to her smile, then a frown began to appear.\n\n\"Are you in my ass?\" she asked after a second.\n\n\"Yes.\"\n\n\"But it doesn't hurt,\" she said confused.\n\n\"Exactly.\"\n\n\"I just feel full...oh!\" she gasped as I moved just a little. Then she gave a shaking spasm as I slowly pulled all the way out to the head and then gently sank back into her. \"Oh, god you're so big. You didn't feel that big before.\"\n\n\"Different hole, different size scale, my dear,\" I said with a grin.\n\nI continued to rub at her clit as I slowly fucked her ass, enjoying the tight pulses as she attempted to push me back out, but her body was too open to do that. I loved it as her face turned a deeper and deeper shade of red. Her eyes closing and then popping open repeatedly, usually with a gasp. As I pumped I watched her face for, and moments later saw, a slight tightening around her eyes. A brief wince of pain; she bit her bottom lip. I eased to a stop and just held myself still.\n\n\"I...I don't think I can take anymore,\" she said softly. I noticed a slight tremble of fear in her voice that cranked up my rage at her former boyfriend. Yep his ass and my boots had a date coming up real soon.\n\nWith a smile I eased out of her, letting her thighs slide down my sides. I offered her my hand and pulled her up tight against my chest. Her breath was a soft caressing of her breast against my chest.\n\n\"Don't ever be afraid to tell me that. I will always stop when it's no longer good for you.\" Pulling back, I looked at her face, and smiled. \"There should be nothing but pleasure in this for you. Did it feel good?\"\n\nShe nodded. Her fingers caressed at my chest.\n\n\"At some point in the future though I do hope I can get you to orgasm from me being in your ass like that.\" I gently cupped her breast, the springy weight of it filling my hand. \"I'm told it's the most intense orgasm a woman can ever have. I would love to give that to you.\"\n\nHer mouth twisted up in a lusty smirk. \"I bet you would...you pervert.\" She leaned her head in against my chest, resting her face against my skin, giving soft moans as her thighs trembled on either side of mine. Then her eyes popped open quickly. \"I've got to go to the bathroom!\"\n\nLaughing, I let her hop up. She grabbed her shorts off the floor and all but sprinted up the stairs out the basement. Grinning, I watched those sculpted cheeks flexing with every step till they vanished out of sight.\n\n\"I cannot fucking believe I just got to do that,\" I said to myself. \"Whew!\"\n\nI shook my head and put my pants to right. I grabbed up my shirt and pulled it back on, feeling an odd wet spot on my lower back as I did. Walking over to the roll up door, I hit the button and let some fresh air into the primordial sex-reek of that basement. None too soon as I saw Greg's car turn the corner, and with his normal driving like my grandmother speed, pulled into his parent's driveway. \n\nMoving back to the pool table I began to get the balls back out the pockets for another game. Just like nothing was nothing. Well, that's what I wanted Greg to think anyway as he got out his car. The fact that I had just fucked his sister till we were both raw should not be even a thought in his head.\n\n\"Hey, buddy! You down here playing with yourself again?\" he asked putting every bit of double entendre he could on it.\n\n\"Nope, I've been playing with your sister.\" I returned with just as much, if he only knew.\n\n\"What? Is she on a speaking basis with you now?\" he laughed. \"So how badly has she beaten you? She can take dad four games out of five, most days.\"\n\nWith the nine-ball in hand I stopped racking. What did he just say?\n\n\"So where is my little psychopathic sister?\" He looked around the basement like she might be hiding under a Rubbermaid or something. \n\n\"She went upstairs to use the bathroom.\" I said, still in a mental fog over what he had just told me. Casandra and Greg's father can give me a very tough game. Nearly as tough a game as I get from the retired semi-pros down at Rackum. Casandra can beat her dad four out of five? She played me! She hustled me! She knew that she could beat me at any time and let me win. Let me win to stoke my ego till she was ready to beat me. Fuck! I promised to buy her a pair of two hundred dollar shoes!\n\n\"Well, she can vacate that throne; I've got to file some paperwork.\" He walked past me, but stopped looking at the pool table. \"Man...Dad is going to be piss that one of you spilled a soda on his table.\"\n\nHe pointed to a wet stain on the side rail and by the side pocket. I gave a innocent shrug to hide the desire to chuckle. I placed the nine-ball and removed the rack as he went upstairs.\n\nPicking up my cue stick, I ran the length of polished wood between my fingers. With a slow smile forming, I leaned into make my break shot. She hustled me...well, now. Upstairs I suddenly heard all hell breaking loose as Casandra lit into her brother about her underwear being in his bedroom. Greg fired back about what was she doing in his bedroom. As they squabbled I looked at the wet stain again and, grinning I brought my hand to my face, cupped my mouth and again breathed in the heady scent of Casandra's passion.\n\n\"Yep, definitely going to have to come over here and...play...more often. Four out of five, huh?\" I grinned and pulled back on my worn Brunswick Challenger felling every inch of that fifty year old slick wood on my fingers. \"Nine-ball in the side pocket, on the break.\"\n\nAnd as that yellow-white ball rolled across that wet stain and dropped, I knew I had found my Fast Eddie Felson and my Carmen all in one.\n\n*****\n\n I would like to thank Mrs. patientlee for her time and skill editing this story. Without her, oh the horror the horror. Any mistakes you see now are all mine. I hope it was enjoyable. MST"
    ],
    "authorname": "MSTarot",
    "tags": [
        "pool table",
        "anal",
        "color of money",
        "trick shots"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/trick-shot-hustler"
}