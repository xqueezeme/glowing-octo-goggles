{
    "title": "A Very Special Delivery",
    "pages": [
        "I turned off my screaming hairdryer, thinking I'd heard the doorbell ring. Sure enough, the bell sounded again, and impatiently rang once more before I had a chance to descend the stairs. As I tightened the belt on my robe, I could see a young man in a red and white uniform standing outside, and he announced through the door, \"Urgent delivery for Mrs. Steadman.\"\n\nI cracked the door and noticed his computerized tablet and the embroidery on his shirt that read, Jet Stream Couriers. Considering I live in a very safe suburban neighborhood I had no reason to be suspicious, but I wasn't expecting a delivery, and I was wearing no more than a robe and thong. I opened the door wide enough to sign the tablet he handed me. I noticed him trying to peel my robe open with his eyes. \"What a typical man,\" I thought, but he was young, and cute, so I decided to happily torture him by allowing my robe to open further as I adjusted his tablet to sign it. \n\nI pushed the door open further as I leaned towards him, assuring him a wonderful view, and pointed at the window where I was obviously supposed to sign and asked, \"Sign it right here?\" \n\n\"Umm, yes m'am,\" he coughed. \n\nI jiggled my hand extra hard while I signed my name - feeling the cool breeze lick my nipple as my robe billowed in front of me. \"Here you go,\" I said as I handed him the tablet. His eyes were as big as saucers and glued to my exposed breast. He took the tablet from my hand, and stood there almost dumfounded. \"Umm... my box please?\"\n\n\"Oh. Yes. Umm...\" he stuttered as he bent over to pick up the box. \"This is kind of heavy, \" he said through an obvious blush, \"would you like me to bring it in?\"\n\nI smiled back at him, almost giving in, \"That's alright, I can handle it,\" I said as I took the box, \"a peek is all you will be getting today.\" I winked at him as he handed me the box, which was heavier than I expected. I backed in the house and watched him as he slowly stepped away from the door, obviously hoping the events would turn in his favor. Just before the storm door closed I said, \"That's Miss Steadman by the way. Another time perhaps?\" \n\nHis face beamed with the hope of salvaged opportunity and I spun around, using my back to push the main door closed. As I leaned there, suddenly thinking about the box, I heard him yell, \"I'll leave my card in the door.\" I lifted my hand and waved to him through the glass, though I never turned around. \n\nMy curiosity had kicked into high gear, and my eyes scanned the markings on the box. I didn't recognize the return address, and there were multiple stamps reading, 'Private' \u2013 'Confidential' and 'Signature Required.' I carried the box to the kitchen and grabbed a knife from the silverware drawer. I slid it along the tape and opened the top, only to find a molded foam liner. I set the box on the floor to get better leverage and slid my hands between the foam and cardboard box. The fit was tight, but the lid slid out without a battle. Inside, there appeared to be a large white container with a screw top and a note card that was wrapped with a bow. The entire box felt warm on the inside and I quickly grabbed the envelope, opened it, and began to read the letter:\n\nMy Dearest Madame,\n\nFor sometime, I have been following your picture posts on the Internet....\n\nI gasped aloud before I could even read more. Oh my god, how could somebody have found where I live. My heart pounded in my throat and my hands shook so bad I almost dropped the note card. How could this happen? I folded the note and laid it in my lap. My thoughts rushed through me like a wildfire completely out of control, \"It's only in good fun, I mean, oh shit, what if...\" Frantically, I returned to the letter and continued to read:\n\nFor some time, I have been following your picture posts on the Internet. I would have never thought that I'd ever see anyone online that I knew, yet alone someone so beautiful. Don't worry; your secret is safe with me. I am old, married and consider myself a responsible, sane person. I and should no more be looking at your pictures and pleasuring myself to them, than you should be posting them. Admittedly though, I have never enjoyed anything so much in my life. - So, when I sign my real name to this letter, please accept that as a token of trust, that we will keep each other's secrets safe - especially considering the contents of this package. My name is William, and I work at a sperm bank.\n\nJust as I had somewhat calmed a bit, the words \"sperm bank\" just seemed to hit me like a baseball bat, \"What the fuck?\" \n\nAs you can imagine, we are never at a loss for donations, however, not all of the donations make the final genetic screening and are disposed of - well, most of the time. The contents of the container within this package are those donations that didn't make the final cut; however, I assure you they are absolutely disease free. I have taken the liberty to warm the contents and ship them to you slightly above normal body temperature. I am sure you are wondering why a person would send you over a gallon of cum, but the answer is quite simple; if you look at the number of times your posts have been viewed, if every man that read them only had one orgasm, it would theoretically be over a gallon. I hope you can find enjoyment in the fact that you make so many of us happy, when you see the abundance of pleasure you bring. Again, I assure you the contents are biologically safe - for any and all use.\n\nBy all means, please enjoy, \n\nWilliam McNurthy, PhD, Metro Sperm Bank I was so in shock, I almost shouted, \"Holy fuck, it's Sandy's husband!\" Sandy is my accountant and while I don't consider us great friends, I am her client, and had met her husband on a number of occasions. I knew he was a doctor, but never knew where or what he had practiced. I sat there, stunned, kneeling on the kitchen floor with the letter half crumpled in my hand; my robe hanging open; a box of cum between my knees; absolutely numb. I didn't know whether to scream, cry, freak out, or call Sandy and tell her husband was a total freak. \n\nThe phone rang and the sound sliced through me. I jumped up, and reach to hide the box, as if I had been caught. As my wits came back to me I just ran over and picked up the phone gasping, \"Hello?\" \n\n\"Hey you,\" my secretary on the other end, \"glad I caught you. You sound out of breath?\" \n\n\"Sorry Michele, I was running around to find the cordless,\" I lied, \"what's up?\" \n\n\"You're meeting has been canceled, so don't rush in.\"\n\n\"Figures. It's turning out to be one of those days. Which is fine, because I wasn't feeling that great anyway.\" \n\n\"Feeling sick?\" \n\n\"You have no idea.\" \n\n\"Well, hell. Take the day off. You've been working too much lately anyway. I've got things covered here.\"\n\nAt the moment, nothing sounded better. My head was just spinning. I had never been thrown so far off tilt in my entire life. With very little thought, I just said, \"I think you are right. Call me here if you run into any problems.\" \n\n\"Ok boss,\" she replied, \"just spend the day in bed. You'll feel much better tomorrow.\" \n\n\"Umm... yeah,\" I said as various thoughts flooded my mind, \"I'll call you later.\"\n\n\"M'kay. Bye,\" she said as the receiver clicked.\n\nI hung up the phone and almost felt dizzy. I really felt as though I was going to pass out. I sat back on the floor next to the box, just staring at it and began to reread the letter. I must have read through it a half-dozen times before I reached into the box and lifted the container. There were 'BIO' stickers of various sorts on the sides and the lid seemed to screw into the top of the bucket. The sides were still very warm to my hands. \n\nAt this point, I was feeling calmer and more rational. I was pretty sure, after reading the letter so many times, that the doctor meant what he said about keeping our secrets. While I had posted tons of pictures, there were very few that ever showed my face, and they never stayed online very long before I deleted them - though it was now apparent that \"not very long\" by Internet time-standards is too long. \n\nI ran an endless list of screen names through my head, trying to figure out which one might belong to the good doctor - yeah, good doctor. Right. I picked up the container and letter and had intentions to walk to the garage and throw it in the trash, but then I wondered what might happen if the garbage man saw a container with a 'bio-hazard' sticker on it fall into his truck? I imagined flashing lights in front of my house with various police and fire vehicles, and people in red and silver bio-suits, blocking off the streets. \n\nHow the hell am I going to get rid of this? After much internal debate, I finally decided I was going to pour the contents into the toilet, then, with a ton of bleach and some rubber gloves, scrub the stickers off the container before I threw it in the trash. After that, I figured that dinner with my accountant was going to be in order, and I intended to have a very irate, and private word with the doctor. \n\nI carried the container upstairs to my bathroom and set it on the floor. I tried to spin the top but it was on tighter than I thought it might be. I knelt down on the floor and held the container tight between my legs as I used two hands to spin the top open. It took some muscle but the lid finally began to spin. As I got to the last few turns I cautiously lifted the lid. Milky white fluid dripped from the container lid into the translucent pool within. I held the lid slightly sideways, helping it drip, trying not to let it spill. The container was full to the brim, and the coating on the underside of the lid was thick, and barely flowing. A familiar aroma poured into my nostrils, causing me to speak out loud again, \"oh yeah, that's cum alright.\" \n\nI looked into the container and for the first time it really donned on me just how much a bucket of cum truly is. The top of the pool glistened like silver under the halogen lights in my bathroom, and I could almost see my reflection in the surface. Curiosity had got the best of me, so I rested a hand on my knee and bent forward for a closer look. I peered into the contents and tried to imagine how many men it took to fill it. Sure, some men cum a lot, but, truth be told, if a guy can fill a shot glass, he's in the top \"cum\" percentile. \n\nMy fascination with the unimaginable amount of cum redirected the concentration on my right hand and I felt the container lid slip from my fingers. I jumped with both hands to catch the lid and my knee began to knock the entire container over. Both hands instinctively grabbed the edges of the container, but not before bumping the lid and adding speed to its fall. The lid popped hard against the floor, sending splatters everywhere. I closed my eyes as I saw fluid flying towards me. I felt droplets pinging across my exposed skin and I cringed. When the sounds of bouncing plastic subsided, I slowly opened my eyes with an angry, \"Ah...shit!\" \n\nBoth of my thumbs were now deep in the pool of cum as I held the container still. I looked down and saw droplets on my cleavage, robe and knees. As my anger subsided, however briefly, I could feel droplets on my face. I could not believe my stupidity and predicament. I wanted to just lift my hands out of the bucket and flick them, but I already knew I was going to have a wall, throw-rug, and floor to clean - not to mention myself. I didn't say, \"Eww,\" as I was pushing the bucket away from me, but I wanted to. After the bucket was clear of my knees and robe, I quickly stood up. My thumbs started to drip right away as I headed towards the sink, so I bent my elbows and held my hands high. The warm river flowed across my wrists, under my robe, and to my elbows before I reached the sink. I quickly reached with my pinky finger and turned the hot water on. \n\nAs I waited for it to warm, I looked at myself in the mirror. Splatters of warm cum glistened and ran between my breasts. Wet spots were visible on my cheeks, hair and chin. I looked at my hands, and thick globs rolled along my wrists and forearms, and the words, \"biologically safe\" echoed through my mind. I figured my robe was already soiled, so I quickly shrugged it off, and lifted my dripping hands again, this time over the sink. As I waited for the water to warm, I stood in the mirror, still surveying the damage. A large rope of cum had begun to slide across my belly towards my new, white satin and lace thong. I slapped a hand at it and smeared it up across my belly. In an effort to thin out the amount or roll it into my hand, I kept traveling up my body until my nipples betrayed me. As my hand neared them, they hardened almost instantly, and beckoned my hands. \n\nBefore I had a opportunity to rethink my actions, both of my cum covered thumbs were kneading across my aching nipples. The words, \"biologically safe,\" again, echoed in my head, and I concentrated as my thumbs rolled, He'd have to be telling the truth. If he lied, and I contracted something, his life would be ruined. He'd go to jail after I had exposed him. He'd never take that risk, especially with someone his wife knew and worked for. \n\nI opened my gaze to the image in the mirror - I looked again at my body, as my hands massaged the warm cum into my breasts. I looked down at the growing wet spot on the satin between my legs. Where a mild tingle was fiercely becoming an ache. I looked like such a slut standing there, rubbing the cum of countless strangers into my skin. I looked over at the bucket on the floor, and legs almost buckled, \"God, there is so much of it.\" While I may have had some doubt remaining, it became apparent that the good doctor had my bodies trust. A man of his stature just couldn't take this kind of risk unless he meant what he said about trusting him. \n\nI walked back towards the bucket, lifting my robe off of the floor and spread it on the ground. I opened the drawer of the bathroom vanity and lifted my two favorite vibrators from within. I smiled to myself as I looked at the lubricant bottle in the drawer, and could only shake my head in disbelief at the irony. I returned my attention to the bucket as I sat down on my robe. I looked into the deepening pool, and was confused on how to approach it. I set my vibrators aside, and then dipped two fingers into the surface. I stirred it slightly in a small circle, feeling its density begin to swirl. I curled my fingers, almost like a spoon, and brought a thick serving to my awaiting breasts. My body clenched and shuddered as I gave in to the moment. \n\n\"Mmm... So much....\" I whispered through my lips, as I spread another mass of liquid on my nipples. I tried to pinch them, as I normally do, but my fingers just popped right past them, \"damn it's so slickery.\" I reached out for another helping, this time with three fingers. I started to lift it but the mass ran off the edge. I held the edge of the bucket as I dipped my entire hand in. The warmth and sensations lit my sex on fire. I convulsed in a mini-orgasm of mild cramping that pushed a huge wave of wetness against my satin thong. I lifted my thickly covered hand from the bucket, and again, moved it to my breasts before too much could drip on my leg. I rubbed the drippings into my thigh as I slopped the handful of hot cum all across my torso. I looked back at the bucket and despite how much cum that was already on me, it still appeared full, almost overflowing. My left hand slid from my thigh straight to the ache between my legs. I was wet - wetter than normal, well, wetter than ever. I felt like such a bad, bad girl. My pussy was sloshing. My breasts were sloshing under the handful of cum and there was still, so much more. \n\nMy hand pushed my panties aside and my normally teasing actions were all but lost in the intensity of the moment. My fingers circled my clit in fast tiny flutters, dipping deep inside me each time my hips rocked forward. I looked down across my chest and slid my cum covered hand to my lips, licked once, then again, then buried my wet fingers into my mouth - setting off a quaking orgasm. My hips bounced uncontrollably into my fingers. The taste of cum filled my mouth, then tonsils as I swallowed greedily. When the spasms subsided, I knew now, there was no turning back. \n\nMy legs felt weak, as I stood and stretched out the tense aftershocks. I slid my wet thong over my hips and down my legs. I stepped from them one leg at a time, almost straining to stay balanced from my recent pleasure. Holding my panties in my hand, I looked at the bucket as I plunged them in, giggling to myself in disbelief at the thoughts running through my head. I rolled the satin and lace in the thick bucket of pleasure, almost as if I was hand washing them, but more squeezing them like a sponge to soak up as much as I could. When I was sure they were wet enough, I lifted them out of the bucket and slid into them as fast as I could. \n\nI felt cum running down my legs in every direction, and cupped the front of my thong and pushed it deep into my swollen lips with a slurping, sploosh. My hand, flat over the front of my pussy, pumped the dripping cum in and out of me like a plunger. I grabbed the towel-bar, with my free hand, and stood on my tiptoes - which were now decorated with the cum that had dripped from the tops of my legs. I looked down at the cascading wetness and felt it surging in and out of me as the waves began to build again. My body thrashed against my hand until I stuffed the wet fabric so deep in me that all but the straps almost disappeared. Deep, animalistic moans poured from my lips and shivers, and cramps, and twists and waves of intensity washed over me, until I could no longer stand. I collapsed on the floor, kneeling on my robe, next to my bucket - that still seemed full. \n\nAs I gasped for breath, I again, looked into the still, full, bucket, and then back to the tub. I knew things were going to get messier, and with weak legs, moved my vibrators, and the bucket into the tub. Before climbing in, I reached over to the sink and grabbed a disposable cup from the decorative dispenser on the counter. I slid into the tub, exhausted and energized with lust. I closed the stopper to the tub, so even if I spilled some, I wouldn't lose it - not yet. I slid my soaked panties off and rested them on the edge of the tub. Sliding the bucket towards the bottom of the tub, I dipped my vibrator deep into my bliss. It came out coated and ready. I lifted my legs onto the armrests of my jet tub and plunged my vibrator deep into my soaked pussy. \n\nThe sloshing sound was addictive - so much cum, so much heat. I watched myself and listened with focus and intensity. I wanted to be filled. I wanted to be dripping cum from every hole I could fill. I paused long enough to dip my second vibrator into the bucket then leaned back against the smooth, arched tub. I adjusted my feet, and slid a hand so I could push the wet rod against my tight, aching ass. \n\nWith light pressure and twisting, the smaller vibrator pursed my tight hole. I wriggled a few inches in, and let it rest for a second. I had never let a man cum in my ass before, and now, all I wanted to do was pour a cup of cum in there. \"Oh god, yes. That's it!\" I want to pour a cup in my ass and everywhere. The soft small flexible, dildo bent with me as I leaned forward and dipped the cup into the bucket. I lifted it, and for the first time, the level of the bucket actually seemed to go down slightly. I leaned back as far as I could and lifted my knees to my chest. The small gel vibrator started to escape my tight hole and I let it slide onto the base of the tub with a clunk. I slid a finger into my ass and then, after a few moments, slid in another. I worked them back and forth in my wet ass until I was sure I could spread it open slightly. I leaned back as far as I could, and tilted the cup towards my ass. I felt the volume of liquid surge over my fingers and begin to run inside of me. ",
        "My fingers slid back and forth, holding me open and helping to push the liquid inside. I felt it run deeper and deeper as the entire cup poured until it over flowed. I slid my fingers out, and rested until my gaping hole closed - locking the hot load of cum deep inside of me. I leaned forward again, and filled the cup. I lifted it to my lips, and filled my open mouth - letting most drain right back out over my chin, face, neck and breasts. I leaned to fill the cup again, and swallowed what was left in my mouth. It tasted so good. I wanted so much more. \n\nI dipped the cup in again, leaned back, and with three fingers, spread the lips of my aching pussy open. Again, I poured the cup until I overflowed and then rested until I closed tight again. I reached and filled the cup one final time and lay back, pouring all of it into my mouth and holding it there. My hands began to please my body as never before. They rubbed cum from every angle and every direction across my entire being. Fingers slid in and out of both my holes. Cum drained into the tub, only to be recovered and spread on another part of my body. With each passing moment, I lost more and more control. Waves of bliss merged into other waves and the shivering and quaking never seemed to subside. The lust boiled over and I soon found myself over the bucket, shoveling handfuls of cum to my mouth while my entire hand pushed into my pussy, grinding to try and get past my knuckles. My entire body quaked in a fire of ecstasy. \n\nI was soaked with cum from a hundred of strangers, my own juices and sweat. I rolled onto my back and poured the last half of the bucket into my mouth and over my entire face, rolling in the milky pool that lay in the tub. My hair mopped at the bottom of the tub and thick wet strands clung to my face, neck and back. My entire body glistened, sparkled and glowed of sex. My body wriggled in the hot slop of teasing and plunging fingers. I don't know how many orgasms I had, but there were many - if not one ongoing one. I stood up to relieve my aching back, and the vision in the mirror, I had decided, was the bad girl I had always wanted to be. My hair was matted in cum, my body dripped in it and it dripped out of me. I spread my legs and gently pried myself open with two fingers from both hands. I watched as glop after glop of cum poured out of me. \n\nGod, I am such a bad girl. He knew I wanted to be, he knew I could be, and let me. I picked up another handful from the bottom of the tub and lapped from my hand like a dog - just to harden the image of me being the biggest slut I have ever been, into my mind - forgive me, the biggest cum slut I have ever been. \n\nMy legs ached, my back ached from the hard tub and yet, I lay back down and rolled around in my pool of lust until I drifted off to sleep. I awoke a few hours later and brought myself off a few more times, then decided to take a picture of my cum-covered toes before cleaning up. That night, I logged on to my favorite Bulletin Board and posted the picture of my toes. Minutes later, a private message arrived from a user named CumDoc and it read:\n\nMy Dearest Madame, \n\nThank you for posting the picture. I am glad you enjoyed my gift. Let me know if I can assist you in the future with another Special Delivery.\n\nSecrets safe, William\n\nMy reply to William was short, sweet and too the point: \n\nMy Dearest Doctor,\n\nYou have wet my appetite in the most extraordinary way. Please send more. Soon. \n\nSecret Safe.\n\nYour very bad, bad girl.\n\nPart II coming soon. "
    ],
    "authorname": "xPhantomKissX",
    "tags": [
        "masturbation",
        "cum",
        "bucket",
        "delivery",
        "special"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-very-special-delivery"
}