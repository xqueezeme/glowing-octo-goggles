{
    "title": "Six Degrees Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\n Feedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\n This story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\n Part 18 - The Empty House (continued) \n\n \"I'm sorry.\" Teresa said as she looked at Cindy.\n\n \"It's okay.\" Cindy said, not feeling okay.\n\n Teresa looked at the note, which read:\n\n \"Cindy,\n\nI'm sorry to do this this way. You have been the best thing that every happened to me in my life, but I cannot give you the love nor the commitment you deserve right now. Call me when you get home if you want to talk.\n\nJenna\"\n\n Seeing the look on Cindy's face, Teresa said \"Why don't you come home with me.\"\n\n Cindy said \"I... I don't want to... impose.\"\n\n \"Come on.\" Teresa said, taking charge. She guided Cindy back to the car, put the suitcase in the trunk, and drove to Todd's house. If he was surprised to see that Teresa had brought home company, he did not show it. After Teresa explained what had happened, she poured Cindy and herself some strong drinks while Todd prepared breakfast foods for them to eat.\n\n Part 19 - More Hubs, More Nets \n\n \"Geez, I'm sore!\"\n\n The words came from Cindy Ross. She had gone to her gym and worked out, putting herself through an extremely rigorous set of exercises.\n\n \"It's been a week.\" I said. \"You'll work back into it. By the way, you didn't have to come in today.\"\n\n It was Friday, February 19th, and Cindy and I were in my office after watching Bettina's morning report on the MCD television screen, which covered the weather. It was a Winter Wonderland of white snow covering the ground in the Town and County, but it had not been as bad as the weather services had predicted. Traffic was not impacted, the University still had classes though the Public Schools in the County were closed, and the only real issue was my having to suppress a desire to go create snowmen worthy of 'Calvin & Hobbes'.\n\n Teresa had made a point to come into the room a bit early and spread the word that Cindy and Jenna had broken up, so Detectives were circumspect in what they said to their Captain. Several boxes of doughnuts had been brought in, including two each from the Police Chief and Police Commander.\n\n \"So,\" said Cindy, \"when are you going to get back into the ring with me? The Police Boxing Matches start in May, and you're going to be woefully out of training.\" I knew what she was doing with this, and I avoided the trap.\n\n \"I'll be okay.\" I said. \"I'm not the one that took a week off from working out.\" Cindy rolled her eyes at that.\n\n \"Okay,\" I said, \"let's stop avoiding the issue. If you need time to talk to Jenna, or otherwise deal with that situation, feel free to take today and do it.\"\n\n \"Thank you, sir.\" Cindy said. \"So, what went on here in my absence?\"\n\n I started filling her in on the Linda Farris situation, not mentioning the adoptions, but was interrupted by a knock on my door. To my surprise, it was Jack Muscone of the FBI.\n\n \"Come on in, Jack.\" I said. \"Have a seat. Early hours for the Salem Witch Trial Judge to be coming into my office, isn't it?\"\n\n \"Yes, way too early.\" said Jack, sitting down. \"Hi, Cindy. I heard about your father, and I'm sorry for your loss.\"\n\n \"Thank you.\" said Cindy. \"So, help the Commander get me up to speed on what's going on.\"\n\n Muscone said \"We got some new information last night. I asked your Mouseketeers to double check for me, but it looks like Linda Farris's phone records show calls to and from Watch Captain Lockhart from the Bureau of Prisons.\"\n\n \"Ahhh,\" I said, \"a Belfort Badge Gang member.\"\n\n \"And one high up in their food chain.\" said Muscone. \"And here's something you may not know... guess who was very recently hired by Watch Captain Lockhart to be a guard at State Women's Prison?\" I shook my head, causing Muscone to grin like he rarely has before.\n\n \"Wow!\" he said, \"I'm finally going to get one over on you. Your former TCPD dog-killer, Brett Bryce.\"\n\n \"No, I did not know that.\" I said. \"But it makes a lot of sense.\"\n\n \"How so?\" asked Muscone. \"Your Consultant finding a new place for his minion?\"\n\n \"Yes, that.\" I said. \"But also some other stuff.\" I pointed at the light fixture, suggesting that we were possibly being listened in upon. Cindy nodded, but Jack look confused until she wrote a note to him on her pad that said 'we might be bugged'. Surprised, Jack nodded.\n\n \"There is one other thing I should tell you.\" said Muscone, his beady black eyes glowing. \"It concerns records at the Asylum and now the Women's Prison. Inmates that give birth can't keep their babies, so either a relative has to take it, or it gets put into the Foster Care system. As we were looking into Farris, we found discrepancies in the birth records vs. what Child Protective Services had recorded. We got a Federal warrant that allows us to look into the adoption records, and there are some problems there.\"\n\n \"Oh really?\" I asked, feigning surprise. \"Well, update us on this, especially Captain Ross, who has been out of Town for a few days.\"\n\n Muscone explained that some babies had completely fallen off the radar. He gave the numbers, which I already knew. I realized that I was now in the clear as to knowing this information.\n\n Muscone said \"We suspect they were put into the black market for adoptions. People will pay into the six figures for a newborn baby. Hard to trace, though, as we have to find the adopting parents, then go back and find the adoption records wherever they filed them, and then try to work it back to Farris or anyone else within the Prison System.\"\n\n \"You know...\" I said, as if thinking about it, \"you just said Bryce was hired by Lockhart. Now I understand that before our little raid on the Asylum and the can of worms we opened there, women that were found to be pregnant at State Women's Prison were transferred to the Asylum. Now, they're just held there, at State Women's Prison. I would not be totally shocked if the numbers you just told me, Jack, are not the real numbers, that some of the pregnancies were kept off the books, no live birth records, and those babies were sold into the black market.\"\n\n It was Jack's turn to look surprised. \"Only you would think of that, and within five minutes of being told my data.\" he said, not knowing that advanced secret knowledge made me look like a great observer and deducer, and in need of a Salem Witch Trial.\n\n \"Just think of this, Jack, Cindy.\" I said. \"Six figures for a baby. Let's just call it $100,000 to keep the numbers tidy. Ten of those is one million dollars. And let's say a network is set up in not only this, but several States. Ten States, ten adoptions per... now we're in the tens of millions of dollars. That is tremendously lucrative... lucrative enough to interest a certain Master Criminal into being the Puppeteer behind these operations.\"\n\n \"Hubs and spokes.\" Cindy said. \"Six degrees, or less, of separation.\"\n\n \"Yes, good thought.\" I said, then began musing, halfway in a reverie. \"And let's take this further: let's say that a new operation is set up. We know Senator Richard Langdon takes women to be prostitutes at his parties. Maybe one or two of them get knocked up. Then maybe some women there are offered money to become pregnant by one or more of the guards, and they get paid to take the baby to term and give it up for adoption... type of surrogate motherhood, there.\"\n\n \"Wow.\" said Muscone. \"Sometimes you scare me with the things you come up with.\"\n\n \"One way to solve crimes is to put myself in the place of the criminal,\" I said, \"and ask what that criminal might do. If those women are held in isolation for their term, and there are no records at all of the birth, this thing could be something... big.\"\n\n *BRING!* *BRING!* *BRING!* *BRING!*\n\n It was Jack Muscone's cellphone. \"Yes sir.... yes I'm here with him right now... yes sir, I will... yes sir, we'll be right there.\" As he disconnected, Muscone said \"That was my boss. He's asked me to bring you to the Federal Building. Just you; your partner here was not invited. He said it's crucially important, which means it's something big.\"\n\n \"Well,\" I said, \"my partner will be coming, and she can talk to you and your team about all this while I talk to your boss...\n\n * * * * * * * * * * * * * * * *\n\n \"I told you not to bring her.\" said the DepDirector, more than a bit rudely, when he saw Cindy come into the hidden FBI offices with Jack and myself.\n\n \"Sir,\" said Muscone, \"trying to separate these two takes more than crowbars. My team is going to consult with Captain Ross while the Iron Crowbar talks with you.\" Perhaps it was my glare that caused the DepDirector to concede. I did not care if he was the President of the United States himself; he was not going to tell me to not bring my Crowbar 2, my 'Kato', along with me to watch my back.\n\n \"Good enough.\" he said. \"Don, please come this way.\" I followed him into the small office with the plexiglass cube. Hmm, this was something 'hot shit'...\n\n And what was more... at the far corner of the table in the room was my favorite CIA agent, my wife Laura. I smiled at her, but she just looked at me as if she'd never met me before, and she did not speak at all.\n\n \"I appreciate you coming so quickly, Commander.\" said the DepDirector. \"We've had something come up, something very important, and troubling.\"\n\n \"How may I be of service, sir?\" I asked.\n\n The DepDirector slid some papers over to me. \"Commander, please sign this document, which says that you are about to be told Top Secret information, and that you will not divulge that information to anyone at all without the express permission or upon the orders of superior officers.\" I looked at the sheet, seeing that it indeed was what the DepDirector said it was, and I signed it.\n\n \"Okay,\" said the DepDirector, relaxing just a bit. \"Don, have you ever heard of 'Operation Beekeeper'?\"\n\n I shook my head. \"No sir.\"\n\n \"Do you remember when that FBI lawyer, named James Bond, interrogated you? Tried to trap you into an indiscretion?\"\n\n \"Yes sir.\"\n\n He slid another piece of paper over to me. \"As you can see, this email is a pretty rude order for me to make you available to be interrogated by him again, and also by his cohort Earnest Staffeld. Staffeld is one of the most brutal men I have ever met; he should've been born in the Nazi era. He works with our Special Agents rooting out spies and traitors. He also enjoys trying to trap people into a contradiction or a lie, so he can charge them with lying to a Federal agent and put them in prison. The 'Scooter Libby' treatment, as you know.\"\n\n \"And the bastard wants to talk to me?\" I said, re-reading the email. \"What did you tell the dipshit that sent this?\"\n\n \"Here's the reply.\" he said, passing over another sheet of paper. In the email, the DepDirector stated that he would not cooperate, and that he intended to forewarn me, Your Iron Crowbar, of their intentions to interrogate me. \"I got a call from the Director of the FBI over that, but after I explained, he's on my side again.\"\n\n \"But here's the situation.\" he continued. \"Bond and Staffeld are working in cooperation with Dr. Casey B. Walker of the CIA, whom I believe you have met. Walker is the CIA's top Counterintelligence guy, and Bond and Staffeld are working for him under this project called 'Beekeeper'. Your wife cannot access 'Beekeeper', nor can I, nor can the Directors of our respective Agencies.\"\n\n \"Beekeeper...\" I said, going into a reverie. It was not a long one. \"Well, I have to commend Dr. Walker on his name selection.\"\n\n \"Why is that?\" asked the DepDirector. Laura said nothing, but just peered at me.\n\n \"Well, sir,\" I said, \"who do we know that retired to a hobby of beekeeping... on the Sussex downs?\"\n\n \"Ohhhhh...\" whispered Laura, understanding. The FBI DepDirector took longer.\n\n \"Oh.\" he said. \"Sherlock Holmes.\"\n\n \"Yes. Sherlock Holmes.\" I said. \"So we do not need to access the files to surmise that Dr. Walker is investigating me. And Bond and Staffeld are his opening salvo, or perhaps I should say his continuing salvo after that first interview that Bond fucked up so badly.\"\n\n I turned to Laura and said \"And now I think I know why two outstanding dogs have been so... concerned. They know someone has been worried about this.\" Laura just nodded, still not speaking, but conceding the point. A moment later she got up, nodded to us, and left the room. Of course I watched her magnificent ass in her tight business suit skirt as she went.\n\n \"So,\" said the DepDirector, \"I will not facilitate nor help them in their witch hunt. What I will do is advise you to seek legal counsel, especially if they try to corner you into an interrogation.\"\n\n \"I can refuse that, of course.\" I said. \"Unless they have a Court-issued warrant to arrest me, based upon probable cause that must be explained to the judge.\"\n\n \"Still, be careful.\" said the FBI Deputy Director. \"With these secret FISA Courts and the flouting of the Constitution in the name of the so-called 'War on Terror', these guys can get away with a lot, if they want to. I know you're already watching your back, Don... but look out for these guys with those eyes in the back of your head, as well.\"\n\n Part 20 - Continuance \n\n \"Well, Mouseketeers,\" I said, \"the FBI has informed me that they secured warrants to look at adoption records pursuant to the Linda Farris case. Let me tell you what they found...\"\n\n \"Sir,\" interrupted Mary Mahoney Milton, \"with respect, the FBI told us, also. No need to cover old ground, sir.\" We all smiled... if I.A. was listening in, we now had 'plausible deniability' to discuss what we'd learned before the FBI did, and by most certainly extra-legal means.\n\n It was Monday morning, February 22d. More weather had come through, dumping more snow. Fortunately, it had not come in such large amounts that it could not be handled.\n\n Cindy had gone to see Jenna at Jenna's campaign office on Saturday. There were few people there, and Cindy and Jenna had not needed to say much. Cindy gave Jenna back the ring Cindy had been given, remaining composed and stoic, as had Jenna. \n\n When Cindy left, she was met outside by her cousin. Of course I was not going to let her be alone at a time like this, so I took her to the Mountain Nest. Carole was happy to see Cindy, and vice versa, and two good dogs got a lot of skritchins. Dogs just make things better.\n\n And Cindy braved the snow to travel down to 'The Vision' World Headquarters on Sunday, driving in her four-wheel-drive Police SUV. (Mine is also so equipped.) She'd come in today looking a lot better than she had been, and I was glad for that.\n\n So now I was meeting with the Mouseketeers, who'd been helping the FBI compile a serious paper trail. The FBI was going to get a Federal arrest warrant for Farris, but I told the Mouseketeers to not get their hopes up.\n\n \"They're going to have to have a lot more than they do now, or they won't get an arrest warrant.\" I said.\n\n \"Why, sir?\" asked Detective David Krueger, astutely listening to this important lesson.\n\n \"Six degrees of separation.\" I said. \"Or even less. Their investigation touches something else: the State elections. If there is another prison scandal, then there's no way Governor Jared can be persuaded to run, because he'll lose badly. It won't hurt Lewis much, and it won't hurt Sean Stockton, who is a Legislator, but the current Administration will be shredded by the hate-filled, militant Media.\"\n\n \"I'm glad you don't have anything against them, sir.\" said Myron Milton. I just mock glared at him for a second, then grinned at the joke.\n\n * * * * * * * * * * * * * * * *\n\n After my meeting with the Mouseketeers was over, Paulina asked me to come into her office. She was practically waddling, so heavy with child was she.\n\n \"Don, we need to go over this.\" she said. \"It's the Jimmy Lawson case. I think this baby is going to come before the end of the week, and Krasney has already told me that he'd better not see me anywhere near the Courthouse for twelve weeks.\"\n\n \"Smart D.A., he is.\" I said. \"Prudent advice, he gives.\"\n\n \"I'd agree,\" Paulina said, \"but this case could become a bit iffy. I wanted to get a three month continuance, but Nance won't give Lawson bail, Lawson's attorney demands bail or a speedy trial, and Krasney has even come out against the continuance.\"\n\n \"This might tick you off,\" I said, \"but I'm sort of on their side on this. The trial is scheduled to start March 3d, about a week and a half from now. I've already been served my subpoena for it. The sooner this gets done, the sooner the Fire Department/EMT tensions die down and we can move on.\"\n\n \"Don...\" asked Paulina, staring hard at me, \"do you think Jimmy Lawson murdered Jack Naples?\"\n\n \"He's the most likely suspect.\" I replied. \"But a good lawyer will create reasonable doubt.\"\n\n \"Not quite what I asked you, Don.\" Paulina said. \"Do you think Lawson did it, or not?\"\n\n \"That's why we have juries, Paulina.\" I said, avoiding the trap she was trying to put me in. \"And I won't be on the one for Jimmy Lawson.\"\n\n I could tell Paulina was getting miffed at me. She said \"Well I think he did do it, or I wouldn't want this case to go forward. And I'm going to need you to help whoever Krasney assigns this to in order to get a conviction----\"\n\n *DING!*\n\n It was my Police cellphone. I looked at it, then said \"I expect Sergeant Rudistan to knock on that door in three... two... one...\"\n\n *KNOCK! KNOCK! KNOCK!*\n\n The door opened, and Sergeant Micah Rudistan peered in, then stepped inside, his usually-jovial face almost glowing with happiness.\n\n \"I'm sorry to bother you, ma'am, sir,\" Rudistan said, \"but there are two FBI Agents at the front desk that insist upon speaking to you, Commander Troy.\"\n\n \"You know what to do, Rudistan.\" I said, briefly smiling.\n\n \"Yes sir, I do.\" he said, and then retreated from the office.\n\n Part 21 - Action Stations \n\n \"I am FBI Special Agent Bond, and this is FBI Special Agent Staffeld.\" said Bond, James Bond, to the Duty Desk Sergeant as both agents exhibited their FBI badges and ID cards. \"Please call Commander Troy up here immediately. We need to speak with him.\"\n\n \"Yes sir,\" said the Duty Desk Sergeant. \"If you'll just step into this room here, Commander Troy will join you in just a moment.\"\n\n \"No.\" said Bond. \"Bring him up here to us. Immediately.\"\n\n Neither agent had noticed the Patrol Officer at the Duty Desk press a button under the counter. That action had sent pre-planned texts to several cellphones, including the Commander's police cellphone. It also set in motion a set of events intended to show these FBI slugs the cohesion of the Thin Blue Line.\n\n \"Sir,\" said the Sergeant, \"you will have to go into this room in order to speak with Commander Troy.\"\n\n \"No.\" said Staffeld. \"Agent Bond, let's leave for now. We'll get a Federal arrest warrant and have Commander Troy brought in to our offices in handcuffs.\" His words were meant to threaten and intimidate.\n\n But as the two FBI agents turned, they found themselves confronted by a full eight-man SWAT Team, in heavy armor and with shotguns and semi-automatic rifles.\n\n \"Sir,\" said the Sergeant, \"you have two choices. You go into the room to my right, or you both will be arrested, taken through booking, and Commander Troy will speak to you at County Jail.\"",
        "\"What the hell is this?\" snarled Bond. \"Are you holding us against our will?\"\n\n \"If you want to play it that way, Agent Bond,\" said the Sergeant, \"we will definitely arrest you.\"\n\n \"Like hell you will!\" snarled Bond again. \"We are agents of the FBI! I demand you bring Commander Troy to me NOW!\"\n\n \"Ohhhh, I wouldn't be making any demands around here, now.\" said Sergeant Rudistan, coming around the corner, wearing a protective vest over his uniform. \"Gentlemen, this is not some coward's home that you can just bust into and shoot dead without a warrant... this is a Police Station. And it's the law of this State that you are to follow a Police Officer's instructions, or you can be arrested. Now what will it be? This room over here? Or a prison cell?\"\n\n \"Let's get out of here.\" said Staffeld, but he found the SWAT Officers blocking his path to the front door.\"\n\n \"Ohhh, that wasn't one of the choices, Agent Staffeld.\" said Rudistan with great joviality and a big grin on his face. \"Now why don't you just step into that room so that we can bring this to a... peaceful conclusion.\"\n\n * * * * * * * * * * * * * * * *\n\n \"They must be jamming our cellphones.\" said Bond. \"I'm not getting any signal.\" By now, Staffeld had figured it out, and was sitting silently. Bond was furious. His personal loathing for the Iron Crowbar had grown by leaps and bounds in the 20 minutes he'd been sitting at the table in Interrogation-Alpha.\n\n Then the door to the Police side opened and in walked the man himself, the Iron Crowbar. He was brandishing his trademark red crowbar, and his face easily gave away his strong desire to use that weapon. With him was a woman in her late 30s, dirty blonde hair, a nice hourglass figure, and a great pair of legs accented by her tight skirt and high heel pumps.\n\n \"Commander Troy, we demand you submit to an interview with us-----\" started Agent Bond, but he was not permitted to finish. Commander Troy did not speak; the woman did all the talking.\n\n \"Shut up.\" she said, her authoritative voice cutting through the air like a miter saw. \"Agents, I am Bernadette Gillem, and I am Commander Troy's personal attorney. I am representing him here and and in any future encounters with you. Commander Troy will not speak with you. I am advising him to not meet with you at all and to answer none of your questions at any time. I do not appreciate attempts to entrap my clients with bullying interrogation tactics.\"\n\n She was not done: \"If you wish to compel Commander Troy to be interrogated by you, you must get an arrest warrant based upon good probable cause and explained fully to the Judge, and in a real and legitimate Court, not some kangaroo FISA Court. I am seeking a restraining order prohibiting you from attempting to contact Commander Troy again and from conducting any surveillance upon him without a legitimate and legitimately obtained warrant. Any attempt to contact him again will be met with legal action against you, and I believe I can find a great many Police Officers around here that will enforce those legal actions against you.\"\n\n With that, we turned and left. A moment later, two people walked into the room. They were Deputy Directors of the FBI and CIA, respectively.\n\n \"Gentlemen,\" said the FBI DepDirector, \"you heard the man's attorney. And now I'm following up. Any attempt by you, or anyone else, to molest Commander Troy in any way, will result in your suspension and also your arrest. Do not even try to contact him, do not try to follow him, do not try to send others to molest him or his family... or I will snap your heads back so hard it will sound like a sonic boom going off. Do I make myself clear?\"\n\n Neither man answered. The DepDirector said \"One more time, and you damn well better answer me. Do you understand?\"\n\n \"Yes sir.\" said Staffeld, the more pragmatic of the two.\n\n \"You can arrest me if you want.\" said Bond defiantly. \"But this isn't over. We will have our interview with Troy, and he'll be forced to admit to treason or take the Fifth. This is going to go higher than you, Director. A lot higher.\"\n\n \"I'm done here.\" the DepDirector said, to Laura. \"They're yours. Bond's toast, he just doesn't realize it yet.\" With that, the DepDirector opened the door to the anteroom. He admitted another person first, who would be Laura's bodyguard, then he left.\n\n This person was dressed in SWAT-like clothes, heavy armor and a helmet, and a black silk mask with only slits for her eyes. She had an automatic shotgun, and she had it pointed levelly at Agent Bond's head. She had a badge on her belt; a closer examination would reveal it to be a C.I.A. badge.\n\n Laura held up a gold disc and pressed a small button on it. It was a bug-killer, even more sophisticated than her husband's or the one Cindy had but she didn't know about. Laura then looked at the two FBI Agents, fire in her eyes.\n\n \"Agents,\" she said quietly, \"the FBI Deputy Director was being too generous, too kind. I'm going to make this emphatically more clear to you. If I even have a thought that you or anyone associated with you, including Casey B. Walker, are bothering my husband in any way at all... I will have you 'terminated with extreme prejudice'. Oh, I know that's a clich\u00e9, but it's very true and very, very real... I have the power to order both of you to be exterminated, to be killed... and you will be. I don't know what kind of bull shit you are trying to do to my husband, but I will have no more of your games. Now go back to Washington, and stay the hell out of my way.\"\n\n With that, Laura turned on her heel and walked out of the room. The masked bodyguard kept her shotgun carefully trained upon the agents, then darted out the door, which closed behind her.\n\n \"Well,\" I said in the anteroom, \"I owe some people lunch.\"\n\n \"Not at all, Commander.\" said the DepDirector of the FBI. \"We're all on the same side against these bastards. Why don't we go to your office for a moment, though.\"\n\n \"Heh heh heh heh.\" said Chief Moynahan, who'd watched it all. \"We never had this much fun in Midtown. We only had slimy State politicians down there. Okay, Mr. Crowbar, I'll have our SWAT Team stand down while you talk with our Federal friends, here.\" He exited the anteroom, and we followed.\n\n Laura told her bodyguard to sneak out while the sneaking was good. I looked into her eyes as she left, nodding my thanks. She nodded back then swiftly went out the employee's parking lot door nearby.\n\n I did not have to ask; I knew those eyes. For eight years I had gone to sleep and awakened looking into those eyes. Of course she was my ex-wife Melina...\n\n * * * * * * * * * * * * * * * *\n\n \"Nice office.\" said the DepDirector, looking around. I had him and Laura sit down. The SWAT team had 'escorted' the FBI lawyers to the door, then were dismissed to their regular duties by the Chief.\n\n \"Thank you, sir.\" I said. \"And thank you both for that. If that doesn't scare them off, then 'termination with extreme prejudice' may just be our only remaining option.\"\n\n \"We'll see.\" said Laura. \"I don't need to tell you that we had our Directors' solid approval to do that. We're also asking this State's U.S. Senators, Richard Nunn and Samuel Russell, to begin investigating Walker, and what we believe to be the illegal 'Operation Beekeeper'.\"\n\n \"I hope this office is not bugged, and Internal Affairs not listening in.\" I said. Laura flashed a smile; her anti-bugging device was full on.\n\n \"Again,\" I said, \"I do appreciate it.\"\n\n \"Oh, I know you'll be paying me back,\" said the Deputy Director of the FBI, \"when you help me utterly destroy Superior Bloodlines and those other filthy racist groups... beginning with your Shadow Man.\"\n\n \"No doubt he is the start and end of it all, the Alpha and the Omega of it.\" I replied. \"Six degrees of separation always come back to him.\"\n\n \"That leads me to one question, Don.\" said the DepDirector. \"Do you think Casey Walker is in league with your Shadow Man?\"\n\n I sat back as I contemplated it. \"I'm not sure.\" I said. \"Walker and his intentions towards me.... I think that's something my lovely and brilliant wife will have to unravel.\"\n\n Part 22 - In Black and White \n\n \"So, what do you want to do?\" Jack Muscone said.\n\n \"I'm the wrong person to ask.\" I said.\n\n It was Friday, February 25th. We were sitting at the Cop Bar, eating lunch. Jack needed a double cheeseburger to make himself feel better. I had a ground beef patty and eggs and some trimmings.\n\n \"All we need is to show there's a baby factory going on in State Women's Prison.\" said Jack Muscone. \"Then we can arrest Linda Farris for that. And then we can make an offer to drop the charges if she gives us Louise Belfort and her Badge Gang. That'll stop the pool of para-military gangs from being so easily recruited, and it'll give you a huge inroad to your Consultant of Crime.\"\n\n \"How are you going to get that?\" I asked. \"Likely as not, the prison is keeping absolutely no records of these women that might've agreed to carry a baby and give it up in exchange for money.\"\n\n \"We've got a few records of past women getting $9900 each deposited into their bank accounts. They get paroled a few months later, and have that money when they come out. We checked a few of them out, even talked to a few, and none of them would say anything. We had to let them go; nothing to charge them with, to hold them.\"\n\n \"This is a near-perfect crime.\" I said. \"And I'm not sure how much of a crime it is. The women get money, the babies get a good family... think of it, anyone able to pay six figures for a baby is going to be able to raise it well... and whoever made the arrangements gets paid big. Yeah, I know, some women may have been coerced, some didn't even know the babies were put on the black market. But stopping it?\"\n\n \"Les Craig in Southport thinks if we expose it and arrest the Prison System people involved, like Lockhart and maybe Bryce now,\" said Jack, \"then it'll stop. But we need evidence. What would you think about us sending someone undercover?\"\n\n \"A woman? Already pregnant?\" I asked. \"That's too dangerous, especially if the woman was found out. And if they put her in isolation, or otherwise 'disappear' her... that could be really bad. I suspect the women in this program are not expected to be paroled early, not expected to receive any family or visitors during their terms.\"\n\n I continued: \"The only other option is to have a woman go in that's willing to have sex for the program. Basically you'd need a prostitute. And again, if she's exposed, that'll be bad... and again... how to extract her?\"\n\n \"Yeah.\" Muscone said. \"It's good you're a Consultant with us and not a Consultant of Crime... you're too damn good.\"\n\n \"I have to be, if I'm going to take down the bastard who is the Consultant of Crime.\" I replied.\n\n \"What about sending a man in.\" said Jack. \"As a guard or other prison employee. Maybe getting him to infiltrate the program. Maybe he gets laid, then we can extract him easily enough.\"\n\n \"That'll take a long time.\" I said. \"I suspect they're only using people they trust. Lockhart hiring Bryce, for example. You'd have to recruit someone they would trust to bring into the system, and I suspect the aforementioned Consultant would be consulted... and like 'The Teacher' in the Tenderloin District, our Consultant knows who is on the 'naughty' list and who is on the 'nice' list.\"\n\n \"So... what can we do?\" asked Jack. \"Look, I understand you punching holes in my ideas, and it's a good thing... but how about some ideas for something that will work?\"\n\n \"Okay.\" I replied. \"Start putting together an airtight case connecting Linda Farris to Louise Belfort and Lockhart and their cronies. Look for financial transactions, follow the money. Once you have enough evidence, get a warrant, conduct a very fast raid, haul them all in at once, then start working them over to turn State's evidence. But don't do that until you're really ready to go, because it'll just let our Consultant know that we're hot on his tail. We really need to add him to our bag in the first go-round, or it may be for naught.\"\n\n \"Always back to him, eh?\" asked Muscone.\n\n \"He's the big hub, radiating the spokes. He's the Spider at the center of the big Web.\" I replied.\n\n \"That's going to be one hell of a thing, proving all that to a jury.\" Muscone said. \"We'll need Lindy and Sandra, the Mouseketeers, the Abacus, and everyone else with an Accounting degree to unravel it, and Paulina Patterson ten times over to spoon-feed it----\"\n\n *BRING! BRING! BRING!*\n\n \"Speaking of Paulina,\" I said as I checked the message on my phone, \"Oh shit! We gotta go, Jack! Paulina's going into labor!\"\n\n * * * * * * * * * * * * * * * *\n\n She was scrunched up like all newborns are, with a pink toboggan on her head. As I held my second daughter, I again contemplated the miracle of life.\n\n \"She's beautiful, just like her mom.\" I said. Paulina beamed. \"What did you name her?\" I asked.\n\n \"Just as we'd talked about before.\" Paulina said. \"LaTasha Dionne Troy-Patterson. 'Tasha' for short.\"\n\n \"That's nice.\" I said. \"So... is there any family I need to call?\"\n\n \"No.\" Paulina said. \"I don't think I ever told you the whole story. My father was in the Army, rose to Sergeant First Class. Then he beat the shit out of a Captain, and that was the end of his career. He was lucky to escape jail time, but there was some question of racism from the white Captain.\"\n\n \"Anyway, he got out, married my mom, who was half-white, half-black.\" Paulina continued. \"And then he got in with the wrong people. He really was a good leader of people, and soon had a drug distribution gang going on. Made a good bit of money, too. But he started drinking, and he beat up my mom a few times after I was born. She got a restraining order against him, but he'd entice her back to him. The last time... he beat her to death.\"\n\n \"Ouch. Sorry to hear that.\" I said.\n\n \"I was extremely lucky.\" Paulina said. \"My mom's mother took custody of me, raised me. I worked like a dog to become a lawyer, then a Prosecutor. My grandmother told me I had a brother, that my dad had knocked up another woman before hooking up with my mother, and that he was taken in by his dad's family. Anyway, my grandmother died a few years ago. I had some money in trust, which paid my college bills and gives me a little bit to supplement my income. I've been investing that.\"\n\n \"No idea who that brother is?\" I asked.\n\n \"Not really.\" Paulina said. \"No one I want to talk about, anyway.\"\n\n \"Does he know about you? That he has a sister?\"\n\n \"I don't know, Don.\" said Paulina, her tone making it more than clear she did not wish to discuss it. \"Right now all I got is you and Tasha. And I'm very happy to have Tasha.\" The baby made a sound and moved her tiny arms around.\n\n \"Dr. Fredricson said she'll turn lighter as she gets older, by the way.\" said Paulina. Tasha was not any lighter than her mother, despite having a white father, me. \"And well she should: she's more white than black.\"\n\n \"Doesn't matter what color she is.\" I said. \"She's beautiful and I love her.\" I gave her back to her mother as Nurse Jones came in.\n\n \"All right, Commander, it's feeding time.\" said Nurse Jones. \"And then we're going to shut it down, so you might as well go home until tomorrow morning.\"\n\n \"I'll do that.\" I said. I kissed Paulina goodbye, telling her I'd be back in the morning.\n\n * * * * * * * * * * * * * * * *\n\n \"Pretty easy delivery.\" Laura said as we ate dinner. She had done the delivery. \"By the time we'd texted you, that baby was coming out. Literally, 20 minutes after Paulina got to the hospital she was a mother.\"\n\n \"Well, that's good.\" I said. \"She's a cute baby. I could see a bit of resemblance to Carole around the eyes---- Carole, what are you doing?\" I'd noticed that someone was giving two dogs her carrots.\n\n \"I'm giving Bowser... and Bud-dy... my carrots.\" Carole said.\n\n \"Carole, that's people food, for you to eat.\" I admonished. \"We'll feed the dogs later tonight with their food.\"\n\n \"Why can't dogs eat people food?\" Carole asked.\n\n \"Because they are not people. They are dogs.\" I said. \"They like dog food so they eat dog food. And we eat the people food because we're people.\"\n\n \"Why?\"\n\n Hoo boy....\n\n Part 23 - The Witness for the Prosecution (with apologies to Dame Agatha Christie) \n\n On Wednesday, March 2d, the trial of Jimmy Lawson began. I could not be inside the Courtroom, as I was being called as a witness. But I knew what was going on.\n\n I had steered Krasney into the choice for the ADA to prosecute this case: Dwayne Gregory. Nerdish, with curly black hair and glasses, and a whiney voice, Gregory was by far the most inept of the District Attorney's staff. He was all but relegated to Staff duty and assisting other ADAs, and often forced to be on duty for Night Court. In spite of that, I'd suggested to Krasney that Gregory be given this shot.\n\n Paulina Patterson was fired up angry about it. She and Tasha had left the hospital two days after Tasha's birth, and Laura and I had gone to Paulina's house to visit and help out with things. Laura's breasts still make milk, and she normally bottles the milk and gives to other women she knows with babies. So Laura breast-fed Tasha, and Paulina talked to me.\n\n \"Are you insane?\" Paulina whispered to me. \"Gregory can't successfully prosecute a jaywalking case! He's damn near getting fired!\"\n\n \"That's why he's perfect for this case.\" I said.\n\n \"I get the feeling you don't think Lawson did it.\" Paulina said.\n\n \"I'm willing to let a Jury decide.\" I replied. What I did not say was that Jimmy Lawson's wife had been fired from her job at Target, not for doing anything wrong, and not because Jimmy was accused of murder. He was a striking EMT, and the Target management took delight in firing her for that reason alone.\n\n She and their newborn child had nowhere to go, no one to help. Both their parents were deceased, they had no other relatives. They'd been struggling, now it was a desperate time. Not even the churches would lift a finger to help: her husband was a striking EMT.\n\n They may not have had family... but I did. And when I told P. Harvey Eckhart of their plight, he wasted no time in bringing mother and child to 'The Vision' World Headquarters. She worked around the place like the other acolytes there, finally belonging. And now, her husband was on trial for the murder of what I knew to be a bad, bad man.\n\n \"Well, I hope you'll at least train Dwayne to ask you the right questions, so you and he can spoon-feed this case to the Jury.\" Paulina said.\n\n \"I always have believed that Juries are more intelligent than they might give the appearance of being.\" I said. \"They'll make the right call.\"\n\n In addition, many Fire Department personnel, led by Assistant Chief William Jefferson, were sitting in Court, in their uniforms with jackets, being sure to sit on the Prosecution side. Hearing this, EMTs had come out, in civilian suits and ties or whatever they could afford, to sit behind Lawson and give him moral support. Lawson's wife was sitting in the front row behind him, the first time she was seeing him in weeks, as he'd been denied visits while in County Jail upon Judge Harry 'Spud' Nance's explicit orders.\n\n I'd heard that the Fire Department people were pissed that one Police Captain Cindy Ross had given Lawson's wife rides to and from 'The Vision'. A few even snarled vague threats at her. But that got stopped cold when Fire Chief Quinlin and other, more reasonable Fire Department people disseminated the word that the Iron Crowbar was taking any insults towards his Police Captain as a personal affront. They wanted no part of a Crowbar beatdown... especially one administered by a most very angry Police Commander...\n\n Fortunately, nothing was going on. The FBI was trying to put together their case on Linda Farris and the Belfort Badge Gang. There had been nothing more from Casey B. Walker or his poodles Bond and Staffeld, which actually had Laura worried. Chief Moynahan, Cindy, and Teresa were taking care of Police business.",
        "* * * * * * * * * * * * * * * *\n\n \"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded reporterette at 7:00am, Thursday, March 3d. \"Channel Two News is bringing continuing coverage of the trial of former EMT Jimmy Lawson, who is accused of murdering Union leader Jack Naples during the EMT Strike!\"\n\n Bettina started in: \"With little time to prepare for this trial, both Prosecution and Defense will be hard pressed to make their cases. Prosecutor Dwayne Gregory is getting his first shot at what D.A. Krasney calls a 'major' case, while Defense attorney Mike G. Todd of the firm Madison & Ives Law Firm, P.C., is a relative newcomer to our County. He formerly practiced contract law in the town of Apple Grove, a couple of States over from here.\"\n\n \"Experts believe this case should be an easy win for the Prosecution.\" Bettina continued. \"Yesterday the Coroner showed evidence that a scalpel owned by Lawson from his days in an Army medical unit was the weapon that killed Mr. Naples. Several Police Officers have been called to testify, but today is the crown jewel of the Prosecution's case, when Commander Donald Troy will be called to the stand. His testimony is expected to be devastating...\"\n\n \"Ooooooh,\" said Martin Nash. \"Crown jewel. Devastating. They're not building you up, are they Commander?\"\n\n I flashed a brief smile. \"What I want to know... is who are these so-called 'Experts' ov vich shee speeeks.\"\n\n \"Who do you think they are, sir?\" asked Joanne Cummings. \"Besides yourself, of course.\"\n\n \"Oh, I'm not the one giving Bettina background info.\" I said. \"I think half the time she says 'experts', she's giving her own opinion, or the opinion KXTC tells her to have, and using 'experts' to make people believe it's fact and not just the Media trying to steer and make opinion.\"\n\n \"The Media would never try to make news or steer our opinions, would they?\" asked Theo Washington, deadpan serious. We all gaped at him until he gave his 'movie star handsome' grin, then we all laughed.\n\n After watching the Sports coverage, I said \"Okay, guys, I've got to go get dressed for Court. Y'all have a good day, and keep things as quiet as they have been all this past week, okay?\"\n\n \"We'll do that, Commander.\" said Cindy. \"Nice and quiet, like it always is when you're not around.\" Laughter erupted as a red crowbar was waved in her general direction.\n\n * * * * * * * * * * * * * * * *\n\n In his nasally voice, Dwayne Gregory said \"Your Honor, the People call Police Commander Donald Troy to the stand.\"\n\n The trial was being held in the Old Courthouse, with it's high ceiling and church-like walls and windows on the sides, the pews full of observers. The back doors opened to admit Your Iron Crowbar.\n\n I saw Paulina sitting on the Prosecution side, near the back of the Courtroom. Her eyes flashed fire when she saw me. She would have had me wear my Duty Dress uniform at the very least. But today I was wearing the simplest of Police uniforms: dark blue, a barely-visible double-line of black 'piping' on the sides of the legs, long sleeve uniform shirt with matching color tie tucked into the shirt. It was like Orange Order Day.\n\n This uniform was a bit big on me, as I normally wore light armor underneath the shirt. Without that, it looked loose and frumpy. In addition, as I walked up the aisle, I did not stand at my full, broad-shouldered, imposing 6'4\" height, but stooped just a little. My walk was not an unconscious swagger, but an almost nervous shuffle. I could feel the eyes of everyone on me as I approached the bench, letting the Bailiff guide me.\n\n Taking the stand, I was sworn in and I sat down. I could not be dressed improperly, so I had to have the silver-bordered red rectangle and silver-bordered purple rectangle over my nameplate on my right side. But I'd put just a little space between them, and they were ever so slightly off center. In addition, my badge over my left pocket was not brightly shined as it normally was, and looked dull.\n\n I also took advantage of the option to wear the silver 'TCPD' insignia on my left collar and my rank on my right collar, instead of two 'TCPD' insignia on the collars and my rank prominently displayed on the epaulettes of my shirt near the shoulders. And the letters and the rank were miniatures, not full sized, which was not improper uniform wear (especially if it was me doing it), but did not exude my normal power or authority.\n\n For those that don't know and/or have never been on jury duty: the legal process in a Courtroom is slow. The Prosecution has to slowly build every block from the foundation up, not unlike Carole playing with her toys. So the normal course of action would be for the Prosecutor to build me up as a witness, sort of an 'earn the right' thing to impress the Jury.\n\n \"State your full name and occupation, please?\" said Gregory.\n\n \"James Donald Troy. Police Officer.\" I replied. I could feel more than see Paulina shuffle herself around; she'd have had me say 'Police Commander', of course.\n\n \"What is your position with the Police Department?\" asked Gregory.\n\n \"Police Commander.\" I replied. At this point, Paulina would elaborate, or have me elaborate that this was Second-In-Command of the entire Police Force. Gregory did not do so. Also, normally at this time Paulina would ask to read my record of service, and at least my medals, into the Court record. Medals of Valor impress juries. Gregory did not do this.\n\n \"You were at the crime scene where Mr. Naples was found dead?\" asked Gregory.\n\n \"Yes.\" I replied.\n\n Gregory asked me to describe the crime scene, which I did. Then he asked me to evaluate the position of the body on the floor.\n\n \"Objection!\" cried out the Defense counsel, Mike G. Todd. \"This witness has not be established to be an expert witness, and he has been on this Police Force for only three years.\"\n\n At this point, Paulina would spell out my military M.P. career, reassert my position within the Police Force, comment on my number of successful cases, mention that I was Top Third in my Police Academy Class, Top 10% of my Advanced Class, and Top of the Class, No. 1 in my Class, at Detective School, and so on and so forth, then say that this \"more than qualifies him as an expert witness\".\n\n Judge Folsom looked over at Gregory, expecting to hear this and routinely overrule the objection. But Gregory only said \"I withdraw the question, Your Honor.\"\n\n I saw Paulina actually come up out of her seat before catching herself. She was en fuego now. I merely sat there like a bump on a log. Judge Folsom was shocked, but he said \"Very well. And the objection is sustained.\" Gregory was now playing cards with a weak hand, so to speak.\n\n Gregory had me confirm several statements by witnesses. The Defense, sensing an opening, made several objections. Judge Folsom denied most of them, but allowed a few as Gregory made no attempt to easily rebut the objection.\n\n Finishing up, Gregory said \"Your witness.\" The Defense attorney rose and asked \"Commander Troy, from these witness statements and police reports, which I'm sure you've read, do I understand that the victim, Mr. Naples, was in the room alone when everyone else left for lunch?\"\n\n Gregory should've immediately objected to the stipulation that I'd read the reports, forcing the Defense to establish it. But he sat at his table, taking notes as if he were a junior Law School student, making no objection.\n\n \"That is correct.\" I said.\n\n \"So it's entirely possible that someone else could've come into the room and killed Mr. Naples?\"\n\n This was leading the witness, and even a Law Student would know to object. Gregory sat there. Judge Folsom was almost open-mouthed in his disbelief.\n\n \"That cannot be ruled out.\" I replied. I felt as much as heard the Jury members murmur. Reasonable doubt had been introduced.\n\n \"The scalpel that was the alleged murder weapon,\" said Mike Todd, \"did it have the Defendant's fingerprints on it?\"\n\n \"The Crime Lab report said there were no fingerprints on it.\" I said.\n\n \"So while the scalpel belongs to the Defendant, it could have been stolen, used by someone else, then returned to where it was stored, is that not so?\"\n\n Gregory should've been screaming an objection, as this was calling for speculation, and I had already been denied 'expert witness' status. Gregory said nothing, even though the Judge and I were both looking at him. The Judge finally just nodded to me.\n\n \"Yes, that is possible.\" I said.\n\n * * * * * * * * * * * * * * * *\n\n The next day, Friday, March 4th, the lawyers gave their closing arguments. Dwayne Gregory actually gave a pretty strong one; I very much suspected Paulina had contacted him and worked with him on that to salvage his case, even though she was not supposed to.\n\n The Judge gave instructions to the Jury, and they retired to the Jury room to deliberate. I left the room to call Headquarters. Cindy said that the FBI had spotted a money transfer and was looking into it with the help of the Mouseketeers. I was about to say that I was coming to Headquarters, when a Deputy Sheriff came up to me and said \"The Jury is coming back in. They've already reached a verdict.\"\n\n \"Gotta go, Captain.\" I said and disconnected. To the Deputy I said \"Really? Already?\" We went back inside.\n\n Ten minutes later, the Jury filed back in. A sheet of paper was handed to the Judge, who read it, nodded, and gave it to the Court Reporter to read. As is tradition, the Prosecution and Defense stood up, and everyone in the Courtroom also stood up to hear the verdict.\n\n \"In the first count of Murder in the First Degree, We the Jury find the Defendant... not guilty...\"\n\n There was a scream from Lawson's wife as he hugged his attorney. The former EMTs all erupted in a loud cheer as Lawson and his wife hugged, both of them crying. Judge Folsom was furiously banging his gavel and shouting \"There will be order in this Courtroom!...\"\n\n I might've had a little smile on my face, until I looked over at Paulina, sitting a few rows ahead of me. She was staring daggers at me. I did not waver, and made sure to lock my eyes with hers...\n\n Part 23 - Bitter Aftermath \n\n \"This is Bettina Wurtzburg, KXTC Channel Two News!\" Bettina yelled from outside the Courthouse Building. \"We break into your regular program to bring a shocking report from the Courthouse. Former EMT Jimmy Lawson has been found 'not guilty' of the murder of Union boss Jack Naples!\"\n\n \"The Jury only took minutes to come back with their verdict!\" Bettina continued. \"Everyone seemed stunned, expecting a conviction or perhaps a hung jury, but the Jury members were adamant in their post-trial statements that the Prosecution had simply not proved their case, and that the 'reasonable doubt' was so strong that they had no choice but to acquit the suspect.\"\n\n Bettina interviewed an EMT that had been in the room: \"This is... vindication for all we've gone through, the abuse we've taken, the loss of our jobs and our livelihoods. At least we got Justice for this one man.\" the man said, his face looking worn and etched, but happy for this moment.\n\n Bettina interviewed a young Fire Department fireman, who said: \"This is a travesty of Justice. A filthy EMT got away with murder in this County, while our fellow fireman go to jail on trumped-up rape charges. Something's not right here, something's not right at all...\"\n\n Bettina then said \"Let's go to the Channel Two News Decision Desk. Amber!\" The coverage went to studio, where Amber Harris was talking with two elderly men, former lawyers and judges both.\n\n \"Ooooh, 'experts'!\" cried out Joanne Cummings as everyone watched from MCD. I had just come into the room. I'd changed from my standard uniform to my light blue shirt, dark blue pants with a double line of thin, light-blue piping down the sides, and my ranks on soft shoulderboards and twin 'TCPD' pins on the collars. Back to 'full power', I was.\n\n \"Yes, 'expert' sighting!\" I said. Everyone laughed. They wanted to ask me questions, but I pointed to the screen.\n\n \"Gentlemen,\" said Amber Harris, \"how did we get to this stunning verdict? It seemed like an airtight case to convict this former EMT of premeditated murder. What happened?\"\n\n The first panelist said \"There were numerous errors by the prosecution----\"\n\n \"I'm sorry to interrupt!\" Amber Harris said, cutting off the panelist. \"We now go to John Hardwood at Stiles Campaign Headquarters! John!\"\n\n Hardwood came on the screen. \"Thank you Amber! Jenna Stiles, who is running against District Attorney Krasney, is about to make a statement.\" The camera panned to Jenna as she came up to the hastily constructed podium with a bank of microphones.\n\n \"Thank you for coming.\" Jenna said. \"With regard to the recent verdict moments ago, we first and foremost appreciate the Jury's service on this case, and we respect the Jury's decision. Having said that, we have to ask if the many poor decisions by District Attorney Gil Krasney contributed to the failure to achieve a conviction, and Justice denied for the late Jack Naples. We understand that ADA Paulina Patterson just gave birth to a beautiful baby girl, and we congratulate her on that. But even with her being unavailable, we question why Gil Krasney could not have prosecuted a much better case...\"\n\n * * * * * * * * * * * * * * * *\n\n Cindy Ross pulled out in her Police SUV, working through a throng of Firefighters that were screaming at them. Finally, she got through. \n\n Jimmy Lawson was in the shotgun seat, and his wife and their baby in his carseat were in the back.\n\n \"Okay, we'll get you down to The Vision.\" Cindy said. \"The Commander said he wants to talk to you tonight, and he'll come down.\"\n\n \"I really appreciate everything you've done for us, and for caring for my family.\" said Lawson.\n\n \"Dr. Eckhart is a very great man.\" Cindy said. \"He has helped many people like you. So, any idea where you might go?\"\n\n \"I have to find a job, but we don't have any money, we can't even move.\" said Lawson. \"And I'm scared to leave my family here while I go somewhere else to work. Those Fire Department jerks are out of control.\"\u2028\n\n\"Well, we should be past them... oops, I spoke too soon.\" Cindy said. \"We're being followed by Fire Department vehicles.\" As she continued down University Avenue, she got on the radio.\n\n \"Break! Break! Break!\" Cindy called out. \"I am going South on the Midtown Highway with civilians in my vehicle. I am being pursued by Fire Department vehicles. I need backup and interdiction.\"\n\n \"Roger that, Captain Ross.\" said the voice on the radio. \"All units, proceed to University Highway south...\"\n\n Cindy drove on, knowing that to stop might be a problem. But as she neared the line to Coltrane County, she saw a backup of cars. And ahead of them, she saw the Fire Engine blocking the road...\n\n * * * * * * * * * * * * * * * *\n\n I drove like a madman down Riverside Drive, then took County Road 5 down to County Road 2. My partner was in trouble. She'd called in again, describing the situation near the County Line, and that she was under siege with a family, including a baby, in her SUV. Other Police were in the backup of cars, and in addition were deliberately being impeded by Fire Department cars. Me, I skirted the whole mess, knowing County Road 2 would let me come in behind the blockade.\n\n Meanwhile, Cindy had driven up to the blockading Fire Engine. Firemen were advancing on her SUV, and she had unstrapped her service weapon and was ready to draw it...\n\n *WHOOSH!*\n\n The silver Police SUV practically flew in, aiming at the advancing Firemen. They scattered to avoid being run over as the SUV spun 180 degrees with a screech of tires. She saw the Iron Crowbar driving as he pulled up alongside her vehicle. And his face was not one that perps wanted to see.\n\n I got out of my vehicle, oblivious to the danger, knowing I had armor on under my shirt and another armored vest over it. I had a sudden flash thought of R. Lee Ermey in the barracks in the movie Full Metal Jacket. I barreled in with my very best impression of him.\n\n \"What in the hell is going on here? Who in the fuck is blocking my highway with a fucking red Fire truck? Get that god damn thing off the road, Engineer Forbes!\"\n\n \"Stand your ground!\" yelled a voice. It was Fire Assistant Chief Jefferson. He technically was my equal in rank, but today he was breaking the law.\n\n \"What the fuck are you doing, Numb Nuts?\" I hollered as I came striding up to him. Other firemen looked ready to attack me, but at the same time were hesitating... none wanted to be the first to take a crowbar to the teeth.\n\n \"We're stopping that filthy murdering EMT from escaping, that's what we're doing!\" Jefferson yelled back. \"He's not leaving this County. We're going to have him tried again until he's convicted and is put to death!\"\n\n \"You fucking idiot!\" I yelled. \"Have you ever heard of a thing called the 'United States Constitution''? I suggest you read it. Double jeopardy. Lawson was acquitted. He cannot be tried again. EVER!\"\n\n \"You trying to tell me that filthy piece of shit EMT is going to get away with murder?\" Jefferson snarled loudly.\n\n \"Yes, that is exactly what I am telling you.\" I said, also loud enough for everyone else to hear me. \"He was acquitted. If he did do it, he's gotten away with it. Just like O.J. Simpson, Jefferson! That EMT is walking free, and YOU are about to go to jail.\" I turned to the others. \"Why is that Fire Engine still blocking the road?\"\n\n \"Stand where you are!\" said Jefferson. \"Anyone that moves that engine will get his ass handed to him, by me!\"\n\n Just then a Fire Department car came rolling in. Fire Engineer Roy Easley stepped out. He was in a Duty Dress uniform, with jacket and tie.\n\n \"Guys, you know this isn't right!\" he called out. \"Forbes, get that Engine off the road! Everyone else, get off the road! Let's go!\"\n\n \"I'm going to fry your ass, Easley!\" threatened Jefferson. \"I'm the one giving orders here!\"\n\n \"No you're not.\" I called out. \"*I* am the one giving orders here. Do what Engineer Easley told you to do. Jefferson, you're under arrest.\"\n\n \"Try to take me in.\" said Jefferson. \"Just try, cocksucker.\"\n\n \"No problem.\" I said. I advanced upon him. He took a swing at me. If someone takes a swing at me, they'd better not miss... I won't. He missed, and I saw his shoulder joint as it flashed by me. Knowing Aikido, I know what to do with those.\n\n *WHAM!* Jefferson's face hit the pavement, his arm being twisted behind him. Within seconds, I had handcuffs on him.\n\n By now, several TCPD cars had made their way down, and the Fire Engine was being moved. I had Rudistan and Morton transport AFC Jefferson to Headquarters for booking. I came up to Cindy's SUV and she rolled down the window.\n\n \"Chief Griswold always said you're the kind of girl that can stop traffic.\" I said. Cindy burst out laughing the way Molly often did, dissipating the tremendous tension she had been under. I continued \"Beat feet down to 'The Vision'. Stay there until I come down.\"\n\n * * * * * * * * * * * * * * * *\n\n 2:00pm, Friday, March 4th. I was in the City Hall office of Town & County Sheriff Daniel Allgood. With me was Police Chief Sean Moynahan.\n\n When we came in, Allgood said \"This is a serious situation, gentlemen, so no jokes, please.\" He had us sit down. \"I have spoken with Fire Chief Quinlin. He was not invited to sit down, and it was a one-way conversation. I actually asked him if those were real Fire Department personnel, or actors dressed up as Firemen, so unprofessional were they.\"\n\n \"I will say this.\" the Sheriff continued. \"I believe he is truly as stunned by all of this as we are. Having said that, there is a growing problem, here. The Police have put two Firemen away for rape; well deserved, of course. And some others have been taken down, as well. Assistant Fire Chief Jefferson is suspended without pay, pending an investigation by the Inspector General for his actions today. You will not believe this, gentlemen, but I've actually had citizen complaints and even members of the Council call and complain about what they perceive to be an overly harsh attitude towards the Fire Department.\"",
        "It took everything I had to not speak out, but I held my tongue. Daniel was watching me, and slightly nodded approval when I didn't speak. He continued: \"Chief Quinlin told me that a lot of the Fire Department people truly do not believe anything was wrong, because it was an EMT who was raped, and they say she deserved it. They also followed Jefferson's orders because he told them Lawson could be re-tried.\"\n\n \"Here's the bottom line, guys.\" said Sheriff Allgood. \"I can't have a quarter of the Fire Department in jail. They'll be internally disciplined, and Chief Quinlin will get my approval for the punishments, so you can count on them being severe. As to Jefferson, the Union is already rallying around him, and he has lawyers from Gresham & Mason at the Courthouse, getting Nance to have him freed. We don't have to charge him immediately; we can wait for the Inspector General to report, even if that takes a couple of months.\"\n\n \"Sir,\" I said, \"if Judge Nance has the charges dropped with prejudice, we can't go back and charge him.\"\n\n \"That's why the ADA will ask the Judge to release Jefferson on his own recognizance pending a further investigation.\" said Chief Moynahan. \"We're going to be.... Don? Don?\"\n\n I didn't hear him. I was in a reverie, and it was a deep one. I was told later that I was making hand gestures, as if using sign language, and that my eyes rolled up into my head a couple of times. Daniel and the Chief just watched, utterly fascinated. Finally, I came out of it.\n\n \"Oh my God.\" I said, mostly to myself. \"I am an idiot. An utter imbecile. How could I have not seen this?\"\n\n \"What is it that you're seeing now?\" asked Daniel.\n\n \"I just realized...\" I said, my voice still far away, \"... that this whole EMT thing... and these Fire Department slugs... yes, that has to be it.\" \n\n I sprang up to my feet and got out my cellphone. \"I'll explain in a minute, but time is of the essence now... yes, Duty Desk, this is Commander Troy. Has the Assistant Fire Chief been released yet?.... Good. Keep him there until I get there... If his lawyer shows up, just delay him... paperwork shuffle, you know the drill... just keep Jefferson there until I show up.\"\n\n As I hung up, I said, \"Sheriff, Chief, if you'll excuse me, I've got to talk to Jefferson before he's released.\" \n\n \"I'll go with you.\" said Moynahan. \"Excuse us, Sheriff.\"\n\n \"Like I'm going to miss this?\" said the Sheriff, following us out the door.\n\n * * * * * * * * * * * * * * * *\n\n I strode into Interrogation-1. Jefferson was alone in the room. Sergeant Rudistan came in with me.\n\n \"I want my lawyer.\" said Jefferson. \"I refuse to answer any questions without one present.\"\n\n \"Fine.\" I said, sitting down opposite him. \"Your lawyer will be here in a minute. You'll be released into his custody. And I'm not asking questions, I'm going to give you some news.\"\n\n I stared at him, my eyes boring into his. He became uncomfortable, like a dog being watched. Finally I said \"I want you to tell him something. I want you to tell him that I know what he's doing, ginning up hatred for the EMTs. I want you to let him know that I am coming for him. Tell him to... expect me.\"\n\n \"Who? What are you talking about?\" Jefferson replied. I just bore down.\n\n \"You heard me. Pass the message along.\" With that, I got up and left the Interrogation Room.\n\n Part 24 - Closing In \n\n Jeffersons's lawyer had come and picked him up. In the Chief's office, I'd explained to the Sheriff and the Chief that I had realized that many of these Firemen were rogue, just as we'd had (and still had) rogue Police Officers.\n\n \"I don't know why I didn't see it.\" I said. \"Every one of these 16 or so Firemen are white, are grouped together, mostly by Jefferson's doing, and have been instigating the EMT hatred. They go around to the social clubs, their churches, and tell their friends about how bad the EMTs are. But they're not acting alone. Someone has been guiding the Media to be subtly if not openly hostile to the EMTs, and many of the so-called 'good citizens' may just be paid for their 'loyalty'... sort of like how the 'Occupy' and 'Ferguson' movements had paid operatives at their cores.\"\n\n \"Ah, I see what you're getting at.\" said Daniel. \"So you think the Consultant of Crime is behind it? But what's his motive? His reasons for it?\"\n\n \"He creates strife. He creates discord, discontent, chaos.\" I said. \"I think some of the EMT attacks were to get rid of them, and so get an ambulance contract with the County.\"\n\n \"You've been thinking Thomas P. Cook was doing that.\" Sheriff Allgood said. \"Is there something you're trying to tell us, there?\"\n\n I smiled. \"I will let you draw your own conclusions about that. Suffice it to say that Cook is a dirty dealer, and loves to use his Council position to enrich himself personally. Not that he's the only one to ever do that. Some people do it at the National level, even create email servers to hide their private Foundation bribes and all. But I digress. It's actually bigger than just an Ambulance Service.\"\n\n * * * * * * * * * * * * * * * *\n\n \"Sorry for the delay in getting to you.\" I said at 3:30pm in my office. \"It's been a busy day. So, you have some financial movements?\"\n\n \"We understand, sir.\" said Mary Mahoney Milton, who was sitting next to Myron in the hot chairs in front of my desk. \"And yes, some money was transferred to an account at Third National Bank in the City. It was from an account at a bank in the State east of us, called 'Spartan Hellenic Bank & Trust'. This bank is like City & Counties Bank... no brick-and-mortar outlets, just a small office inside a three-story office building, no name on the door, only two offices and a server room.\"\n\n \"So the FBI went into that office, I perceive.\" I said. \"And the capitol city of the State east of us is not named 'Sparta', so that's doubly interesting.\"\n\n \"Sir,\" asked Mary, \"I don't see a Trojan War connection, like most of the other things we're finding.\"\n\n \"If memory serves me correctly,\" I said, \"Helen of Troy, the cause of said War, was not only Greek, but she actually was from Sparta. Ergo, 'Sparta Hellenic'. I strongly suspect that when our Consultant set up some of these things, he didn't expect us to find out about them.\"\n\n \"Or they're a distraction from his other things.\" said a voice. Captain Cindy Ross came right on into my office.\n\n \"Good point, Crowbar 2.\" I said. \"But I thought I told you to stay at 'The Vision' until I got down there.\"\n\n \"And I've disobeyed your orders, at the request of my father.\" Cindy said. \"We are both getting bad vibes that something is about to happen.\"\n\n \"Actually, I'm glad you're here.\" I said. \"We were just talking about a financial transaction. So... who is the account at Third National in the City?\"\n\n \"A Charitable Trust.\" said Myron. \"Three names on the legal paperwork, a 'Lou Bell', a 'Lynn Hart', and a 'Kyle Ferris'. The FBI went by the main branch of the bank, and also pulled DMV records. 'Lou Bell' is a man, very average in height and build, brown hair with a full beard. The address on his driver's license is one of those hour-rate hotels in the Red Light District, and of course he's not there. They have absolutely no idea who Lynn Hart and Kyle Ferris are, and there are no DMV records of them.\"\n\n I smiled. \"These guys are so cute.\"\n\n \"What?\" asked Cindy. \"Kyle Ferris reminds me of your nephew Ned's alias, and I guess 'Ferris' could be a bastardization of the latin for 'iron', your crowbar's favorite element.\"\n\n \"She's good, guys.\" I said to the others, to compliment Cindy. \"I think you're right, Crowbar 2. The name 'Lou Bell' sounds like a simple shortening of 'Louise Belfort'. I think we've found our Disguise Man that is wanted in connection with SBI Agent Jeff Reubens. And this shows he and Louise Belfort are connected.\"\n\n \"Oh wow!\" Mary exclaimed.\n\n \"The name 'Lynn Hart' is a consolidation of 'Linda Farris' and Watch Captain Lock-'hart'.\" I continued. And while 'Ferris' could be an approximation of 'Farris', I suspect that Captain Ross is spot-on that it's about 'iron'. And 'Kyle'.... hmmm....\"\n\n \"Enlighten us.\" Cindy said. \"It's come up a lot before, mostly with your nephew Ned.\"\n\n I just said \"No. You'll have to trace that one yourselves.\" \n\n I knew who 'Kyle' was, I thought to myself. I did not need six degrees of separation to get to him. And he could be found at the center of an insidious Web of Evil.\n\n \"So,\" I said. \"Police Force on full alert. The Belfort Badge Gang is getting paid, which means they are about to try some mischief. Every Police Officer, including those in Admin, is to wear some kind of armored vest for the next week at least.\"\n\n \"There's one more thing, sir.\" said Mary. \"We also have come across a connection to University Hospital's wi-fi that cannot be accounted for by anyone. We've found it a few times in the past, as if someone brings in a laptop or tablet and connects to the Hospital Staff's wi-fi service. Your wife has helped me to gain access to the wi-fi servers, and I will receive an alert if this signature shows up again. And it showed up today.\"\n\n \"You didn't get this from the FBI, did you?\" I asked, peering at Myron and Mary with a knowing smile.\n\n \"With respect, sir,\" said Myron, \"we did not hear that question.\" I just nodded and grinned. I suspect the Milton's had had help... from another Milton. Myron's father had intercepted that trace.\n\n * * * * * * * * * * * * * * * *\n\n The sun had set behind the horizon, and darkness had consumed the day as Cindy and I arrived at 'The Vision' World Headquarters. Young Tommy escorted us on the elevator to the office of its founder and great leader, Dr. P. Harvey Eckhart. I would always remember this office as the place where Cindy had learned of new family relationships, and learned them from me.\n\n \"Ah, there you are.\" said Dr. Eckhart as we got out of the elevator. \"Tommy, would you be so kind as to bring my guests something to drink.\" Tommy acknowledged the command and re-entered the elevator, the doors closing seconds later.\n\n Also in the room were Jimmy Lawson and his wife, who was holding their baby. I took a moment to admire the little guy, then sat down at Eckhart's bidding.\n\n \"You've had a busy day, I understand.\" said Eckhart.\n\n \"Yes sir.\" I said. \"And forgive me for coming straight to the point and finishing out the business.\" I turned to the Lawsons, handing Jimmy an envelope. Inside were a card and some instructions.\n\n \"Down in the Dallas-Ft. Worth area, there's a Fire Department that needs some good EMTs. There is a man down there named Terry Ruffkin. He is very eager to hire you, especially after I told him of your military medic experience. Dr. Eckhart has been kind enough to arrange transportation and lodging for you, and you'll be on your way tomorrow morning.\"\n\n \"I... don't know what to say.\" said Lawson. \"You've done so much for us, Commander, I'll never be able to repay you.\"\n\n \"There will come a time,\" I said, \"when you will have the opportunity to pay it forward. And you'll get the chance to save lives with real and good EMT service. Good luck to you.\"\n\n Lawson's wife was crying as she thanked me and Cindy, and the young redheaded EMT was also near tears as Cindy and I made our goodbyes. \n\n As we drove back, Cindy said \"My father and I heard about your 'performance' in the Courtroom. So... was he really guilty or innocent?\"\n\n \"Jury found him not guilty.\" I said. \"I think he'll do very well down in Texas, with this second chance at life, and he and his wife can raise their child and any new ones they have.\"\n\n \"Didn't answer the question, Crowbar 1.\" Cindy said, looking out the window.\n\n \"And I'm not going to.\" I said.\n\n Just then, the Police radio in the car came to life. A second later, both my Police cellphone and Cindy's began ringing. We answered.\n\n \"This is Sergeant Rudistan, sir.\" Martin Nash was telling Cindy the same thing as Rudistan said \"We've found a body in the trash dumpster behind the Cub Club. Fingerprints are telling us her name is Linda Farris...\"\n\n To be continued.\n\n So, dear readers... was Lawson guilty or innocent? What is going to happen to Tanya Perlman? Clues have been left in this and previous series.\n\n What is Paulina Patterson's family secret? And what evil will the Consultant of Crime perpetrate upon the Iron Crowbar next? The exciting conclusion to come in the next chapter..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/six-degrees-ch-04"
}