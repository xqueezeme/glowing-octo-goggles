{
    "title": "Curtis Woodman Ch. 02",
    "pages": [
        "I can never thank enough the people who help me with these stories. Thank you Hal1, you're a star. My thanks as always to those who stand behind me, so that I can take the blame. You all take time out of your lives to help me and for that I really appreciate it. To those of you about to read this, please enjoy. We did our best.\n\nPlease note. This is a story.\n\nIt came from my head and not from any history books. It is a story.\n\n*******\n\nYes, I loved my job, my friends, and as I watched those three people walk that trail, my heart missed a beat or two before I realized what had crept up on me. I chased it away; it had no place in my thoughts at the moment. The smile also took a hit as my thoughts turned to the doctor's last words to me.\n\n\"You're not getting any younger Curtis, your body was able to find its way back from this and in a way I hope you look on this as a second chance.\"\n\nI shook his hand and wished him well; he noticed I didn't answer him.\n\nYes, I love my job... But what else is out there for me...\n\n*******\n\nTo use that well-worn phrase, there I was, minding my own business. My life went from a period of mildly pleasant and totally boring, then straight to crap at a rate even I can't put a phrase too.\n\nI was on leave, visiting an old friend when he asked me if I had heard that Doug Marshal had lost his wife. Doug was my mentor, and it was on his recommendation that I took over the Unit. When he handed me the reins, I shook his hand and told him I would do my best.\n\nHe smiled and told me that I had better. He then took his wife and left. His wife was half American, on her mother's side, so they headed for one of those quiet little suburbs in the sunshine states since his doctor told him it was the only way he would live past the next five years.\n\nWhen you find out like I did, through the old boy's network, I phoned Doug and we shot the shit on the phone for a while before I asked when it was and then invited myself to the funeral. Doug blustered for a moment before I told him that someone needed to hold him up, so he didn't fall into the hole. Even though he had just finished telling me that she was being cremated, I heard him laugh for the first time in our entire twenty-minute phone call. He knew he had no choice but to cave, and even I heard the relief in his voice from Four thousand miles away, that I would be there. \n\nNo sooner had I wished my friend farewell and that we would see each other soon, I was on the phone to the airline and reserving a seat on the overnight. This was going to be a killer since I was due back from leave in four days. I asked the nice flight attendant not to wake me to see if I needed any drinks or even the meal and then pulled one of those complimentary blindfolds over my eyes and switched off. That alone took a great chunk out of the jetlag that was going to get in the way. \n\nLeaning heavily on the cab driver's knowledge of locations of hotels close to the name of the cemetery I had just given him, got me booked in and showered with still a couple of hours to spare; man wasn't I proud of myself. It was as I was walking the six blocks to the cemetery that everything turned to shit. The screech of tires and bangs of metal meeting metal rapidly followed by an exchange of gunfire told me that today was not going to have a happy ending for someone.\n\nTwo women in power suits came running around the corner. One collided with me before picking herself up, grabbing her clutch bag and running after her friend, not even stopping long enough to cuss me out or apologize. My attention was now on what was going on around the corner, more so when I stuck my head around to have a quick look.\n\nA truck had rammed into the front of what was once a real posh limo, the driver of the truck was hanging out of the cab of the truck and clearly dead. The two bodyguards that were trying desperately to protect whoever was in the remnants of the limo were outnumbered and outgunned. It became my business when one of the masked men leaned in through the Limo's shattered window and pulled out a screaming child.\n\nThe young child put up a fight, but a seven or maybe eight-year-old is no real match for a grown adult, more so when he slapped her to keep her still. Within seconds my mind had worked out who was where, and what to do about it. My jacket came off and I placed it behind a trash bin, tugged a couple of times on the sleeve until it came away from my shirt and placed it around my head to cover my nose and mouth before tying it tightly. The sunglasses went back on, and with a deep breath and thinking 'here goes nothing', I moved from my position towards the wreck of the truck.\n\nWhile the last remaining bodyguard was putting up a valiant fight, I got to the driver of the truck and wrenched his Sig from his dead hand, as well as the three mags from his top pocket. I got two of the wanna be kidnappers before they realized that the new threat was now behind them. The remaining bodyguard took the new threat as a blessing and went after the man that had dragged the little girl away.\n\nThe third of the kidnappers slowed me down and it took time I couldn't afford to finish him off. I could hear the gunfight going on further down the alleyway and knew that the bodyguard had engaged the kidnapper. Then it all went silent and that made me run just a little faster.\n\nThe bodyguard earned his pay that day. He was on his knees with his arm around the little girl as she leaned her head on his shoulder and sobbed her heart out. His life ebbed out of him while pointing his own sidearm at the now-dead kidnapper. Although he watched me approach, he knew he had nothing left in the tank.\n\n\"Thank you for your help.\" I think he knew time was against him. It was confirmed when he pulled the little girl from him and looked into her eyes. \"Becky, my sweet brave girl, this man will take you home to momma now.\"\n\nWe both knew he was a dead man; it was pure willpower that got him this far. Looking away from the little girl and towards me, he said. \"Thank you, Sir. Please take her to...\"\n\nI'd only known this guy for a few minutes, but in those minutes, he had earned my respect. Kneeling down beside him, I placed two fingers on his neck and found what I had expected. My hand then went to his face and I closed his eyes. The little girl simply stood up straight and stared at me. Deciding that I wasn't a threat to her, she turned to the bodyguard and shook his now lifeless body a couple of times and cried as she begged David to wake up.\n\nThe girl was in shock, so she offered nothing in the way of resistance when I picked her up and held her close to me. My left arm around her, holding her ever so light form close, I offered what I could in the way of physical comfort. Her cheek rested on my shoulder as I carried her towards the end of the alley and the main road.\n\nThe distance between us and the end of the alley couldn't have been more than forty yards. To me they may as well have been forty miles as I placed one foot in front of the other, my Sig pointed forward and at anything that may conceal any danger at all, another kidnapper perhaps. \n\nThe crying had stopped, we were on sniffles now. She mumbled something, but when she figured out I hadn't understood her, her head came away from my shoulder so she could look directly at me.\n\n\"David is dead, isn't he?\"\n\nA year ago, my team and I spent three months on a base in Texas. For the first few days they thought our accent kinda quaint. We thought the same and by the end of our time there, most of my team had perfected a fare to really good ability to talk with a Texas accent. It was right now I was mentally thanking those guys for their patience.\n\nAdding a slight Texas drawl to my words, I said. \"He is darling, but you're alive and you're going home to your momma.\" \n\nThe gun battle along the whole length of the alley hadn't stopped traffic and for that I was oh so grateful. I simply walked into the road and pointed the Sig at the cab that came to a screeching stop in front of me. I opened the back door and placed the little girl inside before walking to the front and leaning in to pull the drivers ID from the visor and looked at it, memorizing every detail on the card in front of me.\n\nIn my best fake Texas accent, I asked. \"Are you a family man John Barrington?\"\n\nThe driver kept his hands firmly on the wheel, he was sure sweating, and it wasn't because of the weather as he said. \"Yeah, I mean yes sir.\"\n\n\"That's good John, a family anchors a man, don't you think?\"\n\nThis time the cabdriver just nodded his head. He then watched as I dropped three hundred dollars and his ID onto his lap. \"The nearest hospital would be best John, but the nearest police station would do if you really think that's better.\"\n\nThe pause was an afterthought, he didn't look the type, but I needed to honor the bodyguards last wishes, so I said to John. \"I have faith you will do the honorable thing John. I promise you; we won't be seeing each other again if you do.\"\n\nThe little girl stared back at me, she looked so small in the back of that cab. Her hand came off her lap and I thought she was going to wave, then decided better and placed her hand back on her lap, before looking forward at the driver.\n\nThe sirens were faint but getting louder. The cab driver squeaked his tires when he pulled away and I turned and walked back into the alley. I didn't pull my face cover off until I was out of sight of anyone looking into the alley. I picked up a stray piece of cloth from the ground while walking back to my jacket and used the rag to clean the Sig and the mags I had used of any fingerprints. Then dropped the weapon next to one of the dead bodies.\n\nI made it to the funeral of my friend's wife with thirty minutes to spare. I asked a nice lady with a child in her arms if I could pay her for a couple of wet wipes. She looked at the sleeve in my hand and then she dived into her bag and came out with a safety pin as well. I offered to pay her again, but she declined, saying that I seemed to be having a worse day than her.\n\nThose wipes cover a multitude of sins. In my case, clean my hands and remove, or at least, hide the smell of gunpowder from my friend. This was his wife's and his day, and I didn't want to become a distraction in all this. Plus of course, with the aid of the safety pin and my jacket on, it actually looked like I had a whole shirt. \n\nHe thanked me for coming, and for the rest of the afternoon, I held my friend up until he could get his own legs back under him. When close friends and family made their excuses and left, I stayed and drank coffee with the man who gave me so much.\n\nI came to the Unit as his second in command, but two years later Doug resigned on health grounds and handed me the reins. I took him out that evening. We both got drunk, and so for the last five years in charge of the Unit, I've either thanked him or cursed him on an almost daily basis.\n\n\"What are you going to do now, Doug?\"\n\nMy friend just shrugged his shoulders and spoke. \"She was my life Curtis. I'm staying for now, if nothing else than to close our lives down here and move back home.\" The sigh from his lips was ever so silent. \"I can't live here anymore; the reminders would just be to many.\"\n\nHe looked at me, hoping that I understood, because I doubt he could form words right now to make things any clearer. I nodded and then told him that he was to call me when he came back. He came to the sunshine states to live a little longer. Going back to England, he knew would shorten his life, and in my heart I understood why he was doing it. He would be with friends and also get to be with his wife a lot sooner.\n\n\"When you decide what you want to do, then phone me. Remember, the regiment always looks after its own. You may have married a foreigner, but we all forgave you.\"\n\nDoug smiled and then laughed. I got a cab back to my hotel and finally fell asleep, relying on my alarm to wake me in time for the journey back home. Once packed, and my now useless shirt folded and at the bottom of my bag ready to be burned when I got home, the room phone rang to let me know my cab had arrived. Sitting in the cab to the airport, my mind did wander to the little girl, but I had done everything I could. The two bodyguards and the driver deserved the credit for keeping their charge out of the hands of those four men.\n\nThe airport was busy, so I lined up with everyone else and once again drifted into obscurity. Whilst standing in line, my idle thoughts again turned to Doug and how to help him when he returned to England.\n\nI've never been one who watched much television. I didn't even own a radio, so I knew nothing of the news stories coming from the attempted kidnapping, even less so when it happened so many miles away. To me the little girl may need therapy, and she would sure need bodyguards of the caliber that protected her that day. But with the aid of a frightened cab driver and me, she was home with her mother rather than being used as ransom material.\n\nI kept a respectful silence on what happened when I returned to barracks, I had been there for the funeral and to support a friend of mine. When I returned to duty and the rest of my team had returned from their own leave, we set about our usual training regime. \n\n*******\n\nI learned a hard lesson some months later. Never underestimate the smarts of an eight-year-old.\n\nIn keeping with my nomad existence, I don't own a home. Some years ago, I was sitting in a dentist's waiting room, reading a well thumbed through, three-year-old magazine article on the English waterways and the growing popularity of canal boats. On my next leave, I went and looked at a few, even rented one out for the weekend and found myself addicted to the lifestyle. I finally decided on one that took my fancy, and the Keyleigh Ortiz has been my home ever since.\n\nIn my mind, one of those canal boats would be ideal. If ever I fancied a change of scenery, I could just cast-off and move somewhere else. It seems, of course that when the fates had finished laughing, they reminded me that they had other plans.\n\nWhen I was having the boat serviced before taking ownership, the owner of the yard and I talked for a while, when he found that I didn't even have a mooring for my new accommodation, he suggested Gil's Boat Club, on the outskirts of town. I went and had a look that day and my boat is still there five years later.\n\n*******\n\nThis last week, I've had one nagging feeling, that I was being watched. The feeling got so intense that I even asked Freddy to tail me himself and basically see who's watching me. After two days he told me I'm being over cautious and went home to his family. Feeling that perhaps a ride along the canal may clear my thoughts got me putting my chair away and starting the engine on the boat. Within minutes I was in the middle of the canal and watching the view ahead and the countryside as it passed me by.\n\nI was just over an hour into my cruise along the canal when that nagging feeling of being watched came back to me and just wouldn't go away. Eventually I pulled to the side and moored, cut the engine and sat on the roof of my boat with a bottle of water in my hand, looking at everything with a keener interest and finding absolutely nothing. Then it came to me, the one thing missing from natures true beauty in front of me, no birds were singing their song.\n\nMy boat had been here for well over ten minutes now and yet not one bird had entertained me with a song. The whole scene remained so still and so eerily silent, constantly giving off a vibe that something was gravely wrong with this picture. I eased off of my seat on the roof and down the steps. It took a moment or two to remove the back cover from the cabinet inside my boat and pull out what I wanted. My team was at one of the government test sites a year back watching some of their newly built toys in action.\n\nWhile I was there, I was shown Eric. The man told me it was called Eric because its full name was 'Electronic, re-directional...' I held up my hand and agreed to continue to call it Eric after that. Now Eric is an inoffensive little toy, and when put together, it was only twelve by fourteen inches with a little propeller on each corner. To people like me it looked like any other drone that seems to have entered the marketplace. But Eric had a purpose, it doesn't like any other drones.\n\nI switched Eric on, and its own programming took over; there was no remote control with this toy. Eric was actually designed by a Japanese programmer who liked drones. I took a half step back and watched as Eric climbed to a height of a hundred meters and switched its own scanning device on. I was warned that it was at this point in its flight that I would either get it back, or never see Eric again. Eric would find and then attack any other drone emitting stealth or surveillance electronic waves.\n\nThe man told me that it was fast and robust; he smiled when he said that. Then explained that adding defense or attack parts to the drone would slow it down. That would mean slamming into it at speed.\n\nEric did a complete three-sixty, it then lurched to the left and shot off at an ever-accelerating rate until I heard a small crack in the distance. Some minutes later the birds started singing, although now of course, their song couldn't calm my thoughts. I had used up a valuable asset, but it gave me some answers in return.\n\nWhy was I being watched, and why all the high-tech means of doing it? I returned to the boat club, moored up and left for another day at the office, or so I thought. Being God's brother's soldiers, we got some really odd jobs. Once briefed I allowed everyone to get home and kiss the wife, children and pet rabbit goodbye before reporting for duty. \n\nThe leader of one of the Arab states had phoned God's Brother. He had become nervous about the constant movement of troops along one region of their boarder. It was not only in dispute but very fragile and prone to the population there running for cover into neighboring states at the first sign of trouble. We were sent as an early warning system, and over the course of our time on the ground, we would often have our host's troops on the ground long before any real build up could begin.\n\nThe neighbor seeing that they couldn't win this one, sent their own people back to base and peace once again resumed, at least for the foreseeable future. This one took us all away for three months, so once debriefed, I sent everyone home for a week's R&R.\n\nI was still sitting in the office doing paperwork and stamping \"classified\" on the file in front of me when my boss wandered in and sat across from me. We talked until our coffees got cold, then he kicked me out and told me to go home. So now changed into street clothes, I headed for the boat. It was late when I got there, and other than the motion sensors turning on the security lights around the club, nothing moved. \n\nI made a coffee, sat around for a while listening to music on the stereo and just deflated. The tension of these past few months soon evaporated. With my eyes finding it harder to focus, I went to bed.\n\nI was on leave, drinking coffee on the canal side while classical music softly emanated from deep within my boat when Gil's wife, Sarah, came by and handed me a sheet of paper. Sarah took on the role of administrator when they started the club, while her husband was the one getting his hands dirty. Sarah was the go-to lady if you had an admin problem. Gil was who you turned to for everything else.\n\nWhen I read it and looked at her, she smiled and said. \"We're not getting any younger, Curtis. With the various committees the people in the club have put together, the club all but runs itself now, and the new owners made us an offer neither of us wanted to refuse.\"",
        "I read the notice again, only slower this time. \"So, what's the catch Sarah?\" \n\nSarah shrugged her shoulders. I stood and offered her my seat while I sat on the edge of my boat so we could talk. \"We can't find one. Honest to God, Curtis, the company agreed to everything we asked, in return for total ownership.\"\n\nThis time she let out a little giggle and added. \"And we sure tested that theory some. Every member has guaranteed mooring rites, and the rents can't go up for another five years. Hell, Curtis the new owners even asked us to stay on for another year, minimum. With me still doing admin and Gil still getting his hands and clothes black, with an option of two more years after that.\"\n\nSarah watched me read the notice once again before she added. \"They plan to pull the old clubhouse down and build a newer and more modern one, with a bar, and men's and women's showers. They will plant trees over on that end lot and tarmac the piece of field we call a car-park; all within two years of ownership. Gil took the contract to our lawyers, the senior partners looked it over, and told us to sign.\"\n\nWith that she shrugged her shoulders and smiled.\n\n\"We signed yesterday. The new owners take over at the end of the month. So, fourteen days from now, we are just boat owners like you, with a little admin thrown in, of course.\"\n\nIt was now the third time I had finished reading this notice and still couldn't find the catch.\n\n\"So, have you met the owner, or just the representative the company sent down to make the deal?\"\n\n\"Both. Gil dealt with the paperwork along with the lawyers and I met the new owner. She's American and she had the sweetest little girl with her. Both wanted to go for a walk around the place, so I gave them the ten-cent tour; and, while we did, she was telling me what she had in mind for the club.\"\n\nSarah smiled and then added. \"Young Becky seemed to take a liking to your boat. I can't see why; it needs a damn good wash if nothing else. I suppose you're going to tell me you're busy with work again, huh?\"\n\nSarah then looked at her watch and, said she had to drag her husband to the shops, or they weren't going to eat tonight. I watched her hurry off, but that nagging feeling that I was missing something wouldn't go away either.\n\n*******\n\nShe was sitting cross legged on the path watching me as I came up onto the deck the next morning, a teddy bear held tightly to her chest. My thoughts were mixed, she had clearly recognized me just as I had her. The fear was still in her eyes, even if diminished by time. So that's what we did for the next minute or so; stared at each other. Neither one of us wanting to initiate a conversation, because neither of us were sure what to say. In the end I gave in, with the offer of an olive branch.\n\n\"That path has got to be hard on your backside, would you prefer a chair to sit on?\"\n\nShe smiled and then nodded. I did wonder if she expected me to talk to her with a Texas accent, or some posh English one. I leaned down and pulled a folding chair out from under my own seat, pulled it open and put it next to her, she got up off the ground and sat on it. By now a woman I didn't recognize came walking out of the clubhouse and towards us both. She was clearly the mother.\n\nThis woman walked with confidence in her stride. Something in me instinctively did a risk assessment of her, she wouldn't have looked out of place on a catwalk, such was the ease of every step. As those last few steps put her beside the little girl, and placing her hand on her shoulder, her fingers squeezed slightly and stayed there.\n\nShe was tall, even in the flat shoes she wore. The power suit must have cost a buck or two since it looked like it was custom made. The hips were interesting, her waist was built to hold onto, and the rest of her was any man's wet dream. Then I looked into her eyes and they told me that so many men in her circle had done what I had just done.\n\nThe pause made me think she was mentally asking me if I had finished yet, or should she wait a little longer? \n\n\"Hello Curtis, I wanted to thank you personally for rescuing my daughter, just as much as I wanted to hurt you so badly for then placing her in a cab and abandoning her.\"\n\nA little hand gently squeezed the woman's hand, and both looked at each other. \"Mom, you promised.\"\n\nThe little girl then looked at me and said. \"Curtis, can I see inside your boat?\"\n\nI shrugged and stood to one side. She took that as a yes, and with a gleeful smile, she bolted off the chair, over the side and onto the boat, with teddy still in her hand.\n\nI'm sure a bit of mischief snuck in when she came out from exploring the inside of my boat, then asked if she could walk along the top of the canal boat since she had seen others do it.\n\n\"Sure, but you take off your shoes and socks. You only walk the top in bare feet.\"\n\n\"But I have sneakers on. I've watched others walk the top in sneakers.\"\n\n\"My boat, my rules.\"\n\nShe was sure her mother's daughter when she set about negotiating.\n\n\"How about I take off my sneakers and walk the top in socks.\"\n\nI hid my smile ever so well when I said. \"Then your mother gets to pull you out of the canal once you've slipped off the roof and into it, because I will be too busy laughing at you.\"\n\nShe colored slightly, making her look even more adorable, then the smile came to her. She looked so cute when she smiled. Her sneakers and socks sat on the deck as her and teddy bear walked the full length of the top of my boat, several times. She even stopped at the front once to do her impersonation of the girl from the Titanic movie. We both heard her scream \"wheeeeee\" all the way at the back of the boat.\n\nI used the girl being at the far end of the boat to ask her mother my question. \"I need to ask how you found me?\"\n\nMother was still watching the antics of her daughter when she answered. \"I spent a lot of dollars looking for you and every investigation agency that took up the challenge came back empty handed.\"\n\nHer head tilted towards her daughter. \"Believe it or not Curtis, she found you.\"\n\nWe both heard the silence just then, when we both turned to look, the little girl was standing about half-way down my boat watching what was going on between us.\n\n\"Becky honey, can you come here for a moment, please.\"\n\nShe sure walked like a condemned man the rest of the way.\n\n\"Show him your arm, please, sweetie.\"\n\nThe little girl lifted her right arm and pulled the sleeve to her cardigan back, revealing the name of my boat on the inside of her arm. The design was almost a carbon copy of the one on my own arm. When I looked at Becky she started to tear up.\n\nI had to hope my smile calmed her down before I added. \"It's okay honey, you did no wrong.\"\n\nThe weak smile in return didn't fool anyone. Becky pulled her sleeve back down and started to walk the boat again. Another boat from the club passed us, and the two women on the top that were sunbathing, waved at the little girl on the roof of my boat. She frantically waved back, like she's known them since forever.\n\n\"My daughter is right hand dominant Curtis, and yet, her drawing on her arm is identical to the tattoo you have on your right arm. Every time I wash it off in the evening before she goes to bed, it's back by the next evening.\"\n\nThe woman moved and sat on the chair vacated by her daughter. \"Her therapist said it was a triggered memory. It wasn't much, but at least now I had a thread, and the agency I paid to find you, finally had a lead.\"\n\nSomething didn't sit right with her statement, so I watched Becky just a little closer. Then tested my theory when I picked up a small bottle of water and waited for the little one to have teddy-bear in her right hand, before I called her name and gently tossed the water bottle over to her, telling her she needed to drink more.\n\nBecky instinctively plucked it out of the air with her left hand, thanked me and turned towards the front of the boat her drink in her hand.\n\nWe looked at each other before I said. \"You may want to think that through and go with ambidextrous Ma'am.\"\n\nShe too watched Becky walk to the end of the boat, her mouth open but saying very little, just watching the child you've lived with for over eight years and now realizing your information is slightly wrong. It must be hell when your proved wrong about your child.\n\nShe leaned on her thighs and said. \"You're a ghost Curtis. The agency I had paid a damn fortune to find you, had no sooner found you than they closed my account with them and said they had no wish to investigate this case any further.\"\n\nThe agency collected their fee and gave her the address of the boat club before finding themselves too busy to continue the investigation. When she told me that she had been given that news, my mind instantly connected the dots. I now knew who the owner of the drone belonged to. These people clearly knew it was a mistake getting involved when Eric busted up their drone.\n\nThe voice of the little girl came from the middle of my boat. \"Curtis, can we go for a ride in your boat, please?\"\n\nI couldn't see the point in refusing, but I made it a point that mother joined daughter for the boat ride. The look the little girl gave her mother would have melted the heart of a dead man. We cast off a few minutes later and Becky was now sitting cross legged on the top of the boat, waving at other passing boats as though she owned this one.\n\nAfter ten minutes of mother sitting next to me and casting the odd sideways glance, I'd had enough. My hand came out and I said. \"Curtis, how do you do.\"\n\nShe wore the panicked look rather well I thought when she realized that I still didn't know her name. We shook on it as she apologized and said. \"I'm so sorry, Ruth Forbes-Hamilton.\"\n\nThe bulb came on even quicker than I imagined. \"As in THE Forbes-Hamiltons?\"\n\nShe was also quicker this time\" Yep those Forbes-Hamiltons.\"\n\nShe clearly didn't want me to comment, so I didn't. It showed us that little ears were still listening in when the munchkin on my boat's roof turned her head to look at me and said. \"Mommy says we're filthy rich, but when I get dirty momma always says I gotta have a shower.\"\n\nBecky went back to waving at other boats passing us going the other way, or people walking or cycling along the footpath. She didn't notice the shocked look and then smile from her own mother when daughter tried so hard to be involved in adult conversations.\n\nI pointed down into the cabin and said. \"There is sunscreen in the medical cabinet, I suggest you two lather up. On a boat, if the sun doesn't get you from above, it bounces off the water and gets you from below.\"\n\nFor the next twenty minutes I had my best poker face on when I watched mother sunscreen daughter and herself, then my thoughts came to a screeching halt and I slammed that door shut so hard I'm sure they both heard it close.\n\nBut the offending thought had snuck out and was having a field day. Given the scene in front of me, we actually looked like a family.\n\n******* \n\n\"If either of you are hungry, I can maybe rustle something up that won't give either of you food poisoning, or the safer bet is the pub coming up in a few minutes. It's well used so we will have to tie-up and walk a little. The choices are yours.\"\n\nThe talk between them concluded that pub food was safer, so we tied-up at the end of the line of canal boats already here and walked the footpath. A few of the boats sold goods, so Ruth bought a couple of pairs of sunglasses for them both, another bottle of sunscreen, and a baseball cap apiece.\n\nThe food was quickly eaten by them both, and rapidly chased down by fizzy drinks that required a burp from the munchkin, and although she tried to hold it back, her mother followed suit a minute or so later.\n\nIt was plain as day the love they had for each other, it seemed to ooze from every pore in their bodies. Becky was walking ahead of us both when I initiated the conversation. I told Ruth why I was in the area that day, and that with the threat to her daughter taken care of between the late bodyguards and I, I still needed to go to the funeral for my friend's wife.\n\n\"I'm not asking you to put yourself in my shoes Ruth, but you have got to understand, my friend was the reason I was there in the first place. Any delay in getting to the funeral or not getting there at all because I'm now sitting at a police station somewhere, would have destroyed him. I got your daughter out of the line of fire and back into your arms and I made sure I scared the hell out of a cab-driver to do it.\"\n\nMunchkin was now skipping the last few yards to the boat and it made me add. \"I can't take back what I did, and even as we talk, I know I wouldn't have done anything different. She's safe and in your arms, please don't hate me for what I needed to do to make two people happy that day, and all within a country that wasn't my own, I might add.\" \n\nIf she had an answer to my statement, I didn't hear it. I held out my hand, she grasped it and she got onto my boat. A few moments later we were heading for the turnaround point and back to the boat club. Becky had once again pulled her trainers and socks off and climbed back onto the roof, hugging teddy and of course waving and smiling at everyone who waved at her.\n\nThey both left me with a thank-you for the day trip. Telling them they were both welcome was easy but watching them walk hand in hand back to the boat club left me feeling just a little, lost. A man in a suit appeared from the driver's side of the car and walked by her side, right up to the car that carried them both out of the gates of the boat club. It was then that that little voice in my head told me I needed a holiday and right now.\n\nSadly, even that thought was put on hold, my boss called me, and I returned to base to cover for him for a week while he had his own family emergency. It was hard to think of my boss as a family man, he was my boss first and foremost. His wife knew he was career army, and for the last fifteen years ran the household. On the occasions I was invited to burn meat with them I had come to see them as the ideal family, and when my boss shed that skin of authority we call a uniform, the man peaks out. One day perhaps I would someday strive to emulate him.\n\nTheir eldest boy was knocked off his bicycle, and the boss rushed to the hospital to be with them all. He was gone for almost a week before he walked back into his office and told me to get out. The swelling on his son's brain was now going down and he woke up late last night wanting something to eat. Typical boy I suppose. I spent the next couple of hours making plans for my own holiday, and once changed into civilian clothes, I made it to the airport with enough time to chill out before my flight was being called. \n\n*******\n\nIt was the dwindling end of the tourist season in Malta. I was on my second day here and already formed a routine; breakfast at the hotel and then walk along the public part of the bay that looked over towards the docks. One of those big old cruise ships had docked sometime in the early hours of the morning and the coaches standing in line to take the tourists on to see the sights were slowly filling up.\n\nI watched in mild amusement for a few minutes and then turned to walk further along the street. Then a tiny hand slid into mine, making me stop rather abruptly. She didn't care, she just kept right on smiling.\n\nThe voice from behind also startled me. \"I must say, we have got to stop meeting like this.\"\n\nBy now Ruth had come alongside me. My mind quickly filled with just one question, the soldier in me had to put the protector of this little girl to one side so I could ask it as well.\n\n\"Why are you following me?\"\n\nThe pause was only so they could both draw breath; it was then it felt like they laughed at me in stereo.\n\nRuth then grabbed my arm and held on tight, her head connected with my upper arm for a moment before she said. \"Man, don't you have an over inflated opinion of yourself.\"\n\nShe turned us and we all started to walk towards the town. After a pause she said. \"With Becky's kidnapping, I realized that we both needed time away from familiar places, plus some places that held too many reminders, so I promised her a treat.\" \n\nThe treat it seems was a cruise around Europe. While they were packing for the cruise she got a call that I had come back, so they made a minor detour. Since their boat for the cruise was leaving from Southampton Docks in England, they just got an earlier flight. Ruth then closed in on me and said in a conspiratorial tone that Becky had only just let the wheels of the Limo stop before she was out of the car and running up the footpath to my boat.\n\nThey both knew where my boat was since they had visited twice already to talk to the owners and perhaps gain a better look at the owner of the Keyleigh Ortiz.\n\n\"The very first time we turned up at the club, Sarah knew something was up when Becky and I wanted to walk the club grounds before we signed. When Becky spotted your boat moored up, she let out a very unladylike yelp and happy danced all the way to the boat.\"\n\nThis time Ruth sighed before continuing. \"Don't get me wrong Curtis, we both fell in love with the people and the club from the very first time we went there. It was another reason I added the condition of Sarah and Gil staying on rather than put my own people in there. They dote on Becky, and even I must admit that in the short time I've known them, I class them as my friends. Sarah is one of a few people to actually have my personal cell number.\"\n\nSarah was awake when I returned to the boat club in the early hours and had phoned Ruth instantly. They changed planes and got to the boat club an hour before I opened the door and spotted Becky sitting on the footpath staring at me. After our day out together, they really needed to get going or they would miss the boarding time for the cruise ship. \n\n\"So, you see mister, you're actually following us around.\"\n\n\"Momma, where are we going?\"\n\nWe both looked at Becky, and then at each other.\n\n\"Well Curtis? Where are you taking us since you're now our guide here.\"\n\nI shrugged my shoulders and both girls decided to have a giggle fit. Since we were this close, I took them on a sight-seeing boat tour of the harbor, it took all of five minutes for Becky to sit on my lap, when we got on the boat. Ruth smirked but said nothing as she listened to the woman in charge of commentary as she took the boat's tourists through the troubled history of the buildings around the harbor.\n\nWe then took a cab inland to the deserted world war two airfield, that was once British and now decommissioned, the locals converted the huts into small workshops. Some years later they also erected a building to display the history of the grounds, the airfield, and the people who defended it as the Germans tried so hard to bomb Malta into submission. Ruth had a field day with the hand-made jewelry on display. \n\nWe then got the cab to stop at the caves and as we all had drinks and ice cream. I explained that during the war, the population would seek shelter in the caves when their homes were nothing more than rubble, often sitting next to ammunition boxes and barrels of oil as the Germans bombed the towns and harbor around the caves.\n\n\"How do you know so much about this place?\"\n\n\"I'm English, Malta has a history with our country that I can relate too. At one stage in my life, I actually contemplated moving here permanently.\"\n\nHer brow creased as she thought about how vague my answer was.\n\n\"So why didn't you?\"\n\nAll I could do was once again shrug my shoulders. That decision was taken off the table when I was offered full command of the Unit. This island will always be a place I come to recharge my batteries; but, until my life with the Unit comes to its conclusion, moving here permanently has to remain just a dream, for now at least.",
        "\"My job keeps me in England, for now.\"\n\nSince I was looking out at the view, I didn't see her stare at me. If I had, it would have forewarned me of what was coming.\n\n\"So, what is your job. What exactly do you do Curtis?\"\n\nMy standard answer to civilians came to my lips; and, turning to look directly at Ruth showed me she expected an answer, perhaps just not the one she was getting.\n\n\"I'm a security consultant.\"\n\nShe tried but she couldn't hide her anger fast enough, her eyes told on her. Ruth's emotions were all over the place.\n\nShe looked at Becky who was sleeping in my arms.\n\n\"I asked for a copy of the alley incident, twisting an arm or two got it to me three days later. I gave it to my head of security, and he took it away with him. He called me to his office later that afternoon and he went through the report a page at a time. He was a captain in the Marine Corps, Curtis, so you can imagine what I'm going to say next can't you.\"\n\nI'm not sure who would ever win this game of poker between us, but it was Ruth who just wouldn't let go.\n\n\"He told me you're not only a soldier, but also, A: still active and B: special forces. He went through the locations of each shell casing of the gun you took from the driver and where each of the bullets ended up. Heart and head Curtis. It also explained why you covered your face and continued to wear sunglasses.\"\n\nRuth clearly wanted to say more. She also seemed to forget that I'm not married to her, so I didn't have to listen. We got a cab back to the docks where the coaches were unloading the tourists because departure would be in a couple of hours. I handed a sleeping Becky to her mother who held her close and thanked me, before taking a step back.\n\n\"This is the most she has slept since the alley incident, because she knows she's in the arms of the man who looked after her.\" She wanted to say more and yet something was holding her back.\n\nHer inner anger won out in the end when she said. \"Sarah and I talked about you once. To them you're the son they never had. She told me she's seen you without a shirt once and that your body is all busted up.\"\n\nIt looked like she wanted to stop right there, but the turmoil within her just got too much. \"You saved my baby and for that I will be forever grateful.\" Her face hardened just then and the love of a mother for her child said. \"But I can't get involved with you, your damaged goods Curtis, and I can't risk you exploding and hurting my baby.\"\n\nTaking a step back was easy, walking away from those two, the hardest thing ever. She had her own opinion, plus of course she was always free to express it, and in her mind, she was right. As for me, it was also time to return home.\n\n*******\n\nOn the flight back I closed my eyes to stop the guy next to me from talking. The smell of alcohol was strong enough to warrant a breathalyzer if the police caught him driving. Great, now I've got to put up with a drunk sitting next to me on the journey home.\n\nThe nice flight attendant tried to talk to him, but he just said that he would only listen to her if she had a bottle of bourbon in her hand and was free to party. I had already figured out his height and weight, the rest was merely timing, which was almost immediate. Since they were just about ready to join the que for take-off, all eyes were on other things like stowing away last-minute luggage and checking seat belts. That's when my elbow connected at just the right angle.\n\nHe let out a slow moan that could barely be heard; I helped sleeping boy rest his weary head against the back of his seat. By the time that the plane was at cruising altitude, we were both asleep. Mind you, the mood I was in, if anyone referenced us that we look like bookends, I may have had to really hurt someone. I woke about half an hour before landing, and sleeping boy was awake but behaving himself. He was really quick to buckle up when the sign came on as well. \n\nThe pretty flight attendant was by the door thanking everyone. When I got level with her, she took a step forwards, placed her hands on my shoulders, and then leaned in and kissed my cheek. I didn't remember this being in the welcome or even the good-bye pack. Then with a great big smile, she thanked me. When I used my very best confused look she just winked, and when her hands left my shoulders, she took that step back again. It seems I did have a witness to my indiscretion.\n\nIf my holiday didn't suck so bad already, it was totally in the shitter by the time I got back in England. When I turned my cell on, there was already a message from Sarah as well as my boss; my boss won out. It seems that God's brother had taken it upon himself to act as an intermediary between two of the commonwealth countries. He was flying down there at the end of the week.\n\nHis usual security team was, of course surrounding him. The Unit got there ahead of him and we 'tourists' watched his plane land, we then wandered around looking at everything. My orders were simple; a classic hide and seek operation for us. Hide in case it all went south and the security people were overwhelmed, and then seek out God's brother and get him the hell out of Dodge, preferably, NOT in front of television cameras.\n\nTheir seemed to be a lot of posturing and chest thumping going on with all three of the leaders, but after the second day, things calmed down. Then towards noon of the fourth day, bits of paper were signed in front of the world's press and God's brother got on a plane three hours later. Me and my 'tourists' took the scenic route to the border and left via a boat waiting for us in the neighboring country. We arrived back home two days later with God's brother all over the news channels telling the world what wonderful people the commonwealth was made of. Yep, you have just got to love a politician.\n\n*******\n\nSince we are such a small group and seem to be invisible to everyone, we don't actually own any turf; no barracks any of us get to call home anyway. So, for practicalities sake, we sort of hived off a section of barracks and made it ours. It was close enough to London in preparation of a worst-case scenario, but also far enough away that bureaucratic eyes don't look far enough to find us. \n\nWhich is fine for us. Then regiments get rotated and move out, just as another bunch move in, and find us sitting there. Admin officers wander up and scratch their heads. The smart ones talk and don't shout. Most of the time we work on the basis of, 'we won't bother you if you don't bother us.'\n\nBut on a few occasions my own boss had to come down and have a chat with the regiment's commanding officer. Of course, once that happens, we're treated like lepers, which we've learned to live with. It just seems a shame since we're all supposed to be on the same side.\n\nI heard knocking on my open door. I was about to bitch at the person actually knocking on an open door, when luckily for me, I looked up first. Colonel Franklyn was a tall man and one of those officers that every single one of his troops respected. When they did a forced march around the periphery of the camp's grounds, for instance, you would always see him at the front, and carrying just as much as each of his troops.\n\nThen of course, his Regimental-Sergeant-Major was always just a few paces behind him. Now, he too stood in the corridor, blocking anyone but his boss from entering my office. Out of respect for his rank. I stood and saluted Colonel Franklyn. Even my first observations of this moment showed me he really did not want to be here.\n\n\"May I come in?\"\n\nStill caught off balance by this moment, it took a second to regroup and wave him in and offer him a chair. The Sergeant-Major closed the door, leaving us alone inside. It was not until he sat that I saw the file he had had in his hand land, on the desk. It was face-down so I couldn't glean anything from it until he was ready to tell me.\n\n\"I suspect my being here will start the rumor mill. I would ask that you use the same reason I intend to use, and that is that I'm chewing you a new one for your people leaving their vehicles at the wrong end of the motor pool again.\" \n\nOur eyes locked for a moment. That was probably the most he had willingly said to me in the almost three years his regiment had been at this camp. Still unsure where this was leading and really happy I had my boss on speed dial, I slowly nodded my head.\n\nI watched and waited until he leaned over and pushed the folder towards me. By his manner I could tell he still didn't want me to touch it yet. Hell, this was his show, so I let him run with it.\n\n\"Major Woodman, I have a soldier I can't place. She's put the time in and is next in line for Regimental-Sergeant-Major. RSM Johnson has only held that post just shy of two years. He's one of the best I've worked with, and I want to keep him; however, I don't want to lose her either, but I may have no choice. Today she put in a request for a transfer to your people.\" \n\nI was already shaking my head. \"I'm sorry Sir, but my unit has a numbers limit, that and we don't take requests for transfer. When we want people, we go out and find them ourselves.\"\n\nThis time he stood; I was a fraction of a second behind him.\n\n\"Well General Brownlow and I would like you to at least read her personnel file, as a favor.\"\n\nI don't think he saw me salute him as he and the RSM left the building. The file continued to sit on my desk while I just stared at it. Freddy came in and asked if I was okay. My first response would have been in the negative; however, I now have a General and a Colonel peering over my shoulder.\n\n\"It's times like this Freddy that remind me why I hate politics. Find JoJo, and I will need you both at the boat later this evening.\"\n\n\"Any clue's, cos you know JoJo's going to ask me why?\"\n\nMy stare finally left the still untouched folder on my desk. He started to fidget and wondered if he really had spoken out of turn.\n\n\"Just remind her, like I'm going to remind you. That I'm the boss.\"\n\n*******\n\nThis would be close to three months since I left the boat; I've lived in rooms at the officer's mess since I got back from Malta. At first it was easier for me since we had our trip to contend with, then I just stayed at the mess because I didn't want to go to my boat. Sarah would text me from time to time in the form of an official looking memo telling me what the new owners were doing to and for the club.\n\nEvery time I got one of those, it felt like another reason why I didn't want to go to the boat. I just didn't want the drama. Except, I'm now standing in front of the Ortiz and it didn't even have any dirt on it. The windows shined and everything was tied up and stowed away. I was still looking at my boat; not even sure I should go near it when Sarah came up behind me.\n\n\"If you had bothered to answer my texts and phone calls, then you wouldn't be all that shocked at the condition of your boat.\"\n\nI let my eyes wander one more time before I turned to her and asked. \"Okay, I give in. What's going on here?\"\n\n\"Every morning she's here, Becky comes over, puts on a life jacket and cleans your boat from pointy end to blunt end.\" She saw me smile because I had used that same term the first time I talked to people from the club about canal boats. \"She wanted to clean the inside but that wasn't happening. As per our agreement, I'm the only one with a key, and the only one allowed to enter without you being present.\"\n\nHer smile faltered, and a sadness crept in when I said. \"I would prefer it if you kept both the Forbes-Hamilton women away from my boat.\"\n\n\"Can't do that Curtis, they own the boat club remember?\"\n\nMy answer was unrehearsed, but the venom in my voice was just as undisguised. \"Then consider today as the start of my sixty-day notice.\"\n\nSarah went white and a part of me felt ashamed that I chose her to lash out at. She looked ready to cry when I held out my hand and waited. Her own hand went into her pocket and came out with a key I recognized. We both had so much we wanted to say; pride is very much the enemy of any friendship, that was for sure.\n\nI tossed my bag into my boat and started the engine. Freddy and JoJo turned up a few minutes later. I cast off soon after they were aboard, and they sat downstairs reading the file while I found us a quiet spot. I tied up but sat on the roof for a moment, finally smiling when the birds gave us their song. I still gave it one more good long look around before I got off the roof and went below to join my friends.\n\nJoJo thrust a coffee in my hand as I came down the stairs. She leaned her ass against the kitchen top and glanced out the window and down the footpath from time to time while I sat on the chair she had clearly just vacated. I went into as much detail as I could remember about the meeting, also reminding them both that I had yet to read the file myself.\n\nThe sudden movement from JoJo stopped all conversation. She even instinctively reached into her jacket before looking at me. \"We've got company; two males, early to mid-twenties and look like they can handle themselves, following some girl. Ten-ish and blonde, looks like she's crying.\"\n\nI got out of the door and was looking at her when she practically jumped off of her bicycle, ran the last few yards to my boat, and then launched herself at me as her crying only seemed to increase. The two 'gentlemen' were not impressed that I had their charge wrapped so tightly around me. Freddy and JoJo still knew nothing about the situation but winged it anyway when they came out of the boat and stood between me and them.\n\n\"Ma'am, Sir. You need to get out of the way. The young lady is in our care and we need to take her back to her momma.\"\n\nJoJo simply stared at the one in front of her for a moment and then smiled at him. That's when even I took a step back, then another when she said. \"Are you married, have children, do you even want children?\"\n\nThe bodyguard wasn't sure what way this conversation was going, not to mention that I still hadn't surrendered the little girl back to him. Freddy continued to watch the other guy while JoJo took her new friend to pieces in five moves, and that was only because he managed to block the first two. He was still rolling around on the ground with his hands between his legs when Ruth came up the path. She spoke to the other guy in Italian for a few minutes and then looked at me.\n\n\"Bring her back by eight this evening.\" She paused and watched the wounded bodyguard get up off the ground, then turned back to look directly at me once again \"You've proved me right already Curtis. Your sixty-day notice is acceptable.\"\n\nWith that, Ruth turned and walked down the footpath, both bodyguards following her, although one of them walked a little slower than the others. I still had a sobbing child in my arms, so all of us went back to the boat and inside. Freddy quickly put the file back together and placed it in one of the cupboards out of sight, while JoJo set about calming a crying eight-year-old.\n\n\"Are you Curtis's friends?\"\n\nJoJo smiled and shook her head. \"Sorta sweetie, we are friends but, he's my boss.\"\n\nBecky stiffened and the crying stopped. \"I'm not sweetie, my name is Becky.\" Then she looked up at me, shrugged and then looked back at JoJo before saying, \"But Curtis calls me munchkin. I still don't know if I like that name yet, so until I decide, I will let him keep calling me that.\"\n\nFreddy decided to look real busy so he could hide his smile, and I pulled a drink out of the fridge and handed it to Becky. She thanked us as she drank from it. When Becky asked if we could all go for a ride in the boat, I figured why not. So I started the engine while Freddy released the ropes, and we were off.\n\nBossy Becky took over after that when she insisted that her new friend JoJo was to walk the roof with her and that she must take off her shoes and socks first.\n\nBecky's face became really serious when she said. \"Curtis says it's the rules and if you refuse and fall in, I'm not going to pull you out.\"\n\nFreddy had to dive back into the cabin so he could laugh. My stomach muscles ached for hours later that evening. We stopped at the riverside pub. Everyone got fed and entertained by an eight-year-old, and we had her back in her mother's arms by seven thirty.\n\nMy intention was to tie my boat up and go back to the officer's mess at camp, JoJo refused to leave her seat at the table until I sat down. She had obviously talked to Freddy about what she planned, because he sat by the door watching the night's activities of music and dance coming from the clubhouse.\n\n\"Boss. When did you go to America? The lady told her bodyguards that you were the one that saved Becky from the kidnapping. The one I put on the floor was the brother of one of those that died out there. When did this happen and why am I listening to it from one of the richest women in America?\"\n\nI stared at JoJo. \"Let me guess, the Italian thing between them?\"\n\nShe nodded. \"Yes, and you're also stalling.\"\n\n*******\n\nThis was new territory for me. I explained my visiting friends on our leave and that the once-leader of my team's wife had died. Then I explained the unplanned visit to the states and of course the kidnapping attempt and the death of the bodyguards trying so hard to keep Becky out of the hands of people planning to make money off the back of stealing her from her mother.\n\nI then rolled up my sleeve and told them both that with the sleeve around my face and acting as a disguise, along with my sunglasses of course. Becky got to see the tattoo and every detail lodged themselves into the memory of an eight-year-old.\n\n\"Despite everything I did to hide myself, my giveaway was my arm. Ruth then gave that information to her private investigators and the rest, as they say, is history.\"\n\nFreddy's eyes went wide then. \"So there actually were people out there watching you?\"\n\nI nodded my head, and to ease his guilt, I told how electronic they were with their snooping.\n\nI locked up the boat soon after that. Our meeting about the file had been placed on hold for the evening, admittedly it couldn't be helped, but this file still needed addressing. All three of us were seated in my office with the door closed at ten the next morning, going over everything, and most importantly, why us.\n\nIt was JoJo that spotted it first and said. \"Boss, I think she's lying.\"\n\nShe handed me the sheet of paper in her hand.\n\n\"Her regiment arrived here mid-June. According to this, three months later she started applying for all the courses that would make her resume look good if you were reading it. Hand to hand combat courses, sniper school, advanced infantry courses, survival courses. As soon as she came off one course, she applied for another. I still don't know how she managed to even get all these courses considering the rank she carries, but she did. This wasn't to get the RSM's job. She wants out and she wants in with us.\"\n\nI pulled out the small picture of her that was clipped to the inside of the folder and handed it to Freddy.\n\n\"Take that and show the boys, ask them if they have seen or talked to her.\"\n\nFreddy nodded and left the room, JoJo still sat in her seat.\n\nI wasn't sure why until she said. \"She's cute.\"\n\n\"All eight-year-olds are.\"\n\n\"I meant the mother.\"\n\nOur eyes locked and neither of us were budging on this.\n\n\"This is my private life, and you need to take a real big step back from it JoJo.\"\n\n\"Can't do that boss. This is the Unit, we all know every name of every family member and, I might add, we all know every birthday in it. Us girls go shopping together and we all know that we are part of the family that has 'Unit' as our combined last name. 'When one falls, we all pick them up'. You instilled that into those in uniform, and the wives and girlfriends stole that from you, and included it in our lives. ",
        "She got up before I asked her to leave.\n\nFreddy came back an hour later with a grim look one his face. \"Every one of them boss. They even know her by her first name, that's how often she talks to them. She was even smart about that as well. Seems to me, she kept away from you and me until she could get all her ducks in a row on this.\"\n\nI nodded and thanked Freddy and he left. I picked up my phone and called my boss. \"We may have a problem.\"\n\n\"I already know. I'm at Chequers, get here as soon as you can, we will wait for you.\"\n\nI left a note for Freddy and got changed. Since the Prime Minister was to be in attendance, then protocol meant I had to wear dress uniform. I hopped into my car, taking this damn file with me.\n\nThis would rank as one of the quickest times I ever got through security in this place. They were all ready to ambush me when I was shown into the library. General Brownlow sat one side of the prime minister and my boss the other. I was allowed to sit on a chair facing them, my thoughts already turning towards how to word my resignation from both the Unit and Army.\n\nThe Prime Minister waved his hand in front of him and said. \"You asked for this meeting Curtis, so you have the floor.\"\n\n\"With all due respect Sir, I did not. I wished to speak to my boss concerning a matter that should never concern you.\"\n\n\"Everything concerns me Curtis, the file you have in your hand being one of them.\"\n\n\"Again, No Sir. Our remit is to keep you alive and out of harm's way; also, to get you out of harm's way if required. Selection of personnel does not fall into that category.\"\n\n\"It does when it concerns Warrant Officer Ashley Conner.\"\n\nI stopped talking, something glaringly obvious was missing from this file that JoJo, Freddy and I should have found. Looking at my boss gave me no clue, so I asked the question I had no business to ask. Hell, I had already mentally worded my resignation, I had nothing to lose.\n\n\"She clearly means something to one of you and I'm guessing it's you Prime Minister. Her putting in a transfer request has pulled you all up short hasn't it?\"\n\nHe moved in his chair, looked at both men beside him and slowly let out a sigh.\n\n\"Don't let her last name fool you Curtis. You won't ever be able to, but if you did manage to delve back far enough you will find her family is distantly related to the Queen. The thing is Curtis, she is the last of her line since her younger brother died in a car accident four years ago. If she dies without child, then a family name that was a power broker in the time of the magna carta will die with her.\n\nMy first thought was to get up and leave. Until I reminded myself that politicians have been doing something like this for years.\n\n\"With all due respect Sir, she's picked the wrong outfit to stay out of trouble with if she joins us.\"\n\nFUCK FUCK FUCK. That came out wrong and he's going to take advantage of it.\n\nHe smirked; he knew he had me.\n\n\"You lied to Colonel Franklyn, when you told him you have a numbers limit on your unit. You also stretched the truth about not taking transfers.\"\n\nI believe this very moment in time was called 'put up or shut up' in the eyes of God's Brother.\n\nThis time I did what I should have done a minute ago, I took a moment and processed my options, few that they were.\n\nIn the end I turned to General Brownlow. \"Sir, I want to personally see Warrant Officer Ashley Conner alone, then with the Unit. I will then come to you with my decision, but it has to be my decision Sir. If you wish me removed from the Unit after that meeting, then so be it.\"\n\nI had just placed my career and living on the line, and to be honest, the way I had been railroaded so far, I couldn't give a shit. \n\nAfter a pause he nodded his head and I stood and saluted them all. \n\nThen pushed my luck when I said to the General. \"Sir, if she gets as far as me coming back here and taking her on, I would like to ask that she gets tested before we get another job. Clear the Norfolk Training area and place an infantry regiment on it for an escape and evasion exercise between us and them.\"\n\nMy boss walked me out of the meeting. \"I'm sorry I let you walk into that.\"\n\nI just nodded, turned and left him standing there. The mood I was in at the moment, if anything came out of my mouth it would have got me court martialed. \n\nI clearly had a lot on my mind and drove back on autopilot. Because I hadn't realized it until the gates were opening, but I had driven from Chequers to the boat club rather than to the officer's mess. I've never come here in uniform before, so I pulled my car as close to my boat as possible and went in to change, leaving the door open to air the place.\n\nI sensed the boat tilt slightly before I heard. \"What the fuck.\"\n\nI stopped, my hand still placing my jacket on a hanger.\n\n\"I believe it's polite to knock before entering Ruth.\"\n\nThat statement went straight over her head when she asked. \"Army?\"\n\nThis time I turned to look at her.\n\n\"I believe I have fifty-eight days left before I'm out of your hair. I can't make them go any faster and I have yet to even look for another boat club so let's at least be civil around each other until then shall we?\"\n\nShe ignored me, walked past me with my jacket still in my hand and filled the kettle up, then opened a couple of doors before finding the cups and set about making us both coffee. I only watched that much before I went back to getting changed into civvies.\n\n\"She's cute.\"\n\nWhen I turned to look at her, she had the file in her hand and the picture of Ashley Conner in the other.\n\n\"Military law does state that I should actually kill you now, for opening something that has nothing to do with you.\"\n\nHer smile just kept right on growing across her face.\n\n\"Well Curtis, just so you know, I've willed my fortune to my daughter and I've willed my daughter to you to take care of in the event of my death. So be careful with your threats because you so won't want her when she hits puberty.\"\n\nShrugging my shoulders as I also held out my hand for the file, this was work and none of her business, so I said. \"I'm sure I would have sold her into slavery by then anyway.\"\n\nRuth was still laughing as she placed my cup of coffee on the table. She cast another glance at my uniform as I walked into my bedroom with it. When I came out, she was sitting at the table, her hands surrounding her cup.\n\n\"Curtis, I want to apologize for my behavior.\"\n\n\"Why?\"\n\nAt my question she paused, trying ever so hard to find the right words.\n\n\"Because you're not my equal Curtis.\"\n\nI just stared at her, resisting the urge to toss her skinny arse onto the footpath. It still took me a moment to pull back from some very dark thoughts and hear her out, only then did my anger turn to total confusion.\n\n\"God, I know that came out wrong. I listened in awe as you explained the history of Malta to us. Hell, I lived in Manhattan for five years once, and knew only two places that I would eat at there. I was on nodding terms with my neighbor, yet I didn't even know her first or last name.\"\n\nRuth struggled with her words, something that seemed unfamiliar territory to her. One minute she's explaining how she runs a multi-million-dollar business, yet her only real friend is her sister, and as Becky grows up, her own child takes on that precarious mantle. \n\n\"You've lived your life and have the scars, both emotional and physical to prove it. I've lived my life, and my parents paid off the people I've hurt in mine as I grew up and I didn't know anything different.\"\n\nShe paused to take a sip of her coffee, paused again, and then downed the whole thing in one go before placing her cup back on the table.\n\n\"She comes alive around you Curtis. Becky hasn't been like that ever since the attempted kidnapping. I was on the verge of asking her if she felt it was my fault once? But I'm terrified of doing that in case she says, yes.\n\n\"You did, voluntarily, what I pay people to do, and that is, take care of my daughter. Because you kept her safe, you also kept me safe Curtis. I freely admit that I just didn't know people like you existed.\"\n\nHer eyes searched mine and refused to back down. \"I admit that I've never met a man like you and that scares me. Truth is, and although my behavior of late doesn't reflect it, I like you Curtis. God knows my daughter has already told me that once the new clubhouse is finished and the apartment above it is secure, she wants to stay at the boat club so she can spend more time with you.\"\n\nRuth went a cute shade of pink, her eyes sought out and found her fingers grasping her empty cup for comfort. The 'I can't get involved with you; your damaged goods' comment was a defense mechanism for her. The pulling in a deep breath and admitting that she threw that out there because her feelings were all over the place, showed me that she was just as damaged as me, only I carried mine on the outside.\n\n\"I've found a man I like; even Becky has given me a thumbs up on you compared to some of the men I've walked into our apartment with. Truth is Curtis, I just don't know what to do. I've never chased a man before, they're always busy chasing me.\"\n\nPulling air into her lungs was a forewarning that I may not like what comes next.\n\n\"I'm an alcoholic Curtis. I've been sober for nine years and one month.\" She looked at me challenging me to do the math. \"Becky may drive many to drink, but every day I look at her and hold her close to me, because every day she keeps me sober.\" \n\nRuth stared at her hands for a moment, took a breath and stood up.\n\n\"I'm human Curtis, that means that in my personal life, I get as much wrong as anybody else.\" She seemed to shrug her shoulders and a small smile came to her as her honestly peaked out for just a moment. \"Perhaps with my background I get more wrong than others.\"\n\nPlacing her cup in the sink, she walked to the door of the boat and paused before looking back at me still sitting at the table.\n\n\"I lost two good men that day in the alley. But they both put their lives on the line to protect my baby. I know you do something similar with your day job, but I can only go on what you did to protect Becky. Please Curtis, accept my apologies for my behavior, please stay, I can't get you to like me if you leave.\"\n\n\"Three men.\" I corrected her.\n\nA sadness came to her as she was made to relive those few days.\n\n\"No, two men. The driver was being paid by the kidnappers to drive the limo into the alley. David figured it out too late and shot him before taking on the rest.\" The sigh could be heard from where I was sitting. \"The Police report only tells so much; my security chief figured out the rest.\"\n\nI listened to her as she walked down the path, finally that became impossible, and I was left with silence and my own thoughts. \n\n*******\n\nAt exactly ten in the morning, Warrant Officer Ashley Conner knocked on my door. She must have been up half the night if the razor-sharp creases in her uniform were anything to go by. She stopped the required distance from my desk and gave me a salute that would have made any drill Sergeant Major proud.\n\n\"You're in the wrong room Warrant Officer, go next door they're waiting for you.\"\n\nShe didn't move. \"With all due respect Sir. I'm here to see you.\"\n\nThis time I looked up from my paperwork. \"You showed little to no respect when you walked into you're CO's office and applied for a transfer to us, yet you expect me to overlook that and welcome you with open arms. Get out Warrant Officer.\"\n\n\"Ashley.\"\n\nJoJo waited for her to turn and look at her.\n\n\"Ashley, take my advice and salute the officer and about turn. Please don't make me have to turn it into an order.\"\n\nAshley Conner took JoJo's advice and left my office. I watched from the window as both women walked towards the parade square.\n\nWarrant Officer Ashley Conner returned after dinner carrying her Bergen and combat webbing and was given a cot next to JoJo's. Freddy walked in and told her to empty her Bergen and notarized everything in it and her combat pouches. He checked that she was carrying what would be needed for the next few days, and then pulled out scales and weighed everything, including her. He then did exactly the same to JoJo and left.\n\nFreddy woke everyone just before dawn and we made breakfast before we all went to the armory and pulled out weapons and ammo, and then jumped straight onto the helicopter. Ashley recognized the slopes of the Brecon, Beacon's training area, as the helicopter landed just long enough to dump us in what must have felt like the middle of nowhere, and then leave again.\n\nWhen we had walked to the end of the training ground, I turned us around and headed back to the other end. To Ashley Conner's credit, she did better than I expected, not to mention the betting pool the others were running. The Beacons gave the best of themselves over the time we were there. The sun made a brief guest appearance, followed by rain, wind and rain, and of course, rain.\n\nBy the time the helicopter had returned, we had Ashley Conner on a stretcher and the rest of us carrying her kit. We loaded it all onto the helicopter and it took us back to camp. We took Warrant Officer Ashley Conner straight to the camp hospital.\n\nShe was knocking at my door at ten o'clock the next morning.\n\nI took one look, picked up the phone on the desk and called Freddy. \"She's here.\"\n\nThen put the phone down while she just stood ramrod straight, regulation paces from my desk.\n\nWe were in the same position when JoJo once again leant against the door to my office. \n\n\"Ashley, come with me please.\"\n\nThis time Warrant Officer Ashley Conner shook her head. \"No, Ma'am. I want this sorted out now.\"\n\n\"Tomorrow maybe Ashley, but you still have one more interview before anyone gets to decide your fate. Although, that can be easily rectified if you don't salute the officer and about face right now, and I do mean right now Ashley.\"\n\nTo her credit she heeded JoJo's advice once again.\n\nI watched the taxi pull up at the security gate at three the next morning. Freddy gave me the heads up when the taxi dropped his wife Maggie off, before the final destination being the camp. Both held each other up as they made their way to the room they used for pre-Brecon. I stuck my head in an hour later to make sure both were okay. They were both face down on their cots snoring their collective heads off.\n\nMaggie was a godsend; I swear when Freddy married her, we all instantly liked her like a sister we never had, but always wanted. I'm sure I have more than one man in my Unit that would stand in front of bullet for her.\n\nWhen I first met Maggie, she was attached to Freddy's arm. She looked me up and down and with a questioning look on her face, she said. \"Why aren't you married yet?\"\n\nFreddy was on the verge of damage control when he saw me smile and say. \"Because my second in command got to you first.\"\n\nThe smile was slow in coming at first, then she quickly pulled herself away from her husband and wrapped her arms around me in a hug.\n\n\"I like him; can we keep him honey. Please, please, please.\"\n\nAnd so began the deepest friendship I've ever had with a woman. It sometimes felt like I was talking to my mother and (if I had one) my sister when we talked. She was smart enough to know that some topics will always be off the table, so she used the extra space in our conversations to try to get me married off.\n\nI was actually at Freddy's house when we first talked about bringing JoJo into the Unit. That's when Maggie raised the female point of view.\n\n\"If you're going to do this, and I get the feeling your tilting towards it, then you need to get the wives on board. I understand the military talents she can bring to the Unit, but all the wives will see is a hot female spending time with their husbands, and that's going to cause trouble.\"\n\nThis time I took a real hard look at Maggie. \"And how do you know she's hot?\"\n\nMaggie Donaldson gave me that schoolteacher look. \"Her picture may have accidentally fallen out of her personnel file when my husband brought her file home.\" That's when Maggie decided that a good defense was going to be a hard offense. \"Honestly, Curtis, if you're going to give my husband homework, then you have to expect his wife to go through his pockets to make sure he didn't bring anything sensitive back from the office by accident.\"\n\nIt was during our conversation that Maggie actually came up with the perfect solution. We had no sooner got JoJo settled in than the wives invited her to a barbeque with them and the children. Us guys went to the local golf club to hide and grab something to eat. We sat at a table by the windows, with drinks in our hands watching people hit balls with sticks.\n\nThe barbeque set the bond that JoJo now shared with the wives and children of all the members of the Unit and made her feel even more welcome. The wives of course see her as an asset and not a threat to any of their marriages. As for me, I avoided the 'I told you so' look from Maggie for as long as I could.\n\nAshley Conner received the same welcome package from the wives in the form of a girl's night out. From the drunken slurs of Maggie Donaldson speaking to me over the phone, once she had snatched it from her husband, Ashley was given the same thumbs-up that JoJo had.\n\nI sure had to admire her stamina because it really did feel like Groundhog Day. At ten the next morning Warrant Officer Ashley Conner entered my office and stood with the regulation distance between us and saluted me.\n\nI still left her standing there for a minute or so, before looking up at her. \"Good morning go get changed. If you need help selecting what to wear, then you need to be in jeans, a decent t-shirt that actually covers the top half of your body and trainers.\" I waved my hand at the in-tray to the side of my desk before adding. \"I think two hours will be enough, see you then.\"\n\nShe paused expecting me to return her salute, then decided to add. \"Is this another test?\"\n\nShaking my head, I simply replied while I was still signing forms. \"No, more like me taking you out of this environment so you can speak openly, and me tearing you a new one for why you, over just shy of three years, set about removing yourself from your regiment and dropping yourself into my team.\"\n\nAshley had the decency not to deny anything. I was changed and waiting for her by the door to our building when she came back. She changed direction when I pointed to my car and we got in. Since she was still feeling her way on this, I let her keep her silence. When I remotely opened the gate to the boat club, her curiosity must have been screaming at her.\n\nMore so when I had to break sharply because an eight-year-old munchkin ran in front of my car, and used it stopping as a perfect excuse to climb into the back seat. She took one look at Ashley and smiled before saying. \"Oh, you're new. My name is Becky, what's yours?\"\n\nI tried to deflect Becky from being a curious eight-year-old, well, I did say try, when I asked. \"I thought you and your mom were going home yesterday?\"\n\n\"We was, but it was miss Trudy's birthday and she asked mom if we could stay another day so we could be at her party at the clubhouse. Mom said yes.\"\n\nShe then looked once again at Ashley and the smile had now vanished. \"You never told me your name; you know its rude to do that don't you?\"\n\nConfused as she was, she must have decided to go with the flow and turned in her seat and told Becky her name, even stretching her hand out so they could shake on it. I just managed to get the boats door open when Becky wandered in like she owned the place and gave Ashley the tour.\n\nRuth turned up while Becky was giving Ashley the deck tour, barefoot of course. She sat next to me and watched for a moment before whispering. \"Isn't she the girl in the photo?\"",
        "\"The one you didn't see, because I would have to kill you, photo? Yes she is.\"\n\nShe dug me in the ribs. Where do women learn that?\n\n\"Becky, we have to get going baby. Plane schedules wait for no one. I promise when we get back you can stay as a sleepover on the boat okay. Curtis says that's a brilliant idea.\"\n\nThe bitch made it off the boat and onto the pathway before I had a chance to say anything, because by then I had a munchkin wrapped around me, squealing so loudly that I went deaf for a few minutes afterwards. I figure it's that age thing because the pitch of her scream drilled right through me.\n\nAshley and I watched them both walk back to the clubhouse, and then their car left the grounds a few minutes later. Freddy and JoJo turned up a minute later and I cast off while everyone sat around making drinks and chatting. Occasionally I would get a visitor, armed with a cup of something and sit for a while, then disappear back into the cabin before I found the perfect place to stop and tie-up for a while.\n\nI climbed down below deck, grabbed a soda and proudly announced. \"Okay, this meeting has now started. Please note that if you lie, or even veil a truth, thinking I may not uncover the real truth, then be aware that this is where I bury the bodies of those who don't get to finish the final interview.\"\n\nAshley was still looking uncertain while JoJo and Freddy were pointing and laughing at her.\n\n\"JoJo, how did the girl's night out go?\"\n\n\"Better than mine, I was really jealous about that. All the wives love her, and subject to acceptance she's down to make pasta for the next barbeque we have.\"\n\nI nodded and turned to look at Freddy.\n\n\"All good, the guys know her from before all this. They rated her then just as they do now. I've gone over her personnel file and found a couple of inconsistencies but nothing to really write home about.\"\n\nThe fire was noticeable in her eyes, more so when she wanted to know what he found in her file. Freddy looked at me before he answered, he waited until I nodded in agreement before he would say anything.\n\n\"You lied on your initial application form to join the army. In it you drew a line across the name of your father. You were asked about that and stated that you never knew your father in all the time you grew up. It only took me ten minutes and I can show you four photos that I downloaded with you both sharing a hug.\"\n\nShe continued to stare at him, it didn't faze Freddy, very little did.\n\n\"However, you had just turned twenty when you applied so the name of your father wouldn't have been an issue; however, the higher you climbed in the Army, it would mean that your own security clearance would have picked up on the missing father. Do you want me to go on?\"\n\nAshley shook her head. Although I believe it was duly noted, don't challenge Freddy, on anything.\n\nAll three looked at me. \"This is all your fault JoJo. When you got here you set a precedent.\"\n\nThe shocked look I was expecting. \"Wow, now hold on there Sir. I seem to remember; you came to me. Not the other way around.\"\n\nThis time I stared directly at Ashley. \"Yes, I did didn't I. I came looking for you.\" Ashley refused to back down and a part of me had to give her some respect for that. \"So, tell me Warrant Officer Ashley Conner, why would I wish to make an exception on a rule that has held us in good stead for so many years, because you want to leave your regiment?\"\n\nThe fact that we were all staring at her didn't seem to faze her at all.\n\n\"I suppose the simple answer is that I was born a woman.\"\n\nI caught Freddy doing exactly what I was doing and that was staring at JoJo. All she did was shrug her shoulders.\n\n\"Please don't get me wrong, but a part of me feels like I am a man in a female body.\" She then held up both her hands to stop us dead in our tracks. \"That does not make me a lesbian, and rank or not, if any of you call me one, I will so bust you in the mouth and take the court-martial for it.\"\n\n\"I love my country and as soon as I felt I could, I signed up because this is what I wanted to do.\" Just then her hands went to her breasts and she lifted and then let them go. Even JoJo watched as they bounced and then settled in her bra. \"Then these got in the way and I'm being told that I can't do that.\"\n\nFor a few years she settled on being told exactly that. Then the military did the shuffle thing and moved her regiment onto the camp where we are based. We were the talk of her regiment for about a week and then were left alone, by everyone but Ashley Conner. She was discreet about it, but she made us her pet project and slowly peeled away the secrecy that surrounded us. The one thing that made up her mind was when she spotted JoJo and that's when she worked out what it was going to take to make her transfer happen.\n\nBy the time Ashley had finished talking, none of us had any questions to ask her. It still left all three of us with our own thoughts. To every man, or in JoJo's case, woman, someone walked up and asked them to join. The job was so diverse that we either left feet first or old age and fitness slowed us down to the point we could become a liability. So we took easier jobs away from the Unit or retired altogether. It never occurred to us that there were people out there looking in and wanting in.\n\nAshley Conner was banging on the door wanting in because she never wanted to be told, 'you can't do that' ever again.\n\nI left them talking while I went up, untied the boat and took us back to the boat club. Freddy went home and JoJo told us she had a hot date, so she opted to leave and get changed. JoJo took Ashley back to barracks with her that evening. As for me, I told Ashley that she had left me with a lot of thinking to do, and that I needed a couple of days.\n\nSure enough, at ten the next morning Warrant Officer Ashley Conner marched into my office and stood the regulation paces from my desk, stopped and saluted me. This time I was expecting her and tossed a brand-new razor blade onto the desk.\n\n\"You will remove all regimental markings and rank from two uniforms. Your pay grade is now that of JoJo's, so go talk to her. Around here you will continue to hold the rank of Warrant Officer. So, adjust all your uniforms accordingly, your dress uniform will continue to hold the rank and badges of your regiment. If you have any problems admin wise, see Freddy.\"\n\nHer hand was quick to take the razor blade. \"Am I expecting any problems Sir.\"\n\nI shrugged. \"Remembering what uniform your wearing for what purpose would be one I suppose.\" My head nodded towards the distance. \"Out there in the field and as a team we have no rank other than I'm the boss and Freddy is admin. We all have jobs that we get on with, and if I tell you to go and help whoever, you just do it and don't ever ask why.\"\n\nI stood and shook her hand. \"You still have a long way to go but nothing that can't be overcome with training. Your request for transfer has been approved between Colonel Franklyn and myself. I have Freddy on the paperwork. You have three days to say goodbye. We will expect you bedded down in the room you and JoJo use by Sunday afternoon. Any questions?\"\n\nThe excitement in her eyes left her for just a second when she said. \"I have to leave the women's quarters Sir?\"\n\n\"After Sunday, you're no longer a member of your old regiment. In name only perhaps since your dress uniform will always show that. But you're mine; that makes you a member of the Unit. We don't have women's toilet in this block. You use the same as us, just as out there training or at work. We dig one hole, and we all use it when we need to.\"\n\nI must admit I was wondering if I should have given this speech before handing Ashley her transfer.\n\n\"You carry just as much as everyone else because that's what we do. Along the way we will figure out what you're good at and how to adapt that into the unit. But no one this side of the wire will salute you or call you ma'am. To us, your just Ashley, one of the Unit.\"\n\nShe left with a smile on her face and tears in her eyes.\n\n*******\n\nIt was also time to face the music. I changed into dress uniform and later that afternoon was gaining entrance to Chequers once again. The Prime minister couldn't help but have the chairs just like our last meeting either, so I sat there and ate crow.\n\n\"Well Curtis?\" Asked the Prime Minister.\n\n\"You may be my boss, Sir, but do you have to have that 'I told you so' look on your face?\"\n\nAll three burst out laughing.\n\nGeneral Brownlow leaned on his legs and said. \"I hear you almost killed her when you took your Unit for a walk in the Brecon Beacons.\"\n\nI gave my report to the three men sitting across from me, even admitting that she did seem to slot into the Team well. It was only when I stood to leave that I realized that we had been talking close to an hour on this topic. When I went to apologize for monopolizing the Prime Ministers time, he just smiled and told me that an hour was worth it, if it meant that God's Brother had a happy Unit.\n\nHow I kept a straight face while I saluted my boss I will never know. As General Brownlow and I walked to our cars he did ask if I still wanted my escape and evasion exercise? I must admit it was tempting but I needed the time to blend Ashley into the Unit now, so I declined.\n\nWhen I phoned Freddy from the car he told me that he had already started the paperwork for the time we were going to be spending on ranges and training areas. I left him to it and drove back to camp. He was already gone by the time I got back, so I changed out of uniform and went to the boat club for a quiet drink and an even more peaceful nights' sleep.\n\nI was only just on my first coffee of the morning when I got a knock on the door of my boat. JoJo and Ashley just wandered in straight after knocking, so I waited for them to grab a drink each and sit down before I said ever so loudly. \"Come in.\"\n\nThey giggled before JoJo said. \"Oh shush, you look like you could do with the company anyway.\"\n\nIt seems that JoJo was going to be the mouthpiece for this conversation, so I let her get on with it. I put my cup down after a minute because they had my full attention by then. They wanted to sound me out on an idea that came to both of them. With Ashley leaving the women's quarters they felt it a good idea if they rented a flat between them. When they looked around, they found a lot of very expensive flats but nothing they would be comfortable renting together.\n\nThat's when Freddy suggested renting a boat. Well, I laughed. Seems I was the only one laughing though. We were still talking an hour later when Freddy turned up and joined in. Eventually, we came to an agreement. Life for Ashley was going to get hectic for the next couple of months, so leave her in the room they use at the camp for now, since we will only be home a few days every week.\n\nWhen things settled down. I'd move into the officer's mess and they would take over my boat for a couple of months to see if they could actually get on in such a confined space. The girls were ecstatic, I just thought they were nuts.\n\nWe held our first real meeting of the expanded Unit the next morning. Ashley was ripped mercilessly for a good ten minutes and then we turned to the business at hand. Freddy introduced her to what we call the combat room. Both Freddy and I sat and listened to the team when they brought the idea up the first time they mentioned it, and thought it was a great idea. He got cages built into the room; each of us has our own section of the room,\n\nWebbing, combat boots and anything else they wanted to put into their section they could. It sure saved a lot of room at home this way. Knives were permitted but all other weaponry went into the armory. I let Freddy do a surprise kit inspection from time to time, just to drill it into them that things that go bang, don't belong in here. \n\nI also sent the girls on a week's leave, and courtesy of JoJo's old job, Ashley now had her own Burka and with as many hidden pockets in it as her new partner in crime. She was also taught how to walk in it, without looking like a Warrant Officer in disguise.\n\nI would say that the three months it took either on ranges, forced marches, or drilling it into her how we do things, made me thankful that JoJo was standing beside her. Her fitness wasn't much of an issue, but we still had to impress on her that this is how we do things, if she could figure a better way of doing it, we would all listen.\n\n*******\n\nI had just gotten home on a week's leave, arriving the night before, and indulged myself with a lay-in, just as I was getting ready to cook dinner the boat tilted slightly and a teddy bear dropped through the open door, followed by a sleeping bag and a child's rucksack. I heard a \"bye mom, love you.\" Then a smiling munchkin followed soon after, so I figured Ruth was making a run for it.\n\nBecky moved her stuff around, so we didn't fall over it, then asked what we were having for dinner? When I mentioned that it would have been nice if her mother had checked to see if I was busy this weekend, Becky had one of those all-knowing smiles.\n\n\"Mom phoned Aunt Maggie before we left home. She said you didn't have anything to do this weekend other than help at the boat club, so we can do boating club stuff all weekend, while mom is shopping in London.\" \n\nI was unaware I had a social secretary, I guess I didn't get the memo.\n\nAlso, acting on a hunch, I turned to Becky and said. \"Hey munchkin, did you enjoy the barbeque at Aunt Maggie's?\"\n\nThe smile was genuine. \"It was fantastic, and I got to meet so many new friends, I even remembered all their names.\" Then she frowned before adding. \"Well, cept for the little one that dribbled a lot. He's cute but kinda icky when he does that. I asked Momma if I did that when I was a baby and she said no. I was happy then.\"\n\nYep, didn't get the memo on that one either. Feeling a little devilment creeping into my thoughts, I picked up my phone and rang Freddy. \"Hey brother, where are JoJo and Ashley this weekend?\"\n\nThe sound a laughter down the phone confirmed everything. Freddy knew the game was up but told me anyway. \"The wives and girls were in London shopping for the weekend courtesy of some foreign woman.\" I looked at a still smiling Becky who was sitting across from me, bits of cream from the cake in her hand now around her lips. \"So, I guess us menfolk are babysitting this weekend then?\"\n\nMore laughter rushed down the phone.\n\n\"Speak for yourself, I got the 'to do' list done this morning, so I'm feet up and working my way through a box set of movies.\"\n\nI managed to add \"Enjoy.\" Before I put the phone down.\n\nThe boat club was heading into the summer season and needed the marquee put up on the back green area they sometimes used for overflow parking. Us guys got sweaty putting it up under the directions of two of the committee. I spotted munchkin with the wives and playing with the children throughout the day. She looked just as exhausted as I did when we had finished that afternoon.\n\nOne of the wives from the committee whisked her away and she came back later in clean clothes and with smelly, sweaty clothes under one arm, and her hair still damp from her shower.\n\nWhen the lady chairman asked what I had in mind for dinner for Becky and me, she sure carried a shocked look when I told her. Munchkin had a smile a mile wide, so I knew she was going to enjoy it.\n\nSo that capped off our first day together. I drove Becky to our local drive through and we put out chairs on the roof of my boat, took our shoes and socks off and had our evening meal watching the sun slowly go down over the horizon.\n\nRuth came back late the second day; us men folk were putting the finishing touches on everything. Becky was behind an older boy who was pulling a four wheeled buggy. They would stop at whoever was next and ask if they wanted water or a soda. The young lad would hold the buggy steady while Becky would dive into the cooler box strapped to the buggy and go looking for whatever the answer was to her question.\n\nShe was still leaning against her car watching this when I leant against it with her. \"This is as normal as I ever want it to be for my daughter, Curtis. It seems to me that she eats, breathes and tries so damn hard to live boats right now.\"\n\nIt was also time for just a little playful revenge on my part. \"Becky and I have come to an understanding about the tattoo now. She won't put it back on her arm anymore.\"\n\nThe relief on Ruth's face was plain to see.\n\n\"Instead, I told her that when she reaches sixteen, I know a guy that will ink it right across her shoulders. She's ticking the days off as we speak.\"\n\nIt took her a second for her mind to register what I said, the playful slap across the top of my shoulder will leave a bruise though. An hour later one of the wives again whisked Becky away and she came back later, again in clean clothes with her dirty ones under her arm.\n\nRuth thanked the wife, even hugging her as well, before turning to me, the grin wasn't missed when she said. \"Junk food Curtis?\"\n\n\"Well, I did say to munchkin that I would leave that up to you, so now that's your decision.\"\n\nThe fist pump and the mouthed \"yes\" from Becky didn't go unnoticed by me; fortunately, it got missed by her mother. Ruth took a moment to realize what she had said and the way she had said it had backed herself into a corner. But by then Becky had one arm, I had the other, and we both aimed her mom at my car.\n\nA little under an hour later, my only two foldaway chairs were on the roof of my boat, I was sitting between both women. We tucked into our evening meal, watching that same evening sun make its journey towards the end of another day. Becky stayed with me that night, her mother joined us at her insistence. I enjoyed watching as that conversation grew legs. She may be eight now, but she would sure be as sharp as her mother when she got older.\n\n*******\n\nI answered my phone at three the next morning. It woke Ruth and she came out of the bedroom she was sharing with her daughter and watched me get dressed into casuals.\n\n\"Does this happen often?\"\n\nI stopped so I could look directly at her, her few words carried more than she wanted them to.\n\n\"This is me Ruth. This is who I am, this was who I was when I killed everyone in that alleyway to get your daughter back. Gloves off Ruth, I'm the leader of one of the most elite units in the United Kingdom. My people and I are often sent to put fires out or stop them from going rampant.\"\n\nI knew I had to stop, instead I did something I should have done before I said so much.\n\n\"You need to talk to Maggie, Ruth. When I look at Becky, she fills a hole in my heart I never thought I had. When I look at you, I think perhaps both of you could be the reason I come home at night. Money wise, what you're worth means shit to me Ruth, and if you want me to sign one of those fancy pre-nups then so be it. But you need to understand, this is what I do for a living.\"\n\nHer face was just as impassive as when I started this conversation. I held my jacket in my hands and said to her. \"I have to leave and I'm not sure for how long. Talk to Maggie, please Ruth. Because its fast becoming a time when you need to see what's in front of you. I'm human, Ruth. I can't keep Becky out of my heart, and I sure want you in there with her.\"\n\nBy the time I got to the barracks the helicopter was already down and being loaded. Colonel Franklyn seemed to decloak and stand in front of me when I got out of my car. \"I'm prepping my regiment after breakfast, I've already briefed my Officers and senior NCO's, I asked for you people to act as point on this. Your admin officer has all the details I have. I'm sorry you're learning about this on the run, as it were, but this really is a time sensitive issue. Good luck Major.\"",
        "We slipped in unannounced, the colonels regiment dropped in with all the bells and whistles known to man and press. The Unit was the eyes and ears for Colonel Franklyn for the entire operation, and for months to the press he looked like he was chasing a ghost. The rebels told the world that they would wait until the regiment of foreigners were gone, and then go back to instilling their will on the people.\n\nUpon making their position known, the inhabitants of that country started heading to the boarders, and the neighboring countries promptly closed them. Colonel Franklyn called for calm and the press mocked him as the leader of the rebels held his own press conference demanding that the colonel leave and take his boys with him. The UN stuck their nose in at the insistence of the Prime Minister and a conference to hammer out a deal was set for the end of the week.\n\nThe colonel's regiment held back the tide of trouble, he was outnumbered and in a country where he knew he would receive little or no support from the neighbors. The leader of the rebels walked in like he owned the place, he postured for all of ten minutes while Colonel Franklyn sat and pretended to listen, then he held out a tablet for the rebel leader to look at.\n\nHe stopped talking after that. It was now the colonel's turn to tell him what was going to happen from now on. More so when every time he looked at his wife and family sitting terrified between two women in full Burkas. The rebel leader left the room and told the worlds press, 'sorry' before getting into a car and heading for retirement from politics. He met up with his wife and children as he crossed the border.\n\nColonel Franklyn and his regiment stayed another month to get the political parties sorted, and the UN to place a presence in the country for another year to see to elections.\n\nThe Unit left a month after Colonel Franklyn just in case a certain person took it upon himself to slip back into the country and start all over again. We got back in time to see the medals being handed out. The Colonel sent over a few bottles of nice vintage Champagne as a thank you. \n\nI can't understand why, 'officially' we were training on the Brecon Beacons and didn't know about any of this going on.\n\nWe all stood as a group off to one corner, watching the medal ceremony when I leant over to Ashley and said. \"Just think, if you'd hung on to your request a little longer, you could be getting one of those.\"\n\nShe smiled and we all knew that she just had to have to last word. \"What, and miss all those nice flowers, hills and shit that the Brecons are famous for boss, not a chance.\"\n\nThey all laughed, even more so when I added. \"See, we have a woman of culture with us now that can see all that stuff, not like you bunch of Neanderthals.\"\n\nThe colonel sent his RSM over to remind us of the medal ceremony and that we were making too much noise.\n\n*******\n\nThe boat club looked like a building site. In my absence they had pulled down the old clubhouse, and as the gates closed behind me, the workmen were putting on the roof to the new building. It sure looked bigger than the last one, then I reminded myself what they planned to add to this one.\n\nI also had to do a double take when I pulled my car alongside my boat. The boat moored in front of mine was supposed to be Terry and Tracy Hannaman's boat. So, unless they stuck their hand into their pension money to buy this big-ass canal boat, something was definitely amiss here. I kinda got a clue when I spotted Munchkin sitting on a folding chair, sunning it up on the roof of the big-ass boat.\n\nI spotted the name on the boat about the same time Munchkin caught me laughing my ass off. The big-ass boat was called 'Becky Ortiz'. She came and joined me so that we entered my boat seconds after each other.\n\n\"Momma said she wanted to name it, Titanic, because it would be if she was ever allowed to drive it.\"\n\nThen she got that really confused look. \"Curtis why are you in Miss JoJo's and Miss Ashley's boat.\n\nBefore I had a chance to answer my boat tilted slightly and the sound of female voices could be heard on the deck, seconds before a couple of bags dropped onto the floor in front of me.\n\nJoJo stuck her head in next and the rest of her followed. \"Oh, hey boss, you know you need permission to be on our boat now?\"\n\nBefore I had a real chance to get up a head of steam, Ruth barged her way onto my boat.\n\n\"Becky, you promised to call me when Curtis arrived.\"\n\n\"Well momma.\" Then she pointed to me. \"He's here.\"\n\nThat set everyone laughing, except me. Ruth had by now scooped her arm around mine and gently pulled me above deck.\n\n\"First off, you shush mister. When you left you didn't give me a chance to reply. So that's your fault.\" She then pointed at the big-assed boat that Becky had once again made herself at home on the roof, minus trainers and socks, I might add. \"This is ours until the apartment above the clubhouse is finished; and then, I'm under threat from my daughter of leaving home if I try to sell her boat.\"\n\nIt seems that Ruth did talk to Maggie. The guy in me sure would have liked to have been a fly on the wall for that conversation. The result being that what I had said to her before leaving hit her hard. Maggie was still an officer's wife, so Freddie would have told her where we were going, but until Ruth took that next step, she was still an outsider.\n\nMaggie had run aground many times with her conversations with Ruth, to the point that she basically told Ruth that she had not only all the information, opinions but the opportunity to do something about it. So, she quiet literally needed to 'piss or get off the pot'.\n\n\"I needed an answer to a question you didn't want to talk to me about Curtis. By the time I was given that answer, I just knew. Being told by Constance what you did sealed the deal for me. I'm sorry I went behind your back Curtis, but with you gone and my mind in such turmoil, I had no choice.\"\n\nIt wasn't hard to pick up the name she had used.\n\n\"You spoke to Constance?\"\n\nI barely heard the whispered confession that came next. \"I spoke to Brooke as well.\"\n\nThe tears welled up and threatened to engulf her. \"Your back was on fire when you carried her daughter through the building.\" \n\nHer arms went around her body and held on tight. It seems being part of the social elite back home had its advantages; the story of Brooke and her daughters kidnapping was huge gossip material for weeks. When Rick came back and Ruth was told his name, a vague light came on, in the recess of her mind. She phoned her security chief and told him the story of the kidnapping of the daughter and granddaughter of one of the power houses at the capital. \n\nBoth the daughter and a man that had came to visit the Unit for a couple of days before I up and left, had the same last name. Coincidence may be one thing, but a finely honed instinct buried within her, told her something wasn't adding up unless you shine a light on it. Her head of security called Ruth back a couple of days later; he too had friends at the capital. He had dinner with an old friend who went by the name of Cooper, and over that dinner, an interesting story was told to an old friend and college buddy. \n\nHer whole body visibly shook, even holding herself so tightly couldn't calm the images that seemed to have been running rampant in her thoughts. \"Brooke said that it was only when you gave her her baby back that you screamed in agony. The boys were on you in an instant, but the damage was done by then wasn't it?\"\n\nI couldn't talk, to talk meant my mind would have to re-live the decisions I made and would make again, for the sake of the people I love so dearly. Constance chose well when she got the President to send for the Unit. To a man and woman, we would have all done the same. We went into that building and took them back because one of our own was missing his wife and child.\n\n\"I was one of the lucky ones, fire owns you. It takes what it wants and leaves you with that reminder for the rest of your life. In my case, the whole of my back down to the small of my back and the top of my backside. My arms fared slightly better, but not by much. I would certainly be a talking point on a nudist beach.\"\n\nRuth looked directly at me, she tried to hide the smile, unsure if she should find what I said funny. In the end, her hands came to her breasts and she pushed them up and let them drop.\n\nBy the time my eyes returned to hers, she was waiting for me. \"Shall we give that a test one day Curtis; I guarantee I've got a better idea of what people will be looking at.\"\n\nShe pulled air into her lungs and they grew a couple of inches, I looked. I'm a guy, I'm sure I drooled a little as well.\n\nWe both looked at each other for a moment, we knew we couldn't continue this line of conversation just now, maybe later. But what needed to be said, had been. We knew both of us had to move past this or both our moods would have taken too big a plunge into sadness, and this wasn't an evening for such a mood.\n\nI nodded my head towards that big old boat and said. \"What did you do with Terry and Tracy?\"\n\nShe looked relieved that I chose to move us on, and once again, scooped my arm into hers and climbed onto her boat. We both waved at Munchkin as we went below for a drink and to finish our conversation.\n\n\"Between the harbor master and I.\" She then made a pretty poor attempt at Italian gangster now. \"We made them an offer they couldn't refuse.\"\n\nDeclan Johnston had the unenviable job of trying to keep everyone happy. As Harbor Master, Declan would take the bookings of boats that were coming to visit the area, he would welcome them and find them a mooring at the club. When someone left the club, their permanent mooring would go to someone from the club that wanted it. If you ever thought of the proverb, square peg into a round hole. That was Declan's job as Harbor Master.\n\nBut the man had a gift for the job, and when his time as Harbor Master was up, no one sought election to the job. So, by default Declan, got his job back and the whole boat club was happy. Terry and Tracy Hannaman aren't getting any younger, so they asked if they could have the next slot that came up, closest to the new clubhouse.\n\nThat conversation coincided with Bill Dunham asking if his boat could be moved back and take the last slot next to the newly planted trees so he wouldn't have to walk his two little dogs so far. The Harbor Master also knew what Ruth had in mind and so the Hannaman's boat moved, so did Bill's. \n\nRuth took Becky shopping, along with the Harbor Master, and a week later, due to her new boat being given a few upgrades and serviced to within an inch of its life, came back with a widebeam, or as more commonly known as, a big-ass boat. Of course, me being me, I just had to throw in the odd comment about Americans always wanting bigger and better.\n\nThat of course, led to another bruise that would take a while to go away. Ruth sat down next to me, her conversation continued, although in a quieter tone.\n\n\"I fucked up the last time Curtis, I know I did, and every time I tried to correct that mistake, I went and made another. So, I'm asking for another go. The girls, hell the whole boat club have offered to look after Becky tonight. I want you to show me your scars and in return, I'll show you mine.\"\n\nIt was the first time I had seen her bite her lip, her cheeks went a slight pink color as well. Ruth's hand slowly came to my cheek and rested there. Her eyes seemed on the verge of panic.\n\n\"I can absolutely guarantee, I'm a consenting adult Curtis. Please give US a chance.\""
    ],
    "authorname": "markelly",
    "tags": [
        "the unit",
        "return home",
        "maggie",
        "flight attendant",
        "tattoo",
        "boats",
        "uniform",
        "digging holes"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/curtis-woodman-ch-02"
}