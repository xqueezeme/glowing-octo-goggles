{
    "title": "The Lost Boy Ch. 14",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content.\n\n*****\n\nA.N. Next chapter roll out! \n\nStill more to come even after this! And I think many of you will be pleased with this chapter :) It's been anticipated for a little while. \n\nThe Following Contains: Dom dickgirls fucking everybodies favorite half breed Ian up the butt. Good stuff! \n\nAs always, I hope you enjoy! \n\n***** \n\n\"I missed a lot didn't I?\" \n\nPeter blinked, freeing himself from the 'zoned out' state of mind he was in and looked over towards his friend and classmate. \"Hmm?\" The two of them were walking up the campus heading to the High School wing of Shelter University. Both boys had already been dropped off by their parents and had a small hike to make it the rest of the way. \n\nRonnie shrugged, \"Well I'm absent for just a few weeks and when I come back all Hell's breaking loose.\" He laughed. \n\n\"I guess that's what happens these days, can't blink without missing something important.\" He replied somberly, then looked up again trying to catch the gaze of Ronnie's brown eyes. \"Where were you anyway? That was the longest you've ever been absent all year.\" \n\nThe two teens were close to the same height, but it was hard to beat Peter's 5'1 skinny frame. Ronnie though was about 5'4 and while still thin, was more athletic and a little more meaty in comparison to his blonde friend. \n\nHe tried to avoid eye contact, \"You know me, went hiking.\" \n\nPeter gave him a disbelieving look, \"For over two weeks?\" \n\n\"Well...sort of.\" Still he tried to not meet eyes with Peter. \"I kind of got sick while I was out there cuz of, well you know wilderness and shit, and I...needed to spend some time at the clinic.\" He shrugged up his book bag more securely over his shoulder. \"And turns out that while I was there, the doctor found out that I never had a physical before enrolling in Shelter, so I couldn't go back until I had one.\" \n\nThe blonde raised an eyebrow, \"You needed a physical to go to school here?\" \n\n\"New students do.\" He added, \"Since I only recently transferred for Dad's job, I needed one.\" Ronnie told him, most of it being the truth, but he cleverly left out the other parts as to why he was kept from school for so long. \n\n\"Oh baby...I'll need to see you again tomorrow first thing for another checkup...\" Doctor Gabrielle's words echoed in his mind. \n\nHe shook his head, waving his slightly long brunette hair, it reached about shoulder length on him, same as Feles's. \"But anyway!\" He quickly tried to change the subject, Peter didn't miss his obvious quickness to avoid further questioning on the subject. \"Back to what I said before. You've noticed it too right? That big ass biker chick gang that just rolled into town?\" \n\nPeter rolled his eyes, \"Oh yes I very much noticed it.\" \n\n\"They've been annoying the entire continent with the constant riding and engine blaring!\" He gesticulated with his arms. \"I mean, one of the reasons my family moved here was because we heard it was quiet. Now all of the sudden this gang has gotten so active, plus all the fights that have broken out because of them. I mean geez, it feels like we're living in Mad Max.\" \n\nThe smaller one nodded in agreement, the town had become more hectic ever since the Den Mothers had arrived. Or as his new 'Alpha' called them, Urul. \n\nHis fingers tightened their grip at the thought of her, Catalina. The night she broke into his home and raped him was still very fresh in his mind. And she had taken him several times since then. \n\nSeveral times a day in fact. \n\nCatalina held Peter by the waist, his legs wrapped around her lower back and crossed at the ankle. His upper torso bent far backwards and his arms braced on the floor as she fucked him half way upside down. The floor of the school restroom was surprisingly clean he noticed as he watched his own reflections face twisted in an expression of reluctant ecstasy from the feeling of her plump balls clapping onto his tiny cheeks. \n\nIn the alley behind The Den, she held him up again, seeming to enjoy how little he weighed. Her arms hooked under the back of his knees and fingers interlocked behind his head. She bounced him up and down on her hips in a full nelson, Peter's eyes rolled back and his tongue lolled out of his face. The large girth of her cock stretching his rectum uncomfortably so. But after so many rough poundings he was getting use to it. And liking it more and more. \n\nEven in his room late at night, she sat on the edge of his bed, legs splayed wide apart as she had him suck her off. Naked and on his knees before her, he blew all of her inches to the best of his ability. Sucking her with all the skill and grace of a nervous virgin still. But apparently, that was good enough for her to still shoot her thick white load all over his face. \n\nHe snapped himself out of it again. It was difficult for him to avoid her, not that he could even if he wanted to. After learning what she and her gang actually were, along with many of the other residents of Shelter, Peter was more than happy to just call himself her bitch as long as he was under her protection. Like she told him, monsters were real. And if being subservient to her was what kept him alive and not eaten by all the other creatures he had only recently come to find out existed, he would do it. He would bend over for her and take her cock wherever and whenever she wanted. \n\nBut, that wasn't the only thing she wanted from him it seemed. Catalina was after more than just his tight ass. \n\n\"I know I was out of the loop for a while but can you fill me in?\" Ronnie suddenly asked, \"Do you know what's going on? What's up with these Biker chicks, and what's all the fighting about? Are they just general assholes?\" \n\nPeter raised and lowered a shoulder, \"I've heard some things.\" From Catalina, \"I think it has something to do with the Mayor of Shelter.\" He told Ronnie everything he was allowed to, \"A woman named Agrat. She has something they want or something like that I'm not sure.\" \n\nThe taller teen chuckled at the odd name, \"Agrat? What is she from ancient Greece?\" The two of them shared a laugh at that. Though Peter wasn't sure about whether the joke held any actual merit or not. \n\n\"But hey...\" The blonde began again, remembering the orders Catalina gave him. While he sucked her dry just a few nights ago, she gave him a job in addition to the one he was already doing. \"There actually might be a way to help get them out of town faster, or at least quiet things down a bit around here.\" Ronnie turned to him interested, \"You see, there is kind of a group effort going on, to search for this woman who may or may not be the actual Mayor of the town. And some of the girls from the gang have been going around looking to recruit people to join the hun-...search.\" He quickly corrected. \"If you want you can join up when they come knocking, and maybe finally get some sleep at night.\" \n\nRonnie laughed again at that, \"Really? Ha, well from the looks I've gotten at some of these smoking hot biker ladies, if one shows up at my door, Hell yes I'd be on board. They can come by anytime. \n\nAgain he laughed and Peter smirked, silently feeling pleased that he had successfully just procured fresh meat as he promised... \n\nAdams Residence \n\nWhite knuckled fists clutched the sheets of Ian's bed. The young half breeds eyes were closed, but the lids fluttered spastically. His sleeping nude form was drenched in sweat, even causing a dark stain to pool around his body from the sheer quantity. \n\nFuzzy images flashed through his mind at a speed too quick for him to be able to accurately decipher them. He could make out rough silhouettes, blurred almost like they were censored from his view. Only in small fragments did they come in clearly, however they remained disjointed, and harshly fast. \n\n\"Ughhh...\" He groaned, his grip on the sheets tightening further. \n\n\"Oh? You're new to town?\" His neighbor...The Red head...Valerie... \"Well welcome to Shelter Ian. Sorry you arrruuuvvvvsff-\" She faded out, her voice became muffled, as if he was hearing her through ear muffs for a few moments before he felt a cold hard metal plate against his face. He was being held against a...door? \"Nnnffuck...\" Her voice came through clear again. \"You've got me so hot Ian...\" \n\nHe fell forward, the door fading from existence and he was left floating again in this black void that shrouded the world around him. \n\nIan had never spoken with Valerie before in his life. Not that he could... \n\nRemember... \n\nHe couldn't remember anything before his accident. \n\n\"What was my accident?\" Ian thought. \"A...car accident...That's right...but...that's not right...\" \n\nThe void pulled back, he sat in an office for a brief moment before it was quickly snuffed out. He fell back again, landing on a soft surface that crinkled as his body touched it. A bed? No...some type of...patient bed...for a doctor's office, covered in paper. \n\nHe felt two pairs of hands on his nude body. They delicately traced along him, running feminine fingers over his faded scars. \n\n\"My...my scars...\" They were from a different accident, when Ian was...no...lie...that's a lie... \n\nThe void tried to grip him again, trying to take him away from this thought. This...memory. \n\n\"My memory.\" \n\n'I believe this boy needs some trrrrurrrtment. To help along his transition.' Another woman's voice emerged from the darkness, again distorted, but clear enough for him to understand. \n\n\"Please treat me doctor...\" Ian said aloud. \n\n\"Stop...\" \n\nThe blackness took him once more. And his head hurt, like a migraine hit him with the intensity of a thousand suns out of nowhere. On instinct he reached up to clutch his head, what was happening? Every time he felt something coming back to him, it was ripped away before Ian could read further into it. \n\nAnd that time, he thought he heard a voice, right before it was pulled away again. Something was blocking him. Something was forcing its will over his own and trying to hold him back from seeing his memories. His past. \n\nThis wasn't a dream, Ian was aware of where he was. He was in his own head, trying to wake up. \n\n\"No...\" \n\nGloria, he could see her again. \n\nIan fought through the void, this time deliberately trying to push through the blockage it created. And he saw the dark skinned bane of his life recently. He could see her reclined in bed, and a pale skinned boy with black hair kneeling between her legs. Servicing her as he himself had before. \n\nBut it didn't take long for him to put two and two together, now it was beginning to make sense. Everything she said the night he was lured into her trailer. He knew her before, he had sex with her. He had sex with... \n\n\"Ian stop...\" \n\nThe voice returned, once again trying to force the darkness over his eyes again. \n\nIn the waking world, Ian's grip continued to tighten almost painfully now. His claws beginning to poke through the sheets and cut the fabric along with his hand. \n\nAnd on the other side of town, another body lay tossing and turning in her bed. \n\nOn the second floor of Melodies Miscellanea, the black haired librarian herself was aggressively grabbing and yanking at the blankets of her bed. \n\nHer body pouring sweat from every inch of flesh as she gritted her teeth tightly. \"Ss-stop...Ian...\" She mumbled, followed by a weak cry of pain. Her head was searing with agony, like her brain was swelling and pressing tightly against the inside of her skull. The incense and herbs were unable to help contain it anymore and her power was waning. \n\nShe bucked and writhed in her bed, desperately fighting to hold the block in place. Almost two months ago Agrat tried to take Ian, and that's how long Melody's spell had maintained its hold on the young boy. \n\nBut something recently had cracked the void which held his memories at bay, and the single crack had spiderwebbed into a massive fracture that threatened to shatter at any moment. And Ian was fighting to break through it, she knew he was experiencing mental anguish, as the spell is designed to hold back memories, when they try to return it's an unpleasant experience supposed to force them back. Only now, as Melody fought to keep the block together, she was linked to Ian's mind, and experiencing it far worse than him. \n\nIt was taxing enough to hold a spell like this one from a distance for this long, but now with Ian fighting her, and with his own natural abilities she learned about through her studies. She knew what it was doing to her. \n\n\"The mark...returns...to those who invoke its wrath...seven-fold...\" \n\nHer nerves shot lightning bolts of pain, twisting and arcing all over her body. She squealed and cried, tears streaking down her face, desperate and trying to fight against Ian's sleeping power. \n\nBut it was so strong...he was so strong... \n\n\"Don't...\" She whimpered. \n\nThe pain she felt not in her body, but in her heart was what kept her struggling. Melody cared about Ian, he had been through a terrible saw mill of a life and she saw the happiness he gained ever since he awoke to his new home and family. \n\nIt was beautiful, free from being prey to the Succubus, away from the fate at the hands of an abusive father, and free from being whored out by his idiot of a mother. \n\nNo more rape, no more sadness for him. He was happy. \n\nShe wanted him to stay this way, safe, secure and happy for another year and a half, according to her original plan. But now that something had chiseled a crack in her spell and Ian was breaking through, she was giving everything she had to hold the spell. \n\nBut in doing so, she suffered. Terribly. \n\n'We care about you, a lot. And we want you to be safe, and happy with us while you're here. Because you're special to us.' \n\nHe could feel the memories, seeping through the cracks just barely. The fuzziness was fading, the harder he pressed the clearer they came through. He could taste chocolate on his lips. \n\n'Messy.' \n\n\"Mom?\" Ian said, he heard her voice and felt her touch against his lips. Wiping the remains of a chocolate chip cookie away. \n\n'My baby...oh you're home...my little baby...my Shakar'i...' \n\n\"Ian please...\" \n\nHe ignored the voice, pressing harder. He wanted to know. He wanted to know what he had forgotten. He wanted his memory back! He wanted answers! \n\n\"That's why I came here...\" It came to him, \"I came here to Shelter...for...answers...about...my father...\" \n\n'CLACK' \n\n\"IAN STOP!\" \n\nIan whirled around as the scream rang out behind him. \n\nThere she stood. The only thing holding his past back, Melody. \n\nThe barrier was about to fall, Ian was pressing too deep into his mind and Melody had no way to hold him back anymore. Her only option was to ask him not to and hope she could convince him to stay. \n\nSo she projected herself there with him, as a pure last resort option, she stood on the edge of Ian's memories with him. \n\nBoth of them stood in silence for a few moments, just staring at each other a few feet apart. An atmosphere of unease was thick between them, each one waiting for the other to make a move first. \n\nIt was a while before Melody finally broke the silence, \"Ian please listen to me. Don't do this.\" She said, wanting more than anything to move towards him, but the limitations of both the mental block and projection spells made it so she had to hold her ground. \"Please, turn away. These revelations won't bring you happiness, and they won't give you closure. Only more questions wait pass the void. Please, please! Don't look.\" She begged him adamantly. \n\nIan tilted his head, \"You took my memories away.\" \n\nMelody raised her hands defensively, \"I did this only to protect you. I wanted you to have a normal life. The life you've always deserved to have Ian, you deserve to be happy.\" \n\n\"How can anyone be happy living in a lie?\" He said starting to take steps forward towards her. \n\nHer back went rigid, \"Please Ian, you can have a good life again you don't have to be afraid anymore. You're so good, and I don't want you to experience pain again.\" \n\nThis time Ian shook his head, \"You clearly don't know what's happened to me recently.\" He said, and Melody looked confused, but that didn't stop his advance. \"I'm not going to live like this. There's so much that I've forgotten about who I am. I want to know! I want my life to be mine, and no one has the right to take that away from me.\" \n\nSternly he marched forward, ready to push beyond her and reclaim his memory. \n\nMelody started to panic, \"Wait! Wait Ian please!\" Quickly she reached out and grabbed Ian's hand as he crossed the line she drew in the floor. And the second her skin touched his, the symbol on his forehead illuminated as it had only once before. The sharp pulse of torturous pain burst into Melody's body as she tried to hold Ian back from crossing the threshold. She grit her teeth and tears started to streak down from her eyes. \"Aaaagh...Pleeeeease...Ian...stay...I'll keep you safe...guuuh...Please...\"  \n\nIan felt a pang in his heart at the sound of her weeping, she was suffering trying to hold him there. He felt horrible for doing this to a woman that he didn't even remember, but he knew that there was only one way to end it. To stop both her pain and to remember her as well. \n\n\"I'm sorry, I want my life back.\" He stepped forward, his hand slipping from hers. \n\nThe projection of Melody instantly faded into just the smallest of echoes, and the darkness around him shattered. \n\n\"AAAH!\" Melody screamed as she awoke from the projection. Every sharp pain her body was put through finally seemed to cease, but a horrible sense of dread immediately filled the spot in its wake. She could feel her spell finally breaking and knew that Ian pierced the veil, everything was going to return to him now. His innocence and care free, somewhat normal life would be taken from him. She sat up on her bed, the sheets sticking to her sweaty back for a second before letting go. Her hair was tussled and matted to her face, and she could feel fresh tears spilling from her eyes. \"Oh Ian...I'm sorry...\" \n\nThe barrage of images bombarded Ian's mind with unrelenting force. He could see everything again, the blackness dissipated, and it all returned to him. \n\nLiline's face. He could see her above him, his mom...no...she's not. She was his...lover. \n\nThey were in bed together, his legs wrapped around her back. Locking her in place as she...came...inside him. \n\nTheir lips met, her soft kissable lips, her silky curtain of raven hair, her glorious pair of breasts wiggling in his face. Her huge...delicious...filling...cock... \n\nSin's face. She was above him. His true mother. The only one. But also, his...lover. \n\nHer face twisted and contorting in bliss as she fucked him. His body bent at a ninety-degree angle in bed while she pounded away. Her cock, even bigger, going so deep... \n\nTheir eyes...glowing... \n\n\"Ian...\" \n\n\"Shakar'i...\" \n\nIan was harshly awakened with a loud thump onto the floor as he managed to roll himself entirely out of his twin sized bed. Blankets, and bedsheets tangled up around him, his wings and tail, exposed and also wrapped up in the messy chaos that his bedding had gotten wrangled up in. ",
        "He panted heavily, glowing baby blues darting around the room panicked for a moment. Unaware of where he was at first, but after a few ragged breaths, it began to come back to him. \n\nEverything. Absolutely everything. \n\nSlowly his breathing calmed, and he took a moment to just absorb what had happened. \n\n\"Ian!? Honey!?\" Suddenly the door to his bedroom was burst open and both of his 'parents' barreled into the dark room. Each of them clad in hastily thrown on silk robes, and both looking panicked. Their eyes quickly found Ian on the floor, Liline spoke first, \"Are you okay? We heard a cra-...\" She stopped short as she caught sight of the light blue glow coming from his own orbs. \n\nSin too was about to go off, thinking that someone had broken in from the sound of shattering glass and a loud thump. Only now seeing her child in a jumbled mess on the floor. His blankets had apparently somehow gotten caught on his bedside lamp and dragged it down with him, smashing it onto the floor beside him. \n\nThankfully, not an intruder. But the sight before her wasn't one she expected either. \n\nIan looked up at the two familiar faces, recognizing who they really were. Smelling the demonic power coming off of the both of them. Their desires for him prominent in the auras Liline taught him about a while back. \n\nEven now, they still wanted him. \n\n\"Guess that hasn't changed.\" \n\n\"Baby?\" Sin spoke while Liline stood in stunned silence. She seemed to be less confused and more surprised. Ian's wings and his tail were out, his power surged and the qualities of his Incubus blood were pulsating with their awakened power. \n\n\"Is...Is he back?\" She thought feeling butterflies fluttering in her chest. Unprepared for this situation. \n\nIan swallowed a lump in his throat and blinked away his glowing eyes. \"I think...we need to talk.\" He said quietly. \n\nLiline practically fell over toward him. Throwing herself around the sitting boy, she knew. It was in his voice that he remembered. Somehow, he remembered, and he was back again. So she buckled and embraced him tightly, with everything that she had. She didn't care that he was still wrapped up in a bunch of puffy comforters and sweaty sheets, all that mattered was that she needed to hold him right now. The boy she knew before, the one she lived with and baked cookies for every night. The one she promised to protect. \n\nSin quickly followed after, seeming to come to the realization as well and through her own arms around him. Holding her son, truly her son, not one who was brainwashed into believing it. But the one who genuinely knew it. That he was her baby, so for the first time in what felt like forever, she was able to hold him again. \n\nThey stayed like that for a while, three hearts beating in unison. Bodies wrapped in each other, cuddling in a long needed embrace. \n\nAfter about fifteen minutes of hugging, and soft silent sobbing, the strange family found themselves eventually collecting themselves enough to stand up off the floor and head downstairs. They now sat around the kitchen table, only the hallway light on in the house making it still slightly dark in the area. Being that Ian woke up in the middle of the night, the sun was still a ways off from rising. The clock on the stove actually read two thirty AM, so it was going to be dark outside for a few more hours. None of them felt like they were going to go back to sleep though, not with the conversation that needed to be had incoming. \n\nIan didn't bother putting clothes on, his body was nothing they hadn't seen before. Now that he remembered of course. But he did take the blankets from his bed down with him and remained slightly covered up with them draped over his shoulders, pooling around his waist and hiding his privates. \n\nHeld delicately in his hands was a mug with steaming brown liquid in it. Liline made him a cup of cocoa to sip, trying to help alleviate some of the now noticeable tension in the air between them. She also made herself and Sin a cup of coffee, not really needing it, but hoping that seeing them drink something might encourage Ian to as well. \n\nHe quietly slurped the chocolate substance and making the only sound in the quiet atmosphere of the room, the intense heat of the freshly brewed drink probably would've burned the lips of any normal person. But for him, it was just a pleasant warmth against him. Figures, hot temperatures didn't bother him anymore. \n\nLiline adjusted the purple robe she wore, trying to close the large V neck that dipped down and revealed a glorious view of her cleavage. It wasn't exactly made for modesty, but she felt that trying to be sexy wasn't the appropriate thing to do right now. Sin wore her black one, but she made less of an effort to cover up. \n\n\"Well...where do we start...\" Liline said breaking the quiet. \n\n\"What am I?\" Ian said quickly after her. \"Tell me, why am I so important to everyone around here, why am I so different? I've been called half breed, I've been called half blood, half of what? I want to know everything.\" \n\nBoth women were silenced by his sudden firmness. The change in tone, it was quite the contrast to his previous happy go lucky innocence. They exchanged a look for a second, caught off guard and unable to reply for a bit before Liline found the resolve to speak again. \"...You're...you're...\" She sighed, this conversation wasn't supposed to happen so soon, and she had a little trouble finding the right words. \"You are a half breed. You're half human, and half demon. Sin is your biological mother, she's where you get your powers from. You have all of the strength of an Incubus, but the soul of a human. Which means...you don't have our weaknesses.\" \n\n\"Our...\" Ian added on, waiting for her to continue. \n\nLiline took a breath, \"We...both of us...actually, almost every woman in Shelter. We are...Succubus.\" Sin actually flinched at the title, \"We feed...off of sexual energy. We draw it out from human souls when we have sex with them. We need to, to live.\" \n\n\"And that's why you took interest in me...\" Ian spoke again. \"Because I can be food too?\" \n\n\"No!\" \n\n\"No!\" Both women said in unison. Then Liline took over again, \"That's not...entirely...true...\" She started strong then wavered as she remembered what drew her to him in the first place. The scent of an innocent human soul is delectable and intoxicating to all Sisters. However Ian is especially delicious in both smell and taste because his soul is laced with Incubus power. Similar to Succubi, Incubus power is intensely alluring, drawing in anyone with a sexuality to want to mate with them. They were a very rare breed however, since Succubi didn't need males in order to breed, with their obvious packages of girl meat down below. Some even considered Incubus a simple supernatural defect with how rare they were and how unnecessary for the procreation of their species. \n\nA half breed though, that was even rarer. \n\nIan didn't have to feed like Liline and Sin did, he could if he wanted to and felt the desire to. Drawing from the energy of a human soul would make him even stronger and gave him intense euphoria. But he didn't need it for sustenance. \n\nIan shook his head, \"Regardless, if you're one half of me.\" He nodded to Sin, \"Then who's the other? Who is my father?\" \n\nSin leaned forward, \"He is a bastard who is never coming back.\" She said sternly. \n\nHe almost laughed at that, still they wanted to keep the whole truth from him despite everything. \"You know...despite everything that happened. Despite everything Gloria told me, despite the wings and the tail, claws whatever...I still sort of believed that I was human. Regardless of what anyone said.\" \n\nThe two girls looked saddened by his glum statement, but that quickly changed to puzzled when they realized something else, \"Gloria?\" Liline said, \"What about her? When did she talk to you?\" \n\n\"She fucked me.\" Ian said blandly, \"Two weeks ago, and again the day before yesterday at school.\" \n\n\"WHAT!?!?\" Sin virtually screamed, her mug of untouched coffee literally exploding as a burst of energy blared out around her and shattering the porcelain. Undrunk liquid splashing out everywhere, Liline didn't scream but the information that the trailer trash bitch from across town took the virginity of her Ian. Not that he was actually a virgin, but he believed he was at the time, had her shaking with rage. \"THAT FUCKING CUNT!\" Sin stood up from the table, her pelvis bumping into the rim of it and shoving it a few inches away. \n\nIan shrugged, \"Yeah, she told me you two were human and tried to say that we were lovers. Which I know isn't true, she was sweet at the park but she's also pretty greedy. She was the reason I was late when you, Melody and Valerie came to pick me up at the park.\" \n\nSin turned away from the table and stomped off around the corner of the kitchen. \"Motherfucking black bitch! I'll fucking...\" She rambled almost feverishly, spouting obscenity's and even speaking in tongues at one point that Ian couldn't understand. But he was able to hear her say a few statements like, 'put her foot in her throat' and 'make Gloria her little bitch.' \n\nShe marched over to the front door of their home and snatched the black leather leash and collar off of the coat hangers nailed into the wall. \n\nIan perked up when he saw her grab those, \"Wait, what are you doing?\" \n\nIn the rush of movement she made, Sin's robe which was only loosely tied in the center fell open, showing off the darkly tanned skin and the valley between her tits. Also, down below towards her pelvis, her semi-hard cock hung down towards her knees. Even nearly flaccid, it was a good nine inches. Not that she cared at all, but Ian was able to get an eye full of the heavenly body she had which he hadn't seen for a while. \n\n\"I'm going to that miserable whore's house and I'm going to fuck her up!\" She yelled, ready to break down the door and find the younger Succubus wherever she was in the city. \n\n\"No don't.\" Ian said finally setting his mug down on the table. \"That won't solve anything, please just don't...\" He stopped, his eyes seeming to fall on something in Sin's grasp. \n\nSin let out an anger filled 'Ha', \"It'll solve plenty of things for me!\" She retaliated, but as she reached for the door, ready to go marching through the streets damn near naked, she cast one last glance at Ian and saw what he was doing. \n\nHis gaze was fixated on the collar she swiped off the hook. With his memories back, he knew what it was. And the red velvet threads which were sewn into the leather spelling out the words, 'Mommy's Boy' on it, made him nearly flashback to the first night he spent with his mother. The night where he was introduced to the taboo of incestuous sex, and the forbidden pleasure it brought. He could remember when she first strapped it on, and even right now he could practically feel the sinfully sweet tightness of it squeezing his neck. \n\nAlthough he set his cup down, his fingers remained on it, and they tightened their grip as he now was also able to see her dangling dick. Pulsing and jumping up slowly, apparently rising to the occasion almost like a legit rage boner. He remembered how big she was, the biggest dick he'd ever had, even bigger than the Succubus she was threatening to destroy now. \n\n\"How big was it again? Twelve inches? Thirteen? Thirteen inches...so big...\" \n\nHis powers were back again, and as they did before, they seemed to be returning his primal desire to fuck and be fucked by big meaty cocks. He could feel his heart rate already starting to pick up, and his breathing started to come out harder. Remembering all the tossed up and twisted positions she threw him around in like a rag doll. Her steely pole obliterating his helpless little prostate like it owned the pleasure gland. \n\nIt didn't take long for his surfacing arousal to pollute the calm energy about him. Despite his memory returning, he had actually forgotten what a hold these powers had over him. Such a strong pull and need to fulfill like a bad habit that tugged at the corner of his mind every moment that he didn't satisfy it. \n\nLiline and Sin both caught wind of this, the two girls inhaling the aroma they had gone without for so long. His powers resurfaced and flooding their senses, compelling them to devour the source like wild animals. Sins grip on the doorknob went slack, but her hold on the collar tightened and she looked at her son. An expression of desire in her eyes. \n\nHe looked back at her and returned the same longing stare. \n\nThe demon was awake again, and it was hungry. \n\n'Hungry...for mommy and daddy dick...' \n\nHe glanced up at Liline whose fists were balled up tightly in her robe. Her breath too had become labored, and he could see a tiny glint of purple in her eyes. It seemed to be struggling to light up though, as if she was trying to resist it. \n\nSin however, had no intention to resist at all. \n\nShe released the doorknob completely and moved back into the kitchen, rounding on Ian and passing Liline on the way. Her fingers quickly worked on unsnapping the collar in her hands, ready to put it where it belonged. \n\n\"My baby...\" She began, her voice dropping low as she got close to him. Ian shifted in his seat to turn to face her, looking up at her taller womanly body. \"I'm sorry I got so angry...this is yours.\" She opened the collar up, spreading it so the words Mommy's Boy could be clearly seen. \"Are you still Mommy's little boy?\" \n\nSin's eyes began to glow, no longer bothering to hide it anymore. Their ruby red color shining out and almost lighting up Ian's face due to the darkness of the room. \n\nHe stared back, eventually his own opposite colored orbs steadily brightening up until they beamed at his mother. Practically entranced by the beauty of her face. Long wavy dark hair, and mesmerizing eyes. \n\n\"Sin...\" Liline quietly said from her seat, \"Back...off...\" She was still at war with herself, thinking that even though Ian was apparently returning, that they should probably take things slowly. But her willpower was weakening with every passing second. Succubi were very vulnerable to the aura he emitted when he was horny, and every breath she took made it more of a struggle to stay in her seat. She could feel his heart rate climbing, practically in unison with her own. \n\nFor two months now they had been living with him, being around him, toying with him and caring for him. All the while lusting for him, and although they tried their best to find relief in each other. Succubi fucking each other was not nearly as good as sex with humans. And not even on the same spectrum of pleasure they got from fucking Ian. \n\nThey had been sexually frustrated very similarly to him even, and now all that backed up tension was just BEGGING to be released. With his transformation, and everything that's occurred, Liline's iron will was beginning to melt. \n\nSin carefully leaned down closer to Ian's level, bringing their faces inches apart, and carefully started to move the leather collar around Ian's sweet sensitive neck. Liline watched, her breath hitching and her hands starting to tremble. The leather was gingerly wrapped around his throat, it was a perfect fit for him. \n\nIan didn't struggle, he just remained locked in eye contact with his mom. Feeling the smooth comfortable material fit snugly around the delicate skin, until it tightened juuust enough to give his neck a delicious squeeze, but not to inhibit his breathing at all. And with a snap, it locked on, the leash she carried along with the collar was easily clipped into place immediately after as well. The material was molded to him, like it was only meant to be worn by him. \n\nHis mother than stood up fully in front of him, since she was practically an Amazon with her height, her pelvis was perfectly matched up with Ian's face. Along with her cock that went rigid the moment she felt the first surge from him. Recognizing the familiar energy, it compelled her to jump through the window she had. \n\nShe straightened out her back and pointed her hips forward, bringing her thirteen inches of girl cock perpendicular with Ian's face. His glowing blue eyes looked over it for a minute before a light pink blush began to form on his cheeks. The heavenly musky aroma invading his nostrils mixing with the sweet natural scent she produced from her pheromones. He felt light headed. She slowly rocked her hips from side to side, waving her dick like a treat for him to dive after. \n\nThe boy's mouth watered, and his blush deepened quickly. He bashfully tried to look away, being a bit coy now that a huge veiny but still somehow feminine looking rod was presented to him. \n\nLiline's own nine incher was standing up straight watching this, she couldn't take this anymore. Her blood was boiling, she wanted him, she wanted him! \n\nBoth women wanted him now. \n\n\"Liline...put him on your lap.\" Sin methodically spoke, not moving her dick away from Ian's trembling lips as she said this. \n\nThe pale buxom Sister completely abandoned all prior reservations. There was no way she could resist this temptation any longer. The desire to have him was unlike anything she'd ever felt before. \n\nScratch that, it wasn't a want, this was pure need. \n\nLiline stood up, nearly knocking over her chair with her speed and reached across the table to grab Ian. Pulling him up out of his seat and turning him around to set him down on her lap as she sat again. Still, there was no resistance from Ian, he willingly let her pull his body to her own allowing him to feel the hardness she was sporting through the blanket. \n\nThat however didn't stay there long though, Liline grunted in frustration as he sat on her lap. She reached under him to adjust the blanket he was wrapped in, pushing it out from under his butt and exposing it to her but leaving his torso still enveloped by the sheets. She even took this moment to pull them tighter around him, practically tying Ian in a straitjacket with his own blankets. Wings and arms were kept bound by them and unable to wriggle about while his lower half was free. \n\nSin didn't waste time, shrugging her silk robe off her shoulders and dropping it to the kitchen floor. Baring her caramel tanned skin and toned abdomen to her baby boy in all her glory, cock erect and pointing towards its target with passion. She stepped up to Ian's tied form, and gently cupped his chin in one hand while the other took hold of her cock. Stroking it a few times before guiding it to his soft pink lips. Silently asking permission to enter its home. \n\nIan granted the request and opened his mouth, allowing Sin's monster to slip into his moist passage, sliding along the spongey tongue to sink nice and deep in. \n\nShe inhaled and exhaled a breath that felt like she had been holding for weeks. Ian knew that he had done this before, and if recalled correctly, he could take her all the way to the balls. Regardless of the incredible length of it. So gladly, he sucked on the shaft of her rod like it was a tasty lollipop. Feeling every contour and bulge of her thick pulsing veins along his taste buds. His mouth made quiet sucking sounds, clicking and slurping along the sides. Kissing every ridge and curve of her many inches of girl meat. \n\nHe also felt a hot breeze dance along his ear as Liline too released a held breath, followed by a gentle push down below at his rear entrance. \n\nLiline guided her middle finger between his pillowy ass cheeks and didn't bother waiting for the okay from Ian. She pushed it inside up to the second knuckle, feeling his tight inner muscles quickly clench up and latch onto her digit. \n\nAlmost like they had been missing her touch. \n\n\"Oh...I've wanted you for so long baby...\" She whispered, leaning over his shoulder to catch his earlobe between her teeth. Her body moving with his while he bobbed his head along Sin's sword. \"And now I'm gonna have you again...\" Her digit dug in further, now up to the third knuckle. ",
        "He nodded on his Mom's shaft, \"Mhmm...\" Mumbling in approval, and that hum opened up his throat enough for Sin to push in just a little deeper. \n\nLiline grinned, \"But for now, I wanna see you deep throat your mother's cock.\" She leaned back and using her free hand pushed on Ian's shoulders, forcing him forward and causing him to gobble up all the remaining inches of his mother's baby maker in one swift shove. \n\n\"Uuuughhh! Fuck.\" Sin groaned as her cock pierced into Ian's gullet. She fisted his hair and bucked her hips forward. Making sure he could feel her baseball sized nuts pressing against his chin. She started to rock them back and forth while she was plunged all the way inside, her length and thickness plugging his throat and distending the flesh outside his neck. Liline bit her lip as she watched Ian's throat bulge with the shape of Sin's girl cock. \n\nShe stuck a second finger up his rear, trying to stretch him a bit more so he wouldn't be too uncomfortable when she took him. But surprisingly, he gyrated his hips as she did so, and a quiet moan encouragement emerged from his throat. \n\nLiline should've known by now, that if his powers had returned, he didn't need to adjust. Just look at him sucking that dick like a porn star! If he could do that, then he could take it in the ass like a porn star too. \n\n\"Fuck...I can't wait anymore you fucking sexy boy.\" She withdrew her digits from his ready entrance and took hold of her breeding tool. \"You were my butt slut not too long ago remember that?\" Ian again nodded, further jostling Sin's cock in his face. He may have been servicing Sin, but Liline was in control of him. And he liked that, \"I do too, and you're gonna be it again.\" She held Ian's hip with her free hand and lowered him down onto her shaft. The tip prodding firmly against his teasing star until enough force was applied for it to break in using only her oozing precum as lube. \n\nA throaty noise emerged from Ian's cock stuffed throat, \"Ggglckk...\" He felt her. The Sherriff. Liline. Maeghedda. His first...Mommy... \n\nShe pushed him down hard, sinking all the way to the base and burying herself so sweetly in his anus that Liline immediately moaned. \"Uuuuooohhh...oh God...\" She actually shook, her body quivering as their forms joined again. He could feel her energy spilling into his own, and she could feel his aura swimming around hers as his muscles squeezed her. \"Ohh yes...yessss...\" She couldn't wait, Liline needed to fuck! She needed to breed! She hugged him around his bound midsection and hammered upward, pumping her dick into his insides recklessly. \n\n\"Mmmfflmm! Bhhmm.\" Ian groaned, drool beginning to slobber all over Sin's schlong as his deepthroating turned into a sloppy blowjob of primal passion. \n\nHis own dick was upright and bouncing in tandem with Liline's thrusts. To be filled by her again, to feel her every inch stuffed up in his tight pulsing core. \n\nIt was the most natural thing in the world. \n\nHe reinvigorated his sucking on Sin's dick, cheeks going concave as he formed an airtight suction, trying to siphon the life out of her prick with his mouth. Sin's hands tugged and squeezed their fistfuls of his locks and she aggressively humped forward. Not going as rough as she had before, but rough enough so that her swinging balls audibly slapped his face every time she went in. \n\n'There's got to be a lot of cum there.' \n\nIan heard the voice. That same voice in his head that use to frighten him, only now did he understand what it was all along. It took his reawakening for the light bulb to finally turn on and realize exactly who that voice was. \n\nIt was him. His demon half. Egging him on and encouraging him to do what he desired. To be fucked. To be a filthy slut. To swallow gallons of cum. To be a cock craving whore in heat every chance he got. \n\n\"Aaaagh!\" Liline growled, her hands becoming clawed as she gripped onto Ian. \"FUUCCK YES!\" Her voice was becoming animalistic, her heart and her cock getting what they'd wanted for so long. \n\nSin yanked her larger than a foot long staff out of Ian's throat with a loud 'shluurp'. A stringy, slippery trail of drool following with it as she did so. Ian tried to give it a quick kiss before it got too far. \"Bring him here...bring him here.\" Sin said, stepping back over to the table, reaching down and grabbing him by the tied blankets to pull him along the way. \n\nLiline followed suite, never removing her dick from his rectum, and they bent Ian over the dinner table. His feet barely touching the ground and on their tip toes from this position. Sin situated herself in front of him again, and Ian's mouth was open, with his tongue down and ready before she even was lined up. \n\nThey spit roasted him. Plunging their she cocks in from both ends, filling him from the front and the back. Liline slapped his ass hard, and he felt a slight sting of her claws. \"GOD YES!\" She shouted, clearly losing her hold on the in control demeanor she'd kept up for so long. She ripped her robe away, tearing it to shreds and stripping herself down to her bare naked porcelain body. And like a wild animal railed harder into Ian's behind. \n\nEverything was coming back, he remembered all the time they spent together. All the nasty, filthy sex they had. So many glorious orgasms. So many lust filled nights in each others arms. \n\nAnd betrayals as well. \n\nIan felt the emotion building up in his body along with the rising tingling in his balls representing his coming climax. Since his lower half was free, his prick bounced and swayed with the rocking of their bodies, dripping down a swirling strand of precum in his throes. His eyes went glassy and eventually it became too much too handle. And he cried. Tears of joy. Tears of overwhelming feelings. Tears of confusion. He wasn't sure, maybe all of them? But either way. He cried, and he came. \n\nHis cum shot from his untouched cock, spurting onto the wood of the table and into the blanket which bound him, a sticky damp spot quickly formed where his little tip poked. \n\nBoth women screamed, high pitched girly screams as they felt his climax surge through the house, driving the both of them over the edge. \n\nLiline pumped what felt like liters of her sexually frustrated seed into his boy pussy while Sin fed him his breakfast lunch and dinner for the next several days. Pouring thick streams of jizz into his body, he could feel the energy they produced and planted within along with their seed. It was incredible, it made every nerve stand on end. \n\nShot after shot, spurt after spurt, and pulse after pulse of desire was released into his accepting body. Warming his belly as it was filled up with their passion. \n\nAnd he wanted more. \n\nHis wings burst free ripping the blanket to shreds, and he pushed himself up on the table. Sins cock again slipping free. \"Aaah!\" He breathed out, ropes of his mommy's cum and his own spit dripping from his lips. \"...More...\" His baby blue orbs still glowing, the supple curves of his body defining, and his little claws sharpening. \n\n'More...' \n\nLiline and Sin lost control, their human personas completely dropping. Sin's feet became hooved, and her cock seemed to thicken, pulsing viciously and hungrily growing even bigger. Liline's skin paled further almost matching Ian's and her teeth sharpened into dangerous looking fangs as her cock also gain a few inches in size and circumference. Eyes glowing their violet color as she tossed Sin Ian's leash. None of the three of them had gone even the slightest bit soft. \n\nShe tugged the leash towards her as she walked on her demonic legs to the living room. Ian immediately dropping to all fours and crawling behind the two beautiful demonesses. \n\n\"Good boy...\" \n\n\"Good boy...\" The girls said in unison with their true voices emerging, a new habit apparently of the both of them saying the same thing at the same time. \n\nIan gladly took the compliment and followed where they took him. Sin sat down on the couch and pulled Ian up onto her lap by the leash as Liline again got behind him. He lowered his body over her, straddling his Mom like a cowgirl and again gyrated his hips, sandwiching Sin's dick between his ass cheeks and giving it a tease before it went in and took what belonged to it. \n\n'I want you at the same time.' \n\n\"I want you at the same time.\" Ian said, spurred on by the voice he was agreeing with more and more. \n\n\"Fuck yeah baby...\" Liline said taking Sin's cock into her hand along with her own and rubbing them together for a moment. \n\n\"Fuck me Mommy. Oops, I mean, Mommies. Or should I start calling one of you Daddy?\" Ian teased them, still fresh tears spilling from his face. They just kept falling regardless of how he felt, it was almost beautiful. \"Whatever...Make me your bitch again...\" \n\nBoth cocks pressed up against the surely too small of a hole. There was no way they could fit under normal circumstances. Ian was just too tight. \n\nBut...he wasn't exactly human, now was he? \n\nTwo girl cocks broke into his love hole, stretching it unbelievably tightly. And Ian screamed out in agony and ecstasy. \n\nA flurry of primal, almost caveman style fucking occurred. All three bodies hurriedly bucked into each other. Liline and Sin's thrusts were mismatched, when one pushed in the other pulled out, and vice versa. They churned up his guts so much that his prostate felt as if it was getting the life beaten out of it. \n\nThey punched it, pounding and milking it for another load of his boy cum, while his brutalized ass milked theirs for another load of Mommy and 'Daddy' spunk. \n\nHis powers bloomed, his memories were back. Ian was here, and all three of them were showcasing their true selves to the world. Frenzy filled grunts and moans sounded out through the home, flesh slapping flesh as the two women pounded into his petite body. Drawing all the energy and pleasure they could from him. They drank from him, devouring the endless energy that he held. Able to siphon it into themselves, they could go on like this forever. \n\nEventually, as hours began to roll on, they switched positions again, this time laying on the floor. Sin took him from behind with him on top but his back to her chest while Liline fucked him missionary. \n\nBoth dicks still tearing him up, Liline held his legs by the underside of his thigh holding them spread wide apart and bent at the knee, while Sin tugged the leash far back. Giving Ian a delightful choke, making every ragged breath so much more sinfully sweet. \n\n\"Ugggghh fffcccckkk...\" Ian choked out, his bent legs straightening far out to the sides. Spreading them even wider for Liline to thrust in deeper and nearly doing a full split. His toes pointed and body went rigid, venting his excitement and incoming climax. \"Ffck mee...fcck mee...don't stop guuuhhh...plleeasee...\" He begged. \n\nBoth Sin and Liline's rutting quickened, Liline pushed herself upright, her hips humping down aggressively as she tilted her head back. Bliss swimming through her veins as she was ready to impregnate Ian again with her unborn children. Sins arms abandoned holding the leash and wrapped around Ian's neck, nearly putting him in a sleeper hold. Tightened their grip and nearly making Ian's eyes roll up into his skull. His hands coming up to press her arms harder agiants him, trying to encourage her to choke him harder. \n\nSin's balls were slapping into Liline's only further riling up the cum inside. Ready to burst and fill up her boy. \n\n\"Oh fuck...oh fuck! Ohh...ohh!\" Liline felt the pressure swelling, she was gonna cum. She was ready. \"Fuck! I love you...I fucking love you baby! Oh OHH!\" \n\nShe screamed, both cocks plundering him shoved in as deep as they could and swelled up stretching his already well used hole out even further. The thick, hot sperm blasting into Ian's bowels and filling him with the pleasant heat of their babies settling into him. Mixing with the previous loads already deposited into his tummy. \n\nHe too came again, his tiny cock happily jumping and spewing out several long ropes of cum splattering out onto Ian's chest. His testicles flexed against Liline's tummy, almost in perfect sync with her own pumping and pulsing down below on his plush tushy. \n\nThe three of their voices let out a long low moan of release and satisfaction. Riding out the high of the long awaited sex they all had been craving. Liline collapsed on top of Ian and Sin's grip around his neck loosened. In's legs un-straightened and came to rest upon Liline's lower back partly wrapped around it, wanting her to stay tucked deeply inside. Their bodies heaved, drawing in as much oxygen they could get. Sweat covered, hair tussled, and hearts hammering. The two cocks within him slowly began to soften, as they gave a few more soft undulating pulses, dropping off the remains of his mommies loads into his belly. \n\nBreathlessly, Ian was barely able to whisper out, \"I...love you too...\" \n\nThey stayed like that for a while, three hearts beating in unison. Bodies wrapped in each other, cuddling in a long needed embrace. \n\nA family. He'd imagined having a normal family his entire life and what he got was definitely not what he had ever expected it to be like, but still. \n\nThey were a family. They were his family. \n\nA.N. In a weird, taboo by primal sort of way it's kind of beautiful. Lol \n\nHope you all enjoyed and I hope it lived up to your expectations! \n\nSee you in the next one which, yes is indeed coming soon! \n\nNext Chapter: Moonlight Hunt"
    ],
    "authorname": "DamienDeath20",
    "tags": [
        "futa on male",
        "threesome",
        "incest",
        "shemale",
        "anal",
        "oral",
        "romance",
        "futadom",
        "femboy",
        "succubus"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-lost-boy-ch-14"
}