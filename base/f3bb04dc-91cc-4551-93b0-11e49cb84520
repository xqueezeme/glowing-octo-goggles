{
    "title": "Deciphering the Bloom Ch. 06",
    "pages": [
        "Thank you to everyone for reading, voting and commenting. Your emails and votes have meant a great deal to me over this almost 2 year period. I am truly grateful for the time you devoted to reading my work.\n\nI have no editor or betas so I ask your forgiveness with my mistakes. All comments are welcome.\n\nThis is a copyrighted work of fiction by the author seeker71. All rights reserved\n\n*\n\nNicolao had Breezy repeat the short conversation three times as she drove to Peltier Hospital. She obeyed no laws of traffic and ignored him the last time he posed the question. She raced along the streets and pulled haphazardly into the parking lot.\n\nNic's long legs carried him through the halls of the hospital. He paid no attention to the looks he received or that Breezy was jogging to keep pace. At the emergency department desk he stuck his head in the glass opening, startling the clerk.\n\n\"Sir, fill this out and I'll get you back right away.\" She grabbed a pen and clipboard.\n\n\"No, I'm looking for a patient, David Collins.\"\n\n\"We can find him after you get that examined.\" She handed him the clipboard and pen.\n\nNic laid the papers down, \"I'm fine!\"\n\nHer eyes flickered over him, a belligerent patient. \"Sir, you're covered in blood. You certainly don't look fine.\"\n\nBreezy nudged in the window. \"Of course we'll get that taken care of. But the police called and told us to meet them here. It's a young man who should've arrived by ambulance a short time ago, a car accident.\"\n\n\"Yes, we've got him. I'll let the officers know you're here. You can help by giving me his medical history. And what is your relationship to the patient?\"\n\nBreezy picked up the clipboard. \"--medical history and payment information, sure. Will you tell the officers Mr. Mylonas' secretary is here?\"\n\nThe clerk turned to speak to her coworker.\n\nBreezy saw Nic was about to say something more and tugged him away from the desk.\n\n\"I know you want to see David. But hang back a little alright?\"\n\n\"Saint, he's here I don't have time for this. \" Had the woman lost her mind?\n\nHer eyes narrowed at his annoyance, \"Time for what Evangelista? Think. Did you hear the question? What is your relationship to the patient?\" Her voice was sharp, as she slowly repeated the question. \"The moment you answer boyfriend access is cut off, you'll be burnt. This ain't warm and fuzzy. Its elephant man fucked up, but this has to be my play. You have to trust me. There's nothing I won't do for family, you're my family. Trust me.\"\n\nDouble doors opened. The clerk pointed, directing two officers to them.\n\nBreezy turned again to face him. \"Give me time to maneuver and don't say anything about Mylonas. He's the only lev we've got.\"\n\nOfficers Ennis and Smalls took Nicolao's statement. The look that passed between them was unmistakable when he and David's relationship was revealed. It occurred to him that they both regarded him with disdain and yet they were owned by Jeremy, paradigms of integrity. He had nothing left over from his despair to feed his anger and he retreated from the exchange. Breezy gave a bare-bones account of what happened and pushed for information about David. The officer said he was unconscious at the scene. When she asked they be taken to his room to see him Officer Ennis declined, David was in the hands of the trauma team. They let them know detectives would be contacting them and turned to leave.\n\n\"Officers wait. Where's Benjamin?\"\n\n\"Sir, we only had your friend at the scene. An ATL will be issued. The detectives will be contacting you; they will be of more service than we can be.\"\n\nHis head and body ached. Ben was not in custody, only an order to attempt to locate. Smalls barely kept the contempt out of his voice as he said 'friend'. He had no way to make them do their job.\n\nNicolao stared at the door after the two men exited. Saint had said Jeremy was their lev, their only leverage. That notion was repulsive, but nothing compared to being denied contact with David. He was hurting and alone.\n\nLeanne, the clerk had been standing next to their seats.\n\n\"Mr. Evangelista, come on back.\" She laid a hand on his shoulder and her voice dropped. \"Mr. Collins is stable. We're taking good care of him. Now let's go get a look at your head.\"\n\nNic stood. The unexpected sliver of news from the kind young woman was overwhelming. The absence, the inky nothing of being away from one another could not be all that remained. Nic was certain neither one of them would survive it. Yet he was helpless, reduced to stolen snippets of information. The day had morphed into a twisted reality one in which he did not have dominion.\n\n\"Nicolao give me your cell.\" Breezy rose with him and was pinned by the intense gaze of her companion.\n\n\"Do what you have to Saint. I have to see him.\" He was entrusting her to return to him the marrow of his life.\n\nThe only response was her hand, waiting for his phone. He placed it in her upturned palm without question.\n\nBreezy's dark brown eyes were fierce as she looked up at him. \"Nicolao, I promise I've got this.\"\n\nHe followed Leanne behind the double doors.\n\nBrecia exhaled and collected her thoughts. A lesson learned young came back to her, men were weakest when losing what they love, but they were never more dangerous. Winners exploit the weakness and redirect the danger. \"Thanks mama,\" she quipped to the air then set to her tasks.\n\nNicolao forced himself to answer the questions of the medical staff. The young woman was friendly and efficient. He wondered if the trauma team had one person there who would spare a smile for Dee when he awoke. David hated hospitals. He grimaced at his thoughts.\n\n\"You're very lucky.\"\n\nNic focused on the speaker.\n\n\"The contusion's discoloration will fade in weeks and maybe you'll have a small scar. You're walking away from a showdown with a gun. That's a good thing.\"\n\nInstead of pointing out all of the ways she was wrong Nic nodded and withdrew to his own ruminations.\n\nBreezy sat her down with the children in the waiting area. She had only spoken with them briefly after she had the car pick them up from school.\n\n\"Alright gang I'm going to need your help. Davey's been in a car accident like I told you on the phone. I think he'll be alright, but no guarantees.\" They knew death was an inevitable part of life; she paused to gauge their reactions.\n\nAbel shook his head, \"He wouldn't drive the car. How'd he get in an accident?\"\n\n\"His uncle stole the car and hurt Uncle Nic in the process. Davey told you about him right Abel?\" She held her son's eyes, as he nodded. The lies of protective parenting she'd abandoned years ago. The world was simply made of too many hard truths. \"I'm working on a way to be able to see him. Right now we can't, only family can.\"\n\n\"He doesn't have family, only us and Mr. Nic. That uncle's not real family!\" Averie interrupted.\n\n\"I know Rie, but you know people have rules. The rule is blood relatives only. I have to make a way for your Uncle Nic and the three of us to be able to help him, and protect him if need be.\"\n\n\"Can you?\"\n\nShe raised an eyebrow at the question, \"Yes, Abel I can. But it may change our plans. You know when we leave town it's the wrap up routine. This is the opposite of that, this in entanglement.\"\n\n\"I never wanted to go.\" Averie announced.\n\nAbel shrugged, \"I don't mind staying.\"\n\n\"Good, now Uncle Nic should be coming out soon. Just sit with him, I have to leave for a bit; take him to the chapel or something.\"\n\nThey settled in and waited for Nicolao. The children played cards while she used the phone and laptop to fill to further her work.\n\nNicolao stepped into the lobby. He seemed a different man from the one she knew. Nicolao was normally the beacon in any room, now the light was lost. She trembled at the thought of him losing something so precious. Breezy stood. \"I'd make the sky burn for you two you know.\"\n\nAbel looked up from his cards, \"Yeah we know mom. But we don't need you to right now. Go set some fires for Davey.\" He ordered casually, accustomed to his mother's odd sentiments of affection.\n\nBreezy evaluated her friend as he approached them. He held an ice pack in his left hand. She had managed to pay for some information on David, but decided against full disclosure.\n\n\"Nicolao, the kids are gonna sit with you. He's in surgery right now.\"\n\nNicolao spun, his feet seeking David, but he stilled. There was nowhere to go.\n\nBreezy waited for him to focus on her again, \"His leg, tibia is broken and he had a wound glass or metal. The good news is no internal injuries.\"\n\nNic collapsed in a seat by the children. \"No internal injuries?\"\n\nShe pressed her lips together and shook her head. If he was thinking clearly he would have called her on the lie. \"Now, I've gotta go. When I get back I'll make good on my promise.\" Breezy gathered her things and headed for the exit.\n\n\"Uncle Nic, does your head hurt?\" Averie asked as she took over icing his swollen fingers.\n\n\"No I'm alright Averie. There's no need to worry about me.\" Nic reassured her. She eyed the blemish but allowed her focus to remain on his hand.\n\nAbel made trips to the vending machine. After an hour passed the two asked him to take them to the chapel. It was easier if he focused on them instead of himself or David so he complied. The siblings seated themselves on the first row, but did not bow their heads. Abel folded his legs with his eyes closed and Averie took Nicolao's hand in hers and did the same as her brother.\n\nHospitals are temples to many gods. Pain, hope, and joy find supplicants on every floor, every hour of every day.\n\n\"When are you and Davey going to have kids Uncle Nic?\" Averie queried with her eyes still closed.\n\nNic stiffened at the strange question. What children were they going to have if David never made it out this hospital? Silence was the only answer he could provide. He turned to the tug on his other arm.\n\nAbel's dark serious eyes gazed up at him. \"You can't think about him not being okay. That's the possibility you can't bring into being. See you and mama worked together, then you met Davey, and he met us and now we're family. Of all the possible outcomes, even improbable ones, you should call to you good ones. Because we are meant to be here, right here for each other. Miracles happen every day, when thought makes fate. Rie what are you asking for?\"\n\nShe turned her dancing eyes on Nicolao. \"I see us all together, just like last night, but this time at a house on the beach, since Davey's never seen the ocean. Abel you can surf good and you're teaching a little boy who looks like Uncle Nic. And me and Davey and a girl with curly blond hair are dancing, I like it when he dances with me. Mama and Uncle Nic you're having your serious talks still, since you both like to talk. I think that would be a good time. I'm asking for a tomorrow where we can be happy together again.\" Averie turned her head and closed her eyes, building a nonexistent day into a prayer.\n\nHe hadn't prayed, afraid he had always been talking to himself. But they were both right. They were bound together and Averie's future was one he wanted to come true. Queer coincidence and everyday miracles had changed his life and it was enough. It was enough, but he needed more. He tightened the grip on her small hand and bowed his head.\n\nConsciousness affecting fate, God granting a prayer was all the same thing. \"Please,\" was all he managed, a monosyllabic petition for mercy.\n\nWhen the three of them went back to the waiting room Nicolao felt more himself the detached expectation of dread left in the small chapel. It was enough that David was alive, even if he had failed to keep him safe.\n\nThey resettled in the waiting room. Nicolao lost himself in conjuring the children in Averie's wish. He sensed a change in his young companions' focus and followed their curious gaze. He stood and waited. When Natanaele's arms wrapped around him he let himself rest in his father's sure embrace.\n\n\"Hi Pop.\" He muttered as they parted.\n\nNatanaele paused, eyeing injuries to his son, swallowing the distress of how close he had come to losing his third born. \"You look---\", he faltered and offered a slight smile. \"Nico.\"\n\nNate, Narisco and Lil Nico hugged him in turn.\n\n\"Your mother and sisters are driving up with Joshua. They have a few more hours. We came as soon as we got word.\"\n\nNicolao was about to ask how they had gotten word, when Breezy stepped out of the elevator and approached them.\n\n\"The Evangelistas I presume?\" She smiled at her friend. \"I'm Brecia St. James, we spoke on the phone.\"\n\nIntroductions were made and Breezy returned Nicolao's cell phone, with an admonishment to lock it. \"I called your family and chartered a plane for them. I would've had them here sooner, but neither city is major hub.\"\n\n\"You all can head up to the fifth floor. David will be in 503. If you like you can get settled in the common area. The nurse's station has all of your names.\" She paused to turn to Nicolao, \"And Nic can go back to see David, he's been out of surgery a good while now.\"\n\nNicolao was stunned. His mind raced with questions, Saint had made a way for him to go to Dee.\n\n\"Pop why don't you go upstairs and take Lil Nico and the kids. Call Ma and tell her what's happening.\" Narisco suggested.\n\nNatanaele got in the elevator with his grandson, Averie, and Abel. As soon as the doors closed Narisco turned to Nicolao.\n\n\"Lil Nico is amped but...the plane was Piper PA-12. I think Pop needs a drink.\"\n\nTheir father was an \"engines man\", for a time airplanes had caught his interest. He had always referred to the small planes' engines as hopped up lawn mowers.\n\n\"He flew in that? He didn't have to, none of you had to.\" Pop definitely had to white knuckle the flight.\n\nNate sighed. What lead his brothers choose dreary desolate roads? \"We know that. We're here because we want to be Nico. Pop wasn't going to ride in the van with Ma; you know he couldn't get here fast enough.\"\n\nBreezy looked up at the three men. Her desire to speak to Nicolao alone was in danger of not happening. \"Um, Nic we need to talk.\" She turned and walked to the end of the hall, willing the newcomers to stay put, but by the footfalls she knew she was out of luck.\n\nShe eyed the two brothers flanking Nicolao, \"Alright, first let's cover the police. The detectives will be contacting you. Mylonas is not a topic, plus it wouldn't go anywhere if you did bring him up. They're looking for Benjamin; they don't think he's a danger to you or Davey after the accident. He's likely injured and on foot. But if you want I can hire private security. The Hope's Cove compound is having new keys and security installed as we speak, I'll be sure to give you the codes and new keys.\"\n\nBreezy had a stack of papers under her arm and pulled them out. \"Now to the second and most important bit; these papers grant you medical access and control over David's care.\" She shook the papers, \"I had to get creative and there wasn't a lot of time.\"\n\nNicolao marveled at how that big statement yielded so little information. \"Saint.\"\n\nTo his surprise she flinched.\n\n\"I forged an adoption agreement, complete with new birth certificate. Legally you can't get married here, so that was no good. This took care of everything. There won't be any billing or insurance issues. Payment comes directly from an account I set up. This is strictly to get past hospital scrutiny. If it needs to go further, I'm confident by tomorrow I can set up a better paper trail that shows you as David's father. But with no insurance fraud, and money for the right hands, it should be fine.\"  \n\n\"Can Nicolao go to jail for this?\" Nate asked pitching his deep voice lower as if the wall were conspiring to listen.\n\nBreezy shook her head, \"No, why should he? I signed his name. No matter what the relationship or why I did it, I did it. I even have myself down as your health care proxy in case you want to distance yourself from this.\"\n\nNic did not hesitate to assure her, \"Not happening.\"\n\n\"Good, you're officially in charge of his medical care. But before you go back there I have to tell you one more thing.\"\n\nBreezy dropped her head, studying the floor. \"He's in a coma. David was never con\u2014.\" Nic stepped toward her, and to everyone's surprise she maneuvered backward.\n\n\"I didn't want to tell you and you be locked out. In case I couldn't pull this out of my ass I sent for your family.\" Words sprinted from her lips. Hiding the truth was lying and in her mind should cost her Nic's friendship. She shrank further away only stopping when Nicolao's arm encircled her.\n\nHe did not release her until some of the rigidity left her body.\n\n\"I did alright?\"\n\nNicolao moved back to peer at her unsure face, \"My Saint you did more than alright. How couldn't you know that?\" He kissed her on her wrinkled brow as he posed the question. \"Thank you my friend. Can I go to him now?\"\n\n\"Yeah, through those god damned double doors, CCU. They're expecting you.\" Swearing allowed her to project the strength she feared her display had cost her.\n\nNicolao made his way down the corridor, thankful that part of the nightmare was over.\n\nNate scrutinized his brother's friend. \"You falsified legal documents. Why'd you go so far?\"\n\n\"Because I could, and the look in his eyes--,\" she paused as she visualized her motivation. \"They're my friends, and I made a promise. I never break a promise.\"\n\nNate placed a steadying hand on her shoulder.\n\nBreezy smiled at the reassuring touch.\n\nNarisco winked at his brother's pretty saint. \"I think it would be my pleasure to get to know you better.\"\n\n\"Careful what the hell you wish for Evangelista the Younger. You know what Nicolao didn't, I have criminal tendencies.\" Breezy straightened her shoulders, \"Let's get upstairs. I have food coming.\" She turned on her heels for the elevator.\n\nThe smell of the Critical Care Unit assailed Nicolao's nostrils. He sound of his feet hitting the polished floors reverberated in his ears. He had walked that walk before. Existence shaped by the senses; he subsisted at two point of time as he made his way to David. When he entered the room he stood at the foot of the bed, absorbing that moment, rooting himself to the present, to David.\n\nDavid's face had very little bruising, just slight scratches on his left check, his left leg was in an immobilizer and a cold pad. He was intubated, there were wires going to flashing monitors, a horror show to the uninitiated. The bed was inclined at 20 degrees. The injuries and mechanism attached to him belied the peaceful stillness of him.\n\nNicolao forced himself to accept the absoluteness of this familiar yet foreign geography. David shouldn't be battered and he was. He should have been able to prevent this, yet he hadn't.\n\nThe nurse took David's vitals, explaining they were strong, and the doctor would be in to speak with him soon. Nicolao did not acknowledge him. He remained standing at the foot of the bed, mapping out the landscape\n\nSamuel shook his head. You could never predict how people were going to react. He liked mute, it was better than hysterical screamers any day. He wheeled the blood pressure monitor away from the bed and grabbed a chair pulling it beside the bed.\n\n\"Sit down Mr. Evangelista, and talk to him. Some patients say they hear everything. Let him know you're here.\"\n\nNic finally looked at the lanky man in blue scrubs and sat as he was told. He took David's hand and began to appraise the damage to the fair skin. His wrists were bandaged were the cords had cut into the flesh. His arms had taken the brunt of the damage, as he had shielded his face. The forearms were black and purple.\n\n\"I should tell you first about your big sister, our big sister. Saint's really remarkable--\" Nicolao began to speak, determined to fill every minute with words, if there was any chance that was all Dee had to cling to in the dark.",
        "He watched it unfold before him, a movie but full emersion. This was not two dimensions with sound all of his senses were engaged. David knew the brightly colored furniture and sat on the pale blue recliner. He could see the woman in the kitchen.\n\nWaist long hair the color of corn silk obscured her face as she removed milk, eggs, butter and orange juice from the refrigerator. She turned to the cabinet for the flour, baking powder and sugar. Lastly she placed the bowl, mixer, and measuring utensil out and sat at the tiny kitchenette. She smiled and seemed to be waiting. He knew who she was, the face from his picture, a memory misplaced.\n\nHe willed her to turn her head, to look at him, and then he heard the gentle footfalls in the hall. His heart swelled as she rose and picked up the small boy with ash blonde curls. She laughed as she half spun him, the melody of merriment shared between the two of them.\n\n\"Davey, you finished your nap already?\"\n\nHe saw his round cheeked self nod, a combination of yes and no. This was their game on her days off. He never took a nap. He would lay down dutifully for what seemed an eternity then cautiously make his way to the kitchen. Some days she would be in her bedroom and he would creep beside her, she would cradle him and they would sleep together.\n\nDavid, the observer, leaned into the chair and inhaled. It smelled of her. How could he have forgotten? This had been his entire world for seven years. His babysitter was Mrs. Graham who lived down the hall. His first school was down the street. He had been safe, he had been loved. How could he not have remembered?\n\nHe watched knowing every step. They made orange scones, his favorite. She would measure out each ingredient and let him put it in the bowl. When she removed them from the oven they shared one and a glass of milk. He longed to taste their baked treats again, the final faculty experienced. There was a murmuring in the background, distracting, but he could not tell where it was coming from.\n\nShe stood up carrying her three year old son with her into the living room. She did not take notice of the chair. But David knew what was next. She would sit on the couch and he would fall asleep listening to the steady beat of her heart. He closed his eyes, evoking the sound he had lost. The feel of lips pressed against the top of his head caused his eyes to snap open. He lifted his head and was greeted by her smile. Her eyes were the blue of fairytale skies, impossible, yet he knew this recollection to be true.\n\n\"Mommie?\"\n\n\"Never forget that I loved you then, I love you now, and I love you always, my sweet beautiful Davey.\"\n\nThe murmuring grew louder as darkness filled the room. His mother and his home filled with yellows and blues turned to black. Alone in the caliginous gloom he heard Nicolao.\n\nNicolao. He had to tell Nicolao. She was beautiful and she smelled of lavender and scones; in his safe place was his mother, and she loved him.\n\nNicolao held David's hand as he spoke. The only break he allowed himself was when the doctor came in to speak with him. David was being treated with diuretics to lessen any swelling of the brain. His tibia was fractured in the crash, but would be cast after the swelling had lessened. The surgery was a repair to five inches of torn flesh along his left lateral side; a minor procedure that had been completed, as requested, by a plastic surgeon.\n\nNic listened intently. The truth was David's fate was out of the doctor's hands. There was nothing he could do, not even venture an estimate for David's awakening. He wanted the doctor to leave, so he could talk to him. Talk to him for the rest of his days, if there was a chance he could hear him.\n\nDavid was engulfed in the dark. He focused on the sound of Nic's voice. He fought for consciousness mired in the space between the realm of the torpid and revival. Nicolao's warm, solid body greeted him each day upon awakening. He loved to lie in bed and revel in that glow; he searched for that heat and found it in his hand. Nic was holding his hand.\n\nNic felt it. The limp fingers curled, squeezing his. He lunged forward to hover over the bed.\n\n\"Dee love, open your eyes, please.\"\n\nDavid clung tighter to the fingers, he needed Nic to know he was trying, but he couldn't talk. His body wouldn't listen to him. He was exhausted. Floating away back into the black appealed to him. He would talk to Nicolao later, but Nicolao was imploring him--begging? There was something in his throat, stopping him from talking. Fright flung him into full awareness. His eyes snapped open and his arms shot out as he clawed at his own face.\n\nNicolao's elation fled as he watched Dee spiral into frenzied terror. The heart monitor alarmed as the clip was dislodged.\n\n\"Dammit Dee look at me!\" He grabbed both wrists, angling his body over David's. Preventing him from pulling at the tracheal tube\n\nThe bellow caused the blue eyes to meet his, but the alarm was not contained.\n\n\"That's right, mi lirio de los valles, look at me. Calm down, I'm here with you. You're safe now.\" Nicolao heard the hospital staff enter but spared them no attention. \"Love you're in the hospital, with a breathing tube.\"\n\nReflexively David's hands jerked toward his throat, but Nic held firm.\n\n\"It's alright. It'll be removed right away. Be still or you'll hurt yourself. Okay?\"\n\nDavid listened to Nic, impossibly incredible Nicolao. Why or how he was in the hospital mattered less. Nic was with him. He relaxed into the bed, drained. Nicolao stepped out of the way and nurses filled the space. He ignored them and kept his eyes on Nicolao. He tried to stay focused on those brown eyes, but he wafted away leaving Nic and the nurses behind.\n\nHours passed before Nic left CCU and caught the elevator to the fifth floor. David slid in and out of consciousness. Samuel assured him that was not uncommon for a brain injury and the drugs for pain management were also a factor. While the staff prepared to move Dee he left to give his family an update.\n\nThe fifth floor looked nothing like a hospital floor. As he stepped through the double door Nic was reminded of a hotel lobby. He approached the circular desk gave his name and was directed to Suite 503. Each room of the fifth floor had a private lobby for guests equipped with couches and a television. When Nicolao entered dinner conversation ceased as the eyes of the gathered rested upon him. He stared back, finding his throat suddenly constricted with emotion.\n\n\"He woke up. They're bringing him up in a few minutes.\"\n\nAll of the bodies in the room moved at the same time. The four children shared whoops, Lil Nico taking the moment to hug Averie the love of his young life. Nicolao was surrounded by the wall of Evangelistas, Nieves and Hilaria included.\n\n\"How are you Nico?\" Hilaria asked after they embraced.\n\n\"I'm fine Ma, really.\"\n\nShe reached upward, and instincts of childhood lead him to her hand. He bent downward as his cupped his face, studying his eyes.\n\n\"We could have lost you.\" Her fingers went to the wound only hours old in his scalp.\n\n\"I'm fine. I could've lost him Ma. I keep having to fight to keep him.\"\n\nHilaria looked into the eyes that mirrored her own, \"To lose him would be to lose you as well Nico. You were born to fight, maybe for him is why.\"\n\nNic stood out of his mother's grasp, her touch and her words filled him with truth.\n\nSaint was seated behind the children and his sister was beside her.\n\nShe rose when he made eye contact and approached him. The rest of the family went back to their seats, not everyone thought she should have come, but she had insisted.\n\nTears streamed down her face as she drew closer.\n\nNerina is still an ugly crier, Nic thought, but he made no move to her.\n\n\"If you'd have died\u2014pft,\" she choked down a sob.\n\nNic waited.\n\n\"Nico if you or David would've died, I'd never be able to tell you both how sorry I am.\" She shook her head wildly, \"I don't need you to forgive me. I have to be here for you, in case you need anything. Someone to yell at, or vent to or shake, I'm tough, I won't break. I don't deserve to be a part of your life, but I cannot bear not being your sister. I'll be whatever you need till I earn that back. Nico I'm so sorry. \"\n\nHe had been shot, David had been in a coma, Saint made miracles, and Nerina was in front of everyone vulnerable. If he looked out of the window he was certain rainbow colored rain would be falling upwards. This day had no plot.\n\n\"Rina.\" Nic sighed.\n\nNerina stepped into his arms. She had a growing suspicion about her reaction to David that left her ashamed. But she would be better, there was no other alternative.\n\nDavid was wheeled through moments later the stern staff stopped to raucous a greeting. They swiftly moved to his room. Much to Nic's surprise he was awake. His nurse, Charlotte came in and requested that only two family members enter the room as to not tire out the patient. They waited until the aides left and Nicolao opened door.\n\n\"Pop, why don't you come with me?\"\n\nNatanaele was taken aback. He expected Hilaria to go in the room Nico normally called on his mother, but he quickly recovered. \"Sure Nico.\" He followed his son in the room to check on his newest family member.\n\nEveryone rotated in the room, taking brief looks at David. Nicolao refused to leave the room, but Hilaria convinced him to come into the common area to see his family members and friends off. She insisted he eat some of the food left over from the meal Breezy had delivered. Nieves who had remained behind rubbed his neck and shoulders while he ate. He allowed himself to be pampered, his mother feeding him and his sister easing his aching muscles. Nicolao was teetering on sleep when he bolted upright, startling the women. He had left David. He opened the door to the room to be halted by what greeted him.\n\nWhen Nic entered the room Natanaele was rubbing lotion on Dee's hand, \"\u2014ago, you had no one to call. You won't feel that again David; we have years of gardening to do me and you.\"\n\nNatanaele turned his attention to his son standing in the door, \"You know your mother always said people's skin dries out in the hospital. I thought his hands looked dry.\" He explained placing the sleeping young man's hand back on his chest.\n\n\"Sure Pop, I'll be right back.\" Nic backed out of the room and sat down next to his mother.\n\nThe entire damned day had been too terrible and too wonderful. He dropped his head in his hands. He wept. His silent tears born of fear and gratitude were a thankful remittance to a receptive God, because he lacked words. And as always on his hardest days there was an Evangelista on either side of him.\n\nThe last of his family left for Hope's Cove an hour later. Nicolao sat in the recliner chair he had moved next to David's bed and watched him sleep. He was beautiful, even in the eerie lighting of the machines. David had no remembrance of the day. He wondered about Benjamin finding Dee, but he couldn't be insane enough to come to the hospital, and the floor was secure. The fifth floor provided care for those who wanted more than a standard hospital stay, and who could afford to pay. Cameras lined the halls and between the common area and patients room was another camera monitored by the nurses. Nic's thoughts wandered to the cost of everything, but before his musings went far he was asleep. He woke up a short time later from a familiar feeling.\n\n\"Hey.\"\n\nNic straightened, \"Hello to you. Shouldn't you be resting?\"\n\nDavid looked at him. His throat was still sore, and when he spoke it was slow, and deliberate. \"Was in a coma you said. Think that was my rest for today.\"\n\n\"Funny.\" Nicolao declared and he forced a wan smile for Dee's effort. He leaned forward and grasped his hand.\n\n\"You sleep, I'm okay.\" David squeezed his fingers, hating the change he saw in his lover.\n\n\"That's my line, and I was asleep.\"\n\n\"Bed.\"\n\n\"I won't fit, but I did think about trying.\"\n\n\"Nic\u2014\", David tried to shift his weight, and he grimaced with discomfort.\n\nNicolao was on his feet immediately, \"Are you in hurting? I'll get the nurse she said you can have more meds to manage the pain.\"\n\n\"No more.\" David wanted to explain his fear of too many drugs, but couldn't connect with the words. \"Sit. Sleep.\"\n\nNic acquiesced. He watched as David's eyelids closed. \"Thank you for coming back to me. Bossy.\"\n\n\"Had to. I love you. Ham.\" Dee didn't open his eyes, but smiled.\n\nNicolao did laugh at his retort and eventually leaned the recliner back and joined David in slumber.\n\nThe long cast for David's leg was signed by everyone before they left for home early Sunday. Natanaele Sr., Hilaria, and Nerina stayed behind the first week; Nate, Nieves, and Narisco the next. Their attention was overtly geared toward David but Nicolao, they feared, would neglect his own needs so they equally cared for him. Under their constant attention grated against Nic but he knew better than to resist. He did balk when Narisco or anyone would pick David up. The bulky cast provided him opportunities to carry Dee without protest.\n\nDavid had to adjust to his existence. Benjamin had shot Nicolao and wrecked their car almost killing him. His agonizing headaches mercifully lessened as the weeks progressed. But he tired easily, and thoughts were sometimes as hard to hold on to as water in his fist. There were doctor's appointments, therapy sessions and Evangelistas in every waking hour.\n\nNerina was a stern caretaker who took any opportunity to put things in his mouth, food, tea, or medicine. Her kindness held the same intensity as her disdain. Nieves gave him mani-pedis and insisted they watch horrible movies. Nate read to him, he would nod off to awaken and the gentle voice would pick up the narrative upon his stirring. Narisco told outlandish stories that often left them laughing at some shared memory. David's struggles with his injuries were made easier as he was buoyed by the nurturing of a family. Without their constant presence the schedule would have taken a horrible toll on Nicolao. He learned his place in his new family. The question that plagued him was where was his place with Nic?\n\nNicolao hadn't touched David as more than a nurse since they returned to their home. He never missed an opportunity to touch him, but it was not as a lover. David had a fair amount of bruises and attributed it to Nic not wanting to cause further injury. After the bruises began to heal he thought it was the full leg cast; it was cumbersome. But after the third week and he sported a short leg cast Dee knew there was a deeper reason. Nic would help him bathe, and get dressed with such care. They slept in pajamas, because of the family's occupation, as Nic called it. He did not doubt that Nicolao loved him, but there was a distance between them, greater than physical injury or layers of fabric. David did not fret, he had things he hadn't shared with Nic either. He was sure they would overcome the schism of unsaid things when the time was right.\n\nThe seventh week came and to Nic's relief the removal of David's cast marked the end of the family vigil. The Sunday his two brothers and Nerina packed up the van to not return for a few months filled him with anticipation. He was weary of their attention. He looked forward to washing his own clothes, dusting, doing the dishes, all of the mundane activities that constituted life. He had not used the Volvo Pop left in the garage to do anything but take Dee to his appointments. Whether he had a job or if Jeremy was going to throw them out of Hope's Cove were all unknowns.\n\nDavid stood next to Nic watching the gate close behind the van. They stood in silence then David pivoted on his crutches and looked up at his boyfriend. David's blue eyes shimmered in the sunlight. Nic watched him marveling at the strength of the gorgeous small man.\n\n\"So that's what it means to be a part of a family.\" David said, smiling.\n\n\"Yes, exhausting isn't it?\"\n\nDavid laughed. \"It's nice, better than I would've ever imagined. But for dinner can we get take-out, like we usually do?\" He asked as he headed for the entrance.\n\n\"I wondered if you missed the restaurants as much as I did.\" Nic made his way in front of him opening the door.\n\nDavid went into the dining room and sat down. Nicolao brought them some tea to drink and sat across from him. The appointment had been set without them speaking it, there was much to discuss.\n\nThey sat in silence. Nicolao wrestled with the wisdom of what he was going to propose and David was fairly certain Nic's reaction to his news would be fierce.\n\n\"I told you I heard you in the hospital?\"\n\nNic nodded.\n\n\"There was not light, nothing but my memories and your voice.\" David sipped his tea; memories were a good place to start. \"I remembered Hannah, my mother.\"\n\nNicolao's brow wrinkled, Dee previously only recalled his mother being taken away in an ambulance.\n\n\"I know it wasn't a dream. She had long hair like Ma, but blonde and fine. And she would put me down for naps, only I'd get up and she'd be waiting for me. We'd make scones and I know what her heartbeat sounded like. Our apartment was blue and yellow and it was my babysitter, Mrs. Graham who called the paramedics. I even know my first school. Nic I remember.\" It was imperative that Nicolao understand him, though he knew his explanation was not doing it justice. He had found a missing part of his core self.\n\nNicolao smiled at him, the smile when all of his joy is focused on the receiver. It never failed to make David's breath catch. \"That's great, you knew since the hospital?\"\n\n\"Yeah, it's special for me. And I only wanted to share it with you, if that makes sense.\"\n\n\"Of course, more than enough sense.\" Nic assured him, it was good to know he was not the only one yearning for privacy from the Evangelista Brigade.\n\n\"Strange to think all of the harm Ben caused and me trying to kill myself gave me back something so good.\"\n\nNicolao's smile disintegrated. The silence gained tonnage with each passing second. David tried to read Nic's face, and waited to field questions.\n\n\"Lirio, getting your mother back, I understand what that means to you. I want to know every detail about her; she must've been amazing to have made you. But what do you mean you tried to kill yourself?\" Nic's eyes bore into his.\n\nDavid had begun to recollect bits of the day by the third week of his recuperation. \"Everything happened so fast. I heard the gun go off and you fell, there was blood coming out of your head. When I got to you, you were still.\" David's voice fell, the agony of the recollection demanding an echo of the visceral response.\n\n\"Love.\"\n\nDavid shook his head. \"I thought you were dead. Uncle Ben told me you were dead. And I was in the back seat in the light.\" He paused, reaching for the words to make Nic understand.\n\n\"You pulled me out of the shadows and surrounded me with life. Every ordinary day is full of extraordinary things. Being with you showed me that, but I can't face that without you. I kicked him from the back seat. I made him lose control of the car. I wasn't going to live without you, I caused the accident.\"\n\nNicolao stared at David. The face of the one he treasured was across the table from him waiting. He sorted through his emotions endeavoring to keep anger at bay, but he was fast failing. He had to leave.\n\n\"Dee we'll talk about this later.\" He announced standing.\n\n\"No. We're talking about it now.\"\n\nNicolao did not move from the table, but did not sit. David maneuvered out of the seat grabbing he crutches. He went the short distance to stand close to Nic; he could see his jaw was clenched as he fought with himself.\n\n\"Babe for God's sake say something.\" He demanded.\n",
        "\"Say something? Dio cavolo!\" Nic turned to face Dee. \"Dammit, what is there to say? You tell me! What do you want me to say?\"\n\n\"Something, anything, be honest. I remembered everything and I wanted to tell you the truth. Remember no secrets, no lies between us?\"\n\n\"You tried to throw your life away! Because of me? If I died right now, I'd want you to keep on living! Ma, Pop, Saint, the kids, everyone would be there for you!\" Nicolao heard his voice boom from his chest. He was yelling. He was losing control.\n\nNic was inundated by fear and guilt. David was looking up at him, with the serenity of a Buddhist whilst his emotions roiling within.\n\n\"You're right. I have them in my life, but that's not enough. You were willing to give up your family if they didn't accept me. Right?\"\n\n\"Right, of course, right.\"\n\n\"They're a different part of you. They're a different part of me. I faced a life without you. I told you this before and I meant it. Nothing has meaning without you. If I hadn't made it what would you've done?\"\n\nNicolao dropped his gaze. He knew what he would have done. They both did. He would have found a way to stop living. Drugs, alcohol, reckless sex, he would have courted danger until death was his final suitor.\n\n\"All of this is my fault.\" Nic declared.\n\nDavid blinked in surprise. \"How's that?\"\n\n\"If I had taken care of Jeremy the night I found out he came here or gotten the gun from Benjamin this could've been avoided. I couldn't protect you, I didn't keep you safe.\"\n\n\"Whoa, damn near got a hole in your head trying to protect me even when I begged you not to! And it all did happen so what's the point of these 'what ifs'?\"\n\nNicolao paused. He admired Dee's certainty, it was typical of him. He was all straight lines and easy logic that would let Nic think he were truly alright. However Nicolao knew despair and fear rested firmly in Dee's heart. In their bed David did not scream but spoke and whimpered as he dreamed nightly; a fresh unseen scar.\n\nHe sighed, \"The 'what ifs' have been in my head because I know what this is. But I've had other things before and you haven't.\" David had cut his hair, but it had not met the aim of making him appear older. He looked like what he was, young. \"I don't want you to miss anything or look back and regret being with me. Maybe you should go off to college and date. When you've graduated you can tell me if you still want this, gain more life experience.\" Nic felt nauseous. He did not want David to leave, but they had become the center of one another's world, perhaps too much so.\n\nDavid straightened from his leaning position against the table. He left the right crutch and moved the few feet between him and Nicolao. When he looked at him his eyes were a dark stormy blue Nic had never seen before. He pulled his fist back and swung. The blow landed on Nicolao's chest. The pain in his hand made David wish he had slammed it down on the table instead or maybe bashed Nic's foot with his crutch.\n\nNicolao stepped back, clutching his chest. \"What the--\"\n\n\"Who the hell do you think you are? God! Yeah for a while I thought of you as this perfect god in my head but I'm way over it! You've been strange for seven weeks and all for guilt over shit that's not your fault? You're not even ten years older than me, so get over yourself. You've got to be shitting me? You can't be that thick, pavo est\u00fapido!\"\n\nHearing the insult he endured from August caused Nicolao to snap. \"Thick?\" Nic leaned downward bringing his face an inch from David's. \"I'm trying to build a healthy future for us, one where you don't cry every night in your sleep!\"\n\nDark blue eyes blinked back at him. \"Really, so you came up with that? Why not say something and I start therapy?\" David poked Nic's chest. \"My experiences! Renting my mouth out to scum and gang raped in a bar, I've had enough experiences! Having someone, anyone else touch me is something you think I want? I'm not going anywhere other than where you are, even if that's the grave. Stop trying to fix every god damned thing! Even right now you're holding something back and we're fighting! I finally find word-- I even hit you for being an idiot and you're still holding back. Stop it. I need you to stop it.\" David's voice dropped, his anger depleted but the confusion remained.\n\nNicolao straightened. David, his David wanted the truth of it. After having danced through the gauntlet, there was no more hiding this revelation. An accepted part of himself but something he held back, never certain David was ready. He cast his eyes to the table top then looked directly at his id\u00e9e fixe.\n\nNicolao's liquid brown eyes fell on him and all things disappeared from his perception, there was only Nicolao. Those eyes inexorably pulled everything into them. Black holes could not withstand their draw, of that David was certain.\n\nNic leaned into him, their bodies touching heat merging. David turned his face upward and was unable to suppress the shiver that ran through his body. Nicolao radiated emotions David realized he had only scratched the surface of up until then. The looks he would glimpse occasionally from Nic were precursors.\n\n\"Do you know,\" Nic's rich low timbre was at odds with the fever of his eyes, \"that from the moment you told me your name you've been My David? Mine. As much mine as this body's blood and bone. If Justice hadn't been here I would've beaten him to death for taking away the only thing in this world I can't do without.\"\n\nHe paused, it was an ugly truth, but Dee needed to see him clearly. \"You say I made your life better, but I was chained to my past. Drugs, flipping the car, even obsessing over the memory of August were attempts to find the part of life I was missing. Every day with you highlights how lost I was. This isn't another relationship. It's the last one for me. And yes I did hold back because you weren't completely mine. You needed time. This will not do for right now it never was. I can only see the rest of my life with you in it.\"\n\nNicolao's words made David's heart flutter. The concept of speech escaped him. Nic was talking about building a life together, with him. He had been content to be in Nicolao's life moment for moment, but Nic was offering him everything. Did Nic think he would run away from that? He was mortified to remember that he had done just what Nic feared.\n\n\"I like being your David.\" He simply stated.\n\nNic lowered his head, pulling and turning David as he did. He plundered his mouth in unrestrained hunger and ferocity. David was dimly aware of being lifted and lowered on the table. Nicolao was touching and kissing him everywhere. His clothes disappeared easily; because of the cast he had break-away pants and no under wear. Nic pulled back to remove his own clothing when it occurred to him he was naked on the dining room table but any notion of shame scurried to a forgotten corner with the sight of Nicolao's body. He took in the display standing between his legs. Sculpted muscles, nut brown skin; it ceaselessly thrilled him to look at Nicolao, his Nicolao. The heavy rod of throbbing flesh jutted out from trimmed black hair. The noise that erupted from David was involuntary; a needy repine that triggered more vital fluid to fill Nic's cock.\n\nNic covered his body with his. He savored the feeling of skin against skin. He sucked and kissed Dee's sensitive spots as he coated his over sensitized member with olive oil from the cruet. He noted the shaking of his hands as his long fingers entered David's blood hot channel. Seven weeks ago he would have taken in every sound his lover made, every note feeding his own pleasure. But it was not seven weeks ago and he simply could not savor the margins of lust.\n\nNicolao stood and pulled until David's ass was off the edge of the table, his placed his casted leg on his forearm and rested the other foot on his chest. He held himself at the star shaped entrance and peered down on his soul's lone purpose to find Dee's eyes glazed with unrestrained yearning that matched his own. He pushed into him, the grip on his hip bruising as he halted to give David time to adjust. The nonverbal indication Dee was ready came and he surged into him. David purred, being stretched and filled never failed to overrun his senses.\n\nNic slammed into him quickly and completely each time; every thrust connecting with the heat of his David. As he was impaled David stroked himself. The room filled with the consonance of their bodies joining and inarticulate intonations. Dee basked in Nicolao's relinquishment of control; abandoning restraint for raw and visceral fervor. David tightened his inner muscles and his back arched off of the table as a seizure of pleasure overtook him. Nicolao growled as the motion tripped his orgasm. There was no stopping his seed filling his lover; Dee's body had ripped it from him.\n\nDavid hissed as deepest self received Nic's warm cum. He watched his handsome face as pleasure overtook him. He would get to see that forever, it was exclusively for his eyes only.\n\nThe endorphins faded enough for Nicolao to focus. David hadn't come.\n\n\"Que no se har\u00e1.\" He moved his hips in slow shallow thrusts. He replaced David's hand with his own and jacked his leaking cock. \"That will not do, love, come for me.\"\n\nThat strong hand stroking him and Nic's voice sent David into bliss. As he was coming back to himself he was more aware of the hard table beneath him, and he was grateful Nic had made such a tall and sturdy purchase.\n\nNicolao put both legs on his forearms as he continued to move in and out of David, continuing their primal melding. Dee's body beckoned him. Watching his orgasm filled Nic with the need to remain buried in exquisite calidity.\n\n\"T\u00fa eres m\u00eda, mine. My David.\"\n\n\"Yes,\" he was his David, and he was his Nicolao, but the one syllable was all he could manage.\n\nWhen Nic swelled inside of him and filled him again David was past organized thought.\n\nNic cleaned them both. Clothed they settled on the couch.\n\n\"Sorry I hit you.\"\n\nNicolao chuckled and picked up his hand.\n\n\"It's alright. How's your hand? Lirio, the look on your face! I could see it hurt.\" His voice was light as he rubbed his thumb. \"You had your thumb tucked in, that's a good way to break your thumb.\"\n\n\"I'll have to add boxing lessons on my to-do list right after finding a therapist.\"\n\nNic's smile faded, \"You really want to find a therapist?\"\n\nDavid shrugged, \"I don't think it will hurt. I was pissed when I suggested it, but I don't see the harm.\"\n\n\"I've saved quite a bit of money, so we should be fine until I can find another job,\" Nic paused, \"or we can move back home with Ma and Pop, they did offer.\"\n\n\"What are you talking about? Are you fired?\"\n\n\"Love, I don't know. My usual paycheck's been deposited every payday. But I beat the firm's founder's son to a bloody mess. Even if I'm not sacked I don't want to work there, not with Jeremy or Justice Ethan Hale.\" Nic spat the names out.\n\n\"Okay,\" David drew the word out. \"Babe why didn't you just call Breezy or ask her about it?\"\n\nNicolao pressed his back into the couch. How could he explain all of his fears for Brescia Saint James?\n\n\"Dee, Saint did the impossible and she did it for us. There hasn't been a doctor's bill or prescription that I've paid for and I have no idea how she did it. She said it's not through any insurance; I didn't even get a bill for my head. That means she's routing the money from Jeremy or the firm. In either case I don't know if she has permission or if she's just doing what she thinks is right. Saint should be moving on but the kids said they are going to family for the summer while their mom stays here. There are things about Jeremy she warned me about and now I fear she's gotten herself entrenched.\"\n\nDavid listened. After learning the entire story of what had happened, Nieves had gotten curious about Ethan Hale and his son Jeremy Mylonas Hale. It was mostly rumors, but what was undeniable was his client list. When he was actively practicing Ethan Hale's clients were dangerous.\n\n\"You think Breezy's in trouble and you didn't call her?\"\n\n\"Of course I called her, and tried to approach her every time she came to see you or drop off the kids with Narisco. But she only says she's got it and not to worry. That I had to see to you and she would handle everything else.\"\n\nDavid scoffed, \"And you listened to her?\"\n\n\"I had other things on my mind.\" Nicolao looked at him pointedly.\n\n\"Oh no, don't put that on me. But we need to know what risks she's taking and stop her.\"\n\n\"I wasn't saying it was your fault. But it's been a trying two months.\"\n\nDavid's cheeks flushed. It had been a hard few weeks, and apparently made worse by more of his night emoting.\n\n\"We'll call her tomorrow morning and tell her we're stopping by the office after your cast removal. Agreed?\" Nic squeezed his hand.\n\n\"Agreed.\"\n\nNicolao peered at him, \"You're sure about all of this? Averie is actively waiting on the day when we have kids, she's become obsessed.\"\n\nDavid laughed, \"She's probably made plans to name them.\" He sobered, \"I honestly hadn't planned that far ahead. I could barely believe you wanted me each day I woke up next to you. But I don't think I ever planned on going anywhere, there was no need for you to try and send me away.\"\n\n\"Love, you are my obsession. The very fact that I think of you as belonging to me should send you screaming for the hills. It isn't healthy, but it is how I feel.\"\n\nDavid shook his head, \"And you were deciding for me what's healthy and what's not.\" He motioned and was helped into the bigger man's lap and rested his head against his shoulder. \"I like being your obsession. From the moment I saw you you've been mine.\" He nuzzled Nic's neck.\n\nNic placed a finger under his chin. David followed the motion of his hand until his face was directly in front of Nicolao's. \"I suppose we're equally screwed.\" As he spoke, their faces were so close his lips brushed against Dee's.\n\n\"Not equally, you're one up and it's too soon to try and even it out.\"\n\nNicolao turned predacious, \"Lirio, let's test that theory.\"\n\n****\n\nThe cast was removed early in the day. David could hardly believe the level of muscle deterioration. His dread was short lived; his powerhouse boyfriend began planning a workout regimen as soon as he mentioned it.\n\nNicolao walked into Hale, Loundes, and Drewery hoping there was a notice of termination waiting for him. Instead when he bumped into Ari Rothman the man said he was looking forward to his return. Rothman's smile was tight, but he extended an invitation to David and he to a gathering at his home. He surmised that Saint had somehow secured his income for the time being. They proceeded to the third floor to Jeremy's office.\n\nBreezy was sitting on her desk when they entered. Nicolao noted her personal items were gone, he hoped that meant her days at the firm would soon be over.\n\n\"Hey!\" She greeted them both with hugs.\n\nShe stepped back beaming at David, \"Look at you! You'll be back to dancing in no time.\" She turned and led them to Mylonas' office.\n\n\"Where's Jeremy?\" Nicolao asked after they were all seated.\n\n\"He's taken a sabbatical from his duties here.\" She smirked as she gave him the public line. \"Honestly, I don't think he'll be returning.\"\n\n\"So you'll be leaving soon?\" David queried.\n\n\"No, I'm going to stay on for a bit more. The man has quite a few accounts to settle,\" Breezy cast her gaze from across the desk on them in turn. \"I'm sure you didn't come here to get the low down on my travel plans. I'm happy you called; I do need to discuss something with you both.\"\n\n\"Saint, actually we did come to find out what's going on with you. Don't you think making a break from here is best for all of us?\"\n\nShe shook her head at him, \"No Evangelista, it's not the best thing for me right now. And you two can make that decision after you hear me out.\" She furrowed her brows as she thought. \"Well, I suppose the first thing we should get out of the way is who we've been dealing with. Jeremy Mylonas is the adopted son of Sybil and Ethan Hale, an orphan from the Weeds.\"\n\n\"He's from the Weeds?\" David repeated the statement incredulously while Breezy nodded in the affirmative. \"The Weeds are a part of the Under. It's not really an incorporated part of the city.\" He explained to Nicolao.\n\n\"He was poor, I don't see the relevance.\"\n\nBreezy rolled her eyes, \"I've got a lot of miles to cover in this story, but if you want to skip out on my fascinating tale go make us coffee.\"\n\nNicolao ignored the order and she continued. \"By all accounts Sybil Hale was an amazing woman, Ethan referred to her as Hope. He was by any estimation a genius. Ethan's father owned a trucking company. After he graduated high school at sixteen, he convinced his father to hire him and immediately began trafficking illegal cargo. By the time his father found out it was too late. He watched as his son, with the drug syndicates backing took over his life's work. He broke his father by the time most kids get their first job. Ethan expanded the business, buying other long and short haul trucking companies and went on to college. He got his law degree and by some miracle was appointed a judge.\"\n\nDavid and Nicolao glanced at one another. That did not sound anything like the man they knew.\n\n\"Think about how powerful he was and the connections he made. He stepped down from his judgeship and began this law firm. Then Ethan married Sybil, his Hope for happiness. She found Jeremy and Ethan had two things he loved. He made the decision to steer the firm and his life in a legitimate direction. There were some major busts of his business associates and the possibility of him coming under some scrutiny of a RICO investigation. I guess I should've mentioned Ethan was brilliant, but eccentric.  \n\nSoon after the course correction, Hope became pregnant. Ethan Hale was going to have everything he wanted. One morning she began vomiting. He left her assuming it was a pregnancy symptom, even though it was her second trimester. Jeremy called him about her being ill, but he didn't come home. Confident the maid or Hope would call if he were needed. When he did get home Hope was unconscious and their maid was gone. She was rushed to the hospital where they tried in vain to save mother and child.\n\nJeremy and Ethan believe she was poisoned. The maid never returned to work, and one of his scarier associates let it be known that nothing about his business practices was going to change. Ethan went as clean as he could. He had power, but not enough to withstand a war. And his eccentricities grew over the years. He would forget who he was or who he was speaking to. It could've been trauma or his minds attempt to block out his guilt. His periods of lucidity became shorter and shorter. That was how Ethan Hale became Justice. He's Ethan now and working with doctors to remain so.\"\n\nBreezy picked up a folder on her desk and pushed it toward the pair. They leaned forward as she opened to a handwritten letter. She began paraphrasing the upside down message as they read.\n\n\"All of that leads us to this. Ethan Hale recognizes that his son has caused you egregious harm. This pains him; he considers you and Davey as true friends. Watching you utilize Hope's Cove the way it was meant to be, he feels, you brought a piece of her back to him. He rationalizes he wouldn't be himself if you hadn't moved in. For your friendship and as restitution he had these papers drawn up. All they require are your signatures.\" Breezy moved the letter. \"He is giving you Hope's Cove.\"\n\nDavid leaned back in his chair. He turned to Nicolao.\n\nNic studied the papers. He could feel Dee's eyes on him; he knew he wanted them to sign. But accepting could lead to far too many complications.\n\n\"We can't afford the taxes on that property,\" Nicolao declared.",
        "\"Ethan has authorized money transfers. Go to the orange tab. There are the amounts you agree to accept for pain and suffering. If you feel it's not enough I can get you more.\"\n\nDavid sat up and looked at the amount. He concentrated on breathing; he was overwhelmed and any decision was Nicolao's.\n\n\"If you agree with the conditions sign. You'll also own the storefronts to Hope's Cove.\"\n\n\"Saint,\" Nicolao reached over for David's hand. \"Stop being his secretary. This is more money than any jury would award. As my friend, my sister what do you think?\"\n\nBreezy rubbed her temples. \"I think a madman is offering you financial independence. I've taken obscene amounts of money from that arrogant bastard over the past weeks. Money has no morality, that's one thing you should remember. There's logic to it once you tie it all to the history. This insane man has gone to extraordinary lengths to keep his son clean.\" She shook her head. Would they be reassured or horrified to know how far?\n\nDavid and Nicolao watched as she struggled.\n\n\"He's taken every precaution that no evidence of Jeremy's involvement could be proven if either of you had a mind to try. Jeremy met Benjamin at a bar, that establishment burned to the ground with the owner inside. Any other associates deemed worthy of a conversation with Benjamin have become statics in the known violence of the Under. The private detective was extremely thorough.\" Breezy's eyes hardened as she looked at her blond friend. \"Don't worry about the police not finding Ben, they won't.\"  \n\nDavid watched Breezy's mouth move. Ben was gone. He wasn't happy or sad. It was a fact he learned. Uncle Ben was dead. He was twenty years old and he had no living blood relatives.\n\nNicolao's eyes did not leave David as he spoke to Breezy. \"How can you offer us these pay offs from a murderer?\"\n\n\"Because a murderer is offering to make nice. You never mentioned Jeremy in any police report, so he's giving you a pass. Do you really want to be on this man's enemies list? Take the lunatics benefaction. I'll be here to monitor any change of heart. Plus I don't think this resurrection of Ethan Hale is going to last, crazy don't fall off.\"\n\nNicolao turned his attention to her. \"You can't stay here. Think about the kids you have to get far away from Jeremy and Ethan.\"\n\n\"No, I don't.\"\n\n\"Saint you don't have to stay here to protect us.\"\n\n\"Evangelista I know, but I will. I'm also going to bank as much cash as I can.\"\n\n\"Breezy, you're a good person; you can't work for a man like that,\" David offered.\n\n\"Why not?\"\n\nNicolao stared, the woman was exasperating.\n\n\"Because you're a good person,\" he asserted.\n\nBreezy's dark eyes saddened, the smile that touched her lips lacked any joy. \"No, I'm not. You are, but I'm not. Why do you think I'm always letting the kids come over? So they can know real goodness, not just charlatans like me.\"\n\n\"Saint\u2014\"\n\n\"No saint, I'm a taker just like Mylonas. The desire for things blinds us to the pain we cause, the death. I have to stay. I have to keep you as my family and safe. I have to tell you to sign the damned papers.\"\n\nNicolao searched her face. There was no changing her mind or the truths she had presented. They signed.\n\nBreezy walked them to the door, and offered them a smile, the sincerity of David had never questioned up until that moment.\n\n\"Be careful.\"\n\n\"Always Davey, I swear I'm in my element.\" She hugged him. She no longer felt real, his Breezy was a phantom.\n\nNicolao pulled her into an embrace that pushed the air from her body. He held her for a long moment and dropped a kiss on her head. \"You are a good person. You have to forgive yourself to see it.\"\n\nHer false smile failed her as they parted.\n\nThey existed in a numb fugue after the meeting with Brecia. They had gone to the office with questions and emerged with harsh answers that left them wishing for ignorance.\n\nNicolao drove them home. He pulled into the driveway mentally reviewing what they had just done.\n\nDavid got out of the car but did not head towards the house. Instead he walked to the grass in the center of the five bungalows. He surveyed the dwellings as Nicolao made his way towards him. David through his arms out and hollered, he turned to face Nic, but his weakened leg buckled. Nicolao rushed to steady him, confused as to what emotion he was facing. David turned to him sharply, his beautiful dimpled face beaming.\n\n\"Ha!\" He exclaimed and launched himself on Nicolao's neck, sending them on the soft grass.\n\nNic landed with an umph and David scrambled to sit on his chest.\n\n\"We own it! We own all of it!\" He leaned forward, resting his palms on his shoulders.\n\nNicolao joined in his merriment.\n\n\"I thought you'd be upset,\" Nic said after they managed to reign in their laughter.\n\nDavid flopped on the grass beside him. \"I plan to be later,\" he paused. \"Maybe I won't be I know I should be something other than giddy, but I am. Ethan is Justice and Justice is our friend.\" He turned on his side and looked at Nic, \"He won't hurt us.\"\n\n\"Call me crazy, but I was thinking the same thing.\" Nicolao rolled onto his side. The man lying next to him really did rival the glory of the sun.\n\nDavid inched closer to Nic, \"Babe we should plant a garden.\"\n\n\"Lirio, don't you know? We already have.\"\n\nIn the light of love and life they kissed bathed in the rays that bring flowers to bloom.\n\nFlower translation:\n\nROSE-OF-SHARON - Consumed by Love\n\nFlower and Language translation:\n\nPhlox: Souls united\n\nDog Rose: Pleasure and pain\n\n\u00bfSabe c\u00f3mo tu irresistible que eres?: Do you know how irresistible you are?\n\nme cosume: I'm consumed\n\nme estoy ahogando en que: I am drowning in it.\n\nNunca es demasiado pronto: It is never too soon.\n\nUna y otra vez: again and again...\n\nPaseo me: ride me\n\ncualquier cosa que necesites: anything you need\n\nDio aiutami: God help me (Italian)"
    ],
    "authorname": "seeker71",
    "tags": [
        "gay romance",
        "gay novella",
        "gay love",
        "gay anal",
        "younger male",
        "gay latino",
        "gay drama",
        "drama",
        "latino"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/deciphering-the-bloom-ch-06"
}