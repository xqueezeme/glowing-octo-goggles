{
    "title": "The Azure Rider Ch. 04",
    "pages": [
        "In the absence of Lyla and Sir Blaxton, who had been her constant riding companions, loneliness struck Agatha rather profoundly for the next few days. The infirmary guards who rode with her were no good when it came to conversation, and Agatha tried to strike up several, unsuccessful ones with them for an hour on the first day before giving it up as a bad job. She found that out of the six men who rode with her, two younger ones named Kane and Rowan were slightly more inclined to talk than the rest, but when Agatha asked them about their homes, they fell uncomfortably silent, as though she had asked a deeply personal question. \n\nThe Disputed Corridor was around three days' ride away from the Forgers' mountain, and during the evenings, Agatha entertained herself by sitting beside the campfire in front of her tent and staring into its depths, acutely missing her friend. During this time, she started taking a closer look at the men at the head of the Army. Orion rode at the lead, followed by Sir Alexander, who was subsequently followed by two Major Generals. Agatha had never talked to them, but she was fairly certain that the man with yellow thatched hair and a square face was called Godwin Ashdown and the younger, darker one was called Hervey Wood. \n\nOn the third evening of their journey Orion joined her beside the campfire. Agatha looked askance at him, then went back to her meditation, determined to ignore him as he had been ignoring her. They sat in a strangely companionable silence for a long time, then Agatha decided to break it.\n\n\"I visited Grandmeister Eustace before setting out. His retainer said you had sent for me.\"\n\n\"How did you see him?\" Orion asked softly, throwing her a sideways glance.\n\n\"Not good,\" Agatha admitted. \"He has an uncommon affliction, where his body's infection-fighting cells are attacking his internal organs. A purging spell did not work, naturally, so I healed the affected organs and left him to recuperate. But his affliction will come back again, and there will be a time when the vessel will be too weak to withstand a healing spell.\"\n\n\"How long does he have?\" Orion asked without inflection.\n\n\"Six months at most,\" Agatha murmured morosely. \n\nOrion nodded. \"Thank you,\" he said quietly.\n\n\"I wonder how it feels,\" Agatha continued softly, watching Orion's face carefully.\n\n\"How what feels?\" He asked absentmindedly.\n\n\"To have your son die before you.\"\n\nOrion raised his eyes and glanced about them, checking for bystanders or potential eavesdroppers. There were none. It was late, and most men had retired to the comfort of their tents. Then he dropped his gaze towards Agatha and said coolly, \"it is depraved to take advantage of a senile man.\"\n\n\"I didn't have to ask him,\" Agatha shrugged. \"There were other... indicators.\" \n\nWhen Orion did not answer, Agatha pressed on, \"so how did this happen? Did he leave with you after Penelope's death and then when he was sufficiently trained to control his magic, returned to Rubenstraad under an assumed identity?\"\n\nOrion stared at her speculatively. \"You should not meddle in affairs that are none of your concern.\"\n\nAgatha fell silent. After a while, Orion rose abruptly and scooped her up in his arms. Agatha gasped at the sudden movement, then seized the front of his shirt to balance herself. Orion carried her into his tent and threw her onto his bed. Agatha scrambled to a sitting position and backed away into the farthest end of the bed, putting as much distance between them as possible under the circumstances. Orion closed the flap of the tent tightly and sat at the other end of the bed.\n\n\"What else do you know?\" He asked, his voice even. Agatha fidgeted nervously, regretting her decision to speak earlier.\n\n\"Look, I didn't tell anyone about anything--\" she began, but was cut off by Orion.\n\n\"What. Do. You. Know.\" \n\n\"I just know that Eustace is your second son, that is all,\" Agatha said, \"I swear that is all I know because you just confirmed it. It was mere speculation before that.\"\n\n\"Agatha.\"\n\nAgatha took a deep breath, willing herself to stop shivering. Orion stared at her with a predatory look in his pale blue eyes, his hair coming loose from the ponytail at the back of his neck, and he looked distinctly dangerous and ruthless, capable of every single atrocity she had imagined him to be.\n\n\"Eustace came back, but he sought vengeance on the men who were responsible for his mother's death. He lay on wait, not daring to do anything that would attract attention. When the consumption epidemic struck, he put a deadly, slow acting curse on the people responsible for his mother's death, one that mimics the effects of that affliction. Mages are neither aware of this curse nor can they perform it, only those who can possess magic can cast it. \n\n\"Consumption is an affliction of the poor and the malnourished, usually affecting the residents of crowded slums and underfed children. It is not likely for any of the nobles to have caught it, least of all King Norman, who was in robust health at the time. But such is the superstition and fear surrounding the disease that no one questioned it, and Eustace stayed unnoticed. \n\n\"But, many years later, Prince Elrond suspected of the part that Eustace played in his father's death. Perhaps he confided in you. You staged an assassination attack on Prince Elrond, because historically, you are a man who stays loyal to his family. To escape suspicion, you pretended to be hurt by the same assassination attempt. But Prince Elrond was murdered with a crossbow, and by your description, someone shot at you too. Surely an assassin from the Vandan kingdom would know enough about Dragon Riders to know that it is impossible to kill one with a mortal weapon like a crossbow? \n\n\"But again, no one questioned the sequence of events, because this assassination was well placed, at the wake of a victory by Lohenstraad over Vandan. Additionally, not many people in Lohenstraad are acquainted with the Dragon Rider's healing powers, owing to the fiercely private nature of the only Dragon Rider in the realm.\"\n\nOrion's face grew stonier with every sentence she uttered. When she was finished, he said nothing for a while. Agatha glanced at the doorway again, considering running for her life. But she sat still, rendered motionless with fear.\n\n\"You'll never be able to prove any of your statements. And without that... they are mere speculations.\" \n\n\"I do not wish to hold this information over your head in exchange for a favor,\" Agatha said quickly. \"I was just curious, so I asked people more about you, and things started to fall into place. That is all there is to it. I wouldn't even have told you all of this. Please, Orion let us just forget we ever had this conversation.\"\n\nOrion considered her for a few seconds, then broke eye contact and stared despondently at the only lantern hanging near the doorway of the tent.\n\n\"I tried so hard to let you go,\" he said with a bitter half smile. \n\n\"Because I am a Hartelle?\" The question fell out of Agatha's lips before she could reel it.\n\n\"What? No, you foolish girl,\" Orion said with tender incredulity as he stretched his hand out towards her. Agatha considered it for a few moments, then put her hand in his. Orion's reactions continued to surprise her, but not nearly as much as her own. Orion pulled her closer, his eyes dark in the soft light of the lantern. Agatha, deserting all modesty and good sense that she had inculcated in her from childhood, climbed on to Orion's lap and put her arms around his neck. Orion intertwined his fingers into her hair and pulled her closer for a searing, lingering kiss. His lips were hard and warm, pulling apart her remaining barriers and drawing her out for his perusal, reminding her inexorably of the pleasures that lay beyond the strictures of propriety.\n\nAgatha broke the kiss and breathed, \"then why?\"\n\nOrion pushed her back into the bed and hovered over her with one hand by her face. With the other, he proceeded to unbutton her shirt. He answered only after he had undone the last button.\n\n\"One day, you'll know,\" he responded quietly, moving her shirt to expose her torso. Agatha bit her lip and reached out tentatively, finally allowing herself to touch his face like she had always wanted to. She ran her fingers across his jaw, tracing the shape of his face. Orion stared at her with an unfathomable expression.\n\n\"So, did you decide to break off your engagement?\" he asked lightly, reaching behind her to unclasp the hooks of her breastband. Agatha raised her torso from the bed to assist him and answered, \"I think that ship has sailed a long time ago, Orion.\"\n\nOrion tugged her breastband away and stared at the beautiful, creamy mounds of her breasts. They rose and fell in rhythm of Agatha's erratic breaths and his breeches started to feel uncomfortably tight. When he touched one dusky red areola with his thumb, she sighed, her full lips parting slightly. Orion smiled and rolled a hard, taut bud under his thumb, feeling a dark satisfaction as her breath hitched from his ministrations. \n\n\"When did you change your mind?\" He asked idly, brushing his palm over her breasts and down along the hard, rigid planes of abdominal muscles, the likes of which he had never seen in a woman before. Admittedly, he had not been with many women in his lifetime, but he had always thought of them as fragile, breakable creatures. The girl lying under him was anything but, both in physique and temperament. And Orion wanted her like he had never wanted anyone.\n\n\"About five minutes ago,\" Agatha whispered desperately. Orion chuckled, and with it, he suddenly looked ten years younger. \"You should laugh more,\" Agatha whispered, cradling his face in her hands again. Orion considered this suggestion with an unconscious smile as he pulled her breeches off from her. Her boots followed, and for a few moments, Orion knelt by the foot of the bed, admiring her exquisite body in the dim light. Despite the rippling muscles along her abdomen, her hips flared out femininely. A furrow ran along the outer side of her thigh and down along the side of her calves. Agatha swiveled her legs over to one side, feeling self-conscious from Orion's inspection.\n\n\"What?\" she propped herself up on her elbows and frowned at him.\n\nOrion shook his head and wrenched her legs open. He trailed his fingers down her inner thighs, watching her face carefully. Agatha bit her lip and fell back into the pillows, her eyes glazed with lust. His introspective fingers stopped right next to her mound, his thumb tracing careless circles at the junction of her inner thighs and lips.\n\n\"Should I be aware of any hidden mason jars?\" He enquired, his eyes twinkling.\n\nAgatha rose and started to run her fumbling fingers through the buttons of Orion's shirt. Orion pushed her back into the bed and continued to unbutton his shirts, his fingers moving through them faster than her uncoordinated ones. His breeches followed, and Agatha's eyes trailed down his torso and came to rest on his erection, a flicker of uncertainty in her expressive emerald eyes. Orion wanted to bury himself inside her in one swift stroke, but he restrained himself. She was not ready for that yet.\n\n\"No mason jars,\" Agatha promised.\n\n\"Daggers?\"\n\n\"As if they'd do anything to you,\" she said with mock wistfulness.\n\n\"I assure you that both would hurt, the blade excruciatingly so. But yes, then I will heal.\"\n\nAgatha bit her lips, considering this new information with an alacrity that Orion did not like at all.\n\n\"Planning on stabbing me anytime soon, Princess?\" He asked, lowering his head down to her breasts and taking a nipple in his mouth. He sucked it gently, the unmistakable scent of her arousal filling him up like warm mead, and grasped the other breast in his hand, squeezing it. Agatha entwined her fingers in his hair and bit down on a whimper. He could feel her struggling to rein in her responses to him, still clinging on to some imagined notion of propriety and Orion decided he could not have that. \n\n\"Only if you get too overbearing,\" Agatha quipped, then squealed as Orion bit her nipple. Orion laughed and flipped her on her stomach, raising her hips with one hand under her pelvis. The other hand moved down to her vagina, inspecting the swollen, soaked folds. He started to move his thumb around her clitoris and this time, Agatha could not hold back a little moan.\n\n\"Do you like this, Princess?\" he asked, sliding two fingers into her tight channel. Agatha did not respond. Orion stopped moving his fingers, eliciting a groan out of her. \n\n\"Not again, Orion!\"\n\n\"When I ask you a question, you will answer,\" Orion said, resuming the slow massage over the tiny bundle of nerves.\n\n\"I like it.\" Her voice was nearly inaudible.\n\n\"Louder.\"\n\n\"I like it.\"\n\nOrion decided to reward her. His thumb strummed her faster, and when her peak crashed over her, Agatha clapped her hand over her lips, trying to muffle out her cries. Orion lay down on her, held his shaft and rubbed it across her entrance, spreading out the moisture. Then he paused, holding his throbbing cock near her entrance.\n\nWaiting for his woman to break.\n\nSoon enough, she tried to push herself back onto him. Orion stopped her by grabbing her hips and tutted.\n\n\"What do you want, Princess?\" he asked huskily.\n\n\"I want you to stop calling me Princess!\" she growled. Orion grasped a handful of her wavy, silken hair and turned her face so that one of her ears lined up with his lips. This time, his voice was barely a whisper:\n\n\"What do you want, Agatha?\"\n\nAgatha's answer was halfway between a sob and a gasp.\n\n\"I want you.\"\n\nOrion raised her up so that she could prop herself on her hands, then entered her slowly, allowing her to adjust. Then he pulled himself out and rammed into her, and Agatha gasped at the heady mixture of pleasure and pain. Orion felt his control slip away from him like water on cupped hands as he pounded her from behind. Agatha's head and shoulders collapsed on her folded hands with the force of his thrusts. Orion reached around her legs and touched her clitoris again, pressing it down with his index finger. She came almost immediately, her body going rigid, her face burrowed into the pillows to muffle her screams. The walls of her channel came convulsing around him and undid his control; with a few sharp thrusts he emptied himself into her.\n\nAgatha collapsed into the bed, breathless and drenched with sweat, but oddly relaxed. Orion reached for a cloth and wiped the fluids from between her legs, his movements gentle.\n\n\"Are you hurt?\" He asked tenderly.\n\nAgatha shook her head, too exhausted for a verbal answer. Her eyelids started to droop as Orion pulled her backwards into his chest and covered both of them with blankets.\n\n\"Orion,\" Agatha murmured sleepily.\n\n\"What?\"\n\n\"Was I right?\"\n\nOrion was silent for so long that Agatha opened her eyes. When she tried to turn towards him, he stopped her and started speaking.\n\n\"When Prince Elrond was two years old, he caught a deadly affliction. A growth had formed on his neck and the court physician, Meister Aelfdene declared that it was an incurable condition. Physicians were summoned from far and wide, from the remotest corners of Lohenstraad and Vandan, but every single one of them agreed upon the diagnosis, that the boy could not be saved. As the days wore on, his pain increased. There were days when no chambermaid would go near his wing because he screamed in excruciating pain all day, even at night.\n\n\"Penelope could not take it anymore. I asked her not to interfere, but she would not listen. She sneaked into his bedchamber one evening and healed him. I don't know why she did not use the Haze, perhaps she was secure in her assumption that there was no one present in the wing. Perhaps the piece of magic she was using already took up too much of her energy for her to cast a Haze. When she returned to me that night, she was pale, weak and shivering. I knew right away what she had done. I did not argue with her, just ensured that she ate and recuperated. But as luck would have it, a chambermaid was present in the next room. She saw Penelope working on a powerful healing spell, one that could not possibly be misinterpreted for the magic of an ordinary mage. \n\n\"You know better than anyone how rumours spread in this castle. At that time, King Norman considered me as a friend, and asked for my opinion on every action he took. It rubbed off the wrong way on a group of nobles, who felt that the King was becoming dangerously dependent on one individual. They started poisoning him against me, telling him that I sought the throne. While King Norman was an honorable man, over time he turned against me, and he was convinced by his new confidants that the only way to put me in my place was to punish my wife for being a witch.\n\n\"Prince Elrond had no recollection of Penelope's actions for a long time. But he, like you, pieced all the information together, and confronted me about it. While I never supported my son's quest for revenge, I could not lose him either. So, I did what had to be done. \n\n\"There is a band of assassins in the Vandan Kingdom called The Sacred Hand. They are fiercely loyal to the De Clare family, the royal line that ruled Vandan before King Andebert Olbrecht ascended the throne. Incidentally, King Olbrecht's army was responsible for the murders of King Arthur De Clare, his wife, the Queen Consort Estrilda and their daughter Esmeralda, who was but a babe at the time. The Sacred Hand had nursed a longtime grudge against Prince Elrond because at one point, he had handed over the last known living descendant of the De Clare family, Arthur's illegitimate son, Robert, over to Vandan, as a show of mutual trust and goodwill while signing a Treaty. Robert was swiftly executed after he was handed over, as he had a competing claim to the throne of the Vandan Kingdom.\n\n\"I sought out members of The Sacred Hand in disguise and offered to share the location of Prince Elrond on a certain day at a certain time. They were wary of me at first, but on the proposed day, I went riding with Elrond at a fairly secluded forest in the outskirts of Rubenstraad. The assassins from the Sacred Hand did their work. They did not know that I was their employer or the Azure Rider, so they shot at me too. It helped me escape suspicion in playing any part in Prince Elrond's death.\n\n\"Not a day goes by when I do not regret it, for Elrond was an honorable man, a skilled fighter, a benevolent General to his men, and lastly, a good friend. But I would do it again to anyone who jeopardizes my son's life.\"\n\nAgatha was quiet for a while as she assimilated this information.\n\n\"Did Grandmeister Eustace make you the ward that you wear around your wrist?\"\n\n\"Yes. It shields me from most magical curses out there, as you saw for yourself the first night we met.\"\n\nAgatha was quiet for a while again.\n\n\"Thank you for your honesty,\" she finally whispered, and allowed sleep to take her away.\n\n***\n\nThey arrived at the Disputed Corridor the day after. Tents were erected, trenches were dug, artilleries were transferred from carts to their designated positions, and traps were laid out. The camp was two miles south of the battle lines and Agatha spent the majority of her day staying out of everyone's way while setting up her workstation. Her work did not start until after the battle started. The infirmary tent was put up by the men assigned to her and cots were laid out, potions were set to brew and herbs and flowers were hung out to dry. She did not see Orion throughout the day, but as the sun started to dip in the sky the wounded started to trickle in. Agatha set about with her magic, confining herself to discreet healing spells and laying out the potions the patients would need to take by their bedside while two of the assigned infirmary soldiers moved obediently in her wake, ensuring that the wounded took the potions and that their gashes were bandaged. By the end of the day, most of the soldiers who had been carried into the infirmary plodded out of it. The ones who had to spend the night were in reasonably stable conditions. ",
        "Orion came to collect her from the infirmary after dusk fell, about an hour after the sounds of battle had died out. Agatha insisted that she had to stay for the remainder of her patients, but he would not hear of it.\n\n\"You'll dine with me,\" he said, all but hauling her out of the infirmary. They ate together, coupled like wild beasts, then fell asleep in each other's arms. In the morning Agatha crept out of Orion's tent and went into the infirmary again, feeling ephemerally exuberant despite the grimness of their circumstances. \n\nAs the days wore on, however, the happiness started to flicker out. Men began to die in the battle grounds and on the way to the camp hospital, but the ones who reached the camp physician always lived to fight another day. The first snow of the season arrived, bringing with it a cruel wind from the north. As the pile of bodies started to grow higher in the trenches, Orion seemed to grow moodier, the playful twinkle in his eyes replaced by a permanently haunted look. After a particularly bad day, he would often throw Agatha down onto his bed and fuck her savagely without any attempt at foreplay or intimacy. Agatha discovered that afterwards, if she held him in her arms, stroked his hair, kissed him and murmured soothing encouragement to him, his agitation and desperation often melted away, to be replaced by an intensity that sometimes scared her more than his fury. \n\nOn the sixth day, the camp came under attack at night. Agatha awoke from a deep slumber to find a wild commotion on the grounds outside. Sir Alexander was inside the tent, all but shouting at Orion, who was putting on his mail.\n\n\"They have leviathans with them, Orion, we have to run, we cannot stay here.\"\n\nOrion seized a wooden stake from under the makeshift nightstand beside his bed and handed it to Agatha.\n\n\"Hide.\"\n\nThen he put on his visor and was gone. Sir Alexander threw a vicious look at Agatha and left.\n\nAgatha rose groggily, blinking sleep from her eyes and dressed, the shouts and clashes outside jarring with her sleep-befuddled brain. A fresh round of snow had fallen the day before and a deep chill had settled over the land. Agatha shivered, then turned towards the empty mason jar that she kept on top of the nightstand. Ever since sleeping beside Orion, she had not needed its warmth, for he radiated heat like a miniature furnace. But now she uttered a nearly silent spell to light up the mason jar, wrapped her rapidly freezing fingers around it, and wondered fleetingly if by 'they' Sir Alexander had meant vampires. Agatha murmured a second spell, one that would not allow any vampire or dark creature to cross the threshold of the tent uninvited, then decided that she was being selfish. She noticed that Orion had left his brown cloak behind. She wrapped it around herself, securing the dragon-shaped iron clasp on her neck, and realized gratefully that the cloak was nearly as warm as its owner.\n\nThen she stepped out of the tent into the chaotic night. \n\nAgatha was not prepared for the scene that greeted her. Bodies lay scattered on the ground, mangled and bloodied beyond recognition. Men ran helter and skelter, often followed by or following leviathans. Agatha, who had never seen a leviathan before, had expected that they would be more imposing than the feral dog-like creatures that streaked about, until she witnessed one of them pounce at a soldier from behind with chilling precision and tear out his windpipe with a sickening crunch. The leviathan uttered a single, blood-curdling growl of victory and started feasting on its prey, tearing the man's belly and pulling out his entrails in swift succession.\n\nAgatha took a deep breath and started moving sideways, until there was a reasonable distance between her and the monster. As she inched towards the kitchen tents, she witnessed a few more bodies that provided irrefutable testament to the presence of vampires. Unlike leviathans, vampires were fastidious about their manner of hunting, less brutal, almost graceful, often leaving their prey practically blemish-free except two pinpricks on their neck. Agatha moved swiftly between the victims, checking for their pulse. About half of them were dead, drained to the lees by the invaders, the other half still breathing, their unnaturally fast pulses indicative of the venom in their bloodstream. Agatha moved between them in silence, whispering the Purging spell with a feverish urgency and wishing that she had eaten more at dinner.\n\nShe made it through the outer barracks and up to the kitchen tents without being spotted, then her good fortune ran out. The growl alerted her to the leviathan's presence before she saw the monster, and Agatha stopped dead in her tracks, turning slowly to face it. The leviathan poised itself on its hind legs, ready to pounce, but Ice swooped in from nowhere and bit off the head of the creature in mid flight. The head dropped from Ice's maws a few meters away and he was soon out of sight. Agatha sighed in relief and could not help noticing that Orion was not riding Ice. Not this time. He was probably somewhere out there on the ground, fighting shoulder to shoulder with his own men, refusing to desert them even in a losing battle.\n\nAgatha peered inside the kitchen tent to find the cooks and the kitchen lads huddled in a corner, feverishly praying to every god that was worshipped in their godforsaken country. Agatha stood with her back by the thick fabric of the tent, put one arm over the flap and muttered the words for a simple invisible protective charm, the very same that protected Orion's tent at the moment. When she was done, she waited for as long as she dared before barging inside. The inhabitants stared at her wearing identical masks of stunned fear.\n\n\"Stay inside the tent. Do not invite anyone inside. Do you understand?\"\n\nThe head cook nodded imperceptibly. Agatha almost left, then she remembered something and paused on the doorway.\n\n\"Do you have food?\"\n\nThe head cook regarded her as though worried for her sanity, then pointed silently towards the large storage containers at the back of the tent. Agatha raised the lid of one container, selected a block of aged cheese and, ignoring the mingled looks of incredulity and bewilderment from the kitchen staff, walked out of the tent. To make matters worse, a light snow had started to fall again, collecting on the tops of the tents and in her hair.\n\nShe moved on to the infirmary next. Fortunately, it was empty except for her overnight patients. Agatha repeated the protective charm on the entryway of the infirmary and moved on to the squires' barracks. She found it in a state of absolute, devastating carnage. The monsters had attacked the outer barracks first, and the inhabitants had been slaughtered in their sleep before they could gather their bearings. Agatha moved through the bodies, checking the pulses of the men, seldom needing to sing a Purging Spell.\n\nShe moved on to the pages' quarters after that, turning the inert bodies over and checking for a pulse. When she was nearly at the end of the process, a rustling noise alerted her to the presence of another living being inside the tent. She rose and turned slowly at the spot to find herself face to face with a short, slight boy of twelve. \n\n\"Are you alright?\" she asked cautiously, cocking her head to have a better look at the boy's face. Even in the warm light pooling from the lanterns, the boy looked pale and bloodless, with dark shadows under his eyes.\n\n\"What is your name?\" she asked again, taking a tentative step towards him when he did not answer. \n\n\"Help me,\" the boy said, his eyes widening in terror. He stepped back from Agatha and slapped his hand over his mouth and nose, as though he had smelled something particularly revolting. It took Agatha a moment to realize what was wrong. The boy had been bitten some time ago and had turned. He needed to feed in order to complete his transformation. The Purging spell would not bring him back to human form now. \n\nFor a fraction of a second, Agatha considered allowing him to feed on her and then send him away. Anything to avoid the grim alternative that loomed on the horizon. But young vampires had virtually no control over their bloodlust, and that coupled with the inhuman strength that the vampires possessed spelled disaster as far as Agatha's little plan went. Resigning herself to the inevitable, Agatha gripped the stake tightly in her right hand under the cloak.\n\n\"Do you want cheese?\" She held out the remaining hunk of cheese using her other hand, in a ridiculous attempt to distract the boy. The boy shook his head.\n\n\"It will be alright,\" Agatha whispered, taking another step towards him. Maybe she did not need to kill him. Maybe she could run away and let someone else do the dirty work. \"Everything will be alright.\"\n\nThe boy moved his hand from his mouth and hissed, baring rows of pointed incisors. At that moment, he looked distinctly inhuman. Before Agatha could get her bearings, he leapt at her, his movements so fast and fluid that they were nearly blurred. Agatha found herself flattened against the cold, hard ground with the young vampire on her chest, his hands wrapped around her neck. Agatha writhed, trying to throw him off, but he was too strong for her. As her vision started going black, the boy relinquished his death grip and lowered his face down towards her neck, his teeth bared. Agatha raised one hand, and taking advantage of his momentary lapse in concentration, drove her elbow into his shoulder, causing him to topple sideways. She lashed out with her other elbow again, this time connecting with his face. Then she rose from the ground and pinned the boy under her and tried to plunge the stake into his heart.\n\nOnly, it did not go in. Not as easily as a blade anyway. Hating herself, Agatha put the weight of her body on the stake, watching with mounting self-loathing as it inched in slowly. Then it got stuck, possibly on a rib. Withholding a desperate sob, she twisted the piece of wood in her hand, seeking an entry. With a sickening crunch, it sank in, and with it, the light went out of the young page's eyes. \n\nAgatha stepped away from the body, shuddering uncontrollably, fighting the tears that threatened to choke her raspy throat. The boy's face had turned into a natural, humane pale with death, and Agatha cringed from the horror and self-deprecation that washed over her in merciless waves. She wiped her otherwise clean hands on the cloak in a futile attempt to rid herself of the guilt and ran out of the tent, blindly careening towards the infirmary tent. Mercifully, she encountered no one on this last journey. The clamor of battle seemed to have died down considerably in the short time she was inside the squires' barracks, but it was not immediately clear which side had won, the humans or the vampires, and Agatha discovered that she did not care. She crawled under one of the infirmary cots, wrapped herself up in a cocoon with Orion's cloak and tried, with every shred of willpower in her battered body, to think of nothing at all.\n\n***\n\nRowan found her after a while. Agatha did not know how many hours had passed, nor did she care; she had slipped into an uncomfortable trance where she found herself murdering an unnamed little boy for no crime other than being in the wrong place at the wrong time. She was awoken by Rowan's gravelly voice.\n\n\"Miss Hartelle.\"\n\nAgatha jumped and promptly hit her head on the side of the cot. Massaging her head, she peered at the swarthy, familiar face and asked, \"what?\"\n\n\"Have you been here all this time? The General was out of his mind with worry.\"\n\nAgatha rolled out from her hiding position, hopelessly tangled in the oversized cloak. She rose to her feet awkwardly and surveyed her surroundings. The rest of the men were hauling pale, unconscious bodies into the infirmary.\n\n\"Is it over?\" Agatha asked groggily, pushing hair out of her eyes.\n\n\"Yes.\"\n\n\"What is the time?\"\n\n\"Not long until dawn, now.\"\n\n\"How many dead?\"\n\nRowan's face darkened at this question. \"Still counting, Miss Hartelle.\"\n\nAgatha nodded, but before she could say anything else, the flap of the infirmary tent was thrown aside, and Orion barged in. When he saw her, something akin to relief flashed across his features and he made a beeline for her.\n\n\"Why did you come here?\" he asked harshly, seizing her by her upper arms. \"Are you alright? Were you bitten?\"\n\n\"I ... I am alright,\" Agatha answered shakily, taken aback by his brusque conduct. Orion adjusted the cloak that she wore, tugging the clasp so that it was positioned below her chin. The dark expression in his eyes lightened, but then it was gone, and the brooding mask returned.\n\n\"D-Do you want it back?\" Agatha enquired, noticing that he was not wearing a cloak despite the freezing temperatures outside. \"I took it because it is warmer than mine.\"\n\n\"Keep it for now,\" Orion said shortly, then turned to Rowan. \"Ensure that she eats.\"\n\nThen he was gone. \n\n***\n\nOrion walked back to his tent at a brisk pace, his boots crunching on the freshly fallen layer of snow. He found Sir Alexander and the two Major Generals sitting around the spindly table by his bed, their expressions grave and drawn.\n\n\"We should have seen this coming,\" Sir Alexander began irately before he had a chance to draw up a chair. \"We had multiple reports from our informers about the bloodsuckers crossing the borders. We should have known that they would join the side that does not mind them feeding on humans, in fact, bloody well offers up humans on a silver platter.\"\n\n\"Care to elaborate, Sir Alexander?\" Major General Godwin asked patiently. When Sir Alexander did not answer, Orion spoke up.\n\n\"We had been receiving reports that numerous feeding houses had been opened up across Vandan. These are, as is evident from the name, places where the vampires can visit to feed on willing, or partly willing humans. Deaths are common in feeding houses, though frowned upon. Since our treaty with the vampires forbid them from feeding on humans, a segment of vampires has been migrating to Vandan for the last few years. Vladimir has staunchly maintained that his clan has no relation with these migrators, but as you probably already know, Vladimir's statements are consistently unreliable.\"\n\n\"That is ... preposterous,\" Godwin said.\n\n\"Yes,\" Orion nodded. \"We had not given much thought to it because it meant lesser bloodsuckers in our territories, but--\"\n\n\"You mean, you had not given much thought to it,\" Sir Alexander said scathingly. \"I told you multiple times that something was afoot, that no one would willingly invite an influx of bloodsuckers, but you did not listen.\"\n\nOrion raised an eyebrow at Sir Alexander. \"I remember undertaking every single course of action you suggested at that point, including posting more troops in the Disputed Corridor. But that matter is neither here, nor there. What we need to discuss is how to take care of our current problem.\"\n\n\"How do they find willing humans for the feeding houses?\" Hervey asked.\n\n\"It was Fredenand's idea. Obviously.\" Sir Alexander growled. \"On parchment, it is ordained that the participants must be rotated in a sequential fashion, and every citizen must volunteer for some time in the feeding houses, but in reality, whenever Fredenand dislikes someone's conduct, which is nearly every minute of his waking hours, that person gets sent to a feeding house. There had been some discontent after multiple chambermaids died of rapid blood loss, but of course, his activities remain unchecked.\"\n\n\"So, all along, they had planned to use the bloodsuckers against us?\" Hervey asked.\n\n\"Obviously. I suggest we leave before night fall. We can't take another night of that, Orion,\" Sir Alexander said. \"Let us leave, regroup with Blaxton and return with the entire army, along with the Forger's weapon. It was foolish to come here without Blaxton's regiment.\"\n\n\"If we leave now, we lose the Disputed Corridor,\" Hervey said.\n\n\"So, what is your plan, staying here and watching our men get decimated every night? Surely you cannot be as stupid as you look, Hervey,\" Sir Alexander snapped.\n\nOrion started to drift away from the heated debate, his thoughts bleak and his countenance grim. He had told himself that the Thistle Princess need not be handed over, that they could prevail in this battle without resorting to giving her up, but he had been lying to himself for quite a while now. Without Sir Blaxton's regiment, they had been ill-equipped to win, and now with an additional non-human adversary looming on the horizon, victory seemed a nigh impossible feat. After a few moments he realized that the three men were staring at him expectantly.\n\n\"Daydreaming about your little witch, aren't you?\" Sir Alexander said softly, his voice dangerous. \"It is your incompetence that has led us to this mess, Orion. You have become soft.\"\n\nOrion chose not to grace the invective with a response. Instead, he turned to his men and said, \"get some rest. I shall take care of this situation.\"\n\nSir Alexander stayed back after the Major Generals left. \n\n\"Did you want something?\" Orion asked, rubbing his temples wearily.\n\n\"I know, Orion,\" Sir Alexander said, leaning over the table and breathing into his face. \"I know all about your little sex pet. No physician I have ever encountered has a perfect success rate like she does, and you have ordained that no one enters the infirmary tent except your men. I know what you are hiding, and let me assure you, when we return, she is going to burn at the stake just like your beloved wife had.\"\n\nOrion stared impassively at the man, willing him to leave.\n\n\"Of course, unless you feel generous and give her to me,\" Sir Alexander shrugged. Orion continued to stare at the man without any inflection, resisting an irrepressible urge to choke him to his death. \"Think about it,\" Sir Alexander said and walked out of the tent. \n\nOrion pulled out a scroll, a bottle of ink and a quill and set about penning a missive. When he finished writing the snow had stopped and the sky had a faint grayish tinge on the eastern horizon.\n\n***\n\nAgatha was waiting by one of the beds of the infirmary when an arm of steel drew her into an embrace from behind. Agatha gasped, then relaxed against the comforting hardness of Orion's chest, elbowing him a little. \n\n\"You scared me,\" she rebuked, trying to turn around to see his face.\n\n\"It is hardly my fault if you are as jumpy as a rabbit,\" Orion said, resting his chin on the top of her head and trapping her arms in his hard embrace.\n\n\"Orion, there are other people here,\" Agatha admonished.\n\n\"I do not care. Come back to my bed, Princess.\"\n\n\"Only after these men wake up,\" Agatha said firmly, gesturing towards the cots. The last of the bitten soldiers had filled up the beds, and with the help of strategically supplied snacks by Rowan, Agatha had managed to Purge them all without falling unconscious. She was exhausted beyond measure, though, and was grateful for the comforting pressure at her back.\n\n\"How many dead?\" Orion enquired of Kane, who was passing them by, keeping his eyes discreetly averted.\n\n\"Fifty-seven, General,\" he answered before sidling away. Orion heaved a sigh and pulled Agatha tighter against his chest.\n\n\"And how many did you work on today?\" he asked Agatha.\n\n\"I do not remember,\" Agatha admitted.\n\n\"Kane? How many recovered?\"\n\n\"Forty-five, General.\"\n\nOrion kissed the top of her head and said, \"thank you for saving my men.\"\n\nAgatha smiled wanly. Dawn was breaking outside the infirmary tent, but her heart was still heavy with the horror of what she had done. \n\n\"I killed a boy,\" she whispered dully, resting her head against Orion's chest and closing her eyes. \"He had turned. He was going to feed on me. I didn't even know his name.\"\n",
        "Orion said, \"it gets easier with time,\" then scooped her up in his arms.\n\n\"Orion! I have to stay,\" Agatha protested. When Orion did not answer, she said, \"you have to stop doing this.\"\n\n\"It has been a long night. You need to rest.\"\n\nAgatha gave up and wrapped her arms around his neck, feeling self-conscious as men turned to look at them as Orion strode through the disarrayed campground. The fallen soldiers had been disposed off by now, thankfully, but smoke rose from scattered pyres intended for burning the bodies of the dead vampires and leviathans. Dead vampires had been known to reanimate themselves if not cremated properly and clearly the soldiers had decided that it was not worth taking that risk with the leviathans either.\n\n\"Do you have any plans to return my cloak?\" Orion asked, distracting her.\n\n\"Can't I keep this?\" Agatha asked, resting her head against his shoulder, soothed by the gentle rocking motion of his stride. Orion sighed and said, \"as much as I enjoy watching you stumble and flail around in that, I'll have to ask you to return it eventually. It is getting quite chilly.\" When Agatha pouted childishly at that, he said, \"I will get you one that is as warm as this one. Most importantly, it will be in your size, midget.\" Orion felt guilty about making a promise that he knew he would not be able to uphold, but he had so many reasons to berate himself already that he did not bother to add this to the long list.\n\n\"Did you just call me a midget?\" Agatha scowled at him as he entered his tent and placed her on her feet. Orion smiled a little and unclasped the cloak from around her neck. Her shirt, breeches and boots followed in quick succession. Orion propped her up on the edge of the table and swept her into a deep, searing kiss. Then he took off his shirt and pulled her against himself, her soft breasts crushed by the hardness of his chest. Agatha twisted her hands into his hair, her lips falling open submissively under him with a whimper at the back of her throat. \n\nOrion unbuckled his belt and lowered his breeches to free his cock, then tucked one of her legs against the crook of his elbow, opening her up to him. He entered her slowly, watching the growing rapture in her limpid eyes. \"You're beautiful,\" he said gruffly, kissing her lips. Then he started to pump into her in long, measured strokes, grinding against her pelvis with every entry, burying himself into her soft heated core like a madman.\n\nAgatha whimpered imperceptibly under him, taking what he gave her like she always did, reveling in the loss of control that he offered her. Orion stared fiercely into her eyes, their breaths mingling together, warm and aroused. When she started to trace her fingers over his shoulders, his thrusts grew erratic. She came with him, her pussy milking up the last drop of his seed.\n\nOrion held her in his arms for a few moments, reluctant to burst the tiny golden bubble he found himself in. But a clatter of hooves stopped right outside the entryway of his tent, and the page that he had sent to the enemy camp with his missive called out for the General, stating that he had brought the response from King Olbrecht himself. Orion kissed Agatha's soft, pliant lips one last time and set about putting on his clothes, relinquishing his hold on a life that was never meant to be, and bleakly reflecting that for the foreseeable future, the Sacred Hand would be the least of his problems.\n\nAuthors note: \n\nHi all,\n\nSo, I tried to write longer sections, but turns out that the chapters are naturally short. Let me know how you feel about this one. Thank you for reading. \n\n~Ash\n\n \n"
    ],
    "authorname": "Ava_fern",
    "tags": [
        "fantasy",
        "dragons",
        "vampires",
        "war",
        "leviathans"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-azure-rider-ch-04"
}