{
    "title": "Secret Smiles and Three Little Words Pt. 29",
    "pages": [
        "Chapter 32 \n\nGavin met her at the door with his lips, she dropped her bag and kissed him back with a smile. Her hands wrapping around him, then begrudgingly she pulled them back. This whole not touching him thing was killing her. She wanted to touch him all the time. But now with her sister back home in Pennsylvania, she was back in her BDSM world and that meant she couldn't touch him. Only out in the vanilla world could she hold his hand, or run her fingers through his hair. \n\n\"Missed me, did you?\" she smiled when he broke his welcome home kiss. \n\n\"Maybe,\" he grinned. \n\n\"That felt like a little more than a maybe,\" she pointed out kissing his neck. \n\n\"How could I not miss you?\" he asked her picking up her bag and walking with her back to the bedroom. \n\nAs she laid in his arms after their lovemaking as she listened to his heartbeat. It was a solid thump, thump, thump. It was hypnotic, and very comforting. It was as if his heart was beating for her and her alone. She loved that thought, it brought her a peace she had never known. \n\n\"Hey,\" she said picking her head up and looking at him. \"In case I forgot, thank you for letting me bring Livy and Nora here.\" \n\n\"You did not forget,\" he smiled at her. \"That is like the tenth time you have thanked me.\" \n\nShe slid up and began to stroke his face gently. \n\n\"What are you thinking?\" he asked her. \n\n\"Just how perfect you are,\" she smiled. She put a finger over his lips as he was about to say something. \"Just hush.\" She said lowering her lips to his knowing he was about to crack some joke about how just imperfect he was. Alex wished he could see himself through her eyes. \n\nThe phone ringing on the nightstand had her pulling her lips off begrudgingly. She cast an angry scowl at it. \n\n\"I'm sorry,\" Gavin said as he reached over to it. \n\n\"This whole sharing you thing has got to stop!\" Alex teased. \n\nShe smiled like she was teasing to him and he winked at her. Deep inside, she wasn't kidding. She wanted some time away with him. Time that didn't include patients. That didn't include her family. That didn't include anything but each other. \n\nShe wanted time where getting dressed wasn't an option. Where the clock didn't matter, where time didn't matter. She wanted to just be. To just be with him. To be his only desire. To be his only thought. To be his only quest. \n\nAs he talked on the phone she slid from bed, he was leaving so there was no use to staying in bed anymore. So much for the idea of staying in bed the rest of the day and making love to one another. \n\nHe joined her in the shower as she washed their sex from her. His hands rubbing soap on her body had her sighing in blissful breaths. If he had to leave her, this was an excellent apology. She turned once he was done with her and she began to wash him. She could see his eyes protest only momentarily, but her eyes squashed any comment from him. \n\n\"We may need to re-evaluate this relationship,\" he told her firmly causing a sudden panic to wash over her. His winking had her heart back to beating as it had seized in her chest. \n\n\"I can't bathe you?\" she asked him as she figured out what he was referring to. \n\n\"I'm supposed to bathe you,\" he pointed out. \n\n\"So I can't have the pleasure of bathing you?\" she asked him again. \n\n\"Well...,\" \n\n\"Look,\" she said firmly. \"You said we needed to set up our own ground rules, correct?\" \n\n\"Correct,\" he nodded with a smirk, here comes that damn Switch she says she isn't concerned about, he laughed to himself. \n\n\"I'm supposed to be going with the mantra, if it feels good, do it! Right?\" she smiled. \n\n\"You can't use my words against me,\" he laughed defensively. \n\n\"Oh yes I can,\" she laughed as his eyes fluttered closed as she took hold his cock in her soapy hands and began to stroke it. \n\n\"You, are not playing fair,\" he grinned as his cock began to twitch in her hands. \n\n\"You're right,\" she smiled watching the pleasure on his face. \"I play to win.\" He laughed as he tilted his head down and looked at her. \n\n\"I see disappointment in your eyes,\" he pointed out bringing his hand to her face softly. \n\n\"I wanted you all to myself tonight,\" she whispered. \"I wanted to lay in bed with you, naked and let you use me all night. No little beautiful girls tapping at the door. No patients that needed your attention. Just us.\" He nodded and stroked her hair, before kissing her forehead in the steam of the shower. \n\n\"Starting to have second thoughts?\" Gavin asked her. \n\n\"No,\" she said firmly. \"I just need to figure out a way to maximize my time with you when I have you alone.\" He tilted her chin up and kissed her lips. \n\n\"I love you,\" he said firmly staring into her eyes. \"I'll make it up to you somehow.\" \n\n\"There is nothing to make up,\" she smiled. \"This is who you are, you are a doctor. I knew that coming in, just like you, as you have taken me, fiery tempest and all. I have to take who you are as a whole. Go, your patient is waiting.\" She gave him a soft push on his chest, to motivate his feet to move. \n\nHe frowned as the disappointment filled the shower like the steam. \n\n\"Fuck,\" he growled stepping out of the shower. \n\n\"What?\" \n\n\"I hate my job right now,\" he growled as he left the bathroom. \n\nShe looked to the drain of the shower and watched the water swirl. She would have to control her disappointment around him. He loved being a doctor she didn't want him to regret anything he was doing. How to control it or mask it was a different story altogether, as she didn't know if she could. \n\n*** \n\n\"No,\" Alex argued with her hand on her forehead, as she was with the lady at the counter later that afternoon. \"That's not possible, I wasn't even in town last week!\" Alex implored. \n\n\"I understand Miss,\" the bank teller argued. \"But it says right here, the money was deposited into your savings account. So the figures are accurate.\" \n\nAlex looked to her bank statement. She had decided to balance her checkbook while Gavin was gone, the number in checking was correct, but it was the savings that was off. Way off! \n\n\"I just don't want somebody to be out thousands of dollars, you know?\" Alex defended why she was arguing a possible bank mistake in her favor. \"I mean, if an account number was put in wrong and somebody was missing it, I want to make sure it gets back to them!\" \n\n\"I understand,\" the teller agreed sympathetically. \"Let me get my manager, maybe she will know if someone is missing the money, and if it is indeed, a bank error.\" Alex nodded as she looked over her statement. \n\nHer savings account grew nearly five thousand dollars over the past two weeks. She hadn't made any deposits since her last school paycheck and even then it wasn't put into savings. She just knew that somewhere down the line a number got transposed, and someone was missing five thousand dollars from their account. \n\nThe manager came over with the teller and looked at the computer. \n\n\"I'm sorry Ms. Lasko,\" the manager shrugged. \"No one is claiming any missed money, and I'm sure I would have heard about it by now if somebody was missing that type of money.\" \n\n\"I'm sure!\" Alex laughed disappointedly. \"But I know I haven't put in that type of deposit since I sold my art and that was months ago!\" \n\n\"Go down to bookkeeping,\" the manager told the teller. \"Have them pull the hard copy of the deposit slip.\" \n\n\"Yes ma'am,\" the teller said before disappearing. The manager turned back to Alex, \"We will see if the teller who took the transaction is working and if they remember it. Each transaction has the teller's initials, so if they are working we can backtrack from there. Odds are slim, but we will see.\" \n\nAlex waited off to the side while the bank went back to helping others. She chewed on her nail, caught herself and then stopped by putting her hands under her thighs. It seemed like hours went by as she sat there, but in reality she knew it was probably only a few minutes. \n\nThe manager waved her over and now she stood with a young blonde who looked nervous. \n\n\"Ms. Lasko,\" the manager smiled. \"This is Jeannie, she was the teller who took the money.\" The young blonde looked apologetically at her and nodded. \n\n\"I'm sorry,\" she shrugged. \"He seemed like a nice guy, he said he was your boyfriend...he wasn't wanting money out, he was wanting to put money in. I didn't think putting money in was going to be a problem. He doesn't have his name on your account or anything...but like I said, he just wanted to put money in, he brought a cashier's check from another bank. It all seemed legit.\" \n\n\"My boyfriend?\" Alex growled, her eyes snapping shut to keep the raging fire from shooting out of them like some science fiction monster. The picture becoming clearer. Jeannie nodded. Alex pulled up a picture of her and Gavin on her phone. \n\n\"This him?\" She showed the picture to the teller who smiled admirably at the man that graced her phone. \n\n\"Oh yeah,\" she nodded emphatically. \"I remember thinking, please God let me find a boyfriend, who is that hot, and who would put money into my account instead of draining it!\" \n\nAlex growled and shook her head. \n\n\"I'm going to kill him,\" Alex said angrily to the two ladies. \"Call the cops, have them come to my address, I fucking going to kill him!\" \n\n\"Is there a problem?\" the manager asked carefully. She hoped the young lady was joking and not seriously making a threat. \n\n\"I told that son of a bitch he couldn't pay me back,\" Alex said with a stomp of her foot. \n\n\"Most guys I know wouldn't, did he owe you money?\" Jeannie asked her. \n\n\"No, I bought him this perfect Christmas gift, it was expensive and he promised not to take it back!\" Alex fumed turning to look at the picture on her phone. It was of her and Gavin at dinner before they went to see the musical Wicked. \n\n\"I'm sorry,\" the manager said sympathetically, seeing it was upsetting Alex. \"My suggestion if it bothers you is, rebuy it and give it to him.\" \n\n\"No, he didn't take it back, which is why he just paid the money back that I spent, which is the same god damn thing!\" Alex raged. She looked to the two ladies and could tell they had no idea what to say or do. \n\n\"I'm sorry,\" Alex told them forcing a smile. \"He is quite remarkable, this man of mine, but right now...,\" she let her angered voice trail off. \n\n\"We will try and forget you were in here when the police come,\" the manager laughed. \"Making threats and all!\" Alex laughed with her. \n\n\"I don't care how hot he is, he is taking that money back! And not his sexy ass or his hypnotic brown eyes or the fact I love him more than life itself is going to keep him from the temper tantrum I'm about to throw down!\" Alex said with a shake of her head. \n\n*** \n\nAlex stormed into the condo and saw his medical bag, she knew he was home and went straight to his office as the light was on. Disregarding her stance that the office was his man cave and she wouldn't enter, she stormed in and tossed her bank statement at him. \n\nHe caught it with a furrowed brow at her entrance and her body language. Without looking at it, he stared at her. His jaw setting had her swallowing hard. His face screamed she went too far. \n\n\"First off,\" he said firmly. \"Take it down a notch.\" \n\nHis eyes were firm and his body language tight. He leaned back in his chair and stared at her. Unbending to her demeanor, or her angry eyes. She took a deep breath and let it out slowly with closed eyes. \n\n\"Better,\" he said. \n\nHe then looked to the paper she had thrown at him. He sighed and frowned as he put it on his desk neatly. He had fully expected this little tornado, but he had to make sure that he didn't laugh or smirk. That would take this little tornado into an F5. \n\n\"Explain,\" she demanded. He cocked an eyebrow at her demand. \n\n\"No,\" he said firmly. \"I don't have to. Take caution in your tone. I love you, but this is not up for debate.\" \n\n\"You waited until my sister left before putting that money back into my account,\" she told him. \n\n\"I did,\" he agreed with a nod. \n\n\"So we wouldn't fight in front of her?\" Alex asked. \n\n\"Why not, the tactic worked for you,\" he said folding his hands in front of his face to hide the smile that was dying to get out. He knew that would only send her off the deep end and he would be forced to discipline her. \n\nRight now she was balancing on a razors edge. He was admiring the fact she was trying so hard. If this had happened three months ago, this would be so much worse...for both of them. \n\n\"What?\" She gasped, trying her best to swallow her anger. \n\n\"Did you not, hold back the gift until I was in front of your family, so that I could not let my true emotion out?\" he pointed out. She hung her head. \"At least I didn't do it in front of your family.\" \n\n\"You said you loved it!\" Alex said softly, her voice cracking, her lip trembling. \n\n\"I do,\" he said with a nod. \"But you should have been saving that money for a car, not for some expensive box.\" \n\n\"That was my Christmas gift to you,\" she pointed out firmly. \"Now you have belittled it!\" \n\n\"I have not!\" he defended with a gasp at the accusation. \n\n\"You have,\" she said with her voice quaking. \"You have taken something I had taken great pride it, and ruined it.\" \n\n\"That was not my intention,\" he said with a frown. He hadn't thought of it that way. \n\n\"I don't give a damn what your intention was!\" Alex said her voice becoming tight with anger she was trying to not let come out. \n\n\"I'm sorry,\" Gavin told her leaning forward. She stared at him for several seconds before her anger got the upper hand. \n\n\"Let's get one thing perfectly clear,\" Alex said her voice erupting with her anger as she could no longer suppress it. \"You can tell me what clothes I can wear. You can tell me how I can address you, and you can tell me how to fuck.\" She put her hands on his desk and leaned towards him. \n\n\"But if you want to control how I spend my money, you had better put a ring on my fucking finger and call me your wife!\" Alex stormed from his office and went to the bedroom and slammed the door. \n\nGavin leaned forward and put his elbows up on his desk to prop his face up as he rubbed it. \n\n\"God,\" he whispered aloud to himself. \"This whole real relationship thing is a pain in the ass! Should've just stayed with the Dom thing! But nooo! You had to go complicate things by falling in love with that walking, talking piece of absolute perfection!\" \n\nGavin gave her a few minutes to cool off before he went after her. He stifled the laugh upon entering the bedroom carefully as she was lying face down in the bed. When he walked in she held up the crop without turning over. He gently took it from her fingers with a smile she did not see. \n\n\"Well,\" he sighed. \"Given the circumstances, I guess that was about as respectful as you could have been.\" She let out a short laugh into the pillow. \n\n\"Look at me,\" he said softly, she shook her head. \"Please?\" She turned over and her eyes told him all he needed to know and it crushed him. \n\n\"I'm sorry,\" he said to her. \"I'm not used to this.\" \n\n\"Used to what?\" she asked. \n\n\"Being in a relationship, a meaningful relationship,\" he said running his thumb over her cheek. \"I don't know how to act, what to do, what to say. I'm so used to just doing what I want.\" She nodded. \n\n\"So will you take the money back?\" she asked him. She frowned when he looked to the ceiling. That meant no! \n\n\"Look,\" he smiled at her. \"I'm just as stubborn as you! But I have a solution, one in which everybody wins.\" She nodded. He handed her a business card. \n\n\"That is my financial advisor,\" he told her. \"Take the five thousand and open up some sort of money market account or IRA or something for your nieces and nephews.\" \n\n\"What?\" \n\n\"I'm sorry,\" he said again. \"I never meant to take away the joy you received from giving me that absolutely magnificent gift! I've done that now, and I can't fix it. But maybe, if you take the money and give it to your nieces and nephews, you can get a similar feeling knowing that with the right type of investments, and what not, they could wind up with something just as magnificent down the road!\" She smiled as she looked to the card. \n\n\"Furthermore,\" he continued. \"I promise to never tell you how or where you can spend your money, until your name is Mrs. Alexandria Steward.\" \n\n\"You owe me one,\" she said looking up at him her soft smile coming out and he was thankful for it. \n\n\"I know,\" he nodded. \"What shall I do?\" \n\n\"I'll think on it,\" she said looking at the card. \n\nChapter 33 \n\nLivy put one foot in front of the other. Her eyes down on the concrete sidewalk. Living in Averin was lonely. Especially now that Nora was back into school. She just had nothing to do all day. She would have to get a job sooner or later, but Alex had told her to take her time. Get her head right first. Which was good advice, as she was still having problems keeping it together. There were some days that she was glad Nora was back in school. She could then cry all day without the little girl knowing. \n\nAlex and Gavin had given her money, despite her major protest. Alex had told her it was just to get her through until she did find a job, this way she didn't need to go to the parents and that lecture that Alex had heard so many times she could recite it from memory. \n\nGavin's lawyer had set her up an appointment with a woman from Pittsburg. After meeting with her she sounded like a shark! This lady didn't want her to get a job, she said she should think about going back to school. She would get Livy alimony because she was a stay at home wife. She could get education paid for first, then start her career, with her unfaithful husband footing the bill. \n\nShe talked to Alex about teaching. Alex raved about it, her father said it wasn't for everybody as it was the hardest, most frustrating but most rewarding job he could ever imagine. He wouldn't change anything if he was given a do over. \n\nThen there was the way Gavin spoke so passionately about it. She stopped by the local community college to get some details. She felt excited about it. An excitement she hadn't felt in some time. A personal excitement. Excitement amount personal growth. \n\nShe stopped and looked around. The snow was falling gently, she looked up and saw the white flakes wafting down in a soft wind that forced the flakes to swirl as they fell around her. \n\nThe soft musical gongs of a church bell drew her eyes across the street. A man leaving the Catholic Church there drew her attention. He was pulling his gloves on as he descended the stairs. He waved at her as he saw her staring in his direction. She smiled and waved back as he climbed into his truck. \n\nThe building was red brick, its steeple tall and white with a small clock on it. St. Mary's was on the front with a sign that said; There are some questions that can't be answered by Google. But we have the answers here! She smiled at the humor in it. \n\nShe made her way over, she didn't know why she was walking there. She wasn't Catholic. Now she wasn't even sure there was a God. All her prayers to him in the past didn't save her marriage. It didn't save her from the pain. But she felt her feet walking over and her hand pulling on the door. It was big and wooden but opened easily. \n\nThe room opened into a cozy warm chapel. Rows of pews had her walking down the center. It was the stained glass that surrounded the chapel that had her enamored. She found a pew and sat, pulling her gloves off she set them down and unbuttoned her coat as she looked at the various scenes of the Bible in stained glass that wrapped around. \n\nShe closed her eyes and prayed. The quiet of the church had her softly crying in her prayer. There was just too much pain in her life right now. She wanted it to go away, she prayed for it to go away. Maybe He would listen to her pleas today. ",
        "\"Good morning,\" the soft male voice had her snapping her eyes open. She had a slight panic, maybe she wasn't supposed to be in here. It wasn't Sunday, and she wasn't Catholic. Being a small town she was sure the people that did go to church here would know that she wasn't a member of the congregation. \n\n\"Good morning,\" she said as he smiled down pleasantly at her. His black coat and white collar told her who he was. \"I'm sorry, I was walking...I just...I don't know if you are even open!\" \n\n\"We are always open,\" he smiled. He sat in the pew just in front of her and turned to face her over his shoulder. \n\n\"My name is Father Jackson Wells,\" he said extending his hand. \n\n\"Livy,\" she smiled taking his warm hand. \"Livy Codeen.\" \n\n\"Well Livy,\" the priest smiled her. \"Have you come for confession?\" \n\n\"No!\" she blurted. \"I mean I'm not Catholic!\" He nodded never losing his friendly smile. \n\n\"Should I leave?\" she asked him with a panic in her voice. \n\n\"I don't know...should you?\" he asked her. \n\n\"I'm not Catholic,\" she said again. \"I'm not even sure I should be in here!\" \n\n\"So you said,\" he replied, his smile growing as he shook his head at the humor of the way she was distancing herself. \"But this is God's house, He has invited you in, who am I to kick out a guest of our Lord?\" \n\n\"He invited me in?\" Livy asked him. \n\n\"Here you sit,\" he pointed out. \"I'm assuming by you tears, you have a heavy heart, and He told you to come and sit a spell.\" Livy let a tear fall just because he noticed. \"Would you like to talk?\" \n\n\"I'm not Catholic,\" Livy frowned, but she wanted to talk. \n\nShe wanted to talk to someone who wasn't involved. Someone who wasn't looking out for her as Alex and Gavin were. Someone who wasn't looking out for themselves as her mother and sisters were. Someone who could just give her some straight talk. \n\n\"So you keep saying,\" the priest smiled. \"But I don't care, God doesn't care, nor should you.\" He sat patiently as she seemed to weigh the idea of talking. \n\n\"I'm going through a rough patch,\" Livy admitted dropping her head embarrassedly. The priest nodded, his eyes were sympathetic. \"My family goes to church in Orchard Falls, I used to go there as well.\" \n\n\"Used to go?\" the priest asked. \n\n\"I've lost my faith, I guess, a little anyway,\" Livy whispered. \"My mother is ultra-religious. We are talking like fire and brimstone.\" \n\n\"How does she feel about you losing your faith?\" \n\n\"She has ridiculed me, ordered me to spend countless hours with our preacher, which was a complete waste of time...I can't continue to go to church there,\" Livy told him. \n\n\"Why?\" \n\n\"My husband goes there,\" Livy frowned. \n\n\"I take it, that is where the problem begins,\" the priest nodded. \n\n\"I have to get a divorce,\" Livy whispered so softly the priest barely heard it. \n\n\"Not the end of the world,\" he said taking her hand. \"Have you seen a counselor?\" She nodded. \n\n\"After the first two times I caught him cheating,\" Livy nodded as the tears dropped from her eyes. \n\n\"The first two times?\" He asked carefully, she nodded at his question. \n\n\"This time, he has gotten another woman pregnant,\" Livy said. \"They both go to the church, how it the hell am I supposed to go to a church that has them both there? Does God expect to rub it into my face that I'm a complete failure?\" She looked at him and realized she had swore in church. \n\n\"I'm sorry for my language,\" she told him embarrassed for her outburst. \n\n\"Trust me,\" he smiled. \"This building has heard worse!\" He said as he leaned into her confidingly and laughed which made her laugh. \"I was walking in flip flops last summer, caught my toe on the pew in the back! Oh man, why He didn't strike me down is still a wonder!\" \n\nLivy covered her mouth as she laughed. \n\n\"Did you know, that your pinky toe has built in GPS?\" He asked her with a smile. She looked at him confused. \"Yes, it is programed to find the corner of every piece of furniture!\" This caused Livy to burst into laughter. \n\n\"I'm sorry...Father or...,\" she stumbled. \n\n\"How about Jack?\" he smiled when she stumbled with his name. She nodded. \n\n\"Livy, my point is, we are all sinners, and God loves us...each and every one,\" he said firmly. \n\n\"Then why won't He answer my prayers?\" Livy asked point blank. \n\n\"What makes you think He hasn't?\" Jack asked her. She shook her head. \"Livy, I can't explain why you are here, or why your husband decided to be a louse. I can't explain why He didn't answer your prayer the way you wanted Him to...but you have to trust that He will provide for you.\" \n\n\"Provide for me?\" Livy gasped. \"I've lost my husband, the father of my child, my church, my mother and two of the three sisters! It sounds like all He is doing is taking!\" The priest nodded at her outburst of pain. \n\n\"And through all of that pain, you sit in His house,\" he pointed out. \"It seems to me, He may be clearing your clutter.\" \n\n\"My clutter?\" \n\n\"In your list, you never said you lost your faith, you said you were unsure, but it wasn't on your list of things lost,\" he smiled. \"But it sounds like you had a lot of things in between you and God. Perhaps He is preparing you for something else.\" \n\n\"Like what?\" Livy asked him. \n\n\"That is something that nobody knows,\" he frowned. \"It sounds like your church has lost its way.\" \n\n\"What?\" \n\n\"Well, you said your mother is ultra-religious?\" he asked, she nodded. \"Your husband has laid with another woman from your church?\" She nodded. \n\n\"Now I'm guessing that your mother is forcing you do something your heart is telling you that you shouldn't?\" he asked carefully. \n\n\"She wants me to stay with him,\" Livy told him. He shook his head. \"You are shaking your head? I thought divorce was a sin?\" \n\n\"You heart tells you what is a sin and what isn't,\" he said firmly. \"Does the church condone divorce? Of course not! But is it a sin to divorce a man who obviously has sinned against you and God? He has sworn before God to forsake all others, to love you until death...he has failed.\" \n\n\"So it isn't a sin to leave him?\" Livy asked painfully. \n\n\"What does your heart say?\" \n\n\"I don't know!\" Livy cried. He put his hand on her shoulder as she leaned forward as the pain cramped in her stomach. \"I feel so lost!\" \n\n\"Livy,\" he said softly. \"You have done everything God has required of you.\" \n\n\"What?\" \n\n\"Look, I'm not your normal priest, I'm supposed to tell you to bring him here, and then I'm supposed to try and get you to fix this...but this sounds like it's beyond fixing!\" He admitted. \"It sounds like the decision has been made...by Him.\" \n\n\"Don is not sure he wants a divorce,\" Livy laughed wiping her tears. \"He said it would look bad in the church.\" \n\n\"Having cheated with multiple women and getting another member of the church pregnant isn't looking bad?\" the priest gasped. The priest shook his head disappointedly. \"No, the Him I was referring to was our Heavenly Father.\" \n\n\"What? He wants me to get a divorce?\" Livy said with a confused shake of her head. \n\n\"It sounds like it,\" he stated. \"Look, don't look to your church, look to your heart.\" \n\n\"My mother says the church is God,\" Livy told him. \n\n\"The church is only a building,\" the priest smiled. \"It was built to bring people of a similar faith together to worship. It sounds like your faith is different than that of your church. If you have lost your faith, maybe it is not your faith in God you have lost, but the faith in your church.\" \n\n\"How do you figure?\" she asked him. \n\n\"You sit here,\" he smiled. \"Your faith in God has brought you here, even though you aren't Catholic.\" He teased and she smiled. \n\n\"God hasn't lost his faith in you, He brought you here, now it is my job to show you that He loves you and He only wants what is best for you. That may include divorce. Even though you are a non-Catholic!\" He said with a comforting laugh. She laughed with him. \n\n\"Livy,\" he said standing up. \"Do you know why there are so many religions?\" She shook her head. \n\n\"When we get to Heaven and we stand before our maker, if we don't go to a church, He is going to ask why. Now most will say they couldn't find one to believe in. He is going to look them square it the eye and tell them, 'I put one on every corner, with many different beliefs between them. If you couldn't find one, you weren't looking for me'. God doesn't want it to be difficult to find Him, you found Him. Just by opening the door,\" he pointed to the front door she walked through. \"Wasn't that easy?\" She nodded. \n\n\"Livy, you love God, God loves you,\" the priest smiled. \"Nothing else matters, it's that marriage that will last the test of time, it sounds like you are faithful to Him. So now He is clearing the clutter for you, because He does love you.\" \n\nHe gave her a reassuring smile. She smiled back. \n\n\"Our door are always open,\" he said moving away. \"Come when He calls, I promise not to judge you, as long as you realize I'm a sinner too and not judge me!\" \n\n\"Deal,\" she smiled. \n\n\"Oh,\" looked around. \"Let's not let it out that I wear flip flops in church, please? I got some blue hairs here that would run to the Bishop and then the lectures would start!\" \n\n\"Your secret is safe with me,\" Livy assured him. Laughing at his reference to older women in the church. She felt better watching him leave. The pain was still there, but her heart felt lighter. Maybe he was right? \n\n*** \n\nChapter 34 \n\n\"Good God look at you!\" He exclaimed as he departed the walkway leading from the plane. \n\n\"Dobro pozhalovat' nazad!\" Alex said with a broad smile. Which meant, welcome back. \n\n\"Vy smotrite vkusno!\" he said taking the woman in his arms and hugging her firmly. \"It means a lot to me that you are here!\" \n\n\"Well, according to Gavin, somebody needs to chaperone you!\" Alex laughed as she hooked her arm into his and they began to walk to baggage claim. \"Now, what did you just say? My Russian is limited to what Google tells me!\" \n\n\"Ah,\" he nodded with a smile. \"I'm afraid I was being a little forward, so to keep you good impression of me, I will keep it to myself!\" \n\n\"That's not fair!\" Alex complained. \n\n\"I'm sorry beautiful,\" Pavy sympathized. \"But I'm not telling! Ask your beloved Google!\" \n\n\"I wouldn't even know how to spell it!\" she laughed. \n\n\"He with one of his rich patients?\" Pavy asked her changing the subject. She nodded at the distaste that dripped from the way he said 'rich patients'. \"What a waste!\" \n\n\"You think so?\" she asked him. \n\n\"Oh my God! The good that man could do where I'm at! I'm not a surgeon like he is, I know he normally doesn't do surgery now with these rich stuck up bastards, but I have kids that have pieces of metal in their body from flying shrapnel! I would set him up and work his fingers to the bone!\" Pavy said with a wishful shake of his head. \n\n\"I didn't know he was a surgeon,\" Alex said with a furrowed brow. It was never brought up in the year they had been together that he was a surgeon. She just assumed he was a regular M.D. \n\n\"He is wasting his talents with the uppity, snot nosed, rich folks and their gastritis and hemorrhoids!\" Pavy seethed. \n\n\"Wow,\" Alex smiled. \"Tell me how you really feel!\" \n\nWalking out to the Mercedes, he stopped. \n\n\"What happened to the Rabbit?\" he asked her remembering her old car that she took him to the airport in last year. \n\n\"The Rabbit died!\" she giggled with a wink and blush at the implication. \"Gavin leased this overpriced magnificent car as he is well on his way to spoiling the living shit out of me!\" \n\n\"Good God! Gavin with a kid? That would be interesting! That would twist his perfect little life into a pretzel!\" Pavy laughed as he tossed his bag in the trunk. \"And spoiling you is the very least he could do!\" \n\n\"Wanna drive?\" She asked holding out the key. \n\n\"Don't have a license as you don't need one in Africa!\" he laughed getting into the passenger side. \n\n\"Oh, and by the way, I had my six year old niece with us for about a month not too long ago, and he was absolutely brilliant with her!\" Alex said proudly as she backed out. \n\n\"A six year old?\" Pavy chuckled. \"I figured she would eat him for lunch!\" \n\n\"I'm sure there were days where she was hounding him with one question right after another that he wished he could have gotten one of his rich clients to call him out!\" Alex laughed. \n\n*** \n\nThey were busy preparing dinner when Gavin walked into the kitchen. Pavy was teaching her Swahili, some basic phrases and greetings. \n\n\"Trying to convince my girl to come to Africa with you?\" Gavin asked. \n\n\"I figure if I can convince her to come, you won't be far behind,\" Pavy smiled as he turned to him. \"Call it a change in tactics!\" \n\nThey embraced warmly and held each other. \n\n\"Missed you,\" Pavy said releasing him. \n\n\"Ditto,\" Gavin smiled patting his cheek. He moved over to Alex and kissed her. Her body washed in goosebumps as he did. \n\n\"Seeing how you guys are getting friendly with one another,\" Gavin said to Pavy as he undressed her yet again with his eyes. \"Try and get her to tell you what she wants for her birthday. She keeps telling me she doesn't want anything!\" \n\n\"Fuck you,\" Pavy laughed. \"If you don't get her something, it will be easier to steal her away from you!\" \n\n\"So it's like that huh?\" Gavin laughed as he put up his fists. \n\nPavy followed suit and soon the two grown medical men were acting like college frat boys. Wrestling and fighting in the kitchen. Alex laughed and ducked out of the way when the fisticuffs got close to her. \n\nAs the scuffling got intense Gavin started to fade away from him. \n\n\"Easy on the suit!\" he warned. \n\n\"Oh why yes, my lady!\" Pavy agreed releasing him and fixing Gavin's tie. \"I would hate to ruin one of your multi thousand dollar suits! Then you would only be down to what, 30 or 40 different suits?\" \n\n\"Fuck you,\" Gavin laughed. \n\n\"Does Alex have any closet space at all or do you hog it all princess?\" Pavy teased putting his arm around Alex. \n\n\"She has a couple drawers she can use,\" Gavin joked. \"And if you don't take you slimy hands off of her, suit or no suit, I'm kicking your ass!\" \n\nPavy raised an eyebrow at him then turned and began to kiss Alex's cheek, which caused Gavin to rush them and wrap his arms playfully around them both as he retaliated. \n\nSitting around the table, Pavy was full on embarrassing Gavin with stories from their youth. The arrest was brought up, but the story had changed, Pavy was passing blame on Gavin not the other way around. \n\nAlex was in tears at the way they bashed one another, each coming up with one embarrassing story after another. Alex bending at the waist laughing, her stomach hurt from her laughter. \n\n\"So, when is your birthday?\" Pavy asked after the laughter had died down and he was pouring more wine for the three of them. \n\n\"Day after tomorrow,\" Alex told him. \n\n\"Damn,\" he frowned. \"I won't be here for it!\" \n\n\"It's really not a big deal,\" she laughed. \"It's just another day!\" \n\n\"So is Christmas,\" Pavy pointed out. \"But we celebrate like it's the last one we will ever have!\" \n\n\"Ah-ha,\" Gavin pointed out. \"Thank you!\" He was pleased his friend was being useful, for a change! \n\n\"You are comparing my birth with that of Christ?\" Alex scoffed with a shake of her head. \n\n\"Both are worth celebrating!\" Pavy smiled clinking her glass with his. \n\nAfter moving their drinking to the living room they continued their laughter. It was another two hours before Alex began to tire, and the boys seemed to be just getting started. She got up and moved to where Gavin was sitting. \n\n\"I'm off to bed,\" she told them. She put a lingering kiss on him. \"Goodnight.\" \n\n\"Goodnight,\" he smiled. \n\nAlex moved to Pavy and kissed his cheek. \n\n\"Goodnight,\" she said with a smile. \n\n\"Goodnight, beautiful,\" he grinned. \"We will try and keep the noise down.\" \n\n\"Much appreciated!\" Alex laughed knowing that was going to be near impossible. As it seemed that with the more alcohol they drank, the louder they got. \n\nThe men waited until she had closed the door to the bedroom before turning their conversation back to one another. \n\n\"Absolutely stunning!\" Pavy complimented. \n\n\"She is,\" Gavin agreed. \"Much too good for me!\" \n\n\"That goes without saying,\" Pavy teased toasting his glass. \n\n\"Don't tell her,\" Gavin smiled. \n\n\"And let the best thing that ever happened to you leave? Fuck no!\" Pavy assured him. \"So?\" The Russian led on. \n\n\"So?\" Gavin grinned knowing what he wanted to know, but playing it off. \n\n\"So have you popped the question?\" Pavy asked with a shake of his head. \n\n\"It's been almost a year, a little early to be thinking that!\" Gavin laughed. \n\n\"Why?\" \n\n\"What do you mean 'why'?\" Gavin fired back. \n\n\"Do you love her?\" \n\n\"Of course,\" Gavin smiled. \n\n\"Then ask,\" Pavy pushed. \n\n\"Now you sound like Madelyn!\" Gavin complained. \"She is talking kids and wedding at her place and elaborate shit like that!\" \n\n\"Well your little girl in there was teasing about dead Rabbits today!\" Pavy joked. \n\n\"What?\" \n\n\"Her old car? I asked her what happened to the Rabbit, and she said 'the Rabbit died',\" Pavy said watching the demeanor change. \n\n\"We aren't talking about the Rabbit,\" Gavin said coolly. \"That is still a sore subject in this house!\" \n\n\"What happened?\" Pavy had to know now, just by Gavin's reaction. \n\n\"The love of my life was teaching on the Chicago south side,\" Gavin began slowly. \n\n\"The south side?\" Pavy gasped. \"And you let her? Christ almighty! Next time just send her into the war zone with me!\" \n\n\"Look,\" Gavin said firmly. \"You have no idea what it is like to fight with that fantastically, perfect woman in there! She is a fucking fireball!\" \n\n\"Continue,\" Pavy laughed. He loved the fact that Gavin was espousing his feelings for Alex so freely. Alex had done the impossible. She had saved Gavin from himself. \n\n\"So, I try and buy a car for her, she refuses. I try and loan her money to buy a car, she refuses. She wants to do it all on her own!\" Gavin complained with an angry wave of his hands which caused Pavy to shake his head. \n\n\"Oh shit,\" Pavy laughed. \n\n\"Then the fucking thing breaks down! On the coldest, worst day of the year!\" Gavin raged, his voice rising with his anger. \"My beautiful girl there, doesn't want to call me because I'm with a patient. So she walks...walks, on the south side, at night mind you,\" he said in a near yell. \"To the metro rail. Then another four blocks from the metro to our apartment!\" \n\n\"Of course she was already refusing to admit she was ill! Now she goes off and gets pneumonia!\" Gavin growled. Just then the bedroom door opened. \n\n\"I thought we were going to keep the noise down?\" Alex smiled trying to get them off the subject of her big mistake and near fatal relationship mishap. \n\n\"You walked on the south side of Chicago?\" Pavy growled at her. She swallowed hard as now she had two men angry about it and now she just wanted it all to go away. \"I would bend you over my knee!\" \n\nThis caused Gavin to snort out a laugh in the middle of a drink from his glass causing it to bubble loudly. Alex blushed as she bit her lip and looked to the floor. Pavy looked from one to the other. \n\n\"You kinky little shits!\" Pavy guessed. \n\n\"She was acting like a petulant child,\" Gavin defended. \"I obliged her.\" \n\n\"I had it coming,\" Alex admitted. \"I'm going back to bed, Pavy, please don't get him all fired up before you send him to bed. There are a lot of things I needed a spanking for that he might feel the need to take up tonight!\" \n\nWith that she left he laughing men by closing the door. Her face flushed in heat at the memory of her spankings. \n\nGavin came to bed a couple of hours later, the alcohol telling her he had let his hair down again with his friend. He snuggled up to her and she pulled his hands closer to her face and kissed them. ",
        "\"I love you,\" he whispered. \n\n\"I love you,\" she said back. \"Hey, do you speak any Russian?\" \n\n\"I have a Russian friend,\" Gavin pointed out. \n\n\"But do you know any?\" Alex asked looking over her shoulder at him. \n\n\"Some, I had to start learning so I could understand his insults,\" Gavin slurred slightly. \n\n\"What does Vy smotrite vkusno, mean?\" she asked him. He furrowed his brow as he thought about it. \n\n\"Um, something about being delicious,\" Gavin shrugged. This caused Alex to shake her head and giggle. \n\n*** \n\nHalfway through his sermon he saw her, in the back pew, in the corner. As far away from him, and the rest of the congregation as possible. He smiled and shook his head. He watched her, it was obvious she didn't have the first clue as what to do in the Mass. When others knelt she looked around first, then knelt. \n\nThe prayers that were said by memory for most, she merely moved her lips, hitting some of the words, but missing most. By the end she looked totally lost, but during the sermon, she seemed entranced. \n\nHe had changed from his original sermon and drifted to people who are Christian in appearance only. Who vocally spoke of their love for the Lord but in their life's deeds didn't prove it. He knew it would strike a chord with her, and her tears said it did. \n\nHe could see her being pounded by his words. He loved it when the Lord used him for His purposes. The woman had filled his mind after he left her that day. She needed God more than ever and he hoped she would return. He didn't expect to see her for a Mass, more what she did before, come in during the weekday. \n\nShaking hands with his parishioners at the end, she hung back. When she got to him he smiled broadly. \n\n\"And see? The Church still stands!\" he teased which had her blushing. \"How was your first Catholic Mass?\" \n\n\"Interesting!\" she admitted. \"Your sermon was quite good!\" \n\n\"Thank you,\" he nodded. \"It was adlibbed.\" \n\n\"I don't understand,\" she told him with a confused brow. \n\n\"Well,\" he frowned. \"I spent the week working on a different sermon, the Lord had other plans. They say if you want to see God's smile, tell him your plans! He does that a lot with me, let me toil on one sermon only to make me preach another!\" The priest said with a disbelieving shake of his head. He then shrugged. \n\n\"He makes you change?\" Livy asked him. \n\n\"Absolutely!\" The priest laughed. \"I feel Him here,\" the priest said with a hand on his heart. \"He speaks to it and then the message is given.\" The priest shrugged. \"I think He does it because He likes to keep me out of trouble by making me prepare a sermon only to give one off the cuff!\" \n\n\"I'm sorry,\" Livy laughed. \n\n\"Ah, it's good for me,\" he laughed with her. \"How are you doing?\" \n\n\"Struggling,\" she admitted. \n\n\"Have lunch with me?\" He asked her. \"Here in the rectory.\" \n\n\"No, I don't want to intrude,\" Livy said shaking her head. \n\n\"I insist,\" he said not letting her get away. \"Don't make the Lord take it out on me that I didn't help you when you needed me.\" She smiled and nodded her consent after a few moments of debate. \n\nHe led her back behind the church to a small residence. Guiding her through the house to the kitchen. As she went through the simple home she looked around. There were plenty of books and magazines. But it was obvious he didn't watch TV, as there wasn't one to be seen. \n\nSitting her at the table he brought out some leftovers in a Tupperware bowl from the fridge. \n\n\"I hope leftovers are ok?\" he asked her. \"I don't cook very well, but the blue hairs make sure I don't go hungry!\" \n\n\"No, leftovers are fine,\" she smiled. \"Whatever you are having.\" \n\n\"Mrs. Shakes pasta! Can't get any better than this, leftovers or not!\" He said putting the bowl in the microwave. \n\nAfter serving her and sitting down he smiled. \n\n\"So,\" he started. \"Tell me what you thought of Mass.\" She hesitated. \n\n\"Well,\" she began when his eyes insisted. \"The kneeling part was different than my Church. The rote prayers as well.\" \n\n\"The rote prayers are only for Mass,\" he said. \"If I truly want to talk to God, I just talk to him, like you and I are doing now. The kneeling is involved sometimes, but sometimes I'm just washing dishes or working in the yard and have a need to talk to Him. So I do. I can't count the number of people that walk by the rectory or the church and find me talking out loud to God like He was standing next to me, helping me rake the leaves or whatever.\" \n\n\"I must say, I felt God move more in the hour I was in your Church than I have in months at mine!\" Livy told him. \n\n\"That's because you were listening,\" he smiled. \"You weren't worried about you cheating husband and his sin in the same church. Or your ultra-religious mother, or your pain or humiliation. You were just listening with your heart and He spoke to you.\" \n\n\"So I should join your church?\" she asked with a crooked brow. \n\n\"No,\" he shrugged. \"You should go wherever the Lord tells you to go. It may be here, it may be the Methodist church down the street or even the Southern Baptist on the edge of town. That is if you are into fire and brimstone!\" He chuckled and she laughed with him. \n\n\"They all have great men at the lead,\" Jack told her. \"I know because we take the offerings every week and gamble them here at this very table over intense games of poker!\" He told her in a confidential whisper. \n\n\"What?\" Livy laughed. \n\n\"Just kidding, about the offerings, we do play some mean poker here,\" he smiled. \n\n\"Men of God playing poker?\" Livy asked him with a dubious look. \n\n\"What's wrong with that?\" he asked her. \n\n\"My mother would say games like that are sinful,\" Livy told him. \n\n\"Well,\" he shrugged. \"I'm sure a lot of people might believe that, but we feel that sitting around, playing cards discussing God is a way to share fellowship.\" \n\n\"You talk about God? While playing poker?\" she gasped. \n\n\"We leave him a seat,\" he said as he pointed to a chair. \"He hasn't taken us up on it yet, but we are hopeful! Of course I think it would be hard to bluff the Lord with a busted straight!\" \n\n\"I can't believe that!\" Livy laughed. \"That blows me away!\" \n\n\"Why must God be some stuffy, vengeful God?\" Jack asked her. \n\n\"Have you read the Old Testament?\" Livy teased. \n\n\"Ah, but the tone changed once Christ was born!\" he winked at her. \"People change with the birth of their children...wouldn't you agree?\" \n\n\"I would,\" Livy smiled. \"I did, when Nora was born.\" \n\n\"Nora?\" he smiled. \n\n\"My six year old daughter,\" she nodded pulling her phone out to show him a picture. She pulled up one of Alex and Nora. \n\n\"That's my sister Alex and my baby girl,\" Livy said proudly. \"Two of the three people in my life that haven't deserted me!\" \n\n\"Who is the third?\" Jack asked her refilling her glass of tea. \n\n\"My father,\" Livy replied and nodded a thank you. \n\n\"So, you have Nora, Alex and your dad, and now a priest and the Lord,\" he said patting her hand. \"Sounds like you have all you need!\" \n\n\"What do you mean?\" she asked. \n\n\"I mean, throw yourself into the people that love you, and stop worrying about those who don't,\" he said softly. \"Trust that whatever happens is God's plan for you.\" \n\n\"Getting a divorce is God's plan?\" Livy countered. \n\n\"Yes,\" he said firmly. He continued when her eyes begged for clarification. \"Why on earth would he make it so cut and dry? I mean, if you don't deserve a divorce given what your husband has done, who does? The man stood in your church and made not only a promise to you, but a promise to God himself...then he went out and broke that promise.\" He patted her hand. \"I would imagine, if you were Catholic,\" he winked at her. \"I could get you what you truly deserve.\" \n\n\"What is that?\" \n\n\"An Annulment,\" he frowned. \"I would go to my Bishop, and under the circumstances, the fact he has violated every oath given to a wife, it wouldn't be a hard sell.\" \n\n\"I haven't thought about that,\" she frowned. \n\n\"Well, don't join our church because of that, join for the right reasons,\" he said to her. \n\n\"No of course not,\" Livy nodded. \"But you wouldn't mind me coming back?\" \n\n\"Just as long as next time you bring Nora,\" he smiled. \"I would love to meet her.\" \n\n*** \n\nChapter 35 \n\n\"Happy Birthday,\" Gavin said kissing her when she came into the kitchen. \n\n\"Thank you!\" she smiled. \"Can I have another one of those?\" \n\n\"Of course,\" he smiled. \"You can have whatever you want on your birthday!\" \n\n\"Whatever I want?\" she asked him with a smile. \n\n\"Well,\" he nodded as he nipped at her ear and neck. \"When I get back from my appointment.\" He adjusted. \"Then I have a surprise for you!\" \n\n\"I thought we agreed you weren't going to get me a gift,\" she pointed out with an exhale of frustrated breath. \n\n\"You agreed to that, I never did,\" he smiled. \"If you are going to be giving me orders, you better become my wife!\" He tossed back at her. \n\n\"Oh man,\" she smiled. \"There is no way I'm going to marry you for at least fifteen seconds!\" she teased. He looked at her for a few seconds. \n\n\"Ok how about now?\" he teased about the fifteen seconds. \n\n\"I guess,\" she shrugged teasing back. \"If I must! I mean you are only handsome, intelligent, generous, and romantic, with a great body and a great sense of humor, and are great in the sack...I could do worse!\" \n\n\"Ok,\" he smiled. \"Thank you for lowering your standards for little ol' me!\" \n\n\"Sometimes we have to be kind to the less fortunate,\" she smiled kissing him. \"Now, about that gift you aren't getting me.\" \n\n\"Again,\" he said firmly. \"You are not my wife.\" \n\n\"Something I'm dying for you to rectify,\" she smiled against his lips. \n\n\"Hey,\" he said pulling his head back. \"We haven't even been dating a year yet, I'm not sure if you know my history!\" \n\n\"That's not funny,\" she said scowling. \n\n\"It's a little funny,\" he laughed. \"You just have no sense of humor!\" \n\n\"I'm warning you,\" she said letting him go. \"You even attempt to break up with me, I told you I would go full on stage five cling on, and I'm not kidding! Boiled rabbits and slashed tires!\" \n\n\"I love rabbit stew,\" Gavin shrugged as he left her in the kitchen. \"See you in about an hour or so, be ready to leave when I get back.\" \n\n\"To leave?\" she asked turning around. \n\n\"After Madelyn's appointment at the hospital, I'm taking the rest of the day off...maybe you can talk me into the day after that, if you are nice and let me spoil you today.\" \n\n\"If it will get two days with you all to myself, I would let you do anything you want!\" Alex spun around her face excited. \n\n\"Even letting me buy that Mercedes for you?\" he asked as he looked at her. \n\n\"That would require that whole marriage thing,\" she countered. \n\n\"Umhmm,\" he nodded. He winked at her and left. \"See you in about an hour or so!\" \n\n\"I love you,\" she yelled out with a smile. \n\n\"Love you more,\" he called back. \n\n*** \n\n\"How was Madelyn's appointment?\" Alex asked as the plane took off. \n\n\"She is a bigger pain in the ass than you, sometimes,\" he smiled with a shake of his head. \n\n\"That's only because you love us,\" she pointed out. \n\n\"Got to start picking better,\" he teased. \n\nShe got up and went to his seat and sat in his lap. \n\n\"I do believe the seatbelt light is still on,\" he pointed out. \n\n\"Well,\" she smiled. \"They can come back here and try and throw me off, but I know the owner of the plane, and she likes me!\" \n\n\"She does,\" he agreed. \n\n\"So,\" she smiled. \"Where are we going?\" \n\n\"Nope,\" he said, refusing to answer. \n\n\"What?\" \n\n\"You wouldn't tell me what you wanted for your birthday, so I'm not telling you what I got you for your birthday,\" he said firmly. \n\n\"But you got me something?\" she asked him, her eyes narrowing. \n\nShe had hoped that if she didn't tell him what she wanted he would not get her something extravagant. He blew that out of the water when they were walking to Madelyn's private plane. That in itself was extravagant. \n\n\"Of course I did,\" he said with a shake of his head. \"I got you exactly what you wanted.\" \n\n\"How do you know, when I didn't even know?\" she asked him. He lifted an eyebrow to answer her question without a word. \n\n\"Ok, Obi Wan, let's just see,\" she kissed him. \n\nSeveral hours later they walked out of the plane in what felt like a summer heat. \n\n\"Ugh!\" she exclaimed as soon as the heat hit her. \n\n\"Wow,\" he smiled. \"A lot different that Chicago right now!\" \n\n\"Were are we?\" she asked him. Now she was dying to know. \n\n\"Somewhere warm, obviously!\" he teased, still not relenting. \n\n\"Florida?\" she asked. \n\n\"Farther south,\" he laughed. \n\n\"The Bahamas?\" she gasped. \n\n\"Yes,\" he nodded. \"C'mon, the boat is waiting.\" \n\n\"Boat?\" \n\n\"Yes boat,\" he nodded putting his sun glasses on. \n\nThey spent another forty minutes on the boat before pulling up to a pier. \n\n\"Ok,\" she smiled as she took his hand to climb off the boat. \"I hate to tell you this, because I know you, but I don't have any clothes for this climate.\" \n\n\"I know,\" he wiggled his eyebrows. \n\n\"More shopping?\" she said trying to withhold the anger. \n\n\"Nope,\" he smiled. She looked at him. \"This is a private island. Turn around and wave.\" She did so as the boat was pulling away. \n\n\"That is the last human, well besides me, you will see for the next seventy two hours,\" he smiled. \n\n\"What?\" She gasped as he slipped his arms around her from behind. \n\n\"We are completely alone, for the next three days,\" he smiled kissing her. \"Happy birthday.\" \n\n\"You are all mine?\" She whispered breathlessly as he nuzzled softly around her ear. \n\n\"Always will be,\" he said into her hair with a smile. \n\n\"What am I going to wear?\" she asked with a naughty smile. \n\n\"I'm hoping very little,\" he winked as he picked up his bag. \"But I have a couple things in here for you if you feel the need.\" \n\nWalking into the little cabana she was floored. It had several fine amenities. Food and wine for them. The bedroom had a four poster bed with mosquito netting like you see in the tropics. \n\nLooking into the bag he brought, she didn't see much in the line of clothes for either of them. Most of the bag had toiletries, and a few sex toys. Rope, her wand massager, various lube. She shook her head. \n\n\"Just brought the essentials, I see,\" she laughed. \n\n\"Everything we need is already here,\" he smiled. He opened the closet door and there were various robes and wraps for women. \"But this island is all ours, we can be as dressed or undressed as we see fit. We won't see the boat again for three days.\" \n\n\"So there is nobody else on this island?\" she gasped. \n\n\"No,\" he smiled. \n\n\"No servants or wait staff?\" she asked. \n\n\"No,\" he smiled with a laugh at her disbelief. \"I could have asked for some, but I remember you saying you wanted me and only me. Some complete alone time. No family, no patients, no distractions. That is what I have tried to do for you here.\" \n\n\"I absolutely love it! It's exactly what I wanted!\" she said excitedly jumping into his arms. \n\n\"Think you can handle me alone for three days?\" He asked her facetiously. \"No interruptions?\" \n\n\"I'll do my best,\" she nodded kissing his lips. \n\n\"C'mon, the water is calling our name!\" he said pulling is tie off and undoing his buttons. She tilted her head at him as he fully undressed and grabbed a bottle of wine a couple of glasses from the bar. He walked down to the beach, uninhibited with his nudeness, his ass flexing as he walked away from her. She was stunned. He was walking naked to the beach, without a care in the world. The most cautious man she knew. \n\nShe sat next to him on the towel he laid out on the hot sand, her naked body touching his. \n\n\"We are sitting naked on the beach,\" she smiled in disbelief. \n\n\"We are,\" he said handing her a glass. \n\n\"I guess that is why you didn't worry about packing anything,\" she laughed. \n\n\"No,\" he agreed. \"This way, if I want to take you, I can. I don't have to worry about encumbering clothes.\" \n\n\"So...do you plan on taking me?\" she asked with a twinkle in her eye. \n\n\"Repeatedly,\" he said with a sinister grin, his wolf glimmering in his eye. \n\n\"Do you plan on fucking me in the ass?\" she asked him point blank. \n\n\"I plan on fucking you any way I desire at that particular moment,\" he said firmly. \"If I get the urge to fuck that pretty little mouth of yours, I'm going to fuck it.\" He ran his thumb over her lips as he said this. \n\n\"If I get the urge to devour that sweet tasting pussy of yours, I'm going to enjoy it like my last meal,\" he ran his hand down in between her legs and rubbed her sex, causing her eyes to flutter closed at the gentle touch. \n\n\"If I decide to fuck that tight little ass of yours, I'm going to do just that,\" he smiled as he slid a finger into her ass as she spread her legs allowing him full access. She gasped at the un-lubed intrusion. \n\nThey played and splashed it he water, enjoying their new found freedom. Alex relished it. The tender moments of laughter, of touching, of kissing. She couldn't think of one thing that would be more perfect than the moment she was having, except maybe the next, which seemed to eclipse the last. \n\nHe was so different right now. He was so relaxed. He was so hers right now. His phone was off and in the bedroom. Not that a cell signal was available anyway. But it was the first time she had seen his phone off! \n\nThey made dinner together, in the buff. Touching and kissing at will, each trying to tease the other. Each successful in their attempts. Dinner was quiet and candle lit and by the end, she was desperate for his touch. \n\nShe took him by the hand, as he reached over to pick up her plate. \n\n\"Tomorrow,\" she said sucking on his fingers. \"Right now, I need you.\" \n\n\"It's your birthday, your wish is my desire,\" he said with a smile. \n\n\"I'm holding you to that!\" she said taking his cock into her mouth there at the table as he stood next to her. \n\nShe gently suckled him, his cock growing in her mouth, making keeping his length in her harder and harder to do. Soon she had him fully hard, she gripped it with her hand and pulled him towards the bedroom that way. The look in her eye said it all. She had to have him. Now. \n\n\"I'm calling in your marker she said at the foot of the bed,\" she turned to him with a seriousness he hadn't seen all day. \n\n\"My marker?\" he asked her. \n\n\"For the Christmas gift,\" she reminded. His eyes fluttered closed. \n\n\"Ok,\" he said. \"What would you like?\" \n\n\"Your trust,\" she said nibbling on his lips. \n\n\"You have that,\" he smiled as she nibbled on his jaw line. \n\n\"We will see,\" she pushed him to the bed and then kissed and maneuvered him to the pillows. \n\n\"Close your eyes,\" she said to him. He hesitated for a moment. \n\n\"I hope you are not trying to switch on me,\" he sighed. \n\n\"No,\" she said shaking her head. \"But I'm hoping you go with the flow for a little bit. It is my birthday, and you owe me.\" \n\n\"Alexandria,\" he said with a skeptical frown. \n\n\"Trust me,\" she whispered. \"You are going to love it!\" \n\n\"I do trust you,\" he nodded. He laid back into the pillows and she smiled. \n\nShe went to the suitcase and pulled the rope, this had his eyebrows up. \n\n\"Trust me,\" she repeated and he twisted a frown/smile mix. He started to say something. \"Please Sir, trust me.\" \n\n\"Ok,\" he agreed closing his eyes. \n\nHe thought back to Madelyn and his conversation as he wondered what he could do if she wanted more than he could give. Madelyn said 'close your eyes and jump, let Alex to the rest'. This was one of those moments. He would have to do something that his brain seemed incapable of doing. Relinquish control. \n\nShe tied one wrist to the post of the bed. She then tied the other to the opposite side. She checked them to make sure they were secure, but didn't harm him. She had been practicing online while he was gone. She had found some basic knots to do. Nothing as extravagant as what Gavin would do, but she didn't need that right now. She just needed secured. ",
        "She straddled his waist, his hot cock sitting against her ever warming sex. \n\n\"This is not me,\" he pointed out firmly. \n\n\"It is for now,\" she smiled suckling his neck, then moving down to his broad chest. \n\nShe could see his chest rise and fall with his breaths. She continued to nibble, kiss and suckle her way down. Stopping at his nipples to give him some attention there. She let her tongue trail down him while her eyes were firmly locked on his. \n\nHe wasn't smiling, but he wasn't angry either. He seemed to be just waiting to see what she had in mind. The corners of his mouth tipping from time to time as he allowed himself to enjoy her mouth on his body. \n\nShe ran her tongue out of her mouth and around the head of his cock, nibbling on the end of it. His eyes fluttered closed for a moment at the sensations. She took hold of his balls with her fingers and brought them into her mouth and suckled each one individually, then combined, filling her mouth with them. \n\nShe then moved from them to his cock, engulfing it as far as she could, before her throat stopped its thrust down. She held it there, her eyes watering slightly as she looked up at him. When she could hold it no longer she pulled off slowly, swallowing hard when she had him from her lips. Her small hand fisting his hardness. \n\nDown she went again, slowly dropping, making inch after inch disappear down her throat under his watchful eye until she had him fully. She flexed her throat muscles as she had been practicing, milking his cock while he was in her throat, causing him to gasp at the feel. \n\nShe pulled off and began to suck his cock in earnest now. Her hand tightly wound around the base, her lips tightly enclosed on his shaft. Her head bobbing while she watched him. She smiled when his eyes closed and his head dropped back. \n\nShe felt his legs begin to flex around her, a sign of his building orgasm. She stroked him harder, she felt the pulse of his cock in her mouth. She pulled off and stopped stroking. Squeezing his shaft in her hand tightly. His eyes fluttered open as his orgasm was denied. \n\nHe tilted his head down to her and saw her smile as she kissed the inside of his thigh, up across his stomach. \n\n\"What are you doing?\" he asked her, his voice under duress. \n\n\"I'm doing something very specific to you,\" she smiled as she bit on his nipples. She brought back the memories of that first night at the Drake hotel. The night he finally fucked her. \n\n\"You are not edging me,\" he said firmly. \n\n\"Yes, I am,\" she smiled kissing his lips. Sucking his bottom lip into her mouth. \n\n\"You had better not,\" he warned. \n\nShe said nothing as she moved her way back down. Her eyes said it all. She was going to do it. He shook his head. Part of him was angry, part of him was laughing. This little perfect girl of his, was going to be a fantastic challenge. She had been since day one, and here nearly a year later, he was still being challenged by her. \n\nShe devoured him causing him to gasp as his cock twitched. She went after him ferociously. Her hand squeezing and pumping hard as she bobbed her head furiously. Never breaking eye contact with him. \n\nHis body told her he was close so she pulled off and caused him to growl as she squeezed back his cum. A small amount appeared at the slit. She slowly let her tongue go to it and pull it off. \n\n\"You are so going to pay for this!\" he growled as his orgasm was once again denied. \n\n\"I told you, some things are worth it!\" she smiled devilishly at him. \n\nShe waited several minutes before taking his still hard cock into her mouth. He gasped as his body screamed at him for release. She again brought him to the precipice. She watched him shake his head at her, warning her to not stop. She did. \n\n\"You are so fucking going to pay for this!\" He barked out in a laugh. She smiled as she licked his balls gently. Feeling them throb let her know he was ready to explode at any moment. \n\nShe left his cock and moved up to his face and straddled him. She lowered her sex on his lips and he devoured her in his passion. Sucking and tonguing as she pulled his hair and lifted his face into her sex tightly. She didn't deny herself her orgasm as she washed his lips with her quaking body as she came with a head back cry. \n\nHe continued to lap at her as she came down from her zenith, her body quaking with every lap. She looked down at him, her eyes sparkling in the light. Her smile one of utter satisfaction. \n\n\"I think you have cooled off enough,\" he smiled as she slid down his body, her hand gripping his cock and guiding it into her sex causing both of them to gasp as he entered her. \n\nShe began to grind on him, his hips lifting into her causing them both to close their eyes in their pleasurable sex. She let her head fall back and lost control of her own time. She came with a shudder on him and then looked and saw the marking on his face that he was close. \n\n\"Don't you fucking do it,\" he warned. She bit her lip in a bashful smile as she watched him closely. She rose off him and let his cock snap back down to his belly as she stopped the chance of his cumming. \n\n\"You have got to be fucking kidding me!\" he barked at her. \"Trust me, this is going to be repaid, in full...with interest!\" \n\n\"Don't worry my love,\" she whispered in his ear. \"Not only will that be the most pleasurable thing I can imagine, but I'm going to satisfy you in a ways you haven't allowed yourself to!\" \n\nShe nibbled on his ear, letting his hot cock throb against her wet sex as she just let it rub up and down his shaft. \n\n\"God I love you,\" she whispered taking his mouth and kissing him hard. \n\n\"I can't believe I finally found you,\" he said once she pulled her lips off. \n\n\"What do you mean?\" she asked. \"Someone to piss you off?\" \n\n\"No,\" he smiled. \"Someone to challenge me to be better. Better at sex, better at being a Dom. But most importantly, at being a better man!\" \n\n\"There is no way you can be a better man,\" she said pushing off his chest. \"You are absolutely, stunningly perfect.\" \n\nShe smiled down at him. \n\n\"One last favor, and I'll let you cum,\" she smiled. \n\n\"As you wish,\" he said cautiously. She had already taken more liberties than he was comfortable with, but in all this was better than he expected. Surprising for sure. But with Alex at the helm, it was devilishly pleasurable. \n\n\"Close your eyes, just for a moment,\" she asked. He did as she asked. Jumping into the danger, letting Alex do the rest. \n\nHe felt the cold wetness on his cock and knew what she was doing. \n\n\"Open your eyes,\" she demanded. \n\nHe looked to her and she was now facing the other way, a reverse cowgirl. Her back to him as she reached between her legs and pulled his lubed cock up. \n\n\"Alexandria,\" he warned. \n\n\"I will have you,\" she said over her shoulder, her smile showing this was making her very happy. \n\n\"This is not the best of positions for comfort,\" he warned her. \n\n\"Watch your cock,\" she demanded as she put the head of his cock at her anus. \n\n\"Alex,\" he said softer. \n\n\"No,\" she smiled. \"This is what I want. You owe me.\" \n\nHe was mesmerized as she lowered herself on his cock. His head pressing the tight ring of her ass. Her body resisting the entrance into the one hole that held painful memories. But she was about to push those into oblivion. Much like Gavin had done every man before him. Soon, the only thing that will enter her mind, will be the knowledge that they have satisfied each other in ways they hadn't imagined before. \n\nShe held her breath as she struggled with the hot searing pain that came with the intrusion of his head. She let out a soft hiss as it pushed in initially. The head disappearing into her caused her to gasp as it passed the outer ring. Her ass holding it tightly within her. \n\n\"Take your time,\" he said softly. \"Let your body adjust!\" \n\n\"Yes, Sir,\" she hissed out as the pain felt like she was on fire in her hole. Her body began to shake with apprehension. It already hurt, and he was barely in her. All the work with the plugs seemingly had no effect. It still hurt! \n\n\"Jesus Christ!\" he gasped. \"Stop! I don't want to hurt you like this!\" She looked back over her shoulder at him. \n\n\"Your face says otherwise!\" she smiled recognizing the awe he had in his eyes as he fully enjoyed the sight of his cock in her ass. \n\n\"I don't want to hurt you,\" he said looking up at her, tearing his eyes from the most delicious sight he had seen. \"Not for this, this takes time!\" \n\n\"Do not avert your eyes, Sir,\" she said with a forced smile. \n\nHer mind and heart was pleased. Pleased to see his admiration of her attempt. Now she had to get him to cum in her, to watch his face in that blissful moment of release. The way she had seen when he had cum in Elizabeth. No matter the pain, no matter the punishment he would invoke later. It would be worth it when he exploded in her. The one hole he had yet to fill. \n\nShe had worn his cum, tasted it and had it in her sex. Now she wanted it dripping from the one hole he desired most. The one he had denied himself for her comfort. Now she would force it, now she would make the sacrifice for him. He had sacrificed, he denied his desire for her. Now she would satisfy him. With no regrets. \n\nHis eyes were locked onto his cock, his head completely in her tight ass. Her ring collapsing tightly on his shaft now. The lube she had put on him glistened on his shaft and built up at her entrance as her tightness pushed it off of him as he entered her. \n\nHe watched the magnificence of it, as she slowly lowered herself, her ring caving in under the pressure from his size. She got about half of him in her and she stopped. He looked up at her and she was smiling at him. The pain was still there, but she was enjoying what she was doing for him. She was enjoying the pleasure written all over his face. \n\n\"You look absolutely stunning,\" he whispered. \"You are the most exquisite woman I have ever had in my life!\" \n\n\"Thank you, Sir,\" she said with a gasp. \n\n\"Please,\" he said softly. \"Stop. You have done more than enough to satisfy my every desire!\" \n\n\"Not until you fill my ass with your cum!\" she said determinedly. \"I have to have it!\" He shook his head. \n\nThere was just no dissuading her when she set her mind to something. From deep throating him early on, to suffering through his temper from time to time. Now this, while his heart wanted her to stop, to keep herself from the pain this was writing on her face, his desire for it was overwhelming. \n\nShe continued to lower herself on him. Slowly. Carefully. She held her breath from time to time, then reminded herself to not hold her breath. Soon she looked back with a smile. She had him fully in her. The firmness of her ass now set on his groin. \n\nHe lifted his eyes to hers after he was fully in her. His wolf's smile on, the only thing missing was the wagging tongue and that pleased her. \n\n\"Easy,\" he warned her as she began to lift up. She nodded but her eyes were closed as she began to lift off and pull his cock from her. She went a few inches up then lowered herself back down. \n\n\"Fuck,\" he gasped as she did. \n\n\"God your cock feels huge in my ass!\" she smiled back at him. \n\n\"I love the way your ass feels!\" he smiled at her. \"Go slow!\" She shook her head. \"Go slow!\" \n\n\"You are not in charge!\" she reminded. \n\nShe bit her lip and began to lift herself a little faster and dropped down with a little more force. She cried out a little as she did this. She watched his face and he was lost in the sight of his cock in her. \n\nShe began to increase her speed as she went, she couldn't get up to the speed he fucked Elizabeth that night, but she hoped she could. The pain kept her from doing so. But it didn't matter. He still had that look on his face that he had that night. That look of utter satisfaction as if nothing was more pleasurable that what was going on right now. \n\nShe never took her eyes off him. She rode him, as hard as he body would allow. He would watch his cock for a few thrusts, then look up at her. He was concerned, she could see that behind the lust in his eyes. She smiled to let him know she was ok. \n\nShe used his thighs to help her ride him, pushing off him with her hands. Soon their bodies were filling the room with noise from their collisions. \n\n\"God fucking dammit,\" he growled and she smiled. \n\nHe began to lift into her unconsciously. Hurrying his lust up, she said nothing even though it pushed the pain level up another notch higher than she was comfortable with. But it was worth it. \n\nHe came with a shudder and a loud growl, an audible animalistic sound that she had not heard from him before with her. One of utter satisfaction, she pressed her hips down as she felt him buck in her. Smiling, knowing he was filling her ass with cum. \n\n\"Yes, Sir!\" She called out as she felt him. \"Cum in my ass!\" \n\n\"Fuuuuccckkkk!\" he growled as he did so. Soon his eyes were tightly shut and she was watching him carefully. She smiled when she realized, she had done what he had done to her so many times. \n\nShe had fucked him into a dizzy."
    ],
    "authorname": "CJT",
    "tags": [
        "bondage",
        "anal",
        "oral",
        "rough"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-29"
}