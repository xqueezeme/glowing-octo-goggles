{
    "title": "Distractions Ch. 11",
    "pages": [
        "\"Are you ever gonna tell him?\"\n\nMy brother had been standing in the door of my room with his arms folded across his chest for the last twenty minutes glaring at me. I was choosing to ignore him.\n\n\"Tell who what?\" I was exasperated, sick of playing this game with Brenden. He'd been following me around all week glaring at me and making tisking noises.\n\n\"You know what I'm talking about!\"\n\n\"Don't yell at me, and no, I can't think of anyone else besides you that should know.\" So, I was being a baby. Sue me.\n\n\"So you're not going to tell Gavin? At all?\"\n\n\"Nope, and you better not say a word.\" I shot my brother a look. The point was to have a clean break from Gavin, and as far as I was concerned, I was going to get one. If he wanted to dick around with that whore, Cassie, then that's his business, and there was no reason for me to be involved.\n\n\"Well, that's stupid.\"\n\nI threw another shirt into my suitcase. \"The point of me wanting to go to California is to start over and get away from all the bullshit.\"\n\n\"So, you're just gonna leave?\" I couldn't believe my brother was being this obtuse. \"How do you think that's gonna make him feel, Red?\"\n\nI scoffed and snatched up another pair of flip-flops from the floor. \"That's not my concern.\"\n\n\"So, you are going to walk away from him&hellip;twice?\"\n\nI'm not sure what the first time was, but I shrugged my shoulders. \"I'm not walking anywhere, I'm getting on a plane and going to med school.\" I faced my brother and met his astounded look.\n\n\"So, I'm guessing you two aren't going to the Mayor's Birthday Party together, then.\" I stood staring at Brenden. I figured that was enough of an answer. \"I'm also going to take a stab in the dark here and assume you didn't invite him to your little going away shindig?\"\n\n\"I don't even know why you felt the need to throw me a party, Bren.\" I was just trying to further avoid his line of questioning because it always ended in an argument.\n\n\"My little sister is going to Cali, I can't throw her a party?\"\n\n\"But &ndash;\"\n\n\"No buts.\"\n\nI shrugged my shoulders. \"Are you gonna stand there all afternoon or are you gonna help me pack?\"\n\nBrenden shook his head at me &ndash; again. \"Talk about fucking up a friendship.\"\n\n\"I told him it was gonna happen,\" I said as I turned back to my suitcase. I stood staring at my bed trying to think if I forgot anything.\n\n\"That's all you have to say about this situation?\" Brenden was furious as he rushed into my room, spun me around and got in my face. \"Those four words to the one guy who'd give his left nut to make you happy? The one guy who beat the shit out of Wilson, repeatedly? The one guy who helped me beat down the entire baseball team in high school because they were talking about you?\"\n\n\"Are you done?\" My brother was so upset because Gavin and I had effectively pried apart The Three Stooges that have been together since the beginning of time.\n\nI turned back to my suitcase intent on letting Bren throw his little tantrum without me watching and smacked me on the back of the head.\n\n\"The one guy,\" he said in a quieter tone, \"who truly cares about you. The one guy who lov-\"\n\n\"Don't you dare say those words!\" I turned back to him fire in my eyes. Bren had been treading on thin ice, and he just broke it. He could say whatever he wanted, but he wasn't going to tell me Gavin loved me &ndash; that Gavin was in love with me, when Gavin never felt the need to say it to me himself - or show me. I'd been trying to fight off the despair threatening to take over, and I didn't need my brother poking holes at my defenses trying to stir it up. My brave face worked this far, and it was going to continue to work. \"You are not gonna say it for him.\"\n\n\"You never gave him the chance to.\"\n\nI turned my back to Bren. I didn't want to hear anything else he had to say, let alone see that look in his eye. He was looking at me like I was making a colossal mistake.\n\nBut I wasn't making a mistake; self-preservation just wouldn't let me fall for what Gavin was trying to sell me. Gavin and I have been best friends forever, which means I know that he's pulled this routine with other girls before. And I know what happens in the end, the girl gets hurt, and Gavin escapes unscathed. I wasn't going to be one of the masses that had fallen for his bullshit and cried about it.\n\n\"Whatever,\" Brenden said as he took a step back. I was ashamed for showing that I still had some emotion towards Gavin, but fuck him. Fuck this place, I'm going to California. \"I'm out.\" Brenden stomped from my room and out the front door.\n\nMy relief was short lived when I felt the nausea hit. I rushed to the bathroom hoping to make it before it was too late. \n\nYep, I'm doing the right thing.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nBrenden was sick of this shit. All of it. He knew this was going to happen, but does anybody listen to him? Nope. Nobody pays Brenden any attention, and now he was reduced to being the go between. Under normal circumstances, he wouldn't be caught dead doing something like this, but the bullshit between Red and Gavin was starting to affect him. He couldn't hang out with his two best friends because they had their heads so far up their asses. \n\nHe shook his head as he jogged up the stairs to Gavin's apartment. He just hoped Gavin was in there &ndash; he hadn't seen him in days. His car and bike were parked outside, but that didn't mean much.\n\nBrenden slipped his key into Gavin's lock and twisted. He pushed the door open and stepped into the dingy living room. Someone's been moping. It took a minute for his eyes to adjust to the darkness in the room despite the intensity of the sunlight shining outside.\n\nAs his eyes roved over the room, he caught the outline of his best friend sitting in the recliner in front of his flat screen.\n\n\"You've got to be kidding me,\" Brenden said as he sat down on the couch across from his pal; at least what used to look like his pal. This guy had day's worth of growth on his face and looked like he hadn't bathed in weeks.\n\n\"What?\" Gavin never took his eyes off the TV. He was watching the Discovery Channel. \n\nThis is serious. \"Fucking pitiful.\"\n\n\"You can leave.\"\n\n\"Are you gonna stay in here moping forever?\"\n\n\"I'm not moping.\" Bren rolled his eyes.\n\n\"You can leave. No one's forcing you to be here.\"\n\nBren flipped Gavin the finger. \"You and I are going to be spending a lot more time together.\"\n\n\"Why, finally admitted to your homosexual fantasies about me?\" Gavin asked with a smile. Well, that's a start.\n\n\"Fuck you. We are going to be spending more time together because Red is leaving.\" Brenden watched Gavin closely and noticed the slight tension enter his limbs. There's hope yet.\n\n\"That's good for her,\" came Gavin's response after a pause. \"She got into med school?\"\n\n\"Yep. In Cali.\"\n\nGavin's eyes grew to the size of saucers as he faced Bren for the first time. \"She applied for Crownan here in town, but apparently there were no more spots in that program, so they told her if she wanted, she could go to California. She's home packing right now.\"\n\nGavin turned back to the television as Brenden spoke. He kept his eyes fixed straight ahead, as he nodded his head.\n\n\"I don't know how she's gonna make it,\" Brenden said pressing on. \"She's been sick lately and very emotional.\" Brenden wasn't sure what was wrong with his little sister, but based on the way Gavin was grinding and clenching his teeth, he knew he could be on the right track.\n\n\"What?\"\n\n\"Yea, I don't know man,\" Bren continued trying to feign innocence. \"She's all loopy and shit. She'd kill me if she knew I told you she cried loud enough for me to know. I don't always hear her, but I can see it in her face in the morning.\"\n\nGood, Gavin thought to himself. She needed to feel as bad as he did. Then he immediately scolded himself for thinking that. Then something dawned on him, but he pushed the thought from his mind. No, there was no way she could be. If she was, or thought she was then she would have told him, right?\n\n \n\nBrenden could see the emotions playing across Gavin's face, and he felt very pleased with himself. \"You still going to the Mayor's Birthday Party?\"\n\n\"Dunno,\" Gavin answered distracted.\n\n\"Well, Red's still going. She bought a real pretty dress.\" Brenden waited for Gavin to respond, but when he didn't, he kept talking. He just had one more thing to say. \"A bunch of us are getting together the Friday after the Mayor's Ball as a going away for Red.\"\n\n\"So?\" Gavin asked irritated, but Brenden knew better. It was much easier for Gavin to act pissed than concerned. \"When does her semester start?\"\n\n\"I have no idea. I'm guessing in a couple weeks. But who knows, she doesn't tell me anything anymore.\"\n\n\"Then why are you telling me this?\" Gavin looked at Brenden with hurt in his eyes. Brenden almost felt bad for the guy, but they both did this to themselves. \n\nBrenden stood and straightened out his jacket. \"Riley's bar at eight thirty, then she's gone.\"\n\nBrenden left the way he came without so much as a backward glance.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nI sat on my bed staring at the business card Ben had given me that night in his office. It felt like a lifetime ago, but only a couple days had passed. I'd been taking turns staring between the card and the ridiculously priced dress I'd bought for the Mayor's Birthday Party. \n\nI felt the pang of despair as I remembered how happy I'd been when I bought the dress hoping to see excitement in Gavin's eyes when he saw me in it. I took a deep breath and pushed that thought from my mind. I needed a date, and I'd be damned if I was going to show up at that party alone.\n\nI called Jeremy, but he blew me off. He kept apologizing, but he wouldn't budge. He said there was no way he'd go to the party with me. Apparently, he was still bitter out me telling him we were just friends but whatever, I still needed a date.\n\nSo, here I sit staring at the business card trying to convince myself there are a billion reasons why I shouldn't call him. Ben's a doctor, if he's going to the party, I'm sure he already has a date. And he's hot; he probably has three dates.\n\nI flopped back on my bed with my phone in my hand. What's the worst that can happen? He says no, and I still don't have a date. Its not like I'm unused to rejection. That seems to be my theme lately.\n\nThat thought sobered me up, and I dialed the number before my mind realized my fingers were pressing down the buttons. When the phone started to ring and I was afraid I was going to hyperventilate, but the old me was back I pushed those feelings down. I didn't give a shit if some hot doctor didn't want to go out with me. Worst-case scenario, I'd show up at the stupid party alone and have a great fucking time.\n\nMy pep talk was winding down when someone picked up the other line.\n\n\"Hello?\"\n\n\"Hi, I'm looking for Ben.\" I cringed. I wasn't sure what the proper etiquette was when calling a doctor on the phone when calling for a date, but it was too late now.\n\n\"Yes,\" he said in a guarded tone.\n\n\"Its Isabelle.\" I wasn't sure how to continue. I was certain he'd forgotten me by now. \"I had the pleasure of trying to run you over in the hall last week in my haste to make it to the Admissions Office before they closed.\"\n\nHe chuckled, and it immediately relaxed me. \"Of course. Hey, Isabelle,\" he said sounding more comfortable. I could hear the smile in his voice. \"I was beginning to think you forgot about me.\" Now it was my turn to laugh. \"But I'm glad you didn't. What can I do for you?\"\n\nI didn't think it would be polite to just jump in and ask him to be my plan B for the party, so I asked him if he wanted to get some coffee, or whatever it is Dean's of Admissions do for fun. He laughed again and told me he would prefer my company at dinner, but coffee would do for now. I found myself smiling into the phone in a way I hadn't done since I was a teenager.\n\nHe asked me if I would like to meet him later and I said sure. Its not like I had anything to do. We talked for a few more minutes than disconnected. I had a foolish smile on my face when I pulled my front door open. I might get to wear my fancy dress after all. I had some time to kill before I met up with Ben, and I figured it would be wise to spend that time looking for a purse to go with my dress. \n\nI was walking out the door when I stopped myself just in time. I almost slammed face first into Gavin's chest. \"What do you want?\" His face hard as stone as he glared at me. The smile dropped off my face, and I returned his glare in kind. \n\n\"Where are you off to?\"\n\n\"Coffee.\"\n\n\"With Jeremy?\"\n\n\"Does it matter? What do you want?\"\n\nGavin pushed past me into the apartment then grabbed my arm and dragged me behind him when he realized I had no intention of following. \n\n\"I want to know why you did it.\" He said through gritted teeth, his fingers biting into the flesh of my upper arm.\n\n\"Did what?\" Gavin's glare intensified. \"I didn't do anything with Wilson.\" I said through clenched teeth. Leave it to Gavin to ruin a perfectly happy mood.\n\n\"I watched him kiss you. I watched him put his hands all over you. What's he got?\"\n\n\"Possibly the same thing Cassie's got. I watched her leaving your apartment. I hope you plan on getting yourself tested.\"\n\n\"Don't change the subject. Wait, what?\"\n\n\"I saw her leaving your apartment Friday,\" I said as I wrestled my arm from his grasp. \"I went to explain to you that nothing happened between Wilson and I. He cornered me and must have known you were in the parking lot.\"\n\n\"She wasn't in my apartment,\" his brows knitted in confusion as I sighed heavily. \n\nI glared at him, trying to remind my body that I was mad at him. Seeing him was causing my hear to pound painfully in my chest, and I wanted nothing more than to press my body to his, but control was the word of the day. \n\nI took a step back convinced space would help my resolve when Gavin burst into laughter. \"Wow, she's persistent,\" he said to himself running a hand through his hair. \"You know her new squeeze lives on the fifth floor, right? Unbelievable,\" he said again as he shook his head in disbelief. \"Don't tell your brother, but we are really fucking stupid.\" \n\n\"So, Cassie wasn't in your apartment?\"\n\n\"No.\" For some reason, I felt like the bigger ass in all this.\n\nI sighed not sure how I was supposed to feel about this revelation. I knew what I wanted to feel, but I didn't know how I needed to feel. Apart of me wanted to jump for joy, but the other more protective part wanted to run from these feelings. I had to try hard to force down the spark of hope Gavin ignited. So what Cassie and Wilson lied? That doesn't change the fact that Gavin and I should never have crossed that line. Never. Now what?\n\n\"Yea,\" I said quietly. \"We are dumb.\" Life was easier when I thought my best friend was fucking Cassie. Now what are we supposed to do?\n\n\"So, you were gonna leave without telling me?\"\n\n\"I didn't think you cared.\" Hurt flashed in his eyes before he could disguise it. \n\n\"Its one thing to be mad and not talk to each other. Its another thing to leave the state, Red.\"\n\n\"Yea well, like I said, I really didn't think it mattered to you&hellip;\"\n\nGavin took a step closer. \"I'm sorry I made you angry enough with me to think I didn't care. I'm sorry I jumped to conclusions. I'm sorry I left you there.\" Call me a coward, but it was easier to let Gavin be the brave one and apologize. \n\nOh no, my self-preservation can't handle this&hellip;Gavin the Great never apologized.\n\n\"I'm so sorry, Red. Please forgive me.\" Here he was begging for forgiveness and I was as much to blame. My insides clenched as I took a step back. It wasn't fair. If Gavin weren't Gavin, it would be easier to hate him but if he weren't Gavin, I wouldn't love him.\n\nMy mind was frantic as I tried to think of something to say to get us back to normal. I'm sure you noticed by now that I'm not fond of change, even if it's a change that I've wanted nearly my entire life. I was smart the first time I didn't want things to change between Gavin and I. I was right, because look where we ended up. We'd both crossed a line that we should have stayed away from, and now we were barely talking to each other. \n\nNo, no change was bad. Why fix something that wasn't broken? I wasn't going to loose Gavin as a friend even if that meant the possibility of him being more. Call me crazy, or call me stubborn, but I loved him too much. And yes, that was the second time I admitted that to myself, which is exactly why I couldn't allow him to talk me back over that line. \n\nI loved Gavin probably more than he would ever know, but I couldn't chance something stupid like this happening again. If I was ever going to get things back to the way they were, I had to stop this now.\n\n\"Listen, maybe we should just think about this.\" My mind was going a mile a minute as I backed away from Gavin thinking the physical distance would help adhere my thoughts. Gavin's brow creased as he watched me move away from him. The pain in his eyes was cracking at my resolve, but I had to. He took another tentative step towards me and I stepped away. I couldn't let him touch me.\n\n\"Just because we know they lied, I mean, maybe it's a sign, you know? Maybe we are better friends, and that's all we should be.\" My words stopped Gavin and I could see his thoughts racing through his head as he tried to make my words make sense. I was babbling, but I couldn't stop. \"I mean that makes sense, right? I don't even know if you love me, love me, or if you just love me like your best friend. Just because I love you, doesn't mean everything will &ndash;.\"<br/>\n\n\"What did you say?\"\n\n\"What?\"\n\n\"What did you just say?\"\n\nI took a deep breath trying to settle my nerves. \"That maybe it would be better if we just stayed best friends. Bren would probably like that too,\" I said with a nervous chuckle. I felt like I was going to puke.\n\n\"That's not what I was talking about.\"\n\nNow it was my turn to be confused and judging by the grin threatening to tug at the corners of Gavin's mouth, the confusion was etched across my face. \n\n\"You said you loved me.\"\n\nOh Christ. \"I did not.\" I took another step back as Gavin stepped towards me. Just what he needed another reason to think I was pathetic. Shit. \n\n\"Yes you did.\"\n\nHe backed me into the kitchen counter and before I could blindly work my way around it, he pressed his body to mine. I tried to think of a way out of this, but my brain wasn't working fast enough. The feel of his breath mixing with mine was making my head spin. \"You said you loved me.\" I was still trying to figure out how to get around the table when his lips pressed sweetly to mine. \n\n\"Did you mean it?\" \n\nI was slowly loosing the rational battle with my mind as I felt his fingers tangle in my hair. I knew I lost the battle when he snaked his tongue in my mouth and his name escaped my lips. I was doomed. \n\n\"Isabelle,\" he breathed across my lips. \"Did you mean it?\" \n\nI couldn't lie. Not with his lips dancing over mine like they were. \"Yes.\" The word was barely audible as I felt its weight settle around us. There it was, out in the open. He knew it now, and there was nothing I could do about it. My eyes lowered as I waited for the inevitable. \n\nHe cupped the sides of my face as I met his gaze. I was going to meet his reaction like a woman. I steeled myself for what he was going to say he pressed his lips to mine. It wasn't a sisterly kiss, or one you'd give a best friend. This was a real kiss, like he was trying to tell me something words couldn't describe. \n\n\"Gavin?\" His name escaped my lips as a question, but what I really wanted was to hear him say something, anything that would ease the hysterics inside me. But he said nothing as he pressed his lips harder to mine this time. The sound of his name breathlessly passing my lips was like a trigger. I gave in, because something in me said it didn't matter what he said. I wanted this. I would worry later, right now, this felt right. ",
        "All the fighting I did with myself, and I ended up right back where I started, hopelessly in love with my best friend, and no idea how he felt about me. My hands wrapped around the base of his neck as I tried to pull him closer not worrying about what would happen later, just focusing on the now. \n\nHis lips were frantic on mine as he pressed his lips hotly to mine. I didn't protest when his hands found my hips and slid securely around my thighs and lifted me. My legs fastened around his waist as he began walking us towards my bedroom. I tried to remember if I left my room presentable for him to see, but I couldn't concentrate with the feel of the bulge in his pants pressing into me. \n\nHis fingers fumbled with my shirt and I lifted my arms over my head to help him. He laid me down on the bed and tugged my pants off after I fumbled with the buckle. I didn't realize how much I missed the sight of Gavin's body until he pulled his shirt over his head and tossed it behind him. \n\nI didn't mean to let out the whimper I did as I watched his hair fall into his eyes and he struggled to undo his belt. Gavin looked at me with a question in his eyes, undoubtedly thinking I had changed my mind. I smiled shyly at him and motioned him closer. His eyes darkened and his smile widened as he climbed between my legs. \n\nHe brushed his fingers through my hair and gripped me possessively as he ground his body into me. \n\n\"Don't ever do that again, Gavin,\" I said as his face settled above mine. \n\nHis eyes continued to search mine as he tightened his arms around me. He nodded and pulled me closer. I don't think he realized he never got a chance to take his pants off before he was slipping into me over and over.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\n\"Red?\" I didn't want to open my eyes. I didn't want to wake up just in case this was a dream.\n\n\"Huh?\"\n\n\"I gotta go, but I will be back as soon as I can.\" I shifted towards him as he drew lazy circles on my bareback. I raised my eyebrows at him in question. \"I promised some people from work that I'd meet them to talk about a project we're doing.\" He looked at me like as if afraid I would be angry. Instead, I smiled and kissed him gently on the lips. \n\n\"I will be back as soon as I can.\"\n\nI nodded again and settled my head in the crook of my arm. I was sated and didn't want him to leave, but I had to be real. \n\n\"Okay, see you later?\" I tired to ask as nonchalantly as I could. What I really wanted to know was if he loved me the way, I loved him. I wanted to know if we'd be okay or where we stood, or if I'd ever see him pulling on his clothes after sex with me again, but I kept my mouth shut.\n\n\"Definitely.\"\n\nI smiled as I slid myself higher up in the bed. I watched as he moved about my room gathering his clothes. There was something so undeniably sexy in the way his muscles shifted under his lightly bronzed skin. \n\nGavin sat on the edge of the bed and pulled on his shoes. He looked at me shyly and tucked an errant stand of hair behind my ear. He leaned in close and kissed me deeply forgetting he had somewhere to be. When I finally pulled back, I asked him what time he was supposed to meet his coworkers, and he smiled against my lips. He kissed me briefly then told me he'd see me later as he rushed out the door. \n\nI glanced at the clock curious to see exactly how much time had passed while I was with Gavin. Oh, shit! I didn't realize what time it was, and Gavin provided the perfect distraction. I jumped up and scrambled to throw on my clothes. It was too late to call Ben and cancel; he was probably already on his way to the coffee shop.\n\nI cringed as I realized I would smell like Gavin as I hurriedly got dressed and ran out the door. I swept my hair up in a messy bun and prayed I didn't look as if I'd just been thoroughly fucked. \n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\n\"Seriously?\" I asked by way of hello when Ben finally stepped onto the curb. I'd gotten to the coffee shop first, and I was waiting for him outside when he pulled up.\n\n\"What?\" He asked me innocently as his full lips revealed his shiny teeth. He glanced at his watch. I'm not late, you're early.\"\n\nI tilted my head to the side and glared at him. \"Who drives to a coffee shop in a $300,000 car?\"\n\nHis smile widened. \"So you know something about cars?\"\n\n\"I know the Dean of Admissions makes good money, but not that good.\" \n\nBen nodded and shoved his hands in his pants. \"Do you like it?\"\n\nI rolled my eyes at him tying to fight the urge to run up to the car and press my face to the glass. \"The only person that wouldn't like that car, wouldn't know what kind of car it was.\"\n\n\"Yea well, I just bought it because I saw it in a movie.\"\n\nI glared at Ben incredulously. I let out a heavy breath, mostly because I wanted to keep from squealing. \"Quantum of Solace. That's James Bond's car. You're driving James Bond's car. The 2009 Ashton Martin DBS.\"\n\nI turned my gaze back to him absolutely mystified. For the first time since I met him, he looked embarrassed. \"Was it too much?\"\n\n\"Too much?\" I asked shaking my head. \"Who the hell drives James Bond's car?\"\n\nBen was looking at the car with a regretful look. \"I brought it out to impress you.\"\n\nMy eyes flashed wide. \"What?\" Who was this guy? And why'd he come along after Gavin and I made up?\n\n\"Every woman judges a man by the car he drives. I was kind of an ass the other day and I kinda wanted to sugar coat things. Did it work?\"\n\nI shook my head at him, trying not to be distracted by the light bouncing off all the chrome on the car. I grabbed his hand and pulled him inside. \"I have news for you, I'm not like other women. I judge a man based on what's in his wallet.\"\n\nBen looked at me like I was crazy until he saw the wide grin spread across my face, then he smiled too. \"See, I knew we would get along.\"\n\nWe stepped up to the counter and ordered our coffee. The entire time, I was trying to steal glances at this handsome man. He was taller than I was with dark hair and dark sparkling eyes. He had a genuine smile and a lean body. He was a doctor and he was obviously rich, so there had to be something wrong with him.\n\nHe didn't have any body odor, no bald spot&hellip;he wasn't staring at my tits. Maybe he has a tail. Oh my god, he's married. The thought never crossed my mind before now. Holy shit, was I stupid. I tried to steal glances at his hand, but I couldn't see anything. I was still deep in my assessment when he pulled out a twenty and tried to pay for my coffee.\n\n\"Oh no you don't, you better save your money because you have to put gas in that thing. At twelve miles per gallon, you better save your quarters, unless no one told you the rest of the country is in a recession right now?\"\n\nHe tilted his head back and let out a good solid laugh. \"Already jumping to the jokes, are we?\"\n\nI smiled. \"Yep, I can't resist when you leave yourself wide open like that.\"\n\n\"I will have to remember that,\" he said as he led me to an empty table near the window. I wasn't sure if it was so he could keep an eye on his car, or if he wanted to remind me, he was rich enough to have one.\n\nWe sipped coffee in silence as we watched the occasional pedestrian stop and gawk at his car. After the third person, I had to ask. \"So, how does the Dean of Admission afford such a car, assuming its not rented? If you don't mind me asking.\"\n\nHe shook his head and smiled. \"I'm a neurosurgeon too.\" I started at him. Now he was just yanking my chain. \"I'm serious. I have a very demanding practice, but the school needed someone. It's a small school in a small town, so the Dean of Admissions doesn't have much to do. Lots of the older doctors in town just don't want to be bothered. I don't have a family, so I have no reason to want to spend all my free time at home.\"\n\nI glanced down at his left hand. Nope. No ring.\n\n\"Oh.\" I was staring at his face trying to calculate his age. Four years of medical school, about two more as a surgical resident, and another lets just say three of specializing in neurosurgery. That put him somewhere in the range of 33 to 37, and that was being modest.\n\n\"I'm 36 and a half. I could see the wheels turning in your head. I graduated from medical school two years early. Apparently I'm wicked smart or something,\" he said with a grin.\n\nI was starting to feel bad about being polite and not canceling on Ben when I had the chance. I should have said screw it and stayed home. I had to keep reminding myself Gavin was all I ever wanted.\n\n\"I shouldn't have called you,\" I said looking him in the eye. \"I'm real sorry, especially because I want to get inside that awesome car.\"\n\n\"You still can, you know,\" he said holding my gaze and effectively ignoring the first part of my question. \"Its not like I cant be your rich, handsome friend who just happens to be driving a DBS.\" \n\nAt least he's a good sport, I thought as I grinned widely. I sat staring at him for another minute. Wow.\n\n\"Can I ask you something?\" He asked as he stared into his cup.\n\n\"Shoot.\"\n\n\"I was surprised when you called&hellip;and it wasn't a professional surprise.\" I nodded. \"What happened to the boyfriend you said you had? If I'm being too personal, you can tell me to shove it.\" \n\nI smiled at him.\n\n\"So we're being honest, right?\" He nodded. \"He and I are,\" I paused because I wasn't sure what we were. \"Working things out, which sort of happened right after I got off the phone with you. Apparently communicating feelings is a huge problem for us.\" I cringed a little because I know no guy wants to hear a girl talk about another dude. \n\n\"Go ahead,\" Ben encouraged as he took a sip of his coffee. \n\n\"Its different when someone was your best friend and then you decide to take things further. It's harder because you know everything about them. Sometimes it's not always good. I'm sorry,\" I said. \"I don't mean to babble, its just I'm &ndash; we are still adjusting. Hopefully, I won't loose one of the two people closets to me. But I think things will be okay I guess,\" I said as I remembered how I spent the afternoon and how we left it. \n\nI confessed my love, even if it was by accident, then he had to go to a meeting. Does this mean Gavin and I were fuck buddies? Do fuck buddies confess their love for each other? I think not. I was more confused than before.\n\n\"And to think, I was gonna ask you to the Mayors Party.\" Bens voice pulled me from my thoughts that were starting to spiral out of control. \n\n\"Now you're just rubbing it in,\" I said with a grin. There had to be a catch with this guy because this was too easy. \"What, no hot nurses lined up waiting to take your temperature?\"\n\n\"Like I haven't heard that one before.\"\n\n\"Just thought I'd give it a try.\" Ben smiled and looked at me questioningly. \"I would have gone with you, but only because of the whole car thing. That was a really good move.\"\n\n\"I'm glad you like it. Most women don't even know what the emblem is on the front.\"\n\n\"Like I said, Ben. I'm not like most women.\"\n\n\"Indeed,\" he said taking another sip of his coffee. \"Indeed.\"\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nI was lying in bed staring at the ceiling in the darkness trying my hardest not to compare Ben to Gavin. \n\nMy eyes had adjusted to the darkness and when my door opened a crack, I noticed immediately. Bren was a sleep in his room; I could hear him snoring, so I knew it wasn't him.\n\n\"Are you awake?\"\n\n\"What are you doing here?\" I could see Gavin peeking his head around the door. \n\n\"I couldn't wait to see you,\" he said as he stepped into the room and pulled the door closed behind him. \n\nI laughed because this was weird. \"Oh really? What of mine did you lose? Or break,\" I asked with a smile. \n\n\"Nothing,\" he said as he slipped off his shoes and pulled off his shirt. \"If this is all the time I have with you, I'm not going to spend it sleeping alone in my bed.\"\n\n\"Oh.\"\n\n\"Oh?\" he asked as he smiled at me in the dark. He pulled on a lock of my hair as he climbed over me into my bed. \"Lets talk about this Cali thing.\"\n\nMy smile widened as he pulled me into his arms and I molded to him. \"What do you want to know?\" Suddenly, I was giddy. This was just like old times. \n\n\"When do you leave?\"\n\n\"Sunday, I think. I've put off thinking about it.\"\n\n\"Are you gonna miss me?\"\n\n\"I'm not so sure.\" I turned my head in his chest knowing that I couldn't keep a straight face. \"This sensitive and nice Gavin is kinda creeping me out.\"\n\nGavin pulled my hair, and I pinched his side. I closed my eyes and breathed in his fresh scent. He must have gone home after his meeting and showered, because he smelled amazing. \n\n\"Can I come visit you?\" he asked quietly.\n\nWas he serious? I hadn't even made the decision yet.\n\n\"I guess, I mean, if you want. But that would be kinda silly wouldn't it?\" I felt his body stiffen under me. \n\n\"Yea, I guess four years is plenty of time for you to forget all about us as build yourself a whole new life, huh?\"\n\n\"What are you talking about?\" My voice full of irritation. \"I'm going to California this time to see if I like it.\" I tilted my head up so I could see his eyes through the darkness. \"Didn't Bren tell you?\" I asked when I was met with his confused expression. \"I wouldn't move all the way out there without first seeing if I liked it. I'm only going for a few days to look at the campus and stuff and check out the school.\"\n\nGavin's grip on me tightened. \"So what happens if you like it?\"\n\n\"Then I go there for four months. If I like it I can stay and finish.\"\n\n\"And if you don't like it?\"\n\n\"Then I come home, wait four months and start my first semester here.\"\n\n\"Your brothers an asshole,\" Gavin said after a pause. \n\n\"I know,\" I whispered as I leaned up to touch his lips with mine. We didn't do much talking after that. \n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\n\"You do realize that my brother is on the other side of that door, right?\" The words came out in short gasps.\n\n\"Uh huh,\" Gavin grunted as he pushed himself deeper into me. \n\nMy fingers were white knuckling the edge of my dresser as I tried to maintain my grip on reality. Gavin had come into my room nearly twenty minutes ago to help me with the zipper on my dress. Instead, I ended up with the dress bunched around my hips as Gavin knelt on the floor in front of me and buried his face in my sex. \n\nI came twice before he pushed his tuxedo pants to his ankles and shoved his hot throbbing length into me. He was pushing franticly into me from behind as I watched his head fall back in pleasure in the mirror. \n\nThrough the sounds of our panting, and the tingling that was starting in my toes, I could hear Brenden stomping around in the living room. In the past few days he had come to learn that it was better if he didn't come knocking when Gavin and I were behind closed doors.\n\nAn unexpected gasp escaped my lips as Gavin shifted his hips and changed the angle he was entering me from. He bent down and bit on my shoulder as be began to pump harder and faster. I could feel my pussy spasming around him trying to milk him for my salty prize. \n\nI was starting to loose my grip on the dresser as Gavin's thrusts were lifting my stillettoed feet off the floor. I could feel my climax steam rolling into me as Gavin continued to pound me. He slipped a stray finger under my dress and pressed my clit pushing me over the edge. He continued to slip into me as my orgasm roared through me. \n\nGavin still hadn't come yet as he slowed his thrusts and tilted my lips towards his.\n\n\"We are going to be late,\" I gasped out, vaguely thinking it would now take me another twenty minutes to look presentable. \n\n\"Come on!\" I could hear the fury in my brother's voice. \"We're going to be late!\"\n\n\"I'm helping her with her dress,\" Gavin shouted back in a surprisingly steady voice with his dick still firmly lodged between my legs. \n\nWell, that was practically the truth. \n\nGavin kissed my bare back as he pulled me to him and erupted deep inside me. My body gave a satisfied shudder as his lips settled on mine again. I whimpered when his softening cock slipped from me, but I knew we couldn't afford any more distractions, so I tried to keep my disappointment to myself.\n\n\"Don't worry, Red. I'm pretty sure you and I will have another private date tonight,\" he said as he slipped the fingers that had been toying in my juiced into his mouth. \"You look absolutely edible in that dress.\"\n\nMy face heated, and I felt an immediate pulse in my sex. \n\nI turned away from him and let my dress fall to the floor praying it wasn't too wrinkled. I fixed my hair as best I could in the mirror trying to avoid Gavin's predatory gaze. I smiled when I realized the back of my dress still wasn't zippered. \n\n\"Seriously,\" I said turning towards him, trying to keep a straight face. \"Can you please just zipper the dress.\"\n\nHis smile widened and I had to remind him that it would be rude if we were late to the Mayor's party. He shrugged his shoulders innocently and planted another kiss on the back of my neck as he slowly slid the zipper into place. \n\nI moved away from him before he could do anymore damage. This guy is hazardous to my health. The last few days had been a nonstop fuck fest, even if I was still emotionally clueless as to how Gavin really felt about me. This was undoubtedly going to make my move to Cali, if I moved, that much more unbearable. Maybe it was a good thing he hadn't said anything. If he told me he loved me, I probably wouldn't be able to get on the plane.\n\nI stood in front of the door and turned back to make sure he was decent before I opened it. I wanted to run to the bathroom and clean myself up before Brenden would drag us out the door. I'm sure he's pissed we all agreed to go in one car. \n\n\"Don't even think of making a run for it. I want you sticky with my juices all night,\" he said in a husky voice as he shook the hair out of his eyes.\n\nJesus, I felt my pussy spasm again and prayed I could make it the entire night without dissolving into a puddle of oversexed hormones.\n\nI smiled at him, so happy that he was finally mine, and straightened his bowtie. He slipped his hand in mine as he pulled my bedroom door open. The smile disappeared off his face when we were met with my brother's icy glare. He said nothing as he turned on his heel and stalked out the front door.\n\nAn embarrassed flush crept into my face as Gavin gently laid his hand on the small of my back and ushered me out behind my brother.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nThe car ride was tense, my brother refusing to acknowledge either of us. In truth, I did feel bad because we definitely could try harder to not be so in his face about our relationship. Eventually, he began to thaw as Gavin prodded him about all the single prospects that were going to be there. Suddenly my brother wasn't so pissed anymore. \n\nThe valet parked the car as we headed into the hotel. This hotel was one of the oldest standing structures in the town, and it was fitting that every year it was the site of the Mayor's Birthday Party. The floors were made of huge slabs of marble perfectly amplifying the sounds of footsteps stomping across them. \n\nI felt Gavin's hand at the base of my spine as he and my brother led me into the main ballroom. My breath was nearly taken away as I took notice of the decorations. The chandeliers sparkled brightly as they hung from the cathedral ceilings and twinkled brilliantly against the starlight shining through the skylights. \n\nWe stepped into the ballroom where Gavin gave our names, and the hostess pointed us towards our table. He kissed my forehead and told me to stop blushing because I looked beautiful. I was about to pinch him in the side when an old friend from college walked up and put him in a headlock. Gavin shot me an apologetic look as he was dragged away. I laughed and set my bag down on the table looking around for familiar faces.",
        "My brother had already abandoned me and I felt self-conscious standing all by myself. I tugged at my dress for the hundredth time and glanced around the room looking for comfort. I felt almost too dressed up as I remembered how much money I spent on this dress. I waved to a few people I knew but after that, I wasn't sure what else to do. \n\n\"Hello, gorgeous,\" Ben said as he slipped a hand around my waist from behind and pecked me on the cheek.\n\n\"Hello, Bond,\" I said with a large grin. \n\n\"You look amazing,\" he said as he leaned away from me to get a better look. \n\nI smiled warmly at him and said thanks. At the time I bought the dress, I thought it was a good thing to splurge on, but standing next to a neurosurgeon driving a $300,000 car, it seemed appropriate. \n\nI was wearing a deep blue halter dress that accentuated my shoulders and the fullness of my breasts. It was tight around the waist, formfitting until just past my hips where the fabric gently flowed outward. It was a simple dress and I loved it. It had cost me a fortune, but I thought it was well worth it.\n\n\"You don't look so bad yourself, Bond.\" The man was dressed in a suit that cost more than I made in a month, but he pulled it off. He wasn't wearing the fabric with contempt, but in way that said he didn't really care what he had on. I got the impression Ben was wearing the suit because he felt he was supposed to. The fabric was tailored to his body and is seemed to shift and move with him as if it were a second skin. \n\n\"I mean really, Isabelle, you look amazing.\" I blushed at the intensity of his gaze.\n\n\"You're just trying to butter me up because you want me to see past your car.\" I leaned slightly into him to whisper into his ear, \"Its not gonna work, though.\"\n\nBen let out a rumble. \"When you become a doctor, you'll understand. It's all just a pissing contest from here on out. Men never mature, but we could use some beautiful women in the field to keep us modest.\" He winked then flashed me his million-dollar smile. \"Come on, there are some people I want you to meet.\"\n\nBen grasped my hand and pulled me towards an intimidating group of older men. I opened my mouth to protest that I should probably wait for Gavin, but I decided to keep my mouth shut. Ben and I are friends and there's no reason I can't meet his friends, especially when Gavin was on the other side of the room rough housing with his old college buddies. \n\nI clamped my mouth shut as Ben pulled me across the floor. As I was watching his back, I couldn't help but compare the two of them. Gavin would have loved Ben's car, but he would choose an old reliable pick-up truck any day of the week. Gavin was the quiet handsome. The kind that didn't need to flaunt it. Gavin had an air about him as if he still needed to be reassured how amazing he was. Ben on the other hand knew exactly what he had going for him, and he used that and his money to his advantage. Yes, both men were extremely different. \n\nSure, Gavin would have loved the car, but he would hate Ben, he would hate what he stood for. Here was a guy who was neurosurgeon just so he could impress the girls with the expensive car. We both knew he wasn't in it to really help people, he wanted the respect that came with the salary. I smiled to myself as I imagined Gavin and Ben meeting. I prayed it would end differently than I imagined it.\n\nAs Ben ushered me closer and closer to the doctors and privileged people he knew, I couldn't help but note how different this night would have been if I'd shown up with him and not Gavin.\n\nI smiled to myself and tried to clear my head. I wanted to make a good impression, and the last thing I wanted was for these people to think was that I was aloof because my mind was focused on Gavin.\n\nAlready, my attention was waning, and I just caught when Ben introduced me to a few of his colleagues. I stuck out my hand politely and waited patiently as they jumped right into shoptalk. It was interesting to hear doctors talking about their profession, but I had no idea what they were actually saying. I grinned as I thought, in a couple years; I'd be able to hold my own in a conversation like this.\n\nMost of the doctors in our company were polite enough to ask me a few questions about what field I wanted to pursue, and tried to listen as I spoke, but even I was getting bored. I looked around at the group I was standing in and had to wonder if this is where I could be in eight years. The thought scared me.\n\nThese people, although nice, were stiffs. You could tell that life stopped being about living and having fun and became consumed with mortgages on summer homes, and the affliction of being pushed into a higher tax bracket.\n\nI managed to talk to a few of the surgeons from the hospital that had written recommendations for me, and I thanked them for taking time out to put in a good word for me. They all smiled when I beamed at how excited I was at being accepted. Every single one of them gave me a polite hug and told me to keep my eye on the big picture, advice I was sure would come in handy.\n\n\"I didn't even realize how much you guys noticed my work,\" I said to the group before me, still astounded that the doctors took notice of the tech bustling around the operating room.\n\nDr. Murray smiled and said of course they noticed. He smiled when he said that him and the guys in his practice weren't as snobbish as many doctors were. They could still remember when they were in my position.\n\nI thanked them again, and we went our separate ways when they found other people they wanted to talk to. Ben was in a heated discussion with someone I'd never met before, so I didn't want to go over there, so that left me standing around, still without a drink or Gavin. I looked around trying to scan the crowd for my brother when I saw Cassie and Wilson standing not too far from me with their heads together conspiratorially.\n\nMy blood began to boil when the obvious thought hit me like a ton of bricks. Gavin and I had spent weeks fighting because these two assholes were just that &ndash; assholes. As I was standing there, staring daggers into the backs of Cassie and Wilson, Ben eased up to my side.\n\n\"Is everything all right?\"\n\n\"I should ask you the same, the guy you were talking to before looked like he wanted to rip your throat out.\" I spoke to Ben without taking my eyes off Cassie and Wilson.\n\n\"Just a friendly discussion. Would you like a drink?\" What I wanted was Gavin by my side as if to confirm that he really was mine. I wanted a drink too, but I didn't want Ben to get it for me. If anything, I felt the need to get away from him.\n\nWhat the hell is wrong with me? Here was a perfectly handsome and successful man wanted to get me a drink and get me to mingle with all the right people, and I didn't want to talk to him.\n\n\"That's okay, I'll get it. I need to find my date anyway.\" I had officially lost my mind. Why I didn't call him my boyfriend was beyond me. Was he my boyfriend?\n\nBen nodded politely and to my surprise leaned down and kissed me on the cheek. \"I will be right over here.\"\n\nI nodded to him and walked off suddenly feeling smothered. Where was Gavin?\n\nI set out with the intention of looking for my date but ended up at the bar instead. I stood staring at the bottles lined up on the counter.\n\n\"What can I get you miss?\"\n\n\"Rum and coke.\" \n\nThe bartender smiled as he handed me the glass, and I slipped two dollars into his tip-jar.\n\nI smelt Gavin before he opened his mouth. \"Have I told you that you look beautiful?\" He pressed his front to my back and wrapped his arms around my waist. \n\nI was trying not to blush too deeply when I told him thank you.\n\n\"Who was that guy you were talking to?\"\n\n\"Jealous?\"\n\n\"Yes.\"\n\nI turned in his arms shocked he would admit something like that. \"His name is Ben. He's the Dean of Admissions at Crownan. He's the one that got me in. Don't look at me like that, we're just friends &ndash; kind of.\" \n\n\"Yea well, just remember what I said about friends.\" I smiled as his lips landed on mine. \"I don't want any competition.\"\n\n\"Don't worry,\" I said as I reached up on my tiptoes to capture his lips this time. \"No competition, I promise.\" And that was the truth.\n\nHe smiled widely as he shook his hair out of his eyes. \"Lets dance.\"\n\nGavin pulled my rum and coke from my hand and led me to the dance floor. My face heated, as I couldn't help but notice that this was our first official dance as a couple. My hand gripped his tighter as he pulled me to the center of the large paneled dance floor. How clich&eacute;, did it really have to be the center? I felt self conscious as it was.\n\nI smiled like a schoolgirl as he pulled me to him and began to lead me in a slow waltz. \"I didn't even know you knew how to dance.\" \n\n\"There are a lot of things you don't know about me, Red.\"\n\nI was happy with that answer. It was nice to know that people still had the ability to surprise me in a good way.\n\n\"Like how good you would look in a tux,\" I said as I pulled my bottom lip between my teeth.\n\nI lay my head on his shoulder as we began to step and sway to the music. I was lost in his embrace, and eventually the entire room melted away, and it was just us. \n\nGavin and I danced and laughed, drank and danced some more. We twirled about as if we were the only ones there. Eventually the only thing grounding me in reality was the pull of my bladder. I told Gavin where I was going and tried as best I could to gracefully walk off the dance floor. \n\nI found my feet taking me to the bathroom, so I let them. I locked myself in the stall trying to gain a moment to myself trying to quite the excitement that was bubbling in the pit of my stomach. I'm not sure how long I was in the stall, but I knew it was long enough when I heard the doors open and heels click across the marble floor.\n\n\"I fucked everything up. That stupid yellow bitch thinks she's better than me? Fuck her. In two weeks, I managed to fuck up her entire life-long friendship with him, and now I hear she's moving to California. This couldn't have worked out better than if I'd actually planned it this way.\"\n\n\"But I saw them dancing. They looked happy,\" someone with an irritatingly high voice chimed in. \n\n\"Just the calm before the storm. Wait 'till they see what I have in store for them next. She'll be leaving in tears, and he will be standing around with his tail between his legs,\" Cassie said as she pulled her lipstick from her cleavage. \n\nI wasn't aware when my hands had quietly slid the silver knob on the bathroom stall open, but Cassie's friend noticed when I stepped out of the stall and she saw the look on my face.\n\n\"Get out.\" My tone wasn't something I'd ever heard come out of my mouth. I didn't know who Cassie's friend was, but I'd seen her around. My fight wasn't with her, it was with Cassie, and she and I were going to straighten this out &ndash; now.\n\nCassie slowly turned to look at me, pure fear in her eyes until she took enough settling breaths to cover it.\n\n\"You are pathetic. At this point, I can't even be mad at you, I just feel bad for you. What a sad person you must be. Its gotta be horrible to have sucked and fucked every guy in this town, and several others, and not have found any that would be willing to call you more than a quick lay. I look at you, and it just makes me sad. After all this time, and all those guys, you're still alone at the end of the day.\"\n\nHer mouth gaped open in surprise, as she stood frozen in front of the mirror glaring at me. It took her a moment to remember her place and close her mouth. \"Who do you have?\" she snarled.\n\n\"I have my brother, and I have a best friend who also happens to be one of the greatest men in the word. And despite what you or anyone else will try to do, Gavin and I will always be best friends.\"\n\nI turned to leave, and I could see her staring at me in the mirror. \"You know, he and I had a good laugh about you. That day when you saw me leaving his apartment, we had a real good laugh. While I was riding him for all he was worth, he told me how you tried to suck him off. How you tried to ride him. How you tired to fuck him. How you thought the two of you were making love. Yea,\" she added with a snort. \"We had a real good laugh.\"\n\nWell, that did it. I tired to be nice, and nonviolent, but Cassie was asking for it. I spun around, smashed her lipstick into her face where it was hovering and kicked her leg out from under her. She hit the ground on her back, and I dropped me knee into her chest, not worrying about breaking ribs. I heard the satisfying whoosh of the air rushing out of her lungs.\n\nCassie opened her mouth like she was going to say something else stupid, so I stopped her before she could start. I grabbed her by the hair and punched her in the face. I hate to admit it, but I felt a sense of calm wash over me as blood started to pour from her nose, and her eyes clouded with tears. Needless to say, I don't fight like a bitch.\n\n\"Are you done talking shit?\"\n\n\"No one will ever want you, you know,\" she said as blood seeped into her mouth staining her teeth a watery red. I frowned at her. I was expecting more from her at this point.\n\n\"And I'm sorry you have nothing to offer men but the worn out flesh between your legs.\"\n\nI didn't wait for her response as I hauled her from the floor and tossed her into the stall I came out of. I threw her hard enough into the stall that she bounced off the toilet and rolled to the floor. \"Seems like a good place for you.\"\n\nI turned my back to her, and walked to the sink and washed my hands. She bled on me when my fist crushed the cartilage in her nose. I would probably have to get tested now. I looked at her in the mirror and the only emotion I could muster for her was pity. She had that coming but she was still a lonely, pitiful person. How I could let a person like that come between Gavin and I was embarrassing.\n\nI dried my hands and left he bathroom.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\n\"You were in there forever.\" Gavin had been standing outside the ladies room with his hands shoved deep in his tuxedo pockets.\n\n\"Miss me?\"\n\n\"Afraid you ran off with a doctor,\" he said as he grabbed my hand and pulled me closer.\n\n\"What'd you do?\" He asked as he brought my hand to his face to examine my knuckles. I couldn't help but grin.\n\n\"I broke a bitch's face.\" Confusion then recognition flashed across his face as he took in my wide smile.\n\n\"Seriously?\" He asked as he brought my bruising knuckles to his lips and kissed them. \"You make me so hard.\"\n\nThe air left my lungs as he pulled me closer and let me feel his length. Amazing, how easily this guy could get hard. \"Come here,\" he said as he took two handfuls of my behind and ground his pelvis into mine.\n\n\"Nope.\"\n\nA sly smile spread across my face as I wriggled away from him. For a second he looked hurt and confused and possibly a little angry until I laughed and told him he had to catch me first. He stood there stunned until he watched as I took off running down the hall. Things were always more fun when I teased him to his breaking point. \n\nI could hear his footsteps pounding the marble behind me as I winded through the massive hotel finally coming to a stop behind a massive column. I paused trying to get my shoes off so I could run silently. I was fumbling with the clasp, keeping an ear our for Gavin when I heard the unmistakable sounds of people kissing. \n\nI slowed my breathing so I wouldn't disturb the happy couple, but my curiosity got the better of me. I inched around the corner and saw the back of a blond man's head. He was pressing someone against the wall as if trying to trap them.\n\nI inched a little further trying to eye the girl he was pressed against when a very manly looking hand ran its fingers through the hair of the blond guy. This is getting better and better. Talk about making my night. I inched closer still trying to get a better look. Sure, I felt bad, a little, for spying, but needless to say, I haven't had much entertainment at other people expense in my life as of late.\n\nThe two were getting hot and heavy as the blond guy was shifted against the wall by the other guy as he took charge. Oddly, the scene of two men going at it was making me hot. They were really going at it now, the darker haired guy dominating the blond.\n\n\"You like that?\" The dark haired one said to the blond. The blond moaned and leaned deeper into the kiss trying to press his body closer to the other man.\n\n\"Tell me what you want.\" The dark haired guy commanded.\n\n\"I wanna suck your cock.\"\n\nMy breath froze in my throat. There was something oddly familiar about that voice, but I pushed it aside intent on getting the biggest eyeful I could.\n\n\"That's right, I'm gonna make you my bitch, Wilson.\" What? \n\nMy eyes popped and m breath hitched. I could feel my heart stuttering as I tried to make sense of what I just heard. The sound that escaped my throat was a cross between a gasp and a startled cry. I wasn't sure I heard the dark haired man correctly until they both turned towards me, the source of the noise. Wouldn't you know it, I was standing face to face with Wilson, my eyes wide in shock and his lips a swollen pink from a bout of passionate kissing.\n\nWilson's eyes widened in fear as his immediately untangled his hands from around his companion's body. He pushed the other guy away and told him to get out of here. The dark haired guy looked more than pissed, but I couldn't do anything but enjoy the moment. The dark haired guy looked angrily at me for interrupting them, but eventually he stalked back towards the ballroom.\n\nI couldn't help the self-satisfactory grin that spread across my face. Wilson was gay. Boy, did that explain a lot. Wilson's face began to turn eight shades of embarrassed as we stood there eyeing each other. This fucker made me feel like shit because he could deal with his own bullshit.\n\n\"Does your new girlfriend know you're out here sucking face with the Brawny Man?\" I just couldn't help myself.\n\n\"You stupid bitch, you better not &ndash;\"\n\n\"What? Tell anyone you were just begging to suck some guy's cock? Be his bitch? Really? I expected a whole lot of things from you, but I must admit, I never saw this coming. And to think, all those times you couldn't get hard&hellip;it was because I had the wrong anatomical parts.\"\n\nWilson stalked towards me, but I held my ground. He was fuming, grinning at me like we were old friends. A better woman would have held her composure, been satisfied enough that she just found out his deepest darkest secret. A better woman wouldn't have let this prick get to her. A better woman wouldn't have fallen for the dumb shit Wilson and his skank friend Cassie pulled. A better woman wouldn't have let the anger and resentment buildup for so long that she had no other option. A better woman wouldn't have punched him in the face, but what can I say? I snapped. I punched Wilson dead in the nose. Bren always told me to be the one to hit first and the hardest. He hadn't steered me wrong yet. \n\nHe wasn't expecting it, because he stumbled back and grabbed his face as his eyes began to tear. It took a second, but I was waiting for him to get angry too. I'd be damned if I said I didn't want a fair fight this time. Cassie was too easy, and I was looking for a challenge. I know men aren't supposed to hit women, but there was no doubt in my mind that Wilson wasn't a man, and that Wilson wouldn't hit me if he was pushed far enough.\n\nThat's what I was hoping for. Call me a sadist, but I wanted Wilson to get angry enough to try and hit me. I wanted just one more reason to knock his teeth into his throat and kick his balls into his stomach. When this was all over, perhaps I should see someone about these anger issues, but right now, this was the only way for me to get out my anger, and I was going to embrace it with open fucking arms.",
        "Wilson leaned over and fingered his nose, trying to determine how bad it was. \"That will be the last time you hit me you stupid bitch.\"\n\n\"Call me what you want,\" I said as I spun the ring around on my finger. \"But I don't hit like a bitch, do I? Nor do I beg to get fucked in the ass like one.\"\n\nWilson stood to his full height, and it never occurred to be afraid of him. Sure, he was stronger than me, and probably faster, but I was a woman scorned, and I was pissed.\n\n\"You think you're all tough because you can sucker punch someone?\"\n\n\"I hit you head on, fucker. Don't be mad because you keep getting socked in the face by a chick.\"\n\n\"You know,\" he said wiping his face and successfully spreading blood from ear to ear. \"I was starting to feel bad for fucking up you and Gavin. It really was quite sad how easily you too believed Cassie and me. Honestly, for someone who was so in love with you, I would have thought he'd have fought just a little bit harder for you. But now, now I realize that you and him got exactly what cunts like you deserved.\"\n\nCall me crazy, but I hate the c-word. A person can call me a lot of things, but you can't call me the c-word and expect me to just take it. Slowly but surely, he was adding to the anger and resentment I was feeling, and it's clear I was pushing his buttons.\n\n\"You might want to check the bathroom. Last I checked, Cassie was unconscious on the floor of the third stall in the women's room.\"\n\nWilson charged at me like a raging bull, nostrils flared and arms flexed. I almost smiled at the effort he was exerting, but I did feel bad for him. He'd been carrying this burden with him, trying so hard to fit in, and nothing was working, but that's no excuse for treating me the way he did.\n\nWilson lunged for my throat with his teeth bared. I took a step to easily sidestep him, but the heels I wasn't used to walking in got caught in the hem of my gown and I lost my balance. His fingers wrapped around my neck just as I started to fall, and the weight of my body brought him down with me.\n\nMy head hit the marble with a sickening crack and I tried to force the black dots from dancing in front of my eyes. Wilson had gotten a better grip on my neck and was squeezing for all he was worth. I was starting to panic as I cursed my heels. If I hadn't been in this fucking dress, I could have dropped this fucker before he put his greasy hands around my neck. I was trying to get my knee in between his legs, but I couldn't get my leg free of my gown. Note to self: don't pick a fight when not in street clothes.\n\nThe hit I took when my head hit the floor made my brain foggy, and I could tell my body was starting to go limp because I watched as a depraved smile took over Wilson's once handsome features. I cursed myself for being so stupid. I should have taken the shoes off before I started the fight with him. This was my fault, because I knew better.\n\nI could feel the blackness starting to take over, and for a moment, there wasn't a doubt in my mind that Wilson would kill me. On instinct, my fingers clawed at his wrists as I tried to pry him off, but my mind already knew I was fighting a loosing battle. I tried to force myself to stay calm as I attempted to knock his arms away at his elbows, but my blows were losing strength. \n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nGavin couldn't hear Red's footsteps anymore, and he guessed she took over her shoes; there was no way she could run in those things anyway. In his need to be with her, he was desperate to find her and he marveled at the idea of her only being gone for minutes. What was going to happen when she moved to California? He'd go nuts; they were only playing a game of hide and seek. \n\nAs he wandered about the hotel, he couldn't help but think of how much time he wasted trying to push her away. He should have done something back in high school, after that night of the bonfire. Because he was a chicken, she ended up with Wilson, and Wilson ended up hurting her. Gavin couldn't help but think it was his fault. If he'd just been a little braver, he could have saved her from all that pain. \n\nThen he ran from her when he saw her with Wilson at the hospital. If he was being truthful, he ran because he was hurt, and he had never been hurt like that before. Hurt because his best friend lied to him, hurt because he tried everything he could to help Red heal, and there she was sucking face with that prick in the parking lot. But that guilt wasn't going to stop him from chasing her through this ancient hotel, if anything, it made him pick up the pace. He felt like he had a lot to make up for.  \n\nGavin sighed as he walked along the empty halls listening to the sound of the music pulsing through the walls. Just under the sound of the music, Gavin thought he heard what he thought was gurgling. He stopped walking and held his breath trying to hear. It sounded like heels banging on the marble flooring, but he couldn't be sure. Gavin's head tilted as he tried to angle his head to hear better. He didn't mind when his feet carried him closer to the noise.\n\nHe rounded the corner with his eyebrows creased and his fists tensed at his side. The closer he got, the more it sounded like a struggle. Gavin's breathing stopped as his heart clenched when he stepped fully around the corner. It only took a second for him to take in the sight of Wilson sitting astride Red with his fingers wrapped around her throat.\n\nGavin didn't think as his feet propelled him forward. Red had stopped struggling as Wilson tired to dig his fingers deeper in the tender flesh of Red's neck. Wilson looked up just in time to see Gavin barreling towards him and he had just enough time to try and scramble away from Red before Gavin slammed his body in his back.\n\nGavin didn't need to say anything as he punched Wilson in the back to make sure he stayed down. Wilson had managed to turn himself over to try to stop the blows to his kidneys. Gavin saw the look of sheer terror in his eyes, but it wasn't enough to stop him. Wilson had fucked up his life, and he was finally getting the chance to get even.\n\nBlood pounded in Gavin's ears he hit Wilson again and again in the face. This bastard was the reason his best friend wasn't talking to him. This bastard was the reason Red was really going to California.\n\nGavin pounded Wilson for everything he imagined he did to Red. He hit him again and again not feeling the pain as his knuckles split open, trying not to feel the wound Wilson had opened inside him by hurting Red. Gavin would have killed him if it weren't for a raspy voice calling out his name.\n\nAt first, he tried to ignore it. At first, he didn't want to hear it because that would mean he would have to stop, but eventually the pleading of the voice stilled his fists.\n\nHe heard the voice again as he sat over Wilson looking at the bloody mess he made. Gavin just hoped he made Wilson hurt as much as he hurt Red.\n\nAt the thought of her, Gavin turned to see Red on her side; one hand on her neck and the other on the back of her head. Gavin cursed aloud as he saw the beginnings of Wilson's finger impressions appearing around her neck.\n\nGavin dragged himself away from Wilson and slid himself to Red's side, all the while trying to ignore the shooting pain in his hands. He was certain he'd broken a bone or two. Gavin sat on the floor next to Red and pulled her head into his lap. She wasn't crying, but he could tell she wanted to.\n\n\"Are you okay?\" It was a silly question to ask given the circumstances, but there was no way around it.\n\nRed nodded her head.\n\nGavin's heart tore into a million tiny pieces. He should have been there with her. If he was with her, this never would have happened. He clutched her tighter to him as he sat blaming himself. He clamped his eyes shut trying to think of a way to take away her pain only to realize it was impossible.\n\nThis was all his fault.\n\n\"Don't blame yourself,\" she said to him in a whisper. He opened his eyes to see her wince at the action of trying to swallow. \"If I hadn't been in these fucking shoes, I could have beat that mother fuckers ass.\"\n\nGavin couldn't help but smile through his own pain. He knew Red was hurting, but she was trying to make him feel better. His heart broke a little more.\n\nWilson was making gurgling sounds as he rolled to his side and spit out blood.\n\n\"Can you stand?\" Gavin wanted to get her as far away from Wilson as possible.\n\nShe nodded, but Gavin wasn't as sure.\n\nHe crouched down next to her and grabbed her arm, helping her stand. It took a second before she stopped swaying, but she could stand on her own.\n\nGavin watched her cautiously as she turned her back to Wilson, her hands still gripping her neck.\n\n\"You both are so fucking dumb.\" They both stilled when they heard Wilson's voice. Gavin tried to stop Red when she turned around to face him. \"Really, it was too easy.\" Wilson let out a sick laugh as he watched Red approach him. His eyes were swelling shut and his face was smeared and seeping blood. What a violent pair we made.\n\nRed shook off Gavin's help to walk. She stood over Wilson staring into his bloody face. Her only regret was that she couldn't have done the damage herself. \"I feel sorry for you,\" Red croaked out. \"I feel sorry for you just like I feel sorry for Cassie. If you didn't hate yourself so much, you'd be a decent person.\"\n\nWilson spat out another mouth full of blood and tried to open his rapidly swelling eyes further. \"You feel sorry for me? Look at me,\" he said waving his hands across his body. \"I'm gorgeous. I'm Wilson Butler. Who the fuck are you? You're a fucking slut. That's who you are.\"\n\nGavin said nothing as he watched Red raise her foot above Wilson's crotch and land it with more force than he thought she was currently capable. The action caused Wilson to scream and Red to sway on her feet. Gavin rushed to her side as he tried to keep her from falling.\n\nShe grasped onto his arm as she tried to take a step but stumbled. Gavin lifted her swiftly into his arms and carried her outside.\n\n\"Are you okay?\" He asked her again as he cradled her to his body.\n\n\"My head hurts.\"\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nGavin carried me all the way out to his car and said nothing and he put me in the seat, buckled my belt then climbed into his side. He started the engine and pulled away from the hotel, leaving everything behind. We said nothing as he drove through the streets.\n\n\"I'm okay, you can stop looking at me like that,\" I said after the fifth time Gavin glanced at me as if any minute I was going to loose consciousness.\n\n\"Like what?\"\n\n\"Like I'm gonna break.\"\n\nHe smiled tensely and turned his attention back to the road. I watched him drive and I still didn't know what to say. Tonight started out wonderfully and ended with both of us covered in someone else's blood. I didn't know what to say. I was going to blame it on the head injury. I closed my eyes content on feeling the dip and sway of the car under me.\n\nI didn't realize I had fallen asleep until I felt Gavin gently stroking my arm as he stood in the door of the car staring down at me intently. I tried to sit up in the seat but had to lean when my head began to spin. It probably wasn't the best idea for me to go to sleep since I probably had a concussion and not to mention brain damage from the lack of oxygen - thanks to being choked out by Wilson.\n\nGavin grabbed my legs and slid them out of the car. He put my feet gently on the ground then helped me stand. He watched me as I tried to steady myself on my too high heels. I took a few tentative steps and waited for the dizziness to pass. I started to walk again when Gavin grunted in frustration, picked me up and hauled me into the building and up the stairs to his apartment.\n\n\"I can walk, you know.\" Gavin grunted in response as he lifted me higher in his arms and climbed the stairs. I rested my head on his shoulder and didn't protest when he opened the door with me still in his arms.\n\nHe stepped over the threshold and set me down inside the door. He was still eyeing me like I was going to fall over. I told him I was fine as I kicked off my shoes and made my way to the bathroom. Maybe there's a reason to keep looking at me like that, I thought as I shuffled to the bathroom while he washed Wilson's blood off his hands at the kitchen sink. I closed the bathroom door behind and took a deep breath as I looked in the mirror.\n\nI could clearly see Wilson's finger impressions as they wrapped around my neck, and it would take a miracle for me to cover that up. I splashed water on my face and began the process of letting my hair down. As my hair fell in messy waves around my shoulders, I couldn't help the relief I felt at finally feeling like I could relax.\n\nI stayed in the bathroom a minute longer fussing with my hair and trying to figure out what I was going to say to Gavin before I opened the door. If I were being honest, I wanted nothing more than to crawl into Gavin's bed and fall asleep with him wrapped around me.\n\nI walked into the kitchen and watched as Gavin pushed a bag of ice around on the counter. When he heard me approaching, he looked up with concern in his eyes.\n\n\"I'm okay. Really.\" He stood and walked towards me. He'd taken off his suit jacket and pulled his bowtie loose around his neck.\n\nHe said nothing as he handed me the bag of ice. I wasn't sure if I wanted to put it on my neck or the back of my head. I took the ice from him and pressed it to the tender spot at the back of my skull where my head connected with the marble.\n\nI winced when I felt the cool against my skull, and Gavin rushed to take the ice from me and hold it himself. He brushed my hair to one side as he gently ran his finger along my neck. \"Does it hurt?\"\n\nI nodded trying to ignore how well this moment was feeling. Gently, as he pressed the ice to my head, Gavin pressed the heat of his lips on my neck, trying to kiss away the pain. For the second time that night, I felt like crying, but I didn't. \n\n\"Sorry I ruined your night.\"\n\n\"Red &ndash;\"\n\n\"Don't,\" I said looking at him with pleading eyes. \"I feel bad enough, honest. Be careful what you wish for, right?\" Gavin looked at me curiously. By the look on his face, I knew he knew exactly what I was talking about. \"I'm just trying to offer time to still offer you time to change your mind. Probably not the most healthy thing to be seen with someone who always seems to be getting into fights,\" I said trying to make light of the situation.\n\nMy thoughts were swirling in a confused bundle and I'm not sure why those exact words came out of my mouth, but I know it had something to do with the fact that he never told me he loved me. Why that thought decided to present itself now was beyond me, but hey, it's totally possible I have a cracked skull.\n\n\"What makes you think I'd want that? Is this about what Wilson did to you? Is that why you still won't let yourself trust me?\" Gavin was near his breaking point, and I'm not sure which of Wilson's transgressions he was talking about.\n\nA small grin came to my face. \"I'm not as mad at Wilson as I used to be. I found out tonight he's gay.\"\n\n\"What?\" I distracted him, and I didn't have to answer his questions although I'm not sure I wanted to at the moment. \n\n\"Yep. Right before he choked me, I walked up on him and his lover sucking face. Don't get me wrong, he had no right to treat me the way he did, but I can see now why nothing ever worked with him in the bedroom. I'm just sorry that I wasn't the one that got to break his face,\" I said with a smile.\n\nA low giggle scraped my throat as it escaped, but it turned into all out laughter as I watched Gavin's face. \"Wilson's gay?\"\n\n\"Yep,\" I said between fits of laughter. The laughing was causing my head to throb, but that was fine. That's better than the alternative of wanting to cry &ndash; again. Soon we were both laughing so hard, all the tension in the room had ebbed away, and we were back to our old selves again.\n\nI chuckled to myself as I began to sober up. I had turned and was only a few feet from him when I felt his hands grip me and spin me around. Gavin's lips pressed hard into mine as he dragged me back towards him. I let him kiss me, and I let him wrap his arms tighter around me as he tried to get his mouth to say the words my ears never heard.\n\nGavin was kissing me as if he didn't want me to leave; ever, but I wasn't sure if I could make that promise. He kissed me deeper, trying to explore every corner of my mouth as I snaked my hands around him to hold him closer. I didn't want to give in this easy because I still had no idea if I was kissing the old emotionally unattached Gavin, or if this was someone new.\n\n\"I'm sorry Red, I'm so sorry,\" Gavin said as he held the sides of my head and looked into my eyes. \"I am so sorry. You have to believe me when I tell you that I can't live without you.\"\n\nI furrowed my brows at him, searching his eyes as I tired to figure out where this was coming from. \n\n\"I could see that look in your eye.\" So, he knew I was doubting him. \"You didn't answer my question, and I'm not going to let you avoid it.\" \n\n\"I'm sorry too, Gavin,\" I said trying to hold back tears. \"I really am, but- \"\n\n\"No buts Red, I will do whatever it takes.\"\n\nI took a deep breath regretting that my best friend could read me so well. \"Its not that I don't trust you, its just that I'm having a hard time trusting myself. I seem to have a record of making pretty stupid decisions.\" \n\n\"Isabelle, I'm not going to let you screw this up.\" That wasn't the answer I was looking for, but a small smile teased the corners of my mouth as Gavin pulled me to him and crushed me into his chest. I threw caution to the wind. I didn't want safe. I wanted Gavin. I pressed my lips to his and prayed that for once, I was making the right decision. Gavin returned my passion in kind, as he kissed me, lifted my legs from the floor and carried me to the couch.\n\nHe stood in front of me as he slid down the zipper in the back of my dress. He kissed each new inch of skin that was exposed as he slid the fabric lower and lower. My dress pooled at my feet as I pulled his tie from around his neck and slowly began to unbutton his crisp white shirt.\n\nI pulled his shirttails from his pants and worked my fingers along his belt buckle as I tried to keep my hands from shaking. He brushed my hands away as he sat down on the couch and pulled me between his legs. He spread his legs wide and pulled my hips closer to his face as my hands settled in his hair. Gavin's head nuzzled my stomach as he shifted his hands to my hips drawing his hands up and down my thighs, teasing me.\n\nHe planted wet kisses on my stomach as he stroked the wetness seeping out of me. This was much different than this afternoon. This wasn't rushed or frantic, he was taking his time, thinking about how he wanted to please me.\n\nGavin slipped a finger into my panties as he dipped his tongue into my belly button. I arched closer to him as I tangled my fingers in his silky hair. He pushed his digits deeper inside me and latched onto my breast still encased in my bra. \n\nHis lips found my nipple as I tried to steady my legs. His fingers pumped in and out of my core as and his thumb teased my throbbing clit. When he was satisfied with tasting my chest, he pulled my leg over his shoulder and kissed his way up the inside of my thigh. His arms fastened themselves around my waist as he steadied me. My heart pounded in anticipation.\n\nWhen his tongue touched my sensitive folds, I nearly exploded, but I tried to hold out. Gavin slid to the floor and let my foot rest on the couch as he tried to probe deeper and deeper into my sex. My fingers tangled in his hair as I moaned his name and my pussy clenched around his soft and slick tongue. \n\nHe attacked my sex and teased it like he would never get another taste, and it was becoming harder and harder for me to hold on. Gavin fastened his lips around my clit as he slipped his fingers into me, stretching me. I came all over his hands and mouth, my mouth open as I panted his name. I was weak from pleasure, but Gavin wasn't ready to let me rest. He set my foot back down on the floor and took a seat on the couch as he unbuttoned his pants and slid them down.",
        "\"Ride me, Isabelle,\" he said, his mouth still wet with my juices. \"You're in control, and I won't come until you say so.\"\n\nMy heart wanted to explode, as I wanted to feel my best friend buried inside me. I kneeled on either side of his thighs and kissed him, savoring the taste of my own juices on his lips. I pulled my panties to the side and slowly lowered myself onto his glistening cock intent on feeling every ridge and vein. \n\nOur eyes connected and didn't waver as I continued to lower myself onto his body. When his length was settled snugly inside me, I started me slow ascent. This wasn't quick, it was an exploration. Gavin hugged me to him as the friction between our bodies began to grow and my wetness began to coat his body. Gavin was still looking me in the eye as he said, \"I love you Isabelle and don't you ever forget it\". \n\nThe brown emotion swirling in his eyes told me everything I needed to know.\n\n<p align=\"center\">_(*(*(-)*)*)_</p>\n\nOk, so sorry that took forever, but school has been insane. Please, please forgive any editing mistakes I may have missed. Its late, and I couldn't stand not having the story posted for another day.\n\nThe story isn't over, there are still some loose ends that I'm going to tie up, its just a matter of when my school work will give me time to do it. But, thanks for being patient, and I hope you liked this chapter more than you liked the last one.\n\nAs always, please vote and feel free to leave feedback. \n\nBianca"
    ],
    "authorname": "HotSprings22",
    "tags": [
        "interracial novella",
        "interracial romance",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/distractions-ch-11"
}