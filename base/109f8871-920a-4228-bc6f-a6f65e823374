{
    "title": "Jack's Wage Slavery Pt. 02",
    "pages": [
        "Author's Notes:\n\n'Jack's Wage Slavery Part 1 &amp; 2' is the fourth story in the saga of Jack Danner. Minimal effort is made in this tale to explain the backstory so it is highly recommended you read the first three stories in the following order:\n\n<ul> <li> Jack's New Job</li>\n\n<li> Jack's New Position</li>\n\n<li> Jack's Daily Grind</li> </ul>\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nJack's Wage Slavery - Part 2\n\nChapter 12\n\nJack slowly surfaced from the depths of his mind and groaned from the pounding in his head.\n\nHe tried to move his arms but they seemed to be locked down to a platform he was lying on. His neck, waist, and legs were also clamped to the surface. He couldn't see anything in the inky darkness of the chamber he was being held captive in. Oppressive heat bathed his body and sweat covered his limbs. The air was too stale and breathing was difficult. He felt like he was suffocating.\n\nA deep rumbling droned on and on in his ears.\n\nHe tried to call out but he couldn't get a breath and his voice was drowned out by the rumbling.\n\nHe suddenly realized he was going to die in this pit of darkness and heat.\n\nAlone.\n\nHis mind flashed back to the nightmare he'd had not so long ago and how he'd woken up then with two lovely women sleeping on him. He desperately wanted that to happen again but his body was telling him this time he was awake.\n\nThere was a sharp creak sound and a light went on above his face, the brightness stabbing into his eyes and making his head throb badly.\n\n\"Open your eyes... worm thing.\"\n\nGreat, an Allsa Komanae. One with a poor grasp of human insults. Still, company was company. Jack slowly opened his eyes and saw the usual trio of cowl wearing figures standing next to the platform. The one in the center would be the speaker of course. An almost giddy desperation swept over Jack so he looked into the hood of the one on the left. \"What can I do for you this fine day?\" he croaked.\n\nThe center wasn't happy with being ignored. Not one bit. Jack received a jab in the side with some kind of nerve prod and he had to bite down hard to keep from screaming. When his vision cleared he saw the center disciplining the fellow on the left. Jack was pissed. He stared into the right cowl and grit his teeth. \"And what the FUCK do you want?\"\n\nOnce more the prod jabbed Jack and he growled his rage as he pulled at the bindings. As quickly as it surged his strength left him and he fainted.\n\nWhen Jack woke he felt a straw being pressed between his lips. His first instinct was to clamp his lips tight as it could be poison. Then his situation returned to him. He sucked at the straw and was rewarded with stale, warm water. No poison. He drank his fill before the straw was pulled back, spilling drops across his mouth and chin.\n\nSoft fingers wiped the moisture away.\n\nHe opened his eyes again and saw... an Altarian? No... similar but not quite the same. His eyesight was still blurry from fatigue. Jack looked at the hand hovering above his mouth. Three fingers, one thumb. Wiry strength in that hand. Lean muscles in the arm, covered with a fine grey fur. Small scars here and there where the fur didn't grow. Some looked like burns. The being was wearing some kind of baggy tunic over its torso and the fabric had seen better days. His eyes could focus now so he looked up to its... no, her face. He could be wrong as he'd never seen this race before but his radar was telling him this was a female. Regardless of the presence of horns.\n\nUnlike his which grew up from his forehead and swept back over his head, hers projected from the sides of her head and curved down and forward. The tips were covered by rounded metal caps. Most likely to blunt the points. Grey with irregular bands of black, he thought they were lovely.\n\nJack looked left and right and couldn't hear anything over the droning sound that continued to dominate the sound in the room. He was still strapped down and he had no idea how long he'd been there.\n\nHe looked up at the woman once more. Large, shockingly pale grey eyes, small black leathery nose, again with a small scar crossing it, black lips in a wide mouth with one major difference from the Altarians. The points of two fangs could be seen resting on her thick lower lip. He'd have to see her other teeth to tell if she was a true carnivore or an omnivore like him. Her ears though, they were broad, furred triangles with white tufts. Definitely mobile, they were constantly moving, twitching, twisting and focusing the sounds around her.\n\nFrom the little he could see she looked like she'd missed a few too many meals and been worked a little too hard. Still, she had a soft touch. Her fingers were back on his lips again, just the lightest of touches, and after all the abuse he'd experienced it was very soothing to feel a gentle caress.\n\n\"What... what are you?\" she whispered.\n\n\"Human and Altarian,\" he replied as quietly.\n\nHer face showed her confusion. \"I don't know either of those names but how can you be both?\"\n\n\"I was Human and... well, it's a complicated story. I've never met anyone who looks like you either. What are you?\" Jack asked.\n\nShe pulled her hand away and her expression closed up. \"I am nothing.\"\n\n\"Not to me you're not. Your touch was the first expression of kindness I've experienced since I was abducted. Thank you,\" Jack said sincerely.\n\nShe shook her head angrily and left the room.\n\nHe didn't know what he'd said to offend her but he was upset with himself for driving her away. He lay there on his back wishing she'd come back. When the door suddenly opened again he almost called out in his excitement. He throttled down his emotions brutally as they were clearly getting out of control.\n\nThree cloaked figures again. He remembered the pain stick from the previous meeting so he held his tongue and watched carefully.\n\n\"Your discipline collar is ready. It will be placed on your neck and from that time on you will be punished for any and all insubordination with overwhelming pain. Our scientists have determined the boundaries of human resistance to pain through careful study and experimentation. Humans are no different from any other inferior race when it comes to the aversion to pain. It is a very effective means of control.\"\n\n\"Great, a pain collar,\" Jack thought. He wondered how his hybrid nature would affect his resistance to it.\n\nAs if reading his mind the Allsa Komanae went on. \"This one is calibrated to inflict 50% stronger pain than a normal human collar would output. If unconsciousness is requested it will increase beyond that until the goal is reached. The collars are tamper proof. Charges will detonate if the collar is breached or if death is requested.\"\n\n\"If death is requested?\" Jack thought. This sales pitch needed work.\n\n\"Collars are linked to our networks so your location will be known at all times. It can be activated at any time. If you were to somehow leave the area of the network the collar will render you unconscious and after a period of time it will detonate if it is not reset by your master. Is all of this understood?\"\n\nJack saw no benefit in antagonizing them. \"Yes,\" he sighed.\n\nThe one on the left stepped forward and touched something on the table Jack was strapped to. The sides of the headrest came up and clamped his head painfully tight until he couldn't budge. The table's neck restraint released and sunk into the table. Then the surface under his neck pulled away leaving the back of his neck exposed. The Allsa Komanae on the right then stepped forward and opened a long narrow black container. It reached inside and carefully lifted out a stiff band of small interlocking silver rectangles, two inches high by one inch wide and lined up along their wide side. How this... bar of metal was supposed to wrap around his neck Jack had no idea. The center of the metal band had a larger silver section that curved down to a point like a deep 'V'. It almost made him think of the expanding metal watch band on his father's watch but much larger. If he didn't know the evil intent of the device he would have been impressed with its beauty. Even in the dim light of the room the silver surface gleamed. The pattern on its surface was intricate and ornately detailed. He didn't understand why someone would go to the effort of making such a terrible device attractive. It made no sense.\n\nThe Allsa Komanae meticulously positioned the 'V' center of the band just below his Adam's apple and over the notch of his collarbone. It slowly lowered the device until Jack felt the cool metal on his skin. Then he felt the skin under the metal begin to prickle and crawl like a thousand tiny needles were pricking him. The ornate center link on the collar began to grip his skin and the area suddenly felt cold. The next two links settled against his skin and the prickling sensation continued. Once they settled and shocked him with their numbing cold the next two segments unlocked and lowered. Jack's discomfort was increasing and he had the oddest sensation of being slowly strangled. His breathing wasn't being impacted but he felt himself sucking in breaths in gulps. This caused the links already bonded to him to shift and adjust their positions with an odd high pitched hiss and chime sound.\n\nThe sensation began to become unbearable but there was nothing he could do as the ends of the collar slowly made their way around his extra wide neck. The cold got worse and worse and he had to grit his teeth together to keep from crying out. Then through the cold he felt fine metallic tendrils digging into the flesh and bones of his neck and this pain wasn't at all reduced by the cold. The collar was digging in. When the ends met and snapped together above his spine the pain spiked and it was all he could feel.\n\nHe screamed until he passed out.\n\nJack felt the soft touch on his lips once more. It was such a contrast to the last sensation he recalled he gasped involuntarily. The hand pulled back abruptly. His eyes cracked open and he was no longer in the dark chamber. He felt the softness of a mattress under him and the room was brightly lit from sunlight pouring in the windows. He looked around in confusion.\n\n\"Wh-\" he began then coughed as his dry throat cracked. He felt hands holding a cup in front of his lips so he sipped at the water. It was cool and refreshing this time.\n\nHe laid back on the pillow and blinked his eyes until his sight cleared. The grey furred being was back, sitting on the mattress next to him. Jack resolved not to say anything that might frighten her off like last time.\n\nShe'd received an upgrade in her tunic. The new one still exposed her arms and seemed to reach her knees but it was white and clean. He looked down at himself and he was wearing the same kind of white tunic as she was. White really wasn't his color.\n\nShe was looking at his neck with a wary expression. He looked at hers and was horrified to see terrible scarring. The fur was gone in strips of scar tissue encircling her neck. There had to have been at least four of them around her neck just above a thin silver band much like his but without the ornate design on its surface. It had a small 'V' positioned at the base of her neck like his.\n\nThe scar just above the silver band looked fresh. The ones above were older and had all healed in the past. The oldest looking ones were wider and each seemed to be a little narrower until the current band which was barely as wide as Jack's pinkie finger.\n\n\"Is there something wrong with my neck?\" he asked quietly.\n\nShe shook her head but she didn't take her eyes from the band. Jack slowly pushed himself to a seated position. The collar felt odd. The skin under it was still a little tender so he was aware it was there from little barbs of pain when he moved. However, it didn't tug as he'd expected it to considering how it was embedded in his skin.\n\nWith a glance at his companion he put his feet on the floor noticing the white slippers he was wearing. His nerves buzzed a little from the memory of the pain but he closed his eyes and took a few deep breaths. When he was ready he stood and walked over to the window. The sunlight struck his collar and splashed reflections over the walls. He was dazzled and staggered back... into her arms. He felt her strength as she steadied him. She was thin and small, the top of her head barely reaching his shoulder, but she had considerable strength in her hands and arms. The two broad toes on her cloven hoofs gave her excellent stability.\n\nHe got his balance again and looked at her. He needed to know what to call her. \"Thanks.\"\n\nShe frowned like he'd insulted her.\n\n\"What's wrong?\"\n\n\"Do not thank me. Do not acknowledge me. I am nothing. It is my role,\" she said slowly like it was a lesson he needed to learn.\n\n\"I won't do that. That's not who I am. I won't pretend you're nothing because that's not who or what you are!\"\n\n\"You will be disciplined if you do not follow the roles we are assigned,\" she scowled at his stubbornness.\n\nHe shrugged. \"Then I'll be punished. I'm not going to change who I am for them.\"\n\n\"Who you are isn't more important than survival!\" she growled quietly in frustration.\n\n\"If I survive but I'm no longer a person I can respect, what have I survived for?\" he asked.\n\nShe looked at him in fury. He took that as a good sign. She still had spirit.\n\n\"What do I call you?\" he asked.\n\nShe looked at him like he was mentally challenged. \"You don't call me anything!\" she hissed quietly.\n\n\"Eve it is then.\" The name just popped into his head. Maybe because she was the 'first woman' he'd met in this awful place. He looked around. There was nothing out the 'window'. It was a light well, piping sunlight in from above. They were probably deep underground. This particular place wasn't too awful but the dark place where he'd met her had been. \"Eve, is there a mirror around here where I can see myself and this collar?\"\n\nShe was looking at him a little strangely then she shook her head and frowned again. She set off purposefully towards a doorway so he followed. He was relieved to see standard human compatible hygienic facilities for waste and cleaning. At least it looked something like a toilet and shower. But no way to see his reflection.\n\nEve touched the wall and it became a mirror. There they stood side by side. At least he wasn't dressed in that ridiculous leather and rhinestone outfit with the cape! He saw the same rounded metal caps Eve was wearing on her horns had been added to the points of his too. He stepped closer and inspected the collar. It really was a finely crafted and beautifully ornate piece of torture hardware.\n\n\"Any idea why my pain collar is so fancy?\" he asked quietly.\n\n\"Discipline collar,\" she corrected with a sigh. \"I was told we belong to the Prime. This symbol at the center represents the Prime, but... I have never seen a collar like yours.\" Eve said equally quiet.\n\n\"I wonder if that's a good thing or a bad thing.\" Jack mumbled.\n\nA chime sounded and Eve rushed from the bathroom then darted back and pulled Jack's arm with her surprising strength to follow her into the middle of the room where they stood side by side. Jack looked at her in confusion and she scowled at him. \"Eyes forward and down,\" she hissed quietly.\n\nThe door opened and in walked a single Allsa Komanae. Jack was momentarily confused. He'd never seen one on its own before. They always traveled in threes.\n\n\"So this is Jack Danner,\" the cloaked being before him said thoughtfully as it stopped a few feet away. \"I expected... more.\"\n\nJack was too surprised to be insulted. The Allsa Komanae's voice was deep and rich, a far cry from the rough flat tones which typically emanated from the dark cowls. Its clothing seemed like it was made of finer materials as well.\n\n\"And you are?\" Jack asked. He saw Eve twitch when he spoke.\n\n\"Ah, you have so much to learn about your new role,\" the deep voice sighed regretfully.\n\nJack's brain lit up and he found himself gasping on the floor as his body spasmed painfully.\n\n\"That was just a mild lesson in how not to speak to your superiors,\" the Allsa Komanae said in a conversational tone.\n\nJack got his arms under himself and painfully pushed himself up. Onto his knees. That was as far as he could get as his muscles were trembling in memory of the pain.\n\nHe felt Eve's hands on his arm and she helped him to his feet then immediately let go and went back to staring at the floor. Jack wanted to thank her but the cloaked figure would likely punish her. It was safer for her if he followed her wishes... while in the presence of Allsa Komanae.\n\n\"When I ask you to speak you may address me as 'First'. Is that clear?\"\n\nJack almost replied but nodded his head instead. He heard First make a little sound of disappointment.\n\n\"You will also avert your eyes from any and all citizens. You are not worthy of looking upon your masters so you will not.\"\n\nOnce more Jack found himself on the floor, this time on his back. The remnants of the pain from his last visit to the floor hadn't left his muscles so now he had some serious cramping. He wasn't able to move his legs as the muscles just trembled. He wondered if the asshole was really using a mild setting or was playing at the top end of the scale. The latter seemed likely. Anything higher and he might not survive.\n\n\"Are you beginning to understand your new role? You may speak,\" First asked.\n\n\"I understand these lessons are likely going to kill me. I can't move my legs,\" he croaked.\n\nFirst made an annoyed sound and left the room. When it returned it was followed by another Allsa Komanae who immediately knelt down beside Jack and ran some kind of device up and down Jack's legs. It froze then looked up at First and made a quiet hissing sound.\n\nFirst hissed back much louder and the kneeling figure cowered.\n\n\"You are neither Human nor Altarian. You appear to be some kind of freakish hybrid. The collar was calibrated incorrectly. This will be rectified. Killing you before the Prime arrives would... displease her.\"\n\n\"So you aren't the Prime?\" Jack groaned.\n\n\"I am First.\"\n\n\"That's not confusing at all,\" he sighed.\n\nFirst was silent. Jack got the impression the self-important jerk was itching to push the pain button again.\n\n\"Take care of his legs,\" it barked at Eve and left. The other Allsa Komanae hustled after it and the door closed.\n\nEve bent down and got her arms under Jack's shoulders and dragged him backwards over to the bed platform. The bed dropped down into the floor and she pulled him right up onto it. Once she stepped off the bed lifted back up. Jack realized this likely meant they were under observation. Maybe by the Allsa Komanae who checked his legs earlier?\n\nOnce the bed was back to its original height Eve moved to the end of the bed and pushed his tunic up to expose his legs.\n\nJack grabbed the hem and pushed it back down to cover his privates. \"Hey!\"\n\nEve gave him an exasperated look. \"I need to massage the knots out of your leg muscles.\"\n\n\"That doesn't mean you get permission for a free show.\"\n\n\"A free show?\" she asked with a puzzled expression.\n\n\"You know, of my privates.\"\n\n\"There is no privacy. You need to accept this as your new reality. Our masters see all and know all. There can be no secrets from them,\" Eve explained slowly as she tried to tug the hem of his tunic up again.\n\nJack tugged it back down. \"That wasn't what I meant by privates! I meant my... sex organs,\" he said uncomfortably. \"Besides, there are all kinds of ways secrets can be kept. I'm not buying into this crap about their all seeing all knowing abilities. They aren't gods. They bleed and they die just like we do. I've personally seen it.\"\n\nEve's eyes were wide. She looked nervously towards the ceiling. Then she turned her eyes to him and scowled. \"Let me do my job. I have been ordered to take care of your legs. I must do this.\"",
        "\"Sure but you don't need to see everything to do that. Here I'll lift it this high.\" Jack pulled the hem up higher but kept one hand in place to keep his essentials hidden.\n\nShe growled quietly but began at his feet.\n\nGod her hands were strong! Jack soon melted under her skillful kneading.\n\n\"Oh my god Eve, your hands are amazing! You were obviously sent from Heaven to resurrect my body.\"\n\nShe gave him another hostile look. \"Stop calling me Eve and stop thanking me for doing my job! I told you I am nothing! You must learn this to survive!\"\n\nJack just stared at her in frustration as she moved her hands further up his legs. The knots were larger the further up she went. They were also more painful to massage out but he held his tongue as the areas she'd completed felt so much better.\n\nFinally she could go no further because of his grip on the hem of his tunic. She stopped and returned his frustrated look.\n\n\"What?\" he asked.\n\n\"I need to go higher. Release your tunic. I have seen... sex organs of many species. Nothing is surprising, frightening, amusing, or even interesting anymore. I promise I will not scream or laugh or make any judgemental noises,\" she explained slowly to her dim student.\n\nJack sighed. \"None of that was a concern.\" He frowned. He really did need her to finish. \"Fine.\" He pulled his hands away and she pushed the hem up to his stomach. Her hands went right back to work and he had to grit his teeth as the knots on his upper thighs were especially large and sore.\n\nAfter a particularly tight knot loosened he sagged to the mattress and she seemed to be done. He looked down at Eve to see why she was so quiet. She was looking closely at his groin with a confused expression.\n\n\"Hey! You said you weren't going to ogle my stuff!\" Jack said sitting up to push the hem of his tunic back down.\n\nShe looked up at him in embarrassment. \"I'm sorry. I haven't seen one that looks like yours. I- I can't figure out how it would work. It seems too soft.\"\n\nJack blushed. \"Of course it's soft. It's in a relaxed state!\"\n\n\"But- but it's just skin and flesh! There's no rigid plates, sheath, or even an exo-lattice to force a female open!\" Eve exclaimed.\n\n\"Force a female open...\" Jack's voice faded as he stared at Eve. \"Have you had sex before?\"\n\n\"Of course I have. My first two masters used me for the games. I won many, many times for them. I have been pitted against many different races. All have had some form of armor on their sexual organs to ensure penetration and delivery.\"\n\nJack's head was spinning. \"Wait- wait! Games? Sex games? The Allsa Komanae make their slaves have sex for sport? As a competition?\"\n\nEve was giving him that pitying look again. Such a slow student.\n\n\"Yes, Allsa Komanae can't have sex themselves but they can link their sensory systems to our slave collars in the games and feel what we feel. The slave that lasts the longest and delivers the most pleasure feedback through their link wins and the master of the winner earns a status promotion while the defeated is demoted. Based on the difference in levels between the challenger and the defender the resulting change can be small or dramatic. First achieved its rank through this means. Since the return of the Prime was announced the games were suspended. First ordered this as there are to be no significant status level changes until the Prime arrives. This was not a popular order as there are very few other ways to rapidly increase the level of Allsa Komanae.\n\nJack tucked that little bit of information away. Back to something she said. \"You said the Allsa Komanae can't have sex. What does that mean?\"\n\nEve glanced nervously towards the ceiling but no painful discipline struck so she seemed to take that as permission to speak. \"It is believed they no longer have the physical capacity. They are an ancient race. They are heavily reliant on cybernetics, a field they are unsurpassed in. The discipline collars are just one example of their brilliant expertise. No one is sure how much organic life is contained within their robes.\"\n\n\"I've punched one before and my fist struck something organic in the hood... well, mostly organic. I felt something break.\"\n\nEve's eyes grew very wide as she looked at him. Then she moved back a little and looked to the ceiling once more. Still no pain.\n\nJack decided he'd better change the subject to keep her talking. \"You say you've had two masters?\"\n\n\"Five now.\" She pointed to the four scars circling her neck and the new collar.\n\n\"Why did they replace the collars? That looks terribly painful?\" Jack said looking closer at the damaged to Eve's neck.\n\n\"No master would accept a slave with a collar once controlled by a competitor. Too risky that it might be detonated at an unfortunate time. When a slave is exchanged the old collar must be removed. Most slaves don't survive more than three exchanges.\" Eve said in a matter of fact tone.\n\nJack looked again at her scars. \"You have endured a lot of pain in your life.\"\n\nShe shrugged. \"It is my role.\" Jack scowled. \"We will not be exchanged now that we belong to the Prime. No Allsa Komanae would dare challenge the Prime so she is our final master. Until she dispatches us herself of course.\"\n\nJack shook his head. She could show stubbornness to him but she was completely subservient to the Allsa Komanae. He thought of something. \"How long have you been a slave?\"\n\n\"I have always been a slave.\"\n\nAh, Jack thought. This explained a lot.\n\n\"Have you ever seen any others of your kind?\" he asked.\n\n\"No.\" She looked in the direction of his groin again. \"Will you tell me now how your sexual organ works? I am wondering if such softness would be an advantage or a disadvantage in a game.\"\n\nJack looked at Eve feeling distinctly uncomfortable. Time to change the subject.\n\n\"It works just fine. I don't get why they pit physically incompatible races against each other in the games.\" Jack growled.\n\n\"It makes the betting more exciting for the Allsa Komanae. You have to find a way to feel pleasure from your competitor, find a way to bring their pleasure to a peak quickly while maintaining your pleasure levels at their highest for as long as you can.\"\n\n\"What... what if your partner is causing you pain?\" Jack asked hesitantly, thinking of her comment before about being forced open.\n\n\"Competitor, not partner. Slaves are not allowed to cause other slaves pain. Your collar will punish you for that. Remember, the Allsa Komanae are connected to the slaves in the game and they do not want to feel pain.\"\n\nEve sighed. \"I enjoyed the games. I was good at it and I brought my masters great success until no Allsa Komanae would bet against me. I was retired from the games. My last two master's did not put me into the games.\"\n\n\"How long ago was your last... game?\" Jack asked awkwardly. This was one of the most uncomfortable conversations he'd had in some time.\n\nEve shrugged. \"I don't keep track of time like that. There is no point in it.\"\n\nJack nodded to himself. He supposed that made sense for her. He looked around the room. Besides the window to the light well the only other exit was the door at the far end of the room. \"Are we going to be kept in this room indefinitely?\"\n\n\"No, once you've been taught your new role we will be allowed to move to the Prime's slave barracks. I don't know what other slaves will be there. I guess we will find out when we get there.\"\n\n\"I don't get why the Allsa Komanae or the Prime for that matter need slaves.\" Jack said in confusion. He looked at Eve. \"I mean aside from getting their jollies feeling other people's sexual activity.\"\n\n\"We are theirs to use as they wish. Manual labor, lab experiments, status symbols, entertainment... whatever they desire.\" Eve said slowly in her teaching mode.\n\nJack rolled his eyes.\n\n\"Haven't any of the slaves ever escaped? There must have been some slaves clever enough to get past the locator and the network sensor in the collar.\"\n\n\"Where would they go?\" Eve asked.\n\nJack gave Eve a frustrated look. \"Through a Gate then anywhere!\"\n\n\"There are no Gates.\"\n\nJack froze. \"What?\"\n\n\"We are on the Allsa Komanae home planet. There are no Gates. The only way to leave it is on one of the interplanetary jump ships like the one we were on when we met.\"\n\n\"I was on a spaceship?\" Jack croaked.\n\nShe looked at him in concern. \"They are called jump ships, not spaceships but yes. You did not know?\" Jack could only shake his head. \"You would have been brought through a Gate to Allsa One. This is their central administration planet, the only one with Gates connected to the outer network. From Allsa One you were transferred to the ship. I was on the ship in stasis until we were well on our way back. Then I was woken to care for you as we returned to the home world.\"\n\n\"What about the Tik? They can open Gates to anywhere. Couldn't they find the planet?\" Jack insisted.\n\n\"I have never met or seen a Tik but I have heard my masters talk of them. The Allsa Komanae do not allow Tik the leave the Cargo Gate terminal on Allsa One... except back through the Gates to the outer network of course. The coordinates of the home world are a secret. No Tik has ever 'found it'. Only the pilots of the ships know how to find it.\" Eve explained with a sad expression as she saw how distressed he was becoming.\n\n\"So... no way off the planet except on one of the ships. Has anyone tried to seize one of the ships?\" Jack asked but he had a sinking feeling he knew what the answer would be.\n\n\"Your collar will incapacitate you automatically if you aren't authorized to be at the spaceport.\"\n\n\"Well that sucks.\" Jack flopped back on the bed and scowled. His chances for escape seemed to be slim to none. He'd have to rely on being rescued. He knew his friends the Altarians would turn over every stone until they found him. He'd just have to stay alive until they did.\n\nEve was watching his face closely when he sat back up and turned his eyes back to her. He knew what she needed to hear. He sighed. \"Ok, escape is out. Survival it is,\" he said and her face lit up with a relieved smile.\n\n\"Good!\"\n\n\"What do we do all day?\" he asked.\n\n\"That will depend on what our master wants us to do. My previous masters had me run errands. Deliver sensitive messages, pick up packages, and some administrative work. This was after I was retired from the games. I don't know what a Prime will need from us. I hope I can be productive for her.\" Eve looked a little worried.\n\n\"Do we get time to ourselves? Time to exercise?\" Jack asked as he looked at his slippers. He thought longingly of the new running shoes he'd purchased.\n\n\"There is a gym for maintaining our health.\" Eve said.\n\n\"I prefer to run. Distance running. Outside. Is that going to be possible?\" Jack asked.\n\nShe gave him a sad expression and shook her head. He just nodded and frowned.\n\nHis stomach took that moment to remind him it hadn't seen food in some time.\n\n\"That I can do something about,\" Eve said as she stood and walked to a recessed slot in the wall. She examined the settings on the dispenser. She walked back to him with an apologetic smile. \"Actually I'll need you to stand in front of the dispenser. Your bio profile hasn't been recorded in the machine so it hasn't been calibrated for your diet yet.\"\n\nShe helped him stand and lent him a shoulder to lean on as they walked back to the machine. The pain in his legs wasn't too bad. She'd done an awesome job of massaging them.\n\nHe stood before the dispenser and let it scan his body. The beam made him feel a little queasy but soon it was over and a tube of green paste and a tube of red paste were dropped into the machine's cavity. He pulled them out.\n\n\"What's this?\" he asked holding the tubes up.\n\n\"Food,\" Eve replied curiously.\n\n\"Nutrient paste. This is nutrient paste. It's not food.\" Jack was pissed but he was also hungry so he tore the cap off of the red tube and squeezed out a drop to taste it. \"Well... that's an unpleasant flavor. I'll just assume it's giving my body what it needs and bear with it, right?\" Eve nodded nervously as she could see he was upset. He finished the red tube and moved on to the green. It tasted worse but he finished it too.\n\n\"So insufficient clothing, no running for exercise, crappy food, and I'm to treat my new masters like gods. I'm learning my new role quickly.\"\n\nEve was still looking at him nervously.\n\nThe door chimed and three Allsa Komanae entered. He looked to the one in the center. It lifted something and Jack's brain just had time to register it might be a weapon when his body felt like it was being lit up like a Christmas tree. He just had time to think 'Fucking assholes!' then blackness.\n\nChapter 13\n\nMajor Cha'Risa Ash was fuming. She'd already passed through her rage phase. The remaining members of her team waited patiently for her simmering anger to crystalize into decisive forward momentum. In the seven years they'd been together the team had grown accustomed to each other's idiosyncrasies.\n\nThey were reeling from the loss of their friend and colleague Ray Sharif who'd been their comm tech specialist and might still be their savior if they could get to his private data cache.\n\nUnfortunately it was hidden on Earth and they were currently on Altaria. They could go to Earth but the moment they stepped through a Gate they'd be arrested for treason.\n\nOnce the Minister of Earth Security Council Ruan Steyn filed charges of treason against them they found their access to Earth's network was blocked. Their accounts were frozen. They needed to get back to Earth to locate Ray's personal data vault and find out if he'd been able to trace the abduction money from the LA Gate Terminus to its source. Ray had been a tech genius. Once he had the beginnings of a thread, in this case the smuggling ring at the terminus, tracking its connections wouldn't have been too challenging for him. He'd been murdered at the terminus but Mr. Steyn claimed he had Ray's report. He sent a copy of it to the Altarian Minister of Security, Hellna, who shared it with the team. The Major and Nann immediately identified the report as a counterfeit since Ray's digital signature was missing from the file. Ruan claimed this wasn't proof of anything as he suggested that Ray had been under attack and might have forgotten to add it. The Major's argument that Ray would never have filed a report without a signature regardless of the circumstances wasn't accepted. Ruan filed charges against the team the following day when they didn't voluntarily surrender themselves.\n\nSo here they sat in a very comfortable lounge in the Altarian Security Ministry headquarters with the two security officers, Gee and Bal, who were with them when their careers went off the rails.\n\nHellna walked into the lounge with a data comm. \"Queen Elissa has supplied me with all of the historical records we have of the Mahrell Drun. These can be verified by the Tik who have their own records as some of them were there at the time and their history is passed down and shared amongst their population.\"\n\nThe Major turned to her and lifted her comm to accept the data dump. \"Thank you.\"\n\n\"Do you have any idea of how you are going to reach the data cache yet?\" Hellna asked.\n\n\"There are people I can reach out to. People I trust in high ranking positions but I can't call them from here,\" the Major sighed.\n\n\"You are not restricted to Altaria. You may go through the Gates to any planet you wish,\" Hellna said, tilting her head curiously.\n\n\"We don't exactly have a lot of experience with other planets. We work exclusively on Earth. I wouldn't know the first thing about which planets are safe for us to go to considering the hate the Allsa Komanae have for us,\" the Major supplied.\n\n\"Gee and Bal have offered to assist you in this next phase of the mission. They will take you anywhere you need to go,\" the Minister said gesturing to the two security officers who just nodded.\n\nThe team looked at the two ebony Altarians. When they'd first met them the trained commandos had written them off because of their dainty size, the seemingly useless gossamer gowns they wore, and their quiet natures. They quickly learned the agents were quick thinking professionals who held their tongues until they had something important to say, wasted no time on unproductive recriminations, and were surprisingly deadly in a firefight. Unlike the uniformly civilized behavior seen in the rest of the Altarian population the quiet agents apparently nurtured some blood lust. This was graphically demonstrated by Bal's almost gleeful enjoyment of using their organic explosives back on Rehm.\n\nThis especially endeared the agents to Leo and Maxim who also liked things that went boom.\n\n\"Alright, thank you. Where should we go to find Tik with the required knowledge of the Mahrell Drun to augment the Queen's report? It also has to be a hospitable world that we can contact Earth from.\"\n\n\"Chuuruthia,\" Gee said. \"There are no Allsa Komanae on Chuuruthia. The planet also hosts a Tik enclave as the Tik have one of their Instantiation factories there.\"\n\n\"Where the Tik are born?\" Nann asked curiously.\n\n\"Exactly,\" Gee answered. \"The enclave will likely have some senior Tik who might have direct experience though it was a very long time ago.\"\n\nThey wasted no further time now that they had the beginnings of a plan. The trip back to the Gate Terminal was quick and the team was glad to see their weapons again.\n\n\"Please do a quick inspection as we will need to take them under our gowns once more,\" Gee said and Leo and Maxim made disappointed sounds. They took their weapons and skilled fingers ran through their inspection but found the weapons to be in exactly the same condition they'd been in when they surrendered them. With unhappy frowns they handed them over to Bal.\n\nOnce Gee had the Major's and Nann's weapons stowed they arranged a Gate to Chuuruthia and made their way to the Gate hall.\n\n\"I've never met a Chuuruthian. What are they like?\" Nann asked.\n\n\"They are civilized and intelligent. Deeply empathic and highly cultured. A lovely people,\" Gee replied.\n\n\"Like Altarians then,\" the Major said as she confirmed her comm was secured in her pocket. Gee looked at the tall warrior and smiled.\n\n\"Thank you for the comparison. One difference is their males are equal to their females in all ways. An exceptional balance! Chuuruthians are highly sought after for their skills as physicians and surgeons and their scientific community is also very well respected on all worlds.\"\n\nThey approached the mirror surface of the Gate and stepped through. The Major immediately picked up the lovely scent of flowers. She felt herself relaxing and a smile slipped onto her lips. \"It certainly smells like a nice planet,\" she remarked.\n\nGee and Bal exchanged the smallest of smiles. The glorious red and yellow flashes of light on the far side of the large Gate chamber was sunlight reflecting from the petals of the Chella Orchid, the official flower of Chuuruthia. The flowers also had a very pleasant scent which had a calming and sometimes mildly euphoric effect.\n\nThey approached the customs desk and the humans got their first look at a Chuuruthian.\n\nThey were a race of feline aliens which had been described as looking somewhat like Earth's Caracal cats. Small in stature at 1.5 metres tall, they had tan fur covered by colorful robes and they wore beautiful earrings in their large pointed ears.\n\n\"Welcome to Chuuruthia! May I have your names and purpose of your visit please,\" the clerk said.\n\nLeo began to chuckle and that seemed to set Maxim off. Nann looked at the two men like they'd lost their minds but the Major just grinned at them.\n\n\"I am Gee and this is Bal. We are representatives of the Altarian Security Ministry. Our companions are Major Cha'Risa Ash, Captain Nann Graf, Corporal Leo Orlov and Corporal Maxim Volkov. They are from Earth's Security Council Force. Before we get to the reason for our visit I believe the Humans are a little sensitive to the flora.\"",
        "\"Ah! Our apologies! Here, have them smell this. It neutralizes the effect of the flower's scent.\" The Chuuruthian handed Gee and Bal some small white fabric packets. The Altarians distributed them and demonstrated how to use them.\n\nLeo and Maxim both took a deep sniff and within seconds they were both frowning in embarrassment at their earlier behavior.\n\nNann indicated she was fine but the Major took a packet and inhaled deeply. Her grin softened and she looked at the Altarian curiously. \"What was that?\" she asked.\n\nGee pointed to the flowers. \"The scent of the Chella Orchids can sometimes have a mildly intoxicating effect.\" She turned back to the Chuuruthian. \"We need to speak with a Tik elder if any are available as we believe the Mahrell Drun are back.\"\n\n\"I'm not familiar with the name Mahrell Drun,\" the clerk said nervously.\n\n\"It is our belief that the Allsa Komanae are actually descendants of the Mahrell Drun. We have evidence that one of their Prime's has returned to reorganize and revitalize the Allsa Komanae. Comparatively the Mahrell Drun's skill at disrupting peaceful societies puts the Allsa Komanae to shame.\"\n\nThe Chuuruthian's long whiskers were trembling with nervousness. It didn't seem to know how to proceed.\n\n\"Perhaps you could point us in the direction of transportation to the Tik Enclave and contact Chuuruthian Security to have a representative meet us there. We will share our findings with them at that time,\" Gee suggested and the clerk nodded quickly. It pointed to the doorway at the far right of the building.\n\nWith a nod Gee led the group to the door and outside. There was an automated taxi service. Gee entered the number of people in their group and was notified a larger vehicle was on its way to pick them up.\n\nThe Major leaned in a little closer. \"Why did that clerk become agitated when you mentioned the Allsa Komanae?\" she asked.\n\nGee looked up. \"The Allsa Komanae attempted to kill the Chuuruthian population with a genetically engineered virus. That's why you won't find any Allsa Komanae on the planet. They've been banned.\"\n\nThe commandos looked around the grounds of the Gate Terminal and were impressed with how beautifully landscaped they were.\n\nA large, open vehicle with rows of seating descended next to the platform they were on and they climbed aboard once it stopped. Gee gave their destination and the vehicle slipped back up into the sky to rush towards the southern horizon. The speed of the vehicle increased until the land below rushed by in a blur but there was no wind distortion within the seating area.\n\n\"Outside of a few covert operations I can't go into the details for I don't think I've ever travelled this quickly at such a low altitude before,\" the Major remarked.\n\n\"Yes, this haste seems to indicate we've been given quite a high priority by the Chuuruthian air traffic authority,\" Gee agreed.\n\nAs they travelled they admired the scenery in the distance as the nearby terrain was moving far too quickly to watch comfortably. Soon they saw something glittering on the horizon and their speed began to diminish. They also saw a second vehicle moving on a trajectory similar to theirs. It was much smaller and enclosed. Their speed dropped quickly as they approached the source of the glittering. Dozens of brand new chrome Tik were flying here and there over a large building. All of them moved with a sense of purpose. Nann likened it to a bee hive.\n\nThe taxi settled to the ground outside of the building and the smaller vehicle settled down next to it where two Chuuruthians stepped out and walked over to meet them.\n\n\"Greetings! I am Security Minister Stenn and this is Secretary of Defence Kressel. I was informed that you have information regarding a possible Allsa Komanae mobilization. I was contacted by the Altarian Security Minister earlier indicating I should expect you. Am I speaking with Gee and Bal?\"\n\nGee stepped forward. \"I am Gee and this is Bal. Our companions are from Earth's Security Council Force.\" Gee made the introductions.\n\nThe Major stepped forward holding out her comm. \"I have the data from Queen Elissa regarding the Mahrell Drun, a race that had their Gate revoked because of their destructive influence on the other worlds. We are going to speak with an elder Tik if any are available to get confirmation and potentially any additional information we can get on the Mahrell Drun.\" She looked over a Gee who nodded so she continued. \"We have reason to believe Earth's chain of command may have been infiltrated and subverted by agents working with the Allsa Komanae and ultimately with this new Prime.\"\n\nThey began walking towards the entrance to the building and Gee continued. \"Our Ambassador, Jack Danner, was abducted by mercenaries on Earth who passed him along to someone who used to be a senior Director in Earth's Trade Commission, a Mr. Goodson. He in turn smuggled him through a Cargo Gate with help from a smuggling ring to Rehm where the ones who ordered the abduction killed Goodson and took possession of the Ambassador. It was the Allsa Komanae. The trail goes cold at Rehm but it is our belief that the abduction was just one element of a plan to disrupt relations between Earth and Altaria.\"\n\nThe Chuuruthians looked at each other nervously, whiskers trembling. \"We have long believed the Allsa Komanae were a blight on civilization. To hear they may be the descendants of a race excised from the Gate Network for exactly these kinds of crimes seems to validate our concerns.\"\n\n\"Indeed. However, we need more information on them so we can present this to people on Earth in positions of power that may be able to counteract the insurgence. We have no idea how deep the Allsa Komanae's influence goes within Earth's government.\"\n\n\"Do you know of people you can trust?\" Minister Stenn asked.\n\nThe Major looked to him and nodded. \"The difficult part will be contacting them. My team and I are all being charged with Treason so my calls will be blocked. A call from a Tik would not be.\"\n\n\"A call from the Chuuruthian Secretary of Defence would also go through I'm sure.\" Kressel offered.\n\nThe commandos all looked at the Chuuruthian in surprise. \"Yes, that would be extremely generous of you. However, it might also put Chuuruthia's relations with Earth in jeopardy as Altaria's is now.\"\n\n\"There is no other race in the entire Gate Network we would be more honored to stand beside in such a conflict. The Altarians and the Chuuruthians are both known for our strict adherence to honorable and civilized behavior. The Allsa Komanae are the exact opposite. Someone needs to take a stand against them,\" Kressel said firmly.\n\n\"Thank you.\" Gee and Bal said with a nod towards the man.\n\nThey reached the doors and the two Altarians handed over the weapons they were carrying before they were admitted.\n\nThe team looked towards the Secretary of Defence to see how he reacted but he just smiled at their concern. \"Not to worry. You entrusted your weapons with the Altarians. There is no better signal of your mutual trust which means the Chuuruthians can trust you as well,\" he said.\n\nA Tik with some interesting stylized markings all over its chassis floated towards them. \"Hello! Welcome to the Tik Enclave on Chuuruthia. I am BassDrop. How may I assist you today?\"\n\nGee stepped forward. \"We would like to speak to any senior Tik or any who might have information on a race called the Mahrell Drun. We have reason to believe they have returned and are attempting to destabilize relations between the Altarians and the Humans.\"\n\n\"There are Altarians and Humans present in this group as well as Chuuruthians. I see no hostility,\" it replied.\n\n\"The disruption is between our governments. The individuals you see before you are harmonious in our resolve to see this disruption end peacefully,\" Gee explained. \"Is there a senior Tik present at the Enclave?\"\n\n\"Yes, there are two. I will contact them. Please wait here.\" The Tik floated off down a hallway.\n\n\"BassDrop?\" Maxim asked.\n\n\"Another human naming though I don't know what it means.\" Bal offered with a frown.\n\n\"Is music. Dance club music. Loud. Powerful. Is good,\" Leo grinned and Maxim rolled his eyes.\n\nThey saw the Tik returning.\n\n\"They will see you now. Please follow me.\" It set off down the hall and the group fell into step behind it. They exited out into a huge inner courtyard which was beautifully landscaped. In the distance they saw a low platform situated in the middle of the open space. Two Tik were sitting upon raised sections of the platform.\n\nLeo suddenly made an excited sound. He moved closer to their guide. \"Excuse please. You were in Moscow? On Earth?\"\n\nWithout stopping its forward momentum BassDrop turned to face Leo. \"Yes I was. Shortly after I was Instantiated I worked the Cargo Gate in the Moscow Gate Terminus. How did you know?\"\n\nLeo pulled up his sleeve and showed the Tik a tattoo he had on his thick right forearm. It was faded with age but it was a Spade shape with white beams of light emanating from behind it. The Tik chirped excitedly.\n\n\"Ah! I would often spend my enrichment time at Club Spade. The music was exceptional! I was allowed to make my own music there two nights a week. It was exhilarating! The club manager gave me my name!\"\n\n\"That tattoo is from a Russian dance club?\" Nann asked with a smile. \"I thought it was military!\"\n\n\"Music is good!\" Leo insisted.\n\nBassDrop extended one of its metallic tentacles and touched its chassis and the group saw the identical symbol painted there. \"We are similar in our love of good music! Thank you for bringing this to my attention.\"\n\nLeo excitedly pulled out his comm and touched the controls. Soon a booming bass line filled the space around them and Leo bobbed his head to the music. Nann reached over and shut it off as the wide eyed Chuuruthians were covering their sensitive ears. Leo looked towards them with a contrite wince. \"Apologies.\"\n\nTheir guide had drifted to a stop as it looked at Leo. \"Was... was that a recording of one of my sessions at the club?\"\n\n\"Yes, is bootleg. You are famous!\" Leo grinned. \"I did not understand was you. Until now.\"\n\nThe Tik seemed to be stunned as it looked at Leo and the others without moving. Finally it began moving towards their destination once more though it remained facing Leo. It extended a tentacle towards the man and Leo took it in his hand once he saw Gee's gesture that he should.\n\n\"I am deeply touched that my creations are being shared amongst those who appreciate them. Thank you so much for sharing this. This is a unique experience for me. I will need to contemplate its significance,\" BassDrop said then retracted its tentacle and turned to face the platform they'd arrived at. It emitted a quick burst of noise and got a burst in return.\n\nA bench rose from the deck of the platform across from the two old Tik. The group sat and took a closer look at the ones they came to speak with. Where the Tik they'd seen on their arrival were bright and shiny chrome, the chassis on these two were dull and badly pitted. They also showed significant wear and tear in terms of dents, scratches, and deeper injuries.\n\nThe newer Tik settled itself between them and the older Tik touched it with a tentacle. \"Neither of the elders has the means to speak directly but they can tap into my speech center and speak through me. They will do so now.\"\n\n\"Hello, you may address me as One,\" said a deep voice. The old Tik on the left raised a tentacle. \"You may address me as Two,\" gestured the other, it's voice higher in pitch.\n\n\"Why do I feel an almost uncontrollable urge to name them?\" Nann whispered to the Major.\n\n\"The Tik developed a unique relationship with Humans who seem to have an overwhelming compulsion to name things,\" the deep voice said, sounding amused. Nann blushed at being overheard. \"Our young have a compulsion to obtain names from Humans. We think it might be something in the Instantiation matrix but as it's essentially harmless there is no need to look further into it. Two and I were Instantiated millennia before this relationship developed, indeed longer than Humanity itself has been self-aware, so we feel no such need.\"\n\nTwo's voice returned. \"I do admit to being curious as to what names you might have chosen in this instance.\"\n\nNann looked at Gee who nodded with a smile.\n\n\"One, Socrates. Two, Plato. The names just popped into my head as we sat down to face you.\"\n\nThe deep voice chuckled. \"Interesting choice of names. Not really applicable to our true role-\"\n\n\"I like it. I am Plato,\" Two said immediately adopting the name.\n\nOne made a noise which sounded strangely like a gasp of shock and annoyance. \"Fine. You are Plato. Our visitors may still address me as One-\"\n\n\"Socrates,\" Plato blurted, interrupting once more.\n\nThe noise emitted once more. \"What if I don't wish to be addressed as Socrates?\" the deep voice growled.\n\n\"You don't?\" Plato asked.\n\nThere was silence.\n\n\"Might we begin?\" the Chuuruthian Security Minister asked.\n\n\"Of course... you may address me as Socrates.\"\n\nNann grinned.\n\n\"Thank you. Socrates, Plato, you indicated that you have been alive for an exceptionally long time. During this lifetime did you ever have interaction with a race of beings called the Mahrell Drun? We understand they were forced out of the Gate Network and their Gate was destroyed,\" Stenn asked.\n\nMore silence.\n\nFinally Socrates spoke again. \"I haven't heard that name in a long time. Yes, we were working for the Kel-Fahr during the time of the banishment.\"\n\n\"Banishment?\" Gee asked.\n\n\"The Mahrell Drun were master manipulators. They destroyed so many lives and even caused some races to slide back into the dust from which they sprung. The Tik do not follow a belief system which supports personifying good and evil. However, the Mahrell Drun's willingness to trick others into destroying life for their own selfish gain and their insatiable greed makes it very difficult for us to not think of them as evil.\"\n\nPlato took up the tale. \"When it was eventually discovered that they were the root cause of the destabilization of so many worlds the Kel-Fahr finally saw the threat and responded with all of their might. The Mahrell Drun had several worlds under their thrall which attempted to fight on behalf of their hidden masters but all perished. When the Kel-Fahr reached the Mahrell Drun's home planet they found it to be abandoned. Not one Prime was found. So they sterilized the world and destroyed its Gate.\"\n\nSocrates' voice was rough as he continued. \"The Kel-Fahr hunted down the Primes. There was never more than five at any time as their ambition made them fight amongst themselves if their numbers increased. However, only three were found and they were destroyed down to the atomic level.\"\n\n\"The other two were never found?\" Gee asked.\n\n\"One should have been on their home planet. Primes always left one of their own on their home world. But the Kel-Fahr never found it.\" Plato answered.\n\n\"No evidence of the other one was found either.\"\n\n\"We suspect the Allsa Komanae are the descendants of the Mahrell Drun.\" Gee said.\n\n\"That is highly doubtful,\" Plato remarked.\n\n\"Why?\" Gee asked.\n\n\"From the time of the banishment all Gates carry code that prevents Prime's from passing through them without being genetically damaged to the point of sterility. The Kel-Fahr imposed this code on the Gates and they are the only species this was done to. Allsa Komanae pass through the Gates all the time. They have done so for centuries yet their population remains steady.\"\n\n\"Have there ever been any dramatic increases or decreases in their population as one might expect with mass sicknesses caused by natural means or otherwise?\" Stenn asked, clearly recalling their own near pandemic.\n\n\"No, looking at their numbers over time they progressed to their current population and have remained within five percent of that total ever since. Exceptionally stable but then so is the Tik's population.\n\n\"You are only tracking the Allsa Komanae who pass through Gates though. You don't know their population on their home world,\" Gee pushed.\n\nThere was some hesitation. \"Yes... that is correct,\" Socrates conceded.\n\n\"Getting back to the Mahrell Drun, we have evidence that one exists and is in fact working with the Allsa Komanae. Would it be possible to get a digital transcript of the history of the Mahrell Drun and their subsequent banishment?\" Major Ash requested.\n\n\"Of course. Did you meet this Prime? Do you have direct evidence of its existence?\" Plato asked.\n\nIt was the Major's turn to hesitate. \"No, we didn't and we don't. We just have a confession from one Allsa Komanae and a pattern of activity that seems far better organized than anything the Allsa Komanae have ever achieved before.\"\n\n\"With the Mahrell Drun, that's more than you'd typically get. We have done what we can. Good luck to you all,\" Socrates indicated.\n\n\"Thank you very much for your assistance with this!\" the Major said.\n\nThe two senior Tik disconnected from BassDrop who moved to the Major. \"I can upload the file they gave to me.\" She pointed her comm at the Tik and it touched the input jack for a moment. When it pulled the tentacle back she saw the file was in her storage.\n\n\"I'd like a copy of that as well if you don't mind,\" Secretary of Defence Kressel indicated and BassDrop uploaded the file to his comm as well. \"We should return to my office so we can contact these trusted officials of yours on Earth.\"\n\nThe group followed their Tik guide back out to the entrance to the building.\n\nLeo held BassDrop's 'hand' once more then they made their way back to the vehicles and set course for the Ministry of Defence's office.\n\nOnce more they were given priority and the vehicles reached the high velocity they'd had on the way to see the Tik. No one felt like talking as they were all deep in their own thoughts. The commandos understood that their next step would either get them the access to Earth they desperately needed or show them they could never go home. Gee and Bal sensed their unease and had no words of comfort to offer.\n\nSoon they could see the beautiful low rise buildings of the Chuuruthian government's headquarters and their speed gradually slowed until they parked next to a two story building tucked back behind some lovely flowering trees. They exited the vehicles and followed Kressel into the building and down a long corridor to a large conference room. A younger female Chuuruthian rushed into the room.\n\n\"How may I be of assistance?\" she asked Kressel.\n\n\"Fire up the comm system in here and get me a secure line to Earth,\" he replied. She immediately moved to the console and began setting up the protocols. The large display at the end of the room flickered to life. Kressel turned to the Major. \"Who am I calling?\"\n\nThe Major shared a look with Nann. \"Brigadier General Rosseau. I served under him for five years. I trust him more than anyone else. He will be at the Ministry of Defence in Paris, France. I will give you his contact number.\" She sent him the data from her comm and Kressel forwarded it along to the tech.\n\n\"Once you are speaking to him and have his full attention, send him the data pack and tell him the following phrase, 'Major Ash says Shanghai Insider'. He'll know what that means.\" She looked around the room. \"In case his comm is monitored where can we stand and not be in the camera's view?\"\n\nKressel pointed to the corners of the room next to the screen. The team moved to stand in the blind spots and Gee and Bal joined them.\n\n\"Are we clear?\" Gee asked.\n\nKressel looked at the young technician who checked the camera's view and nodded. He turned back to the Altarian's and the humans and they indicated they were ready. He took a seat next to Security Minister Stenn and nodded back to the tech. She set up the call then left the room. It was up to the Defence Secretary now. He initiated the call.",
        "After a few moments a crisp male voice answered the call. The Chuuruthian's ID would have been presented to the person answering the call. \"Office of Brigadier General Rosseau. How may I direct your call?\"\n\n\"I need to speak with the Brigadier General.\" Kressel said, ears twitching to the cold tone in the voice. The screen was still only showing the emblem of Rosseau's office. No visual of the speaker. This was bordering on rude as the Chuuruthian's camera was on.\n\n\"Hold please.\" The audio cut to a piece of classical music. Moments later the screen flipped to a live feed of Rosseau sitting behind his desk smiling at the camera.\n\n\"Hello! This is Rosseau. How may I be of service to the Chuuruthian Secretary of Defence?\"\n\n\"Greetings! With me is Minister of Security Stenn.\" They nodded to each other. Kressel continued. \"Actually the reason for my call is to be of service to you. May I share with you a data pack a mutual acquaintance of ours asked me to give to you?\" Kressel began.\n\nRosseau's eyes narrowed but he nodded.\n\nKressel pressed the submit button and the data pack was shipped to him. \"Major Ash-\"\n\nThere was a loud crashing sound and the General leapt from his camera's view. There was a staccato blurt from automatic weapon fire, multiple overlapping sounds, and rounds tore through the General's desk and chair then the connection went dead.\n\nThe Chuuruthian Defence Secretary looked stunned. \"What just happened?\"\n\nStenn leaned forward to check the connection as the others rushed back to stand next to them. \"It was shut down from the other end,\" he supplied.\n\n\"What do we do now?\" Nann asked.\n\nThe Major looked worried. \"I- I don't know. My second contact is Colonel MacDenny in Canada. I was going to ask you to contact him next but not if-\"\n\nThe line chirped with an incoming call. \"It's from Earth! From the Ministry of Defence in France!\" Stenn exclaimed.\n\nKressel nodded and Stenn opened the connection.\n\nThe screen filled with the angry face of the Brigadier General. He immediately spotted the Major and his eyes locked on her. \"What the FUCK is going on?\" he bellowed.\n\n\"Shanghai insider, sir,\" she responded.\n\n\"That much became obvious when my secretary tried to kill me.\" His camera panned to the grisly scene of his shot up office and the corpse of the office clerk who stupidly attempted to gun down a battle trained soldier. The General set the military grade mobile comm on the remains of his desk and plunked himself down on his chewed up chair to lean back. \"What was on that data pack you sent me? You're going to need to send it again as my lovely antique desk and its comm are a write off,\" he said. They could see commandos behind the General. Ash knew these men. Handpicked to be his security detail. Not normally a requirement in his office.\n\nKressel sent the data pack to the new connection.\n\n\"We have an infiltration from agents of the Allsa Komanae who are now being led by one of their Primes, a Mahrell Drun. They specialize in disrupting civilizations and genocide through controlling governments from within. The data pack contains the data we personally gathered, historical text from the Altarian archives and direct confirmation from the Tik. I don't think there is a better source of proof aside from direct visual confirmation but the Tik informed us that's almost an impossibility where the Mahrell Drun are concerned. We can get additional proof but only from Earth and we'll need to be there in person to retrieve it. The report they are claiming was Ray's is a fake.\"\n\nRosseau frowned. \"Getting you back to Earth is going to be tricky until we can clear your names. Every Gate is going to be watching for you.\"\n\n\"We'll find a way. We need to get that information! It's our best bet at exposing the leaders of the infiltration and clearing our names.\" Ash exclaimed.\n\nThe Brigadier General nodded. \"When I heard that ass Ruan Steyn file charges of treason against you and your team I knew something was off. I'm terribly sorry to hear about Ray. He was a brilliant man. I'll make sure this information is distributed to people we can trust. Have you contacted MacDenny?\"\n\n\"Not yet sir.\"\n\n\"I'll contact him myself. The bastard owes me money from our last poker night. Good luck!\" He turned to look at the Chuuruthians. \"My sincerest thanks for assisting Major Ash and her team, Secretary of Defence Kressel! I won't forget this!\" With a final nod between the General and Kressel the line went dead.\n\nNann looked at her leader. \"What now?\"\n\nThe female tech entered the room once more. \"Sir, there are two Tik here wishing to speak with you and the group.\"\n\nKressel gestured for her to show them in.\n\n\"No naming them unless asked!\" Ash growled at her group. There were a few guilty looks as the thought had crossed their minds.\n\nThe tech showed two shiny, new Tik into the room. They hovered a few feet above the floor and the Major couldn't distinguish between them as they must have been newly Instantiated.\n\n\"Hello. The Tik you know as Socrates asked us to assist you in any way you require to expose the Mahrell Drun. The Tik have chosen to act as to not do so will lead to the loss of countless lives. We cannot condone this,\" one of the Tik said in a calm and even tone.\n\n\"We have been informed that at the conclusion of this mission we may request that you give us names. For now you may refer to me as four-oh-four and my partner as one-oh-one, a simple shortening of our Instantiation ID's. Is this satisfactory?\"\n\nThe Major stared at the silver mechanical life forms in shock. Then she gave herself a shake. \"It is more than satisfactory! Thank you. I'm not sure how-\"\n\n\"If I may?\" Gee said and the Major nodded.\n\nThe Altarian turned to the Tik. \"It is my understanding that two Tik, if equipped with the required tech, may open an independent Gate. Are you two able to and willing to do this for us?\"\n\n\"Yes. Where would you like to go?\"\n\nChapter 14\n\nJack felt the most exquisite waves of pleasure radiating from his groin as he felt a soft mattress under his body. His skull, on the other hand, felt like a bag of broken glass. He couldn't move his head without making the grating, scratching, and jabbing pain worse.\n\nSo he held very still.\n\nNormally that wouldn't be a difficult thing to do. He could laze in bed with the best of them. But add to the equation the delicious sensation of his cock being slowly driven deep into a hot, wet and very receptive body and being still is not such an easy thing to achieve.\n\nHe tried to open his eyes but that hurt too. So he listened.\n\nThe person riding his erection was trying desperately to be quiet but the occasional whimper leaked out.\n\nIt was Eve.\n\nHer curiosity had obviously gotten the better of her and she'd decided to find out for herself \"how it worked\". From the sounds she was making she was enjoying her experiment and she sounded close.\n\nJack slowly let his eyelids relax and they opened. When his eyes focused he saw Eve had her eyes closed and she was clutching her small breasts through her tunic as she slowly lifted her body up and down on his hard cock. It felt pretty amazing for Jack too but he wasn't there yet. Eve was beginning to tremble.\n\nJack moved his hands to her hips and took a grip as he thrust his hips upward. His head hurt from his motions but he was relieved to feel the pain was diminishing.\n\nEve's reaction to his sudden move was much more intense. She made a loud drawn out noise that fell somewhere between a deep bass honk and a bleat. Her trembling became outright tremors and her eyes rolled back. Jack hammered his hips upward and she bounced against his pelvis. Her noises settled down into a steady moan as Jack got closer and closer to his release. When her body began to convulse she fell forward over him. He caught her in his hands and slowly lowered her to his chest. His hips continued to drive his cock up into her and she gave up on being quiet. The honking noises just got louder and more drawn out. How such a deep note could be coming from such a small body was a mystery.\n\nJack was worried Eve's noises would draw in company so he took her head in his hands and kissed her.\n\nEve's eyes shot open and she tried to pull her face away but her muscles were still trembling too much and she had no coordination. Jack stroked her lips with his and she slowly relaxed. When he playfully nibbled at her lips with his she convulsed again and began to kiss him back.\n\n\"Oh... oh... oh... what... please... more...\" she murmured between kisses and her sweet little words were driving Jack to new heights of passion. He tasted her lower lip with a tongue stroke and Eve immediately wrapped her tongue around his and pulled it into her mouth to suck on it. She was making garbled honking noises and her tremors increased and her body clamped down on his cock as he was buried in her to the base. He felt her inner muscles milking his cock, rippling and squeezing.\n\nThis was it, her orgasm was taking her. She released his tongue and the sounds bellowing out of her made it clear she was truly enjoying her pleasure. It was too much for Jack and he erupted into her hot core.\n\n\"Oh! I feel it! It so hot! So much!\" she gasped into his ear as her body pressed against his. They clung to each other as their orgasms rushed through their bodies. Their horns rasped and rubbed together, the strange sensation making them both cling tighter.\n\nFinally their breathing settled down and Jack rested his head back against the pillows. He gently pulled himself free of Eve's body and she rested on the mattress beside him. He wanted a shower but he was willing to wait.\n\nHe wasn't really mad that Eve had done this but he was a little peeved that she hadn't asked. Truthfully, he wouldn't have refused her but being taken in your sleep is more than a little creepy.\n\nThe door opened with no warning and First entered with two guards accompanying it. Eve snapped up to her feet and kept her eyes on the floor. Jack dragged himself to his feet and stood next to Eve. He didn't drop his eyes.\n\nFirst stood before Jack flanked by the two guards. It was practically vibrating with excitement so maybe it forgot about its command for Jack to keep his eyes down.\n\n\"That was an excellent demonstration. The integration of your nervous system with the exquisitely crafted and advanced collar is remarkable! I've never experienced such complete immersion before!\" First practically gushed.\n\nJack's jaw dropped in horror. What he'd shared just now with Eve had been for them alone. To discover the sick bastard had been tagging along for the ride and feeling what he was feeling was a complete violation.\n\nHe turned his head to look at Eve but she wouldn't look at him. She turned her face away but he'd caught the shame in her eyes. She was sorry she'd done it. Something had changed for her.\n\nHe shuddered but he knew he had to survive until his friends found him. He was going home. He tipped his head and looked at the floor.\n\n\"You understand now. Don't you,\" the Allsa Komanae said slowly with a satisfied, smug tone.\n\nJack wanted so badly to drive his fist into that damn cowl and smash whatever First hid inside it but... not yet. He nodded.\n\n\"Excellent. It's time for you to meet your other companions. The Prime had very particular instructions on selecting her toys.\"\n\nJack just waited. With a satisfied noise First turned and left. The guards pointed to the door and Eve moved to follow First so Jack followed her with the two Allsa Komanae guards bringing up the rear.\n\nThey entered a large elevator with the guards keeping an eye on Jack who noted that they completely ignored Eve. She was a known quantity.\n\nThey exited on the ground level and left the building. There was a vehicle parked outside and Eve immediately headed for the open section at the back. Jack followed and climbed on. He saw she was clinging to the bar mounted on the back of the vehicle so he took hold as well. The muscles in his hands contracted and gripped painfully tight.\n\n\"They don't use stabilizer fields back here?\" Jack gritted out quietly to Eve between his teeth.\n\n\"This is cheaper.\"\n\n\"Right.\"\n\nOnce the guards saw the slaves were secured they walked back into the building and First got into the passenger section. The car lifted and they were off.\n\nJack and Eve hunkered down next to each other to avoid the winds as they rushed across the landscape to destination unknown.\n\n\"I'm sorry.\"\n\nJack looked at Eve in surprise. She was sorry for following an order from her master? That was major. He looked closer and saw she was crying.\n\n\"Hey! Please don't cry! What are these tears for?\" Jack leaned against Eve just a little more to bring her tighter against his body. Without his hands free, it was the closest he could get to a hug.\n\n\"I'm so confused! It- it's never felt like that before. You didn't know First was linked in. For you it was private so it was... honest. I've never...\" Her eyes looked up into his and he saw her torment. \"What were you doing with your mouth?\"\n\n\"You've never been kissed before?\" he asked in surprise.\n\n\"Kiss? That's what it's called?\" Eve said in wonder watching his lips move then looked away in shame.\n\n\"Hey! Listen, I understand you were ordered to do it. I don't blame you. Yes, I was really upset when I found out what actually happened. But as you said, for me it was an honest expression of emotion. That hasn't changed. I like you Eve. Even if we weren't in this awful situation I'd like to get to know you better-\"\n\n\"STOP! DON'T YOU GET IT? WE. ARE. DISPOSABLE! WE CAN'T GET CLOSE!\" Eve yelled in his face then turned away from him, crying.\n\nHer outburst finally shone a light on Eve's behavior to date. She'd been a slave for as long as she could remember. She'd survived. She'd done that while others had not. She'd seen those she might have cared for killed... for whatever senseless reasons the master's had. She was protecting herself.\n\nFuck he felt awful. He really had no concept of how hard it had been for her. \"I'm sorry.\"\n\nShe shook her head but she didn't turn back to look at him.\n\nJack gave her the space she needed.\n\nThey rode in silence until they reached the outskirts of a city. As they made their way closer to the center of the core the buildings got larger but there was a uniformity to their design. There was no thought to aesthetics. The city was ugly but functional. They reached a rather large building in the center of the city and once again the only thing that distinguished it was its size and the fact that it had a series of outlier buildings attached to it.\n\nTheir vehicle was pulling up to one of these outlier buildings. When the car settled to the ground it was met by two Allsa Komanae security personnel. First exited the car and turned to face the two still locked in place on the back platform. He touched something on the car and the muscles on their hands suddenly relaxed.\n\nAs he stepped from the deck Jack caught himself about to turn to help Eve but instead he ignored her. He couldn't let First see he cared and he had to let Eve recover.\n\n\"She was crying. Why?\" First paused to ask Jack.\n\n\"Bitch tricked me. So I had a few words with her.\" Jack growled. He found himself on the ground with just the memory of an astonishing amount of pain for a brief moment.\n\n\"You will refrain from any activity that disturbs the tranquility of the other slaves. Am I understood?\" First said in a sinister hiss.\n\nJack could only nod as his jaw was still locked up. He pushed himself to his feet and leaned away from Eve who was moving to help. He glanced at her and saw her look of confusion at his lie.\n\n\"Good.\" First said in a pleased tone. \"Let's introduce you to the others.\"\n\nIt led the way again and they fell into step behind it followed by the two guards. The entrance was at the midpoint on one of the long sides of the rectangular building. The doors were wide and Jack saw the inside of the building was completely open, one vast chamber. To the far left was what looked like bunk beds, obviously the sleeping area. There was some machinery straight ahead of them that may have been a gym of some kind. To the far right were the food processing machines and the bathroom facilities.\n\nStanding by the food processing area were the others they were to meet. When they saw the Allsa Komanae they stopped what they were doing and moved closer to stand in a line looking at the floor.\n\nJack saw a human Caucasian man and woman, both fairly young and the woman was obviously pregnant. She looked like she was full term. The man had long black hair and a beard, his body was tall and slim, maybe a little too slim. His body was long limbed but his joints stood out in stark relief.\n\nThe woman had long brown hair and a round face. Her body, shorter than the man's, was just a little plump all over. Jack guessed the man was giving some of his rations to her.\n\nNext was a being whose species Jack didn't recognize. It was tall and broad with powerful looking limbs. Scaled skin with an olive green tint. Wide jaws filled with sharp looking teeth. Menacing.\n\nThe next slave caused Jack's body to jolt in surprise. An Altarian! Tall, probably at the top end of their height range, and a beautiful chocolate brown. He saw her nose twitching and he began to smell a spicy musk. His body, of course, responded and her eyes flicked up to glance at him in confusion then back to the floor. She was twitching as her body responded to his scent.\n\nJack dragged his attention from the Altarian to the words First was saying. He'd missed some already.\n\n\"...skills they have or for some other whim. We do not question the Prime. Each was personally selected so they have been gathered here for her arrival. You two will sleep here, eat here, expel your waste here, and exercise here to maintain your health. You will be given tasks to do to maintain your mental acuity. Some may entail you moving from this building to another location and back. When you are assigned these tasks you will be given permission to move along a designated route. Stray from it and you will be punished. Outside of these tasks there will be no unauthorized departure from this building. Is this understood?\"\n\nJack and Eve nodded.\n\nFirst made a sound of satisfaction and left the building with the guards.\n\nThe moment they were gone the others all looked up at Jack and Eve. The man and woman were staring at him with undisguised fear. The scaled one walked closer and stared down into Jack's face.\n\n\"You are shaped like these soft ones but are not like them. You smell like the furred one but have no fur. What are you?\" it asked in a gravelly voice.\n\n\"I'm both. A hybrid. I don't think I have ever met one of your species either.\" Jack responded.\n\n\"We do not travel beyond our world. I must go back to my mate. Once I have killed those who took me from her,\" it replied.\n\nJack nodded. It was good to have a plan. \"I'm Jack.\"\n\n\"You cannot pronounce my name so you may call me Kekk.\"\n\nWith that the brutish being walked away to get its meal. Jack hadn't seen any scars on its neck. Its discipline band was wider than his but had no designs on it. Just a wide plain silver band with the V notch at the front.\n\n\"How- how can you be both human and like this one?\" the tall man asked pointing to the Altarian who hadn't looked away from him since the Allsa Komanae left.\n\nJack heard the accent and he thought he recognized it from TV show's he'd watched back when he'd been a worker on Earth. They were South African. He saw no scars around their necks. Their Prime collars were much smaller and plainer than his. \"How long ago were you abducted?\" Jack asked.\n\n\"About five months ago.\"\n\n\"My name is Jack Danner. I'm Earth's Altarian Trade Commissioner and the Altarian Ambassador.\"\n\n\"Oh my god! I've heard of you!\" the woman gasped. \"The Goat Man! Lucifer!\"",
        "Jack rolled his eyes. \"Oh please! I'm not the devil! I'm just a human who had a rather extreme reaction to an Altarian virus.\" At their abrupt pulling back he sighed. \"It's not contagious. It affected me and me alone.\"\n\nHe looked at the man again. \"Listen, are you giving your food rations to your... wife?\" he asked spotting their wedding bands.\n\nThe man scowled at him. \"What if I am?\" he barked belligerently. \"I'm not letting the machine scan her to know she's... expecting.\"\n\n\"Her collar will already have notified them of that fact. For her and the baby to get the nutrients they need and for you to remain strong for them you all need to get and eat your own rations,\" Jack said gently. The man glowered at him and the woman looked shaken. She was touching her collar. The man gathered the woman under his arm and they walked back to the ration dispensers. Neither offered their names to him. There was time for that later Jack supposed.\n\nEve gazed sadly at him and followed the couple.\n\nThe Altarian was looking at him with wide eyes. Her pink tongue swept across her upper lip and Jack felt his body react.\n\n\"How... how...\" she said, struggling to understand why she was reacting to him. Her eyes went to his horns and Jack saw her bite her lip, triggering a response from him.\n\n\"What's your name?\" Jack asked.\n\n\"Stella.\"\n\nJack grinned involuntarily as he heard her name. It suited her. \"How long have you been here?\"\n\n\"I- I think five years,\" she breathed, her eyes still locked on his horns. He saw two scar rings on her neck and a plain silver discipline collar with the Prime's symbol on it.\n\nJack knew this could be awkward as hell if he were to let himself do what his body wanted so desperately to do. There was no privacy in this building and it was likely they were being watched by the Allsa Komanae.\n\n\"I'm the consort to the Altarian Queen and the father of her two children. Do you know what that means?\" Jack said quietly.\n\nStella froze and stared at him. After a moment she found her voice though it was extremely quiet.\n\n\"She's coming for you.\"\n\n\"Us.\"\n\nStella's face lit up with a smile that took Jack's breath away and he took an involuntary step towards her before he stepped back hastily. Her spicy heat was beginning to erode his control and he was tenting his tunic badly. As her excitement was plain to see by the six bumps showing down the front of her own tunic. She glanced down at him.\n\n\"Could we...?\" she whispered.\n\n\"God I want to but I think we'd better try to hold off for as long as we can. The name of the game now is waiting for our rescue and surviving until that happens is paramount. I'm not sure if giving the Allsa Komanae extra pleasure is such a good idea. We should avoid their attention whenever possible.\" He sighed in frustration. \"You've had two previous masters?\"\n\n\"Yes- the first master I had was cruel. It was the one who ambushed the expedition I was a member of. We were investigating a site on a planet which once had a prosperous civilization. We wanted to record their history. A large group of Allsa Komanae led by the one who took me as a slave attacked our encampment at night and slaughtered the others. They left an explosive device to make the site look like we'd uncovered a weapon and it destroyed us. I was packed up with the artifact's we'd managed to find and shipped here. The cruel one spent a year torturing me at random intervals. Then First took me from it. Apparently the Prime wants me so she took me from First.\"\n\nShe was looking at his horns again and he knew what the next question on her lips would be. \"Yes, you can touch them.\" He was going to warn her about the tips but they were capped now.\n\nHer fingers were on them almost immediately. She reverently touched them and ran her fingers over their ridged surface. Jack was enveloped in her spicy musk and pulled back from her with a tremendous effort of will.\n\n\"We... we should eat... now.\" Jack said and gently pulled Stella's hands from his horns. Her eyes had an almost desperate look in them. It cracked Jack's resolve. \"Let's at least wait until the others are asleep.\" Joy and anticipation shone from her eyes then.\n\nThey made their way over to the ration dispensers and Jack once more suffered through the nauseating body scan process before it dropped two tubes of nutrient paste into the collection slot.\n\nKekk was staring at him and Stella with a scowl. \"What?\" Jack asked.\n\n\"The pheromones you two are emitting is almost overpowering. Go mate and spare me the ordeal of having to smell it.\"\n\nJack blushed. \"I'm sorry about that. It's not something we really have control over. It might be a better idea for us to wait until night. I am assuming that there will be less Allsa Komanae monitoring us at that time. No need to give too many of them a free show.\"\n\nKekk looked at him in confusion. \"What do you mean 'free show'?\"\n\n\"The Allsa Komanae can link into your collar's biometric feed so they can feel what you are feeling. They get to share the experience. Creepy bastards!\" Jack growled and his head lit up with lightning.\n\nHe came to in the arms of Stella. Her eyes were filled with concern.\n\n\"Ow.\"\n\nKekk was looking angry but he gave Jack a small smile. \"You forget they are listening?\"\n\nJack wanted to sit up but being wrapped in Stella's arms while resting back against her soft body was absolute bliss. \"I wasn't aware they listen to every word.\"\n\n\"Random intervals.\" Eve offered quietly and got punished for it. The pain didn't take her consciousness as it had for Jack but she was hurt. Jack surged up but a glance from her pain filled eyes stopped him. Stella pulled him back against her.\n\nKekk wouldn't be deterred. \"How do we know when they are linked in?\"\n\n\"Temporary Headache.\" Eve said through gritted teeth but she wasn't punished for that. Jack was staring at her with amazement as she was breaking her conditioning which had to be intensely difficult for her.\n\nJack suddenly recalled the sensation of glass in his brain when he'd had sex with Eve. \"Glass.\" His face showed his shock.\n\n\"What?\" Kekk asked.\n\n\"When First connected into my collar it felt like broken glass in my mind but it went away. I didn't know what it was at the time,\" he said absentmindedly stroking Stella's arm who was almost purring.\n\nKekk snorted to clear his sinuses and walked away to distance himself from the cloud of pheromones. \"Do it and spare us.\" He sat at one of the exercise benches and ate his rations. Jack saw his ration tubes on the floor where he'd dropped them when he fell and picked them up.\n\n\"How can you claim to not be the devil when you lie with the beast?\" the woman spat at him from the protective arms of her husband.\n\nJack sighed. \"Great. Religious fundamentalists,\" he thought to himself.\n\n\"First off, Altarians are not beasts. They are Altarians. Beautiful, culturally advanced, and peace loving beings. We human's should aspire to be more like them. Yes, I still consider myself human. I was born and raised on Earth by loving human parents and my genetic alteration is only a recent event. If it made me a little more like an Altarian I can only call that an improvement.\"\n\n\"The Good Book says-\" she began, her voice beginning to rise to the shrill levels of a zealot.\n\n\"DON'T! I know exactly what the book says. I've read it. It's a lovely book and there is a beautiful message of love in it which you've obviously missed the point of. If all you have is judgemental words in your vocabulary please keep them to yourself. Otherwise, I would welcome a conversation with you both. We could start with your names.\"\n\nThe couple was scowling at him, red faced. He hoped they came around before it was too late.\n\n\"You need to find it in your hearts to accept the real danger we are facing isn't currently present in the room and we need to work together to survive,\" he said with a sigh and got himself to his feet. The couple moved away without looking at him.\n\nJack pulled Stella up to her hooves and looked at Eve who was watching him with glassy eyes.\n\n\"I can't pretend to not care about you. I'm sorry.\" Jack said softly.\n\nShe nodded and moved to the exercise equipment as well.\n\nJack looked back at Stella and she smiled hopefully at him. \"I think it still makes sense to wait for later. We should do our best to distract ourselves until then.\" A wave of the spicy scent wafted over him and he swayed. \"We should remain at opposite ends of the building until then.\"\n\nStella bit her lip and nodded wide eyed as she felt his need for her spike. She turned and rushed away to the sleeping area.\n\nJack turned and went into the bathing area. He pulled his tunic off and hung it on a hook before stepping under a cold shower. After drying himself off he went back to the food area and ate his rations.\n\nFidgeting he realized he needed to run. Maybe there was a treadmill in the exercise equipment. He walked over and saw Kekk pushing against the arms of a resistance trainer. He looked to Eve and saw she was pushing against a smaller machine.\n\n\"Is there a machine I can run on?\" he asked Eve. She stood and tugged on a bar on the wall. A panel folded down. She gestured for him to stand on it. When he did the wall panel in front of him lit up with a display of stats like distance and speed. He nodded and she pressed a spot on the screen. The surface under his feet began to move and he had to walk to stay in place. As he picked up his pace the deck sped up as well.\n\nJack smiled at Eve as he felt his muscles begin to warm up and stretch. She timidly smiled back at him then moved away to her own workout. He saw another spot that seemed to indicate wind so he pressed it and was rewarded with a gentle breeze against his face.\n\nJack closed his eyes and opened up his stride. Soon he was running at his full ground eating pace. The deck beneath his feet had enough give to absorb the impact but was stiff enough to push back when his feet kicked off. It wasn't as good as running outdoors but he supposed it would have to suffice for now. He ran until he felt his mind slipping into the euphoric state where the machine of his body worked as efficiently as it could and his mind took a back seat to the pure physical sensations.\n\nA few minutes into this he felt it. Glass shards in his mind. The sensation was jarring and disorienting, causing his legs to lose their sync for just a second. It was enough. His left foot struck his right and his legs went out from under him. The deck couldn't compensate for this so when his body struck the fast moving surface he was flung outwards across the room to slide then tumble across the hard surface until he hit the doors head first and burst through them.\n\nHis discipline collar detected the unauthorized exit and proceeded to punish him.\n\nThankfully he was already out.\n\nOnce more Jack woke feeling blissfully soft fur against his cheek. The pleasant warm scent identified his pillow as Altarian. For just a second he let his mind believe he was back in his apartment on Altaria.\n\n\"Is he awake?\" Eve's voice.\n\nHe cracked his eyes open to see her concerned face.\n\n\"Hey beautiful...\" he murmured.\n\nA series of emotions flashed over Eve's face. Anger, relief, joy, anguish, fear and finally hope which was the most powerful of all.\n\n\"How long was I out?\" Jack asked, his voice cracking.\n\n\"A little over two hours.\" Stella informed him as he coughed.\n\nEve rushed away and hurried back with a water bottle. She held it to his lips and he took some long swallows. She pulled it back when he grunted he was finished.\n\nJack tried to get up but dull pain throbbed over his body.\n\n\"No, don't get up. You're pretty bruised. Nothing broken according to the medical scans,\" Eve said.\n\n\"What happened?\" Jack's last memories were a little jumbled and whatever pain killer they'd given him was making it difficult to think.\n\nKekk moved closer to hear the answer as well. \"It is good to see you survived. You were running so well then you were across the room smashing the doors down with your head.\"\n\n\"I landed on my head? That's a relief! I've been told male Altarians are exceptionally hard headed,\" Jack smiled.\n\nStella giggled and wrapped her arms around him to give him a gentle hug.\n\nEve moved a little closer and spoke quietly. \"First called for me when the medics took you to the infirmary. It wanted to know what happened. It thought maybe Kekk threw you across the room. I described what we saw and it called in the Allsa Komanae who'd been monitoring us. There were three and one was acting very strangely. It kept mumbling excitedly to itself. One of the others informed First that the mumbling one had linked itself to you while you were running. First screamed in anger at the odd one for the unauthorized link but it just ignored him. I- I don't think its mind was working anymore. It ran from the room making an odd sputtering noise and the other two chased after it. First sent me to the infirmary to bring you back when the medics were done.\"\n\nJack was trying to put his memories in order and struggled against the fog of the painkillers. He might have a memory of the broken glass sensation.\n\nKekk looked at Jack with interest. \"What experience did you share with it that could have unhinged its mind?\"\n\n\"I have no idea. I was just running. Running feels really good. I get in a zone of pure physical effort. How that would affect them this way is a complete mystery to me,\" Jack said shifting position on the bed. He groaned in pain. \"I think the pain killers are wearing off.\"\n\nKekk stood and moved away to get his evening rations.\n\n\"I will bring you your rations then you should rest. Just rest,\" she stressed as she looked at Stella who blinked her big eyes at Eve.\n\nAfter Eve left Jack looked up at Stella. \"She's right, I'm in no shape to properly show my full appreciation of your beauty and grace.\" She pouted and Jack smiled. \"Come down here.\"\n\nShe carefully slid herself out from under him and moved down the bed to bring her face next to his. Jack gently took her face between his hands and brought her soft lips to his for a tender kiss. Her long and flexible tongue made a surprise visit inside his mouth so he sucked on it.\n\n\"Mmmmm...\" she moaned and pressed her body against his. Sharp pains reminded Jack why this was a bad idea and he gently pushed her face back from his.\n\n\"Sorry, we'll have to try again when I've healed a little more,\" he moaned.\n\n\"What part of 'just rest' did you not understand?\" Eve growled as she stood next to the bed with an assortment of nutrient tubes clenched in her hands.\n\n\"Sorry.\" Jack sighed.\n\nStella slipped from the bed and moved to the next one over where she could keep an eye on him.\n\n\"Red,\" Eve said holding out the tube to Jack. He grimaced but ate the contents.\n\n\"Green.\" Jack ate that one too. It was awful as usual.\n\n\"White. This one is medicine. It reduces inflammation and bruising, promotes tissue regeneration, and it contains a strong pain killer and tranquilizer to help you sleep and heal,\" Eve said, holding out the last tube. Jack looked at it with suspicion but she was insistent. He squeezed the paste out and his eyes opened wide in surprise. It was delicious! Like... barbeque chicken!\n\n\"That was the best tasting thing I have eaten since I got here!\" he gushed. Then he felt pressure from his bladder. \"Uh... I have to use the washroom. To pee.\"\n\nStella was immediately on her feet and next to his bed.\n\n\"Not you! He needs to pee not get sexually excited.\" Eve growled and Stella pouted. Eve saw someone strong enough to do the task easily walking back from the ration dispensers. \"Kekk, could you assist Jack to the washroom and back?\"\n\nThe large being looked at Eve then gently lifted Jack from the bed much to Jack's embarrassment.\n\n\"I'm sure I can walk.\" Jack blustered but Kekk ignored him as Eve kept pace to the facilities.\n\nKekk put Jack on his feet by a trough he could pee in but Jack's legs wouldn't support him. He was beginning to feel woozy.\n\n\"Uh... my legs are too wobbly to work but I really have to go,\" he said clinging to Kekk's arms as the scaled being stood behind him holding him up against his chest.\n\nEve stepped up beside them, lifted Jack's tunic and held his cock, aiming it at the trough.\n\nThough her hand felt really good the pressure in his bladder was building so he released it and Eve made sure it hit the trough. The relief was intense and Jack just had time to wonder what the hell else had been in that white tube before he slipped into sleepy land.\n\nHours later Jack slowly began surfacing as the drugs left his system and sensation began returning to his body. He felt something soft pressed against his right side... and his left.\n\nSounds came next. Gentle breathing, blowing warm air across his chest from both sides. He opened his eyes and saw Stella tucked up against his right side and Eve up against his left. They both looked so peaceful and beautiful it brought a smile to his lips. His body began returning to him and he was please to feel the absence of the sore and stiff muscles. A dull ache had replaced the sharp pain he'd experienced before. Whatever was in that white tube was really fast acting! He wasn't sure if there was a price for that expediency.\n\nHe looked around the dim chamber and saw Kekk was sleeping on a workout bench far across the room. In the other direction he could see the human members of their group had hung blankets to act as curtains to give them privacy. And separate them from the beasts he supposed.\n\nLooking down he saw his tunic was partially pulled up and Stella's right hand was up under the hem. Sensation in his body hadn't reached there yet but he was pretty sure what her hand was holding. Eve's left hand was resting on his lower abdomen just above what he could now feel Stella's hand resting on. It began to wake now that he felt the soft pressure of the hand on it.\n\nJack tried to think of a way to extract himself from between the two females without waking them but he was well and truly trapped between their soft and sensual bodies. Damn! He shouldn't have thought of it like that. His cock surged to life and fingers gently closed around it.\n\n\"Mmmmm... so hard. So... big!\" Stella exclaimed as she woke with his growing cock in her hand.\n\nJack knew for a human he wasn't particularly large but on the Altarian scale he was. It was still flattering and he enjoyed her pleased surprise.\n\n\"Jack! Oh Jack, I need this!\" she whimpered softly.\n\nA second hand was touching him through his tunic and he looked at Eve. She looked conflicted and angry. She peered over Jack's chest at Stella and was about to bark something at her so Jack reached up behind her head and gripped her thicker fur there. She gasped as he brought her mouth over his and kissed her deeply. She struggled for just a moment then she was kissing him back. Her clever tongue wrapped around his and stroked it sensually. She was moaning as they kissed. Jack felt Stella climbing over his body and she suddenly rubbed her hot, wet opening along his shaft. She was ready and he was at maximum rigidity. She raised his cock up and lifted herself up to position the thick head against her tight pussy. She relaxed her muscles and the head forced its way inside.\n\nStella gasped and held still, trying to deal with the thick intruder she'd allowed inside. Her legs began to shake as it felt so good yet so frighteningly large. With the loss of muscle tone her legs buckled and gravity pulled her down, impaling her on his cock. Her mouth dropped open in a silent scream as she tried to adjust to his hot flesh so deep inside her and forcing her open so wide.\n\nEve needed Jack inside her. She wanted him so badly! She loved kissing more than almost anything else but it just lit the fire between her legs. She needed release!\n",
        "She pulled back from the kiss and looked down Jack's body to see Stella already riding him.\n\n\"Eve. Eve!\"\n\nShe looked back at Jack in desperation.\n\n\"Do you trust me?\"\n\nThe question threw her for a second. \"What? Yes!\"\n\n\"Swing your leg over my face.\" Jack said with a gentle smile. She blinked at him but her body was already following his instruction. She found herself staring down at his smiling eyes between her thighs.\n\nThen she was in utopia! He was kissing her there and it was wonderful! What he could do with his mouth took her breath away. Then she realized she'd forgotten to breathe. She gasped in a breath and it felt even better!\n\nJack stroked his tongue across her sensitive flesh and felt Eve jolt and tremble. He kissed and sucked and nibbled, feeling Eve love every second. He also began to drive his hips upwards against Stella and felt her clamp down on his cock. He slid his hand up inside Stella's tunic and took one of her upper nipples between his finger and thumb, gently squeezing and tugging on it.\n\nStella began to croon. Loudly.\n\nEve lifted herself off of Jack's mouth and turned to place her hand over Stella's mouth. Silence returned to the sleeping area except for the quite moans coming through Eve's fingers and the quiet wet slap of Jack's pelvis against Stella's.\n\nJack lifted Eve's leg back over his face and began again, this time with her facing Stella. Eve threw her head back with a gasp. Stella was watching the bliss on Eve's face and found it to be highly erotic.\n\nJack felt the glass shards bursting into his mind once more. He moaned into Eve's wetness and she jolted with the vibrations. He wasn't going to disappoint these two ladies just because of the creeps peeping in on his fun. He pushed the pain into the background and used it to sharpen his focus to double his efforts for Eve and Stella. He reached up under Eve's tunic to squeeze her modest tits and caress her nipples. He growled deep in his chest as he attacked her soft flesh with his tongue and the vibrations intensified her pleasure. She reached forward and grabbed Stella's topmost tits and squeezed them as Jack was doing to hers.\n\nStella felt her mind leaving her body. She was filled almost beyond endurance with Jack's hot cock and he was bouncing her roughly on his hips. Then Eve was playing with her tits. She leaned forward and kissed Eve, sliding her long tongue into her mouth and wrestling with the other female's equally flexible tongue.\n\nJack couldn't see what was happening from between Eve's thighs but he certainly felt both women suddenly bear down on him, their movements becoming urgent, signalling their imminent orgasms.\n\nJack moved his hands to Stella's hips and he roughly pulled her down against his body while he rapidly flicked his tongue against a ridge of stiff flesh near the top of Eve's opening. This was enough to push both women beyond their endurance. He was close behind.\n\nEve gushed her juices over Jack's face and he lapped them up as quickly as he could. This just pushed Eve's orgasm into overdrive and she pulled back from Stella's mouth to gasp in a shuddering breath.\n\nHer mouth free once more Stella's crooning began again as her pleasure spiked. She felt Jack filling her with his hot cum and her mind spun with her joy. Spent, her muscles lost the ability to hold her up and she leaned forward against Eve who leaned against her in return.\n\nJack's pleasure went on and on as Stella's tight channel rippled and massaged his cock, squeezing all of the cum from it as his mind threatened to white out from the intensity. He let the waves wash over him and he floated on the bliss.\n\n\"BE QUIET! I will listen no longer to the horrid noises of your lewd debauchery or the foul cries of the filthy beasts you fornicate with!\"\n\nEve leapt off the bed to escape the approaching man but Stella was still too overwhelmed by her release to see the danger. The angry male shoved Stella hard and she went over the opposite side of the bed to hit the floor beyond.\n\nJack's mind snapped out of his pleasure to see the man's angry sneer looking down at him as his fist rushed in to hit him. Jack instinctively tilted his head to protect his face and took the blow on his forehead instead of his cheek. It still hurt like hell but he heard the snap of bones in his assailant's hand.\n\nScreaming in pain the man reeled back. Jack opened his eyes and looked up just in time to hear a dull thump. The man dropped to the floor like a puppet with its strings cut.\n\n\"NO!\" Jack yelled and leapt from the bed to rush to the man's side but it was too late. His collar's explosives had been triggered and he was quite dead. It seemed impossible and it made no sense but he was gone. Jack didn't even know his name.\n\nKekk was immediately by their side. \"What happened?\"\n\n\"They killed him! He hit me and they triggered his collar!\" Jack said incredulously.\n\n\"NNNOOOO!!!!!!! DREW! DREWWW!!!\"\n\nJack saw the pregnant woman rush to the side of her husband. She pushed Jack away and dropped to her knees to scream and wail over her husband's lifeless body. Her cries took on a more painful tone as her water broke.\n\n\"She is leaking!\" Kekk yelled.\n\nJack looked around at Eve who was gently lifting Stella to her hooves. Stella was nursing her elbow tenderly. \"Eve! Call for the medics. She's having her baby!\"\n\nKekk looked at Jack in surprise. \"She is birthing a baby?\n\n\"No! I can't have the baby without Drew!\" the woman wailed.\n\n\"I don't think that decision is up to you any longer. Your baby is arriving now. What's your name?\" Jack asked.\n\nThe gasping woman looked at him in confusion.\n\n\"Your name.\" Jack pushed.\n\n\"Beth- AAAAAGGGHHH!\"\n\n\"OK Beth. Your body is going to try to push the little guy out and you're going to have to help-\"\n\n\"NNNAAAAGGHHHH!!!\" Beth screamed and Jack placed his hands over her abdomen to try to get a sense of the baby's orientation. He had no experience with this but it didn't feel right. He looked desperately for Eve who was running back from the front door where the comm panel was located.\n\n\"There was no response from the monitoring station!\" she called out. She knelt next to Jack. \"Have you birthed a child before Jack?\"\n\n\"No. I have some basic knowledge from a medic training course I took years ago. I- I think something is wrong,\" he said quietly into her ear and she pulled back to look at him in dread.\n\n\"Your hands are much smaller than mine. I need you to reach inside and confirm if the baby is head down. If you feel feet the baby will need to be turned. Head down and face up.\"\n\nEve stared at him with wide terrified eyes.\n\n\"You can do this-\"\n\n\"No! Don't let that beast touch me!\" Beth cried weakly.\n\nJack was worried about her flagging strength. \"Beth! Far better the compassionate touch of Eve than the cold mechanical touch of our captors! This is for your child!\" He had an idea. \"What names have you chosen?\"\n\nHe urged Eve to begin while he held Beth's eyes with his.\n\n\"M-Mary if it's a girl. Joseph... if a boy... rrrRRAAAUUUGGGHH!\" Beth's scream was pain and fear.\n\nEve hesitated but Jack took a grip on her arm and gently pushed her hand inside. He kept pushing until her eyes widened in shock. \"A foot! A tiny foot!\"\n\n\"The baby is breach. You need to turn it.\" He glanced at Beth's tired face. \"Quickly!\"\n\nEve pushed her hand further in and Jack saw Beth's abdomen distend as the baby slipped end to end. She pulled her hand from Beth and looked at it in surprise!\n\n\"Excellent work! Beth! You have to push with the next contraction! Push with all your might!\" Jack urged.\n\nBeth nodded. When it struck she pushed with every ounce of strength she had left.\n\n\"That's it Beth! I see the head! Keep pushing!\" Jack cheered as Eve helped guide the emerging baby out.\n\n\"One more push Beth! You can do it!\" Jack said.\n\nBeth looked into Jack's eyes and smiled tremulously. \"You- you are human.\"\n\nJack looked back in surprise and nodded.\n\n\"You'll take care of my baby... won't you?\"\n\n\"Beth, you'll take care of your baby. Come on, one more good push.\" Jack said nervously.\n\nEve looked up at him in panic. She had her hands down by the emerging baby and they had blood on them. A lot of blood.\n\n\"NNNNNGGGGHHHH!\" Beth groaned as she pushed. Eve pulled and the baby came free with a gush of blood.\n\n\"promise me...\"\n\nJack looked down at the woman in despair but nodded.\n\nShe closed her eyes with the smallest of smiles and slipped free of her captivity to join her husband.\n\nAs Jack watched Beth leave them a huge storm of rage built in his mind. He wanted the Allsa Komanae to die for this latest tragedy. All of them.\n\n\"Where the FUCK are they!\" Jack growled.\n\n\"The baby isn't breathing!\" Eve interrupted.\n\nJack gripped the baby by its feet and poked his pinky finger into his mouth to clear anything that might be there. Then he lifted the child upside down and swatted its small behind. It jolted and began to wail. He saw the shock and outrage on Eve's face so he gently handed the baby back to her. The sound of the baby's cries took Jack's mind to Altaria where his own child might be born without him to be there for it. His rage built again.\n\n\"Jack, is there a danger for them to still be attached?\" Kekk asked.\n\n\"What? Uh, I think so. We need to cut the umbilical cord and some string to tie it off!\" Jack said coming back to the moment. He pulled his tunic off and ripped the bottom hem off until he had a long piece of string. He looked around. \"Do we have anything sharp?\"\n\nKekk looked at the caps on Jack's horns then opened his mouth. Lots of sharp teeth in there. He closed his mouth and looked at Jack who nodded grimly and held up the link between the baby and its dead mother pinching the cord tight to seal it.\n\n\"Cut it here. That gives us enough to tie off.\"\n\nKekk leaned forward and with a quick snap of his jaws he bit through the cord. He immediately spat out the section in his mouth, his expression of disgust evident. \"Ugh! That is vile! I must rinse my mouth out!\" He quickly stood and rushed to the water dispenser.\n\nJack got Stella to tie the string around the cord fairly close to the baby while Eve held the calmed baby. He handed Stella the rest of his tunic to wrap the baby in.\n\nJack rested back on his hands and looked around. Two dead humans and one newborn baby. And the day had just begun. He looked at Eve who was staring at the baby in her arms like she'd just witnessed a miracle. Hell, she'd participated in the miracle!\n\nStella had tears in her eyes. When he raised an eyebrow at her she began to cry.\n\n\"I'm so sorry! This is all my fault! If I'd controlled myself this morning-\" she cried softly.\n\nJack's temper flared. \"What are you talking about? None of this is your fault. All of this is on our captors. Everything about this began with their kidnapping us. Confining us in this big open room with no privacy. That's on them! They didn't need to kill Drew! He wasn't a threat! They should have been here to save Beth!\" He looked at the sleeping baby boy in Eve's arms. \"It was pure luck that we were able to save Joseph!\"\n\n\"No, it was not luck. It was you. You knew what to do.\" Eve said quietly, holding his eyes with hers. He was surprised to see how much admiration was in them. He looked down and shook his head. He was coated in blood and Beth's water. And he was naked.\n\nHe looked towards the doors and still no one had come to help them. He sighed and stood up. He helped Stella to her hooves as she wiped the tears from her eyes. They both helped Eve up. Kekk returned to the group and looked at the two dead bodies.\n\n\"Let's get cleaned up. I have no idea what's happening in the monitoring station to keep them from responding but the day is beginning. We're going to get company sometime soon.\" Jack suggested.\n\nThey made their way to the bathing area and Eve asked how to bathe the baby.\n\n\"I- I think it's too soon to bathe him. The umbilical needs to dry up, fall off and that area needs to heal. I know he looks like a mess but I think he's safer that way. I'm more worried about feeding him. He should have been breast fed to get his mother's immunities.\" He stroked the baby's head gently. So fragile and helpless. He looked around at the group entrusted to protect the newborn.\n\nEve, a petite horned and fanged but gentle female of unknown species who lived her entire life as a slave. Stella, a lovely chocolate brown Altarian female, kidnapped and tortured but a survivor. Kekk, a powerful green scaled male of unknown species. Vowing vengeance against his captors.\n\nAnd himself. Oddest of the group. Half Human and half Altarian. The man Joseph's parents called the Goat Man.\n\nThe kid had too many challenges ahead of him. It was too hard to think about. Seeing Eve had the child in her care Jack turned and entered the showers.\n\nHe allowed himself to soak under the hot water then he scrubbed himself clean. He had a tender bruise on his forehead he had to be careful with. He dried off and brought a towel out to wrap Joseph in. He took back his tunic and carried it to the recycler. He shoved the torn garment into the chute and a moment later a replacement dropped into the dispenser. He pulled it on and sat on an exercise bench facing the doors. Stella walked over to him carrying Joseph in her arms. She handed the infant to him and moved to recycle her own tunic.\n\nKekk walked out to join Jack. He was already wearing a new garment. He looked at the small being in Jack's arms. \"Human young are so helpless. I don't understand how they survive long enough to protect themselves.\"\n\n\"Parents.\"\n\nKekk looked to the other end of the room where the bodies remained under the sheet he'd pulled over them. He nodded to Jack then moved to sit on another bench facing the door. Stella returned with a fresh tunic and sat next to Jack.\n\nThey must have sat there for close to forty minutes when the front doors opened and First came barging in with six security guards. The prisoners all stood.\n\n\"Where are the humans?\" First barked at them.\n\n\"Dead.\" Jack said.\n\n\"You killed them?\" it hissed.\n\n\"No. You did,\" Jack replied coldly.\n\n\"What? I did no such thing!\" First blurted angrily.\n\n\"We're under your authority for the Prime. Yes? Someone triggered Drew's collar. He punched me and someone under your command killed him for it. He just bruised me but he broke his hand doing it. He wasn't a threat or danger to anyone. He didn't deserve to die,\" Jack said, struggling to remain calm.\n\nSilence from First. \"Where is the female?\" Its voice was grating and lacked its normal smooth tone. Probably not a good sign but Jack was too angry to care.\n\n\"The shock of losing her husband so suddenly caused her to go into labor but there were... difficulties with the birth. We tried to call for help but the monitoring staff, the same ones who killed Drew, failed to respond and Beth bled to death after we managed to save their child.\n\nFirst turned to two of his security detail and sent them away at a run. It turned back to Jack. \"Is... is that the child?\" it said coldly.\n\n\"Yes.\"\n\n\"It needs to be taken to the Infirmary for a health check.\" First said.\n\n\"I assume the Prime wanted Drew, Beth and the child for her own purposes. The parents have been taken from her as well as their son. Do you know how to care for a human infant better than someone who was once a human child himself and had excellent human parents?\" Jack knew he was really pushing his luck with First but he owed it to Beth to make the attempt to protect Joseph.\n\nFirst was silent and Jack wished he could see the face inside that hood.\n\n\"Once the infant has been checked it will be returned to you. As you said, the Prime wants it.\" It pointed to Eve.\n\nJack handed Joseph to Eve who looked at him with big eyes. He smiled at her and she walked out the doors at a gesture from First who turned back to Jack.\n\n\"I will investigate the events and if I find anything to indicate you're guilt in the deaths of the Prime's humans you will wish you had joined them. This is for your insolence.\"\n\nJack felt a slow burning sensation begin like his limbs were being consumed by fire. It moved to his torso and slowly made its way to his head. He tried not to scream but the agony was unbearable. His eyes rolled back and he passed out. Kekk caught his falling body as Jack's mind retreated from the flames into the haven of oblivion.\n\nChapter 15\n\nFrom her hidden position in the alley across and down the street from their target Gee peeked around the corner at the brownstone apartment. They were on a tree lined street in New York City. The Tik had come through and made them a Gate which took them to Earth but they'd warned that it would be detected so they'd have to move fast. There were a lot of police in the huge city to respond to an illegal entry when it was detected. Once through the Tik moved to their extraction point with the coordinates of a safe place to hide. When they came running the exit had to be there.\n\nRay Sharif's parent's home was just down the street. The Major said the first data cache was in Ray's basement apartment in his parent's place. They'd emerged from the Gate four blocks from the neighborhood and hustled through the back alleys and quieter streets to get to this location. They couldn't wait much longer as the authorities would be zeroing in on them.\n\n\"They've got a team watching the house. Do you see the truck large enough to contain a squad of commandos?\" the Major said behind Gee.\n\n\"The Electrician's truck?\"\n\n\"Yes, that's the one.\"\n\n\"We just need to prevent them from exiting the vehicle, yes?\" Gee asked.\n\n\"Uh yes that would be lovely but how the hell are we going to do that?\" the Major growled.\n\n\"Leave that to Bal and I. How do we get inside the apartment?\" Gee asked.\n\n\"Ray's parents will let us in... I hope.\" She looked at Nann who nodded at her. Leo and Maxim indicated their readiness as well. \"When I make the call they will know we are here so we have to move quickly.\"\n\n\"Right. Wait for my signal to make the call.\" Gee said and flicked her fingers at Bal. They pulled up the integrated hoods of their gossamer gowns. With a glance at each other they pressed something on their belts. There was a click, a buzz and they were no longer there. Rather, there was a rippling as light bent around their shapes. The faint buzzing moved away. The Major peered around the corner and had difficulty seeing the two agents moving up the sunlight dappled sidewalk.\n\nThe blurs moved quickly up the opposite side of the street from the van. When they stopped moving they were directly across the street from the van but the Major could no longer see them.\n\nA taxi made its way up the street and passed the van. Once it was two car lengths past the blurs darted across the road to the van and disappeared once more.\n\nThe Major strained to see what was happening but their disguises made them almost invisible from this distance.\n\nThen she noticed the blurs moving in opposite directions, towards the front slowly and faster towards the back. Between them stuck to the side of the van was a gleaming metallic wide strip of tape.\n\nThey were taping the truck closed? What the hell?\n\nWhen the blurs moved out of sight she turned back to Nann to give her a worried look so she missed the bright flash of white light. Turning back she saw Gee and Bal running back to her position. The van had a scorch mark encircling it and the doors had been welded shut. The vehicle was rocking and there was a subdued sound of shouting but they were stuck.\n\nThe Major dialed the number she had queued on her comm. It answered on the first ring.\n\n\"Cha'Risa, it that you?\" asked a deep gravelly voice.\n\nHer throat seized up. It was Ray's dad. How was she supposed to answer for getting his boy killed?\n\n\"Are you here?\" he continued gruffly."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "nonhuman",
        "romance",
        "non-consentual",
        "oral",
        "threesome"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/jacks-wage-slavery-pt-02"
}