{
    "title": "Home Shopping Ch. 04",
    "pages": [
        "It had annoyed me from the day I started working at the station. No sound coming through the monitor backstage. I climbed up onto the bench and ignoring occupational health and safety, reached across to the edge of the screen and found a control panel. Success. Gayle's voice increasing in volume as I pushed the appropriate button. Finding a suitable medium, I leaned back to watch the screen itself, an encore of a recent Suck U Dry steam vacuum segment. It wasn't the vacuum that caught my attention. \n\nGayle's pants looked to be painted on. Flesh colored they clung to her like skin, her large ass looking naked as she pushed the vacuum across the intentionally littered floor. And then standing upright. Facing forward as the camera panned up the length of the vacuum and her legs in the one shot. Stopping as it reached the handle and respectively, her groin. The cameltoe must have been intentional. Her pants disappearing between her feminine folds to perfectly trace the outline of upper labia and clitoral hood. She was surely not wearing panties. \n\nMy cock twitching within my pants, I dropped back down as the woman herself entered the changing room and looked up at her own image. \"Ooh, I hate the sound of my own voice,\" she waved dismissively at the screen before looking back down at me, her eyes dropping further as she noticed the increasing bulge in my pants. \"Oh goodness Corey,\" she smiled. \"Someone's looking forward to the next hour!\" \n\nI felt myself blush and a little self-conscious, I was relieved when she turned her attention to the hosiery. \n\n\"So, which should I wear?\" She cast her eyes over the arrangement upon the bench. \n\n\"You? Aren't you hosting?\" \n\n\"Oh, I'll always wear a pair under my dress while presenting. A quick lift for the audience,\" she added, taking the front of her skirt and pulling it up her leg as a demonstration. She stopped just shy of her groin, her thick thigh and pale skin, smooth and longing to be kissed. My cock strained against my fly and I ached to know what underwear she wore? \n\nThe screech of the radio in my ear cut short our conversation as I indicated to Gayle, Delores was on line. \n\n\"Say again,\" I asked. \n\n\"Theresa and your mother are on their way,\" she informed me. \"Has Gayle arrived? We've got twenty minutes 'til air. I want this to be one of our best, so Corey... do your thing. Management is watching!\" She ended on an ominous note and I immediately turned my attention back to Gayle. \n\n\"Are you wearing panties?\" I shamelessly asked the sixty-plus year old woman and despite her demonstrated casual attitude to nudity and sex I'd witnessed over the last two weeks, she blushed. \n\n\"Of course I am Honey,\" I noticed her nipples harden in her tightly wound satin wrap dress. \"Why?\" \n\nI walked across to the box of excess stock and removed a pair of flesh colored pantyhose and turned back towards her. \n\n\"Well take them off!\" \n\n* \n\nGayle didn't need convincing. As if it was a regular day to day routine, she casually tucked her hands under her dress and sought out her underwear, her eyes on me as she lowered the orange satin and lace panties down her legs. Off over her heeled feet, she stood back to attention and held them out. \n\n\"I trust you can hold onto these for me?\" She smiled; her coyness long gone. \n\nMy dick now begging to be released from my fly, I took Gayle's panties and feeling their warmth, tucked them beside my hardness in my front pocket for later perusal, handing her the hose in return. \n\n\"Oh, you might have to help me Sweetie,\" she held up her nails. \"Just had them done. Don't want to cause a run.\" \n\nHer smile gave away the fact she was perfectly capable of putting them on herself without incident, but ever the gentleman, I took back the packet. \n\nGayle took it upon herself to raise her dress in preparation, lifting the skirt well above her groin before backing onto a director's chair and resting her ass. She made sure my gaze was on her as she raised her leg, crossing it over the other as a man would sit as she undid the sling of her heels. Fumbling with the plastic packet, my eyes zeroed in on her slit. The shaving job I'd done two days earlier holding up, her pubic mound perfectly smooth. \n\n\"Fuck you're hot!\" I hastened to compliment the mature woman before me as the packet ripped open and I dropped to help remove her second shoe. \n\n\"And you're quite the gentleman,\" Gayle praised me, taking her now bare foot and placing it upon my shoulder. I cocked my neck to brush my cheek against her, my eyes struggling to rise from between her legs as I kissed her ankle. It seemed to delight her and her now bare other foot left my hand and planted square upon my bulging fly. \"Why don't you get that out and I'll show you what a lady does for a gentleman?\" \n\nThe pantyhose in my hand, I wasted no time in unzipping my fly and unleashing my erection, standing proud as Gayle ran her toes up my length. \n\n\"Oh, for goodness' sake Gayle,\" my mother's voice entered the fray and we looked as one as Mom and Theresa entered backstage hand in hand. \"We can't leave you alone for a minute.\" \n\n\"What?\" Gayle once more acted coy. \"He was helping me put on my pantyhose!\" \n\n\"Is that what we're calling it now?\" Mom laughed. \"You can put on your own pantyhose woman,\" she grinned and I rose blushing, my cock still protruding from my pants. Theresa was sharing the mirth, a smile on her face as her eyes locked onto my cock. \n\n\"Yes Gayle,\" Theresa stuck her tongue firmly in her cheek. \"Not very professional.\" \n\nIndignant, Gayle took the pantyhose from my grasp and rolled them in preparation. \n\n\"Well, I'm going to be out front for the next hour,\" she defended herself. \"It's alright for you two,\" she looked down at my cock. \"You'll have access to it for most of the show.\" \n\nFeeling suddenly self-conscious, I made to put my dick back in my pants only for Mom to stop me. \n\n\"Oh, Corey wait,\" she hummed. \"I think you can leave that out.\" \n\nI didn't need to be told twice. \n\n\"Ten minutes Corey,\" Delores spoke in my ear and it caused me to jump, reacting immediately to her reminder. \n\n\"Got it,\" I answered and with all eyes in the room still focused on my incredibly erect penis, clicked my fingers to get their combined attention. \"Okay. Ten minutes 'til we're on. Mom, Theresa. Get undressed.\" \n\nThe power of the comment had me ridiculously getting harder and the desire to touch it was almost overwhelming, resisting as I made toward the bench-top and the organized Skin-Tightz range. Having studied the rundown forensically, I lifted two pair of the black opaque pantyhose and turned back to the room. Gayle with her tan pantyhose around her knees, Mom already down to bra and panties and my sister bottomless, in the act of removing her shirt. \n\n\"So usually you wear a tank top, right?\" I asked Mom, nodding her agreement, her nipples clearly visible through her black mesh bra. \"Not today. Go with the bra.\" \n\nI handed her a pair of pantyhose just as Gayle finished pulling hers up. The ungraceful last movement as she pulled them high on her waist, her pussy smushed against the nylon and gusset. \n\n\"And Gayle,\" the woman crept her eyes up from my cock. \"That thing you showed me before, where you flash a bit of leg,\" I reminded her. \"Don't be afraid to go a little higher.\" \n\nA wicked smile came to her lips. \"Oh, you naughty boy. Can we get away with that?\" \n\n\"You don't remember what you were wearing the other day?\" I reminded her of the swimsuits and she winked her acceptance. \n\nTheresa, like Mom, was down to her bra and panties and was thankfully wearing black, Mom handing her the opaques to put on. \n\n\"Five minutes Corey,\" Delores radioed in. \"Why isn't Gayle on set?\" \n\nI turned back to her and took her arms in hand, her dress silky to the touch. \"Okay, you're on. And that other thing you do,\" I began and she frowned. \"Where you feel up the models,\" I elaborated and she smiled knowingly. \"Do more of it!\" \n\n\"Get Gayle out there,\" Delores once more yelled in my ear and I turned the host in the direction of the set. \n\n\"Good luck,\" I patted her on the ass and she giggled like a schoolgirl before pausing and turning back. \n\n\"At least let me have something before I go,\" she asked and without warning, reached down to grasp my dick. I looked on as she tightly stroked up my length, drawing out a large dribble of clear pre-cum and scooping it onto her thumb. As Mom, Theresa and I watched, she grinned as she raised her hand to her face and ran the moisture across her already painted lips, an added gloss for the awaiting camera as she once more turned tail for the studio. \n\n\"Okay, Delores,\" I reported back. \"Gayle's on set.\" \n\nTurning back to my family, I found Mom and Theresa pretty much ready to go, in the final act of putting on the matching black heels. With Mom in a thong, the black opaques hid everything, but Theresa's full panties, though black as well, left a panty-line. \n\n\"Get the girls ready,\" Delores called and I decided the panty-line would have to stand, its presence irrelevant in the next change anyway. Side by side they stood for me awaiting my approval and I took a moment to be grateful for the position I was in. \n\n\"So, how do we look?\" Mom smiled and placed her hand in Theresa's as they'd first appeared. \n\nWhat could I say? Matching apparel. Their hair up showing their necks. The resemblance between mother and daughter now striking to me, their beauty and the love I had for them was overpowering in the moment and it almost brought a tear to my eye. \n\n\"You look beautiful,\" I shrugged and it drew sympathetic sighs from my women, kisses to my cheek. \n\nGayle was announcing the Skin-Tightz hour on the monitor and Delores once more reminded me of the time. \"Okay, you've got to go,\" I composed myself and turned them toward the set entrance, watching their asses as they walked away. \n\nDelores entered as they exited, Mom shaking her head and breathing \"unbelievable,\" as they went their separate ways. \n\n\"What!?\" Delores grinned as she passed by the women before her eyes clearly searched the room for me or more pointedly, what was poking out of my pants. \"Just thought I'd keep you company out here,\" she smiled, making straight for my erection. \"I see the show's already started without me.\" \n\nWith a good ten minutes until the next scheduled change, I slunk back onto a director's chair as Delores moved in beside, our eyes up on the monitor as her hand wrapped around my cock. \n\n\"I love going with the bras instead of tank tops,\" Delores praised, her hand working slowly up and down my shaft. \"It's more natural.\" \n\nOn set, Mom and Theresa entered and Gayle once again introduced Theresa to the audience as our newest model, the words making me wonder what Sasha would be thinking, being replaced by an amateur? The camera zoomed in on my sister's face. Not a model. The 'girl next door,' and in my mind and eye, one of the two most beautiful women on Earth. No prizes for guessing the other as Mom, parading the catwalk, was captured by the camera operator. \n\nI was wrong. The lights of the studio could make out her thong under the opaque tights, and as she turned, there was the string diving between her luscious cheeks. \n\n\"What do you think about the visible panties?\" I looked up at Delores momentarily then back at the screen, not wanting to miss a second. \n\n\"Hmm,\" Delores pondered as the camera scanned back toward Gayle and Theresa, the older woman in the act of tucking her hand into the waist of my sister's pantyhose to demonstrate the opacity or lack thereof of the high-waisted tights. \"I don't mind it actually. Leaves something to the imagination.\" \n\nJust as she said it, Gayle demonstrated the effect on herself, taking my suggestion to the extreme. \n\n\"...though that certainly doesn't!\" Delores gasped as Gayle lifted her dress. Showing the tan pantyhose on her hip at first, she turned with the skirt still raised and presented her crotch to the audience. The camera zoomed in on the sight, the gusset protecting a little of her modesty, but the top of her slit clearly visible behind the thin nylon. \"Oh my God!\" Delores sighed, expressing her shock though her hand began moving quicker up and down on my shaft. \n\n\"It was my idea,\" I was quick to defend Gayle to any possible backlash from exposing her pussy on live television. \n\n\"She's not wearing any... where are her panties!?\" Delores' eyes locked on the screen and hand rapidly moving on my cock. Pre-cum was lubricating the underside of my dick and I reached into my pocket beside to retrieve said item. \n\n\"Here!\" I proudly presented Gayle's orange underwear and Delores' eyes slowly tailed down from the screen. \n\n\"Well let's put them to use, shall we?\" Delores plotted, taking them from my hand and wrapping them around my cock to use as stimulus. The silky nature of the undergarment, along with the very thought of what was happening had me edging, more so when Gayle began talking about Theresa's ass. \n\n\"...and let's not forget about the tush ladies,\" Gayle said, turning Theresa around to present her rear to the camera. \"The Skin-Tightz lift and shape the booty... not that Theresa here needs help, do you Sweetie?\" She remarked, her hand caressing Theresa's cheeks, constantly moving sensually over my sister's ass, even between her thighs. \"And another thing,\" Gayle continued, her fingers clearly pressing, almost cupping Theresa's asshole. \"...the moisture wicking gusset. Now we all get a little wet now and then don't we girls?\" \n\n\"Jesus Christ!\" Delores exclaimed. \n\n\"Yeah, that might be me as well,\" I admitted. \"I may've told her to go a little further with feeling up the models. The gusset thing was all her though,\" I quickly added. \n\n\"Delores, are you on line?\" The voice of Vivienne the receptionist came over the radio and caused Delores to stop jerking me off. In time too. I actually didn't want to cum so soon and it was getting to the point of no return. \n\n\"Yes,\" Delores answered. \n\n\"Ah, we've got multiple complaints and I've got management on hold for you,\" her voice was suitably anxious and my heart began rapidly beating. \n\nWhat had we done? \n\n* \n\nI'd just tucked my cock back into my pants and secreted Gayle's panties back in my pocket when Theresa came striding backstage. \n\n\"Did you see me out there Corey?\" She beamed. \"How did I look?\" When she saw the look on my own face, her demeanor changed dramatically. \"What's wrong?\" \n\n\"I think we've gone too far?\" I grimaced and explained further when I saw her look of confusion. \"Gayle had her hand around your asshole!\" I exclaimed. \"And I don't think the bare pussy was a good idea.\" \n\n\"What? Why? It just seemed so natural out there at the time. I thought management wanted us to be sexier.\" \n\n\"Well, yeah they did but they're talking to Delores right now. And there've been complaints.\" \n\n\"What?\" Theresa seemed incredulous. \"Who'd complain? I watched the encore screening of that Wet Waves show the other day. We haven't done much worse.\" \n\nShe was right. Were they real complaints or just prudes looking to be offended? Maybe head office wanted to compliment us!? My train of thought was derailed anyway as Theresa made to remove her pantyhose. \n\n\"So, what am I wearing next?\" \n\nI tried to focus, concentrating on the rest of the show as opposed to outside influence, hurrying to the bench to get Theresa's next outfit. It was then Delores came back into the room. \n\n\"Oh, you put it away!?\" Her eyes were firmly planted upon my groin and I was amazed she was still thinking of sex in the circumstances. \n\n\"What? Forget about that; what happened?\" \n\n\"Hm?\" Her eyes strayed onto Theresa down to her panties and bra and only lazily drifted back to me. \"Oh, management? Yeah. They love it,\" she waved a hand dismissively. \n\n\"And the complaints?\" I asked. \n\n\"Oh, don't worry about them. We get complaints during scented candles. What's next?\" She looked at the array of hosiery before me and relieved, I turned back to the two women, holding stockings. \n\n* \n\n\"You can't wear those panties,\" Delores observed when Theresa had donned the thigh-high stay-ups. Tan in color with lace hem, they clashed with her black underwear and I was quick to agree. \n\n\"Which is where this comes in,\" I held up the tiny modesty thong, its sandy color matching the stockings. \n\nAs she'd done in Delores' office a day before, Theresa had no problem removing her panties, sliding them down her legs and once again passing them to our boss. Her lush thatch of pubic hair drawing our eyes, I could sense the cogs turning in Delores' head and attempted to allay her doubts before they were voiced. \n\n\"The thong'll cover it!\" I assuredly stated as I handed my sister the minuscule g-string, my own doubts rising as she stepped into the item. \"Okay, maybe not!\" I relented as Theresa pulled it up tight on her mound. \n\nThough manicured into a perfect triangle, Theresa's pubic hair still showed above the hem of the thong, an unmissable fringe of dark locks. \n\n\"Fix it,\" Delores demanded of me. \"She can't go out there like that!\" \n\nImmediately I dropped to my knees and slipping my fingers into the string sides of my sister's panty, pulled it up higher on her pussy. A familiar conundrum appearing. The front managed to obscure her pubes, but it caused the gusset to slide between her labia, creating a whole new set of problems. \n\nTheresa managed to find it amusing, laughing at the situation and possibly the feeling of the string obviously pressing her clit. Pubic hair and labia bulging around the cotton, it was clear she couldn't go on tv like this. \n\n\"You know what you have to do,\" Delores stated, absently caressing Theresa's black panties as she watched on intently. \"It's just like Gayle all over again. There's time.\" \n\nI looked up at my sister and then back down at her crotch, pulling the thong back down to its initial position. I knew I had to do it. Shave her as I'd done Gayle. But it felt so wrong. I'd loved every second of burying my face in her crotch the night before. Kissing her mound and feeling the tickle of pubes; breathing in their perfume. I couldn't do it! \n\n\"I can't!\" I stood and looked at Delores. \n\n\"What!?\" She seemed shocked. \n\n\"Look at this,\" I exclaimed as I reached out and pulled my sister's thong down mid-thigh. \"It's beautiful.\" I ran my fingers down through her pubic hair, the strands between my digits like a comb. \"It'd be a crime to remove it.\" \n\nDelores moved in and placed a hand upon mine and I allowed her access, her fingers replacing my own and massaging Theresa's pubes. It seemed to do the trick and I sidled in beside Theresa, her hand dropping to my fly and unzipping. As Delores slid her fingers lower, cupping my sister's pussy, my cock was drawn from its housing and Theresa began to jerk my length. \n\n\"It is natural, I suppose,\" Delores whispered as she clearly began fingering Theresa, the muscles in her arm tensing as she worked. I reached around and grabbed Delores' ass, caressing her buttock as I drew her in ever closer. \n\nPressing up against Theresa, her chest met my sister's and Theresa exhaled loudly at the connection. It was then I deftly undid her bra. \n\nThe straps of Theresa's bra fell from her shoulders and Delores noticed, moving her chest back slightly to allow the bra to fall away altogether, Theresa's upturned breasts and erect nipples once more pressing into Delores' awaiting bust. I could smell my sister's pussy below and with one hand kneading Delores' ass through her dress, I dropped the other to do the same on Theresa. Two asses in hand. I slid a finger between Theresa's cheeks and found her asshole, wet from her spreading lubricant. Further and my fingers met Delores' and we tangled in my sister's pubes and dripping labia. \n\nWith their face's inches apart, it was Theresa who leaned in to close the distance, her lips meeting Delores' and greeted with the older woman's tongue. Another hand joined Theresa's around my cock and the two women worked perfectly together, sharing my length as they squeezed and tugged. I wanted in on the kiss but a voice from over my shoulder alerted me of the time, Gayle foreshadowing the change of hosiery. \"...so, I'll let you go and get changed Angie darling and I'll run through the sizing and availability ladies...\" ",
        "I looked at the monitor just in time to see Mom leave the set, back at my sister and Delores locked in the most intimate of kisses and then Mom enter the backstage area behind them, reluctantly drawing my cock away from the combined grasp to get back to work. \n\n\"Oh, don't let me stop you,\" Mom laughed as Delores and Theresa as well paused their lovemaking, their saliva slickened lips parting and heads turning toward my mother. \n\n\"Ah, Angela,\" Delores drew her hand from Theresa's pussy. \"We were just discussing the next segment.\" \n\nI made my way to the bench and found Mom's stockings, matching thigh-highs as Theresa's yet in black, heading right back to my sister. \n\n\"What do you think Mom?\" I once more dropped to pull up Theresa's thong, snugly sitting it over her now sopping pubic hair. \"Can we get away with this?\" \n\nDelores moved back to allow us all a good look at my sister, her lubricant causing the lower half of her thong to darken. \n\n\"The wet panties or the pubic hair?\" Mom asked before waving a hand in dismissal. \"Let's just go with it,\" she giggled before commenting on Theresa's lack of bra, now fallen to the floor. \"Are we going topless too?\" \n\nIt was a joke. We all knew it, and as Gayle began to run through the forthcoming hosiery lines on the monitor, Mom began hurriedly removing her pantyhose and Theresa made for the tan tank top to match her thong. It was then I thought about it. \n\n\"Wait a second,\" I stated to the room as Mom took the stay-ups from my hand. \"What are we selling here?\" \n\n\"Hosiery,\" Delores immediately replied. \n\n\"Exactly. Not some other brand's bras,\" I looked at Mom. \"Or some unflattering tank top,\" I caused Theresa to pause. I walked behind Mom and unclasped her bra, goosebumps rising on her skin as I delicately removed it from her body. \"Let's go topless!\" \n\n\"Impossible!\" Delores declared. \n\n\"Honey we can't. Not in this time slot,\" Mom added. \n\n\"Not in any time slot,\" Delores seemed adamantly opposed. \n\n\"Wait, hear me out,\" I argued. \"I don't mean have the boobs out. Covered!\" I lifted up Mom's hands to press to her breasts and immediately saw Delores soften. \n\n\"It could work,\" she brightened, looking to Theresa who in turn lifted her hands in demonstration, her breasts bulging around her pressed palms. \"It's risqu\u00e9 though.\" \n\n\"No more than Gayle flashing her snatch on TV just ten minutes ago!\" I countered. As if on cue, Gayle announced the thigh-highs and it was now or never. \n\n\"Okay, do it,\" Delores bit her bottom lip as Mom and Theresa made for the exit. \n\n* \n\nDelores' hand still holding my sister's panties, reached out to mine as we looked up at the monitor. On screen, Mom entered first and the camera operator was clearly taken off guard, the shot of my mother topless, blurry as he hurriedly zoomed in on her appearance. If Gayle was taken aback, it wasn't evident as she professionally called the play. \n\n\"...and here we have Angela again and might I say looking gorgeous in the coal-black thigh highs.\" \n\nMom, smiling, walked the length of the catwalk toward the camera, the one arm and adjoined hand obscuring her nipples, the rest of her boobs heaving around the limb. She turned and presented her bare bottom. The black thong disappearing between her cheeks and the camera sure to zoom in on two of her best features in the act of filming the stockings. \n\nTheresa entered and walked smiling and clearly slightly embarrassed towards Mom, both hands used to cup her large boobs and the camera forgot all about the stockings, framing my sister's torso in the shot from her pubic hair bursting over the hem of her thong to her breasts bouncing as she walked. \n\nMy hand left Delores' and made its way back onto her ass, instantly setting the woman into action. \"I need to be fucked Corey,\" she desperately sighed, moving in front of me and bending forward over the back of the director's chair. Her ass presented to me; I wasted no time in lifting her dress up over her hips to reveal her black lace panties. These I ripped down her thighs, leaving them rolled at her knees as I dropped to my own. With eyes looking up over her exposed ass to the television, I spread her cheeks and dove in face first. \n\nIf she was surprised at where my tongue entered, much like Gayle's reaction to the models topless, she didn't show it as I slid myself inside her asshole. Poking herself out for me, her sphincter welcomed my penetration as I stabbed at her most intimate of crevices like a madman, all the while dining on my mother and sister's near nudity. \n\n\"Oh, fucking yes, eat my ass you dirty fuck,\" Delores showed a whole new side to her personality as I grabbed my cock and beat myself below, even more turned on by her filthy tongue. Rising I lifted my t-shirt and ripped it from my body before undoing my pants. Delores, sensing my undressing undid the front of her dress and had her boobs out, my hands quick to find them as I pressed into her body. \n\nClothes and my radio scattered on the floor; my dick entered her effortlessly. With tits in hand, I used them as leverage as I pulled myself into her body, my cock fully inserted and pelvic bone pressed hard up against her buttocks. \"Fucking, fuck me,\" Delores demanded and a good employee, I did as told. Slamming into her we watched the screen as Gayle dropped to her haunches, her knees parting to allow the camera a peek up her skirt as she ran her hands up and down Mom's inner calf and thigh. She moved to Theresa as I held Delores' hips, my groin slapping her ass as I drilled her pussy. \n\nThe smell of sex filled the room as Gayle once more had Theresa bending forward. For what reason, I had no idea. But the effect was ridiculously hot as the camera zoomed in to film the lace tops of the stockings on her upper thighs. Above and the darker skin around my sister's asshole was visible behind the string of the thong and the very sight had me on the brink of cumming. Onscreen Theresa straightened and turned, the camera remaining focused squarely on the triangle of her thong, the dampness seeming to have spread and the tuft of pubic hair peeking over the rim even more pronounced. This was no Home Shopping network. We were a sex channel. Undeniable. It was then, amid her panting and begging me not to stop, that Delores began to cum. \n\nHer vagina squeezed my cock, her body shuddering below me and stifled breaths leaving her lungs. So tight she hugged me it was all I could do to keep fucking, the increased lube flowing from her the saving grace, allowing movement and lessening the friction. \"Jesus Christ,\" Delores puffed as she straightened and turned her head to me. \"Kiss me.\" \n\nManaging to find her mouth I immediately thought of her kissing Theresa, possibly my sister's saliva I tasted as our tongues entwined. That and the sight of her walking the catwalk once again had me about to cum and I pulled out, apologizing when I saw Delores' expression. \n\n\"No need Corey,\" she smiled. \"Your mother would kill me anyway. She said she wants it today!\" \n\nNaked, I reached down and pulled Delores' panties back up her legs and she allowed her dress to fall back down her body. \n\n\"Don't worry about that,\" Delores remarked when she saw me make to retrieve my clothes. \"You're just fine the way you are.\" \n\nFull of testosterone; an erection composed of solid granite and a mind totally focused on sex, I agreed it only natural I remain naked and as Delores, satisfied, departed with a kiss to her office, I set about preparing the next change. \n\nWhom should wear what? Two bodystockings lay before me. White and black. Completely sheer; pasties for their nipples lay beside the lingerie but since Mom's had been visible the entire show through her bra and not the slightest mention had been made, I pushed them aside. Theresa had to wear the white I decided. More virginal and just the thought of her bush having nowhere to hide behind the tiny white modesty thong, it was a no-brainer. But then another thought invaded my brain. Just as with the bras. We weren't advertising thongs. My cock swelled at the very idea. Could we do it? \n\nNot concentrating on what was happening on the monitor, the sudden sound of voices behind me had me startled and I turned to see all three of the onscreen talent. With Gayle between my mom and sister, they had arms locked and could have been casually walking along a street. If not for the lack of clothing. With all eyes on my nudity and Gayle's in particular aimed square at my cock, it was she that spoke first. \"You see, I miss everything being out there!\" \n\n\"Who IS out there!?\" I fired back, confused at her appearance. \n\n\"Oh, they're just running the promo,\" Mom answered, first to break and approach, her hand reaching out for my cock. Still slick with Delores' juices and pre-cum flowing from my eye, Mom gently stroked her hand up and down my length before lifting it to her mouth and tasting. \"Let me guess, Delores? You'd better not have...\" \n\n\"I haven't,\" I admitted I was yet to cum and she smiled. \n\n\"Gayle,\" Mom signaled out to the older woman. \"Maybe you'd like to keep Corey hard while we change?\" \n\nMy sister already sliding her modesty thong down her legs and revealing that heavenly bush, and Mom about to do same, I needed nothing to 'keep me hard,' but Gayle hungrily aiming toward me, I was willing to take one for the team. \n\nAn experienced mouth, Gayle wrapped her lips around my cock and lavished me with affection as I watched Theresa remove her stay-ups. Completely naked, she joined me in admiring our mother as she too rose from a chair and it was then I fathomed we were all three of us naked at once. The first time in our lives for certain. Surely not the last. \n\n\"So, who's wearing which?\" Mom looked at the remaining hosiery, the differing bodystockings. \n\n\"Yeah,\" I managed to voice as Gayle deep-throated herself on my dick, gagging and retching from my length in a flood of saliva, all eyes upon her. \n\n\"Sorry,\" she looked around self-consciously, collecting the drool in her hand and slathering it back onto my cock. \"Got a little carried away.\" \n\n\"So, yeah I was saying,\" I continued as Mom lifted the white thong from the bench. \"You're already in black so I thought Theresa should go with the white.\" \n\n\"Theresa in the showstopper,\" Gayle broke into the conversation, her hand still jerking my lubricated length. \"I love it.\" \n\nMom immediately passed the thong to Theresa but I was quick to remonstrate. \n\n\"Ah actually,\" I remarked as their hands made contact via panty and heads turned in my direction. \"Why don't we go without?\" \n\n\"What?\" Mom questioned. \n\n\"Are you serious?\" Theresa doubted. \n\n\"I love it,\" Gayle repeated, rubbing my cock against her slick chin and cheeks. \n\n\"Well, it's just like the bras,\" I defended. \"Were not selling panties; it's the bodystocking everyone's looking at.\" \n\nWith mischievous eyes, Mom smiled cheekily. \"Have you run this by Delores?\" \n\n\"Ah, no. But I'm sure she'd agree,\" I stood by my suggestion. \n\n\"Promo's ending, where's Gayle?\" Delores voice managed to rise from the radio upon the floor and it was then I could've sought her approval, deciding against. \n\n\"Let's just do it!\" Gayle reluctantly rose form her knees with my help and eventually took a hand from my cock. \"What's the worst that can happen? We get taken off air? The station'll probably be closed in a month anyway.\" \n\nIt was the first time I'd heard anyone acknowledge the rumors and it made me doubly sure we were doing the right thing. As Gayle checked her face in the mirror, I walked toward Mom and my sister and reached out for the thong. \n\n\"We can do this,\" I confidently stated and took possession of the g-string. \n\n* \n\nI couldn't help myself. Theresa modeling the crotchless bodystocking for me, nipples hard, her dark bush perfectly framed by the surrounding transparent nylon, I moved in and embraced her. My cock slid between her accepting thighs, easing along her lubricated labia as she in turn wrapped her arms around me. With cheeks touching, we looked at the monitor as Gayle introduced our mother onto the set. \n\n\"...and here we go ladies... oh Angela you look divine,\" Gayle laid eyes upon her for the first time along with the audience. No modesty thong to obscure her bare sex. No pasties to conceal her aroused nipples through the see-through black nylon. The one-time local newsreader my friends and I had grown up watching on television was now essentially naked before the viewing public. She paraded the length of the catwalk as the camera devoured her appearance, a pan up her body from heels to smiling face and kudos to the operator for delaying on her bald snatch and poking nipples. \n\n\"She looks amazing,\" Theresa whispered and turned her eyes back to mine, her pelvis slowly grinding upon my erection, using my cock as a balance beam. \n\n\"You look amazing,\" I admitted and our mouths met. \n\n\"...and as you can see you can wear it without panties,\" Gayle spoke through the monitor and my closed eyes opened to peek at the screen to see Gayle place her hand between Mom's legs. Live to air, Gayle cupped Mom's pussy, a casual movement as she clearly fingered her colleague. I thrust my groin into Theresa, fucking her thighs as the lube from her pussy coated my length. \n\nI could hear the phone lines ringing from reception, a constant chorus of what? Disapproval? Controversy creates conversation. Was any press, even negative, better than none? Mom turned onscreen and presented her ass, the cheeks half covered by the stocking, Gayle quick to place a hand upon her, tracing the line of the nylon, caressing Mom's buttocks. Theresa was watching the screen with me. Our tongues licking the others, her pussy now rapidly sliding the rigid pole between her thighs. \n\n\"Touch my ass,\" she demanded between kisses and ever so quickly I complied, my hand sliding down her back to squeeze a buttock before slipping my middle finger between her cheeks. \"Poke it,\" she strangely breathed as I found her asshole. The tip of my finger inside her tightest of holes; my sister came on me. \n\nHer mouth encircled mine as she gasped her pleasure. She pulled her body against me. A leg raised, she seemed to desire to mount me and amenable, I cupped her ass with my other hand and lifted her into my arms. My cock slid inside her body effortlessly and with legs wrapped around me, I felt her pussy quiver its orgasm around my erection. \n\n\"...and it comes in two colors girls,\" Gayle's voice filtered into our lovemaking and Theresa lazily opened her eyes to me. \n\n\"I'm on,\" she acknowledged, although she could've been referring to my cock inside her. \"I have to go, don't I?\" She reluctantly unwrapped her legs from my hips as I nodded and I allowed her body to slip from mine, my cock last to relinquish the hold. \n\n\"Do we have the lovely Theresa ready to go?\" Gayle questioned as Mom did one final walk of the stage. \n\nMy dick had never looked bigger. Maybe it was the light glistening off the saliva and pussy juice lubed length but as it popped from Theresa's hirsute pussy, I felt my hardness alone could've supported her weight if she chose to stay. \n\nOnscreen, Theresa entered. Mother and daughter exchanged the most intimate of handovers, no casual kiss upon cheeks, a sensual kiss. A, without doubt incestuous meeting of lips and tongue before going their separate ways. I looked to the entrance of backstage and she appeared. My mother. My goddess. Her face was bright. Cheeks flushed that weren't apparent on the television, color to her neck. \n\n\"How's it going?\" She asked as her hands held out to greet me. \"Any complaints?\" \n\n\"Not from me,\" I joked as I took her in my arms. The phone lines were still ringing constantly and the fact Delores had been silent for the last ten minutes was either a very good sign or the opposite. \n\n\"Then fuck me,\" Mom insisted as my wet cock met her belly. \"It's been too long Baby,\" her mouth met mine and tongue forced between my lips. \"Momma needs her boy's cock!\" \n\nThe camera was focused squarely on Theresa's hairy snatch as I lifted Mom back onto the bench-top. Her legs parted to allow me into her and as nature intended, I was back inside my mother. Deep I delved. My pubic bone meeting hers. So perfect was her grip around me; so long I'd waited to be back within her, my orgasm was unstoppable. Her laughter was surprising, without malice and completely beautiful. \n\n\"I can feel it,\" she giggled as I came inside her, no ridicule at my premature ejaculation. Was it though? For near an hour, I'd been hard. My dick had been inside four different women in some form. Brought two to orgasm. I was amazed I'd lasted this long. \n\n\"I'm sorry,\" I gasped as I felt my cock pulsing inside her, an immeasurable amount of cum gifted within. \n\n\"Don't be Baby,\" she cupped my face in her hands, bringing me closer to her as she squeezed her pelvic floor around me, milking my cock. \"Just don't get soft.\" \n\nIt was the simplest of orders and the easiest with which to comply. As I renewed (more rightly began) my thrusting, I doubted I'd ever lose my erection again around such beauty. \n\n\"...and you can just make out the nipples,\" Gayle caressed Theresa's breast, misrepresenting the product in that my sister's nipples were entirely visible through the white nylon. \"So that gives a certain mystery to your special someone. Leaves something to the imagination...\" she continued as Mom and I fucked. \n\n\"Yes, look at her Honey,\" Mom panted, her back against the mirrored wall behind the bench. \"Look at your sister's tits Baby.\" As she said it, Mom pulled the bodysuit down below her own, essentially hinting I lavish some attention. And lavish I did. Dropping my head, I in turn lifted a boob and brought my lips around her, her nipple filling my mouth before I sucked. \"Oh, fuck yes Baby,\" Mom purred. \"Suck on my tits you good boy.\" \n\nThe other. To take it in my mouth as my hand took up the duty. Grasping her boob, kneading the nipple between my fingers. Back onto her mouth and our kiss as intense as expected of the still new lovers we'd become. Had it only been two weeks? It felt like years. So right was our love. So perfect was the feeling of my cock inside my mother. \n\nI was puffing. Covered in sweat as I hammered myself into her. My buttocks ached from thrusting; my abs just as exhausted. But thankfully, mothers know their sons. \"Sit back Baby,\" she whispered, and ready for rest I lifted her from the bench, cock still deep, and shuffled back onto an awaiting chair. \n\nWith a sigh, I reclined and she took up the task. Insatiable, Mom slammed her ass down onto my thighs. My dick catching the light as she rose up along its length, her pussy greedily devouring me over and again. \"Grab my ass,\" she gasped into my mouth. Like mother, like daughter I observed as I complied with her wishes. Two handfuls of ample buttock. Squeezing and assisting with the fucking as I pulled her ass down into my lap. \"You're going to make me...\" her words were lost as her mouth fell upon my own and boobs pressed to my chest. Again, and again, she bombarded me with her pussy, my cum, her own juices flowing freely between my thighs. \"I'm cumm... I'm cumming,\" Mom managed to gasp into my mouth and I took it upon myself to test her asshole with a finger. \n\nShe squeezed around the tip of my digit as she came. Her teeth biting into my tongue in much the same manner as her pussy in turn gripped my cock. She owned me. I was hers forever and would be there to please her every whim. Again, I came. Like turning a faucet, I released inside her and our orgasms were one. Mother and son locked together in cum, in love. \n\nWith the sound of Gayle describing how gorgeous Theresa looked in her bodystocking, Mom and I kissed and caressed in post orgasm haze. It was only when Delores entered the room and tut-tutted, did we acknowledge where we were, our eyes opening sleepily as one. \"Well, I hope there's still some in there for me,\" she had her eyes aimed at our groins and, as Mom slowly climbed off me to reveal the slick and frothy evidence of cum, at my dick. ",
        "\"Be my guest,\" Mom smiled, leaning in to kiss me once more as Delores amazingly made for my cock. The action was surprising, wantonly obscene and ridiculously arousing. Delores grasped my cock at the base and pressed her lips to my underside, her tongue to follow. Greedily she licked the lubed length of my erection, wrapping her mouth around the head and sucking the remaining cum from me like a straw. A grin on her wet lips when she looked back at Mom's face. \n\n\"Your son has the best tasting cum,\" she complimented my mother and in turn me. \"You should be so proud.\" \n\n\"Oh, I am,\" Mom caressed the back of my head, kissing me before she moved into the rising Delores, their mouths coming together to share a cummy kiss. I'd clearly died and gone to heaven. \n\n\"I told you I'm always missing out!\" The voice of Gayle woke me from my spell and I turned to see her enter, hand in hand with Theresa. \n\n\"Oh good, were all together,\" Delores reluctantly broke from making out with my mother. \"Don't worry Gayle, you'll have plenty of opportunity in the future,\" her face could barely disguise her excitement at whatever she was hinting at. \n\n\"What does that mean?\" Mom began removing her bodystocking and I rose from my chair, Theresa quick to come to my side and I wrapped an arm around her waist. \n\n\"We've had a record number of complaints,\" Delores seemingly conveyed bad news though her smile remained and Gayle waved it away dismissively. \n\n\"I've had complaints during non-stick frying pans,\" she stated. \"It means people are watching.\" \n\n\"Exactly,\" Delores continued. \"A lot of people!\" She beamed. \"Head office is impressed. Skin-Tightz have had record sales and it's all because of you four,\" she included me and admittedly I felt a little insignificant. I'd just been playing the role of a horny sex obsessed viewer. My direction for the women to display more of their bodies was completely self-serving. \n\n\"So, what does it mean for the future of the station?\" Mom asked, now totally naked and my still erect cock twitched at the sight. \n\n\"We've been renewed!\" Delores grinned. \"Management have taken bookings from new brands. Even Lauren Brooks' Fashion would you believe!?\" She conveyed and the significance of the name went over my head. \n\n\"So, they're not closing us down?\" Gayle questioned. \n\n\"Not if we keep doing what we're doing,\" Delores smiled and came to stand beside me, a hand lowered to take my cock once more in her grasp. \"Do you think you can keep it up Corey?\" She asked and all eyes were cast upon my erection as they awaited my response. \n\nAnd of the answer; I was certain. \n\n* \n\nThank you for reading and hope it was worth the wait. \n\nSunburycd"
    ],
    "authorname": "sunburycd",
    "tags": [
        "mother",
        "son",
        "sister",
        "pubic hair",
        "oral",
        "ass licking",
        "stockings",
        "panty sniffing",
        "pantyhose"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/home-shopping-ch-04"
}