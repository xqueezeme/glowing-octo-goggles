{
    "title": "Lost Girl: Julie's Story Ch. 03 Pt. 02",
    "pages": [
        "This is the very last part of 'Lost Girl, and also brings down the curtain on the 'Big Girls Don't Cry' story thread, so I apologise in advance if it seems a little long, it's actually two chapters in one.\n\nMy heartfelt thanks go to GrandTeton, who edited, commented, and once again showed me that punctuation is the mark of the civilised writer; without it, in its proper place, all is just shouting, so thank you Ken, your assistance is all that made this story possible.\n\nOnce again, please remember this is my world, which is not necessarily the 'real' world, so things happen the way I want or need them to. \n\nPlease vote if you liked it, or tell me if you didn't, email mail me if you want, I answer all emails (but not necessarily the death-threats; my wife deals with those...) and don't forget to leave your name if you would like a reply.\n\nPlease read, enjoy and wish Julie a long and happy life, I certainly do.\n\nbeachbum1958\n\n*****\n\nDARRYL:\n\nWhen I told Lena about the strange, almost surreal, conversation I'd had with the lady in London, and shared my suspicions that she knew a whole lot more about Julie and Mark than she was letting on, Lena nodded slowly, agreeing with me that the conversation had been strange, almost in code.\n\n\"You're right, Dar, it sounds like she does know more, but maybe she has reasons of her own; maybe your cousins have been hurt, or taken advantage of by family. Maybe she's hiding them to keep them safe, did you think of that? If her address was given as that place, maybe she lived there, maybe still does, or at least keeps in contact; could they maybe have been in placed care with her?\" \n\nShe paused to twinkle at me, her special \"I know something you don't know!\" grin. \n\n\"Look Dar, we can't possibly second-guess her; when she's ready to talk, I have a feeling she'll let us know; until then, you tried, you did your best, now you'll have to wait and see. And when you come home tonight, I might have a little surprise for you...!\n\nWork that day seemed to fly by, as I wondered what the surprise Lena had for me was, although I knew what I wanted it to be, oh yes! When I got home, I was half expecting a replay of the seduction scene she'd laid on for me once before, so I was a little disappointed, but not too much; she was wearing a brief, figure-hugging minidress, sheer stockings, and elegant platform pumps, making her already long legs look endless, scenic and incredibly sexy. \n\nI whistled appreciatively, Lena dimpling and doing a twirl to show me the full package, and once again I was overwhelmed with just how sexy my wife was; she looked like a teenage vamp out on the prowl, not a mother of two in her late twenties, and I mentally congratulated myself for capturing her (although, really it was the other way round; she'd wanted me from the beginning, and finally, after an extended battle with my immaturity, had reeled me in).\n\n\"Wow, Princess, you look good enough to eat; in fact, I might just do that! What's the occasion?\"\n\nLena smiled that slow, seductive smile she does so well.\n\n\"You're taking me to dinner, then we're going dancing, and then...who knows?\" she purred, \"So hurry up, Dar, you smell like a doctor, shower and change, please, we have reservations in 40 minutes, chop-chop!\"\n\n\"What about the kids...?\" I trailed off as she smiled again.\n\n\"Don't worry, they're with Emma, and Mum's babysitting Marcus while Lizzie's at work, so everything's fine. Hurry up Dar, clock's ticking!\"\n\nSo I 'hurried-up' and 20 minutes later, shaved, showered, shampooed and smelling manly, I pointed the car in the direction of Whiteladies Road, as Lena couldn't possibly walk that far in those shoes. \n\nThe restaurant was a fusion of South-East Asian cuisine with Australian barbecue, unique, tasty and plentiful. Lena discovered she loved the huge Tiger Prawns grilled in a coconut, chilli and pineapple sauce, with dozens of little accompaniments, coconut steamed rice, and Ice Kachang for dessert. Once we'd finished dinner, we took to the road again, to a club Allie told her about, in Redland, where we danced for hours to the latest sounds, and retro 1980's and 90's. \n\nWhen we eventually arrived home, it was long after 3 a.m. We'd had to take a cab, as the shots were great, but potent, and I'd had a couple more than I should have, although I'd noted in passing without really registering the fact that Lena had only had soft drinks. She didn't want to drive home at that time of night, so we left the car there and took a cab home.\n\nOnce we were back indoors, Lena smiled mysteriously as she helped me unbutton my shirt, while I unzipped her, taking the opportunity to grab a feel and a squeeze of her lovely, pneumatic little bum and lovely, firm, bouncy boobs, all the while kissing like we'd never had the chance before. Sure I'd had a few shots, but they'd had no effect on Darryl Jr, and I was hard as a rock as I peeled Lena out of her dress and panties, leaving her hold-up stockings in place because her legs looked so spectacular. \n\nLena, meanwhile, had been nibbling my neck as she squeezed and rubbed my cock, making my already thunderous erection even stiffer and thicker, if that was possible. Five years together and four years of marriage had done nothing to diminish the instant lust and need to ravage her I felt every time I gazed on my gorgeous wife/sister/aunt, something Lena knew too well, and took advantage of at every opportunity!\n\nOnce we were both naked, I pulled her close to kiss her, my hands squeezing and fondling her bum even as I ground my crotch into hers, making her gasp as our sexes rubbed together. Lena waxed, and the feel of her bare pussy sliding against my rigid cock was one of the things I loved most about our lovemaking. Lena responded by suddenly leaping up, wrapping her arms around my neck as her legs wrapped around my waist.\n\n\"Do me like this, Dar!\" she hissed in my ear, gently biting all down the length of my jaw as she writhed against me, so I obliged, walking forward to place her back against the wall and lifting her slightly so she could slam herself down on me, making all my nerve-endings sing with the sensation.\n\n\"Oh God, yess!\" she growled, goading me on to slam into her again, and again, her pussy clasping and squeezing me as she bit my shoulder, taking me higher and higher. My cock felt like an iron bar as I reamed her pussy, slamming into her, her sweat gluing us to the wall as we pounded against each other until we couldn't take any more.\n\n\"Ooohh God, Darryl, oooh yesss, fuck me, Darryl, fuck me hard, yesss, harder, HARDER!!\" she screamed, her pussy suddenly tightening around me, the sudden constriction setting me off as we orgasmed together, pulse after pulse of spunk shooting deep into her, until I was drained, drenched in sweat, and trembling with fatigue.\n\nLena slid off me and leaned back against the wall, her chest heaving as she fought for breath.\n\n\"I told you once before, baby, if I could bottle what you do to me, I'd make a fortune!\" she grinned, draping her arms around me and burying her head in the hollow of my neck. I was in no better shape, only Lena holding me up as my heart hammered like an express train. Somehow we made it back to the bed, to flop down gratefully, content to hold each other while our storms still raged.\n\nOnce my heart-rate and breathing had returned to normal, I pulled her closer and jiggled her lovely little bum, making her grin.\n\n\"So, Princess, was this my surprise then?\" I grinned, and she smiled back, suddenly mysterious and secretive.\n\n\"Maybe, Dar, maybe, or perhaps...\"\n\nShe turned and opened the drawer of her bedside cabinet and scrabbled around inside.\n\n\"Close your eyes Dar!\" she commanded, so I did, feeling her kneeling up on the bed and looming over me.\n\n\"You can open your eyes now, baby!\" she whispered, and when I did, the first thing I saw was a white stick in her hand at my eye level; it took me a second to realise I was seeing a positive pregnancy test. I looked at her in hope and she nodded, biting her lip as she tried not to grin.\n\n\"That's right Dar, we're pregnant! We're having another baby!\"\n\nI whooped and grabbed her, pulling her over me as I showered her with kisses, Lena responding no less enthusiastically, laughing and crying happily, as was I. I pulled her down next to me and held her close so I could bite her lip while I squeezed her bum.\n\n\"I told you I like making babies with you!\" I grinned, and Lena wriggled against me as she smiled back.\n\n\"I know you told me it wasn't possible, baby, but maybe tonight you managed to do the impossible and poked another baby in there tonight, to keep this one company!\"\n\nI smiled at that, and squeezed her even closer to me, loving the feel of her so close to me, but unable to stifle a huge yawn.\n\n\"Who knows, Princess, maybe you're right...\" I mumbled, exertion, a long day, and too many shots finally catching up with me. The last thing I remember is Lena snuggling up and spooning against me, my hands sliding up to cup her delectable boobs, and the scent of her hair as I sleepily contemplated the fact we were having a baby, and that's all she wrote until I was woken by my phone ringing, then fumbling and dropping it as the late-morning sunshine lanced into my eyes as I struggled awake.\n\nAfter some further fumbling and bleary attempts to remember how to answer the damned thing, I finally managed to hit the 'Answer' button, hoping I wasn't being called-in because someone hadn't turned-up for their shift.\n\n\"Hello?\" I managed, and a young woman's voice answered me.\n\n\"Hello, is this Darryl Morgan?\"\n\nI nodded, although I don't know why, she couldn't see me.\n\n\"Yes, speaking, who's calling, please?\"\n\nThere was a short pause, then:\n\n\"My name is Julie, Julie Jameson; I'm told you've been looking for me. I think you're my cousin...\"\n\n*\n\nJULIE:\n\nWhen Mark came home from work, he found the children asleep, tired-out from their day at the boating lake, and Mummy-Anh helping me cook dinner; actually, she's a superb cook, so it was more or less the other way round. Mark's eyes lit up; he's a walking stomach at the best of times, and he likes to spend his spare time at the Morrison house stuffing his face, with Mummy happily feeding him past the point where he should have exploded, so he knew right away that he was getting a special dinner if Mum was cooking it for him. \n\nShe, of course, was all over him immediately he walked in, and he lapped it up; Mummy has a special place in her heart for Mark, she always had, and now she'd explained to me what I should have seen all along, I saw their interaction in a whole new light; she actually mothered him, genuinely mothered and loved him, something our own lush of a mother had never bothered to do, and poor Mark was lapping-up and loving every second of it.\n\nWhile we ate, I could tell Mark was picking up on the fact Mum and I had something to say to him, but he kept his peace; if it was something bad, one of us would have said something long before we sat down, so he waited, opting to enjoy dinner before the pow-wow he knew was coming. \n\nOutwardly, at least, all was fine; Markie was awake, so Mum fed her at table, for once leaving me to eat my dinner in peace, and once we'd cleared up, Mum cocked an eyebrow at me, nodding at Mark. He saw that, and sat up straighter.\n\n\"Mark, Julie have something to tell you, please to listen!\" she smiled, bouncing Markie on her hip to keep her occupied while Mark and I talked.\n\n\"What's the problem, Tink?\" he asked, a small worry-line appearing between his eyebrows. I drew a deep breath; this was it.\n\n\"Mark, you remember when I went to that address in Clifton, to look for mum's family?\"\n\nHe nodded, so I continued.\n\n\"While we were in Bristol, they were here, mum's sister, Emma...and our cousin Darryl, the man who looks like you; he was here, too. Not 'here' here. They found Mummy's address, they went there, Mummy and Nia met them. Please Mark, there's more...!\"\n\nI could see he was perturbed by this; he'd told me once he wasn't interested in that side of our family, we had enough family right here, and now I was raking it up again. He fixed me with his eye, pinning me with that raised eyebrow he'd copied so effectively from Mummy, and slowly nodded.\n\n\"Okay, Tink, let's hear it!\" he sighed, more resigned than annoyed.\n\n\"They left a number; his name's Darryl Morgan; I found his house but there was no-one in. I want to call him, I just want to get some answers, that's all, I don't want them in our lives, I just want to know who we are!\"\n\nMark looked at me for a long moment, then smiled wistfully.\n\n\"Tink, if you want to call this...Darryl guy, go ahead; I'm not your boss, Tink, I don't make the rules, and you don't need my permission to do anything. I'm glad you told me, but if this is what you want, you should do it. I have to be honest; finding mum's family won't make any difference to my life; I have everything I could ever want right here, I have you, the children, Mum and Dad Morrison, Nia and Jamie, everyone who's important; my life is full and complete, but if you need answers, go and get them, I won't try and stop you; I don't have the right to do that, and I won't stand in your way. I just hope for your sake they're not like that bloody crazy woman!\"\n\nI stared at him open-mouthed; Mum had said he'd do anything for me, but I'd expected a certain amount of negotiation, and maybe at least an attempt to change my mind, not this, not complete capitulation. Mum was right; I wanted this, so he'd handed it to me. I had to say something.\n\n\"Mark, baby, are you sure? I mean, we could be opening a huge can of worms...\"\n\nHe reached across the table and took my hand between his.\n\n\"If it does go tits-up, we'll deal with it; you need answers; this is the best way to get them. Don't worry, Little Plum, I've got your back, I've always had your back. When were you planning on doing this?\"\n\nThere he had me. I was desperate for answers, but also wary of what I might hear, and my eyes flickered at Mum, silently appealing to her. She caught my look, and sat down, holding Markie on her lap.\n\n\"Mark, I tell Julie this because these people your family too, cannot change that, she need to know this things. I not know if you want to know too, but I tell her to tell you so you know. I think you need talk about this, this important, this about family, so talk, think, and when you ready, I be there, I help you talk if that what you want; you are my children too, cannot let you be alone now!\"\n\nWith that, she stood and nuzzled Markie.\n\n\"You go to mummy now, co cong chua nho (little Princess), time for bed now, little bunny-rabbit.\"\n\nMarkie grinned happily and hugged Mummy hard.\n\n\"Anh y\u00eau em nana! (I love you, Nana!),\" she lisped, making Mummy beam proudly.\n\n\"She smart girl, already speak more 'Ting Viet' than Jamie, and I have been talking to him all his life! I think she take after Nguye't!\"\n\nShe kissed Markie soundly and put her into my arms before kissing me.\n\n\"Call me in morning, let me know what you decide, okay?\"\n\nMark dropped her home, my injunction to stay out of Mummy's fridge probably passing right over his head unnoticed, and I was right; when he came in, he had that full, satisfied look that told me he'd been stuffing his face again, and a litre tub of Mummy's fabulous Mango ice-cream for me. We ate some while we decided what to do next; I wanted to call this Darryl person in the morning. \n\nMark wanted to know what the rush was, but really it was just a rhetorical question; he could see this was eating at me, to be so close to getting some answers to questions that had become vitally important to me; who was I, who were we, Mark, the girls, me? Where did we come from, what had happened to cut us off so completely from the rest of our family, and why were they looking for us now? All questions I needed answers to. \n\nMark could see how much this meant to me, and like the sweet man he is, he suggested we call this Darryl Morgan in the morning from Mummy's house, with our real family around us to lend support.\n\nThat done, my thoughts turned to something that had been fluttering inside me ever since Mummy had revealed what poor Mark was still going through; ever since that conversation, I'd been feeling the need to connect with him, to take him into me again and show him that there was love overflowing in our family, and it was all for him. \n\nMark picked up on the tenor of my thoughts, as he always does, and so it was that our thoughts turned to more exciting things than family reunions; Mark had the look in his eye, and I was feeling a certain tingle too, so after checking on the children, he gently tugged me into the bedroom (with token resistance from me; after all, a girl has her reputation to think of...) and pulled me down on the bed next to him.\n\n\"I love you, Tinkerbell!\" he declared, actions following words as his roaming hands found my panties and slid inside, to cup and squeeze my bum as his tongue gently fenced with mine. Mark is an extraordinarily good kisser, gentle, insistent but not forceful, loving, tender, and blisteringly hot, and I could feel myself wanting him more with every passing second.\n\n\"Help me...!\" I urged as I tried to wriggle out of my clothes. Mark, of course, headed straight for my panties, sliding them off and flinging them dramatically across the room.\n\nNext came my skirt, and finally, my tank top as he pulled it over my head, leaving me naked. His shirt was off, and the bulge in his jeans told me he was ready and willing, so I wasted no time in unbuckling his belt and popping his jeans so he could slide them off, to reveal his tented trunks, with his cock furled up inside there like a snake in a sack. As always, my mouth watered at the sight of him like that, his fit, well-muscled body tanned and healthy looking.\n\n\"Are you done staring, Little Plum?\" he grinned, and I reached out to tweak his nipple, making him buck and chuckle as I touched one of only two ticklish spots on his body. He pulled me close and covered my face and neck with kisses, each one a little love-dart, piercing me and filling me with love and concern for my Lost Boy. Mummy had said he was still hurting, that he'd never learned how to let his pain go, because he'd never had the chance to learn how, and as he kissed and nuzzled me, that all came back to me. \n\nThe memory of the scared little boy crying alone in his room in the dead of the night suddenly reared-up, clear and vivid, coupled with the knowledge of why he'd cried night after night, when he was alone and the house was still, now churning inside me. I clutched hold of him, unable to let him go, suddenly afraid for him.\n\n\"Hey, hey, what's the matter, Tinkerbell?\" he murmured, hugging me close as I clung desperately to him. He looked at me, real concern in his eyes, and his thumbs gently brushed away the tears gathering on my eyelashes.\n\n\"Don't cry, Wee Wendy, I've got you, I'll always be there to catch you, count on it!\" he murmured, smiling as he kissed the tip of my nose, before once more pressing his lips to mine, kissing me as only he knows how.\n\nWe made love slowly, gently, caressing one another as we explored and shared those other parts of lovemaking than just simple gratification; Mark and I were connected at the soul, he was my saving Angel and my one true love. He'd been whipped and cowed, threatened and terrorised, but he'd never broken the faith; he'd kept me safe, but now he needed me to help him unlock that missing part of his heart and make him whole again. \n\nAs we made love the tears came, but they were sad and sweet, not bitter and painful; sadness that my poor Mark had been so injured by the one who was supposed to love him the most, that he paid a price for loving me that no-one should ever have asked of him, and the sweetness that came of knowing he was here with me, he was finally mine forever, that he wanted only me, and that he was, at last, safe and happy.",
        "Our lovemaking built to a crescendo, love and need for each other leading us to that place where our souls entwined and caressed. When I came, it was with a cry of pure happiness, the feeling starting somewhere deep inside me and mounting up though my body until it exploded in a white-hot sheet of sheer bliss in my mind, all my thoughts and needs wrapped around my darling, beloved Lost Boy. Mark kept pace with me, and my body's response to him took him with me, his lips finding mine as he poured himself into me, the heat of his body filling mine as we held each other tightly, burning together in the heatless white fire that licked around us.\n\nOne day soon I was going to share with him something that had been building in me for a while now; that I wanted another baby, maybe a son this time, a child made, like Markie and Nia, from our boundless love and need for each other.\n\n*\n\nLate morning found us at Mummy's house, with Mark looking unconvinced but resigned. Nia just looked unconvinced. I was a bundle of nerves; Nia had already taken me aside and asked me just what I thought I was doing, supposing this lot were as bad, or worse, than my mother, had I even thought about that? I'd tried to explain, and while Nia listened, as she'd said she would, she still looked skeptical and unconvinced. However, she'd said her piece, and I loved her for being that concerned, but I felt I needed some answers, so she'd let it go. Only Mummy seemed relaxed and unconcerned as she gently rocked Nia and hummed to her while Markie, Laura and Jamie Jr. rolled and tumbled around inside the playpen under her watchful eye.\n\nFinally, the moment came; all argument was done, everyone had said their piece, and I was ready for this, so Nia took my little Nia from Mummy so she could hold my hand. I dialled the number and switched the 'phone to 'Hands-free'. The number connected, and rang, and rang, and rang. Just as I moved to hang-up, a man's voice answered.\n\n\"H-hello?\" He sounded blurry, not quite awake yet, like we'd woken him up; well, it was Saturday morning, maybe he was having a lie-in. But what astounded me was, even with that drowsy edge to his voice, how much like Mark he sounded, the same tone and timbre to his voice. Mummy tapped my arm gently, breaking me out of my momentary trance. This was it.\n\n\"Hello, is this Darryl Morgan?\" I quavered, more than a little tremble in my voice. Mummy smiled and twined her fingers in mine reassuringly.\n\n\"Yes, speaking, who's calling, please?\" he replied. I silently asked Mark what to do next, and he shrugged and pointed at the phone, so I plunged on.\n\n\"My name is Julie, Julie Jameson; I'm told you've been looking for me. I think you're my cousin...\"\n\nI heard the sharp intake of breath at the other end, then:\n\n\"Julie Jameson? Really? Oh my God, yes, yes I've been looking for you, we all have!\"\n\nHis voice became slightly muffled, as though he'd turned away from the phone.\n\n\"Lena, LENA! It's Julie, yes, my cousin Julie, she's on the phone right now!\"\n\nI vaguely heard another voice in the background, a female voice, then once more Darryl's voice sharp and clear.\n\n\"Emma, your mother's sister, she's been looking for you for years, she's going to be so happy, we thought we'd lost you forever! How's your brother, how's Mark, is he there too? Emma talks so much about you both, she misses you both so much, all she wants to do is see you again; she carried you when you were a baby, that's the last time she saw you, she's going to be so excited!\"\n\nI couldn't help but smile as he babbled excitedly, he sounded so genuinely happy to hear from me; even Nia had lost her frosty expression and was also grinning at his happy exuberance. He'd asked about Mark; of course he couldn't know about Mark and me, but I thought I'd put his mind at ease.\n\n\"Mark's here with me right now, Darryl; we got your message, I'm curious; how did you know to come here and look for us?\"\n\nFor some reason, I pictured him smiling, his voice had that same inflection Mark gets when he's smiling and talking.\n\n\"One of my colleagues at St George's managed to find a record of a Julie Jameson who was injured in a sports accident when she was thirteen, her next of kin was listed as Mark Jameson, aged sixteen, the ages matched, so I've had people combing through the medical records archives at St Georges and Bolingbroke, and they came up with your address. The rest you know!\"\n\nMark cleared his throat at that.\n\n\"Mark here, Darryl; I thought those records are confidential? How did you get to see them?\"\n\nDarryl's answer was straightforward and with no hesitation, indicating he was telling the truth.\n\n\"I didn't; my colleague is Paediatric Registrar at St. Georges, she made some enquiries, as a favour to me, and left it up to me to follow them up; looks like I made the right decision!\" he said, and once again I could hear that smile in his voice, so much like Mark. \n\n\"Look, I think we should meet up, when you're ready, of course; I promise, I don't want anything from you, all I want is to be able to tell Emma that both of you are well and safe, or maybe she can see for herself; she's been beating herself up for years thinking she abandoned you both. There are things she needs to tell you, and there are probably things you want to know, about us, about your family, so I think a meeting might be a good idea. Now you have my number, please, think about it; Emma wants to know all about you, and about your mother, my aunt Sandra; where is she, anyway?\"\n\nThere were only two possible places I could think of, and she was almost certainly in the hotter one, but I wasn't going into that over the phone with a stranger.\n\n\"Mum...died, two years ago now...\"\n\n\"I'm so sorry, please accept my condolences. Emma will be heartbroken; she was so hoping to see her younger sister again...\" \n\nHe sounded genuinely sorry, but then of course he couldn't possibly know the truth about our bonkers, booze-hound mother and her vicious, cruel nature. I decided to stall him a little; I needed to think about this.\n\n\"Darryl, I'm sure you'll understand that this is all a little sudden; Mark and I, we've been alone all our lives, so the idea of family seems a little...much right now. I think we need to think about this.\"\n\nTo his credit, he agreed with me, not pressuring us at all.\n\n\"Of course, Julie, I understand completely; when you're ready to take that next step, please, call me and we'll set something up.\"\n\nHe sounded disappointed, but I could tell he was bending over backwards to accommodate me, which I appreciated. He just had one more thing to say.\n\n\"I would really like to meet you both, and I know my wife and children would too. Take your time, I'm not going anywhere, and when you feel the time's right, call me and we'll organise something; poor Emma 's been looking for you for so long, I'm just glad I have some good news for her at last. Until the next time, then, it was wonderful to hear from you, from both of you, Emma will be so thrilled!\"\n\nI hung up, with a strange sense of anti-climax, but also with a feeling of a connection made, and glad Darryl hadn't seemed inclined to pressure us. I looked over at Nia to gauge her reaction, noting she seemed thoughtful.\n\n\"So, Nia, what do you think, how did that go?\" I asked her, watching her closely.\n\n\"Honestly, Jules? I was a little suspicious when I first met him, but I actually do think he wants nothing from you except to meet his family; when you meet him, if you decide to, you're in for a surprise, though! Did you notice he passed off the 'colleague at St Georges' thing? It sounds like he's a doctor, so probably not a sleaze; he's married with kids, and from what mummy said, he seems like a genuine family man, and very concerned about the pair of you. The woman with him, this 'Emma' person, your aunt, she looked so much like your mum I was shocked, and a little scared, but she was nothing like your mum, she seemed like a nice person too. I'm 50/50 right now, but I think we need to sit down and talk to mummy about this, daddy too.\" \n\nShe was right; Mark was still looking only partially convinced, and one glance from him was all I needed; we definitely needed older, wiser heads to talk this through with us, and I would have liked some big-brother insight from Jamie, too, but he was off on a commission somewhere in the Philippines and wouldn't be back for at least a week. Mummy was nodding, obviously still reading my mind.\n\n\"Nguye't right; we need talk with daddy too; he know you need to do this thing, perhaps he help you work out way to do this. You agree?\"\n\nMark nodded.\n\n\"I think I'd like to follow this up; I'm kind of curious where this Darryl guy's coming from, but if it's all the same to you, I'd like to wait 'til Jamie gets back first. I want to see what he has to say about all this.\"\n\nI'm constantly being brought-up short by how in-tune Mark and I are, and so hearing my own thoughts echoed back at me was no surprise, it was just more proof of just how closely connected we were.\n\n\"Next week, then?\" suggested Nia, and we all nodded. Next week it was, and as Jamie had business in Bristol the week after that, we decided that he and Nia would go down there together and scope-out these people, to find out just what we were getting ourselves into.\n\n*\n\nDARRYL:\n\nI paused, completely wrong footed for a few seconds before I remembered I was on the phone.\n\n\"Julie Jameson? Really? Oh my God, yes, yes I've been looking for you, we all have!\"\n\nI heard Lena padding around in the corridor, she'd definitely want to know about this, so I called her\n\n\"Lena? LENA! It's Julie!\"\n\nLena popped her head in the bedroom door, her eyes wide as she murmured \"Julie? Really?\"\n\nI grinned back at her.\n\n\"Yes, my cousin Julie, she's on the phone right now!\"\n\nLena sat on the edge of the bed, frantically motioning me to keep talking, to keep Julie talking, so I did, telling her about Emma, about her search for her, about the things Emma wanted to tell her. As we talked, I noted her voice; she had a soft, almost childlike voice, with a definite South London accent, as did Mark, and, for no good reason, I mentally pictured her as a smaller, younger version of Emma; blonde hair, green eyes, fair-skinned, all the Fraser family trademarks.\n\nI could sense a certain reticence, an unwillingness to give too much away; she was definitely holding back, not that I blamed her; it must be unsettling in the extreme to have a whole bunch of relatives appear out of the blue, but I also felt she was holding-up remarkably well under the circumstances. I could feel the skittishness growing, especially when I suggested a meeting, so I back-pedalled, leaving the door open for them to make the next move. I still didn't have a proper way of contacting them, so I'd just have to rely on God and guesswork as to when and if they'd make the next move.\n\nAs soon as I hung-up, Lena was on me, wanting to know details, so I told her what I knew, and what I guessed, and left her to draw her own conclusions; she was a little more up-beat than me, though.\n\n\"She called you, Dar, so she's interested; right now I bet she's wondering about you and why it's taken you so long to reach out to her, and you're right, she's probably wary of you as well, so give her time; I think she'll come back to you soon enough!\"\n\nShe grinned impishly as she stood up and pulled the straps of her summer dress off her shoulders, letting it slide off her and onto the floor; she was naked underneath it.\n\n\"Mummy's taken David and Mo-Mo over to Lizzie's place, so we have the house to ourselves until this afternoon; was there anything special you wanted to do?\"\n\nThere were several things I wanted to do, all of them sticky, sweaty, and immensely enjoyable, so I pulled her close and got to work. Lena pregnant is almost irresistible, as I'd discovered though our first two pregnancies, and her sex-drive seems to rev-up accordingly. The two of us were randy, ready, and poised for action, and all it took was for me to tug her back up to me to open the floodgates.\n\n\"Taste me, Dar, I want to taste you too!\" she husked, my semi suddenly stiffening into a full-blown erection at the tone of her voice and the thought of what was coming next.\n\n\"Mmm, you smell nice!\" I grinned, her scent subtle and alluring, and wholly natural; Lena didn't use perfumes in case they irritated Mo-Mo's skin, but she always smelled wonderful, a little like ice-cream, that sweet, floral, slightly milky smell, but not overpowering, rather it was fresh and enticing.\n\nLena smiled at the compliment, once again that serene, enigmatic smile straight from the lips of a Caravaggio Madonna.\n\n\"And you smell nice too, Dar, your morning smell is delicious. Now come closer and play with me, big brother!\"\n\nAh, so that was what she wanted; good, so did I; I think I wanted my little sister right now as well.\n\nLena grinned as I slid closer to her, my hands sliding over her, touching, caressing, squeezing, enjoying the warm vitality of the beautiful girl I married. I gently urged her over onto her back, so I could kiss and nibble her properly. Lena sighed as my lips fastened lightly on her nipple, her sighs deepening as I began to rub the little nub, feeling it grow firmer and longer as I sucked and nibbled. I slid across to do the same to the other, Lena giggling softly amid her sighs as I nibbled and tickled her, before kissing my way down her sleek abdomen and flat tummy, to swirl my tongue-tip in her navel, something that always seems to give her a jolt, and this time was no exception.\n\n\"Ooohh, Dar, ooh!\" she gasped, winking at me as I looked up at her with a grin on my face. I continued kissing and licking her flat belly, moving ever downwards, until my tongue brushed the apex of her waxed slit, making her jump and sigh again.\n\n\"Darryl...\" she whispered, her voice midway between a groan and a caress, causing me to delve deeper between her thighs, licking and tasting her as her pussy lips flowered open under my tongue. I could feel her labia getting warmer as they engorged, and my head swam with the nearness of her, her sweet, earthy, tangy aroma, and the taste of her on my tongue.\n\n\"Wait Dar...\" she murmured, sliding away from me, kneeling up instead to smile naughtily at me.\n\n\"Like this, Stud-Muffin!\" she grinned, straddling me with her back to me. I twigged right away what she wanted, so I shuffled lower down the bed so my face was right under her moist and swollen pussy, ready to continue my assault on her. As I clasped hold of her taut, perfectly sculpted buttocks, I pulled her to me, once more slipping my tongue into her moist, steamy little honey-pot.\n\nLena sighed and leaned forward, taking hold of me and pumping me, testing how ready I was, before delicious heat and wet suction enveloped me as she slipped her lips over the end of my cock.\n\nWe played for what seemed like hours, working each other right up to the brink then pulling back, prolonging the moment and delaying the inevitable, but it wasn't humanly posible to keep each other so keyed-up without something giving, and it was Lena who finally broke first.\n\nAs I pushed the tip of my tongue between her labia again, I could feel the changes in her; this time she wouldn't be denied, and as she bore back against me, I deliberately rasped my tongue over the hard little bead of her clitoris, simultaneously sliding my thumb into her tight, slippery little anus.\n\nLena shuddered as she came, only my cock in her mouth preventing her screaming out loud, but the feel of her groans vibrating in her throat, pulsing against my already over-stimulated cock-head was finally too much for me, and I joined her in climax, my ears dulling as spurt after spurt of semen poured out of me, filling her mouth and throat as she writhed and shuddered against me, until her orgasm had run its course and she slumped down on me, her heart drumming to match mine.\n\nWe lay in our sweat, muscles twitching as aftershock and adrenaline had their way with us, until Lena finally summoned enough energy to roll off me and ease her way back up to lie against me, the smell of her sweat sharp and sweet in the midsummer morning air. \n\n\"And that's another reason I keep you around, Doctor Big Brother!\" she grinned, unable to stop herself giggling as the last of the tension drained away, taking me with her, so we laughed together, finally subsiding into a warm glow of love and contentment; today, right now, all was well in our world, and life was good. \n\n*\n\nIt took almost two weeks for anything further to develop; I'd told Emma that I'd spoken with Julie, and Mark. She of course was ecstatic and wanted to go haring back down to London, but I had to burst her bubble and explain that Julie wasn't exactly champing at the bit to meet with us; then, of course, the pendulum swung the other way, and poor Emma started wallowing in the pool of guilt she'd been dabbling in for the last twenty or so years, and it took several chats and a couple of nice dinners to pull her back up again. Poor Emma, she'd invested so much time and energy in finding Julie and Mark, I felt like a complete heel telling her that Julie hadn't known of us, of her, and wasn't even that keen to meet us, or so it seemed to me.\n\nSo imagine my surprise when one evening my phone rang. It was a woman's voice, no-one I recognised, and not Julie, but the caller-ID showed a South London Area Code.\n\n\"Hello, is this Darryl Morgan?\" she asked, and when I replied that it was she continued.\n\n\"Darryl, my name's Nia, Nia Morrison, we met briefly a few weeks ago, you came to my mother's house in Clapham old Town?\"\n\nNow I remembered; the beautiful Eurasian girl, the one who'd claimed she'd never heard of Julie.\n\n\"My husband and I will be in Bristol on the weekend; I was wondering if we could come and see you? It's about Julie and Mark Jameson.\"\n\nBingo. Of course I agreed. Now all I needed to know why they'd denied knowing her...\n\n\"That would be wonderful. Could my aunt Emma be here as well? I think she'd like to hear what you have to say.\"\n\nNia gave a soft chuckle.\n\n\"Of course. Saturday morning?\"\n\n\"Saturday morning it is. My address is...\" but she cut me short.\n\n\"It's okay, I know where you are; Julie found your address and knocked, but there was no-one in. My husband went to university in Bristol, and lived in the Halls of Residence in Clifton, as it happens, so he knows how to get to your place. We'll see you mid-morning, if that's alright with you?\"\n\nI assured her it was, and rang-off. Lena cocked an eyebrow at me.\n\n\"Looks like Julie's checking you out; I don't blame her, you do look a little shady, I'd probably be a little worried, too!\"\n\nI had no answer but to grab her and hold her while I tickled her, with Mo-Mo bouncing up and down in her baby-bouncer and giggling with her, and David climbing onto us to help me kiss and tickle his mummy.\n\n*\n\nSaturday morning came, and now I was feeling it; usually I'm the composed one, and Lena's the one who frets, and paces, and rearranges things and drives me mad, but this time she was a picture of calm, that sweet 'Madonna' look on her face, and the calm, unruffled manner she gets when she's pregnant already in evidence, her calmness doing nothing to calm me. \n\nWhen the doorbell rang I literally jumped. Lena smiled tolerantly and patted me on the arm as she went to open the door. I heard muffled voices in the hall, and then Lena ushered our guests in. The girl Nia was as beautiful as I remembered, and her husband was a tall, handsome young man, a couple of years younger than me, and, oddly, with the same brilliantly blue eyes as his wife. Once everyone was seated, introductions made, and the niceties observed, I decided it was time to find out what had brought this couple here.\n\n\"Thank you for coming. My aunt is on her way over, she should be here soon. I take it you know Julie Jameson?\" Nia smiled at my directness.",
        "\"Yes I do; Julie is my oldest friend; she and Mark are like my brother and sister. I'm sorry about that business back at mum's house, but I had to make sure you really were her family, and that you weren't going to hurt her. She and Mark have been through a lot, and my mum and I were protecting them. I think I'd rather wait until your aunt arrives, she's probably going to want to hear what I have to say, and I really don't want to do this twice, so if you don't mind...?\"\n\nLena smiled that serene, placid smile of hers.\n\n\"Not at all. Emma will be here shortly, but in the meantime, would you like some tea? Or coffee?\"\n\nEveryone plumped for coffee, and Nia offered to help Lena, so the two girls disappeared into the kitchen while Jamie and I chatted about nothing much. We got to talking about children. Jamie told me they had twins, a boy and girl, two years old now, and like any proud father, he pulled out pictures of them to show me. He admired the pictures of David and Mo-Mo on the mantelpiece, and seemed particularly taken with Mo-Mo.\n\nThe girls came back in then, chatting like old friends, and just then the doorbell went again, so Lena went off to answer it while I entertained our guests. Emma came in, followed by Lena, and once again we made introductions, before getting down to why we were all here. Nia kicked off the discussion.\n\n\"I'm sorry about deceiving you when you came and saw us; we didn't know too much about you, and, given the history of Julie, Mark , and their mother, we thought it best to keep them under wraps a while longer.\"\n\nEmma looked puzzled.\n\n\"I'm sorry, I don't understand, what 'history'?\"\n\nNia looked at her levelly, chewing the inside of her lip, then exchanged glances with Jamie, who nodded, so Nia plunged on.\n\n\"Julie and Mark were abused, terrorised, and injured by their mother; she never physically mistreated them when they were young, at least, not that I know about, she just ignored them from the time they were little. Mark had to bring up Julie, but he was only a little boy himself; she left him to care for Julie because she didn't want to. Can you imagine how scared he was? How alone? He was just a small boy, and all the weight of the world was left piled on him.\"\n\nShe paused to dash the back of her hand across her eyes.\n\n\"It was even worse for Julie; you said you found a report at St. George's that she'd been in a sports accident. That's not true; that's what my dad told them to stop the police taking them into care and probably splitting them up forever. The truth is, Julie's mother attacked her; she punched her so hard she knocked her flying; she broke Julie's cheekbone and almost cost her an eye. My dad and I sat with her in the hospital while they treated her; they even had to give her an MRI, because they were afraid she'd sustained brain damage, because her mother had hit her so hard.\"\n\nEmma was open-mouthed at this revelation, as was I. Lena took Emma's hand and squeezed it, then looked up at Nia.\n\n\"Why did she do that?\" she whispered, \"I remember the report; I remember Darryl telling me she was thirteen when she was injured; she was just a little girl, why did her mother do that?\"\n\nJamie took Nia's hand as she bowed her head, but we all saw the tear roll down her cheek. When she spoke, her voice was so low we all had to strain to hear what she was saying.\n\n\"She was an alcoholic; every day, all she did was drink; that's why she left Mark to bring up Julie; he was just a small boy, and she was even younger, but she just left them to one side while she drank...\"\n\nEmma was openly crying now, and I didn't blame her; this was her deepest fear made fact, that she'd left those kids to their fate, and now this...\n\nLena hugged Emma as she wept, and even Nia had tears in her eyes as she watched. Emma finally got herself under control, and once more faced Nia.\n\n\"There's more, I know this isn't the whole story, please, finish it...\"\n\nNia tried to speak, but she seemed to have trouble swallowing, so Jamie hugged her, then took up the tale.\n\n\"When they were older, their mother accused them of being...together, went into a frenzy and kicked Julie out, but what she did to Mark...\"\n\nHe looked away for a moment, tugging his collar, obviously uncomfortable with what he had to say, but he ploughed on regardless.\n\n\"She told him that if he didn't leave immediately, she was going to the police to have Julie arrested and charged with...with incest, and threatened to petition to have her placed on the Sex Offenders Register, to get her sacked from her job, to ruin her and throw her to the wolves, so Mark left. But she kept him in a stranglehold; every day he had to call her from his office here in Bristol, every night she called him at his flat, seven days a week; if he missed one call, she was going to the police to have Julie arrested and charged. Mark brought Julie up, he was all she had, and he wasn't going to abandon her, so he did what she wanted.\"\n\nHe paused to clear his throat, an expression of distaste on his face.\n\n\"It got so the poor guy started thinking about killing himself just to get away from under her thumb. She almost drove him mad, and yet she kept on doing it. She was going insane, you see; Alcohol Related Dementia, Korsakov's Syndrome, call it what you like; she blamed Julie for her husband leaving; she even told Julie she should have used a twisted coat-hanger when she found out she was pregnant, any way it took to get rid of her. How can you tell your own child something like that?\"\n\nLena and Emma were immobile, open-mouthed, shock and outrage on their faces as the whole shocking, terrible story unfolded, just as I was shocked and horrified; no wonder Nia and her mother had disavowed all knowledge of Julie and Mark, given the monster their mother, my aunt, had been; for all they knew, we were just like her.\n\nI felt I had to say something in the silence that had fallen.\n\n\"How long had all this been going on?\"\n\nNia shook her head and flicked her hair back over her shoulders.\n\n\"For Julie? All her life, but at least she had us; any time she needed to, she could come running, and mummy, daddy, me, we were all there for her; it's Mark who was hurt the most. She never allowed him to have friends; how could he bring friends home when she was sprawled drunk on the couch? He was lonely and alone all his life, and that's how she abused him. Even when he came here, he couldn't go out, he couldn't find a girlfriend, have a life, make friends, because he had to be here to take that damned phone call every night to prove he was here and keep Julie safe! Even when he was grown the abuse didn't stop, he couldn't make it stop, not if he wanted to keep Julie safe!\"\n\nHer eyes were flashing, and I realised she was furious. Jamie pulled her closer, and she buried her face in his neck while she trembled. \n\n\"Sshhh, it's over now, they're safe, it's over babe.\" He whispered, but Nia pulled away to glare at him.\n\n\"No it's not, not for Mark! It'll never be over for him, not after what she did to him! Mummy told me ...!\" she caught herself and buried her face in his neck once more.\n\nI realised I was holding Lena's hand, both of us needing human contact in the midst of the emotional turmoil in the room. \n\nEmma was twisting and coiling her handkerchief, obviously wanting to ask Nia something. Jamie noticed, and nudged Nia, who quickly wiped her eyes and composed herself.\n\n\"Do you have a picture of ...of Julie, or Mark? They were so small the last time I saw them, so young, I would so like to see what they look like now...\"\n\nNia nodded and opened her purse, pulling out a digital camera and a photo wallet. She took out a photograph and passed it to Emma\n\n\"This is our school picture, when we were eleven, that's Julie, standing next to me.\"\n\nI peered at the picture, seeing a small girl with long, platinum-blonde hair. She looked so much like how I imagined Mo-Mo was going to look, and even Lena saw it.\n\n\"This is a baby picture Mark managed to find.\"\n\nLena looked at it and gasped. Nia looked puzzled at her reaction, so Lena stood up and picked Mo-Mo's picture off the mantelpiece. When Nia saw both pictures side by side she gasped too; they could have been sisters, the same white-blonde hair, the same green eyes, the same expression as they giggled for the camera. Sure, to me, Mo-Mo looked like Lena, but the resemblance to Julie was also apparent now that I could see them both side by side.\n\n\"This is my Maureen, Mo-Mo to family and friends, her grandfather is Emma's brother, Darryl's biological father. That should prove they're family.\"\n\nNia studied the two photographs raptly.\n\n\"I'll say!\" she breathed, \"It's uncanny, look at them! Look at this, though.\"\n\nShe snapped-on the camera and flicked through the pictures until she came to the one she wanted.\n\n\"This is Mark...\"\n\nThe man in the picture could almost have been the younger me, but with grey eyes; everything else was me; same hair, same expression. I stared at my double, while Lena flicked back and forth between the two of us, also unable to believe what she was seeing.\n\n\"He looks just like you, like Robert...\" she breathed, and I nodded, as did Emma, smiling even as she gazed with tears in her eyes at the man she'd last seen as a small boy.\n\n\"I don't see his father at all, nothing,\" she marvelled, \"only Robbie, and Darryl, and my dad. He has his father's eyes though. Are they happy now? That's all I ever wanted to know. I don't mind if I never meet them, just so long as I know they're both happy.\"\n\nNia nodded.\n\n\"They're happy; poor Mark's still trapped inside whatever it was his mother did to him, but Julie's helping him out of that. Their mother's dead now, she can't hurt him anymore, and they're both free of her. Julie's happy, I promise you.\"\n\nI had one question I still needed an answer to.\n\n\"My friends at St. Georges unearthed a request from Croydon University Hospital Ante-Natal clinic for Julie's records; does she have a baby?\"\n\nNia and Jamie exchanged glances, then nodded.\n\n\"She has two, Nia...and Markie. Markie's two and a bit, the same age as mine, and Nia's just over a year old now...\"\n\n\"Is she married now?\" asked Lena, and Nia shook her head.\n\n\"No, but she and Ma...her partner are happy, and very much in love.\"\n\nLena looked at me; she'd caught the correction as well; Nia had almost said 'Mark'; something else was going on here. Jamie jumped in while Nia covered her confusion.\n\n\"Darryl, you say Julie's uncle Robert is your father, and he was a Fraser; if I'm not prying too deeply, why is your name 'Morgan'?\"\n\nI spent the next couple of minutes explaining to him the circumstances of my birth and upbringing, and why I carried my maternal grandfather's name, not my father's.\n\n\"That's quite a story,\" he commented, \"he died in the Falklands? I was there my last year of uni, working with a geophysical team, prospecting for oil. It's odd how our two families keep intersecting and going off again. Mark kept getting mistaken for you, and it freaked him out!\"\n\nMy ears pricked up, and my interest must have shown, so he elaborated.\n\n\"Mark's brokerage firm has an office in Clifton, well, Redland, actually, and he comes down once a month; he'd go for lunch in one of the pubs behind the Royal Infirmary, and someone would come up to him and call him 'Darryl'; poor guy was getting freaked about it. I guess people were mistaking him for you, so do you work in Clifton?\"\n\nLena grinned.\n\n\"Dar works at the Bristol Royal Infirmary; it was probably only going to be a matter of time before he and Mark walked smack into each other in a pub around there!\"\n\nBoth Jamie and Nia looked interested, so I elaborated.\n\n\"I'm the Junior Surgical Consultant on the Cardiology team. I trained at St. Georges, and lived in a flat on one of the streets off Tooting Broadway. I used to go for a drink on my evenings off at 'The Windmill' on Clapham Common, because the pubs at Amen Corner and Tooting Broadway were just too rough, and I usually parked my car on the street where you live; again we go back to what you were saying just now, about our lives constantly intersecting then going off again at tangents; I may even have seen Julie a dozen times when I was a med student and never knew who she was; she would have just been a little girl then, so I probably wouldn't even have noticed her.\"\n\nWhile I'd been talking, Lena and Nia kept exchanging glances; there was some kind of communication going on there, and when I cocked an eyebrow at her, she nodded, that expression she get's when she knows she's right settling on her. She leaned forward, her hand finding mine again as she spoke.\n\n\"Nia, Jamie, about Julie and Mark; they're together, aren't they? Don't worry, I'm not condemning, neither is Darryl, heaven knows we should be the last ones to point and accuse, but they're together, and that's why they're happy, isn't that right?\"\n\nNia and Jamie exchanged looks, then Jamie answered.\n\n\"Yes, they are; they love each other, they have two lovely kids, they have us; their mother tried her damnedest to destroy them, and now she's dead and they're happy; maybe there is such a thing as natural justice.\"\n\nEmma looked sadly at them.\n\n\"Sandra did terrible things; she made her children hate and fear her, but she was still my little sister, and I loved her. Tell me, please; how did she die, and when?\"\n\nJamie looked uncomfortable, but plunged on.\n\n\"She was sectioned under the Mental Health Act, and they confined her in a secure nursing home in Richmond. Her dementia had progressed to the point where she'd lost all touch with reality. She was there for about a year, and she died just two days after her granddaughter was born, in 2012; she's buried in Mortlake Crematorium, and no, Mark and Julie have never been to see her; they have no reason to. I'm sorry, but after what she did to them, the mess she made of their lives, the evil things she did to torture and torment them, Julie and Mark want nothing more to do with her. I'm so sorry, I wish I could have spared you that...\"\n\nEmma nodded, ashen-faced, all through this, tears running down her cheeks, and Jamie, to his credit, looked ashamed that he'd been the one to tell her. Nia suddenly leaned forward and took Emma's hand between hers, sympathy for her evident in her look.\n\n\"I'm sorry you had to learn this; it's not something anyone would want to hear, and we took no pleasure telling you, believe me, but it's gone now, that was the past; Mark and Julie survived, they have loved ones now, and people who love them. You've probably guessed by now that we came down to check you out. Julie and Mark are part of my family; my mum has taken them as her own kids now. Now Mark's my brother, and Julie's my sister, and we look after our own, so we came here to meet you and find out for ourselves what kind of people you are. What we found is a concerned, caring, loving family, and we'll be telling Julie that; perhaps it's time her family was put back together.\"\n\nEmma smiled sadly.\n\n\"Mark and Julie are happy, really? You promise? From what you say, all my worst fears for them came true, but now they're happy together, yes?\"\n\nNia nodded, her own smile gentle and understanding.\n\n\"They're very happy, I promise you.\"\n\nAt that moment, Mo-Mo made her presence felt, grizzling as she woke from her nap in the other room. David was with mum, and not due back from Play-Centre until after lunch, so we just had the one to deal with. Lena went to get her, and when she brought her back into the room, Nia was immediately all over her.\n\n\"Jamie, look, she looks like Nia!\" was her comment, and when Lena offered to let her carry Mo-Mo, Nia jumped at the chance, rocking her as she baby-talked to her, with Jamie grinning as he watched.\n\nI also grinned as I watched Nia rocking my daughter.\n\n\"Careful, she's teething, so her tummy's a little delicate right now; carrying her's a bit like juggling eggs; one wrong move and it's everywhere!\"\n\nNia grinned back at me.\n\n\"Don't worry, I have twins, they did this together; three months of no sleep, ice cubes, nuclear-waste Pampers, and drooling, been there, done that!\"\n\nWhile Lena, Emma, and Nia fussed over Mo-Mo, Jamie and I chatted about Julie and Mark. I was curious about my cousins, about what they were like, especially Julie.\n\n\"What's she like, Jamie, really?\" I asked.\n\nJamie leaned back and smiled gently.\n\n\"She's tiny, only about yea high, but she's tough; I suppose she had to be, but she's a lovely girl, pretty as they come, and Mum adores her. Mark calls her 'Tinkerbell', and that's what she's been all her life to him. She and Nia have been friends since they were little girls. They went through school together, and to be honest, the only real mum she ever had was Nia's mother. Nia's parents are Julie's parents now, her kids climb all over my da...I mean Nia's dad like he's their own personal playground, and she and Mark are in and out all the time; they have real family now.\"\n\nHe sighed and took a sip from his coffee.\n\n\"Mark brought her up all by himself; he was just a little boy himself, only three years older than her, but he had to do everything for her, from the time she was a toddler, and that left no time for him to be what he should have been. Mum's heartbroken that the one thing she can't do is help him; only Julie can do that; all we can do is sit on the sidelines and be there when they need us.\"\n\nA thought suddenly struck me, dredged-up by that slip he'd made when talking about Nia's parents.\n\n\"When you say 'Mum', you mean Nia's mother yes?\"\n\nHe darted a look at me and looked away again just as quickly.\n\n\"Yes, of course, Nia's mother...\"\n\nI smiled to myself and decided to try one last question.\n\n\"It's just that I couldn't help noticing you both have exactly the same eyes..?\" I prodded gently, and once again Jamie darted that quick glance at me, then smiled.\n\n\"Yeah, funny that!\" he grinned, confirming my suspicions; he and Nia were related too, just how closely was of no interest to me; it was Julie and Mark who concerned me, but I found myself feeling grateful that, given the awful life they'd had, and the neglect and cruelty they'd suffered, there were at least two good people who obviously cared deeply about them. \n\nJamie and Nia finally left after promising they'd do all they could to persuade Julie to meet with us. She borrowed a picture of Mo-Mo to show her, and took a picture of Emma, and some of Lena and me, and she seemed confident that Julie would agree.\n\n\"Julie's a nice girl; even with all that happened to her, she's not bitter or twisted inside. Her mother terrified and ostracized her, but it never left her all bent and twisted inside, just wary of any kind of family entanglements, but now I think she's ready to start finding her family again. Don't worry, when she sees these pictures, I think you'll be hearing from her again.\"\n\nWe left Emma in the study for the rest of the afternoon, flicking again and again through the pictures of Julie, Mark, and their children that Nia had downloaded to my laptop, tears in her eyes but a smile playing on her lips as she finally saw them again after so long.\n\nJULIE:\n\nNia called Saturday lunchtime to say it went well, and she wanted to talk on Tuesday when she and Jamie got back from Bristol, which didn't help; three days of second-guessing her and wondering how it went was going to drive me up the wall, and take Mark with me, but there was nothing I could do about it, so I decided to be strong, just wait it out, and not let it get to me. \n\nThat lasted two hours, then I bundled Nia into her pushchair with Markie to keep her company, and beat it for Mummy's place. I think she knew I was coming; the table was set for three, and she had that look that told me she knew exactly what was going through my mind. ",
        "Mummy reads Jamie's mind as a matter of course, and had been doing it since he was a toddler; now she was doing it to me; more proof, if any was needed, that she was my mum now. After the usual superb lunch, Markie took Dada Morrison for a tour of the garden and greenhouse, leaving Mummy and me in peace to talk, with Nia, as always, perched comfortably on her lap. Mummy always has this air of distracted attentiveness when she has the grandchildren with her; she looks like she's miles away, totally absorbed in spooning apricot custard into little mouths, and suddenly she'll ask a sharp, insightful question, demonstrating yet again that her multi-tasking skills are far superior to mine, or to anyone I knew.\n\n\"Why you worry for nothing, Julie?\" she asked me gently. \"Nguye't and Jamie not back until Tuesday, she talk to you then, do not fret; if anything is wrong she tell you, do not worry, little girl!\"\n\nI couldn't help worrying though; these people were my family, but they were strangers. What if they were like my mother? What if they were as big a bunch of bastards as my mother had been? What was I letting myself in for? I still had time to grin at her calling me 'little girl', though, and she smiled back, smoothing the hair back out of my eyes.\n\n\"You think it funny, little girl? I see you today, and you are mother now, but I still see little girl who did not know how to laugh and be happy, just like when I see Jamie now, I see little boy sister give me so long ago; he is still same, still my little boy, and you are still same little girl, still so young, so full of fear and doubt. Do not be; do you think Dada, or me, or Nia let anything happen to you and Mark? Nia my daughter, but you are my little girl, and I say to you now, there is nothing to fear from these people, I promise you!\"\n\nI tried again to articulate what was troubling me, but Mummy was dismissive of my fears.\n\n\"Julie, I meet this man, he sit where you sitting, he tell me about himself, he not try to lie or not tell whole truth, and I believe him; he have honest eyes, just like Jamie, like Mark, too. Jamie meet him, Jamie like him; trust Jamie, he your brother, he not let anyone hurt you!\"\n\nI relaxed somewhat; Jamie may be big and amiable, and fond of silly jokes and daft pranks, just like Dada Morrison, but he also has a mind like a precision instrument, and anyone trying to put one over on him soon learns the error of his ways. Nia's even less accepting than Jamie, and much more suspicious, but just as perceptive (no surprises there, they both get it from Dada Morrison), so if they were satisfied with this Darryl Morgan I should be as well. But I worried anyway. \n\nBy the time Mark came home, I had dinner well under way, both girls were napping in the play-pen, and I was beginning to relax. Mummy had put my mind at ease somewhat, but the curiosity, mixed with trepidation, still squirreled around inside me. Mark could tell I was on edge over this whole thing, and while his solution to calm me down, slipping his hand into my panties and stroking me gently while he nibbled my neck, had a certain appeal, I was still far too highly strung to really enjoy my own Man-tottie groping and feeling me up.\n\nAfter dinner, we put the children down with their bottles, and once they were asleep, Mark carried them up to their beds, two little golden heads lolling against him as he tip-toed upstairs. I cleaned-up while he was gone, then tried to curl up with him and watch some TV, but I still couldn't relax. \n\nEventually Mark got fed-up with me fidgeting next to him, so he clicked-off the TV, picked a book off the shelf, kissed the top of my head, and disappeared upstairs to read while I rearranged the kitchen and cleaned-up yet again.\n\nI finally gave up trying to distract myself and followed Mark, finding the bedroom in darkness as I slipped in. As I began to undress, Mark suddenly slid out of bed, sitting up on the bed and switching on the bedside lamp as he pulled me close.\n\n\"My job, Tink!\" he murmured, squeezing my bum as he nuzzled between my breasts. I held him close and twirled my fingers in his soft hair as he unzipped my skirt and pulled it down before once again squeezing and massaging my bum cheeks and the tops of my thighs.\n\n\"You need to relax, little girl!\" he whispered, making me gasp as he gently nipped my nipple with his lips through the fabric of my blouse, sending a sudden wave of warmth through me, making my pussy itch. \n\nNow his hands were doing more than just squeezing; now his fingertips were running up and down inside the cleft of my cheeks, his fingertips making me jump every time they brushed against my suddenly sensitive rosebud. My nipples were stiffening too, rubbing unbearably against the cups of my bra.\n\n\"Mark...\" I murmured, and he read my mind, his hand sliding up inside the back of my blouse to unhook my bra and release the pressure against my nipples, before slipping around to gently squeeze my breast as his thumb brushed my nipple. For a second I saw stars as all the sensations collided together, then my head cleared as I began to unbutton my blouse, freeing myself so Mark could suck, lick and caress my stiff nubs with his talented lips.\n\nMark pulled my blouse off, and let my bra drop to the floor as he pulled me closer to lick and flick my nipples with his tongue-tip, sending sharp little jabs of pleasure running through me. As he did, he pulled the waistband of my panties; I thought he wanted to pull them off, then I felt them rip as he tore first one side then the other, literally tearing my panties off.\n\n\"If you'd asked nicely, I'd have taken them off, Lost Boy!\" I whispered into his hair. His only response was to suddenly yank that torn scrap of cloth from between us, and pull me onto his lap to sit astride him, with that thick column of flesh suddenly rubbing against the lips of my throbbing pussy. As our lips crushed together, I felt him slowly thrusting against me, my pussy seeping and coating him with my juices as he rubbed himself against me, torturing me as the ridged underside of his cock rubbed repeatedly against my tender clitoris, stoking the fires to an almost unbearable level.\n\n\"Mark...!\" I moaned, rubbing right back against him, feeling my labia dragging along his length as I slid my wet gash against him. My lips found his, and we kissed, hard, our lips sealed together as he held my cheeks tightly, holding me against him as we rubbed together, until I couldn't take it any longer. I raised myself up and slid him into me, gasping at the feel of his thick, hard muscularity filling me completely, the plum-sized head of his cock bumping against my cervix and sending waves of lustful pleasure racing through me.\n\nMark squeezed my bum even tighter as I rode him, his hands pulling my cheeks apart and stretching my anus obscenely as I humped myself on top of him, while my arms were locked around his neck and my lips were glued to his. Harder and faster we humped, Mark thrusting into me as I drove myself down onto him, the first coils of orgasm already uncurling inside me. \n\nWhen it came, it blasted a path of white hot fire clear through the middle of me, and I bit down on his shoulder to stifle the scream as my orgasm raged and burned through me. Mark gave a hoarse, guttural cry as he, too, climaxed, his cock swelling and pulsing as his hot semen boiled inside me, jet after jet bathing my cervix in his essence and filling me with his life.\n\nMark lay back on the bed, pulling me down with him, his arms firmly around my waist as his still stiff cock continued to fill me, every movement against him a delight as my clitoris rubbed against that wiry golden thatch of his pubic hair. We lay there, mewing contentedly as the rush of lovemaking gave way to the languor of afterglow, Mark's softly insistent hands rubbing my back, squeezing my bottom, or, increasingly, pulling my cheeks apart and brushing suggestively over the tender tightness of my rosebud. His intentions were so transparent, but I knew he'd never force me to do that, much as I liked it, so I let him off the hook.\n\n\"Something on your mind, Lost Boy?\" I husked in his ear, squeezing him with my pussy muscles. \"What's the matter, I thought you were feeling lucky?\"\n\nI raised myself up on my elbows to look him in the eyes. Mark grinned and pulled me back down to him, kissing me as he once more squeezed and massaged my bum. I broke our kiss to nip his bottom lip.\n\n\"Well, are you going to lube me up, or are you going to try and shove that thing in dry? Clock's ticking, Hotshot, come and get it!\"\n\nI could feel him grinning as he grabbed my bum and slowly slid his thick cock out of me, all my nerve endings thrilling as he did so, and that momentary feeling of desolation and emptiness before he rolled me onto my back and dipped his finger into my gaping pussy, then slowly rubbed around my tight hole, wetting and lubricating me with our own mixed juices. \n\nAs I grinned in anticipation, he pushed his finger into me, making me first gasp with the sudden invasion, then smile as I waited for him to make me feel good. Mark showered my face in small kisses as he gently frigged my bum, sliding his finger in and out, then a second finger, making me gasp and giggle as he stretched me open a little more, getting me ready for what was coming next.\n\nAs he frigged me, I squeezed and stroked his fat cock, rubbing my thumb over the crown to spread the lubricant oozing from him all over it, making him glossy and slick, shining him up for what I wanted him to do with that lovely appendage. Finally I couldn't wait any longer.\n\n\"Mark...\" I whispered, and he grinned at me as he positioned himself over me. I held him and aimed him just right, and he leaned down and clamped his mouth over mine as he slowly slid his big cock into my tight bum-hole, stretching me so wonderfully. All my nerve-endings thrilled and sparkled as he fucked me the way I loved most. Every time we did this, it was like the first time, all our connection and need for each other melding together as we joined in such an intimate and taboo way.\n\nHe went in the way he always did, slowly and carefully at first, giving me time to accommodate his girth and enjoy the sensation of being stretched by him, which for me was the pinnacle of what we did here; that, and the knowledge that he only wanted to do this with me, and only me. \n\nThis was one of our favourite ways of making love, not having sex; it was ours, and no-one else could ever have had that from either of us, not even when we were apart, not even David, the man I'd once thought could be the one to help take away the pain of losing Mark.\n\nAs I relaxed he fucked me harder and faster, until I was wrapped around him, my legs locked around his waist, lips pasted to his, humping madly as he rammed that thing into me, his strokes getting shorted and harder. Knowing he was approaching his climax stoked the fires inside me, and so we thrust and pounded against each other, gasping and moaning. \n\nFinally, I couldn't hold back any longer, screaming into his mouth as orgasm once more burned and surged through me, switching every nerve ending in my body to overdrive. As I came, Mark groaned as I tightened around him, his cock swelling to fill my rectum as I felt him pump deep inside me, again and again, filling me completely with his thick, hot semen.\n\nWe slumped down together, Mark a dead weight on me as his heart thundered against mine, our sweat gluing us together while we panted and sobbed for breath. I only ever came so seismically when Mark fucked my bottom like that. That was the gift my Lost Boy gave me again and again, and I never tired of it.\n\nMark groaned and rolled off me, holding me so I rolled with him, ending up with me lying on his chest while his hands clamped hold of my bum, their customary resting place, and his still-hard cock firmly ensconced in my bum, tiny, thrilling muscular tremors rippling through it, keeping me on the boil. After a few minutes of warm silence, Mark kissed the top of my head, his way of getting my attention.\n\n\"Wassamatter, Mark...\" I slurred, almost asleep, tired-out after our recent exertions, but still conscious of that thick piece of man-meat buried inside me.\n\n\"Are you relaxed now, Little Plum?\" he murmured, his warm hands stroking my back, his fingers drifting now and then to the very apex of my bum crack, and gently rubbing my tailbone, something I find very relaxing. I grinned at his question; Mark had some very...definite ways of relaxing me, no two ways about it!\n\n\"Relaxed and happy, Lost Boy!\" I replied, kissing his chest and resting my head on him, listening to his heartbeat. Markie does that when she's feeling sleepy; she'll climb on him and plonk her head on his chest, and two seconds later, she's out like a light. He was having the same effect on me, but before I fell asleep, I had something I wanted to say, and something I wanted to ask him. \n\n\"Mark, these people in Bristol, this Darryl and Emma, and any others who crop-up, they may be very nice people, and I know they're relatives, but I want you to know they're not my family; my family's right here; you, the girls, Mummy, Dada, Nia and Jamie, they're our family, and I'll never forget that; they were here when we needed them, and I'll always owe them for that. I just thought you should know.\"\n\nMark hugged me close as he spoke, his voice rumbling in his chest.\n\n\"Tink, I know you needed to know, I sort of did as well, and I know how you feel about everyone here; I feel exactly the same. But, these people in Bristol, they deserve a chance, too; they never did anything to us; mum made sure they never even knew where we were, she kept them from us, and because she did, she hurt them too. Mummy-Anh says they're good people; I believe her. Let them in, Tink, it can't hurt, and you never know, you might even like them.\"\n\nI looked at him in astonishment, seeing only sincerity in his eyes, and smiled as he lightly pinched my bottom.\n\n\"There's something else, Lost Boy...\" I began, once again leaning up on him so I could look into his eyes. \"It's about us, Mark, and what comes next.\" \n\nHe looked puzzled, but waited while I looked for a way to say what I wanted to say.\n\n\"You are happy, aren't you? I mean here, now, just being a normal, family man, two kids, car, home in the suburbs, yes? You don't wish things had been...different, not like this?\"\n\nHe smiled and jiggled my bottom.\n\n\"Of course not, Wee Wendy; I have you, so I have everything I want. Yes, I'm very happy. What's the matter, Tink?\"\n\nThis was it. I drew a deep breath, and plunged on.\n\n\"Baby, we're settled now, we have a home of our own, that we own, you're moving up the ladder at work, we have everything we want, but there's one more thing. Mark, I know we've only talked about this in passing, but I've been thinking about this a lot, and, well, Markie will be going to pre-school pretty soon, and...\"\n\nMark cocked an eyebrow at me.\n\n\"Go on, Tink...\" he murmured.\n\n\"...and I want to have another baby!\" I gabbled, getting it all out in one breath. Mark pulled me up closer to him, and kissed the tip of my nose.\n\n\"Are you sure, Little Plum? Nia's going to be a real handful in a year or so, Markie even more so. Are you going to be able to manage her, and Markie, and cope with a new baby as well?\"\n\nI looked into his eyes, seeing nothing but concern there.\n\n\"I'll be fine, Mark, I managed with Markie and Nia, I'll cope, don't you worry; I have mummy as well, and Nia, and Shelagh, everyone I need, Mark, and I so want this baby, for me...and for you!\"\n\nMark smiled at me, his hair once again tumbling down over his eye, making me itch to sweep it back up and off his face again.\n\n\"For me...?\" and it was my turn to grin.\n\n\"Well, who knows, maybe next time one of your boy-wigglers will get through...!\"\n\nHis smile became wistful, faraway.\n\n\"A son...\"\n\nAs he spoke I felt him stiffen even further inside me, and as our lips met I once more began slowly sliding up and down on him, feeling the thrill once again as his ridged cock again rubbed all the nerve endings in my anus. Mark clasped hold of my bum even tighter, pressing me tightly against him, and began slowly thrusting into me as I rubbed myself against him, the tangle of wiry hair at the base of his cock just enough to scratch the itch in my throbbing clit. This way always set me off quickest, and as the sensations rippled and surged through me, I could feel the throbbing of his cock as he fought to hold back, to wait for me. \n\nIt took only a few thrusts from him, combined with the delicious friction against my clit, before that feeling once again welled-up inside me, huge and unstoppable. Mark felt it too, and as I once more groaned and trembled in ecstasy, hot juices flooding out of me and soaking him, Mark gave a strangled groan as his cock leaped like a live thing inside me, swelling up to fill me completely as powerful spurts of hot semen pumped into my arse, his cock hammering me as he jammed his seed deep inside me one more time.\n\nI pulled him into the shower, after what we'd been doing we needed it, and once we were clean and fresh, he ambushed me again, holding me flat against the cool tiled surface as he once more hammered his cock into my willing pussy, pumping yet more of his rich, creamy, life-giving spunk into me; the thought of making another baby with me had hoisted his libido through the ceiling, and now he couldn't keep his hands off me; not that I was complaining, you understand!\n\nAt last, dried off and almost too tired to move, I slid back into bed with my darling Lost Boy, filled with love and hope for our future. Mark pulled me closer, and kissed me gently, caressingly, all his tenderness and love in his kiss. I kissed him back, and held him close.\n\n\"Make a baby in me, Lost Boy, make a baby soon!\" I whispered.\n\n\"If you're sure about this, Tink...\" he murmured, but of course I was sure; this was what my Lost Boy needed; it was what I wanted to give him. Mummy was right about one thing; I had the means to heal him, but so did his children, now and future; they would be the key to his heart, they always had been, of that I was certain; it would be our family, our children, who would help show him the way to let that little boy out again.\n\n*\n\nTwo days later, Nia came to see me, to tell me about Darryl, his family, and my aunt Emma. She told me nothing new, but then she showed me something that made my blood freeze; it was a picture of my aunt; for a moment all my long-forgotten fears stirred deep inside me. Emma looked so much like mum that I almost threw the camera down; my demon was back, and she was right there, in the palm of my hand! Nia took me by the wrists and held me as the remembered fears threatened to rise up all over again; she was dead, she couldn't hurt me anymore, yet she was there, smiling at me...\n\n\"Jules, JULES!\" Nia's voice penetrated the fog.\n\n\"Jules, it's not her, Julesey, let it go, it's not her, sweetie, you're okay, it's not her!\"\n\nFright and hysteria threatened to bubble over inside me, and only Nia's calm, strong presence kept me with her; I wanted to run, to hide, to deny her, to scream defiance at her, to make her go away, to send her back to Hell with all the other hell-bitches. Nia held me as I trembled.\n\n\"I'm sorry, sweetie, I didn't think...perhaps you're not ready to meet them just yet, maybe a little more time, yes?\" she murmured, and I nodded, still not trusting myself to speak. Finally I stopped trembling, and Nia pulled a tissue from her pocket so I could dry my eyes. She snapped the camera off, and grinned at my quizzical look.\n\n\"Another time, eh, Julesey? I've got some other shots, when you're up to it, you can have a browse; no pressure, hun. I've got a shot of your cousin, and his wife, who are both very nice people, by the way, and I think you might recognize Darryl...!\"",
        "My curiosity was piqued, and I held out my hand for the camera.\n\n\"Don't worry, Nia, I won't sling it across the room! I just got caught unawares...\"\n\nNia looked thoughtfully at me, then nodded and snapped the camera back on. She flicked through the pictures until she came to the one she wanted, and held it up for me to see. I gasped out loud; the man in the picture was Mark! A few years older, green eyes, like mine, not grey (and now a half-memory prodded at me for an instant, something about Mark, with green eyes...), but still my Lost Boy, so similar I could see how people could mistake Mark for him. I marvelled at his features, his expression, so like Mark's, his hair a shade darker, perhaps, but this man was family, close family, and now I knew that for sure. The next picture was of his wife, 'Lena', Nia called her; she was truly beautiful, with long, straight, bright chestnut hair, vivid blue eyes perhaps a shade more violet than Nia's, a sweet, generous mouth, and a lovely smile; she looked like Cassadee Pope, on the cover of her 'Frame by Frame' CD in dada Morrison's collection. Whatever my cousin was like, he had exquisite taste, that was for sure...\n\n\"She's gorgeous...\" I murmured, and Nia nodded. \n\n\"Yes she is, but she's a nice girl, very nice indeed. She and Darryl are a friendly, happy couple. You could do worse than meet them. Which reminds me...\"\n\nShe rummaged in her purse and pulled out a picture.\n\n\"Look at this; this is their baby, Maureen; they call her 'Mo-Mo'.\"\n\nI looked and almost gasped out loud again; she was almost the double of my little Nia! Same grin, same dimples, same bright emerald eyes, same hair. The two of them could pass for sisters any day of the week. I glanced up at Nia and she was grinning.\n\n\"They're good people, Hun, they're all good people; your aunt only wanted to know you and Mark were okay, that's all; she thinks she abandoned the two of you when you were toddlers, and she's been blaming herself and looking for you ever since; she may look like your mother, but she's nothing like her, I promise!\"\n\nI flicked back to the picture of Darryl.\n\n\"He works in Clifton, doesn't he?\" I asked, and Nia nodded.\n\n\"He works at the hospital there, near Mark's office, which is why people were confusing them.\"\n\nI cocked an eye at her.\n\n\"What does he do at the hospital? Is he some kind of manager or something?\"\n\nNia grinned again.\n\n\"Hardly, Jules; he's a heart surgeon...\"\n\n*\n\nDARRYL:\n\nSummer was waning, the school holidays were almost over, and the trees in the garden were decidedly more golden than green when I finally got the call I'd been hoping for all summer long. Lena had taken the children to Lizzie's place for a week, to spend the last of the summer heat at the seaside. I'd had to pass; being junior Consultant still meant I was low man on the tree, and Member of the Royal College of Surgeons or not, I still had to take-up the slack in the Cardiovascular Surgical Unit, which meant no Summer holiday for me. \n\nTo be fair, Portishead, where Lizzie lived, was only a short drive down the M5 motorway from Bristol, not exactly the other side of the world. Still, it meant David and Mo-Mo got fussed-over inordinately by Lizzie, Allie, and Marcus, my little brother, who put up with the inconvenience of having the kids there if it meant he could gaze adoringly at Lena, his first crush.\n\nI have to admit, Lena was worth the gazing; well into her first trimester, she absolutely glowed; some women exude an almost tangible desirability when they're pregnant; Lena was one of them. Not a day went by that I didn't pause several times to just take her in; her calm radiance, her serenity, her almost overwhelming, unconscious sensuality, all of them beat against me; like a man knows where the sun is even with his eyes closed, so I always knew where Lena was, her presence filling and warming me every time I laid eyes on her. \n\nThe doctor in me knew it was because of the pheromones she was giving off, my limbic system reacting to her the way it should to my chosen mate, but the man in me just wanted her every day, in every way; she was the sum total and utter zenith of female desirability to me, and I couldn't get enough of her.\n\nPeriodically, she would glance up and see me gazing longingly at her, and she would smile that gentle, secret, enigmatic smile of hers and go back to what she was doing, knowing that later, when we were alone together, we would make love as though there were no tomorrow, fierce, heated lovemaking, our bodies burning in the furnace of our passions, then gentle, languid kisses and caresses, renewing nightly the bond that made us one. \n\nSo our summer progressed; every day, Lena seemed more and more beautiful, and every day she blossomed further as impending motherhood once more took her over. With the changes that imposed on our immediate family, my lost family seemed more remote with every passing day, as I continued to hear nothing from them. Lena calmed me when it agitated me, but as time progressed and I still heard nothing, it started to become less and less important to me. I had other priorities now; my own children to tend, and a new baby on the way, so with all this, Julie and Mark were the furthest things from my mind when I finally heard from her again.\n\nI was alone at home, the night before Lena was due back; mum was working the night shift at the Renal Unit, so I was fending for myself, waiting on a takeaway dinner to nuke in the microwave, when the phone rang. Thinking it was Lena, I rushed to answer it, only to hear a voice I'd almost forgotten about.\n\n\"Darryl? Hello, it's Julie, Julie Jameson. How are you?\"\n\nI was momentarily wrong-footed, but managed to recover quite well, I thought.\n\n\"Julie, it's nice to hear from you again. We're all fine, how have you been?\"\n\nShe sounded a little hesitant, but kept going.\n\n\"We're fine, Darryl, all of us, thank you for asking. I guess you know why I'm calling; Mark and me, well, we had a long talk, and we had a think about some things, and...and we'd like to come and see you, if you don't mind?\"\n\nOf course I didn't mind, I didn't mind at all! At last, I was going to meet my long-lost cousins...\n\nWe talked a little while longer, arranging a date and time, then she had to go. I went to bed a happy man; Lena and the kids would be home in the morning, and Julie and Mark would be here in a few days; at last, my family was falling back into place.\n\n*\n\nHaving Lena home after a week away was like Christmas in August; as I walked in the door after work I knew she was there. The whole house suddenly felt like her again, and Darryl Jr. also knew; for a week I'd been wanting her in the worst possible way; my days had been filled with need and my nights filled with longing and thwarted sexual ambition, and now I had her back, and all I wanted was her, naked and delectable, as I pounded myself into her. \n\nDavid came running to hug my leg, chattering away nineteen to the dozen about the beach, Marcus, the beach, Auntie Lizzie, the beach, ice-cream, the beach. Mo-Mo jumped and gurgled at me from her playpen, bouncing with excitement to see her daddy again. For a few minutes I completely forgot what I wanted; these were the two most precious things in my life, and I immersed myself in my babies, suddenly hugely glad and relieved I could hold and hug and kiss my children again.\n\nLena finally came to my rescue as the kids mobbed me, giving me space to sit and once more look at and enjoy my family, finally content and at peace. Half an hour later, David curled up on the easy chair, and Mo-Mo fast asleep in her playpen, I finally got to hold and squeeze my own darling Lena. As I held her, the week of longing and loss melted away, but now a different need made itself felt, and Lena, sitting on my lap, knew all about it.\n\n\"Dar, you're incorrigible!\" she scolded, deliberately wriggling on my lap and grinning at my discomfort. I grinned back, completely unabashed; Lena knew how much I wanted her, how much I always wanted her; these were just the opening lines in the script, and we both knew how it would end, but it was still fun to play it out, though!\n\nI pulled her down so I could kiss her properly, my hands wandering over her, my mind in a whirl as I held her again, until she pulled away and nodded at the children, fast asleep though they were.\n\n\"Big eyes and sharp little ears, baby!\" she whispered, so I reluctantly let her go so we could take the kids up to the nursery and put them to bed properly, and anyone who thinks it's easy putting pyjamas on a sleeping four year-old just hasn't lived yet. It's a fascinating puzzle; how can a small child have so many arms, legs, and feet, none of which bend the way you want them to?\n\nWe finally got them into their pj's and into bed and tip-toed out, leaving the door open so we could hear them while I seduced my delicious wife in my den of lust and iniquity...\n\n\"You're a bad, bad man, Darryl Morgan!\" giggled Lena softly as I slid my hands down the back of her jeans and groped her taut little bum, while nibbling her nipples through her T-shirt. She gave the lie immediately by groping my painful erection through the material of my cargo pants, her eyes twinkling as she smiled naughtily.\n\n\"Are you going to fuck me hard, Doctor Morgan? I haven't had sex for ages, my husband just works all the time, he even sent me away so he could work even harder! Please say you're going to give me a complete internal exam!\"\n\nHow I didn't just tear her clothes off and pound her on the carpet I'll never know, but I managed to restrain myself, even though her nearness was playing hob with my senses, and pulled off her clothes even as she yanked down my pants and squeezed me some more.\n\n\"Someone's been missing me!\" she murmured throatily, kneeling down to slide my shorts down and smile appreciatively at my aching cock.\n\n\"Oooh Dar, is this all for me?\" she cooed, her warm little hands already stroking and gently squeezing me, adding to the agony radiating out from my groin and percolating through my entire body. I could only nod, then groan lightly as she took me in her mouth, her hot moistness sending an electric shock all the way up my spine. Lena knew exactly how much I could take before I, quite literally, blew my stack, and so she suckled and teased, and occasionally nipped, to back me off again until I was a babbling, incoherent wreck, intent on only one thing now.\n\nI helped my wife to her feet and tugged her towards the bed; I had plans for her, after what she'd done to me. Lena sat on the bed and grinned minxily at me, inviting me to do my worst, so I grabbed her behind her knees and yanked, landing her flat on her back with a giggle, her legs over my shoulders as I knelt down to gaze at the inviting landscape before me. Lena jumped when I leaned in and gently blew on her pink, hairless labia.\n\n\"Darryl, don't you dare...!\" she giggled as I did it again, her scent suddenly stronger as she sighed and wriggled. I couldn't resist her any longer, and planted soft little kisses along the insides of her thighs, a small kiss every few inches, making her squirm and giggle as I kissed up one thigh and down the other, pausing only to once more blow gently on her labia, her scent now rich and intoxicating, ramping up my need to taste her, so I did, lapping at the labia swelling and engorging before my eyes. As I licked her, she flowered open, and so I slid my tongue between those tempting lips, tasting her as she gave a soft, shuddering groan, her hands suddenly clamping on either side of my head and holding me in place. \n\nI love doing this with my Lena; when we're joined like this, I know exactly what she wants, when she wants it, and how often; all those little twitches and flickers of her soft skin, her fingers against my face, the sound of her breathing, all these communicate to me what my darling sister is feeling, and still wants from me, and I gladly give it to her; there's never been anyone else for me, and there never will be, and every time we make love, that bond of certainty tightens; she is truly the one and only love of my life. \n\nNow her breathing deepened as my tongue tasted those other places, from the annulus of her tight little rosebud to her stiff, pulsating clitoris. Her thighs tensed against me, the tendons taut as wire and her pulse thundered in my ears as she slowly ascended to that peak. Her sweet, tangy juices filled my mouth as she held me against her, writhing as my tongue and lips caressed and teased her love-bud, feeling the waves of pleasure rippling through her as I pushed her on and on, until she finally broke.\n\n\"Oh GOD!\" she screamed, her pussy convulsing against my mouth as a flood of her sweetness poured into my mouth and over my chin; I held her as she writhed, pulling and twisting her nipples in the transport of pleasure as she hunched her pussy against her, with me lapping-up every drop of her sweet nectar, my tongue flicking and teasing, pushing her higher and higher, until she slumped back, her body trembling and shuddering, her eyes squeezed tight shut, and her fingers digging into the counterpane as the fires of orgasm roared and burned through her, until she relaxed her death-grip and breathed a long, tremulous sigh.\n\n\"I should go away more often, baby!\" she smiled, her skin flushed and glowing, her eyes clear and so vividly blue, and yet again I wondered at how a girl so perfect, so beautiful, so desirable could want someone like me, but I thanked God she'd chosen me. The sight of her spread out naked on the bed, her skin flushed with the after-glow of good sex, her hair spread out in a rich chocolate net across the pillow, was doing all kinds of things to me, and all I could think now was how immensely fuckable she was.\n\n\"Come here, Dar, I want you baby, oh God how I want you!\" she smiled, her hand reaching out to toy with my once more fully erect, pulsing cock. \n\n\"I want this, Dar, I want this now; baby wants to hear boom-boom music; let's play her some!\" \n\n\"Her?\" I grinned, and Lena smiled again as she pulled me closer.\n\n\"Yes, another little girl; I feel just like I did when I was pregnant with Mo-Mo, so I know she's a girl.\"\n\nI slid down next to my girl, pulling her to face me as I kissed her, our lips sealing together with the intensity of our kiss. Lena rolled onto her back, urging me between her thighs, and as I took position between her outspread thighs, she took hold of me, grinning as she rubbed the head of my cock against her red, swollen labia, closing her eyes as she pleasured herself again. I leaned down and kissed her, making her smile.\n\n\"My turn, baby-girl!\" I grinned, and slowly, gently pushed into her. Lena's eyes snapped open as her hips began to move in time to my motion. She pulled me down so she could kiss me, and our tongues fenced and danced as we moved together. I took my weight on my elbows, sliding my arms under her to hold her to me as our hips bucked faster and faster, pleasure boiling inside me as my moment of release neared.\n\nWhen I came, it was as though all my senses shut down, smothered in a white blaze that damped everything, blurring my vision and dulling my hearing, my vision narrowing down until only Lena was in focus, my darling wife, sister, lover, best friend, her mouth open, her eyes staring unseeing, and her neck corded as the blaze of orgasmic release once more filled her.\n\nI collapsed on the bed next to her, my heart thundering and my pulse fluttering in my ears. Lena smiled blurrily, turning to me and reaching for me, her soft, warm hand switching my reality back on and pulling me back to her. \n\n\"I feel so wonderful Dar,\" she murmured, \"I think the baby likes the way you play boom-boom music!\"\n\nI gathered her into me, pulling the light coverlet over us both, and kissing her asleep; summer hadn't departed yet, and the night was warm and humid, but right now, the warmth of my wife next to me was the most comforting, wonderful thing in the world. I'd tell her about Julie and Mark's impending visit in the morning; right now was time for silence, and warm togetherness, and sleep.\n\n*\n\nJULIE:\n\nAfter Nia left, I pottered around, played with Markie and Nia until they both fell asleep, did a little prying and snooping on the internet, and waited for Mark to come home, because I really needed to talk to him. The day dragged on endlessly, until at last I heard his key in the door. As soon as he came in and hugged me, he knew something was up.\n\n\"What's wrong, Little Plum?\" he grinned, pulling me onto his lap and squeezing my bottom, making me grin for a second.\n\nI cast around for a second or two, working out how to say what I wanted.\n\n\"Mark, you remember Nia went with Jamie to Bristol, yes?\"\n\nHe looked at me quizzically, a line between his eyebrows.\n\n\"Jules, it was last week, of course I remember, I'm not ga-ga just yet, baby! What about it?\"\n\nI climbed off his lap and retrieved Nia's camera from the counter, and flicked through the images until I came to the one of Darryl.\n\n\"Look at this, Mark, here's your 'doppelganger'!\"\n\nMark stared at the picture, then glanced up at me.\n\n\"Fuck me, Little Plum, no wonder people thought I was him! This is our cousin Darryl, you say?\"\n\nI nodded. \"And he's a doctor, too, a surgeon no less; finally, this family's going up in the world!\" He pinched my bum at that, making me grin as I clicked on the next picture. Mark wolf-whistled, earning an elbow in the solar plexus.\n\n\"Down boy! That's Darryl's wife, her name's Lena. I think I know what YOU think of her!\"\n\nMark grinned at me, tugging my panties down a little and sliding his hand around my bare bum.\n\n\"Cor, she's a sort all right, no mistake! That lucky fucker!\"\n\nHe caught my expression, and realised what he said now determined whether he got any in the foreseeable future, so he dropped the camera and pulled me closer, darting his head down to kiss and nibble my neck as he squeezed and played with my bottom.\n\n\"But you're much, MUCH more beautiful, my little blonde Sex-Elf, and you've got a great arse, too!\"\n\nAs his finger was currently sliding into it, he was in the right position to judge, so I let him play for a few more seconds, before dragging his attention back to the real world.\n\n\"Flattery will get you anywhere, you dirty, dirty boy, but now I have something else to show you; it's a picture of mum's sister, and I have to warn you, she's the image of mum, but Nia told me, and I believe her, she's nothing like mum; she's a good person.\"\n\nI scrolled through the pictures again until I came to the one I wanted, and showed it to him. His reaction was immediate, but pretty much what I'd expected. His face paled, and the camera almost dropped from his hand onto the couch. I grabbed his hands; there was a slight tremor, and he swallowed a few times, his throat clicking dryly, but his eyes were riveted on the image of our aunt smiling happily, a face I'd certainly never seen my mother pull.\n\n\"She's, um...yeah, I see what you mean...\" he husked, only a slight quiver in his voice, but he held the camera steadily, and when he looked at me again, his eyes were clear, no shadow or fear in there, only curiosity.\n\nI started to relax; at least he hadn't gone into hysterics the way I had at seeing that cursed face again; perhaps it was easier for him to accept it really wasn't our bitch mother in that picture, it was someone else, and she couldn't help looking like that harridan sister of hers, any more than I could help it.\n\nI had one final picture for him to see, the photograph of Darryl's daughter.\n\n\"Mark, look at this,\" I whispered. \"This is Darryl's little girl; her name's Maureen...\"\n\nMark looked at the photo and his eyes widened, then flicked to me, then back to the photo.\n\n\"It's incredible, Tink, look, she looks like you! I remember you just like that, oh my God, we have got to meet them!\"",
        "He glanced at the portrait photo of Nia and Markie on the mantel, and did another double-take, making me grin. It intrigued me that he'd seen me first in Darryl's baby, but his reaction was all I could have hoped for.\n\n\"So you want to go to Bristol again, Lost Boy?\" I prodded, and he grinned back at me, putting the camera and photo down so he could cuddle me against his chest.\n\n\"I think we should, as soon as I can arrange some leave; how does end of the month sound?\"\n\nIt sounded fine to me, so we agreed I'd call Darryl and make a date once he had his leave confirmed. \n\nWith that out of the way, I got down to the business of seriously ravaging my man; sitting on Mark's lap is always a hazardous pastime, you never know what's going to come up (boom, boom!), and his finger in me earlier had started a fuse burning that was just about ready to go off. Mark recognised that look and once more slid his hands into my panties, cupping and spreading my cheeks, making me gasp and smile with sudden need for him. He kissed me madly as his hands worked their magic, only stopping to gasp: \"The kids...!\"\n\n\"Other room, fast asleep, keep going!\" I panted, no less hot. Before I could say 'panties' he'd whipped them off, turning me around so I was now on my back on the couch, and sliding his trousers down, letting me get my hands on that thick cock of his.\n\n\"Upstairs?\" he asked, and I shook my head, already beyond speech; I wanted him now, this instant, no foreplay, I just wanted him filling me, now.\n\nWith that, he pulled my thighs open, pulling me against him so he could run the flat of his tongue over my throbbing pussy.\n\n\"Nooo...!\" I moaned, and he grinned, dropping onto his hands over me, the swollen, glossy bulb of his cock just brushing my slit. I reached for him, enjoying his deep groan as I squeezed his shaft and balls, then he was sliding into me, splitting my labia as he powered into me in one long, breathtaking surge.\n\nI groaned in ecstasy, already on the verge of orgasm, and as he bottomed out and the base of his cock rubbed against my already sensitive clitoris, I came in a blast of white heat that nearly shrivelled me with its intensity; my head actually rang with the speed and power of my orgasm, and as I tightened involuntarily around him, Mark clamped his mouth over mine, roaring into my mouth as I felt him swell and twitch inside me, hot bursts of spunk filling me as he came, and came. I screamed along with him as my orgasm surged through me again, triggered by the feel of him filling me, and so we pumped and heaved against each other, drawing the moment out endlessly. \n\nWe lay together afterwards, our clothes pulled any old how, awed and gratified by the intensity of our lovemaking. Mark, as usual was toying with my hair, brushing it out of my eyes so he could see me properly.\n\n\"Was that to madam's satisfaction?\" he grinned, and I grinned back.\n\n\"I should think so, Lost Boy; now all I want is for one of your boy-wigglers to get through and do his job!\"\n\nMark reached down and jiggled my bum again.\n\n\"Well, if he didn't, we can soon send some more after him! I like making babies with you, Tinkerbell!\"\n\nTwo weeks later, I was making that call, for the following Friday.\n\n*\n\nMark decided to drive down rather than take the train, and save all that business with taxis and transport. When we arrived at the house, I hesitated; this was it, these people were family, but they were strangers, what if they didn't like us, what if they...\n\nMark cut short my dithering and pressed the bell firmly, nodding at the sound somewhere far away behind the imposing street door.\n\n\"The way to grasp the nettle, Wee Wendy, is FIRMLY...\" he muttered, kissing the back of my head and pinching my bum, making Markie giggle, and setting Nia off as well.\n\nThe door opened, and there was the beautiful girl I'd seen in the pictures. She was several inches taller than me, and she was even more stunning than her picture. She smiled warmly, and I found myself warming to her immediately. Mark was spellbound, locked in place until I nudged him.\n\n\"H-hello, you must be Lena; I'm Mark Jameson, this is my...this is Julie...\"\n\nHe trailed of in the face of that beautiful smile. Lena held out her hands taking mine and Mark's hands in hers.\n\n\"Julie, Mark, at last! Welcome to my home; please, come in, come in!\"\n\nWe followed her into a large, elegant sitting room, Lena taking our coats and then kneeling down next to me to look wonderingly at Nia as she wobbled on my lap.\n\n\"She's beautiful, they both are! May I...?\" she held out her arms, with Nia immediately climbing into a new pair of arms. Lena cooed and clucked at her, making her giggle, then gave her back to me.\n\n\"It's wonderful to meet you all at last; poor Emma has been looking for you for so long, Darryl too, and to finally have you here...!\"\n\nAt that moment, a little boy, maybe no more than four years old, stumbled into the room, rubbing his eyes and yawning. He stopped dead when he saw us, then looked at Lena, who scooped him up onto her lap where he looked shyly at us, his thumb stuck firmly in his mouth. Lena smoothed his hair and hugged him.\n\n\"This is my little boy, his name's David; say hello to the nice people, Davey...!\"\n\nHe was a beautiful little boy, fair skinned like his mother, and with her gleaming chestnut hair, but dazzling green eyes, just like his father and just like my children. He seemed fascinated with Markie, and she with him.\n\n\"Do you want to play, Davey?\" asked Lena, and he nodded, sliding off her lap. Markie needed no further encouragement to play; she'd play with the cannibal kids in a jungle clearing, given half a chance, and next thing I knew, both children were rummaging in a toy-box like they'd known each other for years. I have no worries about Markie's future social skills, believe me.\n\nLena watched her son fondly, then turned back to us.\n\n\"There's been a slight change of plan; one of Darryl's colleagues called-in sick, so he had to rush into work and he'll probably be stuck there all day and half the night now, so I'm taking you there to meet him, but before we leave, there's someone who wants to meet you, she's been waiting a long time for this; I'll just be a second...\"\n\nShe left the room, and we heard voices, then she came back in, with what could only be our aunt Emma; I was frozen in place for a second; she looked just like mum, but she was shorter, slimmer, her hair was darker, and she had a warm, happy smile on her face. Her eyes flicked from Mark's face to mine and back to Mark's, and her smile faltered as two big tears rolled down her cheeks.\n\n\"Hello Mark, Julie, it's been so long, I...\" she trailed off and pulled a tissue out of a box on the table. \"I'm sorry, I promised myself I wouldn't, but...\" She smiled gently, and swabbed her eyes once more.\n\n\"My name is Emma, I'm your mother's older sister; I came to see you once, when you were three or four, Mark. I tried to make Lois give you up, I was afraid she would...hurt you, I tried to help you, I swear! I came back, looking for you, but you were gone, I tried to find you, but I didn't know where you were, I didn't know where to look, I'm so sorry...\"\n\nMark was looking strangely at her, the look he gets when he's trying to remember something, then he grinned.\n\n\"Golden bears! You had golden bear earrings, you let me hold them, and you gave me...you gave me...a red bobble-hat. I remember you! There was a park...and a sweet-shop, and...a pink blanket, you wrapped Julie in a pink blanket. I remember it now, it had ducks on it!\" Emma was looking stunned, as was I. Mark, however, was transported, his face lit up as his memory unreeled.\n\n\"You took me to the sweet-shop, and you carried me home, and you told me you loved me, and I played with your earrings, and you showed me how you put them back in...! That was you, you really were there!\"\n\nSuddenly he hugged her in a crushing bear-hug.\n\n\"I wanted to go home with you, but mum wouldn't let me, and I was crying when you left, and she locked me in my room and she left me there all day and all night, and I wanted you to come back and get me, and you didn't, you didn't come back...!\"\n\nEmma was crying against his chest, her voice muffled as Mark held her close.\n\n\"I wanted you both so badly, I tried to make your mother see sense, you were so small, so helpless, and she was so angry with you, but she wouldn't let me have you, both of you, and it wasn't your fault, none of it was!\"\n\nBy now I was in tears too, and so was Lena; our aunt really had wanted us, she'd tried, and our lunatic mother had hidden us away so she could never find us again; whatever hell she's in, she earned her place there.\n\nMark turned to me and held his hand out.\n\n\"Tink, I remember her now, how could I have forgotten, I remember!\"\n\nHe pulled me closer, and then Emma, Mark and I were in a three way with her, Emma crying and smiling and kissing me all at once. I looked up, to see Lena grinning at me, tears on her cheeks too, then she winked and slipped out of the room while Emma was marvelling over how much Nia looked like me. When we'd all composed ourselves, Lena stuck her head in , then came back in carrying her own little girl, and I was amazed all over again; my Nia has short, straight, platinum hair, just like mine, and Mo-Mo has long, curly, silvery-blonde hair, but they looked almost like twins; they could easily pass for sisters, not second cousins. With her came another lady. Lena introduced her as her mother, who was going to watch her little ones with Emma while Lena took us to Darryl's place of work.\n\nWe took Lena's MPV, as it already had child-seats fitted, buckled Markie and Nia in, and Lena drove us the short distance to the hospital, then led us to the Cardiovascular clinic. We waited in a kind of plush waiting room while she went off to locate Darryl, and when he finally came in, dressed in scrubs and theatre boots though he was, even I had to suppress a gasp of wonder; his hair was a little darker, his chin was slightly more chiselled, but he was still almost the image of Mark!\n\nDarryl's reaction to Mark was just the same, both wonder and amusement at seeing his double. Darryl shook hands with Darryl and said something about now they'd met, they could use each other for shaving mirrors. They both laughed at that, then Mark broke their gaze to beckon me. At that, Darryl turned to look at me, probably seeing me for the first time, and then the image clicked into place; I'd been here before, Mark and Darryl talking in a waiting room, then both of them looking at me, and I remembered clearly now that flash I'd had so long ago, that vision of Mark's double, but with green eyes, and now here it was for real.\n\nDarryl was fascinated with Nia; he couldn't believe how much like his own little girl she was. Nia, who's wary of men in general, and only lets Mark, Jamie or dada Morrison carry her, went to him without a murmur, her little hands eagerly grabbing the stethoscope around his neck. Darryl grinned and let her sit on his lap and listen enthralled to his heart, then did the same for Markie; he was a natural with children, and when he took the two of them to show them his clinic, they lapped-up all the nurses and secretaries carrying and nuzzling them. Darryl was a big hit with my kids, always a plus point in my book.\n\nDarryl managed to get away early, and so he and Lena took us out to dinner at a lovely, family-friendly Italian restaurant in Clifton; it was wonderful to sit around a huge table, all our family together at last, Emma and her husband, Darryl, Lena, Lena's mother, their children, and Mark, the girls, and me. \n\n*\n\nEPILOGUE:\n\nWe stayed with Darryl and Lena for several days, eagerly learning more about each other, meeting my aunt Ellen in Australia on Skype, and trading family secrets. Lena took me aside and told me she knew about Mark and me, then told me about her and Darryl, who she really was, and why Darryl lived so happily with his mother-in-law in the same house. Exchanging vulnerabilities like that finally sealed us together as family; now I had two proper families, I had a history, and I knew, finally, where I had come from. \n\nOf course, I'll never know the full story; my real father died and my crazy mother destroyed all evidence of him, so that part of my life will remain a blank, but, balanced against what I have now, it's not such a big blank, and I find I can live with it. \n\nAs for Mark, he's still my Lost Boy; but with the help of the family, and especially Jamie, Nia, and Mummy-Anh, our special family, he's finally beginning to recover from the hurt our mother did to him; every day he remembers more, all the things he blanked out or suppressed to try and be 'grown-up' for me are gradually coming back. Meeting Aunt Emma opened the floodgates, and a trickle soon became a torrent.\n\nOne final thing: before we left that first time, Darryl and Lena took us to meet his two fathers; his biological father, and the man who'd brought him up as his son, his grandfather, Lena's father. We went on his mother's birthday, because Darryl had a tradition that he wanted to share with us. \n\nWe stopped first to pay his respects to his grandfather, Darryl standing silently with his head bowed, and I could feel his loss and grief coming off him in waves, even so long after he'd passed away; it was a sobering thought, but also put my own feelings for my mother in perspective; Darryl had loved the man he'd called 'dad' with a deep and abiding love, and I felt privileged to share in this private moment with him. \n\nAfter a while he roused himself and led us to the grave of his father, Robert, Aunt Emma's older brother. The monument was an ornate cross with the crest of the Royal Marines carved in high relief on it, and an inset picture of a smiling young man in Marine Dress Blues, with a white helmet under his arm. I was quite taken aback; apart from a few minor differences, he was the picture of both Darryl and Mark. Darryl knelt down and brushed leaves and other debris off the base of the cross, and laid a poppy and a white rose there.\n\n\"Mark, Julie, this is my father, Robert Darryl Fraser; he died before I was born, and I was given to my grandfather to bring up, because my mother was too young to look after me herself. She and Robert grew up together, they loved each other very much, and every year, on her birthday, he would give her a white rose. She can't come here, even after all these years, so every year, on his birthday, I give him a rose from her, and from me, and my children as well. He was only a boy when he was killed, but he died doing what he thought was right, and so we honour him in this way,\"\n\nHe paused, obviously picking his words, before continuing. \n\n\"This is part of our family as well; even though we're apart, we're still one family, and he's a part of me, and a part of you as well; I just thought you should meet him.\"\n\nHe bowed his head for a few seconds, then stepped back, giving us a moment alone with our uncle. Mark knelt down and placed his hand lightly on the base of the monument for a moment, barely brushing it with his fingertips, then straightening up and running his finger slowly over the deeply incised inscription as he read it, before stepping back and bowing his head too. He turned to me, and I wasn't surprised to see his eyes bright with unshed tears.\n\n\"See here, Tink, it's good to know our family did some good as well; mum was what she was, but this makes up for all of that; she's finally gone now.\"\n\n*\n\nSo that's our story; Mark and I still live near Mummy-Anh, she's still my mum, and I still lean on her when I need help, advice, consolation, or at times, a good talking-to; Mummy-Anh believes in helping her family, but she also believes God helps those who help themselves. \n\nNia and Jamie are talking about another baby now; after all, she wants to keep up with me. That's right, I'm pregnant again, and in a few weeks I'll know if it's a boy or a girl; my fingers are crossed for a boy this time; Mark says he doesn't care what flavour we get, it'll still be our baby, but I saw him looking at trains-sets, constructor sets, and slot-racing sets in Toys 'R' Us when we took the girls there the other day, and all of a sudden Jamie's son Jay-Jay's favourite playmate is Uncle Mark, so I think I know what he wants, even if he won't admit it.\n\nLena's also preggers. In fact, she's almost six months along, and she's definitely having a girl so she's ecstatic. We spend as many holidays as we can with Darryl; Emma lives not too far from him, ditto Lena's older sister Lizzie and her beautiful children, so we get to spend time with all the different aspects of our now much-extended family. \n\nDarryl loves the idea of a house full of children, and as he seems to be permanently on-call or on stand-by, we go down to them, rather than they come up to us, but I think once Lena's had this baby, she'll want to take a long, long family vacation, and knowing how Darryl worships her, he'll make it happen for her, I have no doubt.\n\nI said it before, but it bears repeating; we took the long way round, and we all took a lot of hurt along the way, but now, thanks to Darryl and Emma, our family has finally found its way back together, and we have a proper foundation for our children, and their children, to look back on and say \"That's my family, that's where I come from!\", and that alone makes it all worthwhile. \n\nLong ago, Mark and I stepped out of that window, and took that flight, 'second star to the right, and straight-on 'til morning', and it led us here, where we should have always been, and I'm content.\n\nTINKERBELL"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother sister incest",
        "brother sister sex",
        "brother sister",
        "brother",
        "oral",
        "anal",
        "incest romance",
        "romance",
        "pregnancy",
        "sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-girl-julies-story-ch-03-pt-02"
}