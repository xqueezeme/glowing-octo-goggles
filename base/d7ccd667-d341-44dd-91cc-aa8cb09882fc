{
    "title": "Cupid's Sophomore Year, Semester 01",
    "pages": [
        "This story involves acts of both sex and romance between consenting adult males, so if that's not allowed where you live then you should march in the streets. I'm releasing this story under Creative Commons by-sa-nc license, which means you can do pretty much whatever you want with it, as long as you give me credit and don't use it for commercial purposes of any kind. If you enjoy the story, I'd love to hear from you. Thanks for reading.\n\nYou don't need to have read my story \"Cupid's Big Weekend\" to understand what goes on here--though the characters in this story continue from that one, I've supplied background where needed. \n\n*\n\n \n# 1 #\n\nIt's good to be a sophomore. Having suffered through a year with the Worst Roommate Ever, I've finally earned a spot in the newest dorm on campus. In my old dorm (and I do mean old--I think the foundations were laid during the Buchanan administration) the rooms were small and the bathrooms were a nightmare of cracked porcelain and mold. Here, the rooms are arranged in suites so that each pair of bedrooms shares a bathroom--only four people competing for the shower! It's going to be awesome.\n\nI just hope I get a better roommate than I did last time. That loser was a constant pain in my ass all year. It wasn't just that he was straight--though that was definitely a strike against him--it's that he spent all of his time with that horrid girlfriend wrapped around him, mostly in our room. I rarely had a chance to rub one out in private, and I kind of need to do that on a daily (and usually twice--sometimes even thrice-daily) basis. Now at least I'll have a bathroom with a locking door if I get desperate.\n\nI swipe my card in the door of my new castle, and venture in.\n\n\"Hello?\"\n\nNo one here yet, apparently. Which is awesome--first one in gets dibs on the best bed.\n\nI look around the small lounge area, which comprises a coffee table and four chairs just inside the door, and then explore the rest of the suite. The layout is actually pretty cool. Next to the lounge area is a little counter with a sink, microwave and fridge. Then you walk past the bathroom, which is actually three separate areas: first, the toilet is in a small room of its own; then there's the sink area, with two sinks and mirrors (this part is open to the rest of the suite), and then a shower in its own room. It's possible for all four people to use the bathroom at once, because one could be showering, one could be shaving, another brushing his teeth, and the fourth locked in the toilet jacking off because of the fact that everyone else is naked and he just can't stand it any more. You can guess which one I'll be.\n\nBeyond the bathroom are the two bedrooms, one to the right and one to the left, each with two loft beds and two desks. Which one to choose? I try to be scientific about this, working from the room on the left (no good--it smells a bit stale, and somewhere inside the wall there are weird pipe noises) to the one on the right. Let's see--this bed seems okay, but the other...\n\nBingo.\n\nThe second bed in the room on the right has a view. While you can see out a window from all four beds, this one has a view diagonally across the courtyard to the hot tub. Oh, no one's using it right now, but come fall it's going to be magnet for steamy, speedo-suited guys who want to soak in the heat so that their muscles relax and their nipples perk up in the chill of the fall evening air. One imagines.\n\nI hear the door open and close. Roommate!\n\nI walk out of the bedroom to meet the new guy. Guys, actually--there are two of them. And they are a matched set of hot hot hot.\n\nA perfectly matched set, in fact.\n\n\"Hey, I'm Josh,\" I offer, my hand outstretched.\n\nThey both smile. I am blinded.\n\n\"Nice to meet you, Josh. I'm Dexter.\" His hand is soft, but his grip is strong. A shiver shoots up my arm. \"This is my brother, Porter.\"\n\n\"Pleased to meet you,\" the brother says. His voice is identical, his hand just as soft; the grip, though, is not quite as MBA-firm as Dexter's. It's more of a hand embrace than a handshake.\n\n\"Twins, huh?\" I state, obviously. Sometimes it's best just to get those things out in the open.\n\n\"He's on to us, Dex,\" says Porter, smiling.\n\n\"So, I picked a bed--you guys should go have a look at which ones you want.\"\n\n\"Which room are you in?\" Dexter asks.\n\n\"The one on the right.\"\n\n\"Oh, so we'll take the room on the left, I guess,\" says Porter.\n\nNow, wait a minute! I don't get to watch either of you undress at the end of a hard day of classes? How is that fair?\n\nThe twins pick up their duffels and head for the room on the left. I watch them go, which is a treat in itself--four identical buttocks rising and falling rhythmically in their khaki enclosures. It's some compensation for not being able to bunk with one of them.\n\nNow I wait for the door to open again, through which will walk my roomie for the year. Extrapolating the increasing hunk factor from me (I'm not bad to look at, I think) to the twins (two helpings of hunk, served hot), my roommate should be the love child of Channing Tatum and Ronaldo Cristiano. But I'm not getting my hopes up or anything.\n\nA few minutes pass. I can hear the Beautiful Twins rustling about in their room, talking in half-sentences. I'm getting a little impatient (something that would surprise no one who's ever met me). I open the door to check out the traffic in the hall. There's a constant flow of people--those coming from the elevator lobby are dragging suitcases and boxes, while those heading back that way are empty-handed. Several times I see oncoming hotties I would like to grab and drag into the suite, but they pass serenely by to other rooms down the hall. Dammit. I go back into the suite to wait. I should be making runs out to the car to pick up more stuff to bring in, but if I'm not here to defend my claim on the bunk I may lose it. I don't want to start the year with a new roommate by having a turf war.\n\nI'm just about to give up on the waiting when I hear someone fumbling with the card-swipe outside the door. The lock clicks open, the knob turns.\n\nI count to three before looking up at the new guy. I use this time to imagine all of the possible configurations of lean muscle, flawless skin, and glittering beauty that are possible in the world, and wonder which I will find before me. And then I see him.\n\nHe's...average.\n\nNo, seriously, he's the absolute mean in all respects. He's not tall, nor is he short. He's not a bodybuilder, but he's not a fat slob either. His skin does not glow with radiant clarity, but neither is it horribly disfigured. In short, if I passed him on the street I wouldn't give him a second look. Which is fine, really, except that I'm going to be looking at him every day for the entire school year. Damn those twins.\n\n\"Hey, I'm Josh. How ya doin'?\" I get up and walk over to him, putting on my super-friendly face to keep him from seeing my disappointment that he is not, in fact, the love child of Channing and Ronaldo.\n\n\"Um, hi...um, Josh.\" His voice is so quiet I have a hard time hearing him at all. He seems not at all sure what he should do now that he's found the room.\n\n\"And you are...?\" I ask.\n\n\"Um, oh, sorry. I'm Seth.\" With that he seems to snap into awareness of where he is, and he sets down his bag and extends a hand.\n\nHis grip is nothing like that of the Wonder Twins, but I wasn't really expecting it to be.\n\n\"Nice to meet you, Seth. Let me show you where you'll be.\" I lead him past the bathroom and to--ugh, there's no better word for it--\"our\" room. I can hear the twins giggling on the other side of the wall, and I imagine what it would have been like to room with one of those specimens of manhood instead of Seth. And the day had been so promising!\n\nWe all spend about an hour shuttling stuff from our cars, except for Seth, whose parents seem to have just plopped him on the curb with all of his possessions and then driven away. Once everything's settled, we decide to head for dinner together, to get to know each other a bit.\n\nWe're sitting at a table in the commons, looking at plates full of prison-issue cookery that do not bode well for our dining enjoyment this year. The twins, however, plow through it with the energetic precision of German paratroopers. They even eat the same things, in the same order. This may get a little creepy.\n\nSeth seems completely cowed by the twins. He keeps staring at them, and then looking away when one of them notices him. Which they do, frequently, because in addition to being sculpturally beautiful, they are also the nicest people I think I've ever met. They keep asking him about life in the little town he comes from, and he keeps answering their questions with nearly inaudible three-word mutterings; they respond with nods and agreeing noises far in excess of what his gruntings deserve.\n\nThen they turn to me.\n\n\"So, Josh. What are you studying?\" Dexter asks.\n\nYou, mostly.\n\n\"Undecided. Taking my time to figure it out.\" It's my standard answer to this question, and I've been practicing it during the weeks I've been home--one of my family's favorite hobbies is to ask me this a dozen times a day.\n\n\"Good for you,\" says Porter. I think I love Porter.\n\n\"What else keeps you busy?\" asks Dexter, following up like a White House reporter.\n\n\"Well,\" I answer, \"I'm vice-president of Campus Pride, and I'll also be helping out with the freshmen when they get here this week.\"\n\nI scan the table quickly for reaction to my outing myself with the Campus Pride bit. It's the LGBTQ group on campus, and I've been active with it since I got here. Actually, since I got beaten up pretty badly outside a gay club early in my first semester.\n\nI don't tell them this.\n\nHere are the reactions I get: Dexter is smiling and nodding, in the manner of a father whose son has finally announced that he's running for political office to keep the family dynasty in power; Porter has a half-grin on his face, and one eyebrow is cocked up a bit, which makes me want to lunge across the table and have my way with him, right fucking now; Seth looks frankly terrified, as if I've just announced that I'm vice-president of the campus Al-Qaeda cell.\n\n\"Good for you,\" Dexter enthuses. \"That kind of stuff is great for the resume.\" The others decide not to offer commentary--actually, I'm not sure Seth is even breathing.\n\n\"How about you guys?\" I ask the table, mainly to get the topic onto something that won't cause Seth to topple over in a dead faint.\n\n\"We're both pre-med,\" answers Porter. Of course they are--why stop at gorgeous and sweet? Might as well be rich, and save lives for good measure.\n\n\"And outside of class?\"\n\n\"We both came here to play water polo,\" replies Dexter. \"But after the first year we decided it was taking too much time away from our studies--\"\n\n\"And other things,\" Porter adds, and is that a wink? Did he just wink at me? My penis thinks so.\n\n\"So we decided to leave the team and focus on our classes,\" concludes Dexter. Porter's interruption doesn't seem to have thrown him at all--I guess that's what it's like with twins.\n\n\"And you, Seth?\" Porter asks, ever the gentlemen. I bet our kids would have his eyes. Sigh.\n\n\"Um,\" Seth begins, as he begins every sentence I think I've heard him utter since I met him. \"I'm majoring in physics.\"\n\nThis makes me happy, because it will be like having a built-in tutor, but also sad, because it means that the chances of his having hot friends over to study is slim indeed.\n\n\"And what do you do when you're not studying physics?\" asks Dexter.\n\n\"Um, sleep, I guess. It keeps me pretty busy.\"\n\nI don't know what I was expecting from a new roommate--perhaps a champion wrestler whose hobbies include gourmet cooking and nudity. We would have been very happy, my naked wrestler and me, but now that's not going to happen. I take another look at Seth, squinting a bit to see the inner beauty. It must be pretty deep in there, because I still can't see it.\n\nWe return to our suite, and spend some time getting settled in. You can tell a lot about people by what they put on their dorm walls, and this group is no exception. My side of the room is populated by a range of athletes and musical artists in various stages of undress and dampness--I kind of have a thing for soccer players in the rain, if you must know--as well as a calendar that my friend Pete found for me in a dodgy shop in eastern Europe that provides pastoral views of mostly-naked men doing things that mostly-naked men enjoy doing, like threshing wheat and fixing Stalin-era tractors. I keep it high on the wall, where I can see it as I drift off at night.\n\nSeth, on the other hand, has decorated with the images that give him wood--a periodic table, a glamor shot of Stephen Hawking, and a series of posters by his favorite photographer, the Hubble telescope. The top shelf of his bookcase displays a set of pictures, clearly of his family. They all look just as hip as Seth. Tucked up on the end of that high shelf is a small frame, angled so that he can see it from bed, that seems to hold a photo of someone on a beach with a sunset in the background.\n\n\"Who's that?\" I ask.\n\nSeth blushes furiously. Then he reaches up and tips the frame onto its front so that the picture is no longer visible.\n\n\"No one,\" he answers, and then bolts from the room.\n\nOkay, then.\n\nI venture next door to see what the twins are up to. Dexter has taken the right side of the room, and his taste runs to the best traditions of dorm decor. Above the desk is a poster of an airbrushed and silicone-enhanced young woman who would very much like us to enjoy her favorite brand of beer--so much so, in fact, that in her haste to deliver this marketing message she has neglected to button her shorts. Next to her is a more sports-themed poster, this one depicting a group of cheerleaders in ridiculously short skirts who would no doubt blacken their own eyes if they attempted even a half-hearted jump. High on the wall, above his bunk, are more explicit images, each of the same sort of woman (the poster in the middle shows two of them together--like, really together). Well, so now we know what turns Dexter's crank.\n\nI turn to Porter's side of the room, expecting to see a mirror image in this as in all things. What I see, though, stops me cold.\n\nAbove his desk is a poster quite similar to the one on Dexter's side of the room, except that the here the product is not beer, but--leather goods? Oh, and the model wearing the strappy leather harness thing is a strapping gentleman, apparently on a float in one of the more upscale pride parades. There's a team photo too, though Porter's taste runs not to cheerleaders but naked French rugby players (the poor dears seem to have gotten a bit muddy on their way to the photo shoot). Higher on the wall is a calendar much like mine, except that his focuses on skimpy swimwear rather than overalls, and the photography is lush and artistic.\n\nI notice suddenly that Porter is watching me, trying to gauge my reaction. I'm not sure what to say.\n\n\"Your calendar is on September,\" is all I can come up with. Smooth, right?\n\nHe laughs. \"That's because I don't really like looking at the model for August,\" he answers.\n\n\"Why?\"\n\n\"Because it's him,\" replies Dexter, who at this moment is trying to finish hooking up the flat-screen TV that occupies the space under his loft bed.\n\nPorter shrugs and nods. Of course these two would be models. Why not?\n\n\"So, I guess we have some stuff in common,\" I say to Porter, as casually as I can. He raises his eyebrows at me, and I nod to the collection of fine male flesh on the walls. He smiles and nods.\n\n\"You mean the gay thing? Yeah, seems we do. Hey,\" he continues, not missing a beat, \"We brought an XBox. You play?\"\n\nI don't.\n\n\"Hells yeah,\" I reply.\n\n\"Awesome. We'll tear it up once we get it sorted.\" he says, and then turns back to putting his stuff away.\n\nIt's getting late, and I have to get up early in the morning to prepare for the arrival of the freshmen, who will be moving in this week. As I lie in bed, looking at the calendar above my bed in the orange glow of the courtyard lights, I listen to the grumbling snore of Seth who dropped off to sleep as soon as he climbed into bed an hour ago. I can hear the twins next door clicking madly on their XBox controllers, no doubt dominating a worldwide army of sweaty, muscled warriors. It takes me a while to fall asleep.\n\n# 2 #\n\nI wake up before my alarm goes off, my sleep broken by the sound of the shower running. It's all of six-thirty in the morning, and I cannot imagine who would be up at this hour--classes don't even start until next week. I slip down off my loft bed and shuffle to the door; just as I open it, the door to the shower room opens and the twins walk out, towels around their waists. Unsurprisingly, they are uniformly beautiful specimens, bearing the hallmarks of the water polo champion--toned muscle, zero fat, an easy grace of movement. They each take a sink and begin their morning ritual. One reaches over to borrow shaving cream from the other, causing his towel to slide off. Oh, fuck me. His ass is a wonder--smooth and muscled and gorgeous. Now, for once, it is possible to tell them apart, as one is wearing a towel and the other is not. But I don't know which is which.\n\nThen, suddenly, as if to restore order to the universe, the towel around the waist of the other slides off, and they are both naked at the sink. An involuntary gasp escapes me, and they both look behind them in the mirror and see me lurking in the doorway. I yawn and step out, trying to make it look as though I had just opened the door and, in my sleepy state, have not yet even noticed their presence, their naked, beautiful presence.\n\n\"Mmmmorning,\" I mumble, heading for the toilet room.\n\n\"Morning,\" they answer together, turning back to their shaving. If they were perturbed by my creeping on them, they don't let it show.\n\nMy morning pee accomplished, I come back out of the toilet room and stand behind them--they're still working away at their mysterious beauty regimen, now applying--moisturizer? The one closest to me steps aside from the sink to let me wash my hands. I nod my thanks, making extra special sure not to glance down the front of him, though every fiber in my being wants me to.\n\nI dry my hands and step back, letting them finish. I take a moment to memorize this sight, sure that they will take greater care to cover up in the future. Unfortunately, before I can make a graceful exit, the one on the left meets my eyes in the mirror. Caught. I try to casual it up.\n\n\"So, you guys are up early,\" I venture, in what I hope is a non-creeper tone.\n\n\"We run every morning,\" the one on the right answers. I nod--not because I understand what makes people get up at o'dark-thirty to run, but because I tend to agree with naked men, whatever the topic.\n\n\"You know, I have no idea how to tell you two apart,\" I say, as casually as I can. They really are identical--I have tried to find some marking that will allow me to distinguish between them, but that would require one of them to have a blemish or imperfection of some kind, and they clearly do not.\n\nThey laugh.\n\n\"Yeah, that's a problem for a lot of people,\" the one on the left answers.\n\n\"It was even hard for our parents when we were little,\" adds the other.\n\n\"There was only one way to tell us apart,\" concludes the one on the left.\n\n\"How was that?\" I ask--I can imagine it's going to be really awkward around here if I don't know whether I'm talking to the gay one or the straight one.\n\nIn perfect sync, they both turn around to face me. Holy fucking fuck.\n\nTheir front side is as lovely as their backside. From the slabs of muscle that form their perfect pectorals, to the bricklayer abs, to the...oh, I don't know if I have words for what comes next.",
        "I've seen my share of cockage in my time--I'm only 19, but I've been working at it--and I've rarely seen one this beautiful. And yet here are two of them, identically beautiful. They are rooted in expertly groomed pubes, and they arch out slightly, even now, when they are at rest. They are flawless, perfectly proportioned in the way that a battleship is--long, broad, and purpose-built. They taper slightly from base to flared head (they are cut, alas--I always like to find new friends with 'skin like I have) and they even have identical veins snaking along the top, down the entire length. As long as those cocks are, their balls drop even further, and on each the right one droops slightly more than the left.\n\nI suddenly realize that I've been staring. My eyes flick up to their faces--each one is wearing a sly grin. They're enjoying this.\n\n\"Nope, still don't see it. You seem completely identical, in every--\" my eyes dart crotch-ward and then back up again, \"--detail.\"\n\n\"Yep,\" the one one the left says. \"Apparently the egg that formed us split very late in the growth process. We are more identical than most.\"\n\n\"But,\" the one on the right continues, \"Our parents found one way to tell us apart.\" He turns to his mirror image. \"Shall we?\" The other nods. He turns back to me. \"What we're going to show you we don't tell anyone about. But since we're going to be living intimately--\" I shiver, \"--together, we think you should know.\"\n\nAs one, they jump up and plant those beautiful asses on the counter. Their cocks bob merrily before them, their balls come to rest on the lucky, lucky polished concrete. It's like a buffet spread out before me, and I could eat and eat.\n\n\"We have a birthmark each,\" the one on the left says, as they each spread their legs wider apart. I can hardly breathe. \"Mine is here,\" he says, pointing to a small spot on his left inner thigh--my left, that is, his right.\n\n\"And mine is here,\" says the other, pointing to similar mark on--his--left inner thigh.\n\nI try to get my breathing under control. I pretend to be unable to see the marks from this distance--I squint, and look from one to the other. I step closer, as one who has difficulty seeing would. Ah, now I can see everything better. Yum.\n\nI look where the one on the left is pointing, and I see it--a small spot, about the size of a pea, that is slightly darker than the rest of his skin. It's right in the place where his right leg meets his hip, and would be completely hidden if his legs were not spread open. I try to take in the complete view without letting drool collect in the corner of my mouth. I turn to the other, the one on the right, and see his corresponding mark, where his right leg meets his groin.\n\n\"Wow,\" I say, \"You guys really are a matched set.\"\n\n\"Yeah, but it kind of bugged us to have the birthmark thing be different, so we fixed that,\" says the one on the left.\n\n\"What do you mean you fixed it?\"\n\n\"Look,\" say the one on the right. He points to the other side of his glorious cock, at a birthmark that is identical to the one that his brother has.\n\n\"And I've got his,\" says the one on the left, pointing out a replica of his brother's mark.\n\n\"Whoa, that's...seriously weird. You guys got tattoos of each other's birthmarks?\"\n\n\"Yep. Now we really are identical,\" says the one on the left.\n\n\"Well, there is a way you can tell the difference,\" says the one on the right. \"The tattoo guy did a great job matching the color and shape and everything, but the real birthmark is raised a bit. You can tell by feeling them which one is real.\"\n\n\"Here, try it,\" the one on the right says. He grabs my hand and presses it to his real birthmark, and then grabs the other hand and puts it on the fake one, in his brother's crotch. I now have my hands nestled up against their genitals, running my fingers over their skin. Through the electric fog in my head--I get a little loopy when confronted with handfuls of cock--I can feel the difference.\n\n\"Wow,\" I say, because I don't know exactly what one is supposed to say in this situation. I pull my hands back reluctantly, hoping that there will be occasion for them to return for a more wide-ranging survey of the manscape.\n\nOnce I am no longer in physical contact with them, my head clears a bit, and a thought occurs to me.\n\n\"So, guys, why go through all the trouble--and the pain of having a needle that close to...well...there--when the only people who would ever see those marks would probably have no way to compare them. Unless, you know, the same person ever saw both of you...you know, that up close and...oh...\"\n\nThey are looking at me with the identical sly grins. Apparently some lucky soul has had a chance to compare the feel of their most intimate regions. But if Porter is gay, and Dexter is straight, then that would mean that there is a certain amount of flexibility in their tastes.\n\nI like flexibility.\n\nI hear a noise behind me--it's Seth, opening the door. What he sees is me standing in front of the two naked twins, who are still perched on the counter, grinning. The door slams shut again.\n\n\"Well,\" I say to my identical roomies, \"I think we have some 'splaining to do.\"\n\nThey giggle, and how can I not join in? Their cocks dance so fetchingly when they laugh.\n\nThe twins retreat to their bedroom and I to mine to find Seth hurriedly dressing--he has apparently discovered someplace he needs to be right away.\n\n\"Seth?\" I venture. I'm not sure what to say about what he saw in the bathroom.\n\n\"Um, yeah, I gotta go,\" he says, stuffing his laptop in to his backpack.\n\n\"Where are you going this early?\" I ask as he brushes past me.\n\n\"Library,\" he says, and then I hear the front door quickly open and close.\n\nI'm not sure what this means--was he freaked out by the naked twins, or is something else bugging him? Looks like our Seth is an enigma wrapped in a riddle clothed in nerdiness. But there will be time to get him figured out--right now I gotta get going so that I can be ready to help out the incoming freshmen with their orientation. I love that word--so many possibilities.\n\n# 3 #\n\nCome on, that's right, get in my line. That's it. Oh, yes, bring your cute friend with you. Excellent.\n\nThe best part about working freshman orientation is--well, duh--the freshmen. I've managed to wangle the dream spot, for me at least: the registration table in front of Hurley Hall, the jock dorm. All I need to do now is sit back and wait for the muscle boys to come to me.\n\nTake this pair in front of me right now, for example. They look like they've just arrived together and aren't sure they're in the right place. The one on the left is tall and lanky and tan--which says basketball--and apparently blissfully unaware of the effect that his barely-there t-shirt, with its deeply cut armholes and ragged neck, is having on people around him. But every time he moves, one of his nipples peeks out, and I just about wet myself. Damn, he's gorgeous.\n\nHis friend is a bit shorter, and a bit more muscled, and holy shit his legs are amazing. Him I peg for wrestling. I picture him in a singlet--ah, it's a good look.\n\nFinally they approach. The table, conveniently, is just below crotch-height. That lets me appear to glance casually at the campus map taped to the surface while pointing out directions--while I'm really studying the mysterious forms that lurk and bob within those sleek nylon shorts. Or khakis. Or hemp--I'm not picky.\n\n\"Can I help you?\" I ask, looking up into the vaguely confused face of the tall tan one.\n\n\"Yeah, we need, uh--\" He turns to his buddy. \"What's the number again?\"\n\n\"237N,\" mutters his friend out the side of his mouth. He clearly thinks it's uncool to have to deal with bureaucracy.\n\n\"Yeah, room 237N,\" Basketball says.\n\n\"You're in the right place,\" I assure him, reaching to point at the map. The bulge in his shorts is about an inch from my hand. I point to the building on the map, and look up at him. \"We're right here, and the north wing of the building runs along here.\" I circle the area with my finger, wondering if I can accidentally brush against him...no, too risky.\n\nI shuffle through the file box looking for 237N. Ah, here it is.\n\n\"You two together?\" I ask as I hand over their paperwork, trying to keep the insinuation in my voice at the just-barely-noticeable level.\n\n\"Yeah,\" Basketball says, while Wrestler looks at him with a critical eyebrow.\n\n\"In 237N,\" clarifies Wrestler. Ah. He heard the hint. Interesting.\n\n\"OK, so 237N is about here,\" I point to the map of the building. \"Go in here, up to the second floor, and along this corridor. Your room will be on the right side of the hall, which means you'll have a view of--\" I point to the map just to the side of building, \"--the recycling depot. Awesome.\"\n\nIf he's disappointed with the prospect of that view from his room, he doesn't show it--of course the best view in his room is going to be his muscly friend stretching as he wakes in the morning, his hair tousled, his sheets sliding down, down, down...\n\n\"OK, thanks!\" Basketball says, jauntily, and the two of them walk off together. I watch them as they stride away, their heavy duffles smacking them on the ass with every step--oh, to be slung over the back of one of them.\n\n\"Excuse me?\" a deep, strong voice sidles up to my ear. Aw, crap, someone else is at my table--I hope the expression on my face is one of concern for our treasured new students, not one of unbridled lust at the thought of coming between those two friends. Like a sandwich.\n\nI shake off the dirty visions that have filled my head and turn to the party in front of me, my best customer-service face firmly in place. I look, I am awed.\n\nGood things come in twos today. After Basketball and Wrestling, I could not reasonably hope to find as tasty a morsel in the next batch--who is that lucky?--but here is the magic of freshman orientation. Demographically, this parade of flesh is guaranteed to be all 18 years old, all athletic, and all mine.\n\nBut at the moment I'm not looking at a pair of 18-year olds--there's just one. But he brought his dad, who must have fathered him at a tender young age--I'm not into older guys, but this one can't be much past mid-thirties, and he looks no more than late twenties. He is, like his son, well-built and fit as fuck. Some very tasty genes have been passed down.\n\n\"Yes, sir, how can I help you?\" Please please please be looking for directions to the nearest blowjob, Mr. Goodgenes, because I would be happy to direct you to my mouth.\n\n\"Well, hey there,\" he says, smiling broadly at my no doubt transparently admiring gaze. \"We need to find 230N. Where should we go?\"\n\nI grab the paperwork, hand it over, and point out the room to them.\n\n\"Anything else I can do for you?\" I ask. Please say blowjob. Please!\n\n\"That should do it. Hey, what sport do you play?\"\n\n\"Oh, me? I don't play a sport. I'm more of an athletic supporter,\" I reply, with my best customer service smile.\n\nMr. Goodgenes raises an eyebrow at me, but the corner of his mouth twitches upward just ever so slightly. Hmmmm.\n\n\"Well, thanks,\" he says with a nod, and then father and son walk off toward the door. This gives me the chance to appreciate their resemblance from the rear. How can dad's ass be even perkier than his son's? And am I really checking out an old guy's ass?\n\nLuckily, there are several other lust-objects in my queue, and my mind is pulled back to the work at hand. I spend the next half-hour directing lost jocks to all four floors, North and South wing. Out of the corner of my eye I see Abby, who's been assigned to watch over the inside of the building, come running up, out of breath.\n\n\"Hey Josh,\" she pants, \"I need you to go in and help out with something.\"\n\n\"Sure,\" I respond. This could be my big moment--maybe there's a hostage situation, or an orgy. I think I'd be pretty good in both kinds of crisis. \"What's up?\"\n\nShe comes around to my side of the table and leans in close.\n\n\"You know, they're painting on the second floor.\"\n\n\"Why are they doing that today?\"\n\n\"Because they didn't get it done last week when they were supposed to. But now one of the painters dropped a bucket of paint on some people who were moving in.\"\n\n\"Anyone hurt?\" I ask, because that's what a superhero would ask before charging to the rescue.\n\n\"No, but they're a complete mess. I sent them to the showers on 2North, but can you go up and see if they're okay and help them get clothes and stuff from their rooms?\"\n\nAthletes in distress? In the shower? Can I help? Yes, yes, and oh hell yes!\n\n\"I'm on it,\" I say, because I've always wanted to say that.\n\nI speed off into the building, jostling my way through halls sometimes thick with jocks. I wave my badge importantly, to explain why I'm having to push through, and to excuse my occasionally pressing up against some hard package of muscle or other as I rush to the scene. Best job ever.\n\nAs I enter the 2North corridor, I see where it happened. The custodial crew has put out the barf cones (these will soon see heavy use, if past years are any indication--when freshmen can't hold their liquor, it usually ends up on the dorm floor) so that people are having to file past the puddle of beige. There are splatters on the wall, and a few beige shoe prints around the edge. I head for the shower, located midway along the wing, and when I push through the door I can hear water running.\n\nThis facility is much like the one I had freshman year--it's a large, open room, with shower heads on the outer walls as well as a steel column in the center with heads pointing out in all directions. Privacy-wise, it's a total loss; the view, though, more than makes up for it.\n\nOn either side of the steel column, soap running dreamily down their bodies, are Mr. Goodgenes and his boy. They are currently scrubbing industrial-strength beige paint out of their hair, eyes shut tight against the chemicals, so they have no idea I've entered the room. I decide not to tell them, just yet. I sit on the bench just outside the tiled area, next to two piles of beige-spattered clothing.\n\nWatching this duo scrub down is profoundly weird--is that why I keep having to adjust my growing boner? Now, the son is beautiful in his own right. He's muscular without being bulgy, and he is classically proportioned. Dad, though, is somehow even hotter. He shares his son's lean musculature (well, of course--he gave it to him) but what is simply pleasing to look at on an 18-year-old is somehow miraculous on a man twice that age. He must work like hell to keep that bod rockin' so hard. I watch, amazed, as their motions mirror one another, instinctively--I mean, surely they aren't in the habit of showering together, right?\n\nBut the area where the resemblance is greatest is yet to come. Their privates (now made public because I'm here) are virtually identical. Okay, not identical to the degree of my new roommates, but very similar. They aren't particularly massive, but in shape, coloring, and general boinginess they are lovely. Their balls are the same size, though sonny-boy's hang lower. It's funny to think that the set on the left created the set on the right.\n\nThey are rinsing their hair now, so I should announce my presence.\n\n\"Hey, guys, sorry about the paint thing,\" I say, loudly enough to be heard over the splash of all of that water now caressing them in its cascade to the floor drain. \"Should I get some clothes for you from your suitcase?\" I remember that junior was rolling a duffel behind him. Luckily, it looks like Dad would wear the same size.\n\n\"That would be great,\" says Mr. Goodgenes, smiling fetchingly. Good god he's chipper for a guy who's just been painted, and who is now standing drenched and naked in front of a stranger.\n\n\"Yeah, thanks,\" says the son, flashing a smile as bright. \"My room is 230N.\"\n\n\"Oh, I remember! I'll be right back,\" I assure them as I hustle off.\n\nI hurry down the corridor to the room, and swipe my card in the lock. For this week only my card will open any dorm room on campus. It's a terrifying power, and not one that even I would be willing to abuse--not so much for ethical reasons, but because every swipe is recorded by the computer. It would be hard to explain why my card went and opened every door along the corridor one evening while I gathered data on how many of the residents sleep naked...\n\nThey had only had a chance to drop off the duffel and some smaller items before being painted beige, so there's not much here. I set the duffel flat on the ground and zip it open. It contains the expected assortment of jeans, t-shirts, and socks, and I grab out two sets of each without really looking at them. I dig down further in search of underwear. I am not disappointed. There are a half-dozen pairs of tighty-whities; in my field research, I have found that approximately 40% of freshman males will sport these for everyday use. These are of better quality than I'm used to running my hand across (and I have run my hand across a fair number), but I go deeper--no one comes to college with just six pairs of briefs. Under them I find several pairs of boxers in unimaginative plaid, and two with cartoon dogs on them. Hmm, better. Under those, though, are what I've been searching for--a small collection of Dolce & Gabbana boxer briefs in fetching colors. Date-night unders. I take a basic black, and one in a bright blue--I've had a fondness for blue since I ripped a pair this color off a hockey player last year, in the course of a disagreement which we were later able to resolve to the satisfaction of both parties. Good times.\n\nAfter I get all of that out of the duffel, I see a pocket at the bottom that has a velcro flap closing it off. I know I shouldn't--but I do it anyway. I open the flap and reach in. What's in there are a couple of slick magazines--no, wait, they're porn mags. Junior brought old-school beat-off material! I like him more already. There are three here--the first two are standard-issue breeder shots (since I have, on occasion, assailed the virtue of my straight buddies, I am familiar with hetero porn--the way a fisherman is familiar with worms) but the third is far more interesting. It is full of threesomes, and not the traditional kind. The trios are made up of one woman (not my thing, but still, they're not horrible to look at) and two guys (who definitely are my thing, and these are fine specimens). A quick look through the mag shows that the guys don't actually touch each other, but let's just say that at several points they find their cocks pressed together in ways that I, for one, would consider less than completely heterosexual. It's like gateway porn.\n\nYou go, Daddy's Boy.\n\nI carefully replace the stroke mags and zip up the duffel, and then grab up the clothes and motor back to the shower room. The water is still running--yay!\n\nAs I enter the shower area, I suddenly realize that I don't have towels for them.\n\n\"You know, I just realized that we haven't brought the linens box in from the car,\" Mr. Goodgenes says as I set down the clothes. Great minds, you know.\n\n\"Well, we do have dryers mounted on the wall over here--you can use those to dry off,\" I offer, knowing it sounds lame. But these two just keep on smiling. They shut off their respective showers, and walk over to the dryers. These are mounted at eye level, and two of them roar to life when the Goodgenes duo hit the big chrome buttons on the front.\n\nCan this day get any better? I get to watch these guys rub themselves dry for like five full minutes as they turn, run their hands over their firm, tan bodies, and occasionally slap the start button again when the dryers wind down. Finally they stop glistening, and come over for their clothes. As they approach, their cocks slap back and forth from one powerful quadricep to the other. Slap slap slap. Oh, the humanity.",
        "I have placed the two piles of clothes on a bench so that they can sort them out. They pick through for the underwear first, which I'm sad about, because it means that the sexy bits are going to be covered, but there's still a lot of hotness left on them. Dad grabs the bright blue D&Gs, leaving Junior with the basic black. As Junior handles the black boxer briefs he looks at me and cocks one eyebrow up. He knows I went shopping for the sexy underwear. I put on my best \"I have no idea what you're accusing me of\" look--the one I used in high school when Mom found questionable content in my web browsing history--and it seems to work.\n\nI resign myself to losing sight of Mr. Goodgenes' goodies, but before he slips on the underwear he surprises me by standing up straight and walking over to where I'm sitting on the next bench over. He reaches out a hand. He's completely naked, and he's reaching out a hand.\n\n\"You've been so nice to help us, and we haven't even introduced ourselves. I'm Ted, and this is my son Skyler.\" I shake his hand, and then watch as his son comes over to extend his--it's too bad he had time to put the black boxer briefs on before doing so, but I'll take what I can get.\n\n\"Call me Sky,\" he says, smiling warmly and shaking my hand.\n\nOh, I will definitely be calling you--you have potential.\n\n\"I'm Josh,\" I say, hoping that Sky will remember it next time he needs someone to watch him shower. They smile and nod.\n\n\"You know, this place hasn't changed much at all since I was here,\" Ted says, looking about the shower room. I don't think it's changed much since Abe Lincoln took the train through town, but I don't say this.\n\n\"You went to the U?\" I ask, because I'm polite, and because the longer I keep him talking the longer he'll stand there in just his son's underwear.\n\nHe smiles broadly at the memory. \"I did. Played baseball all four years--we took regionals in my last two seasons.\"\n\n\"Dad,\" protests Sky, who's clearly heard this all before, and doesn't want everyone his dad meets today to be oppressed with the story. I, however, could listen to him all day.\n\nTed grins, with only the slightest hint of abashedness at aggravating his son. \"Sky's going to play ball here as well. We'll see if he can best his old man's record.\"\n\n\"I wouldn't call you old,\" I laugh.\n\nOh, shit. Did I just flirt with some guy's dad?\n\nThis could be bad.\n\nI look up quickly to see in Ted's face if I've crossed the line. What I see is a flash of a half-grin, which he tucks away instantly. I'm not sure if it was meant for me, or if it was just an instinctive reaction to being complimented on his physical form. Which, to be honest, must happen to him on a regular basis.\n\nI decide to cut out before I embarrass myself or them.\n\n\"Well, if there's anything else I can do for you...\" I venture, getting to my feet.\n\nTed and Sky are dressed now. Sky looks like every other jock freshman here today, but Ted--damn, there's something about his fully-developed body packed into those clothes that makes me just about weak in the knees. It wouldn't work on just anyone, but on him--it works.\n\n\"No, no, I'm sure you have lots of important things to do. Thank you so much, Josh. You've been great.\" Dad and son, in jeans, t-shirts, and sock feet, both nodding their thanks at me with 1,000-watt smiles--it's quite a scene. But I have duties, and they're no longer naked, so I must away.\n\n\"I'll see you around, Sky,\" I say cheerily as I back out of the shower area.\n\n\"Yeah, see ya,\" he calls back. I am probably deluding myself in hearing a note of genuine desire in his voice, but delusion has often turned out okay for me, so I'll take it. I'll make sure I find my way back to 230N in the not-too-distant future.\n\n# 4 #\n\n\"So, what about jacking off?\"\n\nMy day since showering with the Goodgenes boys has been busy but unexceptional. Just the usual parade of toned, summer-tanned flesh and expressions of vague confusion. Now it's getting on toward evening, the freshies have eaten their first dorm dinner (where do they even find a recipe for Salisbury Steak anymore?) and we're in the sex-segregated \"Roommate Relations\" information session. The questions until now have been predictable and booooring (\"Will my roommate respect my severe nut allergies?\" and \"What do I do if he snores?\"). Now it's getting interesting.\n\nThe guy who asked the question is about three rows back, and he's here with his posse. He's been watching me, and he's apparently decided to relieve the boredom by having a go at embarrassing me. His boys grunt with laughter at his sassy wit, while he reclines and practically dares me to react.\n\n\"I'd have to say I'm in favor of it,\" I answer in my most professional tone.\n\nThis takes him by surprise, though his reaction is not nearly as flustered as that of Marty, the hall director, who gapes at me like I just threw a lit firework at him.\n\n\"I think,\" Marty blusters, \"What he meant to ask was how we should handle privacy issues in the dorm setting.\" He looks at me with raised eyebrows, as if trying with mind control to get me to be vague and PG-13. He doesn't know me very well.\n\n\"I think,\" I reply, turning back to the gentleman with the burning question, \"That since most of the guys in this room probably masturbate on a regular basis, they want to know how to make sure they don't get interrupted doing it or, possibly worse, interrupt their roommate while he's hard at it.\"\n\nMy interrogator's smirk wavers a bit, but he's going to keep trying to offend me. I don't give him the chance.\n\n\"So, here's what I'd say. Admit that you do it, that he does it, and figure out how to schedule it. Make sure you give each other a half hour alone in the room frequently--maybe even daily. That way you don't have to talk about it, since even mentioning the topic can embarrass some guys. I mean,\" I look at him, hard. \"You probably rubbed one out this morning, and you shouldn't have to give that up just because you moved into the dorm this afternoon.\"\n\nThe entire posse is looking pretty embarrassed right now. Marty is simply spluttering, like a forgotten tea kettle on a high flame.\n\nQuickly, Question Guy recovers. With his boys watching him, he needs to pull it together.\n\n\"Maybe you jerked off this morning, but I don't have to, asshole,\" he says, the sneer in his voice matching the one on his face.\n\n\"Oh,\" I shake my head empathetically. \"Still doing it in your sleep, are you?\"\n\nNow he just looks furious. Straight boys are so sensitive!\n\n\"Look, faggot,\" he sputters, \"Shut the fuck up about me!\"\n\n\"Are there ANY other questions?\" Marty manages to bluster over the chaos of chattering that has erupted. Question Guy is getting ready to continue his snarling salvo, but he's interrupted.\n\n\"What,\" comes a voice from the other side of the room, \"If your roommate is a fag?\"\n\nI crane my neck to get a look at the source of this question--the voice is familiar, but I can't place it. Then I see him--it's Sky, from the shower earlier. I'm sure I've misheard his question--he wouldn't say what I thought he said, would he?\n\n\"I'm sorry, what--\"\n\n\"What do you do if your roommate is a queer?\" he enunciates clearly, slicing off each word as if it were poisonous. \"What if he stares at your junk? What if he slips something in your drink and then rapes your ass when you're passed out?\"\n\nI'm stunned. I just stand there staring at him. This is nice little Goodgenes junior? Dude's a Hitler. I open my mouth to speak without really working out what I'm going to say, but he continues.\n\n\"I mean, if you catch your roommate perving on you you're allowed to beat the shit out of him, right? That's self-defense, right? 'Cause if a fag looks at me he's going to be shipped home in about a dozen little boxes.\"\n\nNow I'm less stunned than I am seriously pissed off. I open my mouth and take a deep breath to power through the rant of all rants, but I don't get the chance.\n\n\"Dude, dial it back. Do you even know any gay people?\"\n\nIt's a member of Question Guy's posse. He's looking straight at Sky, and he's pissed.\n\n\"I guess I do now,\" Sky spits back, looking the other guy up and down with disdain.\n\n\"Look, you gotta check your homophobia at the door,\" retorts another member of Question Guy's gang. \"What makes you think they'd want your ugly ass anyway?\" There are murmurs of assent from all over the room, which has clearly turned against Sky. I'm kind of proud of these freshies.\n\n\"I THINK WE'RE ABOUT OUT OF TIME!\" bellows Marty. He take a couple of panting breaths. \"Thank you for coming.\"\n\nThe guys filter out of the room, and I manage to slip away before Marty can lay into me for letting it get out of hand. I'm trying to figure out why I was completely blindsided by Sky--I'm usually pretty good at sizing people up. And I completely wasn't expecting him to be basically shouted down by the other people in the room.\n\nBut I don't really have time to think through it--I'm on my way to another room for a similar session, this one organized by Campus Pride, for gay, bi, and questioning freshmen.\n\nThe room is sparsely populated, with groups of two or three here and there, and a fair number of solitary guys. About a couple dozen are here total, which is not a bad turnout. I walk up to the front of the room.\n\n\"Hey guys, I'm Josh, and I'm the VP of Campus Pride. I want to welcome you to this special session on Roommate Relations. This is a safe space for you to ask questions and get support in what for a lot of us can be a challenging time.\"\n\nI stop here, to let a latecomer enter.\n\nIt's Sky. No fucking way! He takes a seat near the door, and looks attentively at me. I try my best to look unruffled to the rest of the people in the room, while looking daggers at him. It's not an easy combo to master. I turn back to the room.\n\n\"Now, what questions can I answer for you?\"\n\nThere's silence, and some shuffling and fidgeting, but I know to count to twenty and wait for responses. I'm only on eight when the first hand goes up.\n\n\"Yes?\" I ask. The hand belongs to a slight boy in the second row, who is clearly petrified to speak.\n\n\"I was wondering,\" he squeaks, then clears his throat and attempts to speak more forcefully. It doesn't work. \"How would you deal with a r-roommate who is hom--homophobic?\"\n\n\"That's an excellent question,\" I say supportively, smiling my brightest at him. Poor fella, he needs every bit of positive affirmation he can get. \"You should know that all freshmen will be going through sensitivity sessions this week. The university will not tolerate people being disrespected or threatened because of their sexuality. If you have any reason to suspect that your roommate has a problem with you because of sexual orientation, you should talk to your RA, or to the Hall Director, or to me or someone else from Campus Pride. We can help you.\" He smiles, weakly at first, and then more confidently. \"If your roommate has a problem with your sexuality, that's his problem, not yours.\"\n\n\"But,\" says another voice from across the room, this one deeper and more forceful. \"What if you find yourself being attracted to your roommate? I mean, we're living pretty much on top of each other. It could be awkward.\"\n\n\"Yes, it could get awkward. But I think you'll find that living that closely with someone means that you see them when they're not at their best. It's kind of hard to fall for someone when you see him picking his nose, or wearing the same underwear for the third day, or making out with his girlfriend while you're trying to sleep. People think that dorms are some kind of hotbed of lust, but it's almost never that way.\" Well, it sort of is for me this year, but I paid my dues, right?\n\n\"But what if you end up with an amazing guy and you just really want to go for it?\"\n\n\"I would say be careful, especially if he identifies as straight. I think it's almost always better to hang back and don't push it. Even if that means feeling like you're letting a great opportunity go.\"\n\n\"So,\" says another one, this one looking at me skeptically. \"You're telling us you were never attracted to a straight guy?\"\n\n\"Oh hell no I'm not saying that!\" I say, laughing. \"Most days I've been attracted to six straight guys before breakfast. But I don't go all flirty on them or anything. Sometimes appreciating them from afar, or just being friends with them, is the best way. Most straight guys, given the right opportunity and the right kind of offer, are still straight. Even the ones that may let you do stuff sometimes, most are still straight and always will be, and that's just a recipe for you getting hurt, emotionally or otherwise.\" I sound like I really believe this. Do I?\n\nWe go through several more rounds of Q&A about more mundane things, like how to handle bringing a guy back to the room, whether bisexuality really exists, that kind of stuff.\n\nThe guy who had been first to speak raises his hand again, even more tentatively than the last time.\n\n\"I wonder if...I just...I mean, I think that...what happens when--\" He seems to realize he's not making sense, but he's clearly thinking of something that's causing him some pain. His eyes well up, and is he really? Yes, he's shaking.\n\n\"Hey,\" I read his name tag, \"Grant, take a deep breath. We're all here for you, buddy. You can tell us anything.\"\n\nI flash a quick look at Sky. I swear to god you fucker, you say anything right now and I will yank your spine out your asshole.\n\nGrant takes a couple of halting breaths, and seems to compose himself.\n\n\"I thought my best friend, last summer...I thought we were, you know, kind of taking the next step, but it--\" A sob escapes him, but he closes his eyes and breathes deeply again, and he forges on. \"He said he was okay with it, but after, he...he--\" Grant looks up at me with tears streaking down his cheeks. \"He beat me up pretty bad, and drove away and left me.\"\n\nOh my god.\n\nOut of the corner of my eye I see movement. Before I have time to react, Sky gets up, walks over to Grant, sits down next to him, and--what? He puts his arm around him. Grant is clearly shocked, but he just kind of loses it, and sobs into Sky's shoulder.\n\n\"It's okay, buddy,\" Sky says, his voice soft but strong. \"It's okay. We're all here, and no one's going to hurt you like that again. You have friends in this room, and we've got your back.\" These consoling words make Grant break out into a seizure of sobs, and the meeting is pretty much over. Gradually the others in the room come together around Grant and Sky, and each one pats him on the back, or puts an arm around him, or says something supportive to him.\n\nIt's about the most amazing thing I've ever seen. And in the middle of it, getting his shirt soaked with Grant's tears, is Sky. What the fuck?\n\nEventually the emotional crisis level in the room drops a bit, and we wrap it up. As the guys leave the room, Sky seems to be hanging back a bit. He's talking with the much more composed Grant, who finally is able to walk out under his own power as I finish straightening up the room. Now it's just Sky and me left. He walks up to the front of the room where I've just put the chairs back in order.\n\n\"Hey,\" he says.\n\n\"What the fuck is with you?\"\n\nIf he's taken aback by my question he doesn't show it.\n\n\"What, I'm not allowed to help a brother out?\"\n\n\"That's not what I was asking about. How do you go from Super Bigot to the Gay Avenger in the space of an hour?\"\n\nSky smiles slyly.\n\n\"Oh, that,\" he says, and did he just wink at me?\n\n\"Yeah, that. You went all homophobe before, and then you walk three doors down and you're suddenly the wind beneath Grant's gay wings. What the fuck?\"\n\nHe tips his head to the side, considers me for a moment.\n\n\"Wanna grab a cup of coffee?\" he asks, as if this is a natural response to what I have asked him.\n\nI'm pissed that he's ignoring my question, but coffee doesn't sound bad right now. I know I should stop drinking as much of it as I do, but as addictions go, caffeine's not the worst thing in the world.\n\n\"Sure, whatever.\" \n\nWe head for the junky replica of a cafe that the dining commons provides, which is pretty much deserted at this hour--it's nearly 9pm. I get a small coffee, while Sky orders a double shot of espresso--he pays for both before I have a chance to even reach for my wallet. At least the schizo bastard is a gentleman in this one respect.\n\nWe walk over to a table near the window looking out over the main plaza, and we sit.\n\n\"So,\" I start, \"What the hell is your deal?\" I take a significant sip of coffee here, mainly to punctuate my scalding interrogative. Unfortunately, the coffee is also scalding. I don't spit it out because that would ruin the tough image I'm going for--I think my mouth is going to blister tomorrow.\n\n\"I would have thought it would be clear to a smart guy like you,\" he murmurs slickly, and then sips his espresso. He's much better than I am at this drinking-like-James-Bond thing. He looks cool and collected, and not at all like his mouth is going to blister. I hate him more now.\n\n\"Guess I'm stupid then. I just don't get you being a complete asshole homophobe and then practically cuddling with poor Grant--you could have wrapped the two of you in a rainbow flag and not lost an ounce of subtlety.\"\n\n\"I was just managing the crowd,\" he says insouciantly. Another elegant sip of espresso. \"Doing what needed to be done to keep things moving productively along.\"\n\nI squint at him, trying to make sense of this.\n\n\"I see you're still confused,\" he states, noting the obvious. \"Okay, here's the deal. That shithead in the first meeting was trying to push your buttons, and you were letting him--no, wait, hear me out,\" he says, holding up a hand against my objection. \"He was showing off for his buddies, and the game he was playing was to shock you. It clearly didn't work--you saw his sexual provocation and raised him an ad-hominem aspersion.\"\n\n\"Damn right I did,\" I say proudly. \"He needed to know who he was dealing with.\"\n\n\"Yeah, that was your first mistake,\" Sky says, shaking his head and taking another sip of espresso.\n\n\"What? Why was that a mistake?\"\n\n\"Because you pushed him into a corner. In order to save face with his buddies, he had to see your insult and raise you a scatological reference.\"\n\n\"You meant the part where he called me an asshole?\"\n\n\"Yep, that part. Then you made your second mistake.\"\n\n\"Oh, I can hardly wait to hear this.\"\n\n\"You advanced the supposition that he still experiences wet dreams, which is anathema to an adult male, because it implies that he has no better outlet.\"\n\n\"Okay, so that was kind of clumsy, but it was all I could think of at the moment. Dude was pissing me off.\" I take a gulp of coffee, which burns burn burns all the way down. I don't care.\n\n\"Exactly right he was, which is what he had set out to do. But now you've impugned his masculinity, so he's double pissed. That's when he breaks out the f-word.\"\n\n\"Two of them, actually--faggot and fuck.\"\n\n\"That's when I knew the wheels had come off the cart. So I saved your ass.\"\n\nI'm intrigued.\n\n\"How, exactly, was the bigot act supposed to save my ass?\"\n\nHe smirks at me, as if he's about to divulge some shocking secret.\n\n\"Back-blaze,\" he says triumphantly, as if this explained everything.\n\nI stare at him, willing my eyes to generate a searing heat ray that will melt his smug grin.\n\n\"You know,\" he continues, still smirking, \"Like what they do when fighting a forest fire. You light a small, controlled fire to remove fuel from the main blaze. That's what I was doing.\"\n\n\"I still don't get how that was supposed to help,\" I say, unable to keep a note of irritation from my voice.\n\n\"Look, Shithead Question Guy called you a faggot because it was the next worst thing he could call you after 'asshole.' So, in order to keep him from going further, I jumped over him and busted out the whole queer-bait gay-panic thing.\"",
        "\"Yeah, I don't see how that helped.\"\n\nHe sighs, shakes his head, and looks at me pityingly.\n\n\"Let's go through this step by step, okay?\" he asks me, in exactly the tone of voice one would use to explain long division to a not terribly bright child. \"Shithead Question Guy starts here,\" he places a sugar packet on the middle of the table, \"Trying to get a rise from you. Instead of laughing him off, you push his buttons back.\" He places a pink packet of sweetener to one side of the sugar packet. \"That forces him to go more extreme.\" He leapfrogs the sugar packet over the pink one. \"Then you come back at him, and he has to go further. Pretty soon he's going to actually jump you and start beating your head in. So I,\" and here he places a blue sweetener packet on the very edge of the table, \"go even further, saying stuff that's so extreme even his buddies want to call me out on it.\"\n\n\"Yeah, they did kind of scold you,\" I grant him, grudgingly.\n\n\"And that, sir, is how the game is won. With a couple of horrid, bigoted remarks, I undermine him with his buddies, remove the possibility of his saying anything more extreme about your sexual preferences, and unite everyone in the room in the opinion that open homophobia shouldn't be tolerated here. If you're keeping score at home, that's a win--win--win,\" he says as he plucks up each packet of sweet visual aids. He drops them back into the white porcelain holder on the table and crosses his arms and then grins at me, waiting for me to applaud or something.\n\nI stare at him for a moment.\n\n\"So,\" I grunt. \"Which is the real Sky, the hyper-bigot or the 'we've got your back' rainbow warrior?\"\n\nHe'd clearly been expecting a more congratulatory response. He seems a little crestfallen.\n\n\"Neither, really, I guess.\"\n\n\"Surely someone who breaks social dynamics down into sugar packets has a better answer than that. Are you really going to tell me that you aren't sure whether you're sexually attracted to women or men?\"\n\nHe looks genuinely shocked at my question.\n\n\"Who said anything about sex?\"\n\nMy turn to be dumbstruck.\n\n\"Isn't that what we've been talking about? You know that's what everyone in the Campus Pride group thought you meant when you said 'We've got your back,' right? That was pretty out there for someone who's not sure.\"\n\n\"Ah, I get it,\" he says, but his sip of espresso is less polished this time. \"You think all of this had something to do with me, with my sexuality?\"\n\n\"Well, duh,\" I respond, because the part of my brain where wit comes from is apparently offline.\n\n\"Here's the deal. First thing you need to know about me is that I'm going to be a senator someday. Maybe president after that. Everything I do here,\" he gestures all around, to the university, \"Is directed at that. I'm going to major in Political Science, I'm going to lead the student groups I join, I'm going to get the University Medal when I graduate.\" He sits back and looks at me, as though saying it has made it so.\n\n\"You do realize you were in a Campus Pride meeting, right? And that there were witnesses? That you hugged a gay man in distress?\"\n\nHe nods.\n\n\"All of that is great--I think it's awesome. But how do you get elected once that story gets out?\"\n\nThe sly grin is back.\n\n\"I'm counting on it getting out,\" he says.\n\n\"Well, as campaign strategies go, that's a new one.\"\n\nHe sits up again, clearly eager for the chance to explain.\n\n\"Look, you've got to think about electoral dynamics in terms of the big cycles. Back before Reagan, fundamentalist Christians were viewed as unreliable voters, outliers in a primarily secular culture. They tended to get distracted by quaint little biblical things, and that kept them from voting reliably Republican. But after Reagan, the party learned to give them enough of what they wanted to keep them in line. It was brilliant. In one political generation, Christians went from the unwanted fringe to the electoral base.\"\n\nI nod, mainly to stay awake. Who talks like this? He takes this as a signal to continue. Great.\n\n\"Latinos were next. Since the late 90s, the Hispanic vote has swung several southwestern states and sometimes Florida, though the Cuban thing muddies the waters a bit. But you start to hear candidates greeting crowds in awkward Spanish, so you know they're feeling the heat.\"\n\nHe stops raises his eyebrows at me, checking for comprehension. I shake my head, because I have no idea why he's suddenly channeling public radio. He sighs and continues.\n\n\"So the next marginalized group to come to electoral power is going to be the sexual minorities. Already in San Francisco and other metro areas it's not possible to get elected without currying favor among gays and lesbians and all of the other categories. That's going to spread over the next decade, until being pro-gay-marriage carries the same weight as saying 'God bless America' at the end of a speech. And that is the electoral wave I am going to surf into office.\"\n\n\"You have got to be kidding me.\"\n\n\"No, I'm dead serious,\" he replies.\n\n\"Isn't that a bit cynical? You're basically planning to use oppressed minority groups to get yourself into office.\"\n\n\"Yes, but once I'm in office I will serve the interests of those groups, as well as the others who elected me. It's a win for everyone.\"\n\nI stare at him. I'm not sure whether to appreciate his optimism or hate him for his naked self-interest. Heh, naked. I remember him naked.\n\n\"But there's one thing you haven't covered,\" I remind him.\n\n\"What's that?\" he asks, with the manner of a politician ready for a follow-up question on a Sunday morning talk show.\n\n\"Men or women?\"\n\nHe stops for a second, blinking. Clearly he thinks I've misunderstood the whole concept of his strategy.\n\n\"That doesn't matter right now.\"\n\n\"How can you say sex doesn't matter? You're going to tell me that you haven't even considered it? That you don't have any preference at all?\"\n\n\"I'm not saying that. It's just that sex has always been the trap into which politicians have fallen.\"\n\n\"Wait. First you say that you are going to ride gay men and lesbians to victory, and now sex is the third rail?\"\n\n\"You're getting sexual identity and sex mixed up,\" he replies, his Patient Voice returning. \"I believe that sexual identity is going to be the next great political boom. In terms of sex, that's a whole different deal. If I were to have sex with someone, that means giving up control of my destiny to that person. Way too high a risk.\"\n\n\"But if everyone accepts everyone's sexual identity, in your little utopian vision of the future--which I am not at all buying, by the way--what does it matter who you sleep with?\"\n\nSky sighs as me, exasperated.\n\n\"Because while I could definitely get elected being straight, gay, or bisexual,\" he replies, still patiently, \"Sluts never win.\"\n\nI look at him blankly.\n\n\"More politicians have had their career derailed by sex than anything else. All I need is one person to show up in a tabloid talking about a night of secret passion while I was supposed to be in a committed relationship with someone else, or involving anything remotely dirty, and I'm done. When it comes to sexuality, the American people will tolerate orientation--what they won't tolerate is bad choices. And that's not going to change anytime soon.\"\n\nHe tosses back his espresso, and looks at me with the satisfied air of an attorney who has just finished a devastating closing argument.\n\nI wish I could say that he is full of shit, but a moment's reflection indicates that he's pretty much right-on.\n\n\"So, have you had your previous sexual partners sign non-disclosure agreements, or something?\"\n\n\"Ha! No, I'm not Tom Cruise,\" he laughs. \"I just haven't had any.\"\n\nThis stops me cold.\n\n\"Haven't had any what?\"\n\n\"Sexual partners. Weren't you listening? Too much risk.\"\n\n\"You're a ... a ... virgin?\" I manage to stutter out.\n\n\"That's what you call someone who hasn't had sex with anyone, yes.\"\n\n\"Wow. That's ... well, that's just bizarre, is what that is.\"\n\n\"Really? I'm eighteen. Until six months ago it would have been technically illegal for me to have had sex.\"\n\n\"Yeah, but that's like the speed limit. It's a suggestion that nobody follows, especially when they're going somewhere they really want to be.\"\n\nHe laughs again at my naivete. \"Not if you want a clean record. And no, I've never gotten a speeding ticket either.\"\n\n\"You, my friend, are seriously weird. And, if I may say, I think that by keeping that body to yourself you are depriving the world of a vital natural resource.\"\n\n\"Think what you like, as long as you vote for me.\" He grins.\n\nI chuckle in spite of myself.\n\n\"One thing, though,\" I begin.\n\n\"Ask me anything--my life is an open book.\"\n\n\"When it's time, and you find the right person, will that person be a man or a woman?\"\n\n\"Most likely. Although I am also open to those who identify somewhere in between.\"\n\n\"No, I mean, how do you identify--gay, straight, bisexual, what?\"\n\n\"I don't think that way,\" he says, simply. \"I believe that when I meet the right person, then I'll know. If it's a man, then I'm gay. If it's a woman, then I'm straight. If the right one turns out to be a couple, then I'll be bi.\" He pauses for a second, then looks me in the eye. \"So put me down on your list as TBD. I'll let you know when it happens.\"\n\nSo that explains the porn choices--mostly straight, because politicians love to be mainstream, but the threesomes to keep options open.\n\n\"Well, I should get going,\" he says, getting up from the table, \"Thanks for taking the time to hear me out. And,\" he adds, a mischievous twinkle in his eye, \"for what you said about my body. You're not bad to look at either.\"\n\nHe turns and strides confidently away, as if the presidential helicopter awaited him.\n\n# 5 #\n\nBuzzed from the coffee, staggered by the political science lesson, I make my way back to the suite. The halls are noisier tonight than they were last night--just about everyone's back to campus, and people are getting reacquainted. Along our corridor there's some big party going on, because I can hear a thumping beat and loud voices as soon as I step out of the stairwell. Someone's risking a nasty-gram from the RA.\n\nAs I walked down the hall, the noise gets louder, until I reach my door and notice that the doorknob is vibrating with the beat of the music. Great--apparently the party is at my place. I swipe my card and open the door, and I walk right into a wall of humanity. The room is full.\n\n\"Josh!\" I hear Dexter, or Porter, call out to me as I shut the door behind me. \"You're here!\"\n\n\"Yeah, and so is everyone else!\" I call back.\n\n\"We invited the guys from the water polo team over for a little reunion,\" he explains, looking genuinely apologetic and just too fucking sweet. If he's the gay one, I just want to kiss him. If he's the straight one, I just want to kiss him.\n\n\"Well, that explains all the tall testosterone in the room,\" I reply with a grin. He laughs.\n\n\"I know, right? It's like being a kid in a meat store!\" Ah, it must be Porter. He winks at me and grins that blazing white grin. \"Come meet the guys.\"\n\nPorter introduces me around. I've never really been into water polo, not since I found out they had boarded up the observation glass that looks into the pool from underwater. If I could watch a dozen Speedo-wrapped parcels bob up and down, smashing into one another, I would get season tickets--from the bleachers it's just not as much fun. But these guys are as tall and graceful and muscled as Dexter and Porter, and I am quite pleased to make their acquaintance.\n\nOnce I've met everyone within shouting distance I settle into the corner and watch the goings-on. There are no women here--teammates only--and that's fine with me. The guys are telling each other about their summer vacations, and as the evening wears on the talk turns from surfing exploits and horrible bosses to which beach boasted the women with the most flexible morals. One of the twins' teammates launches into a story about dating two women at once, which went well until each found out about the other. He was able to effect a detente, however, by having sex with both of them at once. He recounted the scene, in his family's beach house, when one of the women knelt before him and sucked his cock and the other knelt behind him and stuck her tongue so far up his ass he thought that she was trying to french-kiss the one in front. \n\nThis anecdote was quite well received.\n\nA little later, as the party was calming down (gatherings without booze do that) I hear one of the guys say, \"Hey, dudes, Diggler's going to do it. In Dex's bedroom!\"\n\nI look to Porter, wondering what this means. He comes over to me to explain.\n\n\"You should go see,\" he says. \"I think you would...enjoy it.\" He smiles.\n\n\"Who's Diggler?\" I ask. \"Kind of a funny name.\"\n\n\"Yeah,\" he chuckles. \"It's a nickname, from Boogie Nights. We call him that because his cock is, and I'm not kidding here, longer than you've ever seen in your life.\"\n\n\"Well, I don't know about that. I mean, I've seen--\" I stop talking as I see him shaking his head slowly side to side. He holds his hands out in front of him, ridiculously far apart. \"No way, come on,\" I say--my turn to shake my head.\n\n\"I shit you not,\" he says gravely. \"You owe it to yourself to go look. He doesn't do this very often.\"\n\n\"Do what?\" I ask, squinting suspiciously.\n\n\"You just have to see it,\" he says simply.\n\nI'm not one to shy away from any mystery involving an enormous penis, so I go. There are already half a dozen guys in the room, so I claim roommate's privilege and climb up onto the bunk opposite the futon. The other guys stand around the futon, where sits the one named Diggler, who is reposed with Buddha-like calm among the somewhat boisterous crowd. Then, he takes a breath, and the crowd falls silent.\n\nHe nods toward the door, and the guy closest to it pushes it shut. Then Diggler stands, and in one smooth motion, drops his shorts to his ankles. I can't see anything yet, because I'm up on the bunk and he has bent over to pull his feet through the leg holes of his shorts. Then he flops back on the futon and I see that he is naked from the waist down.\n\nAnd it is amazing.\n\nPorter, if anything, sold it short. It is so long you almost forget what the base looked like by the time your eyes reach the tip. It is thin, but it must be a foot long. I think I'm drooling a bit on Dexter's pillow, which is kind of exciting all on its own.\n\nThe other guys in the room are silent, and then it hits me--everyone in here is staring at one of their teammates who is showing off his third leg. Doesn't this strike any of them as odd? And what is he going to do now?\n\nDiggler glances around the room, checking that all eyes are on him (he doesn't look up to the balcony, where I lie, gaping). Then he grasps his cock firmly with both hands, and he leans forward. \n\nOh my god is he going to...? Yep, he is.\n\nAs he leans forward, he sticks out his tongue and touches it to his cock. I hear one of the guys below me gasp. Diggler's tongue flicks around the head of his cock, and the shock and envy in the room is almost palpable.\n\nBut he's just getting started.\n\nHe suddenly opens his mouth wide, crunches up his abs, and takes the top four or five inches of his cock into his mouth. He's sucking his own cock! The gasper below me makes another soft cry of amazement, and I hear several of the guys in the room shift around as if they too have suddenly sprung wood like me.\n\nNow that Diggler has accomplished the enviable feat of stuffing his own cock into his mouth, I expect the show is over. That would be enough to secure his reputation for length far and wide. But as soon as he pulls back, leaving his dick shiny and wet, he plunges down again, taking maybe even a little more of his cock into his mouth. He repeats this motion several times.\n\nIs he really gonna? No, he wouldn't. Would he?\n\nAs his head bobs up and down more and more quickly, the room is silent except for the sound of his exertions. I don't think anyone else is breathing. I notice that his balls are starting to pull up a bit--they're dwarfed by his cock, of course, but they seem a bit on the small side in any case. Now they are snuggled tightly against the base of his towering member.\n\nHe lets out a small groan, and pulls his mouth off his cock for the first time since he started. He grips the thin pole even more viciously, and about every third stroke he swoops down and throats his cock again. His pace is increasing, and it's clear he's about to blow.\n\nHe sits bolt upright, clenching on his cock, and groans a deep rumble. I expect the blast is going to hit the ceiling, given the caliber of the weapon, but Diggler's cock instead oozes milky liquid from the tip which runs over his hands and paints the length of his prick all the way down. He closes his eyes and sighs, which makes his about the least boisterous orgasm I've ever witnessed. It seems a little too little for such a bizarrely public performance.\n\nMeanwhile, the sharp scent of Diggler's cum is hitting the nostrils of his audience. I have found, in my checkered past, that nothing will clear a room of straight men quite as quickly as the smell of another man's semen. There is a concerted shuffling toward the door, and only one of the guys says anything at all--a murmured \"Dude,\" intoned in equal measures of wonder and embarrassment.\n\nThe last one out closes the door, leaving just me and the now drained Diggler. He drops his cock, which flops out before him, dripping a bit onto the futon, and leans back. He wipes his hands on his boxer shorts, which are crumpled next to him. I suddenly realize that he doesn't know I'm here.\n\nI'm about to announce my presence (with what words I have no idea, because what does one say after such a performance?) when I hear noise from the futon--Diggler is crying. Crying! Why a guy with a foot-long cock is crying after having made all of his super-meaty teammates green with envy is beyond me. But there he sits, sobbing quietly, still naked from the waist down. His cock, meanwhile, has shrunk to a mere 10 or 11 inches. The guy is clearly a show-er, not a grow-er. But, of course, I've already seen the show.\n\nI can't just lie here forever--it feels creepy. I first rock my hips side to side to judge the status of my hard-on--it has faded to merely stiff from the rock-hardness it attained during the show. Should be presentable.\n\n\"Dude?\" I say, as quietly and calmly as I can. I don't want to scare him, or embarrass him any more than I have to. Despite the exhibitionistic display, I can sense that he could be very upset that someone's watching this aftermath.\n\nHe startles, looks up at me, and jumps to his feet and thrashes about trying to pull his shorts on.\n\n\"Hey, don't freak out,\" I say calmly, hoping that he won't hop around with one foot caught in his shorts and crash into the TV.\n\n\"What are you doing up there?\" he asks, clearly upset.\n\n\"I was just watching the show, man,\" I reply, making my way down off the bunk. \"The orchestra was full when I got here, so I headed for the cheap seats.\"\n\nHe stares at me, now realizing that I'm not one of his teammates.\n\n\"Who are you?\" he asks, angrily.\n\n\"I'm Josh. I'm Dexter and Porter's roommate. And,\" I add, with what I hope is a winning smile, \"I'm your biggest fan.\"\n\nThis seems to make him even more upset.\n\n\"Well, the show's over,\" he says with an air of grim finality, and begins slipping on his shoes.\n\n\"It was awesome,\" I say, unable to hold back any longer.\n\n\"Huh,\" is his only reply, which I'm not sure whether to count as a chuckle or a grunt of disgust. He's clearly still upset, and a rational person would simply fall silent and let him escape.\n\n\"So, how long have you been able to do that?\"\n\nSee, not rational.\n\nHe looks at me, his eyes bloodshot, his mouth quivering. He seems to be working something out in his head--like differential equations--and then he sighs again.",
        "\"Look, I don't really talk about it much. Truth is, normally guys can't get out of the room fast enough once I'm done.\"\n\n\"Yeah, I noticed that. But I'm not like most other guys.\"\n\nHe looks at me, hard.\n\n\"You gay?\"\n\nThis is either a blunt question or a simple statement in caveman language. I take it as the former.\n\n\"Yep.\"\n\nHe nods. \"Thought so.\"\n\n\"How could you tell?\" I ask, not really curious, but wanting to keep him talking.\n\n\"When you said it was awesome, you really seemed to mean it. Most guys wrinkle up their noses when they talk about it. If they talk about it at all.\"\n\n\"Yeah, guys, right?\" I reply, rolling my eyes conspiratorially.\n\n\"I'm straight,\" he says. He looks at me as though expecting me to argue with him or something. I don't, of course--statistically, the vast majority of guys are. \"Not that it really matters,\" he sighs, plopping down on the futon again.\n\nBreakthrough! I sit down next to him, not too close.\n\n\"What do you mean, it doesn't matter?\" I ask. If he needs someone in whom to confide the difficulties of having a stupendously long cock, I'm his man.\n\nHe squints at me, apparently trying to figure out whether he can trust me. But there is that tiredness in his eyes, and I suspect that the desperate need to share his burden with someone is going to win out.\n\n\"You said you're Josh, right?\" I nod. \"I'm Clark. Pleased to meet you.\" He extends a hand--the one that just moments ago had cum running over it. I take it and give it a firm shake.\n\n\"Pleasure's all mine, sir,\" I reply, and there's a flicker of a grin. Good.\n\nHe sighs again, shakes his head, mutters \"Shit,\" under his breath.\n\n\"Clark, I'm going to go out on a limb here. You have the most amazing dong in the world, and it it were mine I would spend every moment of the day doing what you just did, and every moment of the night having other people do it for me. There would be a line at the door.\"\n\nHe grunts again.\n\n\"But, being the sensitive and perceptive person that I am, I can tell that you are not entirely happy. The only conclusion that I can come to is that it does not give you the pleasure that I think it would. In fact,\" and here I pause for dramatic effect, \"It seems to me that what brought these other guys into this room is the very thing that is making you so unhappy.\"\n\nHe looks right into my eyes, an expression of pure disbelief on his face.\n\n\"How did you know that?\" he whispers.\n\n\"I'm not brilliant at a lot of things, but I'm kind of a cock savant.\"\n\nHe shakes his head, and squints at me again. Then he mumbles something under his breath.\n\n\"What? I didn't hear that,\" I say, leaning closer.\n\n\"I'm a virgin,\" he says in a very low voice.\n\n\"Oh,\" I say, trying to keep the shock out of my voice. A virgin? Seriously? This is like Michael Jordan deciding not to go out for basketball.\n\n\"That's...\" I have no idea how to finish that sentence. He looks deeply ashamed. I need to fix this.\n\n\"I guess I'm just surprised that a guy as handsome as you would--\"\n\n\"You mean hung like me, right?\" he interrupts.\n\n\"No, of course that's not what I meant,\" I blurt effusively, trying to cover the fact that this is precisely what I meant. He's definitely easy on the eyes, but the cock kind of steals the show.\n\n\"It's not like I haven't tried,\" he says quietly, then slouches back into the futon, miserably.\n\n\"What do you mean?\" I ask, trying to match his quiet tone and his slumping posture.\n\n\"I mean that I tried, and I couldn't do it,\" he says, a bitter edge in his voice.\n\nI try to imagine how this would be possible, and then it finally comes to me.\n\n\"Oh, let me guess,\" I say. \"She took one look at what you're packing and fled in a panic, right? Too much man for her to handle?\"\n\nIf he's flattered by my assumption he doesn't let on.\n\n\"No, it's not that,\" he says, Eeyore-like. \"That did happen this one time, but mostly it's...\" He trails off. I wait.\n\n\"It's what?\" I prompt. Clearly I suck at waiting.\n\nHe looks at me again, with a strange intensity, and then he closes his eyes.\n\n\"It never gets hard,\" he whispers, and then, shaking his head, he turns away from me completely.\n\n\"It looked plenty hard to me a few minutes ago,\" I reply, in my most upbeat tone.\n\n\"It wasn't. It doesn't have to be--didn't you notice that I never let go of it?\"\n\n\"I noticed everything; I never took my eyes off of it.\"\n\n\"Well, I can make it work by myself, but when I get into bed with a chick, even one who's willing to try taking it, I can't get it in. It just doesn't get hard enough.\"\n\nNow, I've counseled my share of guys who couldn't get hard with women--I've kind of made a specialty of it, given that most of them are in denial about being gay, and I happen to drive the welcome wagon for their newly accepted orientation.\n\n\"But it gets hard when you do it, right? Like when you're rubbing one out alone?\"\n\n\"No.\"\n\n\"What?\"\n\n\"No. It never gets hard.\"\n\nHmm. This is one I haven't heard before.\n\n\"I even stole a Viagra from my grandfather's medicine cabinet once. No dice. All I can get is a semi-boner.\"\n\n\"Have you talked to a doctor?\"\n\n\"Yeah, a couple of years ago when I came to the U and could see someone other than my doc at home I did. He said that the longer the penis the more likely it is that it won't get fully hard. And mine was the longest one he'd ever seen.\"\n\nNormally that's good news, but not in this case.\n\n\"Clark, I just think you haven't found the right woman.\"\n\nHe grunts a dismal chuckle.\n\n\"Well, the right women don't date me. The ones I meet all seem to hear about me before I get a chance to go out with them. Based on what they hear from the other guys, they are either terrified or out for a trophy. Both kinds are bad. I kind of gave up.\" He looks up, stares me in the eyes. \"I just can't do it, and I guess I never will.\"\n\n\"But you've had blowjobs, right?\" I ask. He shakes his head. \"Handjobs?\" I offer, more tentatively. He shakes his head again. \"No jobs at all?\" He shakes his head twice and then buries his face in his hands.\n\nIt suddenly becomes clear to me.\n\n\"So putting on this show is the only way...\"\n\n\"To have any kind of sex with someone else in the room,\" he finishes my sentence.\n\nThis is really sad.\n\n\"I don't know why people keep asking me to do it, actually,\" he continues. \"I did it once just out of desperation, and then they kept pushing me to do it again. I have no idea why they want to see it. And I'm not too happy about what makes me do it, either.\"\n\n\"I can help you with that one,\" I say. \"Straight guys are all about the cock. They see you in the locker room and they can't keep their eyes off of you. They fantasize about being you, and seeing you do this is the closest they can come to it.\"\n\n\"But they're straight,\" he replies, as if mystified by this.\n\n\"Yes, they are. And, like I said, straight guys--all guys--are obsessed by cock. Women, in my experience, could for the most part care less about penis size. But dudes? To them it's the magic number, the key to the kingdom. They are constantly measuring themselves up against the guys they see in the locker room, or in porn. Straight guys are fixated on cocks, their own and everyone else's, just as much as gay guys are.\"\n\n\"But that just makes it worse for me,\" he mutters. \"They all think I'm some kind of super stud. At least since I started doing this performance they don't ask me about who I'm fucking anymore. It's like they don't want to talk about it because they've watched me do this.\"\n\n\"Makes perfect sense to me,\" I reply, recalling Sky's sugar-packet analysis from earlier this evening. \"You've leaped over regular sex into this bizarre thing that they can't admit they enjoy watching. You found the perfect way to shut them up!\"\n\nHe gives a half-grin, the most cheerful thing he's done since I met him.\n\n\"Great. Now how do I solve my real problem?\"\n\n\"I'm glad you asked, sir. I have some ideas.\"\n\nHe looks positively elated--relieved at having finally confided in someone, and hopeful in my abilities to actually help him.\n\nThis is going to be fun.\n\n# 6 #\n\nAfter jock-dorm move-in, the rest of freshman week is pretty much a drag. I answer questions, pass things out, direct traffic as wave after wave of new students are dropped off. Then I get to lead silly ice-breakers and social events until my brain is bleeding from trying to learn the names of several thousand lost newbies. Things finally settle down as the weekend approaches and I have a spare moment to stop by the room my friend Calvin shares with his boyfriend, Reese.\n\nThey're allowed to share a dorm room because of a discrimination lawsuit a couple of years ago that forced the U to recognize committed same-sex relationships. And honestly, there was never a more perfect couple to be covered under the policy they call Section 28; if Calvin and Reese hadn't been able to live together, they both would have had to be committed. Like to an insane asylum. They are that crazy for each other.\n\nI'm excited tonight because Calvin's finally going to tell me about the amazing job he's gotten lined up for me. Both he and Reese are on scholarships (football and lacrosse, respectively), and he said at the end of the previous school year that he had a line on \"the perfect job\" at the athletic complex. I'm not a jock myself, but the idea of having a job where I would be surrounded by them all day kind of gives me a boner.\n\nCalvin and Reese's room is in a far less modern dorm than mine; in fact, all of the Section 28 couples live along the same stretch of ratty hallway. I'm friends with two of the three couples; Calvin and Reese I'm close to because I sort of helped them get together last year. I knock on their door, and Reese answers.\n\n\"Hey, Josh! Great to see you, buddy!\" Reese pulls me to him in a hug so strong that he just about squeezes the air out of me. The fact that he's not wearing a shirt may be a contributing factor to my breathlessness. He loosens his grip a bit so that he can look me in the eye.\n\n\"I've missed you,\" he says with a chuckle and a grin, and then he kisses me. And not a peck on the cheek, either--this is third-date kissing. I kiss him back, of course, because Reese kisses like no one in the world; his tongue knows how to do things that one must normally sell one's soul to Satan to learn.\n\n\"Ahem,\" rumbles a deep voice from the room.\n\nIf Reese is in a rush to break our kiss just because his boyfriend is getting impatient, it doesn't show. He spends a long moment trying to put my mouth back in order, having deranged it completely with his ministrations, and finishes by giving my ass a firm squeeze with both hands.\n\nI step back, panting. Reese winks at me.\n\n\"Are you finished mashing on my boyfriend?\" Calvin grunts at me as he stalks across the room to where we're standing. He sounds fierce, but he breaks into a grin as he opens his arms and wraps me up in them. He's clearly trying to outdo Reese in the vigor department, and I think I hear a rib crack.\n\n\"It's been far too long, my friend,\" he whispers, a soft rush into my ear, causing goosebumps to shoot down my entire left side. He lets up the pressure, his hands moving up to my face, where they cradle my jaw. His thumb brushes the hollow of my cheek, just like he did the first time he kissed me, back before Reese was here, back when he was straight, way back on the other side of this love we share. Then he kisses me, and it's like the first time I've ever been kissed. The first time anyone's ever kissed anyone. Fuck, how can he always do this to me?\n\nFinally, he releases me, and I try to make my knees bear my weight again.\n\n\"You guys...\" I murmur. I shake my head, and they laugh. \"I can't believe it's been so long.\"\n\n\"Not our fault,\" objects Calvin, who has slung his arm around Reese's shoulder.\n\n\"Yeah, we were just at Aunt Emily's cabin. You could have come up anytime, but no, you had to go gallivanting around Eastern Europe all summer.\"\n\nI had spent a good part of the summer on a service trip with my friend Pete, who lives next door to Calvin and Reese with his boy Nick.\n\n\"Hey! We were just making the world safe for democracy!\" I cry, defending my honor. They laugh at me. \"And there might have been the occasional Bel Ami boy who needed to be liberated from his narrow view of sexuality.\" They laugh harder. \"Hey, I got service credits for it toward graduation!\"\n\nThis cracks them up completely. Calvin is the first to recover.\n\n\"Wait! Wait!\" he laughs, his eyes streaming. \"You finagled college credit for blowing your way across Buttfuckistan?\"\n\n\"Shut up, you crude jock,\" I mutter, taking a swipe at his rock-solid shoulder. \"It wasn't like that.\"\n\nThey dry their eyes, and nod their heads seriously as if trying to convince me that they believe that it was not, in fact, like that. They don't succeed at this.\n\n\"Now, are you going to show me your glamorous den of sexual iniquity, or what?\"\n\nThey take two steps back, and I take two steps forward.\n\n\"There, now you've had the full tour,\" Calvin says. The small room is a mirror-image of Pete's, next door.\n\n\"We just got here this morning, so we haven't really set it up,\" Reese says. \"But it was sure nice of the U to give us a double bed.\"\n\n\"Actually, I think that's queen size, which makes it perfect for you two,\" I laugh. I love to tease the guys, as they've been out for less than a year. Before one weekend last fall when all three of us found ourselves at Reese's aunt's cabin, they were sure they were straight.\n\n\"So,\" I say, flopping myself down on the bed. \"Tell me about this job that you're working on for me. Does it involve helping jocks wash those hard-to-reach spots?\"\n\n\"You are such a perv,\" Reese says, shaking his head in the disapproving manner of a shocked suburban housewife. But he's smiling as he does it.\n\n\"Yeah,\" Calvin nods, \"All I had to do was go to the athletic director and tell her that I knew a guy who could help rid our teams of their distracting pre-game hard-ons. She totally wants to give you the first scholarship in Advanced Fellatio Studies.\"\n\nI throw a pillow at him, pointlessly. It bounces off him without a sound. Reese catches it on the way down, glares at me, tosses it back on the bed.\n\n\"Well, what is it then? Scrubbing fungus off the mats in the weight room? Picking muck off of cleats?\"\n\n\"One word,\" Calvin says, his eyes aglow with expectation. He looks like he's going to bust.\n\nI wait.\n\n\"What's the one word?\" See? Terrible at waiting.\n\n\"Towels,\" he says, then takes a breath and stares at me as if he fully expects me to pass out from excitement.\n\n\"Towels?\" I ask.\n\n\"Towels.\"\n\n\"Towels?\" I ask of Reese, hoping he can help me understand what this means.\n\n\"Towels,\" he says, nodding gravely. Great.\n\n\"So, what do I do with towels in this dream job you've come up with?\"\n\n\"Well,\" Calvin begins, suddenly channelling a car salesman offering the best deal ever, \"You know that they're going to be opening the new athletic complex next week.\"\n\n\"Yeah, I noticed that the construction site was all cleaned up. It was fun while it lasted--sometimes those construction workers were pretty hot. Though they didn't always appreciate my whistling at them.\"\n\nReese fixes me with a disbelieving squint.\n\n\"You harassed construction workers?\"\n\n\"Just when there were hot ones. Most of the time it was a total loss--you know, the slobby ones with the saggy coveralls--but at the end of the summer when the lifers were needed on other jobs, they brought in the reserves. Mostly guys from the construction program at the tech college. They would wear just tight jeans, steel-toed boots, and a tan.\" I sigh at the recollection.\n\n\"You are impossible,\" Reese chuckles. Clavin raises his eyebrows, asking if he may be allowed to continue. I straighten my face, and nod expectantly.\n\n\"So, as part of the new locker room setup, they have a big shower area in the middle of all of the different sports' locker rooms. Everyone showers up in the same place, instead of having a bunch of smaller showers scattered around.\"\n\n\"Well, yea for architectural efficiency,\" I cheer, with ironic jazz hands conveying my sarcasm. \"I'm all for packing the showers with as many jocks as possible, but I still don't get the towel part.\"\n\nCalvin sighs. He's always been charmed by my inability to listen quietly. He's chewing his lip he's missed me so much.\n\n\"I'm getting to that. Now, when every sport had its own shower, the towels got scattered all over the place. They lost hundreds of them. People would take them home, or just drop them somewhere, or stuff them into a duffel that they would leave at some chick's house, or whatever. Cost the U thousands a month.\"\n\n\"Okay, so I'm supposed to hunt down lost towels? Do I get a bounty? Can I rip them off of the guys in the locker room? Cause that would be awesome. Do I get a badge or something?\"\n\nCalvin just looks at me and shakes his head, wearily.\n\n\"No. What you do is work at the towel counter next to the showers. You hand guys a towel when they walk into the shower area, and you collect it when they walk out. Simple as that.\"\n\nI try to figure out why Calvin thinks that handing out dry towels and collecting wet ones would be the perfect job for me.\n\n\"I don't get it. That sounds like it would be really boring.\"\n\n\"Think about it, Einstein. When the guys walk past your counter, they are going into the shower. And when they come back and hand you their towel, they're on their way back from the shower.\"\n\nThen it hits me.\n\n\"So I sit at a counter, and hand towels to naked jocks.\"\n\nCalvin nods.\n\n\"And then I collect towels from them so that they are naked again.\"\n\nHe nods again, more vigorously.\n\n\"So it'll basically be a non-stop parade of hot naked guys.\"\n\nHe and Reese both nod, laughing at my slowly dawning awareness of how awesome this is.\n\n\"And it gets better,\" Calvin says.\n\n\"It can't get better, unless we also make it a kissing booth.\"\n\n\"Oh it does. When there aren't any teams using the showers, you go around to the other parts of the facility and stock the towels, and collect the used ones.\"\n\n\"Which other parts?\"\n\n\"How about the training rooms, where guys get rubbed down after practice?\" Reese snickers when my eyes light up at the insinuation in his husky voice.\n\n\"And the sauna and whirlpool area,\" Calvin adds, \"And the weight room.\"\n\n\"Holy fuck,\" I gasp, \"You were right. I would actually pay to have this job. I'll be able to cancel my subscription to the Str8 Frat Dudes site!\"\n\n\"I thought your buddy Nick got you a free membership since he works there,\" Reese asks, always eager to remind me that he knows all about my porn addiction. Of course, if I had a naked Calvin in bed with me every night I wouldn't give a crap about porn either. Bastard.\n\n\"I'm just making a point,\" I sniff at Reese, pretending to be offended. \"I'm going to have to wear compression shorts on the job, though. Unless I need an extra place to hang towels.\"\n\nIgnoring my subtle innuendo, Calvin continues. \"On Monday I'll introduce you to the athletic director. I've already told her about you, so all you need to do is not come off like a drooling pervert and the job is yours.\"\n\nI hope I can do that.\n\n\"You are amazing, Calvin,\" I say, throwing my arms around him. \"I don't know how to thank you.\"\n\nHis leer says he has some ideas. He grabs me around the waist, lifts me off the floor, and walks toward the bed. Next thing I know, I'm on my back, Calvin on top of me. Reese pads around the room, switching off the light and drawing the curtain. Then he joins us on the bed.\n\n\"So, I was thinking, before we get dinner,\" Calvin murmurs, kissing his way along my throat, \"That we should commemorate our reunion.\"\n\nI feel Reese's hand snaking up my leg, seeking my already surging cock. \"Just like old times,\" he purrs.\n\n\"If you mean old times like when we camped on the beach in May and fucked sand into every crevice, then I'm in.\"",
        "It feels so good to be back with my boys. Dinner can wait.\n\n# 7 #\n\nSaturday morning I discover an unfortunate fact: at 10am the sun sneaks up and blasts through my window, directly on my pillow. Stupid sun.\n\nCompletely exhausted from my \"reunion\" with Calvin and Reese, I reach over and try to adjust the curtains, but the light is glaring through the gap between the curtain and the window frame (I whisper my expletive-laced thanks to the U for providing interior design by the lowest bidder) and I can't block it. Now I'm awake, though, so I might as well get up.\n\nI'm supposed to meet Diggler for lunch today--it took me several dozen text messages to get him to agree to talk with me about some ideas I have for his problem. I'm a problem solver, I am. Especially when the problem involves a dick that's simply too long. Oh, I have ideas.\n\nSeth is snoring away opposite, oblivious to the sun, and to my somewhat clumsy descent from my bunk (the boys got a bit frisky last night, so I step gingerly). The door to the twins' room is open, and they are apparently already at the gym doing their KGB assassin-training calisthenics or whatever. I head for the kitchenette to nuke some water for coffee. The sludge they serve in the commons is horrifying, so I keep a french press in the suite.\n\nHeh--french press. Sounds like what Reese did to me last night.\n\nFortified by the coffee, I go for a run, and then get washed and dressed. I walk a couple of blocks to lunch with Diggler. I suggested that we meet off-campus, since I don't think he'd want to be overheard by anyone he knows. Even so, I'm not sure he's going to show. I grab a booth near the back, and wait.\n\nIt's nearly 12:30 by the time he finally slips in the door, looking furtively around the place until he sees me waving at him. He hustles over, apparently eager for the privacy of the booth. He slides in opposite me, his eyes sweeping the room again. It's like something out of a Grisham novel.\n\n\"Were you followed?\" I whisper, looking around the room like a spook. His panicked expression tells me that he doesn't get the joke. \"Just kidding,\" I laugh. \"You act like you just snuck secret plans out of the embassy.\"\n\nHe smiles slightly, and shrugs, and blushes a bit. I hadn't really noticed before that he's kind of cute.\n\n\"Sorry,\" he says, shrugging again. \"I just feel kind of funny about this, is all.\"\n\n\"Funny about lunch? What, you don't normally eat?\"\n\n\"No, about meeting you. And,\" he looks around again, \"I've never been here. What kind of place is it?\"\n\n\"It's a restaurant. They serve food here.\"\n\n\"I know that. But it is a...\" he leans over the table to whisper to me, \"A gay restaurant?\"\n\n\"Well, it kind of looks that way when you lean across the table and whisper in my ear.\"\n\nAgain, the joke thing doesn't work. I've got to try to stop trying to lighten the mood.\n\n\"No, it's just the usual boulangerie-style sandwich-cafe thing,\" I assure him, as earnestly as possible.\n\n\"There are so many plants.\" He says this as if I surely must have been thinking the same thing. \"Seems kind of gay.\"\n\n\"Yes, there are many plants,\" I say, slowly, trying to calm him down a bit. \"Why don't you take a look at the menu and pick something to eat? That'll take your mind off all the suspicious greenery.\"\n\nHe reviews his options on the menu, frowning a bit. \"It seems kind of fancy,\" he says, in the same tone of voice one might use to call attention to dog crap on someone's shoe.\n\n\"Look, I have not lured you to a den of iniquity to seduce you with a triple-decker sin sandwich covered with fancy, fancy gruyere cheese, under a canopy of gay ficus plants. This is just a restaurant, and this is just lunch. Think you can get the heck over it, please?\"\n\nHe blushes a bit and looks a bit ashamed at me. \"Sorry,\" he says, \"I'm just nervous, I guess.\"\n\n\"Well, take a deep breath, pick a sandwich, and take a swig of this camomile iced tea with lavender sugar.\" I push my glass across the table to him, and he looks at it.\n\n\"Sounds kind of--\" He stops short when he sees my nostrils flare. \"Kind of delicious, is what I was going to say,\" he blurts, smiling anxiously. He takes a sip.\n\n\"Not bad,\" he says. I just hope the herbs relax him a bit. The waiter appears at this moment of relative calm, adorable eyebrows raised in expectation that I will finally order. I don't know where the management keeps finding these beautiful specimens of the waiterly arts, but I wholeheartedly approve of their hiring priorities.\n\n\"So, the artisanal sausage...\" I begin, glancing at the menu, \"How is that?\"\n\nHis eyes light up. \"It's an amazing blend of local pork and heirloom herbs. Delicious. But,\" he leans in a bit, \"It's often too much for one person.\"\n\n\"How big is it?\" I ask, innocently. I've been flirting with waiters since I was five years old.\n\n\"Nearly a foot long,\" he says in an awed whisper.\n\nI notice Diggler blushing furiously.\n\n\"Well, Dig, what do you think? Want to share a foot-long with me?\"\n\nHe makes a weird gasping noise, and presses his hand to his brow. I'm getting really worried about whether he's still breathing when he finally bursts out laughing. Finally, I think I'm reaching him!\n\n\"That would be great,\" he says, a little too loudly. \"Let's definitely share a foot-long sausage. We can even take turns biting off the end, how would that be?\" More maniacal laughter. He sounds a bit unhinged.\n\nThe waiter, ever helpful, says, \"Oh, no, sir, I'll have them cut it in half. That'll be no problem at all. Now, would you like an ice tea of your own?\" A sly grin appears at the corner of his mouth.\n\nDiggler sighs, surrendering. \"Yeah, that would be nice. Thanks.\"\n\nThe waiter nods gravely, and retreats. Diggler glares at me.\n\n\"Is this all a big joke to you?\" he mutters, accusingly.\n\n\"Most things are a big joke to me,\" I reply. \"I find it's better to laugh about things than to cry about them, any day.\"\n\n\"Well, it seems like you're laughing at me.\" He looks down at the table.\n\n\"No, no, I'm not--really! It's just that if you get all depressed and dismal about what's bothering you, nothing's going to help.\"\n\n\"I don't think anything's going to help anyway.\"\n\nHis ice tea arrives, and he takes a swig.\n\n\"Oh, I wouldn't be too sure about that,\" I say, pulling out my laptop. \"I have a plan for you.\" I turn the computer toward him, showing him the chart on the screen.\n\n\"What's this?\"\n\n\"It's my plan for you.\"\n\nHe squints at the screen. \"You're going to fix my junk with a flowchart?\"\n\n\"Yeah...no.\" Deep breath. \"My theory is that you haven't had the right stimulation, because you haven't given yourself a chance to find what that is. So, this is a sequence of stimuli that you're going to try. See, here,\" I point to the first box in the chart, \"This is the first thing you do. There are three porn sites listed here that I want you to visit, and see how the big guy reacts. Then you go to the next box, and try those.\"\n\nHe studies the chart.\n\n\"This is a lot of porn--it would cost a fortune.\"\n\n\"That's the beauty of my plan. I have a friend who works for a porn site, and he got me a pass that you can use for all of these.\"\n\n\"He just gave you that for free?\"\n\n\"Well, I told him about your problem, and he was very eager to help.\" Nick was also very eager to recruit Diggler to work for his site. I don't tell him this.\n\n\"So, let's say one of these sites works for me--how does that help?\"\n\n\"It will give us a sense of what works for you. Once we know what turns your crank, we'll be able to move into real-world testing.\"\n\nDiggler nods slowly, frowns a bit, then nods more definitely.\n\n\"OK, I'm game. Can you send me this chart?\"\n\n\"Of course. But first you have to agree to view whatever the chart tells you to. No matter what. We have to approach this scientifically.\"\n\nHe looks at me, hard. I can see that he's trying to decide whether he can really trust me.\n\n\"Promise?\" I prompt.\n\n\"Promise,\" he says, with a sigh of resignation.\n\n\"Excellent. I'll email this to you right now.\"\n\nAs I slide my laptop back into my bag, our sandwiches arrive. Diggler stares down at his.\n\n\"This would be easier, you know,\" he says, under his breath.\n\n\"What would?\"\n\n\"Just to cut it down to size.\"\n\nMy turn to gasp. \"Oh, hell no! You don't cut the Eiffel Tower in half because people get winded climbing the stairs! All we need to do is find the person who will appreciate--who deserves--what you have.\"\n\nHe looks up at me, eyes glistening a bit, blinking.\n\n\"You're...amazing,\" he says, softly, then looks back down.\n\n\"Pssh. I'm just a good judge of character. I can tell that there's a pretty great guy attached to that Eiffel Tower.\" He blushes, sips his drink. \"Now, chow down on your sausage.\"\n\nI wonder if chamomile tea stings when it shoots out one's nose. By the time he finally stops laughing, I've forgotten to ask him.\n\n# 8 #\n\nSaturday evening comes hot and sticky--the last gasp of summer before school starts, just to remind us what we're going to be missing out on once classes gear up. Tonight is the welcome-back mixer for the Pride Alliance, and as VP I'm pretty much expected to host the event. We're holding it in the student center, in a room that the decorations committee (sorry, \"Team Fabulous\"--they made me promise to call them that) has transformed into a tiki paradise. Little white lights glitter from the ceiling, palm trees adorn the walls, and there's a genuine tropical vibe to the whole deal. I just hope I'll find my way under someone's grass skirt tonight.\n\nThe crowd is larger than I'd expected it to be--lots of new faces, and some familiar ones that I wouldn't mind getting more familiar with. I work the room a bit, then circle back around to my likeliest prospect. Yes, I am using an official event of the Pride Alliance as a hook-up opportunity. I definitely did not sign a vow of chastity when I ran for VP.\n\n\"Hey, Mitchell, good to see you.\"\n\n\"Hey, man, you too. How was your summer?\"\n\n\"Can't complain. Yours?\"\n\n\"It was awesome. Spent the whole thing at the beach. Pulled a few kids out of the waves, collected a nice paycheck.\"\n\nI met Mitchell during the spring semester when he showed up as a model in my Life Drawing class. As soon as he walked into the studio he took my breath away. He was beautiful in regular clothes, but when he posed with his shirt off I was barely able to hold a pencil. Then, second hour, he took it all off, and I would have had better luck dipping my cock in paint and trying to capture his likeness that way. He was tan all over, and he had the most gorgeous body, top to bottom. Oh, that bottom.\n\n\"So,\" I venture, testing the waters a bit, \"You're here.\"\n\n\"Yep, I'm here,\" he nods.\n\n\"Does that mean that you've decided?\"\n\nMitchell, I'd found out once I chased him down after class, was on the horns of a dilemma. He had dated women since high school, but lately had started to draw some interest from men (not hard to figure out why, since he looked like six feet of sex), and that had made him a bit curious. I, naturally, had tried to help him in his struggle of self-definition. Alas, summer came before I could really lay hands on the issue.\n\n\"I think so. I mean, I'm open to new...stuff.\" He looked at me with arched eyebrows. God, I hope he means he's open to my stuff.\n\n\"I see. That's terrific. Is there anything I can do to, um...help you? With your...stuff?\"\n\n\"You know, I think there might be,\" he says, then sips his drink and grins at me. Hot damn. \"How 'bout we slip out of here and we'll see?\"\n\nOh hell yes.\n\n\"I think that that can be arranged. Give me five.\"\n\nHe nods and smiles, and I make a lightning circuit of the room, welcoming the newcomers and expressing regrets for my sudden need to depart. Emergency, can't be helped, you stay and have fun, don't worry about me. Then I'm back to Mitchell.\n\n\"Let's go,\" I mutter as I walk briskly past him. He glances around, then follows me out. In the hall we're giggling like middle school girls, pleased indeed with our transgression. He leads the way to his car--it hadn't occurred to me that he would live off campus. I'm fine with that, though, since it's hard to be intimate in a dorm room without shocking the roommate. Or the neighbors. Or people walking by outside--I tend to be a little loud sometimes.\n\nMitchell's place turns out to be a tidy little studio stuffed into the rafters of a big old house a dozen or so blocks from campus. Standing in the place that is his alone gives me a pang of jealousy, but then I remember that my living alone would mean not having the twins' asses to look at in the morning as they groom. Seems kind of a stiff price.\n\nMitchell sits on the bed, looking expectantly at me. I sit next to him, and I can suddenly feel the nervousness radiating from him.\n\n\"You okay?\" I ask.\n\n\"Yeah, I am,\" he says, uncertainly. \"This is what I want.\"\n\nI'm still not believing him. But before I can try to reassure him that we'll take this as slowly as he needs to, he suddenly clamps his mouth on mine with a force that's a little terrifying, honestly.\n\nIs he kissing me?\n\nHe's doing this sort of licking-slopping-smacking thing that makes me wonder whether he's trying to chew my gum for me. But I'm not chewing gum.\n\nI try to ease him up a little by grabbing his jaw with my hands, holding him down so that I can actually try to kiss him, because I've dreamed of this moment, of kissing him, and it was romantic and hot and not at all like having a Saint Bernard maul you, which is what this feels like.\n\n\"Whoa, dude, slow down,\" I murmur, hoping to come off suave and suggestive. I just don't want to get my tonsils hoovered out.\n\n\"You're making me so fucking hot!\" he blurts, again lunging for my mouth.\n\nI'm trying to figure out what I might have done to provoke this reaction, but I'm kind of distracted by worrying about whether my fillings are still in place--such is the force of his rummaging through my oral cavity. Jesus he's going to be tasting the burrito I had for dinner if he keeps at it!\n\nI push him back, with effort.\n\n\"Mitch, buddy, take a breath,\" I finally manage to say through all of the saliva pooling in my mouth. It's mostly his.\n\nHis only response is to fix me with a somewhat savage glare. Then he whips off his shirt, and--I wish I were kidding here--his pecs start to jump, in turn, like a meat see-saw.\n\n\"Do you want to fuck this?\" he growls at me.\n\n\"What?\" is the only thing I can think to say. What, exactly, am I supposed to want to fuck--his bouncing boobs? They're nice and all--if anything, he's got an even more amazing body than I remember from art class--but I don't know what the hell he wants from me.\n\nHe reaches for me, and in a blur of motion my shirt goes the way of his, and now we're both naked to the waist. Then he's on my mouth again, his tongue doing what feels like a swab for strep. And he keeps up this constant refrain of moaning and grunting that makes every laxative commercial I've ever seen spring horribly to mind.\n\nI either have the take the initiative or smother him with a pillow. As murder tends to result in unfortunate mug shots, I decide on the former route. I break the squelching thing that he thinks is a kiss by putting both hands on his chest and pushing back firmly. Taken by surprise, he flops backward on the bed and looks up at me, stunned into silence. Thank god.\n\nI pounce on him, straddling his hips, and begin undoing his pants. Perhaps if I get him naked and boned up he'll stop slobbering and grunting.\n\nI reach my hand into his pants--gold mine!\n\nHe's not wearing underwear, the dirty boy, and my hand wraps around a hot shaft of throbbing cock. Actually, I can't quite wrap my hand around it, as it's just too thick. I remember his package being hefty in Life Drawing, but he's even bigger on the bone.\n\n\"Mitchell, you brought more to the party than I expected,\" I purr, fondling his prick but keeping it under wraps. I want him insane with anticipation before I unleash this monster.\n\n\"Oooh, fuck yeah,\" he breathes, his eye rolling back in his head.\n\nNow that's more like it. I run my fingers up and down as he writhes beneath me.\n\n\"Oh, yeah, squeeze my cock, man, squeeze that fucking cock! You like that cock?\"\n\nI answer his insipid rambling by squeezing quite firmly.\n\n\"Aiee!\" he squeaks, his body folding instinctively to protect the family jewels. He's panting suddenly, which I hope will keep him from talking any more.\n\n\"Sorry, bro,\" I whisper into his sweating face. \"Got carried away. Lie back and I'll be more gentle with it.\"\n\nHe lies back on the bed again, somewhat gingerly, as if expecting that I might try to pinch his cock off at any moment. To reassure him, I undo the top button on his pants, and kiss the patch of golden skin that is exposed as I push the fabric open. I pull the zipper down a bit, and kiss the next bit of perfect flesh that appears. Zip, kiss, zip, kiss, and then I'm running my lips across the base of his cock, feeling the carefully trimmed pubes I remember from drawing class tickle across my nose. He is warm and tasty and I'm finally feeling like this date is going in the right direction--you know, down. \n\nThen he starts up again.\n\n\"Oooooh, yeah, stud,\" he moans, thrashing his head around. I feel his hands on the back of my head, pushing me down onto his cock. \"Fuck, yeah, lick that cock,\" he grunts, \"Lick my fucking cock! You like that fucking cock, do you? Oh, shit, yeah!\"\n\nOh hell no.\n\nI shake his hands off my head, and sit up. I fully intend to tell him that this just isn't on, that I can't work his cock while he insists on working his jaw, but then I look at him, stretched out before me. He is fucking beautiful, and he has a charming sort of crestfallen look as he tries to figure out why I've stopped traveling down Fellatio Boulevard.\n\nNew plan.\n\n\"Hey, let's do this,\" I growl at him. \"I'm going to give you the best fucking blowjob you have ever had.\"\n\n\"Oh, fuck, yeah,\" he groans, clearly pleased that I'm still interested.\n\n\"And in return...\" I murmur.\n\n\"Yes?\" he grunts, urgently. \"Anything. Anything you want.\"\n\nI smile.\n\n\"In return, you are going to be absolutely silent. No talking, no moaning, I don't even want to hear you breathe. Nothing. One sound, and I stop. Deal?\"\n\nHe looks at me, clearly a bit puzzled. To seal the deal I reach out my right hand, and run my fingers slowly up the length of his beautiful member. It surges in response, and I know I've got him.\n\n\"Deal,\" he whispers, desperately, and then lays his head back down on the pillow.\n\nNot wanting to allow time for second thoughts, I dive on his cock like an eagle on a garter snake. Or, more fittingly, a python. An anaconda. Dude is thick. I grab it up and sink the tip into my mouth. A sharp gasp escapes his lips, and I freeze.\n\n\"Sorry,\" he whispers. \"Won't happen again. Promise.\" Then he closes his eyes and tries to breathe silently.\n\nI turn my attention back to the big boy in my hand, which is throbbing now and steely hard. It occurs to me that this may be the first time that his cock has felt the inside of a guy's mouth, and the realization makes me giddy. I am eager to welcome him to his new orientation, and I stroke the fat length and suck hard on the plump head.\n\nLooking up from my work, I can see Mitchell writhing in silence. He is clasping the sheets in both hands, knuckles white, and a misty sweat is breaking out across his chest. His nipples stiffen as evaporation cools them. He's thrusting into my mouth now, his abs flexing and stretching as they force his cock further toward my throat.\n\nI pull off his cock, grip it tightly in my hand, and then spit on it to really get it lubed up. Mitchell's back arches, and I can hear his feet behind me struggle for purchase on the blanket as he thrashes. I stroke hard and fast, enjoying the stressed urgency that is coursing through his body.",
        "Finally, wanting to put him out of his misery, I flick my tongue at the very tip of his prick, where a steady drip of precum is flowing. He freezes, as if afraid to move, and I run my tongue all over his hot cockhead. He's panting softly now, still trying to be silent, but I can hear the quiet urgency in his shallow breathing. I open wide and plunge his cock into my mouth. I take but three strokes and then it starts.\n\nSuddenly, he's still. Not moving, not breathing. His chest is a relief map of taut muscle, as if every cell in his body were straining for this release. The cords in his neck stand out, and all down his arms the sinews strain at the skin that only barely hides them.\n\nI hear it begin. The room is so silent, and he is so silent, that I can actually hear the muscles deep inside his pelvis start to spasm. I pull my mouth off his cock and keep up a steady stroke with my hand; I put my ear next to the tip and listen. The pulsations of his impending orgasm are making tiny gasping noises as his semen begins filling the tube that will bring it to the surface. He's almost there--and a good thing too, as his face is now almost maroon with the strain of silently riding this roller coaster of an orgasm.\n\nThen, it happens. The opening at the tip of his cock seems to wink at me, and I hear it wetly open again as the cum rises to the surface. I pump harder, Mitchell tenses even more, and suddenly there's a plume of white arching into the air, raining down on his belly with a sloppy wonderful splashing sound. It is followed by another, even louder ejaculation, and then I lose count of how many follow that. By the time he's finished, by the time he can breathe audibly again, he is soaking wet. The coiled muscles slowly yield all over his body, as softness returns where steely hardness had dominated.\n\nWell, that was fun.\n\nPleased with my handiwork (and mouthiwork!) I relinquish my grip on his slowly detumescing cock and slide along the bed to lie next to him. His eyes are closed, though not screwed shut as they had been against the strenuousness of his orgasm, but smoothly and softly. \n\n\"You are amazing,\" he exhales, a little shiver racing across his body. His nipples, coated as they are with his spunk, harden as the fluid cools.\n\n\"That was just my opening move. I've got a whole playbook.\"\n\nHe smiles, and nuzzles my cheek softly. It's like cuddling with the sexiest puppy in the world--innocence on top of rock-hard muscle.\n\n\"So,\" I venture, calm and collected, \"How was it?\"\n\n\"Unbelievable,\" he exhales, shaking his head. \"I had no idea it would feel that different.\"\n\nI cock an eyebrow. Different? Different is all I get for that virtuoso performance?\n\n\"Different, but fucking incredible,\" he says, sensing somehow exactly what I was thinking. \"Guys just do that better. I mean, I guess they do.\"\n\nHe looks at me, clearly trying to figure out how to say something.\n\n\"I kind of have a secret to tell you,\" he says finally, quietly.\n\nI lean in close and whisper, \"I'm really good with secrets.\"\n\nHe smiles.\n\n\"You're the first guy who's ever done...that...to me.\"\n\nI try to look surprised, supportive, understanding, and flattered all at once.\n\n\"No! Really? You seemed so...assertive.\" That's the best spin I can put on his lamprey-like kissing and bizarre dirty talk. I decide it's time for an intervention.\n\n\"Before, when we were, like, making out?\" I venture.\n\n\"Yeah? How awesome was that.\"\n\n\"Really awesome. But, you were kind of, well, talky through it all. I just wondered where all of that 'Do you want to fuck this and that' stuff came from.\"\n\nHe grins. \"Well, I had no idea what guys do together, so I watched some gay porn to see how it all worked.\"\n\nAh. Now it's all clear--he's been reenacting cheesy porn vids! Now, I consider myself an ambassador for the gay community, so I feel obliged to try to steer poor Mitchell in the right direction.\n\n\"Actually, it was kind of awkward.\"\n\nHis eyes jolt up to mine.\n\n\"What? You mean, that's not the way that guys talk to each other?\"\n\n\"No, not really.\"\n\n\"Oh. I guess I figured that's what I should do, because that's what the guys in the porn I've been watching do. I thought it sounded kind of weird, but it was all I had to go on.\"\n\nI smile, and then kiss him on the nose.\n\n\"You shouldn't believe everything you see in porn,\" I chuckle to him.\n\n\"Oh, good,\" he replies, clearly relieved. \"Because what always happens in the videos is the once the first guy gets a blowjob, then he gives the other guy one in return. I'm so glad that it doesn't work that way in real life.\"\n\nWell, you can imagine the look on my face. A broad smile breaks out across his.\n\n\"I'm just kidding you, Josh! I can hardly wait to return the favor. Now, I'm going to clean up, and I want you naked and ready when I get back, okay?\"\n\nHe kisses me, a lovely, soft, lingering kiss. This guy's a keeper!\n\nHe gets up from the bed, and pads over toward the bathroom. It takes me about twelve and a half seconds to strip off everything I'm wearing. In fact, I'm already reclining on the bed, striking as casual a pose as I can with a raging boner, when I hear a key sliding into the lock. Mitchell must have heard it as well, because he's suddenly standing in the doorway of the bathroom, his cum still running down the front of him, as the door to the apartment swings open.\n\nFor a moment, there is silence as we all look at each other.\n\nNone of us is at our best, really. I'm fully naked, with a rapidly shrinking dick in my lap. Mitch is damp with semen, his face a mask of horror. And in the doorway stands a woman who, judging from her expression, would rather have walked in on her own grandparents doing it doggy style than on the two of us. We are a still life.\n\nFinally, Mitch finds his voice.\n\n\"Thea, I--\"\n\n\"SHUT! UP!\" the banshee--apparently named Thea--shrieks.\n\nOh, this doesn't look good.\n\n\"I can explain,\" Mitch tries again, gamely.\n\nActually, I'm not sure he can. And if he does explain what we've been doing, will that really help?\n\n\"I don't want to hear it! I can see damn well what's going on here.\" Her voice manages to be both shaky and deafening at the same time, which is a neat trick.\n\nI look over to Mitchell to see how he's reacting to this strange person who has barged in and let loose with the Medea act. He's now a ghostly white, and he's shaking all over. Yeah, this is not good.\n\n\"Thea, I--\" he tries again, but he seems to know that he's not going to get very far with it.\n\n\"Shut the fuck up, Mitch. We're done,\" she says, and her voice breaks as she says it. \"And to think I came over here because I was worried about you.\" She seems on the verge of tears, and then she masters herself. She looks back over at me, disgust on her face. \"So I guess--this--is your migraine?\"\n\n\"Thea, this isn't what--\"\n\n\"Oh shut up, Mitch. Look, when you're done fucking this piece of shit, you do me a favor and fuck yourself, okay?\"\n\nShe takes the key from the door, throws it at him (she's a pretty good shot--the key smacks him square in the chest, but he doesn't even flinch at the impact), and then slams the door behind her. Her angry footsteps fade down the stairs.\n\nThe entire interaction took probably thirty seconds, and yet we now inhabit a completely changed world. I sit stupidly for a minute, until Mitchell breaks the spell by gasping. Startled, I look over to see him convulsed with great wracking sobs, silent at first, until he finally manages to take in some air, and the room is filled with his keening.\n\nThis is shaping up to be the worst first date ever.\n\n\"Mitchell? Mitch, come here,\" I call to him, holding my arms open. I'm not sure he can hear me over the rattling grief issuing from his rasping throat. Finally, though, he stumbles in my direction, and I wrap my arms around him as he crumples on the bed. I hold him until he exhausts himself with crying.\n\nI hoped that I would end the evening naked, in bed with a hot guy, dripping wet. I just didn't think it would be tears that soaked me.\n\n* * *\n\nIt's 5:30 in the morning when I awaken. Mitchell is curled up next to me, sleeping peacefully, his soft, warm breath on my neck. Poor guy. When he wakes up he's going to remember last night's horrible scene with that shrieky woman, and then he'll have to figure out what he's going to do.\n\nThis is the downside to specializing in guys on the sexual fence. There's a lot of fun to be had--when years of repressed dude-lust break loose, the ride can be exhilarating--but there's also the potential for a lot of drama. And there are real risks, too--there's a chance that when Mitchell comes around he'll see me not as the sexy liberator, but as the faggot who seduced him away from his girlfriend, charming as she was. The tough part is anticipating what reaction he'll have.\n\nThis one could go either way. I decide to make a decorous exit before Mitch awakes. I slip out of his bed, which disturbs him not at all--he went down hard, emotionally drained (and drained in another way--the memory makes me smile). I pull on my clothes from last night and jot him a quick note on the whiteboard on his fridge (\"Mitch--Text me when you get up--We should talk.\") I add a smiley face, hoping that will smooth over any disappointment he might feel at waking up alone after being blown by a guy--and blown off by a girl. Poor Mitch. But part of me suspects he might be relieved to have some time to himself to think things through.\n\nIt's a longish walk back to campus, and I break it up with a stop at the only place I come across that's open: Professor Poof's Donut Emporium. The donut jockey behind the counter doesn't look happy to be the guy who has to open this dump, so I grab my coffee and cream-filled long john (what else?) and finish my walk to campus. It's still really early when I get in, so early that even the twins are still asleep. I slip into my room as quietly as possible, so as not to awaken Seth (though I'm not sure why--it's not like he's suddenly going to care that I haven't been in all night). I climb up to my bunk and lay back, hoping to get a few hours of actual rest after the strange night at Mitch's place.\n\n\"Josh? You're back?\"\n\nWait, did Seth actually notice me?\n\n\"Yeah, I'm back,\" I answer, ridiculously. He obviously knows I'm back.\n\n\"I was worried when you didn't come back last night.\"\n\n\"Um, thanks? It's okay, though. Sometimes that happens.\" Sometimes it happens that I end up suddenly away for a whole weekend, like when I met Calvin and Reese. As I said, drama is a frequent side effect of my questionable erotic choices.\n\n\"Okay.\" He turns over, and that's the end of the conversation. A strange, short conversation. I guess there's more to Seth than I thought. Hmm.\n\n \n# 9 #\n\nI spend Sunday lazing about, in denial about classes starting on Monday. The early-morning conversation with Seth has put me in a strange mood, so I suggest to the guys that we have dinner together--kind of a Sunday thing. They humor me, going along with the idea, and we break bread together that evening (seriously, you have to break it, by cracking it on the edge of the table--gotta love the dining commons).\n\nClasses go well during that first week--enough eye candy to keep it interesting, but not so much that I won't get any work done. The most target-rich environment is my math class--this is the math class that guys in the Engineering programs have to take. A good number of them are clearly working their way through college by doing construction work. Or stripping. Because, damn.\n\nMy meeting with the Athletic Director comes on the second afternoon of classes, and it goes really well. I manage to come off not looking like a total perv, which is a pretty important qualification for working in the locker room. I lock in a schedule of towel management every afternoon after my classes are over (that's the shift Calvin recommended, as most teams practice then).\n\nWednesday after classes I head for the newly opened athletic complex, and make my way through the maze of locker rooms. At the towel desk is my new supervisor, who is the spitting image of every nightmare PE teacher I ever had in high school. He looks me up and down and clearly doesn't like what he sees; he grudgingly admits me to what he considers his private domain, and spends about a half-hour scolding me not to let anyone walk out of the Towel Use Zone into the Towel Exclusion Zone (seriously, he has marked these out on a map) holding one of the precious towels. He is thankfully interrupted in his fifth repetition of the rules covering the swim team's special towel needs by the arrival of the diving team coming from practice. They are hot, wet, and hot. They emerge from the showers, dripping and naked, and come to me for a towel. I give it to them--after they approach the desk with their muscles pumping and cocks wagging. Best job ever.\n\nThe rest of the afternoon shift is a parade of flesh. The divers are followed by the football players, then the water polo team (I have met many of these guys, but had only seen one of them naked before now--Diggler, though, is not among them today), then the track team, and then I lose track. So many penises. I don't know how I'm going to sleep tonight.\n\nSomehow I make it through the week, my head filled with enough fleshy goodness to keep me wanking all weekend long. On Friday evening, though, my plan to spend the weekend rubbing myself raw goes out the window when I get a text from Diggler.\n\n\"Grab a drink tonight?\"\n\nOh hell yes.\n\n\"Yup,\" I type back. \"Where?\" As I'm not technically old enough to drink, this matters.\n\n\"My place?\"\n\nOh double-hell yes.\n\n\"Sounds good. Now?\"\n\n\"Sure.\" And he sends me his address.\n\nDiggler's apartment is in a medium-sized complex several blocks from campus, and I walk there in the twilight, a few well-endowed butterflies bumping into the walls of my stomach. I'm not sure what to expect--the problem with texting is that it doesn't give you any sense of how the person on the other end is feeling as they type. Is Diggler's invitation a sign that he's made great progress, and wants to show me the happy results (oh please oh please) or is he disappointed and angry and wants to work me over for giving him false hope?\n\nBefore I can figure out whether I'm going to be greeted with a hug or a punch in the face, I'm here. I push the button corresponding to his apartment number, and he buzzes me up instantly. I take the stairs rather than the elevator, trying to exhaust those damn butterflies, but it doesn't work. I arrive at his door, take three deep breaths (I saw that once on a show about giving birth, and though I never expect to be in labor, it does kind of work to calm me down) and then knock.\n\nThe door opens.\n\n\"Hey, man, thanks for coming,\" he says, holding the door open and gesturing me in.\n\n\"No prob. You had me at 'grab a drink.'\"\n\nHe smiles, and I figure it's going to be okay. I step in, and he closes the door behind me. His place is small but furnished in a way that one rarely expects to encounter in a guy's apartment--that is, tastefully. The furniture clearly is of mixed origins, but he's put it all together in a way that works. The lighting is soft and indirect, and a candle burns on the kitchen table.\n\n\"So,\" he says, \"I promised you a drink. What's your pleasure?\"\n\nOh, it's you. Especially you standing there with your flickering candlelight and your stubbly jaw and your arched eyebrows.\n\n\"What have you got? I'm pretty slutty when it comes to drinks--I'll take anything.\" Anything at all.\n\nHe smiles.\n\n\"Well, since you're not exactly legal...\" he begins.\n\nI sigh. He's right--I'm not legal for one of the two things I want to do with him right now.\n\n\"I'll just make us some coffee.\" He turns and starts scooping coffee into a Bialetti. If it has to be coffee, at least he knows how to make it.\n\n\"Nice place you have here,\" I say, turning around, taking in the room.\n\n\"Thanks,\" he says, coming to join me once the coffee maker is on the stove. \"It beats the hell out of the dorm, I'll say that much. My mom picked it out for me, since we were at nationals when I had to get a lease signed.\"\n\n\"Did she pick out the furniture and stuff too?\" Naturally, finding a huge-dicked guy with perfect design sense is too much to ask.\n\n\"Nope, she just found the place. I put it all together the week before classes started last year.\"\n\n\"It's really nice,\" I say, silently thanking the universe for maybe coming through for me, just this once.\n\n\"Yeah, that's what girls always say too. Then they get suspicious, because I'm not supposed to know how to pick out throw pillows or whatever, and then by the time we actually get down to it I guess they figure it's not working out because I'm not really into chicks. Sucks.\"\n\nWell, this turned mopey all of a sudden. Luckily, he's interrupted in his dismal monologue by the Bialetti sputtering on the stove, and he turns back to see to the coffee. I find a spot on the sofa near the window and try to figure out how to be supportive. This may be harder than I'd expected.\n\n\"Here,\" he says, handing me a steaming mug of coffee. A very nice mug, in fact, not just some freebie he picked up from a diner somewhere. I take a sip, trying to emulate Sky and his Bond-perfect coffee style. The coffee is very strong, and very good, and very...spiked.\n\nI look up and smile. He smiles back, and raises his mug in a toast, then takes a seat in a chair opposite the sofa.\n\n\"Kahlua. It's a trick I got from my dad. He throws some into his coffee when he doesn't want anyone to know he's drinking.\"\n\nIs it too soon to be in love with him and his Kahlua and his candles and his throw pillows? Yes. Maybe. I'm not much of a drinker, so even this little bit of liqueur hits me pretty hard. A delicious warmth spreads across my chest, and Diggler's apartment is suddenly the best place in the world.\n\nBut I mustn't forget, there's work to do.\n\n\"So,\" I ask, raising my eyebrows. This is my signature move--it lets the person I'm talking to decide what I'm asking, and how much to answer. If the response is \"So, what?\" then I know I have to take the lead.\n\n\"So, you're probably wondering why I asked you to come over.\" Oh, he's going to take the lead. Swoon.\n\n\"Well, I figured it had something to do with the porn plan.\" He nods. \"How's that going?\"\n\n\"Pretty miserably, at first. Then it was better, then it got disgusting--I mean, really, some of those sites you made me look at? Ugh. But then it got better again, and then it was amazing.\"\n\n\"That's great!\"\n\n\"Yeah, sort of. But it kind of leaves me wondering what to do now.\"\n\n\"What do you mean?\"\n\n\"It's like this. The first few sites were just your normal porno, right?\"\n\nI nod. \"Normal\" is about the kindest word I could use for these hetero-only plain-vanilla why-bother sites. But I had to start somewhere.\n\n\"Those were like the sites I've been to before, and didn't have luck with. And it was the same this time--the quality was better than I'm used to, don't get me wrong--but it was like...a little spark, but no fire, know what I mean?\"\n\n\"I know exactly what you mean.\" His lack of enthusiasm about one-man one-woman is promising indeed.\n\n\"So then I went on to the next set, and there was some pretty awesome stuff. The lots of guys and one girl was great, and the lots of girls and one guy was even better--cuz dude, those girls know how to pass the time while they wait--and then the lots of everybody all at once was good too, but it was kind of hard to know where to look.\"\n\nHe's been taking my assignment seriously. I like this.\n\n\"But even though there was interest,\" he nods significantly toward his lap, \"We didn't get the result we were hoping for.\"\n\nI love that Diggler and I are now so in this together that \"we\" have expectations for his genital performance. I nod supportively."
    ],
    "authorname": "xaviermayne",
    "tags": [
        "college",
        "straight-to-gay",
        "romance",
        "athlete",
        "first time",
        "well-endowed"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/cupids-sophomore-year-semester-01"
}