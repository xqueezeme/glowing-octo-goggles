{
    "title": "The Hidden Room",
    "pages": [
        "Voyeurism is described as the sexual interest in or practice of spying on people engaged in intimate behaviors such as undressing, sexual activity, or other actions usually considered to be of a private nature. That's what my story is about!\n\nAll those engaged in that sexual activity in this story are over the age of 18.\n\nI had just turned twenty one when my voyeuristic adventure began. I landed a position at a private girls school. My role was head of the computer technology department. There's quite a story about how I got the job but I'll leave for the moment and instead tell you a bit about myself. My name is Max Martin and academically I'm what most people would refer to as a geek. I was home schooled up until I started university at sixteen ... yep sixteen. I'm one of those annoying people who retains knowledge and excels in most academic subjects. I graduated university with a double major in computer science and visual arts. I know that's a rather an unusual pairing but I have a love of both computers and photography ... the latter skill I got from my mother who is an accomplished photographer. I may act a bit like a geek but I don't look like the stereotype ... no thick rimmed glasses, skinny white pasty body or a fear of the opposite sex. I'm 5' 11\" and have a good body from regular workouts and I suppose most girls would say I was generally good looking ... perhaps not in the top 10 percent but okay enough to have had a reasonable sex life. I've always looked older than my age so I just let people think I was their age at university. I'm also not hung like a horse and have an average cock size but since I am quite good at oral sex I don't think girls have had much to complain about. I lost my virginity when I was fifteen to a twenty-five-year-old solo mother who lived next door, her name was Jenny ... she was the one who taught me how to pleasure a woman and like I said I'm a quick learner.\n\nNow about this remarkable job I got. My father is a lawyer and had been on the board of trustees for Deanwell School for Girls, in Dorset for many years. One night after a board meeting he called me and asked if I would drive down and stay the weekend. He said he wanted to discuss a temporary job at the school. I wasn't working at the time and had started writing a novel. However my bank account was slowly dwindling down so the job offer seemed to be timely.\n\nI arrived for dinner on Friday and after one of my mother's home cooked meals I sat down with dad to talk about his offer. It seemed that the guy running the school computer department had died suddenly while on holiday in Tibet ... I actually found out later that he fell off a mountain path and plunged 2000ft to his untimely death. His sudden demise left the school desperate for a replacement. I was younger than they would have liked on staff, but I did have all the knowledge and expertise they would need. My father explained that the job came with a good salary and also a small apartment for accommodation, he also mentioned that the job could become permanent if things went well. Even though the school campus was miles out in the middle of nowhere I happily accepted ... I needed the money and more importantly I would have time to complete the novel I was writing away from my current party loving housemates. \n\nI was still seeing Jenny for occasional sex whenever I visited my parents. She was now thirty-one and still single. Having a man around the house permanently wasn't her style, she liked casual relationships ... of which I was one. I'd already text to tell her I was staying next door and she'd replied with a smiley face emoji. Later that evening I'd quietly slipped out of the house after my parents were in bed and walked over to Jenny's. The back door was unlocked and I went in without knocking. The downstairs was dark with no lights on so I headed for the stairs and went up. A slight glow of light was showing through the open door into seven-year-old Katies room. I glanced into her room and saw she was awake ... talking quietly to her bed mate Dino, a stuffed green dinosaur that she'd had for as long as I could remember. I stopped and tapped lightly on the door before entering.\n\n\"Max!\" Her eyes lit up as she squealed my name.\n\n\"Shhh!\" I placed a finger over my lips and gestured towards her mother's room down the hall. \"Your mum might be asleep.\"\n\n\"You're going to wake her up anyway.\" Katie replied shrugging at me as though I was silly .\n\n\"Maybe I am. But I don't think she would be too pleased to know you're still awake.\"\n\n\"Oh yeah.\" She whispered in response.\n\nI sat on the side of the bed and gave her a quick hug.\n\n\"How are you doing Kats?\"\n\n\"School starts again soon so I'll see all my friends again, that's going to be good.\"\n\n\"Did you go anywhere during the holidays?\"\n\n\"No mummy had to work so I spent most of the time next door with your mum. We did gardening and stuff ... it was pretty boring.\"\n\n\"I thought the gardens next door were looking especially good.\" I smiled and picked up her hand looking at it intensely. \"Yep, you have the beginnings of a green thumb there.\" I said in mock seriousness.\n\n\"Don't be silly, gardening doesn't give you green thumbs.\" She giggled snatching her hand back and hid it under the covers.\n\n\"I check again tomorrow, it can take a few days to go green.\"\n\n\"Are you staying for a few days, because we're going out for Mummy's birthday on Sunday you can come too.\"\n\n\"I might still be here. But right now you need to go to sleep or you'll be too tired to go anywhere on Sunday.\"\n\n\"Okay, I'm a little tired and Dino is asleep now.\"\n\nI tucked in the sheets and gave her a kiss on the head. \"Night Kats.\"\n\n\"Night Max.\" was the yawned reply.\n\nI made my way down the hallway to Jenny's bedroom and as reached the door I heard muffled moaning sounds from inside the room. The door wasn't completely closed so I peered inside and was pleasantly surprised to see the moans were coming from a very naked Jenny who was lying on her back fingering her wet and glistening pussy. I stood admiring the view and felt a stirring in my loins as I watched. Jenny's eyes were closed and she was pinching her nipple with one hand while the other hand circled her swollen clit. As I enjoyed the show I removed my T-shirt and dropped my shorts and underwear. My cock was now fully erect and pointing in the direction of the action on the bed, I followed its lead and entered the room. Stopping at the end of the bed I stroked myself a few times as I stared at the sexy blonde writhing on the sheets.\n\n\"Get down there and finish me with that magic tongue of yours!\" Jenny said in a husky voice between moans. Her eyes had remained shut and I was surprised at the sudden command.\n\nI obediently responded and slithered onto the bed burying my head between her open legs. I took a moment to savor the musky smell of her gaping pussy before putting my well-honed oral skills to work.\n\nIt only took a couple of minutes before her thighs clamped around my head.\n\n\"Ohhhhhh,\" she let out a long low moan.\n\nNow, one thing about Jenny was her ability to quickly multi orgasm and before long a second and then a third coursed through her as she bucked and squirmed around me. Finally her hands pushed my head away from her drenched pussy. I managed one last long lick before pulling back and moving up the bed to lie next to her as she continued to quiver and shake.\n\n\"How long did you know I was watching?\" I queried as I rolled over to face her.\n\n\"I heard Katie say your name and I know you're a bit of a perv so I thought I'd put on a little show. Except it took long enough for you to get to my room that I almost finished without you.\" She smiled at me and leant in for a kiss.\n\nIt was true I was a bit of a voyeur when it came to Jenny. It fact I used to spy on her though my attic bedroom window for years. I didn't know it but she knew I was watching and would walk around naked in her bedroom then masturbate with the curtains open for both her and my pleasure. Finally she invited me over and we started having sex.\n\n\"I got distracted by your beautiful daughter. She's growing so fast.\" I replied to her previous comment.\n\n\"Tell me about it. She was asking about threesomes the other day. I mean how does a seven-year-old even hear about threesomes let alone sex.\" Jenny sighed in exasperation.\n\n\"Maybe we could get a friend of yours to join us next time, so you can gather some intel for when you explain things to Katie.\" I joked grinning.\n\n\"You'll be lucky, I'm not sharing you with any of my horny friends and I will definitely not be talking to Katie about threesomes ... for at least ten years.\"\n\nWe chatted for a while her head on my chest while her hand slowly jerked my still stiff cock. Finally I rolled over on top and inserted myself into her still swollen, wet pussy. \n\n\"Go for it Max, don't wait for me I don't think I've got another orgasm in me tonight.\" Jenny said with a contented sigh.\n\n\"We'll see about that.\" I replied with a sly grin and started to slowly fuck her with long full strokes, my cock bottoming out on her cervix. I knew this was how she loved it.\n\n\"You bastard!\"\n\nHer hips started to move in rhythm and soon she was breathing hard. As the pleasure increased her hand moved down and she rubbed the hard little nub of her clit. I slowly increased my pace and just as Jenny started to climax I shot a huge load into the back of her spasming vagina.\n\n\"Ohh, yeah!\" I grunted as I emptied my balls into her.\n\nI stayed inside her until she had relaxed then rolled off onto the now damp sheets.\n\n\"Shit, when was the last time you fucked? I'm leaking like a broken faucet between my legs!\" Jenny said laughing.\n\n\"I'll admit it's been awhile.\" I replied. \"But you always make my so horny I reckon you get a double dose of my little wriggly guys.\"\n\n\"Yeah. Well as long as your little wriggly guys don't get into one of my little round eggs, then I'm happy.\"\n\n\"Wouldn't matter anyway, my little guys are non-compos mentis.\"\n\n\"What do mean?\"\n\n\"I can't have kids ... my sperm is infertile.\"\n\nJenny sat up and looked at me. \"What! What do you mean Max?\"\n\n\"It seems I have Y chromosomal infertility.\"\n\n\"What does that mean?\" Jenny asked concerned.\n\n\"I basically shoot blanks .. it's a genetic thing.\"\n\n\"How do you know?\"\n\n\"Went to give a donation at a sperm bank and found out from them.\n\n\"A sperm bank!\"\n\n\"They pay \u00a335 for expenses, I thought it wasn't too bad for jerking of in your lunch time.\" I added sheepishly.\n\n\"So you can never have kids?\"\n\n\"Not my own. I'm okay about it. Just the way it is.\"\n\n\"I'm really sorry Max.\" She pulled me in for a hug.\n\n\"At least it doesn't seem to affect my ability in bed.\"\n\n\"No question about that. Although we should give it another go in the morning just to made absolutely sure.\" Jenny grinned.\n\nI stayed the night and in the morning I provided the necessary evidence leaving both of us sweaty but satisfied. We had just enough time to put on some underwear before Katie rushed into the room and bounded up onto the bed for a snuggle. The eight-year-old had no problem with me being in bed with her mum ... we were long-time friends and I was the only lover Jenny let stay over. If it wasn't for our age difference maybe we could have had a more permanent relationship, who knows.\n\nA week later I drove in through the gates of the 20-acre estate on which the prestigious Deanwell School for Girls had been established in 1948. The main building was a huge three-story Edwardian mansion that had been gifted by Countess Marion Verert for female education. The school was a full boarding establishment and the 180 girls aged 13 to 18 were accommodated in some of the ten large stone out-buildings that had been converted from stables and barns . Evidently the Verert fortune had been partly made in breeding racehorses in the 1920's and 30's.\n\nMy first reaction to the place was the pleasant surprise of young females everywhere. I had expected that but seeing them in the flesh put a whole new perspective on what I was in for. There is nothing quite a sexy as a girl in a short-skirted school uniform. I'm not interested in young underage girls for sex but figured there was no harm in appreciating their appearance. Maybe this wasn't going to be the best place for finishing my novel without any distractions.\n\nI met the Head Mistress, Gloria Steadman. I had done some research on her and found out she was a high achiever. Like me she had started university early and had excelled. Her career as a teacher had fast tracked and at 37 she was youngest school head Deanwell had ever had. I was given the third degree on my qualifications and told in no uncertain terms that the girls were strictly off limits as far as any kind of friendship went.\n\n\"Girls can still be attracted to gay men, and I don't want any encouragement. I am very conscious that you are only three years older than the senior students.\"\n\nThis statement almost floored me. She thought I was gay! I suddenly realised how my father had convinced the board that a young man was suitable to work in the all-girls school. I quickly decided to go along with it as I really needed the job. I assured her that I understood my professional position.\n\n\"Your accommodations are outside the school compound and I would appreciate it if you kept your social life out there.\"\n\n\"That will not be a problem Ms Steadman. I am not anticipating much of a social life anyway as I hope to finish a novel I am writing in my off hours.\"\n\nI attended a meeting with the other staff and found I was one of only three males at the school. Roger was in his late fifties and taught English literature, he was married to the head chef, a big busted woman called Margret. Trevor the other male was even older ... he tutored maths and walked with two sticks due to polio as a child. All the other 32 staff were female and ranged in age from 22 to the late sixties. Four or five peaked my interest in the looks department but I was conscious not to show too much interest and blow my 'gay' cover. It seemed I was doomed to just 'window shopping' at this place.\n\nSince the new term had already started I wasn't given much time to settle in before my job began in earnest. I was to oversee the computer network in the school and be available to help students and staff with any queries regarding their personal computers. I was also encouraged to help out with the photography club which meet every second Saturday morning ... my prowess with a camera had seemingly been spoken of by my father. I politely smiled and accepted the offer to help. Thanks Dad ... there goes more of my writing time.\n\nI was shown to my apartment by one of the all-woman school maintenance team. Waverly was a former army sergeant who had completed a building apprenticeship while in the service. She had retired after twenty years of constructing and maintaining army bases in various locations around the world. At forty five years old she was now enjoying a slower pace of life at the school. As I followed her out the main gate I was impressed with her tight little ass in a pair of khaki shorts ... she had a nice overall figure and her long blonde hair swung back and forth in a ponytail. A real sexy middle aged woman.\n\nIt was a five minute to walk my apartment due to the high stone wall that surrounded the main campus. The small cottage actually backed onto the wall opposite one of the converted stables on the other side. I was pleasantly surprized by the modern interior of the place with an open plan living/kitchen area and one bedroom with a small bathroom. There was also a small study with a bookcase and a large desk. A very late model computer system sat on the desk. I could tell immediately that it was a good set up and I smiled in approval.\n\nWaverly told me a little bit more about the former occupant of the cottage, the now dead Peter. He was an adrenalin junkie who loved jumping out of planes and climbing mountains as well as holding his degree in computer science. At forty he had died to young according to Waverly. I noted a real sadness in her voice as she talked ... it had me wondering if she and Peter had been more than just colleagues.\n\nI collected my gear from the car and unpacked. The small bathroom had a big old claw foot bath that took up half the room and I filled it with hot water and lay soaking. I noted the bath was big enough for two and wondered if Waverly's naked body had enjoyed a session or two splashing around in the water with Peter.\n\nThat evening I was introduced to the students at dinner and then spent some time with the staff, having a couple of drinks in the staffroom. About 10.00pm I headed off to bed and was asleep as soon as my head hit the pillow.\n\nAfter a week of familiarising myself with the school network and hardware I had a pretty good handle on what was required to keep things running smoothly in the tech department. Peter had set up some good systems but I was able to refine and reprogram a few things to make it better. My actions received praise from the staff so I was off to a good start.\n\nThe first Saturday morning I attended the photography club I found out I wasn't just helping I was running the show. There were ten girls in attendance and they ranged in age and experience. We talked about some goals and objectives and I looked over their various cameras and equipment. I wasn't too surprised to see that most of the gear was top of the line ... exclusive private school meant wealthy parents. Only one girl had an older camera and it wasn't in good shape. Her name was Toni and she seemed quite embarrassed to display it in front of the other girls and got a few sniggers when she did. I could tell she was a bit of an outsider and offered to lend her a spare one of mine for the rest of the term. After the clubs allotted two hours I told Toni to follow me to my campus office and I would show her the camera. When she saw it her face lit up and a bright smile crossed her face.\n\n\"Wow! You would lend me this? It's got to be worth a fortune.\"\n\n\"It wasn't cheap but then good cameras aren't.\" I replied and took some time to explain all the main technical details of the Nikon D850.\n\nWhile we chatted Toni told me that she didn't have the money for a decent camera as she was only at the school because of a scholarship. She lived with her aunt, who was single and worked two jobs just to pay rent in the city. Toni wasn't looking for sympathy by playing the 'poor little me card' she was just being honest and I liked her for that. She was 18 and as a senior she was in her last year at school and wanted to go to a music college in the future.\n\n\"Do you play and instrument or are you a vocalist?\" I queried.\n\n\"Both. I play guitar and sing. I write my own songs but I don't think I'm very good at it.\"\n\n\"Why do you say that?\"\n\n\"The other girls in my dorm tell me I suck, so I probably do,\" she gave a resigned shrug.\n\n\"Maybe we can jam sometime, I play guitar too ... and I write a bit. To be honest I don't think I'm all that good either but perhaps we can help each other get better.\"\n\n\"That would be really cool.\" Her bright smile was back.\n\nAs Toni left my office I realised I had probably broken the no fraternising rule by suggesting the jam session. I'd have to watch myself or face the wrath of Ms Steadman. I think I just felt a little sorry for Toni. It was pretty obvious she was picked on a bit and I had always been one to stick up for the other geeks and nerds at school. Toni's appearance didn't help either she wasn't what you would call cute or pretty, she had some acne and her figure was on the large side, plus her nose looked like it had once been broken and not reset properly. Large metal framed glasses with a rose tint made her look even more geeky. On the plus side she had a great smile.",
        "That night I broke out the guitar and played a few tunes to get some practice. I wasn't as bad as I had suggested to Toni and had in fact played at a music cafe on weekends during university ... I did it both for the money and the fact that I was trying to date one of the waitresses. She ended up declaring herself asexual ... but that's another story.\n\nI settled into a routine at work and even managed to get on with my novel. Most weekends were spent working at my computer in the cottage. I carried on with the photography classes and felt all the girls were enjoying themselves and improving. I also managed to secretly slip in the odd jam session with Toni ... she would sneak over to my place on Sunday afternoon, pretending to go for a walk. I stored her guitar at my place. The girls in her dorm couldn't have been more wrong. Toni's ability at playing and writing music far exceeded mine and I found I was the one learning new things. She was a natural and seemed so at ease when playing and singing.\n\nIt was late January and we were experiencing a real cold snap. I had the fire going most nights and it was so hot inside that I slept with the windows open and a fan on. It was on one of these warm nights that I discovered the hidden room!\n\nI was lying naked and wide awake on sweat damp sheets when I glanced over through the door and saw what looked like a faint glow of light coming from behind the tall bookcase in the corner of the study. It was a dark night with no moon and I got out of bed and carefully manoeuvred my way over to the study. For a start I thought the glow may be a reflection from the computer on the desk but quickly eliminated that possibility as the glow was definitely coming from inside the wall. I turned on the light and took a closer look at the bookcase and found that it wasn't fixed to the wall on one side. There was some movement and it felt as though a latch or lock was stopping it from moving more. I searched for a couple of minutes before discovering a small lift up latch behind a false backboard on one of the middle shelves. I lifted the latch and pulled the bookcase. It swung open revealing a short hallway with a door at the end. The light I had seen was coming from under the door and it was much brighter now. I was intrigued and also a little apprehensive ... what was behind the door. A number of possibilities crossed my mind, ranging from hidden valuables to dis-membered bodies. I also became aware I was still nude and somehow that made me feel a little vulnerable ... I went back to the bedroom and pulled on some shorts and a t-shirt, then armed with a torch in one hand and a poker from the fireplace in the other I entered the hidden hallway. I listened for any noise and thought I heard a slight humming sound. It suddenly dawned on me that the door could be to another apartment back in the school complex, the door was facing toward the school compound. I put my ear to the wooden surface and listened for a good five minutes ... nothing! I took a deep breath and tried the handle, it was unlocked. I slowly opened the door just a crack and peeked through. I was looking into a small windowless room about eight feet long and six feet wide, no-one was present ... dead or alive. Entering the room I found a bench along one wall with a number of flat screen monitors on it and a computer terminal. A custom gaming chair was placed in front of the bench. The only other furniture in the room were a large old metal safe and a small fan which was switched on ... the source of the humming sound I'd heard. The light in the room came from a single bulb hanging from the ceiling. The walls and ceiling were lined with wooden panels that resembled the ones in the rest of the cottage. I stood in the middle of the room and the only thought that came to mind was, 'What the fuck!'\n\nAn hour later I was sitting in the chair no wiser than I had been before. I had tried to turn on the computer on the desk but it was password protected. I'd even spun the lock on the safe a few times but knew it was useless to even try and guess the combination. Even if I did figure it out it looked as though the safe needed a key as a second security measure before it could be opened.\n\nFinally I decided to go back to bed and try to figure things out in the morning.\n\nFor the next two days I tried every trick I knew to get the computer working but it had a very good password protection software installed. I'd tried every password on the school system that Peter had used and also searched the room for any hidden places the password or combination might be found. It took over all my spare time trying to figure things out. I had already deduced that the room was part of the original cottage a storeroom perhaps. Somehow it must have been built into the outer wall of the school compound. I borrowed a drone from a photography friend and got a birds eye view of the area. I noted that my cottage backed up onto the converted stable that housed senior student dorms at one end and Ms Steadman's private apartment at the other. I could not find any way that my hidden room and the stable were linked ... no hidden doors or panels. I even spent an hour in the girls dorms tapping walls and looking in all manner of places for a connection. I did find a stash of pot and two hidden vibrators in my search as well as a broken strap-on dildo in the closet of the dorm matron's small apartment. I didn't have access to Ms Steadman's quarters so couldn't check that area.\n\nJust when I thought I was at a dead end I got a break.\n\nI was in the staff lounge one afternoon and overheard a conversation regarding Peters parents coming to collect his things at the end of the week. There was evidently two boxes of stuff and a suitcase stored in the cupboard in my office. To be honest I hadn't even looked in the cupboard since I arrived but now I almost sprinted down the corridor to look.\n\nI locked my office door and opened the cupboard. I quickly looked through the suitcase but it was just full of clothes. I then started to empty the first box, carefully looking for any clues that might be related to a password or combination. I struck nothing that could have been useful. I hit the jackpot as soon as I delved into the second box. An old cigar case contained a large grey key that I knew must be for the safe and among the other stuff inside I found a photo of Peter holding a lotto ticket, he had a huge smile on his face. Written on the back of the photo were six numbers ... 4-26-5-14-9-32 . I put the photo in my laptop bag and continued my search. The only other thing that stood out to me was an old leather cat collar with the name - Twinkle 02/04/2018 embossed on it.\n\nReturning the suitcase and boxes to the cupboard I carried on with my day's work.\n\nIt was after five o'clock when I got back to my place and unlatched the bookcase to the hidden room. Sitting in the chair I stared at the monitor with the password required. I took out the photo and turned it over showing the numbers ... it wasn't going to be that easy was it. Probably not I thought sighing.\n\nI entered the six numbers and pushed enter ... nothing. I entered Twinkle ... nothing. Twinkle 02/04/2018 ... nothing again. I tried every combination of the numbers and word I could think of and still nothing. Frustrated and rather annoyed at myself for thinking that the new info would work I pushed the chair back.\n\n\"Fuck! Come on Peter what's your secret!\" I shouted at the ceiling.\n\nI knew a good password would hold a secret that was particular to the user. I had one I always used ... cords from favorite songs. My latest was BbGmCmCm7F7, the cords from the first verse of Bohemian Rhapsody. It was my secret quirk, song cords. What was Peters quirk?\n\nI couldn't come up with any ideas so I tried the safe instead. The key slipped into the lock and turned straight away ... one down, now the combination. Again I used the Lotto numbers and date in different ways but to no avail. At three in the morning I went to bed.\n\nIt was the next morning as I logged into the school network that I realised Peters secret.\n\n\"Backwards!\" I blurted out.\n\nAll the passwords he used on the school system were backwards. The staff logged in with the school name, Deanwell. Only it was backwards 'llewnaeD'. The students could log on with 'tneduts', student backwards. My administrator logon was 'egabbaB', Babbage. Charles Babbage was a mathematician who in 1833 conceived and designed the first Analytical Engine which was a type of computer. Peter would have learnt that at college.\n\nI had a meeting after dinner that evening so it was 8pm before I hurried home to test my theory. However I didn't get home as quick as I would have liked.\n\nAs I rounded the far corner of the school wall I noticed a movement coming from inside the small disused bus stop on the corner. It was and old wooden structure designed to keep the bus patrons out of the rain. Enclosed on all four sides with an open entry in the front and a small window in back. As the bus didn't come this way anymore the shelter had fallen into some disrepair, with the window broken and the paint peeling. The movement I had seen was through the broken window, and I assumed it would be students smoking pot. I had been warned that they sneaked out to the bus stop to get high.\n\nI thought about leaving them to it but knew as a responsible staff member I should go and give them a talking too. I probably wouldn't put them on report just scare the shit out of them. After all I had a stash of pot at my place, it would be hypocritical to turn them in. I crossed the grass verge and quietly approached the window, stopping beside it before peering inside. I was right it was a couple of girls form the school but they weren't smoking they were standing up against the far wall kissing. I smiled and went to turn away when I noticed that both girls had a hand down the others skirt. Movements suggested that genital rubbing was occurring and by the way they were both moaning I guessed orgasms were not far away. I was torn as to what to do ... did I walk away (the sensible and right thing to do) or did I stay and enjoy the show (what my stiffening cock was telling me to do).\n\nI chose the latter ... both girls were seniors and they were old enough to have sex and they were after all in a public place. Plus I'm a guy and we all know stiff cock wins in situations like this.\n\nI looked around to make sure no-one could see me from the road or the school gate. I was in the clear so I peeked back through the window. The girls were now really humping each other's hands and their moans of pleasure were getting louder.\n\n\"Fuck! I'm gonna cum Debs!\" The girl I recognised as Tracey said urgently.\n\n\"Cum on my mouth!\" Debs responded and quickly dropped to her knees, pulled Tracey's skirt up and began to lick her hairy mound. Tracey let out a guttural moan and started to shake as she climaxed. Deb's hung on like a leech, her face tight up against the twitching crotch. Finally Tracey collapsed back onto the bench seat, her legs spread revealing a very wet and glistening muff.\n\n\"Shit you taste so good!\" Debs said wiping her face then licking her fingers.\n\n\"Did you cum?\" Tracey asked still a little breathless.\n\n\"No. Want to finish me? It won't take long.\"\n\n\"Get over here.\"\n\nDebs raised her skirt and stepped forward until her crotch was right in front of Tracey's face, she then reached down and pulled her pussy lips apart and pushed her hips forward. Three minutes later she had joined her friend on the bench after a tongue lashing that produced a very satisfying orgasm.\n\nThe girls kissed passionately again and then stood to retrieve their panties from the concrete floor.\n\n\"Let's not wear them back.\" Debs said smiling.\n\n\"You slut!\" Tracey exclaimed and giggled.\n\nThe panties went into their respective bags and they headed for the door. I crouched down behind the shelter and waited for them to leave. As they headed for the school gate I saw them trying to feel each other up as they walked. I could hear their giggles and laughter.\n\nMy cock was as stiff as a board so I had an uncomfortable walk to my cottage. Once inside I stripped off my clothes and masturbated into the bathroom basin, shooting large ropes of cum into the porcelain bowl. After lighting the fire I took a quick shower. I dried myself and walked naked to the study, opening the bookcase door.\n\nI entered the hidden room and sat in the chair. For some unknown reason I knew that the password I was about to enter was going to work. I typed 23-94-15-62-4, the lotto numbers backwards. The screen changed and I was faced with a home page for a security system. It took me a couple of minutes to work out that it was a high end camera monitor system. I clicked on a few buttons and the system came to life with six of the smaller monitors starting to stream live video from various rooms. One monitor remained blank. My heart almost stopped as I realised the rooms I was viewing were in the dorms and apartments in the school. I could bring each camera image up on the big screen to see more clearly. The first image was from the matron's apartment bedroom ... no one was in the room. The second image was the bathroom of the same apartment. The third camera was showing a feed from one of the senior girls dorm rooms. The image showed six girls sitting at their study desks. One of the girls was Toni, two of the others were Debs and Tracey ... both still looked a little hot and bothered after their recent liaison. The next camera was in the girls bathroom ... the open showers were clearly in view. The fifth image was in another bedroom, one I had not seen before. A queen size bed was the focal point of the room ... no one was present. The final camera was in a bathroom and I could see someone was in the shower. My eyes grew wide as I realised who it was ... none other than our head mistress, Ms Gloria Steadman! I used the camera zoom function to move in closer ... I was pleasantly surprised to see that Gloria had a fantastic body. Her skin was a natural olive color with quite perky breasts that were full but firm. Her pubic area was trimmed nicely with a strip of dark hair above her shaved pussy. Who would have thought that under her rather dowdy pantsuits a body like that existed.\n\nMy cock was at full mast as I watched my boss step out of the shower and begin to dry herself. She moved out of the bathroom and I found out that camera five was her bedroom. For the next ten minutes I watched as she sorted out some laundry on the bed and put it away. She then left the room to what I assumed was her living room.\n\nI turned my attention to the girls dorm room where there was a lot of movement. The girls were preparing for bed. Some were in the bathroom cleaning their teeth and disappearing into the toilets.\n\nI made a mental note to check that all the girls were 18 years old in this dorm room. As screwy as it may seem I didn't think it was appropriate to be watching girls who were classed as minors. I may have been a perv and a spy but I did have some standards.\n\nI concentrated on the dorm room and zoomed into the room for a close up of a tall girl called Tammy. She started to undress. Her breasts were large but there was no sagging as they stood out firm and proud, her nipples were a copper brown colour and contrasted nicely with her lightly pale breasts. When she removed her trackpants her long tanned legs came into view. I was hoping for a look at what was under her little lace undies but she left them on and pulled on a long white t shirt before hopping into bed. The other girls repeated the same routine revealing their breasts only. The one girl who didn't strip down in the room was Toni, she had returned from the bathroom with her nightshirt already on ... obviously self-conscious of her body in front of the others. The girls all turned off their bedside lamps and the room went dark. Instantly the camera feed switched to a night vison mode and I could see the shapes in each bed.\n\nI checked to see if there was anything happening in the matron's room but it was dark and night vision showed no movement. I returned my attention to head mistress's room and was rewarded a few minutes later as she appeared still naked and carrying her laptop. All school buildings had radiator heating and it kept the rooms warm in winter. Gloria's room was no exception and she pulled the duvet off the bed and also threw back the top sheet before climbing on and sitting with her back against the headboard. Her laptop was beside her and she opened some programme and started to browse. I couldn't see what she was looking at as the screen was tilted away from my view. After a few minutes she seemed satisfied in what she was watching and lay back against the pillows. Her eyes were riveted on the screen and she started to rub her breast and then lowered her other hand to her groin. Her legs parted and she rubbed a finger up the lips of her labia.\n\n\"Fuck, you're going to masturbate! What are you watching you sexy little slut?\" I queried as I started to masturbate myself.\n\nI watched as she raised her hand to her mouth and sucked two fingers before returning them between her legs where they were inserted into her vagina.\n\n\"What are you watching?\" I repeated wondering what kind of stuff turned our head mistress on.\n\n\"Sound!\" I exclaimed realising I may have sound controls for each camera.\n\nI clicked a few boxes and found a volume control. It was currently turned right down. I raised the volume and suddenly the room was full of the sound of someone having sex. Gloria was watching porn! As I listened it sounded like two women ... she was into girl on girl.\n\nHaving the sound made the whole scene before me much more erotic and I tried to synchronise my own stroking with Gloria ... who was now picking up a bit of speed as her fingers plunged in and out of her very wet slit. Her own moans of pleasure were just as audible as those coming from the video she was watching. I think she was trying to time her climax with the girl on the screen and she managed to judge it perfectly. Both women came at the same time ... I'm not sure what the other girl was doing but Gloria was writhing and bucking on the bed as her orgasm took control. Not to be left behind I ejaculated spurting my cum all over the floor under the desk.\n\nAs I recovered I watched Gloria doing the same. She lay panting, her breasts rising and falling with each breath ... in the afterglow of her orgasm she looked so sexy. How the hell was I going to look her in the eye tomorrow without thinking of what I'd just seen.\n\nI waited until Gloria turned out her light before hitting the sack myself. It took a while to get to sleep as I had so many questions about what I had discovered.\n\nThe next morning was a Saturday and I slept in until 9.00am. After a quick shower and breakfast I entered the hidden room or 'Den' as I was now calling it. My first priority was to turn on the surveillance system to see if there was any current activity ... no such luck all the rooms were empty. The safe became my next priority. I turned the key in the lock and then moved the tumbler entering the lotto numbers in reverse order ... nothing. I tried for an hour using different reverse combinations but nothing worked. I then had a thought ... what if Peter hadn't been able to change the combination and it was still the random set of numbers that were set fifty years ago when the safe was new.\n\n\"Shit!\" I declared in frustration. Why hadn't I considered that before.\n\nI might break into the safe using a blow torch or cutting tools but knew it would be difficult. I also couldn't get a safe cracker to come in and do it as too many questions would be raised as to why the safe was hidden. Getting it out of the room was pretty impossible as it must have weighed around 600lbs, I would need safe movers and that again would cause questions. It might have been here for years and be empty anyway ... but then why would Peter have had a key?",
        "The perplexing issue of the safe was out-weighed by the viewing pleasure I got from the cameras later that day. Again I watched as the girls stripped for showers and donned nightwear. My cock was stiff and throbbing for more than an hour as I enjoyed the show while zooming in and out to get better views. Once again poor Toni changed in the bathroom but this time I did see her nude as she left the toilet stall door open. Her body was not as trim and fit as the other girls but it was still to be appreciated in all its naked glory.\n\nThere was no repeat from Head Mistress Steadman as she arrived back at her apartment late and changed quickly before going straight to bed. No movement again in the matrons rooms but I expected that having found out earlier that day that there was no one to fill the job this term.\n\nI was getting used to operating the cameras but was very curious on how they were able to tilt, pan and zoom and still remain hidden, so I did some detective work. I soon found the solution when I looked around the matrons rooms. I'd memorised the general view from each camera so knew roughly where to look. The cameras were hidden behind fixed glass mirrors on the walls. They must have been two way mirrors. The cameras would have to be mounted behind. I couldn't see any way to get access behind the mirrors ... that was confusing.\n\nThe girls dorm room and bathroom were the same, fixed two way mirror glass. I had also pinched a master key from Waverly's workshop and used it to enter Gloria's apartment. It was the same again, the cameras had to be behind the mirrors. I was still unable to see a way to get access to the cameras when I realised that all the mirrors ran along the same side of the building ... the side which backed onto the outer stone wall and my cottage was on the other side. There must be some way of getting in behind the mirrors from my side. I spent half an hour looking for false doors or panels again in the Den walls before seeing the answer that had been in front of me all along. The ceiling had a panel that could be used to access the roof cavity ... the thing was there can't have been a roof cavity over the Den as it was built into the stone wall. I got a chair from the dining area and stood on it to lift the wooden trap door. There was a drop down ladder attached to the door and it slid down as I pulled on it. Grabbing a torch I climbed the ladder and poked my head through the hole. The space above was a long tunnel that ran away into the darkness. The beam of the torch landed on a switch and I flicked it on, illuminating the tunnel with a series of dim wall lights about eight feet apart. I climbed onto the wooden plank floor and stood up. There were a number of cables and wires attached to the walls of the tunnel, most of them looked old but a few new ones were cabled tied beside them. I tentatively moved out along the tunnel and after a few steps I found I was standing on a rough stone pavers. The first camera was just a few feet ahead and when I got closer I could see the back of the two way mirror. The matrons bedroom was in full view. The second mirror showed the bathroom in the same apartment. A sound cable poked thru above each mirror and must have been disguised as a screw on the other side. The next two cameras were a short distance along the tunnel, each sat behind their own two way mirror. A long gap separated the next set of cameras, I guessed we were passing behind the other dorm rooms in the building. Gloria's bedroom and bathroom finally appeared. A seventh camera was just a short gap away and the view through the mirror was of a small room with a large queen size bed in it. The bed had restraining straps fixed to all four corners and a number of intriguing whips and paddles hanging from the bed end. This must have been the room the blank monitor should have shown. I looked at the camera to see if it was broken and quickly found the problem ... a loose wire to the power box. A simple fix I completed in less than a minute.\n\nOn the way back I noticed an old door that once would have led into the stables. It must have been paneled over on the other side when the conversion was done. I retraced my steps and descended the ladder back into the Den. Well that was one mystery solved, the tunnel must have been used to originally to get power to the stables. It may also have been a secret way to sneak out of the estate unseen. The Den had probably contained a full set of steps up to the tunnel level. Peter must have discovered all this and then done some major work to fit the mirrors. I wondered whether he'd done it himself or had someone else do it ... money can buy silence!\n\nPeter's parents arrived the following morning and I retrieved the suitcase and boxes from my office. I offered my condolences and we chatted briefly. Just as they were about to leave I remembered the picture with lotto ticket, it was still in my laptop bag and I thought they might want it.\n\n\"Almost forgot. I found this photo in the apartment.\" I lied handing it over.\n\nPeter's mother took it from me and smiled as he saw the image. \"A very happy day for our boy. He won a lottery. We were never sure how much, he kept that to himself but he was very generous.\"\n\n\"Paid off our mortgage and gave us a nice sum for our retirement. Can't have been much left over for himself as his bank accounts are pretty empty. Always a giver that boy.\" Peter's father's eyes welled up with tears as he spoke.\n\nLater that day I was in the main office giving a hand counting the money collected from the sale of apples from the small orchard at the back of the school. I asked Lorraine the office administrator to unlock the safe so I could deposit the cash until it could be banked. She reached into the potted plant holder beside her desk and removed a key on a wooden tag. I assumed it unlocked the safe.\n\n\"Don't you tell anyone that the key is in there or I'll get in big trouble with Ms Steadman. I keep it there because it's so convenient.\" She smiled at me and shrugged.\n\n\"Your secret is 'safe' with me. No pun intended.\" I joked back.\n\n\"Very funny!\" She rolled her eyes at my attempted humor. \"Anyway, I'm glad this new safe only needs a key the old one had a combination lock as well and none of the staff could remember the damn combination. It was a big old thing about sixty years old, would have weighed a ton.\"\n\n\"What happened to the old one?\" I asked tentatively.\n\n\"Peter got rid of it in the holidays last year. I think he somehow got it on a dolly and wheeled it out the gate. Must have got a scrap metal merchant to come and pick it up.\"\n\n\"You don't remember the combination do you?\"\n\n\"Why on earth would you want that?\" Lorraine asked looking at me as though I was mad.\n\n\"I love random numbers ... it's one of my things. One day I'm going to put out a book about numbers that I've collected over the years and each chapter will explain where the numbers are from.\"\n\nI wasn't quite sure how I came up with that answer so quick, but it seemed a little plausible.\n\n\"You would write about and old safe?\"\n\n\"Yeah, you know make up a short story centered around the safe and the combination numbers.\" I said trying to sound convincing.\n\n\"You're certainly an interesting one Max,\" she said shaking her head.\n\n\"I'll take that as a compliment.\" I grinned.\n\n\"The combination is written on the inside of the cupboard over there.\" She indicated an old free standing cupboard used for storing stationary. \"Had to put it somewhere where we could all get to it easily.\"\n\nI opened the cupboard and there on the side panel were a collection of numbers. I wrote them on the back on an envelope and tried to stay calm.\n\nA few minutes later I was running back to my apartment to see why Peter would go to all that trouble to get the safe in the Den.\n\nI could feel my heart beating faster as I put the key in the lock and turned it. I then entered the combination ... 23 right, 36 left, 18 right, 49 left, 5 right, and finally 33 left. I tried the handle and it moved, unlocking the door.\n\nI had no idea what I would find in the safe ... was it stored videos from the cameras or perhaps some expensive tech equipment he'd bought, maybe even some other valuable keepsakes. When I swung the door open I stared wide eyed at the contents.\n\n\"Holy fuck!\" I exclaimed. It took me few deep breaths to calm myself.\n\nThe safe was split in two by a metal shelf ... the top half was filled with money, bank notes in bundles. The lower half was stacked with gold bars.\n\nI looked around the room nervously not knowing what to do. I spent ten minutes just sitting on the floor stunned. Then the questions started to come ... was this Peter's money and gold? Who else knew about it? Was it from the lottery win? What if it was stolen and people were looking for it? Was I in any danger? Could I keep it? Finally I got up and went back into the cottage and made sure the door was locked and the windows were closed. I grabbed some latex gloves from the first aid kit and returned to the Den, leaving the door open as I suddenly felt a little claustrophobic in the small space.\n\nKneeling before the safe I put on the gloves ... why I thought I needed them I wasn't sure but I didn't want to leave any fingerprints for some unknown reason. I guess I wasn't really thinking straight as my prints were already all over the room. I started on the top shelf and looked carefully to make sure there wasn't any hidden booby traps ... again probably an irrational thing to do. Satisfied that the money seemed free of any more security I took out the bundles and stacked them on the computer desk. Eighty two bundles in total. I removed the paper band from one bundle and started counting. All the notes were \u00a3100 bills. One hundred bills per bundle. That meant I was looking at \u00a3820,000 in cash. I returned the money to the safe leaving it exactly as I found it. Next I lifted out the gold bars, I was surprised at how heavy they were, 250gm each in weight. The bars were all marked Valcambi Suisse 999.9 fine gold. Eighty bars in total. I googled the current price of gold and made the calculation ... \u00a3756,720.\n\nIn total cash and gold there was over one and a half million pounds. The equivalent of almost two million dollars! \n\nAs I went to put the gold back I noticed a lottery ticket taped to the inside wall of the lower shelf. I pulled the ticket out being careful not to rip it. I assumed it was the same ticket that Peter was holding in the photo I had found. I placed the gold back in the safe and closed the door, spinning the lock and turning the key.\n\nReturning to my lounge room I poured myself a drink ... a double vodka. Sitting at my desk I went on-line and looked for lottery winnings over the last five years. There were quite a number of winners in the two to five million range so guessed one of them may have been Peter. I entered his numbers and found the lottery. The first prize was \u00a32,300,000. He must have kept the win a secret as none of the staff had mentioned it. His parents definitely knew but they assumed he'd spent the rest or given most of it away. So now I was presumably the only person who knew what was in the safe. I was in the clear and it was a case of finders keepers.\n\nPeter had not only been a voyeur, he'd been a very rich voyeur ... and now I was too!\n\nIt took a few days to completely accept the situation I now found myself in, but after recounting the money on two more occasions I started to relax and enjoy the feeling. I took a couple of bundles of cash and drove into the city where I purchased a late model Ford Ranger and a new laptop.\n\nFrom then on most evenings were spent in the Den as I spied on Gloria and the unsuspecting girls. I think I masturbated more times in the month than in the whole of the previous year. I had also started to make a record of the porn that Gloria was watching every second night, she was obviously unaware that as the network administrator I had access to every users history. She was into some pretty kinky stuff ... with BDSM and lesbian being her favorites.\n\nNo-one had been in the room with the whips and stuff ... not while I was watching anyway. I still hadn't worked out where you accessed that room from. More detective work needed.\n\nOne Monday morning at the staff meeting we were all introduced to Emma Davison. She was a second year university student who would be joining the school as a new dorm matron. For her time watching over the students at night she would receive free room and board at the school, while still attending university classes during the day. It was a new trial initiative to solve the problem of finding matrons. Although not officially staff she would be called Miss Davison by the students. Emma was twenty one and drop dead gorgeous, with short blonde hair, blue eyes and an amazing athletic figure. To my great joy Emma was now cameras one and two!\n\nThat night I watched as she unpacked her clothes and settled in. Most of the senior girls had gone to a concert at a local church hall and so Emma had no competition from the other cameras. It was entertaining just seeing this beautiful girl move around her new abode, wearing jean shorts and a sports bra. My thoughts drifted to ways I might get to know her better. She obviously worked out as her abs were like a washboard and her calves had a nice defined muscular shape. Maybe we could go jogging together or work out at the staff gym. All I knew was I wanted a chance to get my hands down those jean shorts!\n\nThe girls got back at 10.00pm and I was too tired to watch their nightly bedtime routine. Just as I got up to leave the Den I saw more movement in Emma's place. Julia one of the senior girls from another dorm had entered the room. Emma squealed in delight and gave Julia a big hug. It was obvious they knew each other. I upped the volume on the room mic and sat back down.\n\n\"It's so good to see you again,\" Emma said smiling.\n\n\"I know, I've missed you so much since last year at Newport,\" Julia replied hugging Emma again.\n\n\"How's the new school then?\" Emma asked as they sat on the bed facing each other.\n\n\"It's okay. I haven't made a lot of friends, most of the senior girls are immature. But now you're here it's going to get way better. How did you get the job here anyway?\"\n\n\"I applied and I got it. Even though it's an hour and to the university, free room and board makes it worth it.\"\n\n\"Wait, you aren't here because you missed me?\" Julia pouted.\n\n\"Maybe a little bit. Well maybe more than a little bit.\"\n\n\"Then I guess I better make it worth your while,\" Julia said and pulled her t shirt over her head and dropped it on the floor. She then reached over and kissed Emma on the lips.\n\nI was stunned. What the hell was going on.\n\n\"Hey, we need to be careful okay. Set some ground rules to make sure no-one catches us. Last year when I boarded at your parents place it came really close.\" Emma was holding her hand up to stop Julia giving another kiss.\n\n\"Rules can wait till tomorrow, unlike my hot wet pussy that needs your attention right now.\"\n\nJulia reached over and pulled Emma's sports bra off revealing a pair of perfectly shaped boobs. Emma sighed and seemed to resign herself to what was going to happen, she leaned forward and kissed Julia passionately. It wasn't long before both girls were naked and lying on the bed with their mouths and hands all over each other. My thoughts of going to bed had vanished and I stroked my rigid cock as I watched the show on the big monitor.\n\nThe two girls couldn't have look any different, Emma with her short blonde hair and small pert breasts with nicely cropped pubic hair ... and Julia who had long red hair and a pale body with medium sized boobs and a rather hirsute pubic hair region.\n\nEmma had her fingers in Julia's pussy and she was so wet her juices were leaking down her leg. Julia reciprocated by rubbing her hand back and forth along Emma's slit causing her to mew softly. Their mouths were locked together and I could tell there was a lot of tongue involved. Before long both girls were gyrating their hips and moaning loudly. The wet patch on the bed grew larger as Julia continued to trickle juices. I had never seen a girl so wet before.\n\n\"I want to taste you baby!\" Emma exclaimed and slipped down the bed spreading Julia's legs as she went.\n\n\"Oh, yeah. That is so good,\" Julia panted at the feeling of a tongue lapping hungrily at her wet pussy.\n\nEmma wet her finger with the flowing juices and inserted it into Julia's asshole as she clamped her mouth onto the large protruding clit that was in front of her.\n\n\"Oh fuck! I'm going to cum.\" Julia announced as she stuffed her panties into her mouth. This I soon realised was for a good reason ... without the panties muffling effect the whole campus would have woken up with what was about to happen.\n\nNow I've seen woman have strong orgasms before, Jenny was one of them, but Julia was in a league of her own. It was as though she was possessed and her body almost left the bed as she erupted becoming a thrashing, convulsing maniac. To her credit Emma held on as long as she could before she was bucked off. The bed was now drenched as squirt after squirt pulsed out of Julia's pussy, a large portion of it soaking Emma as well. The orgasm lasted for over a minute until finally she collapsed shaking on the wet sheet.\n\n\"Fuck girl, when was the last time you came,\" Emma laughed as she wrapped her arms around her lover.\n\n\"Actually I came yesterday,\" Julia admitted gingerly.\n\n\"What! Who with?\" Emma sat up in surprise.\n\n\"By myself in the shower ... that's the only way I do it now. You haven't been around to help out in that area,\" she said with a mocked sadness.\n\n\"I suppose not.\" Emma said smiling as she gave Julia's butt a playful slap.\n\n\"You could have told me you were coming and I would have held out till today.\"\n\n\"It was supposed to be a surprise.\"\n\n\"Well you succeeded there. I couldn't believe when you were introduced at assembly this afternoon.\"\n\n\"Well you better make it worth my while coming all the way out here then. I left some good lovers back in the city.\" Emma spread her legs and patted her pussy. \"Come on slut, lick me.\" She ordered.\n\nJulia smiled and spent the next ten minutes licking and sucking on her girlfriend's nicely shaved snatch.\n\n\"Fuck that was good!\" Emma declared afterwards as she lay on her back panting for breath.\n\n\"Glad to be of service Miss Davidson, anything else this lowly student can do for the new matron?\"\n\n\"Yeah, you can wash this wet sheet.\" Emma said as she pushed Julia over onto the dry side of the bed. \"Next time we shave that beautiful pussy of yours too, I like to see more of you than I can now.\"\n\n\"I haven't needed to groom the forest, since coming here. But now your wish is my command.\" Julia joked in a subservient voice.\n\nEmma pulled her into a warm embrace and they snuggled together.\n\nAfter ten minutes Julia got up and dressed. Then they changed the sheets on the bed together.\n\n\"So you had other girls in the city then?\" Julia asked.\n\n\"Girls and guys. You know we weren't exclusive. I could never be with just one person.\" Emma replied.\n\nJulia looked a little disappointed at the comment but didn't say anything.\n\nThey finished changing the sheets Julia left. Emma flopped down onto the bed and gave a contented sigh before turning over and going to sleep.\n\nFrom then on I had so much more to enjoy on my nightly voyeur sessions. Julia slipped into Emma's room two or three times a week and Deb's and Tracey had enjoyed a few sessions in the dorm shower room when the other girls were in bed. Plus, Gloria was still masturbating to porn and I was still collating data on the sites she visited.\n\nI made friends with Emma and we enjoyed jogging together and chatting while working out in the gym. She had heard that I was gay so I suppose she wasn't thinking about any kind of physical relationship starting. I was bummed at this but had to keep the gay pretext up to keep my job.",
        "My friendship with Toni was also growing and I found I looked forward to our jam sessions. We also talked a lot about all manner of topics. I learned about her upbringing and that her mother abandoned her when she was six, leaving her aunt to raise her. She had no idea who her father was ... she was the result of a drunken one-night-stand. Her aunt had become a sex worker and that made living at home stressful and not a place to bring home friends. Music was the thing that had kept her happy and it had become her passion. We wrote a few songs together and I was pleasantly surprised at how good they were. I made plans to buy some equipment so we could record the songs.\n\nThe mid-term break came and I took a few days to spend time with my folks. I also spent time in bed with Jenny. The sex was great and I realised I missed actual intercourse more than I thought. I decided that if I was going to stay at the school I was going to have to deal with the gay issue ... I had a plan how to do that.\n\nI got back to the school before mid-term ended, planning to work on my novel. I was surprised to find Toni had also come back early. I invited her over to the cottage to find out why.\n\n\"My aunt has had to move out of her apartment and she is living with a new boyfriend, I think he's her pimp. He's a real jerk and it was clear he didn't want me around. So I rang Ms Steadman and asked if I could come back a few days early.\"\n\n\"Well, let's enjoy our time together before the hordes come back.\" I said trying to cheer her up.\n\nI went to the study and got a big wrapped present I had hidden behind the desk.\n\n\"What's this?\" She was both surprised and clearly excited.\n\n\"Your birthday present.\"\n\n\"It's not my birthday for another nine months.\"\n\n\"Okay, this is for your last birthday. I missed it.\"\n\n\"You didn't even know me then.\"\n\n\"Now your just letting details get in the way.\" I said handing over the present.\n\nShe ripped the paper off revealing a hard case. Inside was a Rainsong Black Ice Graphite acoustic-electric guitar.\n\n\"Oh shit! You got to be kidding me!\" she exclaimed after opening the custom built case.\n\n\"All good guitarists should have a good guitar.\" I said smiling.\n\n\"This is ... this is ...\" Toni couldn't finish the sentence she just rushed over and gave me a huge hug.\n\nWhen we finally parted I could see she had tears in her eyes.\n\n\"Tears of happiness I hope?\"\n\n\"You bet,\" was all she managed to get out between sobs.\n\nWe spent the rest of the afternoon playing old and new songs while drinking and eating our way through the tasty treats my mother had packed in my suitcase.\n\n\"I'm just going to get fatter Toni complained as she finished a brownie.\"\n\n\"I've put on a few pounds over the break too.\" I patted my stomach. \"How about we turn over a new leaf. Starting tomorrow we go jogging three times a week and we set you up with a program in the gym.\n\n\"What about eating bad stuff, I need help with that?\"\n\n\"Okay, lets watch each-others backs and make sure we don't eat too many things like this.\" I said popping a piece of fudge into my mouth. \"Starting tomorrow!\" I smiled and chewed.\n\nThe rest of the week was spent half on my novel and half with Toni. The few staff who were around didn't care what she got up to during the day. We started the exercise plan and made sure that we accounted for the calories we ate. It was after midnight most nights when I escorted her back to her dorm.\n\nGloria and Emma were away for the holiday, so nothing was worth watching on the cameras. I actually enjoyed the break from spying in the Den each night.\n\nThe second half of the term got underway and I formulated my plan to get rid of the gay restriction. Gloria made it even easier on the second night back by giving me more ammunition.\n\nAs I sat in the Den watching her in the bedroom I was surprised to see someone else enter her room. It was Waverly, the MILF from maintenance. I hadn't gotten to know her very well during the first half of term as she'd been away looking after her sick mother. Waverly sat on the end of Gloria's bed and watched as Gloria put some clothes away. I increased the volume on the room microphone and listened.\n\n\"Knees!\" Waverly said firmly once Gloria had finished her task.\n\nImmediately Gloria fell to her knees and bowed her head.\n\nWhat the fuck is going on here I thought as I sat forward in my chair in anticipation.\n\n\"Crawl to me,\" she used the same firm tone.\n\nGloria crawled across the floor and stopped in front of Waverly.\n\n\"Stand and strip.\" Another command.\n\nGloria stood and removed her blouse followed by her slacks.\n\n\"I said strip bitch!\"\n\nThis was getting more interesting by the second.\n\nGloria removed her bra and panties. She stood naked as Waverly looked silently at her.\n\nI could see Gloria's nipples were erect and her breasts rose and fell as took short excited breaths.\n\n\"Go to the room and wait for me.\"\n\nGloria turned without a word and headed in the direction of her walk-in wardrobe. She disappeared from the view of the bedroom camera but suddenly appeared in the image from camera seven, the room with the whips and paddles. She sat on the bed and waited. \n\nOkay, now I was almost salivating at the prospect of what might happen in the new room.\n\nWaverly took her time undressing in the main bedroom. She folded her clothes as she removed them and stacked them neatly on the bed. Her back was to the camera and her butt cheeks were small and firm, almost like a boy. There was muscle definition in her upper arms and legs ... she obviously worked out on a regular basis. When she turn around I was greeted with an incredible physique. Her whole upper body was tight with muscle, even her breasts looked firm and taut. At forty-five she had the body of a twenty year old. Her pubic area was shaved clean and her labia jutted out between the top of her thighs. A tattoo of a tiger was inked onto her left torso and breast ... it looked spectacular.\n\nGloria was still sitting silently when Waverly entered the small bedroom.\n\n\"Bend over the bed.\" The order was made with authority.\n\nGloria immediately obeyed.\n\n\"Spread your legs.\"\n\nCompliance again.\n\n\"We will start with ten stokes of the riding crop. You will not utter a sound or I will make it twenty.\"\n\nWaverly then picked up a crop from the bed end and proceeded to whip the head mistress ass!\n\nAfter the crop, ten strokes were given with a paddle and then ten more with a rope cord. All the time Gloria stayed still and said nothing. Her face was turned toward the mirror where the camera was hidden and I could tell the punishment had caused severe pain as tears were flowing down her face. The well beaten ass was red and a few welts had started to appear. Finally Waverly stopped and rubbed her hand roughly over the swelling flesh before smacking both butt cheeks.\n\n\"You were very good. What do you have to say?\"\n\n\"Thank you mistress.\" Gloria sobbed.\n\n\"Good. Your obedience means you can have a treat. Roll over and suck my cunt.\"\n\nGloria turned over and lay back gingerly on the bed. Waverly hopped up and knelt with her legs either side of Gloria's head, she lowered her pussy onto the waiting mouth.\n\nThe head-mistress of Deanwell School for Girls proceeded to suck the pussy of her own sadistic mistress with vigorous enthusiasm. Waverly's approaching orgasm was preceded by her reaching back and pinching and twisting Gloria's nipples.\n\n\"Fuck, yes ... yes ... yes!\" Waves of pleasure swept over her body as she climaxed, finally falling forward onto the bed gasping for breath.\n\nGloria stayed where she was until prompted by Waverly to crawl up the bed and lie beside her.\n\n\"Did you come, or do you need me to finish you off.\" Waverly asked.\n\n\"No mistress, I didn't come.\"\n\n\"Then lets continue.\"\n\nWaverly went to a small set of drawers in the corner and removed an eight inch black strap-on dildo. She fitted the straps around her waist and crotch and pulled them tight.\n\n\"On your knees again.\" She ordered.\n\nGloria turned over and shuffled down the bed until her ass hung over the edge. The welts on her flesh were now more visible and must have still been hurting. Waverly applied some spit to the dildo before inserting it into Gloria's waiting pussy. She thrust long hard strokes burying the dildo to the hilt every time. It wasn't long before an orgasm seemed near.\n\n\"You may make noise.\" Waverly said as she continued to pound away.\n\nGloria started to grunt every time the dildo plunged into her. A loud guttural cry proceeded her orgasm and she feel forward onto the bed, her body shaking as she continued to ride her own wave of pleasure.\n\nWaverly unstrapped the dildo and put it away. She then opened a jar of cream and massaged it onto Gloria's damaged flesh. This was done quite tenderly, in contrast to her earlier rough actions. Once she add finished she left the room and re-entered Gloria's bedroom. Dressing quickly she left the apartment.\n\nGloria stayed lying face down on the bed and I could tell she was fingering herself. After another small orgasm she seemed to go to sleep. I turned off the camera and left the Den. I had some work to do before I instigated my plan to start getting laid at this school.\n\nThe next morning at staff meeting I noticed Gloria moving a little tentatively and I almost burst out laughing at the face she made when she sat on a hard bottomed chair. There was a look between her and Waverly that would have meant nothing to anyone else but everything to me.\n\nI had that afternoon off so I went to find the window I knew must be the source of light to the ladies 'punishment room.' It was reasonably concealed being on the back end of the building, behind some tall bushes. I rigged up a small spy cam that gave a clear view of the room. It was movement sensitive so would start the next time someone entered the room.\n\nIt took eight days before the room was visited again. This time Waverly took a small whip to Gloria's breasts as well as her upper legs. The previous welts on her butt had healed up and were hardly noticeable. They finished their session with both of them climaxing from oral sex.\n\nMy spy cam had achieved its function. The picture was not as clear as the mirror camera but it had recorded enough detail to identify the actions and participants. Time to pay the head-mistress a visit of my own!\n\nThe next evening I waited until I knew she was home before knocking on her apartment door. I was armed with my laptop and a smug smile.\n\n\"Good evening Ms Steadman.\" I said politely as she opened the door.\n\n\"Max. How can I help you?\"\n\n\"I have some news regarding one of the staff.\" I frowned.\n\n\"This can't wait until tomorrow.\" Her voice indicated some annoyance.\n\n\"It's regarding Waverly from maintenance, I don't think it should wait.\" I looked for some reaction.\n\nGloria's eyes showed a slight fear before she quickly recovered. \"Then you better come in, I suppose.\"\n\nI followed her into the small lounge and was offered a seat. I sat silently for a minute trying to build a little tension.\n\n\"Well. What is it?\" she finally asked impatiently.\n\n\"It seems the Waverly has been involved in inappropriate behavior with another member of staff.\" I said this seriously while trying stay calm, not wanting to give too much away yet.\n\nGloria's face turned pale and she swallowed. \"What sort of behavior and with whom, and what sort of proof do you have.\"\n\nI stood and moved across the room. Gloria looked a bit confused, also a little fearful. I sat beside her and opened my laptop. I initiated a file and the screen was filled with a video of Waverly whipping Gloria's naked body.\n\n\"Where .. how ...?\" was all that managed to come out of her mouth. Her face had gone pale and her eyes were wide as she looked at the video.\n\nI shut the laptop and sat quietly. Neither of us said a word for what seemed like a lifetime but was probably only a minute.\n\n\"There is also a record of various web sites you have been visiting on a regular basis in another file.\"\n\n\"What are you going to do.\" Her voice sounded small and weak.\n\n\"What do you want me to do Ms Steadman?\"\n\n\"This will ruin my career, and Waverly's too. You know that right?\" she mumbled pathetically.\n\nIn the space of a few minutes she had gone from being a self-confident, strong woman to a trembling wreck.\n\n\"If this video and the internet sites were to be shown to the school board, then yes I know your career would be over.\" I replied looking across at her.\n\n\"What do you mean, if?\" Gloria looked across at me a glimmer of hope in her eye.\n\n\"As I see it I have two options here. One ... I report you for being less than the high upstanding woman that this school thinks it has as a head-mistress. Or two ... you can stand up right now and remove your clothes.\"\n\nGloria looked shocked at my statement.\n\n\"You want me to what?\"\n\n\"Shut up. Stand up and remove your clothes Gloria!\" I commanded.\n\nShe stood immediately and stared at me. I saw two things in her face, fear and excitement. This was going to be easier than I thought.\n\n\"Don't stand there. Get those fucking clothes off!\"\n\nHer breathing was labored and loud as she removed her blouse and then unzipped her slacks and let them drop to the floor.\n\n\"All your clothes.\"\n\nShe hesitated.\n\n\"Now!\" I said strongly without raising my voice.\n\nHer blue bra and panty set were soon on the floor. Gloria stood before me naked, she covered her crotch with one hand and her breasts with the other. The breasts were still very red and lined with whip welts, as were her legs.\n\n\"Did I say cover yourself.\"\n\n\"Sorry.\" She said meekly and dropped her hands to her sides.\n\nI let her stand there exposed and vulnerable for a good couple of minutes as I looked over her body.\n\n\"The video will remain in my private hands, and your old web history erased. You will carry on seeing Waverly and will not be recorded. Each night you web history will automatically be erased.\"\n\nI stood and moved close, whispering in her ear. \"I am also not gay, I have a raging boner right now from looking at your body. I will be engaging in relationships with women while at the school and you may be one of them.\"\n\nI gently pinched one of her nipples causing it to stiffen. She drew a sharp breath and a faint moan left her lips. I then picked up my laptop and left the apartment without another word.\n\nRacing around to my cottage I quickly entered the Den. Gloria was standing in her bedroom, still naked. She was standing at the end of the bed and breathing heavily. No emotion was showing on her face. She stood there for a few minutes looking at her image in the full length closet mirror. Slowly she reached up and touched the nipple I had pinched.\n\n\"Oh, fuck ... fuck, fuck, fuck!\" She exclaimed loudly in exasperation and fell back onto the bed. I then witnessed one of the most torrid and physical masturbation sessions I had seen. Her fingers plunged in and out of her pussy as she quickly rushed to an intense orgasm. I was so aroused I jerked off in almost record time myself. I continued watching as Gloria crawled into the fetal position and started to sob. \n\nThe next day I entered her office and shut the door behind me. I again saw that expression of fear and excitement as she stared at me silently.\n\n\"Ms Steadman. I hope that the understanding we came to last night is satisfactory to us both. I find you to be a good leader at Deanwell and I would like to see you continue that good work. Here at work I will expect us to treat each other with same professionalism as before ... after hours I will occasionally call on you for non-work related activities. I hope this is also to your satisfaction.\"\n\n\"Yes.\"\n\nI raised my eyebrows at her reply.\n\n\"Yes, thank you.\" She quickly rephrased.\n\nI left her office with huge smile on my face. I knew that she was now mine!\n\nFor the next two weeks I didn't go near Gloria after work. I wanted her to sweat it out wondering when and what I would want. She had continued with her masturbation sessions in bed while watching the computer. Waverly had also been back and I am pretty sure she knew nothing of my incriminating video.\n\nThen things took a surprising and sudden turn.\n\nOn Sunday morning I was naked in the Den watching Emma take a shower when I heard a sound from the open doorway. I turn quickly and saw Toni standing just inside the room looking at the monitor that showed Emma washing herself.\n\n\"What the fuck Toni!\" I exclaimed.\n\n\"What the fuck yourself!\" Toni replied. She was caught between staring at the monitor and glancing at my stiff cock. \"What are you watching? Is that Miss Davidson?\"\n\n\"Shit!\" I didn't know what to say or do.\n\nI decided to usher Toni out into the cottage and try and explain things. As I stood my dick stuck straight out in front of me and bounced up and down. I managed to man handle her out of the room without poking her too much. Sitting her on the couch I went to the bedroom to put some shorts on ... they did little to hide my boner. When I returned to the lounge Toni was not there, she had gone back into the Den. I took a deep breath and followed her.\n\n\"Look I can explain ...\" I started.\n\n\"Fuck, is that the dorm room and shower!\" Toni interrupted looking at the other monitors.\n\n\"Yes. Let me explain.\"\n\n\"You've been watching us?\"\n\n'Yes.\" I said resigned to the fact that I would have to come totally clean and tell her everything. I just hoped she would be somewhat understanding.\n\n\"Okay. Explain.\" Toni sat in the chair looking at me ... well mostly looking at the tent in my shorts, that was slowly going down.\n\nI sat on the floor and told her everything, starting from seeing the light in the wall and finishing with my visit to Ms Steadman's room.\n\n\"You just pinched her nipple and left!\" Toni laughed. \"She must be shitting herself wondering what you are going to do.\"\n\nToni's comment was the last thing I expected her to say.\n\n\"You aren't mad ... or disgusted?\"\n\n\"A little mad that you spied on me in the dorm and shower.\"\n\n\"I sorry. But you do have a nice set of boobs.\" I smiled weakly and grinned.\n\n\"Really. Do you mean that?\" Toni looked pleased at my comment.\n\n\"Of course I mean it, I would never lie to you.\"\n\n\"Maybe you wouldn't lie but you hid all this from me.\" She swept her arm around the room to emphasise her statement.\n\n\"How was I going to tell you about this. Firstly, I'm on staff and you're a student ... a student that I was spying on. Secondly, how do you bring this up in conversation without sounding like a pervert.\"\n\n\"Okay, but you're not the pervert type. I would call you a voyeur. It sounds sexier.\" She smiled and shrugged.\n\n\"Thank you, I guess.\" I was still a bit confused by her acceptance of all this. \"Why are you not upset about all this?\"\n\n\"I know I'm just a student and you're staff, but we are only three years apart in age. The fact that you told me all about how you found this and what you've been doing is kind of special,\" she shrugged before continuing. \" I mean you could have kicked me out or made up some bullshit story to cover yourself ... or worse you could have knocked me out and buried me in the forest. But you didn't, you trusted me ... I've never had a friend like you before. I really like you and sharing this secret is going to be cool.\"\n\nToni stood up and came over and we hugged. I was conscious I had no shirt on.\n\n\"Gosh, you're really hard!\" she declared as we parted.\n\n\"It's gone down.\" I protested.\n\n\"Not your dick. Your body. It's firm and hard. I've never hugged anyone that muscular before. Actually I've never hugged a guy with his shirt off before.\" She confessed.\n\nI smiled.\n\n\"By the way your dick was pretty cool too, that's the first one of those I've seen as well,\" she said shyly.\n\n\"Are you blushing?\" I said grinning at her.\n\n\"No ... maybe.\" She reddened even more at my comment.",
        "\"Want something to eat.\" I changed the subject.\n\nWe made sandwiches and ate them in front of the fire.\n\n\"So how is this going to work?\" Toni mumbled with her mouthful.\n\n\"How's what going to work?\"\n\n\"This spying thing. I want to watch with you.\"\n\n\"Okay, I suppose that's fair. Not a problem ... but it is all females though, you realise that right?\"\n\n\"Of course I do.\"\n\n\"So what, are you into girls? You haven't said anything before.\"\n\n\"I'm not ... well I don't know. I did fool around with Sandy Milburn a bit last year. It was just showering together and washing each other's backs, but I did like it. So maybe I would like see more.\"\n\n\"Okay Miss perv, you're in.\" I joked.\n\n\"It's Miss voyeur, thank you.\" She replied smiling back.\n\nAfter lunch I wheeled my office chair into the Den. We sat side by side in front of the keyboard and I showed Toni how it all worked.\n\n\"What do you do when you watch?\" Toni asked hesitantly. \"I mean you get turned on right?\"\n\n\"Most of the time I masturbate.\" I answered truthfully.\n\n\"So you're naked ... like before?\"\n\n\"Mostly. I leave the bookcase door open and the heat from the fire travels through.\"\n\n\"Yeah, I know you leave it open.\" She smiled.\n\n\"I do keep the cottage door locked, you're the only one with a key.\"\n\nWe started watching the girls shower camera feed. Tracey was just walking in ... she had a robe on and was carrying a towel. She turned on the water and waited for it to warm before disrobing and stepping into the shower.\n\n\"I wish I had a body like that.\" Toni said wistfully.\n\n\"Hey, you're only a few pounds away from looking that way. Your tits are better anyway.\" I said and took her hand in mine giving it a squeeze.\n\n\"Thanks, but hers are pretty nice.\"\n\nWe looked back at the screen and Debs walked into the bathroom. She had a towel wrapped around her body which she dropped to the floor and entered the shower.\n\n\"This could get good.\" I said.\n\nIt did get good. The two girls started to make out straight away.\n\n\"So would you normally masturbate to this?\" Toni asked quietly.\n\n\"Probably.\" Was my reply.\n\n\"Do you want to now? I mean if you do I don't mind.\" Her voice was barely a whisper.\n\n\"Do you masturbate?\" I said my eyes still on the monitor.\n\n\"Yeah. Sometimes.\" Was the shy reply.\n\n\"Do you want to do it now, watching this?\"\n\n\"I think so.\"\n\n\"Then let's do it.\"\n\n\"Do we take our clothes off?\"\n\n\"Do you want to?\"\n\n\"Yes.\"\n\nWe both stood and removed our clothes, not looking at each other as we stripped. Sitting back down we began to touch ourselves as we watched Tracey and Debs finger each other while leaning against the shower wall. Soon Tracey was on her knees and she had a couple of fingers up Deb's pussy while she licked clit. Her other hand was between her own legs.\n\n\"Fuck, this is hot.\" Toni said in a husky voice.\n\nI reached over and took her free hand in mine as we continued to get ourselves off. Toni moved her chair closer and put her head on my shoulder as we watched. At about the same time as Debs orgasmed Toni did as well. Her grip on my hand tightened as she went through a series of light spasms on her chair. The girls in the shower had to curtail their activities soon after as Tammy entered the bathroom. She took the next cubicle but it was too close for Debs and Tracey to continue without being caught. They washed themselves and toweled off before heading back to the dorm room.\n\n\"You didn't come. Did you?\" Toni asked her head still on my shoulder but her eyes were on my stiff cock.\n\n\"No I didn't.\"\n\n\"Do you still want too? I mean ... I'd like to watch.\" \n\n\"I think I could come real quick knowing you're watching.\" I said and started to jerk my cock faster.\n\nI gave a short grunt and shot my load out over the floor. I was quite pleased that four or five ropes of cum spurted out. I wanted to make it a good show since it was Toni's first time ... bit of a pride thing too.\n\n\"Wow!\" Toni exclaimed. \"That was unreal. Thank you.\"\n\n\"Ah ... your welcome.\" I replied a little embarrassed at her praise.\n\nWe sat beside each other in silence for a while.\n\n\"Do you want to make love to me.\" Toni asked. I could tell she was hesitant.\n\n\"Toni, you're a student. That would be crossing a line that I'm not willing to cross. I think we've crossed enough lines today as it is. Don't get me wrong I really like you but we have to keep some boundaries ...okay.\"\n\n\"I'm good with that.\" She sounded relieved.\n\n\"How about a shower together, you can wash my back.\"\n\n\"Only if you wash mine.\"\n\n\"Deal.\"\n\nWe actually ended up sharing a bath. We sat with our backs at opposite ends and talked until our skin was wrinkled from the water. Toni had taken her glasses off and for the first time I noticed how pretty her emerald colored eyes were.\n\nLater that week I showed her what was in the safe. She freaked out when she saw the bundles of cash and the gold bars. I told her that if there was anything she ever needed then we would get it.\n\nOver the rest of the term Toni joined me in the Den at least twice a week. We wouldn't always masturbate but we were always nude. She was enthralled watching Waverly punish Ms Steadman and couldn't believe it was really our head mistress getting her butt and boobs whipped. I noticed that she also really liked when we spied on Emma ... I think Toni had a bit of a crush on Miss Davidson.\n\nAll seemed to be going well until after dinner one night when Toni came to my place in tears. She was so upset it took ten minutes of her crying on my shoulder before she calmed enough to tell me the problem. Julia, the student Emma was fucking, had said some hurtful things after they had argued about the school quiz team. Julia was the team captain of the four girl team and she had dropped Toni as a member for the televised regional finals. Even though Toni had answered the most questions in all the previous non televised rounds.\n\n\"She said a fat kid with a broken nose and acne wasn't a good look for the school and I shouldn't be allowed in the team.\" Toni told me teary eyed.\n\n\"I'll talk to Ms Steadman about it, she'll have you reinstated.\" I said reassuringly.\n\n\"No, I don't want that. I don't want to be around that fucking bitch anymore.\"\n\n\"Hey, you deserve to be in the team Toni, you earned your place.\"\n\n\"I don't care okay. Don't say anything. She's right anyway, compared to the other girls I'm fucking ugly. I wish I could just be normal looking and not look like a dog!\" She burst into tears again.\n\nNo matter how much I tried she was not going to be consoled. To her credit she had lost weight due to our exercise and eating plan and although still a few pounds heavier than the others, she was not fat. Her acne had cleared up a lot as well. The crooked nose was something I didn't even notice anymore. But Toni couldn't see any of that.\n\nIt was near the end of the term and we had an extended break coming up over Easter. The heating system was being updated in the main building so there was twenty eight days holiday instead of the usual sixteen. I came up with a plan.\n\nToni's aunt was still living with her boyfriend so she had planned to stay on campus again during the break. On the last day of term I told her to pack a bag and meet me at the cottage. I had signed her out as going home for the holidays in the school system so no-one would suspect anything. When she arrived at the cottage I said nothing and just loaded her suitcase into my truck and waited for her to get in.\n\n\"So where are we going?\" she asked for the tenth time as we headed north on the motorway.\n\n\"You'll see,\" was all I offered in reply.\n\nWe drove into London and stopped in front of a nice hotel in the Westend district. I had booked adjoining rooms. Toni was ecstatic her room had a huge king size bed and jacuzzi bath. We ate in the restaurant and it was probably the fanciest meal we had both had. That night we sat up in bed and watched movies on TV. Toni fell asleep beside me so we shared the bed that night.\n\nIn the morning I told her what the next four weeks entailed. First we were going to a surgeon who was going to fix her nose. Then an optometrist appointment to see if she could get contacts instead of those rose tinted glasses. A dermatologist was going to look at her acne and a hair and make-up stylist was also booked. To top things off a personal trainer was going to daily whip us into shape at the hotel gym.\n\n\"You wanted to feel better about yourself so hopefully this will help ... with the outside stuff anyway.\" I said smiling at her. \"You and I are going to enjoy London in our off time to help relax and calm our inner selves. It's also my birthday in three and a half weeks so we are going to celebrate that in style ... London style!\"\n\nToni teared up. \"You arranged all this for me. I love you.\"\n\n\"I love you too.\"\n\nAs we hugged I realised I didn't just love her as a friend, I was falling in love with her.\n\nThe next three and a half weeks flew by. She had the operation and the swelling had gone down, revealing a cute nose for her cute face. The acne had disappeared from the treatment and her skin looked so good she kept looking in the mirror every chance she got. The personal trainer had really whipped us into shape. I had never had such a toned body, and Toni had dropped more weight and toned up. She looked fantastic. The day before my birthday she had her hair cut and styled and a make-up artist spent time telling and showing her what looked best on her. She had been shopping that morning and had bought a new dress for the occasion, plus her contact lenses had arrived. I had not seen her at all that day as I was busy visiting an old school friend who worked for his father's publishing house.\n\nI got back to the hotel after five o'clock and showered and changed. An hour later I knocked on Toni's door. I'd made a bit of an effort myself and had some trendy new clothes on ... a new thing for me but the helpful shop assistant said I looked good.\n\nWhen Toni opened the door I was stunned.\n\n\"Wow! You look absolutely beautiful.\"\n\n\"Thank you,' she replied and gave a twirl in her black mini dress and high heels. \"You don't look too bad yourself,\" she added smiling.\n\nI must admit I had no real problem with how Toni looked before, but now with the makeover and seeing how happy see seemed I was feeling as good as she was. We ate at a small restaurant that the concierge had recommended. It was an amazing meal and afterwards we went to Ronnie Scotts Jazz Club to hear an American jazz guitarist. The music was great but I couldn't take my eyes off Toni all night ... she looked so different with her hair, makeup and no glasses.\n\n\"You need to stop staring, it's freaking me out,\" she said as we sat at our table.\n\n\"No way. I'm not going to ever stop looking at you.\" I took her hands in mine.\n\nWe walked back to the hotel huddled together in the chilly spring air.\n\nWhen we got back to the room things seemed a little awkward ... a 'what do we do now' kind of situation. We both felt a sexual tension in the air, but neither of us were sure what we wanted to do about it.\n\n\"I'm still a student aren't I?\" Toni finally said with a sense of resignation.\n\n\"Yes you are.\" There was resignation in my voice too.\n\n\"One more term.\"\n\n\"Yeah, one more term.\"\n\n\"We could buy a porno movie on the in-house channel and masturbate?\" Toni suggested.\n\n\"Sounds like a plan.\" I answered relieved that she understood my principle of not having sex yet.\n\nWe enjoyed watching each other bring ourselves to orgasm more than the porno. I was surprised to see that her pussy hair had been styled as well ... with a shaved lower area and a landing strip above. Very nice! I really wanted to touch her but we kept our hands to ourselves.\n\nTwo days later we headed back to the school. When we arrived I dropped Toni at the gate so no-one would guess we had been together. As she walked towards her dorm room I still had to shake my head in disbelief at the change in her appearance. I had also noticed over the last few days a change in her self-esteem ... she really felt good about herself.\n\nI got to the cottage and went straight to the Den. I wanted to see the other girls reactions to the new Toni. The next hour of watching was priceless.\n\nTracey was the first to return and she just stared as though she'd seen a ghost.\n\n\"Yes, it's me Trace.\" Toni said laughing. \"What do you think?\"\n\n\"Holy shit! You look like a fucking model.\" Tracey blurted out.\n\n\"Makeover.\" Toni shrugged and smiled.\n\n\"Wow! You've had your nose done and your hair looks fantastic ... and you've lost weight. How did you do that in four weeks?\" She exclaimed. \"And your glasses are gone ... did you get contacts? Gosh you look great. Wait till Debs and the others see you they're gonna flip out.\"\n\nI could tell Toni was on cloud nine with the reaction she got and she faced the hidden mirror camera and beamed a big smile ... she knew I'd be watching.\n\nAs the other girls returned they all had the same reaction. Debs even pretended to swoon as she fell onto her bed and fanned herself. Toni was officially hot!\n\nThat night for the first time Toni changed in front of the other girls. She didn't flaunt herself but she was aware that they were all looking as she stripped down to her panties before putting on her nightshirt. Before the lights went out she blew me a goodnight kiss when the others weren't looking.\n\nThe following day word spread pretty quickly throughout the school of the new looking Toni. She got a lot of positive comments. One comment in particular was well received.\n\n\"She said I had a new aura about me.\" Toni was sitting in my lounge after dinner that night and shared what Miss Davidson had said about her.\n\n\"You like her don't you?\"\n\n\"Yeah, she's really cool. I enjoy her looking after us in the dorm.\"\n\n\"No, I mean you really like her ... her tight little ass, her pert boobs and that sexy blonde hairstyle.\" I grinned and raised my eyebrows.\n\n\"Okay ... maybe I find her a little bit alluring.\" Toni confessed.\n\n\"Alluring! Is that a fancy way of saying you wouldn't mind getting into her pants?\" I joked back.\n\n\"All right! Yes I think about it. Is that what you want to hear!\" Toni didn't appreciate my ribbing.\n\n\"Hey, I'm sorry. I didn't mean to upset you.\" I gave her a hug to apologise.\n\n\"It's okay. Anyway why aren't you upset that I like her ... I mean we are kind of together aren't we?\"\n\n\"Yeah of course we are. But I'm open minded about you and other girls.\"\n\n\"Is that right. If I marched over to her apartment right now you wouldn't have a problem with it eh?\"\n\n\"I would shoot the biggest load ever jerking off to you and her getting it on.\"\n\n\"Knowing you were watching would be an extra turn on I must admit.\" It was her turn to grin and raise her eyebrows.\n\nWe both laughed.\n\n\"If I get it on with Emma, you have to get it on with Ms Steadman ... and record it.\" She dared.\n\n\"Deal!\" I said accepting her challenge immediately.\n\n\"Don't bother. I wouldn't have chance with Emma anyway, she's got Julia to keep her company.\"\n\n\"Fuck Julia. Remember you're the one with the new aura. You'd have no problem seducing Miss Emma Davison.\"\n\n\"I don't know the first thing about seducing anything, let alone a gorgeous girl like Emma. Besides what's happened to your staff shouldn't fuck the students principle?\"\n\n\"It's my principle ... and Emma isn't on staff anyway. You have everything it takes to seduce her, you're smart, sexy and you know exactly what she likes.\"\n\n\"What do you mean?\"\n\n\"Toni you've watched her and Julia lots of times and you've seen her masturbate heaps as well. You know what she likes in bed, that's a huge plus.\"\n\n\"I don't know. It would be good to get one over on Julia. You should have seen her today when I got to class, she wasn't the center of attention for a change and she hated it.\"\n\n\"Look it's up to you but I reckon you've got more than a good chance with Emma ... you just need to flirt a little with her and see where it goes.\"\n\n\"Flirt! I don't know how to flirt!\"\n\n\"Bullshit. You were flirting last night in the dorm, you just didn't realise it. That slow strip with your back turned ... you knew they were all watching. Deb's was almost salivating over you.\"\n\n\"Maybe I was.\" Toni grinned. \"But it will be different with Emma, I can't just strip in front of her a waggle my fanny.\"\n\n\"That would work for me.\" I grinned back.\n\n\"Yeah, but you don't want this fanny remember.\"\n\n\"Not yet I don't. But when school ends.\" I stared at her lustily.\n\n\"Oh shit, you and your principles. You could have me right now if you wanted!\"\n\n\"Just think of the next three months as foreplay.\"\n\n\"Fuck you. I'm going to get some now!\" Toni said in frustration and headed for the door.\n\n\"There's my girl.\" I encouraged.\n\nToni flicked me the bird as she walked out.\n\n\"See you tomorrow.\" I called after her.\n\n\"I might be too busy.\" Why don't you go fuck Ms Steadman or are you too scared.\" Was her reply.\n\nAfter she'd gone I sat and thought.\n\n\"Why don't I go and fuck Ms Steadman.\" I said aloud.\n\nI hadn't had any pussy since the end of term one with Jenny. Time to put Gloria Steadman in her place.\n\nI took a quick shower and went to the Den to see if Gloria was home. She was in the shower. Perfect I thought, she'll be naked when I arrive. I pulled on some shorts and a t-shirt and walked quickly around to the school. On the way I text Toni ... 'Paying visit to Ms BDSM. You can use my chair in the Den!'\n\nA few minutes later I was inserting my stolen master key into Gloria's front door when I caught a glimpse or Toni racing down the drive and out the front gate.\n\nI entered Gloria's apartment and went into the bedroom. The shower was still on in the bathroom. I sat in the chair facing the bathroom door. A couple of minutes later the shower was turned off, I heard the sound of her toweling off and then five minutes of the hair dryer going. She then appeared in the doorway.\n\n\"Good evening Gloria.\"\n\nShe got a huge fright and took a step back ... she was breathing hard, staring at me. It took her a moment to recover her senses.\n\n\"What are you doing here?\" she demanded.\n\n\"Come here.\" I commanded.\n\n\"I asked what the hell you're doing in my ...\"\n\n\"Shut up and come here.\" I interrupted. My voice was steady but forceful.\n\nFor a moment there was a look of indecision in her eye .. then it changed to a resolved look. She moved toward me slowly.\n\n\"I'm glad you have obeyed me and continued to see Waverly.\" I used the word obey to indicate that I was in charge. \"Your internet use shows you are still quite a kinky slut Ms Head Mistress.\"\n\n\"I thought you said that it wasn't going to be tracked.\" There was a touch of defiance in her voice.\n\nI stood and grabbed her right nipple, twisting it roughly. \"Don't question me or you will be punished. Is that what you want?\"\n\nI could tell she was instantly aroused by my actions and words.\n\n\"Do you want to be punished Ms Steadman?\" I asked pointedly and twisted the nipple again.\n\n\"Yes.\" Was her faint pained reply.\n\nI lead her into the 'Punishment room' and bent her over the end of the bed with her butt facing me.\n\n\"You will count the strokes I give you. Do you understand?\"\n\n\"Yes.\"\n\nMy cock was straining in my shorts so I stripped quickly and set it free. I then chose a riding crop from the various punishment tools hanging on the bed end. I was so pumped my heart was racing ... this was going to be so fucking awesome! I brushed the crop across her backside a few times before releasing the first hard stoke.\n\n\"Aww!\" Gloria shrieked.\n\nI had obviously hit her harder than Waverly did.\n\n\"Did I say you could make any other noise?\" \n\n\"I'm sorry ... one.\" Her voice wavered giving hint to the pain she was in.\n\n\"Before we continue I need a safe word from you.\" I had heard about this from a friend at college who had bragged about rough sex with his girlfriend.",
        "\"It's kittycat,\" she replied almost immediately. The safe word she used with Waverly I assumed.\n\n\"Kittycat, it is then,\" I said and lashed a second stroke onto her bare flesh. I was conscious to use a little less force than before ... I wanted this to last a while.\n\n\"Two.\"\n\nTwenty five strokes later Gloria's cheeks were red and welts had appeared. I stopped and told her to roll over. She muffled a cry as she carefully lay on her bruised backside. Her eyes widened as she caught a glimpse of my stiff cock as it swung in front of me.\n\n\"If you beg hard enough you might get that later.\" I sneered.\n\n\"Thank you.\" She replied and bowed her head submissively.\n\n\"But for now I will continue your punishment.\" I chose the small whip and swished it through the air above her body.\n\n\"Count as before.\" I ordered.\n\n\"Nothing above the collar, or on the lower arms ... please.\"\n\n\"Noted.\" I replied.\n\nTwenty five stokes later and her breasts and stomach were covered in welts and small cuts. For the last six stokes she had been crying and tear stains lined her face. To her credit she didn't use the safe word even towards the end.\n\n\"You may suck my cock now.\" \n\nObediently she knelt and did just that. It was instantly obvious my cock was not the first she'd had in her mouth and despite the tears and pain she was very accomplished. I pulled her head in a couple of times and deep throated her, again she was up to this and didn't pull away. Finally when I was close to filling her mouth with my cum I pulled back. I bent her over the bed and roughly inserted myself into her pussy. I lasted longer than I thought and was pleased I managed to make her come before I filled her wet hole with my hot jizz.\n\nAfterward I retrieved the balm from the dresser and softly coated her backside. She rolled over and I did the same to her stomach and breasts. Not a word was said during this time as she lay there, eyes closed and silent. When I had finished with the balm I leant forward and kissed her gently on the lips.\n\n\"Next time I will take you on your bed and we will make love.\" I whispered in her ear.\n\n\"Thank you.\" She smiled.\n\nI left her resting and made my way home. \n\nToni was still in the Den when I arrived. I could tell she had been masturbating as she was flushed and her pussy lips were swollen and wet.\n\n\"Isn't it after curfew.\" I said as I sat down.\n\n\"Fuck curfew. That was fucking amazing. You really beat the shit out of her, I fucking came just watching that. Then had to go again once you started fucking her.\" Toni was ecstatic.\n\n\"Your language has certainly digressed since I met you.\" I responded shaking my head. \"You just used fuck four times in that statement.\"\n\n\"You're a bad influence.\" She retorted and climbed into my lap and hugged me. \n\nI stood with her in my arms and carried her to the shower.\n\nAfter washing each other I escorted her home. Waiting until she'd snuck into the dorm unnoticed.\n\nLater that week Toni decided since I had completed my half of the deal she would try and get it on with Emma.\n\nI had a plan to get them alone.\n\nEmma and I would work out most mornings in the staff gym and it was there that I asked her if she wanted to go to the movies on Saturday night. It wasn't like a date because she still thought I was gay.\n\nOn Saturday night I picked her up and had Toni in the back seat.\n\n\"Toni's going to join us. She is doing a project on independent film companies and tonight's movie is made by one.\" I said as Emma looked at me surprised.\n\n\"I'm going to use this as my case study, cast, cost, story all that kind of thing.\" Toni chipped in.\n\n\"Okay, it'll be nice to have you along. I don't get to spend much time with the girls, especially you Toni, you always seem so busy.\" Emma turned to the back seat and smiled.\n\nIn the rear view mirror I could see Toni blushing. Let the games begin.\n\nWe were seeing the late showing and I suggested we get something to eat first. We stopped at a small burger joint and got a booth. I made sure they were sitting together. During the meal I let the girls do most of the talking. Emma asked about the makeover and was gushing in her praise at how it seemed to have helped Toni's self-esteem. She wanted to hear all the details about the holiday activities ... my name was not mentioned as being involved. I could tell there was a bit of flirting going on from Emma and to her credit Toni gave it right back. The gay guy just looked on!\n\nAt the movie the girls sat beside each other again and I noticed their sides were touching in a casual way. In the dark I held Toni's hand and gave it the odd squeeze.\n\nWe got back at after 11pm and had coffee at my place before I walked the girls home. It was now after 12.30 and I set up the last part of my plan.\n\n\"It's pretty late. I hope you don't wake up the rest of the girls in your dorm room Toni.\"\n\n\"It's a little hard to see in the dark in there, I probably will.\" She responded and sighed.\n\n\"Look you can bunk down in my place tonight if you want. There's plenty of room and I don't want it getting back to Ms Steadman that I helped keep a student out until after midnight.\"\n\nPlan executed perfectly!\n\nI said goodnight as Emma turned to unlock her apartment. Toni and I stole moment and she grabbed my hand and smiled, mouthing the words \"thank you'. I smiled back as she followed Emma inside.\n\nI wasn't sure if anything would happen that night but I raced back home and went straight to the Den to see.\n\nThe girls were talking. Toni was sitting in a small armchair and Emma was on the bed. They talked for a few minutes before Emma went to the dresser and handed Toni a nightshirt. Toni stood and turned toward the bathroom then stopped, she glanced at the mirror camera and winked at me. Staying in the room she removed her jeans, then pulled her t-shirt over her head. I could tell Emma was sneaking glances as she changed into her own nightwear. Toni removed her bra and then to my surprise she pulled her panties down and kicked them off. She stretched, showing Emma her new toned and tight ass then put on the nightshirt. When Toni turned toward the bed again Emma was just pulling her own nightshirt on, she too was panty less.\n\nThe girls got into the double bed and said goodnight. The room must have been warm from the radiator as neither of them bothered with pulling up the sheet or duvet. Emma turned off the light and they both rolled over facing away from each other. I waited for half an hour to see if anything was going to happen but it seemed as though they had both gone to sleep. I was a bit disappointed, but hey at least they were in the same room in the same bed. Definitely progress.\n\nI retired for the night and slept until 9am. I got up and splashed some water on my face and brushed my teeth before returning to the Den with a bowl of cereal. The girls were still asleep but instead of being on opposite sides of the bed Emma was spooning up behind Toni. I wondered if that had happened in their sleep or if Emma had woken earlier and moved to that position.\n\nAs I ate my cereal I noticed Gloria was up and in the shower. Her whipping scars were evident and there was a redness and swelling. Even with the scars she was attractive and I admired her body as I ate. My attention was suddenly refocused on the girls. Toni was awake and her eyes were open, she lifted her hand slightly and waved at me. How did she know I would be there again ... women's intuition maybe. She started to move slightly as if she'd just woken up and yawned rather loudly. Her ruse worked as Emma open her eyes and yawned herself.\n\nToni turned her head towards Emma. \"Good morning.\" She said and smiled.\n\n\"Morning.\" Emma replied as she yawned again.\n\nThey lay in the bed relaxing. Emma made no attempt to shift away from the spooning position.\n\n\"I guess we should get up.\" Toni finally broke the silence.\n\n\"No hurry, it's Sunday morning.\" Emma countered and snuggled in a little closer. She draped her arm over Toni's stomach.\n\nI could tell by the look in Toni's eye that she was uncertain what to do next ... however she didn't have to worry. Emma took control and reached over to turn Toni's face towards hers, she then leaned forward and they kissed on the lips. Toni returned the kiss and rolled over so they faced each other. From then on it was all on. After a few minutes of open mouthed tongue kissing Emma started to run her hands over Toni's body. They both sat up and removed their nightshirts, tossing them on the floor. Emma took one of Toni's nipples into her mouth and sucked it gently, she repeated her actions on the other breast.\n\n\"You are beautiful.\" Emma said as she kissed up Toni's neck and once again locked onto her mouth.\n\nI had entered the Den naked and I started to stoke my semi erection until it was rigid and throbbing from the action on the screen.\n\nThe girls took turns kissing each other's breasts before Emma lowered herself down the bed and parted Toni's thighs. It took only a few minutes of sucking and fingering before Toni had her first orgasm. Bucking and shaking on the bed as she cried out in pleasure. Emma continued on until a second wave of euphoria overtook Toni's mind and body. Coming back up the bed Emma lavished small kisses over the shaking body beneath her.\n\n\"That okay?\" Emma asked. A rather rhetorical question I thought.\n\n\"Hmm.\" Was Toni's reply as they kissed. She must have tasted herself as she licked her lips afterwards. \"Is that me?\" she asked.\n\n\"Yep, and you taste fantastic.\" Emma smiled and they kissed again.\n\nAfter a short rest Toni went down on Emma. I could tell she was using all the techniques and moves that she had seen Julia use and it worked perfectly.\n\n\"Fuuuuuk! I'm coming!\" Emma moaned loudly. She convulsed a dozen times before collapsing back on the bed.\n\nWhat happened next was Toni's ultimate dream.\n\nShe still had her head between Emma thighs when she caught a movement out of the corner of her eye.\n\nJulia was standing in the doorway.\n\n\"Hey Julia.\" Toni said smiling, her face wet from Emma's pussy juice.\n\nJulia just stood there gaping. Emma still had her eyes closed and was recovering from her climax ... she didn't realise what was going on.\n\n\"What the fuck Emma!\" Julia finally found her voice.\n\nEmma turned and saw Julia. \"Hey Jules,\" she said in a contented post orgasmic voice.\n\n\"What do you mean, 'Hey Jules'! What are you doing with this ... slut!\" Julia said accusingly.\n\nEmma sat up and faced Julia.\n\n\"Watch your mouth Julia. No-one here is a slut.\" She forcefully replied.\n\nJulia was shocked at the rebuke and was once again lost for words.\n\n\"Toni and I are enjoying ourselves just like you and I do.\"\n\n\"But I thought we were ... \" Julia burst into tears and slumped to the floor.\n\n\"Maybe I should go.\" Toni said looking at her destressed classmate.\n\n\"You stay right where you are.\" Emma said and stopped Toni from leaving the bed. \"Julia pull yourself together, we both knew we weren't exclusive.\"\n\n\"But with her ...\" Julia looked up at Toni.\n\n\"Yes with Toni. Now you can pout and grizzle about it or you can get you clothes off and join us.\"\n\nI don't know who was more surprised by that statement, Toni, Julia or myself. The girls looked at Emma in shock.\n\n\"Oh what. It's not that outrageous is it. I reckon the two of you would enjoy it as much as me.\" Emma said and shrugged. \"Besides you two need to make up ... and what better way to do that than making out.\"\n\nJulia stayed on the floor and didn't know how to react. Toni on the other hand got off the bed and held out her hand for Julia to take. It was an olive branch moment, Toni's action saying, 'I forgive you for all the past shit'. Slowly Julia accepted the hand and Toni pulled her up.\n\n\"You better get those clothes off so I can see that cute body of yours then.\" Toni said and smiled.\n\n\"You better believe she's cute.\" Emma encouraged.\n\nJulia still seemed a little unsure but she started to slowly remove her clothes.\n\n\"Strip ... strip ... strip!\" the other girls started to chant and clap.\n\nJulia finally smiled at their antics and removed the rest of her clothes faster.\n\nEmma reached out and drew her onto the bed. Toni joined them. The next hour was a smorgasbord of tits, bums, and pussies being licked, sucked and fingered. All the girls multi orgasmed as did I ... alone in the confines of my little spy room.\n\nI left the girls lying in each other's arms. Their sweat covered bodies glistening in the sunlight coming from the window. After a shower I took to the road to clear my head, running ten miles at a fast clip.\n\nWhen I returned Toni was sitting on my bed, wearing nothing but a huge smile.\n\n\"I thought you'd spent enough time out of your clothes already today.\" I joked as I stripped off my damp running gear\n\n\"I thought we could shower together, I've been a very, very dirty girl.\" She joked back.\n\nWe showered and washed each other. Then I drove us over to the village general store to get a loaf of fresh bread and some cheese for lunch. We ate at in a local park, feeding the ducks the leftovers.\n\n\"So you saw everything and you're sure you recorded it?\" Toni asked for the third time.\n\n\"Yes, your debauchery has been retained on video,\" I reassured her again. \"I will keep it safe until I show it at your twenty first birthday party.\" I added grinning.\n\n\"Wouldn't that freak everybody out.\" Toni laughed back.\n\n\"You can watch the video any time you like babe.\"\n\n\"That's the first time you've called me that.\"\n\n\"Called you what?\"\n\n\"Babe. I like it.\" She shuffled over on the bench seat and I put my arm around her.\n\n\"Babe it will be from now on then. But I don't know what others at school will think about it.\" I mused.\n\n\"Okay then. Only in the cottage ... plus maybe in your office ... and the gym ... and whenever we are more than ten feet away from other people!\" She giggled and rested her head on my shoulder.\n\nIt was the first time I felt like we were a real couple.\n\nLife continued on toward the end of the term. Toni was absorbed in studying and sitting her A level exams. I spent time on my novel. We also tried to spend as much time together as possible without drawing too much attention to ourselves.\n\nI took the opportunity to visit Gloria a couple of times, both times we fucked in her bed. Giving her a few light smacks on the bum or biting her nipples was as BDSM as it got. She enjoyed having normal sex and I even spent the night, spooning up against her naked body. Our relationship seemed to be one of growing acceptance and we didn't talk about her activities on the internet or with Waverly.\n\nEmma, Julia and Toni still got together and I enjoyed watching their sessions in bed. It was quite surprising how Julia and Toni's friendship grew. I suppose when you have your tongue in someone's pussy or ass you need to like them.\n\nThere was one last surprise just before the end of term. Emma had been curious about Toni's relationship with me. She knew we were close but had a feeling it was more than just friends.\n\n\"He's not gay is he?\" she asked one night when it was just the two of them in bed.\n\n\"Not really.\" \n\n\"So you two are ... you know ... doing it?\" Emma asked.\n\n\"Nope. He's got a stupid rule, no sex between staff and students. It's so frustrating cause I've been ready for ages and so has he!\" Toni expressed her frustration.\n\n\"Wow. But you have to admit it's pretty cool that he sticks to his principles though. If anyone found out you two were fucking he'd be in a heap of trouble and so would you.\"\n\n\"I know. We've talked about that. But it's annoying to see his cock and not be able to touch it.\"\n\n\"You see his cock!\" Emma sounded surprised.\n\n\"Yeah, but I probably shouldn't have told you that.\"\n\n\"I'm not telling anyone ... promise.\" She held her hand over her heart then added, \"Is it a nice cock? I mean he looks like the kind of guy who would have a nice one.\"\n\n\"I suppose it is. His is the only one I've ever seen.\" Toni admitted.\n\n\"Fuck off! You're kidding aren't you?\"\n\n\"No. Remember I'm not exactly the type of girl guys want to get into bed.\"\n\n\"Guys your age will jump at the chance to fuck anything with a vagina!\" Emma laughed.\n\n\"Obviously not mine.\" Toni replied and shrugged.\n\n\"You're a babe and don't you forget it.\" Emma said sincerely. She hugged Toni reassuringly.\n\nThey parted and sat silently for a second.\n\n\"Does he know about us?\"\n\n\"Of course he does. He practically set us up with that movie night thing and then saying I might wake up the other girls in the dorm to get you to take me to your bedroom.\"\n\n\"He did all that ... so we could get together. Why?\"\n\n\"Because he knew I liked you, and he wants me to be happy,\" Toni smiled.\n\n\"Shit, so he's hot and sensitive.\"\n\n\"Pretty sneaky too.\"\n\n\"And he's got the only one you've ever seen!\" Emma said incredulously again in a joking way.\n\n\"Yeah, alright. At least I get to see it.\"\n\n\"Wish I could too.\"\n\n\"He'd probably like that.\"\n\n\"What?\"\n\n\"He thinks you're a hottie. I don't know why though, your right boob it bigger than your left and you snort when you come.\" Toni remarked, poking her own fun at Emma.\n\n\"My boobs are the same ... and it's not a snort it's a passionate kind of grunt of pleasure.\" Emma said smiling as she defended herself.\n\n\"You keep telling yourself that, piggy.\" \n\nEmma threw a pillow at Toni as they both laughed.\n\n\"Getting back on topic. Max thinks I'm hot?\"\n\n\"Of course he does. He'd get you in bed in a flash if you let him.\"\n\n\"The question is, would you let him?\" Emma said tentatively.\n\n\"You asking permission to fuck by boyfriend?\"\n\n\"Maybe ... if you're willing to share.\" She said looking at Toni expectantly.\n\n\"How can it be sharing when I don't get any myself.\" \n\n\"Look sorry I asked. It was silly and ...\"\n\n\"I'm actually okay with it.\" Toni interrupted.\n\n\"What! Are you sure?\"\n\n\"You're probably the only person I would say yes to.\"\n\n\"Really.\"\n\n\"Well, maybe Julia as well and Debs and probably Tracey ... oh, and that woman with the limp who delivers the groceries. Then there's ...\"\n\n\"Alright, very funny. He's off limits I get it.\"\n\n\"No, I'm serious. Well, not about the others ... perhaps the lady with the limp though.\" Toni grinned.\n\n\"What is it? Yes or no!\" Emma said in frustration and held up another pillow to throw.\n\n\"It's yes.\"\n\n\"Really?\"\n\n\"Yes! On one condition.\"\n\n\"Anything.\"\n\n\"You are not allowed to fall in love with him.\" Toni was dead serious and Emma could tell.\n\n\"I'm not into falling in love. I promise you. I just want cock in pussy sex. Scouts honor.\" She gave an attempt at a scout salute.\n\n\"Very well. I'll arrange it.\" Toni said in a matter of fact way.\n\n\"Fuck me! Whoopee! You get extra privileges, starting now.\"\n\nEmma grabbed Toni and pushed her back on the bed before going down on her, lapping her tongue over her lovers labia.\n\n\"69!\" Toni squealed.\n\nEmma responded by swivelling 180 degrees so her own labia was positioned above Toni's waiting mouth. They enjoyed oral sex until orgasm.\n\nThe next day Toni told me about her conversation with Emma.\n\n\"Are you sure. I mean Emma is kind of your lover. I don't want to muck things up between you.\" I was concerned that Toni may not have thought this through properly.\n\n\"One hundred percent sure. Why wouldn't I want the man I love to have gratuitous, non-committing sex with a beautiful girl he thinks is hot.\"\n\n\"If you put it that way ... I'm in I suppose.\"\n\nEmma approached me at the gym the next morning.\n\n\"I so knew you weren't gay.\" She said pointing at me and wagging her finger.\n\n\"I so knew you weren't gay too.\" I countered.\n\n\"I never pretended ... there's just no men around here to get it on with.\"\n\n\"Maybe there is now.\" I suggested.\n\n\"There's no maybe about it Max. Toni filled me in this morning. She called you a 'boner-fied certainty.\"",
        "\"Is that right.\"\n\n\"Yep, seems you've got it hard for me.\" She quipped.\n\n\"Well I heard that you practically begged to get a look at what's in these shorts.\" I grinned back.\n\n\"Tonight.\"\n\n\"Where?\"\n\n\"My place.\"\n\n\"Time?\"\n\n\"Seven o'clock.\"\n\n\"That's early.\"\n\n\"I plan on taking all night.\"\n\n\"Good cause I plan on lasting all night.\"\n\n\"Good.\"\n\n\"Good.\"\n\nThat was the whole conversation before we both got into our regular gym routines.\n\nWhen I finished I slapped her on the butt as I headed for the door. She gave me the finger without looking up.\n\nThat night I showered and dressed in jeans and a t-shirt. As I was leaving I stepped into the Den. Toni was already there, naked sprawling in the gaming chair. She had a bowl of popcorn and a big bottle of diet soda.\n\n\"In for the evening I see.\"\n\n\"Yep. This could be an all-nighter according to Emma. So I came prepared.\"\n\n\"Don't rub your clit off.\"\n\n\"I'll try not to, but no promises.\"\n\nI leaned over and kissed her on the cheek.\n\n\"Have fun,\" she smiled and stuffed her mouth with popcorn.\n\nI knocked on Emma's door ten minutes later.\n\n\"Come in.\"\n\nEntering the room I found her sitting on the bed dressed in lingerie. I had seen her naked on camera dozens of times but she looked hotter than ever in the red teddy. It clung to her body in all the right ways.\n\n\"You look gorgeous.\" I said in a way that left no doubt I meant it.\n\n\"Thanks.\" She stood and moved toward me stopping inches away. Her head tilted up and we looked into each other's eyes. I leaned forward and kissed her gently on the cheek, I followed this with more small light kisses on her face and neck avoiding her lips. Then placing my hands on her shoulders I moved her slowly backwards toward the bed, where I continued my exploration of her body as she sat down and lay back on the bed-sheets. I kissed my way down her arms and onto her silk covered stomach, across her hips and down her legs, avoiding her inner thighs for the moment. Her toes were kissed and sucked one at a time and before I made my way back up her legs.\n\nI could tell by her breathing that she was turn on and loving this little game.\n\nMy lips reached her hips again and I moved inwards. Her legs parted giving me access between her thighs. I unsnapped the small button holding the material of her teddy together covering her pussy. She was already glistening from arousal as I swept my tongue up her labia and onto her hooded clitoris.\n\n\"Ohh yeah!\" I received a positive reaction.\n\nAs I have said earlier I am well versed in how to use my tongue and fingers to pleasure a woman and I did my absolute best to make sure Emma received all that knowledge. I found she was easy to read and could take her to the brink of climax before changing down a gear and leaving her squirming with unresolved release. Finally I took her over the edge and a guttural, primal noise emanated from her mouth as she lifted her hips off the bed and started convulsing into a massive orgasm. A small squirt shot from her pussy and cascaded down my chin.\n\nOnce her frenzy had subsided moved onto the bed holding her as she tried to control her breathing and relax.\n\n\"Oh wow! That was so good.\" Emma managed to say, her eyes still closed as small contractions shook her body.\n\n\"My pleasure.\" I kissed her on the lips softly.\n\nI was still dressed so I stood up and removed my t-shirt and jeans, I hadn't bothered with underwear and my semi erection popped out and hung between my legs giving the odd twitch.\n\nGetting back on the bed I sat with my back against the headboard. Emma finally opened her eyes , she had a post orgasmic look that was so sexy ... a cross between dishevelled and intoxicated.\n\n\"What?\" she asked as a response to my smile.\n\n\"You look so sexy at the moment.\"\n\n\"I probably look like a mess.\" She ran her hand through her hair and pulled the teddy back onto her shoulder.\n\n\"A sexy mess.\" I replied and pulled her over so she was straddling me.\n\nWe kissed, starting slow and worked our way into long French kisses, swirling our tongues together.\n\nEmma pulled the teddy off and I sucked nipples, nipping and teasing them with my teeth. In turn she reached behind and started to stroke my cock, which was soon at full mast. She raised her hips and shuffled back slightly until I was positioned under the lips of her protruding outer labia. Holding this position she looked at me teasingly.\n\n\"Say please.\" A wry grin on her face.\n\n\"Please.\"\n\nEmma lowered her hips and slowly engulfed my cock into her tight pussy. Her body started to rock back and forth, my entire length sliding in and out. I felt the walls of her pussy part to accept me each time she slammed herself down.\n\nI reached down and grabbed her waist with my hands, helping her to rise and fall, harder and faster. Her hands were flat on my chest as she ground back and forth on my rigid shaft.\n\nFinally unable to stand it any longer I pulled her body towards me and groaned as I shot my load deep into her. Holding her tightly I felt her pussy lips contracting as she milked my spasming cock dry.\n\nWe rested with her head on my shoulder, our sweat covered bodies pressed together, both of us drawing deep breaths as our bodies relaxed.\n\nSuddenly Toni opened the door and quickly entered the room. Before saying anything she closed the door and fastened the lock then sat in a chair gulping huge breathes. She had obviously been running.\n\nEmma and I waited for an explanation.\n\nFinally able to speak, she breathlessly began. \"The girls in the dorm were planning on sneaking over and asking if you wanted to join them watching the fireworks in the village. I didn't know if you'd locked the door. They would have come right in and found you.\"\n\nSeconds later there was a knock on the door and someone tried the handle. All three of us held our breath and waited silently.\n\n\"She mustn't be home.\" One of the girls outside said.\n\n\"Maybe she's gone to the fireworks herself.\" Another voice added.\n\n\"Come on lets go or we're going to miss it.\"\n\nWe heard the girls walk down the path to the front gate, their shoes clattering on the gravel.\n\n\"Whoa, that was close.\" Emma whispered, \"Good job Toni.\" She added in praise.\n\n\"Next time lock the door dummy.\" Toni chastised me shaking her head.\n\n\"Why are you puffing so much when you've just come from next door?\" Emma asked Toni.\n\n\"Ahh, I'd been out for a run and just got back when I heard their plans.\" She lied convincingly.\n\n\"Thanks. We could have been in real shit if they had seen us like this.\"\n\nI knew she must have heard the girls plan on the dorm camera and would have had to get dressed and run all the way here. I winked at her. \"Thanks for having my back babe.\"\n\nToni smiled proudly. \n\nI realised I was still inside Emma and my cock was semi hard as she sat on my lap. Our combined ejaculations were dribbling out and running down my thigh.\n\n\"Can you hand me a towel,\" I asked Toni.\n\n\"What do you need a towel for?\" She grinned and moved closer to the bed.\n\nKneeling down and as I lifted Emma off my lap Toni leaned forward to lick up the sticky goo that was leaking from the freshly fucked pussy.\n\n\"That tasted good,\" she remarked sitting back having achieved her goal of cleaning up our residue.\n\n\"Want to join us.\" Emma asked and held out her hand.\n\n\"Not allowed ... right Max.\" she sighed in reply.\n\n\"Sorry babe. Rules are ...\"\n\n\"Rules! Yes I know. You're a proper old fart when it comes to your fucking rules.\" She complained. \"So just get on with it and I'll sit here and watch.\"\n\n\"You don't just need to sit there ... I mean my vibrator is in the bottom drawer.\" Emma said playfully.\n\nToni removed her clothes as we watched and got the vibrator out. She leaned back in the chair and propped her legs onto the wooden arms exposing her pussy to full view.\n\n\"Okay, you can get on with it now.\" She said impishly as we continued to stare.\n\nFor the next hour Emma and I did 'get on with it'. We fucked in various positions and since I had already come it was easier to keep going for longer. Both Emma and Toni orgasmed at least twice before I sensed I was going to be next.\n\n\"She likes anal you know. I've taken her ass with the strap-on and she loves it ... don't you Emma.\" Toni teased.\n\n\"Hey, the strap-on is half the size of Max. So no I don't think I'd like it.\" Emma responded.\n\n\"Won't know unless you try ... what'a you say Max?\" Toni prompted smiling.\n\nI smiled back, \"I'm all for trying.\"\n\n\"Alright, I suppose we can try. Emma agreed hesitantly, \"But get the lube out of the top drawer.\"\n\nI lubed up Emma's asshole and put my finger in to loosen up her sphincter muscle. Another finger followed and I pushed slowly until I hit the top of my knuckles on her skin.\n\n\"Okay, lets do this.\" Toni declared after a couple of minutes of my fingering.\n\nI knelt behind Emma as she presented herself doggy style. Adding a little lube to my cock I placed myself at her puckered asshole.\n\n\"Go slow.\" Both Emma and Toni said in unison.\n\n\"I've been there before ladies. I know what I'm doing.\" I replied and gently pushed against the small hole.\n\nEntering her was surprisingly easy and I was soon six inches deep. Emma gave a push backwards and started to milk my cock slowly until she was finally slapping my balls onto her pussy with every stroke. Toni got up and touched the vibrator to Emma clit, rubbing it little circles.\n\nIt didn't take long for both of us to come to a crescendo ... and as I grunted emptying my spasming cock into her bowels, Emma ushered a long moan of pleasure as she too jerked through an orgasm.\n\nAfterwards we took a shower together, all three of us squashed into the small stall, soaping each other before rinsing off in the hot water. We then climbed into Emma's bed and I fell to sleep with a naked girl snuggled up on each side.\n\nThat was the last surprise before the end of term. The scholastic year finished with all the usual fanfare and celebrations. I had agreed to return the following year and continue my current duties ... both on the educational and the personal side ... much to Gloria's delight!\n\nToni has decided to take a gap year and she would move in with me at cottage. She wanted to keep writing songs and improving her playing skills before applying to join a music school in London.\n\nEmma would be back at Deanwell as well, she would carry on being a matron for free room and board while studying. Unfortunately the dorm she supervised would change ... but that bright side to that was a new young matron to view on the cameras.\n\nToni and I had consummated our relationship the day after school finished. We spent the best part of two days and nights going from bed to shower and back again. Her appetite for sex was exhausting and I had to schedule breaks so I could recover.\n\nWe literally fucked our way around Europe during the summer break. Including some great exhibitionist sex where we were often being voyeured by others. Life was good but we couldn't wait to get back to the Den to see who the new subjects for our own voyeurism would be.\n\nThe end ...for now!\n\n(Please forgive any spelling or grammar mistakes. Other constructive comments welcome.)"
    ],
    "authorname": "silverfern",
    "tags": [
        "female/teen females",
        "hidden camera",
        "male/older female",
        "masturbation",
        "spying",
        "voyeur",
        "whipping"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-hidden-room-1"
}