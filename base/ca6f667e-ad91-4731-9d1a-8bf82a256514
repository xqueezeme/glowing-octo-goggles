{
    "title": "Lady in Red Ch. 32",
    "pages": [
        "Gwen and Steve arrived at the Governor's mansion in plenty of time for the rehearsal. Steve had tried to beg off, and remain at the hotel, but Gwen wouldn't hear of it. \"I know you aren't in the wedding party, but Amber and her parents will want you there. Remember how they treated you last time we saw them? Besides, we'll be going to dinner afterward and I'll need you to protect me from all of those handsome Army Rangers.\"\n\nLisa and Jason met Gwen and Steve as soon as they were granted access to the mansion. \"Gwen! I heard that Steve had to help you out with that kid in the rip tide! I'm so glad he was there. I don't think he'd ever let anything bad happen to you.\n\n\"Steve, thanks for taking care of my little sister. I don't have to tell you what she means to me. Now let's go in and get this rehearsal out of the way so we can eat!\" insisted Lisa.\n\nWhen they entered the large chapel room where the wedding was to take place, Amber O'Leary rushed up to them. She hugged Gwen, and then Steve. \n\n\"I really appreciate all you two are doing for me this weekend. I know you're busy making a movie in Florida. You've made me your friend for life by being in my wedding, and supplying the music. Everyone's so impressed that I was able to get the three top singers in the world for my wedding. I can't believe how lucky I am.\"\n\n\"I'm glad you feel that way,\" replied a relieved Gwen. \"I'm afraid it's becoming a bit of a circus wherever we go these days. Reporters and paparazzi follow us all over. We don't want to take away any of the attention that should be on you.\"\n\n\"Nonsense! I've lived under the microscope since dad was elected to congress 12 years ago. I know how it works. In politics, as well as Hollywood, any publicity is good and you guys get lots of it. That means more people will be interested in my wedding, and that's a good thing.\"\n\n\"Am I missing something?\" asked Steve. \"Are you running for office or something?\"\n\n\"No, but I'm starting a business. You know how I signed over all the 'Lady in Red' designs to your new company? I did those designs for charity and I'm glad I did. That allowed me to get you two into some of my designs, and that was the start I needed. \n\n\"Now I'm starting my own fashion line. We'll be competing in some areas, but in a friendly way. I designed all of the gowns and tuxedos for my wedding, so the more press we get, the more exposure my work will receive. I'm taking advantage of Gwen and Lisa by having them wear my designs, even though they have contracts with other firms. I checked into it and it's okay for you both to wear my creations at my wedding. I asked about it.\"\n\n\"I sure hope everything works out well for you, Amber. If it doesn't, and if our line, which you really started, does well, you can always design for us. You're very talented.\"\n\n\"Thanks, but a lot of the success was because of the bombshells and stud that wore my ideas. Jordan Quick, the Anderson sisters, and Steve Hammer in my designs? How hard could it be to make my stuff look good?\n\n\"Brad and I want to introduce you to the other bridesmaids and groomsmen. Come on with me,\" urged Amber as she suddenly remembered people were waiting for her.\n\nThe rehearsal was over in less than an hour. The group retired to a local restaurant for dinner. Governor O'Leary had a private room reserved for the wedding party and guests. Gwen was impressed with how easily Steve got along with the Brad's friends. They were all military men and took every opportunity to ride Steve, or goad him during the early part of the meal. When it became evident that Steve wasn't going to react to their comments, the men seemed to suddenly change tact and become quite warm. \n\nTwo of the groomsmen's wives were laughing at Gwen's confusion over Steve's treatment. \"These guys were just testing him a little to see if he was a prima donna, or a mommy's boy. He passed the test and now they're accepting him as one of them.\"\n\n\"But they said some embarrassing and crude things to Steve. They even suggested a few unflattering things about me. How did they know that Steve wouldn't get angry? Why didn't he get angry?\"\n\n\"Because they're men. It's just that simple. Men don't hug and flatter each other. They tease and insult each other, but within certain boundaries. None of them would say anything truly bad about each other's wives or mothers, but they will make references and they expect other men to do the same. It's much worse when we ladies aren't present. They found out that Steve can give as well as he gets. He's a man like them, and they've accepted him.\"\n\nA short while later, one of the groomsmen asked Steve about Afghanistan. \"That was you with your dad at that hotel outside of Kabul a year and a half ago? We heard that it was a hell of a fight. Four marines, a SEAL, and a kid killed 17 Taliban and wounded half a dozen more.\"\n\n\"Man! That must have been something. I wish I could've been there!\" interjected a guy introduced to Steve and Gwen as the husband of a bridesmaid. \"What a rush it must be to take out a few of those bastards.\"\n\nNo one spoke for several seconds. Steve simply stared at the man. Gwen quickly placed her hand on Steve's and patted it. It was Brad that finally broke the silence.\n\n\"I realize that you don't know any better, but that sort of talk around military men can, and will, get your ass kicked. Did Steve say anything about enjoying that fight? Four of the guys here right now served in Iraq and/or Afghanistan. They've been in battles and probably shot a few enemy combatants, as they're called. I know I have. It's not something men take any pleasure in. \n\n\"Look at the wives of these guys. Look at Gwen and Amber. They're horrified that anyone would say something like that. They know how we feel about killing other human beings. They know how hard we work to forget it ever happened. We do it when we must, but we sure as hell don't enjoy it!\"\n\n\"That's one of the things that makes these guys such close friends. They've shared experiences most men can't even imagine,\" added Amber. \"It changes them. They never forget it, but we do our best to make sure they know they're loved and appreciated. What Steve did, what all of these men have done, was necessary, but very difficult. They really don't like it when civilians make light of combat and death. They fight to protect the ones they love. They don't fight because they hate the enemy.\"\n\n\"I know that's true with Steve. He resents it when people try to pump him for information about those terrible gun battles. I disarmed the bombs strapped to those four dead men lying on the floor with two bullet holes in their head. It was horrible, but I was glad that Steve had the nerve and ability required to save my life and the lives of so many others. You can watch the video and see for yourself just what he risked. He still doesn't talk about it much, even when we're alone, in the dark, in the middle of the night.\"\n\n\"Well, that restores my faith in the American male!\" laughed Brad's friend, Tim. \"Any man that has a girl like you lying next to him in bed sure as hell shouldn't be using his mouth for talking!\"\n\n\"I admit his mouth gets a workout, but he really doesn't talk very much,\" blurted Gwen just before her face turned red. \"Was that too much information?\"\n\n\"No! Tell us more about this big movie star and his nocturnal habits,\" insisted Tim's wife. \"I'm getting aroused just imaging what I think you're saying. It sounds like you've hit the jackpot!\"\n\n\"Let me give you a little tip I learned from my mother many years ago,\" interjected Janice O'Leary. \"If you're fortunate enough to have a man that is an exceptional lover, never tell your friends. Reputations like that will bring the competition out of the woodwork. Tell everyone he's a regular minuteman and has a short carbine. It's worked for me all of these years.\"\n\n\"So that's why your friends shake their head when they see me?\" asked the governor. \"There's got to be a better solution than that!\"\n\n\"So I shouldn't tell these girls that Steve packs a long gun, is an excellent shot, and always eats what he shoots?\" asked Gwen, trying to sound like an innocent young girl. \n\n\"Please tell me that he eats it before he shoots it!\" begged Tim as waves of laughter swept around the table.\n\n\"Just like a man,\" managed Tim's wife as the laughter died down. \"I'm still looking for a guy that shoots first and eats later.\"\n\n\"I'm sitting right here, at your beck and call,\" responded Brad's friend, Jake. \"I can do that for you. I'll make you forget all about Tim in about forty minutes or so.\"\n\n\"Don't fall for that story,\" laughed Jake's wife. \"He'll shoot the hell out of it and then watch TV, or fall asleep, and it won't take forty minutes!\"\n\n\"So how about Jason? Is he a fast shot? How's his appetite? You're awfully quiet, Lisa,\" pointed out Tim's wife.\n\n\"Well, Jason's parents are here, along with the governor and his wife, so I'll just say that he shoots straight, and often. He's a real marksman!\" finished Lisa with a blush.\n\n\"Mom, these Anderson girls aren't following your advice! They're bragging about their men,\" laughed Amber. \"But then I have to admit that I don't think Brad would want me to take your advice either. His so-called friends would tease him mercilessly if I indicated he didn't get the job done quite well, and frequently.\"\n\nGwen found herself having a great time dining and joking with Brad, Jason, and their friends. Later that evening as they climbed into bed, she mentioned it to Steve.\n\n\"When those guys first started trash talking you, and even making some crude remarks about my physical attributes, I worried that you'd become angry. Instead, you just laughed and make crude comments back to them. I didn't realize it at the time, but you knew exactly how to handle those men. Now they all like and respect you.\n\n\"Do you think I went too far with my jokes about you eating what you shoot? I hope I didn't embarrass you with some of my comments. Those guys, and their wives, are so down to earth and discuss sex so casually and tease each other about it so well that I found myself doing the same. Did I embarrass you, or make a fool of myself?\" \n\n\"Are you kidding? You were perfect. Those guys think you're tops. They could see how beautiful you are, but they discovered that you're not a stuck up bitch. A lot of people would be intolerable if they had your success, but you've become even more approachable. Everyone loved your jokes, especially coming from one of the world's sexiest women. They'll always remember tonight and tell their friends about it. They'll also be your friends for life, and not because you're famous and beautiful, but because you're smart, fun, and well grounded. I was so proud of you that I was ready to burst,\" replied Steve just before he took Gwen's left nipple into his mouth.\n\n\"You sure know how to make me feel good,\" cooed Gwen as she felt goose bumps spread down her back. \"I was so proud to be there with you sitting next to me. I saw how those women looked you over, like vultures around road kill. I'll never give you up, so they're out of luck.\"\n\nSteve picked Gwen up and slowly lowered her onto his very hard cock. Once he was fully seated in her warmth, he gently sat in a straight-backed chair and held her close.\n\n\"I've got something I've been wanting to talk to you about,\" he whispered as he slowly moved Gwen up and down on his erection. \"I debated whether I should admit it or not, but I've decided that I will.\"\n\n\"Now you have my attention. Between your mysterious words and your steel hard cock, I can hardly focus. Is there a problem?\" asked Gwen between gasps. \n\n\"We're going to be apart a lot, starting in a couple weeks. This isn't easy for me to say, but you need to know it. I will stick by you no matter what. If you get drugged and find yourself in bed with another guy, if you just have a fling, if you get married to someone else, even if you make a hundred porno movies, I want you to know that I'll always love you and will crawl back to you any time you indicate that you want me.\n\n\"Don't ever think you've done something I can't forgive, or that prevents us from ever being together. If you can't wait for me, if you tire of me, if you find someone better, just remember that I'll be there for you when it's over with him. Never be afraid or ashamed to call me, to take me back into your life. Does that make any sense to you?\"\n\n\"Oh, Steve! That's pretty much what I've come to realize about you. No matter how many women you make love to, how much rumors and gossip link you to beautiful women, I'll come to you whenever you want me. Never think that anything you've done has driven me away. You've given me so much, I think I'll forgive you anything as long as I can be with you.\"\n\n\"Then we agree? We'll remain faithful and totally in love, but if either of us ever slips, or worse, the other will have to forgive, simply because we have no choice. Love makes us forgive, at least a love like ours does. This isn't a 'get out of jail free' card that allows us a fling. It's simply a truth that we've come to accept. If either of us falters, or simply wants to move on, we owe it to the other to be open and honest about it,\" stated Steve. \"But know this. I will never be unfaithful to you. My soul would burn in hell if I ever came close. I'm certain of that.\"\n\n\"You're the only man I'll ever sleep with. I promise you that, Sweetheart,\" moaned Gwen as an orgasm rocked her body. \n\nThe next day, Steve helped Jordan, Charlie, and the other band members set up for the wedding while Gwen spent the morning helping the bride and getting her makeup and hair perfect. \n\nLater that day, at the wedding ceremony, Steve sat with Kate. He had to admit that Amber had the best looking wedding party that he had ever seen. Lisa and Gwen were stunning. Lisa wore a blue gown while Gwen wore red. The designs were the same, but each bridesmaid had a different color. Gwen was paired with Brad's friend Tim while Lisa was paired with his buddy, Jake. Jason was the best man and walked down the aisle with Amber's best friend, Claire.\n\nIt was a simple matter for those attending the wedding to move to the east side of the mansion for the reception. Charlie had indicated that he had experience doing weddings and smoothly handled all of the usual announcements and games conducted at weddings. Steve and Jordan handled the singing during the early part of the reception while Gwen was involved in wedding party activities.\n\nAfter the meal had been served, Gwen joined Steve and Amber on the small stage to perform with them. When she wasn't singing, Gwen spent much of her time dancing. She was in constant demand by the young men present. \n\nSteve had it almost as bad. He played the guitar in most of the songs, so even when he wasn't singing lead or backing up one of the girls; he was often needed by the band. He did delight a few guests by singing to them as he danced. Now and then he managed to work a dance in with some of the ladies that Governor O'Leary made a special effort to introduce. \n\nOne such lady was Senator Chatham. \"It's such a pleasure to finally meet you, Steve. You dance even better than I had imagined. You make this old lady feel young again.\"\n\n\"Ma'am, your age is public record and fifty is hardly old,\" responded Steve smoothly. \"Besides, you could easily pass for the late thirties.\"\n\n\"Wow, that makes what I'm about to tell you even easier. I'm on the Senate Foreign Relations Committee. I'm going to Russia and will attend the same state dinner that you are. The President has asked me to convey several things to you, Ms. Anderson, and Ms. Quick.\n\n\"The Russians are hosting the Winter Olympics next February. They've built a new stadium for the event. It will seat about 40,000 people. They've planned to have a grand opening for it during the trade conference that we'll be attending. There's one problem. \n\n\"This is information not for public consumption. They don't seem to be able to get enough people interested in it to even half fill the new Fisht Stadium, as it's called. They have a few Russian entertainers and musical acts performing, but interest is lagging. If that happens, the government will be publicly embarrassed and an already difficult time will be exacerbated,\" worried Senator Chatham as the dance ended. \"Please dance at least one more with me right now so I can complete my sales pitch.\n\n\"Thank you, Steve,\" stated the senator through a large smile as Steve kept his arms around her and began the next dance. \"Russia is having a lot of trouble with terrorists. They also had an Olympic hero caught spying in France this spring. France has him locked up tight and it's creating a major rift in relations between the two countries and it's spilling over and affecting allies of both countries.\n\n\"The State Department would very much appreciate it if you, Gwen, Jordan, and your band requested the opportunity to play at the new stadium. The thinking is this; if you do not draw a large crowd, Russia will be able to blame the Americans; that you are not popular in Russia. If you do help fill seats in the stadium, the Russians will avert an embarrassing situation and point out that you kids are climbing on the bandwagon to perform in front of the many fans that were going to be there to see the Russian performers. You risk being blamed if no one shows up, but it's very unlikely you will receive any credit if a public relations disaster is avoided. We're pretty much throwing you under the bus.\"\n\n\"I'll speak to the others and see if they're willing. We'll also have to talk to Clyde Davis. He's guided us so far and done a great job. I'll make some calls and let you know as soon as possible,\" promised Steve as he led the Senator back to her table as the dance ended.\n\n\"Steve, please sit down with me for a few more minutes. The young ladies will have to wait a little longer. I still have some items to discuss with you,\" directed Senator Chatham as Steve took a seat to her left.\n\n\"This one is more difficult. Everyone in our government knows how well you got along with President D'Anjou and his family when you were in Paris last spring. President Novokov asked that you and Gwen attend the state dinner, so it seems that you may have an 'in' with him. All we're asking is that you and Gwen be very careful about what you say to these two leaders, especially in regards to each other.\"\n\nSteve remained silent as he stared at the Senator for several seconds. \"Okay, we want you to very carefully try to find any common ground that may exist between the two countries to help the state department determine a solution to this situation. France has flatly refused to release the Russian spy and can't backtrack on that without losing international credibility. Russia really wants it Olympic hero back in Russia for the winter games. See what you can find out, but avoid adding any fuel to the flames. That's all we ask.\" \n\n\"You sure spent a long time with Senator Chatham,\" observed Gwen a short time later when Steve returned to the stage. \"Should I be worried about her? You really seem to like mature women a lot.\"\n\n\"That's true,\" admitted Steve. \"If they look like your mom and Aunt Diane, I do like them a lot. You really do have reason to worry about the Senator. She strongly urged that we ask to perform at the new Fisht Olympic Stadium in Sochi while we're in Russia.\"\n\n\"She wants us to ask to perform? Isn't that a bit presumptuous? What are the odds of even having our request accepted? When would we have the time? What's this all about?\" demanded Gwen as she considered Steve's words.\n\n\"This is just between us. The word on the diplomatic street is that Russia can't entice enough people to attend the grand unveiling of the stadium with the acts they have scheduled. The state department feels that if Russia is humiliated in this prelude to the Olympics, they'll be even more stubborn when the trade talks between the West and Eastern Europe get under way. It's no secret that Russia still leans on Eastern Europe pretty hard.\"",
        "\"So they want us to ask? I don't even know how we'd go about asking something like that. Do I just call up Novokov and ask? Do you have his number? It wouldn't surprise me if you did.\"\n\n\"The Senator never told me how we should approach this issue. Let's talk to Jordan, Charlie, the band, and Clyde to see if it's even something they want to do. At the next break, I'll call Clyde while you fill in everyone else.\"\n\nSteve was only on the phone with Clyde a couple minutes when he returned to Gwen's side. \"Jordan and the guys are cool with us playing in Russia, if someone is picking up all of the expenses, like hotels and air fare,\" revealed Gwen as Steve approached. \"What did Clyde say?\"\n\n\"I'm glad you asked. He told me that since we've created 'The Lady in Red Productions', these decisions will be made by the company's executive director. We need to discuss it with that person.\"\n\n\"We have an executive director running the company? Why didn't we know that? I'm almost afraid to ask who's been appointed. Will he be hard to get along with?\" asked Gwen.\n\n\"Leave it to me. I'm on very good terms with the director. I'll broach the subject shortly. Let's get ready for our next set. Leave me out of the first number so I can speak with our new director,\" added Steve.\n\n\"You mean that he's here tonight? Now I'm really curious. You're not going to tell me who it is, are you?\" complained Gwen.\n\n\"You'll figure it out soon enough. You guys start playing while I go work my charm,\" grinned Steve as he stepped off the small stage and headed toward the tables.\n\n\"Could I ask for the pleasure of the next dance, Madam, if your husband has no objections?\" began Steve as he stopped at a familiar table.\n\n\"You know it's okay with me. Just have her back before too long,\" laughed Ted.\n\nPaula smiled as she allowed Steve to take her hand and head to the dance floor. Steve quickly took her into his arms as the music began.\n\n\"It seems that you've been keeping secrets from us,\" began Steve. \"Clyde just told me that you're the new executive director of 'The Lady in Red Productions'. You neglected to mention that little fact to the rest of us.\"\n\n\"Are you upset with me? I didn't make up my mind until last night. That's when I called Clyde and told him that I'd accept the position. Do you think I'm capable of handling it? I'm pretty worried about the responsibility. I wanted to make the decision without leaning on you and Gwen for support. Ted and I discussed it for a week before he convinced me to accept it. I guess you would've preferred that I strip down and jump into a hot tub with you, and then ask your opinion?\"\n\nSteve looked into Paula's eyes to judge her mood before he responded. \"You don't need a reason to jump naked into a hot tub with me, but it's true that I can't think of a better way to find out. You know that I'd never toss you out for eating crackers in the tub. Do I dare ask where that statement came from?\"\n\n\"I know Diane did that in Florida. I was just being a little petulant, or maybe a wee bit jealous. You really like Diane a lot and her breasts are even bigger now that she's pregnant. Did you mean it when you said I could jump into a hot tub with you any time? I don't want you thinking I'm like Cindy Quick, but I also don't want you thinking about my little sister more than you think about me. Do I sound shallow, and almost as bad as Cindy was? Have I lost your respect?\" worried Paula.\n\n\"It's way too late to worry about how I feel about you, Paula. Nothing you could do now would lessen the love I have for you. I love Gwen so much it hurts, but you aren't far behind. It's probably a bad idea for me to even admit my feelings for you,\" confided Steve. \"I respect Ted and Gwen too much to ever act on my emotions, but you must know that you're tops in my book.\"\n\n\"No wonder Gwen loves you so much! You're a smooth one, and you make this older woman feel great. I envy Gwen, but my joy for her is even greater.\" \n\n\"All so-called 'older women' should have your figure and beauty,\" replied Steve. \"Getting back on topic, Gwen, Jordan, and I have been told that it would be really great if we asked the Russians to allow us to perform at the opening of the new Fisht Olympic Stadium in Sochi. I asked Clyde and he deferred to you. It seems that I have to obey you now. What is your desire?\" grinned Steve as he gazed down into Paula's eyes.\n\n\"You're probably able to see my desire, the way you're looking at me and holding me so close,\" responded Paula emotionally. \"It's a good thing you have so much self discipline because you could be cutting a wide swath and hurting Gwen tremendously. I think you enjoy the affect you have on women, regardless of their age. To think I was worried about my daughters falling for you.\n\n\"I have to admit that I've been kept in the loop by Senator Chatham, who said she very much enjoyed your dances together. Of course you kids can play that stadium in Sochi, if you can wrangle an invitation from the Russian government. Isn't it amazing that we're even having this discussion? We're actually involved in foreign policy, however slightly.\"\n\nThe music stopped and Steve escorted Paula back toward her table. Before they reached it, Gwen intercepted them. \"Mom, you're the executive director of 'The Lady in Red Productions? That's so cool. You'll do a great job, but how come Steve and I didn't know. Did Steve talk you into letting us play that stadium?\n\n\"It looked like he was talking you into his bed, the way you two looked at each other. I'm really glad that you approve of my boyfriend so much, but be a little less moon-eyed in public from now on. You're an executive director now and you can't be drooling over your clients,\" preached Gwen to her mother.\n\n\"Did I look that bad? If I did, it was because your boyfriend was laying on the charm really thick. I'm only human,\" complained Paula. \"If he uses that charm on the Russians and French, your trip will be a great success. Do you think Ted will be upset with me?\"\n\n\"He was dancing with that Heather. She's the bridesmaid with the huge boobs, so he never saw anything except a mile of cleavage. He's probably worried about you being upset with him, especially after she rubbed up against him the entire time they were dancing,\" responded Gwen before she grabbed Steve's hand and led him back to the band.\n\n\"Okay, everybody. We've been given the green light to play in Sochi, but we have to figure out a way to get an invitation,\" revealed Steve once he was back with the band.\n\n\"I've given that some thought and came up with a pretty simple solution. We need to get playing since we aren't on a break. Leave me out of a song or two while I start the ball rolling,\" suggested Gwen. \"We should have an invitation by Monday evening if my hunch on how this all works is right.\"\n\nJordan sang the next song and joined with Steve on the one after that while Gwen sat in a quiet corner chatting with Amber Stahl. \"You want me to tell viewers that you would all love to have the chance to play the new stadium in Sochi? That's on the Friday before the state dinner in Moscow? Where did this come from? What's up?\"\n\n\"Amber, I'll trust you to not report the reasons if I tell you, okay? This international intrigue is new to us,\" answered Gwen before explaining the situation to Amber.\n\n\"Wow! You guys are getting into some exciting stuff! I'm so glad I got off on a good note with you and Steve. I'll be sure to send in a report right away. There's a good chance it'll be picked up by the network. I can't wait to see Russia! Last week my station manager told me that they were sending me to Moscow to cover you guys. Let's hope we get to see that new stadium up close!\" \n\nBefore they left for their honeymoon, Amber and Brad stopped to thank Gwen, Steve, Jordan, and the band. \"You guys have given us the best wedding ever! All my friends are so jealous. If we can ever do you a favor, just ask,\" promised Amber.\n\n\"Saving this guy's life pretty well put me in your debt forever,\" replied Gwen as she clung to Steve's arm. \"We hope you have a long and satisfying marriage. Congratulations to you both!\"\n\nIt was almost midnight before the group called it a night. Steve thanked everyone as he explained that the band was finished for the evening. They had played for almost four hours with short breaks thrown in. \n\n\"We gave them everything we had, and the crowd really enjoyed the music,\" observed Charlie. \"Now we have to get ready for Russia. I've no doubt that Gwen will get us invited to play in Sochi, so we'd better brush up on our Russian. Does anyone here know any Russian songs?\" \n\nIt was a tired but happy group that gathered in the Steve and Gwen's hotel suite later that evening. Gwen had the TV tuned to a cable news channel as the group discussed the day's events.\n\n\"It sure was a surprise to learn that Mom's the executive director of 'LiRP'. I still don't know why you didn't tell us about it,\" puzzled Gwen.\n\n\"I just felt that we've been relying far too much on you kids to make the right decisions for the family. I wanted to have some time to talk it over with Ted. It's going to be quite a job. Clyde is convinced your movie is going to be a big hit. Since it cost a relatively small amount to make, there'll be a lot of money to disperse. You kids have so much on your plates that I didn't want to add to your concerns,\" finished Paula.\n\n\"Senator Chatham didn't have any compunction about asking us to figure out some sort of way for Russia and France to get over the spy impasse before the Olympics. She wants us to pay attention to everything we hear from members of the two governments and families that could be useful. I don't even have any idea what we could hear that would help, or what to do if we do find out something. I guess we report it to the Senator or the state department,\" concluded Steve.\n\n\"Do you hear yourself?\" demanded Kate with no attempt to conceal her pride. \"The band, Jordan, Charlie, Gwen, and you are trying to single handedly prevent one of the most powerful nations in the world from an embarrassing situation. How many people are there on this planet that could fill that stadium with fans? How many were asked? I have to believe that they're sitting in this room right now. I can't wait to do that essay about how I spent my summer. I'll just write that I was watching my sister and her friends work to improve international relations and keep the cold war cold. How cool is that!\" \n\nJust as Kate finished speaking, the talking head on the news stations made a reference to Gwen stating that she, Steve, and Jordan would like to perform at the opening of the new stadium in Sochi. The news man chuckled a little as he finished his story, stating that the Russians were not likely to allow some Americans the chance to steal their thunder.\n\n\"Well, at least it's out there,\" observed Jordan. \"If we're not wanted, or invited, we can just be tourists and have a great time. I sure hope that there aren't any terrorist activities while we're in Russia. They've been having a lot of trouble lately.\"\n\nThe next morning saw Gwen, Steve, Jordan, and Charlie meet Charlotte and Ashley at the airport to return to Florida to conclude the filming of the movie. By early evening they were checked into the same hotel they had used the first time they were in Florida. After dinner, the group met with the director of the film.\n\n\"We have to film two more love scenes and fill in around some of the other work we've already done. I expect to finish up well before the weekend, ahead of schedule and way ahead of budget. You guys have been great to work with and the crew and I appreciate it. We've worked with some real drama queens in the past.\n\n\"Tuesday night's the full moon. We're doing Gwen's love scene with Steve on the beach, after the sun goes down. Knowing you two, it'll be great. Jordan, if the weather holds, we'll shoot yours tomorrow afternoon on a boat we've hired. It'll be your dad's boat in the movie and you two will be taking it for a ride. Once you're away from land, you and Steve get amorous and we get your second love scene.\"\n\n\"I'll call Mom and tell her that we'll be able to head to Russia sooner than we expected. How's everyone feel about getting there a few days early so we can conquer jet-lag and maybe practice our songs, assuming we get the invitation to play? I wonder how long they'll want us to play, if we even get invited,\" wondered Gwen.\n\n\"We should be finding out pretty soon,\" reasoned Charlie. \"They'll want to advertise the fact that they're pulling the top act in the music business to open their arena. And the fact that we have you three singing for us will help a little.\"\n\n\"You're such a funny guy,\" replied Jordan while attempting to keep a straight face, before finally breaking into a big smile. \"No wonder I fell in love with you!\"\n\n\"Just remember that while Steve's got you in his arms tomorrow and he's making you hotter than a two dollar pistol. I want to be the beneficiary of all that foreplay,\" grinned Charlie as he pulled Jordan onto his lap.\n\n\"You'd better be ready to put out the fire that Steve starts!\" insisted Jordan. \"Last time I was so worked up I didn't think I'd be able to wait until we got to my dressing room. This time we'll be on a boat and have to sail back to land. Maybe I'll be all cooled off by then.\"\n\nThe next afternoon found Steve and Jordan floating on a twenty four foot boat about a mile off the coast. A larger boat with the film crew was anchored very close by. Steve and Jordan listened to the director give the final instructions before they began. He asked them to take their time and that he'd put a few minutes together for the film from however long they appeared to be making love. Then he stepped back onto the larger boat and nodded for them to begin. \n\nSteve turned to Jordan and smiled as he ran his hand over her cheek. Jordan trembled slightly at his touch. Twenty minutes later both Steve and Jordan were perspiring heavily as the director called a halt to the scene. Jordan seemed dazed and it took a few seconds for her to accept her bikini top from Steve. She blushed and quickly put it back on and then hugged Steve as Charlie and Gwen joined them on the smaller boat, along with the man charged with piloting the boat back to the marina.\n\nAs Charlie approached, Jordan released Steve and threw herself into Charlie's arms. \"Was that okay? Are you angry at me? It was just acting.\"\n\n\"Yes, I'm okay, but it sure wasn't acting. It was pretty obvious to all of us watching that you and Steve have something pretty special,\" pointed out Charlie as he hugged Jordan. \"I knew that when we met and I accept it. I don't blame you. He's a hell of a guy and a great friend. I'm just glad he and Gwen are so committed. If he was a different kind of man, he could ruin a lot of friendships and marriages. You love him. Hell, I love him. He's carried me and the band to places we never thought we'd ever reach. He introduced me to you. I know you love me and I can live with your feelings for Steve as long as you both stay within the limits we've pretty much established.\"\n\n\"Steve! Jordan! That was so hot! If it comes out half as sensual on film as it was to watch, the movie will make a fortune. I can't wait to get you back to our room. Poor Jordan must be desperate by now. That was some great acting,\" smirked Gwen as Jordan gave her a sheepish smile. \"It's a good thing that you're my two favorite people in the world that aren't related to me.\"\n\nAfter they reached land and returned to their room, Gwen asked Steve,\" Do you think if we make love now that you'll be able to do a good job in our love scene tomorrow night? If you don't, maybe you should just take a cold shower.\"\n\nSteve grabbed Gwen and tossed her on the bed and climbed next to her, helping her remove her clothes while he kissed the exposed parts of her body. \n\n\"Okay, as long as you're sure about this,\" groaned Gwen as she came long before Steve had her completely undressed.\n\nThe next day was spent filming short spots the director wanted in order to flesh out some scenes that had been filmed previously. The crew finished early and then assembled on a deserted section of the beach shortly before sundown.\n\nThe director went over the scene as he envisioned it. Steve and Gwen were to ride down the beach on the big motorcycle they had used earlier in the movie. They would appear to stop at a random spot, which would be exactly where the director wanted them, and proceed from there. Once it became fully dark and the moon illuminated the ocean, the director had everyone take their places. Steve and Gwen rode the bike back up the beach a quarter mile and turned around and came cruising back. Steve brought the bike to a stop exactly where he had been instructed.\n\nHe stepped off the machine and took Gwen's hand as she easily swung her leg over the bike. She was wearing her work shirt and shorts from the Tiki Bar while Steve wore a tight tee shirt and jeans. He took Gwen in his arms and kissed her gently. Then he wrapped an arm around her waist and led her toward the water. When they were near the water, he took a towel from under his arm and spread it out.\n\nSteve then reached down and pulled his shirt over his head and Gwen quickly followed suit. They dropped to the towel and unhurriedly began their lovemaking. Soon they were both naked and entwined in each other's arms. What followed was over twelve minutes of love making by the couple. \n\nFinally, Gwen rose from riding Steve and pulled his hand to get him to his feet. Then she led him into the water. When they were out far enough for the waves to reach their stomachs, Gwen turned to Steve and embraced him as the waves washed against their torsos. The water around them glistened from the reflected light of the bright moon overhead. \n\nThose watching could easily make out Gwen's breasts as she stood close to Steve. He slowly lifted her. She wrapped her legs around his body and he ever so slowly lowered her as she kissed his face lovingly. Ten minutes later the couple disengaged from each other and made their way back to shore and the towel waiting for them. As they again lay down on the towel, the director called for the end of the scene.\n\nWardrobe people quickly brought robes to Gwen and Steve as Ashley, Charlotte, and Jordan hurried up to them. \n\n\"That was so hot! I think I saw steam coming out of the water,\" gushed Charlotte. \"It was the total opposite of the last one you two did. This time you acted like lovers that were very comfortable and familiar with each other, and really into each other.\" \n\n\"You always have to show me up, don't you, Gwen?\" laughed Jordan. \"That water looked like it had diamonds floating on it, the way it reflected the moon light. Then there were the two perfect bodies all tangled together and moving in a rhythm no one can mistake for anything but love making. People will pay the price of admission just to watch your love scenes!\" \n\n\"Are you two in a hurry to get back to your room, or can we go out and get a late night snack? There's only a few scenes left to film tomorrow and we'll wrap up this movie. It's been one of the best experiences of my life,\" enthused Ashley.\n\n\"\"I feel quite relaxed. Let's get something to eat,\" responded Gwen with a grin.\n\n\"You're not all consumed with sexual desires?\" quizzed Charlotte immediately. \"That would indicate that you managed to relieve those urges recently, since no woman could endure everything Steve did to you without getting super horny. You really did it, didn't you? No wonder that water scene looked so damn real!\"\n\n\"I'm admitting nothing and I wouldn't appreciate any rumors getting started. Let's just let it die and go get something to eat,\" replied Gwen as she hugged Steve's arm to her bosom. \"Just give us a couple minutes to get some clothes on.\"",
        "An hour later, the group was seated at a local burger joint when Gwen's cell phone rang. She stepped outside to be polite, but soon returned to rejoin the others.\n\n\"Guess what? We've been invited to perform at the grand opening of the stadium in Sochi! The state department just relayed the request to Mom and she accepted the invitation for us. We're going to play to our biggest live audience ever, and it'll be in Russia! We'll wrap this movie up tomorrow and head out Friday. That'll give us a week in Russia to prepare our songs and to get accustomed to the time and climate changes, and do a little sightseeing. This is going to be telecast all over the world, so we'd better get it right!\" \n\n\"That's great news!\" cheered Jordan as she hugged Charlie. \"We'll be able to add Russia to our musical resume. Charlie and I were talking last night about how our lives have changed since we met Gwen and Steve. Our careers have taken off, we've fallen in love, and we've made some great friends. It looked a little shaky when Steve washed my mouth out with soap the first day we met. Then he carried me topless to his hotel room a couple weeks later, but look how it all turned out. Charlie and I'll never be able to thank you two enough.\"\n\n\"My life was circling the drain a few months ago,\" interjected Ashley. \"I had a badly depressed sister who had recently lost a hand. I had a complete inability to find and date a decent man. I even had to go on an antidepressant because I felt like such a failure. I thought I was in love with one of my students and he didn't even know I existed. Now I feel like things are working out for me. And my sister is doing great. Who do you think I should credit for that turn around?\"\n\n\"Did you just say that you 'thought' you were in love with a student?\" questioned Gwen. \"Does that mean that you no longer feel that way?\"\n\n\"If you must know, it means that I've come to realize that I am very much in love with the guy, but he's not my student any longer. I realize that he loves me in a special way that allows me to find someone of my own that will think that I'm pretty amazing. Want me to make it even plainer? I love Steve dearly, but he's yours and I'm able to accept that. I feel confident that I have a lot to offer to the right guy and I won't settle for anything less than an honest, kind, hard working man that is totally devoted to me. I see that it's possible. Jordan found a great guy. Lisa found a great guy. I will, too.\"\n\n\"I did find a great guy, didn't I?\" agreed Jordan with a big smile as she again hugged Charlie. \"Thanks for reminding me, Ashley. Gwen and Steve introduced us. Charlie never cared about my past mistakes. He just made me want to do better, so I wouldn't disappoint him. He's been a godsend.\" \n\n\"Mom also said that they plan on releasing our movie over the Labor Day weekend. Usually, a movie is in post production for months, but Clyde told Mom that he felt it should be released as soon as possible to take advantage of all the publicity we've been getting lately. Since there are no special effects, they just have to edit it, promote it, and release it. \n\n\"A song and video from the movie is being released tomorrow. Mom had to choose which one to release first. They're planning on releasing a couple of the remakes we did first, and save 'Midnight Lights' and 'Half-Hearted'. One will be released a week or so before the movie comes out and the other will be a couple weeks later to try to maintain interest in the movie. They think those two new songs will be extremely successful,\" added Gwen.\n\n\"Which song will they release tomorrow?\" asked an excited Jordan. \"I bet it's that 'Can't Live' song you sang so well. That song was amazing.\"\n\n\"It seems that Mom made the decision, so she naturally showed favoritism with her pick,\" grinned Gwen. \"It's 'The Glory of Love' that Steve and I sing together. Mom said the video Clyde put together for it will bring tears to the eyes of every woman that sees it. She thinks Clyde underestimated how well it'll do. She said if it isn't a big hit, she'll resign her position. That's how sure she is.\"\n\n\"Steve and Gwen really sang the hell out of the song and we did a pretty good job with the arrangement and music,\" observed Charlie. \"I bet your mother is dead on with this one. It'll be a big hit before we leave for Russia. In fact, we'd better brush up on it so we can play it there. The fans in Russia will see it on the web and want you guys to sing it in concert.\"\n\n\"That reminds me of a subject I've been thinking about,\" began Steve calmly. \"I know it won't be easy, but it would really go over good if we sang a few of our songs in Russian. I was thinking I could split songs, doing both English and Russian versions, just switching back and forth. We'd have to practice because the band would have to be able to adjust to the phrasing that may be longer or shorter than the English version. I could teach Jordan and Gwen the lyrics for a few songs, if they're willing to try.\"\n\n\"Just when I think I know what's going on in your head, you come up with something new,\" marveled Gwen. \"I think it's a great idea! I heard that Abba didn't know English very well when they sang their songs. Maybe we could do 'Dancing Queen' in Russian, along with a few others!\"\n\n\"Deal me in!\" added the excited Jordan. \"By the time we leave Russia, the whole country will be eating out of our hands. I know they'll appreciate that we made the effort to learn some songs in Russian and they'll love Steve! He'll be handling the introductions since he's fluent in the language. This'll be the best concert they've ever seen in Mother Russia!\" \n\n\"When they see and hear Jordan Quick, Gwen Anderson, and Steve Hammer live and in person, they'll have to be impressed,\" insisted Charlotte. \"I've seen how you three affect the audience. You give a great show, you're sincere, and you love what you're doing. That's what makes you three so special.\"\n\nThe group managed to schedule a couple days back home to rest up and pack for the trip to Russia. Friday morning saw The Anderson family, Charlotte, Ashley, Billy, Jordan, Charlie, Steve and the band board a plane for Washington. Amber Stahl made the same flight and was positively ecstatic about the trip. They planned to meet Steve's family, and Jason, in Washington for the flight to Moscow.\n\nJason was the first to join them at their gate in Washington as they waited for their connecting flight. Lisa ran to him and he swept her off her feet in a bear hug. After the other travelers greeted Jason, he turned to Steve and shook his hand as he clapped him on the back.\n\n\"The guys can't believe I'm going to a state dinner in Russia with your group. Heck they can't believe Lisa's my girlfriend, never mind the rest of this. I never realized that pulling your frozen ass out of a snow bank would reap such rewards,\" laughed Jason. \"You'll do, even if you are Navy.\"\n\n\"Look! There's Jen and her mother and grandparents,\" called Kate as she rushed to hug Jen. The group chatted with Kate for half a minute before they all walked toward Steve.\n\nGwen could easily tell that Steve's grandmother was visibly upset. This was a very difficult reunion for her. Gwen found herself wondering if older woman had mellowed in her attitude. That question was soon answered.\n\n\"Young man, uh Steve, I was wrong. I treated your mother poorly and I repeated the same mistake with you. I will take my regrets to my grave. I understand that you must dislike me. I have been less than loving to you, and I drove your mother away from her family. Knowing all of this, your young lady insisted that I be included in this trip of a lifetime. I don't know what to say to you both.\"\n\n\"How about a simple 'thank-you' and a hug?\" responded Gwen as she embraced the older woman. \"You're Steve's grandmother. That makes you family, and that means a great deal to Steve and me. You'll love Steve when you get to know him. You have an amazing grandson, Mrs. Patterson.\"\n\n\"That's what I keep reading, and seeing on the news and internet,\" responded Steve's grandmother as she returned Gwen's hug. \"I also see and read a great deal about you, Ms. Anderson. You've saved Steve's life a few times. You have hit songs, TV shows, a line of swimwear and gowns, and recently completed a movie with Steve and Jordan Quick. You're a remarkable woman. You're his lover, and you're quite proud of it.\"\n\n\"Steve and I are in love, and we're lovers. Do you have a problem with that fact, Mrs. Patterson? Am I not good enough for your grandson?\" demanded Gwen as her temper flared. \"I'd give my life for him. You have no idea how much we love each other!\" \n\n\"Perhaps not, but I'm beginning to get an idea. I meant no disrespect when I mentioned that you're his lover. You remind me of his mother, my daughter Jennifer. You're smart, beautiful and quite headstrong. You don't need my approval, my dear. I've forfeited any right I may have ever had for input into Steve's life years ago. Truthfully, I need your approval. Jen, Janice, and William have taken great pains to explain to me that without your blessing, Steve will never accept me in any way.\"\n\n\"I'm sorry I was so abrupt. I had prepared myself for a possible conflict and I was probably expecting it, so I was rude. If you love your grandson, you have my blessing. If you hurt him again, we'll have a real problem,\" promised Gwen as she turned to Steve. \"Your grandmother has apologized to you. She's waiting for your response.\"\n\nSteve wasn't overjoyed about the situation, but had no illusions as to Gwen's expectations. He stepped closer to his grandmother and gently hugged her.\n\n\"You can do better than that!\" insisted the older woman as she wrapped her arms tightly around Steve while tears streaked her cheeks. \"Jen tells me that you're the strongest boy she's ever met. Please hug me, Steve.\"\n\nSteve was surprised at how the woman's words affected him. He gathered in his arms and lifted off her feet as he hugged her to his chest. He felt, rather than heard, the sobs that wracked her body. Not knowing what else to do, Steve simply held his grandmother as her shame and anguish controlled her emotions. He held her for well over a minute before she regained control. \n\nSteve gently placed her back on her feet and turned to Gwen. He swept her into his arms, crushed her to his chest, and buried his face in her long hair. Gwen could feel his emotion as he struggled with his feelings. Eventually his breathing returned to normal as he slowly relaxed his hold.\n\nBy this time, Kate, Ashley, Jordan, Lisa, Charlotte, and Paula were gathered near Steve and his grandmother. \"Wow! Steve's really choked up!\" observed Kate. \"He always hugs Gwen when he gets that way. I bet he kisses her next.\"\n\nEven as Kate spoke, Steve brought his lips to Gwen's and kissed her gently. \"Grandmother Patterson, you've managed to break Steve's reservations. He's feeling quite emotional,\" managed Gwen when Steve released her. \"This is going to be a great trip!\"\n\nSoon all the women were welcoming Jen, Janice, and Janice's mother, Mrs. Beatrice Patterson, to their group. Steve shook hands with his grandfather as they watched the women interact. \"Thanks, Steve, for being so kind to your grandmother. She was so afraid that you'd reject her. She would've done that to you if the shoe had been on the other foot. She's having great difficulty dealing with the fact that you and Gwen can forgive her and accept her as family, especially when she was so unwilling to show your father that same courtesy.\" \n\nJust as the reunion activities settled down, a young couple approached Gwen and Steve as they stood chatting with their friends. \"Excuse us, but we were wondering if you'd sign our copy of Maxim? We're returning from our honeymoon. I just bought the new issue because I saw Gwen Anderson on the cover. Then as we were walking toward our gate, we saw you both waiting for your flight, so we thought we'd take a chance and ask for autographs.\"\n\n\"The magazine is out? Can I look at your copy?\" asked Gwen as she studied the cover photo. \"It's amazing what they can do with Photoshop. Look how smooth they made my skin and how big my boobs look. That little shirt doesn't cover much does it?\"\n\nGwen and Steve not only signed the magazine, but they posed for pictures with the couple. Kate volunteered to take some photos of them all together with their camera. Soon other passengers began to gather around and ask permission to take pictures. Many of them wanted Gwen to sign their Maxim magazines, which they had quickly purchased at the airport newsstand.\n\n\"You're Steve Hammer!\" gushed a couple of teen girls that had been waiting at the gate with their families. \"That new song, 'The Glory of Love' is unbelievably good and the video made us both cry. It was so romantic. It's the best video ever!\" \n\nBy the time they boarded the large aircraft; Gwen and Steve had signed dozens of autographs, and posed for hundreds of pictures, mostly with other travelers waiting for the flight to Moscow. Jordan was also kept busy by fans. Once they were boarded and airborne, most of the group leaned back to catch some sleep.\n\nIt was a long flight. They arrived in Moscow shortly before noon, which arrived ten hours sooner than usual for the travelers from America. The members of the band remained at the airport. They were going to accompany their equipment to Sochi and start preparing for the show. Once the Americans passed through Russian customs, they were shown to a small bus that transported them to their hotel.\n\n\"Let's get a lunch after we check in and then take a two hour nap,\" suggested Paula. \"It worked pretty well when we arrived in Paris. We'll still have a few hours to see some of the sights. This city is amazing!\"\n\nAs the group entered the ornate luxury hotel the state department had booked for them, security formed a path through the crowd to use to approach the front desk. Beyond the security personnel, other guests turned to see what the fuss was all about. \n\nAs Steve gazed at the hotel guests beyond the security detail, he saw a blonde girl standing with several friends, looking back at him. Steve smiled and stepped between two of the security men and quickly walked up to the blonde girl. As he approached her, she launched herself at him.\n\nSteve grinned as he easily caught the girl and carefully swung her in a tight circle. \"Nadiya Misko! It's great to see you again! You look even more beautiful than the last time I saw you,\" praised Steve as her friends watched wide-eyed.\n\n\"So the big, famous American hero remembers the little girl from the Ukraine? I was wondering if you would. I was telling those girls that we had danced together in Paris, but I don't think they believed me. I think they do now. You have made my day!\"\n\nAs soon as Steve placed Nadiya back on the floor, Gwen embraced her. \"Nadiya! It's so good to see a friendly face here in Moscow. Will you be at the state dinner next weekend?\"\n\n\"Yes, I will! This is all so amazing. You two are so famous and successful and you treat me like a long-time friend. I am so proud to be considered a friend to Steve Hammer and Gwen Anderson. It's so good to see you again! I have followed your new adventures since we last spoke. You've made a movie and once again prevented terrorists from killing innocents. I will be at your concert in Sochi as well. You two are amazing!\"\n\n\"Do you have some free time? We're going to have a lunch and then go to bed for a couple hours. We'd love to have you come with us,\" offered Steve without giving his words much thought.\n\n\"I would be delighted to have lunch with you and very happy to sleep with you, but is Gwen okay with it?\" responded Nadiya as she struggled to hide a smile.\n\n\"What? Oh, no! I didn't mean that. Gwen would never go for that. I was asking about lunch. I'm sorry if it sounded like I was asking about, uh, you know.\"\n\n\"If we were going to invite any beautiful blondes to join us, you'd be on the list,\" laughed Gwen as Steve blushed. \"However, we've reached an agreement that we'll remain exclusive for the next 60 years or so.\"\n\n\"I thought as much,\" grinned Nadiya. \"Steve is not the kind of man to share his woman, and you'd be crazy to share him. The ladies would be lined up for blocks.\"\n\n\"Let's get some lunch and catch up,\" suggested Steve as he made a concerted effort to change the subject. He placed an arm around each woman and led them back to his group.\n\nGwen made the introductions to the many members of the group. \"You travel with so many beautiful women,\" marveled Nadiya. \"Gwen's sisters are incredible, your cousin looks like a female version of you, your 'teacher', as you call her, is gorgeous. Jordan Quick is, well she's Jordan Quick. For a man in a monogamous relationship, you keep some very exotic company. Gwen must be very secure.\"\n\n\"I was going to tell her the same thing when she said that you'd be joining us for lunch,\" responded Lisa. \"With your beauty and grace, you could intimidate any woman. Jason's eyes have been bugging out since he saw you with Steve and Gwen back in Washington.\"\n\n\"Charlie isn't much better,\" laughed Jordan. \"At least he's met Nadiya before, but he still has trouble pulling his eyes away. Let's get checked in and get some good Russian cuisine!\"\n\nGwen noticed that Steve was quite attentive to Nadiya at lunch and engaged her in a lengthy political discussion. When they retired to their room, Gwen began asking questions.\n\n\"I know she's a stunning woman, but you don't usually ask anyone so many questions. In fact, you're usually pretty quiet. Why were you so interested in the politics of the Ukraine? Did you learn anything? Are you up to something?\"\n\n\"This is like a chess game, with several players. I'm just trying to get the lay of the land. It appears that The Ukraine would like to do more trade with the US, but Mother Russia is leaning on them to stay in the fold and deal mostly with what was the Soviet Union. Information like that may come in handy.\"\n\n\"I'll tell you what would 'come' in handy,\" teased Gwen as she ran her fingers over Steve's crotch. \"On second thought, you're a smart guy. Try to figure it out.\" \n\nSteve had no problem solving Gwen's little riddle, but it cut their nap time down by an hour. He felt like he had just closed his eyes when Kate began banging on their door and yelling for them to get up. Gwen finally staggered to the door and opened it.\n\n\"One thing you need to learn about Russia is that the walls aren't very thick and sound travels right through them,\" revealed Kate. \"It's a good thing that Jen and I have the room next to yours and not Mom and Dad. It would be really embarrassing if they heard you, especially if Dad got Mom screaming like you were!\"\n\nWhen the group gathered in the lobby to begin their sightseeing tour, Lisa tugged on Gwen's sleeve and whispered to her. \"Thanks for getting us going. We were tired and almost asleep when you started making those loud moans, and then a few screams. Next thing I knew, Jason was all over me. We hardly got any sleep, but it was worth it!\"\n\n\"I didn't know you were in the room next to ours,\" admitted Gwen. I know Kate and Jen are on the other side of us.\"\n\n\"We aren't next to you. We're in the room next to Kate and Jen on the other side. Sound really travels through these walls,\" added Lisa.\n\n\"Uh, oh. I wonder who's got the room next to us on the other side,\" worried Gwen. \"I hope it's Charlotte and Billy.\"\n\nThe group climbed into a small bus that had been hired for them by the state department and began their tour. Gwen had an aisle seat while Steve sat looking out the window. Paula sat across from her with Ted next to the window on his side.\n\n\"I suppose I should thank you, Young Lady,\" whispered Paula quietly so that neither Steve nor Ted could hear. \"I haven't seen your father so romantically inclined in some time. We didn't get much rest, but we certainly spent the time wisely. Just think about Ted's age before you two try doing it six times. His heart may not be able to stand it if he tries to keep up. Did you notice how sound travels through the walls? I may have to move Kate and Jen to a different floor.\" ",
        "Steve and Gwen were surprised at the attention they attracted when they stepped off the bus to tour some of the more famous landmarks in Moscow. People crowded around them, took pictures with their cameras and phones, and more than a few asked for autographs. Most of the younger ones spoke English and were quite polite. At the second stop, Steve found a copy of 'The Moscow Times', which was printed in English. He showed it to Gwen.\n\n\"Wow! They really gave us a lot of print. No wonder everyone recognizes us. Our pictures are plastered all over the paper, as well as the fact that we'd be arriving today. I don't think we have fans this excited to see us back in the US. It looks like we should put a few butts in the seats at that Fisht Stadium.\"\n\nThe entourage returned to their hotel well after dark. They had jammed as many stops into the afternoon and evening as they could. After a very enjoyable dinner, they drifted into the lounge area where an excellent pianist was playing and singing quite well. Gwen and Jordan both mentioned how odd it felt to recognize the music, but not the lyrics.\n\nEveryone danced with their partners for a few dances. Then Steve, at Gwen's strong suggestion, asked his grandmother for a dance. \"Dancing with my grandson in a luxury hotel in Moscow is far more than I ever even dreamed of. You're a wonderful dancer, like your mother. I regret so much what I did to her.\"\n\n\"Grandmother, that's all in the past. It all worked out. If things had been different, I might not have been born, or I might not have met Gwen, or who knows what may have happened differently. Don't dwell on the past; let's make this a trip to remember.\" \n\n\"You're absolutely correct. Judging from the sounds coming from your hotel room, you'll have a great deal to remember. Your young lady certainly is vocal in her encouragement and appreciation of your efforts. She's a wonderful girl, and she's so in love with you. I know it was her idea to invite me along on this amazing trip. I'll spend the rest of my life thanking her for her generosity.\" \n\nSteve blushed at his grandmother's reference to his hotel room noises. He promised himself that he's be more careful the rest of their stay. Steve danced with Ashley and Lisa before Kate grabbed him and led him onto the floor. She drew as close to him as she could for their dance. Steve wondered if he would have to pry her off when the music ended. \n\nHe soon learned that he needn't have worried. When the song ended, Kate stepped away and whispered, \"He's all yours, Nadiya,\" as she gave his hand to the beautiful Ukrainian girl.\n\n\"You have so many beautiful women with you, and they are all in love with you. Does it not bother Gwen that so many of her family and friends are so smitten by you?\"\n\n\"Gwen and I have an understanding. She's the only one for me, and I'm the only one for her. I love all of the women with us, but Gwen is the one I want. I'll never risk losing her, or hurting her in that way. She knows that.\"\n\n\"Then she won't mind this?\" chuckled Nadiya as she moved in very close to Steve. \"There are many countrymen here that know me and I want to make them a little jealous. Is that awful? Am I a bad person?\"\n\n\"Not from where I'm standing,\" replied Steve graciously. \"I can't imagine how you could be any better.\"\n\n\"No wonder all of these women are in love with you! You are not only strong and handsome, but you are such a gentleman. My friends are taking pictures of us. Would you mind if I took you over and introduced you to our trade delegation? It would only take a few minutes.\"\n\n\"I'd be delighted,\" responded Steve as he danced Nadiya toward her group. When the song ended, she began introducing him to her delegation, including her father. He was a large man with a very firm handshake. Steve liked him immediately and they chatted in Russian for several minutes, while Nadiya stood close by and beamed.\n\nAfter about five minutes, Steve excused himself and went in search of Gwen. He found her dancing with a tall man a few years older than she and Steve. The man was making a serious effort to draw Gwen tighter to his body while Gwen was attempting to maintain a little distance. The man's hand kept dropping down to Gwen's ass and she kept pulling it up to her back. \n\nTed started toward them when Steve placed his hand on Ted's shoulder. \"Let me handle this,\" was all he said, but Ted nodded and returned to his seat.\n\nThe song had ended, but the tall man did not release Gwen. He appeared to be waiting for the next song as he kept his arms around her. It was apparent that Gwen was not happy with the situation, but they were in a foreign land and she did not want any trouble. She had no doubt that Steve could kick the tall man's butt, but that scenario worried her. They did not want to be involved in any bad publicity.\n\nMeanwhile Steve approached the man playing the piano and quietly spoke to him. The fellow grinned at Steve and began a new song. After a few chords, Steve walked onto the dance floor and began singing.\n\n\"Tonight it's very clear, as we're both lying here, there's so many things I want to say.\" Steve made his way directly to Gwen as he sang. Gwen quickly gleaned Steve's intent and gave him a huge smile. Then she sang the next line, just as they did in their music video. \n\nBy this time, the tall man was feeling very uncomfortable as everyone's attention was drawn to Gwen as she faced Steve and sang, \"I will always love you, I would never leave you.\"\n\nAs Steve began the next line in the song while closing the distance to Gwen, the tall man dropped his arms and walked away. Gwen smiled again as Steve took her into his arms and began dancing with her as he sang. By this time, everyone else had vacated the dance floor and watched from the sides as the two American lovers entertained everyone in the lounge. There was thunderous applause when the two ended the song and bowed gracefully.\n\n\"Did you see that, Grandma?\" squealed Jen as she clapped her approval. \"Steve's so smart. He could have beaten that guy up, but he knew that would have repercussions. He found a better way to get rid of the jerk. Didn't they sing great?\"\n\nSteve escorted Gwen back to their table as people slapped him on the back and congratulated him. \"That was a stroke of genius!\" joked Kate. \"You knew your singing would drive that creep right off the floor!\" \n\n\"Excuse me, Sir,\" interrupted a swarthy man with hotel ID on his shirt. \"The hotel would be very willing to upgrade your rooms, or make some other concessions if you and the lady would entertain our guests for another hour or so and again tomorrow evening. We seldom have such talented performers in our hotel. The publicity would be most beneficial.\"\n\n\"If that proposal includes Jordan Quick, we'd be happy to oblige,\" replied Steve immediately. \"We'd like a room that either has soundproofing or is far away from any other guests. If you can arrange that, we'll get started right now.\"\n\nJordan, Gwen, and Steve spent the next hour and a half singing some of their songs and responding to questions in the comparatively intimate atmosphere of the lounge. Charlie filled in on the piano and the impromptu show was very well received. Word quickly spread in the hotel and the lounge was very crowded by the time the group finished for the evening. \n\nWhen Steve and Gwen finally retired to their new hotel room, they found their luggage already waiting for them. \"That was a great idea about changing our rooms. Mom, Lisa, and Kate all told me that they heard us take our 'nap' this afternoon. It was pretty embarrassing,\" admitted Gwen.\n\n\"Oh, yeah? Try having your strait-laced grandmother tell you how much your girlfriend seems to enjoy your lovemaking, if you really want to be embarrassed,\" responded Steve as Gwen's jaw dropped. \n\nThe group spent Sunday in Moscow sightseeing. That evening found Gwen, Jordan, and Steve entertaining a very crowded lounge. Steve and Charlie brought their acoustic guitars to supply some more background for the songs. Jordan played the piano and sang while Gwen sang lead on some songs and back-up on others.\n\n\"Paula, your daughter has an amazing voice,\" stated an obviously impressed Beatrice Patterson. \"It's difficult for me to accept that I'm in Moscow watching my grandson, his girlfriend, and his lady friend, Jordan Quick, perform in a lounge in a luxury hotel. Next week we'll see them perform in front of thousands live and in person and millions on television. That's all before we attend a state dinner with the presidents of Russia, France, and the United States, along with high ranking diplomats and statesmen from other countries.\"\n\n\"It's been one adventure after another since Gwen met Steve at our local mall last fall,\" recounted Paula. \"Steve's strength and love has allowed Gwen to blossom and reach her potential. When the two of them are together, anything is possible. It looks like someone important is going to meet with them right now.\"\n\n\"That's Vlad Novokov! His father is the Russian president,\" gasped Beatrice as she watched her grandson shake hands with the important young Russian. \n\n\"I have heard a great deal about you, as well as Ms. Anderson and Ms. Quick,\" began the Vlad Novokov in excellent English as he shook Steve's hand. \"This lady at my side is my fianc\u00e9, Anna Chekov. We will be flying to Sochi with you tomorrow. My father wants to use this trip to demonstrate how safe traveling is in Russia. Terrorists are not in control.\" \n\n\"I have heard a lot about you, Mr. Novokov,\" responded Steve as he shook the other man's hand. \"I had heard that you were engaged to a beautiful woman, but I never dreamed she would be this lovely.\"\n\n\"I can see why you have so many gorgeous women around you, Mr. Hammer, I mean Steve,\" joked Anna in excellent English. \"You are very smooth. If you don't mind, we'd like to listen to you perform this evening and perhaps I might even manage a dance with you. I know Vlad would very much like a dance with the beautiful American ladies next to you.\"\n\n\"How could we refuse the opportunity to have a dance with such a dashing and handsome man?\" teased Gwen as she first shook Vlad's hand and then hugged a surprised Anna. Jordan soon followed suit, but Anna anticipated that hug and returned it warmly. \n\nJordan and Gwen took turns dancing with Vlad while Steve managed a couple turns with Anna. As they danced Steve questioned her about the situation with the jailed Olympic spy.\n\n\"The man is a national hero! He was not spying on the French. What do they even have to spy on? They were just retaliating because Vlad's father refused to sell them natural gas. We have to provide for our friends in Eastern Europe and can no longer send gas to France. That is what this mess is all about. Russia will not be held hostage by France. We will find a way to return our Olympic hero in time for the Sochi games.\"\n\nVlad and Anna stayed until the group stopped performing at midnight. The next morning, they were on the bus hired to take Steve's group to the airport for the flight to Sochi. Steve sat next to Vlad on the flight to Sochi while Gwen chatted with Anna most of the trip.\n\nOnce again the group climbed into a bus to transport them, this time to the Olympic village. They were only a mile or so away from the airport when a blast shook the bus. Steve looked out the window to see fire pouring out of a building about a block ahead of the bus. He saw dazed people wandering away from the apparent site of the explosion.\n\nWithout conscious thought, Steve rushed to the front of the stopped bus and opened the door. He hit the ground running as he hurried to the scene of the disaster. As he approached a structure that was billowing smoke from doors and windows, he heard enough from the locals to know that the explosion had occurred in a small elementary school and children and teachers were still in the building.\n\nSteve turned and entered the building. Jason, Charlie, Billy, Ted, and Vlad had hurried off the bus in an effort to keep up with Steve. As they rushed up the street, Vlad informed the other Americans what he was hearing from witnesses so that they would understand the situation. To a man, they all entered the doorway they had seen Steve use.\n\n\"Oh, no! Dad and Steve and the others have gone into that burning building! What should we do?\" cried Kate as she watched her father disappear into the smoke.\n\n\"We need to start helping the wounded and get prepared for more. Those men will be bringing out injured people. Let's set up on that playground and start helping those that need it,\" reasoned Gwen as she led her friends and family across the street to a small playground. \n\nAs she walked, Gwen gathered up what looked to be a girl about seven that was bleeding from a head wound. She placed her on a small picnic table and looked around for any material to use on the wounds. \n\n\"Mr. Patterson! We need bandages for these people. Could you start making some from whatever clothes people can spare?\" asked Gwen as she examined the child for any life threatening injuries. \n\nSeeing Gwen act so quickly and calmly, the rest of her group began offering assistance to anyone that appeared to be harmed in any way. Charlotte soon had a small boy resting on a second picnic table as she examined his badly bleeding arm. Steve's grandfather had ripped his own shirt into strips, handed the strips to Gwen and Charlotte, and was gesturing for others to do the same. The locals caught on quickly and started offering articles of clothing to the American women as they worked to aid the injured. \n\nSoon several Russian women joined in as more injured were brought to the playground. Then Steve suddenly emerged from the smoke and dust that was streaming from the building. In his arms was a woman. She clutched her bulging stomach and groaned as Steve rushed up to Gwen. \n\n\"She's having a baby! It's just started showing. Take care of her while I go help the others,\" insisted Steve as he gently placed the woman on the table, spun, and rushed back into the building. \n\nTed and Billie appeared a short time later, each carrying a small child. Jason followed with two kids in his arms while both Vlad and Charlie emerged carrying older women. Several local men also carried children from the building. Flames began shooting out the windows and the roof started to slowly collapse as the horrified onlookers stood and stared.\n\n\"Where's Steve?\" called Jen as the side of the building began to crumble. Gwen turned to look at the destruction, even as she tended to the woman in labor. Smoke and dust billowed outward in a huge cloud as the two story building simply collapsed onto the ground floor.\n\nNo one spoke as the din of the building collapsing slowly died out. Only the flames licking at fallen timbers could be heard. \n\n\"There he is!\" yelled Kate as the dust and smoke swirled away to reveal Steve on his knees in the street, clutching a thin blonde girl in his arms. Shaking his head, he regained his footing and started across the crowded street. \n\nEmergency personnel and vehicles began arriving as Steve moved beside Gwen with the child clinging tightly to his neck. Gwen was tending to the woman when she yelled at Steve. \"I need your shirt! The baby's coming!\"\n\nSteve quickly placed the child he was holding on the ground and pulled his shirt over his head. He shook it violently to rid it of most of the dust. Then he handed it to Gwen, just in time for the baby to make its grand entrance! Gwen deftly caught it in Steve's shirt and wiped it off as well as she could. \n\nSuddenly she handed the now crying baby girl to Steve and quickly pulled her blouse over her head. She spread the blouse out, carefully removed the baby from Steve's shirt and placed it on her blouse. Then she meticulously folded the blouse around the baby and picked it back up.\n\nBy this time the small girl that Steve had carried from the burning building was back in his arms, clutching his neck as tightly as her tiny arms could manage. Her little face was pressed to Steve's as she and Steve both watched Gwen hold the crying newborn. Gwen smiled at the baby and then gently placed her on her mother's chest. The new mother smiled her thanks and clutched the infant lovingly. \n\nSuddenly an almost hysterical woman rushed up to Steve with her arms out. The child in Steve's arms released her grip around his neck and extended her hands toward the frantic woman. Gwen listened as Steve spoke to the woman briefly in Russian. The young woman gave Steve a quick kiss on the cheek. Then she took the child and disappeared into the crowd that had formed. \n\nEmergency personnel spread throughout the makeshift field hospital, replacing those that had been giving aid to the injured. The mother and baby were loaded into a waiting ambulance and driven away.\n\nGwen stepped up to Steve and wrapped her arms around him. He could feel her tremble in his arms and pushed her back slightly to look at her eyes. Then Steve saw what Gwen was focused on. Behind him and off to the side were four little bodies and two larger ones, all placed on blankets.\n\nSteve took Gwen's hand and moved closer to the unfortunate victims. He dropped to his knees and Gwen quickly followed suit. As they mourned the victims, the rest of the American entourage knelt down on either side of them and bowed their heads. Seemingly from nowhere, and old man with a beard stepped in front of them and began what was obviously a Russian prayer. As he spoke, Steve softly translated it for his group. By the time the old man finished the prayer, dozens of people were kneeling alongside the Americans. \n\nEveryone remained on their knees for another minute or so. Then Steve stood and the rest followed his lead. With his head bowed, he placed an arm over Gwen's shoulders and started back down the street to the bus they had so recently abandoned.\n\nIt was a somber group that climbed back onto the bus. Then they sat quietly as police directed the bus to a place it could turn around and backtrack a block. Then they resumed their journey to the Olympic Village. Gwen leaned her face into Steve's neck and remained silent as he once again curled one arm around her shoulders. \n\nIt was late afternoon by the time the group arrived at the hotel. They checked in and then gathered at the hotel restaurant for dinner and quiet conversation. Amber Stahl joined them twenty minutes later.\n\n\"I sent my video report back to the studio when I got to my room. As you can guess, the station was eager to air my report on the events of today. One of the reasons for the intense interest is the photograph that's on, or will be on, the front page of almost every newspaper around the world. I saw it on a copy of The New York Times online. It's just incredible.\n\n\"It seems that a couple from Nebraska was traveling here on a bus that was right behind ours. The wife snapped some pictures of the events today and sent them to her local TV station. They were shown on air, and then placed on the station's web page and social media links. \n\n\"The photo that's so remarkable shows Gwen holding the newborn baby. It's wrapped in her red blouse, with Gwen, Steve, and that adorable little girl that was clinging to him, looking down at it in Gwen's arms. Get this part. The sun was reflecting off a broken window behind Gwen and it looks like a halo around her head! Remember that she had removed her blouse to cover the baby, and her bra was strapless? In the photo, you see the baby, the top of Gwen's breasts with no visible clothing, and Steve standing bare chested next to her, clutching that cute little girl in his arms. The effect is breath taking! It's like a modern day nativity scene. No one's suggesting any divine intervention, but the viewers can make their own determination. The legend of the Lady in Red will continue to grow. That's for sure!\" ",
        "\"Oh, wow!\" managed Paula as the rest of the group sat silently, recalling the events of the day, and how Gwen looked as she held the baby. \n\n\"At least she's not a virgin, so she won't have to worry about that embarrassing comparison,\" opined Kate between bites of chicken. \"I'm just glad I wasn't the one holding the baby. I'd be known as 'the virgin' the rest of my life!\"\n\nAfter the laughter subsided, Amber continued. \"They're showing the cover of Maxim alongside the photo the woman from Nebraska took of Gwen today. There've been all sorts of phrases bandied about on the internet. Things like 'The Lady Madonna in Red', 'Special Delivery', 'Red Handed' and 'Red Dawn'.\n\nBefore Amber had finished speaking, Charlotte had her phone in her hand. \"Hey, there's wifi here! We can use Google and find that picture! Wow! Look at this!\"\n\nCharlotte handed her phone to Billy, who studied it for a few seconds and handed then it to the next person. \"How about this picture of the guys all standing together after they rescued those people? Their muscles all big and bulgy looking!\" exclaimed Lisa as she held her phone up. \"These American guys look like real studs; even you, Dad!\" \n\nThe group retired early that evening, worn out from the events of the day. Gwen was feeling melancholy and asked Steve to hold her tight until she fell asleep. Her joy of delivering a healthy baby had been reduced by the deaths of the innocent victims. Steve held her to his chest and stroked her hair long after she had fallen asleep. He knew his time with Gwen was drawing to a close. He stayed awake well into the night, just concentrating on her smell and feel. He would want those memories when they were separated by three thousand miles.\n\nThe next day saw Gwen, Jordan, Steve, Charlie, and the band get everything set up at the stadium, and then practice for a few hours. The venue was bigger than anything they had previously played. The sound system was brand new and seemed to work very well. By Friday afternoon, they were confident that they were as prepared as they were ever going to be for the biggest live show of their careers. \n\nPeople had been streaming into Sochi all week. By the time the first band took the stage that afternoon, the stadium was packed. Over forty thousand people shouted their approval when the music began. Steve felt the first band, which was pretty well known in Russia, did a credible job. The second band took the stage an hour later. They appeared rattled by the size and volume of the crowd and played haltingly. The audience became restless and began chanting insults. The band ended its stint after just forty minutes on stage.\n\nNext up was a well known female Russian singer. She hit every note perfectly. The small orchestra that accompanied her played flawlessly. Even so, the crowd seemed pleased when she finished her set. Steve's group was given ten minutes to set up for their performance. They were the last act. That fact was not lost on any of the performers. It indicated that they were the main attraction, even in a place half way around the world from their homes.\n\nWhen they were ready, a small spotlight lit a ten foot circle on the stage. Steve and Gwen stepped into the light and the crowd went wild. They had to take bows and gesture for the audience to quiet down before they were able to start. When the cheers finally reached an acceptable level, the band began playing as Steve led Gwen to the center of the small lit area.\n\nOn cue, Steve and Gwen began dancing and then Steve began singing 'Lady in Red', but in Russian. When the audience realized that he was singing in their native language, they screamed and shouted their approval. Steve stopped singing and simply danced with Gwen until the din abated. The band easily picked up where he had left off and Steve gave a performance the crowd would long remember. The large screens placed strategically around the arena showed Gwen's dazzling smile and classic beauty as she responded to Steve's singing and dancing. \n\nWhen the dance ended, the crowd once again cheered its approval while the stage again went dark. It only required a couple minutes for Gwen and Steve to find their positions and for Steve to strap on his guitar. As the audience quieted down, the band began their signature opening number with Queen's 'We Will Rock You'. The lights came on as Gwen stepped to the microphone and began singing. They had the capacity crowd eating out of their hands the rest of the night.\n\nThe highlights were songs they performed in Russian. Steve and Jordan stunned those attending with a very well done, sexy Russian version of their first hit song together. Later, Steve and Gwen teamed up to perform their current hit, 'The Glory of Love', again sung in the Russian language. Gwen and Jordan had the crowd rocking in the aisles with their Russian version of 'Dancing Queen'.\n\nAt the end of their first hour, the audience refused to let them stop. Steve checked with the head official of the event and was given a huge smile and the go-ahead to play another set. Gwen started it with 'I Need a Hero' followed by Jordan doing her two biggest hits to the delight of the crowd. The three singers then joined forces on 'Lyin' Eyes'. After Gwen did her version of 'Addicted to Love' Steve performed two Elvis songs. He sang 'I Can't Help Falling in Love With You' in English. The large screen focused on his face as he sang. Sighs were heard from every woman in attendance. For his Russian fans, Steve sang 'Love Me Tender' in their native language. The applause for his effort has loud and long.\n\n\"I haven't been to a concert in thirty years, but these kids amaze me. I heard Sinatra and Elvis live and they weren't in the same league as these three,\" offered a biased Beatrice to Paula between sets. \"I've never seen a crowd respond like this one is. I'm so glad that your daughter persuaded Steve to invite me, and to forgive me.\"\n\n\"Forgiving you was Steve's decision. He's the one you should be thanking,\" asserted Paula.\n\n\"Paula, you're not very convincing. We both know that Gwen exerts a lot of influence on Steve in certain areas. He listens quite closely to her on matters of family and relationships. She pays close attention to him on other issues. They feed off the strengths of each other. Together, they are extremely capable and confident. I'm very favorably impressed with your daughter.\" \n\nAfter three solid hours on stage, Gwen finally put the evening to rest with 'My Heart Will Go On'. As she finished, the lights onstage dimmed and remained dark. Over forty thousand fans left the stadium delighted with the performance.\n\n\"I feel like I'm seeing history this week,\" stated Ashley when the group gathered in a private dining room at their hotel after the performance. \"It was exciting watching you guys entertain at that lounge for a couple nights. It was great meeting and traveling with Vlad and Anna. Seeing how quickly and decisively you responded to that terrorist bombing at that school was something I'll never forget. But years from now, I'll be telling my kids and grandkids about how I was there when Steve Hammer, Gwen Anderson, and Jordan Quick conquered Russia in one incredible night.\" \n\n\"I think you may be right,\" agreed the usually quiet Jason. \"It'll take time, maybe years, to accurately gauge the effect this trip to Russia will have on relations between the US and Russia. I'm pretty sure that at this moment, the Russians have a warm and fuzzy feeling for Americans, at least certain Americans.\" \n\nThe next morning saw the entourage board a bus for the trip back to the airport. They took a different route to avoid the area where the school had been bombed by terrorists. There was a large crowd at the airport when they arrived. It was made up mostly of young people and it was clear they were there to see Jordan, Gwen, and Steve. Against the wishes of the people running security, the threesome went over to the edge of the crowd and shook hands and posed for pictures about ten minutes.\n\nFinally, and much to the relief of the people in charge of security, Gwen, Jordan, and Steve returned to the secured area and waited for their flight. Vlad and Anna were once again flying with them. On the return trip, Gwen sat next to Vlad and Steve chatted with Anna. Gwen wondered why Steve had suggested it to her as they were preparing for bed the previous evening. As she listened to Vlad discuss his country's concerns and dreams, she realized that Steve wanted her to understand Russian people and politics better. Her appreciation for Russia increased greatly that afternoon, as did her appreciation for her surprisingly deep and observant boyfriend.\n\nUpon their return to their Moscow hotel, Steve declined the offer to perform in the lounge for an upgrade. The disappointed hotel management gave them the upgrade anyway. He explained that he had seen the news reports of how they had assisted his countrymen after the terrorist attack. The events of the previous week had taxed the travelers. They welcomed the opportunity to rest before the state dinner Sunday evening.\n\nOnce again, Steve surprised Gwen. This time by inviting Michelle D'Anjou to join them for quiet dinner in a private room reserved for the three of them. Gwen paid close attention to Steve as he directed the conversation toward President D'Anjou's impasse with Russia. Without seeming to pry, Steve skillfully extracted everything Michelle knew about the situation with the Russian spy and the looming trade discussions.\n\nSunday morning the entire group met for a big breakfast in the hotel dining room. The conversation centered on the state dinner to be held in the Kremlin that evening. Steve noticed Nadiya enter the dining room and quickly invited her to join them for breakfast. He dragged a chair from an empty table and placed it between his seat and Gwen's.\n\nPaula, Lisa, Charlotte, and Beatrice all noticed where Steve positioned his beautiful guest and exchanged glances with each other. Placing her between him and Gwen could be construed as significant by the beautiful blonde girl.\n\n\"It is such an honor to sit between the two famous American heroes,\" began Nadiya as she took her seat. \"I saw that incredible picture of you two with the newborn baby and the little girl in Steve's arms. It looked almost biblical. I was also in the stands for your concert in Sochi. It was far and away the best performance I have ever seen. For a little girl from the Ukraine, your friendship and attention is very overwhelming.\"\n\n\"Somehow, I don't think you're nearly as na\u00efve and innocent as you would have us believe,\" laughed Gwen. \"You are a beautiful woman, fluent in several languages, and very much a part of the political scene in the Ukraine. I Googled you and found out quite a bit, like you have a degree in government from Kiev University.\"\n\n\"It is flattering that a famous person like you would try to learn more about a humble girl from the Ukraine,\" responded Nadiya, before breaking into a big grin. \"In politics, it is often to my advantage to appear unaware and uninterested in affairs of state. I hear much more when people believe I am not paying attention and do not care. Even in the Ukraine, we have blonde jokes.\"\n\n\"Tell us more about your country's position on these trade talks,\" suggested Steve. \"Do you expect to increase trade with the West?\"\n\n\"That was our hope when we came here, but it does not look like that will happen. Russia is very upset with France. In its anger, it is insisting that we remain a close partner of Russia, with very little interaction with the West. Father is very disappointed. The plan was to meet all next week with trade groups from the US, Canada, and Western Europe to agree on easing restrictions of goods and services flowing both ways.\n\n\"Our government is under heavy pressure from Russia to resist trade with the West, while the people of my country are pressuring it to be more receptive to trade with the West. Father thinks it may bring our current government down if it is not resolved soon.\"\n\nSteve was listening closely as the beautiful girl spoke knowledgeably about her concerns for her country's economic and political future. The Eastern European Bloc wanted more trade with the West. Russia was the stumbling block and France was exacerbating the situation by holding the Russian Olympic hero. Both sides had drawn lines in the sand and would not budge.\n\nWilliam Patterson and Ted Anderson were mildly surprised at Steve's interest in the trade position of the Ukraine. They listened with great interest as Steve questioned Nadiya. It was quite apparent that Steve was not just making idle conversation.\n\nAfter breakfast, Steve and Gwen were headed back to their room for a little extra recreation when they were hailed by Senator Chatham. She motioned for them to follow her into a side room.\n\n\"You kids pulled off the job we gave you!\" praised the Senator as she motioned for Steve and Gwen to sit. \"You made Novokov look good. His new stadium was filled to capacity and a few thousand watched the big screen from the parking lot. The President was very relieved that it worked out so well.\n\n\"Then there's that response you kids had to the bombing on the outskirts of Sochi. That photo of you two with the newborn baby and the little girl in your arms was absolutely the best thing that could have come out of that terrible event. The news media in Russia is not often very kind to Americans, but they can't get enough of you two! They've played the videos and shown the still shots all week long. \n\n\"Your concert was broadcast over the entire country and people loved it. Singing in Russian was a stroke of genius. No one ever dreamed that you two would do so much to improve relations with Russia when you were invited. To be honest, when you insisted on bringing so many family and friends, the deal almost fell through. The president's advisers wanted him to drop you, but he refused. That's why he's president. He was a certain feel for things. He sure got it right with you kids!\n\n\"The trade talks will stall because of France and Russia being at odds, but your work here will make it a positive event, all things considered,\" allowed the talkative legislator.\n\n\"Senator, this event is pretty important to a lot of countries, especially the smaller Eastern Bloc nations. It would be wrong to not try to find some sort of compromise,\" worried Steve.\n\n\"Tell me about it. If you think of something, let me know. There's going to be some tension tonight since the presidents of France, Russia, and the U.S. will all be there. This is unusual. You seldom have three heads of state at a dinner like this at the same time. France accepted before all of this trouble started, but it would have been even worse if President D'Anjou decided to cancel at the last minute. It may be a bit frosty tonight.\" \n\nGwen and the rest of the women had reservations for early afternoon in the hotel spa. They enjoyed every service the hotel provided. By the time the ladies rejoined the men in the lounge a little after 4 PM, they looked fantastic\n\nThe men were speechless. In fact, when the women entered the lounge, all conversation stopped as every head turned to admire the beauty of the American women.\n\n\"Paula! My God, you're beautiful!\" blurted Ted without hesitation or thought. \"All of you are incredible!\"\n\nAll of the men in the group echoed Ted's sentiments. Charlie moved close to Jordan to give her a kiss. She quickly stopped him with her hand pressing against his chest.\n\n\"No you don't, Buddy! We just spent hours getting all dolled up. You guys can't so much as touch us until after the dinner tonight. Right girls?\"\n\n\"Well, to be honest,\" quipped Kate, \"if Steve really likes what he sees, loses control, and carries me off to his room, I'd consider all the time and effort to look like this well spent. We could catch up with everyone later.\"\n\n\"Believe me, I like what I see, but your Dad's here, so I don't dare lose control,\" laughed Steve. \"I'll just have to admire you from afar.\"\n\n\"I knew you'd have some excuse. Dad's too busy drooling over Mom to even notice anyone whisking me away. I think Gwen's got you under her thumb. You're afraid of her,\" taunted Kate.\n\n\"You sure have that right, Kate, but he's under a lot more than just her thumb,\" added Lisa. \"I can still see her on that lounge chair by our pool. She had Steve under all her bits and pieces. Except for certain important parts, he turns to jelly when Gwen's near him.\"\n\n\"That's a story I'd like to hear,\" stated Steve's grandmother to the surprise of everyone. \"How has Gwen gained control over such a brave, strong young man? What would possibly account for my grandson being so meek around this young woman?\"\n\n\"If you'd seen the two of them naked on that poor lounge chair, you'd know how they have so much control of each other,\" laughed Kate. \"Gwen was actually stuck to the guy when Mom literally pried them apart. Gwen's 'bits and pieces' were reluctant to separate from Steve's masculine chest and rock hard abs.\"\n\n\"You're mistaken, Kate. It wasn't his abdomen that was rock hard,\" replied Lisa quickly.\n\n\"Okay! I don't see any need to tell the world about what was supposed to be a private moment between my boyfriend and me,\" complained Gwen, with a hint of a smile.\n\n\"And I told you that anything happening on our pool deck in broad daylight was not private,\" interjected a smiling Paula. \"Don't blame your sisters for being unable to forget that scene. They've been scarred for life. It's taken me some time to come to terms with my memories of that morning. Sleeping together on a lounge chair in the night air seemed to make Steve all stiff and sore.\"\n\nOnce the laughter at Paula's pronouncement died out, Kate asked a question. \"So it was the uncomfortable chair and the night air that made him stiff? I was giving Gwen all the credit!\" \n\nSteve was a bright red by this time. Gwen was laughing with everyone else. When she saw that Steve was embarrassed by the conversation, she leaned into him and gave him a quick kiss.\n\n\"I'd gladly take all this teasing for another night by the pool with you. These ladies are just jealous. Don't let them bother you,\" stated Gwen loud enough for everyone to hear.\n\n\"I've never seen sisters so close and enjoy each other the way your daughters do, Paula. I might add that they really love and admire you and Ted as well. I'm so pleased that Steve found such a wonderful family to share his life with,\" admitted Beatrice with emotion. \"I wish I had the wisdom to have that sort of relationship with my daughters.\" \n\nThe big night finally arrived. The American entourage arrived precisely at 6 PM and was admitted immediately. They were ushered into a large ornate room with dozens of different hors d'oeuvres. Gwen and Steve recognized Nadiya chatting with her countrymen. Before they could speak to her, a woman behind them called their names. Gwen and Steve turned to see Varvara Suchkov smiling at them.\n\n\"Varvara! It's great to see you!\" exclaimed Steve to the Russian woman. \"How's your mother doing? I hope she's recovered from that horrible incident in Washington.\"\n\n\"You can ask her,\" revealed Varavara as she hugged Gwen and then Steve. \"She's running just a little late, but she'll be here tonight and she's very anxious to express her gratitude to you for saving her from that man. Could I be so bold as to ask you to save a dance for me?\"\n\n\"It would be my pleasure,\" replied Steve warmly. \"I have a few questions I'd like to ask you about this trade conference. Would you mind if we spoke about business and politics?\"\n\n\"Not at all,\" responded the red headed beauty. \"As long as everyone sees me dancing with the American hero, you can ask me anything you like. You both are very well known and liked in Russia. Saving my mother was a good start, but your actions after that bomb exploded cemented it. Many Russians like the photo of your family and friends praying for the victims of the attack even better than the one of the 'Madonna'. Your sincere sense of grief was greatly appreciated by my countrymen. The fact that you two sang and danced so well was icing on the cake.\"",
        "Steve and Gwen mingled with other guests for half an hour before the presidents of France, United States, and Russia were introduced. Steve and Gwen were extremely flattered when Vlad made a point of introducing them to his father at his first opportunity.\n\n\"My son was extremely impressed with your courage and genuine concern for the injured at the scene of that terrorist bombing. You seem to have a sixth sense for situations like that. You are becoming known as something an anti-terrorist expert, and this troubled world can use as many of them as we can get. Ms. Anderson, the photo of you with the newborn baby is remarkable,\" praised the Russian leader as he shook hands with the couple.\n\n\"Thank you, sir, for your kind words and for inviting us to this affair,\" responded Steve in perfect Russian. \"Gwen and I are honored. You can be very proud of Vlad and Anna. They responded very well to the emergency that afternoon.\" \n\nGwen was unable to determine what Steve had said to the Russian president, but she had no trouble identifying the pride displayed by their host at Steve's comment. As Novokov moved away to greet other guests, Gwen was quickly filled in by Steve. \n\nJust as Steve finished his explanation, President D'Anjou and his wife approached them. \"You've managed to win over Russia in a week's time. I could be here a hundred years and they would still have little use for me.\"\n\n\"Sir, I would like to ask you a few questions about the Russian spy situation, if I could. Can you find a few minutes for me this evening?\" asked Steve.\n\n\"For you, I can, but do not expect me to release that spy. That is not negotiable,\" flatly stated the French President before he led his wife away to greet other attendees.\n\n\"It sounds like the trade talks are in trouble,\" reasoned Gwen. \"D'Anjou is unyielding on this situation.\"\n\n\"The one thing about politics is this; there are no certainties,\" countered Steve as he guided Gwen toward the American delegation. \"At least he didn't shout and pound his shoe on a table, so we shouldn't take his statement as a definite 'no'. He just needs 'persuasion' in the form of something his nation needs, or wants.\"\n\nThe couple had been chatting with several American representatives to the conference when Gwen noticed that the people near her had become quiet and somewhat rigid. Glancing around, she looked directly into the face of President Hanson. The president offered his hand, but Gwen stepped by it and hugged him. Grinning, the President of the United States patted her gently on her back.\n\n\"Steve, don't blame me,\" laughed President Hanson as Gwen released him. \"I was going to shake her hand, but this was much better. You two have done all we could've hoped for, and a lot more on this trip. I can't tell you how much you've helped us with the Russians. I almost think we could trade you two for Siberia.\"\n\n\"Sir, Gwen's far better than I at making friends and influencing people. That hug just demonstrated that. I'll be happy with a simple handshake,\" joked Steve as he shook the President's hand. \"Any success we've had on this trip is because of her brains and charm. I just tag along and try to not create any problems.\"\n\nPresident Hanson studied Steve for a moment before he grinned again. \"You don't mind if I use that line, do you? Gwen is certainly everything you say she is, but your attempt to diminish your own accomplishments is a waste of effort. My people have kept me well informed. That modesty works well for you, however.\"\n\nBeatrice and William Patterson had been chatting with Paula and Ted when President Novokov greeted Steve and Gwen. As they watched, the Russian leader left them to speak to other guests. Soon the French President began chatting with Gwen and Steve. A short time later, Beatrice almost swooned when Gwen stepped up to the President of The United States and hugged him! \n\n\"My God! Is that girl confident, or what? She just hugged the President like they're old friends. Look how easily Steve smiles and speaks with him! I never thought I'd live to see this. My grandson has just spoken with the Presidents of France, Russia, and the US. And they all treated him like a friend.\"\n\n\"We've almost become accustomed to it,\" laughed Paula as she beamed with pride. \"They've met President Hanson several times and he's called a couple of other times. He treats Gwen and Steve very well. I will say that.\"\n\nSoon everyone was summoned to the ballroom, where dinner was to be served. Remembering how far they sat from the head table the first time they attended a state dinner, the group drifted to the far end of the room in search of a table reserved for them. They had scanned several tables without finding theirs when a well dressed man approached Steve and spoke to him in Russian. Steve nodded and the man quickly walked away.\n\n\"It seems that we're looking in the wrong area,\" revealed Steve as he gently took Gwen's arm. \"May I escort you to our table, Madam?\"\n\nThe entire group was dumfounded when Steve led them to one of several tables directly in front of the main table. They looked for, and found, their name tags placed next to the dinner ware.\n\n\"Holy Cow!\" gasped Kate. \"Last time we sat by the bathroom. Now we're at the best table in the place. I bet Gwen and Steve will be sitting at the main table with the President the next time we come to one of these!\"\n\nThe group remained standing until all of the dignitaries sitting at the head table were introduced. Both Presidents D'Anjou and Hanson gave short speeches. President Novokov welcomed everyone and then singled out the table of Americans for special notice. He spoke glowingly about the bravery and compassion demonstrated at the site of the bombing. He praised their response and even mentioned how emotional it was to watch the group kneel and pray for those killed in the attack. He then asked Gwen, Jordan, and Steve to stand and be recognized for the great performance they presented at the opening of the Olympic Stadium.\n\nOnce again, the Patterson and the Anderson families absolutely beamed with pride. The three kids received a long ovation and bowed several times before resuming their seats. Jordan had a huge smile as she sat back down between Steve and Charlie.\n\n\"A few months ago, I was in rehab for all sorts of addictions. My career was circling the drain. Then Clyde put me with Gwen and Steve. The rest is history!\" stated Jordan with obvious pride. \n\nAfter everyone finished dinner, a small orchestra began playing dance music. Beatrice and Paula looked at each other in surprise as Steve leaned over the table and spoke to Gwen loud enough for the rest to hear.\n\n\"Remember to tell the big three just enough to whet their appetites when you're dancing with them. I have to have their undivided attention for a few minutes. Believe me, they all understand English well enough to know what you're telling them. Since it's unlikely that they'll be asking me to dance, this falls on you. I can't imagine any of them not asking for at least one turn around the floor with you tonight. You're incredibly beautiful!\"\n\nIt was apparent to those at the table that Steve and Gwen had formulated a plan of some kind and Gwen was going to make the initial contact with the world leaders. Before anyone could ask any questions, Steve stood, took Gwen's hand and led her out to the dance floor.\n\n\"Do you have any idea what your daughter and my grandson are up to?\" asked a confused Beatrice. \"It sounds like they have business with President D'Anjou, President Novokov, and President Hanson. Gwen is going to ask them to speak with Steve about something, if and when they dance with her.\"\n\n\"I have no idea what they've got planned, but I'm sure it'll be successful,\" opined Ted proudly as he responded to Beatrice's observation. \"Those two constantly do things others wouldn't even think of. Let's just watch and see what develops.\"\n\nSteve danced with Gwen. The next dance saw him dancing with Nadiya while Gwen danced with her father. \"You have made many friends in Russia with your bravery and your compassion, as well as you're singing. Father says that he has never seen Russia embrace Westerners the way they have you. He just wishes that this conference would result in more trade with the West. Russia has exerted its influence to prevent the smaller countries from making new agreements, and it's mostly because they are angry at the French. It's so unfair!\"\n\n\"Nadiya, don't get your hopes up, but Gwen and I are going to try to help France and Russia find a solution to that issue. If that happens, this trade conference could be very successful.\"\n\nNadiya suddenly stopped moving. Her jaw dropped as she stared at Steve. She replayed his comment over in her head several times. A huge smile returned to her face as she once again began dancing with Steve. \n\n\"I think that if the big, brave American hero and his beautiful, smart 'Lady in Red' try to solve this problem, it will be resolved. No one else in the world has the ear of these three leaders the way you and Gwen do tonight. If you manage to pull this off, I will see that the Ukraine is aware of your efforts and shows you the proper appreciation!\"\n\nThe dance ended and Steve found himself guiding Mrs. D'Anjou around the dance floor while Gwen danced with her husband. Steve wasted no time in starting his plan in motion.\n\n\"This impasse with Russia is harming trade relations, as well as diplomatic efforts. I want to speak to your husband about releasing the Russian spy. It return, France could receive a guaranteed supply of energy at a set price, well below market. Do you think he would listen?\"\n\n\"Young man, my husband has been striving to find a pathway out of this situation. If you can offer him something that our people will benefit from, he just might be able to release the spy, yet maintain our national pride. If you can back up your statements, he will listen. I will put a small bug in his ear about this. He will be looking to speak with you privately, I am certain.\"\n\nTwo dances later, Steve escorted Michelle D'Anjou onto the dance floor. \"My father has asked me to relay to you a message. He will be over admiring that huge, ugly painting on the west wall when this dance is over and would like you to join him. It seems that you and Gwen have piqued his interest on some important matter. You are even more than you appear to be, which is saying a lot. If you help my father, and my country, you will always be welcome in our home. Good luck!\"\n\nA short time later, Steve found himself speaking in low tones to President D'Anjou as the two pretended to admire a large painting of wolves pulling down a huge stag. No one else was within hearing.\n\nAs they exchanged thoughts, they became slightly more animated. Both men used their hands to emphasize certain points. As the conversation continued, more and more people became aware of the private meeting between the two men. By the time the two nodded and shook hands, almost every head in the huge room was turned in their direction.\n\nNadiya had taken Steve's seat at the American table while the conversation between the two men was in progress. \"Your handsome male 'friend' is right now performing a miracle. It is obvious why you all love him so much, especially the ladies. I think he can do anything, and I have only met him a few times. I fear I am as hopeless where he is concerned as the rest of you. You must be very proud.\"\n\n\"You've got that right!\" exclaimed Kate, deciding instantly to state Gwen's claim on Steve. \"He and Gwen are going to do some amazing spy stuff and probably save a few million people, or more. I'm not exactly sure how, or what they're doing, but I sure love the guy. I couldn't be prouder that he's my sister's boyfriend, actually my sister's lover. This is way too cool!\"\n\n\"It appears that Gwen has some more competition,\" stated Beatrice with a smile after Nadiya returned to her table. \"That young Ukrainian girl is as beautiful a woman as you're likely to find. Does Gwen ever suffer from envy? Women appear to be drawn to my grandson, as is evident everywhere we go.\"\n\n\"Strangely enough, Gwen is actually pleased that women find Steve so attractive. She's very secure with him now. She's had her moments early on, but they've reached an understanding. They trust each other completely. I guess it was forged when they saved each other's lives a few times. That's the sort of thing that builds trust,\" replied Paula thoughtfully.\n\nSteve danced with Kate and Lisa next. They had practically jumped him when he returned to their table. Both girls insisted that he explain what was going on. Steve gave them some background but explained that 'lose lips sink ships', so he couldn't go into details. \n\nMeanwhile, Gwen was grilled by Ted and then William Patterson as she danced with each man. \"All I can tell you is that Steve feels that he can help offer a very simple solution to a very complex issue. I'm trying to warm up the big three so they will allow Steve to deliver his pitch. We have no idea how this will play out.\"\n\nSteve escorted Varvara Suchkov for the next dance. \"You said that you had questions for me? Everyone saw you in conference with President D'Anjou. It appeared that you had a very serious discussion. How does it involve me, if I may be blunt?\"\n\n\"I believe that France can be persuaded to release your full time hero and part time spy, if President Novokov is willing to negotiate a little. It would pave the way for a successful Olympics.\"\n\n\"I will mention this to my father, who has Novokov's confidence. I know he wants very much to free our most famous Olympic hero, who is not a spy! He may have been a bit too inquisitive, but he is not a spy. \n\n\"Will you hold me a bit closer? I have some friends watching us? You have become favorites in Russia. Your efforts to help Mother were well publicized here. The wonderful concert you gave, along with your group's quick and compassionate response to that horrible bombing, have all gone a long way to making you a household topic of conversation, in a very favorable way. My friends will be so envious seeing us dance together.\"\n\nPaula was next to dance with Steve. She kept the conversation light, not wanting to disturb Steve's concentration on his task. Gwen danced with her father. As they finished, President Novokov bowed to Gwen. Soon she was dancing with the leader of Russia while Steve found Mrs. Novokov in arms.\n\n\"My husband is very curious about your thoughts on freeing our innocent Olympic champion from the clutches of the French. He would like to speak with you at his table after this dance, if he remembers that he asked. Your lady friend is very beautiful and he does appreciate beauty.\"\n\nSteve didn't have the time to ask Mrs. Novokov what she meant by her comment. The dance ended and Steve quickly moved to meet President Novokov at his table. He saw the Russian leader escort Gwen to a seat. As Steve approached, Novokov gestured to a seat next to Gwen.\n\n\"What is this talk about finding a way to persuade the French to release Sergei? If you know of a way, please share it with me,\" insisted Novokov in Russian. \"What will it cost Russia?\"\n\nOnce again, those in attendance watched closely as Steve had an animated discussion with a world leader. The two men spoke around Gwen, who had no idea what was being said, but could easily tell that Steve was very firm and self assured. Suddenly the two men stood, stopped talking, and shook hands. Gwen felt relief immediately. The conversation had been quite intense for a couple of minutes.\n\nSteve guided Gwen to her feet. President Novokov bowed to her and smiled. \"Thank you for the dance, as well as the work to free Sergei,\" stated the Russian in broken English.\n\nMost of the guests in attendance were openly staring at Gwen and Steve as they returned to their table. As soon as they were seated, Senator Chatham plopped down without ceremony in a seat next to Steve.\n\n\"The president is extremely curious to know what you're up to. Are you making deals without his knowledge or permission? This is not a game. If you've managed to screw up our improving relations with Russia, he'll come down on you like a ton of bricks,\" promised the senior senator. \"I'm the one that suggested that you keep your eyes and ears open for information. Now it looks like I'll be lucky to find a spot on some agricultural committee after this mess.\"\n\n'Senator, you've got to stop talking so much, and so loudly. Take a deep breath and relax. I'm aware of what's at stake here,\" responded Steve quietly and calmly. \"You're being watched by a lot of people from a lot of nations. We don't want them to get the wrong idea. When President Hanson's efforts to resolve the French/Russian disagreement come to fruition, he'll want to accept credit. If people see you flying off the handle, they'll be far less likely to believe he was instrumental in the solution. It would be good if you smiled at Gwen and me, shook our hands, and left to ask President Hanson to speak with Gwen and me for a few minutes.\" \n\nSenator Chatham had stopped talking when Steve urged her to do so. She just stared at him as he explained what he expected from her. William Patterson, Beatrice, Ted, Paula, and Jason were stunned at the way Steve addressed the powerful senator. They knew enough about national politics to know that the senator was a close confidant of the president's. The held their collective breath as they waited for the inevitable explosion from Senator Chatham.\n\nSlowly, she began to nod her head. She extended her hand to Steve, who shook it firmly. Then she did the same with Gwen. \"If you two will excuse me, I have to speak with President Hanson.\"\n\n\"Jesus, Steve! Senator Chatham is one of the most powerful members of congress!\" exclaimed the usually reserved Jason as he worked to keep his voice low. \"She can sink your career at the Academy in a heartbeat. Where'd you get the balls to talk to her like that?\" \n\n\"That was pretty harsh,\" agreed Gwen, \"but she should have kept her voice down and been a lot less demonstrative. She knew people were watching and she was distancing herself from us, so if this deal goes into the crapper, she won't go down with us.\"\n\n\"Yeah, I had the same feeling,\" agreed Steve. \"She was assuming far too much. I think she's seen the light. She'll be our best friend by the end of the evening. That's the way politics work, and that's why I'll never be a politician. Total honesty and transparency are unheard of in Washington. We'll see how this all shakes out before I worry about my career, although I do appreciate your concern, Jason.\"\n\nAn aide of the president approached Steve's table and spoke quietly in Steve's ear. Steve listened carefully and then responded, \"I think it'd be best if President Hanson met Gwen and me over by that ugly painting of the wolves and the stag. The other presidents didn't conceal our discussions and I don't think it'd help their trust issues if we meet in private.\"\n\nEveryone at the table watched the aide walk away. Suddenly William Patterson broke into a smile. \"You just told that man to tell the President of the U.S. to meet you under your terms, while rejecting his. My God, how I could use you at board meetings! Either we'll be escorted out of here in chains, or you'll be talking with the President of the United States under that big painting. Anyone care to place any wagers?\"\n\n\"Come on, Gwen, we may have to go meet with the President,\" urged Steve as he stood and then helped Gwen gain her feet. \"Let's wander over and study Russian art.\"\n\nAs Steve and Gwen made their way to the far end of the room, Gwen noticed the intense interest their actions drew. \"Everyone's watching us. Do you think they know what you're trying to accomplish? This is very exciting. How do you dare speak to these powerful men like you do?\"",
        "\"They could be watching us because you are the most beautiful thing they've ever seen,\" countered Steve smoothly. \"Or, they may realize by now that something is afoot, or a combination of the two reasons.\"\n\nGwen and Steve were only by the painting for a few minutes when President Hanson walked up to them. \"Senator Chatham insisted that I come to you when you refused to meet with me privately. This is not the way diplomacy is done. You are not trained in it and you do not represent the government. That said, what have you managed thus far?\"\n\n\"Mr. President, I asked that you meet us in public because Novokov and D'Anjou both did. I've been open and honest with them and they'd know if I left the room to meet with you. They would lose confidence and everything would unravel. I realize things are not normally done this way, and that's a problem you should work to correct. More open discussion and transparency would serve your administration and Washington well.\n\n\"Let me explain what concessions the French and Russians are willing to make. Then I'll explain what they will need from you, and you'll decide how you want to proceed,\" advised Steve as he went into a brief, but thorough description of his talks with D'Anjou and Novokov.\n\nPresident Hanson listened intently, and then asked several questions. He was reluctant to agree to some terms and told Steve so. They had another brief discussion on what they each felt was in the best interest of the U.S. Gwen listened and remained silent as the two men kept their voices down, but conveyed intense passion on the subject. After some give and take, Hanson held his hand out to Steve and the two men shook.\n\n\"This next step is important, Sir,\" informed Steve. \"The other two are expecting you to briefly discuss the terms and then simply shake their hands to seal the deal. And they want it done in the next half hour. If you need to consult someone, now would be the time.\"\n\n\"You sure don't leave much wiggle room,\" observed President Hanson wryly. \"Let me speak to my aides briefly. I don't want to make any blunders, but I think we can work within the terms and conditions as I understand them. By the time the legal people get finished, this'll be a five thousand page document.\"\n\n\"Thank you, Sir. That's your decision, but I'd suggest you stick to the basic agreement and not try to over think or control it. It's good for all three countries involved.\"\n\nPresident Hanson walked briskly over to his aides. Steve and Gwen started back to their table, but faltered when they realized that dancing had stopped, music was no longer playing, and every eye in the room was on them. Gwen caught movement out of the corner of her eye. She turned her head and saw Nadiya smiling and waving to them. \n\nNot knowing exactly why, Gwen tugged Steve's arms and nodded toward Nadiya. Steve quickly decided to go along with Gwen's idea and walked with her over to Nadiya's table. The Ukrainians acted like royalty has just deigned a visit to their table. Nadiya's father quickly had two men vacate their chairs as he welcomed Steve and Gwen with a huge smile and a handshake. Once again, Gwen stepped past an offered hand, and hugged the big man. His huge smile immediately doubled in size.\n\nAs soon as Steve let go of her father's hand. Nadiya was in his arms. \"I told my father what you were trying to do. We watched you with President D'Anjou, and then with Novokov. Father could not believe how you appeared to argue with him! Then you shook hands, as real men should when they make an agreement. It even looked like you had words with your own president, but he, too, came around and shook your hand. So? Do we have a deal to trade with the West?\"\n\n\"That isn't up to me,\" laughed Steve. \"We're working on it. I came over to ask you for a dance. Do you think your dad would mind dancing with Gwen?\"\n\n\"Father has talked of little else since she danced with him earlier! He thinks the sun will not rise if she is out and about, because her beauty will outshine it,\" exaggerated Nadiya as she melted into Steve's arms when the music resumed.\n\nWhen their dance with the Ukrainians ended, Paula and Ted were waiting to take their places. \"Perhaps you'd care to tell me what's going on? This room is buzzing with anticipation, and you seem to be the cause of it. Did you just argue with the President of the United States, Russia, and France? Is it possible that you're getting a little too full of yourself? The world is watching what you're doing here. Think about that. You cannot embarrass heads of state without repercussions.\"\n\n\"Paula, I really appreciate what you're telling me. I didn't embarrass anyone. Not really. I had a pretty tough discussion with President D'Anjou, but we finally reached an agreement. That made it necessary to ruffle the feathers of Hanson and Novokov a little. That kept D'Anjou from feeling singled out, or disrespected. I had to push the other two just to keep the playing field even.\"\n\n\"Are you serious? These things went through your mind? This is incredible to me. You deliberately argued with the presidents of Russia and the U.S. to keep from hurting D'Anjou's pride? Did the other two realize that? They probably did, didn't they? How'd you know how the game is played? You're only eighteen!\n\n\"It looks like you're needed for some more diplomacy. I apologize for suggesting that you didn't know what you're doing. The truth is that I don't know what you're doing, but that's okay. I want you to be kinder to the world leaders. Play nice, Steve,\" stated Paula sarcastically as Steve dropped her off at her table.\n\nAmber Stahl had been allowed to attend the dinner as a member of Steve and Gwen's group, but not as a reporter. The networks had a 'pool reporter' covering for them. She was not allowed to bring her bulky TV camera, but she did bring a small digital camera with a high capacity chip. She had spent much of the evening behaving very much like a tourist. She videoed everything she thought might be remotely interesting.\n\nWhen Steve joined Presidents D'Anjou, Hanson, and Novokov near the head table, Amber made sure she filmed it. Steve stood a little taller than the other men and his shoulders were more than a little wider. As the four men quietly negotiated, everyone else in the room simply watched. It was history in the making and they were well aware of it.\n\nSteve translated what each man said to the other two. They interacted for about ten minutes. Then all three heads of state nodded in agreement with something Steve said. Presidents Novokov and D'Anjou shook hands, followed by Novokov and Hanson. Finally Presidents Hanson and D'Anjou shook hands and all three men smiled as they took their seats. Steve quickly returned to his table.\n\n\"Ladies and gentlemen,\" began President Novokov in Russian, \"France, America, and Russia have reached a basic agreement. It will be the foundation for these trade talks. It will involve France releasing Sergei Smirnoff, America selling France natural gas at a fixed price for ten years, and Russia and the other Eastern European Nations engaging in greater trade with the West. Details will be forthcoming.\" \n\nAs those in attendance clapped loudly, Novokov spoke briefly to an assistant who in turn hurried over to the orchestra with instructions. As the applause died down, the orchestra began playing. Indentifying the song immediately, Gwen looked toward the Russian leader. He smiled and nodded to her.\n\n\"Steve, that's our cue,\" prompted Gwen as she quickly stood, having no intentions of insulting Novokov by refusing his implied request. \"Unless you'd rather dance with a blonde Ukrainian, or a Russian red head.\" \n\n\"There's only one girl for me,\" rejoined Steve as he swept Gwen into his arms. \"She's 'The Lady in Red' and I've never seen her look as beautiful as she does tonight!\"\n\nSteve and Gwen had the floor to themselves as they once again performed their signature dance. The other guests rose and stood around the dance floor, enjoying the opportunity to see the famous couple perform the dance that many had seen only on video.\n\nThe rest of the evening was a blur of congratulatory comments and claps on the back for Steve and Gwen. They danced every dance with as many different people, from as many nations as they could. Steve managed to work in a dance with is Aunt Janice. \n\n\"I have to tell you that this is a bitter-sweet moment for your grandparents and me. We're so proud of you we could burst, but it makes us even more ashamed of how your mother was treated by her own family. To think she actually told you that she was an orphan. I wish so much that she could be here to share in your success. I wish I had known your father. He must have been a very special man to win Jen's heart and to raise a son like you.\" \n\n\"It's difficult for me to hold you, to dance with you, as all I can see is my mother,\" admitted Steve. \"It hurts that Mom and Dad died, but it helps a lot that I've found family of my own. I would've been too stubborn to accept you if it hadn't been for Gwen. She pretty much insisted that you're family and family is everything. I realize now that she's right. Gwen is light years ahead of me in a lot of things. She's on a full scholarship to Stanford, and she's going to be a surgeon.\"\n\n\"You've every right to be extremely proud of her. Jen would have loved her. I'm sure of that. She's an amazing young woman and the only match possible for you. Her love for you flows from her. It's a beautiful thing to see.\"\n\nSteve danced once more with Anna while Gwen partnered with Vlad Novokov. When the last dance began, Steve moved to take Gwen in his arms. He held her tightly as she whispered in his ear.\n\n\"It looks like I'm going to make love to some sort of international phenomena tonight. He's been known to brow beat the world's most powerful men. What chance will a little girl like me have with him in bed? What unspeakable things will he do to me? How can a little girl ever survive a night with a man like that?\"\n\n\"He'll just have to put a sock in her mouth so she doesn't keep everyone in the hotel up all night,\" suggested Steve.\n\n\"A sock? Is that what you said? I think you misspoke. It won't be a sock, although it sounds a lot like sock,\" whispered Gwen in a low sultry voice. \"I want you to make love to me every way possible tonight. I'm so pumped up from this trip and the things I've seen and done, I can hardly stand it. I won't tell you 'no' regardless of what you want from me. I'll give you all I am, and all I have, gladly.\"\n\n\"You're boyfriend is blushing,\" laughed Paula as she and Ted danced close to Gwen and Steve. \"What exactly are you whispering in his ear? I bet I can guess. I just gave your father a promise for tonight.\"\n\n\"That's too much information, Mom,\" complained Gwen before she broke into a big grin. \"Besides, I doubt you ever even tried some of the things I've promised my guy just now. They're probably illegal in most countries, including the U.S.\"\n\n\"I'd have to say that's way too much information!\" responded Ted with a crooked grin. \"Since when do mother and daughter compare and compete in this manner? That's probably what's against the law.\"\n\n\"Really, Dad? From what I've heard through the grapevine, and the thin walls of the hotel, you're benefiting from the competitions and comparisons. I just hope poor Kate has earplugs tonight. She and Jen are between your room and Lisa's. Think about how she'll suffer tonight.\"\n\nTed replied, \"Maybe your mom will need a sock stuffed...\"\n\n\"Not you, too!\" laughed Gwen heartily. \"Did you say 'sock', or did I not hear you correctly, Dad? Now you know why Steve was blushing. Look at you, Dad! You too, Mom!\" \n\nIt was a happy group that returned to the hotel well after midnight. Kate implored all of her neighbors in rooms within hearing distance to keep the noise to a minimum. Everyone laughed at her plea and promised to be careful.\n\nGwen was like a tigress all night. She couldn't help but think about how she and Steve would soon be separated. She was determined to make certain he had plenty of reasons to remember her when they were apart. Steve did his best to sate her, but it became apparent that her goal was to use him up. She wanted everything he had to give, and he gave it to her quite willingly.\n\nThey had all agreed to meet for a late breakfast on their last day full day in Moscow. By 10 AM, Jordan, Charlie, Lisa, Jason, Charlotte, Billy, Ted, and Paula had not yet made an appearance.\n\n\"You were so worried about being late, but look around. Most of my family is missing, as well as Jordan, Charlie, Charlotte and Billy. We could have slept a little longer,\" pointed out an exhausted Gwen to Steve.\n\n\"Jen and I were up half the night,\" complained Kate. \"It's so embarrassing when your sister's screams of passion are drowned out by your mother's! Charlotte sounds like a mountain lion when she gets going. I wonder if Billy's all scratched up. I'm just glad you and Steve were moved up a couple of floors.\"\n\nJust as Kate finished her complaint, she noticed Lisa and Paula standing behind her chair. Both were blushing furiously. Ted and Jason were just behind them, but they were red from laughing so hard.\n\nLater that morning, Amber interviewed Jordan, Gwen, and Paula. The rest of the group sat off to the side and watched. Amber had asked for the interview and explained her reasons.\n\n\"My boss emailed me that our old friend Hardy was implying that I was a stooge for you guys. He's pissed because I was backstage at the concert, with you during that awful bombing, and had a ring side seat to a state dinner that's made all kinds of news around the world today. I have video of a lot of stuff the pool reporter missed. My station has been playing parts of it all day.\n\n\"Hardy says I never ask tough questions and you just keep me around to report what you want people to hear.\"\n\nWhy would you worry about that jerk?\" asked Charlotte. \"Everyone knows he's jealous of your close relationship with Jordan, Steve, and Gwen. If he wasn't such a jerk, he might be getting some of these stories, too.\"\n\n\"That isn't even close,\" responded Steve. \"Hardy's right that we give Amber special treatment. She deserves it. She reported on our hospital project when no one else cared. She was at Emerson River that day. She was at the hospital and mall when the terrorists attacked. She was the only reporter at our graduation. It turned out that a lot of bad stuff happened, but she was there and Hardly could have been, but wasn't.\n\n\"If you want to ask me in an interview, I'll tell the world why I like you, Amber, and why you have carte blanche with us,\" promised Steve.\n\n\"That's exactly what I don't want,\" replied Amber. \"I love you guys and I worry that my feelings have clouded my reporting objectivity. You've done wonders for my career, but have I become a 'yes woman' to you and Gwen?\"\n\n\"Let's sit down and do a hard hitting interview,\" suggested Gwen. \"Steve and I will give you permission to ask anything you want.\" \n\n\"I was thinking more along the lines of interviewing Jordan, Paula, and you, Gwen. Will you let me ask you tough questions and use the answers if I feel they are interesting enough?\"\n\nThe three women agreed to the request. Amber prepared her camera and sat the women on a sofa facing her.\n\n\"Paula, let's start with you. You know your 18 year old daughter is sleeping with her boyfriend. In fact, it's with your permission and blessing. How do you justify that? Can Gwen truly be a role model for young women and girls when she is single and having sex?\"\n\n\"Okay! That's a tough question, but fair enough. My daughter is 18 and sleeps with an 18 year old man. He is not a boy. Why did her father and I allow it? I won't bore you with adjectives I can use in describing her boyfriend. Everyone knows who he is, and what he's accomplished.\n\n\"I guess the main reason was that Gwen came to us and asked. She gave us her reasons, and described her feelings. One of her greatest fears was that Steve would be killed, or badly hurt before she ever had the pleasure of having sex with him. Why did she feel that way? Well, she'd brought him home from the hospital three times in a period of three months. Each time, he came close to dying while saving others. She felt that since he was the kind of man that he is, he could perish at any time. Since his heroic actions had saved all three of my daughters, and many others, her father and I considered her request. After a lot of soul searching and discussion, we decided that they were mature enough, in love enough, and strong enough to be intimate. We've never had reason to doubt that decision.\"\n\n\"Thanks, Paula. Now to Jordan. You had a reputation as a problem child. Are you truly reformed? How can the public be sure that you are who you now claim to be, and not just a poser of some kind?\" asked Amber.\n\n\"I don't really claim to be anything, except a person that was given a second chance in life. Your viewers will believe what they choose to believe. I can't control that. That's a lesson that I've learned. I can't control anyone but myself. For a long time, I wasn't even doing that.\n\n\"When my stint in rehab was about done, Clyde Davis told me that I was down to my last chance. My next stop was the hospital, jail, or the morgue if I didn't straighten out and fly right. I realized that it was true, but I had no idea how to straighten out.\n\n\"He told me about a couple of kids my age that he knew. In fact, he was promoting them. He told me that he thought they'd be a good influence on me. I'd been in rehab without TV or radio and hadn't even heard of 'The Lady in Red' or the 'Heroine of the Emerson River Rescue'. It was only after Clyde talked Gwen's family into taking me in on a trial basis that Clyde had me watch videos of them.\n\n\"Later I found out that the Andersons really didn't want to take me in. They were concerned, and rightly so, that I would contaminate their wonderful family with my penchant for drugs, tobacco, alcohol, sex, and foul language. Steve actually talked them into accepting me on a trial basis. He did wash my mouth out with soap the first day. I was tricked into drinking at a party another time. That's when the now famous pictures of me topless in Steve's arms came into being. He actually washed the vomit out of my hair and put me to bed, alone.\n\n\"The short answer to your question is that I now know who I am, and what I am. I have a wonderful support group. I love Gwen and Steve more than I ever thought I'd be able to love anyone or anything. On top of that, I've fallen in love with a great guy. Charlie Burns is my lover, my best friend, and with him, Gwen, and Steve behind me, I don't feel like I have to justify anything to anyone else. They make me want to be a better person than I am.\"\n\n\"Gwen, this fall you're going to Stanford, which of course is in California. Steve will be on the East coast at the Naval Academy. Is it possible for a woman as beautiful, as famous, as talented, and as sought after as you are, to remain faithful? Can a man like Steve be faithful for so long a period of time? How can your romance possibly survive?\"\n\n\"I have no answer. I ask myself that very question every day. It sounds trite to say that our love is stronger, better, or more special than anyone else's. I will only say this. I love Steve with all of my heart, with every fiber of my being. I will always love him. Your viewers will have to wait and see how it all plays out. Time is the test, and time will be the judge.\" \n\n\"One more question,\" continued Amber. \"You've done some risqu\u00e9 scenes in a movie yet to be released. You've just appeared in 'Maxim', showing a lot of cleavage and flesh. Do you feel that you can be considered a role model for young women and girls?\"\n\n\"I never tried to be a role model for anyone. I always try to do what I believe is the right thing. I'm not advocating other girls should do everything, or anything, that I've done. I would suggest that girls try to be responsible and to work toward positive goals. I graduated top in my class and have a full academic scholarship to Stanford. I'm very proud of that. I guess I'm most proud of my relationships. I have the best boyfriend in the world, the best sisters and parents in the world, and the best friends in the world. It isn't mine to decide if I'm a proper role model. That's something for the court of public opinion to consider.\" ",
        "As Gwen finished her sentence, she heard a gasp from her mother and looked to see why. Entering the room was Vlad, Anna, and Vlad's father, President Novokov!\n\nSteve and Jason stood immediately. The others quickly followed suit. Vlad's father looked at the assembled group and then nodded at Jason as he spoke to Steve in Russian.\n\n\"He is military?\" was the simple question.\n\n\"West Point, Sir. He's a newly commissioned officer in the US Army,\" responded Steve.\n\nNext he looked at Paula. \"This is the mother?\"\n\n\"Yes, sir,\" replied Steve. \"These are her daughters, Lisa, Kate, and Gwen. Next to her is her husband, Ted.\"\n\nNovokov stepped close to Paula, took her hand, and patted it as he spoke in broken English. \"Only such a beautiful woman could produce such beautiful daughters.\"\n\nThen he nodded for Steve to follow him as he walked to a quiet corner of the room. \"I want to thank you for your efforts in bringing about a resolution with the French. I also wish to invite you and your two lady friends and the musicians you work with to perform at the opening ceremony of our Winter Olympics. This is a great honor!\"\n\n\"Sir, I will be attending the Naval Academy. My time is not my own. I cannot guarantee that I will be permitted to come back to Russia at that time, as much as I would love to do so.\"\n\n\"I understand. I also understand that President Hanson is your superior officer. I have spoken to him about this. He assures me that the U.S. Navy will allow you to perform.\"\n\n\"Sir, we are greatly honored by this opportunity. Could I quickly ask my friends if they will be able to attend?\" asked Steve.\n\nOnce again, President Novokov nodded his assent. Steve hurried over to his friends. \"Charlie, Jordan, and Gwen! President Novokov has asked us to perform at the opening of the Winter Olympics. He's already spoken to President Hanson about the Navy letting me attend. What do you guys say? He's waiting for your answer!\"\n\n\"Are you kidding? The band votes 'YES'. What an opportunity!\" responded Charlie immediately.\n\n\"Count me in!\" insisted Jordan. \"I love this country, and I love being here with Charlie and you guys!\"\n\n\"That would mean that we'd be together again for a few days!\" grinned Gwen. \"Deal me in!\"\n\n\"My friends have given your kind invitation a most enthusiastically positive response,\" reported Steve to Novokov. \"We are all very fond of Russia and your hospitality is superb. We will be delighted to perform at the opening ceremonies!\"\n\nPresident Novokov had heard the gleeful responses and beamed his pleasure. He shook Steve's hand, waved to everyone else and left the room with Vlad and Anna trailing him.\n\n\"Luckily, my camera was on and I caught that entire exchange. Bill Hardy, eat your heart out!\" laughed Amber. \"I doubt that there are very many people that receive a personal invitation from President Novokov!\"\n\nThe women of the group wanted to spend the afternoon shopping for mementos and souvenirs. The men decided to relax, shoot some pool, and swap lies. The ladies returned late afternoon and the entire gang headed for the dining room. They were just seated when President D'Anjou entered with his wife and daughter. He walked directly toward Steve and Gwen. Once again, Steve and Jason were the first ones on their feet.\n\n\"I will not keep you from your dinner. We are flying out shortly and I wanted to thank you both for your efforts last evening. It is a very good agreement. We didn't want that Russian spy. He was an amateur. We needed a guaranteed energy source and we now have it,\" stated D'Anjou in French. \"You and your friends will always be welcome in France. Please stop in and visit us again.\"\n\nPresident D'Anjou shook Steve's hand and hugged Gwen. Michelle hugged Steve extra hard and then quickly hugged Gwen. After they left, Kate began acting like she was looking for something.\n\n\"I wonder where President Hanson is. Don't all world leaders stop in to speak to Steve and Gwen? He must be around here someplace,\" joked Kate.\n\n\"If you must know, he flew back to the States this morning,\" chuckled Charlotte. \"I guess we won't get to see that particular world leader while we're having dessert. Two of three ain't bad!\" \n\nThat night, Gwen was once again insatiable. She gave Steve everything she could think of, in every position possible. By midnight, he was totally used up. He did manage to wake Gwen up the next morning by gently nibbling on her breasts. It wasn't long before Gwen rode him to the finish line again. They had to rush to be ready for the bus taking them to the airport.\n\nThe long flight saw most of the group napping on and off. They landed in Washington in the early afternoon, which totally confused their jet lagged bodies. The plan was to spend one night at the same hotel they had used when they attended the state dinner months earlier. Steve would be reporting for Induction day the following morning.\n\nWhen they reached the hotel to check in, Steve and Gwen were told they had an important message. \"Kate should be pleased,\" observed Gwen as she read the message. \"President Hanson requests our presence at an informal dinner at the white house this evening. This invitation is for the entire entourage.\"\n\nSteve's grandparents were staying at the hotel so they could be present when Steve reported for Induction Day. Beatrice was once again gob smacked. \n\n\"I find this all incredible. I've lived in Virginia my entire life and have never been invited to the White House. I spent some time with my grandson and his beautiful girlfriend and I meet the most influential men in the world! It's truly amazing.\"\n\nThat evening, Steve and Gwen, along with family and friends, were seated at a large oak table, dining with the President of the United States and a handful of VIP's.\n\n\"As you all know, I promised President Novokov that Steve would be allowed to perform with his friends at the opening ceremonies of the Olympics. That request has caused me to consider the value you young people hold for your country.\n\n\"Steve, you'll be under my command, as you know. The president of Stanford was in my cabinet for a full year, so I'm sure she'll be quite cooperative in freeing Gwen's time. Miss Jordan, I really don't have much influence at your state school, but I understand that Governor O'Leary is a friend of you all, so getting some time off from your state school should not be an issue.\n\n\"I would very much like to be able to have you kids be ambassadors of good will for America. I have no specific plans right now, but things always come up where your talents would be greatly appreciated and utilized. You would not get paid, but your expenses would be covered.\n\n\"Would the three of you, along with your band if possible and if needed, be willing to travel, perform, speak, shake hands, or just do whatever is required at the time in the name of the United States? It could be at funerals, weddings, dinners, any place we feel you could help our cause. Want to think it over for a day or two?\"\n\nSteve looked at Gwen briefly and then responded. \"Gwen and I would be delighted to help any way you want, Sir. It would allow us opportunities to see each other as well as do our patriotic best for our country.\"\n\n\"I would be proud to help, Sir, but you may not want me,\" cautioned Jordan. \"I've had problems with drugs and alcohol, as well as promiscuity. I just appeared topless in a film that's going to be released on Labor Day. I'm not a very good representative for you, or our country.\"\n\n\"Steve! Sit back down, please,\" demanded the president as Steve had risen so he could talk sternly to Jordan. \"Miss Quick, I respectfully disagree. You represent much of the best of this country. You struggled and fell, but you pulled yourself back up and worked through it. That's what makes this country great! I'm sure fans, most of whom are quite young, will not be concerned about topless scenes in a movie. That's what actresses do. I only wish we had more young people like you. I would very much like to have you be one of my representatives. Are you willing to do this for your country?\"\n\n\"Yes, Sir!\" responded Jordan as tears streaked down her cheeks. \"I won't let you down. I promise.\"\n\n\"Then it's settled. Enjoy your dinner. While everyone is eating, I'll tell you a story about how a young couple negotiated an international trade agreement and helped resolve an international dispute. It'll make a great movie some day.\"\n\nWhen they returned to the hotel, Gwen and Steve had become very quiet. It was the last night that Gwen and Steve would be spending together for the foreseeable future. When it was suggested that everyone visit the lounge, Steve and Gwen begged off.\n\n\"We're really tired and, to be honest, we want to spend some time alone with each other,\" admitted Gwen as they said 'goodnight' to everyone and headed for their room. They made love, and then they talked.\n\n\"I'm excited that we may be sent together to different places by the government. If it happens even a couple of times, I'll feel very lucky. I love you so much that it scares me sometimes,\" admitted Gwen as she snuggled against Steve. \"Life at the Academy should be a lot easier for you when everyone knows that President Hanson is one of your supporters. No one would dare give you a hard time.\"\n\n\"That's exactly wrong,\" countered Steve. \"The other guys, the officers, even the janitors, will all test me, or resent me, or both. Prima donnas don't last long in the service. I'll have to take everything they dish out and smile. 'Special treatment' will be an extra five laps around the track, another twenty push-ups, clean up detail, being asked to volunteer for weekend duty; all sorts of things like that. The other guys will think I'm taking advantage of my situation and resent it. Officers will make sure they don't favor me to the point where they are harder on me. It's all normal and natural, but I'm not fooling myself. I'll have to work harder and do better than the rest. That's incentive for me.\"\n\n\"I never thought of it like that. You're so perceptive about men, about how they think and how to interact with other men. You always know when to joke and when to be serious. I'm glad you understand the situation and won't be surprised by the reception the famous Steve Hammer receives. You're way better than the rest. I know you'll do great,\" sighed Gwen as she ran her hand over Steve's chest.\n\nIt was midmorning when the entire entourage arrived at the Academy. Steve was just one of hundreds of young men and women reporting that morning. There were small groups of people saying their goodbyes scattered around the entrance. No one had as many people as Steve had to bid him farewell. Steve was directed to stand a short distance away from the group, so their farewells would be more private.\n\n\"I get to be first,\" declared Kate as she wrapped her arms around Steve and kissed him long and hard on the lips. \"I really love you. You're the best thing that's ever happened to me, my sister, and my family. Be careful and email me all the time, if they don't let you call me. I want pictures and stories about what you're doing. Remember when I'm 18, I'll be visiting you and showing you my girls, just so you remember me and because I want to. Take care!\"\n\nJen was next. She simply hugged Steve hard, before she finally spoke. \"Remember that we're not too far from here. If you ever need anything, call me. Email me when you can and maybe I'll get to stop in and visit now and then. I'm so proud of you and that you're my cousin!\"\n\nJen walked away. Her mother walked up to Steve next and hugged him before speaking softly. \"How proud your mother would be right now. We failed her, but we're here for you now. Please give us the chance to be a part of your life. If you need anything, let us know. You're a wonderful young man.\"\n\n\"I am at a loss for words,\" sobbed Beatrice as she embraced Steve. \"You and Gwen are so much better than I ever was. It makes me ashamed, but filled with purpose. I'll improve. Thanks for allowing a bitter old lady into your life.\"\n\n\"Son, I couldn't be more proud of you,\" stated William Patterson simply. \"Meeting you and seeing how you conduct yourself has been a lesson for me. I think I would have liked your father a great deal. It takes a real man to raise a son with your qualities. Good luck!\"\n\nTed was next. He simply shook Steve's hand and patted him on the shoulder. The two men looked at each other briefly and nodded. Ted turned and walked back to the group. Then Jason shook his hand and kidded about how fast the four years would go. Billy did pretty much the same, while Charlotte was more demonstrative.\n\n\"I'll let you know if Gwen is having any problems. She's real smart, but sometimes she needs you to help her see her way. I'm your friend. I know how you value friendship and loyalty and I'll do my part. Good luck!\" managed Charlotte before she kissed Steve gently on the lips, wiped away a tear and went back by Billy.\n\nSuddenly Jordan was in his arms and crying. \"I knew I wouldn't handle this well. You're the first man I ever loved. You saved me and made me whole. You gave me my life, and introduced me to Charlie. I'll miss you so much, but I'll visit when I can and I expect you to write, email, and call me all the time.\"\n\nCharlie just shook Steve's hand and wished him well. \"You're the man. You make it all work. You saved Jordan for me. I'll always have your back.\"\n\nBeing petite, Ashley leaped into Steve's arms and kissed him hard on the lips. \"Now everyone knows how I feel about you, if they didn't already. You saved Becky and me. If you ever need anything I can give you, just ask. We're in this for life. You know that, right? You and Gwen will always be in my heart and in my life.\"\n\nSteve was surprised when Naomi's mother appeared in front of him next and wrapped her arms around him. \"Keep an eye on my girl. She's really smart, but not always too good with people. She's a loyal friend. She'll watch your back and I know you'll have hers. Let me know if she has any problems.\"\n\nLisa was next. \"Steve, you've helped me and my family beyond anything we could have dreamed. You're the first man I've ever loved, and I always will. We're bound together for life. Our kids will be best friends. You and Jason will be best buds. Gwen is a lucky girl. I love you both!\" sobbed Lisa as she kissed Steve long and hard.\n\n\"It's my turn,\" managed Paula through her tears. \"Work hard, be good. Know that I love you, maybe more than I should. If you ever need anything from me, just ask. I'll miss you so much!\"\n\nPaula kissed Steve longer than the mother of a girlfriend normally would. She was just releasing him when Gwen whispered in her ear.\n\n\"Mom! Everyone's watching. Besides, it's my turn!\"\n\nPaula quickly took Gwen into her arms and hugged her. \"I couldn't help it, Sweetheart. I'll leave you two alone now.\"\n\n\"We said it all last night, about five times,\" chuckled Gwen to her mother. \"This isn't 'goodbye'. It's just the part of our lives together that we have to be apart. Make me proud, Sailor!\"\n\nWith that, Gwen kissed Steve. A minute later she was still kissing him. Tired of waiting, the rest of the group gathered around the two and teased them mercilessly. Gwen finally pulled back and smiled at her family and friends. \n\n\"I had to erase his memory of all those other kisses,\" grinned Gwen. \"That'll have to hold him until we get together again. Naomi, take this guy in there, but keep an eye on him. If he has any problems, let me know.\"\n\nNaomi smiled as she took Steve's hand. The two plebes walked together into the next phase of their lives. \n\nThus ends Book One of Lady in Red. Book Two is in the very early stages. It will feature blood thirsty pirates, football, honest politicians, SEALs, doctors, and many heroic deeds. It will be difficult to believe, so get used to it. Thanks to all that have read and enjoyed Book One. I cannot express the pleasure I've taken from the emails I've received regarding this story. Writers are nothing without readers. I thank you all."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "russia",
        "france",
        "presidents",
        "terrorist",
        "sochi",
        "concert",
        "state dinner",
        "movie",
        "love scenes",
        "induction day"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-ch-32"
}