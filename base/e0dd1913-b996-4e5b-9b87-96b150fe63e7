{
    "title": "Anna's Friend Needs Cock Training",
    "pages": [
        "Thursday\n\nJack walked up the pathway, enjoying the warm evening sun on his face, rang the doorbell and waited.\n\nThe drive over had been pleasant with the windows down and the cool evening breeze washing over him. He had managed to sneak away from work early today and treated himself to a short nap and then a refreshing shower at home, before making his way over to Anna's.\n\nHe looked up at her door and it reminded him of the first time he came here. It was raining then and his life had changed since that day. He was experiencing the most erotic things he could ever imagine and his orgasms were so much more intense than ever before. \n\nSince Anna had had entered his life, he had been faced with the sexiest sights that only a man could dream of. He loved being with her. Spending time with her brought out the best in both of them and their sexuality.\n\nHere he was again. No rain this time. He knocked and waited at the door.\n\nThen he heard her. Anna unlatched the door and swung it open.\n\nShe stood with her arm holding the door wide in the doorway. She wore a black and white dress with the length stopping midway at the top of her thighs. She had on transparent black tights that covered her shapely legs and she had on her flat shoes. The top of the dress had a built in bodice and created cups for her breasts. It created a small show of cleavage forcing her breasts together. She wore her brown wavy hair down which fell down across her shoulders and across her beautiful face. Her brown eyes glistened and lit up when she saw him.\n\n\"Hey you,\" she said whilst smiling, \"how was your early finish? I saw you sneaking off in the day.\"\n\n\"I needed an early finish today. But,\" Jack responded, \"I'm glad I did.\"\n\nAnna knew Jack worked too hard for very little appreciation and she could see what a difference a half day finish had done to him. He looked refreshed and bright.\n\n\"I'm glad you did too,\" she said earnestly, \"but, I have bad news, sorry.\"\n\nJack looked at her.\n\n\"My friend Daisy is here. She just turned up Jack, I'm sorry. Do you remember I mentioned her before?\"\n\nJack sighed inwardly and hid his disappointment well. He remembered who Daisy was: her friend that failed to hold onto a man. \"Of course, I remember,\" he smiled and lightly said, \"she was upset during your week away, wasn't she?\"\n\nAnna smiled. Jack was meticulous with details (a habit from his job) she knew he would easily remember Daisy. \"Yes,\" she smiled, \"she's inside. Come in and meet her.\"\n\n\"Are you sure? Do you want some girly time? I don't mind leaving it tonight,\" he questioned.\n\n\"No, it's fine. She's fine. Come on.\" Anna moved away and started inside the building.\n\nHe followed her inside and carefully evaluated her arse. Flat shoes created a different shape to her legs. Still as shapely but less focus on her calves. Her thighs intrigued him in the clothes she was wearing. He was mesmerised as he watched her arse and thighs in that dress.\n\nShe entered the kitchen and Daisy was sat at one of the high stools drinking a hot tea.\n\nDaisy had long black hair. It shaped and framed an extremely pretty face. Her eyes were very striking. They were big and brown. She opened them wide and Jack could see the whites of her eyes framing a fine pair of deep brown coloured eyes. Daisy was very tanned, she looked like she came from somewhere in the Mediterranean. She had a pretty, petite, fawn like face. Jack thought she looked very innocent.\n\nHe looked at her body and changed his mind about her innocence instantly. She wore a white, low cut vest top with thin straps. One of the straps was tucked over her shoulder and the other had dropped down just off her shoulder. Her breasts were of a similar size to Anna's but Daisy clearly had no bra on today because he could make out the faint outline of her nipples. Her breasts pushed tightly against the cotton material of the vest and showed of her thin waist.\n\nShe wore a short flowery skirt. She had her legs crossed and the skirt had ridden up so Jack could see the majority her naked tanned thigh. Her calves were also on show and she was bare foot.\n\nDaisy spun the stool around to meet Jack and he thought he could see a dark flash of her panties up her skirt. She uncrossed her legs and stepped down from the high stool.\n\n\"You must be Jack,\" Daisy said and stepped towards him, \"I'm Daisy.\"\n\nJack smiled and Daisy raised her hand. He took her delicate hand in his and he realised how dainty and petite this girl was as he shook it. She looked a little younger than Anna but they were university friends so they must have been of a similar age.\n\n\"Nice to meet you,\" Jack said politely, \"I'm sorry to hear about your boyfriend.\"\n\n\"It's fine,\" Daisy replied and she smiled, \"isn't it Anna?\"\n\nAnna looked up from making dinner, \"his loss babe. This is almost ready. I hope you are both hungry.\"\n\nThe three of them ate dinner and drank a healthy amount of wine. They chatted and the evening crept onwards. Jack was feeling really relaxed and could feel his tongue start to loosen.\n\n\"How long have you know Anna then, Daisy?\" Jack queried.\n\n\"We met at uni,\" she replied, \"and the group of us have remained friends ever since.\"\n\n\"We've talked you through some tough times, haven't we?\" Anna tucked a stray strand of hair behind her ear as she looked at Daisy.\n\nDaisy nodded and smiled.\n\n\"But why,\" Jack was in full wine flow now, \"why can't you keep a man?\"\n\nDaisy looked down, embarrassed. She blushed.\n\nJack should have felt guilty about asking the question but the wine had dulled his empathy level.\n\nAnna stepped in, \"Daisy here, is very inexperienced with men, aren't you?\"\n\nDaisy raised her big, sexy eyes to look at Jack's reaction and nodded.\n\n\"We've tried to tell her how to do it properly but...well...I don't know. What are we going to do with you, eh?\" Anna stroked Daisy's petite shoulder.\n\n\"I've never been able to make a man have an orgasm,\" Daisy sheepishly said, \"they always have to use their own hands to you know...cum.\" She giggled at this last statement.\n\nJack was surprised at how fast the conversation had moved into this zone.\n\n\"Look, wait here, I have something you could have a look at.\" Anna calmly instructed as she got up and left the dinner table.\n\nInhibitions clearly gone, Jack continued the questioning, \"You are obviously very attractive so what is it you're getting wrong?\"\n\n\"Well,\" Daisy replied coyly, \"maybe it's the way I touch a man's cock. Or even how I grip a cock. Or, maybe, I can't keep up the stamina on a cock.\" Every time she said cock her eyes went to Jack's face. He loved the way she said cock. Almost emphasising the hard 'k' sound at the beginning and the end of the word. His face must have flushed because she smiled.\n\n\"Or what I say, or how I look, but they never cum with me.\" She edged forward in her seat and Jack could see down her vest top. He could clearly see the shape of her breasts and her sexy cleavage. His eyes inspected further to see the start of one of her brown nipples.\n\n\"Normally,\" she continued, \"we'll have a fumble...you know...and...then the next day, I'm single AGAIN.\"\n\nJack's mind instantly thought of all the things that this young nymph could possibly be doing wrong: holding the cock too tight, not tight enough. 'It could be anything,' he thought to himself. She was clearly sexy enough, so something was going wrong somewhere in the bedroom.\n\nAnna re-entered the room with a small shoebox in hand. She placed it down on the table between Jack and Daisy. Then, Anna rejoined them at the table and sat down next to her friend. Daisy moved back into her seat and looked carefully at the box.\n\n\"Daisy,\" Anna spoke gently, \"Jack and I are going to help you and fix this for good today. This,\" she gestured towards the box, \"will help.\"\n\nDaisy stared at the box. Jack, too was staring at the box. He hadn't agreed anything with Anna, this was all brand new information to him.\n\n\"Now,\" Anna looked carefully at Jack and then back to Daisy, \"don't be embarrassed about this.\"\n\nAnna lifted the box lid slowly. There was a tense silence in the room. She eased the lid onto the table and she watched Daisy closely as the tanned beauty peered inside.\n\nJack peered inside. \n\nHe saw the fake cock that Anna had bought a few weeks ago. \n\nHis cock stirred. \n\nDaisy looked in and giggled.\n\n\"Now, don't worry,\" Anna reassured her, \"it won't bite!\" \n\nAnna reached inside the box and closed her hand around the fake cock. She lifted it gently and then slid the box to the side of the table. Anna used the suction cup at the end of the fake cock to stick it to the table. It wobbled a little but stood, erect and pointed towards the sky.\n\nDaisy's eyes widened with fascination. She stole a look at Jack who was watching these two beauties with the fake cock between them. \n\n\"Daisy,\" Anna whispered, \"I want you to show Jack and me how you handle a big cock.\"\n\nDaisy looked at Jack and smiled, she was a little embarrassed by it all but looked keen to grip the cock. \n\nJack watched as Daisy brought her hand up and grabbed the cock by its base, \"this is how I hold it.\" Daisy said.\n\nAnna gently removed Daisy's hand and shook her head. \"You need to start slow and gentle,\" Anna gently pressed her fingers against the cock head and circled the tip, \"like this. Right? Jack? This is how to do it. Do men like this Jack?\" Anna looked up at Jack as he watched her expert fingers circle the head of the cock.\n\nJack gulped and nodded. His cock was growing hard.\n\nThen, whilst looking directly at Jack, Anna moved the palm of her hand over the head of the cock and stroked down the shaft and then slowly back up. \"Then you need a gentle firm grip, that's right Jack isn't it? And slowly move your hand down the shaft and then back up. This is good isn't it Jack,\" she queried. Anna then removed her hand and turned to Daisy, \"your turn,\" she whispered.\n\nDaisy looked wide eyed at the fake cock in front of her. Jack thought again at how sexy her eyes were. Daisy's hand reached up - slowly this time - and rubbed her hand over the head of the cock. She gasped a little, \"wow, it's so life like,\" she whispered. Daisy used her palm to rub against the bottom of the head. She circled a few times, \"like this?\" she asked breathlessly.\n\nAnna nodded and looked over at Jack. He looked into her eyes and she had that naughty look. Her eyes had grown at the sight in front of her and he could also tell she was aroused.\n\nDaisy continued to caress the fake cock with her, now delicate, fingers. She was transfixed with the sex toy. She lowered her hand around the shaft and gripped it. She squeezed and the head of the cock pulsed. \n\nJack felt his own cock pulse as she did that.\n\nSuddenly Daisy broke the silence, \"how do I stroke it? Like this?\"\n\nDaisy's grip loosened and she stroked to the bottom of the cock all the way to the top of the head at a quick pace. She did this movement three times. Very quickly. Very little friction. It was very arousing for Jack. \n\n\"Stop,\" Anna said, \"that's too quick. You have to stroke it slowly.\"\n\nDaisy slowed down instantly. \"Wow,\" she said, \"I can feel the veins and the ridge of the head of it now. Like this?\"\n\nHer hand was moving much slower now and her wrist was loosening and helping her to get into it. She was slowly stroking up and down the shaft. Her hand moving over the ridge of the head on the fake cock.\n\nJack shifted in his seat to get a better look and to divert his hard cock up to the front of his trousers. \n\nAnna saw him and knew he was aroused. \"What do you think Jack? Do you think she is getting better at stroking this big cock?\" Anna looked directly at Jack and ignored Daisy's expert hand, \"she's stroking the shaft down and now back up. Do you think this cock would cum like that? All over her pretty face?\"\n\nDaisy gasped at that comment and smiled. \n\n\"Yes,\" Anna continued, \"I bet a cock would cum if you stroked it like that Daisy. You would feel it pulse and the spurt out all over your face. It would dribble down your cheeks and into your mouth, wouldn't it Jack?\"\n\nJack closed his eyes for a brief second to picture that scene. \n\n\"Suck it Daisy. I want to see your lips around that big cock.\" Anna demanded.\n\nDaisy looked up at Jack and then cheekily along to Anna. She moved up onto her knees whilst still sat on the chair to get above the long cock. Her head lowered down to the head of the cock and she grabbed the head of it with her hand. Then she stopped.\n\n\"I...I... don't know where to start\" she said.\n\nAnna stood up and then groped the fake cock with her hand, \"I'll show you,\" she said. Anna lowered her head down this time and Jack saw her breasts bulge and cleavage thanks to the bodice she had on. She looked directly at Jack, right into his eyes and she took the head of the cock in her mouth, never taking her eyes off Jack.\n\nHe moaned a little too loudly. He couldn't help it: his cock was rock hard and pushing against his trousers.\n\nDaisy looked at him when he moaned and she giggled.\n\nAnna's mouth followed over the ridge of the cockhead down the shaft and stopped. Jack saw her tongue dash out and lick the base of the shaft. Then she slowly sucked the cock back up to the head. She pursed her lips on the tip of the cock and her spit had gathered as she slowly removed her mouth.\n\n\"You try Daisy. Start with the head. Use your tongue to circle the tip to start off,\" Anna instructed.\n\nDaisy lowered her head once more towards the cock. She licked the head, already wet from Anna's attention. Then her tongue swirled round the head of the cock, \"like this?\" Daisy questioned whilst licking.\n\n\"Yes,\" Anna said, \"pay attention the head. Men love having the head of their cock teased and sucked. Lick just here...\" Anna stooped down to join Daisy at the head of the cock and started to lick the base of the head. Daisy saw and joined her there, \"like this?\" and started licking.\n\nThese two sexy women were now both licking the same point of the fake cock. Anna was watching Jack's reaction throughout with a smile on her face. She then looked across at Daisy and, whilst she was licking the cock, licked the top of Daisy's tongue. Her tongue flicked along Daisy's tongue and Daisy closed her eyes as she felt it. She closed her eyes and let that feeling wash over her.\n\n\"Suck that cock now Daisy, as far as you can go,\" Anna instructed.\n\nDaisy lifted her head to the tip of the cock and slowly placed it in her mouth. She slowly sucked down the cock and then back up, leaving a wet trail of her spit all along the shaft. She started to move her head up and down keeping the tight suction up. \n\nJack could see right down her vest at this point. Her breasts hanging free and swinging in the loose fitting material. Her nipples were very erect and could be seen through her vest. He caught glimpses of them as she lowered her head.\n\nAnna moved directly behind this sexy young woman. She stared directly into Jack's eyes, \"Yes Daisy...mmm...milk that cock with that sexy mouth.\" \n\nDaisy and Jack both groaned.\n\nAnna reached down and pulled Daisy's hair back behind her head. She then gently bunched Daisy's hair into a tight fist and started to guide her mouth up and down the fake cock. Anna pushed her head down to get deeper onto the cock and then pulled her hair back up to get to the tip. \"Mmmm,\" Anna moaned, \"suck that cock, you fucking tease.\"\n\nJack started to stroke his cock through his trousers under the table. He gripped his shaft and held it tight whilst trying to subtly move his hand.\n\nAnna saw movement from Jack and heard his breathing. She smiled, \"Daisy, look how hard you've made Jack. Stand up Jack, show her.\"\n\nDaisy stopped sucking and sat up on her knees, she leaned backwards into Anna's breasts. They were both facing Jack.\n\nJack stood up with an obvious erection. Daisy's eyes widened as she stared at his hard cock clearly visible through his trousers. Daisy bit her lip.\n\n\"Do you want to practise on a real cock Daisy?\" Anna asked sexily. Jack couldn't believe it. Daisy nodded hungrily. She was fully aroused, Jack could tell.\n\n\"Get up on the table Daisy,\" Anna instructed, \"Jack, take off your clothes for us.\" \n\nBoth Daisy and Jack did exactly as they were told. As soon as Jack's hard cock was exposed, he heard Daisy take an intake of breath. She crawled across the table and looked at Jack's cock close up.\n\n\"Use your hand Jack, show her how to stroke it.\" Anna said whilst walking round the table towards him.\n\nJack gripped his steel cock tightly. He was so aroused. He slowly stroked down, forcing the friction to pull his skin back over the head of his cock. He then let his hand slowly move back up his shaft. Daisy was transfixed. Jack repeated the move and then one more time. Pre-cum had gathered at the tip of his cock and was now starting to dribble and drool down his shaft.\n\nAnna moved behind Jack and whispered in his ear, \"I bet you're desperate to cum Jack. I bet you're going slowly so you don't cum too quickly aren't you?\" She then raised her voice and spoke to Daisy, \"use your hand Daisy, your turn.\"\n\nDaisy, remembering what she had been taught, slowly reached up to touch Jack's cock. \n\nAs soon as her gentle hands touched the tip of his cock, Jack moaned. His cock reacted to the touch. The pre-cum stuck to her finger tips. Daisy gripped his cock and slowly pulled her hand down to bring Jack's foreskin over his pulsing head. She then allowed the skin to pull back. She did this very slowly.\n\n\"Mmm...that's so hot.\" Anna continued to whisper in Jack's ear. He could feel her breath as she spoke. He could feel Anna pushing her breasts against his back too. \n\nDaisy continued to stroke.\n\nJack started to move his hips to drive the stroking faster but she kept the slow pace.\n\n\"Look at that pretty face Jack. That hand milking that cock slowly. She won't speed up Jack, she will keep that pace. But you like it slow, don't you Jack,\" Anna was breathing heavy in his ear, \"I've seen you stroke that cock slowly as you cum, to milk the orgasm out of you. You love it this slow don't you?\"\n\nJack moaned out loud and Daisy smiled up at him. She stopped stroking and raised her mouth to his cock.\n\nAnna moved away from Jack, round to the other side of the table.\n\nDaisy started licking the head of Jack's cock. She was using her tongue to circle the top. She had licked the pre-cum clean off his cock. Jack wanted to push his cock into her mouth, he wanted to cum and he was getting to the point of doing anything for it.\n\nAnna picked up the fake cock and stood directly behind Daisy who was bent over the table leaning over to Jack's pulsing erection. Anna placed the fake cock to her own mouth and looked directly at Jack. Jack groaned as Daisy started to lick around the base of Jack's cock head. Anna glanced down and she mirrored the licking. \n\nThe fake cock was all wet from the spit that the two girls had already licked on there. \"Want me to suck it Jack? Want me to milk this cock with my hungry lips?\" Anna whispered.\n\nJack nodded and moaned aloud again as Daisy took his head in her mouth. She just kept the head in her mouth and let her tongue swirl around his pulsing cock head.\n\nAnna used one hand to hold the fake cock in her mouth and the other to slowly lift up Daisy's skirt. She revealed a naked arse with no panties. It wasn't a flash of panties earlier, it was her pussy. Daisy wasn't the innocent girl she always pretended to be. \n\nDaisy sucked harder and slowly moved her lips down the length of Jack hard cock. She then paused at the bottom as if marking her limit, then she moved back up again. She started to slowly suck up and down his shaft.\n\nAnna took the glistening fake cock from her mouth and placed it right behind Daisy. Jack couldn't see from this angle but something was happening because Daisy started to groan.",
        "Anna had moved the head of the fake cock level with the opening of Daisy's wet pussy lips. She was circling the cock and teasing Daisy with it.\n\n\"Want me to fuck her Jack?\" Anna asked coyly, \"I'm teasing her pussy lips right now. Do you want me to push this cock inside her pretty tight cunt?\"\n\nJack moaned when he heard Anna say the word and he started to feel the familiar tingling in his balls.\n\n\"Fuck me please Anna,\" Daisy suddenly said between strokes, \"I need to feel it, I want to cum.\"\n\nThis surprised Jack. Daisy was clearly as aroused as he was.\n\nAnna slowly eased the cock into her sexy friend. Then she slipped it out. Anna then slid it back inside, deeper this time.\n\n\"Ohhh...ffffuck, that's good,\" Daisy moaned. She gripped Jack's pulsing cock in her hand and looked back at Anna sliding the clock into her sopping pussy. \"Ohh...Anna...don't stop. Mmmm...fuck that's good,\" Daisy groaned.\n\n\"Roll onto your back Daisy,\" Anna instructed, \"and lift off your vest.\"\n\nAnna let go of Jack's cock and sat up. She pulled the vest over her head in one quick movement and Jack saw her fantastic breast with her very erect nipples. They were extremely stiff and protruding. Daisy turned and lay down flat on the table. She looked back at Anna now.\n\nAnna lifted Daisy's skirt once more and slowly returned to the slow fucking with the fake cock.\n\nDaisy instantly grabbed her breasts and pinched her erect nipples. \"Ohhh my god...it's so fucking gooood.\"\n\nJack looked to see Daisy's breast slowly moving as Anna fucked her deeper with each slow stroke. He looked up at Anna and she looked into his eyes, \"stroke it Jack,\" she said, \"stroke your cock while I fuck this pretty pussy.\"\n\nJack grasped his cock and slowly started stroking. He wasn't going to last long with this scene in front of him. He looked down at Daisy who had now removed a hand from her breasts and joined Jack with his stroking. \n\nAnna licked her thumb and moved it down towards Daisy's pussy. \"Shall I stroke her clit Jack? Shall I let her cum?\"\n\nAnna started to speed up her thrusts now. From Jack's angle it looked as though she was really fucking Daisy on the table.\n\nJack nodded and pushed the head of his cock down towards Daisy's lips. She opened her mouth to let him stroke over her lips. She stuck her tonge out and started circling the head of Jack's cock again. Her hand moved down to Jack's balls and she started to run her fingers over them.\n\nAnna started to fuck her even faster and she had clearly started to rub Daisy's clit too.\n\n\"Ohhh...mmmm...fuck me, fuck me...oh god...I'm so close.\"\n\nJack felt her head moving down with every thrust. Anna was getting into it now. Jack could feel his orgasm building.\n\n\"I'm going to make you both cum,\" Anna said through shortened breaths and she faked Daisy. \"I'm going to count down from 3 and I want the two of you to cum together.\"\n\nShe thrust in and out and never slowed. Daisy's hips were meeting each thrust and circling with the furious attention to her clit too. She stroked down her breast and pinched her nipple whilst she writhed.\n\n\"3\" \n\nDaisy's mouth was open, she was in ecstasy, \"Ffffffuuucckk...don't stop, don't stop...oooohhh...\"\n\n\"2\"\n\nJack stroked his cock firmer with longer strokes. He pushed the tip of his cock into Daisy's open mouth. He was going to cum.\n\n\"1\"\n\nDaisy opened her mouth wide to scream, \"AAAHHH...NNNNNNNGGGGG...I'M CUMMMMMMMIIIIIIINNNNG\"\n\nJack started to cum too. His final thrust aimed away from Daisy and it spurted over her breasts covering one of her very erect nipples. Some cum travelled over her body onto Anna's dress as she thrust in deep one more time to fill Daisy as she came.\n\n\"Ooohhhh...fffffuuuuucckk...oh my god...oh god! Fuck\" Daisy groaned.\n\nJack's cum dripped onto her face over her eye and some dribbled into her mouth. He gripped his cock tight as he milked every last drop. Daisy licked her lips to collect all the cum.\n\nDaisy opened her eyes up to him, \"that was so fucking sexy,\" she said, \"I've never cum that hard before.\"\n\nAnna smiled and winked at Jack, \"where have I heard that before,\" she playfully said. She pulled the cock out of her friend and looked at Jack. He grinned at her. She looked very flushed and had a hungry look in her eyes. Jack could tell she was desperate to cum.\n\nHastily, without a pause, Anna lifted her dress over her waist and started to rub her clit very quickly over the top of her black tights. \"I need to cum...hard,\" she groaned.\n\nDaisy looked up at her friend and Jack stood in silence too.\n\nAnna looked down at Jack's cock and then at the cum covered Daisy. It was starting to dribble over the side of her breast and down onto the table.\n\n\"Ohhhh...I'm soooo...wet! Ffffuuckk!\" Anna moaned aloud, \"stroke those breasts Jack. Mmmmmm.\"\n\nJack reached down and started to stroke and pinch one of Daisy's breasts. Daisy moaned at the touch. Her nipples were still very hard.\n\nAnna's hand was a blur over her tights now, \"Fuck, I'm close...ffffuuck.\"\n\nJack watched Anna's hips start to buck as her orgasm washed over her.\n\n\"Nnnnnnggg...shhhit...I'm cumming...OHHHHHH...FFFFUCK,\" \n\nAnna humped against her fingers and Jack watched her face as her eyes closed and she came in her tights and panties. He smiled.\n\n\"Oh my god,\" Anna said, \"I just needed to cum so badly. Fuck, you two are so hot!\"\n\nDaisy laughed, \"thanks guys,\" she said, \"I'll never forget that lesson.\"\n\nAnna looked across at Jack and blew him a kiss. He smiled back at her, thinking how lucky he truly was."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "masturbation",
        "fake cock",
        "cum over me",
        "ffm",
        "handjob",
        "blowjob",
        "tease",
        "slow fucking",
        "cum on tits",
        "cum in panties"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/annas-friend-needs-cock-training"
}