{
    "title": "Lost Empire Ch. 61",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Lucie\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n----\n\nUngrown - unnumbered\n\n-\n\n3 - onboard Tempro awaiting Shelby\n\n0999 - Zan - Also lost\n\n1000 - Sherry - lost at the moment\n\n------\n\nDerrick's head snapped up as the intruder alarm started to warble. Damn it he thought I finally get to have a little peace and some other race has to interfere. Shaking his head Derrick had Mary pull up all the information on the invaders.\n\nALMOST A DAY BEFORE\n\n-------------\n\nLucie was still a little in shock from the quick transfer to Ace. Still she had to find the ship that she was certain was Sherry. 'Oh please,' she thought, 'you have to be Sherry.' Straining she could barely hear the thoughts of the ship now even as close as they were now.\n\n\"We're very close Ace,\" Lucie said as fresh tears started anew from her eyes. \"It's so hard to hear her.\"\n\nThey traveled a few more minutes when Sherry suddenly was yelling to stop. Her eyes were wide as she started to nod her head.\n\nZimmel had been watching her and the instrument boards like a hawk. Though he'd read that there had really been no advanced warning of the Tendrax Fleet. He studied the readings harder trying to discern anything that would give away the enemy.\n\n\"She's in front of us though I'm not quite sure where. Ace can you...\" Lucie started.\n\n\"I have the brain box two degrees astern Prime Lucie. Prime should I bring it on board?\" Ace said sounding hopeful.\n\n\"NO! You know the procedure the emperor mandated we follow. Start the first of the four batteries of testing.\" Zimmel told Ace whose face was now crestfallen though still happy they had located a brain box.\n\n\"I have started the first set Prime. All four sets should take two and a half hours to complete.\" Ace informed both of them.\n\n\"Four sets? I only remember three. When was this last set added?\" Lucie asked of Zimmel.\n\n\"Just after you left we were contacted with the parameters for it. We've been through it; it searches for more invasive programs that could have possibly gotten through. With this new race of tech hoarders the emperor thought it was an advantage we would need.\" Zimmel explained.\n\nLucie was nodding though a lot of what Zimmel had just said was a bit beyond her. \"Well, as long as it works.\"\n\nTwo hours later Ace had just started on the fourth set when Zimmel noticed a slight warping of the stars. Almost like a heat wave you could see on a hot day warping what things looked like as it passed.\n\n\"Ace, change frequencies of the shields, and the engines now! Double shielding of the Trans-warp.\" Zimmel was shouting as the shimmering of space in front of them started to increase. \"I want a shield around the brain box. Notify the emperor we are going to have company.\"\n\nAce was doing everything that Zimmel had ordered, and then advised him that their communication wasn't getting through.\n\n\"Damn it! I was afraid of that. Increase the shields; keep rotating the frequencies 'til you are finished with the box.\" Zimmel ordered.\n\n\"Compliance Prime,\" Ace responded as he kept at what he was doing. \"I am reading that they are trying to blanket us with ripalon energy. The new frequencies are holding though they seem to be adapting to that as well. Fifteen minutes 'til completion. I have already removed twenty programs that do not belong.\"\n\n\"Good, I was afraid they might try something like this.\" Zimmel said as he monitored the approaching fleet. Shit he thought they have far more than they did the first time they hit Sherry. Even as he watched he saw space in front of them start to rapidly fill up with Tendrax ships.\n\n\"The box is clear, now bringing it on board.\" Ace said even as the Tendrax opened fire.\n\n\"I suggest we depart now!\" Lucie said to which Zimmel nodded to Ace.\n\n\"Warning, Warning! Unable to shift to trans-warp Tendrax blasts increasing in intensity. Now...\" Ace was saying when several of the ships that were in front of them exploded.\n\n\"What in the hell was that?\" Zimmel asked as he searched for the source of the destruction. \"Never mind, get us the hell out of here!\"\n\n\"Going to full Hyper-drive, prime.\" Ace said starting to move out even as twenty more ships exploded behind them.\n\nTurning they were moving away watching as the Tendrax started to give chase. Then they suddenly stopped when another fifteen ships exploded. This time though, they all thought they saw an EIG ship moving past the destruction field.\n\nThen, they were in a tractor beam, entering Trans-warp, all be it for a second and a half. \"Sorry Ace, Prime Zimmel that's all I have for now. I thought it would recharge faster, mother told me one minute though I believe I sustained more damage. I'm afraid it will take two minutes, I'm also afraid they might get very close before that.\"\n\n\"We could fight, brother Zan.\" Ace said eagerly.\n\n\"Not with our systems as down as they are. I am in re-gen this whole time I might be able to get it down more though I am not too hopeful.\" Zan advised them.\n\nZan tried his best to not look in Lucie's direction as he was reporting. \"How long 'til we reach the Galactic edge?\" Zimmel asked worry apparent on his face.\n\n\"Even with the Trans-warp bursts I estimate almost a day. I am also unable to contact the emperor, Mother or Mary. I am hoping that the closer we get the more likely we will be able to get through.\" A now worried Zan was replying.\n\nIt was almost a day later that they breached the edge of the Galaxy. Zan had been trying to take readings the whole time. Not sure he'd done a count of the opposing fleet several times. The number he got was grim indeed.\n\n\"I have tried to do an accurate count of the fleet. It is proving difficult as it seems many ships are phasing in and out of visible spectrum. I believe they are numbering in the tens of thousands.\" Zan relayed still not happy at the overwhelming odds.\n\nZimmel was shaking his head as he watched the following fleet. \"They must be desperate if they are committing this many ships.\" Zimmel replied staring at the huge fleet that was following them.\n\n\"Desperate or they just love war.\" Lucie said speaking up.\n\nZimmel was again nodding his head, the observation did make sense. Then again he thought, 'Why were they desperate? Was it because they had discovered what Zan had?' Zimmel didn't really know though he wished he had more of an idea as to their real intentions.\n\n----------\n\nMary appeared before Derrick when she and he couldn't raise the ships. \"What in the hell is going on?\" Derrick asked Mary when she told him she couldn't reach them either.\n\n\"It appears that the opposing force has a dampening effect on communications. I have not seen something like this in centuries.\" Mary Relayed to Derrick\n\n\"We're you able to defeat it then?\" Derrick asked.\n\n\"Yes sire. I sent high energy bursts that temporarily penetrated the dampening field. Though I am afraid that the effect only lasted a short time.\" A worried Mary told Derrick.\n\nDerrick was nodding as he was running this information through his mind. Turning to Mary he asked, \"Have you had any further word from Shelby and Lucy?\"\n\n\"Yes sire. They were already within the galaxy boundaries at last check in. Neither of them have Trans-Warp capabilities. They last said they all had full hyper-drive, though they are still days from the Imperial planet.\" Mary reported.\n\n\"Damn it!\" Derrick shouted slamming his fist into the wall drawing a horrified look from Mary. Then dropping his head he reached over clicking on the communication panel. \"Johnathon? Where are you?\" Derrick growled.\n\nA soft crackle issued then Hartwell responded, \"Whoa sire. Who took a piss in your bed this morning?\"\n\n\"I'm not in the mood for this banter today, WHERE, the hell, are you!?\" Derrick almost shouted trying to keep a tight rein on his anger.\n\nAfter a short sigh Johnathon replied, \"I'm back with the fleet. Do you need...\" He started.\n\n\"No. I need you to take one of the ships. Go and get Shelby and Lucy. Get them back here as soon as possible. In the mean time, I need to light a fire under Kimison and Rayburn's asses. This defenselessness in the face of an enemy is staring to chafe at my ass. As you remember I really can't tolerate that very long.\"\n\nHartwell was nodding, he very well remembered as he was the one the commander had, had an issue with. Shuddering he asked, \"Sir? It doesn't matter what ship?\"\n\nDerrick's head snapped up as his eyes narrowed studying Hartwell's face. Nodding he stated, \"I have a suggestion though I was going to let you decide.\"\n\n\"A suggestion? Which... You were really going to suggest I take THAT ship?!\" Hartwell stopped a moment as he considered it a then saw Derrick smiling. \"Alright, I'll take a chance; I just hope having a ship missing doesn't let that bastard get away.\"\n\n\"I don't think he could with only two ships there. The bad thing is we may have to pull them out to face this new threat. I'm not really happy about this as I know you aren't either. So far I am just thinking about it 'til we have more info.\" Derrick informed Hartwell.\n\nA grimace came to Hartwell's face as he thought of the Baron getting away. No he thought, that wasn't about to happen. The grimace dissolved into a look of anger as he tried to calm before he called the ship.\n\nEven as he finished speaking he was suddenly on board the ship. Shaking his head he had to remember that the ships always did this to facilitate things faster.\n\nA tall, slender, teen male with jet black hair appeared in front of Hartwell. \"I await your orders Admiral prime.\" The hologram stated.\n\nHartwell nodded as he took the command seat. \"We have a mission to bring back your mother and sister Lucy. The emperor wishes us to do this will all haste. Contact them; let them know we will be there shortly. Also I need all information we have on the Tendrax to date.\"\n\n\"Compliance, Admiral Prime. We shall be departing in two minutes. All information is now on the command chair readout screen.\" The Hologram told Hartwell as they started to move away from the rest of the fleet and the planet. \"One minute sir.\"\n\nHartwell was nodding not really paying attention to the teen, reading the reports. A minute later Hartwell looked up as he heard a now familiar wind up, then a whoosh as they entered Trans-warp. A minute, twenty seconds later they emerged not far from a stopped Shelby and Lucy.\n\n\"It is good to see you again Johnathon.\" Shelby's holo-gram appeared, saying as soon as Johnathon stopped before them. \"Derrick informed us that you were coming to get us back faster Admiral.\"\n\n\"Yes he did. He also stressed that I was to return with you as soon as possible.\" Hartwell informed both of the ships.\n\nShelby looked a little afraid a moment as she asked, \"Is it that bad Admiral?\"\n\n\"I'm not really sure. The readings we are getting are spotty at best. Though from what little I can discern, they have a rather large force headed this way.\" Hartwell shook his head if they had more ships he felt they had a chance. With the few they had, he wasn't that sure. He just hoped that Kimison and Rayburn came up with a hell of a lot more to this problem.\n\n\"We are prepared Admiral as soon as the two of you are.\" Shelby informed him.\n\nHartwell nodded as he broke out of his deep thoughts and worries.\n\n\"Now hooking up to the both of you. Tractor has the both of you, now going to Trans-warp.\" Johnathon advised as space began to ripple in front of him, and then he started forward into the rift that was open.\n\nLess than two minutes later space began to ripple and boil not far from orbit of the Imperial planet. Johnathon then emerged with both ships in tow.\n\nLetting them go Shelby appeared on the command deck in front of Hartwell. \"We thank you for bringing us home Admiral.\" Hartwell nodded to both of the holograms then there was a wind up as Johnathon vanished into another rift.\n\nA moment later Shelby had a curious look cross her face when Tempro called her. \"Yes, we are here Tempro, can we help you?\"\n\nBoth Kimison and Rayburn's Holograms appeared on the command deck of Shelby. \"We need to examine the both of you. You are the first ships that survived their attack AND are here. We both have several theories of how Zan was immune to most of their ripalon energy.\"\n\nShelby and Lucy both looked at each other than looked back at both men nodding vehemently. \"Anything we can do to help you to achieve defeat of this enemy.\" Shelby replied.\n\nBoth men smiled as they both suddenly appeared on Shelby running a myriad of instruments over her sub-light, hyper-drive and Trans-warp engines, and generators. Nodding, they both vanished appearing on Lucy doing the same exact readings and tests.\n\nBoth men looked up from the readings suddenly smiling bigger. \"Thank you, both of you.\" They said then vanished back on board Tempro.\n\nBoth Shelby and Lucy looked at each other confused then shrugged as they settled into their re-gens.\n\nLess than a minute later Derrick's visage appeared before both men. \"Well? Did you get the results that you were hoping for?\"\n\nBoth men looked up at the emperor huge smiles on their faces as the nodded vigorously. \"It appears that what we felt at first about Zan's immunity was right. The only problem we are having is recreating how he did it. So far the power constraints are far beyond even the redoubler's capabilities.\"\n\nDerrick appeared deep in thought for a few moments. He was suddenly disturbed when they heard Shelby's voice call him for a fitting. \"Not right now! We have another race bent on invading us again! If I remember right you once talked about a modulator helping to keep the increase stable, almost to the point of implosion.\"\n\nBoth men were nodding yes, \"Though sire getting the redoubler that high is extremely dangerous. I know you don't want to put any of the ships in that much danger.\" Kimison said both his fists clenched as he delivered the information. Then he whispered, neither do I; ever!\"\n\nDerrick nodded completely agreeing then pointed a finger at both men. \"Then I suggest that the both of you find an answer to this problem. OR, do I need to have the both of you brought here so I can kick the shit out of both of you?\"\n\nBoth men swallowed hard as they both shook their heads. \"Good! I'm glad we have an understanding. Now get it done, or I might get pissed at the both of you. Believe me you DO NOT want me pissed at you!\" Looking back over his shoulder he added, \"ESPECIALLY right now!\" With that Derrick clicked off sitting down shaking his head.\n\nA com signal let him now Hartwell was calling. \"Sire,\" Hartwell said as soon as Derrick appeared to him. \"I am on the way back to the Baron's planet. I'm hoping to locate my Brother and Uncle. I believe I may have a bearing on where they are. Only problem is I think they are close to where the Baron is hold up. I'll let you know as soon as I do.\"\n\n\"Alright but keep a com open in case I have need of you again.\" Derrick replied shaking his head again at Shelby and his mother as they tried to get him fitted for a marriage suit. He already felt sick with the frilly pompous crap they were trying to get him to wear. They might as well kill him; he wasn't going to embarrass himself, the empire, nor his family.\n\nHe looked up to see Shelby with a worried look on her face. She and Derrick's Mother and grandmother had been calling out to him for the last fifteen minutes. Damn it, this had to be extremely bad if he was this distracted. Not hearing one of them possibly two but all three of them, no. This was bad.\n\nWalking up to Derrick she saw that he was deep in thought. Waiting a moment she gently laid a hand on his shoulder feeling the tense, taut muscles there. \"Derrick?\" She asked when he made no move after her touch.\n\nDerrick shook his head to break his self out of his deeply engaged thoughts. Turning his head he looked shocked at Shelby standing there with an extremely worried look. \"Shelby? When did you come in?\" He asked a little confused.\n\nShelby nodded as he confirmed her fears this was bad for him to be that completely distracted. \"A moment ago Derrick. We all tried calling you though you seemed otherwise preoccupied. Should we delay the wedding? It is a petty thing when all our lives are in danger as it appears they are.\"\n\nDerrick thought about it a moment then shook his head. \"No my dear, we have to marry within three more days. Something that the first and subsequent emperors signed off on. Mary also takes things like this that seriously, as you have discovered. No, I don't think it's a good idea that we delay it.\"\n\nShelby nodded as this was news to her. Searching through all her memories she started to look for what Derrick mentioned. An hour later she finally stumbled across what he'd mentioned deep within Mary's records. Her mouth dropped open as she read about Imperial Marriage and becoming the declared empress. Shaking her head she knew almost all of this except for the last part. Rising she walked briskly at a determined gait 'til she found Derrick bent over a display screen. Kissing him she backed up to gauge his reaction.\n\nDerrick was looking over the new information that Kimison and Rayburn were constantly sending him. So far, they hadn't had much luck discovering how to mimic what Zan had done in the first attack where Sherry was lost. Though they seemed to be a hell of a lot closer than they were. Derrick felt the approach of someone though didn't look up 'til he felt an extremely soft pair of lips press against his cheek.\n\nDerrick's head snapped up to find Shelby staring at him. 'Alright,' he thought, 'this was the second time she'd surprised him like this.' \"Shelby? My dear? Is something wrong?\"\n\nShelby shook her head as she opened her mouth to talk then stopped, rethinking what she was going to say. \"I am sorry that we have to rush this joining Derrick. This is supposed to be a rather joyous time not a battle field strategy for the both of us. I...\" Shelby stopped when she saw what Derrick was looking at. Staring a moment she started to shake her head no. \"It won't work, if this is a boosted shield array it won't work.\"\n\nDerrick's eyes flew wide as he could only stare at Shelby after her remark. \"I know it has only been effective to twenty five percent.\" Derrick thought about it a moment then clicked on another display. \"This is what we have been trying to achieve.\"\n\nShelby looked closer as she studied the display, \"Yes that is the only configuration that will work. As far as I can see, this is well within the power constraints of the EIG's and the redoubler.\"\n\nDerrick's head whipped around as he stared even harder at the display. What in the hell was she talking about? There was no way unless... Holy shit! That was the one thing he hadn't thought of! Grabbing Shelby he kissed her deeply, passionately causing her to moan deeply in her throat. Both coming up for air had them blushing at the loving moment they had just shared.\n\nShelby collapsed into the nearest chair as Derrick notified both Kimison and Rayburn. \"I believe that we have solved how Zan was immune, well... the empress did. Here's what we have so far, as you can see it wouldn't take much to modify all the ships.\"\n\nBoth men were staring at Derrick then Shelby their mouths hanging open. \"We're on it shouldn't take more than a few hours on each ship. You think we have the time?\"\n\n\"I don't know but I hope we do, I just hope it works as well as I think it does.\" Derrick told them then clicked off. Turning Derrick smiled a huge, true smile at Shelby. Shelby felt her stomach flutter then she smiled back. \"Wish I had asked you sooner, this might have been over before now.\"",
        "Shelby nodded, still a little stunned at the affection that Derrick had poured into the kissed that they had shared. \"I... I should go make sure that everything is proceeding with the wedding plans.\"\n\nDerrick straightened up as he walked up to Shelby. \"Perhaps we could both go? You have freed a lot of worry from my mind. Again Shelby was stunned at Derrick's suggestion.\n\nWith a sigh she decided that now was as good a time as any to breech the subject. \"Derrick we still don't have weddings clothes for you. We need to have you in grand clothes that befit your station.\"\n\nDerrick stopped a moment as Shelby was afraid that he was going to vehemently disagree again. Steeling herself up, she awaited his displeasure then was shocked by his next words.\n\n\"Alright, let's go look though I can't guarantee that I will like them. Perhaps we can take part of one with part of another. I just don't want to embarrass myself, the empire, and especially you.\" Derrick told Shelby making her stomach flutter again. My god she thought was he finally starting to love me? She'd been so lonely for him, especially when he vanished in time. That wasn't an experience she ever wanted to go through again.\n\nDerrick looked at Shelby she really was as brilliant as he was. He could see now what his mother, Gran, and Mary had meant that she was perfect. Never mind the fact that she literally was made for him. Nodding to himself, he could see that now.\n\n-----------\n\nZan was still worried the re-gen now had the period of recharge at one minute. True they had started to get further and further away from the Tendrax fleet. He was still worried that they couldn't get through to the emperor. Going through all his weapons he finally made up his mind. After two more times of Trans-warp they'd be far too close to planets for this to work.\n\nZan appeared on the command deck of Johnathon and Ace a moment later. \"Prime Zimmel, I have a plan to help. I am afraid that I won't be able to continue with you, afterwards.\" Zan continued on when Zimmel tried to interrupt. \"I am proud to do this Prime Zimmel, for the empire and the emperor.\" Turning he bowed to Lucie as he said in a whisper. \"I hope that this will allow you to forgive me for the wrong that you feel I have done you.\"\n\nAce appeared tears in his eyes as he whispered, \"Go with honor, my brother.\"\n\nLucie could only stand there when Zan disappeared. What in the hell had Zan been on about? Then she watched in absolute horror as Zan stopped then reversed course, what in the hell was Zan thinking?\n\nZimmel saluted Zan then sat, trying to coax more speed out of Ace. Damn it! This was going to be close if Zan released too early they were dead. It was about ten minutes later that Zan engaged the front of the advancing fleet.\n\nEven as the Tendrax started to open fire on Zan he vanished appearing to the side laying waste to many ships there. Streaking across the front of the ships Zan started to destroy even more. Moving as fast as he could Zan started to fire almost continually destroying as many ships as he could. Reaching the end he turned trying to accelerate before they got a bearing on him.\n\nZan was surprised that his hyper-drive had lasted as long as it had. Checking Ace's position he nodded then Trans-warped to the front of the fleet again. Nodding with a determined smile on his face he started to launch the missiles.\n\nLucie saw the readings her eyes going huge as new tears started to fall from her eyes. \"My god, no!\" She whispered as she saw that the missiles were on course. It was Sherry all over again. \"No Zan, you didn't have to!\" Lucie started to yell.\n\nA moment later Zan appeared on board. Bowing to Zimmel he stated, \"It was indeed an honor prime, brother.\" Turning to Lucie he stated. \"Tell her I love her.\" Then he was gone.\n\nLucie watched in abject horror as Zan kept up his barrage on the front of the Tendrax fleet. A minute later there were several bright blasts that started forward and backward. The fleet seemed as if they were erased from sight as the blast started to wash over each ship like a wave.\n\n\"No Zan! NO!\" Lucie was shouting as the wave finally reached where Zan was at the front of the fleet. Then like them he too seemed to have been erased from existence. \"NO, NO, NO!\" Lucie was screaming as she collapsed on the deck.\n\n\"We're not completely free yet. Miss Lucie, I suggest that you strap in NOW!\" Moving as if on autopilot she secured herself in the seat.\n\n'Why,' she thought, 'why?' Then she noticed that the ship was starting to experience turbulence.\n\n\"Another thirty seconds prime, heat, and radiation minimal. Ten seconds, energy wave dissipating. Clear prime.\" Ace informed them.\n\nA moment later Derrick's Hologram. \"Can you tell if he got most of them? Derrick asked sadly.\n\n\"Not as of yet sire.\" Zimmel told them. \"We had seven confirmed launches from Zan. Not sure if he ever launched the last.'\n\nDerrick nodded as he felt the grief set in. Zan had been with him almost as long as Shelby. They had to find him as soon as they could.\n\nLucie was still sitting there her head hung low when she suddenly snapped her head up. \"What?\" Nodding her head she had a vacant look in her eyes. Just as suddenly she grabbed her head screaming. \"No! Too many, please there are too many of you. Please stop. I can't take this many voices!\" Screaming again she collapsed in the chair unconscious.\n\n\"Med bay now!\" Derrick was shouting even as she vanished. \"Admiral Hartwell should be there soon.\" Derrick said then clicked off. A moment later a ship emerged from Trans-warp connecting with a tractor beam they were gone a minute later.\n\nAmid the wreckage a myriad of thoughts shouted when they saw the ships. Then they shouted more when the ships disappeared."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-61"
}