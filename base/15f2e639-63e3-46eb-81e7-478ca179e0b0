{
    "title": "My Only Talent Ch. 11",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\n\n\nI didn't get back to the dorm until about 3 AM Thursday morning, and I had two exams this afternoon and three big exams on Friday, and then was looking forward to three days of acting in our in house production of 'Mastering Millicent', which sounded like a movie I really wanted to make, plus another ESU football victory. Gee, Dad, you can be proud of your boy, because for a three day weekend, I have three girls on tap each night, not just one per night, and my goal was to tap all three of them, each night. So I had simply to devote myself completely to schoolwork until my last class period Friday, which was also my last midterm exam, and then I could let it all hang out for the rest of weekend. It was an excellent plan. I was reminded of my tennis coach, saying when you have tough match, just give it your all and make sure you leave everything you have out on the court. I was going to apply that principle to both of my endeavors this weekend. \n\nI set my alarm for 6 AM, and went to sleep instantaneously. When it went off I took a quick shower, dressed, and hit the early breakfast line for protein replacement therapy. I was pounding down bacon and eggs with an orange juice chaser when Nora sat down next to me. \"Hey stranger!\" She gave me a little shoulder hug. \"You really do still live and breathe, and you somehow look better. I guess Suzanne has you in training, huh?\"\n\nI smiled my best shit eating grin. \"It's tough work, but it's gotta be done!\" I was suddenly very interested in tuning in to Nora and trying out my new Suzie signal sniffing capabilities. She was clamping down on her signals very well, but things were leaking out despite her best efforts, and I soon learned where to concentrate to detect them. Her 'flight data recorder' was very well protected, like it was shielded, or encrypted. I could tell there was something in there, but I could not yet ping it or decipher it. \"You look hot yourself! What's up with you?\" \n\nShe shook her platinum hair and smiled, and it lit up the room. \"I just finished my last midterm for this week yesterday, and I have walks in all my classes Friday, so today will be a light day. I am going with a group of students to the WTTU football game on Saturday. It's a long drive but we can leave early Friday and take it easy. I have never been to a football game out there.\" She held up a tentative 'hook 'em' sign and smiled. \"I hear that it's great as long as they don't have a dust storm.\" \n\n\"Or a real Blue Norther! It's not Oklahoma, but when the wind does come whipping 'cross the plain, the temperature can drop 50 degrees in two hours. I'll be watching the game on TV. I hope the TV analysts are wrong again about ESU!\"\n\nNora looked at me funny. \"I didn't realize you were such a football fan, Robbie.\"\n\n\"This is Texas. Besides my chosen sport of tennis, I follow all of the other culturally important sports: fall football, football recruiting, spring football, and summer seven on seven football! I would rather die than play fantasy football, though, and I am not coming back for the game on Thanksgiving Day. But my dad and I will watch every minute of it on TV. \"\n\nNora snorted and looked glum. \"I'll be here on Thanksgiving.\"\n\nI laughed. \"I guess the holiday never really caught on across the pond, eh?\"\n\nShe laughed. \"We have Harvest Festival earlier in the year, but it's not the same thing really. My folks sometime invite visiting yanks over if they are in London on that day, so I know a little more about it than most do.\" \n\nI gave her a hug and headed for campus, making a mental note to see who was planning to be where for turkey day. I found an empty classroom and did 'mock lectures' as an exam review for my midterms, and studied all the old exams from the UDP files that Oiler had given me, then went to my first class. I thought I did really well on the exam before lunch. All those mental gymnastics made me hungry, so I was back for lunch and felt good about the afternoon exams, too. \n\nThursday evening was study and review for the Friday exams, except for a call from Rodney Driver. The black suburban that had tailed us was registered to a '527' organization, referring to a section of the Internal Revenue Code, AKA a 'Super Political Action Committee' or 'Super PAC' dubbed 'Real Texans for Truth'. The people listed as contributors to the organization mostly had addresses in Lubbock and environs and most seemed to be alumni of WTTU. Rodney said that some of the websites he frequented contended that members of the group were also big supporters of the recently fired WTTU football coach, who had an ongoing feud with James Craig. So far the PAC had run ads supporting James Craig's opponents in his Senate race, and apparently was also spending money on polling firms and other political consultants, including opposition research. Their activity was at a peak with the election coming next week. \n\nThe head of the organization was Winifred 'Wylie Coyote' Wimmers, a notorious attorney, political consultant and rabble rouser who hailed from Wylie, Texas. Winifred was a former beauty queen in her late 40's and had a reputation for being a staunch political conservative and for leaving behind her a trail of heartbroken twenty something guys that she had toyed with and then dumped in the usually male Texas tradition known as 'find 'em, fuck 'em, and forget 'em'. Her first cousin was John Wimmers Blakeley, AKA 'The Wylie Fist' a notorious trial lawyer so named for his habit of pounding the table in the courtroom instead of making substantive arguments and apparently also his preferred mode of sexual gratification. It was said that if he had been as pretty as John Edwards he could have been VP, but he mainly had 'a face for radio'. 'Fist' was also a card carrying member of the West Texas Trial Lawyers Association, a flaming liberal and a James Craig supporter, and the two first cousins were apparently in a constant state of ongoing political war. Were all these guys sniffing around the AGs and trying to figure out who was behind all the negative publicity for James Craig? \n\nRodney turned our conversation back to the Saturday night party and gave me an address out west of the city for a house near the road that led to one of the city parks on the river, and said we should take a taxi show up there for the 'pre-party' Friday night at about 11:00 PM, and we would have to solve a puzzle to figure out how to get to the real party, which was at another location. He also said that most of the people would only know about the pre-party, think it was the only party, and would never make it to the 'VIP party'. That sounded mysterious enough, but both Lara and Suzanne were enthusiastic and highly practiced puzzle solvers, and very party driven, so I felt pretty confident we could figure it out. Rodney would arrange transportation home from the second party sometime Sunday afternoon. I got to sleep early.\n\nFriday morning I tanked up on protein and carbs, and I was certain I did really well on both morning exams. I hit the track at my new pace and was feeling a little better than average, and Suzanne joined in just as I finished my initial seven miles. She looked fantastic, as usual. \"Let's do a final briefing on Millicent!\" she began. She went through the newly foreshortened project plan for Millie, which now finished up early afternoon on Saturday. It was tough, so tough that I questioned it, but she insisted it was something that Millie needed and wanted, and that both Lara and Suzanne wished that they had found for themselves even sooner. She said I did not realize how many guys today were too damn wimpy and immature and how many girls really wanted a strong guy that they could respect, and frankly, how many girls just plain needed a really hard fucking every week or so, not to 'be understood' or 'actualized' or some other psychobabble. After wringing out Millie, the girls would all either sleep or watch the ESU football game with me, and then we would all take a nap before heading out for the Saturday night party, where Millie would star as our novice submissive again. When I told Suzanne about the 'solve the puzzle to get to the real party' deal her eyes flashed brightly. She was motivated. \n\nI changed the subject \"I am going to visit my family for Thanksgiving. My grandparents don't travel as well as they used to, so I am going to catch a ride with a friend from high school who is driving up on Monday, and not coming back until Friday. What are your plans?\"\n\nShe looked a little startled. \"Well, my folks are in Europe until December, so I have been again invited to Thanksgiving dinner with Mike's family. I'm not sure they have much to be thankful about, but I have gone down to visit them and Mike in the burn hospital the last two Thanksgivings.\" She looked sad, and I felt sad. I knew there had been no change in Mike's prospects to regain consciousness.\n\n\"I think Lara is going up to be with her Dad, and her only surviving grandmother, for Thanksgiving. She did say her dad is coming to town for the Formula One race in two weeks, and wants her to help him out with a last minute party.\"\n\nSuzanne sighed. \"That's sounds like fun, I'm in. Have you talked to Nora lately?\"\n\n\"Yesterday at breakfast. She is driving out for the WTTU game later today with a group, but she will be stuck here for Thanksgiving.\"\n\nSuzanne looked thoughtful. \"Robbie, could you possibly invite Nora to Thanksgiving with you? I feel bad that she will be so alone!\"\n\n\"I hadn't thought about that! Do you think she would accept?\"\n\n\"Maybe she would, and just asking might make her feel better.\" I had planned to have some serious discussions with my folks over Thanksgiving to learn more about my talent, our family history with it, and some of the things they obviously had not told me. Having Nora around would complicate that process, but it might also stimulate some answers.\n\n\"OK. I'll ask her. She will have to help cook if she wants to eat, though!\"\n\nSuzanne laughed. \"She's an incredible cook, absolutely world class. That won't be a problem.\" I decided to talk to my Mom and check it out first.\n\nFriday afternoon went very quickly, the exams were fine, and suddenly I was back in 'full race' dating mode. I had about three hours before it was time to pick up Millicent, and Lara had already assured me that there would be enough supper to keep even two 'machines' like Suzanne and me fully filled up, so I took a nap. I was feeling smug that I had truly 'left it all out on the field' as far as my classes were concerned, and I was really looking forward to 'leaving it all in the girls' this weekend. When my alarm went off, I brushed my teeth, grabbed the paper bag that contained the props that Suzanne had prepared for use with Millie, and whistled happily as I walked to the Bi Phi house. \n\nMillicent Hathaway was on the porch of the sorority house 45 minutes early. She couldn't help herself. She hadn't been this excited when she was debutante three years ago, but that occasion had been more for her mother than for her. She had thought about nothing else but this weekend adventure since Wednesday night. She was wearing the outfit Suzanne had specified, and it looked just like the one she had worn to church school in the eighth grade, and it made her wet. She had her first two crushes that year, one on a ninth grade football player, a tall guy that was way ahead of his peers on the testosterone schedule, complete with the need to shave, a very deep voice, and muscles. She wanted him to pick her up, grab her ass, kiss her and never put her down. Her second crush was her music teacher, Miss Granot, who was in her late twenties. She wanted Miss Granot to sit on her face and make Millicent lick her pussy. It was so nasty and it made her so hot that she almost couldn't stand it. By Christmas break, she wanted both of them at the same time, and her dreams reflected it, but none of those fantasies had ever come true. \n\nMillicent's grandfather was a storied Texas oil man, worth several hundred million. His son in law, Millicent's father, was determined to make more money on his own than his father in law ever had. He was an architect who built a real estate empire of shopping centers, apartment buildings, and office buildings, renting out each property he built and then borrowing to build or buy yet another. His timing was perfect and as the 'Sun Belt' economy grew his properties' valuations soared and he sold some off to pay off his loans and suddenly owned more than $1B of real estate free and clear, collecting millions in rent each month. Millicent laughed when people used the term 'helicopter dad' because to her it meant a dad that was always out flying around in a helicopter looking at property, instead of spending time with his daughter. Her mother had been raised for one career \u2013 head of the Junior League and best dressed woman at the country club. She spent all her time on it, not with Millicent. Millie was essentially raised by her grandmother and their maids, and spent more time with them than both of her parents combined. She somehow knew her mother and father didn't really love her, and she wasn't sure her grandmother did either. She was an only child and an only grandchild, and was as spoiled as spoiled could be, and almost never even heard the word 'no'. But when she was four something happened that remained the most enduring emotional memory of her life. She was walking with her grandmother on a shopping trip in Houston, and was being oppositional for its own sake, as four year olds are wont to do. She kept pulling away from holding her grandmother's hand, running to look at anything that interested her, and her grandmother would scold her, but not really do much else. \n\nFinally she jerked away and ran towards the busy street, and almost certainly would have been killed if a passing stranger had not grabbed her just before she stepped off the curb. Her grandmother was livid. \"You are going to get your first whippin' when we get home young lady!\" Millicent thought it was just another idle threat. It was not. When they got home, Grandma did not fix lunch as Millicent was expecting. \"No lunch for you. When you disobey me and run out into the street, you get a whippin' instead!\" Grandma has been raised old school, and she went out to the yard with some shiny pruning shears and came back with three switches cut from trees. \"Pick your switch, you bad girl!\" she told Millicent. Still not comprehending, Millicent tauntingly picked the longest one. \"Good choice!\" Grandma said. She made Millicent take down her skirt and panties and lean over a chair, pushing her and holding her down when she hesitated. She had never experienced anything like this, and she was embarrassed and humiliated. But then Grandma went crazy and whipped her ass, counting out twenty strokes, each preceded by a little motivational phrase about how little girls should mind their Grandma. Millicent thought that the first one was more than she could possibly endure, and by the third one she was praying to God that it would stop. After the tenth she was in another world, with adrenaline and hormones surging through her system, and crying her eyes out, which she almost never did. Grandma was crying just as much. After the final stroke, Granma gathered Millicent up in her arms and rocked her as she cried. \"I am so sorry baby but you can't disobey me like that. I love you and I couldn't bear it if you got hurt!\" They rocked together for more than an hour, and Millicent went to sleep in Grandma's arms, suddenly certain that somebody truly cared about her. She would never forget that, both consciously and unconsciously.\n\nWhen I got to the Bi Phi house, Mei Ling was standing with Millicent on the porch. Mille was dressed as directed, in a schoolgirl outfit with a white blouse and tartan skirt and her hair in pigtails. She had also been instructed to begin a liquid diet yesterday at lunch, but was left to speculate as to why. As I approached, Mei Ling said \"I think I am envious of Millie's weekend!\" and looked at me expectantly.\n\nAll of my words and actions from now until Sunday night were calculated to have a maximum effect on Millicent, so I said \"She is a complete slut, Mei Ling, and she knows it, but she is inexperienced. She does not yet know what she is capable of, but she will soon learn to serve me well indeed! From this moment forward, her life will never be the same.\" \n\nMillicent starred at me dumbfounded, and Mei Ling looked at me really funny, like she could not decide whether to laugh or take me seriously. I ignored her, and slipped a collar around Millie's neck, and bound her arms behind her so swiftly she was trapped before she knew it. I pulled the blindfolding leather hood over her head and zipped it up securely. Millie began breathing harder. I reached up under her skirt with a pair of plastic covered safety scissors and literally cut off her panties, and then reached under her blouse and took off her bra, handing them both to Mei Ling. She could not help but notice that the panties were already very fragrant, and her eyes got wide as saucers. I had already talked to Cisco, and Mei Ling had a few surprises of her own coming up this weekend. \n\n\"Do you want to feel this bitch's nipples before I clip them, Mei Ling?\" Her face turned pale, and then bright red. \"Do you want to feel her wet slut cunt before I take her away for her training?\" Mei Ling almost fell down, but did not reach for Millie. I put two clips on Millie's nips, pulled her blouse back down over them, and then snapped my leash to Millie's collar and walked away, tugging her along roughly. Mei Ling stood frozen, gawking at us until we disappeared around the corner at the first turn toward Lara's building. I was taking a circuitous route so Millie would not know exactly where she was going, and three blocks away from the Bi Phi house I took a detour down a narrow alley between two commercial buildings, shoving Millie up against the wall, and grabbing her ass roughly. I slipped my hand low and in between her legs and discovered she was already dripping.\n\n\"What a slut you are! Does it make your little pussy wet to know that anyone who walked by could smell you now?\"\n\nShe gasped and coughed. Every time she moved, the blouse moved the clips and she got stimulated. I gave her a very rough kiss, and then dragged her on down the street. We walked by a construction site, and I slowed down until the workers noticed her, and she heard them whistling at her. I lifted her blouse and they whistled even louder. She almost fell to her knees. But I dragged her on. We circled Lara's building several times, passing by numerous people on the street. Two young guys turned and said loudly \"Damn! Look at that!\" and Millicent groaned, way down deep in her throat. In the alley behind Lara's I pushed her against the wall and took flash pictures of her with my phone, ordering her to lift up her blouse and then her skirt. She was mortified. Her Suzie was also singing like a flock of songbirds. \n\nWe ducked into Lara's building by the side entrance, and took the elevator up to Lara's floor, unfortunately seeing no one else along the way. Suzanne and Lara were waiting just inside the door, and began to play their parts. \"Is this our new little bitch? I do hope she is housebroken!\" The girls quickly stripped off her clothes, and took her into the bathroom for a little enema party. I sensed humiliation and excitement Suzie signals through the door. They emerged from the bathroom with Millie down on all fours, said \"Heel, bitch!\" and walked up her up and back, making her heel with tugs on the leash. \"This one has potential, but she will need sharp corrections!\" \n\nLara reached down and caressed Millie's ass a bit. \"Look at this ass Suzanne, it looks pretty good. She is a wet little slut, though, what a drippy pussy! Lara licked her middle finger and touched Millie's little rosebud. \"Look at that cute little asshole!\" With no fanfare, she slipped her finger into Millie's ass. Millie groaned and quivered. \"Oh, she does have a tight little ass. Master will take that like Sherman took Georgia!\" She giggled wickedly as Millicent sobbed. ",
        "Suzanne guffawed, then replaced Lara's finger with her own, pushing even deeper. Millie crooned like a falsetto singer. \"But didn't Sherman take Georgia only once? Master will fuck this tight little thing many times!\" Millie sobbed, but I heard her Suzie begin to spark hotly. \n\n\"Master, we have to go to the store for a few things we need to finish supper. Will you start her training while we are gone? Maybe you can get some of the 'rougher stuff' out of the way before we get back?\" I laughed archly, and heard Millie sniffle, and her Suzie sang of fear, humiliation, near panic, but also rising excitement. They noisily gathered themselves up and we heard the front door close and lock.\n\nI walked over in front of Millie in such a way that she could not miss the fact that I was standing over her. I sure hoped that Suzanne and Lara were right about how to do this. I took off my shoes and socks and then slowly and obviously took off my shirt and loudly unzipped my pants. Then I took off my pants and underwear, and stretched a little, and yawned. I reach out an gently caressed Millie's face, running my hands around her mouth and chin, touching her hair, her lips, and tilting her head up to look at her face. Then I grabbed the handles on her leather hood and made it crystal clear to her that I had total control of her head, being able to do anything I wanted to it. Her Suzie signal rose like an approaching siren, 'dopplering up' as if it was approaching me rapidly. \n\nI sighed dramatically, drew in a loud breath, and then shoved my cock in her mouth and down her throat. Her Suzie exploded in a cacophony of signals. I tried to shut them out, and follow the recipe of just using her to get myself off. Her throat was hot and tight and lusciously wet with saliva. I used the handles and just fucked it to please myself, but Millicent did not really struggle, she just sort of flowed and adapted. She kept her breathing controlled through her nose, and did not seem to gag at all. I even tried to push in hard, and got all the way down her throat even sooner than I had with Lara or Suzanne, but she handled it with aplomb. I was amazed. When I pushed myself all the way down and held it, she actually tried to gobble it down a little farther. Her Suzie was exploding, loud and uninhibited. Her panic was rapidly being converted to excitement. I began a rhythmic motion, using every millimeter of her mouth, hoping to come quickly, but I was suddenly in the zone. I was trying to shut out her Suzie signals, but it they pounding into me like the surf in a hurricane. \n\nShe was anticipating my motions, getting into my rhythm and breathing easily through her nose. She even began to expertly lick the bottom of my cock on each stroke on the way out, and suck me hard just as I bottomed out, and her Suzie was climbing higher with every little trick she worked in. I let down all my barriers and tried to connect to her. Her carrier was modulated with so much of what she wanted that I could not even begin to try to read her flight data recorder. But I could tell she was happy. She was the center of attention, and she knew she was pleasing me, and she loved it. She was visualizing me coming in her mouth, and she was looking forward to it. Her Suzie reached out and grabbed me, and suddenly I desperately wanted to come in her mouth, and I did. She groaned and roughly sucked it right out of me. She was most assuredly my kind of girl. \n\nLara and Suzanne had come back in, unnoticed, and were smiling as they watched. Suzanne spoke up. \"Look at that slut! She loves getting it down the throat. What a fuck toy she is!\" Millie's Suzie signal soared, she considered that high praise, and she was damn proud of it. \n\nLara took over. \"Look at her pussy drip! She swallowed all the come, but she let her dirty pussy juice drip all over my clean floor!\" Lara snapped her whip in the air. \"Get down on your knees, bitch. Lick up your stinking pussy juice until my floor is clean!\"\n\nMillicent kneeled down, stuck out her tongue, and did her best to clean the floor with it. Lara stood behind her and snapped her ass and legs with the whip, at first lightly, but then pretty smartly. At first Millie signaled humiliation and panic, and with each strike the pain made her cringe. But by the fifth stroke she was looking forward to it, hoping for it, waiting for it, and loving it. By the sixth stroke it was like a caress to her, and she began to drip juice from one end much faster than she could possibly lick it up from the other. Suddenly I could feel that she was the one in a zone, and I knew that if Lara hit her a few more times, Millie was going to come. I reached out and stopped Lara's hand. \n\n\"You may never come until I give you permission, slut! And you won't get any more of that whip until you earn it!\"\n\nMillie shivered, hoping for one more swat from the whip and not getting it. She was literally a bitch in heat. Her Suzie was pure and loud and aggressive and demanding. I had never heard one like it. Peggy's was pure and sweet and demure and accepting, but not demanding like this. Lara threw down some paper towels and Millie cleaned up as best she could. Suzanne and Lara went into the kitchen and began cooking dinner. I told Millie to heel and walked over to the couch and sat down, making Millie turn her ass towards me, then put it up in the air and her shoulders down on the floor. I began toying with her ass and listening to her Suzie. She was maneuvering her ass to encourage my fingers to enter her. She was amazing. Suddenly I was hard as a rock again, and she was wiggling her ass at me. I used my fingers to spread her ass checks, and kneeled down behind her. \n\n\"You may not come until I give you permission!\" I smacked her cheeks a few times and she quivered, Suzie sparking. I wanted to surprise her, almost hurt her, because our schedule did not allow her any orgasms until early morning, but I desperately wanted to fuck her. I entered her ass hard, she was tight as she could be, but her ass was also as hot as molten lava. I went all the way into her as soon as I could, and she screamed like an angry housecat. Suzanne looked around the corner of the kitchen door, looking to see if something was wrong. Her eyes got big as I pulled out of Millie's ass and then shoved myself in again. Millie growled again, and Suzanne covered her mouth to keep from laughing out loud. I tuned into Millie's Suzie, and she was hoping for another hard thrust. The line between pain and pleasure was blurred, and she might come if I was not careful. But she had control like Nora did, and I was going to make her use it. \n\nI leaned over into her ear, and said \"If you come without permission, I will throw you and your clothes out in the hallway immediately and we will have nothing else to do with you! Do you understand me slut?\"\n\nShe hissed \"Yes, Master. I will not come until you tell me I can.\"\n\nI immediately began fucking her ass again. Her Suzie soon became the equivalent of singing through gritted teeth, hanging on the edge to keep control. Keeping her on edge was exactly our plan. I stroked and stroked, enjoying it immensely, and listening to her Suzie as she struggled to retain control and not let herself come. I unzipped and took off her leather hood, then gathered up both her pigtails in one hand, and pulled her head up. She groaned, and her Suzie moved even higher. For her, saying that she liked it rough was an incredible understatement. I pulled her pigtails harder and turned her head around so she made eye contact with me. \"You really like it in the ass, don't you slut?\"\n\nApparently emboldened by the removal of her hood, she smiled coolly at me, almost recreating her haughty but hot expression from when we made our original wager. \"Not bad.\"\n\nI fucked her even harder. Her Suzie told me she was just on the edge of coming, but holding herself in. I was nowhere near coming. \"I need a little more stimulation, bitch! Could you at least try to squeeze down on me with your fat loosey goosey ass a little bit, or even try to do something that I can feel?\" I adjusted my stance for a little more penetration and pounded her even harder. Her Suzie was going wild, as she loved it hard and hot and in the backdoor. She was a slut, a truly magnificent slut. I realized I was just about ready to come, and I decided to adlib another little humiliation. \"Well I guess if you want something done right, you have to do it yourself!\" I pulled out of her ass and finished myself off with my hand, shooting a considerable volume of come on her back and butt, and watching her twitch as each spurt hit her. I hope she did not notice the utter fascination with which I watched my come drip down her beautiful ass. But her Suzie told me that when my stuff fell on her skin, she had just barely managed not to have a screaming orgasm as a result. \n\n\"You are such a slut!\" I stood over her. \"Look at your slut pussy dripping all over the floor again!\" I threw her some more paper towels. \"Clean that floor up, and stay there until I come back to get you!\" I stomped away without looking at her, and ended up in the kitchen. Suzanne and Lara were working on dinner, but had obviously been listening closely. They both had smirks on their faces. Suzanne whispered \"I heard you improvise there, Animal. Where did you come?\"\n\n\"On her back and on her ass.\" I said proudly.\n\nShe laughed, and looked around the corner. She then covered her mouth with both hands, came back into the room, and whispered \"She is reaching around and getting it from her back and swallowing it!\" They both giggled. \"Dinner will be ready in five minutes. Let's move her little sleeping pad near the table, and put her on a stay while we eat!\" She giggled again.\n\nWhen I walked back into the entryway, Millie was licking her fingers like she had been eating fried chicken. She turned her head when I caught her. \"Don't worry slut, there is plenty more where that came from, as long as you behave yourself!\" I laughed again. I picked up her doggy sleeping pad, then said \"Heel, bitch!\" and walked into the kitchen. I dropped her little pad in the corner of the kitchen with a clear view of everything, and then led her to it. \"Sit, down, and stay, slut!\" She curled up on the little pad, naked, and glared at me. We then ignored her.\n\nI launched into a domestic dialog with the girls. \"What's for supper? I am starving!\" I dramatically hugged and kissed both of them lovingly. \n\nLara spoke up. \"In a few minutes, you will taste the best Beef Stroganoff with fresh egg noodles that you have ever experienced, Master, plus a fluffy spinach souffl\u00e9 and a lovely fruit salad. But go wash your dirty hands, because you have been training the new bitch!\" \n\nI deliberately avoided eye contact with Millie, while smiling broadly, whistling on my way to the bathroom in the hall to wash my hands. When I returned, everything was on the table and the three of us down and passed things around family style, while Millie watched from the floor on her sleeping pad. The food was fantastic, the beef had been marinated with something very tasty and the sauce was delicious, and complemented the noodles very well. The souffl\u00e9 was light and perfectly spiced, with some sort of crunchy nuts distributed in it, and I showered Lara with complements on the food. Suzanne and I both had seconds, even though the initial helpings had been generous. Lara was right; both of us got all the food we needed, and we made a fuss over Lara and said that the cook needed several nice kisses, and we smacked on her and hummed contentedly for our audience of one. \n\nWe sat around the table and talked about Millie like she wasn't there. Suzanne began \"We already have a nickname for this one: 'Wet Spot' since her little pussy dribbles everywhere! I don't think she can help it, she is such a little slut!\"\n\nLara answered. \"She better learn to keep my floors clean or I will be whipping her little ass raw every time she is here, assuming she gets invited back!\"\n\nI laughed. \"Whipping may be what she is hoping for. She is a hopeless slut!\"\n\nLara finally said \"She is on liquids only so let's give her some water, and then we have some grueling training which I would like to finish before bedtime, although she will have some chores during the night, too!\" She laughed. \n\nI walked over and put fresh water in Millie's bowl, then led her over to it. \"Drink up, Millie. The way your little pussy drips we are going to have to make sure you stay hydrated. She gave me a killing look, then crawled over and began figuring out how to drink effectively from a bowl on the floor. When she had finished it almost all off, I said \"Good girl!\" Her look would have measured about 3 degrees Kelvin. \n\nSuzanne came over and took Millie's leash. \"Let's get started!\" She had Millie stand up, and restrained her wrists to the chains supporting the trapeze, and then her ankles, too. She then attached clips to her collar, and Millie was almost completely trapped. \"Remember, bitch, you may not come without permission!\" Millie was just a little taller than Suzanne, who stood and looked her in the eyes, speaking to her in a whisper, listening to her replies closely, and gently touching her chin. I couldn't quite hear what she said, but I saw Millie's eyes get wide in an expression of astonishment, as Lara stepped into view wearing a burnt orange and white strap on dildo, and carrying her whip. \"You are going to take one for the team, slut!\" She laughed almost maniacally. \"We don't have the midnight hex rally anymore, so we are starting a new and very private tradition, the midnight slut rally!\" \n\nESU until recently used to play another state school, a long time rival, and before that game, the ESU faithful would hold a midnight pep rally to put a 'hex' on the foe, thus the term 'hex rally'. It must have been very effective, because ESU had totally dominated the series over the years, winning the vast majority of the games. There was much celebration last year, as ESU capped the series with a final dramatic win, making one otherwise unremarkable backup QB a legend for a long scramble that set up a field goal that sealed the opponent's fate, sending them off once again a loser, and to another conference with no more scheduled games with ESU. Now WTTU was the closest state school and a long term rival. But this slut rally was going to be very different, and would continue until midnight, but total domination was also the goal. And she wouldn't feel the touch of that strap on dildo for some time, but hopefully she would wonder about where it was and when it was going to be used on her until then.\n\nSuzanne stood back about two feet from Millie, and said \"Truth or Whip, Bitch!\"\n\nMille looked up and her eyes got big, she squirmed but was thoroughly trapped in the trapeze and chains. \n\nSuzanne's eyes sparkled. \"Are all the Phi Phi's really bisexual?\"\n\nMillie said \"NO!\" and Suzanne gave her three lashes. \n\n\"You get fewer lashes if you tell the truth, and answer in the proper manner!\" Suzanne laughed. \"Are you bisexual?\"\n\n\"YES!\" Two lashes.\n\n\"Did you go down on your big sister when you were a pledge?\"\n\n\"YES Mistress!\" One lash.\n\n\"Did you make her come?\"\n\n\"YES Mistress!\" One lash.\n\n\"Did you like doing it?\"\n\n\"YES Mistress!\" One lash.\n\n\"Good! We'll see how good you really are!\" Suzanne reached and unclipped two snap rings and effortlessly turned Millie upside down, her head now at Suzanne's waist level, but still fully lashed to the trapeze. She stood with her pussy just in front of Millie's mouth. \"Eat my pussy slut! Millie dove in (or 'up', since she was upside down) enthusiastically. \n\nLara stood behind her with the whip, and narrated. \"Do you know how lucky you are to even get to smell that fine pussy, slut? Much less touch it!\" Millie stopped to breathe, and Lara gave her two hard lashes. \"Keep eating, bitch!\"\n\nShe must have been doing pretty well, because Suzanne clasped her arms together on top of her head and stretched a little, shifting her weight from one foot to the other. Lara gave her an occasional swat, but Millie's Suzie was telling me she was looking forward to every touch of the whip. Suddenly Suzanne threw her head back and came noisily, with Millie just as noisily sucking up her juices, and making very appreciative noises as she did so. Suzanne laughed and pushed Millie, still tied to the trapeze and upside down, over to Lara and Millie just as industriously began eating her. Suzanne began to swat Millie with the whip, knowing full well that Millie wanted even more than she was getting. Millie's work on Lara grew so enthusiastic that she was shaking the trapeze, and Lara came quickly with a little noise that sounded almost like a sneeze. \n\nLara pushed Millie toward me, and she took my cock in her upside down mouth almost casually, but instantly captured me and started to suck me hard. She licked, she teased, she hummed and she generally made love to my cock with her hot mouth. Her Suzie crowed in triumph as she felt me get hard as a rock between her lips. I swung her toward Suzanne, who grabbed her hips and held her as Lara gave her ten of the best, then swung her back to my cock, and then to Lara, who held her legs open while Suzanne gave her five high hard ones to the inside of each thigh. Millie's little pussy was dripping wet again. I looked at the clock on the kitchen wall. We were way ahead of schedule, and I was not sure we could keep this up for another several hours before we let her come. Improv time. \n\nI stood up. \"Millie, kneel there at the foot of the bed. We will let you know if we need you for anything.\" The look she gave me would have quick frozen and shattered an iceberg.\n\nShe kneeled at the right foot of the bed. I pulled Suzanne down on the bed until her hips were centered near the foot of the bed, and used my arms to hold her legs up, making clear that I was planning to devoutly devour her. Lara moved up to the head of the bed and held Suzanne's arms up above her head. Then she leaned forward and used her hands to gently touch Suzanne's breasts, making her stretch as she enjoyed it. My plan was simple, if you have to stall for time do something you genuinely love to do, slowly. I was going to run my hands and mouth all over Suzanne, and enjoy it immensely, and if it drove Millie crazy as she watched, untouched and untouching, so much the better. \n\nSuzanne held her legs up in a perfect vertical 'V', completely still, demonstrating her incredible muscle tone and control. I glanced back at Millie, who was staring at Suzanne's legs like she had suddenly encountered a masterpiece in an art gallery. I let go of Suzanne's legs and began to gently touch her, surveying and savoring her perfect musculature at my leisure. I was reminded of the first time I saw her naked, in her apartment, and thinking of her as the perfect anatomical model. Her light olive skin glowed in the soft light of the bedroom, like expensive vellum paper stretched over muscles of ideal form and incredible substance. I touched them, caressed them, massaged them, and delighted in them. I could feel Millicent's Suzie screaming that she desperately wanted to do the same. Lara added Suzanne's muscular shoulders and neck to her territory, continuing to pay rapt attention to the breasts and the crinkly little nipples attached. \n\nLara and I had now touched every inch of Suzanne's perfect surface several times. She was moaning and the room was redolent with her sweet pussy smell, which was now competing with Millie's ever present and furry little air freshener. I began kissing her thighs and moving toward her sweet little snatch, and Lara began kissing Suzanne's breasts. Suzanne began murmuring and moving her legs gently, and Lara began sucking her nipples in earnest just as my mouth arrived at Suzanne's mons veneris. I stuck my tongue way out and just barely touched her, like I was taking that first tentative little taste of some edible delicacy. It was delicious. I heard a hoarse intake of breath on my right and looked over to see Millicent holding her mouth open with a her tongue out, as if she could catch some of Suzanne's taste lingering in the air. I smiled and made eye contact, and shot her an expression that said 'I'm eating this and you are not, even though you just learned how great it tastes.' Lara moved up and began kissing Suzanne's face, whispering to her that Mille was watching me eat Suzanne's pussy. Suzanne shivered. ",
        "Suzanne's juice was dripping gently down toward the bottom of her outer lips, and I gently licked it like spring water dripping from a pair of lovely little pink stalactites. She shivered again, and I felt her Suzie crank up like someone had started a loud old lawnmower. I placed myself right between her legs, and slowly penetrated her pussy. It was hot and wet and all her leg muscles were tight and quivering all around me. I pumped her Suzie like a swing, trying to send it higher with each motion. Lara returned to gently touching Suzanne's nipples, rolling them alternatively between thumb and forefinger. I slowly increased my depth as her Suzie swung higher, and at almost my maximum effort she was just about to come. I looked over at Millie, and she was mesmerized, staring at my cock penetrating Suzanne. Millie was sending envy and desire \u2013 desire to be the one being penetrated like that. Lara bent down and bit one of Suzanne's nipples gently, and that sent her over the edge, and her incredible strength clamping down on my cock triggered my orgasm too, and I strove to bury myself as far inside Suzanne as I could get.\n\nMillicent was transfixed by the sight of Robbie's cock slamming in and out of Suzanne like a pile driver. His leg muscles flexed and the muscles at the top of his legs and the bottom of his ass pushed against the surface of his tight white skin as he reached maximum penetration. He grunted loudly, and Millie knew he was pumping his come deep inside of Suzanne. She wished it was into her, her pussy, her mouth, her ass, any place would do. She had never felt such envy. She suddenly deeply understood the old term 'covetousness' as what she felt. Lara was rubbing Millicent's shoulders gently, and she hadn't even noticed it when she got behind her and began to do that. Robbie stopped moving and pulled his dick slowly out of Suzanne, and it made a loud and juicy plopping sound, plus it still looked hard and sticky wet. Robbie looked at Millie and smiled a strange smile: feral, but still loving, she thought. What did that mean? \n\nSuddenly Lara's grip tightened on her shoulders, and pushed her head down toward Suzanne's fragrantly wet snatch. Robbie's command voice broke through her reverie \"Eat that pussy, slut! Suck it clean and make love to it with your mouth like your life depended on it! Millicent smiled. If all of Robbie's commands were as wonderful an idea as this one, she would have no trouble submitting to them. She inhaled deeply, savoring the blended smell and anticipating the taste of Robbie and Suzanne together and also realized she wouldn't mind being on a liquid diet like this all weekend. She dove in, just as if the rest of her life, her sex life at least, depended on it.\n\nRobbie and Lara watched as Millie worshipped Suzanne's pussy. There was really no other word that fit. She gently licked and sucked, beginning with her tongue like a tiny kitten gently caressing a butterfly and in just a few minutes, finishing like a strong mother cat wolfing down its prey. Suzanne had at least three more orgasms, but it might have been more. Just watching it made Robbie harder than he had been before he came in Suzanne, and it made Lara as wet and wonton as she had ever been. She lay on the edge of the left side of the bed, and leaned back as Millie performed her final magic on Suzanne. Then Robbie entered Lara's pussy and began stroking her strongly. He felt incredibly hard and burning hot inside her, and she could tell it would take him a while to come, but she was also sure that Millie would be ready when Robbie finished. It just felt right to her. Suzanne looked over with hooded eyes and smiled contentedly at them all. It seemed that this improvisation was going to work out fine.\n\nMillie was savoring the taste of the snack she had just polished off, realizing she could get high from that memory for years, and her pussy was twitching as she watched Robbie pound into Lara with just as much gusto as he had with Suzanne. She sorely longed to have those strong legs and buttocks and cock working on her, but for now she was content to anticipate her coming reward. She was already suffused with a sense of acceptance and belonging that she had never felt before. Suzanne slowly snaked over and began to suck one of Lara's nipples, almost like a sleepy nursing kitty. Lara suddenly felt the kind of amazing endorphin rush and peace she always craved, but this time it was hers even before her orgasm. She never knew she could feel this good. \n\nTime almost stood still for them all as Robbie slammed methodically into Lara. Suzanne stayed affixed to her nipple, spent, and at peace, remembering the touch of Millie's lips and tongue on her still quivering pussy. Lara, for her part, loved being gently nursed, and roughly pounded, and felt an orgasm begin to roll inexorably toward her. Millie was content for now to watch and enjoy the spectacle, as she knew she had something wonderful to look forward to after Robbie came, and she was also looking forward to being on the receiving end of a fucking like that, too, as soon as possible. Robbie looked up and realized all three girls were pretty dog gone happy and two of them were actively looking forward to him coming. Life was very, very good. He shook his head, as if suddenly awakening and trying to reorient himself. \n\nSuddenly I felt a cascade of Suzie signals, summing together like I had never experienced before. Suzanne sent almost mind numbingly loud contentment, and Lara send strong contentment plus a strikingly specific desire for me to shoot hard and fill her pussy up with my come. But Millie's Suzie signal was an amazing mix of contentment, a feeling of belonging, and her soaring desire to devour Lara as soon as I filled her, and an even stronger and still rapidly growing desire to be herself fucked mercilessly. The combined signals sent a jolt of electricity coursing through me like I had stuck a toe in the light socket, and I was shocked by how violently I finished up inside Lara. My initial salvo set off her rockets too, and as she came she made a few transiently painful fingernail marks on my ass and back as she gripped me and urged me even deeper into her. I knew they would be bright red tomorrow, but no problem, baby, anytime.\n\nI held Lara's legs up as Millie knelt before her for another session of profound pussy worship. Suzanne was still attached to one nipple, so I sucked on the other side, and felt a wonderful peace come over me. Lara had two additional big, loud, gut wrenching orgasms that expelled some of my come into Millicent's happy and ready mouth along with Lara's squirting juices. Then we all settled down into a happy kiss and snuggle for a few minutes, with the still unfucked and highly horny Millie in the bed between us. \n\nBut in a few more moments, I remembered the context and purpose of our improvisation, and I pushed Millie off, dumping her out of the warm bed onto the cold carpet. She gave me another one of those glacial looks, and Suzanne and Lara both made that quintessentially female \"Ohhhhhhhh\" disapproval sound at the hopelessly mean and thoughtless male. I put on my best 'kind but serious master' tone. \"Good dog Millie, but go back to your little sleeping rug. We will wake you if we need you. Right now you need your puppy sleep!\" I got in the middle of the bed and tried to arrange Lara on one side and Suzanne on the other, making it clear, I hoped, that they could play with my nipples if they wanted to. But alas, they snuggled tantalizing for a few moments, and then went right to sleep. Millie did not, and her Suzie reached out from her little sleeping rug and signaled unrequited need for a good fucking and some orgasms, along with a desire to express her burning irritation with me by perhaps nipping at my heels. But I had a few more surprises planned for her during the night, following the girl's Millie plan of maximum humiliation, punishment and frustration before we finally let her come. It was betting it was going to be spectacular when she did.\n\nAbout 3 AM I got that urgent urge to pee, but I remembered our plan and priorities. I got out of bed and walked over to Millie's little sleeping rug and kicked her, not too gently I hoped. \"Wake up, Millie!\" I said sotto voce. \"Heel!\" I shuffled into the bathroom, naked, scratching my balls. She followed to my left and just behind me, and after she came into the bathroom, I shut the door to the bedroom. \"Sit!\" I said, and she did a pretty good imitation of a dog sitting at obedience class, just to my left and in front of the toilet bowl. I then did my best imitation of a race horse, shaking my penis in preparation and reveling in just having one, and then I tried to take a very visible and loud piss into the bowl, aiming right for the center of the water and maximizing the sound level. I was pretty happy with the volume of the flow, having had at least a couple liters of bottled water earlier this evening and no chance to void for hours, and pleased too with the noise level, which I hoped seemed almost Niagara like in the quiet apartment. Millie watched, wide eyed and fascinated, her status as the female only child of a solidly upper class household meaning she had never been treated to such a sight before, especially from a foot away and right at eye level.\n\nI would normally shake that last little drop out into the bowl, and perhaps shiver a little, too, as so much stored heat left my body, but I simply pivoted to my left slightly and placed the end of my cock an inch from her mouth and said understatedly, \"Lick it clean, Millie.\" \n\nHer calm expression froze, her face turned ashen, and her previously calm and sleepy Suzie blared a warning signal. Since I was fond of submarine metaphors for Suzie signals, it reminded me of the alarm that usually sounded in those old movies right before someone nervously said \"torpedo in the water!\" Millie indeed seemed to regard my penis like a torpedo, a dirty, disgusting and dangerous torpedo. Her Suzie sent an absolute crescendo of revulsion and humiliation, but then something amazing happened. Her Suzie signaled that her disgust and revulsion had been almost instantly transformed into pure humiliation and that almost instantly into raw sexual excitement. She did it much faster than Suzanne or Lara had ever done the same thing. The knob on Millie's little fuzz box suddenly spun up to '11', putting a buzzing and raw nasty tone on her signal, and her face transformed, now wearing that 'hot but haughty' look that I was beginning to like as much as Lara's tight little smile. A wonderful wave of her beautiful pussy smell reached me, and I visualized her wonderfully nasty little wet snatch covered with that coarse and kinky brown hair.\n\nI thought that she would just engulf my cock with her mouth, but she did not. She kept her eyes on mine, and snaked out her pink tongue and just barely touched the little drop of at the end of my cock, in effect saying, 'I call your 'lick it clean, Millie' and raise you a 'watch Millie calmly tasting your urine'. She savored my frozen and slightly shocked expression, and then licked just a little all around the end of my cock, retracted her tongue back into her mouth, then swallowed and smacked her lips, all with a big smile on her face. She sat back on her heels, as if saying to me 'will there be anything else, Master?' What a girl! I looked at her sternly. \"Go back to your sleeping rug, Millie!\" She did, but her Suzie was crowing triumph and signaling much greater excitement than when we started. \n\nI crawled back in bed, and in a few minutes, Lara got up, touched Millie with her foot, and said \"Millie, heel!\" and Millie followed her into the bathroom. I couldn't see or hear them, but I detected another wave of humiliation and excitement from Millie's now almost frantic Suzie transmitter. When the door opened a few minutes later, I smelled two distinct pussy scents, both fascinating and wonderful. Lara got back under the covers and snuggled up next to me again, and Millie curled up on her little rug. A few minutes later, Suzanne cleared her throat, and slipped out of bed. She went over to Millie's little rug and whispered \"Millie, heel!\" and then went into the kitchen. She took something out of a drawer, then took Millie into the bathroom and closed the door. I detected both girl's Suzie signals ramp up, and then Millie's spike significantly. Then, even through the door, I heard Suzanne cry out, like she sometimes does when she comes, and then Millie signaled even greater excitement.\n\nThe door opened, and Suzanne sent Millie over to her rug with 'down' and 'stay' commands, and then slipped back into bed with Lara and me. She kissed us both on the neck gently and whispered \"Ready for the final part of our plan!? I looked over at the alarm clock on the nightstand, and saw that it would go off in about an hour and a half. I burrowed down into the covers, and tried to catch forty winks. The alarm seemed to go off ten seconds later. Suzanne got up first, woke Millie up, and give her fresh water to drink, and took her to the bathroom to relive herself. Lara rolled over and kissed me and said \"We are going to be really rough with her before you fuck her for her first orgasm. Let us do what she needs, so she is really ready for you!\"\n\nI stayed in bed and watched as the girls strapped Mille to the trapeze. She was completely naked. They strapped both her arms up high and spread apart, and both her ankles down low and far apart. Then they loosened her ankles a little and put straps under her knees, pulling them up and widely apart. It was as if she was in the position she would take in the 'stirrups' of a gynecologist's chair, but her body was mostly vertical rather than horizontal. Suzanne and Lara were naked too, and all three of them looked absolutely spectacular, I told them so. \n\nSuzanne smiled. \"You are about to be the only audience for the first act of a rather spectacular show. But keep resting, because you are going to be the star player in the second act!\"\n\nSuzanne and Lara stood on either side of Millie, with their whips and crops in their hands. Suzanne spoke first. \"You know you are a slut, Millie, and so do we. What we need to do now is make sure you are completely honest with yourself and with Master about what kind of slut you are!\"\n\nLara used her whip to slap Millie's thigh. Then Suzanne hit the other side with her crop. Her thighs got red, and I got a little harder. I concentrated and felt Millie's Suzie began to crow. There was some humiliation at being restrained and whipped, but mostly excitement and frustration that it was all she was getting. The girls repeated their actions, and Millie got even redder. The girls then proceeded to perform the equivalent of 'contrast therapy' on Millie. First Lara tenderly kissed Millie's breasts, circling them with her tongue until there were fully erect, and then she stepped back and Suzanne whipped them several times until they reddened and Millie's Suzie signal telegraphed massive excitement. Lara then caressed Millie's buttocks gently and then knelt to kiss them. After a few minutes, she moved away and Suzanne whipped them even harder than she had her breasts. I notice that her breasts became even redder and her nipples even more erect that they had been before. She was really getting wound up tight.\n\nLara knelt again and sucked Millie's toes into her mouth, caressing them. Millie's Suzie burned brightly, and I was surprised at how much she really seemed to like having her feet touched and kissed. Then Lara stepped back and Suzanne used her crop on the bottom of Millie's feet. It was like a ratchet mechanism: everything they did seem to drive Millie up higher and higher on the excitement scale. The girls both leaned into Mille and each took a nipple into their mouths, and gradually ramped up from gentle suction to little nips and bites. It was driving Millie wild. Then Lara kneeled between Millie's legs and began kissing the insides of her knees, while Suzanne methodically whipped her nipples with her crop. Suzanne stepped back and Lara stepped up her efforts, and Millie's Suzie said she was very close to an orgasm. \"You may not come until Master gives permission!\" Suzanne boomed. Millie looked up wide eyed.\n\nSuzanne motioned for me to come over and I got out of bed and approached Millie. Suzanne kneeled to my side so that Millie would have an unobstructed view, and then began to toy with my cock. Millie's eyes were now wide and glued to my dick. I liked that. Suzanne reached over and just barely touched my cock with her hand. It was a great tease, and it woke me up. Lara was gradually moving up the inside of Millie's legs, and was just kissing the tops of her thighs. I could smell Millie's pussy again. Lara took her whip and began to hit the inside of Millie's thigh on the leg opposite the one she had been kissing. It got red and I got fully hard. Lara began to kiss the red thigh she had just whipped, and then whipped the other thigh. Suzanne had me stand right in front of Millie, about three feet away, and then Lara moved behind Millie and started to whip her buttocks from behind. Suzanne used her tongue to hold up my dick, kind of making it dance and bounce up and down while Millie watched. Millie was right on the edge of coming, and her Suzie was a clarion call, then a fog horn. \n\nLara whipped Millie once, on the butt, really hard. Millie drew in a huge breath, and then Lara spoke right in her ear. \"You know you are cock slut, don't you? You like it in the pussy, in the ass, and especially shoved in your mouth, don't you slut?\" \n\nMillie got that hot and haughty look, like she was about to say yes and she was proud of it, when Lara kissed her and said \"Me too, honey and I understand!\" \n\n\"And you're a real cum slut too! You like to swallow it, you like to have it squirted on you, you like to have it squirted in you, you like to lick it off your body, and you especially like to suck it out of a freshly fucked pussy, don't you?\" Millie nodded her head, as if in some sort of trance like she was visually reviewing all the things Lara mentioned. Lara kissed her again and said \"Me too, honey. I understand, and it really gets my motor running too! In fact, before the weekend is over, I am going to make you lick the come out my ass after Master fills it for us!\" Millie groaned, and her neck got red, as her Suzie said hello to that idea. \n\n\"And you are a bona fide pain slut, too, you little bitch! You can come from being whipped and spanked, and you have been right on the edge for some time, haven't you? In fact, your perverted little pussy is just as happy getting whipped as it is getting fucked or licked, isn't it slut!\" Millie groaned again. She had never realized that, but it was probably true. Lara continued \"I can't do that. Getting whipped makes me get really excited, and then the sex gets me off, but the pain itself does not.\"\n\nLara kneeled down behind Millie and began to gently tongue her ass while simultaneously pinching her buttocks painfully, and Suzanne stood behind her and cupped both breasts in her hands. Millie's eyes snapped onto my dick again, and I knew it was really hard and ready for her. I positioned myself right at the entrance to her pussy, and just barely touched her. I held her chin up, taking her gaze away from my cock, and looked into her eyes, and whispered to her. \"I own you, Millie. You are completely trapped and unable to resist. You are a submission slut, too! You can get off just because you know you are owned!\" I slid my cock into her slowly; dipping my knees down to get just the right angle of entry. I somehow thought of an old trigonometry joke from junior high, something like 'the heat of the meat, times the mass of the ass, equals the angle of the dangle.' The meat felt really hot to me, and I knew I had the right angle. She was hot and wet and she quivered as I slid in. She felt wonderful. I never took my eyes from hers, and I went to maximum depth. She looked at me with that hot and haughty expression and it drove me crazy. \"You may come!\" I cried, and fucked her really hard and she came on the third hard stroke. Her eyes rolled up in her head and all that stored frustration came out, and her Suzie rang out like pealing bells. ",
        "My plan was, like the old song almost said, just keep on fuckin', mama. I was in the zone. Lara stuck her tongue up in Millie's ass, and she came again, her fine little snatch grabbing my dick hard. I was just getting warmed up. Suzanne pinched her nipples hard, and she game again with a gasp. I kept on fucking her. Suzanne stepped away, and then came back holding the nipple clips that I had used when walking Millie over. She put one on each nipple, and when Millie looked down at them stuck on her nipples, and she came again. Suzanne reached up and pulled her head over the side, and kissed Mille deeply, and whispered in her ear. She came again. Suzanne then walked away and just watched the little nipple clips sway and pull on Millie's nipples as I fucked away at her. \n\nLara looked on with interest, and just as it appeared Millie was about to come, she ripped one of the nipple clips off and Mille came explosively, squirting voluminously from her hairy pussy for the first time. Her Suzie signal reached new heights, too, and I thought perhaps the sexual stimulation and the pain were additive, making her come even harder. I kept on pumping her. Suzann returned with an ice cube and began using it to stimulate the nipple she had just removed the clip from. Millie was so turned on she was barely conscious, and she was just on the edge of another orgasm in a series of at least six she had had so far. Suzanne leaned into my ear, and said \"Let me know just before you are going to come inside her. I am going to pop this other nipple clip to trigger her to come again, and then after you finish filling her, Lara is going to clean her out.\" It sounded like a great plan to me. A few moments later, I felt the tide rising and knew I was about to come. I told Suzanne, and she motioned to Lara. I grabbed the chains holding the trapeze, and used them to leverage myself for maximum penetration of Millie. Suzanne ripped the nipple clip off, and Millie cried out. Two seconds later I came in Millie, grunting and spurting as violently and voluminously as I ever have. Millie suddenly shook and had what appeared to be her biggest orgasm yet, throwing her head back, clinching her teeth, and I saw her abdominal muscles began to move like snakes in a sack. \n\nI pushed into her and after my first squirt she shook and squirted herself, in the throes of another powerful orgasm. I felt her clear and hot juices run down my legs. I shot everything I had, and after nine or ten hard, deep strokes I knew nothing else was going to come out of me. I pulled out with a very audible 'plop' sound, and Millie didn't move. She looked like a stun gun had fired all her muscles and they could not relax. Suzanne caressed her breasts and whispered in her ear, and Lara hung from the chains and began gently kissing Millie between the legs. Suddenly Millie's eyes opened, and she looked at me wide eyed, then she turned her eyes over towards Suzanne, whom she could not see behind her. The she realized it was Lara going down on her, and what was about to happen. Her neck moved back and she said 'Oh, God!\" and then was racked by another orgasm. Her Suzie signal blared so loud that I was sure that both girls could hear it, not just me. But Suzanne didn't show any signs of that, and Lara was quite busy. Lara's head moved back and forth and she made guzzling sounds, and Millie came again, shaking the trapeze and gasping for breath like an asthma patient. Lara made a big sucking, slurping sound, and then smacked her lips, showed me that wonderful tight little smile, and said \"all gone!\" What a woman! \n\nSuzanne gently rubbed Millie's nipples and kissed her cheek, and Millie began to mutter \"Oh God, Oh God, Oh God\" over and over. Lara stood and kissed Suzanne for a moment, and then we unsnapped the clips holding Millie and carried her to the bed. She shook and babbled and cried. I kissed her mouth gently, and both girls continued to clean up between her legs, and she continued to produce wetness there for another ten minutes. Her breathing gradually returned to normal, and she found her voice. \"I love you Master, and you Mistress, and you Mistress. You do own me, and I like it. I'll do anything for you, and you can do anything to me you want\" She blubbered and cried some more. \"That was far beyond even my wildest fantasies. I think I almost died, and it would have been worth it!\" Suzanne kissed her and said \"We want to take care of you, Millie, but you will have to obey us strictly. You have a very powerful sexuality and you must learn how to use it safely or you may get hurt. Until further notice, you must agree never have sex with anyone unless Master is there to guide you. Do you understand?\" She said yes and cried some more. Soon she fell asleep and the girls cuddled with her. Millie had one more big time fuck session coming after the football game, plus another surprise coming before the party, and the combined effect should be to keep her in a sexual slow simmer with occasional boil over's for the next few months. That was our plan.\n\nAll three girls were sleeping soundly as I watched the national game day and pregame show for the ESU versus WTTU game, which was early afternoon and carried nationally. In the WTTU segment, an update was given on Spike Bleach, the prematurely white haired former WTTU coach and his controversial firing, and the almost universal hatred of James Craig in West Texas. Bleach's wide open offensive style had been controversial, but WTTU had never had a better won loss record before or since Bleach had been at the helm. There had been some unfortunate scandals involving the new coach from the Southie conference that had replaced Bleach, and WTTU was no longer really considered a legitimate contender for a BCS bowl this year. Many of the alums wanted to clean house: not just fire the new coach but get rid of the university administration types that had been bullied into firing Spike Bleach, on what later was found to be very questionable evidence. On the football field, Bleach had always put all the fast recruits on offense, and the defense only got a fast player if he had concrete hands, figuring that on defense it was okay to just knock down passes instead of catch them.\n\nWTTU still had a pretty good offense, with an experienced quarterback and receivers, and a hotshot freshman running back, but their defense was a glaring weakness. Last year, hardly one of ESU's best, saw them pileup over 400 yards rushing against WTTU, and the game was never in doubt. Even the most rabid WTTU homers acknowledged that everything would have to go just right for WTTU to have any chance of winning this game. The announcers used the hackneyed phrase 'addition by subtraction' which implied that some of the departing seniors from last year's WTTU team were not very good and the new freshman recruits couldn't help but be an improvement. Among those departing seniors was Little Jimmy Craig's brother, Steve, who played wide receiver and thanks to his press hog dad, James Craig, had a lot more press stories and blog mentions to his credit than he ever had receptions. A play maker he was not, but at least he graduated in four years, unlike Little Jimmy. \n\nESU kicked off, and WTTU tried but had no luck running against the ESU defense, which was lightning fast, shed blocks quickly, and flowed to the ball very well. WTTU quickly went back to their normal 'dink and dunk' short passing game instead of a running attack, and got two first downs before the ESU defense stiffened and forced a punt. WTTU was not paying attention and ESU sent a total punt block effort and two rushers actually got to the punt, one deflecting it slightly and the other blocking it solidly and back away from the line of scrimmage. ESU got the ball on the WTTU 35, and four rushing plays later ESU went up 7-0. WTTU then had some success with the short passing game, making several first downs on the next drive, and a missed tackle let WTTU tie the game at 7-7. It stayed tight with ESU scoring on long clock eating running drives, and WTTU scoring on a tricky long pass. At the half, it was 28-14 ESU, but WTTU was still within striking distance.\n\nAt halftime, there was a TV ad from the Real Texans for Truth SuperPAC, accusing James Craig of lying about Spike Bleach to get him fired, taking pay for play money when he was in college many years ago, and then the ad finished with sound bites of several of Craig's many embarrassing on camera gaffes. James Craig may be a politician, but he was neither smooth nor polished nor highly intelligent. But there was no mention of Alpha Gamma fraternity nor the slip and slide videos. The PAC could have probably saved its money, because the latest polling showed that James Craig would be lucky to get 5% of the vote statewide, and in West Texas, he would be lucky to get 2%. All three girls joined me to watch the halftime show and second half, plus play kiss, slap and tickle, and it was suddenly one of the best games in the history of televised football. Lara put out a wonderful late brunch buffet that filled everyone up just fine, except Millie who had to watch from her sleeping rug, and was only allowed to drink from her bowl on the floor. Suzanne snuggled in next to me and I kissed her, then my curiosity made me whisper in her ear to ask \"What did you take from the kitchen to the bathroom and what did you make Millie do to you?\"\n\nSuzanne grinned in a wolfish smile, and then her Suzie spiked a little with the memory, as she leaned into my ear to reply. \"I got one of those envelopes of honey that they give out with the biscuits at the drive through chicken place near campus, and then I indulged myself, since I had a compliant and horny handmaiden available!\" She smiled and snuggled even closer to me and I knew she wanted to tell the story, so I just waited. \"So I had her give me a nice warm enema and then open the end of that little envelope and squeeze the honey out into my ass. Then I had her count to 100 and then lick it all out of me! I think she liked it as much as I did, but I got to come and she did not. She does have a wonderful tongue, and I'll return the favor someday.\" \n\nThat certainly explained the Suzie signals. I laughed and kissed her. \"I thought I heard that little noise you make when you come sometimes.\" Suzanne just held her tongue up against her upper teeth with her mouth open and looked thoughtful. She must know that drives me crazy. \n\nJust before the end of the halftime show, the game day TV show had two of the their frequent 'courtroom final argument' debates: one on conference realignment and the prospects for a national playoff format, and the second on whether or not ESU was 'back' as a national football power after two very subpar years. As usual, the overbearing former NFL defensive lineman that that had the reputation of having the combination of the lowest IQ and the biggest ego of the entire broadcast crew served as judge, and the two attorneys that were advocating the opposite positions in the debate were played by a satellite radio sportscaster named Mark Fudge who was a 'yes man' for the Southie Conference, and Jack MaRoot, a former coach who now worked as a broadcaster. Mark Fudge launched on his feeling that a playoff could not be done by picking just the best 4 teams to do a two game semi-final and final elimination game playoff, because the best four teams would always come from the Southie Conference, and the other, inferior conferences would complain plus it would just be a duplication of the existing Southie title game, but the 'super conference' model was not good either since the Southie conference was so far superior to all the others that there would be no real chance to get three other credible 'super conferences' to support a 64 team conference playoff format. MaRoot countered that the Southie Conference's impressive won-loss record was a result of the fact that they were known to pay recruits and their families to commit to Southie schools, citing the recent scandal involving the use of gambling casinos to launder payments, and the much lower Southie academic standards that allowed athletes who were barely functional illiterates who could not hack it academically at most colleges to graduate with a degree in general studies or sports history. He used the example of the recently departed former ESU in state rival school that moved to the Southie conference and instantly had the highest academic and admission standards of all the schools there. It reminded me of the old joke about the Alpha Gamma grad that moved from Texas to Oklahoma, and as a result the average IQ in both states went up. The judge ruled for a national 64 team format, kicking off continuing and uncivil debates all over the country. \n\nThe ESU case arguments were similar, with Mark Fudge packing his arguments that ESU had been miraculously lucky in previous years and could never hope compete in the wonderful Southie conference, where they played 'real football' instead of gimmicky football, and where what mattered was football, not marketing. Jack MaRoot countered that ESU had great facilities and always got great recruits and great coaches and thus would always have competitive teams, and that ESU had 'eyeball power' and good demographics and always drew a strong national TV audience, and that it was one of the cleanest programs and would never suffer the probation and other NCAA infractions and punishments that Southie schools so often did. The judge ruled that ESU was back, but that next season both their offensive and defensive coordinators would have new head coaching jobs and ESU would again be scrambling to keep up a winning record. \n\nESU took the second half kickoff and drove the ball methodically with 80% running plays to score and go up 35-14. The two teams then exchanged scoring drives, with ESU scoring a touchdown and WTTU stalling and settling for two field goals. Early in the fourth quarter, the score was 42-20. The ESU defense began an all out rush on the WTTU quarterback, who was forced to throw on every play to try to score, and he was sacked ten times in the fourth quarter alone. ESU won 56-23, and there was great celebration all around. Even the TV analysts were now convinced that ESU could make a BCS bowl, and maybe finish very high in the final polls. \n\nWhen the final highlights and recap ended I shut off the TV. Suzanne took me into the bedroom and had me change into I pair of jeans and a tee shirt, and as I returned to the living room I saw Millie once again dressed in her eighth grade school girl outfit. Suzanne was dressed in a conservative but tight dress with some glasses and looked like the 'hot but inhibited teacher' character in some movies. I tuned into her Suzie and found her carrier modulated by all her unfulfilled fantasies from junior high, triggered and refreshed in her memory when she put on that outfit. Lara was dressed in a high neck and very conservative dress, with her hair up, and looked like a really uptight school principle. Millie's Suzie was telling that she wanted to be double teamed by the young male and the young teacher, but was afraid of being caught and disciplined by the mean principle. I could see some real possibilities here! I did not realize that Suzanne had taken a more direct method than my talent, demanding that Millie whisper her junior high fantasies to Suzanne while playing Truth or Whip! Thus Susanne and Lara had even better and more specific information than I did.\n\nMille was standing next to a bookshelf, trying to reach up for a book on the upper shelf. I came in, playing the horny junior high guy, and began copping a feel of Millie's ass from behind. Millie demurely removed my hand, the first time I grabbed her, and the second time, but the third time she left it there and pushed back against in gently. Sufficiently emboldened, I ran my hands all over her ass and began to cup her breasts. Suzanne suddenly appears, playing a hot music teacher, and observes my roaming hands. She approached Millie, and said \"You are letting that young man paw your young body! Do you really want to allow that?\"\n\nMillie looked dreamily hat her and said \"Yes, it feels good!\"\n\n\"Have you no shame?\"\n\n\"Not with just the three of us here.\"\n\n\"Would it shame you if I touched you too, young lady?\"\n\n\"No, Ma'am. I think I'd like that!\"\n\nSuzanne pulled Millie's skirt up and ran her hands between her legs. \"You are wet, you wanton, hussy!\" she exclaimed. \"Have you no shame?\"\n\nMillie smiled and gave Suzanne her hot and haughty look. \"I think it is a shame you haven't touched me before, Miss Granot!\"\n\nSuzanne sputtered in character as the music teacher in mock indignation. \"Well, I never......\"\n\nMillie kissed her. \"I know, but you should have. I always wanted you to!\"\n\nI pushed Millie down on the table and took off her panties, and made it obvious that the clumsy but aggressive young boy was going to fuck her. She lay on her back and Miss Granot looked on, scandalized, but maybe jealous, too. \n\nThen Miss Granot seemed to make a decision. She slipped her panties off and tossed them to me, and then climbed up on the table, put her legs on either side of Millie's head, and sat on her face. Millie began enthusiastically kissing and tonguing Miss Granot's bush, and making muffled noises that sounded something like 'yummy'. Miss Granot found herself facing in the young man's direction, and discovered that he was enthusiastically smelling the panties she threw at him, and saying something like 'yummy\". Millie's Suzie signaled absolute and total excitement, validating her girlish fantasies. Miss Granot and I came just about the same time, and Millie, feeling us both gush fluids on her, had a huge orgasm, crying out with joy. But the noise brought Lara, playing the strict school principle, bursting through the door. \n\n\"Oh my, one of my students, and one of my teachers, behaving like harlots!\" She stamped her feet and the focused her energy on me. \"If you are not out of her in one minute, young man, I will remove your testicles!\"\n\nI drew myself up to full height, turned Lara as the Principle over my knee, and spanked her, hard. \"You should know better than to speak to me like that Principle Prissy! Your duty is to punish these two that you have failed to properly supervise! Then I will decide what your punishment will be and whether or not to have you fired!\"\n\nThe principle looked scandalized, but she was breathing hard. She turned her attention to Millie first. \"Since you are already up on the table, young lady, turn over and bare your butt for the spanking of your life!\" Millie rolled over and looked back over her shoulder with that hot but haughty look in full flower. Lara used her hands to spank Millie, and by the third swat Millie was clearly enjoying the hell out of it. Staying in character, that appeared to make the principle madder, and she spanked her even harder. Millie almost came. \n\n\"Alright, young lady, you and your teacher get on your knees, right now!\" Both complied. \"You, young ruffian, come stand right here. If you girls are so interested in your penis, and you are so proud of it, let's just do this right. Stick out your tongues, girls!\" They did. \"Now you masturbate yourself until you shoot your nasty stuff on their tongues, if they are so interested in it!\" She proceeded to spank both of them very soundly. I discovered I was a method actor, and soon found the sight of their reddening butts highly stimulating. My first shot landed right on Millie's tongue. \"Make sure they both get half!\" he principle yelled. I did. The principle continued to spank them hard, and looked so excited than maybe I should have made it a third for all of them. I was soon spent I needed to sit down, and the girls threw off their clothes and began to kiss and caress each other. I had a good vantage point. Soon Millie was kissing Lara between the legs, and Lara was kissing Suzanne, and Suzanne was kissing Millie. Then some sort of silent signal heard only by the girls made them switch directions. It was like math class, as they moved through almost all the possible permutations. I figured they could go on like this for hours without me. ",
        "I realized that I needed to take another leak, and ambled toward the bathroom again. I scratched my balls absentmindedly, often my habit when I am about to undertake lofty philosophical and mental explorations. I considered how well this semester was going. My grades were great, I was in the best shape of my life, and I had a wonderful thing going with two of the most intelligent, beautiful, and athletically gifted women on campus, plus their blessing to date other girls. They would do anything for me, and thanks to my only talent, I could make them come better than any other guy they knew. Life was good! \n\nWhile I was being honest with myself, I should probably admit that I had already fallen in love with Lara and her tight little smile, and if I hadn't given Suzanne her pre-approved 'dump me for free' card, I would have already fallen head over heels for her, too. Peggy was so hot and made me feel so at ease that I could be happy with her for a long time, and Millie was surprisingly hot, and she was already having much the same effect on me that Lara did, and I could easily fall in love with her in about ten minutes. Life was really good! \n\nI had to take a shower and get ready for a big party later tonight, possibly the most incredible party I had even been invited to, and I was going with three very hot women in some of the sexist costumes ever. Life was really, really, good!\n\nJust before the bathroom door closed behind me, Millie poked her nose through and ambled on all fours next to me, sitting expectantly on my left with her face about a foot from my dick. She gave me that hot and haughty look, then stared at my dick hanging out over the toilet bowl and said \"woof!\" with a big smile on her face. Life was fucking incredible!"
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "sorority",
        "anal",
        "football",
        "oral",
        "college",
        "threesome",
        "liberal",
        "fraternity",
        "felching"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-11"
}