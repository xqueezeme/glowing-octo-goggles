{
    "title": "What She Needs Ch. 08",
    "pages": [
        "(editor's note - well here it is, the long awaited sex scene. took me forever to write and it is long as hell, hope you guys all enjoy it and it is everything you were hoping for.) \n\n*\n\nDavid's mouth was pressed to Laura's as their tongues played and danced. His hips rocked hard against hers and he was amazed at how unrestrained she was to rock up to meet his deep downward thrusts. She was so tight, so wet, and her muscles clung and gripped at his cock, pulling him in deeper, begging for him to pound her harder. He stopped kissing her to watch the extreme pleasure play over her face, her head rolling side to side on a pillow of red curls, her tiny body writhing under his assault, and through it all she was begging him for more.\n\nHe lifted up, sitting on his knees, grabbing hold of her slender, sexy hips, pulling her back, driving into her at a new angle. Her hands flung about, smacking at the lush covers and gripping, wringing them in her hands, as her heated cries and moans filled the room.\n\n\"Oh God, YES! David, please! MORE!!!!\"\n\nPulling her up from the bed, cradling her in his strong arms, forcing her to ride him; he needed to hold her diminutive body next to his. To feel those pert tits and hard nipples press to his chest. He had been waiting for this moment for so long, he wanted to savour every inch of her. \n\nKissing, nipping at her ear, he whispered in a low husky voice, \"Is this what you wanted Laura, what you needed? Tell me you wanted me to take you.\"\n\n\"Yes....yes...yeeessssssss! I've been waiting for you to take me. Fuck me David....PLEASE!!!\"\n\nShe pounded her hips harder against his, his fingers tied up in her fiery mane, tugging her head back so that he could once again devour her lips. Just then her body quivered as she rode her heightened orgasm, her pussy gripping hard around his cock, squeezing, releasing, and then pulling it again. He moaned and grunted loud as he came inside of her, filling her tight sex with every drop of his seed.\n\nHer head dropped to his shoulder and she nuzzled into him, both of them panting wildly. It was everything he had hoped for.\n\nThe alarm went off at 4:30 AM. David groaned as he slapped it. He then cussed feeling that his boxers were wet. He hadn't cum in his sleep in years.\n\nIn the shower the dream was still very much alive in his mind. As he was drying off he was thinking about cancelling on Laura. How was he to keep his erection in check around her with that dream on his mind?\n\nThe phone rang.\n\n\"Morning.\" He knew it had to be her. \n\n\"Mornin. Should I pack snacks and a big thing of coffee?\"\n\nDavid laughed; she hadn't a clue. Why would she? He had made no mention about his boat.\n\n\"It's not necessary. I keep the boat stocked.\"\n\n\"Oh...ummmm...ok then. Well I am ready when you are.\"\n\n\"Just got out of the shower, I will be down in about fifteen minutes.\"\n\n\"Great.\"\n\nLaura hung up the phone letting her mind process two things; the boat was \"stocked\" and was he standing there nude while on the phone. Funny that the last thought would be on her mind, but she mindlessly licked her lips at the idea.\n\nThey both came out their doors at the same time. It was still night and the street and surrounding houses were quiet and dark.\n\n\"So where do you keep your boat, Pirate's Cove?\"\n\n\"No, Oregon Inlet, I like being closer to the ocean.\"\n\nNow she was really thinking. She had assumed they would be fishing in the sound. She knew it wouldn't be a tiny boat, maybe twenty-five or thirty feet. But she now kept thinking about the conversation last night about his wealth. She was also curious about ending up in her bed. She hadn't remembered climbing into bed and she always slept nude. \n\n\"David, ummmm...I don't remember going to bed last night.\"\n\n\"I wouldn't think you would. You fell asleep on the couch....in my arms. I carried you and put you to bed.\"\n\nThere was moment of silence as she processed that. She needn't ask if anything happen, she knew her body well enough to know that answer. But the thought of falling asleep in his arms, of his sweet gesture, it made her heart flutter.\n\n\"Laura?\"\n\n\"Yes?\"\n\n\"Nothing happened. Are you ok?\"\n\n\"Yes, yes....\" She chuckled. \"I know that, I just didn't know I was that tired.\"\n\n\"Long weekend I guess.\"\n\nThey seemed to be the only car on the highway until turning down the two lane road that carried them south. They were accompanied by other four wheel drive trucks and SUV's all carrying fishing equipment. Most of them turned into the same marina they did, the others turning left to head out to the four wheel drive beaches for surf fishing.\n\nHe parked and helped her with the bags. They walked into the supply store and he talked with several of the captains about fish and tides. Laura looked through the baits and some of the rods.\n\nDavid came up behind her and laid a hand on her shoulder, \"The boat's fully stocked with all of that also.\"\n\n\"I lost my favourite rod last year when a striper caught me off guard. Actually, it was my favourite reel.\" She smiled up to him.\n\n\"If you buy one here, I can get you a great discount.\"\n\n\"Not necessary. It was nothing special, just good memories and been passed down the line. I got plenty of others that work fine.\"\n\n\"Let's head out to the boat then.\"\n\nShe turned and walked with him down the docks, past huge charter boats. First mates were busy setting up rods or helping people on board. Several boats were already heading out. Families that had paid for the \"experience\" took a multitude of pictures, trying to capture every memory.\n\nAt the end of the row sat a beautiful Carolina Sportfisher. Her bow sat out a good ten feet further than the other boats and the riggers and flying bridge towered far over head. The hull was royal blue and anything that could be trimmed in deep cherry teak, was. She was new and streamline, and several people were standing about at her stern looking her over. She moved beautifully in the slip, rocking with an easy sway in the low wakes as other boats passed. Across the back, in gold leafing was her name, \"Envious,\" how perfect.\n\n\"Wow. That one is gorgeous.\"\n\nDavid just beamed. Laura might as well have complimented one of his daughters. \"Thank you.\"\n\nShe stopped dead in her tracks. \"You ARENT serious?!\"\n\nHe took her arm and chuckled at her, \"I most certainly am.\"\n\n\"Morning Mr. Ross. Gonna be a beautiful day.\"\n\n\"Yes it is Michael.\"\n\nMichael pulled one of the ropes and brought the looming boat closer in; David stepped easily over and then he and Michael helped Laura.\n\n\"Watch your step Miss.\"\n\n\"Thank you very much.\"\n\n\"Mr Ross. Captain Bull and I are taking out a small charter on 'Lonely Surf,' just along the coast line. A family booked her Saturday.\"\n\n\"Sounds good. Thank you Michael.\"\n\nShe saw the look and smile he gave David. It didn't take her long to put it together. Michael was the first mate; he probably lived on the boat most of the time. David had him set up the boat and gear, but wasn't going to have him tag along.\n\nThe man tipped his hat and undid the lines, letting the beauty free.\n\nLaura looked in amazement at her; the large back window had a huge marlin etched into it with a few tuna also. They looked like they could swim right off the glass. She ran her fingers over the back of the fighting chair, even it was made of adorned teak.\n\n\"You can put the bags inside, I am going up top to steer us out of here.\"\n\nShe nodded stupidly, still dumbfounded, and slid open the door. If she thought the outside was beautiful, she wasn't prepared for the extravagance of the inside. Tan leather furniture, plush dark chocolate drapes and pillows, and thick carpet that she really just wanted to wiggle her toes in. So that's what she did, kicking off her flip flops, giggling. The ride was so smooth; if she hadn't looked outside Laura wouldn't have even known they were moving.\n\nThere was a bar, equipped with a wine cooler and hanging rack with glasses, several swivel chairs and a large couch that curved from the door around and alongside the tinted outer windows. Little hidden lights gave a glowing look to the soft colors and made the room seem cozy. Setting her bags down on the couch in the sitting area she walked through the small dining area to the galley. It was bigger than her kitchen at home, and sported stainless steel cookware and the same marble countertops as the bar. The entire space was lavish and large; in fact she was almost sure this boat had more total square footage than her house.\n\nShe decided to make herself useful and put on the coffee. With that done, Laura paused a moment, trying to decide if she wanted to venture down the hall and be nosey. It didn't take her long to go for it. \n\nShe passed a bathroom that actually had a separate shower with an etched glass door and real granite sink. Not like her fathers boat that if you used the shower, the john would get wet also.\n\nDown five small steps took her to the bedrooms, two small ones on either side of the hall with bunks, and then a large master at the end. She pushed the door open slowly; her breath caught in her throat. It was a bedroom that romance novels would write about. It was lit by the same little hidden strands of lights and two port holes to each side, and two top up escapes. The covers were thick satin chocolate and again, cherry teak covered anything that stood still. A large flat panel TV hung on one wall and beside that, a heavy wardrobe with richly engraved doors, roses crawling up the sides and in bloom made the room feel like springtime.\n\nIt even had its own private bath, just as lavish as the other.\n\nFor a quick minute Laura thought about how many woman David had brought here, how many of them got lost in just the space alone, let alone his stunning blue eyes and strong arms.\n\n\"Ok, get yourself together.\" She took a deep breath and headed back out.\n\nShe stopped and fixed two cups of coffee remembering somewhere that he liked his black.\n\nDavid heard the door slide shut, and looked over to see Laura climb up to the flying bridge. He reached out to help her and smiled seeing the sealed cups. She sat down in the captain's chair beside him and looked out over the water as the sun began to rise.\n\n\"Oh my, that is....well, heavenly.\"\n\n\"Isn't it?\"\n\nHe knew she had taken a tour. She had been down there long enough. He wondered what she thought of it all.\n\nAs if reading his thoughts, \"so, I am thinking you are more than welcome to adopt me.\"\n\nHe laughed at her frankness. \"I don't need anymore daughters.\"\n\n\"Oh? How about a maid? I can keep this boat clean.\"\n\n\"That's what I pay Michael for.\"\n\n\"Ok then....a maid in your house?\" She laughed.\n\n\"Now you are talking. I'll buy you one of those sexy little outfits.\"\n\n\"David!\"\n\n\"What?! It was your idea.\"\n\n\"I thought we agreed you weren't a pervert.\"\n\n\"No...no, you assumed I wasn't.\"\n\nTaking another sip from her cup she watched as each boat sped up and headed out different directions.\n\n\"When you said fishing, I thought in the sound...spot, croaker sort of thing.\"\n\n\"Well, I could turn back, but we would look kinda stupid using the outriggers in the sound.\"\n\nHe slowly gave throttle and her bow crept up, it was amazing to Laura to watch how a boat worked, to see them rear up with speed and then plane off, cutting through the waves.\n\n\"How big is she?\"\n\n\"Sixty-three feet. She's a Paul Mann Custom.\"\n\n\"I know. It's rather obvious.\" She quipped.\n\n\"I didn't realize you knew that much about boats.\"\n\nLaura just shrugged. She didn't really. She could steer one, put in and take out her father's boat, and definitely make her way around one. She only knew it was a Paul Mann because she had been looking up charters before coming down here and when she saw a couple pictures of them, she fell in love.\n\n\"I'm a woman of many talents. So, do you charter this boat?\"\n\n\"Occasionally. Mostly she is for my use and to take out high end clientele or beautiful women.\" His smile was smug, and charming all at the same time.\n\n\"'Lonely Surf' is my usual charter.\"\n\n\"The other boat is yours also?\"\n\n\"Yes, but it is much older, and smaller.\"\n\nSome how Laura guessed it wasn't that much older or smaller, but she left it alone.\n\n\"Had you planned on going out with the captain and first mate if I didn't come along?\"\n\nDavid just shrugged, he hadn't really thought about it.\n\nThey rode for the next hour just talking about her school, growing up, his daughters, random casual conversation. Laura felt like she'd known him her whole lifetime, as if she were cruising with a long time friend of her fathers.\n\nFinally he let up on the throttle and let \"Envious\" come to a coast, idling nicely in the low roll of the waves.\n\n\"She is a very smooth ride indeed.\"\n\nDavid was concentrating on the equipment, reading the map and depth finder.\n\n\"I've caught some big flounder through here, and smaller schools of tuna. Let's drift a bit and run the bottom.\"\n\n\"Sounds good, flounder is yummy.\"\n\nAfter getting rods and bait set, Laura pulled off the light long sleeve shirt she had been wearing. Underneath was a red tank top that clung to her tiny body so perfectly. She was wearing her bikini under that and David took a moment to just drink her in. The copper curls were pulled back in a pony tail and her shorts were cut off just below that sexy crease where her thigh connected with her cute little ass. He could even see the bottom of the pockets hanging out. He had to turn quickly from her as he fought to get hold of himself, the dream still plaguing his mind.\n\nLaura wasn't noticing it a bit; she was concentrating on her rod, lifting it, and feeling for the bottom.\n\n\"Where's the drop?\"\n\nDavid looked over and out a ways pointing, \"there are two drops, one in about twenty-five feet, the other another forty feet from that.\"\n\n\"Do you fish for marlin?\"\n\n\"I do, but wouldn't dare with just the two of us. I'll put us on some good sized tuna though, maybe a cobia.\"\n\n\"I don't care really, either fish or a buzz, I'm gonna catch something.\"\n\nJust then she felt that long slow pull on the rod. David saw her smile and tighten her grip.\n\nWith a controlled pull up she held the rod firm, and then started to reel it in, the rod bending. He was impressed. She reeled her line in and then gave a steady pull up, only to do it all over again. Laura certainly knew how to flounder fish. \n\nHe readied the net and watched as she smiled ear to ear, it was a wonderful sight.\n\nThen he saw his rod bend over, \"Damnit!\"\n\n\"Set the net there, get yours.\" She exclaimed.\n\nAs David brought in his in the same manner he heard Laura squealing. Looking over his shoulder she had the rod in one hand and was scooping up a large flounder with the net in the other. He could have fallen in love just then.\n\nShe made quick to take hers off the hook and toss it into the live well, then help David with his.\n\n\"Think mine was bigger.\"\n\n\"Oh, do you now?\"\n\nThey were both laughing and rinsing off their hands.\n\n\"Let's do that again!\"\n\nHe was happy to see that glint in her eye. After last night she had seemed so lost and almost twenty years older, like she had given up. And now, she was a vibrant twenty-three year old again.\n\nThey made that pass several more times, bringing in the fish each time. \n\nLaura had lost the tank top and David was enjoying the view of her lush tits and the little bit of green fabric from her bikini that just barely covered her succulent breasts.\n\nThey were back up top the flying bridge and heading further out to sea. Laura wanted to go after some tuna.\n\nShe had her little bare feet propped up on the console, leaning back in the chair, enjoying the breeze. David leaned back and rested his arm across the back of her chair. He let his fingers touch the back of her neck softly. It was at this point he was reminded he hated the way his flying bridge was set up, with two separate captain's chairs instead of the one large bench.\n\n\"Do you ever stay the night on her?\"\n\n\"Rarely when she is docked here. I have taken her to the Keys and Bermuda, then, of course I stay aboard.\"\n\nHe could see it in her eyes again, that shock and awe factor. Funny thing was, most girls her age would have already jumped the Sugar Daddy train, but Laura wasn't the kind. He could tell she was impressed, but it had no bearing on whether or not she would like him.\n\n\"Laura, could you get me a beer?\"\n\n\"Only if I can have one.\"\n\nHe just smiled and watched her climb back down; it was a wonderful sight to look straight down into her cleavage.\n\nDavid took a minute to run a plan through his head. He needed to turn up the heat; he needed to touch her.\n\nAs she came back up he asked, \"want to steer?\"\n\nIt was like a kid a Christmas.\n\n\"Really?! Can I?\"\n\nHe took a step back and gripped her waist, pulling her into his arms and placing her between the wheel and himself, cradling her in his arms. He knew she had maneuvered boats, but nothing this big, and there wasn't really anything to worry about out here, just mostly holding on to the wheel, but it brought her closer.\n\nHe leaned in and talked into her ear, one hand resting on her hip, his thighs spread on either side of her as he sat in the chair. He took long drinks from his beer and occasionally reached around her to move the wheel or adjust the throttle. \n\nAfter a while, he pulled back on her hips, \"sit down,\" bringing her into his lap. She offered no resistance.\n\nThey talked easy, and his soft touches to her bare back or sides didn't seem to alarm her. In fact, at one point he almost thought she moved into his touch, wanting more of it.\n\nLaura was well aware of how close they were, of how his touches were making her quiver. And every part of her was telling her to back away, to slow it down, but she couldn't. Or maybe she didn't want to. She wasn't sure. But she was enjoying herself, and once again found herself in that state of confusion; was he coming on to her or not?\n\nAs they continued on he talked about different boats they would pass, or the fishing areas they were in, some captain's secrets, and even pointed out where he had lost a boat seven years ago. \n\nHis hands were on her shoulders and he was massaging her, just at the base of her neck and shoulders. She was reminded of the day he had put lotion on her, how wonderful it felt, and this was very much the same. \n\nHe moved down her spine and outwards over her ribs to her sides. \n\nHe chuckled lightly in her ear, his lips almost touching her, \"you aren't ticklish.\"\n\nShe teased back, \"you haven't found the right place yet.\"\n\nOh how he wanted to find that place. He wanted nothing more than to throw the anchor, take her below, and find all those special places. He hadn't had a single woman in that bedroom and now he wanted her to be the first.\n\n\"Is that an open invite?\"\n\nIt was his tone that caught her. It wasn't as light and joking as he usually was. Her pulse quickened and she felt a heat between her legs. She normally wasn't caught off guard, but she didn't know how to respond. She didn't know what he was thinking or what he wanted from her. Hell, she didn't know what she wanted from him.\n\nDavid could sense two things from her, she tensed at the thought that the sexual tension was hanging there, and her skin tingled in response as well. The first was a bad sign; the second was a good sign. With all his years, this told him she wasn't quite ready.\n\nHe patted her outer thigh, \"hop up, this is a good place to stop.\"\n\nAnd like that, Laura was left to wonder again. If he wanted her she wished he would just grab her and take her; then she could at least know whether to smack him or give in to his touch. Right now her body just kept thumping from one high to another.\n\nHe set up the outriggers and explained a few things to her, then went inside to steer, leaving the sliding door open. They trolled for an hour with no luck.",
        "Laura was stretched out along one of the padded benches sunning her self. David had looked back just in time to catch her wiggle out of those tight jean shorts before lying down. Now he had killed the engines and come out to join her.\n\n\"You are going to get burnt again.\"\n\n\"Never while you are around. Besides, you enjoy the excuse to lather on the sunscreen.\"\n\n\"Come inside, let's eat something.\"\n\nThey made sandwiches and sat on the couch, finishing their beers.\n\n\"Did you take the tour earlier?\"\n\nHer answer was an almost silent, \"yes.\"\n\nDavid had gotten up to get the sunscreen and was moving in behind her.\n\n\"Your back is already on fire, lay down.\" He gently pushed her down to the cushions of the couch. As he smoothed in the sunscreen she couldn't stop the little whimpers and moans, some from pleasure, the others from the sun burn that was already starting.\n\n\"We'll need to put some aloe on you at home.\"\n\n\"Mmhhmmm\"\n\nIt was feeling so good. His touch was relaxing, soothing, and euphoric. Her breaths were increasing and her body responding even though her mind was far from thought. As his hands made their way to the small of her back and then to creamy thighs, her legs spread slightly and hips adjusted.\n\nDavid was rock hard in an instant. That's it baby, don't think too much about it, just let my touch feel good, let your horny hot little body respond the way it should.\n\nHe leaned down over her and whispered softly, \"roll over.\"\n\nShe did, without hesitation. He started rubbing her chest and collar bone, down her slender arms, over each curve of her supple breasts, kneading his fingers into her. When he moved down to her flat belly and past that pretty little stone in her navel, her hips again shifted, rocking up to his touch. He smiled as his fingers dipped below her bikini line, following that crease of her thigh down to between her legs; they spread further. There it was, that one rock up of her hips, the soft whimpering moan that went with it, the spreading of her thighs, bending of her knees, opening up for him, the scent....my God, the scent of her sweet young naturally wet pussy. \n\nKeeping his hands right in the vicinity of her inner thighs and cunt, he waited for the right moment. It would present itself soon, he knew it. With his full touch, flat hands moving up her inner thighs, fingers pointed to her sex...it happened. She moved, thrust slightly just as his fingers reached her bikini and he conveniently sent them under the material and straight to her wet petals. He froze and waited.\n\nLaura's eyes got wide and she held her breath and didn't move.\n\n\"I'm sorry....I was...then you...\" He falsely stammered.\n\nHer eyes drifted closed again, her hips moved, lowered.\n\nHis fingers were still pressed to her soft labia. She decided to just lay still and she waited for what he would do. She didn't think she wanted him, but she wasn't sure. And she felt that at his age, he should definitely be the one to make the moves.\n\nHe did. He slid a finger up and down her wet slit a few times, slowly. \n\nLaura mindlessly moaned. It didn't matter what her heart or mind thought, her body wanted this.\n\nWith that, David slid two fingers deep inside of her, curling them quickly and rubbing her, his thumb pressed to her clit. This time her moan was unmistakable. He continued, moving his fingers slowly in and out as they curled hard. His erection was throbbing, she was so tight around his fingers he could already imagine how she would feel taking in his thick cock.\n\nOther than his fingers buried knuckle deep inside of her, the moment was far from intimate. She wasn't making eye contact, or moving with his conquest, but she wasn't stopping him either. \n\nA thought of dread came over him. Was this rape to her? Did she feel since she was out on a boat alone that she didn't have a choice?\n\nShe whimpered again as he pushed in deeper. How bad did he really want her?\n\nBoth of them startled when a booming horn came from outside, the CB crackled with a voice.\n\n\"Lucky Seven calling Envious. Everything alright Bull?\"\n\nIn an instant David drew his fingers from her wet pussy and moved over to the radio, grumbling to him self as he did.\n\n\"Phil, its David. Anything wrong?\" He was looking out the port side and Laura sat up to look also.\n\n\"Hey. Just worried since you are a drift and no signs of life on deck. Wouldn't want you to have a heart attack old man.\"\n\n\"Funny kid. We got out of the heat to have something to eat. All's fine.\"\n\nLaura tried to wrap her head around what had just happened. She had almost had an orgasm to his fingers alone, but she really felt like a deer in headlights. \n\nThe men talked a bit about fish and where the Lucky Seven had hit on tuna. Then David turned and looked to her as the other boat pulled away.\n\nHe sat there, looking at those shinning green eyes. Come on Laura. Call me to you, tell me you want it.\n\nHis heart sank at her words. \"So are we chasing tuna again?\"\n\nIt was as if nothing had happened.\n\n\"Looks like.\" He wanted to give her an opening. If she was uncomfortable, or felt he had pushed to hard, he wanted her to be able to back out easily\n\n\"If you want to that is. Or do you want to head in...or just stay here, sun bathe some?\"\n\n\"I can sunbathe at the house. Let's fish!\"\n\nShe was trying the best she could to get her mind on something...anything else other than the fire between her legs. Part of her wanted to walk over and beg for him to take her; or maybe just lead him down to the bedroom. But ultimately it was the age thing that stopped her. Would she be a little slut for wanting such an older man to take advantage of her? There was no mistaking what had just happened. He definitely wanted her, but wanted what? He's an adult Laura, just talk to him about it. She couldn't, she just felt she was being a sexually, overly charged young girl.\n\nDavid sighed, not enough so she could see it, but his disappointment ate at him. She hadn't wanted that; she hadn't wanted him. And now she just wanted out of the situation. But she also hadn't demanded to go home, so she obviously wasn't angry. \n\nHe would just keep it friendly and keep his hands off her.\n\nThe rest of the afternoon went well. They talked as usual, hit tons of fish and lost track of time, heading back in the sun started to sink lower in the sky.\n\nThey were seated up on the flying bridge again.\n\n\"I hadn't planned on being out this late.\"\n\n\"It's beautiful, and I don't mind. Will anyone be there to help with the fish?\"\n\n\"Yeah, I called in. They know I pay well, they'll stick around.\"\n\n\"David?\" Her voice was soft, and hesitating.\n\nHe closed his eyes, he knew what was coming and he didn't want this conversation.\n\n\"Yes, Laura.\"\n\nShe was searching for what she wanted to say. Should she just tell him she had enjoyed it? That she wanted more. She didn't know if she could say that, she didn't honestly know whether or not she did want anything further. She certainly hadn't resisted, but to be away from the situation now, it seemed odd to just say, I would really like your fingers back in me.\n\n\"Laura? I ....\"\n\n\"I just wanted to say I had a great time. I had fun.\" \n\nShe paused a moment looked at him with those sweet warm eyes and placed her hand on his arm.\n\n\"I enjoy being with you.\"\n\nShe didn't think that was enough, it was too vague, but it was the best she could do.\n\n\"I love your company as well, Laura. And you are far better to look at than Bull and Michael.\"\n\nShe had left him with more questions than answers, and he felt like a teenage boy in the back seat with a girl for the first time, fumbling.\n\nLaura chuckled, \"well I should hope so.\"\n\nThey had backed into the slip, Michael and a few others had gathered around to help with the fish. Laura was in the cabin packing up some of her things when David walked in with another older gentleman.\n\n\"Laura, this is a good friend of mine, Jack.\"\n\nThe man was well dressed in a light blue polo shirt and khaki slacks with dark brown deck shoes. Laura got the impression real quick he too owned one of the elite boats docked nearby. She also didn't figure he was the type that actually went out \"fishing\" on his boat.\n\nShe extended her hand, \"Pleased to meet you.\"\n\nHe raised an eyebrow and took a very noticeable long look up and down her entire frame.\n\n\"The pleasure is mine, darling.\"\n\nLaura looked at David, she saw him clench a fist and his jaw tighten. He then took a deep breath, she figured to calm him self.\n\n\"Jack's boat was just moved over to Pirate's Cove. There is a storm moving in.\n\n\"Will you be moving Envious?\"\n\nDavid laughed and turned his joke to Jack, \"No, my baby is paid in full. Not as much insurance hassles.\"\n\n\"We can't all have your fortune David. Let's have some drinks. I'll get Margaret and we can all relax here and catch up. I am sure she would love to meet your new fling.\"\n\nLaura's mouth damn near hit the floor. His new...what?! That arrogant ass! He didn't know a thing about her OR her relationship with David. Or was that how David had described her. She looked quickly to him and she knew fire was in her eyes.\n\n\"Ummm, Jack, we've been fishing all day. I am sure Laura is beat, and she is just a friend. She is actually dating the William's boy, Jesse.\"\n\nHer fire got hotter. Please stop \"attaching\" me to someone.\n\nJack had shrugged and was already calling his wife. \n\nDavid mouthed the words, \"I'm sorry,\" and Laura just shook her head.\n\n\"It's ok, I did bring a change of clothes. I'll take a quick shower.\" Grabbing her bag she headed down to the back bedroom.\n\nShe was pulling off her tank top when David walked through the door. His breath caught for a moment. He knocked on the door.\n\n\"Laura, I am sorry. We can go.\"\n\n\"No, its fine, just going to sit around an empty house anyway. Besides, I'd like to see his fling.\" \n\nIt was sarcastic and immature, but she didn't care.\n\nDavid felt his temper flare, not from her words, but from Jack. And now he could see that it had hurt her. He closed the gap between them quickly and grabbed her arm, possibly a bit harder than he had meant too. Turning her he looked down at her and was stern with his words.\n\n\"I did NOT call you that. I didn't mention you to him at all till we walked inside and I introduced you. Jack can be an ass. He was quick to assume.\"\n\n\"Quick to assume? Where would he even get such a notion? Do you often have quick young 'flings'? Is it hard for the town folk to keep track?\"\n\n\"What are you talking about?!\"\n\n\"Janet, Maria....Carey...me, just now on the boat?\"\n\n\"Janelle, and she and I have known each other for years. I didn't do a thing with Carey, and well...I am sorry for what happened. I...\"\n\nLaura wrenched her arm from his grasp. She wanted to cry and she didn't know why, and she damn sure didn't want him to see it.\n\n\"I need to take a shower.\"\n\n\"Laura I think we should talk...\"\n\n\"I think you should go upstairs and clear things with Jack. And by the way, adding that I am dating the 'William's boy' didn't help.\"\n\nLaura shut the door to the bathroom just as tears fell down her cheeks. Why was she so upset by this? And what was it that upset her, being referred to as a \"fling?\" The incident on the boat? \n\nShe took a rather lengthy shower, as lengthy as one can take on a boat anyway. She was standing there nude with her hair wrapped up in a towel and was looking through her bag. A knock came on the door.\n\n\"Hold on.\"\n\nShe quickly removed the towel from her hair and wrapped it around her body; \"come in.\"\n\nDavid had changed into a tan button up shirt and navy slacks. His hair was damp and waved back, she could smell his aftershave. He was gorgeous, but his face looked worn.\n\n\"You look nice.\"\n\n\"I keep clothes on the boat. And while I am sure it could stir an argument, Maria has a nice dress hanging in the wardrobe, some shirts and tops. They would probably fit you.\"\n\nHe hated telling her that; he knew she would conclude that he and Maria spent countless nights in this bedroom together. But why should he care what Laura thought about his sexual escapades.\n\nShe was looking through the clothes, something about being in Maria's clothes didn't sit well, but she knew his intentions were good. He didn't want her to feel anymore out of place around his older, well to do friends.\n\nShe pulled out the clothes she had brought and laid them on the bed.\n\n\"Are these ok?\"\n\nHe sighed and smiled at her, \"I should have known. You women always think ahead. That will be very nice. Again, we can go home.\"\n\nShe could smell the faint aroma of fish cooking, her stomach growled and she giggled.\n\n\"Girl's gotta eat.\"\n\n\"Are we good?\"\n\nShe slumped on the bed, the towel splitting open exposing her creamy thigh. Did she know how incredibly sexy she looked with that white towel barely covering her? Those long wet, blood red curls begged to be grabbed, tousled in a frenzy of heat and need.\n\n\"I don't know David. I'm out of my element I guess. I don't know how to react around you, or how to control my emotions around you.\"\n\n\"Why do you feel the need to control them?\"\n\nThe question caught her off guard.\n\n\"Cause, I....well...I...\" She looked down, flushing with the thought.\n\nHe reached over, lifted her chin with his fingers and looked into those swirling green spheres, \"Laura, are you attacked to me?\"\n\n\"Yes, of course.\"\n\n\"You said age wasn't a problem for you.\"\n\n\"It isn't.\"\n\n\"Then what is?\"\n\nShe had to laugh, she couldn't help it; \"well, the age is the problem.\"\n\nDavid laughed also.\n\n\"I don't want to be a fling, David.\"\n\n\"We don't know each other well enough to be serious Laura.\"\n\n\"Oh! No, that isn't what I meant. Ok, I am just gonna say it. I feel like a slut coming on to a rich man that is older than my father.\"\n\nHe laughed again, \"fair enough. But I clearly remember being the one to seduce you.\"\n\nAnd if it weren't for the guests upstairs he would have taken her right here.\n\n\"It's all so very confusing to me.\"\n\n\"Then let's take that from the equation. You have stated you aren't interested in a relationship, casual or otherwise. Right?\"\n\n\"Yes,\" she answered dryly.\n\n\"You even pulled back from Jesse, right?\"\n\n\"I did.\"\n\n\"So then, let's put away the very stupid thing I did earlier and agree to be friends. If you weren't angered by it, or disgusted, then I am ok with forgetting it happened. I was just fearful I had pushed the line and you thought ill of me.\"\n\n\"God no, David. It was awkwardly wonderful.\" \n\nThey both laughed softly at her wording.\n\n\"Then get dressed and come up to eat. Another couple has joined us as well.\"\n\nHe kissed her forehead and left, closing the door behind him.\n\nDavid was sitting in one of the bar chairs when Laura walked up. His back was to her, but he knew she was there by the reactions of the others. When he turned around, he had the same reaction, complete awe.\n\nThough he had seen the clothes lying on the bed, it wasn't the same as how they hugged her body. A short navy skirt that came mid thigh that showed off her well toned legs, and a white, shear button up sleeveless blouse that she had failed to button fully. It gave a beautiful peak of her well set cleavage and the way her hair was drying naturally in those reckless curls, David wanted to chase everyone out of his boat. How was he supposed to forget his fingers buried so deep inside her tight cunt when she looked like a sex goddess.\n\nHe quickly gathered himself and made introductions, standing and taking her arm.\n\n\"Laura, this Margaret, Jack's wife. And Tom and Jenny. Tom owns the boat Lucky Seven.\"\n\n\"Laura smiled politely and shook each hand, turning her warm gaze to Tom, \"She is a lovely boat. Not often one sees a green hull.\"\n\n\"I did that to match the color of money and the felt on the tables.\"\n\nDavid leaned in to Laura's ear, \"Tom won her in a game of craps.\"\n\nLaura laughed, \"Yeah right.\"\n\n\"You should thank me, David. Right after I won that damn thing I had to replace engine two. And it gave you a reason to buy this monster.\"\n\nLaura looked up to David, \"You lost a boat to gambling AND sank one?\"\n\n\"To be fair, I sank the other boat first, then bought Lucky Seven, then lost it to gambling.\"\n\nThe group laughed and Laura sat down on the edge of the couch, near Jenny. Other than Jack, they all seemed a bit younger than David, maybe mid forty's. Margaret was a tiny little thing, and at one time may have been drop dead gorgeous. She was sneering at Laura, thin lips pursed; Laura assumed that sneer and her mindset is what made her age badly.\n\nJenny and Tom looked like a typical Vanderbilt couple. Sport blazers, perfect hair, and Laura giggled inwardly thinking they looked like twins. Wasn't that how the wealthy kept their money, marrying cousins? But Jenny was friendly and bubbly and quick to chat Laura up.\n\n\"Did you have fun fishing?\"\n\n\"I did yes.\"\n\n\"First time?\"\n\n\"God no! I've been fishing since I was old enough to hold a rod...or rather a pole. We used to have this creek by my house, loaded with catfish and blue gill. I rigged up an old bamboo pole dad had tucked away. Salt water and deep sea is much more fun though.\"\n\n\"Laura, would you like some wine?\"\n\n\"That would be lovely, David. I know we are having fish, but I don't care for reds, so maybe a blush?\"\n\nHe smiled at her. In one quick moment that sexy little girl next door had turned into a debutant. He was worried she would feel out of place.\n\nMargaret was out to spoil it for her though, \"Oh? You are old enough to drink?\"\n\n\"Margaret!\" Jenny quipped.\n\nNo, I'm not, but David likes his underage girl's easy to manhandle. How would that suffice for a response?\n\nLaura just smiled, \"I'm quite knowledgeable on wine and would be happy to give you a small lesson, Ma'am.\"\n\nDavid about spit out his scotch at the ending jest toward the other woman's age, that's a girl!\n\nThere was idle conversation about fishing, the storm coming in, and a tournament in a few weeks. Jenny asked Laura about her hometown and school. Jenny was a lawyer and intrigued to find that Laura was going into criminal forensics. Laura immediately liked her. And Jenny whispered over in her ear about Margaret.\n\n\"She's only jealous. Who wouldn't be, right? But he rejected her; she thinks it was due to her age.\"\n\nLaura only nodded and then excused herself when she saw David move to the galley. He was checking the oven.\n\n\"What, no on board chef?\n\n\"Well, I could have, but I am rather particular about my tuna.\"\n\n\"It smells wonderful. Here, let me?\"\n\nHe was starting some rice so she added water to the pot as he got the other things together. It wasn't that the galley was separated from the living area, but the boat was large enough and Jack's voice loud enough, that Laura felt she could talk privately.\n\n\"So, you rejected Margaret?\"\n\nHe snickered, \"Jenny filling you in on the gossip huh? I did. She had been my wife's closest friend down here, and I may have my vices, but screwing another man's wife isn't one of them.\"\n\n\"She was married to Jack?\"\n\n\"Yes. And she made it clear that she didn't care. So I made it clear that I did.\"\n\nLaura chuckled. And that woman had the audacity to give her sneering looks.\n\nHe refilled her wine glass and shot her a sly smile.\n\n\"Trying to get me drunk?\"\n\n\"We're staying here tonight. There is no way I can drive home at this point. You might as well sleep soundly.\"\n\nAfter dinner, the men went outside to smoke cigars and Laura just listened to Margaret and Jenny talk about their social club. She was feeling good from the wine and kept thinking about staying the night on the boat. She was excited about it actually, curling up in that big bed, the easy rock from \"Envious.\" \n\nShe excused herself to the restroom and chose to use the more private bath off the master, taking a moment to splash her face a bit. The wine had made her hot.",
        "Returning she found everyone outside on deck saying their goodbyes. She subconsciously slipped her arm around David's waist and he placed his arm around her shoulders. Ok, well it wasn't subconscious; she did it to piss off Margaret.\n\n\"I've never slept on a boat before? Least not at night. Passed out a couple times while sunbathing.\"\n\n\"You have a bad habit of doing that.\"\n\n\"It's an easy way to get a guy to give you a massage.\"\n\nHe laughed at her as they walked back inside; she was still curled up close to him. He could feel his erection grow. This would be next to impossible. Best thing was to get her settled into his bedroom and try to let the Scotch put him to sleep in one of the other rooms.\n\n\"I'm gonna have one more.\"\n\n\"I might as well finish off that bottle?\" She giggled.\n\n\"Don't you think you've had plenty?\"\n\nHe could see she was loose, but nothing indicated she was beyond capacity.\n\n\"Seriously, David?\"\n\nHe just shrugged as he poured the last bit in her glass, \"Alright.\"\n\nThey both sat on the long sweeping couch, the same one where earlier he had brought her near orgasm. Her mind was racing with the thought of it.\n\nSo was David's. There seemed to be something different about her right now. Maybe it was the wine, maybe it was their talk, but something made him think she was opening up to the idea of being with him. \n\nHe had promised he wouldn't; he knew he shouldn't, but David had to have her; he had to try.\n\nHe sat his glass down, took hers from her hand and in one quick motion pulled her into him, his lips pressing hard to hers. To his shock, her mouth opened and her soft tongue slid across his lips; she moaned. It was long and deep, and as her hands roamed, he held her tight, afraid if he let go she would wiggle free. \n\nWith gentle coaxing, he pulled her into his lap, her knees bending, legs curling up on either side of him, kneeling over his lap; she pressed her body to his and rocked her hips. He broke free from the kiss and those sky blue eyes stared straight into her soul.\n\n\"I know I said, just friends, but I want you Laura.\"\n\nIt was her answer that shocked him. He wasn't sure what he thought she would say. Mostly he thought she would give an excuse and pull away, but he surely didn't expect to hear the words that came from her. \n\n\"Then take me.\"\n\nHer voice was husky, lust filled, and Laura didn't even know where it came from. Was she drunk? No, she thought about it, she wasn't even moderately inhibited. A good buzz was all. But as she said it, she felt it.\n\nIt then occurred to both of them that was it; because of his age, she needed him to take her, to lead her through this. She wasn't a virgin, and she had seduced plenty of guys her own age, but this was different. It was a new scenario for her, a new feeling and she needed him to guide her. \n\nDavid was more than happy to comply. He didn't care for women that wanted to control things, or that thought they knew how to make the sex better. He wanted Laura to experience sex his way, to give her feelings no boy ever could. He wanted her to be young and willing to learn.\n\nHe kissed her again, this time much harder and slid his hands up under her skirt, bunching it around her waist, pulling against her hips, making her rock harder on his growing erection. As he did, she arched her back, pressing her tits into his chest and moaning again in delight.\n\nHe was lost in the electricity from her lips, the static charge that seemed to travel through her small body and straight to his fingertips. Everything about her felt good, each rock, each movement of her breasts against him, the way her hands found their way to the back of his neck, up into his hair. \n\nHe gave one more hard tug to her hips, making sure she could feel his erection grind against her lace clad sex, then his hands left her hips to move up to her blouse. Starting at the top button he kissed her soft skin as each button was loosened. It was slow and deliberate, and he had her skin crawling from it. \n\nNo guy Laura had ever been with took such time with her. It was a joyous agony to watch him inch his way down her body. She leaned back as the shirt was freed; shivering as the shear fabric was moved off her shoulders and fell to the floor. She watched amazed as he took each pearly white, lace covered tit in his hands, squeezing them, running his thumbs over the nipples.\n\nAs she watched him, David watched her, reading her facial reactions. It was clear no man had spent time with her. Young guys rarely do. He spent several moments just massaging each supple tit, enjoying each gasp and sigh she made.\n\n\"You are so beautiful, Laura.\"\n\nHe loved that blush that would color her porcelain cheeks. He wondered how often she ever heard something so simple. \n\nShe reached up to undo the buttons on his shirt. Her hands had a small shake to them. It surprised her, that she would be nervous to have sex. But she knew this would be different. Her breath caught in her throat as she slid the shirt free from his chest and shoulders. She had seen him without his shirt on, it shouldn't be a surprise for her, but it was as if she were seeing him for the first time. She smiled letting her hands glide softly over his pecs down his sculpted stomach, it was hard to believe he was fifty-nine.\n\nShe looked up quickly as she heard him moan at the touch, both of them looking deep into each others eyes.\n\nDavid grabbed her and pulled her in tight, kissing her deep as he lifted her off the couch. He didn't want to take her there. He wanted her in his bedroom; he needed to have her there, on that huge bed.\n\nThey kissed and nibbled the entire walk down the short hall and he laid her gently on the soft bed. Pulling his lips from hers and moving them down her smooth body, stopping to suck each nipple through the lace. That little pink jewel in her navel; it had been beckoning him since he first met her, and now his tongue played with it, moving it, pulling on it. He smiled as he heard her giggle softly. Oh she hadn't a clue what wonderful places on her body held joy she couldn't even imagine. He would show her all those new places.\n\nDavid's hands travelled up the outsides of her thighs, moving to the waist of her skirt. She lifted her hips naturally to let him unzip the back and slip it from her. He dropped the skirt on the floor and stood there at the end of the bed just looking down on her glorious lace clad body.\n\nEven with all the sunbathing her skin was still fair. The white lace bra and panties both melted into her ivory color and stood out against the silken flesh. An angelic face was framed by a halo of copper and gold curls and she looked like something out of a magazine laying there on his chocolate satin comforter and pillows. Those dazzling green eyes looked up to him, almost pleading to him to continue, but he was lost in drinking her in, memorizing this image.\n\n\"David?\"\n\nLaura was confused; he had a look of lust and desire in his eyes, but he was just standing above her, his hands on her thighs, touching lightly.\n\nHe didn't answer her; instead he dropped to his knees, spread her legs and began kissing between those lush creamy thighs. With each kiss his fingers played on the outside of her legs, then down to her calves. \n\nWithin moments her hips were moving, legs twitching, she was trying to move her pussy down to his lips. He could smell she was wet, it was filling his senses, but he was determined to take his time.\n\nLaura writhed in need. What is he doing?! She needed to feel his lips on her cunt, his tongue inside of her; she was wild with it. She kept moving, her body inching down the bed, trying to get closer.\n\nDavid reached up and put a firm hand on her hips, holding her down.\n\n\"Hold still Laura, patience. Just enjoy this.\"\n\nHe almost laughed at her groan, continuing his slow torment, making his way slowly to her sweet sex. Once there, he moved his nose across the lace, reveling in the smell of her, his hot breath warming the lace and her labia.\n\nLaura's moan was loud; her shudder undeniable. He placed his mouth over her sex and sucked through the lace, just letting the heat drive her wild. She tried to shift but his hands still had a firm grip on her hips. \n\nShe whimpered in protest, \"David, please.\"\n\nIt fell on deaf ears.\n\nHe glanced up her tiny frame, seeing the navel ring brought his mouth away from her flower and up her flat young belly, again kissing and tonguing her navel, his fingertips played on her sides, the tiny hip bones, the lace that thinly laid just under them. \n\nShe squirmed again and as he made his way down to kiss and nip at each hip bone he slid fingers under the lace and pulled them down her legs. Laura twisted and moved to help get them off.\n\nDavid rose up just a bit; she was so wet her bare sex was glistening. He looked to her, again those green gems were pleading. \n\nThis time he wasted no time burying his face in her moist cunt, tongue slipping inside of her, lapping up and in and out in deep slow movements. She groaned loudly. He continued to lick and suck, pulling on each lip, grabbing at her hard clit, twisting it in his teeth.\n\nLaura was reeling from what his tongue was doing to her. She had never felt so good before; no man had ever taken such time with warming her up, building her fire. And now it was roaring. Her hips moved up to his tongue, pushing forward, driving him harder to her cunt. She was surprised when the feeling hit her, when her body tingled. One hand grabbed tight to the covers as the other weaved into his hair; she trembled as the orgasm shook her.\n\nDavid smiled as she came, he was certain she had never experienced an orgasm in such a way. Her cum was thick and sweet and he licked and lapped every drop she offered him, kissing her softly to help her come down from the bliss of it.\n\nShe was panting as he climbed up her body, kissing touching, his fingers skimmed up her side to her arm, following the curve and touching the fold of her elbow, small circles, then down to her wrist.\n\nHe whispered softly in her ear as he nipped and kissed, \"You taste like heaven.\"\n\n\"Mmmmm...\" was all she could offer in response.\n\nShe was still tingling and the light touch to her arm was keeping her on edge.\n\nDavid squeezed hard to her succulent breast, now frustrated with the lace bra; he reached under her and unclasped it, pulling the pearly lace from her chest and arms. A moan caught in his throat, her tits were damn near perfect, just as he assumed they would be. Hard pink nipples sat upon creamy round mounds of soft ivory breasts. He couldn't decide whether to worship them with his mouth or his hands.\n\nHe did both, squeezing one breast with his left hand as his lips wrapped around the other creamy mound, suckling as his tongue flicked the hard pink nipple. Her whimpers and pleads of more excited him and he sucked harder, moving his lips to pull in just the soft sensitive areola, still flicking at the nipple. \n\nLaura was crawling under him. This was pure ecstasy for her, and through the midst of it all she realized he hadn't even penetrated her yet. My God, if he's this good....she groaned with the thought and now she needed him. She needed to feel his hard member deep inside her.\n\n\"David, please. I love the fore play but...\"\n\nHe didn't even let go of her nipple, only gripping it with his teeth when he spoke to her, \"but what?\n\nShe could see him grinning up at her, a devilish look in those bright blue eyes; it frustrated her, and it turned her on; to be completely in his mercy, helplessly his, to have him controlling this. She felt that undeniable tingle move through her body again; he shifted positions and pressed his bulge against her sex. \n\nLaura groaned, \"David, your pants.\"\n\n\"I know.\" He continued to suck and lick his way around her lush tits, his mouth finding comfort in her cleavage.\n\n\"Please.\"\n\n\"Damn you beg well.\" He chuckled. \"Are you enjoying this?\"\n\n\"I am but...\"\n\n\"Then shush.\"\n\nHe pressed his hard cock against her wet cunt, letting her feel it through the confines of the fabric. Sucking in her nipple again he began to suck and twist on it in his teeth, pulling softly, just enough torment to give her pleasure. David loved to hear her whimpers, her soft moans of joy.\n\nLaura needed to feel him closer, the hardness and size of his manhood was pushing her beyond control. She wrapped both legs around his waist and squeezed tight bringing him in to her, lifting herself up and grinding against him. Her cries out were loud and full of need; his dick was throbbing against her scorching clit. She ran her hands down his bare back, raking painted nails across the skin, this time it was his moan that filled the room. \n\nShe was trying to get her hands between them when he pulled up from her and unzipped his pants, kicking them off David climbed up the bed, positioned himself over her and guided his cock head to her dripping wet slit. Her eyes were wide as she looked down to watch him, her hips wiggled.\n\nDavid stopped a moment, he wanted this to be easy and tender, but his lust had over taken him. He had almost shoved his thick cock in her with full force and wild need. With several deep breaths he looked down to her soft, lovely face. Those brilliant jade eyes were now looking up to him; he kissed her so softly as he pressed his body down against hers, just letting his cock rest there against her pussy. They both began to rock and grind against each other, but it was calmer, more reserved and David was now back on track with where and how he had wanted to take her.\n\nLaura was amazed at how quickly he could change. Her emotions were less in check, once wired and ready to pounce she rarely could back down, but now, here she was, putty in his hands. Something that had gone from \"on the edge fuck me now\" was slowed down to two people reveling in the feel of the other. And she was certainly enjoying it, with just one easy twist and rock and.....\n\n\"Oh Laura, I've wanted this, you so bad.\"\n\nDavid moaned as she moved her hips and his dick slid into her, such warmth, so wet and tight.\n\nLaura was gasping as she felt her sex stretch to accommodate him, her eyes drifted closed and she rocked in easy motion with him, her thrust up meeting his downward drives, a syncopated rhythm only lovers truly know.\n\nShe didn't know what to do with her hands or her legs, she was rubbing every inch of his back and strong arms as her legs moved up high on his waist and tighter around him. David fought every ounce of his emotions to take her hard and fast, she felt so good wrapped around his cock, and her small body under his was fuel to his fire. Each little whimper and moan, every gasp of desire gripped him and he wanted to hear more of it. He enjoyed being the maestro to this beautiful symphony, to control the melodic voice of this siren.\n\n\"David, please don't stop. I need this.\"\n\nHer words caught him. He thought about just last night on the beach, her lack of \"want.\" How her face had seemed so empty and now here, looking down on her, that beautiful face was full of every emotion, lust, desire, need...want.\n\n\"Yes, yes you do. Can you feel it Laura? Can you feel what you do to me?\"\n\nHe was lifted up, looking down at her and thrusting into her with more force, her diminutive frame moved slowly up the bed with each forceful push of his waist. Lush creamy breasts bounced and jiggled with each drive.\n\n\"Yes...yes...yes...please, God...more!\" Her head thrashed from side to side in ecstasy, toned legs squeezed tight around his waist not allowing for much movement. With easy pressure she lured him back down on top of her, needing to feel the full contact of his skin to hers.\n\nThe heat from his body was amazing. Laura could feel every ripple of his muscles, and his attention to her, and her pleasures did not go un-noticed. All day she had thought about this, how he might feel, how he would take her, and now to have him over her, inside her; she didn't want it to end.\n\nDavid smothered her perfect tits with his chest, the hard pink nipples were like hot pebbles against him, and he had forgotten how wonderful a tight little body felt. Not that Maria or Janelle weren't in shape or sexy, but they were older, and a woman can't keep that same figure after children, it just isn't possible. Having Laura brought him back to his prime, back when his wife and he were young and finding all those fun places for the first time.\n\nHe sat up quickly and straightened her legs, putting them against his chest and shoulders, stroking into her in long, slow, deep thrusts. He loved watching how wide her eyes got as his cock pushed its way into her. He could tell she hadn't been penetrated this deep; she was enthralled with it.\n\nWrapping one arm around her thighs to hold her steady as he drove into her, his other hand slid over her legs, moving to the back of her knee, swirling small circles over and over again. \n\nThe position wasn't new for Laura, but the size of him was changing everything. He drove to her hilt and she was thankful for his slow easy motions. Her green eyes adjusted and held his dazzling blue stare. She knew he was reading her, interpting what he was doing to her, for her. In an instant it all became so very clear to her; yes, he had wanted her, but he also wanted to share this with her. It was for her. \n\nWas it that thought, his deep thrusts or the wonderfully tingling sensations travelling from the back of her knee that made her orgasm? She didn't know, and she didn't care; she just rode it and let it sweep through her in wild waves of bliss. When the storm settled she looked to see him smiling down upon her. He didn't cum, and he didn't stop; his thrusts got harder, and his magical fingers found a sensitive place on her ankles that quickly brought that same tingling numb feeling crawling back through her.\n\nThis time David saw her hand ring the chocolate satin comforter in knots as she peaked. He was amazed at how tight her little cunt could grip his cock, how it squeezed him, it took all of his strength not to unload into her right then. He concentrated on her, her pleasures, her enjoyment; controlling his breathing, his thoughts.\n\n\"That's it, Laura, cum for me.\"\n\nHe growled, even talking to her was breaking his concentration. Had he been early twenties he would have filled her and kept going, but he was unsure if he could do that now. He needed a break, to pull away from the wonderful wet sheath that held his cock so perfectly.\n\nDavid withdrew from her quickly, and holding her hips, he rolled her over to her belly. She offered no hesitation, instead giggling softly, her creamy bare ass wagging as she lifted off the bed slightly.\n\nGiving her a playful slap he was surprised to hear her squeal and then seductively moan behind it. Laura herself was surprised at how the slap had made her feel, a twinge in her sex, her pulse quickened by one easy smack. She shook her hips again and this time he slapped her harder. He had no intention of testing those waters with her, but fun was fun, and she seemed to enjoy it.\n\nTossing her tangled auburn curls, she peered up to him from over her shoulder. David let his hand travel up her spine, following the graceful slope of the curve of her ass up to her back, and over her shoulder.\n\n\"My God, you are beautiful.\"\n\nShe blushed, her voice caught in her throat. For a brief moment Laura thought she could have cried.\n\nHe saw it immediately, \"what is it Laura?\"\n\n\"You are so damn sweet, David. I'm in bed with you, having sex. There's no need for flattery now.\"\n\nHer skin was so smooth, he could touch every inch of her with his hands and it wouldn't be enough, so instead he lay down on top of her, her bare back pressed to his chest; his cock sliding through the crack of her ass, made wet by her orgasm. There was that scent again, her hair, it was definitely her hair that smelled like fresh spring. Did his skin just crawl? Did she really just have that effect on him?",
        "\"I'm not flattering you, I mean it. And I am overjoyed that you would....\"\n\nHe trailed off, not knowing the words to use, but she knew.\n\nLaughing she answered his unfinished question, \"Even in your fifties, you are hotter than most guys I have had sex with.\"\n\nReaching back her fingers ran through his hair, pulling his head down to her neck, he kissed her, suckled her soft skin, and now having control once again, he lifted up her hips slightly and pushed into her. Damn! How could she be so tight!\n\nHe rocked harder against her this time, fueled by her moans and grunts; his own groans mixed with hers in sexual harmony. \n\nLaura had pushed back and up against him, on her hands and knees she could rock hard against his forward thrust and his cock moved in and out of her in a heated frenzy. It wasn't long before the feeling washed over her body again; she loved how quickly he brought her to orgasm. How he knew exactly what to do to her and that he would give it to her time and time again.\n\n\"That's it darling, take it, feel it. I want you to feel all of me in you.\"\n\nDavid could feel her orgasm long before she could, he watched as her back arched and she seemed to cat stretch against him. He shoved in deep and held tight, he knew it would be hard to restrain him self in this position, and her cunt fit him like a glove, little spasms milking his erection. He leaned down over her and growled in her ear, possessive and domineering; his strong hands reached under her and squeezed her tits.\n\n\"Do you feel that Laura? Your orgasm with mine?\"\n\nHis cock bucked and jerked inside of her as it erupted with his climax.\n\nLaura had never felt a man explode inside of her, but it was like experiencing sex for the very first time. Wild and reckless, the pound of his cock, the pulse of his head as each pump of thick ropey cum filled her. She was amazed she could even feel the heat of it, warming her inner walls, mixing with her own juices. Her muscles squeezed around him, nature taking over. \n\nBoth of them collapsed on the bed, panting and glistening with sweat. David did his best to hold himself up from her petite frame, but he wasn't ready to pull from her and he found little strength in his arms. His body covered hers and she could feel his heart pounding through to her back.\n\n\"David,\" she gasped, \"oh David...that was amazing.\"\n\nHe needed to look into her eyes, to pull her close. Reluctantly he let his drained cock slip from her dripping cunt, laying on his side and pulling her near.\n\n\"You are amazing Laura. Thank you.\"\n\nHe kissed her, not deep and determined, but soft, lingering, a gentle kiss of affection. There was that purr he was becoming so accustomed to.\n\nLaura lay there silent for a moment after the kiss; her mind ran wild with different thoughts.\n\n\"Talk to me Laura, what's going on up there.\"\n\nIt wasn't what he was expecting. Though it was very much a thought every woman has after being with a guy.\n\n\"When did you first decide you wanted this....me?\"\n\n\"I'm not absolutely sure. I was attracted to you with the very first meeting. You sort of grew on me. And you are sexy as hell; I'd have to be dead not to want to.\"\n\nShe chuckled lightly, answering a question she knew he was curious about, but would never voice. \"Last night. I wanted you to take me last night. I'm glad you didn't, I wasn't in the right frame of mind for it, but God did I want you.\"\n\n\"I was worried about you last night.\"\n\nShe only nodded and sighed, nestling closer to him as he pulled her in tighter, helping her fight the demons that wrestled in her thoughts.\n\nDavid wasn't sure where this put them. It was supposed to be just sex. And while making love to her, he felt every bit of her lover, a sexual equal, and now holding her, remembering last night, that older father figure kept creeping up. He hated that feeling.\n\nIn one quick movement she squashed it aside and pulled him right back to the intimacy they had been sharing, kissing him hard and deep, pushing him onto his back and climbing a top him, her firm legs straddling his hips.\n\n\"I need you again.\"\n\n\"Laura,\" he stammered, \"I'm not eighteen. I doubt....\"\n\nHer wet sex was running along his shaft and it responded perfectly, thickening, hardening to her demands.\n\n\"You seem fine to me.\"\n\nShe lifted and with her small hand guided his large spear into her. Laura was actually surprised. As much as she wanted him, and had hoped, she was sure at his age he would need an hour or so. With his erection fully inside of her, she began to rock and ride on him in easy waves. He fit her so wonderfully. He was larger than any man she had been with, but his experience, knowing where a woman's sensitive spots were, made it so wonderful. The pain of accommodating him was pleasurable, and she ached to feel more of him. Now, seated above him, he filled her completely and his hard pubic bone rubbed against her swollen clit. She would cum over and over again riding him like this.\n\nSlowly she rocked and lifted on him, just enjoying the sensation of him sliding in and out of her and moving inside. Her eyes were closed and little fingers danced over his chest like spiders scurrying over fresh webs. She concentrated on every inch of him, from his thick base to the way his mushroomed head felt grinding on her cervix, letting loose little sighs and whimpers of pleasure.\n\nDavid just watched her in awe, the way that tiny waist twisted and moved, the slow bounce to her lush creamy breasts, even the ripple in her thighs and toned belly. His hands steadied on her hips, squeezing them, pulling her forward, urging her faster, and she gladly reciprocated.\n\nHe groaned in ecstasy as she begin to move and dance upon his cock in faster rhythm, \"Yes, Laura, yes. Fuck, you are so beautiful, so God damned sexy.\"\n\nWhen her eyes opened, they were darker, almost black with lust. Something told him he wasn't with his sweet little neighbor any longer, and when she smiled coyly down to him, the words that followed reassured him that he was now being ridden by a primal, sexual woman.\n\n\"Do you like that David? Do you like how my pussy feels, how it holds your cock?\"\n\nShe was almost growling with it, leaning down and pressing her hot nipples into his chest; they were driving him wild. She stopped thrusting and just ground her clit hard against him in an agonizing slow circle, her cunt squeezing his cock.\n\n\"I could fuck you like this all night, David.\"\n\nHe groaned with that statement, the sound of her hushed voice in his ear, the feel of her warm breath on his neck, \"Oh fuck yes, Laura.\"\n\nWith that she sat up. Lifted up on those beautifully toned thighs and began to truly fuck him, slamming down onto him repeatedly. Over and over again she crashed down on him, taking him fully, crying out with each plummet.\n\n\"That's it baby, ride my cock, fuck me.\"\n\nLaura loved the way he talked to her, dirty yet sweet all in one phrase. No man had ever talked to her during sex. They just did what they did, achieved their orgasm then fell asleep. This was a coupling of two people. Not exactly intimate, but definitely two people sharing each other. She felt equal to him, experiencing this just as he was, not just something to get off on.\n\nEven after all that time with Brad, she never really felt that sex with him was equal, that he felt he needed to fulfill her needs as well. The sex between them was great, but it was one-sided.\n\nHere, now with David, it was about the two of them enjoying each other. He was doing things to turn her on, to bring her fully to boil, and at the same time she was doing all the things she knew he wanted. \n\nDavid didn't seem to be a lover, or at least not with her. And she judged by the fact that he didn't keep a steady girlfriend, he rather enjoyed reckless sex. So she gave it to him. It was fine by her; she actually enjoyed feeling like a little slut, being wild on top of him. It wasn't something she got to revel in often.\n\nAs her hips rocked and she bounced up and down on top of him, her hands glided up her now glistening body, David watched wide eyed as she felt every silken inch of toned belly, rippling sides and creamy, mounded breasts. He groaned as her hands squeezed and kneaded them, fingers finding the rock hard buds and pinching, twisting as she bucked above him. \n\nDamn, did she know how hot that was? Was she doing it just for him? It seemed like she was enjoying it, that it wasn't just a show, and he certainly was. His cock was twitching wildly inside of her.\n\nWith another twisting pull of each nipple her body went rigid and she screamed out, he could see her fingers squeeze around each succulent breast, the nails biting into the soft flesh, and then he felt it, her pussy clenched and opened around him and hot liquid flowed from her sex like a volcano. Damnit! She squirts! Grabbing her hips hard and thrusting up tight inside of her, he held her steady on him and enjoyed the feeling of her quivering pussy and sweet juices coating and flowing over him. Looking up he could see she was still lost in her own rapture; her entire body was visibly trembling. Laura's angelic face was turned up to the heavens and her long mane of copper and gold swished around her, he could even feel the ends of it dance on his own legs. Several strands clung in all the right places to her sweat glistened body. He remembered a thought he had once, a Celtic Goddess, and now he was lucky enough to pray before her alter.\n\nAs she took quick panting breaths the realization of what had just happened came to her. On several occasions prior she had squirted, but most younger guys didn't know what to make of it, so she had learned to suppress it. She hadn't a clue why she had let go this time. But now her head was fuzzy and she swam with it, melting into the afterglow, barely aware that David had sat up and was holding her tight.\n\n\"Breathe Laura, just breathe babygirl. Come down, come back to me.\"\n\nHe knew she was on the edge, he had seen women here before; she had given everything to him. He carefully moved her legs to wrap them around his waist, holding her tight while her pussy continued to quiver around his hard cock. He could last most of the night now, and when she came back down to earth, he planned on doing exactly that.\n\nBrushing her hair back from her face he kissed her lips softly, she cooed to him, eyes beginning to flutter open and focus.\n\n\"Damn David....\"\n\n\"Shhhh...catch your breath.\"\n\nLooking up to him she smiled, it was soft and sleepy, he sighed in defeat. She would want to sleep now.\n\n\"I suppose you want to go to sleep sweetie?\" He teased.\n\n\"Oh hell no, that was wonderful! I want to feel it again and again.\"\n\n\"God I was hoping you would say that.\"\n\nHe chuckled and held her tight, rocking her in his arms, feeling her shift and rock on his lap, reviving and ready to play. This young thing would make him sorry to be alive in the morning, that's if he even got any sleep. "
    ],
    "authorname": "kajira_girl",
    "tags": [
        "older man",
        "younger woman",
        "outdoors",
        "age difference",
        "boat",
        "fishing",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/what-she-needs-ch-08"
}