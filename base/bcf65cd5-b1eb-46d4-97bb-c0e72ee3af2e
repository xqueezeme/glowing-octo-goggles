{
    "title": "Wanda, the Starliner, and Me Pt. 03",
    "pages": [
        "Chapter 5: Tucker Makes a Call\n\nDaddy 'n' Tucker were the best of friends. I didn't know it at the time, but Tucker had been givin' my Daddy bigger shares of the Busted Branch station each year. He'd been doin' real well with both stations, an' figured Daddy had earned anythin' he got. By the time we'd been there ten years, our share of the station rose up to 75%. It wouldn't be that long before Tucker would turn the whole station over to Daddy. He was makin' more money at the new station than he'd ever need, so it just seemed right to share the wealth with us. \n\nAlong about then, big ole Mobil come along an' wanted us to sign up with them. At first we said no, on account of Daddy not wantin' to be beholden to no oil giant. But when he an' Tucker set down to look at the contract an' what Mobil was promisin', why they figured it made a lot of sense. Daddy said somethin' about promotional support, or somethin' like that. On top of that, we got some new signs an' better yet, some shiny new pumps. Far as I could tell, we did real well on the deal.\n\nAlong with the shares from Tucker came a bigger share of the profits. That's how Daddy was able to buy that nice house for Ma 'n' him. He also got hisself a nice new 1959 Ford Fairlane for him 'n' Ma. They would ofttimes drive to Amarillo or Santa Fe for a little getaway. It was good to see them get some time to enjoy our success. Daddy had worked hard for it an' he'd earned every last dime he made. Of course, I did real good too, with Daddy sharin' everythin' fifty-fifty.\n\nWe had a helper at the garage now. Red Mahoney was pumpin' gas an' learnin' about the shop from Daddy 'n' me. He was 18, fresh outta school, an' eager as all get out. He weren't afraid of work, that's for sure. He was called Red because of his red hair, I reckon. His proper name was Carroll, but nobody had the nerve to call him that. He was as big as me, an' plenty strong. I was about the same age as his Daddy, an' I guess I sort of adopted him as a pretend son.\n\nThings were goin' along just fine at the garage an' at home. Wanda 'n' me were about as happy as two people could be. We were kind of wonderin' what to do with ourselves now that we had a few dollars in the bank an' some time to spend. That's when ole opportunity come a knockin'.\n\nTucker had been sellin' used cars at his garage. He was always lookin' for new things to make money with, an' he didn't make too many mistakes either. He started off at Busted Branch sellin' them old canvas water bags that people hung on the front of their cars to keep the radiator full. Then he got in the candy 'n' sodas since people were forever askin' him where they could get somethin' quick to eat. Well, it just got bigger from there.\n\nAnyway, I got a call from Tucker one day in October.\n\n\"Purvis, I heard you was lookin' for a car for you 'n' Wanda. You find anythin' yet?\" he asked, straight off.\n\n\"Nope. Why? You got somethin' in mind?\"\n\n\"I sure do. I just bought a 1953 Studebaker Starliner off a kid that was drafted into the Army. Got it at a real good price, too. It's in good shape. You might wanna come up here an' have a look-see.\"\n\n\"That'd be a two door, right?\"\n\n\"Yep. Automatic with a radio too. It's in good shape ... not too many miles. I think you 'n' Wanda would look right handsome in this car.\"\n\n\"Well, Tucker, if you think it's worth the drive, why me n' Wanda will come up an' have a look. You around after supper tonight?\"\n\n\"I'll be here. I got it locked up in the garage, so come over to the house first. I'll go with you.\"\n\n\"See you about seven, then,\" I said, hangin' up after the usual pleasantries.\n\nWell now, Wanda wouldn't know a Studebaker from a steam engine, but she was gettin' tired of ridin' around in my truck. It was time she got somethin' a little more befittin' her station in the town. I wasn't sure this was the right car, but if Tucker said it was worth lookin' at, then I would look.\n\nDirectly after supper, Wanda 'n' me jumped in the old Fargo an' headed for Fort Sumner. \n\n\"I sure hope this trip is worthwhile, Purvis. We'll be late gettin' home tonight as it is, an' I've got the early shift at the diner in the mornin'.\" \n\n\"I've never known Tucker to steer us wrong yet, girl. Keep yer fingers crossed. This may be a winner.\"\n\nIt took a full hour to get up to Tucker's place. He didn't waste no time with chit-chat, but took us right down to the garage an' turned on the lights. It was sittin' in the first bay, all shined up an' lookin' pretty. Hell, it was the nicest lookin' car I'd ever seen. What surprised me, though, was Wanda.\n\n\"Oh, Purvis. It's beautiful. I've never seen a car this nice. It looks like one of them foreign sporty cars. An' that red color with white top. Can I get in it?\" she asked, turnin' to Tucker.\n\n\"Of course you can. Hell, Purvis, why don't you take it for a test drive. See how you like it for yourself.\"\n\nWell, I did of course. I could tell Wanda loved the car. It had nice upholstery, an' it rode an' steered real good too. I figured it had a six in it when I started it up, an' when I drove it down the highway, I was sure I was right. I did like the automatic transmission. I'd never driven one before, but it was dead simple. The only thing to get used to was tryin' to put the clutch in when there weren't no clutch. That took a little gettin' used to. \n\nWell, there weren't no argument that we were goin' to buy the car, so it was a matter of how much. Tucker 'n' me dickered a bit, but we came to an agreement, an' I drove Wanda home in the truck, knowin' I would soon own a '53 Starliner coupe in coral red an' cream white paint. It had 35,390 miles on it. The tires still looked good, an' there wasn't a mark on it anyplace. That boy had looked after it real good.\n\nDaddy drove me 'n' Wanda back to Fort Sumner, an' we cruised back down Highway 20 to Busted Branch in style. Wanda was real proud of that car, even though it weren't new. When we got to the garage, I was surprised that we hadn't even moved the needle on the gas gauge. I began to wonder if it was workin' right, but over the next week, I was satisfied it was okay. That car was real cheap on gas. \n\nNow it didn't take Curtis Dodge long to figure out I had a car. He saw it out in front of the Sip 'n Bite one day an' pretty quick found out it was Wanda's 'n' mine. He looked it over, not sayin' too much, which was somethin' for Curtis. When I walked out of the caf\u00e9 an' saw him, I nodded but didn't say nothin'. We still weren't on speakin' terms.\n\n\"Where'd you git that cutie-pie little car, Purvis?\" he started in.\n\nI looked over at him an' was about to say somethin' when Wanda came out from the diner. \"He bought it for me, if'n it's any of your business,\" she said, givin' Curtis the evil eye. \n\n\"Yeah ... I figured that. Purvis more'n likely would favor a tractor,\" he laughed.\n\n\"You got nothin' else to do today, Dodge?\" I growled, gettin' a mite irritated with him an' his smart-assed remarks.\n\n\"Nope. Jest gettin' myself ready for the big Gusher Gas Economy Run next spring. Goin' into trainin' soon.\"\n\n\"What kind of trainin' do you need? Can't-cha tell the brake from the gas pedal yet?\"\n\nWell, Wanda bust out laughin' at that clever remark of mine, but Curtis turned about six shades of red before stompin' off to his car. When Wanda watched him go, she turned to me.\n\n\"What's all this Gusher Gas Economy thing about anyway, Purvis?\"\n\n\"Well, it's a long trip across the U.S.A. to see who can get the furthest on the least amount of gas. There's a bunch of categories for each kind of car, so that it's fair to everyone,\" I explained.\n\n\"What do you get if you win?\"\n\n\"A whole mess of money an' your pitcher in the magazines.\"\n\n\"Can anybody join up?\"\n\n\"Don't know, girl. Why'd you ask?\"\n\n\"You bin tellin' me how good that fine new car you bought is. You said it didn't use no more gas than a baby sippin' through a straw. You're a real fine driver Purvis. Maybe you should get in that race an' put an end to havin' to listen to Curtis Dodge shootin' his mouth off about it.\"\n\n\n\n\"Wanda, I don't know nothin' about who can go in an' who can't. I'll have to call around a bit an' see if it's possible. You really think I should go if I can?\"\n\n\"Damn straight, Purvis. Between you an' your daddy, you can figure a way to win that race hands down. I just know it.\"\n\nI gave her a big smile an' put my arm around her shoulder as we watched Curtis' dust disappear down the highway. \"Well then, I guess I better get to findin' out about it.\"\n\nI talked to Daddy first, an' he was fine with the idea if'n I could get in. He'd help with tearin' down the engine an' makin' sure it was runnin' as good as it could possibly run. I'd work on the transmission, since I got a shop manual from Studebaker for it. That Studie automatic was a solid little unit, an' I had plans for it.\n\nMost folks would say it was crazy to enter the Gusher Gas with an automatic. Everyone knew they was gas-burners, but I had a different idea from my days in the army.  I knew somethin' about torque converters since they was used in tanks, so I was thinkin' maybe adjustin' the unit an' changin' the drivin' style would make a difference. \n\nAfter a couple of telephone calls, I got hold of a feller who knew all about the Gusher Gas an' said he'd send me a bunch of information 'n' forms for me to fill out. Turns out there was somethin' called a \"Special Category\" that allowed older cars, providin' they was more than five years old an' had been made in the U.S.A. He said he was dang sure a 1953 Studebaker would qualify.\n\nIt took about a week for the mail to arrive with them forms 'n' rules an' the like. Daddy 'n' I set down one night an' started through it to see what we had to do. I never seen so many rules 'n' regulations in all my born days as these fellers had for this deal. But when we got through it all, it boiled down to makin' sure the car weren't too light, the gas tank was regulation, an' there weren't no trick instruments to change the fuel mixture on the go.  Unlike the factory cars, we didn't have to buy no special gas tank that they put in the trunk. I guess they thought us little guys wouldn't cheat.\n\nAlong about Thanksgivin', Daddy 'n' me commenced to workin' on the car, gettin' it ready for testin'. Yeah. Testin'. We was goin' to find out for ourselves just how good this baby could perform. We could take it up into the mountains, or run down across the desert, measurin' how much gas we used an' what speed we were runnin' at. \n\nWhen Daddy 'n' I had finished with the engine, I don't suppose any Studebaker had ever run as good as this one did. We worked over the carburetor, testin' various jet sizes to see what worked best. We put a lot of hours on that engine, an' when we was done, we tore it down an' built it up agin. \n\nWe did some testin' on the automatic transmission, an' found the settin's we wanted for that too. By the time we figured we had done everythin' we could, we sat back an' looked at each other an' grinned. That sweet little girl was goin' to do us proud, we was both sure. All the while, I'd been learnin' to drive it proper to get the most out of her. \n\nNow Wanda wasn't exactly pleased about all this. She didn't have her car to ride around in while all this was goin' on. I reminded her now 'n' then that this Gusher Gas thing had been her idea, so that sort of kept peace in the valley. Just the same, she'd be happy when this foolishness was all done with an' she could have her car back.\n\nAs the time got close to headin' out to Los Angeles, both Daddy 'n' me were gettin' nervous. We had to be there two days early for the inspection of the cars to make sure they was legal 'n' all. Daddy figured we shouldn't ought to leave anything to chance an' added an extra travel day, just in case. So early one Tuesday mornin', we loaded the Studie on the trailer, kissed Wanda 'n' Ma goodbye, piled into the Fargo, an' headed west.\n\nNaturally, nothin' went wrong on the trip, so we had a day to rest in L.A. before the inspection an' gettin' our badges 'n' numbers 'n' all. I got to admit, I was pretty jumpy about the whole deal. Daddy was goin' to follow along with the truck an' trailer each day, so if anything went wrong on the way, he'd be along to help get us goin' again. He had two spare tires mounted on rims just in case. At the last minute, we decided to up the tire pressures to forty pounds. Somethin' we heard about reducin' rollin' resistance, or somethin' like that. We didn't figure it could do no harm, so we made the change.\n\nWe got through the inspection with no problem. In fact, the fellers that were doin' it said they thought we had a real fine car an' wished us good luck. When the mornin' of the big event come along, we learned we would be about the last cars to leave. I guess they figured we'd be the first to drop out, so we wouldn't be gettin' in the way of the big factory boys. An' I got another surprise; there was a couple of women drivers entered too. I shook my head when I heard that. Just plain foolish, I thought. \n\nDaddy 'n' I were standin' beside the car, waitin' our turn to start when we heard a familiar voice.\n\n\"What the hell are you two hillbillies doin' here.\"\n\nIt was Curtis Dodge, of course, bein' his own miserable self. \n\n\"Why, we thought we'd give this deal a try. It didn't look too hard,\" Daddy said, lookin' Curtis up 'n' down. He was sportin' fancy Plymouth drivin' overhauls with his name sewed on the chest. \n\nCurtis laughed, but it didn't look like he thought it was funny. \"You boys won't make it to the first rest stop in that sorry little thang.\"\n\n\"We'll see,\" Daddy said, not risin' to the bait. \n\n\"Which one of you fools is drivin' that thang?\"\n\n\"I am,\" I said, tryin' to stay as cool as Daddy.\n\n\"Well, I don't reckon I'll be seein' you at all. You ought'a be back in Busted Branch long before me,\" he laughed, then turned an' walked away.\n\n\"I just got me a real incentive to prove him wrong, Daddy.\"\n\nDaddy just nodded. He knew what I meant.\n\nSomeway or another, that run-in with Curtis calmed me down a mite. Don't ask me why, but I was fine when I slipped behind the wheel of the Starliner an' got ready to start her up. I shook Daddy's hand an' he wished me good luck like I knew he would. We'd probably need it, but for now I was goin' to think about drivin' smart like we'd practiced. \n\nI won't wear you out with all the details of the next five days, but we did pretty good, I figured. Of course, we didn't know nothin' until the very end. That's when they did all the arithmetic to figure out who won. We learned a couple of things along the way. First off, that idea of runnin' up the tire pressure wasn't a good one. We didn't count of the heat expandin' the air even more on the long runs an' we blew out two of those old tires. Luckily, it wasn't on the same day, so Daddy would replace the missing spare each night. They weren't new tires to start with, so we dropped the pressures back an' never had another problem.\n\nThat Studebaker rode like a dream. It steered right where I was pointin' it the whole day. It actually got borin' for a while, just holdin' the gas steady, featherin' it just like we practiced. One feller told me that it would do good because it was real slippery in the wind. What he was sayin' was that \"low-boy\" design cut through the air real good, meanin' the engine didn't have to work as hard. Thank you again, Raymond Loewy. \n\nI wasn't havin' no problem gettin' to sleep at night. Daddy 'n' me would have supper together, go over what was comin' up the next day, then I'd hit the sack. We'd be up before six the next mornin', checkin' out the car an' makin' sure everythin' was okay. Other than washin' it an' cleanin' the bugs off'n the windshield, there wasn't much we could do.\n\nAll that work we put in on the car last winter was payin' off though. It never gave a hint of any problem. No overheatin', no vapor-lock, no missin', not even a hard start after a long hot run. She just started up on the first kick an' ran like a top. By the end of the fifth 'n' final day, I was tired, but happy as a hog in a mud bath. Daddy slapped me on the back when I climbed out of the car an' told me I'd done him proud. \n\nWe wouldn't get the results until the next mornin' on account of all the calculatin' that had to be done. Daddy 'n' I headed for the closest tavern to the motel an' had a few beers to celebrate. We'd been livin' pretty lean on the road, so it was time to cut loose a little. Even if we didn't win, we'd run good an' finished, so we could be proud of that.  \n\nI suppose we were on our third beer an' first burger when who should come stumblin' into the tavern but our old \"buddy\" Curtis Dodge. He didn't look too good. I figured he'd begun celebratin' a little sooner than we did. Unfortunately, he saw us an' dragged his sorry ass over our way.\n\n\"What the hell are you two hillbillies doin' here?\"\n\n\"You're gettin' to sound like a broken record, Curtis,\" Daddy said. \"Seems to me you asked us the same thing in Los Angeles.\"\n\n\"Are you tellin' me you finished the Gusher Gas ... all the way?\"\n\n\"Yes, indeed,\" Daddy said with a smirk. \"Surprised?\"\n\n\"I don't believe it. We'll see about that tomorrow mornin',\" he said, weavin' a bit as he stood.\n\n\"So ... how'd you do?\" Daddy asked.\n\n\"Aw, that shitbox car broke down yesterday. I figured I'd have won if it didn't swaller a valve,\" he growled. \"Those damn Belvedere's are just a crackerbox, fer Christ sake.\"\n\n\"Well ... too bad. Maybe next year,\" Daddy said with a smile.\n\n\"Naw ... I've had enough of this shit. Those assholes are blamin' me for bustin' their car. They don't know nothin'. I know more about drivin' than they'll ever learn. Who needs it,\" he slurred, turnin' an' weavin' his way to the back of the bar.\n\n\"Don't appear that he's too pleased right about now, Daddy.\"\n\n\"Nope. Not likely to be braggin' too much around home for a bit, I expect.\"\n\nI raised my glass an' we touched before sippin' down some cold Blue Ribbon.\n\nWell, you already know we won, since I gave that away right off the beginnin'. When they announced it, I looked at Daddy an' he looked at me, an' we just bust out laughin'. Who'd a thunk? I dragged Daddy with me up on the stage to accept the trophy an' the check for $3,000.  \n\nWhile we was up there, a feller from Studebaker come up to us an' gave us a check for another $1,000. He said it was on account of we did them proud, takin' a '53 an' winnin' the Special Category.  Damn, if that wasn't a nice surprise.\n\n\"What are you goin' to do with all that money, son?\"\n\n\"Well, Daddy. You get half, so with what's left, I figure on gettin' Wanda her divorce from Wally so's she can marry me. We've been livin' in sin for some time, so it's time to make it right with her.\"\n\n\"That's a fine idea, son. She'll be a mighty happy woman, I can tell you that for sure.\" \n\n\n\n\"What about you, Daddy? What are you goin' to do with your share?\"\n\n\"I think maybe I'll take your Ma to the big city, Dallas. She's never been there, an' we can stay in a fancy hotel an' eat steak every night. I expect she'd like that,\" he smiled.\n\n\"Good for you, Daddy. Ma will be right proud of us for winnin' all this. Do you suppose we can telephone them an' let them know about it?\"\n\n\"Let's do it. We can afford it,\" he grinned.\n\nSo that's what happened. Wanda got her divorce an' we got married proper like. We took the Starliner to Albuquerque for a honeymoon an' had a fine old time. I think Wanda loves that car almost as much as she loves me. I am one lucky grease monkey. She still works at the Sip & Bite, but doesn't have the early shift any more. She kept showin' up late for it on account of our private activities.  Sam was real understandin' about it, so she's workin' the regular shift full time. \n\n   \n\nCurtis Dodge ain't been around much since we got back. I guess it cut him pretty good when he seen we won our category an' got all the glory an' a big magazine article about Daddy, me, 'n' the car. The town put up a big sign at each end sayin' you was enterin' Busted Branch, home of Hardy & Purvis Miles, Gusher Gas Economy Run winners. Turns out we did better than some of the big factory teams, an' that stuck in their craw.  We won't be doin' it again, I don't suppose. No point in it. We set out to do somethin' an' we did it. ",
        "So now, when Wanda 'n' me are fixin' to go someplace, we pull the dust cover off the Starliner, an' roll away to wherever. I don't reckon I could wish for anythin' more than what I already got. \n\nEND \n\nMy thanks to ErikThread and DaveT for the editing and helpful suggestions. I messed with it a little afterwards, so any errors or omissions are all mine."
    ],
    "authorname": "coaster2",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/wanda-the-starliner-and-me-pt-03"
}