{
    "title": "The Crusader Ch. 07",
    "pages": [
        "Ch. 7 \u2013 The Death Watch\n\nBy Woodmanone copyright December/2011\n\nThe continuing adventures of Rollie Chambers.\nConstructive comments, emails, and critiques are more than welcome and greatly appreciated.\nThank you for taking the time to read and comment on my work. I hope you enjoy the story.\n\n<center>********************</center>\n\nThe bright sunny almost cloudless, warm day was just made for cruising in a Corvette; especially in a T-Top with the rear window removed. Rollie Chambers smiled as he felt the car's raw power, and fought the temptation to exceed the 65 MPH speed limit. The Corvette's engine growled its impatience running at the relatively slow speed and it ate up the miles as the Stingray roared south on Route 100 on the east side of the Missouri River, south toward Alton, Illinois.\n\nAs he drove, Rollie thought, I'm glad now that I bought the car and had it restored. He turned and smiled at his passenger, Jessica Talbert. Jessica, or Jess as he called her, was Rollie's roommate, lady, and best friend. Although not married, Rollie and Jessica were committed to each other and to having a life together. \n\nThey had been on a picnic at Pier Marquette State Park, enjoying the scenery and the beautiful spring weather. It was late May and in a month or two the hot humid summer weather would invade the St. Louis area making it far less comfortable, but for now it was almost perfect.\n\nJessica returned the smile and laughed. He looks like a little boy on Christmas morning after opening his presents. \n\n********************\n\nThe car in question was a 69 Corvette T-Top. Rollie had found the vehicle languishing in a garage at one of the older large homes around Lafayette Park. A few weeks after Rollie's wife, Susan, died, he'd been just cruising around one day and saw the \"For Sale\" sign on the car. The garage doors were open but Rollie didn't think many people would have noticed the car parked in the shadows. He stopped and rang the door bell which was answered by an older, grandmotherly type woman.\n\n\"Howdy ma'am,\" Rollie greeted the lady. \"I'm Rollie Chambers and I'd like to talk to you about the car you have for sale.\"\n\n\"I'm Abigail Simpson.\" She picked up the keys from a side table and tossed them to him. \"Bring them back when you're done looking at the car young man. I had a new battery put in so the car would start,\" Mrs. Simpson said as she closed the door.\n\nShe shouldn't be so trusting, Rollie thought as he walked around the side of the house to the garage. The Corvette was Burgundy Metallic, had what was known as a 'shaker hood', a raised cowling with metal letters along the sides that said '427'.\n\nRollie sat in the driver's seat, inserted the key and turned it to start the vehicle. The starter groaned, turned over a couple of times and the engine roared to life. The factory side pipes caused sound waves to bounce off the walls of the garage and Rollie could feel the vibrations. The engine smoothed out and Rollie drove the car out of the garage into the sunlight so he could get a better look at it. Then he put the car in neutral and let it run while he walked around giving it a closer inspection. Rollie found that the car was basically in good shape cosmetically and from the sounds of the engine there was nothing major wrong in that department. The sound of the side pipes, the feeling of power as he sat back in the driver's seat cause Rollie to fall in love with the beast right then.\n\nHe looked in the driver's door pocket and found a large manila business size envelope. It contained the owner's manual, an illustrated brochure on where and how to store the removable rear window and another one to show where to fasten down the smoked glass T-Tops. The envelope also contained the original window sticker for the car. \n\nThe sticker said the car was a 1969 Corvette Stingray. Some of the options listed were the T-Tops and the removable rear window. The engine was listed as the L68 option; a 427 Tri Power with triple 2 barrel Holly carburetors. The transmission was the M22 option. The car also had Positraction and G70 tires and wheels. The price was listed at $5832.\n\nWhile the car idled, Rollie used his smart phone to go on line and research the Corvette. He found that the engine produced 400 HP and the heavy duty, close ratio, 4 speed gear shift box was called the Rock Crusher. The cars he could find advertized ran from 30 thousand dollars up to 75 thousand for low mileage ones. He looked at the odometer and saw it read 8354 miles. Hope Mrs. Simpson doesn't want that much for the car. I love the beast but I don't want to spend that kind of money for a week end type vehicle.\n\nRollie shut off the engine, returned the envelope in the door pocket and walked back to Mrs. Simpson's, once again ringing the bell. He handed her the keys when she answered the door.\n\n\"You don't like the car then?\" Mrs. Simpson asked.\n\n\"No ma'am, I mean yes ma'am. I really like it. Is it your car ma'am?\"\n\n\"The car belonged to my son Teddy. He bought it new in '69 but joined the Army shortly afterwards and didn't get a chance to drive it much.\" Rollie could see the pain in the old lady's eyes as she added, \"Teddy was killed in Viet Nam in '73. The car has been sitting in the garage ever since, except for me starting it and driving it around the block every week. That's what my Teddy asked me to do; I've been doing it for almost 40 years now.\"\n\n\"Sorry for your loss, ma'am.\" The elderly woman seemed to go back in time thinking about her son. Rollie waited for more than two minutes for her to rejoin the present, and then asked, \"How much are you asking for it?\" \n\n\"My neighbor tells me the car's worth a lot of money; I don't know what those things.\" Mrs. Simpson stared at Rollie for several seconds. \"I'll let you have my son's car for $25,000.\"\n\nRollie hesitated for a moment. He liked, hell he loved the car and he knew it was probably worth a lot more on the open market, but 25 Grand was a lot of money.\n\n\"The car has extremely low mileage, and I don't believe there's anything major wrong with it.\" Mrs. Simpson smiled at Rollie. \"Most likely all you'll have to do is a tune up, get new tires, and maybe a new paint job to make it brand new again.\"\n\n\"Mrs. Simpson, that's a fair price for the car,\" Rollie said. \"But it's a bit steep for me. I'd like to buy the Corvette for maybe 18 thousand.\"\n\n\"I like your looks young man, you've been raised right and you have good manners. I'll let you have the car for $23,000.\"\n\n\"Thank you ma'am. My folks had a hard task but they did raise me to respect my elders. I'll give you 20 thousand for the Corvette. No financing to arrange, or banks involved; just cash money in any denominations you like.\" \n\n\"I'd like to see the car go to someone that would care as much about it as my Teddy did. Make it 21 cash and we've got a deal.\" Mrs. Simpson stuck out her right hand and held the keys with her left, jingling them in front of Rollie's eyes. To him, it was like a siren's song.\n\nRollie had to smile at the old lady. \"Ma'am, for someone who claims not to know anything about cars, you sure drive a hard bargain. Guess we've got a deal,\" he said as he shook her hand. \"It'll take me about two hours to get to the bank and get the money. Do you want me to leave a check with you to hold the car until I get back?\"\n\n\"Your words good enough for me young man,\" Mrs. Simpson answered.\n\n\"Thank you ma'am. I'll go put the car back in the garage and head for my bank. Do you want cash or would you prefer a cashier's check? That's a lot of money to have lying around the house.\"\n\n\"A cashier's check will do fine. Leave the car where it is and I'll see you in a couple of hours.\" Mrs. Simpson closed the door.\n\nRollie almost ran to his truck, jumped in the cab, and drove the four miles to his bank that was near his apartment. He ran into the bank and waved at his friend, Dewey Baker, who was the manager of the M & I Bank.\n\n\"Dewey, I need a cashier's check made out to Mrs. Abigail Simpson for $21,000 and I need it fast. I just made a deal on a car and I have to get back before someone buys it out from under me.\"\n\nBaker didn't hesitate; he led Rollie over to a teller and gave her instructions. It took than ten minutes and Rollie was on his was on his way back to Mrs. Simpson's. He waved at Dewey, \"I'll call you later and tell you about the car. Thanks for your help.\"\n\nWith the help of some cooperating traffic lights and not many cars on the street, Rollie was able to get back to the Park Avenue house in even less time than it had taken to get to the bank. When he parked in front of the house, he saw a large man at Mrs. Simpson's door. Rollie couldn't hear the man's words as he walked toward the house, but the tone was angry.\n\n\"Look lady,\" Rollie heard as he got closer. \"Your neighbor said you wanted 25 for the car, I'm offering you 27.\"\n\n\"I've already told you the car is sold. The young man who bought it will be back in a bit with the money.\"\n\n\"Yeah, maybe. But I'm here now,\" the man replied.\n\n\"So am I,\" Rollie said stepping onto the porch. He turned and said, \"Hi Mrs. Simpson. I've got your check.\"\n\nThe big man turned toward Rollie and said, \"Beat it sonny, I'm going to buy the car.\"\n\nFor the first time Rollie really looked at him. He was about an inch taller than Rollie's 6' 2 and probably 30 pounds heavier. He had a big red nose, like a man who was no stranger to strong drink, and his face was red with anger. The suit he wore was of good quality, but he looked uncomfortable wearing it. His big hands hung out of the coat sleeves like hams.\n\n\"You're mistaken Mister. I've already made a deal with Mrs. Simpson,\" Rollie said. He turned and handed the woman an envelope. \"This is a cashier's check for the amount we agreed on, Mrs. Simpson.\"\n\n\"Thank you Mr. Chambers.\"\n\n\"Chambers? Are you Rollie Chambers?\" The big thug asked. \n\n\"I am.\"\n\n\"I've heard of you. You're the one that found Frank Rossi's daughter and stopped a kidnapping last year?\"\n\n\"That would be me.\"\n\n\"You busted up Vito Rossi's protection racket too.\"\n\n\"Yes I did. I never actually found Vito; at least not until it was too late. That didn't work out so good for Vito.\"\n\nThe big man looked at Mrs. Simpson. \"My apologies ma'am. You too Chambers. I didn't know it was you that bought the car. I'll leave now.\" He turned and hurried off the porch and down the walkway. By the time he got to his car parked at the curb, he was almost running. Rollie and Mrs. Simpson chuckled at the big man's retreat. \n\n\"Apparently your reputation precedes you Mr. Chambers. I haven't seen a grown man rush so fast in a long time.\"\n\n\"He did seem to be in a hurry to leave, didn't he?\" Rollie laughed again.\n\n\"May I take advantage of your kind nature to ask a favor,\" Mrs. Simpson asked. At Rollie's nod she asked, \"The title is in my safety deposit box at the bank. Would you take me to the bank so I can deposit this check and I'll get the paper work for the car at the same time?\" She paused and added, \"And maybe let me ride in Teddy's car one last time?\"\n\n\"Yes ma'am. I'd be happy to.\"\n\nRollie took the keys and walked to the garage. He pulled the Corvette around to the front of the house and helped the elderly lady into the car. Mrs. Simpson had tears in her eyes as Rollie drove her to her bank. Back at her house on Park Avenue, Rollie helped her to her door.\n\nSmiling sadly, Mrs. Simpson said, \"Thank you Mr. Chambers. That car was Teddy's dream but it belongs to you now. Take good care of it. Good bye.\" She turned and went into her home.\n\n\"Yes ma'am, I will. You have my word,\" Rollie whispered to the closed door. Later that day, a neighbor dropped Rollie back at the old house so he could pick up his truck.\n\nIt took three months and several dollars, actually more like thousands, to put the Corvette back in pristine condition. Rollie had the car repainted the original Burgundy Metallic and the interior redone in black leather just like the factory 1969 materials. He also put new F70x15 red striped tires on the seven inch wide steel wheels. The Corvette was as close to original and new as possible. \n\n********************\n\n\"Would you like to drive Jess?\" Rollie asked as he drove south on Route 100. He pulled off the highway into a scenic lookout and stopped the car.\n\n\"I wouldn't want to come between you and your car.\"\n\n\"It's our car Jess,\" Rollie said in a serious tone. He gave her a small grin and added, \"Just like everything else; what I've got is yours.\"\n\nJessica touched his arm on the console and returned his grin. \"Yes, I would like to drive.\" They switched seats and Jessica pulled back onto the highway. \n\nInstead of watching the road, Rollie watched Jessica take it through the gears. She had a big smile and her blue eyes sparkled. With the T-Tops stored behind the seat, her long auburn hair was blowing in the wind. Her face had a blush of red from the excitement of driving the classic car.\n\nJessica pulled back off the road after about twenty minutes. \"That was fun, but I know you're chomping at the bit to get back behind the wheel. Thank you Rollie. And not just for letting me drive.\" They switched seats again and he roared back onto the road.\n\nRollie pulled the low slung beast into a parking spot in front of Bailey's Ice Cream shop in Alton. This was an old fashioned, family run business that had been on the same corner for almost 50 years. Bailey's dished up a maximum of 8 flavors and two kinds of cones; no 31 flavors, whole grain cones or fat free ice cream here. The ice cream was made on site using the same recipes as when the shop opened. It was as close to 'home made' as possible.\n\nGetting out of the Corvette, Rollie walked around and help Jessica. After getting their ice cream cones, Jessica started toward the car, Rollie sat down at a table in front of the ice cream shop. \n\n\"Shouldn't we be going if we want a chance to shower and change before dinner?\" Jessica asked as she walked back to join Rollie.\n\n\"We've got plenty of time. We'll leave as soon as we finish our cones. I don't want to get anything on the car, especially melted ice cream.\" \n\n\"You don't keep our apartment as clean as you do that car.\"\n\n\"Our apartment isn't a rare, classic, 69 Corvette either. The Beast deserves to be treated with respect.\"\n\n\"The Beast?\"\n\n\"That's what I've named it.\"\n\n\"Why the Beast?\"\n\n\"What else would you call a 400 HP car that you have to fight with to keep it under the speed limit?\"\n\nJessica laughed. \"I'd call it a car; if I called it anything.\"\n\n\"Women have no soul when it comes to beautiful cars\" Rollie said looking up to the sky. He laughed, took Jessica's arm, and led her to the Beast. \"Just don't drip anything on the seats please,\" he requested.\n\n********************\n\nShortly after 10PM Rollie and Jessica left Rigazzi's Italian Restaurant for home. They made it a point to visit Rigazzi's at least once a week. The owner, Tony Rigazzi, was a close friend and he expected them to join him for dinner. He had sat at their table for most of the evening, talking and spending time with two of his favorite people. Jessica was a Clinical Psychiatrist at Washington University and she had early rounds at the University Medical Center the next morning. \n\nRollie was stopped at a light on Kings Highway when three men stepped out of the shadows of an alleyway. The first man was somewhat smaller than a city bus, but not by much. The other two were normal size human beings.\n\n\"Get out of the car,\" the big man ordered. He waved a gun at them and Jessica started to protest. \n\n\"Do as he says Jess,\" Rollie said.\n\nAs he exited the car, he heard Jessica yell at one of the other men. Rollie turned and saw a man jerking on Jessica's arm as she tried to unfasten her seat beat. Her head hit the door post and she slumped onto the seat with the seat belt still attached.\n\n\"Hey take it easy,\" Rollie said and started around the car toward Jessica. He felt the impact and heard the sound of the gunshot at the same time. Rollie dropped to one knee, pulled his own weapon, turned and fired at the big man. His target grunted in pain and lumbered away. Rollie turned back to face the other two but they were running back down the alley. Rollie started to fire at the retreating men, but pulled his .45 back down to his side. In his condition he wasn't sure he could hit the moving targets and he didn't know what was down the alley behind them. \n\n\"Jess, you okay?\" Rollie asked as he fought against passing out. He looked over and saw Jessica, sprawled unconscious, in the passenger seat. Rollie half crawled over to her and saw blood seeping from a cut above her temple. He used his cell to call 911.\n\n\"911, what is your emergency?\"\n\n\"We've been car jacked with shots fired. Two wounded. We're at the corner of Bischoff and Kingshighway and need an ambulance and the police.\" Rollie slipped to the ground, leaning into the car with his head in Jessica's lap. \n\n\"Jess,\" he whispered as he passed out.\n\n********************\n\nThe first sound Rollie heard was a steady beep, beep, beep. I know that sound, he thought as he fought to regain consciousness. Yeah, that's a hospital monitor. Is that where I am? Rollie tried to open his eyes and when he couldn't, tried to sit up. \n\nHe wished he hadn't moved. The sharp, shooting pain in his side almost made him pass out again. His thoughts were fuzzy and it took several seconds before he remembered being shot. Abruptly he remembered Jess. Rollie slumped back onto the pillow and he could feel the tears coming into his eyes.\n\nHis movements had caused a change in the monitor readings and a nurse hurried into the room. \"Welcome back Mr. Chambers,\" a brisk authoritative voice said. \"I'm Nurse Julie Colwell, you can call me Julie. Now you just take it easy,\" the nurse ordered. \n\n\"I can't open my eyes,\" Rollie complained.\n\n\"I'll take care of that for you.\" Nurse Colwell's voice softened and she spoke in a lower tone. \"You've been crying in your sleep and when the tears dried they formed a crust on your eyelids.\"\n\nRollie felt a very warm, wet, cloth wiping his eyes. \"Now try,\" the nurse suggested after a couple of minutes. \n\nThis time Rollie was able to open his eyes and see the hospital room he was in; he could also see Nurse Colwell. She wasn't what he expected from her voice. Julie Colwell appeared to be about 40, few years older than Rollie's 33. Even at 5' 7 and slender, she had a no nonsense aura of command about her. Rollie saw that she wore her long, dark hair gathered down her back and her grey eyes missed nothing.\n\nIn spite of the previous reaction, Rollie sat upright in the bed and grunted at the pain. \"Where's Jessica? How is she?\" \n\n\"That would be the young woman that was brought in with you?\" Rollie nodded; even the abrupt movement of his head, made his body ache.\n\n\"She's in another ward. If you promise to stay in bed, keep still, and let me do my job I'll find out what I can.\" Nurse Colwell check the monitor and then examined Rollie's wound. Nodding in satisfaction, she said, \"You and the young lady were injured during an attempted carjacking. You were shot in the side, but no organs were hit and the bullet passed through your body.\" She patted Rollie on the arm. \"It'll take a while, but you'll be fine.\"\n\n\"Jessica?\"\n\n\"I'll go see what I can find out, but you promised to stay still. Right\" \n\nRollie nodded and Julie left. In spite of his promise to Nurse Colwell, Rollie had to test his body a little. He found he had complete use of his legs and arms, but it hurt too much to sit up. Rollie felt his chin and realized he needed a shave. Wonder how long I've been here, he thought.\n\nIt was close to forty five minutes before Nurse Colwell returned. \"I shouldn't really give you information about another patient. Miss Talbert has a serious concussion, her brain was bruised and it's swelling. The doctors have her in a drug induced coma to allow the swelling to go down and help her body heal itself.\" Julie saw the fear in Rollie's eyes. She also saw something else, something deadly, something more than anger.",
        "Julie quickly continued, \"That's normal procedure with head injuries Rollie. Don't worry; Jessica's doctor is the best in the state with head traumas. I told the charge nurse to call me every couple of hours.\" She grinned and added, \"There is a big, mean, looking man in her room. The nurse told me they tried to get him to leave but he refuses; they told him they would call security to remove him. The big man said they'd better call a lot of them because he was going to stay right there until the young lady regains consciousness. He was quite adamant.\"\n\nJulie chuckled. \"He asked about you and when I told him you'd be okay he said to tell you to get off your butt and let's go get the bastards that did this.\"\n\n\"Tully,\" Rollie said in a low voice, almost to himself. He smiled and nodded at Julie. \"That's Tully. Next to Jessica, he's my closest friend.\"\n\n\"He's very intimidating isn't he?\" Julie stated.\n\n\"Tully can be a force of nature all on his own. But Jessica sometimes calls him 'Bear', because where she's concerned, he just a big teddy bear.\" Rollie rubbed his face and asked, \"How long have I, we, been here?\"\n\n\"This is the third day,\" Julie answered. A young candy stripper stood in the doorway. \"Nurse Colwell, there's a call for you at the nurse's station.\"\n\n\"Be right back Rollie,\" Julie said. She returned in just three minutes. \"Jessica's doctor said they are taking her off the drugs and she should wake up within 24 hours. He said the prognosis was excellent for her complete recovery.\" Julie read the concern in Rollie's face. \"It's normal for her to sleep a while after the drugs; that's a lot different than being unconscious. From what the charge nurse said, she'll be okay a lot sooner than you will be.\"\n\nRollie had tensed up when Julie started to talk about Jessica. Now he relaxed and let himself go to sleep too.\n\n********************\n\n\"Rollie, Rollie Chambers,\" Rollie heard a loud voice calling from the hallway. It had been 24 hours since Rollie first woke in the hospital. \"Where the hell are you?\"\n\n\"Tully,\" Rollie said to himself with a smile and then called out, \"I'm in here you big ape.\"\n\nThe figure that appeared in the doorway was a poster boy for a former Marine Master Gunnery Sergeant. He was only 6' 3, but his barrel chest and erect posture made him look taller. His hair was salt and pepper and cut so short his scalp showed through. He walked with a very slight limp, due to having a prosthetic right leg from the knee down. Tully had lost the leg during a tour of duty with the National Guard in Afghanistan.\n\nTully walked over to the bed and shook Rollie's hand. \"Glad to see you boy. How're you doing?\"\n\n\"I'm okay, considering the hole in my side. Damn good thing the perp used a small caliber gun. If it had been a .45, I don't know that I would be here. How's Jess?\"\n\n\"Dr. Talbert is sleeping peacefully and is in better condition than you,\" Tully replied. \n\n\"When are you getting out of here?\" Tully asked. \"We've got work to do.\"\n\n\"The doc won't give me a straight answer, but the head nurse, Julie Colwell told me it would be at least another three or four days.\"\n\n\"Who's raising all this fuss in my ward?\" Nurse Colwell asked in a hard voice as she entered Rollie's room. Seeing Tully she said, \"You're the man from Jessica's room.\" Tully nodded. \"Well don't think you're going to run rough shod over this ward. I won't allow it.\" She stared at Tully with a challenge.\n\n\"No ma'am, I mean yes ma'am,\" Tully responded. He wasn't used to anyone talking to him in that way; especially an attractive woman.\n\nJulie's face relaxed. \"The fact that you want to protect your friends is admirable, but you have to let us do our jobs.\"\n\nRollie had a hard time hiding the grin and laughter at Tully's reaction to Julie. He'd never seen the big man cowed before.\n\n\"Nurse Colwell, Julie, this is my friend and partner, Jacob Tully. Tully, this is Julie Colwell; my nurse and the Gunnery Sergeant in charge of this ward.\"\n\nJulie extended her hand to Tully. He took it and sort of bowed over it. \"Pleased to meet you Nurse Colwell.\"\n\n\"It's good to meet the man who caused such a fuss in Ward 6,\" Julie said. \"Just call me Julie. Nurse Colwell is a bit of a mouth full. I'll call you Jacob.\"\n\n\"Tully's what I go by, Julie. And I promise I'll behave,\" Tully added with a grin.\n\nHe continued to hold onto Julie's hand. They stared at each other for what seemed a long time.\n\n\"Ahem.\" Rollie said. \"Remember me? I'm the patient here.\"\n\nJulie smiled and pulled her hand away from Tully. \"Can I have my hand back Tully?\"\n\nTully returned her smile, not embarrassed at all. \"Only until tonight at dinner.\"\n\n\"Very sure of yourself aren't you?\"\n\n\"Maybe so but I'm a Marine. We're taught to adjust, adapt, and over come.\" Tully smiled again and said, \"I'll pick you up at 7. Is that okay?\"\n\nJulie took a note pad from the drawer in the table next to Rollie's bed. \"7 sharp and don't be late,\" she said and wrote her address and phone number down and handed it to Tully. \"Now I've got patients to tend to. Don't stay and tire Rollie out too much; he needs his rest.\"\n\n\"Yes Ma'am.\n\nTully admired Julie as she walked out of the room. He shook his head and turned to Rollie. \"She'd almost be worth getting shot for.\" Rollie smiled and Tully continued, \"I've got info on the big guy you shot. The cops are detaining a man who came into the ER over at Lutheran Hospital early this morning. Seems he couldn't explain the gunshot wound he was being treated for.\"\n\n\"So I did hit him. The way he ran off I thought I missed my shot.\"\n\n\"Do you remember what he looks like? That guy is huge; he's about 6'6 and weighs close to 300 pounds. Your .45 would have knocked down a normal man. He was dropped off at the ER by a person or persons unknown; according to the police report.\"\n\n\"Probably the two others that were with him,\" Rollie said. \"Got a name?\"\n\n\"Not yet; he wasn't carrying any I D and he refuses to give his name. For right now the cops are holding him on suspicion and for refusing to identify himself. They've got a man on him in the hospital until he can be released and then they'll take him to the precinct house.\"\n\n\"I want to go see Jess first, but maybe it'd be a good idea for you and I to talk to this guy before he gets into the system,\" Rollie suggested.\n\n\"Be right back,\" Tully said and disappeared out the door. He reappeared shortly pushing a wheel chair. \"Your ride is here sir,\" he said with a grin. \n\n\"Where to?\" Rollie asked as he slowly made his way into the chair.\n\n\"Just hang on. We'll have to go around a bit so we don't run into Julie.\" Tully chuckled and said, \"She reminds me of my DI when I was a boot.\"\n\nTully pushed Rollie onto a freight elevator at the end of the corridor and rode down to the second floor. As they got near a nurse's station, Tully slowed and when the nurses at the desk were busy, he quickly pushed Rollie down to room 234 and entered.\n\nThe back of Jessica's bed was raised and she looked like she was taking a nap. There was a bandage around her head, an IV in her left arm and the wires of a monitor snaked under her hospital gown. Rollie could hear her whimpering in her sleep. Rollie rolled the wheelchair over to her bed, climbed out, and sat next to Jessica. He grimaced at the pull in his side but shook his head when Tully stepped over to help.\n\n\"I can hug my woman without your help big guy,\" Rollie said and put his arm gently around Jessica. \"Hey Jess, it's me. It's okay, we're okay, don't cry.\" Rollie's eyes got misty as he held her. \n\nJessica stopped whimpering and the monitor readings seemed to settle down with Rollie's words. Tully stepped out of the room to give them some privacy. A few minutes later he came back in.\n\n\"Red alert! Battle stations,\" he said with a grin. \"Julie's coming this way and she looks pissed. We better get out of here.\"\n\n\"Nope, I won't leave until I'm ready,\" Rollie said in a hard voice.\n\n\"Are you sure you want to deal with Julie?\"\n\n\"Is she sure she wants to deal with trying to come between Jess and me?\"\n\n\"Too late, here she comes,\" Tully said and went to a corner of the room. \"I'm staying out of the way.\"\n\n\"Mr. Chambers, what are you doing out of your room?\" Julie asked as she stormed into Jessica's room.\n\n\"I'm visiting my woman,\" Rollie answered with a challenge in his tone.\n\nJulie saw the peaceful look on Jessica's face and on Rollie's. She looks less stressed and her vital signs have steadied, his color is better too, Julie thought. Maybe this is what they both need. \n\n\"Well don't stay too long and tire Jessica and yourself,\" Julie replied. \"Let me know when you get back to your room.\" She turned and left, smiling to herself.\n\nForty five minutes later, Rollie let Tully wheel him back to his room. He carefully climbed out of the wheel chair onto his bed. Rollie nodded at Tully, closed his eyes, and went to sleep. \n\nIt's one thing to hear that the person you love will probably be okay after an accident, but it's hard not to worry, Tully thought. Looking at Rollie sleeping, Tully knew that the excitement and adrenaline rush tired Rollie out. Tully quietly left the room to let his friend sleep.\n\nIt was 6 AM when the phone rang. Tully was having his first cup of coffee and thinking about breakfast. Who's calling me at this time of the morning? He thought and picked up the phone.\n\n\"Is the shooter still at Lutheran?\" Rollie asked without saying hello.\n\n\"Yeah, he's still there. Probably will be for another few days; your .45 did a job on him. Why?\"\n\n\"I want to go talk to him.\"\n\n\"Think that's a good idea?\"\n\n\"Probably not, but I'm going anyway. Will you help me?\"\n\n\"What'da ya need?\"\n\n\"I need you to come sneak me out of the hospital. Julie's off today and it may be my only chance. You know she keeps an eye on me ever since I went down to Jess's room.\"\n\n\"See you in an hour.\"\n\nTully breezed into Rollie's room an hour later, pushing a wheelchair. He was wearing pale green scrubs and a white lab coat; a stethoscope hung around his neck. Tully shut the door behind him.\n\n\"You look like a doctor,\" Rollie said grinning.\n\n\"That's the idea. And you will too once I get you out of here.\" Tully tossed another set of scrubs to Rollie. \"Put these on; you can't walk around in that hospital gown at Lutheran.\"\n\nRollie slowly dressed in the scrubs. He had to let Tully put on his sneakers because he had trouble bending over to tie them. Tully handed him a doctor's smock, a large terry cloth robe, and sat him in the wheel chair.\n\n\"The robe will hide the scrubs and coat. People will think we're a doctor and his patient; when we get to Lutheran we'll lose the robe. They'll think we're just a couple of doctors visiting the injured man.\"\n\n\"You think of everything Tully. I was just going to try and sneak out.\"\n\n\"Adjust, adapt, and over come,\" Tully replied.\n\nTully's truck was parked in front of the hospital and as he wheeled Rollie over to it. A security guard was leaning against the front fender. He waved and walked away.\n\n\"He's a retired police officer,\" Tully explained. \n\n\"What happened to my car?\" Rollie asked. \"Getting shot and worrying about Jess, this is the first time I've thought about it.\"\n\n\"One of the uniforms on scene knows you, so he had his partner follow him and drove your Corvette back to your house. It's in the garage waiting for you.\" Tully grinned, \"The patrolman said to tell you that he'll drive it for you until you got back on your feet if you like.\"\n\n\"Thank him for me, will you Tully but tell him there are only two people allowed to drive it.\"\n\nAs they walked through the employee's entrance at Lutheran Hospital, Tully said, \"I'm Dr. Cambridge and you're Dr. Sterling.\" For the first time Rollie noticed the names stitched above the left breast pocket of the white coats. \n\n\"Sounds like a law firm,\" Rollie teased. \"We'll have to walk like we're going somewhere important. Hope I can keep up.\"\n\n\"Why? Are you hurting?\"\n\n\"Not really, but I don't think my side likes me moving around this much,\" Rollie said. He opened his coat and showed Tully the blood on the scrubs over his wound.\n\n\"Damn,\" Tully said. He saw a storage closet, ducked into it, and returned with a small towel. Tully folded it and put it over the wound; taping it down with surgical tape. \"That'll have to do for now. Here carry this,\" he said handing Rollie one of the metal binders that hospitals use for the details of a patient's case. \"We can walk slowly; like we're discussing a patient's chart.\n\n\"What room is the guy in?\" Rollie asked.\n\n\"Sort of ironic,\" Tully said. \"He's in room 234; same number as Jessica. The nurse said he was resting comfortably.\"\n\n\"I don't think he's going to be as comfortable during our visit,\" Rollie said with an evil smile.\n\nAs they got off the elevator on the second floor and walked toward room 234, Rollie stopped. \"I know the patrolman standing guard,\" he said as he turned his back to the guard.\n\n\"Don't worry about it; so do I,\" Tully replied. He walked ahead and talked to the patrolman. \n\nThe police officer looked over Tully's shoulder, smiled at Rollie, and said, \"Think I'll go get some coffee. Should be back in about fifteen minutes.\" He turned, walked past Rollie grinning, and got on the elevator.\n\nRollie joined Tully at the door. \"I gave him some personal instruction on weapons right after he graduated from the Academy,\" Tully said. \"He'd qualified, but just barely and he wanted to do better; the next qualification, he shot 92 out of 100.\"\n\nPushing to door open, Tully and Rollie entered and walked over to the man lying on the bed. He was attached to a monitor and had an IV inserted in one arm; he was napping. Tully pushed him, none too gently and he woke up.\n\n\"Who're you guys?\"\n\n\"I'm Dr. Feel Good and this is Dr. Kick Ass,\" Rollie answered. \"And you are?\"\n\n\"I'm not talking.\"\n\n\"Let me tell you how it's going to be,\" Rollie said leaning closer. \"I'm going to ask you some questions and you're going to tell me what I want to know...or.\"\n\n\"Or what?\"\n\n\"Dr. Kick Ass will poke, prod, and push on certain parts of your body until you decide to answer. You can do this the easy way or the hard way, but you will answer my questions. It's up to you.\"\n\n\"Hey, you guys ain't doctors.\" The man stared at Rollie for a few seconds. \"I know you; you're the guy that shot me,\" he exclaimed in a worried voice.\n\n\"You shot me first,\" Rollie said with another evil grin. \"Now, what's your name? And before you refuse to answer you should know that this large gentleman is my best friend. He's also my lady's best friend and he's more than a little put out about you shooting me and putting her in the hospital.\"\n\n\"I didn't do nothing to the woman. That was one of the others.\"\n\n\"We'll get to them. Now what is your name?\"\n\nThe man looked back and forth between Rollie and Tully. As Tully reached toward the guy's stomach area he said. \"Wait, I'm Johnny Rogers.\"\n\n\"And who are the other two?\"\n\n\"Bert and Sammy. Don't know their last names.\"\n\n\"That's hard to believe. You three decide to car jack someone and you don't know their names?\"\n\n\"It's true. The boss introduced them and said they were gonna help me.\" That's all I know.\"\n\n\"The boss? What boss?\"\n\nRogers hesitated, but quickly answered as Tully grabbed the IV in his arm. \"Tommy Jackson; I work for him.\"\n\n\"The drug dealer?\" Tully asked.\n\n\"Yeah. It was supposed to look like a carjacking but he said it was payback for something you did to him,\" Rogers said and pointed at Rollie.\n\n\"He told you to shoot me?\"\n\n\"Naw, we was supposed to work you over and your woman too, but things went sideways.\"\n\nRollie and Tully exchanged looks. \"When the officer comes back, I suggest you talk to him; for your own protection,\" Rollie told Rogers. \"Jackson's not going to like you talking to us. He might decide that you're more trouble than you worth.\"\n\n\"And you can be sure we'll let him know who told us about his plan,\" Tully added. Turning to Rollie he said, \"Let's go; we need to get you back.\" Rollie nodded and followed Tully out of the room and down to the car.\n\n\"How's the side?\" Tully asked as they drove back.\n\nRollie pulled open the smock; the towel was bloody. \"I think I better have someone look at this when I get back in my room.\"\n\nAfter a few minutes, Rollie asked, \"Your friend John Williams still running Security Specialist?\" Tully nodded. \"Call him and put a security detail on Jess's room. Jackson might try again.\"\n\nTully used his cell phone and made the call. After a few minutes Tully said, \"There will be three men, running eight hour shifts, outside Jessica's door shortly after we get back.\" \n\n\"Tell them to keep a low profile until I can talk to Julie,\" Rollie suggested. Tully turned back to his phone and gave instructions. \n\n\"When we get back, I'll check on Jess and then go to my room.\" Rollie shook his head and gave Tully a rueful smile. \"I'll need your help in putting on a new bandage. Maybe I can keep Julie from finding out about my little trip. If not, she's going to be very upset with me. By the way, how did your date with Julie go last night?\"\n\n\"She had to work overtime, so we were supposed to go out tonight instead.\" Tully grinned. \"Course after our little trip today, I don't think I'm gonna be one of her favorite people either.\"\n\n\"I'm sorry Tully if helping me screwed up your chances with Julie.\"\n\n\"If she's the kind of woman I think she is it won't matter; if she's not then I'm not sure I'd want to be with her anyway.\" Tully grabbed a wheelchair as they entered the hospital. \"We'll go to Jessica's room first and then I'll take you back to yours and get you cleaned up.\"\n\nTully pushed Rollie into Jessica's room and came to a skidding halt. Julie was sitting in the chair next to Jessica's bed. She looked up and at first she had an inquisitive look on her face that quickly turned to an angry one.\n\n\"And just where have you two been dressed like that?\" Julie asked pointing to the scrubs that both men wore. She got up, walked over to Rollie, and took the stethoscope from around his neck then glared at Tully.\n\nTully snapped to attention, stared at a spot on the wall six inches above her head and answered, \"Tully, Jacob, Master Gunnery Sergeant, 4864211105 Ma'am.\"\n\n\"What?\"\n\n\"Name, rank, and serial number Ma'am. That's all I'm required to give according to the Geneva Convention,\" Tully answered.\n\nRollie chuckled and Julie had to smile. \"At ease Marine,\" Julie said. Tully went to parade rest, still staring at the same spot above Julie's head. \n\nShe turned back to Rollie and asked, \"Now that the Neanderthal has been heard from, why don't you tell me where you guys have been.\"\n\n\"My fault Julie. I wanted to question the guy that shot me. Tully just helped me get there.\"\n\n\"Why did you want to talk to that man?\" Seeing the look on Rollie's face she answered her own question. \"Never mind, I know why.\"\n\n\"Guy's name is Johnny Rogers; he works for a mid level drug dealer named Tommy Jackson. Tommy planned to beat the hell out of Jess and me, but his guys got excited and started shooting.\"\n\n\"Why would this Jackson want to hurt you?\" Julie asked.\n\nTully walked to the door and looked into the hall way. \"Security details on the job,\" he said.\n\n\"Security detail? What security detail?\" Julie asked. \"This is serious isn't it?\" \n\n\"It's gonna get real serious for Jackson,\" Tully answered. \n\nJulie saw the look on Tully's face and in his eyes and shivered. I wouldn't want that man on my bad side, she thought. And Rollie is even more driven.\n\nRollie looked at Jessica lying on the bed. \"Tully and I had dealings with Jackson while Jess was in Chicago for a couple of months.\"\n\n\"Dealings?\"\n\nHe sighed and explained. \"A friend of a friend of Major Taylor's, he was my commander when I was still with the St. Louis Police. Anyway, this man's son made some bad choices and got involved in drugs and other things. The friend asked if we could do anything to help his boy. Tully and I checked things out and got the boy into a rehab center.\"",
        "Tully broke in, \"We investigate and watched Jackson; we weren't hampered by legalities so we could do more than the police. Rollie had one of his Confidential Informants, know as CIs, give the intel to the Narcotic Squad and they busted several of Jackson's men.\"\n\n\"They almost got Jackson too, but his lawyer pulled some kind of legal shenanigans and got the charges dropped,\" Rollie added. \"During discovery Jackson's lawyer learned that I,\" he reversed himself at a nudge from Tully, \"I mean we, cost him a lot of money; I guess this is his way of getting even.\" Rollie rolled his wheelchair next to Jessica's bed and took her hand. He stared at her face for a couple minutes.\n\nJulie heard him say in a very low voice, \"He should have let things go. This is going to cost him.\"\n\nIn spite of being across the room, Tully heard his friend. \"Damn right,\" he agreed as he walked to the bed and put his hand on Rollie's shoulder.\n\n\"But won't he hear about this Rogers talking and take off?\" Julie asked.\n\n\"If he runs, he'll just die tired,\" Tully replied.\n\nJulie watched the interplay between the two men. It would be good to be that close to someone, she thought. Shaking herself she said, \"Rollie sit back and let me take care of your wound. Then you can sit with Jessica for a while, but I want you back in your room and resting within the hour. Do you understand?\"\n\nRollie stood so Julie could work on the wound in his side. \"When is Jess going to wake up Julie?\" You said the doctors stopped the drugs, so when will she wake up?\"\n\n\"Sometimes the body sort of tries to hide from a trauma,\" Julie answered. \"But her brain activity is good and her vitals are stable. Could and should be anytime, Rollie. We'll just have to be patient.\" \n\nRollie climbed onto the bed next to Jessica, took her in his arms, and began to talk to her in a low voice. Jessica smiled in her sleep as Rollie talked. The trip to Lutheran Hospital had exhausted Rollie and he fell asleep holding onto Jessica.\n\n\"At least he's resting,\" Julie said and motioned Tully to follow her out of the room. \"What did you think you were doing, taking him out of the hospital?\" Julie asked with a little anger in her voice.\n\n\"I was helping my friend,\" Tully answered. His voice was not apologetic. \"Besides, if I hadn't taken him, he would have gone by himself. At least this way I was there to keep an eye on him.\" Tully looked into Julie's eyes, sighed and said, \"Guess our date's not gonna happen now.\"\n\nJulie shook her head and smiled. \"Do you always make dates and then cancel them Marine?\" Before Tully could answer she stated, \"A man that wouldn't help his friend is a man I wouldn't want. Pick me up at 7.\"\n\nTully returned her smile and looked at Rollie lying with Jessica. \"What about getting Rollie back to his room?\"\n\n\"That's the deepest asleep I've seen him and her vitals are excellent when he's with her. They're good for each other; we'll let them be for a while.\"\n\nRollie was officially discharged the next afternoon, but when he was released he just camped in Jessica's room. Her vital signs continued to be normal but she hadn't awakened yet. Rollie refused to leave her side even to go get something to eat. The on duty guard from William's Security would bring food and drinks to him. Rollie would use the bathroom in Jessica's room to clean up every morning; the nurses brought him clean scrubs to change into the second day of his vigil.\n\nOn his third morning, as Rollie changed into another set of clean scrubs he asked Tully, \"I forgot to ask, how did your date with Julie go?\"\n\nTully grinned and stared at Jessica for several seconds. \"Well...If we had gotten along any better, we'd still be on the date. Hell, the way it was, I barely got her back to her place so she could go to work the next morning.\" He shook his head at his swiftly developing relationship with Julie. \"We've stayed at her place the last couple of nights.\" Tully shook his head and smiled. \"I'm beginning to understand your connection with Jessica.\"\n\nRollie walked to his friend and put his hand Tully's shoulder. \"I'm glad you've found someone.\"\n\n\"Might be too soon to think like that, but I hope there will be more evenings like the last few.\"\n\nSeveral minutes passed as each man thought, Rollie about Jessica, and Tully about Julie. Finally Tully shook himself.\n\n\"I think I'll stop the security detail,\" Tully said to Rollie. \"If you're not going to leave, then between the two of us we can cover Jessica. You can sit with her during the day and I'll watch the hall at night.\"\n\n\"I can't let you do that Tully. You've got Missouri Tactical to run.\"\n\n\"My partners and instructors can handle it for a spell. Besides you can't stop me Rollie.\" Tully stared at Rollie for a few seconds. \"Jessica means as much to me, in my own way, as she does to you. If you're gonna continue this death watch, I'm staying with you.\"\n\n\"DEATH WATCH?\"\n\n\"Yeah Death Watch. Rollie, you're waiting for her to die.\" Tully held up his hand to stop Rollie's response. \"I know all about your former wife, Susan, dying; I know you didn't get a chance to say good bye and how that's torn you up all these years. And I know you're worried you're going to lose Jessica too.\" \n\nTully took a deep breath and continued, \"Sitting here instead of letting the doctors do their job is like a death watch. If you weren't so afraid, we'd be going after the assholes that did this.\"\n\n\"I can't leave her. What if she wakes up and I'm not here? What if something happens to Jess and I'm not here?\"\n\n\"Julie and the docs can handle any problems better than you. You're just making excuses now Rollie.\"\n\nTully put his hand on Rollie's shoulder. \"When I was just a grunt, still wet behind the ears, and would start complaining or making excuses, my First Sergeant set me straight. He'd say, 'Solider, shut up and solider.\" Tully paused and then added, \"That's what I'm saying to you, 'Solider, shut up and solider'.\"\n\nRollie stood and looked at Tully for almost 10 seconds. He sighed, rubbed his hands over his face, wincing at the pull in his side, and sort of shook himself. \n\n\"Smart man,\" Rollie said with a very small grin. \"Leave the security and let's put an end to this.\" He leaned over and kissed Jessica tenderly. Then Tully followed him out of the room; Rollie had his head held high, his shoulders back and he walked with a purpose. Rollie was wearing green scrubs and carrying his personal effects in a small satchel, including his back up .45 thanks to Tully; his clothes had been destroyed by the EMTs and the blood. \"When are the police going to release my gun, do you know?\"\n\n\"Why asked me?\"\n\n\"Because you know everyone and everything Tully. When?\"\n\n\"Frank says it'll be about a week to ten days; he's pushing it through the investigation. Shouldn't be a problem.\"\n\nRollie was quiet for a moment as they walked. \"It's them that's on a death watch,\" Rollie said. \"But they don't know it...yet.\"\n\n\"Where to?\" Tully asked when they got to his truck.\n\n\"Let's go see Calvin.\"\n\n\"You're CI?\"\n\n\"Yeah, Calvin usually knows everything of any importance that's happening on the street. He'll know or be able to find out about this Bert and Sammy that was with Rogers.\"\n\nTully started the truck and they drove toward one of the seedier parts of St. Louis. \"Thought you should know, the DA is getting ready to file charges against Jackson and has issued a warrant for his arrest; but he's gone to ground someplace.\" At Rollie's questioning look Tully added, \"I've got a friend in the DA's department; she gave me a heads up.\n\n\"Do yo know someone in every department?\" \n\n\"Not all, just the important ones. Anyway Rogers has cut a deal to testify against Jackson; he's in a safe house until the trial.\" Tully glanced at Rollie and added, \"I told you so you'd know we don't have much time to find Jackson before the cops do.\"\n\n\"Calvin can get us a lead on Bert and Sammy; when we find them, they'll give us a lead on Jackson.\"\n\n\"You sure they'll talk?\"\n\n\"If they want to live,\" Rollie responded. His eyes were icy and his face was like stone.\n\nThey pulled up in front of a rundown store front on Chouteau Ave. The area had once been a thriving business district but now was a typical inner city slum with boarded over stores and derelict buildings and people. \"This is Calvin's place,\" Rollie said.\n\n\"While you're inside I'll call Frank Wendt and see what I can find out about the Department's investigation,\" Tully told him.\n\nRollie entered the building and walked toward the counter in the back. His CI, Calvin, saw him coming and sighed. \"I thought we were done when you quit being a cop,\" he said.\n\n\"We're never going to be done Calvin. I know too much about your little fencing operation for you to shine me on.\" Rollie leaned against the counter. \"You've heard about my little adventure, I take it?\" Calvin nodded. \"I want Bert and Sammy; I've already got Rogers.\"\n\n\"I don't know anything about them.\" At the look on Rollie's face, Calvin added, \"But I'll find out and call you.\"\n\n\"Do it today Calvin,\" Rollie ordered, turned, and left the building.\n\nWhile Rollie was inside, Tully called Detective Frank Wendt. \"Hey Frank, it's Tully. What's going on with Jackson?\"\n\n\"No hello, how are you or anything huh?\" \n\n\"Sorry if I hurt your little feelings, but Rollie is looking for the guy and I don't have time to be social.\"\n\n\"Okay, I understand,\" Frank said. \"Jackson's gone to ground; we can't find a lead at all.\"\n\n\"Well...Rollie and I can do things the police can't. We'll find him.\"\n\n\"Is there anything I can do to help?\"\n\n\"Dig a hole for Jackson. When Rollie finds him, that's all Jackson will need. Talk to you later.\"\n\n\"As a police officer, I should warn him not to take the law into his own hands,\" Frank said. But as his friend tell him I've got the shovel. Let me know if I can help.\"\n\nRollie slowly walked back to Tully's truck. It was obvious that his wound was bothering him. \"Find out anything from Frank?\"\n\n\"Nope, he said they're at a dead end.\"\n\n\"Let's head to my place,\" Rollie requested. \"I need something to wear besides these scrubs.\"\n\nAn hour later he had just finished changing into his normal jeans and a polo shirt when the phone rang. \"Chambers,\" he answered. Rollie listened for a couple of minutes and said, \"Thanks Calvin. Give me a call if and when you learn something.\" Turning to Tully he said, \"Let's go, there are a couple of other CIs I can talk to.\"\n\n\"Hold on Rollie. You've already got Calvin working on it; you said he was the best there is. You need some rest. You're running on empty my friend. Take a shower, get something more substantial to eat than hospital food, and take a nap. Calvin, or Frank, or one of my people will call if they find out anything. \"\n\nRollie started to object but Tully cut him off. \"If you keep on like this, you won't be able to do anything when the time comes.\"\n\nAfter a few seconds, Rollie gave Tully a rueful grin. \"Like I said, you're a smart man Gunny. Okay, I'll eat, shower and take a nap. But you wake me if anyone calls and don't let me sleep more than two hours.\" He turned to walk down the hall to his bedroom.\n\n\"Leave your cell with me,\" Tully ordered. Rollie grinned and tossed the phone to Tully.\n\nClose to three hours later, Tully gently shook Rollie's shoulder to wake him up. As Rollie sat up, Tully handed him a cup of coffee.\n\n\"Calvin called back; said he hadn't found anything but he'd keep looking,\" Tully told him.\n\n\"And you didn't wake me?\"\n\n\"What for? He didn't know anything and none of my people have learned anything either. Besides you needed the rest.\" As Rollie stood, Tully said, \"Take another shower, I'll wait for you in the living room.\"\n\n\"Yes Mother.\"\n\n\"It's a good thing I'm not Julie; she'd hold you down and wash behind your ears.\" Tully left the room.\n\nHe refilled Rollie's and his own coffee cup when Rollie entered the living room.\n\nRollie's cell rang. \"Chambers.\" After a minute he said, \"Thanks. Keep on it please.\" \n\n\"Calvin?\" Tully asked.\n\n\"Yeah, he's still trying to get a location. But he said Bert and Sammy usually hang out down on the Cherokee Strip. There's a bunch of bars and strip joints there.\n\nThe area known as the Cherokee Strip had at one time been a prosperous shopping area. With people moving out to the suburbs it had fallen on hard times. Now less savory business operated there.\n\n\"So what now?\"\n\n\"It's what, 5 o'clock? We'll go back to the hospital to see Jess, you can see Julie while we're there, and then we'll do a little scouting on our own. How would you like to visit a couple of strip joints?\"\n\n\"Not my first choice of entertainment.\" Tully grinned and added, \"But we're not going for the dancing, now are we?'\n\n********************\n\nFor the next week, the schedule was the same. Rollie, and usually Tully, would go to the hospital in the mornings to see Jessica. They would stay until around noon and head out for a scouting trip. Returning to the hospital about 6PM and stay until visiting hours were over at 9.\n\nJessica was still in a coma, sleeping is what Julie called it, but her vitals and brain activity were good. Rollie spent the time either sitting beside her bed talking or lying next her and holding her. He sometimes drifted off to sleep himself.\n\nRollie and Tully had visited every strip joint and sleazy bar on the Cherokee Strip. They decided to expand their scouting trips to include the more upscale bars along Euclid Ave. These places were a step above the ones on Cherokee but still not top drawer establishments. \n\nOn the morning of the eight day, Jessica woke up. \n\nJulie stopped Rollie as he walked past the nurse's station toward Jessica's room. \"Rollie, hold on a minute please.\" He stopped, smiled at her, and waited.\n\n\"Jessica woke up. Now wait,\" she said as Rollie turned to go see Jessica. \"She woke up but she has amnesia.\" Rollie's face turned white and he grabbed onto the counter. \n\n\"Amnesia? Do you mean she won't know me?\"\n\n\"She doesn't even know who she is. We've explained everything to her; her name, who she is and what she does. I even explained who you are and what you two have together. But right now it's just information we given her.\"\n\nRollie stood staring into space for about a minute while Julie waited for him to respond. \"Are you saying I shouldn't go see her?\"\n\n\"No, I'm saying to go easy. She understands who you are but she doesn't know you; so take it slow and don't get too intense.\"\n\nRollie nodded and slowly followed Julie into Jessica's room, not knowing quite what to expect.\n\nJessica was sitting up in her bed. The hair on the right side of her head had been shaven off. There was bleeding in the brain cavity and the doctors had bored a hole in her skull to relieve that pressure. Other than the missing hair, a small bandage, and some minor bruising she looked fine. Her remaining hair had been combed and she wore a little makeup. She looked up as Julie and Rollie walked in, gave Julie a smile and nodded at Rollie.\n\n\"Jessica, this is Rollie Chambers; the man I told you about,\" Julie said.\n\nJessica smiled and extended her hand to Rollie. \"I understand we're friends....well more than friends from what Julie tells me.\" \n\nRollie took her hand. \"Yeah Jess, we're more than friends.\" \n\n\"I'm sorry, I don't remember.\" Jessica frowned and seemed to withdraw into herself a little.\n\nJulie quickly stepped closer. \"Now don't get yourself worked up. I told you it would just take some time.\"\n\nJessica took a deep breath. \"You called me Jess,\" she said to Rollie.\n\n\"That's what I've always called you. Is that okay?\"\n\n\"Yes, they tell me my name is Jessica and that's what everybody has been calling me, but from you Jess just seems right. Here sit with me for a while and let's get to know each other again.\"\n\nJulie watched for a few minutes and then left them alone. Maybe their talking will help her, Julie thought. It can't hurt I guess.\n\nTwo hours later Rollie came back to the nurse's station. \"They're giving her some therapy and a sponge bath. I'll be back later this afternoon.\"\n\n\"Good. I thought you might freak out,\" Julie said. \"But you handled it fine.\" She gave Rollie a quick hug. \"I think you're good for Jessica.\"\n\nRollie visited with Jessica from 6 until 9PM. He spent most of the evening describing how they met when Rollie's wife died, how they worked together, and finally how they became close. Rollie kissed her on the cheek when he left.\n\n\"Meet me at Stilettos,\" Rollie told Tully on the phone. \"It's that so called restaurant on Euclid and Page. I hear the boys we're looking for sometimes meet there.\"\n\n********************\n\nTwo more days of Rollie spending six to eight hours a day with Jessica resulted in her regaining part of her memory. She recovered her memory except for the last four years of her life. Jessica still didn't remember Rollie or their life together, but she was very comfortable with his visits.\n\nThe scouting didn't have as good of a result. Neither Rollie or Tully, or any of their people, or the police had been able to get a line on Jackson's whereabouts. The two friends were sitting in the hospital cafeteria over coffee discussing where to look next, when Rollie's phone beeped. He answered and talked for a couple of minutes and hung up.\n\nRollie looked like a big cat that had just spotted his prey. \"Calvin gave me a lead on Bert and Sammy,\" Rollie informed Tully. He finished his coffee and stood. \"C'mon, we'll take my truck; the Corvette stands out too much.\"\n\n\"I'll drive,\" Tully countered. \"You're still a little tender. Where are they?\"\n\n\"The Holiday Inn at Interstate 64 and Kingshighway. Room 120.\"\n\n\"Boots and saddles,\" Tully said. \"Let's roll.\"\n\nThe Holiday Inn was one of the older type motels. Instead of going into the building to enter the rooms, their doors all faced the parking lot. Room 120 was at the end of the first level.\n\nTully parked in front of the room, walked to the door, and listened. He also peeked through the window. Returning to the truck he said, \"I can hear the TV. They didn't close the curtains all the way and I saw both of them in the room. One is lying on the bed and the other one is sitting at a table on the far side of the room. How do you want to do this?\"\n\n\"I think the motel management would be upset and call the cops if we busted down the door,\" Rollie answered. \"Why don't you go knock on the door, tell them you're the manager, and that you've got a message for them? I'll be on one side of the door and when they open it, we'll push our way in.\"\n\nRollie situated himself on one side of the door with his .45 drawn. Tully put his finger over the peephole then knocked and drew his weapon. \n\n\"This is the manager; a guy left a message for you at the front desk.\"\n\nRollie and Tully heard one of the men say, \"What the hell?\" just before the door started to open. Rollie stepped in front Tully and pushed the door completely open; knocking the man back into the room. He pointed his pistol at the two men in the room. Tully followed and closed the door.\n\n\"Hello Burt and Sammy. Remember me?\" Rollie asked.\n\n\"Y..y..you're the guy in the Corvette,\" one of the men stammered. \n\n\"That's right. Johnny didn't get the job done. I'm here to even the score.\"\n\n\"Wait. No one was supposed to get shot. Johnny went ballistic when you started around the car. We didn't do nothing.\"\n\n\"And you are?\" Rollie asked.\n\n\"I'm Bert, that's Sammy,\" the second man said. \"He's right; Johnny's the one that did the shooting.\"\n\n\"And you two were just suppose to beat up a woman, is that it?\" Rollie pointed his pistol at Bert's head. \"Where's Jackson?\"\n\n\"If we tell you, he'll kill us,\" Bert replied.\n\n\"If you don't, what chance do you think you have of getting out of this room alive?\" Rollie asked, cocking the hammer on his weapon.\n\n\"Enough of this crap,\" Tully said in an angry voice. \"Let's just cap them and get it over with.\"",
        "Rollie had always thought that the saying about someone's face going white was just that; a saying. He watched, fascinated, as Burt and Sammy's faces turned the color of bed sheets.\n\n\"I don't think the big guy likes you too much. My lady is like a daughter to him and he's really upset that you put her in the hospital,\" Rollie offered. \"I suggest you tell us where Jackson is hiding.\"\n\nBert and Sammy looked at each other, not sure what to do. Tully growled and stepped further into the room, bringing his weapon up.\n\n\"He's in a warehouse on Laclede's Landing,\" the one called Sammy quickly said. \"It's the old Switzer's Licorice plant. Jackson bought the place years ago and has an apartment on the top floor.\"\n\n\"How many men does he have with him?\" Rollie asked.\n\n\"He usually runs with three others that he trusts. I don't think he wants too many knowing about the warehouse.\"\n\n\"How do you know about the place then?\"\n\n\"I was one of his, what'd you call it, oh yeah. I was one of his inner circle until Johnny went hyper on you.\" Bert shook his head remembering Jackson's words. \"He said when I learned to keep my head he'd start trusting me again.\"\"The police would know about that place,\" Tully argued.\n\n\"The building's in his cousin's name so he can't be traced to it. That's where he always goes if things get too hot in town,\" Bert added.\n\n\"Get on the bed face down, both of you,\" Rollie ordered. To Tully, he said, \"Get something to tie up these guys.\"\n\nTully holstered his pistol and went into the bathroom. Bert and Sammy climbed onto the bed and laid face down as ordered. Both men were sure it was their time to die.\n\nUsing his knife, Tully cut strips from the bath towels and tied the two men. First he tied their hands behind them, then he tied their feet, and turning them over onto their backs he tied their hands to the headboard. \"Kinda kinky, but it works for me,\" Tully said inspecting his work.\n\nRollie picked up a wash cloth, wrapped it around the barrel of his weapon and walked over to the bed. He stuck his gun in Bert's face. \"Open wide Bert, we wouldn't want to hurt those pretty teeth.\"\n\n\"I think Bert's had an accident,\" Tully said as a wet stain appeared on the front of the man's pants.\n\nBert closed his eyes and opened his mouth. Rollie took the wash cloth and stuck it into gaping hole; then repeated the operation with Sammy.\n\n\"My God, that stinks,\" Tully complained. \"I think old Bert did more than wet himself.\" Turning back to Rollie he asked, \"What now?\"\n\n\"Call Frank and tell him where these guys are. But let's wait until we get to Laclede's Landing.\"\n\n\"The police can't come into the room without a search warrant or probable cause,\" Tully protested.\n\n\"They can if the door is wide open and two upstanding citizens are being held against their will,\" Rollie said. \"We'll leave the door open so Frank and the boys can breeze right in. While their dealing with these two, I'll deal with Jackson.\"\n\n\"We'll deal with Jackson,\" Tully corrected. \"I want a piece of him too.\" \n\nAt a stop light Tully used his cell to speed dial Julie while he was driving; Rollie listened to one side of the conversation. \"Hi Babe, I'll have to beg off on our date tonight....Yeah I know, it's short notice but Rollie and I found out where Jackson is hiding. We're going to pay him a visit...No you're right; we won't call the cops first....Okay I'll tell him. Love ya, call you later.\"\n\nHe turned to Rollie and passed on Julie's message. \"She said that we should call the cops and said to tell you if you let me get hurt she's gonna have your hide.\" Tully smiled and added, \"She also said for you to be careful because Jessica needs you.\" \n\nThe Switzer's Licorice plant had been the mainstay for the company for many years; it had employed over 200 people at one time. The warehouse and plant were built close to the river and the railroad line. The plants materials and supplies for production were brought in by barge and railcar. The business had been bought out by Hersey in the late 1980s and shortly afterward the plant was closed down. \n\nNow the warehouse had been abandoned for close to 20 years. The three story brick building looked like a sad old man that had seen better days and gone to seed. It was a mere shell of its former grandeur. \n\n\"By the way, and this is a hell of a time to bring this up, but what do you plan to do with Jackson?\" Tully asked as he pulled to the curb two blocks from the warehouse. He looked at Rollie and said, \"I'm with you whatever you decide but we need to be sure what our objective is. Your answer will determine what we're gonna do.\"\n\n\"Jackson is going down Tully,\" Rollie responded. \"With your help or without it, Jackson's going down.\"\n\nTully could see the anger on Rollie's face and heard the rage in his voice. \"Let's do this; maybe I can keep my date with Julie later,\" Tully said and pulled his truck away from the curb.\n\nSwitzer's old warehouse was boarded up and dark; except for one corner on the top floor. Lights shown through open windows and music could be heard coming from the interior. Maybe not abandon after all, Rollie thought as Tully parked his truck in the alleyway behind the building. As they got out of the truck, Tully reached behind the seats, pulled out a fanny pack, and put it on.\n\nRollie raised an eyebrow in question and Tully said, \"It's sort of like Batman's Utility Belt. I carry a few things that might help on a mission like this.\"\n\n\"Okay Batman, I guess that means I'm Robin,\" Rollie grinned. \n\nThere were two cars parked at the loading dock; a Cadillac Escalade and a Mercedes sedan. \"Business must be good for Jackson,\" Tully said in a low voice as they walked toward the large sliding doors fronting the dock. \n\n\"Not for long,\" Rollie said. Staring at the big doors, he saw a smaller one to the side for people to use. Pointing toward it Rollie offered, \"There's bound to be at least one guard behind that door.\"\n\nTully held up a finger for Rollie to wait a minute. He gathered some trash paper that had blown onto the dock and piled it at the bottom of the door. He used a cigar lighter to start a fire and then threw some old rags into the flame. Smoke billowed up and crept under the door. Rollie stood to the side so that the door would conceal him as it opened; Tully stood to his side and slightly behind him.\n\nThe door opened and pushed the pile of burning paper with it. A man stuck his head around the door to see what was causing the smoke. His eyes opened wide just before Rollie hit him in the forehead with the butt of his pistol; the hood went down without a sound. Tully quickly grabbed the man under his arms, drug him back into the building, and relieved him of his gun. He used two plastic cable ties from his waist pack to fasten the thug's hands and feet. Then Tully pulled a roll of duct tape and taped the man's mouth shut. He put the tape completely around the head.\n\n\"Duct tape?\" Rollie whispered.\n\n\"Never leave home without it,\" Tully replied.\n\n\"With that guy's beard and moustache, it's really going to hurt when the tape is pulled off,\" Rollie said smiling. \n\n\"I know.\" Tully said with satisfaction.\n\n\"Tully I never knew you were such a sadistic son of a gun.\"\n\n\"You say that like it was a bad thing.\"\n\nRollie had to keep himself from laughing out loud. \"No, just an observation.\" He pointed toward a staircase and led the way.\n\n\"It'd be too easy if the elevators work,\" Tully complained as they quietly climbed to the second floor with guns drawn. It was there that they found the second of Jackson's men.\n\nThis one was staring up toward the top floor, listening to the music. His face showed his displeasure at what sounded like at least three women laughing. \"Why do I have to miss the good times and the party?\" He said in an angry voice.\n\n\"Cause you're too stupid to have a good time,\" Rollie said, putting the muzzle of his .45 against the back of the man's head. \"No don't,\" he ordered as the man started to reach for his gun; he stopped and lowered his hands. \"Do what I say and you might just be alive when I leave,\" Rollie said.\n\nTully frisked the subject and found two pistols. He dropped the clip from the 9MM and ejected the shell in the chamber; the revolver's cylinder was swung open and emptied. Tully threw the clip and shells in one direction across the huge warehouse floor and stowed the guns in a box under the stairs.\n\n\"On your knees, cross your ankles, and put your hands behind you,\" Rollie ordered.\n\nUsing the duct tape and cable ties, Tully neutralized this guard. \"For a supposed drug king pin, Jackson sure doesn't hire very good people,\" Tully said in a low voice. He motioned toward the stairs. Slowly and quietly Tully followed Rollie up toward the top level of the building; the level where the party was going on, the level where Jackson waited.\n\nAs they got up to floor level, Rollie and Tully lay almost prone with just their heads showing about the steps. In the far side of the very large room a sort of apartment had been built. There was a sleeping area, a galley type kitchen, and a living room. It was in this living room that Jackson and his remaining guard were drinking and laughing with three young women.\n\nJackson was around Rollie's age. He was thin, tall, and his hair was full and slicked back. His face was sort of pinched in and his eyes were small, dark, and looked like a weasels. Looking at him, no one would understand how he ruled a drug operation in a big city. Rollie knew Jackson ruled because he was ruthless; he didn't hesitate to use any and all means to get his way. The guy with him was a disappointment; he was just an average wanna be hood.\n\nOne of the girls was standing on top of a coffee table. She was dancing to the loud music and slowly doing a strip; the other two women were dancing next to the table, also taking off their clothes. Both men were sitting on a sofa in front of the table and their attention was centered on the women; especially the girl on the table. By now she had her blouse unbuttoned and started to unfasten her short mini skirt.\n\nRollie nodded to the left. Tully crouched and went in that direction while Rollie went to the right. They were able to get very close to the group before one of the girls saw them. She put her hands up to her face and said something. The music was so loud that Rollie couldn't hear it. He reached over and turned off the CD player.\n\n\"Party's over Jackson,\" Rollie said, his voice quivering with anger. He had his weapon pointed at Jackson's head.\n\n\"Bruce?\" Jackson said to his partner.\n\n\"I don't think he's gonna be any help,\" Tully said.\n\nJackson had had stood and turned to face Rollie. Now he looked over his shoulder and saw Bruce face down on the floor with Tully's foot on his neck.\n\n\"You ladies get dressed and get out of here,\" Rollie ordered.\n\n\"We got no way home,\" the girl on the table complained as she buttoned up her blouse. \"They brought us here.\"\n\n\"Why don't you give them the keys to the Mercedes Jackson?\" Tully suggested. Jackson shook his head and started to object.\n\n\"Do it,\" Rollie told him. \"You're not going to need it anymore.\"\n\nJackson handed the keys to the girl. \"Down on your knees,\" Rollie ordered. To the women he said, \"Y'all get gone. You don't want to be here for what's going down.\"\n\nTully trussed up Bruce's hands and feet and then did Jackson's hands as he knelt in front of Rollie. Rollie stepped closer to the drug pin and put the barrel of his .45 against Jackson's forehead. Tully looked at his friend's face. Rollie's eyes were wild and had a faraway look in them. His body was tense and almost shaking in anger, but the hand holding the pistol was steady.\n\n\"Okay, you got me,\" Jackson said. \"Call the cops, but I'll be out on bail before tomorrow morning. Then I'll come looking for you.\"\n\n\"I'm not going to arrest you Jackson,\" Rollie answered. \"I'll deal with you myself.\" Rollie not so lightly tapped his weapon on top of Jackson's head. \"You came looking for me once before and it didn't work out too well for you.\"\n\n\"Who are you?\" Jackson asked with a sneer.\n\n\"I'm Rollie Chambers and I'm your worst nightmare.\"\n\nJackson's face got pale and his eyes opened wide. He realized that his chances of seeing a jail or courtroom were next to nonexistent. Jackson had heard about this man with a vendetta against him for harming his woman.\n\n\"You can't just shoot me,\" Jackson wailed. \"That'd be murder.\"\n\n\"Did you worry about that when you sent your goons after me and my woman?\"\n\nJackson turned his head toward Tully. \"You can't let him kill me.\"\n\nTully shrugged his shoulders. \"Not my decision.\" \n\nRollie put the barrel of his gun back against Jackson's head. \"Say good bye Jackson.\"\n\nI've never seen him this worked up, Tully thought. Even when we tracked down the Campus rapist or went after Vito for threatening his friends, he wasn't this angry. Tully sighed and continued his thought, Jackson's chances of getting out of here alive are slim and none; and slim just left town. He's a dead man and just doesn't know it yet.\n\n\"Rollie,\" Tully said. He had to loudly repeat it to get his friends attention. \"Rollie!\" \n\nRollie turned toward Tully.\n\n\"I'm with you, whatever you want to do, I'm with you. This piece of crap doesn't deserve to live.\" Tully paused for a three or four seconds. \"But ask yourself what Jessica will think about you killing him in cold blood. She'll soon get her memory back and this will be the first new memory she has of you. Is that what you want?\"\n\nRollie listened to Tully, his eyes lost some of the wildness but they were still cold and hard. He turned back to Jackson. \"He's got to pay for hurting Jess,\" Rollie said in a quiet deadly voice. He pulled the hammer back on his pistol causing Jackson to beg, \"Please don't, please don't.\n\n*********************\n\nRollie walked into Jessica's hospital room at 9 AM. She was leaning against the raised bed, looking at a magazine. She looked up as he came in and smiled. Rollie crossed to her bed, took her hand and leaned over kissing her cheek. He stepped back and smiled at her.\n\n\"They're going to let me out of here in a couple of days,\" Jessica said. \"I'll have some therapy for a while but I can go home.\"\n\n\"That's good news,\" Rollie answered. He wasn't sure if she would be coming home to him.\n\n\"Will you pick me up in the Corvette? With the T-Tops off please.\"\n\n\"Sure, I'll drive the....wait. You remember the Corvette?\"\n\nJessica's smile lit up the room. \"Yes Rollie, I remember everything. Our life together and how happy we are; I remember it all. As the memories came back it was almost like falling in love with you all over again.\"\n\nRollie didn't know whether to laugh or to cry. He hugged his Jess instead.\n\nAfter a couple of minutes, she pulled back a little. \"Did you kill him Rollie? Did you kill Jackson?\" Rollie looked at her, puzzled. \"When my memory came back, I asked Julie where you were. She told me about you and Tully hunting for Jackson.\" She paused and then asked again, \"Did you kill him Rollie?\"\n\nRollie looked into Jessica's eyes. \"No.\" He told her what had happened and held up his thumb and forefinger with very little space between them. \"I came this close to dropping the hammer on him, but no Jess, I didn't kill him. The police arrested him.\"\n\n\"I'm glad. It would have haunted you forever if you'd executed him. I'm glad,\" she repeated. Jessica grabbed her man and pulled him closer.\n\nThat's how Tully and Julie found them several minutes later.\n\n********************\n\n\"Seems Jackson was wrong,\" Tully said.\n\n\"About what?\" Rollie asked.\n\nIt had been two weeks since Jackson's arrest at the Switzer warehouse. Tully and Julie were at Rollie's and Jessica's for a cook out. It was the first time they'd entertained since Jessica was released from the hospital. Rollie checked the baby back ribs cooking on the grill, grabbed another beer for Tully and himself and sat back down next to his friend.\n\n\"Remember Jackson said he'd be out on bail by the next morning after he was arrested.\"\n\n\"Yeah?\" Rollie asked, remembering the night at the warehouse and how close he had come to killing Jackson.\n\n\"Well he's still in jail. My friend in the DA's office said the court refused bail; they said that Jackson was a flight risk. Can't really blame the court; if it hadn't been for us, the cops would probably still be looking for him.\" Tully drank some of his beer. \"The DA is bringing a cornucopia of charges against our friend Jackson.\"\n\n\"Cornucopia?\" Rollie said with a grin. \n\n\"Would you prefer I use plethora?\"\n\n\"No, I just didn't think you knew those big words.\" Tully grinned and gave Rollie a one finger salute.\n\nRollie's attention wasn't totally on the conversation with Tully. Every half minute or so, he would nervously glance over Tully's shoulder toward his garage at the back of the yard. Rollie would cock his head, listen for a few seconds and then continue talking.\n\nTully knew what was grabbing Rollie's attention. Just as Tully started to remark on Rollie's preoccupation, they heard the roar of the big V8 engine and side pipes come down the street, slow to make the turn into the alleyway, and then stop in Rollie's garage. Rollie's pride and joy, \"The Beast\", was home safe and sound.\n\nJessica had asked to take Julie for a ride in the classic Corvette. Rollie couldn't very well refuse the request, but he was concerned that something might happen to his \"baby\". Tully wasn't sure if the concern for the \"baby\" was for Jessica or the Corvette.\n\nJulie followed closely by Jessica came toward their men on the patio. Jessica's hair was still short and showed no signs of the ride in open Corvette; Julie's longer hair was windblown and messy. Their faces with flushed with excitement and they were giggling like two high school girls.\n\nLaughing, Julie walked to Tully. \"Time to replace your truck.\"\n\n\"You want us to buy a Vette?\"\n\n\"That's Corvette,\" Rollie interjected.\n\nJulie waved him off and said, \"Not necessarily, but something besides your company truck would be nice to take to dinner and dancing and such.\"\n\nTully hugged her to him and replied, \"We'll go looking for a new ride tomorrow.\"\n\n\"Now that's my good boy,\" Julie responded and pulled his face down to kiss him.\n\nJessica almost skipped over to Rollie and handed him his keys. \"Did you miss me?\" She asked as she put her arms around him.\n\n\"Of course I did,\" Rollie answered putting the keys in his pocket.\n\n\"What did you miss most, me or the Beast?\"\n\nRollie barely hesitated and answered, \"You of course Jess.\"\n\n\"Liar,\" she said with a grin and hugged him tighter.\n\nThe End....For Now"
    ],
    "authorname": "woodmanone",
    "tags": [
        "detective",
        "action/adventure"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-crusader-ch-07"
}