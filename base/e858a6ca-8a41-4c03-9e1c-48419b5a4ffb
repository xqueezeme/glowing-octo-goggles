{
    "title": "The Gift",
    "pages": [
        "You did a full body stretch, snow-angeling your legs back and forth into your soft, fluffy duvet. Without opening your eyes, you could tell it had snowed overnight by how bright the room felt. White Christmas....check! You wait for it. This was usually the moment where sadness hit as the reality that you were alone for yet another Christmas settled over you.\n\n\"Wake up, sleepyhead!\" A sing-song, female voice rang out.\n\nYou bolt upright in bed, eyes shooting open to find a woman kneeling at the bottom of your bed...but not just ANY woman...this was the women of your dreams! Brunette, feminine curves and a strap-on pointed right the fuck at you!\n\nYou slap yourself in the face, certain you are dreaming.\n\nShe cocks her head, looking at you like you've lost your marbles. \"If you like it like that...all you had to do was ask,\" she replies, eying your bare chest with interest.\n\nTrying a different approach, you rub your eyes vigorously before sneaking another peak. Still there. \"Who the fuck are you? Did Sarah put you up to this?\"\n\nCrossing her arms over her ample tits, she arches an eyebrow at you. \"I highly doubt any of your ex-girlfriends care enough about to you arrange this,\" she motions to her body incredulously.\n\n\"Hold up...how did you know she was an Ex??\"\n\nShe shrugs her shoulders as she casts a bored look at you. \"Best guess.\"\n\nOuch. She had you there. \"Lemme circle back to my original question...who are you?\"\n\n\"Duh...I'm an angel.\"\n\nDumfounded you wait for her to explain her crazy self.\n\n\"There's a reason you're alone every Christmas, dumbass. You've got 24 hours to figure it out...with my help obviously.\"\n\nRight. Duh. \"Prove you're an angel,\" You mimic her pose, suddenly feeling very naked.\n\nBlowing out an exasperated breath she says, \"You have a drawer full of woman's underwear. You wear them under your clothes...in fact you have some on right now. Red lacy ones. Every single one of your girlfriends has broken up with you because and I quote, 'something was missing in your relationship'. You watch Love Actually every year because you relate to Mark being the only one without love at Christmas. And you have an unnatural addiction to spray cheese.\" She says the last part with a super judgey look on her face and right away you dislike her. Mostly.\n\nThe logical part of your mind knew that kind of information was easily obtained by talking to any of your exes but literally NOONE knew you were mildly obsessed with pegging. The fact that she was wearing a strapon had you suspending reality and actually considering going along for the ride. \"So how does this work exactly? If you help me figure my shit out and not be alone every Christmas do you like get your wings or something?\"\n\nShe wrinkles up her nose at you. \"Big fan of the movies, are you? Think less Hollywood, darling. Basically, I spend 24 hours with you...in that time, you'll have three tests to pass. When they are complete, poof...you'll have your answer.\"\n\nThis was some trippy shit. You shrug your shoulders because, hey, what else did you have to do for Christmas. \"I'm going to need coffee to be able to deal with...this,\" you say, motioning to her baffling appearance, and climbing out from the warmth of your duvet.\n\nYou walk bare-footed across the floor, throwing on a cardigan over your red lace undies, thankful for the in-floor heating you had installed. Tossing a look over your shoulder, you see her trailing behind you, eyes locked on your ass peaking out under your sweater. Pervy angel.\n\nAt the counter, you set about getting the coffee brewing as she hops up on the counter unceremoniously beside you.\n\n\"I can tell already you're too uptight.\"\n\n\"I can already tell you're bossy AF.\"\n\nShe snort-laughs and it's pretty damn cute. You try and be annoyed but truth be told, you are pretty stoked to not be alone on Christmas. Leaning your arm on the counter and eying the strapon that seems to be pointed in your direction, you clear your throat and finally ask, \"What's with the strapon?\"\n\n\"Oh, this little thing?\" she grasps it in her French-manicured grip and gives it a long stroke up and down.\n\n\"Is that like your magic wand or something?\"\n\n\"Dude, I said angel, not fairy...and no, this is one of your tests.\"\n\nYour mouth drops open. \"As in...you think you're going to fuck me with THAT?\"\n\nShe has the audacity to wink at you. Her eyes are stupidly big.\n\n\"How does me taking a toy dick in the ass help me in the girlfriend department exactly? Most women I meet are boring old vanilla.\" You take two mugs from the cupboard and set them on the counter. \"Seems like a useless test to pass in the scheme of things.\"\n\nJumping down, she waltzes over to the fridge and grabs the cream from the top shelf. You can't help but noticed how good her ass looks in those tight, red leather pants. Turning back to you, she catches you staring. \"I noticed you didn't say no there,\" she says smugly.\n\nRolling your eyes, you grab the cream from her and add it to the cups of steaming liquid, motioning to the packets of sweetener and stir sticks nearby. \"I'm not opposed to the idea,\" you reply, trying to play it cool.\n\nTaking a package of sweetener, she flicks it twice and rips it open before dumping it in her cup, reaching for a stir stick. \"I take back the uptight comment then.\" She takes a sip, watching you over the rim of her mug.\n\nOkay...she didn't completely suck. You sip your coffee returning her stare. Weird. You didn't feel the need to fill the silence like you normally did. You move from the kitchen into the living room and notice your Christmas tree is lit and there is a fire burning.\n\nThere's also a present under the tree.\n\nShe curls up on the couch, drawing a furry white blanket over her bare shoulders, looking far too comfortable, like she's done that very same thing hundreds of times before. You shake off that thought and bend down to reach for the present, flipping open the tag on the front.\n\nMerry Christmas Ben.\n\nYou shake it and toss a smile at her. \"Is this from God?\"\n\nYou can tell it takes all her restraint not to eye roll you off the face of the planet. \"Yes, Ben. God wants you to bend over for my lady dick.\"\n\nSmart ass. \"Rad,\" you say, sitting down beside her. \"I kinda figured he had a good thing going on up there.\"\n\nShe nudges your arm with her foot and you just now notice they are bare too. \"Go on...open it,\" she urges you.\n\nPulling your eyes from her red painted toes, you tear into the wrapping paper, uncovering a plain, white box. Inside you find a piece of card stock laying on sheets of gold tissue paper. You lift it up and turn it over. \"It's blank?\"\n\n\"If we succeed, it won't be by tomorrow morning,\" she says, taking another sip of her coffee.\n\nCryptic. You set the box on the table and turn towards her. \"Let me guess...the name of my future wife will be written on it when I wake up?\"\n\nAnother snort laugh. \"You really need to lay off those Hallmark movies, Ben.\"\n\n\"What can I say, I'm an eternal romantic,\" you reply, not really selling it.\n\nShe extends her legs out and they end up in your lap, making your bare thighs tingle. \"Is that what your problem is?\"\n\nYou reach for her feet, responding to her unspoken direction. \"I guess I always thought I'd feel inspired when it came to grand romantic gestures.\" Your thumbs rub under her delicate arches, searching out her pressure points. Fuck, were they soft.\n\n\"Who says they have to be grand? This foot massage is everything,\" she says closing her eyes on a sigh.\n\nYou take the opportunity to study her. She's so responsive, every sweep of your thumbs plays out on her face. Her skin actually glowed in an eerily angelic way. You shake your head to stop that train of thought. She couldn't be, could she?\n\n\"I'm not sure my Exes would agree. It's a nice thought though.\"\n\nHer thick eyelashes lift and she wiggles her Christmas red toes in your hand as they seek the same attention. Your hands automatically run up her toes, smoothing your finger up each one individually, twisting as you pull off them, eliciting a deep groan from her. \"I don't think romance is your issue...you're clearly responsive to nonverbal prompts. You're a giver,\" she says, definitively.\n\nYou shrug your shoulders, digging into the meaty part of her heal. \"That part is easy. It's finding someone who appreciates all the little things.\"\n\n\"Like a man who brings trail mix on a hike and who preps himself before a deep dicking,\" she whispers, a smile cracking on her face.\n\n\"Ahah. Totally underappreciated in those departments.\"\n\nHow in the span of thirty minutes did she go from annoying to really, really...likeable?\n\n\"Don't. Stop.\"\n\nThose two little words light up your groin and spur your fingers into action again.\n\n\"What do you look for in a man...\" you pause, frowning. \"I just realized I don't know what to call you?\"\n\nOne eye slides opens, her face languid and relaxed. \"Angel...duh.\"\n\nRight. Of course. \"Okay Angel...what do you look for in a man?\"\n\nShe closes her eye, sinking in further to the couch. \"Don't be ridiculous, angels don't date.\"\n\n\"Pft.\" With one hand, you reach for her near-empty coffee cup and place it on the table so it doesn't spill onto your expensive rug below. A million more questions are on your tongue but you resist as you resume massaging her feet. You sit in silence, your grip lightening to soft, gentle strokes. What kind of angel falls asleep on her charge...with 24 hours on the clock to make magic happen? And what about the other two tests? Test shmests! She could be a con artist. Or worse, part of a big, elaborate joke being played on you. But by who? And why? None of this made any sense.\n\nJust then your stomach growls. Carefully removing her feet from your lap, you get up and make your way to the kitchen. Removing your cardigan, you pull a white apron out of a cupboard and slide it over your head, securing it in the back, just above your ass. Setting to work as quietly as you can, you pull out the ingredients needed to make breakfast...for two. That puts a smile on your face and you still can't shake the feeling that this is somehow all a dream because it feels kinda...right.\n\nTwenty minutes later, you carry two plates of food into the living room, surprised to find her staring out the window instead of asleep like you left her.\n\n\"Ohhh...excellent,\" she sits up excitedly. \"I'm famished!\"\n\n\"Angelling hard work?\" You tease, setting the plate in her lap.\n\nTucking her hair behind her ear she nods. \"It will be a MIRACLE if I don't murder you first so yes...really hard work!\"\n\nYou laugh, dropping to the couch beside her. Feisty little thing. Such a contrast to the women you normally found yourself attached to. \"Bon Appetite!\"\n\nShe moans around a forkful of French toast and you feel strangely happy...a feeling that's been missing from your life.\n\n\"That's a good look for you,\" she nods in your direction around her second mouthful of food. \"Almost like a hot man servant.\"\n\nYou look down at your apron and naked skin and laugh. \"Almost...all that's missing is a Mistress to serve,\" the words are out of your mouth before you can pull them back.\n\nStabbing a strawberry with her fork she savors it before acknowledging your comment. \"Is that something you'd want, Ben?\"\n\nYou squirm under her stare. This was that part of yourself that never saw the light of day, something to enjoy in the late hours of the night when you were alone with your thoughts.\n\n\"It's okay that you're a submissive,\" she says, surprising you. \"Better to own what you are than live a life that's not authentic.\"\n\nYou choke out a nervous laugh, moving your food around on your plate. \"Can all angels uncover secrets...or just the one's wearing strapons?\"\n\nSetting her plate aside, she lets the blanket fall from her shoulders. \"I see you, Ben,\" her tone, serious now. Taking your barely-touched plate from you she utters words you never thought you'd hear from a woman. \"Remove your apron and kneel for me.\"\n\nHeart racing, you reach behind yourself to untie the apron, lifting it over your head. Were you really going to do this? Be this vulnerable and exposed to someone? To a stranger? Yes, you thought falling to your knees in front of her, when else would this ever be a reality for you?\n\nShe nods her approval, a smile transforming her face to one of adoration. \"For every bite of food I feed you, you're going to gift me with a truth about yourself...one that no one knows.\" She gathers up a bite of French toast with a strawberry on top and holds it out to you.\n\nYou open obediently and close your mouth around the forkful of food. As you chew you ponder your first truth. God, that was like fishing in a muddy pond at the back of your mind. She watches you with eyes that tell you are safe; you can actually let down some of those well-placed walls. You swallow and clear your throat. \"I...my mother-,\" you try but the words get stuck in your throat. \"She caught me with her-...told me I was a pervert...\"\n\nFork loaded up again, she extends it to you. \"Not a pervert, Ben. Just a natural curiosity.\"\n\nShe delivers the food to your open mouth and you find the validation soothing. After you swallow, the second truth comes much easier. \"My own pleasure has always been secondary to that of a woman's. I could spend hours between someone's legs.\"\n\nShe nods, another forkful at the ready. \"Like I said...you're a giver.\"\n\nAnother bite. Another truth. \"I don't want to be in control in the bedroom. Topping is fine...but I'd much rather be fucked or be ordered to fuck if that makes any sense.\"\n\n\"Perfect sense. I've only known you for a few hours but already I can tell you live in a controlled world. From your alphabetized CD collection to your clothes arranged by season...even the way you took my coffee from me to spare your rug. I bet you work in much the same fashion. All that control...it can be tiring.\"\n\nYou nod and stare at her like she has ALL the answers to the universe, accepting another bite. \"I have never had a woman challenge and push me the way I need. Without that, I just can't seem to be emotionally present in a relationship. That's why they all end...that's what's missing.\"\n\n\"Well done, Ben,\" she says holding out the last bite to you. One final bite. One final truth.\n\nTaking a deep breath, you utter the words you've never spoken aloud. \"I think I might be Bi.\"\n\nShe smiles and nods, putting down the plate. \"That's a lot to keep hidden away inside.\"\n\nYou look up at her, sitting back on your heals. \"I just didn't know how to unload all that on...any of them. I did care about them...\"\n\nShe leans forward, swiping at your lower lip where you had a bit of whipped cream. The contact jolts you and you watch frozen as she brings her finger to her mouth to suck. She reached over and swipes the same finger through some whipped cream on your plate and brings it to your mouth. \"Suck.\"\n\nYou gulp audibly and open your mouth, lips latching around the tip of the sweet digit to suck it clean.\n\nDeep blue eyes lock onto yours. \"Deeper, Ben.\"\n\nYou sink down to the second knuckle, licking the underside of her finger like you would a cock. At least, like you would in fantasy. Your angel was quickly unravelling your world and you knew you were in deep. You eye her strapon and flick pleading eyes up to hers. She just smiles and fucks your mouth like she has all the time in the world to whip you into a frenzy.\n\nYou feel your cock swell up, pulling the front of your lace undies tight. Immediately your hands go to cover yourself.\n\n\"Don't you dare hide yourself from me,\" she chastises you and you drop your hands to your side.\n\nShe starts to lean back on the couch and you're forced to crawl closer so you don't break contact. Her leg ends up between yours, pressing into your hardening length as you lean over her, following her finger. A finger that's inches above the strapon you crave. As if to tease you more she closes her eyes and uses her other hand to stroke it like she's pleasuring herself, imagining your mouth wrapped around it instead.\n\nKnowing where she is in her head you pull off and moan, \"I fucking love your cock...I want to choke on it!\" You catch her heated lip bite before sinking down on her finger again.\n\nTwo fingers push into your mouth as she continues to beat her cock with quickening motions. \"Jesus, Ben...your mouth is like a Hoover vacuum. What I wouldn't give to be able to cum down your throat.\"\n\nHelpless to stop yourself you grind into her leg to relieve the ache.\n\nThat seems to turn her on because she withdraws her fingers and grabs you by the hair, aiming her cock at your mouth. \"Deep throat my cock, Ben. Suck it good and I'll let you hump my leg...but don't you dare think about cumming like some wild, untrainable dog.\n\nYou moan, sinking over the tip of the strapon, burying your face in her lap as you go deep. You get a whiff of her cunt and it sets you on fire, spurring you on to get as close to it as you can. You find your rhythm, moving your cock against her leg in time to your sinking mouth, thankful for the precum to make the leather slick.\n\n\"Good boy, Ben,\" she purrs, \"your body is a vehicle for my pleasure and I'm so fucking turned on watching you\"\n\nWithout thinking you slide your hand up to link with hers as you rut and suck, keeping your eyes locked, feeling the electric current singing between your bodies.\n\nGod fucking damn she was a head rush! You knew without a doubt if you got to see her cum you'd never ask for another thing for Christmas again.\n\nChest heaving, she suddenly pulls you off of her dick and pushes you off her lap. \"Clean my pants Ben...and be quick, I have plans for you in the bedroom.\"\n\nYou don't hesitate, leaning in to slide your flat tongue up the cum smear on her pants, over and over. The flavor of your arousal has you groaning. The act of something so submissive hits you in the gut.\n\nYou go to get up but she stops you, her hand on your head gently pushing you back down. \"On your hands and knees, boy. I wanna see how good that lacy ass looks as you lead the way.\" The sexy grin on her face is all kinds of hot and you love that she's got you at every turn, refusing to let you leave that sub space.\n\nYou do as she instructs, feeling slutty as she follows behind you, ogling your ass like it's soon to be hers. You lead her into the bedroom, kneeling by the bed, waiting while you heart pounds wildly in your chest.\n\nWalking around you, she grabs something off your dresser and turns to face you holding out the jar of coconut oil with an evil look on her face. \"Hand me your undies and get on the bed face down, Ben.\"\n\nStanding, you slowly peel off the red lace, stepping out of them and hold them out for her as she stares at your nudity with a pleased look on her face. Your cock stands out from your body proudly and you feel yourself shiver under her perusal. Crawling up on the bed, you lay down on the soft duvet, trapping your cock.\n\nThe mattress shifts beside you as she crawls up over you, straddling your ass and settling her weight over you. Her cock sits in the valley of your ass, heavy and best of all, not a figment of your imagination. She grabs the globes of your ass and parts them so her cock nestles closer to your entrance. And god does it feels glorious to be on the bottom, to feel vulnerable and exposed.\n\n\"Have you dreamt about this, Ben?\" she whispers.\n\nYou turn your head to the side, resting your cheek down. \"I have. I didn't know it would feel like this though.\"\n\nShe lays down over you, nuzzling into your neck, rocking her hips in small torturous movements. \"How does it feel?\"\n\nYou blow out a breath. \"So fucking incredible,\" you arch up into her. \"Like waking up from the perfect dream only to realize it's really happening.\"\n\nShe bites you, tugging on the skin before releasing it to say, \"It's about to get really fucking real baby.\"",
        "\"It can't happen fast enough, \" you moan, wanting to draw the experience out but needing her to devirginize you in the quickest way possible.\n\nKissing your cheek, she pulls back, moving to kneel mid-thigh. \"Well, that will depend on how greedy your ass is.\"\n\nThe sound of the jar of oil being unscrewed is music to your ears.\n\nTaking one of your hands she pulls it back and uses it to hold one cheek open, making you blush into the bed. No one has ever seen you there and you can't believe someone you've only known for a few short hours is about to enter your body in the most intimate way possible.\n\nWould you pass the test?\n\nSlick fingers graze over your hole and you light up, letting a whimper escape from your lips. She begins circling your anus and your nerve endings go hay wire. You feel yourself push out every time she applies a little pressure against your opening.\n\n\"That's it, Ben...work with me. Make that hungry ass pull me in.\"\n\nHer words are dirty and they hit just right. You push and clench in time with her circling and before you know it you've swallowed her finger with your asshole.\n\n\"Ahh god...it's like an inferno in here.\"\n\nShe begins pumping her finger in and out, twisting and scissoring to work you open. That's when the burn happens and you involuntarily clench up.\n\nA riot of emotions and sensations wash over you. Being penetrated is EVERYTHING. Nothing has ever felt so right and so fucking wrong at the same time. Your body wants to expel her and your mind wants her to live there and never leave.\n\n\"It's a weird feeling at first, I know...but I promise it's about to get so damn good you'll be begging for more.\" She pulls out adding more lube and returning with a second finger, repeating the same steps until you are feeling more pressure and more burning.\n\n\"Breathe through it, baby...rock your hips into the bed in time with my fucking.\"\n\nYou do and it helps. Your cock rejoins the party and eventually the burn fades to a throbbing pressure. You feel her fingers bump something inside you and your hips jerk involuntarily.\n\n\"Unghhh!\"\n\n\"Jackpot!\" She laughs softly, nudging it another few times.\n\n\"Oh holy fuck! What are you doing to me?\" You feel your channel quiver and clench with sensations new to you.\n\n\"I'm showing you heaven, \" she teases, adding a third finger to the mix.\n\nIn no time, you are pushing back, seeking more of that delirious pleasure. \"Get in me...please!\"\n\n\"Thank fuck...I don't think I could handle another second without being inside of you.\"\n\nHer genuine desire to top you made you feel like you were the luckiest man in the world. She truly was an angel.\n\nSuddenly your ass is empty and you mourn the fullness.\n\n\"Turn over, Ben.\"\n\nYour heart stops, processing the reality of what was about to happen. There was no holding a wall up to this, not face to face. Bare. Raw. Real. And suddenly you couldn't help but feel like THIS was the true test.\n\nYou turn onto your back and lock eyes with her. This whirlwind of a woman. This Christmas gift. And you spread your legs, pulling them back for her.\n\nShe smiles and it's like the answer to everything your life's been missing, She leans down into your space, crowding you, mouth hovering next to yours. \"You're beautiful like this.\" Kiss. \"You're made for this.\" Kiss. \"Made for me...\"\n\nAnd with that she lines up her cock and pushes into you, stretching you, owning you.\n\nYou cry out, part intense emotion, part pain.\n\nHoling her hips still, she moves her lips around your face. \"I know baby.\" She reclaims your mouth and kisses you through the discomfort until the pressure becomes too much and you have to move. You grasp her hips tugging them into action and they begin moving, bringing with them a whole new sensation of give and take. Each stroke a promise of mounting pleasure.\n\nShe watches the change in you and pulls back to gain more leverage, fucking you deeper and with purpose. Pinning your legs to your chest she fucks you with abandon, her eyes moving between your greedy asshole and your face. The moans and pleas flying out of your mouth are unstoppable as you hang on for the ride, taking what she gives you.\n\nThe way she moves, it's like she's had a cock all her life...and she makes you feel like a desperate little slut beneath her.\n\n\"Ride my cunt, Angel...I need to see you cum!\"\n\nHer eyes flash with burning desire. \"You have a filthy mouth, Ben.\"\n\n\"You don't know the half of it, angel.\" You take every noisy thrust. \"I'll do and say ANYTHING to see an orgasm play out on this gorgeous face.\"\n\nShe moans, grinding her hips in fierce jabs; eyes locked in a communion of symbiotic pleasure.\n\nYour hand comes up to grab her face, thumb resting against her lower lip as her breath comes in soft pants.\n\nShe changes her angle in a cruel onslaught against your p-spot, pleasure ricocheting from your ass into your balls and groin. \"Don't think you're not cumming with me,\" she doubles down and grabs your leaking, half-hard dick, jerking it in tandem with her hips.\n\n\"Oh. Fucking. Shit.\"\n\nIt's too much. It's not enough.\n\n\"Come on, slut. A cunt cums with a dick in it!\"\n\nIt's just perfect.\n\nYour orgasm races up your cock, unstoppable with her at the helm, spraying your chest. You cry out in pleasure, eyes locked on hers, refusing to miss a second. She gives it to you moments later, slamming into your ass and reaching her own peak with her head thrown back and your name on her lips as she shakes apart in a beautiful display of primal pleasure. Her face turns and presses into your hand as her breath seesaws wildly over your skin. She bites your thumb and then kisses it, her hips slowing to a stop.\n\nAnd you swear on your life you saw God the second your angel came.\n\n~~~~\n\nThe day goes by too fast in a blur of intimacy and food and Christmas movies. Somewhere close to midnight you fall asleep with her in your arms, riding a high you never wanted to come down from.\n\nIn the back of your mind, you worried she would be gone when you woke, that this was all some crazy dream that would fade and leave you feeling lost and more hopeless than before.\n\nYou send a silent prayer up to Heaven...just in case.\n\n~~~~\n\nCrouching down by the tree you reach for the box, pushing the lid off and pulling out the cardstock. This time a name was written on the front.\n\nSamantha\n\nYour angel had a name. This was actually happening...this magical connection wasn't gone from your life like you feared it would be when you woke.\n\nReturning to your bedroom with the excitement of a kid on Christmas morning after opening up the best gift in the world. You crawl back into bed trying not to disturb her.\n\nYou don't even last a minute.\n\n\"Tell me something?\" You whisper into the dawn-lit room.\n\nShe turns and nuzzles into your neck, draping her body over yours like she's trying to own as much square footage as possible. \"Shoot.\"\n\n\"What were the other two tests?\"\n\nYou feel her smile against your neck. \"Well Ben, I asked Santa for three things this year. The first was for a man who made me laugh. The second was for a man who could cook. The third was for a man who would bare his soul to me and take everything I had to give.\"\n\nHer answers make your heart soar. You tighten your arms around her.\n\n\"Who the F is Santa?\"\n\n\"Hah! Our mutual friend, Sarah,\" she laughs into your chest.\n\n\"That sneaky fucker!\" Your mind starts putting all the pieces together. \"So, she let you in here?\"\n\n\"Uh huh!\" She rolls so she's laying completely on top of you looking down. \"Gave me all the intel I needed to pull off the angel gig too!\"\n\nYou give her a mock look of horror. \"I feel so violated!\"\n\nShe leans down to brush your nose with hers. \"Be thankful you had an Ex who loves you enough to meddle and matchmake and saw us both for who we are and what we needed.\"\n\nYou capture her lips in a reverent kiss. \"I will be eternally grateful she sent me my very own angel.\"\n\nHer eyes twinkle down at you. \"As will I now that I have a man to bend over for my lady dick.\"\n\nYou bust out laughing and then say, \"How the heck did she figure out I'm even into that?!\"\n\n\"Apparently it was the number of times your phone auto-corrected random words to pegging and you didn't catch it!\"\n\n\"Of fucking course!\"\n\nShe curls back into your side after another long kiss and you both fall quiet, enjoying this new found gift.\n\nA loud growl comes from her stomach breaking the silence and you smile at the timing.\n\nYou press a kiss into her forehead before whispering, \"What can I make you for breakfast, Samantha?\""
    ],
    "authorname": "boyboygirllove",
    "tags": [
        "pegging",
        "domme",
        "submissive",
        "anal",
        "anal sex"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-gift-183"
}