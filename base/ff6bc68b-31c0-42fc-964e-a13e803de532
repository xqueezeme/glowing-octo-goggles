{
    "title": "How to Create The Perfect Mate",
    "pages": [
        "The Difference Between Men, and Women:\n\nThe word SLUT has gotten a real bad rep over the years. But being a slut is really just a state of mind. I knew back when I was just starting out in puberty that I was a head turning hotty, hell, most girls do. It\u2019s just that at that age we have all of these idealistic fantasies about marrying some studdly prince mind reader charming. (An idea that was introduced to us earlier by our parents, relatives, and friends.) The only problem with that concept is it\u2019s like trying to fit a square peg into a round hole. And if neither one can change enough to fit permanently with the other the relationship falls apart. Both the peg, and the hole get all mangled up, and neither will ever fit their proper dimensions again. So now if neither of them can change back then they both have to go hunting for what they hope will fit their mangled being, and they just keep mangling their way through life without ever finding a proper fit. Men want to marry their princess, and women want to marry their prince, but what happens after the wedding ceremony changes everything. Why? Because men want a slut in their marriage bed to fuck, and women want a real manly stud to make a real woman out of them.\n\nUnfortunately, once the hot and sweaty is over with these two people now want somewhat different things. Oh sure they both want to be appreciated, and if they both smoke they\u2019ll enjoy a cigarette together. But after their passions have been slaked what do they have in common? \n\nCertainly not their plumbing. And their plumbing has a great deal of influence over their thoughts, and how they live their individual lives. A woman\u2019s plumbing is set up to make, and carry babies to term. Conceivably, if she can stay healthy, and relatively attractive once a woman reaches puberty she can get knocked up at least once a year until she enters the change of life, and that could be as late as in her late 40\u2019s, and even early 50\u2019s. And even if she has twins every time, she won\u2019t be able to carry 100 babies to term in her lifetime. (Except perhaps for the original Eve.) However a single individual man\u2019s plumbing is set up to make thousands, upon thousands of babies in as many women as will accept his seed. (Whether by natural, or artificial means.) \n\nNow after carrying her babies to term the woman is naturally disposed to care, and nurture her babies until they can leave the nest. This is especially true after all that she has gone through to bring the baby into this word. However a man has no idea, no real comprehension of this process, or what it feels like. And therein lies the real difference between men and women, and how they think. Now I\u2019m not saying that men can\u2019t be curious about the process to the point of becoming a doctor, nurse, or midwife if they so choose, or even become attached to their offspring at the very least imprinting a real love for their own children. But it is only due to the way that they were brought up that determines whether they will continue their relationship with the woman who bore their offspring, or not. And who\u2019s to say that they have to?\n\nBy their very nature babies are born into this world selfish. They think only of their immediate wants, and needs. However as they grow they quickly determine which parent\u2019s plumbing they inherited, and begin to imitate that parent\u2019s behavior. True there are aberrations to this during adolescence, but for the most part the plumbing eventually will win out when it comes to the thought process. Case in point is the saying that: A man thinks with his stiff prick. If that is true then it must also be said that a woman thinks with her cunt.\n\nLet\u2019s take this as a truism for the moment, shall we. A stiff prick requires no foreplay to become the invader, it is unyielding though occasionally it will bend, it is determined, aggressive, and it spits even if stuck up somebody\u2019s ass, or a knothole. A cunt more often than not requires foreplay to be invaded, it is pliable, yielding to aggression, undetermined dimensionally speaking, and is the portal for all humanity. Which of these two sounds saintly to you, and which is built for deviltry, and mayhem? Can you determine just by my two defining sentences why each of the sex\u2019s think the way that they do for the most part? If your answer is no, and you are a woman, then please step to the back of the class where Ms Biology will prepare you for puberty all over again. If your answer is yes, and you are a man, then you can come up here and sit with the teacher.\n\nTab A goes into Slot B is basic fucking 101 at puberty, and still works all through our lives. It is what makes life so tolerable. However like all good things there is a heavy price to pay for just a short time\u2019s worth of fun. Women know this instinctively, but men have to be taught this from birth, and laws are passed to make these responsibilities real for them as well. Men take pride in their ability to earn a decent living from the sweat of their brows, as well as their imagined sexual prowess. So since it would be wrong for the legal system to cut off their dicks, (Though castration isn\u2019t entirely out of the question as yet.), they do the next best thing, and pull money out of their wallets to help support those little responsibilities. And yet there wouldn\u2019t be any problem at all if people would just take, or NOT take other people the way that they are, and stop thinking that they can change them just by putting a wedding band on their left ring finger, or by having a baby with them in, or out of wedlock! Okay, perhaps I digress, but it needed to be said.\n\nRelationships aren\u2019t born they hatch, and grow:\n\nThe difference between falling in lust, and falling in love is that the later is a giving thing, and the former is totally self-serving. Now in all honesty I can\u2019t speak for other women, but for me a man has to really like me, as much as I really like him before I\u2019ll even consider bringing him home for a cup of coffee. And I\u2019m not talking about my, or his looks, or sex appeal here, we all have that to a certain degree regardless of what you, or they think of yourselves. It\u2019s in the plumbing, remember?\n\nTrue, all of us want to be lusted after, but most of us want to be loved, and adored, as well as mutually love, and adore back. However to truly love someone you have to like, and respect the real them first. And you have to invest time to find out if you do like them. But even finding out that you like someone doesn\u2019t mean that you\u2019re going to fall in love with them, does it. Why? Because you can like what somebody really is, even respect them for it, but still not be comfortable with them once you run out of things to say, and do together. However you can still become friends, or lovers with them, and that alone is worth the effort as nobody can have too many friends, and dependable lovers. \n\nIf that sounds slutty of me to you, then so be it. But think, if I were a man you\u2019d be praising my conquests, wouldn\u2019t you. So slutty must really mean when a woman acts like a man concerning sex, meaning she likes it as much as men, right? And why shouldn\u2019t a woman enjoy sex as much as a man? And if she doesn\u2019t enjoy sex as much as the man what does that say about the man who enjoyed having her?\n\nI never met a man who would turn down a blowjob, but I\u2019ve met more than my fair share of men who refuse to eat pussy, mainly mine. And why? I mean I keep the damn thing clean and fresh, shower twice daily, and even douche when I need to. Those who have eaten my pussy love the taste, I\u2019m proud to say. And those who haven\u2019t I refuse to call lover ever again. So what am I talking about here, do I digress once again? No.\n\nLove is a matter of constant giving of one\u2019s self to the one that they love, even to the point of giving them over to someone else that they truly love, if it comes to that. Love is never selfish, or truly jealous, and in a silent room takes only a look to make the moment warm, and comforting for both. True love is a mutual passion that never burns out. Sometimes it may just simmer waiting for the time when the embers can be stoked. Other times it just flares up out of nowhere. But it never totally goes cold.\n\nFalling in lust, on the other hand, can often times be quite beneficial to both parties, as long as they both realize that it is only lust, and is in no way harmful to some other relationship outside of this one. Unfortunately, as I stated earlier, lust is self-serving, and for the most part a selfish kind of passion. And because it is selfish, it can hurt any real loving relationship that is already in progress, as can be testified by the rise in the divorce rate in America.\n\nSo what does it take to build a real loving, mutually respectful relationship? Most people will say right off that it takes honesty, and trust. And I would agree accept that there are too many variables to account for. For a real loving, and mutually respectful relationship to work each of the two involved has to agree to be mutually forgiving, and forgetful of the other\u2019s transgressions as well as be as openly honest, and trusting as they can at all times. We have to become Adam and Eve if you will.\n\nDid Adam, and Eve love each other? How could they know since there was no one else to compare their relationship with to start off, and no other possible mates to choose from either. And later when there were others did they play around, or didn\u2019t they? And if they did play around why didn\u2019t they separate over it? And when Eve deceived Adam into eating the forbidden fruit why didn\u2019t he just ask for another mate? He still had plenty of ribs after all. Why? Because true love isn\u2019t just giving, it\u2019s also forgiving, and forgetful. And that\u2019s how real relationships work. Anything else isn\u2019t really a loving relationship. It\u2019s just two people who get along with each other as long as certain criteria are met by both of them. Nobody on this planet has ever approached perfection save for one, and he was legally murdered because of it.\n\nLife is all about change. And so are relationships. People are constantly changing, and even though they may not notice it in themselves, they do take note of the changes in their significant other as time goes by. As long as they are comfortable with the changes the relationship continues to be fruitful to both parties. And again let me use Adam, and Eve as a comparison. After all they live over 900 years each, and were together from day one as man and wife until one of them died. They had to have had more changes occur in their lifetimes than anyone else can possibly conceive of. And yet they must have each of them been comfortable with the changes in each other to stay together all of that time.\n\nAny wound is only a fleeting pain unless you allow it to fester, and if you do then you can die from a simple wound the same as you can from a bullet to the heart, or brain. It just takes a little longer is all. An indiscretion in a relationship is a simple wound of sorts also, but if not forgiven, and forgotten can fester into the death of any good loving relationship, and is still the reason for most divorces worldwide. Is it all because of those wedding vows, and the rings? Did one person stop cherishing the other, or did they just get horny, and fuck somebody else other than the person that they were married to? Should we be happy with the person that we married to the point of absolute fealty, to the vows that we made, or the contract of marriage that we signed?\n\nWell legally, and morally the answer is yes. However that yes doesn\u2019t take into account certain variables either. And again I\u2019m speaking about change here. For instance; what if the two parties concerned mutually agree to wife swapping, or an open marriage after a while; where other sexual partners are now allowed into their sex lives. Commonly known as the seven year itch after which most married couples would willingly agree that their sex life has taken a drastic turn to the worst due to their mutual knowledge of each others wants, and turn-ons have left a, shall we say, bland taste to their sex life. If both partners can agree, then even this is possible without breaking the comfort barrier that keeps them bound together. As long as it works for both anything is possible in a loving relationship. The problems only evolve when one of the parties doesn\u2019t want a change. And that\u2019s when a relationship is in real peril. Why? Because jealousy can\u2019t live in a truly mutually loving relationship. And a mutually loving relationship always allows for change.\n\nIn closing I\u2019d like to add this: On their 30th wedding anniversary my grandfather, and grandmother proclaimed that their honeymoon was finally over. They could now look forward to a normal sex life like every other married couple enjoys. They were in their mid 50\u2019s, and she had just started the change of life phase. When asked what was their secret, my grandfather pointed at my grandmother, and she pointed to him both at the same time. Not really sure what they meant by that I approached my grandmother later to ask her in private.\n\n\u201cWe just meant that both of us had to work at it every moment we were together, or apart to get it right, dear. No one says that you have to like all of the changes that come about during your marriage, but you do have to be willing to live with them, and comfortably accept them, be giving, and forgiving, and constantly attuned to each other to make a mutually loving relationship work.\u201d\n\nAnd there you have it in a nutshell, the truth about how to create the perfect mate. "
    ],
    "authorname": "Dirty Slut",
    "tags": [
        "loving relationship",
        "relationship people",
        "perfect mate",
        "love giving",
        "relationship work",
        "giving love",
        "love respect",
        "adam eve",
        "change life",
        "enjoy sex"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-create-the-perfect-mate"
}