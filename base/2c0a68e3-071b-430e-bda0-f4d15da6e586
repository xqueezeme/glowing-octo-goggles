{
    "title": "Love Knows No Color Pt. 22",
    "pages": [
        "In this part, Jason and Shavonda spend their vacation in West Virginia with Jason's family, centered around Grandma's birthday party and a trip to see the legendary wild ponies on Mount Rogers.\n\nThe morning after the reunion, I awoke in our tent, snuggled against Shavonda's naked body. I was hard, morning wood with the added stimulation of being nestled in between her ass cheeks. I let my hand roam her still sleeping body, giving her booty a playful squeeze just to feel her press back into me. I continued to let my hands roam, stimulating her sensitive spots as she slowly awakened. \"Hey, baby,\" she mumbled. I kissed the base of her neck as I moved my hand between her legs.\n\nSuddenly, the tent flap was pulled back, letting in the bright sunlit morning. \"Wake up you two!\" Kenny yelled, with Edie right behind him. Shavonda's reaction was swift and instinctive. She quickly rolled over onto her belly, almost breaking my wrist in the process. And leaving my flagpole, which I'd been rubbing against her ass, on full display.\n\n\"Ohhh my gawd,\" Edie said slowly, as Kenny shook in silent laughter. \"Von you told me he big but you never said he pornstar big. How you do it? Don't it hurt?\"\n\nI quickly looked around for my underwear, lying where we'd tossed it last night, and covered myself up. I handed Shavonda her bra and panties, hissing at Kenny, \"I'ma git you real good. You just wait.\" Unable to control himself, he doubled over in laughter.\n\nShavonda, to her credit, was unfazed. She continued to lay there, naked on her stomach, her private parts out of view. Kenny stopped laughing long enough to sputter, \"You do look like the lady in the painting.\" He was referring to the nude African queen painting that hung in our bedroom, since before I'd first met Shavonda. It did look like a lighter skinned version of my own queen.\n\n\"Do you two mind if we have a moment to get ourselves together?\" Shavonda said. \"We'll meet you in the kitchen.\"\n\nAfter they left, we quickly found some appropriate clothing from our duffel bag, and put our boots on. Shavonda wore a pair of blue denim shorts and a white t shirt, I put on black jeans and a railroad themed t shirt we'd bought the week before at the train show. Fully dressed, we walked into the house holding hands. Mom, James, Kenny and Edie were at the kitchen table, drinking coffee. But Shavonda and I didn't need stimulation. We were wide awake after what Kenny had done.\n\n\"I don't know if y'all heard it or not, but something really heavy started up the mountain about a half hour ago.\" Kenny said. \"If we leave now, we'll beat him to the lower horseshoe.\"\n\n\"You have TWO horseshoes?\" James asked. \"My railroad only has one.\" He was referring to the famous Horseshoe Curve outside Altoona, PA.\n\n\"Yes, there are two,\" I explained. \"The lower one is at the bottom of the climb, the second one is about halfway to the top. You'll like that one better. About half of the upper horseshoe is on a bridge about a hundred feet high. We'll show you on the way back.\"\n\nWe all piled in the Jeep, and headed off over the mountain. Arriving at the lower horseshoe a little after 7:30, we parked next to the railroad overpass in the middle of the curve and quickly made the climb up to the tracks. Kenny had his ham radio set for the railroad frequency, and soon it came to life. \n\n\"Engine 9820 to Dispatcher, we're coming by Kimball now. What's the plan?\"\n\n\"Straight through at Norcross. Cut off your helper on the main west of Dolomite. Helper did you copy?\"\n\n\"Roger that,\" the helper engineer replied. \"Cut off west of Dolomite. Are we going into the island?\"\n\n\"Yes, once you've cut away you have permission to reverse direction into the island track. Pull up far enough that I can get another helper in behind you.\"\n\nCool. We had beaten the westbound here, but not by much. There wasn't enough time to walk in to Norcross so we'd have to find a place to get off the tracks. The sound of Dynamic brakes, and wheels squealing around the sharp turns was growing louder, but the train was not yet in sight. Gradually, though, I became aware of a far more ominous growl off to the west. We had an eastbound train coming, and he wasn't far off. Our group had made it to the gooseneck S curve just below the horseshoe, so I led them up the hillside above the tracks to safely await the two trains.\n\nI had my camera out, and as I turned around I was amazed at the sight I saw. Before us lay the horseshoe curve in all its glory, turning the railroad back on itself in a desperate effort to gain precious elevation. According to the map, the line continued back to the New River, just above Norcross, then clung to the side of the river bluffs for a couple of miles, climbing all the while as the river gently curved to the east. All of this was out of our view. But a short tunnel through the bluff brought the line back into our valley a half mile or so below the horseshoe, clinging desperately to the mountainside as it passed by the horseshoe curve below. This meander had gained the line about two hundred feet in elevation, and the hillside below the upper line was open pasture. Butt Mountain, at over 4000 feet in elevation, towered 2500 feet above the valley where we were. It was an impressive scene, but unfortunately backlit. I decided to take pictures anyway.\n\nThe eastbound train turned out to be the morning zigzag Scott had told us about, grinding past as it quickly lost speed on the upgrade. As it swung around the horseshoe, exhaust billowing into the morning air, the westbound train appeared on the mountainside far above. It was a loaded iron ore train, and with the dynamics not having enough braking power to adequately control the heavy train they'd made a heavy airbrake application as well. Brake shoe smoke wisped off the wheels of the cars as they wound their way high on the mountainside. With the sun backlighting everything, it was a very dramatic scene that would become one of my favorite photos.\n\nAfter the trains had passed through the scene, we stayed put until the ore train squealed around the horseshoe and passed us. It had come into the curve with dynamic brakes screaming, like a giant vacuum cleaner, then as the train hit the flatter grade through the curve, the engineer backed off on the dynamics and coasted by us. Undoubtedly, the train crew was breathing a sigh of relief. A mile from the bottom, they were through the last sharp curve and could let the train roll now. \n\nWe watched as the zigzag coal train clawed its way along the upper track, disappearing around the side of the mountain. Returning to the tracks, we continued our hike as the sound of the eastbound coal train gradually faded into the distance.\n\nIn a short time, we'd reached the end of the river bridge. The signals at Norcross shone in the distance, a two-headed signal on a pole for each track. Both showed a red over red indication, which meant any trains on those tracks had to stop. The bridge itself consisted of a massive through truss over most of the river itself, with the approaches to the main span being relatively short girders with the track laid on top. The whole bridge curved gently off to the right, while the river and other railroad curved gently to the left. After the two lines crossed, they paralleled the river and each other in a sweeping curve to the left. \n\nWe hadn't been there very long when we heard the whine of an approaching train winding its way down the mountain in the distance. Soon, we heard him on the radio. \"WC3 to Dispatcher. Coming by Kimball. What you got planned for us?\"\n\n\"Wc3, you'll cut away your helper west of Dolomite. You might want to take it easy into Norcross, the Norfolk's got the circuit.\"\n\n\"What does that mean, Norfolk's got the circuit?\" Shavonda asked. She was obviously as intrigued by the location as James, Kenny and I were.\n\n\"Remember when we figured out the first train to approach the crossing gets the signal? Evidently, there's one coming on the other railroad,\" Kenny said. Sure enough, in a couple minutes we could hear the other train approaching. It soon came into view, racing along the far bank of the river. We watched as it clattered across the crossing, an endless string of empty coal cars pulled by two diesel locomotives. At the same time, high on the hillside WC3 curved around the end of the bluffs and headed away from us toward the lower horseshoe. With the coal train clear of the crossing, the circuits did their magic, and at the far end of the bridge, the right signal went from double red to Green over red. WC3 now had the right of way. \n\nWe could hear the squeal of the wheels as the train draped itself around the horseshoe curve over a mile away, and headed towards us once more. Four locomotives whined into view, followed by a motley assortment of rusty freight cars that rumbled across the bridge. The signal dropped back to double red as the locomotives passed it, and the train continued on. Soon, as Scott had described the train to us, the string of empty tanker cars that brought up the rear rolled past, looking like a huge snake, followed by the two helper locomotives idling along on the rear. Having safely brought the train over the mountain, they were no longer needed, and their engineer used just enough throttle to keep the slack in the couplings bunched in the train.\n\nWe had just observed the automatic interlocking doing what it was designed to do: safely keep the trains out of each other's way. As quiet once again descended on the peaceful river valley, we waited for a while to see if anything else was nearby. Shavonda had taken her binoculars from our day pack, and as we ate the chicken Mom had made for our breakfast, she scanned the trees looking for the birds whose songs added to the peaceful atmosphere. All too soon, somebody looked at their watch, and, seeing it was now almost ten we reluctantly started the hike back to the Liberty. After all, we didn't want to be late for Grandma's party.\n\nOn the way back, as we'd promised James, we took a short detour to the upper Horseshoe with its towering trestle curving across the narrow valley. But the railroad had fallen silent, and we could wait no more.\n\nIt was almost noon when we made it back to the farmhouse. Since we'd slept in, Neither Shavonda nor I had bathed, so we snuck off to the shower together. We reveled in the feel of our soapy hands on the other's body. But somehow, we managed to keep it clean. The other family members were starting to arrive, and though our reputation as freaks was well known we didn't want to give the family another story to tell. Shavonda had put her hair in a shower cap, and I was amazed how well her braids had survived. \n\nWe quickly dried off and I lotioned her in my old room, where Shaunice had spent the night. I'd grabbed our duffel bag from the tent before we showered, and Shavonda put on a sundress she'd brought, black with multicolored rectangles of blue, red, green and yellow. The vibrant colors looked good against her dark skin. I put on a fresh pair of jeans, and a nice white golf shirt. Together we padded barefoot downstairs to join the family. Neither of us felt the need to wear shoes around the farmhouse.\n\nMom, Althea and Shaunice were out on the back porch talking with Sally, who'd just arrived with her husband Bob. Dad and James were setting up a canopy over the picnic table in the backyard. I went to assist them while my goddess joined the other ladies, sipping Kool-Aid and watching the men struggle with the canopy. Kenny and Edie had disappeared who knows where, but I hoped he was enjoying his queen as much as I enjoyed mine.\n\nWith a third person helping, the canopy was quickly in place, and we sat down in the shade for a minute. As much as I wanted to spend time with Dad, I felt the pull of my queen. Our attraction was such that it hurt to be apart from her. I was that much in love, that even though she was in sight less than a hundred feet away I still felt the need to be with her.\n\nI had gotten up and was heading towards the house when Jamie appeared in the doorway with Grandpap Duncan. I hadn't expected them to show up. They never had before. But I later found out Grandma Duncan's passing had driven home to him how short life was. In his 80s, he knew he didn't have a lot of time left, and had decided to strengthen his relationships with those around him.\n\nThe ladies made room for the new arrivals on the porch, and Shavonda gave Grandpap a big hug before introducing him to Althea and Shaunice. \n\n\"I don't remember seeing you at the wedding,\" Althea said pointedly. I froze. Althea was just being herself, but Shavonda and I had made the effort to patch things up with Grandpap. I didn't want anything to jeopardize that.\n\n\"Mama, it's cool,\" Shavonda said. \"Grandpap's cool with us now.\"\n\n\"Mmmmm,\" was all Althea said.\n\n\"Don't worry about Mama,\" Shavonda told him. \"She was offended that your side of the family didn't come to see the wedding. Honestly, it hurt Jason more than he ever let on. That was the second happiest day of our lives.\"\n\n\"What was the happiest?\" Jamie asked.\n\n\"The day this little Miracle was born,\" Shavonda said, motioning to our daughter sitting on Shaunice's lap. \"Jason held my hand during the delivery, and wouldn't leave the hospital the whole time I was there.\"\n\n\"Speaking of Jason,\" Grandpap said, \"How have you been holding up, son?\"\n\n\"It's been rough but I am coping. When I feel down I remember, I still have my soul mate. You lost yours. I can't imagine what that must be like. And I've been playing a lot on my bass lately. Every day gets a little easier. But the real question is, how are YOU doing?\"\n\n\"Well,\" he replied, \"As you said, it's been rough. I lost the love of my life. We were married 52 years. But Nora and Jamie have stayed with me, and Julia isn't far away. I am not alone, and that helps. I always knew I'd lose her one day, but I never expected it to be like that. They still haven't figured out what she came down with. You are lucky. You have a wonderful woman there. Have you let her help you through this?\"\n\nI shot a glance at Althea, who sat still. Grandpap's compliment of her daughter had not been lost on her. A slight smile had pierced her gruff exterior. \"Von has been wonderful,\" I replied. \"Sometimes I wonder why she puts up with me. Lord knows I haven't been easy to be around this past month.\"\n\nWe commiserated for a little while, but soon the rest of the guests had arrived. Kenny and Edie had returned with Grandma. Evidently, they'd taken her for a little ride in the country. With everybody here, it was time to cook the food on the simmering grill. \n\nLater that evening, while we were setting up the instruments, the phone rang. Marcia Bell had looked up my parents' number in the phone book. Yes, they still had those down here. \"A group of us from the reunion are having a little get together tomorrow, before everybody heads back home. We'd love it if you and Shavonda and Shaunice could come.\"\n\n\"Shaunice is leaving early for Pittsburgh, but Von and I will be there. Also, Kenny MacFarland is here as well. I know he's class of 98, but everybody knew him. I'll see if he wants to bring his fianc\u00e9.\"\n\nMarcia gave me the address of a diner in White Sulphur Springs. I knew the place well. Shavonda and I had eaten there a couple of times. I told Shavonda and Kenny about the get together.\n\n\"Sorry, dude, but I can't make it. I've got to be at work Monday morning,\" Kenny said. Shavonda looked at him and smiled.\n\n\"The boss says you can have Monday off,\" she said. She picked up the phone and called Velma, promising Mom we'd pay the toll charges. I listened to the conversation. \"Velma, Kenny's going to stay here with Jason and me another day. Can you get Ebony to cover for him Monday?\" I could hear the protest from the phone. \"I know that leaves you shorthanded. Ebony will cover for him. If she protests, tell her Kenny will take one of her weekend days and offer her overtime for Monday. Call me back at this number and let me know what she says.\"\n\nA few minutes later, Velma called back. Ebony would take the shift, but she needed somebody to babysit her children until she could get home. Shavonda ended up talking Althea into watching Ebony's kids for a couple of hours, since they were leaving in the morning and would be back in Pittsburgh by then. Althea wasn't happy, but agreed to do it anyway. \n\nAfter we cut Grandma Waite's cake, we picked up the instruments and played music the rest of the evening, with Calvin joining in as a second guitar player. We ended up turning the amps down so we didn't drown him out. \n\nAll too soon it was getting dark, and we saw Grandpap and Jamie out, helping him down the front steps and into Jamie's car. Afterward we built a fire in the pit and roasted marshmallows with the kids. Kenny and Edie were the last to leave, and everybody else was in bed by then. The kids were safely asleep in the house, and Miracle slept in her carrier inside the tent a few feet away, Shavonda and I sat around the fire talking as the evening fleet of trains hit the mountain.\n\n\"You know, Jason, I've always loved listening to the night trains,\" Shavonda admitted. \"I used to love hearing them from my grandparents' house as a kid. Later when I got the house, I'd sit on the porch at night listening to them. But since I've been with you, they're extra special. Every time I see or hear a train I think of you. And here they're extra special, because they dominate the night. This is such a peaceful place, and they're a part of that.\"\n\n\"We have a week here,\" I suggested. \"And we have a tent. Would you be up for a night at KR, where we can be close to them?\"\n\n\"Sounds like fun,\" Shavonda said, \"But what about the kids?\"\n\n\"We take them with us. It'll only be for one night. We'll build a campfire and make mountain pies. They'll love it,\" I said.\n\n\"But what if I want to be alone with you?\" Shavonda asked. \n\n\"We can always wait until they are asleep, then sneak off with a blanket. Trust, there's no way I ain't gonna take care of your needs,\" I promised. \"Besides, you're alone with me now.\"\n\nShavonda wasted no time. She leaned in for a kiss, pushing her tongue deep into my mouth. Her hands roamed my body. Breaking the kiss, she said with pure lust in her eye, \"I want you. I wanted you this morning, before we were interrupted. I wanted you in the shower, but I was a good girl. I been wanting you all day.\"\n\nI kissed her neck. Sliding the straps of her dress, then her bra off her shoulders. Her hands dug into my back as I did so, fisting my short. I reached around her back and with one hand undid her bra clasp. Pulling back, I let Shavonda pull my shirt over my head before pulling down her dress top, peeling the bra cups from her breasts as I did so. Standing up, she grabbed the back of my head, forcing it to her left breast. \"Drink,\" she said. I took a thick dark nipple into my mouth and sucked. Her sweet milk flooded my mouth. I'm going to have to keep her pregnant, I thought as I greedily drank her tit.\n\nShe sat back down, pulling me from my folding chair in the firelight. Undoing my belt buckle, she had my jeans off in no time. Lying there in the wet, dewy grass, with the firelight dancing across our bodies, she took me deep into her warm mouth, saying \"My turn. You get the other tit later.\" Shavonda's thick lips caressed my shaft as her tongue swirled around the head. I was in heaven. \n\nI was on my back, with Shavonda between my legs looking at me as she worked her magic. \"Swing around, let me taste you,\" I begged. Shavonda didn't let up, bobbing her head faster on my rock-hard manhood. I tried to push her shoulders back, but she tightened her grip on my shaft without ever letting up on the sucking. \"Please, Von, I need to taste you!\" I implored. \n\nShavonda raised her head for a second, popping me from her mouth. \"You can eat me later, after we make love. But this nut is mine. Just lay back and enjoy.\" Resuming her oral attack, she took me deep into her throat, swallowing me whole. I groaned in pure pleasure. Not only did this woman know exactly how to pleasure me, she loved doing it. ",
        "I gave in to the pleasure, letting Shavonda's soft, full lips and wicked tongue take me over the edge. Calling her name, I let go, flooding her waiting mouth with my hot seed, watching her swallow as much as she could. With just my head in her mouth, she vigorously pumped my shaft with her hand, milking me before releasing my softening penis with an audible pop. \"Yummy,\" she said with a sticky smile.\n\nI was unable to help myself. Quickly pulling her on top of me, I thrust my tongue deep into her willing mouth, exploring, tasting, doing battle with her own tongue. Our kiss was as passionate as it was deep. I was driven by pure lust for this goddess who gladly swallowed my seed on a regular basis. But eventually, we had to come up for air.\n\n\"That,\" Shavonda said, \"That is why I like giving you head. After you nut, you kiss me like I am a goddess.\"\n\n\"You ARE a goddess,\" I said. \"With you, I feel the need to worship you for taking care of me. Before you, I rarely had anybody swallow, and when I did it was like I'd defiled them. You want to taste me, and it turns me on so that I want to taste myself in you too. It's weird, because I never felt this way with anybody else.\"\n\n\"Why should you be afraid of your own seed?\" Shavonda asked. \"After you eat me, you want to kiss up on me. I don't mind, in fact I love tasting myself on you. Why should you be any different?\" She looked at me, eyes flickering in the firelight. \"I know, you men are funny about tasting yourself. It's like you think it's gay or something. Trust me, it's not. In fact, it really gets me hot to know that once you've shot your load in my body you are still in lust with me. That you don't think I am soiled because you relieved yourself in me. I HATE men like that. You never treated me like I was dirty. I knew that first night, when you kissed me afterward, not afraid of your own nut in my mouth. I knew then you were the one.\"\n\n\"But you had no way of knowing how I'd react, yet you swallowed anyway.\"\n\n\"I can't help it. I've always loved to do that. I always loved to please my man in that way. It feels natural to me. Plus, you don't come too fast in my pussy if I swallow first. Face it, I love giving head as much as you like eating pussy. Especially with you, because you are the man I love more than anybody else. I can't get enough of you.\" Shavonda gently stroked my penis, running her fingernails along the shaft gently. My hands caressed her soft dark skin, in any place convenient, rubbing, squeezing her gently in all the right places. My hand found its way in between her thighs, enticing a purr as I parted her lips and slipped a finger inside. Shavonda was soaked with desire, and I quickly followed with a second and third finger. I gently thrust them in and out, taking care to massage the soft spongy spot within her.\n\nShavonda soon forgot about stroking me as my fingers rubbed her g spot. Her purrs turned to moans, then growls as her hips rocked with my movements, intensifying her pleasure. I bent down to run my tongue over her clit, but she pushed my head back up. \"NO,\" she hissed. \"I said later!\" Chastened, I continued my digital assault on her most private spot. She was close, I could tell. After two years I knew my queen's reactions, and they were turning me on. I rubbed my now erect dick along her legs as I stimulated her.\n\n\"Jason,\" Shavonda growled, \"Put it in me, now! I want to come with you inside me.\" I complied, quickly replacing my fingers with the head of my penis as I rolled on top of her. Shavonda's hips rose off the ground as she took me deep inside her spasming inner walls. Impaling herself on my throbbing pole, she took me all the way in on the first stroke. This was not the time to play around. Shavonda was close, so close. I could feel her tightening around me as she met my thrusts with her own. There was no slowing down for either of us. \n\nShavonda shook beneath me, back arched, as she came. Her pussy squeezed my manhood with almost painful force as she clenched and released around me. I continued to thrust deep as she let out a primal growl. Her fingernails dug into my ass as she rode her orgasm. I knew she drew blood but I didn't care. We could take care of the scratches during our morning shower. \n\nI continued to pound away as her body went slack and her growls turned to whimpers. Her walls caressed me with their aftershocks. Tiring, I slowed, then stopped as I took a brief rest. \"You. Better. Come. Inside. Me.\" Shavonda panted breathlessly. \"Else. You. Won't. Eat. My. Pussy.\" Damn, she was serious about that. I resumed my thrusting as she lay breathless beneath me. Thoroughly relaxed now, her body was mine to do with as I wished. I pulled her legs over my shoulders and thrust deep into her, watching her titties bounce with lust filled eyes. Shavonda stared back at me, eyes glassy, as I pounded my way toward my own release.\n\nShowing her no mercy, I was now working on my own pleasure. Not that her body didn't feel incredibly good, but This was all about me now. Shavonda had protested when I slowed my movements. She asked for it, and I was going to give it to her. I didn't care about anything else in that moment. I only wanted my own satisfaction. I was getting close now, my muscles tightening in preparation for my own release. Operating on instinct, my body had a mind of its own. Everything else was secondary to the impending explosion I was rapidly moving towards. And when it came, I thrust deep inside Shavonda's tight pussy one final time before shooting my seed deep into her womb. Babbling incoherently, I collapsed on top of her, muscled relaxing as I poured everything I had into her waiting tunnel.\n\nWe lay there in the afterglow, Shavonda gently stroking my hair as I softened inside her. Neither of us wanted me to withdraw. We were one, we were meant to be as one. Rolling off her sweat soaked body after I slipped out of her sperm soaked pussy, I lay there on my back as my goddess purred beside me. \"Mmmmm,\" Shavonda said dreamily, \"I hope you put a baby in me with that one.\" I smiled back at her. This was how I always wanted to be with her. Sated and happy, we kissed leisurely for a while, just holding each other. Finally, Shavonda said, \"Boy, you know you can eat the pussy now. That is, if you're still up for it.\" I nodded. Damn right I was gonna eat her. I'd been longing to taste her all night.\n\nShavonda pushed me onto my back, then turned around. Straddling me, she eased forward, then gently lowered her quivering slit towards my waiting mouth. Grabbing her hips, I buried my face in her pussy, licking from her puckered ass to her clit and back again as I felt her shudder in pleasure. I could feel her hand grasp my semi hard penis, and her warm mouth engulfing its head. We were both tasting the swirl tonight. \n\nThe feel of Shavonda's mouth on my manhood made me want her even more, and I left her clit to stick my tongue deep inside her vagina. The results of our lovemaking filled my mouth as I licked her sensitive spots. The stimulation only made her suck faster on my now swollen member, which in turn made me lick her hole even faster. I pumped my tongue into her sopping hole, in the same way I'd earlier used my fingers. And I was finally tasting the juices I'd craved all night. \n\nShavonda's body was tightening again, and she increased her tempo on my throbbing bone as her pleasure rose. The sloppy sucking sounds she was making were turning me on even more, as was the scent of our combined juices, now deep in my nose. She moaned on my shaft, the vibrations stimulating me even more. \"Mmm, mmmm, Mmm,\" she moaned as her head bobbed. My own muscles were tightening from the stimulation, and I knew it wouldn't be long until we both went over the edge. \n\nOur orgasms were intense and simultaneous. Shavonda ground her pussy into my face as she went over the edge. Her scream of pleasure was merely a moan around my dick buried in her throat. By this point, I was thrusting deeply into her mouth. We were purely animalistic at this point, something that had been happening in our lovemaking a lot more frequently. It was like we lost control when we were together. For the third time tonight, I stiffened as I filled her body with my essence. And for the second time that night, Shavonda swallowed every drop. \n\nI continued to lick her through her aftershocks, until she could take no more. She gently rose off my mouth, prying loose the hands that were holding her in place as I orally explored her quivering cavern. \"Boy, you really DO like that pussy,\" she said dreamily as she collapsed in the grass beside me. \"I don't think you've ever eaten me like that before.\"\n\n\"It's what you do to me, boo,\" I replied. Looking around, I continued. \"I hope nobody was looking out the windows. They'd have seen everything.\"\n\n\"Let em look,\" Shavonda sighed. \"It's not like they'd be surprised. We got a reputation as a coupla freaks anyway. Seriously, boo. I've always loved sex. But doing it with you brings out something deep inside me I never felt with anybody else. You told me you never had the desire to taste your seed in another woman before, but now you do it with me all the time. And I need you like I've never needed anybody else. I hope that never changes. We were made for each other, boo.\"\n\nWe gathered our dew soaked clothes from the grass in front of the dying fire, and crawled naked into the tent where we curled up in each other's arms, legs entwined. Shavonda offered me her other tit, which I gladly sucked on. The sweet milk filled my mouth. I understood how soothing a baby must feel. I know suckling my goddess gave me a peaceful feeling. Exhausted, we were soon asleep in the glow of the embers. In the valley below, the rails had fallen silent, leaving only the crickets and an owl to break the silence. Yes, this had been one of the best nights we'd ever spent together.\n\nIN the morning, we grabbed fresh clothing from the duffel bag, and wandered in to the shower. Mom and Althea were already up, busily cooking the traditional farewell breakfast. We padded up to the shower where we quickly washed each other. As I scrubbed Shavonda's back, my manhood nestled in the soapy crack of her ass. Thus stimulated, I soon had an erection. Shavonda was not a good girl this morning, and she bent over to allow me entrance. Neither of us held back, needing release but not wanting to hog the shower. With my sperm still inside her from the night before, her passage was well lubricated and I rode bent over to fondle her soapy titties as we rocked into each other. Biting our lips so as not to make noise, we rode out our orgasms, then stepped from the shower on rubbery legs to dry and lotion each other. Honestly, my body didn't need lotion like hers did. But I indulged her because her touch felt so good. \n\nReturning downstairs sated and hungry, we sat down at the table laden with pancakes, scrambled eggs and bacon. Althea gave us a funny look as we wolfed down our breakfast and came back for seconds. I later found out from Shavonda that she'd had a sleepless night herself. She'd watched us making love from the window, with James behind her. Our passion was catching, and they'd spent much of the night making love themselves. I was glad to learn that, glad that our young love was rubbing off on those around us. If they felt half of what we felt for each other, all was right with the world.\n\nSally had shown up for the breakfast, along with Kenny and Edie. I was glad. I really hadn't had a lot of time to spend with my sister at the party. I asked her about children. \"We really don't want them,\" she said. \"We'll just enjoy yours.\"\n\n\"Well,\" I replied. \"We'll be happy to make as many as you want.\" I grinned when Shavonda sent me a withering glance. \"Seriously, we're trying to make a boy now.\" Althea snorted in her coffee when I said that, giving me another funny look. I smiled sweetly at her. \"Do you have problem?\"\n\n\"No,\" Althea said, obviously embarrassed. I looked at Shavonda, who shrugged.\n\nAll too soon, it was time for them to leave. We helped Althea, James and Shaunice load up their car, then after the usual hugs all around, we watched as they slowly pulled off.\n\nAfter a little while, we left ourselves for White Sulphur Springs, with Edie and Kenny riding in the backseat of the Jeep. When we arrived, I asked the waitress about the class of 99, and was directed to a table in the back room where there were already about a dozen of us seated. \n\nThe diner, as it happened, was owned by Doug Horton, one of our classmates. He'd been one of the people who came by out of curiosity at the reunion. Marcia Bell was there, along with Brodie and Tamika and Allan. As I came in the door, I said, \"I'm sure you all remember Kenny, from class of 98. He is my cousin, and this is Edie, his fianc\u00e9.\"\n\nWe all had a pretty nice time. Shavonda complimented Doug on the liver and onions, which she'd ordered the last time we'd eaten there. She didn't mention that, being pregnant at the time, she'd left the meal in the bushes along 310 near Sweet Springs. That had been back when we didn't know she COULD get pregnant, and I had been worried about her.\n\nSo, this time Shavonda also had liver and onions. I'd noticed lately she'd been ordering that again when we went out to eat, and wondered if I'd succeeded in putting a boy up in her. SO far, she'd shown none of the warning signs of pregnancy: morning sickness, odd cravings, mood swings. We had, however, noticed a change in our sex lives recently. While we still made love, we were also having sessions where what we did was too primal to be called lovemaking, with all the connotations of gentleness and consideration that entailed. No, last night had been a good example. We'd fucked, plain and simple, any gentleness was gone in favor of own gratification. And in feeding our own lust, we'd each kindled animalistic passion in the other. It was intense, exhausting, and memorable.\n\nThe one thing that was a little disturbing, though, was what somebody had posted on Facebook about our little group at the reunion. It turned out Mr. Used Car Salesman had taken offense to us being there. Rather than saying something directly to us, he'd taken the chickenshit route and posted cracks on line. Having no cell phone or internet service at my parents' farm, we'd had no way of knowing. Tamika showed us the post on her phone.\n\n\"Was at the reunion last night. Jason Waite showed up with a black woman on each arm. Evidently, he married one of them. Guess he found someone who doesn't care about his tiny dick. Tamika Pritchard showed up as well, and with all 3 women sitting in a group at a corner table it appears we now have a ghetto in Monroe County. Luckily, they all leave soon.\"\n\nI found myself mildly amused as I read the quote out loud to the group. \"Small dick?\" Shavonda said in horror. She, Edie, Kenny and Marcia all laughed as the others looked on, puzzled. \"Where would he get that idea?\"\n\nDoug replied, \"As I recall, Jason always refused to take a shower after gym class. They assumed he was afraid of his small dick.\"\n\n\"I was embarrassed to show what I had, but that wasn't the reason,\" I said.\n\nMarcia cut in, \"I can personally testify he's anything but tiny. I'm sure his wife will back me up on that.\" I turned red in embarrassment. \n\n\"Aww, look at him. He's so modest,\" Shavonda teased. \"Just like he was yesterday morning when Kenny and Edie walked in on us. Jason, you scarred her for life.\" \n\n\"Lawd, that man huge,\" Edie remarked. \"He downright scary. I guarantee he bigger than any of them.\" Everyone else was laughing. I just wanted to crawl under the table. \n\nTamika leaned over and asked Shavonda, \"Just how big we talking?\" Her eyes widened as Shavonda held up both hands, fingers splayed. \"Don't it hurt?\"\n\n\"I am a little sore from last night,\" Shavonda admitted. \"But when I'm with him nothing else matters. Matter of fact, it's that way even when we hold hands. Jason is my world, and I'm his queen. Nothing else matters to us.\"\n\n\"Ok,\" Doug said. \"I think I understand. Jason you were embarrassed about your size, but not because you were small. But for some reason you were a threat to him and a lot of the other boys in school, especially those on the football team.\"\n\n\"Can we just drop the dick thing?\" I asked, continuing, \"Yeah I was a threat to them. Everybody else seemed to think they were gods because they could throw a ball around. It didn't matter that they usually only won one or two games a year. They had big heads and thought they ruled the school. But they didn't rule me. You finally got a touchdown, yawn. None of that is going to be worth a damn when you get out of school. What was really interesting to me was that once I graduated and moved away, the very things they hated were what people respected about me.\"\n\n\"Yeah,\" Doug replied. \"I hear what you're saying. Things were a lot different when we got out. Not a lot of work in the area. I'm lucky. I went into the Army. There nobody cared what you did in high school, only what you could do now. When I got out, I was able to get a VA loan to buy this place. And it's taken good care of me so far.\"\n\n\"Von is the same way,\" I said. \"She made jewelry as a hobby in high school. She was able to turn that into a business when she got out of college, and now we have two stores and 8 employees and are planning on opening a third. But I can't take credit for any of that. Von did it all herself.\"\n\nThe group turned to look at Shavonda. I reached in my shirt and pulled out the pendant she'd made for me. The one that said S Heart J. I handed it to Doug. \"My goddess made that for me. It's what she does.\" The pendant was passed around our little group. Shavonda also produced her business cards from her purse, and handed them out. \n\n\"Shavonda's Creations.\" Tamika read from the card. \"Handcrafted jewelry, paintings, sculptures, and assorted art. Girl, I'm impressed. Jason, you done well.\"\n\n\"Not as well as I'd hoped,\" I admitted. \"I wanted to be a geologist and civil engineer, but I wound up driving a truck.\"\n\n\"Jason,\" Shavonda scolded. \"I told you before. You already have two years in toward your degree. Quit your job and finish school. We're putting your pay in the bank anyway. Follow your dream. It's not going to hurt us if you do. I can hold things down for a couple years. It's the least I can do.\"\n\n\"Jason,\" Brodie said. \"That woman Is a keeper. If she wanted to pursue her dreams you'd make it happen, right?\"\n\n\"Yes,\" I replied. \n\n\"Then let her make yours come true,\" he said. The others nodded in agreement. \"It's obvious to everybody here how much you two love each other. Let go of your pride and let her help you follow your dream. You're way too smart to waste your life driving an 18-wheeler. Don't make me have to arrest you next time you're in Covington,\" he joked. The others laughed. \n\n\"Arrest me?\" I sputtered. \"For what?\"\n\n\"I'll think of something. Maybe, failure to bow down before your queen and follow her wishes,\" he laughed, \"You know I can do it.\" Shavonda laughed. She was enjoying this way too much.\n\nAll too soon, it was time to go. Before people started to leave, we all exchanged phone numbers and addresses. \"You'll notice the waitress hasn't given you a bill,\" Doug said. \"This one's on me. All I ask is that you tip the waitress well. She's earned it. Oh, and I'd like to make this a yearly thing. Maybe next year we can do a picnic for all of you and your families, catered of course. I'll keep you posted. It was great seeing y'all again.\"\n\nBefore we left, both Shavonda and I posted on our Facebook pages, and tagged our hater so we knew he'd read it. Nothing like having a little fun online.\n\nMy post read: \"Went to my 15-year class reunion Friday night, with my wife Shavonda and her sister Shaunice. While it was great to hang out with old friends, evidently we have at least one hater. Must be rough seeing how everybody else has done pretty well for themselves while your life consists of standing in a car lot saying, 'Buy a used Yugo from me. Back in high school I used to be somebody.'\"",
        "Shavonda's was even more blunt: \"My sister and I went to Jason's class reunion. It was fun, and we met some of Jason's friends. One guy, though, sat in the corner staring at us like he was jealous or something. Come to find out he posted about our table being the ghetto and made cracks about Jason's endowment. Two things: first, boo, you couldn't handle all this dark meat. Second, you might want to get out the micrometer and measure yourself before you make cracks about another man's size. Especially if you never saw what he's working with. Guarantee my husband is twice the man you are, plus maybe another inch or two.\" \n\nWe spent the rest of the afternoon with Kenny and Edie, poking around the area looking for the sites of the iron mines that once dominated the local economy. With most of them long gone, there wasn't much left to see, but it was a nice drive on back roads in the mountain valleys anyway. Eventually, we ended up in Clifton Forge, where Kenny used to live. The town sat in the shadow of Rich Patch Mountain, a long ridge whose name evoked the mining that once occurred on its slopes. On the way back, we stopped at Covington for our traditional ice cream, then high tailed it the 30 miles back to the farmhouse before it melted. \n\nBrittany and Ethan nearly bowled me over as I entered the front door. Even Miracle was excited, chattering \"Dada!\" and \"Mama!\" from her playpen as she saw us. Yes, she was talking now, only a couple of words but we'd teach her many more as soon as she could pick them up. I picked her up, much to her delight, as Shavonda and Edie took the ice cream to the kitchen and made everybody a bowl. \n\nSitting on the back porch, eating ice cream, with Mom. Dad, Grandma, Kenny, Edie, Shavonda and the kids, with my baby girl on my lap, and drinking Grape Kool-Aid with double the sugar, I smiled. Life doesn't get better than this. \n\nThat evening, with space available now that the other guests were gone, we moved our duffel bag back into my old bedroom. We'd sleep indoors for the rest of our stay here, except for one more night. Brittany and Ethan had been begging me to take them camping, and it occurred to me that the only place Shavonda had ever camped out with me was here next to the fire pit. So I agreed to take them out one night in the coming week. \"I know just the place,\" Shavonda said, \"KR.\" She was referring to the spot where the railroad crested the mountain, emerging from a mile-long tunnel before beginning its long, tortuous descent to the New River. Our spot. The place where we'd made love, where I'd first felt Miracle kick.\n\n\"KR?\" I said. \"Are you sure? There are campgrounds not far away. You won't get much sleep there. The trains will keep us up half the night.\"\n\n\"Daddy I want to see the trains,\" Ethan wailed. \n\n\"Me too! Me too!\" Brittany said, not to be outdone. \n\n\"We would have privacy that we wouldn't in a campground,\" Shavonda purred, \"And you know what I do when I get you alone.\" I was outvoted. KR it was. We'd do that Wednesday night. Tuesday, though, was to be our special day. The day we hiked Mount Rogers to see the wild horses. \n\nBefore we went to bed. Mom pulled me aside. \"I don't know what you two were up to in the backyard last night, but we didn't get much sleep. After you two stopped, Shavonda's parents started up. You know you are a bad influence, Jason Waite!\" She laughed as she walked away. \n\nThe next morning, we got up bright and early, dressing the baby and kids. Since Kenny and Edie were staying at his parents' place in the village of Waiteville, we headed there for breakfast before Kenny and Edie left for Pittsburgh. When we arrived, Edie and Kenny were helping Aunt Penny in the kitchen, plates were piles high with French Toast, eggs, sausage, bacon, with milk and orange juice to wash it all down with. \n\nAs Kenny and Edie loaded up her car, Shavonda said to Kenny, \"Tell Velma I said to leave you alone. I know she loves to ride your ass in the store, but really, she likes you. Don't tell her I told you, though.\" With hugs all around we saw them off, then spent the rest of the morning visiting my aunt and uncle.\n\n\"You know you two are to blame for all of this,\" Uncle Walt said good naturedly. His eyes were laughing.\n\n\"How so?\" I asked. \n\n\"Well, if you hadn't married Von, Kenny would have never met the bridesmaid.\" He laughed. \"It was all downhill from there. We noticed he wasn't around much on weekends anymore, then he told me he'd been seeing Edie. Next thing I know, he's quit his job, given up his pension, and moved to Pittsburgh. And he says YOU are the one who told him to do it.\"\n\n\"Guilty as charged,\" I said. \"Don't worry, though. He'll find something soon. Jobs are much easier to find up North.\"\n\n\"Oh, I'm not worried. Edie's a sweet girl, and we're glad he's found her. Jason, Von, he's happy now. And we know he isn't alone up there, He has you two as well as Edie. But now I guess we're going to have to plan another trip to the city.\" He sighed. \"No disrespect to you Von. You have a nice place up there, and a good family. But we're not city folks. Never will be.\"\n\n\"Have you talked to them about maybe having the wedding down here?\" Shavonda asked. \"Edie doesn't really have any family other than her mother. So most of the guests will be from down here anyway. In hindsight, I kinda wish we'd have gotten married down here. It's such a beautiful place and it feels like home to me now. But my family was too big.\"\n\nLater, we had lunch at the farmhouse. It was Dad's day off, so we sat on the porch talking for a while. He seemed tired. I guess almost 40 years of working in a paper mill will do that to you.\n\nIt was a relatively cool day, with unusually low humidity, which meant the mountains were crystal clear, with none of the normal summer haze to obscure the view. Shavonda was feeling the call of the mountains. \"Jason,\" she said. \"I want you to take me to the place you went that day you got caught in the rain. I want to see the mountaintop.\" We gathered up the kids, put on our boots, and started off. Shavonda wore the daypack. Mom had thrown some water bottles and leftovers in the pack for us, along with a blanket to sit on. I carried Miracle, strapped in her sling. She was now big enough we turned her around so she faced forward. That way she could see her surroundings. She cooed and giggled, babbling in a language only she understood.\n\nI figured the climb to the ridgetop would be a good dry run for our expedition tomorrow, since the climb was about 1200 feet to the ridge top, whereas it would be about 2000 feet to Mount Rogers. If Shavonda couldn't handle today's hike, no way would she make it to the wild ponies.\n\nWe took it slow because of the children. But they were troopers. I was surprised how little they complained about the climb. Soon we were at the quarry, where we stopped to rest. Opening the day pack, we found Mom had snuck in a huge bag of plain M&Ms, and we sat eating candy and sharing a bottle of water. Thus refreshed, we continued our upward climb. \n\nThe quarry was about two thirds of the way to the ridgetop, so soon our climb eased. But due to the spine of the ridge having an upward slope as well, our climb was not over. The hard part was over, but we still were heading upward through the pines and rocks on the narrow ridgetop. I pointed out to Shavonda the various rock outcrops I had passed in the rain a month before. \n\nWe soon came to the spot where the lightning had forced me over the edge. Just to satisfy my curiosity, I turned left, instead of right, to see what the north side of the ridge looked like. As I had suspected, it was littered with the broken edges of the rock layers which formed the south side of the ridge. I was glad I'd taken the path I had. Descending the north side would be treacherous, even in good weather. Turning back, we followed the sound of running water, to the spring that spawned the creek I'd followed down the mountainside. With no downpour feeding it, the little stream was peaceful, not the growing torrent I had followed over the edge. \n\nWe stopped here, and I introduced my wife and children to the wonders of mountain spring water. Not the kind you buy in stores, processed and chemical laden, but the pure stuff that flowed from the mountain itself, fresh, cool and clear. We filled the empty water bottles with the fresh water, drinking our fill, then refilled them for the trip back home. \n\n\"You know,\" Shavonda said in wonder, \"every time you bring me down here, I find something else to love. I can't imagine how you must have felt having to leave all of this behind. It must have broken your heart.\"\n\n\"It wasn't easy,\" I admitted. \"It was quite an adjustment. Add to that the fact that Rose had absolutely zero interest in any of it, and it felt like I'd had my heart ripped out. People down here are different. A lot of the things we see every day in the city, nobody down here would ever do. It simply would never cross their minds. We buy what we need, patch up what we have, and try to live on less than we make. We don't need flashy cars, or fancy things. Instead, we buy things we can use. And we save for a rainy day, preparing for the bad times. Because out here, if you aren't prepared it could be a while before somebody comes to help you. The nearest police station is 30 miles away, and it's in another state. The forest rangers are more useful than the police in an emergency. They're closer, and much better equipped to handle emergencies out here.\"\n\n\"All I know is, we're saving our money and buying some land down here. In 30 years, when we retire, we'll move down here. I can see that while some people don't accept us as a couple, most at least try. Your class reunion proved that.\" Shavonda was adamant about the future plans. I was flattered. I'd given up much of my life to live in her world, now she intended for us to spend our golden years in mine.\n\nWe retraced our steps back along the ridgetop, descending the trail past the abandoned quarry. We arrived at the farm just in time for dinner. The kids were too tired to stay up and were fast asleep before nightfall. The 5 or 6-mile round trip hike had tuckered them out. Shavonda and I also turned in early. We had a big day ahead of us. The weather forecast was hot and humid, in the lower 90s. Getting an early start would help out some, but we were going to be on the mountain during the heat of the day, no way around it. \n\nWaking early in the morning, we found Mom had already packed a lunch for us in the refrigerator, leftover grilled chicken from Grandma's birthday party. There were also several bottles of water frozen in the freezer as well. We threw all of these in the day pack, and threw my camera bag in another pack. No way we were going to experience the horses without taking pictures. \n\nI'd made sure Shavonda was dressed appropriately, wearing her hiking boots, jeans and a white t shirt. She had bought us both straw hats with a chin string, and we wore those this morning. I had to admit the hat looked good on her, like she was going on a safari or something. We stuffed my hoodie and her denim jacket in the pack containing my camera just in case. While the weather would be hot in the valley, one never knew what to expect in the higher elevations. The temperature on top of the mountain would be at least 7 degrees cooler simply due to the elevation change. Add to that the probability of a breeze in the open grassland that covered a significant portion of the mountain, and it was better to be safe than sorry. \n\nHeading west over the mountain, we headed for Interstate 77, passing a large rail yard along the way. I told Shavonda it was Wolf Creek, where many of the trains we saw originated or terminated. The yard stretched about 4 miles along a winding, narrow valley. The two-lane state road was sandwiched between the creek and the mountain, railroad tracks took up the rest of the valley floor.\n\nUpon reaching 77, we turned south, following the highway over several mountain ridges and through one tunnel before reaching 81 at Wytheville. We turned right on 81, following it southwest to Marion, where we got breakfast sandwiches at a drive thru. From Marion we headed south to Troutville, then followed the country road west along the base of Pine Mountain. Arriving at Grindstone campground, we parked the Jeep at the picnic area and headed off in search of the trail.\n\nThe trail climbed sharply out of the campground area, passing through tangled thickets of Rhododendron before emerging into a hardwood forest with a few evergreens scattered here and there. After rising steeply for a while, the trail reached the top of a spur ridge which it followed to the main mountain. Following the path anticlockwise around the side of Mount Rogers about a thousand feet below the summit, we eventually ended up at the deceptively named Deep Gap. Little more than a slight dip in the ridge that connected Mount Rogers with nearby Whitetop Mountain, the gap was definitely not deep. We took a break here, and, finding our water bottles still nearly frozen, we followed a short path to a spring. Somewhere along the trail, Shavonda had found a straight tree branch, and she put it to good use as a walking stick.\n\nNeither of us had thought to bring a cup, but we had a couple of plastic bowls in the pack, that we intended to use for lunch. We used one to scoop up the spring water, and drank from it. Unfortunately, it seemed more of the water ran down our faces than made it into our mouths. But, having climbed about 1200 feet already, we didn't mind. The cool water felt good soaking into our shirts. We rested here for a while, Shavonda searching the trees for the songbirds that seemed to be all around us. \"How you holding up, boo?\" I asked.\n\n\"I'm doing fine,\" Shavonda answered.\n\nThus refreshed, we continued our trek. At Deep Gap, our path had intersected the Appalachian Trail, and we followed that around the south side of the mountain. Soon, we emerged into the grassland, and shortly thereafter we came to a fork in the trail. Continuing straight would take us to the wild ponies on Wilburn Ridge. Left would take us on a short climb to the summit. I insisted we take the short detour to the left. \"You know you'll regret being that close to the highest point in Virginia, and not visiting it,\" I said.\n\nThe side trail soon left the grassland, entering a forest of Spruce trees. We were high enough now that the hardwoods couldn't survive. When the path levelled out at the top of the mountain, I showed Shavonda the benchmark, a small round metal disk set into a rock in the forest. This, the government surveyors had determined, was the highest point on the mountain. At 5729 feet above sea level, we were on the rooftop of Virginia, with only the nearby states of North Carolina and Tennessee, along with New Hampshire boasting higher mountains in the east. Matter of fact, we were probably within ten miles of the place where Virginia, Tennessee and North Carolina met. Finding THAT monument would make another adventure. But due to the forest, there wasn't much of a view of the surrounding mountains. What little view we had was due to the dead trees that dotted the forest. A parasitic insect was slowly killing them off, though from what I'd read it wasn't as bad here as it was in the 6000 footers off to the south. It was a little disappointing. I'd expected a killer view from up here.\n\nShavonda had made the climb like a trooper, and to celebrate we finished the bag of M&Ms from yesterday, washing them down with the water that had melted in the water bottles. Most of it was still ice, but I knew it would melt soon, leaving us with enough drinking water to last the rest of the day. My intention was to stop at the spring on the way back, and fill the empty bottles with fresh spring water.\n\n\"Jason, this place is so beautiful,\" my queen said with tears in her eyes. \"I know you spent your childhood in places like this, but it's all new to me. I grew up in the city. Places like this didn't exist. All we had were patches of woods on the hillsides. And I wasn't allowed to go into those without somebody with me.\"\n\nI was proud of my queen. She was taking to the hiking part rather well. Next step was to get her used to camping out. If she took to that, I knew a bunch of places in North Carolina I wanted to explore with her. I let Shavonda rest up, and take in the distinctive environment of the spruce forest. As she had done at Deep Gap, she had her binoculars out, looking for the birds that sang in the trees all around us. I didn't rush her. This day was hers, and we had plenty of time. When she was ready, she grabbed my hand, saying, \"Let's go see the ponies.\"\n\nWe walked back down the path to the Appalachian Trail, then continued through the grassland to Wilburn Ridge. Large rock outcrops dotted the landscape, remnants of the volcanic activity that raised these mountains so very long ago. It was a very different place than the folded mountains I'd called home. Whereas my mountains had been formed by compression of the earth's crust buckling and folding sedimentary rock layers, these mountains were born of molten lava that seeped to the surface as the land was pulled apart in a giant rift. I remarked how much it looked like the plains of Wyoming up here. \"I should have brought the headband and feather from your Hallowe'en costume,\" Shavonda said, grinning. \"You'd look right at home, my Indian brave.\"\n\n\"Me huntum big cats,\" I joked in my best pidgin English.\n\nShavonda shook her head in amusement. \"Big cats are dangerous,\" she laughed. \"But a little pussy never hurt anybody.\"\n\n\"You offering?\" I asked.\n\n\"Maybe,\" Shavonda grinned and my heart melted. It still amazed me how, even after two years of constant companionship, she still had that kind of control over me. Call it whipped, call it sprung, call it whatever you like. This woman had come into my life and quickly taken over my thoughts and emotions. And I'd never been happier in my life. \"But first,\" she continued,\" Let's find some wild horses before I ride my stallion.\"\n\nWalking along further, we scanned the area looking for the wild horses. We had gone a couple of miles further when Shavonda spotted something. She raised her binoculars to be sure. \"Look, over by those rocks,\" Shavonda said as she handed me the binoculars. I looked where she pointed, and sure enough there was a small herd of horses grazing peacefully. We'd found them! Now to get close enough to actually SEE them.\n\nI'd already taught Shavonda how to walk quietly in the forest, so as not to alert the creatures that dwelt there to our presence. The same principle also applied here. But in the open grassland, there was an added wrinkle. We could easily be spotted if the horses got wind of us. I had no idea how tame these horses might be. It could be they were so used to hikers we wouldn't bother them. Or they could be wild in the truest sense of the word, and take off at the first sign of danger. I decided to be cautious. Neither of us wanted to spook the herd.\n\nLuckily, they were far enough away that they hadn't seen us yet. We were north of them, so they hadn't smelled us either, since the breeze was coming from the west. Even luckier, just to the east of them were the low rock outcrops that formed the backbone of Wilburn Ridge. \n\nQuietly, we circled the herd to the rocks, then made our way along their far side, just below the crest. Occasionally, one of us would poke our head over the top, just to get our bearings and see if the herd had moved. While the horses weren't staying still, they were not concerned by our presence if they even knew we were there. The leisurely ambled, grazing, as though they didn't have a care in the world.\n\nEventually, we'd worked our way to where we could get a great view. The herd was maybe a hundred yards from the rocks. We had found a natural depression in the ridgetop, maybe three feet deep and covered in a sandy soil. We could stand in this depression, and, with most of our bodies shielded from view, observe the herd undetected. Downwind of the ponies, I knew they couldn't smell us, but we'd have to be quiet or they'd hear us. I readied my camera, switching to my zoom lens, while Shavonda stood watching them with her binoculars, bent over at the waist, elbows resting on the silver gray rock. Damn, she made me horny, bent over like that.",
        "There were a half dozen ponies below us, grazing peacefully, on grassland dotted with an occasional spruce tree. Even though we were still over a mile above sea level, we had a clear view of Mount Rogers rising above us, and nearby Whitetop Mountain off to the west. The usual summer haze prevented seeing much beyond that. It had been sunny in the morning when we'd started our climb. Now, around lunchtime, the haze and thin cloud cover had obscured the sun. This had kept the temperature down, and with the cooling breeze it was surprisingly comfortable. We could stay here all day, and I'm sure Shavonda wanted to.\n\nI snapped a few photos of the horses, zooming in on them, then took a couple of Shavonda herself observing them, her dark womanly curves striking an unintentionally sexy pose. She wasn't even aware I was taking her picture, happy to be watching the ponies. It wasn't until I came up behind her and rubbed that luscious ass that she was even aware of my presence. \"Hey, boo,\" she said. \"Mmmm, that feels good.\"\n\n\"You hungry?\" I asked. \"We still got that chicken....\"\n\n\"Anything for dessert?\" she asked. \n\n\"Yes,\" I replied. \"Jason on a blanket.\" I pulled the blanket from the day pack, spreading it on the ground, then pulled out the bag of chicken Mom had packed for us, and a couple water bottles. By now, the horses knew we were there, and they didn't seem to be the least bit bothered by our presence, looking up at us occasionally before resuming their own meal. Slowly, so as not to frighten the ponies, we climbed on top of the rock, and sprawled out. We ate our chicken in silence, in our mountain paradise, with the herd keeping us company. \n\nAfter lunch, Shavonda kissed me, pulling me back into the depression where I'd spread the blanket. Safely out of view now, she reached for my belt buckle and undid my jeans. I pulled her shirt over her head, staring in amazement at the bra she wore. Shavonda had never been one for lingerie, yet here she was wearing a sheer, see through white bra. I licked my lips in anticipation as I reached between her ample, milk laden tits to undo the clasp. She laughed, flashing white teeth. \"I thought you'd like that.\"\n\nPeeling the cups from her breasts, I quickly palmed her dark luscious nipples, squeezing east breast gently before taking a nipple in my mouth and sucking hard. Shavonda moaned in delight as her warm sweet milk flowed into my mouth. She let me suckle her for a while, before pushing my head away. \"Jason,\" she said, \"We need to get naked.\" Her eyes were starting to get that glassy, distant look that told me I was about to get my world rocked. I quickly helped her out of her boots and pants, then with her help undressed myself. \n\n\"This day is yours,\" I said. \"The whole day. Whatever you want, boo.\" \n\n\"I know,\" Shavonda said, pushing me down on the blanket. \"Right now, I want summa that tongue.\" We bundled up our clothing for me to use as a pillow, stuffing it under my head, then she lowered herself onto my face, straddling my head. Her swollen brown lips parted, glistening with desire, revealing the pink heaven inside. Just to make sure I got the message, she reached down and pulled the lips even further apart. \"Lick,\" she ordered huskily. \n\nI stuck my tongue deep inside her slippery folds, enjoying her aroma and taste. My nose pressed against her clit as she wiggled against me in pure pleasure. Shavonda towered above me, breasts jutting forward, head held back, mouth open, moaning in pure pleasure. \"Ohhhh, that's it, baby. Mmmmm. Hit that spot. Don't stop.....\" My own erection ached for attention but was ignored. This was about her pleasure, not mine. My hands found her hips. kneading her flesh as she rode my tongue. \n\nShavonda was determined to ride until she I called time out, and I was determined to lick and suck my queen into oblivion. Cramped neck, sore tongue, it didn't matter. I wasn't going to stop until she'd had enough. \n\nShavonda stiffened and ground into my face as she went over the edge for the first time. My face was soaked with her juices, her scent in my nose driving my own lust. I kept it up as she relaxed in her afterglow. My hands on her hips held her body in place against my head, and soon she spasmed around me with a sexy, primal growl, her hands behind my head pulling me deeper into her pink treasure. All concern for my well-being was secondary to her own pleasure as she lost control, bucking violently, clit pressed hard against my nose.\n\nI eased up a little, letting her come down a bit. But when she tried to rise up off my tongue, my hands squeezed tightly on her hips so she couldn't move. Resisting at first, she quickly gave up and let me work that tongue over her sopping wet folds. With my lips, I nibbled on her clit. \"Oh, no,\" Shavonda whimpered as she headed for yet another climax. I greedily lapped up her nectar. I was in heaven. No way I was slowing down. Her body was made for me to worship, and I intended to do just that. Shavonda was going to tap out before I did.\n\nConfident now that I had control, I let go of my death grip on her hips. She obediently rode my tongue, whimpering in delight. Yeah, even though it looked like she had me under her control, riding my face into oblivion, the reality was that I was firmly in control now. She was wearing out. I knew she couldn't keep this up much longer. The battle of wills was coming to an end.\n\nMY hands were now free to roam her body at will. I gently kneaded her back and ass cheeks as she started to tense up. Sensing she was close to yet another climax, I used the secret weapon on her. My hands gripped the underside of her cheeks and my thumbs worked their way into her special spot on her inner thigh. \n\nThe explosion was magnificent. Honestly, I wished we'd have had somebody filming that last orgasm for posterity. With a guttural \"ooooooohhhhh\" she came. Back arched, head thrown back, pussy muscles trying their best to suck my tongue deeper, she let loose. I could feel the energy drain from her as she came hard. Exhausted, she rolled over onto her back, pulling me with her as she went, her legs wrapped around the back of my neck. \n\nI gazed at her from between her sticky thighs as she lay there panting, glassy eyed in the afterglow. As she stared back at me, unable to move or speak, I gave her an evil grin. Yeah, boo. I won this round. Now what you gonna do? \n\nWe lay there, Shavonda on her back, breasts heaving as she tried to catch her breath, me on my stomach, head above her parted thighs. We were lost in each other's eyes, unable to move. I was painfully aware of my throbbing erection needing release, so I crawled slowly up her body, looking deep into her eyes the whole time. Those eyes, those beautiful almond shaped eyes. The irises were a deep dark brown, almost as dark as her skin, the whites providing a mesmerizing contrast that lit up her face. Eyes that lit up when she was happy, burned when she was passionate. Eyes that sparkled all the time. The eyes that could melt my heart in an instant. The eyes that made me believe in love again.\n\nShavonda blinked, and the trance was over. I could now move, though she was still immobile in her afterglow. I reached down, intending to guide my manhood to her warm waiting sheath. \"No,\" she said. \"Let them find each other. Just like the first time.\" \n\nRemoving my hand, I moved my hips forward until I could feel the head gliding along her swollen labia. She gasped as I bumped against her clit, then pulled back trailing my head down her wet slit. I worked my hips forward again, then again, seeking entrance. Twice, my erection poked at her entrance for a second before popping out and sliding up to her clit. On the third pass, she wiggled her hips a little, and I popped right inside her. Once I had the head in, I worked the rest of my shaft deep into her clutching walls. Shavonda offered no resistance, nor did she move to aid my movements. She just lay there, like a rag doll, unable to move.\n\nIt occurred to me that she was so relaxed I could take her anally without a problem. But I didn't. We had no lube, nor did we bring the finger vibrator we used to stimulate her clit during penetration. I knew without those things, even in her relaxed state, it would be painful for her. I couldn't, and wouldn't do that to her.\n\nInstead, I gently, tenderly worked my length inside her tight pussy, letting her natural juices ease my passage. The woman I loved lay there, just taking in every stroke, titties bouncing as I bottomed out, nipples standing tall and proud. She had a smile on her face as I rode her, the fire smoldered in her eyes. I was almost there. Just looking at her body as I thrust into her, and smelling her scent every time I breathed in. But I didn't want it to end just yet. In fact, I never wanted it to end. I could feel her body coming back to life. Her hips started to roll beneath me, as her inner walls clutched and grasped at my shaft. I was right there on the edge, walking the precipice, not wanting to go over the edge. Not without her. \n\nSoon, Shavonda was thrusting back at me as hard as she could. Her legs wrapped around me, pulling me deeper on every stroke. Her soft whimpers had turned first to moans, then to that sexy growl that told me she was close. The lust had returned to her eyes and they burned into mine as we both went over the edge. My own orgasm was one of the most intense I'd ever experienced, a seemingly endless eruption that I released with such force I was glad I hadn't come in her mouth. I'd have blown the back of her head off. All the while, her own muscles contracted in violent spasms that sucked out everything I had in me and came back for more. \n\nI collapsed, exhausted, on top of her. I didn't try to pull out. She probably wouldn't have let me anyway, so tight had she contracted around my erection. We lay there, out of breath, staring at each other in the afterglow. My erection slowly softened inside her, and when I finally slipped out of her orifice, spent and soft, I rolled off her body and lay beside her, absently playing with her nipple with my thumb. \"What you thinking about?\" Shavonda asked.\n\n\"Wouldn't it be something if we conceived up here. We could name the kid after the mountain itself: Wilburn Rogers Waite.\"\n\n\"Awww HELL NAW!\" Shavonda spat. I was surprised by her vehement reaction. \"Ain't having no Little Willie up inside me. Or running around my house!\" I stared at her, mouth agape. She smiled sweetly back. \"But if you want to switch the names around to Rogers Wilburn. I could get with that.\"\n\nAs our energy returned, we climbed up out of the depression in the rocks that had shielded us from the breeze, and stood up peering over the edge of the rocks. The ponies were still there, grazing peacefully right below the rocks. We were now less than a hundred feet from them, and about a dozen feet above. Quietly, I reached for the camera, taking photos as I went. I also couldn't resist taking one of my ebony doll leaned over the rock, bare breasts dangling invitingly, and ass jutted out in an unintentionally sexy pose.\n\nI pondered just how much in love with her I was. To me, she was the most beautiful woman in the world. Society saw her differently. To them, her skin was about ten shades too dark, much darker than the peanut butter complexion of a Halle Berry. She preferred to wear her hair in natural, low maintenance styles rather than the elaborate weaves so many others wore. They'd say her ass was too big, that her breasts sagged and she had stretch marks since the baby. They could find any number of things to nitpick about. But Shavonda had an undeniable presence about her, an almost regal manner befitting my queen. The simple fact was that all of those supposed \"flaws\" came together with her personality into one stunningly beautiful woman. And it wasn't just me who thought so.\n\nMy family had, for the most part, accepted her from the beginning. Mom had complimented Shavonda on her beauty the first time they'd met. My friends had instantly taken to her. Yes, she was a force of nature, who still didn't realize just how beautiful she was, though I'd been working on that. Hers was a natural beauty. She didn't need a lot of makeup, or fancy hair or clothing to look good. \n\nAnd so, two years after she'd swept me off my feet, here we were on a remote mountaintop, watching wild horses in their natural environment, naked after mind-blowing sex. Life was good.\n\nWell, maybe it wasn't quite so good. Looking around, I noticed the sky off to the west was gradually darkening as storm clouds gathered. Nothing to worry about just yet, so I didn't tell Shavonda. Just let us savor the experience a little while longer. Shavonda admired the ponies as I admired her. \n\nBut the sky continued to darken, and I knew it was time to go. There was no shelter from a storm for at least a mile, and an exposed mountaintop a mile above sea level was no place to wait out a storm. \"Boo,\" I said, pointing to the angry black clouds quickly gathering in the distance. \"We gotta go. I know you're enjoying yourself, but we gotta get outa here.\" As if to underscore my point, a flash of lighting lit up the cloud. Half a minute later, the rumble of thunder reached us. This was closer than I thought. \n\nI quickly shook out the blanket and folded it up, placing it back in the daypack. Shavonda hurriedly pulled on her panties and jeans as I stopped to watch her jiggling breasts. \"Jason!\" she scolded, \"There's no time for that now!\" I watched, enraptured, as she fastened her bra, then put on her shirt. Only then did I dress. Shavonda had already put her boots on, and placing each boot in my lap she let me tie her laces for her. \n\nNow fully dressed, we shouldered our packs, and started our trek for shelter. The horses, also sensing the storm, had disappeared while we were dressing. The thunder rumbled more frequently now, and the dark clouds now dominated the sky. Consulting my map, it looked like our best bet was not to retrace our steps west to Deep Gap, hiking right into the storm. Instead, we'd hike east about a mile or so, to where a trail descended the mountain to the north, eventually taking us to the country road that led back to where we'd parked the Jeep. Once over the edge of the mountain, we'd be back in the forest, sheltered somewhat from the rain and safe from lightning strikes.\n\nWe managed to make the junction with the trail back down the mountain just before the rain hit. I breathed a sigh of relief knowing we were no longer exposed to the lightning, and braced myself for the rain. When it came, the wind whipped through the trees, bringing sheets of torrential rain with it. We were soon soaked to the skin, and Shavonda's white shirt and sheer bra left nothing to the imagination. I found myself walking backwards, stupid grin on my face, to watch her body sway as she walked. \"Jason,\" she said,\" Stop staring at my tits! What is it with you and storms anyway?\" She laughed, rain dripping from her hair as she shook. \n\nIt only took us about an hour to make it back to the road. We made good time on the steep descent because after a little while of trying to hold ourselves back we gave in to gravity and jogged most of the way down the path. Arriving at the road soaked to the skin, we rested for a few minutes, catching our breath. Mercifully, the storm had passed, and the sun had come out. Steam rose from the road and the surrounding pastureland as we walked the two miles back to the car. Luckily for Shavonda, traffic was light on the road, and few people were treated to the sight of her body as we walked along the road. \n\nArriving back at the Liberty, we quickly got in and I turned the heat on. We were both shivering in our wet clothes as we rode back to Marion. By the time we got back to town, our clothed were somewhat dry. With cell phone service along the interstate, I called Mom to let her know we were all right, and on the way back. She told us not to stop to eat, she'd have dinner waiting for us when we arrived.\n\nAfter calling Mom, I checked my Facebook account, since we'd have no internet access back at the farmhouse. I had numerous friend requests from old classmates, and they'd also blown up my account. Most of the posts were favorable to us. An example was Marcia Bell's post was typical: \"Johnny, you really need to leave those two alone. They have a bright future ahead of them. Your best years are behind you. You remark about someone else's size when you don't even know how big he is. Guarantee in a pissing contest you'd come up short.\" Tamika had also posted: \"Watch what you say about ghetto. What you don't know can and will hurt you, John. There was probably more money sitting at that 'ghetto' table than you'll make in a lifetime. Why are you still threatened by Jason? You picked on him back in school, and you're still doing it now. You make cracks about his wife but I didn't see yours at the reunion. Stop being a bully for once in your life and let it go.\"\n\nI showed the posts to Shavonda, who immediately posted her own reply: \"Since you wish to insult my king and the life we've built together without ever trying to get to know us, I will tell you this: Don't mess with us. You might not like what happens to you. If we wanted to, Jason and I have enough money in the bank we could move down here, open a car lot, sell good cars for $500 apiece and run you right out of business. All the while, our employees back home would keep our other businesses running and profitable. You'd definitely come up short in that, and other departments. Btw, where is your wife? Or haven't you found somebody desperate enough to tolerate your shit?\"\n\nI couldn't resist adding my own reply as well: \"OK, Mr. Creampuff. I get it that you don't like me or my wife, even after all these years. Yawn. Remember, the only thing keeping you from being Al Bundy is that there are no malls with shoe stores in Monroe County. Where was your wife or girlfriend? Or do you have to pay some meth head $50 to take her teeth out and give you head? Don't mess with us. We've never done anything to you.\"\n\nIt was childish I know, but we felt better after posting. We bought drinks at a drive thru along the interstate, then headed home. Instead of taking the way we came, we decided to take 81 east to Christianburg, then 460 to where the road to Waiteville cut off near Pembroke. I had wanted to show Shavonda where the New River cut through the Mountain ridges north of Radford, but there were no good roads back into that spectacular area. Without a map to guide us, we'd have probably gotten lost. \n\nWhen we arrived back at the farmhouse, everybody was in the Living room. As Brittany and Ethan ran for us, shouting \"Daddy! Mama Von!\" we picked them up and hugged them. We were glad to see them too. I noticed with satisfaction Miracle was seated on Grandma's lap. I'd told her long ago I'd flood the world with little brown children and she'd love them. Obviously that prediction had come true.\n\nUpon seeing us, Miracle started to squirm. She tried to climb down off Grandma's lap, babbling, \"Da! Da!\" Grandma set her on the floor and she crawled straight for me. I picked her up and swung her around, much to her delight. Her laughter filled the room, melting my heart. If Von was my queen, Miracle was my princess.\n\n\"Well!\" Shavonda said in mock annoyance. \"I guess I know where I stand around here. I'm just a milk supply.\" She laughed as I handed the baby to her. \n\nWe followed Mom into the kitchen, where she'd made a pot roast. She quickly whipped up a pot of box mashed potatoes for us, knowing how much I loved those. The others had eaten hours ago but she'd kept the roast warm for us. As we ate, we told everybody about our adventure. \"That idiot got us caught in another rainstorm,\" Shavonda laughed. \"But I wouldn't have traded today for the world. It was so beautiful up there.\"",
        "I asked for a small bowl and Miracle's baby spoon. It was time to get my daughter hooked on the box potatoes. As I spoon fed her, she really seemed to enjoy them, especially with gravy. She waved her little arms and cooed happily. Shavonda left the table and came back with my Nikon, firing off several quick pictures. It was a fitting end to the day's adventures.\n\nAfter dinner, I downloaded the day's photos to the laptop, and showed the rest of the family. Brittany's eyes lit up when she saw the ponies. \"Maybe next summer we'll take you there to see them,\" I said. \"But it is a long walk, longer than the one we took yesterday. We'll have to take some shorter hikes to get you ready for the big one.\" Brittany agreed excitedly, and I knew next time we visited the ponies she and Ethan would be with us.\n\nBeing exhausted from our trek, we put the kids to bed, then took a quick shower before turning in ourselves. While we both enjoyed the soapy feel of each other's bodies, we were too tired to take things further. Afterward, I lotioned her in the room, paying special attention to her gorgeous feet and legs. I knew they were sore. How could they not be? We'd walked over ten miles and climbed over 2000 feet. That was a strenuous day for anybody, but especially for us because we hadn't been on regular hikes lately. Next year, we'd have to condition ourselves and the kids for the big hike. Amazingly, Shavonda hadn't said a word about her aches and pains other than to remark how tired she was. She had a faraway look in her eyes that told me she was still on that mountaintop, watching the horses graze.\n\nLying naked in the bed, she snuggled up against me, her delectable booty rubbing against me sensually. My arm was thrown over her, cupping her breast. This was how I'd always dreamed it would be, now it was reality for us. Contented, we were soon fast asleep.\n\nTO be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "interracial romance",
        "bf wm",
        "bwwm",
        "hiking",
        "lactation",
        "fellatio",
        "cunnilingus",
        "black woman",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-22"
}