{
    "title": "Let The Characters Do The Talking",
    "pages": [
        "Most written fiction consists of the narrative description of characters and their actions. While this technique serves to communicate the author\u2019s thoughts to an audience, readers can often infer the same information if the author makes careful use of dialogue. Screenplays use dialogue in this manner. It is true the playwright also makes suggestions for action and body language, and directors refine these suggestions, but most of the story is told by dialogue. \n\nThe purpose of this guide is to provide some techniques for writing dialogue that flows naturally and brings the reader into the conversation between characters. It will not define proper grammar, for most of us seldom use proper grammar in everyday speech. Proper punctuation will also not be discussed, as there are several excellent resources available on that subject. \n\nThe following excerpt of a conversation between two people is an example of the power of dialogue.\n\n\u201cJanice, why don\u2019t you just ask him?\u201d\n\n\u201cGod, I couldn\u2019t ever do that. I\u2019d be embarrassed to death.\u201d\n\n\u201cWhy?\u201d\n\n\u201cBecause! Barry\u2019d think I\u2019m weird or something.\u201d\n\n\u201cYou seemed to like your first time. I know I did.\u201d\n\n\u201cWell\u2026, yes\u2026, but with you it\u2019s different. You\u2019re a woman, and\u2026, well, you don\u2019t think it\u2019s nasty. Barry would.\u201d\n\n\u201cHe might surprise you. Jim thought it\u2019d be gross \u2018til he tried it. Now, I can\u2019t stop him.\u201d Gina giggled. \u201cDon\u2019t really want to, either.\u201d\n\n\u201cYou\u2019re terrible.\u201d\n\n\u201cYeah, that\u2019s what Jim says, too, but he likes a lickin\u2019 as much as we do.\u201d\n\nThe above exchange is comprised of eighteen sentences (not necessarily complete ones), and contains less than a hundred words. Only two of these words are not dialogue, yet the exchange conveys as much information as several paragraphs of narration.\n\nWhat might a reader gather from the above?\n\n1. The speakers are women.\n\n2. Their names are Janice and Gina.\n\n3. The speakers are both attached to men\n\n4. The names of the men are Barry and Jim.\n\n5. Barry belongs with Janice. Jim belongs with Gina.\n\n6. Janice and Gina are probably close friends, or they wouldn\u2019t speak so candidly. \n\n7. Janice and Gina have recently had a bi-sexual liaison involving oral sex.\n\n8. It is Janice\u2019s first bi-sexual and first oral experience.\n\n9. Janice is not very open in discussing sex with Barry.\n\n10. Janice is embarrassed by her feelings and hesitant to admit them.\n\n11. Janice may be embarrassed by her body.\n\n12. Janice liked her experience.\n\n13. Barry appears to be conservative in his view of sex.\n\n14. Janice is worried about what Barry would think of her newfound pleasure.\n\n15. Gina seems to be a fun-loving person with few inhibitions.\n\n16. Gina either taught Jim about oral sex, or at least encouraged him to try it.\n\n17. Gina appears to enjoy giving oral sex to both men and women.\n\n18. Gina appears to enjoy receiving oral sex.\n\n19. Gina and Jim probably have very open communications about sex.\n\n20. Jim enjoys giving and receiving oral sex.\n\nIt is of note that it required almost twice the number of words used for the dialogue just to list the above information and it reads like what it is \u2013 a list. To convey the same information in an interesting narrative form would require many more words. Narration is also subject to becoming \u201cinformation overkill\u201d, where nothing is left to the reader\u2019s imagination. Most readers would rather \u201cfill in the blanks\u201d, or at least some of them, with their personal visions.\n\nWe all meet people, listen to what they say, and develop understandings and impressions of them without benefit of a narrator explaining things to us. The beauty of dialogue is that it allows the reader to exercise the same skill. Dialogue is usually more interesting to read, as well.\n\nSome readers may not read as much into the conversation and some may read in more. The point is the reader interprets rather than reads, just as we do in real life. Few of us analyze every word a person says. We don\u2019t think, \u201cBrown bark, green leaves, tall trunk, wide branches, etc.\u201d when we read the word \u201ctree\u201d. Our mind simply forms a picture of a tree based on our experiences with things called trees. It isn\u2019t necessary for the author to completely describe every detail.\n\nThe author should remember that dialogue is not just the spoken words of the characters in a story. First person narration is, in reality, dialogue spoken by the main character. The storyteller\u2019s statements, although not enclosed in quotation marks, should, and will, represent that character\u2019s manner of speech. In some cases, the same applies to the narrator of a third person story, although the author must take care to avoid biasing the narrator if an objective relating of the events is desired.\n\nSo, how does one use dialogue to advantage and what are some pitfalls? \n\n1. They walk the walk, but do they talk the talk? \n\nThe primary thing to remember when writing dialogue is to write as people really speak. Real people do not always use complete sentences. Real people use contractions at every opportunity. Real people shamelessly dangle their prepositions all over the place. Real people make veiled statements the listener must question in order to understand their true meaning. If they are to seem real, characters should speak as a reader would expect from their personality, social status, and the circumstances of the conversation.\n\nDialogue is an easy way to define personality types without actually writing a description. For example, the following three sentences should lead the reader to identify three distinct personalities.\n\n\u201cI should never make public such a demonstration of my own ineptitude.\u201d\n\n\u201cI wouldn\u2019t ever tell anybody I made such a stupid mistake.\u201d\n\n\u201cAin\u2019t nobody ever gonna hear I done that shit.\u201d\n\nAll three statements say the same thing. The first could lead the reader to visualize either a fanatical Professor of English or a somewhat stuffy person who is attempting to impress the listener with his or her education. The second speaker would seem \u201cnormal\u201d to most of us. The third, well\u2026, a pot-bellied guy with shaggy hair, a three-day beard, and camouflage bib overalls with a snuff can circle on the right hip pocket comes to mind. It\u2019s entirely possible marriage isn\u2019t the only family bond between his parents.\n\nNow, consider the difference between these two statements.\n\n\u201cI have never before had intercourse with any man excepting my husband. I thought I could never bring myself to commit adultery.\u201d\n\n- and -\n\n\u201cI never slept with anybody but my husband before. I didn\u2019t think I could ever cheat on him.\u201d\n\nThe second statement is more typical of what we would expect to hear from most women. The first, while an example of proper English, seems stiff. It could also be confusing because, when a speaker is attempting to make a point, he or she will sometimes revert to more proper English for emphasis, as in:\n\n\u201cI will have you know, I have never slept with anyone but my husband before. Cheating is not something I do regularly.\u201d\n\nThe lack of contractions can indicate anger, outrage, or other strong emotions, but when every line is \u201cproper\u201d, how will the reader know the mood has changed?\n\nDo not be fearful of \u201cinvented\u201d contractions. People routinely say, \u201cthere\u2019ll be hell to pay\u201d, \u201cwhat the hell\u2019re you waiting for?\u201d, and \u201cJohn\u2019d never do that.\u201d Just follow the rules for \u201cnormal\u201d contractions and use an apostrophe to indicate the omitted letters.\n\nOh, be sure to dangle some prepositions now and then. That\u2019s what they\u2019re there for.\n\n2. Chitchat is our friend.\n\nThe common stereotype of women is that they talk a lot and don\u2019t really say much. Sometimes this is true, but men are guilty of the same thing. People are apt to talk about anything from how they think they look, to the appearance of other people, to any and all juicy gossip. Usually this will be done in the company of close friends, but such could be an exchange between strangers in some circumstances. An author can make use of idle talk between people to describe them or other characters. Some examples -\n\n\u201cHate like hell to say this, Harry, but you better lay off the beer and pizza if you ever want to get laid. I\u2019ll bet you have to use a mirror to take a leak, don\u2019t you?\u201d\n\n\u201cHoney, if I had those, Jack\u2019d never even let me get dressed. Just one question, though. Can you sit up all by yourself, or do you need help?\u201d \n\n\u201cMabel\u2019s cryin\u2019 about how big \u2018er butt is and how she seen me looking at that new secretary down at the bank. So I tell \u2018er I like that big satchel-ass more\u2019n my bass boat, and if she\u2019d just stop worryin\u2019 about how she looks and bend over, I\u2019d show \u2018er.\u201d\n\n\n\u201cOfficer, I am sorry I don\u2019t look like my driver\u2019s license picture. I just took three kids to school in this downpour and then locked myself out of the car at the grocery store. I am soaked to the skin, my makeup looks like a mud puddle, and I have to pee, so just give me the ticket and let me go home.\u201d\n\n\u201cHey, man. I saw you talkin\u2019 to that short blonde with the little shorts and bikini top. She yours or have I got a chance?\u201d\n\nWe all have conversations that can serve as models for this sort of dialogue. Next time, listen carefully and take mental notes. People will think you\u2019re strange if you start writing down what they say.\n\n3. Condoms for the social diseases of language.\n\nIt\u2019s a short jump between incomplete sentences and contractions to the vernacular, but the author should be aware of the hazards involved in writing slang and regional dialects. \n\nEven people intimate with the language often misunderstand slang.  Over the span of only a few years, the meaning of words can be modified or even completely reversed. Slang users also have a propensity to invent words. It is likely that readers for which English is a second language would have trouble understanding much of the American slang spoken today. The simple statement, \u201cI\u2019m so blue.\u201d, is confusing when interpreted literally, as would be, \u201ccrotch rocket\u201d, \u201cHe\u2019s one mean mother.\u201d, \u201cRub some funk on it, baby.\u201d, or \u201cLay it on me\u201d. What is that \u201cit\u201d, anyway?\n\nSome readers of recently legal age might have difficulty with, \u201cThe pigs are outside, so flush the roaches, man.\u201d, or the term \u201craincoat\u201d used instead of condom.  Some, shall we say, more experienced readers would have no idea of the meaning of \u201cblog\u201d, \u201crave\u201d, \u201cgoth\u201d, or any of the common chatroom abbreviations. \n\nFor some reason, slang terms used in reference to a woman\u2019s breasts seem to have universal understanding. The author can invent nearly any word and that word will be understood. A few examples that come to mind are - \u201cpuppies\u201d, \u201ctatas\u201d, \u201chowitzers\u201d, and \u201cbazzongas\u201d. Have lots of fun with this one. How about, \u201cHoly shit, will you get a load of the cabbanochinis on that babe.\u201d or \u201cDamn, I wish I could smother myself with those manongarollies of hers.\u201d\n\nWhen writing slang, the author must consider the audience for which the work is intended and should stick to slang with which he or she is familiar. It\u2019s too easy to misuse a term, and that will leave the reader wondering why it doesn\u2019t fit. Just for kicks, try asking for a \u201cbuggy\u201d in a Detroit grocery store sometime, and see what happens. In the North, they\u2019re called shopping carts, but in the South, we use \u201cbuggies\u201d. We also \u201ccarry\u201d people places instead of taking them, even though they\u2019re perfectly capable of walking on their own.\n\nRegional dialects bring on an entirely new set of problems for the author. Should one attempt to define pronunciation, or just let the readers figure it out as best they can? At what point does the dialogue become unreadable?\n\nThe apostrophe is one tool for solving this dilemma. \u201cThem\u201d, becomes \u201c\u2018em\u201d, as in, \u201cI got \u2018em good.\u201d \u201cHim\u201d becomes \u201c\u2019im\u201d. One Chicago pronunciation of \u201cdidn\u2019t\u201d becomes \u201cdi\u2019n\u2019t\u201d, and thus the problem of apostrophes begins to rear it\u2019s swollen, purple head. Use of an apostrophe for every omitted letter group can make the dialogue unreadable.\n\nAn alternate means of communicating pronunciation is phonetic spelling. The word \u201cdi\u2019n\u2019t\u201d above actually sounds more like \u201cdint\u201d, and could be spelled this way. Thus are born, \u201cgotcha\u201d, \u201cwanna\u201d, \u201cwouldja\u201d, and a whole vocabulary unique the Southern United States. These words would include, \u201cweekn\u201d, \u201cyawanna\u201d and \u201ciffen\u201d, as in \u201cWeekn go skinnydippin\u2019 down t\u2019the crick, iffen yawanna see me nekkid.\u201d \n\nFor those authors who escaped inoculation with grade school Phonics, just spell it like it sounds. Some odd-looking words will result, but by taking reasonable care, most readers will probably grasp the meaning. Oh, and yes, any spell checker will have screaming fits with all those words, but just keep clicking on \u201cignore\u201d. Don\u2019t click on \u201cadd to dictionary\u201d, or the spell checker will start missing the legitimate screw-ups.\n\nAs with slang, it is prudent to write dialects with which one is familiar. It is much better to write the language common to most than to butcher perfectly good vernacular, and most readers won\u2019t notice. Screw up a good old Southern boy\u2019s favorite verb-osition and he\u2019ll be sure to let you know.\n\n4. Who\u2019s it?, also known as tagging.\n\nFor those who may not be familiar with the term, \u201ctagging\u201d refers to the technique of using narrative to denote a speaker and/or the speaker\u2019s state at the time. Typical \u201ctags\u201d would include, \u201che said\u201d, \u201cshe whined\u201d, and others. The common sentence structure for tag use is:\n\n\u201cHow can you say it\u2019s too small?\u201d, he sobbed.\n\nToo many tags can become annoying because they chop up the flow of speech between the characters. In two-person conversations, tags are usually not needed to identify the speaker. If each character\u2019s \u201clines\u201d are defined by a new paragraph, and the reader can figure out who started, there will be little confusion. Which version of the conversation below between Darlene and James reads more easily?\n\n\u201cI get off on tall men with beards because I\u2019m short.\u201d, said Darlene. \n\n\u201cI have a beard.\u201d, said James, \u201cand I like short women.\u201d\n\n- or \u2013\n\n\u201cI get off on tall men with beards because I\u2019m short.\u201d\n\n\u201cI have a beard, and I like short women.\u201d\n\nWe don\u2019t really need to tag the lines, because we already know the sex and identity of each speaker. It would not make sense for James to say he gets off on tall men with beards, and for Darlene to then say she has a beard and likes short women. Well, on second thought, if the story is way out there in weird-world, some tags could probably be helpful.\n\nIt is also possible to identify a speaker by having the speaker address the listener by name. The above statement by James could be written:\n\n\u201cDarlene, I have a beard, and I like short women.\u201d\n\nThere would be no confusion about the identity of the speaker since there are only two people in the conversation, and the speaker has addressed Darlene.\n\nAnother method uses more narrative, but avoids the proliferation of \u201che said\u201d, \u201cshe said\u201d, etc.\n\nJohn looked at Darlene and grinned. \u201cI have a beard, and I like short women.\u201d\n\nTags are often placed after the speaker\u2019s statement. This method works, but when used to indicate the speaker\u2019s mood, putting the tag in front of the statement can help the reader to better understand what\u2019s really being said. Consider these two versions of a conversation.\n\n\u201cI\u2019m going home to pet my kitty.\u201d, said Rhonda.\n\n\u201cMy kitty is about dead. She ran into a train last night.\u201d, chuckled Rita.\n\n- or -\n\n\u201cI\u2019m going home to pet my kitty.\u201d, sighed Rhonda.\n\nRita chuckled. \u201cMy kitty is about dead. She ran into a train last night.\u201d\n\nIn the first version, the reader may have to re-read the statement after learning Rita\u2019s mood. This breaks up the flow of the story. In the second, the reader understands Rita\u2019s mood before reading her statement and gets to enjoy \u201chearing\u201d her chuckle as she speaks.\n\nIf more than two people are engaged in conversation, the problem becomes more difficult. The same tag techniques work for groups, but unless the author figures out how to have an \u201cit\u201d in the scene, there will always be at least two \u201che\u2019s\u201d or two \u201cshe\u2019s\u201d. The standard, \u201che/she said\u201d, doesn\u2019t tell a reader much. It\u2019s best to use a combination of methods to avoid making the dialogue monotonous. \n\n5. Speechus Interruptus, or, how to define pauses and cut-offs\n\nWhen we speak, we never run all our words together in a perfectly timed cadence. We pause in embarrassment or other emotion, for emphasis, to breathe, or just to consider what we\u2019re about to say. Other people interrupt our statements in their rush to finish our thought or to comment on what they think we\u2019re going to say. Defining these pauses and cut-offs helps make dialogue seem more natural.\n\nUse of the ellipsis (three periods in sequence) is a little sticky. Some authors don\u2019t use them at all while others seem to get along quite admirably with these cute little triplets of the punctuation population. (OK, we\u2019re going to talk about punctuation just this once.) \n\nThe ellipsis may be used to denote a pause or a \u201ctrailing off\u201d in speech, and performs this function amazingly well. Although the words are all the same, there is a vast difference between these two lines of dialogue.\n\n\u201cHillary, if I\u2019d known you felt that way, well, I wouldn\u2019t have slept with you last night.\u201d\n\n\u201cHillary\u2026, if I\u2019d known you felt that way\u2026. Well\u2026, I wouldn\u2019t have slept with you last night.\u201d\n\nThe first is a fairly straight-forward statement of fact. The second is hesitant, as if the speaker is having difficulty making the statement. Perhaps the speaker is upset, perhaps sad, perhaps attempting not to laugh, but in any event, the words are not coming easily.\n\nAs the example indicates, pauses are denoted by an ellipsis followed by a comma, and \u201ctrail-offs\u201d by an ellipsis and a period. Yes, that makes four little periods, all in a row.\n\nCut-offs can be represented by the hyphen. \n\n\u201cBut I gave you roses and candy, and I \u2013\u201c\n\n\u201cYou forgot about the hemorrhoids, you sick bastard\u201d\n\n6. A few words are worth a thousand pictures\n\nThe subject of word choice in erotic writing has been discussed in numerous instructive works, but deserves another mention here. The words people use in conversation, erotic or otherwise, are reflective of their personalities, base moral code, and their familiarity with others in the conversation. The intimacy of their speech may change with time, but the conversation usually starts out pretty tame. \n\nCharacters who just met would not be likely to make statements such as, \u201cI\u2019m gonna fuck you so hard you\u2019ll think you\u2019re ridin\u2019 a jackhammer.\u201d, or, \u201cI\u2019d just love to suck that big horse cock of yours until you cum buckets all over my big fat tits.\u201d In a pure fantasy, such statements may find acceptance, but not in a story presented as a possible reality. It\u2019s more believable, and builds the story better, if the dialogue becomes more explicit as the characters grow closer. A couple exceptions would be if one of the characters is being paid to participate, or if the scene has D/s overtones.\n\nWhen with someone we know well, we speak more openly, although sometimes not directly. We use terms that have special meaning only for us, as well as pet names for each other and certain body parts and functions. It is not unusual for these terms and pet names to sound pretty dumb to others. That\u2019s why we keep them secret.  Characters come to life when they let us in on such little secrets and the background behind them.\n\n\u201cHey there, Honey. What say we go make us a peach pie? I got the ice cream.\u201d\n\n\u201cSorry there, Swizzle Stick. All I got is cherry for about three more days, remember? Think I might like a little ice cream, though. Can I lick your spoon?\u201d\n\n- or maybe \u2013\n\n\u201cWow! That was definitely far out. When you sat on me and did that thing\u2026, well, I\u2019m gonna call you \u201cSlurpy\u201d from now on.\u201d\n\n- or even - \n\n\u201cI\u2019m embarrassed to tell you this, but Jim says the guys at the office call you \u2018The Icewater Angel\u2019 because you won\u2019t go out with any of them. Now that I know why, you\u2019re gonna be my \u2018Hot Little Licky Devil\u2019, \u2018cause, damn girl, you get me hotter\u2019n Jim ever thought about.\u201d",
        "Word choice in dialogue will always define characters, and sometimes may do so against the author\u2019s will. The man who calls it a \u201ccunt\u201d is not the same man who calls it a \u201ckitty\u201d. Now think about the women who make the same references. They\u2019re pretty different, aren\u2019t they? If the person defined in the narrative doesn\u2019t match the one defined by dialogue, the story can lose credibility. Readers just won\u2019t believe your fifty-year-old maiden aunt with six cats would really scream \u201cMore cocks, I need more cocks.\u201d, while suspended from the ceiling by surgical tubing during her weekly gang-bang.\n\nWhile we\u2019re on this subject, think twice and thrice about all those adjectives. Do real people ever really say, \u201cJam that big, hot, throbbin\u2019 cock in my teeny, tiny, tight little bung-hole and shoot me full of your hot, sticky jizz.\u201d? It\u2019s never happened to me, but then, perhaps I\u2019ve lived a sheltered life. \n\nWe won\u2019t even talk about imaginative euphemisms like \u201cman meat\u201d, \u201cfuck tunnel\u201d, \u201cpud pudding\u201d, and the ever-popular \u201cHershey highway\u201d. \u201cHershey highway\u201d? Come on, now. Really?\n\n7. Examination time. (No, not that kind of examination. Put away those latex gloves and that shiny spreader thing.)\n\nAs with all writing, the ultimate test of dialogue is in the reading. Let the story sit for a week or so. This allows the mind to forget exactly what has been written so actual reading is required. Read the narration silently and the dialogue aloud. Although most readers won\u2019t actually give voice to the dialogue, this is how they will \u201chear\u201d the story. It is more fun for anyone within hearing distance, but not necessary, to vary the pitch of one\u2019s voice to mimic gender and mood. Watch for one or more of the seven warning signs of dialogue disaster. For the uninitiated, these signs are listed below.\n\n1. Uncontrollable giggling or the spewing of any beverage from one\u2019s nose. \n\n2. Any exclamation or thought along the lines of, \u201cWhat was I smokin\u2019 when I wrote, \u2018Oooooohhhhh, Goddddddd, now!!!!!! Fill my incredibly hot, dripping, wildly-pulsating spunk sump with all your thick, gooey, white, creamy, guy gravy\u2019?\u201d\n\n3. The realization that the nymphomaniac hooker with really big tits sounds just like a prominent US Senator.\n\n4. The realization that the prominent US Senator sounds just like a nymphomaniac hooker with really big tits.\n\n5. Finding a word containing so many apostrophes it appears to have been attacked by a whole band of cute little female ninjas who all have a really serious case of PMS.\n\n6. Difficulty in remembering how \u201czshurlilcoochywetnotyet\u201d is supposed to sound when lovingly whispered by the cigar-smoking, blonde, bike-dyke from Lickskillet, Louisiana.\n\n7. An uncomfortable feeling that a statement is out of character for the speaker. It\u2019s easy to introduce one personality at the beginning of a story, and then \u201cbend\u201d the character to say what the author wants a reader to hear. If a slut is desired at the end of a story, she needs to either start out as such or have a personality-altering experience somewhere along the way. This is why the story should sit for a while. The author needs to develop an overall impression of each character as he or she was written.\n\nWriting dialogue is much simpler than many authors believe. When writing a particular scene, most of us know what we want to happen and how the scene will unfold. We have a feel for what the characters would say, but rather than write that, we try to explain the events with narration. Sometimes, that explanation requires further narration just to make it understandable. Next time, try letting the characters do more of the talking. They\u2019re more than willing if you\u2019ll just give them a chance."
    ],
    "authorname": "ronde",
    "tags": [
        "man calls",
        "tall men",
        "receiving oral",
        "proper english",
        "hershey highway",
        "word choice",
        "spell checker",
        "sex janice",
        "home pet",
        "real people"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/let-the-characters-do-the-talking"
}