{
    "title": "What The Cat Dragged In Ch. 25",
    "pages": [
        "Hi everyone! :)\n\nI know this has taken a long time, but i wanted to make certain that it was right. \n\nI hope you all enjoy!\n\npsyche b\n\n*\n\n25. A Million Little Pieces\n\nKelly sat on the table in the chilly examining room and started to rub her arms. Victor wrapped his jacket back around her shoulders and started to pace. The longer they waited, the more agitated he got. Nothing she said would do any good, so she didn't try. She wasn't sure how long it had been when Hank finally opened the door, she knew she cringed into the large coat. If either of them saw it, they didn't mention it.\n\n\"It's about goddamn time.\" Victor said.\n\nThe blue doctor fixed a direct gave on Victor. \"Perhaps if you had called ahead, you wouldn't have had to wait for so long. If I'm not mistaken, that was part of the agreement.\"\n\nCreed shrugged and stood behind Kelly. \"I agreed not to wander around here on my own. I didn't. 'Sides, I don't give a shit about your comfort or what else you got to do.\"\n\nHank didn't bother responding, instead he looked at Kelly. \"You look much more rested than you did the last time I saw you.\" He smiled.\n\n\"Because all I've been doing is sleeping and eating. I don't think I've been awake more than five or six hours a day and those aren't all at a stretch.\"\n\nHis eyebrows twitched, then he looked at Victor. \"Why don't you give us a few minutes alone?\"\n\nKelly felt Victor's body tense.\n\nShe looked up at him. \"You'll be close?\"\n\n\"I ain't inclined to leave at all.\" His eyes were still fixed on Hank.\n\nShe grasped his hand and smiled up at him. His clawed thumb traced lightly over the back of her hand, then he looked up at the doctor. \"Same rules as before. When she's done, you're done. You don't push for more and you sure as hell don't hurt her.\"\n\n\"Fine.\" The single word was laced with controlled anger.\n\nVictor squeezed her hand. \"Yell if you need anything, frail.\" He walked toward the door, but stopped to glance at her. Kelly gave a small smile before he closed the door behind himself.\n\nHank opened a folder. Kelly tried to read what was inside from her upside down vantage point, but found that she wasn't able to sort it out.\n\n\"I got the results of the DNA test we did the other day,\" he said.\n\n\"And?\" She hadn't even considered it before, but now she was itching with curiosity.\n\nHe smiled a little. \"It showed your healing factor functioning as I thought it would. You're still sleeping a great deal?\"\n\n\"Yeah. Even when I don't want to. It seems like I have the energy to eat, but not much else.\"\n\n\"And you're eating well?\" He was making notes as he spoke.\n\n\"Very well. Victor hasn't even been prodding me to eat more.\" A little smile touched her lips.\n\nHank looked up at her. \"He usually does?\"\n\nShe shrugged. \"Before Victor, I got used to not eating much and not eating very well. When I get stressed I guess I revert back to that. In the beginning I was like that pretty much all the time so I guess Victor got used to saying it.\"\n\nThe blue doctor nodded and kept writing. \"It's a bit early, but sometimes women with a healing factor are unusually sensitive to hormonal shifts. Is it possible you're pregnant?\"\n\n\"No.\" Kelly said firmly.\n\nHe looked up at her. \"If you're on the pill, your new healing factor will render it useless.\"\n\n\"I'm not.\"\n\nHe sat back and looked up at her. \"Victor uses condoms?\" The surprise in his voice was poorly covered.\n\n\"No, just take my word for it. I'm not pregnant.\" Kelly was starting to blush. She looked away. \n\n\"Besides, you can just do a test anyway.\"\n\n\"It's still a bit early for that. I know you weren't pregnant before you woke up, so it's only been four days. I am curious about what makes you think it's so impossible.\"\n\n\"You're not going to leave me alone about this, are you?\"\n\nHe smiled a little. \"I'd be remiss if I did.\"\n\nKelly took a deep breath and looked at a spot on the far wall. \"A couple of years ago I got an infection. It wouldn't have been any big deal, except that for whatever reason Stan decided that I wasn't allowed to go to a doctor because I hadn't earned it.\" \n\n\"How did you have to earn it?\"\n\nShe pulled the coat closer around her shoulders. \"I had to obey all of his rules, which was nearly impossible when I was feeling alright. When I wasn't...and I had Cody to protect.\" She took a long breath. \"He decided I needed thirty days of good behavior. Each time I got through a day with no mistakes I earned one day toward it. If I screwed up, I lost two days. If I ended up in the negative, I had to earn my way back to zero.\"\n\n\"That's barbaric.\" The shock was obvious in his voice.\n\nShe looked at him. \"That's Stan. I kept track of how long in the beginning, but after four months I lost track. When I finally did get to see someone they told me the infection had spread and caused scar tissue to form in my uterus and fallopian tubes and I'd probably never be able to have children.\" She looked at the wall again. \"My appendectomy scar is still there, I guess all those scars are still there too.\"\n\nHe nodded. \"The scars you had before probably won't change. Does Victor know?\"\n\nShe shook her head. \"He's never brought it up and I don't know how to. I have to think he's figured out something is wrong with me by now though.\"\n\nHe shook his head. \"There's nothing wrong with you.\"\n\n\"There's some politically correct term I don't know? Fertility-challenged?\" She couldn't help but smile a little.\n\nSo did he. \"No, but if you choose to have children you'll have to be more creative about it.\"\n\n\"Nice way to put it.\"\n\nHe looked at her for a long moment. \"Victor didn't hesitate to bring you here, did he?\"\n\nKelly shook her head. \"Not this time, and I doubt I would have lived if he'd hesitated the first time.\"\n\nHe looked down at the file, searching the pages for what to say next. He cleared his throat. \"There is one other possibility. After surgery, you were healing very slowly. Even your minor, external injuries weren't healing as they should because your body was so overwhelmed. It makes sense that your internal injuries wouldn't have been healing at a normal, human rate either. It's possible that your body is treating your missing spleen as another injury to heal.\"\n\nKelly ignored the inelegant segue. She knew Victor could regenerate parts of himself. She never considered that she might be able to do the same thing. \"You mean it would grow back? And work? Just like I never had surgery?\"\n\nA little nod. \"I'll have to do an ultrasound to be sure. If I'm right, you're sleeping because so much of your energy is going into the regeneration.\"\n\nKelly gave a little shrug. \"Alright.\"\n\nHe got a gown out of the cabinet. \"Good. I have to get the machine. I'll have you take off your blouse and bra and change into this to protect your clothing from the gel. You can go behind that screen to change.\"\n\nNervousness clutched at Kelly. \"Wait!\"\n\nHe looked concerned. \"What is it? An ultrasound isn't painful or at all invasive.\"\n\nShe smiled a little. \"I know. If you go out there, Victor will wonder what's going on.\"\n\nHe watched her for a moment. \"Whatever you say to me is confidential. I can't tell Victor or Professor Xavier or anyone else without your specific permission.\"\n\n\"I don't mind if you tell him about the test. If you don't it's just going to upset him.\"\n\n\"Do you often worry if something you do is going to upset him?\"\n\nShe stared at him. \"I can't be concerned about Victor's feelings?\"\n\n\"There's concern and there's worry.\"\n\nKelly fixed her eyes on his. \"I didn't say I was worried about him being upset with me. You implied that. I don't want him standing out there wondering what's going on and not being able to find out from anyone.\"\n\n\"You're certain that's all you're concerned about.\"\n\n\"He said tests were up to me. If he was Logan or anyone else, would you ask me all these questions?\"\n\nHe took a deep breath. \"If he asks, I'll tell him.\" He left her alone to change.\n\n*~*~*~*~*~*\n\nCreed stood in the lab and tried not to pace. Jimmy was standing with his back against the counter, but the other man might as well have been a hundred miles away. His arms were crossed over his chest, his eyes fixed on one of the floor tiles. Creed didn't really give a shit, but standing there surrounded by his brother's brooding silence wasn't getting the ape out of that room any faster.\n\nHe turned to look at the smaller feral. He'd seen that look before. The runt had been using it in one form or another for as long as he could remember. It had never occurred to Creed that the dark, brooding look that got all the girls wet was at least partially out of his brother's control.\n\nA couple of years ago, Creed would have said the other man was struggling with some slippery bit of memory. Whatever had happened to the runt in the interim had at least scattered most of the pieces of the past in his brother's general direction, so Creed doubted that was it. That look was different anyway. Jimmy's brows weren't as tightly knit and there was no muscle twitching in his jaw. None of the outward signs of internal struggle between repression and recovery.\n\nHe supposed the old man was pissed off at Jimmy. For all the hot air about acceptance and choice, the old bastard fucking hated it when people stepped out of line. The runt had all but pissed on that line when he'd taken Creed's side. Still, a sneering old man wasn't enough to put Jimmy into this state. That didn't leave a whole hell of a lot.\n\nThe clock ticked away a couple more interminable minutes. A grin spread slowly across Creed's face, his eyes still fixed on his brother.\n\nJimmy was thinking about the girl. Had to be. Only question was, had he done more than think. Not that he really gave a shit, but it gave him something to do besides watch the clock.\n\n\"You gonna stand there and stare at me all day or are you going gonna ask?\" Jimmy asked finally. He didn't turn his head.\n\n\"Ask?\" Creed glanced away.\n\n\"Yeah.\" There was a little growl in Jimmy's voice. \n\n\"You been starin' at me since you got back out here.\"\n\nCreed shrugged. \"What makes you think I give a shit in the first place?\"\n\nJimmy fixed him with a glare. \"I think if I asked you, you'd say that you're bored. Whether you want to admit it or not you're worried about Kelly.\"\n\nCreed felt his jaw tense. \"That's a theory.\"\n\nJimmy smirked. \"Knew you wouldn't admit it.\"\n\nCreed forced a casual shrug. \"She's mine and I ain't ready to let her go.\" He looked at Jimmy again. \"You were thinking about yours.\"\n\nThe smaller mutant looked away. \"She ain't mine.\"\n\n\"Only 'cause you haven't told her so.\"\n\n\"I can't just tell her-\"\n\nCreed groaned. \"That part of being housebroken? Making everything ten times more complicated than it already is?\"\n\n\"S'pose that's what you did.\"\n\nA little smile. \"You say that like it's a bad thing.\"\n\nJimmy looked over at Creed, but before he could speak the ape came out of the examining room. Creed took a step forward, but the blue doctor disappeared into another room.\n\nCreed could feel a growl rising in his chest. \"What the fuck is he doing? She's in there alone.\"\n\n\"If there was anything wrong with her, he wouldn't have been moving so slow.\"\n\n\"He still left her alone.\"\n\nThe ape came out a few minutes later, only this time he was pushing some sort of machine on a cart. That was all Creed needed. He was across the room and in the ape's path in a few long strides. \"What the fuck is that?\"\n\n\"An ultrasound machine. Kelly agreed to-\"\n\n\"Well I figured she'd agreed to it. What's it for? Your own general curiosity?\" Creed could feel a nervous anger clawing at the inside of his ribcage.\n\n\"I'll tell you because she wants me to. Because Kelly was healing so slowly, I don't believe the internal surgical injuries were healing. When her healing factor activated, it began working on all of her injuries, but it directed the majority of its energy to her most serious injuries. We could see it working on the external ones, but I think it was treating her missing spleen as something else that needed to be repaired.\"\n\nIt was suddenly easier to draw breath. \"She's regenerating it?\"\n\nThe ape nodded. \"That's my theory at this point, yes.\"\n\n\"That wouldn't have been the first thing it did? A piece of her was missing.\"\n\nSome of the tension went out of the blue doctor's shoulders. \"Yes and no. A healing factor attacks the most critical injuries first. Yours is so fast you probably don't notice, but hers began with a whole host of injuries deal with. It would have worked on the injury to her brain and her lungs first because those were the most life-threatening. With a bit of care, a person can live a perfectly normal life without a spleen. It would have been pushed down the list, so to speak.\"\n\nCreed studied the ape. He'd never considered the mechanism of how his healing factor worked; he just knew that it did. He glanced down at the machine. \"This'll tell you one way or another?\"\n\nA little nod. \"It should.\"\n\nHis eyes narrowed. \"And if it doesn't?\"\n\n\"I'll recommend a different test and she'll decide whether or not she wants it. If she agrees and if that shows nothing, then I'll look in another direction. Frankly, I think this is the most likely scenario at this point.\"\n\nCreed put his hand on the door.\n\n\"Wait!\"\n\nCreed glanced over his shoulder. \"Why? There somethin' you ain't tellin' me?\"\n\n\"No, but Kelly's changing.\"\n\nCreed smirked. \"I fucked her a couple hours before we got here. I don't think she'll mind.\" He didn't wait for a response, he just walked in. \"Only me, frail.\"\n\n\"Behind here.\" She waved from behind a screen.\n\nThe ape looked shocked. Jimmy turned away to hide a little smile. Creed grinned at both of them, then closed the door behind himself.\n\n*~*~*~*~*~*\n\nKelly lay on the examination table with a towel tucked into the waistband of her jeans and her abdomen bare and pretended to ignore the tension between Victor and Hank. The wary, dangerous look Victor had fixed on the doctor was in direct conflict with the tender way he held her hand. Kelly stroked the back of his fingers as the silence grew.\n\n\"You gonna sit there and stare all goddamn day?\" Victor squeezed her hand lightly.\n\nShe glanced at Hank. His eyes were on their clasped hands. She got the distinct impression that seeing anyone touch Victor, or want to be touched by him, was still an unusual event that drew attention.\n\nHe took a bottle of gel off the cart and looked at Kelly. \"This shouldn't take very long. You've been eating normally, so I won't be able to get as clear a picture, but I will be able to tell if it's there or not. I'm afraid this'll be cold.\" He squeezed the gel onto the left side of Kelly's stomach by the bottom of her ribcage.\n\nKelly gasped and gripped Victor's hand tighter to suppress a shiver.\n\n\"Sorry.\" Hank said. He adjusted his glasses. \"You'll feel a bit of pressure, but you shouldn't have any discomfort at all. If you do, tell me and we'll stop.\"\n\nKelly nodded. He pressed the probe against her stomach and moved it through the gel. His eyes were on the grainy image on the monitor.\n\n\"Spleen's under her ribs. How the fuck you gonna see it with that?\" Victor's eyes were on the grainy image too.\n\nHank's hand paused and he looked at the other man curiously.\n\nVictor smirked. \"What? You think I could do what I do and not know where shit is?\"\n\nKelly couldn't resist a little smile.\n\n\"Forgive me. I forgot for a moment that I was in the presence of an expert.\" He moved the probe again and paused. \"Kelly, take a deep breath and hold it.\"\n\nShe drew in a deep breath and held it while he moved the pressed the probe against her skin a little more firmly.\n\nAfter a moment, the corners of his lips twitched into a smile. \"Let it out, then when you're ready take another and hold it.\"\n\nKelly took another deep breath. She could see Victor squinting at the screen, trying to discern anything from the grainy, black and white image.\n\n\"Alright, all finished.\" He took the probe away from her stomach and covered the gel with a towel. The hint of a smile had grown. \"Your spleen is regenerating, so the need to sleep as much as you have been is perfectly normal.\"\n\n\"How much longer is it going to take?\" Kelly pulled the gown down and sat up with the towel clutched against her side.\n\n\"I can't be certain. I'd say the regeneration is about ninety percent complete, but that's just going by the average size of a human spleen. The last time I actually saw yours it was in pretty bad shape.\" He smiled a little. \"If you're still spending an unusual amount of time sleeping after two days, come back and I'll look a little further. I don't think it'll take that long though.\"\n\nKelly smiled a little and leaned closer to Victor. \"Thank you. I feel a little silly for being so worried now.\"\n\n\"I don't.\" Victor's arm tightened around her.\n\nHank's eyebrows rose. \"For once, we agree on something. I'm not certain exactly how your healing factor will react, how could you be?\" He took off his gloves and picked up a clip board. \"If you need another towel, just take one from the bottom of the cart. Let me know how you're doing in a couple of days.\" He smiled and left them alone in the room.\n\n*~*~*~*~*~*\n\nCreed lay with the frail snuggled against his chest. By the time they'd gotten back to the guest house it was time for dinner. She'd eaten and he'd watched her fight sleep for over an hour. \n\nEventually she'd nodded off on the small sofa. The fucking thing was too small, even for her to get comfortable on. He'd picked her up and carried her into the bedroom. She woke up enough to undress, and as soon as she did she curled up close. Damn place was so drafty she was probably freezing. Wasn't like he could just get up and leave her after that.\n\nWasn't like he wanted to.\n\n*~*~*~*~*~*\n\nKelly woke up slowly in a dim room. For a moment, panic started to rise, but then she realized that the bed under her was wide and soft. When she rolled over, there was a warm place in the mattress. She smiled. Victor must have just gotten up, his scent still lingered on the pillows. She arched her back, reveling in the sensation of being close to those ephemeral traces of him. For awhile, that was all she needed.\n\nAs time passed, she started to become aware of where she was. The room was too small to be the bedroom in Maine, too cozy to be the loft in Chicago and too comfortable to be the guest house at the mansion. She squinted into the darkness until she recognized a large landscape that hung across from the bed. That painting was in the cabin, the place Victor had brought her to recover after he first found her.\n\nShe relaxed again, hoping for sleep but it didn't come. Instead, she heard sounds filtering through the mostly closed door. Victor moving around in the living room, the sound of wood being arranged in the fireplace. The bed was warm, but her comfort in it was replaced with an uncomfortable restlessness. She pulled his discarded t-shirt over her head and walked out toward the living room.\n\nThe hall was dark, but she could see the glow of the fire ahead of her and Victor silhouetted in profile as he squatted in front of it. She smiled and moved closer.\n\nHe turned to face her, his hand held out to her, the firelight highlighting the deep divot on the side of his head where parts of his skull and brain were missing. Kelly stepped back and closed her eyes, trying to push the horrific image away. \n\nWhen she opened them again, he was on his feet moving toward her, a river of blood staining his face and the side of his body. When she looked down at herself, she was covered in bright red blood and gelatinous flecks of brain.\n\nHer skin felt stiff when she opened her mouth and started screaming.\n\n\"FRAIL!\"\n\nKelly woke with her heart racing. The coppery taste of blood was still in her mouth, the tight feeling of a scream still in her throat. Victor's claws were biting into her shoulders as he hovered over her, but the concern in his eyes was masked by the specter of the dream. In her view, the blood and bone and brain still clung to both of them. Her stomach turned over and she twisted out of his grip.",
        "*~*~*~*~*~*\n\nShe was out of bed and down the hall in a few long strides, the stink of terror surrounding her in a thick miasma, making it hard for him to breathe. \n\nThe door to the small bathroom slammed and he heard her wretch. He hesitated with his hand on the knob. He wasn't exactly a comforting presence. What the fuck would he say once he got in there?\n\nHe heard her wretch again.\n\nHe decided he didn't give a shit. He'd say whatever came out and if she was pissed off at him, the rest would seem less important. He opened the door. She was crouched in front of the light blue toilet, her upper body braced on the seat, her hair falling in a sweaty curtain to hide her face. There was one bright red, raised scratch on her shoulder, and another deeper cut. Blood was starting to trickle down her arm. She started to tremble. \n\nIn a way, she looked every bit as vulnerable and broken as she had in the bunker. He got peroxide and several gauze pads out of her make-up bag.\n\nShe flinched away from him when he pressed the gauze over the deepest wound on her shoulder. \n\n\"It'll heal.\" Her voice was raspy. She flushed the toilet and sat on the floor, her knees drawn up, her back to him.\n\n\"I know. Doesn't mean you gotta bleed all over the damn place.\" He held the cottony square over the wound again. This time, she didn't move away. \"Dream?\" Pretty damn obvious that it was, but it didn't look like she was going to say anything on her own. He held his hand over her shoulder, putting pressure on the cut.\n\nShe nodded once.\n\n\"Same as before?\"\n\nSlight shake of her head.\n\n\"Gonna make me guess?\" He was holding his anger in check. If she heard it in his voice, she'd be certain that it was directed at her somehow. She didn't need that on top of all the other shit she was going through.\n\nAnother little head shake. \"Can't. Not just now.\" Her voice sounded flat and strange.\n\nHe recognized it as the sound of withdrawal. He kissed the back of her head, her sweat was still heavy with her fear and a newer scent; anger. That almost made him smile. He took the gauze from her shoulder. The wound wasn't gone, but it wasn't bleeding anymore. The other scratches were nearly invisible now.\n\n\"Need a shower.\" The soft, alien voice again.\n\n\"Come back to bed after.\" He got up and headed back to the bedroom. He knew he wouldn't get back to sleep. The scent of her fear alone was enough to keep him awake.\n\n*~*~*~*~*~*\n\nKelly stood under the weak shower and tried to push away the horrific images and sensations. Maybe eventually she'd be successful in that, but she doubted that she'd ever be able to forget the guilt.\n\nIt was all her fault.\n\nIf it hadn't been for her, Victor wouldn't have been in the middle of nowhere and he wouldn't have gotten shot. It made her chest hurt every time she thought about it, and it stirred an all-consuming fiery anger that would not be suppressed. Anger at Stan for trading her and Cody to cover up for his own misdeeds. Anger at Cavallo for being the kind of sick bastard who would take such an offer and revel in it. Anger at herself for all of it and for not even taking a moment to grieve when she thought Victor was gone.\n\nIf Victor had anything to say about it, Stan and Cavallo would have to answer for what they did. What could she do about the rest? She couldn't turn back the clock. She couldn't make it up to him. She couldn't even figure out how to apologize. Even if she could, that wouldn't fix anything anyway. They might be safe here, but as soon as they stepped outside the gates of the mansion, they were still wearing targets and it was all her fault. There was no resolution and that alone made her even angrier.\n\nThe water started to get cold. Kelly stepped out reluctantly and dried herself off. The thought of going back to bed was more than she could manage at that moment. She wrapped one of Victor's flannel shirts around herself and went out into the tiny living room. The sofa was uncomfortable, but at least it was a place to be alone with her thoughts for a few minutes.\n\n*~*~*~*~*~*\n\nCreed listened to the water run in the sink. He heard her brush her teeth. He heard her turn on the shower and get in. How long she stood under the weak spray he couldn't say, but he figured it was probably getting cold by the time she got out. She should have been in the bedroom a few minutes later, instead he heard her pause in the hall and head down toward the living room.\n\nHe fucking hated it when she got like this. Sure it was annoying as hell, but more than that he didn't have the first idea of how to bring her out of it. He'd always know what to do. Some of the time it was wrong, but it always produced a change. A result that he could work with in one way or another and to hell with the consequences. \n\nCouldn't do that now. The consequences mattered too much.\n\nFucking frail, made his life complicated from the time he woke up in the morning until he went to bed at night and beyond. Course the idea of going back to an uncomplicated life was almost enough to make him puke. He pulled on a pair of shorts and went out to find her. He'd almost gotten used to making shit up as he went along.\n\nAs soon as he opened the door he could see her sitting on the sofa. Her back was to him, but he could tell that she was hugging her knees. He made sure she could hear him coming. No need to scare the shit out of her. She turned her head, but Creed couldn't be certain whether she saw him or not.\n\nWhether consciously or unconsciously, she'd left him room enough to sit behind her, so he did.\n\n\"Thought you were coming back to bed.\"\n\n\"I just...I didn't think I could sleep yet and I didn't want to keep you up.\" Her voice didn't have that same flat emptiness that had been there in the bathroom, but it still wasn't right in a way he couldn't define. 'Distant' was the best he could come up with, but that didn't quite cover it either.\n\n\"I'm up anyway.\"\n\nShe glanced at him, and then looked away again. \"I'm sorry.\" There was more pain in the two words than there should have been.\n\nNervousness tinged her scent. He moved closer. She moved back, but didn't quite touch him. He ran clawed fingers through her damp hair. She started to relax. \"What're you beatin' yourself up for?\" He made sure to keep his voice soft.\n\n\"I'm not-\"\n\n\"I can practically smell it on you, frail.\"\n\nShe took a deep breath. \"I thought you were dead.\"\n\nHe could tell from the tone of her voice that the statement was supposed to explain everything, but it didn't make a bit of sense to him. \"I'm not.\"\n\n\"But I didn't know that. Your blood hit my face, I saw you hit the ground.\" She started to shiver. He pulled her closer, but didn't force her to face him.\n\n\"What could you have done? You were drugged-\"\n\n\"But I woke up in a cell and they left me alone for awhile.\" She was leaning against him, but her body was tense.\n\n\"So? You sure as hell couldn't have done anything when you were locked up.\" The more she talked the less sense she made. Seeing the state she was in though, it wasn't just idle conversation.\n\n\"But I just...\" She took trembling breath and went silent again.\n\nHe caught the scent of her tears, and he could feel her fighting them. \"Just what?\"\n\nShe hugged her knees tighter. \"I just washed the blood off.\" She choked on a sob. \"I washed the blood off and tried to figure a way to get out of there.\"\n\nHe gripped her wrist and held her tighter. She struggled but he wouldn't let her go. Now at least all the upset made sense in a way. Seeing him shot was bad enough. Seeing him shot and struggling with guilt, he was surprised she hadn't fallen apart before this. Course he knew what that felt like too.\n\nFucking frail. If he lived with her long enough, he'd end up telling her all of his secrets.\n\nShe was giving up the struggle, with him and the tears she was fighting. Finally, she went limp against him. He relaxed his grip on her wrist and she turned slightly to snuggle against his shoulder. He rested his cheek against the top of her head. \"Told you about Fort Sumter.\"\n\nHe felt her nod.\n\n\"Didn't tell you Jimmy was there too.\"\n\nShe stayed silent, but she was curious. He could smell it.\n\n\"Jimmy didn't like the idea, but I convinced him.\"\n\n\"Why?\" Her voice was small.\n\n\"Jimmy can pass for human. I can't. Back then, if you couldn't pass you ended up in a fucking freak show and that's if you were lucky. Jimmy just wanted to be normal. He'd manage to get work someplace and they'd find out I was his brother and we'd both be on the move again. By the time it was all brewing we were in the States anyway. They were taking mutants and I figured it was a shot at Jimmy's normal and I was fighting all the damn time anyway. Might as well get paid for it.\"\n\nHe felt her relax against him a little more.\n\nSome of the tension in his muscles had eased, like the more he talked, the easier it got. \"Didn't turn out the way I figured it would. Sure they took mutants, but we were separated from everyone else. Got paid less, lived closest to the latrines, did all the shit work, got the worst of the food, the worst of the punishment and we were always at the front of the line when the fighting started. Me and Jimmy made the best of it, had some narrow misses, some minor shit.\" He smirked. \"Gave the normals a hell of a show when some major injury healed in a few minutes.\"\n\nA little smile flickered across her face too.\n\n\"Couldn't last though. About three months in, we were right in the middle of it. I don't even know how the fuck it all happened. I heard men screaming and smelled blood and hate and terror and I looked over and Jimmy wasn't next to me anymore.\" His chest got tight. The sights and smells came back unbidden. His arm tightened around her for just a moment, holding tight to the present. \"'F it'd been something minor Jimmy would have found me again after. When he didn't, I went searching through bodies.\"\n\nThe ground had been soggy with blood and the stink of shit and death hung in a heavy cloud over the field. Droning flies had begun to gather, as had the filthy men who made their living from robbing the dead. He remembered how the dead flesh felt in his hands. Remembered the groaning sound one body made as it slid over another. He'd worked so hard to forget the faces and now they loomed before him again with their staring eyes and expressions of shock and pain. He hadn't realized how far away he'd gone until he felt the frail's hand stroking his chest.\n\n\"I'm sorry for bringing it all back.\" Her voice was soft.\n\nHe gripped her hand. \"Part of that infection I told you about before. Anyway, I found him, all broken to hell. He was healing, but nothing was in the right place. I had to rebreak his leg so they'd heal normal.\" He didn't tell her that for nearly two days they'd lived in a circle of corpses because their unit couldn't spare a stretcher and Jimmy couldn't be moved any other way at first. \"Know what I did after?\"\n\nShe shook her head. \"No.\"\n\n\"Got him back to camp, did all the shit I usually did. 'F you're gonna survive, you got to. Doesn't make you disloyal.\" He looked down at her.\n\nShe was looking away. \"I feel like I'm always an inch away from falling apart.\"\n\nHe shrugged. \"I'll put you back together if you do.\" The words sounded more confident about that than he felt.\n\nShe looked up at him, a little smile tugged at the corners of her mouth. \"I believe you could.\"\n\nHe grinned. \"Fucking right I could.\" His hand slipped between the buttons of the shirt, stroking the side of her stomach. His lips found hers and lingered there for a long moment, until all the residual tension was gone. \"Why d'you always wear my clothes when you get upset?\"\n\nShe laughed. \"Because your clothes always seem warmer than mine.\"\n\nHe moved to kiss her again, harder this time, when something hit the outer wall of the house with a loud thump.\n\nShe jumped, but managed to bite back a scream.\n\nHis muscles were tense. \"Get dressed.\" He got up and headed for the door.\n\nFear was rolling off of her in waves. \"No! You can't go out there. What if-\"\n\n\"Cavallo's goons ain't got a hope in hell of sneaking onto this property, and even if they did, they wouldn't be stupid enough to make all that noise. Now go!\" He made sure she heard the dangerous growl under his words. \n\nShe got up and trotted away, he headed for the door.\n\n*~*~*~*~*~*\n\nKelly's heart was pounding when she locked herself in the tiny bathroom. Her thoughts raced, her stomach turned again, only this time it was empty. \n\nShe paced the two steps between door and tub in quick strides, her arms crossed over her stomach.\n\nThere was nothing but silence from the exterior of the house. \n\nVictor was probably right, it was probably just an animal or wind or something innocent. In the jumble of her thoughts those perfectly logical ideas almost got lost. She forced herself to hold on to them, to repeat them to herself like a mantra. After what seemed like an eternity, she heard the door open again.\n\n\"Frail!\" Victor called. \"Bring me my phone.\"\n\nIt was alright. It must have been, otherwise he wouldn't have told her to come out. She pulled on a pair of sweats and found his phone on the dresser in the bedroom. He was standing in the kitchen holding a terrified-looking boy by the collar of his coat. Victor was wet. The boy was covered in snow and shivering. Victor pushed the boy into one of the chairs and took the phone from her.\n\n\"Who-\"\n\n\"A nosy fucking brat, that's who.\" He manipulated the buttons on the phone until he found what he wanted. He glared at the sandy-haired boy who was doing his best to vanish into his clothes. \"A fucking brat who's lucky I been practicing my self-control.\"\n\nKelly had no idea what to say. She stared at the boy and he stared at her.\n\nHe growled and jabbed at buttons again. The nervous silence grew in small room until the phone was answered. \"Jimmy, get your ass over here.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "angst"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-25"
}