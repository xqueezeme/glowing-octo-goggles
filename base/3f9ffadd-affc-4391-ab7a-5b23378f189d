{
    "title": "Blissfully Hooked Ch. 04",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nKyle Parker vs. Aaron Hunter\n\nDedicated to MADISONKAI\n\nAcceptance!\n\n***\n\nAs Aaron dished his food in the kitchen, he couldn't keep the goofy smile off his face. Kyle brought out that in him. Made him forget about his problems and just...be. In a way, though it had hurt to find out, he was grateful to whichever force that had made Kyle do what he did because he wouldn't have gotten to know him otherwise. But whatever force it was must have been one kinky, naughty force, Aaron thought with a soft laugh. He was happy.\n\n\"I take it you forgave him.\" Peggy Hunter drawled, leaning against the kitchen door.\n\n\"Oh my God, mum.\" Aaron gasped, his free hand going to his chest. \"You startled me.\"\n\n\"Sorry but don't blame me. I made enough noise to raise the dead but you were obviously too far gone in your thoughts to hear me. And if that look and laugh is anything to go by, it must have been some really good thoughts.\" Peggy said with a grin.\n\nShe rarely saw her son this happy. It was like there was an...inner glow. When he came in earlier and saw Kyle sitting with her, his first expression had been unguarded, showing so much desire and joy, she had known instantly that her son was in love. Then a mask had quickly dropped to cover that look, turning it hostile and that had really worried her because besides the fact that her son had a really mean temper sometimes, Peggy thought Kyle was an extraordinarily likable and pleasant person. At least now she knew for sure her son was gay.\n\nTo say it had never crossed Peggy Hunter's mind that her son might be gay, was not true. She had thought about the possibility. Aaron was a really handsome boy. In fact so handsome that, when he was a kid, strangers would give him gifts and show them kindness whenever they went out. Peggy knew lots of girls were dying to call Aaron their boyfriend. Some went as far as stalking him, to his annoyance. But Aaron seemed not to have any interest in them. Of course she knew Aaron had sex with some of the girls once in a while, but he was never ready to enter into any relationship with them as boys his age did. She used to wonder whether it was so because Aaron spent almost all his time between his studies and her, but realized her son was simply not interested in the girls. So yes, she had considered the possibility of him playing for the other team but since she had never seen him get close to any boy, had brushed it off. Now she knew better. Her son was in love with that Kyle Parker guy. And if the look in Kyle's eyes whenever he mentioned Aaron's name or whenever Peggy told him stories about Aaron was anything to go by, the feeling was mutual, Peggy thought. She just wanted her son to be happy and she had a feeling Kyle was a good person and would treat her son well. \n\n\"So... You love him.\" It wasn't a question.\n\n\"Mum...\" Aaron groaned. \"I hardly know the guy.\"\n\n\"That doesn't matter, hon.\" Peggy stepped into the kitchen to lean against the Island. \"You can't control or choose who you fall in love with. It just happens. I like Kyle. I think he's a good person.\"\n\n\"And you came to that conclusion in what...three hours?\" Aaron drawled.\n\n\"Hey, I'm older and wiser. I don't need to be with someone for years to know they have a good heart. He adores you, hon.\" Peggy said softly. \"Just know that I'm always here for you, baby.\"\n\n\"I know mum. Thanks.\" Aaron said around the lump in his throat. His mother had always been able to read him like a book. \"And yes, I love him.\" God it felt good saying it out loud, Aaron thought. \"I'm just...scared, mum. It happened too fast and I don't know whether I'm doing the right thing, whether he's going to hurt me...I just don't know anything.\" He finished with a sigh.\n\n\"Come here.\" Peggy said, opening her arms to her son, who placed his filled plate on the counter and went into those loving arms. \"That's the fear of the unknown my dear. You just have to think about how badly you want it, and then take a leap of faith.\"\n\n\"I want him with every breath in me, mum.\" Aaron murmured into Peggy's hair. \n\n\"Then go for it and make it work. Give it all you've got. Okay?\" Peggy's eyes, which looked so much like her son's, were filled with understanding.\n\n\"Okay mum. Thanks.\" Aaron answered, squeezing his mother briefly and then stepping out of her embrace. Talking to his mum always made him feel better. \"Did you remember to call a taxi for tomorrow?\"\n\nPeggy was going to spend two weeks with her sister in Florida. She had been dying to do that for a while but because of their finances, couldn't. Now that Aaron had some money they could live by, he'd encouraged her to go for that visit. It would do her a lot of good. Her flight was at five a.m. the following day.\n\n\"Yes. It'll be here by four.\"\n\n\"Good. Have you packed all that you'll need? Your drugs, enough dresses, underwear, your books...\"\n\n\"Yes Father.\" Peggy chuckled. Aaron sometime unconsciously treated her like she was the kid and that never failed to amuse her. She loved it. \"Thank you.\" She whispered.\n\n\"Thank you for having the patience to wait till now.\" Aaron said, reaching up to push Peggy's hair back from her face lovingly. His mother thought he worked for a movie studio and nothing more. He had explained that he had quit and taken all his entitlements since he had to prepare for his finals. She had bought it. But then, there was some truth in it...right? What she didn't know wouldn't hurt her. \"Please wake me up before you leave okay?\"\n\n\"I will. Good night.\" Peggy said drawing Aaron's head down to kiss him on both cheeks.\n\n\"Night mum.\" Aaron said as he watched his mother leave the kitchen. Then he took his food and a bottle of water and headed for his room and the man who had his heart.\n\n***\n\nAaron felt someone shake his shoulder and slowly came awake. The first thing he saw was a hairy male chest on which his cheek comfortably rested. He raised his head and saw Kyle's face, so peaceful in sleep. Then he turned, wondering who had been shaking him and saw his mother standing there gesturing that she was going. Aaron slowly and quietly got off the bed and followed his mother out of the room. \n\n\"Take care, hon.\" Peggy said hugging a still sleepy Aaron. \"I'll call when I get there.\"\n\n\"Where are your bags?\" Aaron asked, rubbing his eyes.\n\n\"The driver has already taken them out. Go back to bed. I'll call when we land.\"\n\n\"Say hi to Auntie Helen and everyone.\" Aaron said walking his mum to the door.\n\n\"I will. And tell Kyle I'll see him when I get back.\"\n\n\"Will do. Have a safe trip.\" Aaron said hugging Peggy tightly. He was definitely going to miss her.\n\nAfter the taxi sped off, Aaron locked the door and went back to his bedroom. At the foot of his bed, he stood and stared at the gorgeous hunk in his bed. The dark rakish overnight growth of hair on Kyle's face was so sexy Aaron groaned. They had talked till after three a.m. Talked about their lives and a whole lot of things. He'd told Kyle about his life and all the significant events that had taken place in it...which wasn't much. His dad had passed when he was only two years old, through a car accident. It had been just him and his mum ever since. And they had been okay till his mum's condition had robbed them of their little savings and peace of mind.\n\nKyle had told him about his business, his brother, his friends, his greatest fear which was the possibility of losing his brother, and his expectations in life. By the end of their talk, Aaron felt like he knew exactly who Kyle Parker was. And those crazy friends of his sounded like an interesting bunch. Kyle had invited him to his and Ken's thirtieth birthday party which he said was going to be fun. Though Aaron wasn't used to partying and being around lots of people, he'd promised to come. \n\nThen Kyle had apologized to him for having to reveal to his 'squad', as he referred to his friends, that he used to act porn. Aaron had merely shrugged. After all, till just a week ago, that was the work he did. Kyle had explained that he had sought their opinion on how to go about getting him to talk to him. And that's how the whole story had come out. Aaron really didn't mind. He couldn't say same for Kyle though. He had sounded like he wished he could turn back the clock, probably to even before Aaron had gone into that line of work. But Aaron had laughingly told him not to beat himself up. It wasn't Kyle's fault he had resorted to acting porn for a living.\n\n\"Had it not been for my acting porn, we would never have met, Kyle. So whatever happens, does for a reason.\" Aaron had said quietly. \n\nHe realized he was falling harder for Kyle with each passing minute and there was nothing he could do to stop it. It was terrifying because Aaron knew that if he allowed it, Kyle Parker would steal every ounce of his independence. He would own him. And Aaron couldn't see himself allowing that as he'd been independent for as long as he could remember.\n\n\"It's just that the mere thought of you having to go through all that hardship with no help is...ugh...\" Kyle had trailed off, running his fingers through his hair in frustration. A gesture that Aaron was beginning to adore about him.\n\n\"Hey, I'm okay. Things happen in life just to strengthen us. I've learnt a lot this way. Really, I'm fine.\" Aaron had whispered, as he took Kyle's cheeks in both palms and stared into his lovely hazel eyes. Then Aaron leaned in and took Kyle's lips in a sweet kiss, a kiss that couldn't mask just how strongly he felt about Kyle.\n\nWhen they came up for air, Kyle drew Aaron's head onto his chest and gently rubbed him on his back, soothingly. Kyle's hold, the way he all but wrapped himself around Aaron, was so tender and sweet, Aaron wanted to remain inside those arms forever. He felt a connection, a bond which had not been there before their talk and he knew Kyle felt it too. Aaron yawned and snuggled even closer to Kyle.\n\n\"I didn't see your car parked out front when I got here.\" Aaron muttered against Kyle's chest.\n\n\"I'm sure you did. Black Audi.\" Kyle muttered, yawning too. \n\n\"Oh, that.\" Who could have missed that sweet latest model of Audi Q7 parked out front? Aaron just hadn't known it was for Kyle at the time.\n\n\"I don't plan on leaving if that's what you're driving at.\" Kyle chuckled.\n\nThat got a laugh out of Aaron. \"Of course that's not what I'm driving at, you jerk. Look at the fucking time. I wouldn't allow you to go even if you wanted to.\"\n\nAaron felt Kyle's hand still on his back where he had been stroking his spine. Then he resumed stroking, using just his fingertips, drawing a moan from Aaron.\n\n\"Aaron...\" Kyle breathed, then pressed a kiss into Aaron's hair. \n\nAaron could sense Kyle wage a battle within himself for a moment, visibly struggling to keep his emotions reined in. Then with a deep sigh, obviously accepting whatever decision he'd been silently contemplating, Kyle had relaxed against him and they had drifted off to sleep.\n\n**\n\nAnd that was how they remained till Peggy shook Aaron awake at four a.m. after a mere twenty minutes of sleep.\n\nNow standing at the foot of the bed looking at the man he had come to love within such a short time, Aaron couldn't help but run his eyes over that sexy bared flesh. That powerful hot body looked good enough to be licked all over and Aaron's mouth watered to do just that. They had both slept in their boxer briefs, enjoying the feel of flesh against flesh. It had felt so good.\n\nAaron's eyes suddenly got drawn to the growing bulge behind Kyle's boxers and quickly moved up to Kyle's face. Aaron gasped when his eyes landed on brilliant hazel eyes. Shit! How long had Kyle been watching him ogling him?\n\n\"Unless you plan on doing something about that, I suggest you come to bed and stop looking at me like that.\" Came the sexiest voice Aaron had ever heard. Kyle's voice sounded deeper and rougher than he'd ever heard it. Sounding all slow and sleep-roughened, it sent a delicious shiver of awareness through Aaron. He got so hard so fast it scared him. \n\nFuck!\n\nAaron moved into Kyle's outstretched arms to lie on top of him. Of its own accord, his hips began to move, rubbing his hard-on against Kyle's through their boxers.\n\n\"Oh fuck, baby.\" Kyle groaned, coiling an arm around Aaron's waist to hold him still. \n\nKyle then reached down with his other hand to pull Aaron's boxers off. Then raising his own hips slightly off the bed, Kyle wiggled out of his boxers, both men gasping when their bare erections touched. Then Kyle gripped Aaron's hips and both instantly went to work, humping each other, sliding and rubbing together, their cocks already slick with pre-cum.\n\n\"Oh God, Aaron.\" Kyle gasped brokenly when he felt Aaron's lips at that sensitive spot at the base of his neck. Aaron was definitely trying to get him to lose control and that's exactly what happed. Kyle lost it.\n\nGroaning, Kyle let his head drop back in pure bliss as he rocked against Aaron, relishing in the erotic sliding and grinding of their slick cocks together. Kyle brought Aaron's head up from where it was stuck on his throat tormenting him, and sought those sweet lips with his, devouring Aaron's mouth hungrily, moaning lustfully into the kiss even as they continued to rock against each other. It was fast, it was furious.\n\nAaron kissed Kyle back for all he was worth, his hands moving to the sides of Kyle's head to tenderly hold him as he passionately sucked on Kyle's lips, never once pausing in their rocking. They writhed together, humping like teenagers, and it felt fabulous. \n\nWhen they came up for air, Aaron buried his face against Kyle's neck, moaning uncontrollably as he thrust against him. Then Kyle brought a finger to his own mouth, licking it and getting it wet and slick. Then pulling Aaron's legs apart with his own, Kyle slid his finger down along Aaron's crack till he got to that puckered hole. Then he gently slid his finger deep into Aaron's heat, going as deep as he could.\n\n\"Oh fuck, Kyle.\" Aaron moaned, opening his thighs even wider to give Kyle better access. Till then, he didn't know just how much he'd missed having even a piece of Kyle inside him. It felt so good. Oh God, it was so good.\n\nWhen Kyle found what he was looking for...that bundle of nerves inside Aaron...that sweet spot, and rubbed hard against it, Aaron went wild.\n\n\"Oh hell, gonna come,\" Aaron just couldn't stop his orgasm. He was totally out of control, bucking wildly against Kyle, his rhythm totally off. With a scream, he erupted, covering them both in a hot, sticky puddle. \"Fuuuuuk!\"\n\nKyle kept rubbing against that gland, milking Aaron till he felt like he was going to pass out. Aaron screamed so hard, Kyle was thankful his mother was not in the house. Before long, however, Kyle couldn't stand the erotic smell of cum and the pleasurable feeling of his own cum churning inside his balls. He just had to come. He eased his fingers from the tight, convulsive grip of Aaron's channel and grabbed at his hips with barely controlled strength. Kyle moaned brokenly as desire unfurled hot and deep in his chest and then spiralled lower, urgent and demanding. Growling deep in his throat, he thrust hard a couple of times, then came so hard black spots danced in his vision.\n\n\"Oh fuck.\" Kyle shuddered and shook as he felt the wet heat spreading between them. Pleasure didn't even come close to what he felt. His hands kneaded Aaron's hips as he tried to bring his breathing under control. \"God, what you do to me, baby.\" Kyle gasped.\n\nAaron, who had regained some of his senses, grinned at the drugged look on Kyle's face and leaned down to kiss him soundly. \"You are so fucking delicious.\" Aaron murmured against Kyle's lips just before he sucked Kyle's lower lip into his mouth erotically. \n\n\"Fuck, baby.\" Kyle growled when Aaron finally released his lip. He couldn't talk, couldn't think of the words to tell Aaron how amazing he thought he was. He just stared at Aaron.\n\nBefore they had gone to sleep at dawn, Kyle had been so overcome with the feelings Aaron brought out within him. He was flooded with so many emotions he wasn't used to and that scared the shit out of him. Even now, Kyle could feel his hands trembling, could feel the control he prided himself on, melting from the inside out. He was losing it. Losing it in a wave of heat and pleasure that made no sense. But there was one thing he knew for a fact...\n\nHe'd lost his heart...and not just a piece. \n\n\"That was fucking incredible.\" Aaron whispered. \"You good?\" He asked a still dazed Kyle.\n\nKyle could do no more than nod. At his nod, Aaron leaned down and took another kiss, this one very gentle and so sweet. He could still see how shaken Kyle was and loved the fact that he could do that to Kyle. Aaron relaxed against Kyle, dropping tiny kisses on his chest.\n\n\"Wanna have a shower?\" Aaron asked between kisses.\n\n\"Will it be with you?\" Kyle asked, his voice slightly shaky.\n\n\"What do you think? I won't have it any other way. Ready?\" Aaron asked rolling off Kyle.\n\n\"Do you have lectures today?\" Kyle asked.\n\n\"Yep. Why?\"\n\n\"I'll miss you.\" Kyle said gruffly. \n\n\"Me more. Will I be seeing you this evening?\" Aaron kept his fingers crossed behind him. He knew Kyle was a busy man but...\n\n\"Tell you what, why don't you drive me home, take the car to school and come pick me up from the office after school so we can have dinner before we go back to my place? What do you say?\" Kyle looked at Aaron with so much hope in his eyes, Aaron smiled.\n\nThen his eyes widened when Kyle's words struck home. \"Wait. You want me to drive your car?\" Aaron asked, stunned.\n\n\"Sure. Why not? Have lectures tomorrow?\"\n\n\"Nope. No lectures on Saturdays.\" Aaron's voice sounded hoarse. Did Kyle really want him to drive that sleek, obviously newly purchased Audi Q7? And even take it to school? Seriously? \n\n\"Alright then, pack something. So you can sleep over tonight and tomorrow night too, after the party. Okay?\" When Kyle noticed that Aaron was just staring at him and not saying anything, he added softly, \"Please.\"\n\nWith a sigh, Aaron stood up and stretched his hand out to Kyle without answering. \"Come on, let's go take a shower. Then we can discuss it. I can't think with you looking like that.\"\n\nKyle laughed and swung his legs off the bed and allowed Aaron to pull him to his feet. \"I'm not taking no for an answer you know?\"\n\nAaron chuckled and nodded his head to indicate that he knew Kyle wasn't going to accept anything but a yes from him. What was he going to do with the gorgeous hunk driving him insane with every single word and action? He loved the man so fucking much it was scary.\n\n***\n\n\"You have to work with me on this one Ken.\" Kyle groaned? \n\nHe was sitting at the beautiful pool area in Ken's house, trying to convince his brother to give Aaron the impression that he'd seen their video, if Aaron should ask him when they met at their birthday party the following day. He had to prepare Ken because he didn't know whether Aaron would ask Ken about the video when they saw each other.\n\n\"Ky I don't think this is a good idea.\" Ken said, running his fingers through his hair, the gesture much like his brother's. \"This could blow up in your face. Just tell him the truth. That you can't allow another person to watch you two...fucking your arses off.\"\n\n\"Jerk.\" Kyle chuckled. \"You have no idea how stubborn he is, Ken. He will insist on paying me back.\"\n\n\"So give him a fucking job.\" Ken exclaimed.\n\n\"You're missing the point. I don't want him to think I'm a manipulator. He...\"\n\n\"Aren't you?\"\n\n\"Fuck you.\" Kyle said darkly, frowning even more fiercely when his brother burst into uncontrollable laughter. \n\n\"How do I even bring this conversation up? Hey Aaron, I saw you and my brother fucking like rabbits. It was really...\"\n\n\"You don't have to say that, you idiot. Wait till he brings it up. Then just drop hints that you've seen it. Be subtle dude. Even you should be able to swing this.\" Kyle drawled.",
        "\"Ow come on Dick Shlong, at least give me something to work with. Some details would...\"\n\n\"I can't.\" Kyle whispered. \"Maybe I could have given you details right after it went down. But not now. I just...\" Kyle trailed off, a faraway look in his eyes.\n\n\"You're in love with him.\" Ken said softly. When Kyle neither admitted nor denied it, Ken sighed. \"You should be very careful Ky. Have you told him you've taken his videos down?\" Ken asked quietly.\n\n\"Why does he have to know? It's not like he's still in the business. I'm only...\"\n\n\"Listen to me Ky, it's his 'life'.\" Ken gave the word quotations with his fingers. \"You owe it to him to tell him what you've decided to do with it. From the little I know about him and what you've told me, Aaron is a no-nonsense kind of person and won't take crap from anyone. You have...\"\n\n\"Lunch is ready guys.\" Stephen called from inside the house, interrupting Ken. Stephen loved to cook and the brothers never missed an opportunity to enjoy his scrumptious meals whenever he was in town.\n\n\"Coming, Love.\" Ken threw over his shoulders. \"Look here bro, for any relationship to work, there should be communication and honesty. Don't fuck this up.\" Ken stood up and stretched. \"Come on, let's go eat.\" Ken turned towards the house.\n\nKen had been a bit skeptical when he realized just how far gone his brother was on Ron Hunt. The guy was a fucking porn star...no pun intended. But then he had quickly realized, as Kyle kept talking about Aaron, just how much his brother adored Aaron. He never dreamt he would ever see his brother that crazy about anyone. He had immediately accepted it. All he hoped for was that Aaron felt as strongly about his brother as he did about him. The icing on the cake had been when Kyle told him that Aaron was no longer in the porn business but was rather concentrating on his education. He had been even more thrilled when Kyle had told him he'd taken Aaron's videos off the internet and paid to ensure his videos never went out again. That was a brilliant move. He didn't want any scandal racking their lives. \n\n\"So, you going to go back to chemo?\" Kyle asked his brother, tongue in cheek.\n\n\"Hell no!\" Ken exclaimed.\n\n\"But I won the bet.\" Kyle whined pitifully. \n\n\"And where's the evidence?\" Ken drawled and then burst into laughter at the look on Kyle's face. \"Oh my God, you should see your face Ky.\" Then he erupted into more laughter.\n\n\"You're an asshole you know that?\" Kyle growled, coiling an arm around Ken's neck.\n\n\"Hey leave my boyfriend alone, you bully.\" Stephen called out from inside the house.\n\n\"Stay the fuck out of this, Stephen.\" Kyle shouted back, trying to keep a laughing wriggling Ken from escaping from under his arm. \n\n\"Please, please.\" Ken laughed delightfully till he finally pulled away from Kyle. \"On a more serious note Ky, you knew very well I wasn't going to go back to chemo.\"\n\n\"I know.\" Kyle muttered, looking resigned. \n\n\"Fuck this.\" Ken muttered, all the laughter disappearing from his eyes at the look on his brother's face. \"Listen, I'm okay. Don't worry too much about me. Remember what Josh said?\"\n\n\"Well, that's dependent on you going through the full treatment.\" Kyle growled.\n\nJosh Broody, Dean's big brother and Ken's doctor, had told him once that there was a chance of recovery for the type of non-Hodgkin lymphoma that Ken had. He had explained that generally, a patient was likely to be cured if their non-Hodgkin lymphoma was in their lymph nodes, like in Ken's situation, rather than their bone marrow or lungs. Besides, the fact that Ken was young and healthy, and the cancer had been caught early, was also a plus, Josh had encouraged. All the excruciatingly painful treatments Ken had to undergo was to help cure that type of cancer, which according to the experts, was very possible.\n\n\"I'm good Ky. I went to see Josh last Monday. And he said there was massive improvement. Of course he did say I should complete the treatment but you already know my stand on that.\"\n\n\"So why the fuck don't you just complete it?\" Kyle bellowed, pinching the bridge of his nose in frustration. He could already feel a massive headache coming on. He wanted to literally shake Ken till his teeth rattled inside his mouth. He was too fucking stubborn.\n\n\"You.\" Ken said softly.\n\n\"What?\" Kyle whispered. \"What do you mean, me?\"\n\n\"Why do you think I stopped the chemo?\" Ken asked softly. \"Yes it is painful. But the look on your face each time I had to go through that...it always killed me inside. Besides, I was almost done with the treatment schedule anyway, right? I'll keep taking my drugs, Ky. Promise!\" Ken said with a smile, so much like his brother's.\n\n\"Don't fucking put this on me bro. You know I want you to be well. And if that's what it takes, then we both have to be strong and endure.\" Kyle said drawing his brother into a tight hug.\n\n\"I won't do it Ky.\" Ken muttered.\n\nKyle sighed. \"I know.\" He whispered, tightening his hold on Ken. But then, he had always known Ken wasn't going to change his mind. He just had to try...even go to outrageous lengths to try and change Ken's mind. \"Come on, let's go eat before your boyfriend comes after us with a gun.\n\nAs the two headed back inside for lunch, they both had grim looks on their faces. For Ken, he hated that he had made his brother sad but he honestly didn't see himself going through that terrible experience again. And for Kyle, at least he could hold on to the fact that there was an improvement in his brother's case. He made a mental note to talk to Josh Broody after lunch. He just wished Aaron were there to hold him and tell him everything would be fine. Kyle froze! Where the fuck had that come from? What scared Kyle even more was the fact that he really wished Aaron was with him right then.\n\nFuck!\n\n\"Hey, why the sad faces?\" Stephen asked quietly at the door, looking from one brother to the other. \"You're both alive, and that's the most important thing so cheer up.\" He said, drawing Ken into his arms for a sweet lingering kiss. \n\n\"Okay, get a room assholes.\" Kyle growled. \"Where's the food?\" Kyle ruffled Ken's hair as he squeezed past the love birds.\n\n\"I love you.\" He heard Stephen whisper to Ken and smiled to himself. Stephen was a good man. Too bad he couldn't convince his stubborn brother to continue his treatment.\n\nKyle sighed as he headed towards the dining area. \"Please send down an angel to convince him.\" He muttered under his breath, hoping that his short prayer had been heard.\n\n***\n\nAs Aaron parked beneath the huge KYPA building, he groaned, wondering what Kyle's secretary or assistant or whatever she called herself...Bertha, was going to think when she saw him. He did create a scene that day...fuck. He contemplated calling Kyle to come down but decided in the end to go up instead and damn the consequence.\n\n\"You!\" Bertha exclaimed immediately she looked up and saw Aaron. Then she reached for the phone. \"I'm calling security.\"\n\n\"Please you don't have to.\" Aaron talked fast. \"Bertha right? Kyle is expecting me. I promise I don't mean any harm.\" Aaron's eyes widened when he noticed Bertha wasn't buying what he was saying.\n\n\"Alex, hold on. I might need your help.\" She said to whoever was on the line, glaring at Aaron the whole time. \"Keep talking.\" She hissed at Aaron. She didn't care if he looked as sweet as ice cream. He had assaulted her boss and that was all it took not to like him.\n\nAaron cleared his throat nervously. The little lady looked very intimidating. \"Listen Bertha, I'm sorry for the way I acted. Not for hitting your boss...he deserved it. But I'm sorry for barging in there when you tried to stop me. Please forgive me.\"\n\n\"Yes, he hit him.\" Bertha said to whoever was on the line. He'd obviously heard Aaron say he'd hit Kyle. \"No Alex, don't come up. He doesn't look like he's here to murder anyone today. Just stand by okay? Good.\" She finally hung up and pursed her lips. \"Why...\"\n\n\"Aaron.\" They both heard Kyle's deep voice and turned towards it. \"Come on in.\" Kyle said, gesturing for Aaron to come into his office. He was actually about leaving his office for another when he saw Aaron talking to Bertha.\n\nAaron almost drooled at the sight of Kyle. His elegant designer suit fitted him perfectly, hinting subtlety at all sorts of muscles. And there was an air about him that screamed power and magnetism which was totally sexy. Christ, the man looked good enough to eat. Aaron cleared his throat, noticing from the corner of his eye, how closely Bertha was watching at him. She probably thought he was nuts. \n\n\"I'll be right there Kyle.\" Aaron said, and shifted his attention back to Bertha. \"I'm sorry.\" He said with all the sincerity he could master. \"Please forgive me.\"\n\nBertha glared at Aaron for a full minute. \"Don't ever do that again.\" She finally said quietly. \"He's a very good person. Whatever he did, I'm sure he hadn't meant to hurt you. Don't ever hit him again.\"\n\n\"I won't, I promise. Now, am I forgiven?\" Aaron gave Bertha a dazzling smile which she simply couldn't resist. \n\n\"You are.\" She said, getting to her feet to take Aaron's outstretched hand.\n\n\"Thanks. I'm Aaron.\" Aaron said.\n\nBertha shrugged prettily and responded, \"Bertha.\"\n\n\"Good to meet you Bertha. May I see Kyle, please.\" Aaron asked with a grin.\n\n\"Please.\" Bertha responded with a soft laugh, gesturing towards Kyle's office.\n\n\"Thanks Bertha.\" And with a slight bow of his head at Bertha, Aaron turned towards Kyle's office. He could still hear Bertha laughing softly behind him. \n\nWhew, that went well, he thought. He knew he definitely had to do something about his shitty temper. He was still smiling to himself when he entered Kyle's office, then he gasped in surprise when Kyle pulled him fully into the office, closed the door, slammed him against the door and covered his mouth with his. Aaron's gasp turned into a moan as he kissed Kyle back. God, he'd missed those lips.\n\n\"What the fuck took you so long?\" Kyle husked when they came up for air. \"What were you saying to her?\"\n\n\"Bertha? I...\" But before Aaron could finish his sentence, Kyle was kissing him again, rubbing his hard-on against Aaron's rapidly hardening cock. \"Fuck Kyle,\" Aaron groaned when Kyle eventually released his lips. \"You're going to make me cream my pants if you keep this up.\"\n\n\"I'd love to see you do that, baby. I've missed you so fucking much.\" Kyle said gruffly, drawing Aaron towards the cozy coach in the office. \"What the fuck did Bertha want?\" Kyle growled, pulling Aaron to sit beside him on the coach.\n\n\"I was apologizing for my disgraceful actions the other day.\" Aaron chuckled.\n\n\"I thought it was hot.\" Kyle drawled.\n\n\"Who's asking you?\" Aaron laughed. \"You're so fucked up dude. And I missed you too. Couldn't concentrate on a word the lecturers were saying.\" Aaron moved to straddle Kyle. \"I just wanted to be with you.\" He whispered, leaning down to draw one of Kyle's ear lobes into his mouth, the warmth of his breath a caress against the sensitive shell of Kyle's ear.\n\n\"Oh fuck, baby.\" Kyle groaned, thrusting up against Aaron, wishing there were no clothes between them. \"God, I want you.\" He whispered, just as Aaron took his lips and kissed the living daylights out of him.\n\n\"I want you too.\" Aaron gasped when he came up for air. \"Let's get outta here.\"\n\nKyle groaned. \"Give me some time to calm down. Then we can leave.\" Kyle drew Aaron's lower lip into his mouth and sucked erotically on it, causing Aaron to give a lusty wail.\n\nAaron tore his mouth away from Kyle's with a groan. \"Is that the best way to calm down?\"\n\n\"Sorry.\" Kyle chuckled shakily. He was damn close to tearing the clothes off Aaron and having his way with him. \"Can I just...hold you?\" There was something in Kyle's voice that Aaron couldn't put a finger on.\n\n\"Sure. You okay?\" \n\n\"Never better.\" Kyle said softly and wound his arms around Aaron. \n\nAnd that was how they remained till Bertha knocked on the door a while later. Aaron stiffened and tried to move but Kyle wouldn't allow him.\n\n\"Shhh, I'm not done holding you.\" He husked softly, then called out, \"Come in.\" He already knew it was Bertha.\n\n\"Sir, I'm...\" Bertha trailed off when she saw the position her boss and Aaron were in. No wonder her boss was never with the ladies for long. He was gay after all. What a waste! But she knew for a fact that he'd had steamy but short affairs with some of the ladies. That made him...bisexual...right? Cool, Bertha thought with a smile. Her dad claimed he was gay now after being separated from her mother for ten years, so she could relate.\n\n\"You're off...right?\" Kyle asked with a smile in his voice. He could see the wheels turning in Bertha's head.\n\n\"Yes Sir. Is there anything you want me to do?\"\n\n\"No. See you at the party tomorrow. All set?\"\n\n\"Everything is on course. Happy birthday in advance, Kyle.\" She said, making Kyle laugh softly. She did call him Kyle whenever they were alone, though Kyle had insisted she called him by his given name all the time. \n\n\"Thank you Bertha.\" Kyle responded.\n\n\"Bye Aaron.\" She said with a grin.\n\nAaron raised his head from where it lay on Kyle's shoulder and turned to look at Bertha. \"Bye Bertha. See you tomorrow.\" Aaron smiled at the little lady. He liked her. \"Oh and save me a dance.\"\n\nBertha laughed. \"You got it.\" Then with a little wave, she was gone, leaving the two sexy men to go back to their cuddling.\n\n\"You wanted her to see.\" Aaron said softly.\n\nKyle chuckled. \"More like I wasn't ready to let you go. But yes, I wanted her to see. It felt good to let someone know you're in my life now. Do you mind?\"\n\nAaron shook his head. \"That's okay. But a little too late to ask though, don't you think?\" Aaron drawled, leaning forward to drop a kiss on Kyle's lip and getting off his lap to stand. \"I'm hungry Kyle. Can we go now?\"\n\n\"Sure.\" Kyle stood up and rolled his neck from one side to the other with a grimace on his face. \n\nAaron didn't miss that. Kyle looked tired. \"How about I give you a massage when we get to your place? My mum says I give the best massages.\"\n\nKyle chuckled. \"Did she?\"\n\n\"Is that a challenge I detect?\" Aaron chuckled. Both hands were stuck in his back pocket and his head was tilted to the side.\n\nKyle's breath hitched in his throat as he just stared at Aaron. Aaron looked so sexy right then, Kyle had to make an effort to remember what he'd asked. \n\n\"A massage sounds good, thanks.\" Kyle gulped. God, the kid was sexy. Talk about 'hotter than hot'. \"Shall we?\"\n\nAaron hadn't missed Kyle's look. It felt damned good to be appealing to the man who rocked his very soul. He didn't think it was necessary to tell Kyle the feeling was mutual. Aaron knew for sure, Kyle was already aware. \n\n***\n\nAt the restaurant, they ordered steaks, mushrooms, baked potatoes and salad. The food was good but Kyle couldn't concentrate on it. Heat flared in his eyes whenever Aaron popped anything into that sexy mouth of his. All Kyle wanted to do was give those lips something else to do. He could either plunder it with his tongue, or feed his cock...\n\n\"Fuck!\" Kyle swore softly.\n\n\"Don't you like the food? Or would you rather I fed you.\" Murmured Aaron, voice low and suggestive, sending a thrill directly to Kyle's cock. \n\nKyle's nostrils flared and his eyes went dark with lust. Aaron dipped a mushroom into the sauce and offered it to a dazed Kyle. With a growl, Kyle opened up and took the offered mushroom. But before Aaron could retrieve his fingers, Kyle captured his wrist in his fist, and then gently and sensually, drew Aaron's fingers into his mouth.\n\n\"Oh my God.\" Aaron gasped as he felt his cock jerk inside his pants. \n\nWhen Aaron felt Kyle's tongue flicking over his fingers, light and easy, he started panting, completely hard. He willed Kyle to stop, but didn't have the will power to pull his fingers free. He could feel the precum ooze out of his cock, soaking his boxer briefs. His eyes locked on Kyle's, getting totally lost in their hazel depths. Aaron couldn't sit still as Kyle licked each finger clean. A soft exhalation parted his lips as pleasure whipped through him, sending sharp flares of sensation rushing through his system. He knew he was on the verge of creaming his pants, knew he had to stop Kyle...\n\n\"Kyle please...\" Aaron could barely recognize his own voice. He was drunk on pleasure. He was so close... He tried to control it. He fought it... \n\nThen Kyle drew one finger into his mouth and started to suck on it. Aaron lost it! His whole body jerked hard as he shot his load, low sounds gurgling in his throat as he shuddered uncontrollable. He was blown away by the intensity of the orgasm that tore through him. His eyes glazed over with a look of helpless pleasure and a touch of raw vulnerability as they remained trained on Kyle's.\n\nKyle felt and saw everything and almost creamed his own pants. \"Fuck baby,\" he breathed, releasing Aaron's fingers, \"that was fucking hot.\" \n\nAaron couldn't talk. He couldn't believe he'd actually come in his pants like a fucking teenager. He was mortified. He wished he could hide the heat in his cheeks but there was nowhere to hide.\n\n\"Sorry.\" He murmured.\n\n\"You don't have anything to be sorry for, baby. That was the most erotically beautiful thing I've ever seen in my life.\" Kyle said huskily. \n\n\"You got your wish.\" Aaron whispered, referring to Kyle's earlier comment in his office, about loving to see Aaron cream his pants.\n\n\"I sure did.\" Kyle grinned and then promptly groaned when Aaron's tongue came out to lick his slightly parted lips. \"Fuck. Let's get outta here.\"\n\nAnd that's exactly what they did after Aaron made a quick dash to the restroom.\n\n***\n\nThe ride to his house was Kyle's most tortured ride ever. His cock was so hard and painfully straining against his zipper, he was sure he'd get a stroke if he didn't find relief soon. He would have given anything to be inside Aaron's heat that very moment. His cock was weeping at the thought of fucking Aaron and his balls ached so bad it felt as though weights had been attached to them.\n\n\"Slow down Kyle.\" Aaron said softly beside Kyle and he instantly eased off the gas.\n\n\"Sorry.\" He croaked. All he could think of was getting them home...fast. \"The fuck...\" Kyle exploded when he saw the lights ahead.\n\n\"Maybe there's been an accident.\" Aaron said. \"I can see police cars up ahead.\"\n\n\"Shit!\" Kyle muttered. That was all he needed. A fucking hold up. He stopped behind the last car and put his gear on neutral. \n\nAaron looked at Kyle's dark expression for a while and sighed. The man was wound up real tight. \"I'll be right back.\" He said getting out of the car.\n\nAaron run forward till he saw an elderly policeman and asked what was causing the hold up. \n\n\"It's just a truck that overturned. We're trying to get it off the road so that you people can move. Give it about thirty minutes, son.\"\n\nThat was more than he needed, Aaron thought. \"Thanks Officer.\" Aaron said and sprinted back to Kyle.\n\n\"It's a truck. They're getting it off the road so that we can go.\" Aaron said as he leaned across Kyle's thighs. \"Now look out for any approaching cops.\" He said reaching for Kyle's zipper.\n\n\"What the fuck do you think you're doing, Aaron?\" Kyle couldn't keep the incredulity out of his voice.\n\n\"Getting the edge off.\" Aaron replied smoothly, pulling out Kyle's pulsing wet cock. \"Cry me a river.\" Aaron muttered teasingly, stroking his thumb over the leaking slit.\n\n\"Fuck you.\" Kyle gasped. \"Baby, I don't think...\"\n\n\"Shhh. If I'm going to massage you, I need to get the edge off first.\" Aaron murmured, running his hot tongue against the sensitive flesh just beneath Kyle's ear. That touch sent a surge of blood racing through Kyle's body, straight to his dick and in that instant, every sense of caution fled from Kyle to be replaced by the need for release. \"You're strung as tight as a bow.\" Aaron murmured, stroking Kyle's cock, which he felt had grown even bigger and harder. ",
        "Kyle's uncontrollable moans were music to Aaron's ears. He turned Kyle's head and took his lips in a breath-stealing kiss, a hard, hot, passionate kiss that Aaron had been dying to land from the moment he'd orgasmed inside the restaurant. \n\nAaron broke off the kiss and in a lithe move, leaned down and sucked the head of Kyle's wet cock into his mouth.\n\n\"Oh fuck baby.\" Kyle could barely hold back a gasp of delight as Aaron suck him hard and fast. \n\nKyle's backside came off the seat, his eyes sliding shut despite his attempts to keep them open as he knew he had to watch out for cops. To hell with the cops, Kyle thought. A tsunami could happen that very moment and Kyle knew he wouldn't notice a thing, with Aaron's lips around his cocks. It was hot, wet and perfect. What Aaron was doing to him felt so good it was indescribable.\n\nAaron's goal was to get Kyle off before the line started moving. He was on a mission. Taking in a deep breath, he took Kyle in, swallowed him down, his throat working around that cock even as it entered his throat.\n\n\"Christ baby.\" Kyle gasped. \"You've got an amazing mouth.\" Kyle's muscles rippled, his thighs trembled so violently he knew he would have fallen had he been standing. He could feel Aaron's suction all the way to his toes. His hands moved down to tangle in Aaron's hair, not to direct him, but just to hold him.\n\nWhen Aaron swallowed around his cock and hummed deep in his throat at the same time, Kyle knew it was over. With a shout of Aaron's name and a snap of his hips, he erupted into that hot mouth. Aaron didn't miss a drop. He sucked and swallowed till he'd milked Kyle dry, before he pulled off the cock that was making his puckered hole twitch. He wanted Kyle inside him so bad he shivered.\n\nBlowing that cock, and the thought of having it deep inside him, got Aaron so hard and uncomfortable, he had to unzip his pants to give his dick some relief. Kyle pulled Aaron up and crushed his mouth on his, tasting himself on Aaron's lips.\n\n\"Better?\" Aaron asked huskily when Kyle finally released his lips.\n\nKyle nodded. \"That was amazing. Thanks.\" He felt so much better.\n\nAaron tucked Kyle's cock away and zipped him back up. \"Anytime.\" He said quietly and moved back to his seat. He wanted Kyle so bad, he couldn't even sit still. Fuck! \n\n\"Hey, are you okay?\" Kyle asked, his voice full of concern.\n\n\"I'm good.\" Aaron responded, leaning across the space between them to seek Kyle's lips. Their mouths met in a soft kiss which drew a moan from both of them. \"I just want you so bad right now, it's almost painful.\" Aaron muttered against Kyle's lips. \n\n\"Oh baby.\" Kyle groaned, noticing that the cars had started moving. Aaron noticed too and reached down to zip up but Kyle stopped him. Aaron's dick looked painfully hard. Kyle shrugged out of his jacket and threw it over Aaron's lap.\n\n\"Thanks.\"\n\n\"Don't thank me just yet.\" Kyle chuckled. His chuckle turned into outright laughter at the wary look that appeared on Aaron's face. \"Don't worry. I'm only going to try and help you.\" Kyle said, driving past the police point. Then he slipped his right hand under the jacket covering Aaron's erection and touched him.\n\n\"Oh, sweet Jesus.\" Aaron gasped. \"Kyle please stop. I want us to get home in one piece.\"\n\nKyle's heart missed a beat. He loved how Aaron had called his place home. Kyle groaned silently. He was such a sappy fool. But what he wouldn't give to make it real. \n\n\"I'm the one at wheel here dude. Relax.\"\n\nAnd Aaron did just that. With his eyes closed and head thrown back in bliss, he enjoyed the soothing strokes of Kyle's hand. It was obviously not meant to get him off, but it felt damn good.\n\nAt his gate, Kyle typed in a code and the gate opened. He lived in a really classically modern three-story house with a huge compound. He'd told Aaron in the morning when he'd come to drop him off that his friend, Dean, had designed the house. It was absolutely beautiful.\n\nKyle drove into a garage which had opened automatically for then and parked. Aaron zipped up and got out of the car, counting the cars parked in there. He counted seven luxury cars and two powerful looking motorbikes.\n\n\"Do you really need all this?\" Aaron breathed, still checking out the cars.\n\n\"No I don't.\" Kyle chuckled. \"I like them.\"\n\n\"Spoilt brat.\" Aaron muttered.\n\nKyle laughed and coiled an arm around Aaron's neck. \"What's your favourite car?\" Kyle asked as he walked Aaron towards the elevator.\n\nAaron shrugged. \"I'm not really into cars.\"\n\n\"Ow come on, there must be a car that you like.\" Kyle persisted.\n\n\"Nope.\" Aaron laughed. \n\n\"Alright, give me a name of any car you think is nice. Think about all the cars you've seen. Which one do you feel is...cool?\" Kyle asked craftily as the elevator started its ascent.\n\nAaron couldn't control his laughter. \"What am I? Three years?\" He laughed even harder when Kyle dissolved into laughter at his question. \"Alright let me think.\"\n\nAaron tried to look like he was lost in thought. He bit his lips in mock concentration as he stared into space. \n\n\"Don't do that.\" Kyle said huskily, all laughter gone from his voice.\n\n\"Do what?\" Asked a confused Aaron.\n\n\"What you were doing to your lips. Makes me wanna fuck that mouth.\" Kyle breathed, taking a step towards Aaron. He however paused mid-step when the elevator pinged and opened on the top floor...where his bedroom was. \"Come on.\" Kyle turned and left a stunned and aroused Aaron in the elevator car, staring after him.\n\n\"Christ.\" Aaron breathed, his cock so hard he didn't know whether he could walk. \n\nWhat was it about Kyle Parker? With just a sentence, he could turn his insides to mush. Taking a deep breath, Aaron walked slowly out of the elevator and down a short corridor to Kyle's huge bedroom.\n\n\"You can go take a shower if you want to.\" Kyle said from a corner of the bedroom. \"I'll bring out the stuff that you'll need for the massage. Then you can set it up whilst I take a turn.\"\n\nAaron walked up to Kyle, reached up to tug his head down, and captured his lips in a toe-curling kiss, a kiss so hot both men moaned uncontrollably. \"Shower with me.\" Aaron husked when they came up for air.\n\nBut Kyle started shaking his head even before Aaron finished his request. \"Bad idea.\"\n\nAaron nodded and went up on his toes to drop a kiss on Kyle's lips. God, he loved kissing Kyle. He was like a fucking drug to his system. Damn! In the en-suite bathroom, Aaron stripped and got into the shower, leaving it on cold. He needed to regain some control damnit!\n\nBy the time he was done with the shower, Aaron felt much in control. Using a spare brush, he brushed his teeth and left for the bedroom with just a towel around his waist. Kyle stood up from his perch in front of a tiny music console and met Aaron in the middle of the room, then leaned down to nuzzle Aaron's neck.\n\n\"God, you smell divine.\" He breathed. \"Alright, my turn. That, in the jar, is a massage gel.\" Kyle pointed to a big jar beside a wide air mattress at the foot of the bed. \"I've already warmed it so just add the amount of water you want. You're welcome to choose the music you prefer.\" Kyle pointed in the direction of the music console. \"See you in a bit.\" With that, he disappeared into the bathroom.\n\nWhen Kyle stepped back into the bedroom in all his naked glory after his shower, he was amazed at the transformation. The lights were all off save for the light from candles placed at vantage points in the room. There was soothing classical music playing, the surround sound effect and its melodious power could be felt within the very soul. The ambiance alone got Kyle hard before his eyes landed on a now naked Aaron, sitting on the couch in the corner of the room.\n\n\"Fuck!\" Kyle breathed.\n\n\"Why are you standing there?\" Aaron chuckled to cover his breathlessness at seeing a naked Kyle. God, Kyle was gorgeous. His body was hard from head to toe, lean, muscles flexed with power without being ungainly. Aaron stood up and walked towards the air mattress, praying silently to all the angels for strength, to enable him concentrate on the job at hand. \"Come on. I won't bite.\"\n\n\"Could have fooled me.\" Kyle's voice sounded odd even to his own ears. He moved slowly towards the air mattress at the foot of the bed, and sat down on it. \"How do you want me?\"\n\n\"Deep inside me.\" Aaron drawled.\n\n\"Aaron...\" Kyle groaned.\n\n\"Sorry. On your back for now, with your head on the towel. I want to work on your head and neck before I get to your body which will need the gel.\"\n\n\"Oooh someone sounds real professional.\" Kyle purred as he did as Aaron requested. \n\n\"And who says I'm not?\" Aaron sounded amused. \"I took lessons so I could do it right for my mum.\"\n\n\"Really?\" Kyle's eyes widened in surprise. \"Why didn't you tell me?\" \n\n\"I just did.\" Aaron laughed softly.\n\n\"You are one hell of a son.\" Kyle said quietly, staring at Aaron.\n\n\"Why, thank you kind Sir. Now if you would just relax and shut up.\" Aaron said making Kyle laugh.\n\nAaron moved to the head of the air mattress and started working on Kyle's head. He started by rubbing Kyle's temples in slow circular motions. Then, he ran his fingers through his hair, applying gentle downward pressure, using his short nails to lightly scratch Kyle's scalp the whole time for added pleasure. From the sound of Kyle's increased breath and irrepressible gasps, he was enjoying it. Aaron massaged Kyle's entire scalp in that manner for about five minutes and then placed his hands underneath Kyle's jaw and pulled the head gently upwards, to stretch the neck muscles. Before he moved to Kyle's body, Aaron leaned over to drop a light kiss on Kyle's parted lips.\n\n\"Liked that?\" He asked softly.\n\n\"Uh-huh.\" Kyle's eyes remained closed. He felt so relaxed already.\n\n\"Good. Now turn over onto your stomach.\" Aaron instructed.\n\nThen moving to the foot of the air mattress, Aaron scooped a handful of the massage gel and started to work on Kyle's feet, working his way up to the calf with relaxing strokes. When he got to Kyle's thighs, he kneaded them firmly, loosening his muscles. Aaron skipped Kyle's buttocks and poured a generous amount of gel onto Kyle's back, quickly spreading the super-slippery, odourless liquid all over Kyle's back. To do a better job, Aaron threw a leg over Kyle and straddled his back, making sure his knees where on the bed to avoid placing too much weight on Kyle. \n\nKyle's moans of pleasure increased as Aaron worked on his back, working the larger muscles on either side of Kyle's spine, before fanning his hands outwards across his shoulders, to knead out all the knots. \n\n\"Fuck, you're good.\" Kyle breathed, his moans, music to Aaron's ears. \n\nAaron's own body kept sliding sensually against Kyle's back due to the slippery nature of the gel. Though his cock was so hard he could have used it to drill a hole in a wall, Aaron concentrated on what he was doing. He worked on each arm, wrist, palm and finger.\n\nAfter working thoroughly on Kyle's back and arms, Aaron tuned so that he faced Kyle's buttock... and what a tight butt it was. Pouring some gel onto Kyle's butt, Aaron placed his palms on those erotic mounds and massaged in circular movements.\n\n\"Oh God, that feels so good.\" Kyle groaned.\n\nAaron increased the pressure gradually as he covered every area. When he was satisfied that he'd given Kyle's butt enough attention, Aaron stood up from behind Kyle and moved to the side.\n\n\"Turn over.\" He instructed.\n\nAaron's eyes instantly went to Kyle's pulsing erection when Kyle turned to lie on his back. He'd never seen a cock leak so much. Aaron swallowed audibly. He wanted that cock. So bad. Shit!\n\n\"See something you like?\" Kyle drawled, his voice barely above a whisper.\n\n\"Shut up.\" Aaron muttered, drawing a chuckle from Kyle.\n\nKyle cleared his throat. \"Listen, I feel relaxed already. What do you say we end this massage and...move on?\"\n\n\"I thought I told you to shut up.\" Aaron growled as he poured a generous amount of gel onto Kyle's thighs.\n\n\"Killjoy.\" Kyle muttered. He knew he was very close to losing his mind. Having Aaron's hands on him that way felt so amazing and arousing.\n\nAaron massaged Kyle's thighs firmly, stopping at his hips. By now, Kyle was panting harshly, having a hard time keeping his hands from grabbing the Adonis tormenting him. Aaron moved up to straddle Kyle's lower waist and poured more gel onto Kyle's body. He spread the gel all over Kyle, kneading his abs gently but firmly. Aaron moved from Kyle's breastbone to his nipples, pinching the nub and rolling the flesh between his thumb and index finger.\n\n\"Fuuuuck!\" Kyle cried out.\n\n\"Like that?\" Aaron asked shakily as he felt Kyle's cock jerk against his butt cheeks. He wanted to taste Kyle so bad.\n\n\"Fuck you.\" Kyle growled.\n\n\"Soon. Very soon.\" Aaron husked, then leaning down, he took one of Kyle's distended nipples into his mouth and sucked. \n\n\"Christ.\" Kyle bellowed, his hands moving to tangle in Aaron's hair to hold him to his flesh. A deep-throated growl sounded from his throat as greedy hunger and a wave of heat raced over his flesh like a wildfire out of control. His cock jerked and throbbed furiously with each pull on his taut flesh. \"Aaron...\" Kyle breathed, trying very hard to hold on to his control.\n\nAaron moved to give equal attention to the other nipple, and then raised his head to look down at the writhing man beneath him. He had never wanted any human being like he wanted Kyle at that very moment. He gasped when Kyle reached up and drew him down onto his slippery body, then captured his mouth in a spine-tingling kiss. Aaron held on tight and kissed Kyle back for all he was worth. Then tearing their lips apart, Aaron swiveled around to face Kyle's mammoth, fiery, throbbing, wet hard-on. He swallowed hard. It was breathtakingly beautiful.\n\n\"Please touch me Aaron.\" He heard Kyle whisper behind him. \"Please.\"\n\nAaron reached for the jug of gel and poured some onto Kyle's cock. Then he reached down for his heavy balls, gently rolling then in his palm. It nearly drove Kyle mad.\n\n\"Oh God, baby.\" Kyle moaned.\n\nThen Aaron lightly dragged a fingernail upward, from Kyle's balls, on the midline seam on the underside of his cock which is exquisitely sensitive, toward the head of his cock. Kyle was shaking so badly at this point, Aaron feared he would unseat him as both their bodies were already slippery and sliding against each other. He took Kyle's cock into his hands and firmly stroked the underside from base to tip for a couple of minutes. \n\n\"Fuck, fuck, fuck.\" Kyle panted. He knew he didn't have the strength to wait till Aaron deemed it fit to give him what he wanted. \"Fuck this.\" He growled so fiercely, Aaron just knew it was over.\n\nKyle's arms went around Aaron from behind and pulled him to his chest, sliding Aaron's back against his front erotically.\n\n\"Kyle...\" Aaron, breathed, his grey eyes shutting on their own accord as he enjoyed the feel of his body moving back and forth against Kyle's.\n\nWhen Aaron felt Kyle's hand directing his cock to his needy hole, he was powerless to stop him. He rather opened his thighs wider, bracing himself for the pain which he knew was to follow, especially as he hadn't been stretched out for Kyle's cock. But when he felt Kyle's huge cock penetrating him, there was no pain, thanks to the slippery gel...just fullness and unbelievably exquisite pleasure.\n\n\"Oh. My. God!\" Aaron cried out and went into total meltdown.\n\nWith the help of the gel, Kyle slid deep inside Aaron to the very hilt, sliding against his prostate and almost causing him to pass out from sensory overload.\n\n\"Fuck, you're so tight baby.\" .\" Kyle husked into Aaron's ear, as he tightened his arm around Aaron's stomach and started sliding him up and down his body. That was all Kyle needed to do to keep fucking deep into Aaron. It was the deepest fucking ever.\n\n\"God, Kyle. Fucking amazing.\" Aaron gasped brokenly. Compared to what he was feeling that very moment, he and Kyle's first fuck had been a joke. \"Don't stop. Don't ever stop.\"\n\nWith a groan, Kyle moved his fingers to Aaron's nipples, to pinch and pull on them, whilst his tongue came out to lick the outer shell of Aaron's ear. The pleasure Aaron felt was so extreme he couldn't control the scream that tore out of his throat. He went wild. Planting each foot firmly beneath Kyle's thighs for leverage, Aaron started vigorously gyrating his hips, thrusting against Kyle, getting that cock to hit his gland over and over again.\n\n\"Feels so good, Kyle.\" Aaron whimpered, almost sobbing. \"Feels so fucking good.\"\n\n\"Damn!\" Kyle whispered. He had never seen anything so riveting and hot in his life. Aaron was losing it, bucking uncontrollably on top of him, going wild on his cock, his hips gyrating sensuously, his cock pointing straight up like a loaded gun...it was a sight Kyle would never forget for as long as he lived. \"Fucking gorgeous, Hunter!\"\n\nAaron's cock was like a rock, dripping precum and so ready to blow that Kyle wondered how he'd managed to hold off that long. Time to rock the boat, Kyle thought mischievously. He brought his own legs up around Aaron's hips such that, Aaron's cock was sandwiched between the soles of Kyle's feet. Then Kyle started fucking up into Aaron with an almost inhuman speed. As if that wasn't enough, he rubbed Aaron's cock between the soles of his feet, pulled on his taut nipples, and stuck his tongue into Aaron's ear, mimicking the thrusting of his cock. Aaron didn't stand a chance.\n\n\"Kyle, oh God...please...\" Aaron gave a strangled moan as his whole body shook, his senses reeling. He felt like he was drowning, losing it. He needed his anchor...needed to know Kyle would be there to keep him safe.\n\n\"I'm right here, baby.\" Kyle rasped into Aaron's ear as he let his hand drift down to rub at Aaron's lower abdomen in soothing circles, never faltering in his thrusts for even a second. \"Let go.\"\n\nWith a scream, Aaron erupted straight up high into the air, coming in shuddering jerks, cum splashing and pooling on his stomach, shaking so hard Kyle thought for a second, he was having a seizure. Aaron totally lost himself, coming so hard and so long he wondered whether it was normal. He didn't really care. He just allowed himself to be swept away in the tides of pure bliss.\n\n\"Fuck, baby.\" Kyle muttered when Aaron went slack against him.\"You're too sexy for your own good.\"\n\nAaron's erection didn't even go down for a moment after that intense orgasm. He so wanted to turn his head and kiss Kyle but didn't have the strength. But as if Kyle could read his mind, he tuned Aaron's head and slammed his mouth on his, giving him a fierce kiss. Then pulling Aaron off his cock, Kyle rose up to cover Aaron's body with his so that they were face to face, hazel eyes locked with grey ones, then in one smooth move, Kyle entered Aaron, hitting that pleasure button head on. Aaron's eyes glazed over with pleasure, his lips parted alluringly. Kyle couldn't have resisted those lips even if his life had depended on it. He leaned down and captured Aaron's lips even as he slammed into him, fucking him like there was no tomorrow.\n\n\"Fuck, Kyle!\" Aaron tore his mouth away from Kyle's and cried out. \n\nHe could feel another orgasm dancing along his spine and thought it was too soon after the draining one he'd just had. Surely it wasn't healthy. But of course the last thing on his mind at that moment was good health...he just wanted to experience that ecstatically exquisite feeling of going over the edge again. Then Kyle leaned back, gripped Aaron's hips tightly as it was still slippery, changed the angle of his thrusts and speared his cock into that gland again and again.\n\nEven as Aaron cried out in ecstasy from the assault on his prostate, Kyle totally lost it. Being inside Aaron and so close to a release felt so mouth-wateringly good, he actually lost his rhythm. Kyle felt like his whole world was flying apart. Aaron watched as Kyle bit his lip and tossed his head back in blissful abandon and thought he'd never seen anything sexier in his life. Kyle was sexy as all fuck!",
        "\"Fuck, I can't hold it together. Want you to come again for me, baby.\" Kyle groaned, reaching between them to stroke Aaron's hard pulsing cock. \n\n\"Ah Kyle...\" Aaron wanted to scream Kyle's name, but it only rasped from his throat. He couldn't talk, couldn't cry out, couldn't focus. It wasn't just the sex. It was the emotion. It was the overwhelming feelings he had towards the man fucking him, the way his heart pounded just by being in Kyle's arms. The feeling of euphoria over him at that particular point was so powerful, he knew if he died that very moment, he'd die the happiest man in the world. \n\n\"Are you close?\" Kyle asked in a voice that sounded like he was in pain. \"God, please tell me you're close, baby.\" \n\nGrowling deep in his throat, Kyle reached out to grab Aaron's shoulder for leverage and thrust into him so much harder and deeper than before, rotating his hips to intensify their pleasure. He stroked Aaron hard and in time with his thrusts the whole time. Then Kyle heard it...a small needy wail, a sound he found so surprisingly erotic he gasped. He glanced up and met Aaron's heated look, the intensity on Aaron's face burning into him. Aaron was quivering, obviously so close to release as Kyle could practically feel his cum traveling up, through the cock in his fist.\n\n\"Fuck, so hot, Aaron. So fucking beautiful. Come for me baby. Want you to come for me.\" Then Kyle lightly squeezed the head of Aaron's cock.\n\n\"Kyle...\" Aaron screamed Kyle's name as he fell off the edge.\n\nAaron's eyes rolled back into his head as an explosive orgasm tore through him. Every organ in his lower body clenched in hard spasm, relaxed, and then clenched again. It was perfect, intense and mind-shatteringly fantastic. Kyle stared at Aaron's face, captivated. Whatever sensation that was humming through Aaron's body must have been really powerful, he thought, because that look on his face was so enthralling it held Kyle spellbound. But much as Kyle loved watching Aaron lose it, he couldn't for long though, as Aaron's contracting channel gripped his cock so tightly Kyle's eyes closed in delirious pleasure. When the ecstasy hit, Kyle could do nothing but gasp as he convulsed, spiralling into a release so powerful it left him spinning out of control.\n\n\"Ah, God.\" Kyle thrust into Aaron harder and shuddered against him with a hoarse cry as he flooded Aaron with his hot cum. His whole body trembled with an orgasm so mind-blowing it left him entirely disoriented. He had never known anything so intense, so erotic and primal. \"Aaron!\" Kyle cried as he kept riding out his orgasm. \n\nAaron heard Kyle cry out his name, distantly. He felt like he was having an out of body experience. Kyle's cock kept rubbing and stimulating that pleasure spot inside him even after Aaron had spent his load, sending fireworks dancing over his nerves, prolonging his orgasm for what seemed like forever. \n\n\"Oh God, Kyle, what are you doing to me?\" Aaron gasped brokenly. \"I can't stop coming.\" He whimpered as he writhed and trembled beneath Kyle. \n\nThe pleasure was too much...too intense...he forgot to breathe, couldn't breathe, couldn't seem to find the instinct to draw enough oxygen into his lungs as everything, conscious and subconscious, centered on the orgasm imploding inside his. He shook his head desperately, fighting for air, his eyes opened wide. For a moment, the world stopped turning... \n\nKyle didn't know what made him open his eyes at that moment. When he saw Aaron's face, his heart nearly stopped. It was either of two things...slap Aaron to get him to breathe or scream at him to do so. Kyle did neither. He leaned down and covered Aaron's mouth with his and exhaled into Aaron's mouth. When he felt Aaron take a gulp of air, Kyle didn't release those sweet lips, but went right on kissing Aaron softly, breathing with him, gently sliding his still spasming cock in and out of him. When he felt Aaron's shivers cease, Kyle withdrew gently from Aaron and drew him tenderly into his arms, scattering light kisses all over his face the whole time. They curled around each other, lying quiet and still. Kyle didn't have a doubt in his mind at that point...\n\nHe'd fallen utterly and irrevocably in love with Aaron Hunter. Aaron moved him. He made him wish for things he'd never believed he would want. Made him dream of things he'd never believed he would dream of. Things like his soft smile filling his heart before he slept each night, the warmth of his body curled against his. He wanted to protect him, he wanted to laugh with him. If anything bad ever happened to Aaron, Kyle knew he would totally lose it. When he realized Aaron couldn't breathe earlier, he... Kyle didn't want to think about it. The love he felt for Aaron was so fierce, it was terrifying. Surely this was too fast, Kyle thought. What if whatever he was feeling for Aaron was only one-sided? But Kyle realized he didn't really care if it was one sided. He was just grateful that he had Aaron in his life. Kyle couldn't supress the groan that tore out of his throat. God, he had it real bad.\n\nAaron heard Kyle's groan and drew his head back to look into Kyle's eyes with his own dazed ones. There was a look in Kyle's eyes he couldn't place. Fear, acceptance, possessiveness...\n\n\"Hey, you okay?\" Aaron asked softly, entwining his fingers with Kyle's.\n\nKyle shook his head slowing, staring into Aaron's eyes. \"Don't you ever scare me like that again.\" Kyle breathed, his voice shaky.\n\n\"What?\" Aaron whispered, confused. \"What did I...\"\n\n\"You wouldn't breathe. And it scared the shit out of me.\" Kyle's voice told just how scared he'd gotten.\n\nAaron's eyes widened. He didn't realize... \"I'm sorry.\" Aaron whispered. \"But what I felt...I've never felt that way before. It was...exhilarating. It was...\" Aaron trailed off.\n\n\"I know.\" Kyle murmured, burying his face in Aaron's hair. \"I felt it too, baby.\" He growled and started to shake within Aaron's arms. He felt overwhelmed by feelings he hadn't ever felt before. \"I love you, Aaron.\"\n\n\"Oh fuck!\" Was all Aaron could say."
    ],
    "authorname": "adjoaq",
    "tags": [
        "massage",
        "restaurant",
        "blowjob",
        "car",
        "acceptance",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/blissfully-hooked-ch-04"
}