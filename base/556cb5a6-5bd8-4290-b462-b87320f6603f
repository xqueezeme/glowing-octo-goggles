{
    "title": "A Week on the Lake Ch. 02",
    "pages": [
        "This is the second part of a four-part story. It might make a bit more sense to start on the first chapter, but feel free to do whatever you want. We're all adults here.\n\nAs are all the characters in this story, of course.\n\n\n\n\nThe transition from all-out orgy back to standard summer-time party was so sudden it almost felt weird to have clothes on and a beer in my hand. I was baffled at everyone's apparent ease with what we had just done, amazed at how casual they remained after what had been by far the most non-standard sexual experience of my life.\n\nMy balls ached from their exertion, and even my cock was a little sore. That constant reminder of our activities made it hard for me to focus on drinking games.\n\nWhen we decided to move outside to sit around the fire, Jack stopped me in the kitchen while the others made their way out to the yard.\n\n\"Are you okay with all of this, Will? You seem a little preoccupied.\"\n\nI shrugged, searched for the words, then stopped. Was I really about to acknowledge all of this by putting it into words?\n\n\"Did you know something like this was going to happen when you invited me up here?\"\n\nHe nodded. \"Something like this has been happening every year now since I was eighteen, when Sophie and I first got together. I took a chance on inviting you, because I thought you needed the vacation mostly, but I was also pretty sure you could handle everything else.\"\n\n\"Jack,\" I said, exasperation raising the pitch of my voice. \"I just fucked your girlfriend!\"\n\n\"Did you enjoy it?\" He raised his eyebrows. \"It sure looked like you did, and I know Sophie had fun. Shit. She's been talking about it ever since I suggested we invite you.\"\n\n\"And you're okay with that?\"\n\n\"Yes,\" he said.\n\nHe must have seen the disbelief in my face.\n\n\"Will, I'm okay with it,\" he said. \"More than okay with it, I thought it was sexy as fuck.\"\n\n\"Excellent pun, actually,\" I said.\n\n\"Thanks,\" he grinned. \"And in case you didn't notice, it's not like I didn't get to have plenty of fun for myself too. This is Todd and Becky's first time coming up to the cabin with us, but not their first time, you know, having sex with us.\"\n\nI was starting to feel better, but we still hadn't talked about the other thing.\n\n\"Don't worry,\" Jack said. \"Nobody's ever going to hear about what you do up here from any of us.\"\n\nI nodded. \"I'm not worried about that. It's just...\"\n\n\"Yeah man, I was a little confused the first time too. It was a pretty long time ago for me, so it seems almost silly now, but... well, it's fun. Don't you think? If you hated it, that's fine, nobody gets forced to do anything they don't want to. But wasn't it kind of awesome?\"\n\n\"Sometimes the things that seem awesome when you have a hard-on aren't so awesome later on,\" I said. And while that might have been true, I was trying to hide the fact that I really had enjoyed it. Really enjoyed it.\n\n\"Yeah, that's true,\" Jack said. \"So let's put it this way. As long as you're up here, and as long as it's all consensual, try whatever crazy idea you want. You never know what you'll end up liking. Okay?\"\n\nI nodded. \"Okay, that's totally reasonable.\"\n\n\"Good,\" he said. \"Now didn't you say you were going to bring a bottle of bourbon? Best camp fire liquor there is, in my opinion.\"\n\nI chuckled. \"You know I don't need an excuse for bourbon. I'll go get it.\"\n\n* * *\n\nWe spent the later hours of Sunday night, our first full day at the cabin, sitting around the fire, passing the bottle, and laughing our asses off. I felt a great deal of relief after my talk with Jack, and even though it was a little awkward at first to look Todd in the eye, I gradually relaxed completely.\n\n\"So what's with this Felicia person you guys keep talking about?\" I said during a lull in the conversation.\n\nSophie laughed. \"Aren't you the curious one.\"\n\n\"She's the third leg of our tripod,\" Becky said. \"We've been friends since high school.\"\n\n\"That's cool,\" I said, nodding my head. \"Just curious.\"\n\n\"What my incredibly beautiful girlfriend failed to mention,\" Todd said, \"is that Felicia is an absolute knock-out.\"\n\n\"Seriously,\" Jack agreed. \"Like, impossible-hot.\"\n\nSophie slapped his arm, but she was smiling.\n\n\"Sorry babe,\" Jack said. \"But I'm telling you, Will. Just, wow.\"\n\n\"They're right,\" Sophie said.\n\n\"I haven't heard anything so far I don't like,\" I said. \"Although I find it hard to believe she's hotter than you two.\"\n\n\"Awww,\" Becky cooed. \"Todd, can I keep him?\"\n\n* * *\n\nOn Monday, it rained. After breakfast, I sat on the couch reading one of the paperbacks I had packed into my luggage.\n\n\"Well, this is lame,\" Jack said, looking out the window at the gray, choppy water of the lake.\n\n\"Yeah, bummer,\" I said.\n\n\"Anybody need anything at the store? Might as well make a trip into town since we won't be getting on the boat any time soon.\"\n\n\"I'm all set,\" I said.\n\n\"I'll go with you,\" Todd said. \"I want to see if I can find some better fishing gear. That stuff in the boat house is a little iffy.\"\n\n\"Excellent,\" Jack said. \"Ladies? Store run?\"\n\n\"No thanks,\" Becky said. \"I've heard enough stories about the locals.\"\n\n\"What's the matter?\" Jack said, a mischievous grin on his face. \"You don't like the toothless hunch-back crowd?\"\n\n\"I'll stay here too,\" Sophie said. \"Probably get the chili simmering nice and early.\"\n\n\"Nice,\" I said. \"How spicy do you make your chili?\"\n\n\"She likes to take the finish off the stainless steel pot,\" Jack said. He leaned over to kiss Sophie, and Todd followed suit with Becky.\n\n\"Oh!\" I jumped up and fished a twenty out of my pocket. \"How about some cheap cigars?\"\n\n\"Good idea,\" Todd said.\n\nJack took my cash, and they left.\n\n\"How far is it into town?\" I asked Sophie.\n\n\"About forty-five minutes each way.\"\n\n\"Yikes,\" I said. \"I hope nobody steps on a nail or anything.\"\n\nSophie went to the kitchen to get started on her special chili-from-hell recipe, and I got lost in my book for a while. It must have been close to an hour later when I finally noticed that the bumps and clangs from the kitchen had stopped, and I could smell Sophie's creation wafting into the living room.\n\nI set down my book and stepped into the kitchen to look for a snack when I heard the giggle coming from down the hall. I followed the sound past Todd and Becky's room, which was empty, and looked into Jack and Sophie's room, also unoccupied. On the other side of the hall was my bedroom. They had left the door open.\n\nSophie and Becky were tangled together on my bed in nothing but their bras, and they were busy eating each other's pussies. I stood in the doorway and smiled, watching them squirm and moan as they pleasured each other. My shorts began to tent, and I adjusted myself for comfort. By the time they saw me standing there, I was fully erect, and absently rubbing myself through my shorts.\n\nBecky looked up from Sophie's pussy and her face showed the evidence of her friend's arousal. She smiled at me and rolled off of Sophie. Sophie sat up, leaving her legs spread wide, panting at the obvious pleasure she had been receiving. I looked at their bodies, naked except for their tits, still encased in colorful bras.\n\nBecky reached up under the front of her bra and twisted her fingers, and the garment popped open; the pressure of her tits squeezed into the cups sent them spilling out, and they bounced on her chest as she shrugged the straps off of her shoulders and tossed it to the floor. She remained on the bed, standing on her knees next to Sophie, and beckoned me forward with a hooked finger, cupping her huge tits and twisting and pinching her nipples.\n\nI peeled off my t-shirt and moved to the foot of the bed. Becky dropped to her hands and knees and worked to unbutton my shorts, while Sophie reached behind her back and unhooked her own bra. I took Sophie's hand and pulled her close to me and kissed her. She returned it eagerly, and our tongues pressed together just as Becky pulled my shorts down. I kicked them off while I palmed Sophie's tits and continued to probe my tongue into her mouth. Becky grabbed my cock through the stretched material of my boxers and gave it a tug before she pulled down my underwear, which ended up on the floor with all of the other clothes.\n\nI knee-walked up onto the bed, my cock pointing out straight in front of me, and Becky grabbed it, pulling me forward.\n\n\"Is this cool to do while the guys aren't here?\" I asked.\n\n\"Don't worry about it,\" Sophie said before she kissed me again. \"And besides, if they get back soon enough, they can join right in.\"\n\nBecky started sucking my cock, and I moaned into Sophie's mouth. I let my hands explore her body, squeezing her tits, her ass, feeling the ample moisture of her pussy. My touches elicited moans from Sophie and she broke the contact of our lips and sank down beside Becky, who was sucking the head of my cock while she pumped her hand up and down the shaft.\n\nSophie and Becky licked up and down either side of my cock, stopping at the top to kiss each other and take turns sucking on the purple head. They alternated up and down, so that when Sophie had the tip in her mouth, Becky was licking and sucking on my balls.\n\n\"Oh my god, you guys,\" I said. \"That feels fucking incredible.\"\n\n\"Good,\" Sophie said, pulling back. \"You can have more after you make us feel good.\" She lay back on the bed in front of me, and Becky followed suit. Now I was faced with the difficult prospect of deciding which delicious pussy I was going to get my tongue into first.\n\n\"What did you have in mind?\" I smiled, knowing exactly what she wanted, but hoping to make her say it.\n\n\"Um, lick my pussy till I tell you to stop, numb-nuts,\" Becky quipped.\n\nI smiled and looked at Sophie as I lowered my face between Becky's legs. I caught a flash of frustration cross Sophie's features, but she said nothing as I snaked out my tongue and licked deeply into Becky's pussy.\n\n\"Oh fuck,\" Becky squealed. \"Oh fuck yes!\"\n\nThe taste of her arousal filled me with a ravenous urge to make both of them cum in my mouth. I slid my left hand under Becky's ass and squeezed just as I reached up with my right to take hold of her big heaving breast. I locked my lips around her clit and sucked it before dedicating my concentration to licking her to climax.\n\n\"Oh Jesus Fuck, just like that!\"\n\nSophie squirmed beside us, moaning along in sync and touching herself. I slowly increased the pace of my tongue on Becky's clit, and she increased the frequency and magnitude of the thrusts of her hips. She pushed up, grinding her pussy against my mouth, then pulled back down so I had to follow in order to keep my tongue on her. Her pussy juices flowed into my mouth and down over my chin as I tried to use my hand-holds on her ass and tits to keep my mouth in place. I started humming with both the pleasure and the physical effort and was finally rewarded with a sudden tightening of Becky's entire body. She pulled back hard and thrashed silently on the bed as her orgasm radiated out from her center.\n\nAfter several silent seconds, she finally took in a huge breath and fell back on the bed, panting. \"Oh my god that was perfect,\" she sighed. \"That was so fucking good.\" She raised her hands to her big tits, squeezing them gently as she caught her breath. I climbed up on the bed and crawled over her, and locked my mouth on hers in a furious kiss that allowed the taste of her cum to pass into her own mouth. My cock rested against her dripping opening and I had to fight back the urge to bury myself in her cunt right then.\n\n\"God you taste good,\" I said when our lips parted.\n\nI moved off of Becky and onto Sophie and began by kissing her, giving her a taste of the remnant of her friend's orgasmic fluids. I moved slowly down her body, enjoying the feel of her tits against my chest, the taste of her skin and her hands and fingernails on my back. I stopped at her chest to enjoy the taste and feel of her breasts against my face and in my mouth. I let my cock drag across her pussy as I moved down, feeling her wetness cover the underside of my shaft.\n\nWhen I finally found myself facing her pussy, she was nearly quivering with anticipation. I started slowly, lightly; I tasted Sophie's pussy and enjoyed her small bursts of pleasurable reaction. Of course, slow and light was not going to get the ultimate job done, but I needed time to figure out what she liked, and what really got her fired up. I didn't just want her to be aroused, I wanted her to cum.\n\nI explored Sophie's pussy, licking, sucking, and tasting my way up and back down her dripping pink opening. I listened to her breathing and her occasional moans, felt the movements of her body, and worked to focus on the spots and touches that gave her the most pleasure. As the minutes ticked by, Sophie's moans became gasps, her gentle writhing became shuddering and bucking. Becky had fully recovered from her own orgasm, and she set to work licking and sucking Sophie's tits while I licked and sucked harder and faster on her pussy.\n\n\"AH!\" Sophie shrieked. \"Oh holy FUCK!\"\n\nI had to hold onto her hips to keep my face latched onto her pussy. My face was covered in her juices, and I let them wash over my tongue.\n\n\"Oh right there!\" Sophie cried. \"Just like that! I'm gonna fucking cum!\"\n\nI maintained my exact position and technique, listening to Sophie howl with delight and trying to stay with her as she moved.\n\n\"Oh holy fuck I'm cumming! FUCK! I'M CUMMING!\"\n\nI finally pulled back and licked my lips. My face was covered with Sophie's cum. I watched as the throws of orgasm worked through her body, Becky holding her and kissing her neck.\n\nI stood up, my cock pointing straight up in front of me, and crawled back onto the bed. Becky rose to meet me and took my cock into her mouth. She sucked hard and deep, covering my entire length with her saliva. I groaned as I watched her work my prick in her mouth and it almost became a groan of disappointment when she moved back again. She lay on her back next to Sophie and pulled her knees up and apart, opening her soaking wet pussy.\n\nI took the base of my cock in my fist and aimed the angry purple head down. Pushing forward, I slid inside Becky's cunt, causing us both to gasp in delight.\n\n\"So fucking good,\" I groaned.\n\n\"Fuck me, Will,\" Becky gasped. \"Fuck me hard!\"\n\nI pushed forward until I was buried to the hilt in Becky's hot, juicing pussy. Lowered my face to her chest to suck on her magnificent tits. With her nipple in my mouth, I slowly withdrew my cock until just the tip was still inside her, then I slammed my hips forward and Becky growled her approval. I got myself upright again, and held Becky's hips as I continued to repeat the process, slowly pulling almost all of my cock out of her before thrusting hard back into her pussy.\n\nSophie, recovered from her orgasm, but still flushed and sweaty, got up behind me and pressed her tits into my back. She pushed forward with me, driving my cock even harder into Becky's pussy.\n\n\"Do you like how her pussy feels on your big beautiful cock?\" Sophie whispered into my ear. \"Do you like fucking that tight little cunt and watching those tits bounce around?\"\n\n\"Oh fuck yes,\" I moaned.\n\n\"Fuck her good, Will. Fuck her like you fucking mean it!\"\n\nThat sent me over the edge of control. I abandoned any attempts to slow down my thrusts. I lifted Becky's ass up off the bed and pounded my cock into her pussy.\n\n\"Holy fuck you're gonna make me cum again!\" Becky screamed. I didn't know how much longer I'd be able to sustain this pace without losing it myself. Becky saved me the worry when she arched her back and closed her eyes, pulling herself back and dislodging my cock. With her eyes squeezed shut and her mouth open in a silent scream, Becky rubbed hard on her clit and tumbled back onto the bed. She took in a huge breath and screamed, \"FUCK!\" before collapsing in a panting, sweaty heap.\n\nI smiled and turned to Sophie, my cock still granite-hard and shining with Becky's cum. Sophie got down onto the floor on all fours, facing the door, so I got down behind her and she helped my guide the head of my cock into her opening. Her own pussy juices combined with Becky's allowed me to bury my cock inside her in one powerful stroke.\n\n\"Oh fuck yes, give me that fucking cock!\" Sophie screamed.\n\nI pulled back on her hair, arching her back and we both looked up to see Jack and Todd standing just outside my bedroom. \n\nThey didn't say a word, just started pulling off their clothes and dropping them as they went. Their cocks were already fully hard, and Todd dropped down and presented his to Sophie, who muffled her own moaning by taking his big stiff prick into her mouth. Jack moved to the bed, and Becky met him at the edge, spreading her legs apart so he could enter her.\n\nI refocused my attention on Sophie. Reaching under her body, I took hold of her tits and resumed my hard strokes, thrusting my cock deep into her clenching pussy while she moaned and wailed onto Todd's cock. The physical and visual stimulation together were too much. I threw back my head and roared as my balls tightened and began sending thick hot spurts of cum spurting from my cock and deep into Sophie's pussy. Sophie worked her fingers over her clit just as the final thrusts of my cock brought her to another orgasm, and her pussy clenched down hard on my cock, squeezing out even more of my cum.\n\nPanting with the exertion, I withdrew my slowly shrinking cock from Sophie's pussy and sat back against the wall to watch as she quickly rolled over and ordered Todd to fuck her. Todd was more than eager to obey, and her quickly buried his cock in Sophie's sodden pussy. I watched my cum leak out around his cock as he fucked her, marveling at his apparent disregard for coming into contact with another man's seed.\n\nJust because I had sucked this man's cock the day before, didn't mean I was completely over my inhibitions. It was almost as if Jack could sense what I was thinking about.\n\n\"Oh Jesus, I'm gonna cum,\" he cried. He pulled his cock out of Becky's pussy, and moved off the bed. I sat stunned as I watched Todd open his mouth just in time for a thick rope of cream to launch out of Jack's cock. Todd caught it in his mouth, then closed his lips around the head of Jack's cock and sucked and swallowed as Jack continued to cum.\n\nIn just a couple of minutes I had returned to full hardness. I watched, slowly stroking my prick as Todd swallowed every drop of Jack's cum. He did so without missing so much as a single beat as he continued to fuck Sophie. Finally spent, Jack sat back down on the bed next to Becky, watching Todd fuck his girlfriend.\n\nBecky looked at me and beckoned me over. \"I'm not ready to stop fucking,\" she said. Jack smiled and made room for us, and Becky positioned herself on her hands and knees so we could watch Todd and Sophie while we fucked. I took my time, slowly sinking my cock back into Becky's pussy. Jack looked back and forth, watching Todd and Sophie, then me and Becky fuck.\n\nI reached under Becky to hold a huge swinging tit in my hand, and used the fingertips of the other to rub on her clit while I slammed my cock into her pussy from behind. The room was filled with the girls' filthy encouragements. \"Fuck me\" and \"give me that cock\" and \"so fucking good\" were joined by the sounds of hips slapping into asses.\n\n\"Does that cock feel good, baby?\" Jack crooned to Sophie.\n\n\"I fucking love it!\" Sophie gasped.\n\n\"Oh my god, Will, you fuck me so good!\" Becky wailed.\n\nI felt another orgasm quickly approaching. Becky's pussy clamped down on my cock, sending blinding pleasure coursing through my body. The churning in my balls built slowly, but inevitably.\n\n\"Oh shit, I'm so close,\" Todd groaned. \"I'm gonna cum. Oh fuck, I'm gonna cum!\"\n\nTodd pulled his cock out of Sophie's cunt and stood up. Leaving me just on the edge of eruption, Becky jumped off the bed and dove onto her boyfriend's cock just as he started spurting. I was past the point of no return and moved to grab my cock to finish myself off when Jack was suddenly there. He closed his lips around the head of my cock and sucked hard. I froze in a mix of shock and pleasure as I exploded in his mouth. Jack worked my cock in his mouth as it fired off blast after blast of hot spunk. He gulped and swallowed my cum, just as Becky was drinking down Todd's.",
        "Fully drained and exhausted, I collapsed onto the bed. Jack moved down to the floor and locked lips with his girlfriend, sharing with her the remnants of my second orgasm. Becky soon joined them. Jack made space for Becky to kiss Sophie. Their tongues danced together, Todd's cum in their mouths. Becky then kissed Jack, and Todd sat down next to me.\n\n\"I love you, Becky,\" Todd said. \"You are incredible.\"\n\nI was physically content as the couples traded their affections, but the thought of Laura bulldozed unbidden into my head, and I looked out the window at the rain pattering down on the leaves. Laura had been the first one to say \"I love you,\" not me. It wasn't fair that she would be the one to change her mind. Yet here I was, having all manner of sex with seemingly days more to go. I felt guilty, even though Laura wasn't my girlfriend anymore. I felt resentment toward her for hurting me, and shame for being the one who was taken by surprise. But I was also filled with excitement about the things that were happening to me without her here. The sex with Sophie and Becky was incredible, and the brief but intense experiences with Jack and Todd were mind-blowing and almost terrifying.\n\nJack was probably right about this trip being good for me, even if it was in a completely different way than I had expected. It was just going to take a little time to really let Laura go.\n\nTime. And a short, voluptuous little hell-cat named Eva.\n\n* * *\n\nFelicia arrived with fanfare and friends. Sophie and Becky rushed up to the driveway to greet the new arrivals, while Jack, Todd and I stayed back in the yard working on our frisbee aim and drinking beer before noon. I wondered briefly where everyone was going to sleep. Out of the arriving car stepped not just the expected Felicia, but three others. There was bedroom as yet unclaimed, and Jack had mentioned that one of the couches folded out into a bed, but the jump from five to nine people was certainly going to be drastic. Next I wondered if this meant that all of our naked fun was going to have to be relegated to bedrooms and the dark of night.\n\nFelicia herself was easy to identify, as she threw herself into an embrace with both Sophie and Becky as soon as she stepped out of the car. She was even taller than Becky, with long tan legs that distracted me enough to allow a hard-thrown frisbee to smack me directly in the chest, to Jack and Todd's thorough amusement. From the passenger seat came a tall, muscular black man with an easy smile and relaxed posture. A slender girl with red hair and a very short, curvy raven-haired young woman climbed out of the car and stretched off what must have been a pretty intense travel nap. Both of their faces were marked with sleep lines from their clothes and the upholstery.\n\nWe joined the girls in the driveway to greet their friends and were introduced. I shook the hands of Felicia and Robert, then Katie, the ginger, and Eva, whose smiling face and sparkling blue eyes made me stutter my way through a \"pleased to meet you.\" I let my gaze linger on her pretty face just a bit too long and she blushed and smiled wider before they all turned to unload the car and bring their things into the cabin.\n\nIntroductions and logistics handled, Jack offered Robert a beer.\n\n\"Polish horseshoes?\" Jack inquired.\n\n\"Sure, but you'll have to refresh me on the rules,\" Robert said. \"I've only played once, and well, let's just say it wasn't one of my finer moments.\"\n\nAfter a few wild throws, Robert fell into a good rhythm, and teamed up with Jack. Todd and I took the first game, but lost the second, by a wide margin. The third game came down to the last point, and Jack was able to close it out with one of his hard throws that came in fast enough to sheer off fingers. Todd made a valiant attempt, but the frisbee hit the ground and Jack and Robert celebrated in appropriately exaggerated fashion.\n\nWe spent the day doing all of the things that the rain had kept us from doing the day before. We played frisbee, went swimming, drank plenty of beer, and got acquainted with our new cabin mates.\n\nFelicia was gorgeous in her bikini. She was tall, tanned, blond and stacked. Sophie and Becky kept her close, catching up with their old friend. It was still unclear to me if any of the newly arrived girls were Robert's girlfriend, but they all were comfortable and flirty with him. As the day wore on, they became equally flirty with the rest of us. Katie, the pretty redhead, had little boobs and an unbelievable ass. But I found myself having the hardest time taking my eyes off of Eva. Her black hair was short, pixie-cut. She was easily the shortest person here, but curvy and sexy, with huge tits that dwarfed even Becky's, and a big round bottom that I couldn't help but picture naked. More than once I found my imagination running away with me, thinking about getting my hands and lips on Eva's skin.\n\nAfter the way the first few days at the cabin had gone, I was surprised that we went through an entire day and evening with nobody so much as taking off a bikini top. There was no orgy in the living room, no buzzed games of strip poker. We just played games, laughed, drank, and eventually settled in around the fire.\n\nIt wouldn't be until the next day that things really started to get crazy.\n\n* * *\n\nThat Wednesday at the cabin started like any other day: coffee, breakfast, some time spent enjoying the fresh air and the view of the lake from the dock. As I made my way back to the cabin, Jack and Todd came outside in their swimming shorts.\n\n\"Boat time?\" I asked.\n\n\"We're taking Katie and Eva out for the tour,\" Jack said, grinning.\n\nI was mildly disappointed, since the day before I had decided that I very much liked being around Eva, and wanted to maximize any opportunities to do so. Eva and Katie joined us on the deck, t-shirts covering their bikini-clad bodies. Eva looked at me and smiled. And did the color rise in her face just a little too?\n\n\"You should stay here and keep me company, Will,\" a voice said. I looked up at the house to see Felicia standing behind the screen door. I couldn't stop my mouth from dropping open at the sight of her dressed in what may very well have been nothing but a blue men's dress shirt. It was long enough to cover most of her body, but left her incredible legs bare. It was buttoned up to just above the gap between her breasts. I felt a slap on my back, either from Jack or Todd, I didn't know.\n\nFelicia turned away from the door, and I followed her inside. I could here the motor starting on the boat, and the sound of it cruising away, and then it was just me and Felicia.\n\n\"Where's um...\" I stuttered.\n\n\"Don't worry about it,\" Felicia said. She took my hand and pulled me close to her. I could smell her skin and her shampoo. She had just come out of the shower and I noticed the slight damp of her hair. I looked down at her body and was delighted to see the impression of her nipples on the front of the shirt.\n\nFelicia unbuttoned the topmost button, and the shirt parted slightly, offering me a better view of the swell of her tits. \"Right now, it's me and you time,\" she said.\n\nThat was when I heard the first moan from down the hall. It was almost certainly Becky. She or Sophie or both must have been in one of the bedrooms with Robert.\n\nFelicia caught my glance and reached up to turn my face back to her. \"Becky told me how good you ate her pussy,\" she said. She undid the next button and moved even closer to me. The shirt was now open between her breasts, covering her nipples, but not by much. My cock was growing rapidly in my shorts, and Felicia put a hand on it.\n\n\"She told me about your big, beautiful cock too,\" she said. She pushed into me and I fell back into the chair behind me. Felicia giggled and finished unbuttoning the shirt. She slowly pulled it open and I stared in astonished silence at the naked body beneath. Her tits, big, firm, and round, were capped with hard, dark nipples. Her stomach was smooth and flat, and I gazed at the definition in her abs and the indentation of her navel. But I couldn't stop my gaze from wandering further. There was no hair at all between her legs. I had to assume she had just shaved. I could see just a hint of pink in the cleft between her legs, and now my cock was fully erect.\n\n\"Show me your cock,\" Felicia said, finally letting the dress shirt fall to the floor. I kept my eyes on her as I unbuckled my belt and unbuttoned my shorts. I pushed down the front of my underwear and pulled out my throbbing prick, pointing it straight up in the air. I watched her eyes move and enjoyed the look on her face as she gazed at my cock.\n\n\"I want to suck your cock,\" Felicia said, but she didn't move.\n\nI let my eyes roam up and down her naked body, and slowly stroked my cock in front of her. \"So suck it,\" I said.\n\nMore moans came from down the hall, louder now. Felicia got down on the floor between my legs, and took my cock into her mouth.\n\n\"Holy fuck,\" I gasped. Her lips locked around the head of my dick and her tongue swirled over the little slit at its peak. I relaxed back in the chair as Felicia's hand closed around my shaft. Holding my shirt up to my chest, I watched her lick up and down the underside of my cock. Her hands moved to my hips, and I lifted my butt off the chair to let her pull my shorts and boxers off. I peeled off my t-shirt and settled back down into the chair with my butt on the edge, and my legs spread apart to make room for Felicia on the floor.\n\n\"Oh my god, yes,\" I groaned. \"Suck that cock.\"\n\nFelicia took more of me into her mouth, her tongue sending waves of pleasure shooting up through my body. She alternated between sucking and licking, moving up and down my stiff prick and spreading her saliva all over my cock and balls.\n\n\"My turn,\" I said, before taking her by the shoulders. I stood, and guided Felicia to her feet with me. I spun us around, and Felicia took my spot on the chair, butt on the edge, legs spread wide, putting her bald pussy on display. She looked up at me, chest rising and falling with her breathing, her exquisite tits hypnotic. My cock was as hard as it could be, shining with her spit. I wanted to lean over and bury it in her pussy, but I needed to taste her first. I wanted to make her cum in my mouth before I fucked her.\n\nI dropped to my knees on the floor and dove, face first, into Felicia's pussy. I licked her opening, bathing my tongue in her flowing juices. Felicia gasped and squirmed, but I dedicate myself to my task. I explored her pussy with my lips and tongue, becoming familiar with her taste, and the reactions that certain techniques elicited from the gorgeous blond.\n\n\"Mmmmmm,\" Felicia moaned. \"Eat my pussy, Will. Yes, fuck! Lick my cunt!\"\n\nI rubbed wet fingers over the bump of her clit while I fucked her with my tongue, then moved up to suck and lick her clit, then back again. I sucked her pussy until she was bucking her hips up into my face, covering me with her cum. Felicia went silent when she was overtaken by orgasm. She pulled herself away from my searching tongue and spasmed on the chair.\n\nAfter several long seconds, she finally gulped in a huge breath and exhaled sharply. \"Holy shit!\" she panted. \"Holy shit, that was great!\"\n\nI stood and leaned over her and kissed her, letting the taste of her orgasm flow into her mouth. As our tongues smashed together, I felt her hands wrap around my cock. I searched out her tits with my hands, holding them and relishing the feeling of her nipples pressing into my palms.\n\nFelicia pulled her face away, breaking our kiss. \"Lie down on the floor,\" she said.\n\nI did as I was bid, and stretched out on the carpet, thinking that Jack must have played with his Legos here at some point when he was a kid. My cock lay flat against my stomach, and I pushed it up with my thumb, holding it at the base. Felicia climbed over me and lowered herself down, resting her hands on my shoulders, until the head of my cock was pressed up between her pussy lips.\n\n\"Oh GOD,\" she grunted as she impaled herself on my cock. She slowly descended, until I was all the way inside her. The slick inner walls of her pussy clenched on my intruding girth and I gasped at the intensity of the sensation. Felicia rocked slowly back and forth with my cock buried in her cunt, adjusting to the penetration. I rested my hands on her hips and stared up at her tits swinging above me.\n\nAgain I noticed the sounds of frenzied fucking drifting to us from down the hall and we both looked toward the noise and turned back to face each other smiling.\n\n\"Sounds like they're having some fun,\" I said, as casually as I could, given the situation.\n\n\"Sophie and Becky made me promise I would let them fuck Robert before they would even give me directions to the cabin,\" Felicia said.\n\n\"Are you two...\" I began to ask.\n\n\"Not exactly,\" she said. \"We're mainly just fuck buddies.\" She was still rocking on my cock gently. Little moans and gasps interspersed her sentences. \"But Sophie said there would be plenty of new people to play with, so I figured, what the hell?\"\n\n\"Have you ever done any of this group stuff?\" It occurred to me just after asking that she might have no idea what I was talking about. She hadn't been here for our little orgy on Sunday night.\n\n\"I had a threesome with Sophie and Jack when I visited them last Christmas,\" she said, just as if she was telling me that she had been on a luxury cruise or driven to the Grand Canyon once. \"And Becky, Sophie and I used to have sex a lot when we were in college.\"\n\nMy cock twitched inside her, and Felicia noticed. \"Do you like the idea of the three of us eating each other's pussies?\" She began to finally move up, sliding up my shaft until just the head of my cock was still in her pussy.\n\n\"That sounds fantastic,\" I said. \"I'd love to see that.\"\n\nShe dropped herself back down, hard, sending the entire length of my cock plunging back inside her. \"Maybe you will, before this week is over. Now I'm going to use your cock to get me off. Do you have a problem with that?\"\n\n\"None whatsoever,\" I grinned. \"You just do whatever you need to do.\"\n\nThe ride was incredible. Just watching might have been enough to make me pass out with pleasure, but coupled with the sensations of her pussy wrapped around my cock, and her butt slamming down on my legs, it was a dream. I tried more than once to sit up so I could try to get my mouth on her tits, but she shoved me roughly back down.\n\n\"Stay down!\" she growled. \"You'll know when I'm ready to stop.\"\n\n\"Holy fuck, that feels good,\" I said. \"Fuck that cock!\"\n\nI managed to hang on without cumming while Felicia rode me until she was screaming, her cum flooding down the sides of my cock. \"FUCK! FUCK FUUUUUCK!\"\n\nMy cum-covered cock slapped back down against my stomach when Felicia climbed off me. But she quickly swooped back in to lick and suck her own juices off of my still-raging erection. When she was done cleaning me up, she kissed me, and I tasted the flavor of her cum, accented faintly with the taste of my own cock.\n\nI rolled over, taking her with me. Now she was beneath me, and I pinned her wrists down over her head and eased my prick back inside her soaking wet cunt. Felicia wrapped her legs around me and and humped up to meet my thrusts as I started fucking her.\n\n\"Are you close?\"\n\nI grunted in the affirmative. Her riding had brought me right up to the edge. There was no way I was going to last long now, with her gorgeous naked body beneath me, her tits bouncing with the impact of my thrusts, and her pussy squeezing every inch of my cock.\n\n\"Cum in my mouth,\" she said.\n\nThat was all it took. \"Oh fuck,\" I gasped as I pulled my cock back out of her pussy. I grabbed the slick shaft as I moved up her body, pumping briskly just below the purple head. Felicia opened her mouth just as the first thick jet of cum rocketed into her mouth. My balls churned and pumped, and she worked her mouth and throat around me, swallowing each and every spurt of seed that shot up through my cock.\n\n\"Oh fuck, that was good,\" I said, watching Felicia finish sucking down my cum. I pulled back and tumbled to the floor next to her, panting and sweating.\n\nI was still fully erect, and Felicia wrapped a hand around my shaft. \"You're not done already, are you?\"\n\n\"Fuck no,\" I said.\n\n\"Good,\" said a man's voice. I looked over to see Robert, flanked by Sophie and Becky. All three of them were naked and sweaty. There was a huge amount of cum running down both of the girls' inner thighs. Robert's cock stood out tall and proud in front of him. From where I sat, it seemed a bit longer and thicker than mine. I was a little surprised with myself at how much I was enjoying the view.\n\nFelicia was the first to move. She left me alone on the floor and crossed the room to kneel in front of Robert. She wrapped her fingers around the base of his shaft, her white skin a sharp contrast to his dark brown. She started to noisily suck him, slurping and licking Sophie and Becky's pussy juices off of his big thick prick.\n\nI got up off the floor, sat back down in the chair, and motioned Becky to come and join me. She crossed the room with a smile, and I watched her big tits gently sway in unison with her hips. She climbed onto my lap and pushed her pussy up against my cock. I leaned in to lick and suck her tits while she ground her hips against me, slowly covering the underside of my cock with her pussy juice.\n\nI looked up over Becky's shoulder to see Robert slowly easing his cock into Felicia's pussy from behind, while Felicia groaned into Sophie's cunt. Watching Robert stuff his fat black cock into Felicia's pussy made my cock even harder, and Becky noticed the twitch against her opening.\n\n\"Aren't you glad we have four more days of this?\" Becky asked, her voice wispy and playful.\n\n\"This is already the best vacation I've ever had,\" I said, truthfully. I'd been to tropical getaways, historic tours, climbing, hiking, even jumped out of planes, but here I was on a vacation dedicated to fucking.\n\n\"You guys haven't seen anything yet,\" Sophie chimed in, slightly out of breath from Felicia's efforts. \"Just wait until Friday night on Bonfire Island.\"\n\n\"Are you talking about that little island with the fire pit we saw on the first day?\" I asked.\n\n\"Yes\u2014oh fuck that's good\u2014that island.\"\n\nMy head was just beginning to fill with all manner of improbably hedonistic outdoor scenarios when we were joined by Jack, Todd, Eva and Katie.\n\n\"Hey, don't spoil the surprise, babe,\" Jack said as he strode into the room. He untied the drawstring of his shorts and dropped them to the floor, revealing his quickly hardening cock. Sophie slid out from under Felicia's face and jumped up to throw herself into her boyfriend's arms.\n\n\"Did you guys have a good boat ride?\" Becky said, climbing off my lap and walking over to Todd. She helped Todd out of his shorts and knelt to suck his already-erect cock.\n\nThis left me sitting by myself with my cock pointing straight up in the air, and I found myself mildly embarrassed when Eva looked over and made eye contact with me. She smiled and I blushed, the heat creeping over my cheeks. But it was Katie who moved first, climbing into my lap in her bathing suit and holding my cock in both her hands. Eva smiled and blushed herself before deciding to join Robert and Felicia.\n\n\"Did you guys have fun out there?\" I asked Katie after she kissed me. Her green eyes were only inches from mine, and I could see every freckle on her face. She smelled like sunscreen, but just beneath that, I could detect the smell of her arousal.\n\n\"I've never been fucked outside in broad daylight before,\" she whispered. \"It was nuts. I'm so fucking horny now I could scream.\"\n\n\"Why don't you ride my cock? And you can scream all you want.\"\n\nKatie tugged the crotch of her bottoms aside and sank down onto my cock, plunging me half-way inside her. I pulled down the cups of her bikini top to reveal her little tits and hard pink nipples. Her pussy was tight, but incredibly wet, and she slowly sank down until I was buried to the hilt. Her juices seeped out and ran down over my balls and my legs.",
        "\"Holy shit, your cock feels so fucking good!\" Katie shrieked.\n\nI lifted her up until just the tip of my cock was still in her cunt, then dropped her back down, the bottom of her thighs slapping into the tops of mine.\n\n\"Oh my god,\" Katie gasped. \"I barely know you and your fucking cock is in my cunt!\"\n\n\"AH! Holy FUCK!\" I looked for the source of the scream and saw Eva, stripped naked, lowering herself onto Robert's pole with help from Felicia. Eva's tits, bared to me for the first time, were impossible to look away from. They were even bigger than Becky's, and on her smaller frame, they looked enormous. I watched them jiggle and sway as she worked Robert's cock deeper into her pussy.\n\nThe sounds of moaning, sucking, slapping of skin on skin filled the room as our orgy took on its stride.\n\nI looked around the room, from Becky sucking Todd's cock, to Jack licking Sophie's pussy, to Felicia rubbing Eva's clit and holding her steady and squeezing her tits while she rode Robert's big dick. Katie and I had managed to get her top off, and I was licking, sucking and nibbling at her nipples while she ground her hips on me, my cock buried in her pussy.\n\n\"Okay!\" Jack called out. \"Everybody switch!\"\n\nKatie giggled and climbed off my lap, gasping when my cock slid out of her cunt. She took her swimsuit bottoms off before moving over to Todd. Sophie appeared between my legs, and started sucking Katie's pussy juice off of my cock. Eva climbed off Robert and sat back on the couch with her legs spread wide, and Jack aimed his cock at her open pussy and slammed it inside her. Becky took Eva's former place, riding Robert's cock, and Felicia settled herself down onto her admitted fuck-buddy's face. With Robert licking hungrily at her pussy and asshole, Felicia held Becky against her and they kissed each other with fierce intensity. I looked back to see Todd and Katie sucking each other. Todd was on the floor, and I could see his tongue snaking into Katie's pussy while she sucked his cock.\n\nI looked down to find Sophie's eyes on mine, with my stiff prick stuffed in her mouth. She popped her mouth off my cock and smiled. \"Stand up,\" she said.\n\nI did as I was bid, and Sophie had me stand aside while she put her left foot up on the arm of the chair and slid her right foot out to the side on the floor, spreading her legs wide open.\n\n\"Now fuck me,\" Sophie said. I took another look around the room, taking an extra second or two to watch Eva's tits bouncing as Jack fucked her, before turning back to Sophie and stuffing my cock in her dripping pussy. I grabbed a handful of her short blond hair and tugged her head back as I thrust. Reaching under her with the other hand, I squeezed her swinging tits.\n\nFresh off a recent orgasm, I had no problem fucking Sophie until she was shrieking and cumming all over my cock. When I finally pulled out of her for the next switch, she collapsed on the chair to catch her breath, and my cock and balls were shiny with pussy juice. I turned to watch Jack pull his cock out of Eva and start shooting his load all over her tits. He shot his hot spunk over and over onto her big creamy globes, and she sampled a few tastes of his cum while Jack rolled off and sat down beside her to recover.\n\nI took Jack's place between Eva's legs and leaned over her to suck on her cum-covered tits.\n\n\"Oh my god you're eating his cum,\" Eva gasped. She wasn't wrong, but I was so horny, I didn't care. Her tits were incredible, and I cleaned every square inch of them, licking up and eating my friend's cum as I went. And while she was surprised by me, the look on her face when Jack started sucking Robert's cock was priceless. Just as I eased my cock into Eva's pussy, Jack rolled off the couch to hold Becky through a powerful orgasm. Sophie and Felicia rolled into a heap together on the floor, caressing and kissing. Becky collapsed on Robert's chest and dislodged his thick cock. Jack was there to lick her freshly fucked pussy before falling on Robert's cock, sucking it into his mouth. Robert showed no sign of alarm, but the look on Eva's face was one of dumbfounded shock.\n\nWhen Becky rolled off of Robert, she left just the two guys there in the middle of the floor. Robert propped himself up on his elbows to watch Jack suck his cock.\n\nIt was too much for me. The room around me was filled with the sights and sounds of frantic sucking and fucking. Eva's pussy was clenching down on my cock, destroying my ability to hold back.\n\n\"Oh shit, I'm gonna cum,\" I told her.\n\n\"Do it,\" she said, her attention now back on the two of us. \"Cum inside me.\"\n\n\"I didn't get a chance to make you cum,\" I complained.\n\n\"Plenty of time for that later,\" she grinned. \"Just fucking cum!\"\n\n\"Oh fuck oh fuck oh FUCK!\" I roared as my balls tightened and began pumping their second hot load of the day deep into Eva's pussy. \"Oh Jesus fuck!\"\n\n\"Mmm,\" she cooed. \"I can feel your cum shooting inside me, Will. It feels so good and warm!\"\n\nI lost track of the rest of the room and collapsed against Eva's chest. I caught my breath with her face beside mine and her tits pressed against me while my cock slowly shrank inside her.\n\nWhen my vision cleared, I climbed off of Eva and sat down next to her. We watched as Robert bellowed that he was cumming and Jack went to work swallowing his cum. Sophie and Felicia rocked together, their mouths locked on each other's pussy, muffled moaning indicating their orgasms were powerful ones. Becky had joined Katie and Todd, and when her boyfriend pulled his cock out of the redhead's pussy, Becky was there to suck his spurting cock into her mouth and swallow ever drop of his cum.\n\nAs we all slowly recovered, we looked around at each other and traded smiles, but no words. All four of us guys had cum at least twice so far today, and it was going to be a while before we were ready for more. But after dinner, somehow we were ready. And things got going again when the sun went down.\n\n* * *\n\nIt was another Naked Night. Maybe it wasn't planned, but since no one bothered to put any clothes on after our afternoon fuck-fest and naps, neither did I. I napped for two hours with Eva in my bed, snuggled up against me. Waking up with her naked body pressed against mine on any other day would have resulted in an instant erection, but I was still pretty well drained.\n\nThere were now too many of us to sit at the dinner table, so we moved around while we ate, going from the living room, to the kitchen and back while we ate, drank and laughed. When dinner was over and the kitchen was clean, we moved into the living room, where Sophie proposed an activity.\n\n\"Jack and I are so glad you could all be here with us this week,\" she said. \"This is so exciting, and definitely the best group we've ever had.\"\n\n\"How long exactly have you guys been doing this?\" Katie asked.\n\n\"Since we were eighteen,\" Jack said. \"Ever since we started coming up here without my parents, so seven years.\"\n\n\"And how did all of this get started?\" Eva motioned around the room, as if to remind us all that we were naked, and that just a few hours ago we had been fucking each other's brains out right here in this room.\n\n\"Well,\" Sophie said, looking at Jack and smiling. Jack held her hand and they kissed. \"Should I tell them?\"\n\nJack nodded and kissed her again. \"It's a pretty great story,\" he said.\n\nSophie took a sip of her wine. \"So Jack and I were up here alone that year, and we were fucking like rabbits all over the cabin. We fucked in every room, in the kitchen, both bathrooms, everywhere. But we started to get a little more adventurous in the middle of the week. So out in the boat on Wednesday, I sucked his cock, and it was super scary and exciting. There were other boats going by and everything.\"\n\n\"You mean like when we all almost got busted by the Marine Patrol a few days ago when we were all getting naked?\" I asked.\n\n\"Yeah, it was crazy, but we loved it!\" Sophie said. \"The idea of getting caught at any seconds made it so much hotter. So the next day, we moved up to straight up fucking on the boat.\"\n\nKatie and Eva both giggled, and I remembered that they had spent some time out on the water just this morning with Todd and Jack. I squeezed Eva's ass playfully and she kissed me on the cheek, causing my cock to stir for the first time since our orgy.\n\n\"So anyway,\" Sophie continued. \"We were busted.\"\n\n\"Oh shit!\" Becky exclaimed. \"By the lake cops?\"\n\n\"No,\" Jack said, grinning. \"By two couples out on their boat going by us.\"\n\n\"They were a little older,\" Sophie said. \"Probably about the same age as we are now, Jack?\"\n\n\"Yeah,\" Jack said. \"Tina said she was twenty-five.\"\n\n\"So it was Tina and Matt,\" Sophie said. \"And the other couple was Jason and Amber. They were maybe thirty feet away when we looked up, which is nothing on the lake. They were just floating by applauding us.\"\n\n\"Yeah, and all four of them were naked,\" Jack added.\n\n\"So while Jack and I scrambled to find our bathing suits, Tina and Amber started sucking their guys' cocks right there in front of us.\"\n\n\"Eventually, they invited us to hang out at their cabin, and well... we had a blast,\" Jack said.\n\n\"One night,\" Sophie said. \"They had an orgy that made this afternoon seem tiny and tame. And we've been doing it ever since. We usually try to plan our trips for the same week as Tina and Matt.\"\n\n\"So those other people are up here on this lake right now?\" Robert asked.\n\n\"Actually, they said they'd be getting to their cabin tomorrow,\" Jack said.\n\nThe idea of expanding our group even further was certainly interesting to me, but I also would have been perfectly content to stay here in this cabin for the remainder of the week with just the people we had here.\n\n\"They'll be at this Island you keep talking about, won't they?\" Becky asked.\n\nJack nodded, and Sophie leaned over and whispered in Becky's ear. Becky listened, then smiled and nodded.\n\n\"Yes, that does sounds impressive,\" Becky said.\n\n\"So you guys have been having sex with other people for pretty much the whole time you've been together?\" Felicia inquired. \"And it never caused any problems for the two of you?\"\n\n\"We had a couple of rough patches,\" Jack admitted. \"But once we talked it out and set down ground rules we were both comfortable with, we stopped fighting and started having fun.\"\n\n\"What kind of rules?\" Katie asked.\n\n\"Pretty basic stuff, really,\" Jack said. \"Total honesty mostly.\"\n\n\"If I want to fuck a guy,\" Sophie said, \"I always tell Jack first, and the same for him.\"\n\n\"But mostly,\" Jack said, \"we do it together.\"\n\nThe discussion of specifics continued and I began to look around the room with more interest, as the color in the other's cheeks began to rise, and the touching became less and less casual. Eva was right up against my right side, and Katie sat close on my left. It was after I saw Sophie wrap her fingers around Robert's growing cock that I moved both hands onto the bare thighs of the young women beside me. The conversation continued, but it was now punctuated with little gasps and hums of pleasure as we started touching each other. My cock grew hard quickly when Katie pulled my hand down between her legs and I discovered the wetness of her arousal. Eva and Katie both worked my prick into a full erection with their hands.\n\n\"So I was hoping you guys might be able to do me a favor tonight,\" Sophie said. She emphasized guys in a way that made it plain she was talking about just the men.\n\n\"What do you have in mind?\" I looked at her and raised my eyebrows.\n\nMy cock pointed straight up in the air, tall and proud. The other guys were all just as erect. Sophie had one hand around Robert's big brown pole, and the other was slowly stroking Todd's cock. Jack sat between Felicia and Becky, who were passing his thick prick back and forth. All of us looked at Sophie.\n\n\"I want all four of you to fuck me at the same time,\" she said.\n\n\"You greedy bitch,\" Becky teased. \"That does sound pretty fun though.\"\n\n\"Yeah, what are the rest of us supposed to do while you hog all the cock?\" Katie whined.\n\n\"I'll keep you company, sweetie,\" Felicia said. \"We can have all kinds of fun without the boys. I brought some toys from home.\"\n\nSophie looked at Becky, who nodded and smiled. \"That's cool with me.\"\n\n\"Eva?\" Sophie asked. \"Katie?\"\n\n\"Just as long as you don't hog him all night,\" Eva said, elbowing me in the ribs. Then she kissed me and I wondered if I would be able to let her go to play with Felicia. For the last ten minutes, it had been hard for me to stop thinking about her squeezing her tits around my cock.\n\n\"Yeah, same here,\" Katie said. Then to Felicia, \"Toys, you say?\"\n\nFelicia nodded and licked her lips, looking at the skinny redhead beside me with obvious lust.\n\n\"How about the guys?\" Sophie continued. \"Babe?\"\n\n\"You know I'm in,\" Jack said.\n\n\"Me too,\" Todd added.\n\n\"Yeah sure,\" I said. \"Definitely something new.\"\n\nSophie turned to Robert.\n\n\"Oh fuck yeah,\" Robert said, scooping Sophie up into his arms and plopping her down in his lap. He immediately began sucking on her tits, and Sophie reached behind her to stroke his cock.\n\nFelicia stood and took Katie's hand and guided her out of the living room and down the hall. Becky followed after a quick kiss and a \"have fun\" for Todd. Eva lingered long enough to kiss me fiercely. \"Save something for me later,\" she whispered. She gave my cock a long slow tug before leaving Sophie here with just the guys.\n\nSophie climbed off of Robert's lap and stood in the center of the room. Jack and Todd moved in to either side of her, and she grabbed their cocks as they began kissing along her neck and shoulders and fondling her breasts. I sat back watching, and holding my cock in my hand. Jack and Todd each took one of Sophie's tits in his mouth. Todd had his hand between her legs, and Jack was grabbing and smacking her ass. Robert stood and moved in front of Sophie, his cock waving hard in the air.\n\nSophie sank to her knees and opened her mouth. Robert stepped forward and Sophie took him in, her lips slipping down the thick shaft while she worked Jack and Todd in her hands. I stood up and squeezed in between Robert and Todd, and Sophie quickly moved her face and took my cock into her mouth, giving it a few hard sucks before moving back to Robert.\n\nJack held the back of Sophie's head and pushed her forward, driving Robert's cock into her throat. She gagged, pulled back, and spat onto the big dick in front of her before diving back on again.\n\n\"Oh yeah,\" Robert groaned. \"You like sucking that cock, don't you?\"\n\nJack was pushing her face lower again, and Sophie grunted before she gagged again. This time she pulled back and spat on my cock. I held my rod by the base and slapped its wet length on Sophie's face and she licked it until the others moved in and did the same. Now she had four cocks in her face, prodding and slapping. She moved from one to the next, licking and sucking.\n\nI caught a perverse little shiver of pleasure the first time my cock rubbed up against Todd's, and it kept happening. All of us were in such close quarters there was no way to avoid bouncing off all three of them. I lost my breath when Sophie grabbed my cock and Jack's and pulled us together. We were right next to each other and Todd and Robert backed off to make room while Sophie pressed the undersides of our cocks together and tried to take both of our heads in her mouth at the same time.\n\n\"Holy fuck, that's hot, baby,\" Jack moaned. \"Suck those cocks!\" He pumped his hips a little, and his entire shaft moved up along mine and into Sophie's mouth, then he pulled back again and came down, causing our balls to meet while his girlfriend licked and sucked the heads of our cocks.\n\n\"Our turn,\" Todd said. I turned to see he and Robert standing with their cocks pressed together in exactly the same way. Robert had his hand around both of the big hard rods and Sophie crawled over to bathe them in her saliva. This left me with my cock in Jack's hand, and he quickly knelt down and took a few short hard sucks.\n\nWhen he stood, I dropped to the floor and tasted his cock for the first time. The spongy top passed onto my tongue and I moved my lips over the smooth hardness of his shaft.\n\n\"Hey,\" Sophie said. \"You guys are supposed to be fucking me, remember?\"\n\n\"Just a quick taste,\" I said after pulling Jack's cock out of my mouth. \n\nI got back to my feet and Jack and I approached Sophie. She had a sheen of spit over her chin and cheeks, and she was pumping two hard cocks in her hands. Jack held his cock by the base and pointed it into Sophie's mouth. She alternated from cock to cock, sucking her boyfriend, then Robert, then Todd, while I knelt down behind her and reached underneath her to feel the wetness of her pussy. She was sopping wet. Her pussy juices were already leaking down her legs. I wrapped and arm around her waist and rolled back onto the floor, taking her with me. She reached down and pointed my cock at her cunt, nudging the swollen head between her pussy lips before dropping down, burying my prick inside her.\n\nI reached around Sophie and held onto her tits as she rode me. The other guys circled around us to take turns feeding her their cocks. After a few minutes, Sophie hopped up and I stood, making room for Robert to lie down in my place. Sophie resumed her position, lowering herself down onto Robert's stiff rod while she sucked her own juices off of my cock. The pressure in my balls was building quickly. Sophie's frantic humping up and down on Robert's cock was bringing her closer to cumming herself.\n\nWe all managed to hold back while Todd and Jack took their turns on the floor inside Sophie's pussy. Sophie lifted herself off of Jack's cock, only to slowly lower her ass onto it instead. Todd, Robert and I stood back and stroked our cocks, watching Jack's prick disappear into her asshole. Robert moved in and slowly stuffed his cock into Sophie's pussy, and Todd and I fed her our cocks while they double-fucked her. I lost it when Sophie pulled my cock against Todd's and sucked on both of our heads at the same time. Roaring wordlessly, I watched as spurts of hot cum started shooting out of my cock and into Sophie's mouth. Todd was right behind me. Sophie swallowed over and over as we simultaneously spunked into her mouth. When we were done, our cocks both had globs of each other's cum hanging off the ends, and Sophie greedily sucked them clean, one after the other.\n\nRobert was next to cum. His entire body went stiff as he emptied his seed deep into Sophie's pussy.\n\n\"Holy shit,\" Jack groaned. \"I can feel him cumming.\" Then he exploded, firing his hot load up Sophie's ass while she orgasmed again, clamping down hard on the two cocks inside her.\n\nI collapsed into a chair to catch my breath, while Jack, Sophie and Robert disentangled themselves on the floor.\n\nThe orgasmic shriek coming from down the hall reverse the deflation of my cock.\n\n\"I need a break,\" Sophie gasped. \"Somebody go get those guys back out here.\"\n\nI walked down the hall with my cock bobbing up and down in front of me. When I turned to to look into the first bedroom, I saw Felicia holding a vibrator to Eva's clit. Katie was sucking on Becky's pussy, who was holding her left breast in one hand, using it to muffle Eva's moans and cries of pleasure. Watching Eva suck on Becky's tit brought my cock back to full hardness.\n\nFelicia looked at me over her shoulder. \"Is she done hogging you guys yet?\"\n\n\"Yeah, I think she's ready to share now,\" I said.\n\nFelicia jumped off the bed, leaving Eva's pussy unattended. I took her place, licking my way up and down the delicious open snatch. When Eva's moans became louder, I realized that she wasn't sucking on Becky's tits anymore, and indeed, Becky and Katie had left us alone.\n\n\"Close the door,\" Eva said. \"I need you to do me a favor and fuck my brains out.\"",
        "When I returned to the bed, Eva was waiting for me on all fours, and she sucked my cock into her mouth and down her throat. Her nose was pressed up against my stomach and my balls bounced against her chin.\n\n\"Holy fuck,\" I groaned. \"That feels so fucking good.\"\n\nEva sucked my cock until it was thoroughly coated in saliva. Then she lay back on the bed and spread her legs again, revealing the pink opening of her pussy. Her huge tits rose and fell gently with her breathing. \n\n\"Fuck me,\" she said. \"Right now. Fuck me with your gorgeous cock.\"\n\nAcross the hall, in my own bedroom, my phone vibrated, unnoticed.\n\nI climbed onto the bed, and holding my cock by the base, I slipped it between Eva's pussy lips and thrust inside her.\n\n\"Yes!\" Eva gasped. \"Give me that fucking dick, Will!\"\n\nI held onto her incredible tits as I began to pump my cock in and out of her cunt. I leaned over and sucked her nipples, and Eva continued to encourage me as I fucked her.\n\n\"So fucking good!\" she wailed. \"So fucking deep!\"\n\nI sat back up and held onto her legs while I drove my cock deep into her pussy, my hips smacking against her ass.\n\n\"Do you like that cock in your pussy?\" I husked.\n\nEva arched her back, thrusting her tits up into the air, and her pussy began clenching and spasming around my cock. She didn't reply to my query, but the flood of girl-cum that flowed from her pussy was answer enough. She stayed arched up and trembling silently with my cock buried to the hilt in her pussy for a long time. When she finally fell back onto the bed, she pulled huge gulps of air into her lungs.\n\n\"Holy fuck!\" she screamed. \"Holy fuck, I don't think I've ever cum that fucking hard before!\"\n\nI had stopped the pumping of my cock, and was now just holding it inside her, enjoying the sensations of the effects of her orgasm.\n\n\"All done?\" I asked.\n\n\"Fuck you!\" she smiled and pushed me out of her. \"I'll tell you when I'm done!\"\n\nShe directed me onto my back, then impaled herself on my cock. I watched in awe as her huge tits bounced and she ground herself against me, moving my cock ever deeper into her cunt.\n\n\"Oh yeah, fuck it,\" I moaned. \"Fuck my cock.\"\n\n\"Jesus Fuck, it feels so fucking good,\" she whined.\n\nI pulled her down onto me and latched my mouth onto one heavy breast, then the other, but she pushed herself back up again and began riding hard on my cock. She slammed herself down, pounding me into her pussy over and over.\n\n\"Cum all over my cock again,\" I said.\n\n\"I'm so close,\" Eva said. \"I want you to cum with me.\"\n\n\"Just a little more. Your pussy feels so fucking good, Eva. Ride my cock just a little more.\"\n\n\"Grab my fucking tits,\" she growled.\n\nI happily pressed my hands into the huge bouncing globes, Eva's hard nipples pressing into my palms.\n\n\"Oh my god, I'm gonna fucking cum again!\" she wailed.\n\n\"Oh fuck, me too,\" I gasped as my balls began churning and pumping. A thick stream of of hot cum surged up through my cock and into Eva's pussy.\n\n\"Fuck!\" she screamed. \"Holy FUCK! I'm cumming! I'M CUMMING!\"\n\nHer pussy squeezed hard on my cock, stopping the flow of cum momentarily. \"AAAAAAAGH!\" she screamed. Her eyes were squeezed shut, and she fell forward, her tits pressing into my chest. As her spasm passed, my cock continued its delayed delivery of cream deep into her cunt.\n\nWe kissed, almost desperately, and I rolled us over without pulling my cock out of her saturated pussy. I started thrusting again, not giving my tired dick any time to relax.\n\nA scream from the living room: \"HOLY FUCK I'M CUMMING!\"\n\nIt sounded like Felicia, but it was hard to tell through the walls, and over the sounds of Eva and I enthusiastically fucking each other.\n\nI pulled my cock out and Eva rolled over onto her hands and knees. Reaching beneath her, she guided me back into the wonderful warm embrace of her pussy. My balls were soaked with her cum and my own cock cream. They slapped wetly against her pussy as I fucked her hard from behind.\n\n\"Harder!\" she cried. \"Fucking HARDER!\"\n\nI reached one hand under her body and took hold of one of her huge swinging tits. The other hand I tangled in her dark hair, pulling her back and up as I drilled my cock over and over into her cunt. I wasn't sure if I could even cum again, but as long as my cock was still this hard, I was going to use it to make Eva feel good.\n\nDown the hall, the sounds of sucking and fucking crescendoed. Eva's screaming was giving the entire group a run for their money.\n\n\"FUCK ME! HARDER! FUUUUCK MEEEEEEEE!\"\n\nSomehow, I came again. If there was any cum, it wasn't much. But my vision blurred and I let go of Eva's hair and her heavy tit as my cock emptied me completely into her spasming pussy. I started to fall, exhausted. I managed to extract my dick from Eva's dripping pussy before collapsing on the bed beside her."
    ],
    "authorname": "Megamuffin",
    "tags": [
        "threesome",
        "foursome",
        "orgy",
        "gang bang",
        "camp"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-week-on-the-lake-ch-02"
}