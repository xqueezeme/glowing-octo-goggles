{
    "title": "If I Knew Then... Ch. 01",
    "pages": [
        "We have all said it. \"If I was eighteen again and I knew then what I know now\"\n\nBut what would we have done differently?\n\nFor a start I would not have gone out with my first girlfriend. Oh she was nice enough, and we had a good time and learned a lot from each other, but since I wouldn't have to learn it again I might as well go for a different experience. \n\nYou see I met her (Penny) at a party, but only later found out that a different girl (Jill) who I fancied, had come to the party hoping to see me. I have often wondered what would have happened if I had chatted to her instead. Because I went with Penny I never got a second chance with Jill. She ended up marrying her first boyfriend, whom she met about a month later. He was a church going hypocrite, who I know has having sex with her well before marriage, even if they did settle down and have three kids, and she ended up spending a boring life between church and the school run. Such a waste of a bright beautiful girl.\n\nOf course if I was back to being 18 I would still be at school, and still have to live with my parents, and still have no money. But with what I know now I could breeze through school, get on better with the old folks and I would be prepared to work and take risks to make some cash, instead of being the typically lazy teenager I had been first time round. Knowing the Derby, Football League and FA Cup, and World Cup winners would also help. (Gambling, and alcohol are both legal at 18 in the UK)\n\nStill I would not have changed my parent's attitude to sex, so I would need to sort out a place to take girls once I charmed them with my mature and devastating personality. Again 'what I know now' (i.e. That one of my school friends became a swinger who invited me to join his girlfriend in a threesome when I was twenty one) would help. His house was not far from the girls school and both his parents worked, so we would be undisturbed on the afternoons... a frank chat, with the hint that if he let me use his spare bedroom to seduce girls I might get one to do a three way with him would set me up nicely.\n\nSo if I could go back, when would be the time to choose? February 1980, last year of school, my parents are away for the weekend, my friends have been at my house all day for a jam session and the girls are about to arrive for that fateful party. Just like last time, except this time there would be white wine in the fridge, the house would be clean and tidy, and I would have taken a little time to do some personal grooming. I would have also sorted some snacks and appropriate music, and arranged the furniture. It would all be just a little bit better. So what would have happened? What story could I now tell about that party, and the events that followed....\n\nWhen the doorbell rang I was ready to welcome them in. First on the doorstep was Jo, a sharp girl in every way, skinny, witty, natural blonde, not a curve on her. Bossy as hell, and definitely on my hit-list for later. Behind her was Charlotte, a short round girl with glasses, funny and charming, but we never had a spark. Her friend Alison was close on her heels, a tall redhead with a strong square jaw who I thought was a selfish mare, and she didn't think much of me, but the last two from that carload were the important ones. Penny, a quite gorgeous little brunette, and Jill, who I had fancied for ages. She was tall and slim, but not skinny, with a bright broad smile and sparkling eyes, a charming laugh and such beautiful hands that I used to dream of them.\n\nI welcomed each girl in turn, taking a moment to admire Penny (and remember what she had looked like a year later, kneeling naked on the floor of the bathroom, sucking my cock for the first time as my anniversary present) but when I looked into Jill's eyes and said \"Hello, come in, can I get you a drink?\" and she smiled back, I knew that I had made the right choice this time.\n\nI broadened the invitation to all the girls, ushering them in to the living room, introducing them to the guys that were there, explaining that the others had not yet arrived but there should be several car loads more on the way, and delegating one of my friends to start pouring wine. I ran that party so well that night, playing the charming host, and ensuring that my friends had enough but not too much to drink, the music kept pace with the mood, and nothing got broken. But I kept close to Jill as much as possible, and even allowed Penny to flirt with me just enough to make Jill a little jealous. I charmed her. \n\nI took her jacket, got her a glass of wine, engaged her in conversation, showed her the rather cool Korg synthesiser that one of the band had just bought (she played piano, it was an easy excuse to keep talking) got a plate of nice stuff to share when we had supper later on (she even volunteered to help me prepare stuff) and did the food flirting thing, popping a grape into her mouth. It let me touch her lip with my finger, and I held her gaze and smiled. She glowed. \n\nAnother glass of wine, some dancing, a moment in the hallway to cool down and catch our breath, I took her hand to lead her back to the dance floor, and after the next few dances, ever closer and just a little more daring, a touch on the shoulder, a lean in close to say something over the noise, I took her hand again to lead her to the kitchen past Jo and my friend Owen who were attempting to remove each others lips by mutual suction power. We slid past the kissing couple, me giving Jill a meaningful glance, and over to the fridge, where long cool drinks of citron presse were downed. Her face was flushed from dancing, a little perspiration sheen as if we had just had sex, and as I took her empty glass I stepped in close and looked down into her eyes. \n\n\"I am glad you came tonight.\" I said, \"I was hoping you would.\"\n\nShe looked a little coy, and said \"Why?\"\n\n\"Because I was hoping I might have a chance to talk to you, and dance with you and maybe to kiss you.\" Her smile and uplifted head was all I needed to see, and our lips met lightly. A second kiss, and a third followed, each a little more confident, a little more open, a little longer. Gently, not rushing to 'snog' as teenage culture called it.\n\nThe fourth kiss was longer still and I felt her relax in my arms, I was holding her close now, and could feel her body warm against mine. I pushed her back a little against the counter beside the sink, and let her droop a tiny amount so my knee was pressed a little between hers. I kept the kiss long enough to use up all her breath and pulled away gently so she could take in some oxygen. I could feel her body respond, a little dizzy, her heart thumping as I held her firmly and looked into her eyes again. \n\n\"That was very nice,\" I said, \"Would you mind if I did that again?\"\n\n\"Please, \" was her reply.\n\nWe were disturbed a few minutes later by Owen. And Jo. She made some typically catty remark, but Jill just stuck out her tongue at her, and draped her arms round my neck before kissing me again. A good sign.\n\n\"Shall we go and dance?\" I asked, and without waiting for a reply dragged her back into the living room where Bat out of Hell was being replaced by Judie Tzuke. We joined the slow dancing couples, and I gently explored her back and shoulders with my hands, and the nape of her neck, while occasionally brushing her cheek or ear or neck or lips with mine. It wasn't fair really. Between the rush of hormones and the drink and the flattery and the confident and yet unthreatening way I handled her, along with the music and the company, she was almost trembling with previously unexperienced emotions. She was on the verge of lust.\n\nI had imagined that my seduction of Jill would take weeks. I knew she had never had a boyfriend before, and expected her to be shy and wary and that it would be a long time to get more than a kiss, since that was how Penny had been. But I knew that if I played this just right I might well get a lot further right now than I had planned. \n\n\"Are you ok? Would you like to get some cooler air?\" I asked. She seized the opening and said \"Yes\" as she moved towards the door to the hall. We had to pass the chair in which Lenny was sitting with Penny on his knee. They were kissing with their eyes closed, and I noticed her put her hand on his to stop it moving up from her knee. Lenny and Penny, I thought, that one won't last.\n\nIn the hall I took her over to the door, going to open it to let in the cold winter air, for the house was oppressively hot, but she took my hand and pulled me toward her instead. She was standing at the bottom of the stairs, and she grasped the front of my shirt as she kissed me, then stepped up one stair and did it again, then stepped up again. I had to step after her to keep in reach. When we got to the top landing she looked around and said \"Which one is yours?\" I nodded to the bedroom door on the right.\n\nShe stood in the middle of the room (which was much tidier than I would normally have kept it) and looked around. \n\n\"I have never been in a boy's bedroom before\" she said\n\n\"I have never had a girl in my my bedroom before\" I replied.\n\nShe laughed, a beautiful light laugh, that got suddenly richer and deeper as she stepped towards me and said \"So what do we do now we are here?\"\n\nWe kissed, I hugged her to me, and with one hand on her shoulder blades to crush her breasts against my chest, I pushed down on the small of her back to push her hips against my thigh. I held the kiss until she ran out of breath and had to throw her head back to get air, which allowed me to kiss her neck, and slide my mouth down to her throat. \n\nI had bent my knees to get my head that low, and this placed my leg between hers. She sagged against my thigh as I straightened up again to kiss her lips, pulling her tight against me, knowing that this would ruck the fabric of her skirt up between her thighs and press against her pubis. She reacted with an eye opening gasp, and then threw herself into another kiss, pushing her hips forward to rub herself against me.\n\nI turned her round, and still kissing her, lowered her to sit on my bed, then knelt in front of her. She had to part her knees to let me come close enough to hold her, and this meant that her skirt was pushed up her thighs so that when I was again tight against her this time the bulge of my erection in my jeans was directly against the crotch of her tights. Four layers of material, three of them pretty thin, was all that lay between my cock and her clitoris, but I knew that it was unlikely that any more would be removed unless this girl went really wild. Virgins just don't go all the way on first dates, even after three glasses of white wine. \n\nFor what seemed eternity we kissed, our hands roaming outside each other's clothes, and she began to grind her crotch against me. Her breathing began to get shallow, her cheeks flushed, she began to bounce up and down against my cock, and broke off the kiss to lean back and push harder still, lifting her legs to rub more of her cloth encased pussy up and down. Her eyes took on that far-away-but-right-here-in-the-present look that I have seen girls get -- she didn't know what was happening to her, but she was enjoying it. It frightened her but she wasn't going to stop. It was too good, but too new, but too...\n\nShe came. Gasping, groaning, thrashing not knowing what to do, writhing in my arms, throwing herself back across the bed, then reaching for me to pull me to her and kissing me with all the breath left in her body. \n\nI was between her legs, her thighs spread wide, my now aching hard on pressed against her crotch. I let my hips move as they wanted to do, but kept it slow and soft. If I let myself get carried away now I knew I would scare her. Maybe the next time, or the time after that. I could wait, but I was sure I would not have to wait long.\n\nSo I slowed it down, and still kissing her rolled off her and pulled her on top of me to cradle her in my arms and let her find her own comfortable position. If she wanted to carry on she could easily push against me, or climb on top. She snuggled down against me but lifted her head to kiss me. In a small voice she said \"That was...\"\n\nI filled in after she paused \"Fun? Good? Lovely?\"\n\n\"Yes...\"\n\nShe paused again and then said \"I don't know exactly what happened there. I think I might have ...\"\n\n\"Had an orgasm.\"\n\n\"Yes... I think.\"\n\n\"Was that your first?\"\n\n\"Yes. It was really...\"\n\n\"Nice? But a bit scary?\"\n\nShe just nodded in reply. \n\n\"I thought I was going to die the first time I had one.\" I said as I hugged her. \n\nShe was quiet for a moment, then said \"Who were you with?\"\n\nI laughed, and said \"No one. I was just a kid, I had some interesting dreams and woke up as I came. It was weird.\"\n\n\"So have you ever done it with anyone?\"\n\n\"Not yet.\"\n\nShe snuggled closer and said \"That's awful. You should have someone to hold you when that happens. \"\n\nI held my breath. \n\nHer hand was on my stomach. Inches away from my still erect cock. \n\nI wondered what to say, and managed \"You're right. That would be good.\"\n\nShe raised her head and said \"Would you like me to hold you?\"\n\nThe question rose in my mind of what exactly she meant, but I simply said \"Yes\"\n\n\"Do you need me to do anything?\"\n\nScenarios flashed through my mind. She might be on for anything. Take it slowly. \n\n\"Could you come up to lie on top of me?\"\n\nI pushed her hip upwards and she slipped her leg over me. I made sure the skirt which had ridden up over her bottom stayed bunched at the small of her back. I put both hands on her bottom to pull her into position, her thinly covered pussy against my jeans above my cock. \n\nIt had been a long time since I last held a tight teen ass in my hands, and it was a joy to rock her back and forth along the ridge of my erection. I knew that each time she slid down my hands would be pulling her ass and pussy a little open, a sensation that would be new to her, making her feel a little more exposed, vulnerable but brazen. She flexed her hips to push against me, and I knew this was for her own pleasure. I wished she was naked with my cock inside her. \n\nI pulled her down to kiss her, putting her ass in the air and making her spread her legs wider to keep rubbing against me. She was humping me, giving in to her own pleasure again. \n\nWith my hands hooked over her shoulders I could pull her hard against me, and she began to groan again with each thrust of her hips. I moved my hands down to her flanks, then up over her ribs to cup her breasts. Squeezing them in time with her hip thrusts I heavily kissed her throat, and a little lower down toward her soft skinned breast. She was on the verge of coming again, so I grasped her hair and pulled her into a fierce kiss while my other hand gripped her ass and drove her into some fast spasmodic, climactic movements. \n\nAs she came she pulled up to breathe, allowing me to slip my hand further round her ass, to press a finger along her crotch, feeling the soft dampness of the pussy beneath the soaked knickers and tights. My other hand was squeezing her breast, as she wriggled and gasped, before collapsing in my arms again. \n\nIt took a few moments for her to recover, and I stroked her hair and back, and whispered gently to her, telling her she was beautiful and lovely, all of it true. \n\nWith a deep breath she push herself up and stretched like a cat, then looked down at me and grinned. \n\n\"You made me do it again,\" she said, and then in slightly shocked tones \"Oh no, I got carried away! What about you?\"\n\n\"I'm fine, it's ok.\"\n\nHer face was heart-warmingly, comically, distraught as she said \"But it was your turn!\"\n\nI pulled her down to kiss her and said \"You can get me next time.\"\n\nHer voice was tinged with confusion and hope as she said \"Next time?\"\n\nI looked at her intensely and said \"I want to see you again. I want to go out with you, walk and talk and play music with you, play chess as well, although I'm not much good at it and I know you are on the school team, but I won't mind if I loose as long as I can be with you.\"\n\nShe was almost in tears as she said \"You mean that? But that's lovely!\"\n\n\"And you are lovely too, and I would love to stay here with you, but your lift will be leaving soon, so we had better get you downstairs and maybe you should brush your hair first.\"\n\nShe tried to argue for a moment, but I overruled her \"I am not taking the risk that your parents will see you coming down stairs with your hair so beautifully rumpled. They would never let me see you again.\"\n\nShe sobered up at that. \"You are right, although it is Penny's mum who is picking us up, and we are all staying over at her place.\"\n\n\"Well, even so, I don't want her gossiping either. So go to the bathroom and I will meet you downstairs in a minute. I had better make sure the others haven't wrecked the joint.\"\n\nDownstairs Penny was still snogging Lenny, Owen was in the cloakroom with Jo, and various other couples and drunken singles littered the dining room. At the kitchen table Allison was arguing with a guy called Tim about religion. Typical party really. \n\nWhen Jill arrived down stairs I got her a non alcoholic drink, and told her she looked fabulous. She did. That shy, but loose and slightly brazen look of the girl who has just had orgasmic sex was on her. We swapped phone numbers, and arranged to meet down town the next afternoon. As she was leaving she put her hand to my cheek and gave me a short but memorable kiss on the lips, and murmured \"Goodnight handsome man\"\n\nI was touched to the heart.\n\nI had high hopes of what would happen the next day. \n\nOf course in this reality I had earned enough in my summer job to buy a car, although it would have been carefully chosen. Something fun, but safe and unthreatening for parents. A Mini. A car beloved by mothers everywhere and seemingly unsuitable for seducing daughters in. Although parents may be amazed at how flexible a horny teenage girl can be. \n\nSo the following afternoon I arrived in the city centre at the designated spot, a little early, and waited with the engine running to keep the car warm for Jill to arrive. She appeared with a small overnight bag, grinning widely, long hair flowing in the cold breeze, all wrapped up in long coat and scarf and gloves and black boots and jeans.\n\nNow jeans are an interesting item of clothing when seducing young women. They have their advantages and their drawbacks. On the plus side the continuity of the material, and the fact that everything is covered with no access, allows a little more freedom for hands to roam on a girl who is wary or nervous. A girl will object to a touch on a bare knee, or even one covered in tights (Pantyhose for American readers) much more strongly than a touch on a leg, even thigh, covered in denim. Trousers allow a girl to move more freely, and to wrap her legs around a boy without the restriction of a skirt when properly down, or the brazen nerve required to lift a skirt up. \n\nOn the minus side, tight jeans are very hard to get off, both practically and mentally. Girls generally only wear panties beneath them, so while you might get a hand up a skirt if a girl had tights on (still no easy way to access bare flesh) to take her jeans off is a major step towards being naked. Just opening the fly takes time, getting a hand inside without unzipping is next to impossible, even with a fly down there is no room to move, so they have to be struggled down over the thighs, but then she can't open her knees so to get anywhere they need to go to the ankles, or preferably, all the way off. With calf length boots to deal with the whole thing becomes unbearable. It is a lot of unsexy nervous wriggling and pulling and being vulnerable and a total turn off for a girl who is not prepared for it. \n\nOf course jeans were just about the standard casual clothes of the time, so the fact she was wearing them may have meant nothing, but while Jill had allowed me to lift her skirt the night before, and my hands had held that tight round ass (which her jeans showed off to attractive advantage) perhaps she was less inclined to allow such liberty today in all sobriety. But her smile was warm, and as she slipped into the passenger seat she leaned across to kiss me, and took my face in her hand. \"Hello, handsome. I was worried you wouldn't be here.\"",
        "I kissed here and said \"Wouldn't be anywhere else. But now you are here were shall we go?\"\n\nHer reply was swift and definite. \"Your house.\" \n\n\"Okay. But you are too late to help with the tidying up, the guys had it cleared before they left this morning.\"\n\nShe punched me on the arm \"You cheeky git! You don't think I was coming with you to do housework!\"\n\n\"Aoww. Well I thought you might feel guilty for running out so early last night and leaving me with all that to take care of. You were at the party too, after all.\"\n\n\"Yes,\" she said \"and I enjoyed it very much, I suppose I should say thank you.\"\n\n\"My pleasure. So if you aren't expecting to have to help with the dishes, what do you think we will do when we get to my house?\"\n\n\"Have you got a chess set?\" she asked. \n\n\"Yes.\"\n\n\"Then we can play chess. You said you wanted to.\"\n\nI gave this a moment's thought. I knew this game. So play along , let her tease me, wait for her to break. \n\n\"I said I wasn't very good at it and I'd like you to teach me.\" I said. \n\n\"Okay. So I'll give you lessons, but tell me what happened after we left last night\"\n\nSo on the journey to my house I told her of the late night viewing of Apocalypse Now and Lenny and Owen plotting a double date with Penny and Jo at the cinema, wondering If the girls would go to see The Kentucky Fried Movie. \n\nJill thought Jo might, but Penny would be too straight laced. I had to smile at that, knowing that Penny would laugh like a drain at the Catholic High School Girls in Trouble section, and renact it in the shower herself. \n\nWe were nearly at my house when I asked what the girls had got up to back at Penny's. Jill blushed a little, and blustered. \"Just talk, we all had sleeping bags so we were all over Penny's bedroom floor and we talked until we fell asleep.\"\n\n\"What did you talk about?\" I asked as I drew up at my door. \n\n\"Just stuff, all sorts of things,\" she said and sprang from the car. She was round to my door by the time I had got out, and said \"I'll put the kettle on if you find the board.\"\n\nShe got me to set it up on the coffee table in the living room, and told me to set up her pieces as she made a pot of tea. I was sitting on the sofa, she brought in two mugs, and plonked down on the armchair opposite me. Without a word she moved a pawn, and leaned back, smiling at me. \n\nWe exchanged a few moves, and a little small talk, when she suddenly said \"Mostly what talked about last night was boys.\"\n\n\"Really?\"\n\n\"Jo says they all want one thing, but that is ok with her because she wants it too. That shocked Penny. I don't think she wants it.\"\n\nVisions of Penny lying on her back holding her dark furred pussy lips open with both hands saying \"Lick me again, please\" passed through my mind, but I said only \"She seemed pretty attached to Len last night\"\n\n\"Yeah, but kissing is the limit. She wouldn't let a boy touch her, not like I let you last night.\"\n\nHer cheeks were scarlet. \n\nI decided not to mention this so I looked down at the board and said \"Well maybe she just doesn't know how good that feels yet. Anyway, Owen claims he got nowhere with Jo last night so she isn't that keen.\"\n\n\"Were you talking about what we did with the boys last night?\" she said, with concern.\n\n\"No. Owen was complaining, and Lenny was being smug, claims Penny was wearing stockings not tights, that he could feel the clips through her dress even if she wouldn't let him check under it But I wasn't talking about us.\"\n\nI looked at her then and took her hand, and said firmly \"I hate guys talking like that. I would never do that. I would only want to kiss a girl, or be near a girl, who I thought was special, and I would never talk about her that way. They make it sound dirty and bad, they make the girls out to be stupid or slutty. I don't think it is bad, or dirty, and I don't think a girl who likes it just as much as a boy is stupid or cheap. But I do think you are special, and beautiful, and smart and funny and very sexy, and I think that what we did was wonderful, and private. I don't want to share it with anyone else.\"\n\nI had been leaning forward over the chessboard and now her hand came up to my cheek again and I saw she had a hint of a tear in her eyes as she whispered \"Oh Sean, you are lovely\"\n\nI kissed her. In a second she had risen from her chair as I pulled her to me and she stepped over the table with her long slim legs to embrace me and fall upon me on the sofa. Her kisses were as fierce and passionate as the night before, and her hands roamed over my body as she pressed herself to me. My hands were in her hair, running down her back to grasp her tight denim ass, brushing up her side to caress her breast through her blouse, and at each caress she responded. \n\nClearly this girl was as horny as me. \n\nAfter a few moments of this she broke the kiss off and looked down at me. Her voice was deepened with lust as she said \"Shall we go to your bed?\" \n\nAll I could manage was a \"Yes\"\n\nJill climbed off me, and took my hand to pull me upright. Without letting go she lead me from the room, across the hall and up the stairs straight to my bedroom. She turned then and kissed me again but there was a strange quality to the kiss. Again she broke it off and took a half step back, holding both my hands as she said \"There is something I want to do. I have never done it before, but I want to do it with you. Jo talked about this last night, and some of the girls were a bit silly about it, but I just listened and thought about what you did for me, and how it felt, and it just seemed right, and I wanted to do this for you.\"\n\nShe let go of my hands and reached for my belt buckle. I didn't object. She fumbled for a moment and had to look down, and then as she started to work on the button of my fly she dropped onto her knees. \n\nMy heart was racing. I wasn't certain exactly what she intended, but whatever it was seemed likely to be good. \n\nWith my zip pulled down she began to pull my jeans down to my knees, and paused in hesitation as my bulging erection in my underpants came into view. I was looking down at her, and saw her swallow her anxiety, and her hands came up to the waistband of my knickers. She pulled them down slowly, until my cock came free and sprang back up in front of her. She made a small noise of surprise and for a moment was completely still. In a tiny voice she said \"Oh. It is beautiful.\"\n\nThen her hand came up to take hold of it, and she pulled it down to point straight at her face. The action pulled back my foreskin, and I could not help letting out a sigh. \n\nAgain she whispered \"Beautiful,\" and then she leaned forward to kiss it.\n\nIt was incredible. After the first brief touch of her lips she put her tongue forward to swirl around the opening that was already wet with my excitement. Then her mouth opened further and she sucked in the head of my cock, ran her tongue around it again inside her mouth, and then pulled back, still sucking as it came out of her lips with a popping noise. \n\nI nearly collapsed onto the bed. \n\nShe looked at me with concern and said \"Are you ok?\"\n\n\"Oh my god. Oh yes. Oh, do that again.\"\n\nShe grinned. It was the most beautiful and sexy look I have ever seen on an eighteen year old girl's face. Then she did it again.\n\nI have had some great blow jobs, but this body had never felt anything like what she was doing. It was its first, as well as hers. She kept it simple, just sucking and licking my tip, and responding to the jerk of my hips, which sometimes took her by surprise, but she quickly learned what caused me to jump and gasp, and was careful to it again. There was no way I could hold out for more than a couple of minutes, nor did I want to.\n\nI took her head in both my hands, and she looked up at me with those big grey-blue eyes, that seemed still to be smiling while her pretty lips were clasped firmly round my shaft. \n\n\"I'm going to come.\" I gasped \"Oh my.\"\n\nI felt it rising in my body, as she sucked harder and bobbed her head up and down in time to my thrusts, until a wave of white heat swept me away and all I could feel was my balls contracting, my cock jerking, the come rushing through it and spurting into her mouth. \n\nShe kept sucking, her lips and tongue now slippery with my come, she kept her head moving up and down, and every time she touched my glans my breath was torn from me. I was on the verge of fainting, and felt my body go limp as darkness narrowed my vision. \n\nShe finally stopped sucking me, and came up beside me on the bed. I lay there with my trousers round my knees, her hand on my cock, and her face a few inches from mine as I came round. She looked worried. \n\n\"Are you okay?\"\n\n\"Uh Huh\" was about all I could articulate.\n\n\"You sure? You look pale? Was that alright?\"\n\nI gathered my strength and grabbed her to me, and hugged her, before looking into her confused eyes to say \"That was unlike anything I have ever felt or done. That was beyond words. That was so wonderful I cannot say how wonderful it was. You are incredible. That was incredible. Alright? My god you are brilliant.\" I hugged her again as she almost cried in relief. \n\nRecovery time for my eighteen year old body was practically nil, so in moments I became hard again in her hand, and my hips moved so that she was soon gently wanking me in her grip. She kissed my neck and her hand began to caress me in its own time, and she smiled and said \"I was worried I had done it wrong. Then I was worried that I had killed you. I'm glad to see you are still alive. Would you like me to do it again?\"\n\nI smiled and said \"In a minute maybe, but that is nice for now, and I want to look at you and kiss you.\"\n\n\"Then I should go brush my teeth.\" she said, and started to pull away from me. \n\nI pulled her back and said \"Why?\"\n\nShe blushed. \"Well I thought you wouldn't want to kiss me after I had just been kissing you there.\"\n\nI took her face in my hands and kissed her, and kissed her again until she opened her lips and let my tongue enter her mouth. \n\n\"Now don't be silly.\" I said when we had got to the relaxed smiling kisses stage. \"If it is ok for you to suck my cock, and make me come in your mouth, why would it be bad for me to kiss you?\"\n\n\"But, my mouth would taste bad!\"\n\nI looked at her, and said seriously, \"Oh well then if you think it tastes bad I suppose you won't want to suck my cock again.\"\n\n\"Oh no. I mean yes. I mean, I liked sucking your, ah, you, and you obviously liked it so ...\"\n\n\"So you liked the taste?\"\n\nShe hesitated for a moment and said in an small voice \"Yes.\"\n\n\"And you really liked sucking me and having me come in your mouth?\"\n\n\"Yes\"\n\n\"Did it turn you on?\"\n\n\"Yes\"\n\n\"Good. Because I want you to do it again, a lot. But only if you like it.\"\n\nShe looked a little confused again. \n\n\"But Jo said a boy wouldn't want to kiss a girl afterward.\"\n\nI laughed again and said \"Jo doesn't know everything.\" Then I kissed her and began to work on getting her more aroused. \n\nIt wasn't difficult. There was no hesitation in her, and she relaxed to allow my roving caresses, moving her limbs and body with the slightest pressure, letting me explore her back and her stomach, her legs and ass, her breasts and inner thighs. She was soon panting and trying to grind against me, but I had to stop her.\n\n\"Sorry darling, but I have to pull my jeans back on.\" I said, lifting her by her pelvis to stop her pushing against my naked cock. \n\n\"Oh, why?\"\n\n\"Well the seam on your jeans is a bit rough, and, well, I am worried that I might leave a mark. When you get me worked up my cock gets sticky, and if I came on your jeans it would leave a stain.\"\n\nShe bit her lip for a moment as she looked at me. It was a gesture I came to recognise as an indicator that she was thinking 'wicked' thoughts. She made up her mind. \"Wouldn't it be better if I took my jeans off then? Give me a hand with my boots\"\n\nBy the time I had her second boot off she had undone her belt and button and zip. She was lying back across the bed, I was kneeling on the floor, with my trousers round my ankles. She wriggled a bit and pushed the top of her jeans down over her bottom, and said \"If you pull on the end of the legs it would be easier.\"\n\nIn a second I had them off her. She looked at me with sudden shyness, as I ran my gaze up the length those slim smooth limbs from her pink spotted white ankle socks to the pink trimmed white panties at the top. \"Has anyone ever told you that you have very nice legs?\"\n\n\"No, but I'm glad you think so. Do you want to take your shoes off as well?\"\n\n\"Now that you mention it. I suppose it is the polite thing to do when getting into bed with a beautiful woman.\"\n\nAs I removed my shoes, jeans, socks and underpants, she moved around on the bed and got underneath the duvet. I felt a bit silly just in my tee shirt, so I pulled it off as well, and stood totally naked for a moment beside the bed. My cock was hard again, pointing out and up, and she giggled shyly and clutched the covers up to her chin. She was biting her lip again. Then she threw the quilt aside and lay with her arms open. \n\nThe feel of her bare legs on mine was silky smooth and soft. Her long slim fingers caressed my naked back and shoulders, and ran over my chest. We kissed and gently nuzzled without words. She had moved her leg over me, pulling me towards her, and allowing me to stroke her thigh from knee to hip, and then my hand swept up over her knickers and beneath her blouse to feel the muscles flex on her back. She almost purred, a low moan as my fingers smoothed over her skin, skipping over her bra strap. I pulled her closer, and rolled her on top of me. She quickly settled with her thighs open against mine, rocking her cotton covered pussy against my naked cock. I had pushed her blouse up a little so my hands were on the bare flesh of the small of her back, pushing her down onto me as she moved her hips. Her rhythm began to build, she leaned back, opening her legs wider to press more of her slit along my shaft. \n\n\"That feels much better.\" I said.\n\n\"Oh yeah.\" she replied and then said \"But I'm a bit hot in here.\"\n\n\"I would agree with that.\"\n\n\"I'm serious. Help me with these,\" she fumbled with her blouse buttons. \n\nJill had thrown off the quilt as she sat up, and now she stripped off her blouse and tossed it aside. It was a gesture of such erotic power and freedom that I almost sighed in joy. Then she leaned further back, her neck arched and knees spread so she could grind her hips in a circle. She knew I was watching her, and I was pleased to see her close her eyes and relax into the movement. I was stroking the top and inner surface of her thighs, running my thumbs just up to the edge of her underwear, and could see the bulge of her pubic mound, as well as admire the profile of her breasts from below. Her cotton bra was matched to her knickers, trimmed in pink, and in quite thin material. Her breasts were not large, but full, and I could see her nipples were erect beneath the fabric. \n\nI reached up to hold them, and run my palms over her nipples. She moaned, and grabbed my hands, squeezing them to her breasts, and throwing herself forward to kiss me again. For a moment she was totally wild, her movements frantic and spasmodic, and I thought she was going to just ride me to orgasm, when suddenly she wrenched herself back up and went still, panting and looking down at me.\n\n\"Last night one of the girls said that her favourite thing was when a boy sucked her nipples,\" she said, \"Would you do that for me?\"\n\nIn answer I took her bra straps and pushed them off her shoulders. \"I would love to.\"\n\nShe allowed me to pull the straps down to her elbows and then moved to slip her arms out of them. The soft cups of the bra folded down as I continued to pull on the straps and her firm breasts came into view. I took a moment to look at them and whispered \"Beautiful.\". \n\nThey were soft and warm and smooth in my hands, and her small pointed nipples were hard and springy as I rubbed over them with my thumbs. She squirmed when I did that, and gasped when I squeezed them gently. I pulled her down to my mouth to kiss her lips as I rubbed the erect nipples with my palms, and then moved to kiss her neck and throat, sliding down the bed beneath her, moving ever closer to sucking on those gorgeous dark and crinkled buds. \n\nShe was holding her breath, but let it out with a long low moan when my lips and tongue finally hit her right nipple. I was squeezing her other breast on my right hand, and could feel her whole body tremble. She had her head thrown up and her back arched, and was making soft \"ah, ah\" sounds as I pulled my lips away sucking hard on her nipple as I did so. I plunged my open mouth back on to her breast, using my tongue to lick all around it and grazing it with my teeth. She was close to coming. I swapped over to the other breast, bringing my left hand up to rub the wet nipple I had just finished with, which meant my right hand was free to run down over her tight stomach and straight into her panties. \n\nMy fingers shot though her soft curls and curved round to cup her whole pussy, my middle digit pressing a little along the line of her opening lips. I pressed her mound in my palm, and pulsed my fingers while I sucked firmly on her teat. \n\nI had not been sure that I should try that. I feared she would be too shocked, that it would be a move too far, but in the event the noise she made was quite gratifying. \n\nShe looked down at me, her eyes and mouth forming three surprised 'O's. I took her nipple between my teeth and vibrated my hand, being careful not to push my finger inside her. She made that noise again, a sort of high pitched \"Huh-huh\". Her eyes went slightly wider and then the noise went up a fifth, and she came.\n\nHer body spasmed and she thrashed against my hand, pressing my finger along the length of her very wet slit. I knew her clitoris had hit my finger when she cried out and her body jerked again, and then her hips began a frantic pulsing, pushing herself hard down to feel that contact again. She came again, and I held her with my fingers in the hair on her head and between her pussylips, whispering soft assurance. \n\nFor a moment she held her breath and then she threw herself up and back with a long sucking gasp, and fell onto her back, arms above her head, legs open beside me, panting and blinking. \n\nI propped myself on my elbow to look at her, and she was well worth looking at. Her neck and face were still flushed and her superb round breasts were rising and falling with each deep breath. Her smooth tummy, and delicate bellybutton was immensely kissable, and I could see a tiny tuft of pale brown hair poking out of the side of her soaked and rumpled panties. She was utterly open and physically relaxed. The word that sprang to mind was ' ravishable'. \n\nShe opened her eyes and pointed at me with an unsteady hand. \"You ... You...\"\n\n\"Sorry. I shouldn't have done that without asking.\"\n\n\"You... What?\"\n\n\"I shouldn't have touched your pussy like that without asking if it was okay, but I thought since it was so nice for me when you held my bare cock in your hand that it would be nice for you if I touched your bare pussy.\"\n\n\"But...I....\"\n\n\"You did like it though, didn't you?\"\n\n\"I, ah, yes, but\"\n\n\"And did you like me sucking your nipples?\"\n\n\"Yes, that was ... That was... Really \"\n\n\"Good, because I do like doing it.\" I said and leaned forward to kiss her left breast again. \n\nIt worked. She arched her back and brought her hand down to rest on my head, then guided me across to suck the other nipple which she was offering to me by squeezing her right breast with her free hand. \"Oh god that is good!\" she said. \n\nI broke off from my mouth work to say \"Who was it said it was the best thing, and do you agree?\" I went back to her left side, swirling my tongue around and over the softened areolae, which crinkled at my touch. ",
        "\"It is good, yes\"\n\n\"But this is better? Yes\" I said as I slid my hand back to take possession of her crotch. \n\nThis time my hand was on the outside of her knickers, although I could press the wet material to open her lips again and contact her clit. \n\n\"Oh god!\" \n\n\"I'll take that as a 'yes' then.\" I said\n\nShe grabbed my head and pulled me up to kiss her lips, then her hands were on my back and buttocks and she pulled me on top of her. I moved my hand away from her pussy and settled my erection in it's place. Her legs wrapped round mine and I began to ride up and down with the base of my cock against the top of her slit, pressing against her clit. My balls pressed against her cotton covered pussy, my shaft against the soft material of her panties over the soft hairy mound of her pubis.\n\n\"Oh god, oh hold me, oh make me come again\" she pleaded\n\nI raised myself on my hands to thrust harder and longer against her, and was able to look down between us to see my cock. Her breasts were bouncing back and forth, a wonderful sight. She began to pant again, and lifted her legs so the length of my shaft rubbed more along her cleft. I dropped to press my bare chest against hers, hooking my arms under hers and gripping her shoulders, my mouth on hers as I drove her to her third orgasm in an hour.\n\nAs she neared her climax I said \"Put your hand on my cock.\" and she reached between us to hold me. Her grip intensified as she peaked, and I carried on moving, enjoying the feel of her hand, until I came a few strokes later, spraying come on her stomach while she urged me on.\n\nWe lay in post orgasmic bliss, kissing gently together.\n\n\"You are very naughty you know.\"\n\nI had to agree, but wanted a specific example. \n\n\"Touching me there.\"\n\n\"Your pussy?\"\n\n\"Yes\" she said hesitantly and blushed a little\n\n\"Is that what you call it?\" I asked, \"It is just that you haven't used the word, and I wasn't sure that you were ok with it.\"\n\nShe looked a little embarrassed \"Well, I don't have a word for it, really. I mean if I had to talk about it I know the medical words. At school some of the girls call it a fanny. But that is sort of rude.\"\n\n\"I like the word pussy. The boys at school have a lot of words but they are all rude, but 'pussy' is something warm and soft and beautiful, and if you stroke it right it makes a purring sound.\"\n\nShe laughed, which is what I had hoped.\n\n\"Okay, I suppose it is not such a bad word. But I should not let you stroke it.\"\n\n\"Why not? You like it, I like it, it is what boys and girls do. There's is nothing bad about it. There is nothing bad about anything we could do.\"\n\nShe had a little voice again when she said \"Are you talking about sex? Real sex?\"\n\nI looked at her seriously again. \"Well, yes I suppose I am. I don't believe that sex is bad. I know the churches say it is, but if God didn't think it was good he wouldn't have made it fun. If you believe in God of course. But I wasn't angling at that. Let me promise you this. I will never trick you, force you or cajole you into having sex with me. This is the first time I have been with a girl, and I'm glad it was you, and I want to try, well, everything with you because I just feel really good about you. I have admired you, fancied you for months. I know I have only spoken to you a couple of times before, but I really did hope you would be at the party last night, and it was beyond hope that we would kiss, and as for what happened last night, and today, well I'm just blown away by it. This is beyond dreams. But you have to be comfortable with it all. And you should also know that while I would love to have kids I want to be able to provide for them and support my wife, and have a good life, and I expect you feel the same way. So I plan on university and making some money before I make babies, and though you are utterly gorgeous and desperately tempting, I can resist that temptation. You don't have to worry about that.\"\n\n\"There are ways of doing it without making babies, you know.\" She said, and blushed scarlet.\n\n\"Yes, I know, and I'm not saying I want to wait until I get married, but even if we had condoms, I wouldn't want to take advantage of you.\"\n\nShe looked at me with a slight frown, and said \"I thought you were doing maths, physics and chemistry for 'A' level?\"\n\nIt was such an out of left field remark that I was stumped for an answer, except to say \"What?\"\n\n\"It's just that you are talking like a Bronte novel.\" She smiled as she said that, and stroked my face again to soften the remark \"All my life everyone has said what Jo said - that boys only want one thing, and that girlswho let them are dirty. But last night and today you have been so gentle, and so careful of me, and here you are saying you won't rush me, and if I say 'no' you respect that. It isn't what I expected.\"\n\n\"I'm a good guy.\" I said \"And speaking of babies, I came on you. Would you like a tissue? Its dangerous stuff that, if it gets in the wrong place.\n\nHer voice was deliberately casual as she said \"Not if you're on the Pill.\"\n\nI simply raised an eyebrow.\n\nShe looked back at me with a mixed expression. I could not tell what she was thinking. Was this a come on, or a test? I settled for being understanding. If it was a come on she could pursue it. \n\n\"Bad period pains?\"\n\nHer face went through several expressions: surprise, embarrassment, relief and some joy perhaps that I had not just gone back on my word and leapt on her now I thought she would not get pregnant if I ravished her. \"You're a really weird guy.\"\n\n\"Why, because I am lying stark naked beside a beautiful nearly naked girl and not ravishing her? I haven't been with a girl like this before, but I have friends who are female. I know about PMT and tummy cramps. And I know that just because a girl is prepared to go this far it doesn't mean she will go any further. I'm a virgin too.\" She blushed at that, and I went on \"It is a big thing for boys as well. Some guys would do it with anyone just to not be a virgin, but for me sex is special. I want the first time I do it to be with a girl I think is special, and who is ready for it. I have heard awful stories about guys being rough with a girl on her first time, and I would never want to be that kind of man.\"\n\nShe had a strange soft look about her as she touched my cheek again again and said \"I don't think you would ever be that sort of man.\" She paused a moment and said in a slightly nervous voice \"I think you are a very special man.\"\n\nMy throat caught, and I managed to say \"And you are a very special girl.\"\n\nThe kiss we shared was soft and romantic. We both knew what we had just said, but there was no rush of lust, just a mutual joy. She broke the kiss and said \"You are lovely, my handsome man, but I am sorry to say I really have to go to the loo.\"\n\nI laughed and said \"Be quick, I need to as well. Even better, I'll go downstairs.\"\n\nShe called to me as I was half way down to bring her bag up from the living room, and when I got back upstairs she was still in the bathroom. The door owned and she poked her head round it, saying \"I have just realised I am hungry, can we go get pizza?\"\n\nI think I didn't look disappointed, and was genuine enough in my desire to do whatever pleased this wonderful creature to say \"Sure\"\n\n\"Give me my bag and go get dressed, because gorgeous as you are in that outfit I don't want to take a chance that on you getting arrested in Dominos\"\n\nWhen she emerged from the bathroom she was in a Led Zeppelin tee-shirt and the skirt and shoes she was wearing the night before.\n\nShe looked stunning when she smiled at me and twirled. I whistled, and mentally noted that she was not wearing any tights. \n\nI didn't take her to Domino's. It was only five o'clock but as we walked the few hundred yards to a local Italian restaurant we realised that we were both starving We ordered anti pasta, pizza and dessert, and a bottle of white wine, and we chatted about all sorts of things, including music and films. I suggested we get a film for the evening from the video shop next door, but she shook her head. There was the hint of a lip bite and then she said \"We have a chess game to finish.\" \n\nWhen left the restaurant she said \"Thank you, that was a wonderful meal. A wonderful afternoon, Now, let's have a wonderful evening. A very special evening.\"\n\nBack home, and as soon as we were in the door she kissed me. Her eyes were sparkling, as she pulled away and said \"I am just going to the bathroom, meet you upstairs in two minutes.\"\n\nI was leaning on the frame of the bedroom door when she came out of the bathroom. I had prepared by getting barefoot and getting rid of my belt. She was barefoot as well, swinging her shoes by the anklestraps as she walked towards me.\n\n\"Hi handsome man, fancy meeting you here.\"\n\n\"Well beautiful girl, I would very much fancy meeting you anywhere.\"\n\nAgain we kissed softly and sensuously. It was not hard and fast with overwhelming passion, but it was passion filled. I wanted to drink in every moment of this, to remember every nuance of how she smelled and felt and tasted and looked and sounded. \n\nJill raised her leg to wrap her calf around my thigh, and my hand fell upon her bare knee. I had to slide my hand up beneath the skirt, to stroke her thigh, to slip my fingers round to feel the curve of her ass, to discover if she was wearing anything beneath. \n\nMy fingers met the soft edge of a pair of what used to be called \"French knickers\" a sort of high cut boxer shorts for girls. They cover more than ordinary panties, and ten times what a thong would conceal, but they have no elastic on the legs. It is easy for a finger to find a way in, for a hand to explore. I stroked the round firm curve of her ass and felt a brush of hair as my fingertip grazed her labia from below. She made a low humming noise. \n\n\"Was that a purr?\" I asked, amused. \n\n\"Was that a pussy you were stroking?\" she returned. \n\n\"I'm not sure, I think I would have to look and check.\"\n\nShe grinned but then said \"But that wouldn't do you any good. You told me you have never seen one before, so if you saw one now you wouldn't recognise it anyway.\"\n\n\"Well, that is a point, but I have seen pictures, so I reckon I could make a good guess. I mean, I have never seen a giraffe either, but I would probably spot one if it was in front of me.\"\n\nShe laughed again and kissed me again, and said \"Well I suppose there is one way to find out.\"\n\nShe dropped her leg, and pushed me back into the bedroom, backing me to the bed and making me sit down. She stood in front of me with her hands on her hips, and began to pull her skirt up slowly, swaying from side to side as she took the cloth in bunches. \n\nI put my hands on her knees, and followed the rising hem upwards. \n\nHer French knickers were pale blue, very plain and simple. I moved my hands over the interface between soft skin and thin material, and took hold of the waistband. Slowly and gently I pulled them down, revealing the soft 'V' of light brown hair covering her prominent mound, and the hint of the cleft below. I pushed the panties all the way down to her ankles and she stepped out of them. I reached out to stroke her hair, and glanced up to see her smiling down at me. \n\n\"Well?\" she asked. \n\n\"I think I need a closer look to be certain.\" I replied, and taking her hips I swung her round to sit on the bed while I slipped onto the floor at her feet. I put my hands on her knees and ran them up her inner thighs, parting them as she leaned back on her elbows. I brought my face between her legs and gazed at the beautiful thing before me. My lips were nine inches from hers. I could see every hair, see the hint of moisture in the fold that I knew could be opened to reveal the smooth wet pinkness within. My hands on her inner thighs pushed her legs slightly wider apart and that parted her outer lips slightly. I could just detect the sweet musky hint of her delicious wetness. \n\n\"Well?\" she asked again, a hint of concern in her voice. \n\nStill staring at her marvelous hairy slit I said \"Very. Very well indeed. Very beautiful, so delicate and complicated, and fascinating. But I'm still not sure it is a pussy, I think I need to check something more. Definitely not a giraffe though.\" I looked up and grinned at her, and saw her smile back, but her smile was instantly replaced by a an 'O' as I moved forward and ran my tongue up the length of her lips, opening them and exposing her clitoris.\n\nI did it again, this time stopping to flick my tongue over her clit a few times, and then pressing down with my whole mouth to suck on it, and open her further with my tongue. She jerked upwards, her head thrown back, her legs and arms wide, making a deep guttural noise and then drawing a huge breath. \n\n\"My god, oh my god, oh stop!\" she cried and reached down to pull my head up. \n\n\"Now that definitely wasn't a purr.\"\n\nShe was gripping my head and staring at me wide-eyed. \"What are you doing?\"\n\n\"Well that was my tongue and mouth, but this is my finger.\" I said, simultaneously putting my index finger up beneath my chin to press right on her button.\n\nShe drew another deep breath and her body flexed a little. \"Oh Sean, you'll make me... Oh god!\"\n\nThat last exclamation was as I drew my finger down her lips and found the opening to her very wet passage. I had pressed a little in, just my fingertip, and could feel the pulsing muscles grip it as she responded to the new sensation. She let go of my head, and I took the opportunity to return my lips to suck on her clitoris. The jerk of her hips in response pushed my finger deeper, and her breathing became a series of groans and gasps. I worked my mouth around her clit and down to the point where I could feel my finger entering her, and began to move my hand in and out, penetrating her in time to the twitches in her body and the strokes of my tongue. \n\nIn time she began to move her hips to match my bobbing head, and she murmured \"That's lovely.\" I felt her pussy relaxing, and I kept it going for a few seconds more, and then pulled my finger out, and licked her delicious juices from her open inner lips. \n\nI pulled my head back to look at her pussy. I could see her hymen was stretched but not torn. She had been tight around my finger, but was now a little open. And utterly desirable. \n\nI gave her a gentle kiss again, and kissed each inner thigh, then around the outer lips and over her mound, running my nose through her hair. I looked up as she made a low noise. \n\n\"Ah,\" I said, \"that's more like a purr. Yes I think this is definitely a pussy. A very beautiful tasty pussy. And this is a beautiful tummy button, which is just the right size for my tongue. And if we slip this tee-shirt up what have we here? Ah, I suspected that, no bra but two beautiful breasts with suckable nipples. Mmnn, mmnn.\" I kissed them in turn, and she pulled the tee-shirt off. \"And this throat, and chin, and oh, this pretty face, with these pretty lips.\"\n\nI kissed her then, gently, carefully, taking little kisses that got longer and a little firmer, letting her open her lips and bring her tongue to touch mine. Her eyes were closed, and her breathing relaxed. \n\n\"You are beautiful,\" I whispered \"and don't you just taste delicious?\"\n\nHer eyes blinked open.\"Oh.\"\n\nI smiled and said \"Yes?\" I kissed her again, letting her taste herself on my mouth, hesitant at first, but soon confident again. When I broke the kiss I said \"There is one problem though. We are both wearing far too many clothes.\"\n\nShe agreed, and grabbed my tee-shirt to pull it up over my head. As I pulled it on up over my arms she ran her hands across my chest, and kissed one of my nipples. \n\n\"Mmm, that's nice.\" I said. \n\n\"Really? I didn't think boys nipples worked.\"\n\n\"Not as sensitive as girls, I've read, but it does feel nice.\"\n\nShe kissed the other one, and helped me stand up as she said \"I do like you kissing mine. But I think Charlotte is wrong. It isn't the best. But then I don't think she has ever had her pussy kissed. None of them have. When Jo was talking about blow jobs last night they were all disgusted, although I was secretly intrigued. But when Alison mentioned that she had heard that some boys kissed girls down there I think we all thought that was just too nasty to believe. I'm glad you didn't think that.\"\n\n\"It was entirely my pleasure. Really, I enjoyed that a lot. You taste magnificent.\"\n\n\"And so do you.\" She said, pulling my trousers down and bending to take my erection in her mouth. \n\nShe only sucked me for a moment, then pulled away and looked at my cock as she held it in her hand. I looked down to see what she was doing, and the image of her sitting topless, my cock in her hand just an inch from her mouth, her other hand coming up to stroke my balls, is one I treasure. \n\nShe looked up at me and said \"May I kiss them?\"\n\n\"Please do.\"\n\nHer lips touched my left testicle first, then she moved to the right one. She looked at them as they tightened up and moved a little. \"Oh, they are like my nipples! She said. \"What happens if I lick them?\"\n\nIt was my turn to grasp her head, and gasp \"Too much!\"\n\nShe looked concerned at me, so I said \"It's fine, it's was just so good I thought I was going to come.\"\n\n\"Would you like to?\"\n\nI reached down to pull her up and kiss her again \"Yes, but not just yet. I want to do something else first.\"\n\nOur kiss went on for some time. In the midst of it she pushed her skirt down and for first time we were both naked in each others arms. \n\nI loved being able to run my hand on her naked skin all the way from her neck to her ass without interruption. My cock was against her warm stomach, her soft breasts and hard nipples against my chest. \n\nThe kiss went on as we manoeuvred onto the bed, I took a moment to gently ravage one nipple as I positioned myself between her legs, then came back to her lips. I felt her hand between us grasping my cock, pulling me down, placing the head against her soft wet lips. She rubbed it up and down her slit and I felt her opening against me. \n\nI raised myself on my elbows and looked at her \"You want me?\" I asked in awe. \n\n\"Please, yes, inside me, take me.\"\n\nMy cock had not reached it's full growth when I was eighteen, but it was thicker and longer than my finger. The pressure all round the head of it as I slowly pushed half an inch forward was incredibly stimulating. I could feel her opening up, my glans entirely inside her pussy lips. She was wide eyed beneath me, panting a little, her body trembling. \n\n\"Are you ok?\" I asked, and stopped pushing. \n\nShe nodded and gulped a breath \"Yes. It's just so huge.\"\n\nWhich was flattering, even though I knew it wasn't really true. I couldn't help grinning, and said \"It feels good. I can feel you all round me. How does it feel for you? \"\n\nShe swallowed another breath and said \"Big. I can feel you inside me, oh when you do that I can feel you opening me up. Oh that's good, when you pull back I can feel you sliding back and, oh, you are even further in now! Oh god, that is good, you are filling me up, oh that is so big!\"\n\nI pulled back and rocked forward again this time pressing a little harder and a little further. She gasped again and said \"oh do that again.\"\n\nI did. \n\nAfter a few more strokes I said \"Lift your legs,\" and when Jill complied I was able to sink even deeper into her. I felt her hairy mound against my stomach, my balls against her ass. \n\n\"That's it.\" I said, \"that is all the way inside you. How does it feel?\"\n\nHer eyes were glazed, she murmured \"Perfect. Oh so good\" and flexed her hips. \n\nThe sensation surprised us both. So she did it again. And again. \n\nI could feel she was slippery and warm around my cock, and her inner muscles were contracting and relaxing, loosening up just a little, so I could begin to move in tandem with her, making the effect larger, moving more of my shaft in and out of her. ",
        "It was simply glorious. It may have been our bodies' first time, but they knew what to do. \n\nSteadily the speed and depth of my strokes increased as she urged me on with arching back and flexing hips, and with her hands on my back or down on my ass, pulling me into her. For my part I was just overwhelmed. It was as if my whole existence was split between my head and my cock and balls. I was enveloped in her warmth, like being bathed in warm honey. The smell of her hair, her breath, her breasts, her sweat, her pussy, the sound of her breathing, the noise of my cock in her pussy, the taste of her neck, her mouth, her nipples, her hands, and the incredible feeling of being inside her all combined to exclude everything else in the world. \n\nI wanted her to come again. I wanted this to be perfect for her. So I came back to the world and began to concentrate on her pleasure. I used every technique I had learned, touching and kissing her in every sensitive spot, varying my speed and depth and pressure, timing my movements with her breathing. As I licked and sucked the soft skin on the inside of her elbow and moved my hips so that the head of my cock was just pulling almost out of her and then penetrating her, opening her pussy again and again, her breath began to catch. \n\nI went with her rhythm, listened to the movement of her hips, obeyed the clutching of her hands, reveled in the depths of her body as she raised her legs and pumped herself towards me. Speeding up as her gasps got quicker, I raised myself on my hands to look down at her writhing body, her breasts moving in time with my thrusts, her face flushing, her open eyes staring at me in wonder at the feelings she had never expected,\n\nJill's cry as she orgasmed was deep and guttural, a primeval sound. I kept going, even as I felt her tighten further round me, her legs now bent up on each side, my balls slapping hard against her ass as I plunged deep onto her. \n\nI came. I felt myself shooting deep inside her, heard myself roaring, froze for a moment with my back arched and my hips thrust forward, feeling her spawning pussy milking me inside her, and collapsed onto her soft, sweat slick body, kissing her neck and throat and mouth, grabbing her and hugging her close, rocking on top of her and whispering '\"Beautiful, beautiful girl\"\n\nShe was stroking me and kissing me and whispered back \"Thank you\" \n\nI raised my self to look at her and kiss her lips \"Thank you. That was wonderful.\"\n\nHer eyes were misty as she said \"I never thought it would be like that. I never thought what it would mean to have someone so close, to have someone inside me. I can still feel you, inside me. I could feel it when you came in me. Thank you.\"\n\nShe was so serious looking I nearly laughed, but I knew what she meant. That moment of feeling enveloped in her had been a revelation, an eternity of calm and quiet ecstasy. I kissed her again, and said \"I love being inside you. It isn't like when you held me in your hand, or in your mouth. I'm in you, in your arms and legs your embrace is all around me, all of me is inside you, protected by you. When I came it wasn't like before - I felt free because you had me held safe and warm. You are simply wonderful. I have never felt that way before.\"\n\nShe smiled then and kissed me and said \"Would you like to feel that way again?\"\n\nShe squeezed her pussy muscles. My cock had been going limp, but that was quickly reversing. Oh the joy of being eighteen. \n\nI twitched my cock in response. She drew a sharp breath.\n\n\"Are you ok?\" I said, concerned. \n\n\"Yes, just surprised.\"\n\nI took a long slow stroke, going in a bit, almost out and back in, watching her face. I could see her slight discomfort. \"Maybe not\" I said. \n\nShe looked upset, and I knew she was conflicted - so I made the decision. I stopped moving and said \"You're a bit tender. Not surprising after all that. Here let me kiss it better\"\n\nI moved away from her, and felt her pussy cling to my cock, sticky with my come and her juices. She sighed as I pulled out, and I felt the air cold on my shaft in comparison to her heat. \n\nI quickly moved to plant a kiss on her pink and swollen pussy, and on her mound, her tummy button, her nipples, her mouth, taking her in my arms and rolling her on her side to cuddle her and stroke her. \n\nWe spoke softly together about what we had just done, how we felt, what we thought.\n\nHer parents were church going, she had been brought up believing sex was sin, but could not believe it now. She talked about her body, and mine, and what the other girls had said about sex, and how they were all wrong. And as we talked I found myself facing a moment of moral crisis. \n\nI had gone into this with what I would have to confess was a predatory view, planing on seducing a teenage beauty and expecting a victorious physical experience, then moving on to the next one. But something different had come of it. Now I found myself deeply entangled with this girl. I cared about her, cared for her. As we talked I was filled with joy and hope, and I wanted more. \n\nI had intended to spend a few weeks getting to this level of physical intimacy, and once I had ravaged her virginity, to move on to another of the girls I had not had sex with but always fancied. Now I realised what a wonderful woman I had found. \n\nShe was always delightful. I had always fancied her, every time we met for years, even into our forties and fifties. She was always good company. Now here she was, eighteen years old, lying beside me entirely naked, smiling and talking, exploring ideas and just being utterly adorable. It was hard to take in. \n\nShe glanced at the clock and said \"I have to be home in an hour.\"\n\n\"I wish you could stay. I would love to wake up beside you.\"\n\nShe laughed \"If I woke beside you tomorrow I would never make it to school. Now I need to shower, I can't go home smelling like this.\"\n\n\"You smell and look fantastic.\"\n\n\"My mother wouldn't agree, now be good and let me go, or I'll be late and never be allow to come back.\"\n\nWhen I dropped her at the gate of her house she kissed me gently and said \"Goodnight my handsome man.\"\n\nI touched her face and said \"See you tomorrow, my beautiful girl.\"\n\nShe smiled and said \"Yours yes, but not a girl. Today you made me a woman. Thank you.\"\n\nAnd then she was gone."
    ],
    "authorname": "MVPrimetime",
    "tags": [
        "seduction",
        "virgin",
        "second chance",
        "romance",
        "young love",
        "joyous",
        "gentle",
        "predator",
        "party"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/if-i-knew-then-ch-01"
}