{
    "title": "Sissification - How to Get Started",
    "pages": [
        "By Dominia Sax\n\nI don't know you. I don't know anything about you. But I can read. I can see what your Literotica bio says about you. I can see your sissy fetishes. Some of you follow me, so I know you like my teasingly humiliating language.\n\nAnd I can guess your type: straight (so far), married, monogamous, submissive. I know that dudes like you are just a mind full of sissy fantasies but a reality empty of taking any real sissy action. That is, up to this point.\n\nYou beat off to Literotica stories and porn snippets pretending you are a sissy. You're married and your wife--if she knew--certainly wouldn't approve. She hasn't ever known this side of you. You don't have sex with her anymore anyway, plus she is now a plus size. (I'd guess several plus sizes.) And you tell her that her short haircut looks nice even though you can't stand it.\n\nIt doesn't matter does it? You now live in the pretend world of sissy sex. It's what turns you on. Beating off your little wiener (I know it's small, btw) to sissification erotica is the highlight of your day. You're reading this right now!\n\nYou cum and move on. Until the next day. The cycle begins anew. Beat off, cleanse, repeat. Three steps like the old shampoo directions.\n\nBut it's time for some action. Real action. And lucky for you, I'm here to help ass siss tyou (typo intended) by making you prove to me--and to yourself--that your sissy side is real.\n\nHere is your--HOW TO get started--Sissification Guide.\n\nSTOP READING!\n\nDon't read any further if you don't want to be humiliated by me.\n\nIf you're one of those readers who write stupid responses that don't align with the purpose of this HOW TO be sissified story, it's not written for you. Leave now.\n\nSTOP READING!\n\nUnless you're ready to 'walk in a sissy's shoes.'\n\nUnless you're ready to be vulnerable and 'let your hair down.'\n\nOkay, who is still with me?\n\nGood. Don't worry. Long hair and sensible pumps aren't part of your start. I just chose those phrases to see if you have the balls to continue. Having a tiny penis doesn't mean your testicles are tiny, too. Uh, oh. Are they?\n\nPANTIES\n\nLet's start with panties. Many of you sissies reading this own them. I know you do. I know you wear them--at least some of the time--too. So, it's time for you to make the easy transition to full time panty wearing. You'll do it right under the nose of your disapproving wife. You'll wear them daily under your boxers at all times. Then you'll always take both garments off together at the same time. Your wife won't ever notice. She isn't looking at your pathetic crotch anymore anyway. Of course, you'll have to do your own laundry from now on to keep your panties a secret. But sissies should be doing their own laundry anyway. And you'll need a private place to stash them. Just use the same place you use to hide your porn magazines in.\n\nSee how easy this is so far?\n\nLet's make this a little more challenging. It's time to separate the men from the boys. Or, in your case, the men from the sissies.\n\nTo do that, you need to start wearing bras.\n\nHOW TO HIDE YOUR BRA\n\nI know. I know. This is much harder. But not that much. The key is layers and loose fitting clothes. You'll just have to wear more sweatshirts on weekends out in public. Oh, and don't ever take your business suit jacket off at work. And be careful not to sweat too much. The outlines of your bra will become visible.\n\nWhen you make it through your first full day of bra wearing at work, go to the men's room and snap a picture of your bra under your dress shirt. Prove that you want to be a sissy. You might only make it through a few hours the first few days, but you'll build up confidence that know one is noticing that you wear a bra to work. You can do it. You will do it. Start wearing your bras Monday. Photograph your proof.\n\nBODY HAIR\n\nLet's talk about your unsightly body hair. Gross! You don't like it; neither does your wife. Get rid of it, Sissy. All of it. It's no big deal. The first time you shower after your legs have been shaved, you'll know right at that moment that you've made the right decision.\n\nI know. I know. A full body shave is a substantial transition, but now that I have your heart pounding, let's check off a smaller, more achievable action first.\n\nLet's start by removing all your pubic hair.\n\nHOW TO SHAVE\n\nThe first time you remove that gross coarse patch of gnarly pubic hair above your tiny penis, you'll want to use that beard trimmer you own. You'll want to trim all your pubes to a short enough length that you can easily finish the job with a razor.\n\nBuy some shaving cream and some 'single blade razors for sensitive skin.' Trust me on this. You'll only want to shave your pubic patch bald using a single blade razor.\n\nTake a warm shower. Lather up your entire crotch with shaving cream. After carefully gliding over a patch of what stubble is left, hold the razor up to the shower head to clear the debris before gliding the razor over the next patch of skin. Only pass over the entire area two times. Again, trust me on this.\n\nDon't forget your balls. You need to carefully glide the razor over all your groin area and that includes your testicles. Balls look silly hanging down with fine hairs on them when you no longer have a pubic patch.\n\nPhotograph your limp bald little penis for sissification proof.\n\nI bet it still looks really small. Some penises shrivel even more after being shaved. They shrink in defeat--acting all embarrassed about being fully exposed. There is no place for a little penis to hide in shame when the cover of gnarly pubic hair has been completely removed.\n\nDICKLETTE\n\nYour penis is really small. It's okay, it's part of a sissy's identification. Some brilliant person coined the name Dicklette for sissies like you. You need to start calling your tiny penis your Dicklette from now on. In front of anyone. Everyone. Even your wife.\n\nYou spent all that time when you were younger looking for real scientific data on a man's penis length. But you're not a man, you're a sissy. You knew you were far shorter than 5.5 inches. You even failed the toilet roll test in college. So you learned your Dicklette must be under four inches, even at its hardest. You became shamefully aware of your shortcomings (now that is a funny word) after spending time in the men's locker room.\n\nAnd your flaccid penis smallness was even more embarrassing. Every girl you ever dated laughed the first time they saw your >2 inch softy. You knew the laugh was coming. You waited for it. It's okay, Sissy. It's okay.\n\nLOCK IT UP\n\nIt's time to prove to yourself, prove to me, that you can embrace your puny penis size. And the way all true sissy's reach acceptance is through self chastity. Small penises get locked up. Sissy penises belong in chastity. You don't have to only take my word for it as the explanation is obvious and it'll come in a minute.\n\nThere are many excellent websites where you can buy your chastity device online, but if your wife handles the credit card statements, you can just go to the local adult shop. Ask the person behind the counter for male chastity devices or use their original name: cock blockers.\n\nHOW TO WEAR CHASTITY\n\nMultiple layers of panties is the key! Put the first pair on--thongs work nicely--and tuck the front waistband under the lock. (This prevents the clicking sound a lock makes when it taps against the device while you walk.)\n\nYour second panty should be a fullback pair that covers everything. A tight snug pair is best. The two pairs together will hold the lock in place and will tuck your device tightly against your groin. Pull some boxers over your ensemble and your entire chastised and locked little penis isn't even noticeable. You could walk around the house like that!\n\nLOCKED AT WORK\n\nWear your penis cage to work everyday. I mean it, Sissy! Everyday!\n\nIt's the one place you can practice sissification seamlessly.\n\nPhotograph your penis in this humiliating sissy device in the men's room at work when you squat to pee. Prove your sissification action plan keeps advancing.\n\nThen take off the device at home so your wife doesn't ever see it. Not that she is looking. But sissies have been caught in chastity unexpectedly when their hard cage bumps into someone or something. So, you need to be careful.\n\nIf your wife travels for work, you need to be locked 24/7 until she returns.\n\nKEY CHAIN\n\nAt a time when your wife's keys are lying around, add the key to your chastised penis to your wife's key chain. This will help you stay focused on what you are doing with the only other key. Like, you won't lose it. When she asks you what the key is for, tell her it goes to one of the old suitcases in the garage.\n\nTake a picture of your wife's key chain to prove you embrace sissy chastity.\n\nSISSY PENISES BELONG IN CHASTITY\n\nJust in case any of you readers still really need to understand, I promised an explanation. It goes like this:\n\nThere are three types of male organs: cocks, dicks and penises.\n\nCocks are for fucking.\n\nDicks are for sucking.\n\nPenises are for masturbating.\n\nCocks are huge; dicks are average. Penises are small; yours is tiny.\n\nMen with large cocks fuck anything they want: pussy, ass, throats, women, men, trans and even sissies. Cocks own the block. They go anywhere they want. They are highly sought after, far and wide.\n\nMen with dicks are a dime a dozen. Their dicks often get sucked because there's nothing intimidating about an average-sized dick. Dicks sometimes get to fuck, but dicks are for sucking.\n\nPenises are useless appendages; they serve no useful sexual function for anyone. Due to their tiny size, penises can't properly fuck with any depth and they are embarrassingly small for a good blow job. (Unless you think of offering your penis as a pacifier.)\n\nConsequently, penises have no sexual use for anything other than the person who humiliatingly owns it and ends up masturbating it all the time.\n\nBut should small penises get to be masturbated? Should yours? Should you get a reward of sexual gratification when you offer nothing to earn it?\n\nNO. No you shouldn't. You shouldn't get to stroke that little wiener for your own self gratification anymore, when the whole purpose of that appendage is to be able to FUCK with it.\n\nSmall penises belong in chastity.\n\nI know you now understand, Sissy. You knew this instinctively. You know for sure now. This is part of full sissy acceptance. Self chastity.\n\nPLUG YOUR BUTT\n\nYou'll need to become more aware of how your sissy body gets eroticized now that you've embraced having your penis locked. Allow me to introduce you to how.\n\nSissy...meet Mr. Prostate.\n\nMr. Prostate...this is Sissy.\n\nMr. Prostate lives just inside your sissy rectal canal and will teach you how to Sissygasm. (Note: We can discuss Sissygasms at another time.)\n\nBut\n\nFirst things first. Go back to that porn shop and buy yourself a nice butt plug. If you're feeling bold due to your recent success, tell the person behind the counter you are a closet sissy in chastity who needs to learn how to eroticize your prostate.\n\nThey will have plenty of suggestions. Trust me on this, they've heard this request plenty of times before you came in their store.\n\nOr just pick out a butt plug and bring it home. Wash it several times. Lube it profusely and slowly work it up your ass until your tight little butt hole clenches down at the base to hold it firmly in place.\n\nTake a picture using a mirror for proof. Make sure your bald chastised penis is visible, too.\n\nJust so you know, you won't be able to wear a butt plug all day. It'll fuck with your bathroom habits if you try to. But you can commit an hour here and an hour there each day at work. Keep in mind, you'll need a private compartment in your briefcase to store your butt pleasure.\n\nYOUR BIG DAY\n\nFall is around the corner. Your big day is just months away.\n\nHalloween.\n\nYou need to commit to my last action item on October 31 and then we can analyze your progress. Fully dress as a woman for Halloween to prove you are a closet sissy. Don't do this for me. Do it for yourself. Prove to yourself that you can openly be a sissy for one day. It'll be no big deal and you'll be able to relax--in public--without having to be self-conscious. You'll be plugged and in chastity under your skirt, but your bra and panties can be worn proudly. Everyone will expect you to be wearing them.\n\nAnd you won't need a photograph for proof. Plenty of your coworkers will take care of that for you.\n\nPEP TALK ENDING\n\nI've laid out some initial action plans for you. Rudimentary HOW TO sissy stuff. Minor really and very achievable. You can do this! I believe in you! You want my approval. I know you do. Prove it to me!\n\nProve it to yourself. I've given you the tools. It isn't that hard (you're soft). Do you have the balls? Or are they too tiny, too?\n\nPAT ON THE ASS ENDING\n\nYour completed photographical checklist:\n\n*Bra under your dress shirt\n\n*Bald, limp little shaved penis\n\n*Dicklette humiliatingly locked in chastity\n\n*Embedded butt plug\n\n*Wife's key chain\n\nI'm proud of you for showing me your proof. All right under your wife's nose.\n\nThere is so much more you can do to fully embrace your sissification. To open yourself up (double entendre intended). This HOW TO guide is just a start. But look how far you've come already!"
    ],
    "authorname": "charmer949",
    "tags": [
        "sissy",
        "humiliation",
        "female dominant",
        "sph",
        "butt plug",
        "chastity",
        "sissification",
        "submissive male",
        "femdom",
        "small penis humiliation"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/sissification-how-to-get-started"
}