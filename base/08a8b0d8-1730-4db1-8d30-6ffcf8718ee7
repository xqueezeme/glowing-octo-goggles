{
    "title": "Flowers for Jill Ch. 05",
    "pages": [
        "Author's Note: \n\nI apologize deeply for the long wait. I got promoted (yay me), but now I have a load of responsibilities and a bunch of idiots to reform (boo); so I've been busy, busy, busy with work. \n\nThis chapter was supposed to be one with the one before it, but as I mentioned before, it stretched out and I had to cut it in half. Well, it's still very long, and I had to cut a lot of scenes from it, but didn't want to butcher it more than I already did, so I stopped cutting. \n\nI feel like I need to start posting the future chapters under the \"Novels and Novellas\" category since this story (which started out more or less as a dare) got longer, and somehow more personal. I wanted to get some opinions though, let me know. If I don't get any advice, I'll probably go ahead and change the category with the next chapters, so don't leave me hanging! \n\nAgain, thank you for reading, and I look forward to all your feedback! \n\n<ul> Ginger :) </ul>\n\n***** \n\nWednesday was supposed to be a mellow, promising day. It didn't have Monday's overload of work, nor Tuesday's after-party clean-up that followed horrendous Mondays. And while it wasn't as close to the weekend as the two days that followed it, Hump Day had never been associated with stress in Marc's world...up until Helga stormed into his office wagging her finger at him, \"You bring her back, today!\" \n\nKnotting his eyebrows in confusion, he enquired, \"What did I do now?\" he let her get away with talking to him like that because of her age, and her closeness to his family, it's never really bothered him until he started working directly with her. Now he felt the need to lay down some rules about her speaking to him like he was a child in front of his employees. \n\n\"She called in again.\" her voice was strained, belaying her aging years that she hid very well. The gravity of her tone touched him, and alarmed him to where Jillian might be, or what she might be up to. \n\n\"What makes you so sure she's not sick?\" he didn't tell her that he called the previous day, and got hung up on. \n\nThe woman shook her head vehemently, \"I know that girl, there's nothing wrong with her health; it's something else.\" Then she glared at him in a way that made him want to check for a small red dot on his chest or forehead, \"It's because of you. Why did I fool myself into thinking you can keep your hands off that girl? How could I have been so stupid?\" \n\nThis was getting a tad too disrespectful, and his vexation with Helga's insubordinate attitude, and biasness in Jillian's favor was rising, \"It's always my fault, isn't it?\" he swallowed the stream of sordid facts that linked him to Jillian and threatened to flood out of his mouth, for the sake of Jill. Of all things, he took her side in his head at the same time he resented someone's favoring her over him. What did she do to his head to unscrew all the bolts and wires that made sure things functioned studiously? \n\nAvoiding his remark, she declared, \"I sent her flowers and put your name on the card.\" \n\nThere was a line; a clear, sacramental, inviolable line, and it has been crossed impertinently by that action. Marc felt a vein expand and start to throb on his forehead as he shot out of his chair, shaking with rage, \"How da-\" he took a deep breath and shook his head, he wasn't going to explode in anger like that. Taking another breath, he said very serenely, \"You shouldn't have used my name.\" \n\n\"I took the liberty of doing what needed to be done.\" \n\nHis hands fisted and he tapped the knuckles nervously in a rhythmic pattern on the table top, \"Helga -Ms. Bloom, I asked you specifically to stay out of this matter. If you wanted to go talk to her and check on her, fine, you can do that; she lives in your building after all, but acting as my spokesperson is...\" he shook his head shooting her an indescribable look, \"that was taking it too far, and breaking a direct order from your boss.\" \n\nShe crossed her arms defensively, \"It was an order? I didn't know that.\" \n\nHe continued to stare at her in silence until she shrugged, \"I'm trying to help. I don't know why you're so bent out of shape over it, to be honest.\" \n\nBefore he could think or filter his reaction, he heard his own voice roaring, \"Because I wanted to do that, goddamn it! I'm the one who spends embarrassing amounts of time leafing through fucking flower catalogues like a fucking loser to get her something unique...like her.\" Well, the cat was definitely out of the bag, but it had scratched its way out, and the whole scene didn't look too pretty, \"Jesus, Helga that's...I told you I'll fix it, why couldn't you for once, just once, trust my word on it? I'm not a kid anymore...\" he pronounced more quietly, \"I'm a grown man; I know what I'm doing. And when I don't, I know how to fix it.\" \n\n\"I'm sorry.\" The older woman croaked, flabbergasted at his display of furious emotion over something as insignificant as flowers. \n\nMarc sat down again admitting to himself how ridiculous he made himself look over some nonsensical flowers, \"No, you're not, you never are.\" He licked the front of his teeth with his lips closed making a rude face, \"You do whatever you want to do, and I can't say anything to you because you're you. Why do you think I was so hesitant about working with dad and taking this position after him? I don't want to work with family and friends who think they can have it their way and ignore my authority just 'cause. It's too late now,\" he shook his head throwing his gaze around the office walls, feeling the delayed heaviness of his decision finally settle on his shoulders and chest weighing them down, \"I agreed to break my rules and change everything in my life, moved across the country, and let a bunch of people go. I can't just change my mind, and I have to rely on my people here to help and back me up, not see me as a child who's expected to ruin things. Sure, I might've been a bit reckless when I first met Jillian, and didn't act like I should have, but that's my mess to deal with, not yours.\" He repeated for emphasis, \"Not yours, Helga.\" \n\nShe finally seated herself, and maintained a contemplative silence that exacerbated his growing displeasure with her as he thought she must've been speculating about the extent of his thing with Jillian. \n\nEver the stubborn man, he held a staring contest with the magisterial woman, refusing to let her off the hook, intent on getting his authority acknowledged and heeded. \n\nShe caved, \"If I'm ever meddlesome, if I ever interfere in your life, it's because you're like a son to me.\" her tone was gentle, \"I can't have children, even if I wanted to, and I don't think I'd have made a good mother have I had kids full-time, but it was an honor for me to watch you grow, Marc. I don't think you're incapable of carrying your daddy's torch, because you are, no question about that. I just can't help but look after you, and get kind of grandmotherly with you when you do something I deem stupid.\" \n\nHe scratched between his eyes with the back of his thumbnail then rubbed his forefinger's second knuckle over the area he scratched, and ran it all the way up to his forehead smoothing the taut skin in silence and absorbing her words. \n\n\"I have my own speculations about what you and Jillian did, and I'm certain you weren't the only participant, but you're here and she's not. She refuses to come, which brings about the conclusion that you did something to anger her.\" \n\nHe didn't want to hand her that one, \"Or that she did something that makes her not want to show her face around me.\" \n\nHer eyes widened, obviously not expecting that, \"Jillian?\" then she frowned, \"She's the model of perfect behavior, she wouldn't...\" \n\n\"Stop thinking about it,\" he rose from his chair walking up to the door, \"don't speculate, don't build scenarios, don't put together any stories in your head even if they're just for you to mull over. And yes, that is an order, Ms. Bloom.\" He opened the door ushering her out. \n\nShe nodded, getting up and smoothing her skirt stoically, \"I respect your wish, Mr. Dussant.\" \n\n\"I appreciate it.\" he thanked her then clicked the door closed behind her. \n\n***** \n\nHours later, he dialed Jillian's cell from the office line, and it went straight to voicemail, but he didn't expect an answer, hence he left a short message, \"Pick up, Jillian, this is ridiculous, we need to talk. Call me or I won't stop calling until you pick up.\" He paused looking at the accordion-style folder containing her modeling pictures on his desk, and covered the mouth piece for no reason as he was alone, then removed his hand to add \"Also, I didn't send those flowers; Helga did, I...\" why did he say that? \"I wouldn't do something silly like that when you're not talking to me.\" Lame! \n\nHe concluded his work day with that, snatched her pictures and went to the gym, letting the folder -and his anxiousness- rest for a couple of hours as if to prove that he still had some self control. \n\nHe picked up a supper on the way home, and managed to shovel half of it into his mouth in a few quick bites before springing up and out of his chair to retrieve the folder. Poking another loaded bite with his fork, he dumped the contents of the folder on his kitchen table. \n\nThe first picture his eyes fell on was one of her wearing some large college football jersey which bottom she gathered in one hand lifting it up to reveal her midriff and dark blue lacey boy short panties. The sexy bottoms were completely made of lace and clung to her generous shapely hips that made her little waist seem even smaller in comparison. Her hair was a mess of curls, and she bit the tip of her thumb with a saucy half smirk as her dark eyes stared seductively at the camera. \n\nThe bite of seared marinated beef he was chewing lodged in his throat when he swallowed convulsively, and he coughed reaching for a glass of water cursing internally. Holy hell, but she was something! \n\nAnother picture had her in a soft lavender satin chemise, sitting on a kitchen counter with her legs spread wide, and the heel of her hand pinning the slip's embroidered hem to the countertop covering her naughty bits. Her other hand held a heart-shaped lollipop that she ran her tongue on the side of. There were more pictures of similar nature, all displayed sexy lingerie in a very openly erotic way, and he cursed again, this wasn't lingerie modeling; this was soft porn! She had something in her mouth in almost every picture, and posed in naughty positions that screamed \"Take me!\" \n\n\"God Almighty!\" he ground out leafing through the personnel documents and found an old catalogue that indeed belonged to some clothing store that sold women's intimates and swimwear. Why did they make them so sexy when their target audience was straight women? \n\nMarc shook his head and devoured the rest of the pictures with his eyes. Even her standard basic Polaroids were hot, she wore bland white underwear in the body-length shot, no makeup, and had her hair sleeked to the back, but it still managed to arouse him. That hypnotizing look in her dark eyes addled his brain that was already having trouble keeping track of everything with her in the metaphorical picture. \n\nHe read her file, and studied the pictures again. Her hair was longer, a lot longer, and her breasts seemed a little smaller, and so did her thighs and hips. She looked more on the thin side as opposed to her current toned, slender frame that still managed to curve and bloom in all the right places. He knew enough models to distinguish a sexy camera face from a real aroused expression, but it felt so weird to see her dolled up and posed like a bunch of others who didn't hold a candle to her. She had so much in her and it didn't feel right to see her in a magazine where all the girls were presumed to be airheads and got their pictures jacked-off to by lonely guys, or got their faces drawn on by jealous women. A magazine which papers got used to wrap china and glass in moving boxes, or line a birdcage. \n\nThis was his Jill, the woman that made a pants suit or a business skirt and blazer seem just as sexy as any of the fetish wear modeled in the catalogues on his table. \n\nHe was so absorbed in what he was doing, that he didn't remember to finish his meal which sat cold and neglected on the far side of the table, nor did he notice the time edging closer to midnight then passing it. Marc sat there tracing Jillian's body with his fingers on his favorite picture in the bunch. She posed in a ramshackle barn wearing a raspberry red and white set of peasant, gypsy looking underwear. A pair of bloomer panties which legs tied right under each of her round ass cheeks, soft cotton with sheer lace and lots of ribbons crisscrossed and tied in bows. Her bra was the same style; something between a top and a bra, sheer in some places, and ruched under her breasts, and around the higher part of her upper arms where the sleeves stopped. Her hair was a bit tousled with multiple small braids that had strands of small wild flowers woven into them. She was barefoot, her toenails painted a dark red, and looking like a blooming rose next to the old fashioned wagon she stood next to. Her photographer had posed in the least suggestive way as one long leg was pushed up on tiptoes and bent towards the front of the other one, while she held a long strand of some wild plant in both hands. \n\nThe smile on her face was the most arresting aspect of the picture, however. This is how he wanted her to look at him; with pure joy reflected on her face and a happy toothy beam that reached her eyes. He wanted her to be happy to see him. It was a strange wish. He didn't understand why it was so important to be liked by her all of a sudden. He wanted her to miss him, to think about him, and to worry about upsetting him like he was about her. \n\nDropping the picture on the table, he sat back in his chair and raked his fingers through his hair expelling a long sigh. Those pictures got him worked up, and he floated, daydreaming as he brushed his teeth then stripped and got into bed to sleep. \n\nHot and bothered, he had two options; he could either take his chances and go to her house in an attempt to seduce her and get her forgiveness, or take care of it himself. Since the first option would probably end up with him getting pissed off after she yelled at him, he conceded with the latter, and reached for his aching hard cock closing his eyes. Memories of her swam behind his eyelids as he wrapped his fingers around the thick shaft, and jerked roughly. \n\nIn his head, he heard her moans egging him on, begging him to fuck her...harder, deeper. \n\nHis -lately over active- imagination mixed actual memories of her with the Jillian he saw in the pictures. He saw her bent over that ridiculous beat-down wagon with her panties around her ankles, her ass and cunt put on display just for him...his hand squeezed harder o his cock when he imagined pushing into her tightness...his fingers were very dissimilar to her soft slick folds in their roughness, a poor substitute to the siren that seemed to haunt him. \n\nHe swiped his fingertips, nevertheless, over the flared head collecting fat drops of precome that leaked from the slit and dotted around it. Rubbing his fingers in to the slick moisture, he spread it messily over the helmet, down the long shaft, and rubbed it on the inside of his palm before going back for more...she'd be incredibly wet for him, sopping, dripping. The pouting folds of her labia glistening with her honey...Marc's fingers compressed his thick hot meat slipping lower to wrap around the base...she'd push back against him, impatient and starving for his dick. \n\n\"Fuck!\" he exhaled a long curse tracing the throbbing thick vein that ran the length of his penis. \n\n\"Yes, fuck me, Marc.\" Her voice answered in his fantasy, \"Mr. Dussant, please, I want you inside me.\" \n\n\"Balls deep.\" He breathed totally losing himself into the illusion of her, his hand sliding up then down, pumping his hardness. His big hand was warm, heating up his precome that lubricated his strokes, and he ran it over all the sensitive parts of his tool taking his time, lengthening his fantasy, his delicious sexual daydream. \n\nJillian would want him to go roughly, she liked his ribald manhandling. Good Girl Jillian was his own little cum slut behind closed doors, letting him delight in everything she had to offer, every little secret that she maintained behind her serious, businesswoman fa\u00e7ade. She let him use her, but she returned the favor. Their constant table turning on each other excited him, just when he thought he was on top, she did something utterly raunchy and out there that wrapped him around her elegant little finger, and he loved it...craved it, that back and forth tossing of power. \n\nHis loud sighs filled his ears, legs bucked and jerked on the sheets as he felt his pinnacle boiling, seething, rising. With his left hand, he cupped his balls and caressed them just like she did for him, feeling their heaviness on his fingers, warm, swollen, and full of cum...in his mind's eye, he saw her ass pushing against him, slapping wetly against his groin...his hand moved quicker still, up and down, the slick sounds of his stroking were lewd, loud, and perfect. His hips pumped up involuntarily as he felt the culmination start at his prostate and pool up towards his balls, through his shaft, and erupt in thick jets flying into the air then landing on his taut stomach muscles. \n\nHe milked it out with his thumb and forefinger pressed under the head of his dick, his thumb oscillating against the magical spot of his frenulum despite his oversensitivity during his orgasm...her pussy muscles would squeeze him torturously like that when she came at the same time as he. And Marc stuck with the illusion until his tired hands slackened and released his cock and testicles. \n\nHis eyes stared into the darkness for countless minutes as he hung in his exhaustion between slumber and wakefulness. Thoughts driving fast and crashing into each other in his head that pounded delightfully as his body still struggled to come down from the heights of that climax. He wanted to call her so badly, itched to grab the phone and be rewarded by the sound of her voice and an admission of her forgiveness, but that was farfetched. Even if she did forgive him for playing her, she would be enraged at having someone wake her up in the middle of the night just to say hello. \n\nShe didn't show up the next day, not that he expected her to. He couldn't, however, staunch the sense of disappointment that stained his day. \n\nHelga didn't approach him about the subject again, and Jillian's spunky secretary volunteered to help his since Mrs. Kirchhoff was new to \u00c9lsi Dussant. \n\n\"I have nothing left to do,\" she confessed handing him a report. Her hazel eyes exotically light compared to the cocoa-hue of her skin, \"Ms. Zahra emailed me this, she said it's complete, but didn't assign me anything to do.\" \n\n\"She's working at home?\" he enquired of the young woman that was eyeing him with a touch of accusation as she replied with a question, putting him on the spot, \"Was it a management decision to get her to leave her office?\" \n\nHe raised a disciplinary eyebrow, \"What are you talking about? No, Ms. Zahra's position is still the same.\" \n\n\"And the boxes on her desk? A bunch of her stuff is packed like she's moving out of there.\" She insisted. \n\nTemper rising, he reiterated, \"Ms. Zahra's position is still the same. Maybe she's planning to redecorate her office or something. Stay out of it until she comes back.\" He felt complied to add, \"That's an order.\" Since everyone seemed to view him as the evil ogre who made Jillian stay away from work. ",
        "\"What do you want me to do in the meantime?\" \n\nLaying down the law, and proving himself to these people moved to the top of his list as he answered, \"Mrs. Kirchhoff needs some help, she worked with me for a while now, but she needs someone to introduce her to some of the things we do in \u00c9lsi, I need you to be that someone since you seem so knowledgeable and competent.\" \n\n\"It'll be an honor, sir.\" \n\nFor the next few hours, he heard the two women bickering, joking, exchanging information, and criticizing each other's look. The old woman nagged the younger one about her cornrows and nose ring, and the young one hassled her about her tweed suit and Great Aunt Greta hair. \n\nHe was more than happy to change into his gym clothes and circumvent some of his frustration and mixed emotions into some exercise, yet angry with his distracted mind that skipped reminding him to bring his own water bottle which obliged him to drink from the gym's fountain. \n\n\"Heeey, Mr. D.!\" \n\nHe turned towards the greeting, recognizing Sam Delaney's voice, \"Don't do that.\" He shook his head, then clarified, \"Mr. D., I don't like that.\" \n\n\"Sorry, Mr. Duss-\" \n\n\"It's just Marc when we're not working,\" he offered the man his hand attempting a friendly gesture, \"It makes me feel like an asshole to have people call me Mister all the time.\" \n\n\"It's cool, man.\" Sam shook his hand, \"I've been seeing you around this gym lately, 'course I didn't know you until a few days back, but it's good to have someone to workout with.\" \n\nMarc wasn't a big fan of the \"workout buddy\" concept as he found it merely distracting when he wanted to go to the gym, exercise, and be done with it without squandering time on chitchat, but he nodded congenially, \"Yeah.\" He didn't want to lie or be a jerk, yet found himself doing both a lot in the past few weeks, \"I had to switch to this place because it's close to the townhouse I leased; saves time.\" \n\n\"I hear ya, I wasted a lot of time trying to figure out my commute when I first moved to New York.\" \n\n\"Yeah? You just moved here recently?\" he then pointed at the bench press, \"Can you spot me?\" might as well make use of having a partner there. \n\n\"Sure, and no...well, reverse that!\" Sam chuckled, \"I went to school here, so it's been a while.\" \n\nHe slid the weight plates in place, and clipped them with a spring collar on either side, before lying down on the bench and grabbing the bar, \"Where did you study?\" he asked conversationally and the other man replied, \"Columbia.\" assuming his position at the head of the machine. \n\n\"Good choice. So how'd you figure out the transport? You didn't buy a car and try to figure it out that way, did you? I know a lot of green folks who do that.\" He pushed up his first rep feeling that initial strain in his chest, arms, and shoulders. \n\n\"Nah, I'm from Baltimore, so I had some clues. I got help from some friends at school.\" \n\nMarc grunted his reply without stopping his activity as the other man went on, \"I relied heavily on favors back then, I was always asking people to show me around. That girl Jillian, from work, she went to Columbia with me. Such a cool chick, but at times, I felt like she wanted to snap my head off. Still do.\" He laughed at his own quip, but Marc's movements wavered, and he dropped the bar down quickly, avoiding an accident. \n\n\"Hey, slow down, buddy, that's a lot of weight you got there.\" Sam reached for the bar holding it unnecessarily. \n\nCool chick? What did that mean? Did he sleep with her in college? Clearing his throat, Marc tried to sound casual as he asked, \"You two an item?\" \n\n\"No, it's not like that, she introduced me to Madeline, my crazy bitch from hell ex wife. Of course, she wasn't a crazy bitch from hell back then, and we had a good couple, three years before she metamorphosed.\" He laughed again, seeming to really enjoy listening to himself talk. \n\n\"Huh,\" he focused his eyes on a dot that marred one of the ceiling squares, and asked as casually as he could, \"She dating someone now? Ms. Zahra, that is.\" \n\n\"Naw, Jillian doesn't date,\" Marc's brain started forming quick accusing conceptions before Sam explained, \"she was in love with this guy in college, and he broke her heart, and she just...I don't know, she focused her whole life on work. When she's not working, she's doing something for work; organizing charities, trying to endorse campaigns and stuff. That autism thing we do every year to help raise money for research? She got in touch with the foundation and convinced Mr. Duss\u2014your father to endorse it. She does a back to school drive almost every year, and I think she volunteered to distribute the backpacks and stuff last year.\" \n\nMarc finished his workout in silence, mulling over the new information, and feeling more confused by the minute. They switched places, and Sam asked to borrow his workout gloves when he did his presses -another thing that Marc didn't relish in a workout partner. \n\n\"What happened between her and that guy?\" he asked at length, telling himself that this piece of discovery didn't rouse his envy in the least bit. \n\n\"I don't know, the guy just...didn't want her. It was sad; she chased the guy all over, and he went out with every girl but her. Almost everyone knew she had feelings for him -including him- but he was kinda mean about it. He once called her, in front of everybody, a woman of color, and that was just wrong, man.\" \n\nA woman of color? \"But Jillian's white! And people still say that? That's racist.\" She was tan, Italian heritage maybe? Something Mediterranean, but Marc wasn't focused on profiling people that way as he saw everyone as human, but he had a thing for exotic women. \n\n\"Well, sorta,\" the other man explained, \"Her father is Lebanese I think, or like, second generation Lebanese, I don't know, but yeah it's dumb.\" \n\nAha, Mediterranean! \"And she let that get to her? I mean, surely a woman as smart as her wouldn't want some bigot as a boyfriend.\" \n\nShaking his head ruefully, Sam said, \"I thought the same thing, but she was so fixated on him when he didn't give a shit, and a bunch of other guys wanted a chance with her. Madeline and I talked to her about it senior year, and she said she was over him, and started dating a fireman, but they broke up. Actually, she broke up with him, and he was so upset at the time. I remember him causing a big scene on campus, he showed up and started yelling and shit, but they worked it out and went on and off for a while. I think they still see each other every now and then.\" \n\nThat headache Marc began to associate with Jillian-related complications started to creep up, and press onto his temple again, \"So she is dating somebody.\" \n\n\"Well, no,\" Sam wiped his sweat with a towel that looked like it has seen better days...much, much better days, and started to rip at the gloves' Velcro, \"he lives in Kansas City, and they're best friends now. She brought him to a couple of company charity events, but she sometimes invites this gay guy she's friends with, or her other friend Simone or something.\" \n\nDoing a quick calculation with his head's GPS, Marc concluded that this was the closest gym to Jillian's flat as well, \"She works out here, right?\" \n\n\"Not anymore.\" Sam handed him the sweaty gloves, and he slipped them on begrudgingly, \"Not since Curt -that's the guy from college- started coming here. As a matter of fact, he's the guy over there jumping on the plyo box. \n\nTurning around, Marc spotted a tall, physically conditioned man taking long leaps on a high plyo box. A couple of women stood watching him and commenting with a few guys who cheered him on. Taking a closer look, Marc discerned the cocky grin on the guy's face, along with his not-so attractive facial features. \n\n\"That guy?\" he cried in disbelief, and Sam chuckled, \"I know, he's forever in high school land. He's from a small hick town somewhere in the Midwest, and he played basketball in college or something which, I guess, makes him some sort of god down there.\" \n\nMarc wasn't normally a superficial guy who judged people by where they lived, but knowing Jillian's past with that man made him less than reasonable, and no better than the intolerant fool who almost slipped off the top of the box when he leapt up, \"She should've known better, he looks like an idiot.\" \n\n\"Love is blind, isn't it? 'Sides, people seem to like being around Curt, we crossed path a few times, hung out and shit, and he's one of those charismatic dudes. You know how it is.\" his companion clapped him on the shoulder, \"Hey, you're a big guy, can you show me how to build my shoulders to look like yours?\" \n\nDuring the next twenty or so minutes, Marc craftily milked Sam Delaney for more details on Jillian's life, and tried to put together a more descriptive picture of the woman she was. She was good with people, social and friendly, but kept to herself the majority of the time. Other than the fling with the firefighter, she didn't have any relationships, but Sam said he suspected she went out on the occasional dinner every now and again, nothing to be mentioned especially for a woman as beautiful as she. \n\n\"I don't think she wants to be serious about anyone.\" Delaney had commented before Marc steered the conversation glibly away from her, to avoid raising any suspicions about the nature of his interest in her. \n\nOn the inevitable trip to the water fountain, Marc passed the guy -Curt Hallward, Sam said his name was- who was still surrounded by his worshipping entourage, and heard him say \"And I was like, man, I'm like seven feet tall, do you really wanna do that to yourself?\" drawing a collective laugh out of them. \n\nCharismatic, my ass! Marc thought currishly studying the guy better. They were about the same height, Marc's build was more imposing as a residual result of the years he spent playing hockey in his childhood and later in college before his car accident made him more realistic about what career he wanted to pursue, the other guy was big but still lean, and Marc arrogantly told himself he can take him in a fight. Brown hair, slightly large ears, and an ornery yet lazy mouth deemed him average in Marc's head, and way below that when compared to Jillian. The guy's surprisingly shrill, high laugh didn't help Marc's assessment of him. The women who passed him, however, paid him that extra bit of attention that Marc was very well acquainted with, and the whole workout session turned into a pissing contest that took place in Marc's head only keeping him in the gym long after Sam departed, and definitely longer than he needed. \n\nImpervious to Marc rising dislike of him, Curt approached him pointing at the cable machine he stood in front of, \"Hey man, you using that?\" \n\nMarc didn't notice him at first as he was shuffling the music on his iPod, and shook his head \"No.\" before glancing up to meet the man's pale blue gaze, \"Mind if I grab one of the handles?\" \n\n\"No, not at all.\" He continued to stand in place and glare at Curt who finally pointed at where he was standing, \"Excuse me.\" and reached to release the handle's catch after Marc stepped aside. \n\n\"I saw you training that guy, are you a trainer?\" Curt asked casually, \"I'm a manager at NutriExcel, and I can hook you up with some supplements if you want, we sell to a lot to personal trainers and athletes.\" \n\n\"No, I'm not.\" he answered laconically. \n\n\"You're in great shape though, man. It's a good field to get into, good money.\" \n\nSuperciliously, Marc straightened to his full 6-feet 3-inch height and declared, \"I'm the CEO of a company my family owns.\" Then decided to add, \"\u00c9lsi Dussant; fashion. We own a chain of exclusive high-end boutiques.\" \n\nWhistling in admiration, Curt said, \"Wow, that's a spiffy company, dude, dust that shoulder!\" \n\nMarc felt more inwardly hostile towards him, despite the guy's affable attitude. The fact that he had rejected Jillian breaking her heart, and the possibility that she still had feelings for him contradicted everything, teaching Marc, possibly for the first time, what jealousy really felt like. \n\n\"Thanks.\" His forced smile felt more like a grimace, and he ended the short exchange by slipping the buds of his headphones back into his ears, finishing his workout with a series of stretches and compelling his thoughts to veer away from his newly discovered rival. \n\nOr maybe not, he thought on the drive home and throughout his shower and rushed supper that he barely tasted, maybe she truly was over the guy, maybe she just didn't want to get into a relationship to avoid the headache. He was the same way after all; quick, casual encounters with women were a lot more concordant with his lifestyle and taste. Maybe she didn't want complicated entanglements, just like him, in which case, their relationship -no, scratch that; their association, their arrangement could be continued successfully. \n\nHe found himself automatically reaching for one of the catalogues, and thumbing through it in search of her pictures, then stopped himself and went to bed. But sleep wasn't forthcoming when his mind raced and raged loudly, emphasizing his migraine, and chafing his peace of mind exasperatedly. \n\nUnthinkingly, he sprung out of bed, threw on a pair of jeans and a t-shirt, and zigzagged through traffic getting to her place in record time. \n\nAs if expecting him, the doorman just nodded at him after letting him in, and he didn't bother trying to guess what Helga might've told the old man. The elevator didn't arrive down fast enough, nor did the trip up assuage his burning yearning for her. \n\nHe rung her doorbell, then knocked on the door. In his haste, forgetting to put together an apology, or come up with a speech to grant him her forgiveness. \n\n\"Jillian.\" He said breathily when she opened the door, and his eyes fell on her upturned face that he missed so much. \n\n\"Oh hell, no!\" she frowned and made to close the door, but he stuck his foot between it and its frame, \"Please, don't. I need to talk to you.\" \n\n\"To insult me by telling me that I'm being ridiculous?\" she shot back, \"No thank you. I only opened the door because I thought it was an emergency or something. Do you know what time it is?\" \n\nHe didn't. He knew it was late, but didn't even stop to check or estimate the time, \"Jillian, please, let me talk to you, please.\" What was it about her that put him in that rare form, that outlandish mode that made him act impulsively and imprudently? Headlong, he pushed, cajoling and begging her, \"Please.\" \n\n\"I sent my assessments and reports over today, I'm not neglecting my work.\" \n\n\"It's not about that,\" he shook his head, \"Let me in, Jillian.\" \n\nShe lifted her right hand opening it in his face, \"Five minutes.\" \n\n\"Whatever you say.\" He agreed easily, but she wasn't feeling charitable, \"Five minutes only, I'm serious; I'll time you.\" \n\n\"Whatever you want, Jill.\" he nodded again, feeling lighthearted when she acquiesced begrudgingly and stepped aside holding the door open. \n\n\"Speak your piece and go.\" Her face was bare of makeup, her hair a halo of waves and curls around her shoulders. She wore a tiny, slightly see-through pair of black and white striped short shorts, and a pink tank top, and had a thin book rolled in her left hand with her index finger marking the page she stopped at. She looked clean, unpretentious, earthy, and infinitely female...she was all he wanted. \n\nThe realization rattled him, and taking a deep breath, he started from nowhere, \"That whole thing between us, it wasn't planned, I found myself going forth without thinking, and I went too far.\" \n\n\"You don't say.\" She scoffed, but he pressed on, \"I wasn't expecting myself to behave that way. I saw you and I...I'm not myself around you,\" he wiped his hand over his face, \"it's the exact opposite, actually; I'm too much myself around you, I lose all control and just let go without analyzing...\" he shook his head drifting off again. A man without of plan of action laid all his cards on the table, revealing too much, but he didn't have much to hide standing there in her living room and spewing out his guts like he's never done before, \"I have no filter around you, no self control, and not much prudence; I just go for it...for you. The whole thing started out as a fantasy, one that was born right there when I met you, unplanned, I swear. I couldn't stop myself, I wanted you so badly, and I still do. I don't think I'll ever stop wanting you.\" He rolled his fingers inwardly, fisting his shaking hands, \"I'm sorry that my indiscretion hurt your feelings, Jillian, but I'm not sorry it happened. I'm not sorry for what we did together. I'm sorry for the way it happened, though. But still, if I were able to go back and tell the truth and not be able to have you, I would probably repeat my mistake just for the sake of being with you like that. I don't regret having sex with you, but I do regret having shocked and hurt you like that.\" \n\nHe was breathing hard by the time he finished talking, and he realized that he was studying her face, watching out for her answer whatever it was, and bracing himself for it. \n\n\"That doesn't make sense,\" her voice was low, but steady, \"I wouldn't have agreed to do...that with you had I known who you were back then; so that cancels out the validity of your apology. You were selfish and insensible, while I felt lonely and needed a stranger to help fix...\" she stopped herself, and shook her head taking a step back, \"You knew exactly what you were doing, and knew the consequences, but that didn't stop you. You stepped over me to live your egocentric fantasy.\" \n\nHe took a step towards her, countering her retreat, \"It was a fantasy at first, an adventure, I'll admit that. I never really got to chase or woo any woman, women normally threw themselves at me, but you were different from the start-\" \n\n\"You liked the chase, the game-\" she interrupted furiously, but he had a confession to complete, \"That first time, yes, but things became different after that and I lost the ability to stop myself.\" \n\n\"What a raft of shit!\" she mumbled slapping the book nervously on the side of her thigh. \n\n\"I'm sorry I hurt you, Jillian.\" He tilted his head until he met her gaze, \"You deserve better than a callous asshole,\" he thought fleetingly of Curt Hallward and how he hurt her, and pressed on with his case, \"and I'm here to make things right. To apologize, and seek your forgiveness.\" \n\n\"I'm not the forgiving type.\" She broke the link between their eyes, but he thrived on, \"Make an exception for me, Jillian, I won't disappoint you.\" \n\nShe turned around throwing the book on a sofa, and pressed her fingers into her eye sockets, \"I don't have the time or the energy for this.\" \n\nStartled by the book being suddenly flung away, his eyes scanned it quickly revealing it to be a selection of poems by T. S. Eliot, \"I won't disappoint you.\" He reassured hopefully for, just like him, she was up late, seeking solace from a book just like he sought release from looking at her pictures, enquiring about her life, and thinking about her. \n\n\"You're asking too much of me,\" she turned around glancing at a wall clock, \"Your five minutes are over, Mr. Dussant.\" \n\nThe way she said his name made him cringe in dejection, \"Can I get another five?\" he reached for her, but she walked off. \n\n\"It won't change anything, I heard what you had to say, and I haven't changed my mind.\" \n\n\"I won't talk about it; we'll just sit together.\" She rolled her eyes at him, but he pressed on, \"we can speak about other things.\" \n\n\"It's too late for chitchat, Dussant.\" \n\nHe gave her an adulating smile, \"It is late, but you're up and so am I, we might as well keep each other company. We'll just sit together in silence, if that's what you want. Get a cup of decaf maybe.\" He didn't like decaffeinated coffee, but he was trying to be agreeable and cajoling. It was hard not to exhale in relief when she said, \"Decaf is vile hot water, I don't drag that garbage into my house.\" ",
        "\"See, we're already off to a good start!\" \n\nShe rolled her eyes again, \"How's that? We've just disagreed on something...again.\" \n\n\"Actually, no; I don't like decaf.\" \n\n\"Right. Whatever.\" She shrugged, but didn't kick him to the curb, choosing to reseat herself on the sofa, reclaiming her book, \"There's a bowl of nuts on the kitchen table,\" she pointed at her elevated kitchen area that looked like a boh\u00e9me caf\u00e9 with its quaint furniture and cozy accent pieces, \"help yourself or whatever, I don't care.\" She waved her hand then started leafing through the book for the place she stopped at. \n\n\"Thanks.\" He strolled across her living room, not really interested in mixed nuts, but curious about her house. Books seemed to occupy the majority of her living room and parts of her kitchen with an eclectic collection of bookcases with various designs and sizes. Some shelves divided their space between books and antiques, candles, or decorative pieces, while others filled with books or devoted themselves to display something else. She had a nice collection of paintings, lots of prints, mostly Van Gogh's and Monet's. \n\nThe high Andalusian style high dining table was surrounded by wooden stools with midrise backs, and no arm rests. He reached for the nuts bowl on it and his eyes fell on a crystal ashtray that contained her keys, a hair pin, and one of his sugarless Kerr's chocolate mints. \n\nEschewing the nuts, he snatched the hard candy and smiled when he sat across from her on the couch holding the mint between his index and middle fingers, \"Another thing we have in common. I love these things!\" he popped the mint in his mouth, the familiar weight resting on his tongue, and the fresh taste tickling his taste buds instantaneously. \n\n\"Actually, that's yours; you dropped it in my office. I was curious about it because I haven't seen this brand before, but then again, I'm not a candy connoisseur.\" \n\n\"It's Canadian.\" \n\nShe continued to stare at him, scrutinizing him with those piercing dark eyes before dropping her gaze to his chest, \"Your team stinks.\" \n\nHe peered at his gray t-shirt that said Property of Montr\u00e9al Canadiens under the team's logo, and raised his eyebrow at her, \"Um, Stanley Cup Playoffs? Conference finals? One of the last standing four teams? It was just a couple of months back, sweet cakes, don't you remember?\" \n\n\"The Rangers beat you in all games, fool!\" \n\nHe didn't know whether to be excited about her talking to him -sarcastic and scoffing as she was- or about the fact that she obviously watched hockey, \"Oh, so that's how it is, you're a Rangers' fan.\" \n\nShe pushed off the couch, clearly too distracted to finish her book, \"No, Penguins and Avalanche.\" \n\nChoking on his mint, he coughed out, \"Penguins?\" then he cleared his throat, \"Oh c'mon, I liked it more when I thought you liked the Rangers. You are from New York after all.\" \n\n\"So?\" she raised a shoulder then bent over moving things on the coffee table, \"I like Sidney Crosby.\" She said, and it took him a moment to register as he stared at her derriere pushed up in the air, her tiny shorts riding up and over the full cheeks. His eyes detected no panty lines which sent a rush of blood to his groin; there was only one thin layer of clothing between his hands and her delectable body. \n\nShe straightened, and he shook his head, \"Wait, Crosby? Cry baby, dive everytime, Crosby?\" \n\n\"Captain Crosby.\" She corrected walking off to a sideboard table and yanking open one of the drawers, \"Best in the world, thank you very much.\" Then she added under her breath, \"Where the hell is that bookmark?\" \n\n\"I'm going to forgive you for that transgression, but you'll have to be more open minded about forgiving me, too.\" He knew he pushed it when she turned to face him jabbing a finger in his chest and snapping, \"Forgive you for being a lying bastard who tricked me to get some sex and entertainment on my expense?\" \n\nBoth hands held in front of him, he backed off, \"Okay, alright, I'm closing the subject. I'm sorry...again. I find myself apologizing a lot lately.\" \n\n\"Maybe you shouldn't do stuff that force you into a position where you have to apologize. Ever thought of that, Mr. Dussant?\" \n\n\"I'm closing the subject,\" he repeated, and pointed at the big, fancy aquarium by her window, \"Nice aquarium. Why is it empty?\" \n\nShe half-twirled to cast a long look at the glass case, \"It's not empty.\" she whispered. \n\n\"I need to get my eyes checked, eh?\" he grinned closing the distance between him and the aquarium and bending with his hands braced on his knees to pay closer attention, only to find that it was in fact empty. He glanced back at her in question, and she pointed at a big rock on the bottom, \"That's my pet rock, Walker.\" Her eyes glazed as she said, \"Get it? Rock? Walker?\" \n\nHe frowned, \"Why don't you buy some fish for it?\" \n\n\"I had fish,\" she cried, \"I handpicked all thirty four of them, but they all died on me. One after the other. I don't know what happened or why, I fed them just like the kid at the pet store told me to, I kept their case clean, I bought a bunch of shitty gadgets that are supposed to neutralize their water and keep it at the right temperature, but they still died. Swelled up and floated to the top. It's like they did it to spite me,\" a sheen of tears varnished her eyes for a second, \"the ultimate middle finger, fuck you, Jillian, we're gonna die and leave you alone.\" She sobbed then, of all things, burst out crying, her dainty shoulders shaking with her soft sobs, both hands cupping her nose and mouth like a pyramid. \n\n\"Hey, hey, hey,\" as confident as he always was around people -especially women- he was a lost and confused na\u00efve around crying women, \"Jillian, hey.\" He repeated experimentally, his head feeling too heavy for his neck to support, \"It's okay,\" he reached for her, and started stroking up and down her arms, \"It's okay, shhh... Screw fish, stinky, slipper little fuckers...\" his hands cupped her elbows and he pulled her to his body, wrapping his arms around her slowly, furtively, until her little shakes and whimpers were his own. \n\nMarc continued to stroke her hair and her back gently rocking her as she wept wetting the front of his shirt. And then it hit him, \"This isn't about the fish, is it?\" he asked softly against her temple planting a kiss on the side of her head, did he really do that much damage? \n\n\"It's everything,\" she puled. \n\n\"I'm sorry I hurt you,\" he kissed her temple again and she let him, \"I didn't set out to play such a mean game, I promise.\" \n\nHer crying seemed to intensify, dammit, you made it worse, he told himself when he heard her whimper, \"It's everything...it's you, it's work, it's the fish, it's Doofus, it's this city; everything.\" \n\nDoofus? Was she having some sort of emotional breakdown? He recognized the early signs for -as a result of his parents' numerous separations and breaks from each other throughout his life- he was the only one patient, and sympathetic enough to care for his manic-depressive older sister whenever she went into her dark place. The Dussants fought viciously, yelled, cursed, and threatened, then separated at least twelve times since he was a child. They never divorced, didn't even entertain the idea, which always made Marc wonder if they were deluded or a touch insane to let a solution like that elude them. Colette, his sister, became reclusive, borderline depressed, and went to extreme limits to please people and make them accept and like her, losing herself in the process. Marc, on the other hand, focused on signing on to any activity that tied him up mentally and physically, and provided an escape from whichever parent's residence he had to choose for a few months. \n\nHe knew how to deal with his sister, how to distract her and improve her mood, but his bag of tricks was empty of wiles when it came to Jillian's episode, \"I'm sorry,\" was all he could say again and again until she pushed at his chest to look up at his face with reddened eyes, \"It's not just you,\" she shook her head and swallowed, \"I don't cry about men, that's barren, pointless.\" \n\nHe didn't want her to cry because of him, but he wanted her to cry about him. The sudden thought echoed in his mind, and he decided to file it away as a vain wish borne out of selfishness as he said, \"You need a break, I understand.\" \n\n\"No, you don't.\" she darted her tongue to wet dry lips, \"Everything is spiraling out of control, all at the same time. It's been building up for months now, and you're just the cherry on top, you triggered the volcano, but it's not all you...you just...\" she shook her head again and looked up with a frown emphasizing every word, \"Pissed. All over me. All over everything.\" She had stopped crying, and the transparent lines of her tears were drying on her cheeks, \"How could you do that to a person and act like nothing happened? It's a big deal. I don't know about you, but I don't lie to people just to fuck them, and I don't fuck my subordinates at work.\" \n\n\"It was a mistake, I know that, I was drawn to the whole adventure sense of it, and I didn't think straight then, once I had you, I couldn't stop.\" There, the truth and nothing but. \n\n\"Adventure?\" she snorted sardonically, but a fresh tear ran down her right cheek, \"I bet you fuck a lot of women and call it an adventure, a masquerade; lie and pretend to be someone you're not and call it fun and games.\" \n\nIt was his turn to get riled up, it's true that he indulged and didn't turn down many offers from sexy women, but she was different, \"You're the only one I lied to for sex. I know it sounds weird as shit, but it means you're special to me.\" \n\nShe laugh/coughed, \"You are one fucked up dude.\" Her eyes blinked fast again in an attempt to contain her tears, but silently, they trickled down her cheeks once again, \"And I thought I was crazy for wanting Jack, I thought I was a mess for relying on a stranger to escape a rigid routine, but you are way, way out there, man.\" \n\nHe smiled self-deprecatingly, \"I guess I am,\" he scratched the back of his head, \"I wasn't that way before you.\" \n\nShe stared at him for a minute then whispered, \"At first I was angry at you for taking Jack away from me,\" she wiped at her tears putting on that brave front he came to know so well, \"but now I'm worried that you need serious help.\" \n\nTaking a step towards her, \"Yes, I need you.\" \n\nShe stepped back, \"No, I meant professional mental help.\" \n\n\"Let's try this first,\" he cornered her in her own home, hands clasped possessively on her hips, he glued his gaze to hers and repeated with emphasis, \"I really, truly am sorry, Jillian.\" \n\nHe held his breath waiting for her to slap him and call him an asshole or something, but she just roasted him with her silence for a few minutes. He was determined on winning her staring contest even if he had to stand in front of her all night and his feet fall asleep in his sneakers. \n\nHe felt her body melt in his hands at last, and raised his right hand to her face wiping the remaining tears off of her skin. \n\n\"How do you do that?\" her voice was so low that he had to read her lips. \n\n\"I'm crazy about you, Jillian Zahra.\" He confessed ignoring the question that he didn't have an answer to, and lowered his head to hers while still biding his time, relying on his studious patience. \n\nShe looked at his lips, then up at his eyes, \"You are, aren't you?\" He nodded, and she dropped her eyes to his lips again, \"Or you could be just plain ol' crazy,\" she murmured and rose to her tiptoes before he could deny her claim, and pressed her lips to his. \n\nThat electric, galvanizing feeling of her taste brought on a series of delicious shocks that attacked him all over. The arousal he's succeeded to contain since she opened the door for him, was now in control of him, rampant, and flagrant. He slithered his left hand around her hip cupping her ass and bringing her body forward to press against his erection, and slanted his mouth over hers deepening the kiss. \n\nShe didn't pull back or change her mind, which he was half-expecting, so he hugged her without breaking their kiss, and swiveled around so that his back was to the wall. The simple change of positions was meant as a part of his apology; it's your game now, it said. He didn't urge her to wrap her arms around his neck, or start taking off her clothes giving her the upper hand without relinquishing his control. He did, however, continue to run his hands on her sweet body feeling her softness through the thin layers of her barely-there clothes. The backs of her thighs were delicately shaped, firm, and warm leading to the treasure of her derriere that overfilled his big hands. He squeezed the full cheeks making her moan in his mouth and he licked her lips and touched his nose to hers squeezing again and lifting her up to align her crotch with his. \n\nHe waited for her, this time it was her choice to come to him. Her passion rose with the same erratic pace his ascended with, yet he waited. His hands filled themselves with her breasts feeling the nipples harden like little pebbles against the centers of his palms, and he breathed her name. Jillian squirmed in his arms putting her bare feet on his tennis-shoes clad ones, and pushed up on tiptoes as her hands grappled onto his shoulders from the front then slid around caressing his muscled round deltoids for a better grip. She wriggled and pressed against him, her closeness forcing him to release her breasts and leave his hands free for a few confused seconds until she moved up again, pulling with her hands and arching her feet. \n\nTaking his cue from her, Marc palmed her ass again hefting her up in one swift move that made her giggle as the breath escaped her lungs in a loud whoosh. \n\n\"You alright?\" he settled his left forearm under her ass and she wrapped her legs around his waist. \n\n\"Am I too heavy?\" \n\n\"Light as a feather.\" He kissed and nuzzled her skin and jaw. \n\n\"You can tell me the truth, I won't take offense.\" \n\nThose graceful arms of hers finally wrapped themselves around his neck, and he printed a wet kiss on her neck, \"You're heavier than you look, but still light as a kitten.\" \n\n\"I should be mad at you.\" She threw her head back offering her elegant neck to him, and he kissed the taut skin on her throat and felt a strained movement under his lips when she swallowed. \n\n\"I'm going to make love to you.\" He told her opening his mouth on her neck and sucking protractedly, the thought of leaving a hickey on her for everyone to see driving him to suck firmly. \n\nHer comment was drowned in a moan that he interpreted as her assent and proceeded to look around trying to guess where her bedroom was. \n\n\"Upstairs.\" She croaked threading her fingers in his hair and moving his head crudely to show him the short winding staircase. He climbed it miraculously managing not to trip or fall as they both kissed and nipped at each other hungrily, not patient or wise enough to wait until they got into bed. \n\nHe didn't want to set her down, but had to in order to flip the light switch on despite the silver blue moonlight that her blinds-less windows offered through the gossamer-thin drapes. \n\n\"Not that one.\" She advised when he turned on the overhead lights, so he turned the button down again, and moved to the next one, but she had already switched on the bedside lamps whispering, \"Here.\" Then walked back to where he stood. \n\nThey faced each other, and he had to fist his hands at his sides to keep from reaching for her. He was hard as a rock, and his erection strained painfully against the front of his jeans, the denim fabric too constricting and unyielding. \n\n\"Take off your clothes for me.\" he heard his voice rasp huskily despite his iron will, he couldn't wait after all. \n\nJillian rolled her top on her torso, and slipped it over her breasts that bounced free from the jersey fabric that slid over her arms that she crossed and bent pulling the top up then flinging it over on a chair's seat. \n\nHe made a growling sound in the back of his throat striding over to her and taking his t-shirt off in his advance as she retreated to sit on the edge of the bed. She reclined a little with the heels of her hands pressed on the mattress behind her. He hovered over her, smiling down at her upturned face his expression making her grin and touch her upper lip and teeth with the tip of her tongue and reach for his belt. \n\n\"No.\" he ground out grasping her wrists, and got on his knees in front of her, \"I said I was going to make love to you. Let me.\" \n\nShe blinked, and he tugged her by the arms bringing her forward to kiss her sweet mouth, \"I've never had you in a bed before,\" he whispered against her parted lips, his breath drying the moisture his tongue left on them, \"I want to take my time, to kiss and taste every inch of your body, Jillian.\" \n\nHe relinquished his hold on her hands to stroke the tops of her thighs, watching her breasts rise and fall with her deep breathing, and leaned forward to touch one with the tip of his nose then brush is with his lips before sitting back to look at them again. Her feet arched to assist her in lifting her butt off the bed signaling him to pull her shorts off, \"Off.\" She whispered needlessly as he was already peeling her bottom off of her. \n\nThe first thing his fingers encountered when they slipped under her waistband was the cotton of the underwear he thought didn't exist, then his eyes fell on the smiling face of Curious George with the word \"Hello\" written in white to his right with too many O's that stretched on the other side. \n\n\"Holy shit! What the hell?\" he laughed and stared at her, \"Where did you find those panties?\" \n\n\"Thong.\" She corrected concisely biting her lips against a grin. \n\nMarc shook his head chuckling, \"This is so wrong, I shouldn't be turned on by this, but I am.\" \n\nWickedly, she slipped her index fingers in either leg of the thong and pulled up until the cotton crotch disappeared between the puffed lips of her pussy, \"By what?\" \n\n\"Curious fucking George.\" He grouched, \"This is the kind of shit that you do and make me come unhinged.\" \n\n\"You won't kiss me then?\" she beckoned him levering her hips up, and he cursed, \"Take those damn panties off, I feel like a pervert wanting to fuck you with Curious George on your pussy.\" \n\n\"Kinky!\" she taunted, still biting her smile and wriggled her hips to slip the underwear off. The damp cotton that was stuck to her labia pulled out a clear line of moisture from her cunt, not wanting to part with her sweet heat, and he swore viciously at the wanton little show she put on with her deliberate moves, and the way she murmured, \"Oh shoot, now my panties are all sticky!\" \n\n\"Damn tease,\" he pinched one of her nipples making her yelp and giggle slapping his hand, \"What?\" she teased, \"It's not my fault that you made me soak my panties.\" \n\nHe cupped her breasts flicking the tips with his thumbs, satisfied at the response he drew from the puckering areolas and hardened tips. His position on his knees aligned his face perfectly with her chest, and he released her breasts to place his hands back on her smooth thighs and order, \"Feed your tits to me, Jill.\" to which she complied by sliding her hands over her ribcage until they reached her breasts, then held them and kneaded them enquiring, \"Which one do you want to taste first?\" \n\nHis eyes centered on her right nipple that she pinched between her thumb and forefinger, \"That one,\" he nodded towards it, and she placed one hand under his chin, the other squeezing her tit and rubbing the velvety top on his closed lips. \n\n\"Delicious little toffee bites.\" He murmured and opened his mouth enveloping the dark pearl into the wet heat of his mouth. She sighed, her trembling hand moved to his nape and he felt her fingers toying with the edge of his hair reminding him vaguely that he needed a haircut. Banking on how sensitive her nipples were, and how she liked to have them handled roughly, Marc raked the tender nub with his teeth. Very little refinement went into his biting, and the savage ravishment made her buck and clasp his head with both hands crying out. A predatory smile stretched his lips as he nuzzled his nose along the inside turn of her breast, sliding under it where she was incredibly soft that the mere brush of his lips and nose against her made her whimper. ",
        "\"The other one.\" Her voice was low and shaky, but he denied her determined to prolong his apology, \"Not yet.\" His lips encased her nipple again suckling it firmly and rhythmically drawing it with his teeth and releasing it several times until her fingernails dug into his shoulders, \"Please, Marc.\" \n\nThe musky scent of her arousal enveloped him, with her legs parted around him and her pussy spread like a scarlet butterfly that begged to be sampled. He sat back on his heels and locked his gaze with hers, knowing that if he glanced down at her cunt, he won't be able to stop himself from unzipping his jeans and plunging into her tightness, \"Now I want the other one.\" He demanded making her wince, \"Oh God!\" then eagerly oblige him by holding her breast with the nipple squeezed between her index and middle finger ready to feed it to him. \n\n\"Good girl.\" He praised and claimed her nipple, nipping it sharply then laving it with his tongue to soothe the sting of his bites. \n\nOne of her hands left his shoulder, and he expected her to stroke his hair or hold the back of his head, but it didn't. Low sloshing sounds made him release her wet throbbing nipple to look between her legs where her right hand's middle finger was swirling her pussy juice and spreading it over her hard clit. \n\nThe sight mesmerized him for a long moment during which he felt intoxicated as if he had chugged down a lot of whiskey on an empty stomach, as an initial feeling of giddiness hit him that was followed by a heady sense of floating between reality and illusion. \n\n\"That looks delicious.\" He told her, and she offered him her wet finger by smearing a dab of moisture on his lower lip. He opened his mouth and sucked the slick juice off of her, then bit the tip of her finger playfully when she pulled it away, \"Open that cunt for me, Jill, I want to eat it.\" he declared, and didn't wait for a permission as he spread her legs wider and pushed her farther on the bed until his chest came in contact with the ridiculous ruffled bed-skirt. \n\nShe was forced to fall on her back, and she wriggled reaching over her head for one of the overstuffed pillows then stuck it behind her to watch him pleasure her while still having her hands free to do his bidding. He smirked smugly watching how wet and ready she was for him. Her pink folds were flushed and glistening with the scented fluid that seeped out of her snug aperture begging to be licked off. But he was patient in his pursuit, he turned to the left to kiss her inner thigh and found a scarlet love bite that he had left on her a few days back. Turning to the right, he found the hickey's twin staring at him as if to say, \"Kiss me again.\" and grinned moving his eyes to Jillian's face to meet her gaze while darting his tongue to trace the autograph he left on her intimate soft area. Around and around he circled it, before latching his lips to the same spot sucking it sharply just like he did the first time, determined to renew his claim. \n\nJillian's legs bucked and shuddered, her right leg kicked up behind him then drew back settling her dainty foot against his flank. He peered down at the little toes with their nails painted a deep shade of fuchsia, trembling and slipping halfway into the waistband of his jeans, so soft against his side. \"Everything about you is beautiful,\" he told her stroking his hand along the back of her leg and down to her ankle that he massaged gently before sliding to her foot and caressing it, \"From the tips of your toes to the tips of your raven hair.\" He whispered reverently teasing her toes with his fingers. \n\n\"I have big feet.\" She said in a strangled whisper curling her toes inwards, and upon peeking at her face again, he found her blushing. \n\n\"They're way smaller than mine, what are you talking about?\" he said tracing the arch of her foot then stroked her curled toes until she relaxed them. \n\n\"For a woman, I mean.\" \n\n\"You're a tall woman, their size makes sense.\" He reasoned, still puzzled at why a trivial thing like that should be such a big deal with women, \"They're pretty, long and elegant. I love the pink nails, they're sexy.\" He commented still playing with her foot and felt her start to close her legs. Shooting her a heated stare, he hissed, \"Keep your pussy lips spread for me.\" and proceeded to fling her legs over his shoulders holding her completely exposed and vulnerable. \n\nHe took his time despite his yearning for the distinguished taste of her essence. Marc liked to eat pussy the same way he ate ice cream; he fed his eyes on the tasty sight before him first, watched it heatedly until it started melting for him. And just when it started to drip, he darted his tongue to collect the molten drops on his tongue, then roll the slightly salty fluid against the roof of his mouth feeling its slick texture slide and slip with his saliva, before going for another taste. And he had all the time in the world, this wasn't her office before a meeting, or a hotel room where every piece of furniture was so impersonally extravagant and looked as if it wanted to rush them then kick them out. He was in her house, in her bedroom, making love to her for the first time fully intending on giving himself to her, while taking all of her and possessing it. \n\nHer pink hole quivered, clenched, and oozed moisture when he kissed it. A small moan escaped her lips, and he knew that she was watching him intently while he watched her juicy peach ripen for him. He licked her again, running his tongue from the bottom of her slit over to her clitoris and around it, then went back down until he reached her anus. That dark ecstasy gripped him again, urging him to lick her asshole and illicit those wild responses doing it always drew from her. It was strange and foreign for him as he was normally a strictly pussy guy who veered away from anal play, and wasn't a big fan of the few times he ventured into experimenting it with other women in the past. But then Jillian came into the picture with her beautiful snatch that was always neatly shaved -or was it waxed to that smooth perfection- and her perpetual fresh smell that was a mixture of a spicy expensive perfume and her own feminine scent. Jillian tasted like no one else, she felt like no one else, and he wanted her more than anyone else. \n\nHis tongue didn't wait for his command to circle her anus, and he felt her flinch and exhale, \"Oh yes!\" he grinned to himself watching her juice roll in steady drops down to gather at her puckered star. He darted his tongue and licked her moisture diligently before slipping the tip of his tongue into her ass and making her squirm and moan. Her left leg fell off his shoulder so he used the opportunity to test her flexibility and push her thigh even further, and was rewarded by the yielding of her long leg that opened for him. \n\nHe alternated between dipping his tongue into her cunt and her anus, fucking both holes with studious dedication that felt more like a reward for him instead of being a favor for Jillian because he never wanted to stop. How could a woman be so addictive and taste this delicious, he didn't know, and didn't stop to guess. Everytime her trembling fingers slipped away from her pussy lips, Marc schooled her into fixing them in place again with an order chased by a sharp suck of her clit that made her cry out his name like a divine entreat for a blessing. \n\nHis lips drew her inner folds to suck on them as he finally nudged her opening with his index finger. When he slipped the tip in, her muscles contracted and squeezed at him hungry for more, and he plunged it all the way in to fuck her in a few strokes before adding a second finger. He stopped everytime he felt her orgasm nearing her then nudged the hood of her clit with the tip of his nose once more, before diving in for another taste, and resuming his finger fucking. \n\nIt went on for a long time, but he didn't feel the minutes ticking and falling around him like a meteor shower as his whole universe centered on her exquisite cunt that was all his for the taking. It was such a beautiful mystery to him, every delicate fold, every small line that sinuously shaped the sinful flower he feasted upon. He heard her panting, heard his own harsh breathing, and the sounds his mouth and fingers made as they pleasured her. \n\n\"Please let me come, Marc,\" he heard her begging him. \"Let me come\" she had said tacitly reminding him that he was the one in control, and he closed his eyes for a second to place a kiss on her mound and corrected subtly, \"I'll give you everything you want.\" He added yet a third finger stretching her tightness and licking quickly at her clit. \n\nIt didn't take long for her to reach the pinnacle. A secret, possessive demon inside him incited him to hold off again just to get her to beg him more fervently, but he couldn't do that to her. He was done playing dirty games on her or trying to conquer her. His fingers fucked her devotedly and her scream announced her orgasm, keen and gripping as her inner muscles clenched viciously onto his hand squeezing the three thick digits he buried inside her to the knuckles. \n\nMarc sat back unable to tear his gaze away from the tight hole that swallowed his fingers and undulated against them. Absently, he wiped his chin and mouth against his shoulder, then ran his palm on his nose to swab the sticky moisture that mingled with his sweat and kept her fragrance clinging to his nostrils. \n\nHer back was arched over the pillow, head thrown back with her eyes staring at the ceiling, and her chest rising and falling with her harsh rapid breathing. Withdrawing his fingers at length, he rose to his feet noting that his right leg was on the verge of falling asleep, and kicked it discreetly before shucking his pants, boxers, and shoes in a few economical moves. \n\n\"I can't feel my legs.\" She croaked weakly, and he chuckled, \"I can barely feel mine, and we haven't even started yet.\" \n\n\"There's more?\" her heavy lidded eyes widened before she answered herself, \"Of course there's more; it's you.\" \n\nHe hugged her to his chest purposely scraping his crinkly chest hair against her delicate breasts, and dragged her and her pillow up on the bed until neither of them had any body parts hanging off one of the bed's edges. \n\n\"I always have more for you.\" He nuzzled her neck and shoulder licking the salty drops of sweat from her skin. \n\n\"Do you want me to suck your cock?\" her fingers that were still shaking, reached for his rock hard dick and wrapped around it, barely touching around his girth. \n\nHe shook his head, \"I want your pussy tonight.\" But couldn't help thrusting shallowly into the sheath her hand provided, groaning as his precome lubricated her palm everytime her fingers slid over the engorged tip of his cock. \n\n\"Shit. No more.\" He ground out closing his eyes and gulping a lungful of air that he expelled harshly. She squeezed his cock defiantly with a sultry whisper, \"But it's so hard, it's about to burst in my hand and I want that cream.\" \n\n\"If you continue to play dirty, I won't feed you any cum.\" He touched his nose to hers before stealing a smacking kiss from her lips, and moved to straddle her grasping her wrist and forcing her hand to cup his heavy balls, \"Feel how full they are?\" he pressed his thumb into the inside of her wrist and she instinctively tightened her fingers around his balls breathing, \"I want it all.\" \n\n\"Do what I say then.\" He placed another open mouthed loud kiss on her lips, \"I want to fuck your little pussy, Jill.\" he murmured against her mouth, his tongue touching her lips when he pronounced his L's. \n\nLetting go of his sex, she put her hand to her mouth, savoring the taste of his precome on the pads of her fingers and the inside of her hand. Eyes locked with his, she then raised her hands above her head sinuously undulating underneath him, \"Take it then.\" She raised her hips, lithely slipping her legs from between his and caressing his penis with one of her feet before wrapping her long gams around his waist. \n\n\"Not yet.\" He stroked her thighs before pushing them down on the bed, and bent down to trail a wet line of kisses along her abdomen, between her breasts, then nibbled on her collar bones. He couldn't help but tug at one of her abused nipples with his teeth again eliciting a pained groan from her as one of her hands bespoke the pleasure his ministrations caused and clasped his skull to keep his head on her breast. \n\nMarc suckled her nipple before taking her hand off his head, \"You're getting impatient on me.\" he chastised when she moaned and arched her back silently begging for more kisses on her bright red throbbing nipples. \n\n\"You're teasing me.\" she pouted looking like a siren with her hair spread like a dark halo around her head, her arms stretched up and over her head to grasp the winding faded gold lines of her brass bed's headboard. The bed wasn't as big as he would've preferred, just a queen-sized antique looking deal. But the winding olive gold lines along with her thick double mattress that was covered with sheets of faded gold with bold black roses on them, gave him the feeling of floating on dark waters, emphasizing the siren image that her surrender projected. \n\n\"You're driving me crazy.\" He ran his fingers on her tan skin raising goosebumps in their wake, and cruised all the way to her hands unclasping their hold on the headboard, and threading his fingers with hers instead, \"I don't want a quick fuck, I want to make love to you.\" His voice was gravely and deep. \n\n\"Why are you being demanding when you're supposed to be apologizing to me?\" \n\n\"Because you're trying to rush me,\" he printed kisses on the tender insides of her arms. \n\n\"But your cock is so hard, and I'm so wet for it,\" she tantalized raising her hips to touch his raging erection with her spread cunt, \"and you said you wanted my pussy, but you won't take it.\" \n\nStumbling upon this insatiable, sensual, contradicting woman was his blessing and his doom. He fixed her with a steady stare trying to read her dark eyes, but only found twin burning pools of desire...for him. Everything else ceased to exist, breathe, or matter around them, and he gripped her roughly rolling on his back and stationing her on top of him. This time was for her, he told himself and, to her, he said \"I changed my mind, I want you to take me.\" \n\nShe blinked at him, bracing her hands on his wide chest, absently scratching his chest hair. Marc prompted, \"Take me deep into your tight cunt. Ride me, Jillian.\" But she continued to look at him as if trying to gauge the level of his sanity, and he slapped her ass soundly, \"Don't back out now, get on with it, you little tart.\" \n\nShaken out of her trance, Jillian raised her body over his, but held the slick petals of her sex over his cock that he aimed at her opening with a hand grasping it by the root. \n\n\"I let you get away with so much,\" she slapped his hand replacing it with her left hand on his cock giving it a few pumps, but barely touching it to her pussy, \"insulting name calling,\" \n\n\"Nicknames.\" He corrected with a roguish grin, and she went on, \"Intrusive demands,\" \n\n\"Just spicing things up.\" He interjected again, and she rubbed the tumescent, precome covered head of his cock on her slick folds, still not taking him in, \"Inconvenient timing and surprise visits,\" he watched a huge drop of seminal fluid ooze from the slit of his cock and get rubbed against her distended clit, and groaned, \"I can't help but keep my appointments.\" \n\n\"Lies.\" She pronounced compressing his dick's tip between her fingers and meeting his gaze again. He didn't have anything to say to that last word; he was done taking a defensive stance, and focused on dealing with the situation. \n\nBreaking the silence, she whispered, \"Why do I do that?\" her hand slid down on his cock then up again, \"Why do I let you get away with all those transgressions?\" \n\n\"Christ.\" His penis pulsed hotly, he swallowed with a dry mouth and took a breath, determined to let her set the pace this time around. \n\n\"I'm seriously asking you, Marc, why do I let you do all that to me? I barely know you.\" Her dark gaze was unrelenting, and he finally stuttered, \"Jesus, I don't know, but I'm damn glad you do.\" \n\n\"Why did you put me on top? I don't know how to control you, you always do what you want.\" She went on, still stroking his glans on her swollen nether lips, back and forth, hypnotically mixing their juices together and he felt the blood drain from his head and cruise south leaving him struggling with a smart thing to say, \"Just take me inside you,\" he ground out, \"that's how you control me, Jillian.\" \n\nShe knew what she was doing, the conniving tart, finally pressing his cock to her snug hole, \"Like this?\" she sunk deep on his rigid pole taking him all the way in one agonizing move that wrenched a primitive growl from deep within him. Hands automatically moved to her generous hips grasping them and he held her still with his cock embedded fully into her tight passage. \n\nHis size was too much for her everytime, even when she went slowly like now, and he saw her eyes fall shut and her teeth clamp down on her lower lip holding back a sob. Gentling his touch, Marc swiped his thumbs on the taut skin that stretched over her hipbones, and raised her up tenderly, \"Easy,\" he coaxed, but she pressed downwards halfway up his shaft making him repeat, \"Easy, baby,\" \n\n\"You always do what you want.\" She reminded him, and he eased his grip, \"I'm all yours, Jill.\" wondering why she was so intent on not taking any gentle tenuity from him. \n\nHer arms went up, hands threading in her hair and holding it over her head as she fucked herself on him, tits bouncing up and down on her chest as she put on a show in that exaggerate fascinating way that she handled sex. He had wanted to make gentle love to her thinking it was the best way to translate his intentions, but she wanted to be fucked, so he fucked her moving with her and indulging both their senses. Moisture trickled from her snatch dribbling down on his balls and inner thighs, and some drops even slipped between his ass cheeks mingling with his sweat. \n\nA hard thrust forced her to lean forward digging the heels of her hands into the pillows on either side of his head. Her position cosseted his hunger for her breasts that dangled over his face, and he didn't stop himself from latching on to a nipple and sucking it. His earlier uncouth attentions have left the velvety peaks over sensitized and swollen, than she cried out at the mere feel of his lips on her tender nub. She made no move to stop him from ravaging her breasts again, though, and he didn't hold back biting down, rather roughly, on her nipples everytime her pussy gobbled up his dick. \n\nFinally satisfied with his handy work, he released her nipple and laved it briefly with the tip of his tongue apologetically soothing the throbbing point, and Jillian straightened up again fanning her hands on his wide chest settling for a second. Then she rolled her hips up on his pole, before clamping down again, her ass slapping with a raunchy smack on his balls and making him groan. Jillian leaned forward and repeated her primitive dance on his cock, and he felt the entrance of her womb everytime he delved into her. Felt the slickened soft flesh yielding to his girth and length when it swallowed his penis, gobbling it up as he stretched her tightness to the point where she had to close her eyes and press her cheek to him, \"It's too much.\" She whispered kissing his ear and cheek messily. \n\n\"You've taken it longer before,\" he encouraged stroking her back and thrusting swiftly into her, \"let me guide you, I won't hurt you.\" \n\n\"I can guide myself, Dussant,\" she moved to his lips twisting them with her mouth and delving her tongue inside to twine with his. ",
        "Falling under her spell, Marc surrendered to her touch kissing her ravenously and letting her do all the work, and was getting closer to his release when she sat up abruptly and rose to her knees releasing his cock from her twat mercilessly. \n\n\"Jillian?\" he touched her knee questioningly, but she didn't answer, preoccupied with his steely hard drenched cock. She pushed it towards his abdomen pressing her thumb against his frenulum making him groan and buck his leg haplessly capitulating to her. Somehow, staving off his own orgasm and putting himself through all that torment felt self cleansing, like he was atoning to his sins against her by biting the proverbial belt, and letting her scald him with her fiendish ministrations. \n\nJillian trapped his cock between her pussy and his rigid stomach, rubbing her wet flesh along his shaft with increasing speed. Her lips parted, and her eyes fell closed, the sight of her enthralled him and urged him to keep his iron control over his own release. \n\nSweat dotted her forehead, and trickled between her breasts in rivulets that ran down her flat stomach and dripped on him. His hands cupped her knees massaging him, \"Come for me.\" he coaxed despite having his poor cock toyed with and deprived of her tight cunt hole. He stroked her legs and settled his hands on her feet caressing and squeezing them as he whispered endearments that urged her to climax. Unable to hold off, he slid his right hand around her ass spreading the cheeks and plunging a finger into her tight anal hole. \n\n\"Oh God!\" she moaned frantically grasping for him, and positioned his cock at her entrance, \"I won't come without you.\" She was shaking all over, her face and chest flushed, her quivering pussy clasped him sucking him deep. A few thrusts later, she was screaming her orgasm and digging her fingers into his pecs. \n\nMarc didn't stop ramming his tool inside her even when her tender flesh contracted violently around his cock clenching it and milking it while her hot juices streamed over his sex like warm honey. Drawing out of her ass, he slathered his index and middle finger with her moisture before popping them into her tight hole again invading her pussy and ass and leaving her no secrets to hold on to. He clenched his ass and pumped up exploding unexpectedly as he felt the ghost of his fingers' touch in her ass on his cock when he stuffed her ass with the two long digits. \n\nIt was as if his soul got squeezed out of him bluntly, ardent tremors paralyzed him as his cock shot its load deep inside her. And she wasn't done yet, bouncing fervently on him, one hand flattened in the middle of his chest, the other strumming her clit, she chanted, \"Again, again, please, again...\" slapping her crotch soundly on his. \n\nHis temples pounded with a delicious ache, his eyes glazed, but he was hell bent on giving her another orgasm, wringing the last of his stalwart body's power to pummel her with his still hard cock. It was sensitive after the draining climax that overtook him, but he soldiered on feeling nothing but her all around him. \n\nThe hand on his sweaty chest slipped, and she fell forward cupping his cheek with it and kissed him. Her hair formed a damp, dark curtain around him, and her right hand was still at work on her clit. \n\n\"Marc, Marc, Marc,\" she sang his name between kisses and he answered with incoherent words that he barely heard. Curses, praises, prayers all mingled together and poured out of his mouth to get smothered and swallowed by her kisses. His fingers fucked her ass, his cock pistoned in and out of her, their sweat slickened bodies rolled on each other and he heard her cry out as her pussy clamped down on his dick. Then, out of nowhere, his balls tensed sending a bolt of pleasure through his shaft, and he came again. \n\nHis eyes shot wide open, pupils dilated, sweat rolling off of his eyebrows to sting them and force him to blink repeatedly. \"Jesus Christ!\" he howled slipping out of her anus to clutch her ass cheeks with both hands and focus on the rhythmic pulsing of her cunt on his spasming cock. \n\n\"Marc, oh God!\" she trembled feverishly coming down from her climax. \n\n\"What have you done to me?\" he tried to move his leg and failed to, \"I can't move.\" He kissed her numbly as she lay in a boneless heap of feminine treasure over him, \"You came twice with the same hard on.\" She muttered and he smiled weakly, \"Fucking awesome, eh?\" \n\n\"I didn't think that was a thing.\" \n\n\"Neither did I. I thought I died for a second there.\" \n\nShe made a comment, and he hummed his answer as he drifted off for a few minutes. \n\nMarc came awake with a start like he always did when he fell asleep against his wish. She was still sprawled on top of him, his softened cock nestled snugly inside her, and her eyes were fixed unwaveringly on him. \n\n\"I passed out.\" He explained unnecessarily, but she continued to scrutinize him with that mysterious, exotic gaze. \n\nThis time when he attempted to move, he was able to, albeit weakly. But he brought his hand to her face fingering away the damp strands of hair that stuck to her cheeks and forehead, \"I'm sorry.\" He heard himself entreating, \"Forgive me, Jillian.\" \n\nShe clasped his wrist and turned her face to press a kiss on his palm, the contrast between his big white hand and her delicate face sending a pang of arousal through his abdomen and groin despite his recent fulfillment. \n\nShe didn't answer though, sitting up and pushing his knees down when he raised them for her to rest her back on. She beckoned him to look at their still joined sexes, the lascivious sight of the stark male and female lurid cohesion mesmerizing him. Lifting up, she slowly let him pop out of her cunt, strings of their sex juices attached themselves to her pussy and his cock that flopped flaccidly on the lower part of his stomach. \n\n\"There's so much cum,\" she muttered cupping herself between the legs, then presenting him with a pearly white pool of jizz on her elegant fingers, \"You always leave such a mess.\" \n\nHe opened his mouth to lewdly suggest she eat it like she did in the past, but she wiped it on her chest, threading her sticky fingers through his chest hair, \"Jillian!\" he chuckled snatching her hand, \"Bad girl, no.\" he couldn't help but grin at her. \n\nShe didn't heed him, though, crawling on her knees to straddle his stomach and squeezed her inner muscles with a moan releasing a dollop of cum that oozed out of her hole to settle on his abs. His smile fell from his lips for a second and he looked up at her face. She met his eyes briefly, and tugged her hand free from his grasp to spread her pussy lips open and let more of his cream trickle out. Heart beating fast, Marc watched her inch closer on her knees painting a ragged, clumsy which line of his own ejaculate along the furrow that bisected his stomach muscles. She then, slithered back to sit on his thighs, and bent forward planting a kiss on the mess she made. \n\n\"Fuck yeah!\" he hissed hoarsely, and watched her lap at the puddle of cum she deposited on his body. Her eyes fell closed, the long lashes fanning the tops of her flushed cheeks, and she licked him hungrily kissing his stomach, and nuzzling the dark blond happy trail that led to his groin. \n\nJillian continued advancing on him, her mouth sampling every inch of skin it encountered, ironically doing what he wanted to do to her. She paused to swallow with her eyes glued to his every few seconds until she ate all the cum off, and presented her lips to him, still shiny with the remnants of his essence. \n\nSavagely, his hand shot out to grasp her by the hair and mold his lips to hers tasting himself on her, his slightly bitter, salty taste branding his taste buds and declaring the crossing of another line with her. \n\n\"I forgive you.\" She whispered magnanimously, and he kissed her even harder. This time when he drifted off, she came along with him. Limbs entwined, they slept together for the first time. \n\n***** \n\nA light thud roused him from a languid stupor, and he turned his head blinking in the moonlit room, and scratching his still sticky chest. \n\nJillian was leaning down to retrieve his jeans from the floor, and proceeded to fold them carefully then placed them on a long ottoman next to his boxers and neatly folded socks. She then grabbed his tee and brought it to her nose inhaling his scent, before folding it just like she did the other garments. \n\n\"Hi.\" He rasped, his voice gravely and low, but she jumped nevertheless, and placed a hand on her chest, \"You scared me.\" \n\n\"Sorry. What time is it?\" \n\nIt was still dark, and she was dressed in a short satin robe which color he difficultly made out as turquoise that had black lace trimming on the ends of her long sleeves, and along the hemline. \n\n\"Early.\" She answered, and he stared at his Movado watch, hating the brand for the first time in his life for not providing numbers on the watch's face. It was some time after 5:40 am, his squinting eyes deduced, and he cleared his throat, \"Too early, it's still dark. You always wake up at this time?\" \n\n\"Only when I need to; I'm not a morning person.\" She made a face, \"I wake up at six or six thirty.\" \n\nLaugher roared out of his throat and he pushed up on the bed scratching his chest again, \"And that's not early?\" \n\n\"Not as early.\" She took a step towards him, then clenched her hands as if to school them against touching him, \"Are you hungry?\" she asked instead, and he canted his head to the side meaningfully, \"Yes, come here.\" \n\n\"No, for food?\" she walked off to the door suddenly, as if she didn't trust herself not to jump into bed with him. \n\n\"'M Famished,\" he stood up, \"I need to shower first, though, I'm all sticky from last night. Can I use your bathroom?\" \n\nShe blushed, actually blushed endearingly as she pointed to a door on the far side of the room, \"Certainly, it's that door right there. Unless you want to use the guest bath?\" \n\nHe shot her a glance that said, \"Hell no\" and she nodded comprehendingly, and strolled to the kitchen. \n\nThe bathroom, like the rest of her loft, was a big eclectic, bohemian celebration of colors that worked together in harmony without clashing or looking gaudy. She had tens of bottles of shampoos, conditioners, and shower gels, and a dozen soaps of all sizes and shapes, that he didn't know which ones were for use, and which were mere decorations. \n\nStaying safe, he selected a half full bottle of coconut and lime body wash and showered hurriedly making sure he washed his hair with a shampoo that didn't make him smell like he cross-dressed in his free time. \n\nThe smell of fresh brewing coffee flirted with his senses as the sight of Jillian in the kitchen, so early in the morning, spread a warm feeling through his chest. \n\nHe chose to dress in jeans only, deciding in the shower to convince her to take the day off with him since it was Friday, and just spend the better part of the morning in bed with him. \n\n\"How-\" She turned to him with a pan in hand, but the sight of his naked chest and abdomen with their light furring of hair still damp from his shower, stopped her dead in her tracks. She stared at him with open hunger for a long moment, before swallowing and asking, \"How do you like your eggs, Marc?\" \n\nHe looped his fingers through the handle of one of the twin cups she set on the countertop, and flashed her a smile, \"You can cook?\" \n\n\"Not as expertly as Mario Batali, but not as horrendously as Rachel Ray.\" She watched him pour coffee into his mug, and chuckle at her, \"I thought she was supposed to be good.\" \n\n\"Not if you call cooking canned food with beer good, no.\" her eyes never left him, \"I don't know how you like your coffee, either. I'm sorry I don't have creamer, and I mostly use light syrups or Stevia when I need a sweetener. I drink my coffee black...no sugar. That's why.\" she was gushing, it was adorable, and he smiled reaching for an errant strand of hair to tuck it behind her ear, \"I'm not as badass as you, I'm afraid, I take milk in my coffee. You have any milk?\" \n\n\"Skim.\" She winced, and he reassured, \"Perfect. And to answer your question, I like my eggs scrambled with some spinach, and ground meat if you have any.\" \n\n\"There's something I want to tell you.\" she handed him the milk, and dug in the refrigerator before frowning, \"Dammit, I'm out of eggs.\" \n\nHe stood behind her nuzzling her shoulders through the soft fabric of her robe, \"That's fine, I'll eat a sandwich. Relax, you're so tense.\" \n\n\"I used my last two eggs with the stupid green beans yesterday, and I didn't even eat any of it.\" she sighed, and he peered into the fridge with her, \"That right there?\" he pointed at a pan with a clear lid, and she nodded. \n\n\"Well, heat it up, I'll eat that.\" \n\nShe eyed him skeptically, \"You'd eat a plate of green beans for breakfast?\" \n\n\"Why not?\" \n\n\"Most guys don't even like that dish.\" \n\n\"I'm not most guys,\" he declared taking the pan out of the refrigerator himself, \"besides, green beans are just fine, what kind of idiots have you been dating, sweet cakes?\" \n\n\"No one.\" She swallowed, taking her gaze away from him, \"Whoopty doo, go Jillian Zahra.\" she added caustically and poured coffee into her mug. \n\n\"That's good; I don't have to kick some fool's miserable ass in order to go out with you.\" He smiled, but she shook her head, \"Marc, no.\" her hands shook when she spread jam on the hot pieces of toast on her plate. \n\nHe moved the pan of vegetables and steam poached eggs on the table after heating it, and she handed him a fork from a drawer, \"No what?\" he asked digging into the food. \n\n\"No; this whole going out together, Marc.\" \n\n\"I understand that it's complicated, but we'll make it work. We're not the first coworkers to get into a relationship.\" He bit into another bite savoring the hint of curry spices, and the chicken broth the beans stewed in, \"This is delicious, Jill.\" \n\nShe sipped her coffee in silence, then murmured, \"I don't want a relationship. I don't have relationships. The only time I tried it, it didn't work out, and I was lucky enough to keep Keith as a friend after all that...ugliness was put behind us. That's his name, Keith,\" she cast him a quick look, \"he's a close friend of mine, which is miraculous considering how complicated the whole relationship and breakup shebang was.\" She licked a red smudge of strawberry jam off her thumb and waved her hand, \"I'm babbling, that's not what I wanted to tell you.\" \n\nSo Keith must be the fireman, he deduced, but no mention of that Curt guy? \"I'm okay with just seeing each other for casual sex, Jillian, but I would also like to explore this thing,\" he gestured a finger between them, \"further. We can...get to know each other better, and spend...more time together. Ya know, do stuff...\" why was he stuttering like a fool? \"To get to know each other.\" He concluded lamely, then chased his ineloquent little speech with some hot coffee. Damn, even her coffee tasted excellent, what sort of rabbit had he fallen into with this woman? \n\n\"Marc,\" she took his hand, \"that's not what I wanted to talk about.\" \n\nHe turned his hand closing it over hers, and ran his thumb on her small knuckles smiling, \"What did you want to talk about?\" \n\n\"Remember last night-\" she started and his smile turned into a lopsided grin, \"Every single detail.\" He interrupted. \n\nShe shook her head, \"No. Remember last night when I told you that I'm upset and frustrated with everything?\" at his nod, she continued, \"It's been like this for months. My whole life has been the same for almost five years now, and I'm under a lot of pressure. Work, people, this city, everything...every damn thing, it's weighing down on my chest and I can't help but feel like I need an escape. Jack, you were that escape. You were my yellow paint, Marc.\" \n\nYellow paint? \"I don't know what you mean by \"yellow paint\" and I hope to God it's a good thing, but I can still be your escape, Jillian. I'm here for you. I want to help you out of this funk. I know I can.\" \n\n\"No, Marc. I have to do this alone.\" The melancholy look in her eyes made him squeeze her hand, \"You can go on vacation, sweetheart, get some rest. I'll extend it as long as you want. I'll take care of everything.\" \n\nShe shook her head, \"No, I need a fundamental change.\" Then she explained, \"When I got home on Monday, I was out of my mind with rage and frustration. Everything that's been building for the past few months just crashed down on me after I found out who you were,\" he cringed in guilt, but she went on, \"I considered a number of offers that I've gotten from other companies, I won't lie, I was ready to leave and there's always someone out there trying to add me to their team, but it didn't feel right to just up and leave \u00c9lsi. I tossed around ideas, and what-if's because I didn't want to step foot in that building ever again. I didn't want to work for you, period.\" \n\nA pained look crossed his eyes, and he whispered, \"I'm sorry.\" \n\n\"You said your apologies and got your pardon, no need to repeat it.\" she printed a gentle, airy kiss on his hand and continued, \"I'm not angry with you anymore. Somehow, the shitty prank you pulled on me helped me open my eyes to what I wanted to do in order to get out of my funk, as you called it.\" \n\n\"Can I lend a helping hand?\" he offered hopefully, and if he were still a kid, he would've had his fingers crossed in a reverent prayer. \n\n\"Yes, I need a big favor from you.\" \n\nHe gave her a sanguine smile, \"Anything.\" \n\n\"Don't promise just yet.\" She implored, but he assured her, \"Anything, Jillian, I mean it.\" \n\nShe shut her eyes briefly then began, \"I couldn't sleep last night because I was thinking. I tossed and turned, and saw how peaceful you looked in your sleep, and I realized that I don't want to leave the company, that I can't bear to leave it after everything that's it's been to me.\" his smile widened when her gaze bore into his, the still rising sun pouring its first rays through the kitchen windows rendering the lone overhead light that she turned on useless. She was exquisite in her hesitation, in her soft pleading with him and the contrite looks she cast him when she was talking. \n\n\"I...I did some research while you were sleeping,\" she carried on, \"I know that we're changing a lot of people all around the company, and a lot of key managers are being put on notice and whatnot, and...I found something for me.\" before he stopped to question whether she was using him to get a promotion or not, she went on, \"I want to transfer to the Chicago office. There's a vacant position in their management team that's a lot like what I'm doing now, so I'm not trying to blackmail you into promoting me or anything.\" She smiled gently, \"Actually, it pays a little less than what I'm making now, but I don't mind that, and I'm not asking for any special concessions.\" \n\nIt took him a moment to digest her request, \"You want to move.\" \n\n\"Yes.\" \n\n\"To Chicago.\" \n\n\"Yes.\" \n\nHe paused for a second as a theatrical voice in his head chanted mockingly What's The Worst That Could Happen? And a melee of memories attacked him, his parents forcing him to choose whom to stay with, having to rush Colette to the hospital after breakdown and overdose on her happy pills, being trapped underneath his car in the middle of nowhere, the odious fight with his dad after which they didn't speak for years, and more, and more. What's The Worst That Could Happen? This was it. This was the worst that could happen. \n\nHe pulled his hand free of hers and got up, \"You need to think further about this, Jillian.\" \n\n\"I did all the thinking I need, I promise, this is what I want.\" \n\n\"Don't ask this of me, Jillian, I can't.\" he swallowed the lump that suddenly formed in his throat and shook his head vehemently. ",
        "\"I'm not asking for much, please, Marc,\" she stood before him eyes glazed with tears that threatened to spill, \"I don't even want you to match my current salary.\" \n\n\"So you want me to dock your pay for sleeping with me? What hole in hell do you think I crawled out of?\" he roared slapping her marble countertop soundly, and setting her tears free. Congratulations, Dussant, you made her cry not once, not twice, but three times in less than twenty four hours, his brain mocked, gold fucking star. \n\n\"Jesus, Jillian don't cry,\" he took her in his arms, and she whispered, \"Please, Marc, I need this; I'm going crazy here, I need this. I'll stay and help for a few weeks, and I'll get a good replacement for me so you won't be left with an empty chair. Please Marc.\" \n\n\"I don't want you to leave me.\" he cupped her chin lifting her face to his and kissed her desperately trying to show her how much she was asking of him. \n\nShe stepped away from him, \"There's nothing further than what happened last night between us, no this,\" she signaled her hand between them like he did earlier, \"I can't go back to that office knowing what you and I did there. If you don't care about my other reasons, care for this, for my self-respect. The part of me that I wanted to keep for myself was suddenly exposed to none other than my boss, and that makes me feel like a lowly whore who sleeps with her manager for merits. And that's something that I'll never stoop to. Considering our situation, what I'm suggesting is the best way to resolve it. Please, Marc, for me. I'm begging you.\" \n\nHe pronounced a vicious curse turning away from her. A few minutes passed, and he heard her erratic soft inhales and knew that she was trying not to cry, \"I'll do it just because I don't want you crying because of me,\" he turned to meet her gaze, \"Just because I don't want you looking at me like I'm the worst asshole out there.\" Because he didn't want to be like Curt Hallward who broke her heart and made her feel less than she was. But he didn't add that part; he left the kitchen swiftly to don his clothes and left her apartment without even risking a look at her."
    ],
    "authorname": "Ginger_Martin",
    "tags": [
        "cunnlingus",
        "pussy eating",
        "cream pie",
        "cum licking",
        "romantic",
        "woman on top"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/flowers-for-jill-ch-05"
}