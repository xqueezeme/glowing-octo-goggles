{
    "title": "Thorne Ch. 04",
    "pages": [
        "Hello all! Once again I apologize for the length of time between postings. As I have mentioned before, I am working more hours. My writing time has been cut to less than half, but I really am trying to keep up with lit as well as with some other pursuits. If any of you know how to add two extra days to the week; please let me know. Anyway, Thanks to all of you for your patience, comments and emails. They are much appreciated. Thanks also to my beta reader donalde for his time and efforts. Oh if you keep seeing the word 'but' between pages, ignore it. I appeared on my pages and I can't get rid of it. Last, I hope that all of you had a safe holiday season! \n\n*\n\nBarb was up bright and early. She couldn't wait to hit the stores and spend her allowance for the day. She picked out her best casual dress outfit and got ready for the day. As she dressed, she thought about the meeting. Apparently there were some things that Thorne needed to tell her. The question was; did she want to know? She decided that she didn't. Whatever it was had nothing to do with her although she had no doubt that Thorne would tell her anyway. She was however, curious about what happened between the Sinclaires' and the Blackwell's. It wasn't that she really cared, she just wanted to know.\n\nShe wondered if it was too soon to ask Thorne about moving, but remembered the topic of the meeting. There would be no point in asking about it; he would only tell her no. The more she thought about the meeting, the more something niggled at her. She thought that maybe it was something that Leon said to her, but that wasn't it. He hadn't told her anything that she hadn't heard before, although it did sound different coming from him.\n\nShe had to admit that she was surprised when he went toe to toe with Thorne. Barb also knew that Thorne liked and respected Leon even though he didn't say it. Men like Thorne were drawn to men like himself and Leon was like Thorne. Only he was a much gentler version of him. Her thoughts drifted from Leon to Louise.\n\nBarb couldn't get over how much Louise had changed. She looked the same and talked the same, but she was different. She wondered how much of it had to do with her being a vampire and decided that it had little to nothing to do with it. The Louise that she saw was the Louise that had been buried under a shy, insecure personality.\n\nFor the first time, Barb admitted to herself that she couldn't have done what Louise did and remained sane. That in and of itself made Louise a stronger person than she was. The realization didn't take away her belief that Louise had gotten Nathan by pretending to be weak.\n\n\"It doesn't matter.\" Barb muttered under her breath. \"I'm where I want to be.\"\n\nShe finished dressing and went downstairs to eat breakfast. It still galled her that there were no live in servants, but she knew that it was another thing that Thorne wouldn't give in on... at least not now. In her mind she began to make a list of things that she wanted to change in order of priority. Partway through her list she realized something. She had been stupid and impulsive. Threatening and challenging Thorne had proved unsuccessful and had bitten her in the ass each time she tried it. \n\nIt occurred to her that she didn't know anything about him other than what pissed him off. What she needed to find out was what made him tick. She mentally made a list of the things that she wanted and began to separate them into piles. She wanted Noel and his companion gone, but knew that it wasn't going to happen. The same went for the live in servants-at least for now. By the time she was finished making her list, she realized that most of it would have to wait. \n\n\"Start small.\" A little voice whispered.\n\nThe realization that she had been trying to move a mountain hit her. She had been doing too much too fast. Her next thought was about her family and how much they could help her. The question was could she play nice and could she keep her jealousy at bay? The other question was what was her hurry? According to Thorne, she would live forever. The trick she knew would be in not making the change too quickly or too dramatically.\n\nShe needed to decide on with whom to start with and decided on Felix. He didn't like her, she had seen to that; but if she could get him to change his opinion of her... no, she needed someone easier. Felix may have been the help, but he wasn't an idiot which led her to... Billings. He was stupid, eager to please and he would believe her.\n\nNow that she had a plan, Barb felt better. She moved on to the next item of things that she wanted, at least one live in servant. She could present it as needing help to get ready for the baby... he would buy that, after all; surely Louise had at least one live in servant to attend to her needs.\n\nThorne was in his office when Barb walked by. He really didn't want to talk to her, but he felt led to issue a last warning before she left for her shopping trip.\n\n\"A moment please.\" He called to her.\n\nBarb doubled back to his office and stood at the door.\n\n\"Come in.\" Thorne said.\n\n\"What do you want?\" Barb asked already forgetting to present a softer front.\n\n\"I only want to remind you that you are to listen to Adrianna and that you are to keep your mouth shut.\" Thorne replied.\n\n\"I get it!\" Barb snapped and then backpedaled softening her tone. \"I get it alright? Who is driving us around today?\"\n\nThorne eyed her but didn't reply immediately. He almost laughed at her attempt to play the accommodating mate.\n\n\"His name is Grant and you will also listen to him as well as Adrianna.\"\n\n\"Is he another half-breed?\" Barb asked.\n\n\"He is full blood werewolf.\" Thorne replied ignoring what he considered to be a racial slur.\n\n\"Werewolf?\" Barb asked. \"Are you serious?\"\n\n\"I told you that there are many life forms.\" Thorne told her. \"He has the same instructions that Adrianna does. If you do not obey him, he has my permission to do what he needs to in order to get you to safety.\"\n\n\"I don't get it.\" Barb said. \"You claim not to care yet you have me guarded.\"\n\n\"There's nothing to get.\" Thorne replied. \"I may not care about you or for you, but I do care about the child that you carry. And let me clarify something. Don't get any stupid assed ideas about using the child to control me. It won't work. You can go now, I'm busy.\"\n\nBarb's hackles rose at his tone.\n\n\"I don't know who you think you're talking to.\" She said glaring at him. \"I'm not one of your servants that you can talk to me any way that you like!\"\n\n\"And I'm not a stupid fool who will fall for your lame attempts to be agreeable!\" Thorne snapped back. \"Don't you think I know what you're doing?\" he asked. \"How long did it take you to realize that I cannot and will not be pushed? I told you before, I know women like you. I know the games that you play so let's get a few things straight. You have been given your stipend for the month. If you overspend I will not cover it. If you don't believe me, then try it. You are under my protection because you are the mother of my child. If you weren't pregnant, you wouldn't be here. Now, go spend your money or whatever in the hell you plan on doing but be back here by six. We have things to talk about.\"\n\n\"What? More rules from the mighty Thorne Blackwell?\" Barb sneered.\n\n\"Be back by six.\" Thorne repeated and turned his attention back to his laptop.\n\nBarb didn't move. She was so angry that she felt hot. Once again she realized that nothing had turned out as she had planned. When it was clear that Thorne had dismissed her, Barb stomped out of the office and to the living room where Adrianna was waiting for her.\n\n\"That's what you're wearing?\" Barb asked disgustedly.\n\nAdrianna stood up, looked down at herself and then shrugged. She was dressed in a brightly colored tye-dye tee shirt of which the predominant color was orange and a pair of faded blue jeans that had seen better days. On her small feet was a pair of steel toed boots.\n\n\"I don't see the issue.\" Adrianna said. \"I'm not here to be your fashion accessory.\"\n\n\"I'm not going anywhere with you dressed like that!\" Barb snapped.\n\n\"Good.\" Adrianna said. \"I hate shopping.\"\n\nBarb looked Adrianna up and down trying to decide if she had anything that the woman could wear. \n\n\"Go home and be back here in an hour.\" Barb said. \"I want you in business casual dress from now on.\"\n\n\"As you wish.\" Adrianna said with a tight smile.\n\nAfter Adrianna left, Barb decided to check on the driver. She could only hope that he was better dressed than Adrianna had been. She opened the door and looked out. To her relief, the man that she assumed was the driver was neatly dressed in a dress shirt, khaki slacks and a jacket. When the driver saw her, he smiled and waved. Barb closed the door without acknowledging the driver. As she closed the door, she realized that she should have waved back. She opened the door again, but his back was to her. She closed the door, went back to the living room to wait for Adrianna. \n\nAs she waited, Barb thought about what she really wanted. She had money, she had the nice house; but she didn't have the appearances. The picture of her life that she had painted for herself was incomplete without it. It didn't matter that it would have been a lie. The question was how she could get that piece of the puzzle. She wondered if she could get Thorne to fall in love with her and what it would take to make that happen.\n\n\"I'm back.\" Adrianna said from behind her. \"Does this meet your specifications?\"\n\nBarb turned around to look at Adrianna. She had changed into a nice shirt with a pair of black dress pants. She still wore the steel-toed boots, but they were less noticeable than before.\n\n\"It will do.\" Barb said. \"Let's go, I'm already an hour behind thanks to you. Don't let it happen again.\"\n\nAdrianna gave Barb a sweet smile that didn't reach her eyes.\n\n\"Shall we go?\" she asked in an icy tone.\n\n\"Let's clarify a few things shall we?\" Barb asked. \"You work for me. From this moment on you will speak to me with respect and lose the attitude. Is that clear? If you can't agree to my terms then I'll let you go.\"\n\n\"Actually,\" Adrianna said her tone still icy, \"I don't work for you. I work for Mr. Blackwell. You don't have the authority to fire me. And let's discuss attitudes shall we? Even if I were employed by you I wouldn't put up with your shit. My father used to tell me that the only way to get respect was to give it and lady; I have yet to see it. So here's the deal, I'll wear these crappy assed clothes and you won't talk to me like I'm a piece of trash.\"\n\nBarb looked at Adrianna, turned around and went to Thorne's office barging in even though the door was closed.\n\n\"I want that bitch fired!\" She said as soon as she was in the door.\n\nThorne was on the phone when Barb barged in. He glanced up at her and continued his conversation as if she wasn't there. A few minutes later, he hung up.\n\n\"Do you not know what a closed door means?\" He asked.\n\n\"I want that bitch gone!\" Barb repeated.\n\n\"Haven't you learned yet that I don't give a fuck about what you want?\" Thorne asked. \"You chose Adrianna based on her appearance. You thought that she was someone that you could push around. Your choice stands so make the best of it. For the record, I knew that you would choose her. That's why I made her one of the selections.\"\n\n\"You knew that she was like that?\" Barb asked angrily.\n\n\"Of course I did.\" Thorne replied. \"And if it makes you feel any better, the other two wouldn't have taken any shit from you either, but then you knew that. Oh and a word of warning, don't ever barge in on me again.\"\n\nBarb stared him shocked that he would take the side of the hired help over hers.\n\n\"Was there something else?\" Thorne asked as he picked up the telephone.\n\nBarb left the office slamming the door behind her. Adrianna was waiting for her by the front door.\n\n\"Are you ready to go?\" she asked.\n\nBarb didn't speak as she walked out of the front door and got into the car not waiting for Grant to open the door.\n\n\"Where to?\" He asked after Adrienne was in the car.\n\n\"Bloomingdale's.\" Barb snapped.\n\n****\n\nNoel hadn't moved from his bed since Thorne had helped him into it the night before. His headache was gone, but he was still exhausted. He knew that he needed to drink a unit of blood, but he didn't have the strength to move.\n\nAn hour later, he was still in the same spot. He looked at the portrait of the eyes, murmured a soft \"I know\" and forced himself off the bed. He made his way to the refrigerator, took out a unit of blood and drank it directly from the bag without heating it. The second bag he heated and drank it straight down. The third bag, he heated and sipped at it. While he was still tired, he felt better. He thanked the portrait for helping him and carried it back to his studio.\n\nHe sat in front of it and began to talk to it.\n\n\"Who are you?\" he asked \"And why do you bring me such peace? Are you my mate? If you are, then where are you? Why is it that I can't paint more of you?\"\n\nNoel paused to see if he would get a response. When there was none, he sighed and covered it. He had the feeling that whoever it was, she didn't know the answers to his questions. As he sat there in front of the covered painting, questions about why he didn't remember being at the fight with the Sinclaires resurfaced. Not knowing what else to do, he decided to call his mother in the hopes that Thorne had misunderstood her.\n\nMiraculously, Samantha answered the phone.\n\n\"Hello mother.\" Noel greeted warmly. \"How was your trip?\"\n\n\"I had a wonderful time!\" Samantha replied. \"Actually you caught me just as I was leaving again. How are you?\"\n\nNoel was surprised by the question and the sincerity that he heard in it.\n\n\"I'm fine.\" He replied. \"I like living here with Thorne. He and I are going to be partners in a new club that he's opening. It would be nice if you could come to the grand opening.\"\n\n\"I would like that.\" Samantha replied.\n\n\"It won't be for a while.\" Noel said. \"We haven't started building it yet but it's going to feature me and Thorne's paintings.\"\n\n\"Really?\" Samantha asked surprised. \"Well then I definitely must come. Did you need something?\" Samantha asked ending the niceties.\n\n\"I wanted to ask you something.\" Noel replied. \"Where was I during the fight with the Sinclaires?\"\n\n\"Thorne asked me the same question.\" Samantha said. \"He tells me that you think that you were here with me, but Noel; you weren't. Your father made you go to the Sinclaires' even though both Thorne and I begged him to let you stay with me.\"\n\n\"Why don't I remember?\" Noel asked talking more to himself than Samantha. \"I only remember being with you.\"\n\n\"Noel, by the time that fight happened there had been another fight involving hunters. Do you remember that?\"\n\n\"Yes... I think so.\" Noel replied. \"They came to our home...\"\n\n\"Yes and afterwards you, your father and your brothers went to the Sinclaires to confront them about telling the hunters where we were. You went with them...\"\n\n\"Mother... I have to go.\" Noel said and hung up as a sharp pain went through his head and his stomach roiled. He stumbled to the painting, snatched the sheet off and stared at it without speaking. He finally understood that whatever was causing his headaches was directly related to the night of the fight. The question was how he was going to remember when every time he thought about it, his head felt as if it was going to explode.\n\nFeeling somewhat better, Noel covered the painting and went back to his room to think.\n\n***\n\nOlivia was up bright and early wondering what to do with her day. It would be hours before the others made an appearance making it safe for her to let her guard down a little. She sat out on the patio sipping a cup of mint tea. The early morning had always been her favorite time of the day. It was like receiving another chance to rectify a wrong or to do something good. Today was a chance to do something for her. She was going to spend day without the 'terrible five' as she called them. She was going to get her face, hair and nails done and then go shopping.\n\nIt had been months since she had a professional pedicure and manicure and she was determined to enjoy every second of it. She was also planning to get her hair cut and colored and to have a nice lunch at an expensive restaurant.\n\nShe finished her tea, showered and left the house opting drive instead of using a driver. She wanted the illusion of being free to go where she wanted without having to answer to anyone. In a moment of rebellion, she thought about disabling the GPS systems on her phone and car. The five were asleep, what could go wrong? She asked herself.\n\nShe let out a long sigh and abandoned the plan of disabling the systems. If she did and something happened, there would be hell to pay and the fact that she was Rufus Saunders daughter would mean nothing. As it was, going out alone was a breach of security, but she didn't care. She needed and wanted some time alone.\n\nBy eight am, Olivia was in the car and driving to a destination unknown in a blue convertible with the top down. She loved the feeling of the wind blowing her hair around and the warmth of the sun on her face. Once again she wished that she was anyone but who she was and decided that for just a few hours, she was going to be someone else. For a few hours her name wasn't Olivia, her name was going to be Megan. Olivia giggled at her silliness, but continued her fantasy of being someone else.\n\nShe was married, had two kids whom she just dropped off at school. Her husband Raphael was a high-powered attorney and she had been a school teacher. By the time Olivia reached his first destination of the day, she had completely remade herself. The problem was that she liked the fantasized version of herself more than she liked the real version.\n\nOlivia sighed as she drove toward the ocean. She wanted to sit on the beach for just a few minutes with her eyes closed. It was something that she did whenever she could. It was her time to think about her mother who had died more than fifteen years ago at the hands of a rogue vampire. That was the point when her father became almost fanatical in his belief that all vampires needed to be exterminated.\n\n\"They are evil, vile vermin!!\" He told her after her mother's funeral.\n\nWhat Olivia hadn't understood was if he felt that way, why he had vampires under his employ. It didn't make sense to her.\n\n\"What better way to draw them out then by using their own kind?\" Rufus asked her.\n\n\"I understand that.\" She replied, \"But what happens to those that you're paying when this is over?\"\n\n\"We kill them.\" Rufus replied. \"We can't take the chance that they'll reproduce by turning humans or by giving birth.\"\n\n\"Dad, think about this.\" Olivia said. \"They aren't stupid. Don't you think that they already know what you're planning to do? I don't know, but I think we're better off not using them. It might take us longer, but it'll be safer for us.\"\n\nRufus had gotten angry. He hated being questioned no matter how appropriate the question was.\n\n\"Are you challenging me?\" He demanded.\n\n\"No, I was just asking.\" Olivia replied holding her hands up in surrender.\n\n\"Good.\" Rufus snapped. \"When you're running things you can do whatever the hell you want, but until then; this is how we're doing things.\"\n\nOlivia saw something in her father's eyes that she didn't want to acknowledge- madness. At the time she chose to believe that he was still mourning her mother's death. While that had been part of it, she now knew that it wasn't all of it. All she could do now was to wait for him to step down or die, neither of which was going to happen anytime soon.\n\nShe knew that there were others who questioned her father's sanity. She had even heard murmurings about challenging him for the position of head of the hunters. What they were talking about was treason. The question that she asked herself over and over again was why she hadn't said anything to her father. If he found out that she knew something, he would charge her with treason. She would be killed along with anyone else who he deemed guilty.",
        "Olivia shook her head. She didn't want to think about her father or his insanity. She just wanted to enjoy her fantasy life. She left the beach after an hour and headed downtown to get her hair, manicure and pedicure done. By the time she arrived at the salon, she was back into her fantasy.\n\n******\n\nBarb looked at Grant when she though he wasn't watching. She wondered how easy he would be to sway. He didn't know her or anything about her-did he? She glanced over at Adrianna who was looking at her with an unreadable expression on her face.\n\n\"What are you staring at?\" Barb snapped.\n\n\"Obviously you.\" Adrianna replied. \"I know what you're thinking so let me save you some time and effort. Grant is mated and loves his mate very much. He appears to be an easy mark just as I did, but he's far from it. He will follow Mr. Blackwell's instructions to the letter.\"\n\nWhen Barb didn't say anything, Adrianna continued.\n\n\"Look Ms. Simpson-\"\n\n\"It's Mrs. Blackwell!\" Barb interrupted.\n\n\"As I was saying... Ms. Simpson, we don't like each other and that's fine. I don't have to like you in order to do my job. But we need to come to an understanding if we're going to be spending time together. I'll follow you wherever you want to go as long as it's safe. If Grant or I say no, then the answer is no and if you'll give us a chance we'll explain why. If we are in a public place and trouble rises, you will do as you're told and when you're told. It won't be the time for you to start blabbing about who you are or to start arguing with me because I will pick your ass up and carry you out. If I hear you bragging about who you live with, I will compel you not to speak. If you follow those few guidelines, we'll be fine and I won't say a word to you unless I have to.\"\n\nAdrianna looked at Grant.\n\n\"Do you have anything to add?\" she asked.\n\n\"Nope, I think that you covered all the bases.\" Grant replied. \"I would like to reiterate something though. Ms. Simpson, this is as difficult as you make it. The guidelines aren't hard, but your propensity for wanting to be seen can be problematic-\"\n\n\"What do you know about me?\" Barb snapped. \"You're nothing but a driver!\"\n\n\"I know what I see and hear.\" Grant replied as he looked back at her through the rear view mirror. \"You got into this car thinking that you could play me. Now that you know that you can't I'm back to being the help. Not once did you ask any questions about you could help us keep you safe. Instead you're more concerned about what we call you which tells me something. Appearances are everything to you. You want people to know who you are. I'm not saying that it's necessarily a bad thing, but it could be. We don't know who's listening when we talk. That man or woman standing next to you in line could be an innocent shopper, but maybe not. I know that this sounds excessive, but ours is a dangerous world as I'm sure Mr. Blackwell has told you. We need to be cautious especially since we don't know what this latest threat is.\"\n\nBarb didn't say anything, but looked out the window watching the palm trees as they sped by. She missed the look that passed between Adrianna and Grant. It was a look that said that they knew that they hadn't been taken seriously.\n\nA number of thoughts ran through Barb's mind as she gazed out of the window. The predominant one was why anyone refused to acknowledge her as Mrs. Blackwell. \n\n\"Where to first?\" Grant asked interrupting her thoughts.\n\nBarb went over the list of shops that Thorne had given her credit at and remembered one of them was a beauty salon. She would start off her day with a facial, manicure and pedicure and go from there. Her questions about why no one was accepting her as Thorne's mate were temporarily forgotten as she gave Grant the name of the salon.\n\n\"I assume that you know where it is?\" She asked snidely.\n\n\"Yes I do.\" Grant replied. \"My mate comes here every so often.\"\n\n\"Isn't this a high end place?\" Barb asked. To her way of thinking, if a lowly driver could afford to let his wife have the royal treatment, then it must be a cheap place.\n\n\"It is expensive.\" Grant replied. \"But my mate is a good mother to our children and she is a good wife to me. The cost is irrelevant because I love her and giving her a day here and there to herself is my way of showing it.\"\n\nBarb looked at Grant to see if he was just spouting nice words. When his eyes met hers in the rearview mirror, she saw that he meant it. She looked over at Adrianna and wondered if she had a mate. She couldn't imagine anyone wanting to be with her, but then; stranger things had happened namely Louise and Nathan.\n\n\"What about you?\" Barb asked Adrianna. \"Do you have a mate?\"\n\nAdrianna didn't answer right away. She looked at Barb for several seconds before she replied.\n\n\"Yes I have a mate.\" She replied. \"Does that surprise you?\"\n\n\"To be honest with you, it does.\" Barb replied.\n\n\"It surprises many people.\" Adrianna replied with a small smile and said no more.\n\n\"Why won't you call me Mrs. Blackwell?\" Barb asked.\n\nAdrianna didn't want to get into that particular discussion with Barb, but Thorne told her to answer all of Barb's questions honestly.\n\n\"You weren't introduced to me as Mrs. Blackwell.\" She replied.\n\n\"But that's who I am!\" Barb exclaimed.\n\n\"Be that as it may, I was told to call you Ms. Simpson.\" Adrianna replied. \"Why? I don't know nor do I care. That's something that you need to discuss with Mr. Blackwell.\"\n\nBarb looked at Grant and asked him the same question.\n\n\"It's as Adrianna says.\" Grant replied. \"Like her, I don't know the reason; nor did I ask.\" He added.\n\nBarb took out her wallet and looked at the credit card. She hadn't really looked at it closely to see what the name on the front of it said. She had signed the back of it using the name of Simpson out of habit. Her name --Barbara Yancy-Simpson was stamped on the front. Given what she already knew about Thorne, she was still surprised. Adrianna was right; it was something that she definitely planned to address with Thorne when she saw him that evening.\n\nGrant pulled into the valet parking space at the salon.\n\n\"Wait here.\" He said his tone firm.\n\nBarb watched Grant as he walked around the car looking around as he did so. Finally, he went inside of the salon and came out a few minutes later.\n\n\"They're ready for you.\" He said when he opened the car door.\n\nHe offered Barb his hand which she looked at with disdain and declined. She didn't miss the low, rumbling growl that came in response to her slight. Adrianna came to her side, looked at Grant and led Barb away. Apparently she needed to be reminded that she wasn't dealing with humans.\n\n\"Welcome Ms. Simpson.\" The owner of the salon greeted. \"My name is Marla and it will be my pleasure to serve you today. If you will follow me, we'll get started.\"\n\nBarb's mood improved. This is was more like it. She followed Marla to a private booth and sat her purse down.\n\n\"What services would you like today?\" Marla asked as she helped Barb settle into the chair.\n\n\"I want a facial, manicure and pedicure.\" Barb said relishing the attention that she was receiving.\n\n\"Of course.\" Marla said. \"We use the 'Amarys' line for our products, is that acceptable?\"\n\n\"I've never used that product, but I'll try it.\" Barb replied.\n\n\"Very good.\" Marla said. \"May I offer you and your companion refreshments while I gather my supplies?\"\n\n\"I'll take a glass of ice water with lemon if you have it.\" Barb replied her tone actually half civil.\n\n\"Of course and your companion?\" Marla asked.\n\n\"No thank you.\" Adrianna replied.\n\nAs soon as Marla was gone, Adrianna moved closer to Barb.\n\n\"Just a warning.\" She whispered. \"Marla never waits on customers unless she's fishing for information. Have a care in what you tell her.\"\n\nA girl carrying a tray with a tall glass and a pitcher filled with ice water and fresh lemons walked in before Barb could reply. Without asking, she sat the tray down and poured Barb a glass of water wrapping the glass with a linen napkin before handing it to her. \n\n\"Will there be anything else ma'am?\" The girl asked looking down.\n\n\"That will be all.\" Barb replied feeling very much like a princess.\n\nMarla returned a few minutes later with her supplies. She sat the supplies out with great aplomb feeding into Barb's illusion that she was an honored guest. Moments later, she was relaxing under the talented fingers of Marla.\n\n\"Are you comfortable?\" Marla asked in a soothing almost hypnotic voice.\n\n\"Yes... that feels good.\" Barb replied.\n\n\"Good... so are you new to California?\" Marla asked.\n\nAdrianna listened to the questions and decided not to interfere unless Barb started name dropping.\n\n\"I've been here a few months.\" Barb replied. \"My sisters and one of my brothers live here.\"\n\n\"I see... well, you must have made an impression on someone for them to give you a monthly allowance to come here. What is it that you do for a living?\"\n\nAdrianna went on the alert. She now knew why Marla was waiting on Barb. She had seen the monthly allowance. It didn't surprise her that Thorne had done it anonymously; it was a part of his security. The question was what Barb was going to say.\n\n\"I work from home.\" Barb said evasively.\n\n\"I see, well as I said; someone is rather impressed with your services.\"\n\nWhat the woman was implying finally dawned on Barb and she reacted without thinking.\n\n\"I am not a whore!\" she exclaimed. \"I happen to be married to...\"\n\nAnd then her voice caught. She coughed, sputtered and reached for the glass of water in an attempt to clear her throat. A few seconds later, she was able to talk. She looked at Adrianna who was staring at Marla with blackened eyes. She blinked and her eyes went back to their normal color. \n\n\"You may continue.\" She said to Marla.\n\nAdrianna turned her attention to Barb. \n\n\"You were about to tell her things that are none of her business.\"\n\n\"Did you hear what she was implying?\" Barb asked.\n\n\"I heard and it doesn't matter.\" Adrianna replied. \"What does matter is that you were about to announce to the world who your mate is.\"\n\n\"She's only one person!\" Barb replied.\n\n\"She's one person who has great outreach.\" Adrianna replied. \"If you had told her what she wanted to know, it would have been over our airwaves in less than an hour. You need to start remembering something. Each of us is responsible for the safety of the other. One word to the wrong being or human could get one or more of us killed. This isn't like the human world where people want to be in the limelight and wants everyone to know what they are doing. I repeat, ours is a dangerous world and secrecy is everything. The sooner you understand and accept that, the better off you'll be.\"\n\n\"What about now?\" Barb asked. \"We're talking in front of her.\"\n\n\"Yes, but she can't hear us.\" Adrianna replied. \"I've temporarily rendered her deaf just as I rendered you speechless.\"\n\nThe rest of the appointment passed in silence unless Marla asked a question regarding the services. Barb waited as Marla subtracted the cost of the session from her available balance.\n\n\"You have eight-thousand left on your account. Would you like to schedule another appointment?\"\n\nBarb looked at the list of services on the wall.\n\n\"Yes, I think that I would like a full body massage and all that goes with it. Let's make it for two weeks from now.\"\n\nMarla entered the appointment into the computer and made a card out for Barb.\n\n\"Thank you for coming, and we look forward to seeing you again.\"\n\nThe next stop was Bloomingdales. Barb had decided to use all of the lines of credit before she touched the money on her credit card. Like at the salon, Grant got out first and looked around. This time when he offered his hand, Barb accepted it; but let it go as soon as she was out of the car.\n\nOf everything that Adrianna told her, one thing stuck. She wasn't dealing with humans and if she was going to survive, she had to learn about the world that she was now a part of.\n\nAs she and Adrianna walked through the store, she saw a baby store. It was only then that she remembered that she was pregnant. She still wasn't showing and the morning sickness had passed so it was easy for her to push the pregnancy to the back of her mind. She remembered that a baby store was one of the stores listed and that it was the only store whose line of credit was more than ten-thousand dollars. However, this wasn't the store. In the back of her mind, she planned a tentative date to shop for baby things.\n\nShe thought about Louise with a mixture of jealousy and longing. It had been nice to talk to someone who was going through a pregnancy. It was even better that it was a sister, but... Barb imagined that Nathan was a very active participant in the pregnancy and that he wasn't looking at Louise as an incubator. It was obvious that he loved her no matter what she had done to win him over. She felt a pang in her chest when she remembered all of the shows of affection that she saw at the meeting. As much as she wanted to believe that it was fake, she knew that it wasn't. She pushed the thoughts away and headed for the bath and body section of the store where she would find her favorite bath and body oil.\n\n\"Make yourself useful and get me a basket.\" Barb said to Adrianna.\n\n\"The baskets are to your left.\" Adrianna replied as she looked around. \n\nShe sensed other beings, but none of them were paying them any mind. She checked out the humans' next and stepped closer to Barb. She didn't sense any impending threat, but humans were unpredictable in the best of times.\n\n\"You aren't going to get a basket for me?\" Barb asked.\n\n\"No, my hands need to be free.\" Adrianna replied.\n\nBarb scowled and walked over to where the baskets and shopping carts were. She picked up a basket and then changed her mind. A shopping cart would be better since several bottle of the oil would get heavy. Without saying anything, Barb chose a cart and walked away.\n\n**\n\nOlivia felt like a million dollars. The haircut and color and he facial, manicure and pedicure had done wonders in lifting her spirits. She was still Megan, mother of two and wife of Raphael and would be for another eight hours. \n\nShe pulled the convertible into the valet parking spot at Bloomingdales and got out. She had no idea of what she was going to buy. It was just the idea of walking through a store and not worrying about a potential problem.\n\nShe passed the same baby store that Barb had, but only she went in. She touched the soft blankets and sleepers as she walked by them. On a whim, she walked back to the sleeper section and bought two sleepers, one pink and one blue and left the store.\n\nHer next stop was the lingerie section where she purchased several pair of panty and bra sets although no one other than her would see them. One of the males in the terrible fives wanted her, but she wasn't that desperate. She knew of other hunters who had taken advantage of the sexual talents of vampires, but she wasn't one of them. Her hands and toys would have to suffice until she found someone worth lying with. But it had been so long since the last time she had made love. She pushed the thought away, all would do is make her want what she couldn't have.\n\nShe took her time picking out the bra and panty sets and then looked at the nighties. She let out a long sigh and walked away. She wandered over to the cookware and looked at it longingly. She missed her little house with its tiny kitchen and was saddened by the fact that she couldn't remember the last time she had cooked in it or even done something as simple as making a cup of tea. Tears burned her eyes. She wanted to go home. She hated vampires as much as others of her kind, but not enough to actively hunt them. If it came down to protecting herself she would kill, but to murder was another thing altogether.\n\nThat was another topic that her father would consider treasonous. In fact, there weren't many things that he didn't consider treason. Aware that she was letting reality intrude on her day, Olivia thought about something else. She made her way through the house ware section and finally picked up a tea kettle that she had promised to buy for herself. She hated microwaved water and loved the whistling sound of a tea kettle when the water was boiling.\n\nGradually she made her way to the body and bath products. She had a certain product that she used and Bloomingdales was the only place that carried it. She did a mental calculation of how much of the product that she had left and decided to buy more even though she had plenty. \n\nJust as she reached the aisle where the product could be found, Olivia froze. She felt eyes on her. She forced herself to go through the motions of picking up several bottles of the lotion. It wouldn't do to cause a disturbance. The hunters needed secrecy as much as the vampires did. If the vampires knew that there were hunters in the area, the danger factor would rise exponentially. They would become the hunted as they were hunting.\n\nAs far as she knew, there were no other hunters in the area. It was one of the things that she had checked on before she decided to come to the Los Angeles area. She had made periodic phone calls just to make sure that no other groups were coming. The last time she checked, she was told that they were the only group in the area and they weren't even actively hunting. They were on vacation.\n\nA moment later, the feeling of being watched was gone. Olivia slowly looked around and saw no one. She was tempted to disregard the feeling, but her gut was telling her something else. Instead of leaving, she decided to finish her day. It would be a long time before she could slip away again.\n\n***\n\nAdrianna followed Barb around the store not making any comments. She wasn't sure of what caught her attention, but she didn't ignore it. With one eye on Barb, she slipped back and looked around the corner and down the next aisle.\n\n\"Shit.\" She murmured when she saw Olivia.\n\nShe hurried back to Barb and tapped her shoulder to get her attention.\n\n\"We're leaving now.\" She said looking behind her.\n\n\"What? I just got here!\" Barb replied.\n\n\"We need to leave now, don't make me repeat myself.\" Adrianna said firmly as she took the bottles of oil from Barb's hands.\n\nWhen Barb didn't move, Adrianna looked at her, rendered her mute and began to pull her down the aisle toward the exit. Barb tried to resist but soon found out that she was no match for Adrianna. As they rushed out of the store, Adrianna took out her cell phone and called Grant.\n\n\"Meet us by the exit, have the car door open.\"\n\nA few minutes later, Barb was in the car and furious beyond words.\n\n\"I told you that when you are told to move, you move.\" Adrianna said. \"I saw someone that I recognized and she isn't a friend. You wasted precious time by arguing with me. The next time, I won't be as pleasant.\"\n\n\"Who did you see?\" Grant asked.\n\n\"Olivia Saunders.\" Adrianna replied. \"And if she's here, then other hunters are here too. We need to tell Mr. Blackwell.\"\n\n\"Wait! Why can't you just call him?\" Barb asked. \"And besides it was only one person.\"\n\nGrant ignored Barb as he turned around and headed back to the beach house.\n\n****\n\nThorne was in his office when Barb arrived followed by Grant and Adrianna. He looked at the clock and realized that for them to be back so soon, something must have happened. He kissed his afternoon of peace goodbye and went to the living room.\n\n\"Why are you back so soon?\" He asked.\n\n\"Olivia thought she saw someone and dragged me out of the store.\" Barb said angrily. \"I told them that they could call you, but noooo...\"\n\n\"Shut up.\" Thorne said already tired of Barb's whining. \"Olivia,\" Thorne said, \"A full report please.\"\n\n\"I told you what happened!\" Barb exclaimed angrily.\n\n\"Did you see the person? \" Thorne asked sharply.",
        "\"No but, it was only one person; she said so.\" Barb replied.\n\n\"Did she say this before or after you were in the car?\" Thorne asked.\n\n\"Afterwards, what difference does that make?\" Barb asked.\n\n\"My point is that you don't know how many people were there. Neither did Adrianna which was why she took you out of the store. Now, if you will kindly shut the hell up; I want to hear what Adrianna has to say.\" \n\nThorne looked at Adrianna and nodded.\n\n\"I saw Olivia Saunders at the department store.\" Adrianna said. \"I know that it was her, I know her family well. It is as you say, I don't know if there were others with her. Once I saw her, my focus became getting Ms. Simpson out of the store.\"\n\n\"I understand.\" Thorne said, \"But what doesn't make sense is that no one knew that she was here and there hasn't been the usual rash of disappearances and deaths that comes with them.\"\n\n\"Permission to speak freely sir.\" Adrianna said and then waited.\n\nThorne nodded his consent.\n\n\"Maybe she's here alone although I doubt it. Rufus Saunders wouldn't allow it. The other possibility is that they're on vacation and don't want to attract attention.\"\n\n\"I agree.\" Thorne said, \"But we all know how unpredictable hunters can be. We also don't know how many are with her and if any of those are vampire or any other species. Adrianna, are you able to stay here with Ms. Simpson?\"\n\n\"I can stay for as long as you need me to.\" Adrianna replied.\n\n\"Good... Barb, Olivia will stay in the room adjoining ours. You are to go nowhere without her and that includes outdoors. Just a reminder, she isn't here as your servant so don't try to treat her as one. Grant, how many of your pack is available for duty?\" Thorne asked.\n\n\"How many do you need?\" Grant asked.\n\n\"Four for the day and four for the evening.\" Thorne replied. \"Is that possible?\"\n\n\"Consider it done.\" Grant replied. \"Thorne, may I make a suggestion?\"\n\nBarb's eyes snapped to Thorne. She waited for him to put the wolf in his place.\n\n\"I'm listening.\" Thorne said.\n\n\"I would suggest moving your mate until we know what's happening. I do not doubt your ability to protect her...\"\n\n\"Your point is well taken.\" Thorne interrupted, \"What else?\"\n\n\"I believe that she needs to be reminded that she is no longer in the human world and that rudeness is not tolerated.\" \n\n\"It will be taken care of. Thank you.\" Thorne said signaling an end to the conversation. \"If you will excuse me, I have phone calls that I need to make. \"\n\nThorne walked away without a backwards glance at Barb.\n\n\"Am I allowed to walk around my own house alone?\" Barb snipped.\n\n\"As long as you stay within one hundred yards of me, then have at it.\" Adrianna replied as she kicked off her shoes and sat down. \"You know, if you were smart; you'd ask me what you needed to know in order to make your transition into this life easier. But you won't and do you know why? You think that I'm beneath you. You also consider Grant to be nothing more than the hired help. I saw the look on your face when he addressed Mr. Blackwell by his first name.\n\nI'll fill you in on a few facts. Grant isn't just a wolf, he's the pack leader. He and Mr. Blackwell have been friends for a long time so I guess you can say that they're equals. Grant drove you around and put up with you attitude as a favor, so if I were you; I'd apologize for being so rude.\"\n\nBarb bit back a retort when she realized that Adrianna to some degree was right. Not about the apology, but about using her as a resource to learn about her world. She ignored the thought that she could have called Kevyn, Louise or even Nadine for help.\n\n\"Alright,\" Barb said sitting down. \"Tell me what I need to know.\"\n\n****\n\nLouise stood up and stretched. She had just finished putting the mobile for one of the cribs together. The instructions had made it seem much simpler to put together than it really was. She didn't mind. It kept her from worrying about Barb and her baby. She was more convinced than ever that the feelings of sadness were coming from her unborn niece or nephew. On the positive side, the feeling that something horrible was coming for them hadn't increased, but it hadn't diminished either.\n\n\"What if they don't know it's us that they're after?\" She asked Nathan at breakfast. \n\n\"I suppose that's possible.\" Nathan replied. \"But hunters are indiscriminate about their targets. There haven't been any unusual deaths or vampires reported missing all of which are indicators that hunters are in the area.\"\n\n\"What if it isn't hunters?\" Louise asked. \"There must be other species who would want the vampire world to end.\"\n\n\"That's true, but as you know; every species has a natural enemy.\" Nathan replied. \"The hunters are ours. There are other species who hate us, but they couldn't do anything on their own. That's why they often work with the hunters.\"\n\nLouise stretched again and replayed the conversation with Nathan in her head. The more she thought about it, the more she believed that they were dealing with hunters. The fact that no one had died or gone missing argued against it, but she was sure that's who they were dealing with. The other question was who was with them. She had the feeling that only one of the hunters was human. She didn't know if it was male or female, but the gender didn't matter.\n\nShe heard the phone ring in Nathan's office and then his voice when he answered it. Nathan came out a few minutes later and kissed her head.\n\n\"There's a meeting at Thorne's beach house tonight. Apparently one of his guards spotted someone.\"\n\n\"Who?\" Louise asked.\n\n\"Ethan didn't say.\" Nathan replied. \"But at the risk of repeating myself, I don't want you going anywhere without me and I definitely don't want you trying to reach out to whoever it us until we know more.\"\n\n\"I promise.\" Louise said placing her hand over her heart. \"What time is the meeting?\"\n\n\"At seven.\" Nathan replied, \"And it's only four. That's plenty of time to get you naked and in bed before we have to leave.\"\n\n\"Are we going to try the vanishing thing?\" Louise asked.\n\n\"Soon, but you aren't ready for that yet.\" Nathan replied. \"And besides, we would have to start small. You would have to be able too vanish from your chair.\"\n\n\"Ohhh, do you mean like this?\" Louise asked as she vanished and then reappeared.\n\nShe laughed at Nathan's shocked expression. \n\n\"Why are you so surprised?\" She asked. \"You told me how to do it and I've been practicing.\"\n\n\"I know... but it was only last week that I told you how to do it.\" Nathan said.\n\n\"I'm a quick study, but that's all that I can do.\" Louise said. \"I haven't figured out how to get from one place to another yet.\"\n\n\"Like this!\" Nathan said as he picked her up and vanished into their bedroom.\n\n***\n\n\"A hunter.\" Ethan said to himself. He picked up the phone and called the area hunters watch office and spoke to whoever was on duty.\n\n\"Run your stats again and call me back.\"\n\nHe agreed with Thorne, either the hunter was alone or they were on vacation and staying below the radar. In his experience, hunters didn't take vacations and if they ran across a vampire; they killed him or her without a second thought. He thought back to when Nathan and Louise's feeling came and didn't go away. It had been at least a week which meant if there were hunters, they had been in the area for at least that long. A few minutes later, his phone rang.\n\n\"Mr. Sinclaire? I ran those stats again and nothing.\"\n\n\"Alright, keep running them and as soon as anything changes call me and Thorne Blackwell.\"\n\nEthan hung up. They wouldn't know which group of hunters they were dealing with until they found a body. Each group had its own signature and in which it was dealt with. The sadistic groups were dealt with in the same manner that they dealt with their victims and so on.\n\nEthan hated killing, but he would do it without hesitation to protect his family. The only thing that he wouldn't do is torture. But that was him and he wouldn't stop anyone else from doing it. He had always kept an eye out for hunters, but he hadn't thought about trying to make peace with them in a long time. Not since the fight between his family and the Blackwell's. Maybe it was time to think about it again, but first he had to know who they were dealing with.\n\n**\n\nThorne called Adrianna into his office confident that Barb wouldn't leave the house. Even if she did, she would be stopped by Grant or one of his wolves.\n\n\"Tell me what happened in the store.\"\n\n\"If you're asking if your mate obeyed me, the answer is ... no. Precious time was wasted because I had to repeat myself and then compelled her to silence so that I could drag her from the store.\"\n\n\"I figured as much.\" Thorne said. \"Was she as rude to Grant as he says?\"\n\n\"I'm sorry but your mate is rude to anyone who doesn't cater to her, but yes; she was rude to Grant. I think that part of the problem is that she hasn't made the adjustment from the human world to ours. I hope that I haven't over stepped, but I just explained things to her. My hope is that it will make her more cooperative.\"\n\n\"Thank you.\" Thorne said absently his mind already on other things. \"Do you need to speak with your mate?\"\n\n\"No, he isn't home and won't be for several weeks so I am at your disposal.\"\n\n\"Good, Adrianna my main concern is the child that Ms. Simpson carries. Do whatever you need to do keep her and by extension the baby safe.\"\n\n\"I understand... but if I may, why do you not acknowledge her as your mate?\"\n\n\"That is none of your concern.\" Thorne replied. \"The only thing that should concern you is the task at hand.\"\n\n\"Of course.\" Adrianna said. \"I didn't mean to pry. I only asked because the subject came up.\"\n\n\"The Sinclaire family will be arriving in a couple of hours. They will be coming with their own guards but while the meeting is going on, I want you to meet with their head guard and Grant. We need to circle the wagons as it were. Ethan Sinclaire is aware of the meeting so no worries there. After our meeting, Ethan and I will meet with you, Grant and Ethan's lead guard. What we want is a solid plan on how to keep everyone protected at all times.\"\n\n\"I understand.\" Adrianna said. \"I would also like to suggest a safe house that is big enough for all of you. We may not need it, but we need to plan for every circumstance.\"\n\n\"Agreed.\" Thorne said liking the way that the small guard thought. She was every bit as sharp as he had heard. \"That is something that the three of you can discuss. Is there anything else?\"\n\n\"Yes as a matter of fact there is...\"\n\n****\n\nBarb walked around the house bored and angry that her day of shopping had been blown to hell. She started to go outdoors, but stopped when she saw a man sitting on the steps. He looked relaxed, but he wasn't. As if knowing that he was being watched, he turned around and looked at her with bright topaz colored eyes.\n\nShe backed away from the patio and went to the kitchen to make something to eat. She saw the bottle of prenatal vitamins on the counter and grimaced. She toyed with the idea of missing a dose but thought better of it. She rummaged through the fridge looking for something to eat and gave up. Nothing sounded good especially since she had planned to have a late lunch at a fancy restaurant. She ate a banana and then took the vitamin.\n\nShe continued wandering aimlessly through the house until she found herself at the bottom of the stairs that led to Noel and Felix's part of the house. It still galled her that there were two grown men living in her house. She looked around wondering where Felix and Noel were. She hadn't seen Felix since she arrived and Noel since he vanished from the car before the meeting at Ethan's house.\n\nShe took a step away from the stairs and then turned back. She wanted to see what kind of art Noel did. She found it odd that the door to his studio was locked and she didn't believe for one minute that he was a successful artist. She believed that he and Felix were nothing more than freeloaders.\n\nShe took one step and then another until she was at the top of the stairs. She stopped to listen for the sounds of anyone coming. When she didn't hear anything, she opened the door that she knew led to the room that Noel used as his studio. She expected it to be locked since the door that adjoined the studio to Noel's bedroom was locked.\n\nFor a brief second, she almost turned back; but curiosity got the better of her. She touched the cool metal of the doorknob, wrapped her hand around it; and turned it. To her surprise, the door opened. She stood in the doorway for several seconds before stepping in. She reached over to the wall and felt for a light switch. Finding it, she turned on the light. She looked behind her and then walked into the room. What she noticed first was the number of paintings in various degrees of completeness. She thought that they were nice, but nothing special. What drew her attention was the one painting that was covered.\n\nEven as she walked toward it, she knew that she should leave it alone; but she couldn't. She stood in front of the covered picture, reached for the sheet and pulled it away. A pair of beautiful brown eyes looked at her.\n\nBarb looked at the eyes and wondered why they looked so familiar to her. She suppressed a shiver when she thought that she sensed displeasure coming from the portrait. She jumped when she heard an angry voice behind her.\n\n\"What in the fuck are you doing in here?\"\n\n****\n\nNoel had been asleep since he spoke with his mother. He had wanted to stay awake and figure out what was happening, but the soft voice that went with the eyes in the portrait told him that he needed to sleep. He had resisted, but finally; he gave in.\n\nHe fell asleep soon after his head hit the pillow. For once, his sleep was dream free and restful. He didn't know what woke him. He lay still for several minutes assessing for a threat, but sensed none. He extended his senses throughout the house and felt Thorne, an unknown female, and Grant. Felix was gone for a few days...so who? Barb was missing. That she was gone was too much to hope for. It was the soft rustling of material sliding down that drew his attention.\n\nHe jumped out of bed and went to his studio where Barb stood looking at the portrait. Noel reined back the urge to attack. The only thing that stopped him was that the woman who had invaded his privacy was his brother's mate.\n\nThat knowledge did little to quell his anger. In fact, it fueled it. He had tried to give her the benefit of the doubt. He had tried to be kind to her and here she was touching what wasn't hers to touch.\n\n****\n\nBarb turned around to see Noel, green eyes blazing in anger standing behind her.\n\n\"I asked you a question.\" Noel said as he took a step toward her. \"What in the fuck are you doing in here?\"\n\nBarb didn't move, she was too afraid to. Her gut told her that if she did, Noel would attack.\n\n\"Get. Away. From. Her.\" He growled. \"NOW!\"\n\nBarb moved away from the painting and stopped. \n\n\"I only wanted to see your paintings.\" She lied. \"Thorne says that you're well known...\"\n\n\"Lies.\" Noel said. \"You lie.\"\n\nSeconds later, a voice that she never thought that she would be happy to hear came from the doorway.\n\n\"Noel, I'll take care of it.\" Thorne said. \"I swear that she won't come into this part of the house again.\"\n\nNoel didn't respond, but continued to stare at Barb.\n\n\"What part of this part of the house is off limits to you didn't you understand?\" Noel asked. \"What part of respecting the privacy of another do you not understand? Get out and do not ever come here uninvited again.\"\n\nBarb started to say something, but Adrianna put a finger to her lips urging silence.\n\n\"Come over here.\" Thorne said to barb keeping his eyes on Noel.\n\nWhen she reached him, still looking at Noel; he spoke to her.\n\n\"Apologize.\"\n\n\"What? No!\" Barb hissed. \n\n\"Fucking apologize!\" Thorne demanded.\n\n\"I don't want her apologies.\" Noel said softly. \"It would be a lie. All I want is her word that she will never step foot in here again. Do I have your word?\" Noel asked Barb.\n\nBarb looked at Thorne not believing that he would allow his brother to dictate where she could go in her own house.\n\n\"Answer truthfully.\" Thorne cautioned her. \"We will know if you lie.\"\n\n\"Fine!\" Barb spat out, \"I won't be back!\"\n\nShe stormed off without a backwards glance. Thorne was waiting for her at the bottom of the stairs. He grabbed her arm and dragged her to his study.\n\n\"Did you not tell me that you weren't stupid?\" He hissed. \"But yet you continue to do dumb ass things! If you hadn't been my mate, I would be burying you right now! Do you fucking understand that! He could have killed you but instead he called to me. Where in the hell are your brains?\"\n\n\"I can't believe that you're siding with him! I'm supposed to be your mate! You're supposed to side with me! \"\n\n\"Let me remind you of how you came to be my mate.\" Thorne said. \n\n\"No thank you.\" Barb retorted. \"I've heard the story.\"\n\n\"Alright then, let me tell you how this story is going to end.\" Thorne said\n\n\"Mr. Blackwell,\" Adrianna said. \"Ethan Sinclaire and his mate are here.\"\n\n\"We'll finish this later.\" Thorne said and walked away.\n\nBarb didn't know what he was going to say, but she knew that it wasn't going to be to her benefit. She cursed under her breath and followed Thorne to the living room where Ethan and Katrina were waiting. She hadn't formally met Katrina at the last meeting, but she had watched her and decided that she didn't like her for the same reasons that she disliked her sisters.\n\nIf Katrina was aware of Barb's feelings toward her, she didn't show it as she warmly greeted her.\n\n\"I'm sorry that we didn't officially meet the last time.\" Katrina said. \"I know that coming into this world can be challenging and frightening so if you have any questions feel free to ask. Any of us will be more than happy to help in any way that we can.\"\n\n\"Thanks but I'm fine.\" Barb replied.\n\nThe twins and their mates were next. She shied away from Veronica who made it clear that she still hadn't forgotten the incident when she tried to hit on her mate. Joseph came in, nodded at her and went to sit down. Hans and Juliette arrived followed by Leon and Nadine, Kevyn and Patrick and finally Louise and Nathan.\n\nBarb couldn't help but notice how Louise glowed. Nor did she miss how Nathan was always touching her and kissing her temple. For just a nanosecond, she almost allowed a conscious thought come through and she didn't allow it to continue. She noticed the gift bag that Nathan carried in and sat on the floor beside him.\n\nShe glanced around the room at all of the couples realizing that all of them were happy except for her and Thorne. Thorne was already talking when Noel came in and stood in the back of the room. He looked pale, but not ill as he had the week before.\n\n\"This is what we know.\" Thorne said. \"Barb and Adrianna were out shopping when Adrianna saw someone that she knew. Olivia Saunders. Here's the thing, it appeared that she was alone which in and of itself is unusual. Hunters never travel alone even during the day so is she really alone?\"\n\n\"No.\" Louise said. \"I keep seeing more than one person. She must be the human that I see, but there are more with her.\"\n\n\"I've been getting hourly reports from the watcher station.\" Ethan said. \"So far nothing odd has popped up but as we know, that can change at any time.\"\n\n\"That's true.\" Thorne said. \"Adrianna made a suggestion that I think has merit. She suggested that we find a safe house that neither of us owns just in case we need to leave our homes here. I told her to discuss it with Grant and the head of your guards.\" \n\n\"I think that's wise.\" Ethan replied. \"It would be good to locate a place as soon as possible so that we can make sure that it's stocked.\"",
        "The meeting went on for another hour after which, Ethan, Thorne and the three guards met. Leon went over to Barb and sat beside her.\n\n\"How's it going?\" he asked.\n\n\"Fine... Leon, how do you do this?\" Barb asked.\n\n\"Do what exactly?\" Leon asked.\n\n\"This! I didn't ask for this!\" Barb said and then she pulled back. \"You know what? Forget that I said anything. I'm fine. Thorne is... Thorne.\"\n\n\"What about the baby?\" Leon asked.\n\n\"It's fine too.\" Barb replied absently as she looked around the room.\n\n\"It?\" Leon asked slightly disturbed.\n\n\"Yes it.\" Barb replied. \"I don't know whether it's a boy or girl.\"\n\nLeon couldn't help but notice the difference in attitude between Louise and Barb. Louise always referred the baby as 'him' or 'the baby'. She and Nathan were already bonding with their baby whereas Barb seemed to be trying to deny the existence of hers. He hoped that when the time came that her mothering instincts would come into play.He didn't address the baby issue, but brought up another question.\n\n\"Why do you have to be such a hard ass? I can see that you want to reach out but you stop yourself from doing it.\"\n\n\"You don't know what you're talking about.\" Barb said. \"And I'll thank you to mind your own business.\"\n\nShe walked away before Leon could say anything and headed over to Louise and Nathan.\n\n\"I have a question for you.\" She said not giving them the chance to say hello. \n\n\"Sure, but first I have something for you.\" Louise said. \"I made several mobiles for the baby's crib and bassinet and made some for you too.\"\n\nBarb bit back a snide comment, took the offered gift bag and looked inside. The smell of freshly baked bread made her salivate. The snide comment was forgotten as she inhaled the aroma of the bread.\n\n\"It's the cheese kind isn't it?\" Barb asked.\n\n\"Yes and there's a crock of butter in there too.\" Louise replied. \"The mobiles are in the packages on top.\"\n\nBarb sat down, her question forgotten as she took one of the packages out of the bag and opened it.\n\n\"You made this?\" Barb asked as she looked at the brightly colored mobile.\n\n\"Well,\" Louise replied. \"I had a lot of help from Nathan on that one. It needed an architect to put it together.\"\n\n\"It's great... Thanks.\"\n\nNathan watched Louise and Barb talk. Once again he saw a glimpse of the woman that Barb could be if she would let herself. He felt badly for the Yancy siblings. He knew that they hadn't lost hope that Barb would not necessarily become a different person, but a happier one. He watched as the Barb that he knew and disliked resurfaced.\n\n\"So, what nanny agency are you going to use?\" Barb asked as she sat the gift bag on the floor.\n\n\"We're not using a nanny service.\" Louise replied. \"Why would we need one?\"\n\n\"Who's going to help you then?\" Barb asked.\n\n\"Help us do what?\" Nathan asked. \"We'll raise our baby together and if we need a night out, there are plenty of aunts and uncles to help out.\"\n\nBarb found it hard to believe that Nathan Sinclaire would change a dirty diaper, but then again; maybe he would. But in any case, her idea of using Louise and Nathan as part of her argument for a nanny had gone to hell.\n\n\"Thanks for the gifts.\" She said her voice tight. She turned around to see Noel looking at her with something akin to disgust. He had made his point; she wasn't going anywhere near him or his damned studio. But as soon as was feasible, he was leaving and she didn't care what Thorne had to say about it.\n\n**\n\nNoel watched and listened without offering an opinion. He was relieved that while he had a headache, it was nowhere near as intense as the one he had experienced a few nights before. He looked from face to face taking note of the expressions. His gaze stopped on Juliette for just a moment and then continued until it rested on Barb's.\n\nHe realized that had she not been Thorne's mate and with child that he could have and would have killed her. He saw her as a threat to the eyes in the picture and had reacted as any male protecting his mate would. He hoped that she got the message and stayed away from him. His next thought was that this was the side of him that his father tried unsuccessfully to bring out. In a way, he had succeeded Noel thought bitterly.\n\nHe was going to leave right after the meeting, but decided to stay and watch how people interacted. He watched Barb as she talked to her brother and then her sister. Like Thorne, he saw that they loved her and didn't understand why she acted the way that she did. For a few minutes, he saw another side of Barb appear and then disappear. He shook his head; Thorne had a very long eternity in front of him. \n\nThe one thing that he had decided was that as soon as the crisis was over, he was buying a house. He was ready for a place where he didn't have to keep the eyes of his mate covered. Having seen enough, Noel started to leave; but was stopped by a masculine voice.\n\n\"Excuse me.\" Leon said just as Noel was leaving.\n\nNoel turned around and looked at Leon.\n\n\"Can I help you?\" he asked.\n\n\"No.\" Leon replied. \"I just wanted to introduce myself. \"I'm Leon Yancy, Barb is my sister.\"\n\n\"Noel Blackwell.\" Noel said extending his hand.\n\nLeon gave it a firm shake after accepting it and released it.\n\n\"This is some place you have here.\" Leon said looking around.\n\n\"Actually this is Thorne's home.\" Noel replied. \"I'm staying here temporarily. After this business is over with, I'll be moving.\"\n\nNoel found himself relaxing in Leon's presence, but didn't understand it. Usually he didn't trust new people, but there was something about Leon that soothed him much like the eyes in the picture did. But it was different in a way that he couldn't put his finger on. He felt a kinship to Leon that made him both nervous and excited. He hadn't felt that way about anyone other than Thorne and the eyes since the farmer's son so many centuries ago.\n\n\"Do you have a spot in mind?\" Leon asked.\n\n\"No, not really.\" Noel replied. \"I only made the decision today.\"\n\nLeon liked Noel. He had the sense that he was as straightforward as Thorne, but he was a much softer version of him. He also realized that while that was true, Noel was capable of great violence; but he hadn't always been that way.\n\n\"Well since we're related, why don't I introduce you to the rest of the family?\" Leon asked. \"Who knows? We all may end up under the same roof.\"\n\nNoel hesitated for a moment and then followed Leon across the room. He was introduced to Kevyn and Patrick first. By the end of thirty minutes, he had met all of the Yancy's who were there and their mates. When he got to Louise, he shielded himself recognizing her as the empathy/seer. If she noticed, she gave no indication of it. Leon, he realized was an empath as well; but to a lesser degree.\n\n\"Last, but not least,\" Leon said, \"Is my sister Juliette and her mate Hans. We have a brother, but he lives on the east coast.\"\n\nNoel was only half listening. His eyes were glued on Juliette's eyes. They were so much like the eyes in the portrait, but different. The eyes in the portrait were a warmer brown and Juliette's eyes didn't soothe him. He wanted to know how Juliette was related to the owner of the eyes.\n\nAware that he was staring, he jerked himself back to attention. He found Hans regarding him with cool eyes.\n\n\"Your mate is very lovely.\" Noel said with a slight incline of his head. \"All of your mates are lovely.\" He added.\n\n\"Thank you.\" Hans said pulling Juliette closer to his side.\n\n\"If you will excuse me,\" Noel said, \"I have some matters to attend to. Leon, it was a pleasure to meet you. Thank you for introducing me to our extended family. I hope that we will meet again under better circumstances.\"\n\nNoel walked away his mind on the relationship between Juliette and the woman in the picture. He had meant it when he told Leon that he hoped to meet him again. He liked Leon's calm demeanor and felt that he was someone that he could talk to.\n\n***\n\nBarb stared at Leon and Noel as they talked. It was the first time that the two men had met and yet they were talking like friends. She watched as Leon took Noel around the room and introduced him to the others. Leon was being Leon, but Barb saw it as something else-he was kissing ass.\n\nEven as she thought it, she knew that she was wrong and began to wonder if she really didn't owe Noel an apology. It didn't change the fact that she wanted him out, but going into his room uninvited was rude; even for her.\n\nNoel was almost to the stairway to his suites when she caught up to him.\n\n\"Noel-wait.\" She called after him.\n\nNoel stopped, turned and looked at her with cold green eyes.\n\n\"What do you want?\" he asked.\n\n\"I want to clear the air.\" Barb said. \"I won't lie and say that I'm glad that you're here; because I'm not. I won't even pretend that I like you because I don't. But- I do owe you an apology. I shouldn't have gone into your rooms and it won't happen again.\"\n\n\"I don't care for you either.\" Noel said after several seconds. \"But you are my brother's mate and mother to his child. I will treat you with respect because of those things. I also expect to be treated with respect...\"\n\n\"I...\"\n\n\"I'm not finished.\" Noel said sounding more like Thorne than he realized. \"I also expect that you will show some semblance of respect to others that pass through these door and those who live here. I'm talking about Felix. I don't care if he's the help or who he is. He is entitled to respect as is everyone and everything that breathes. As for your apology, it is accepted; now please excuse me.\"\n\nThe meeting with the security guards was over by the time Barb got back to the living room. Ethan and Thorne were standing side by side, but Thorne was talking.\n\n\"Adrianna, Grant and Jordan are going to begin searching for a hide-a-way large enough for all of us. The location will be subject to approval by Ethan and me. As soon as we have a place, you will all be alerted. We don't need to remind you to keep alert and not to let your mates go anywhere alone. Mates, if you see or hear anything suspicious, please say something. Also, please remind any children that they are not to go with anyone other than someone from the family. It might even be a good idea to take them out of school until the danger is past.\"\n\nJuliette inwardly groaned. She could hear Victor's shouts of joy and Wanda's cries of disappointment. Maybe if a sleepover was arranged...The idea to arrange a luncheon just for the women occurred to her. She still had questions about her new life and she was certain that Barb probably did too. They hadn't all been together to talk as sisters in weeks.\n\nAfter the meeting, she approached Barb.\n\n\"Hey, how are you feeling?\" She asked.\n\n\"Fine I guess.\" Barb replied. \"How are the kids?\n\n\"They're doing great. Hans has been really good for them.\" Juliette replied. \"I was thinking that it would be nice if we could all get together and talk.\"\n\n\"About what?\" Barb asked warily.\n\n\"I don't know about you, but there's so much that I don't know about this world.\" Juliette said. \"I still have a lot of questions so I thought that maybe we could all get together for lunch. We could ask Rachel and Katrina to come and they could fill in the blanks for us.\"\n\nBarb was about to say no and then changed her mind.\n\n\"Sure. Why not?\"\n\n***\n\nThe 'terrible five' were just beginning to surface by the time Olivia made it to the house. Nell and her mother Mary were warming up blood in the microwave when she walked in.\n\n\"Where have you been?\" Nell asked.\n\n\"Out.\" Olivia replied sharply.\n\n\"I see how it is.\" Mary said her tone cool. \"You get to break daddy's rules whenever you want...\"\n\n\"Has Albert figured out where we're going tonight?\" Olivia interrupted.\n\n\"He hasn't said anything.\" Nell replied. \n\nFor the most part, Nell liked Olivia in spite of whom and what she was. She also knew that out of all of them, she was the one that Olivia felt the safest with. Neither woman had any illusions as to the true nature of their relationship. For Nell, family would always come first. She would kill Olivia without batting an eye if she had to.\n\nOlivia knew and accepted this so she never fully trusted Nell. She hated vampires, but if she had to choose one to like, it would have been Nell. Mary on the other hand, she could leave. The woman often forgot what her place was in the scheme of things. The questioning of her whereabouts was a case in point.\n\nOf the males, it was Harry that made her nervous. There was an anger and hatred in him that Olivia didn't understand, nor did she care to. Of all of them, he was the most likely to kill her and not care about the consequences. William wanted her. He was the one who would turn her instead of killing her. Love had nothing to do with it. It was the idea of turning the daughter of the leader of the hunters that partially motivated him. It wasn't that she found him unattractive, it was quite the opposite; but he was a vampire and that made him unacceptable. Albert, the father to Nell, William and Harry was an enigma to her. He rarely spoke, but watched and listened to everything that went on around him. He would also kill her without thinking about it.\n\nOlivia had once asked her father about the wisdom of keeping a family of vampires together on the same team, but as always; he got angry.\n\n\"I warned you about questioning me!\" he snapped.\n\n\"Dad, you keep telling me that I have to start thinking like a leader, but when I do; you get offended. I'm not questioning your wisdom. I'm just trying to understand your rationale.\" \n\nRufus had looked at her, took a deep breath and grumbled an apology. The fact of the matter was that he didn't want Olivia to lead the group. In his mind, it was a position meant for a male. Olivia in his opinion was too soft hearted and he hated her separatist attitude. He could only imagine the changes that she would make once she took over.\n\nOlivia looked at the women and gave them a small smile. \n\n\"I'll be ready in an hour.\" She said and walked away.\n\nNell and Mary looked at each other, shrugged and continued warming the blood. If they were going out, they needed to be well fed or there could be a problem.\n\n***\n\nHarry stood in front of the mirror examining his chest. Fury rose as it did every time he looked at the large scars that surrounded where his heart was. There wasn't a day or night that passed that he didn't think about the bitch that had stabbed him and left him for dead. In her panic, she had missed hitting him dead center and didn't realize that the knife wasn't long enough. But still, she had done serious damage to him. If Nell hadn't doubled back, he would have died; but not from the wounds. The sun would have killed him.\n\nAfter Nell found him, they went into hiding. Mary stayed with him and took care of him while Nell, William and his father went in search of the woman who had tried to kill him. They had been gone for three days before they came back barely with their lives. William was carrying Nell who had been seriously injured in the fight for the girl.\n\n\"What happened?\" Mary asked when they came in.\n\n\"Someone took the bitch in.\" William replied. \"It was another vampire.\"\n\n\"He did this to three of you?\" Mary asked shocked.\n\n\"He a lot older than us.\" Albert replied. \"And we ain't fed either.\"\n\n\"Food is tied to the tree.\" Mary said. \"Harry gonna be alright so eat.\"\n\n\"Food\" was four trappers and an Indian that Mary had compelled to follow her. There had been others, but the bodies had already been disposed of.\n\nHarry shook himself from the memory and ran a fingertip over the large, raised scars. In his mind, he knew that one day he would see her again. He didn't consciously look for her, but he knew, that one day when he wasn't expecting it, he would find her.\n\nBy six pm, Olivia and the five were in a limo and headed for the shops. They were already dressed for their night on the town and Olivia had already reminded them that they were to keep a low profile.\n\n\"Any sex is to be consensual and no one is to be killed.\" She said looking into every face. \"They don't know that we're here and I want to keep it that way.\"\n\n\"I'm not a fucking child!\" Harry snarled.\n\nOlivia ignored him and continued.\n\n\"Albert, what's the name of this club?\"\n\n\"The Emerald.\" Albert replied his tone cool. \"It has very liberal rules. Almost anything goes except murder and humans cannot be compelled to play with us. They must be able to give verbal consent before we drink from them or fuck them.\"\n\n\"Sounds good.\" Olivia replied. \n\nBy ten pm, the group was standing in line at the club. It wasn't long before Nell was dancing with the human male that was standing behind her. Albert stood behind Mary with his arms around her making it clear that she wasn't available. William was looking around enjoying being out of the house. He was tapping his foot to the blaring music thinking about how much music and style of dress had changed over the centuries.\n\nHe wasn't complaining, he liked the way in which the females flaunted their bodies. The fewer garments they wore, the better. He stole a glance at Olivia who was swaying to the music and fought the urge to take her into his arms and dance with her. As of late; he had been becoming more conflicted about his feelings for her. He turned his gaze away from her and looked at Harry. He knew that Harry hated Olivia and would try to kill her the first time that she left her guard down. The question was what he was going to do if and when that happened. William sighed, closed his eyes and let the beat of the music wash the thoughts out if his head.\n\nHarry looked behind him. The line had grown considerably. It circled around the building and down the block. At the end of the long line, Harry saw a woman. His heart pounded and the scars surrounding it itched. He knew that it wasn't her, but it looked like her. He looked around to see what the others were doing.\n\nOlivia was talking to the woman in front of her, Nell was still dancing with the human male who would become her midnight snack, William was standing with his eyes closed and his parents were looking forward not paying attention to him.\n\nAfter a last glance, Harry slipped out of line and made his way toward the woman. The closer he got to her, the more he realized that she wasn't the woman that he thought she was. But he wanted her regardless. \n\nHe sidled up to her after making sure that she was alone. \n\n\"Hello darlin'.\" He said with a smile that melted the heart of any woman who saw it and this woman was no exception.\n\n\"Hello.\" She said looking up at him and smiling.\n\n\"Mind if I keep you company?\" Harry asked smiling back at her.\n\n\"Umm sure!\" The woman replied not believing her luck. \n\n\"Thank you, my name is Abel, what's yours?\" Harry asked stepping even closer to the woman and inhaling her scent.\n\n\"Joanie.\" She replied.\n\n\"It's a pleasure to meet you.\" Harry said softly his dark eyes glittering. \"Why are you here alone? It isn't safe for a beautiful woman to come to a place like this alone.\"\n\nHe could have cared less, but he wanted her to feel at ease with him. As he listened to her long drawn out story about doing something adventurous, he kept an eye out for the others. Finally, he had heard enough of her prattle. He wanted her to use her mouth for other things.\n\nNow that she was at ease with him, Harry slipped into her mind and compelled her to go for a walk with him. Fifteen minutes later, he was back in line with his family and Olivia. None of them seemed to have missed his absence. If they had, they would have come looking for him.\n\nAn hour later, they were finally in the club.\n\n****\n\nLouise was napping on the couch when her eyes snapped open. Nathan walked in just as she was sitting up.\n\n\"I know.\" He said softly, \"I felt it too.\" "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "barb",
        "hunters"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-04"
}