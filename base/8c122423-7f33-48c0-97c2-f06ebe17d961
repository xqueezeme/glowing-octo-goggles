{
    "title": "Kowalski Gets Her Man",
    "pages": [
        "\u00a9 Alex de Kok, 2003\n\nCaptain Peterson was just winding up his morning briefing when Kathy came awake with a mental thud as she heard her name called.\n\n\"Kowalski, Gonzalez, Henderson and Jones - my office in five minutes. The rest of you - you know what to do, ladies and gentlemen. Get out there and do it!\"\n\nThe squadroom came alive with the usual morning bustle as the officers dispersed to their various duties and assignments. Kathy waited for the crowd to disperse and made her way across to Rita Gonzalez; apart from herself, the youngest uniform on the force.\n\n\"Any ideas, Rita?\"\n\nRita shook her head. \"None, Kathy. We'll find out soon enough anyway.\"\n\n\"I guess so.\" She glanced across the now virtually deserted squadroom to where Detectives Tim Henderson and John 'Jack' Jones were in conversation. \"Come on, we'll see if the others know anything.\"\n\n\"Do you guys know anything about why the Captain wants us?\"\n\nHenderson shook his head. \"No idea, Kowalski. You?\"\n\nKathy shook her head. \"None.\" She glanced at her watch. \"It's time to find out anyway.\"\n\nThere was a stranger in Peterson's office, a good-looking woman of about forty or so. She smiled tentatively as the four officers filed into the office.\n\n\"Close the door, Jones.\" Peterson surveyed the four officers, a half-smile on his face. \"Mrs Janisi is Secretary of the Hay Cove Sun Club - \"\n\n\"The nudist place?\" Jones sounded surprised.\n\nThe woman nodded.\n\n\"Sorry, Captain,\" said Jones.\n\nPeterson nodded. \"The club has been having some problems. I'll let Mrs Janisi explain.\"\n\n\"We've been having a lot of thefts on the beach. I don't know if any of you know Hay Cove?\" She paused expectantly. The four officers looked at each other, shaking their heads. \"Well, Hay Cove is very pretty, but it's not wide open. There are lots of pine trees and what the club has done is to make some little clearings just off the beach, so that groups can have shelter and a little privacy from other groups, while having free access to the beach. We have security on the main gate to the estate, and at the changing area. Clothes aren't allowed beyond the changing area and that includes security personnel. We do have security personnel who patrol the beach, but they are all known to the members and nothing happens when they are around.\"\n\n\"Which is where you four come in,\" Peterson growled.\n\n\"Whoa, Captain,\" said Jones, looking alarmed. \"Is this going where I think it's going?\"\n\n\"I suggested to the Captain that the only way to find out anything might be to place undercover officers among the members,\" said Janisi.\n\n\"Under cover doesn't sound right in these circumstances,\" said Gonzalex, flushed but with a secretive little grin on her face. \"Un-covered, maybe.\"\n\n\"Next Monday, July fourteenth, is National Nude Day. We expect that quite a few extra people will be there, as we're offering day-only memberships so that people can find out a little more about naturism.\" Janisi smiled at the officers. \"I think the thieves might try for a higher take.\"\n\nKathy finally found her voice, her mind racing. Would she dare? \"Captain, why us?\"\n\n\"Henderson and Jones already have a good track record, and they're young and fit.\"\n\n\"And us?\" said Gonzalez, indicating herself and Kathy. \"We're uniform. You have women detectives.\"\n\nPeterson smiled at her. \"All on assignment. Henderson and Jones have just come back from leave and are being reassigned. You and Kowalski have both applied for transfer to plain clothes detective work. You both have high scores in your tests, and you both have good records in unarmed combat. It's difficult to hide a gun when you're naked. Together, in couples, no-one will look twice.\"\n\n\"Our day-only offer is for couples and families,\" Janisi added.\n\n\"I won't order you to do this,\" said Peterson, \"but...\"\n\n\"Put that way we don't have a lot of choice,\" said Gonzalez ruefully. \"I was going to say yes anyway,\" she added with a grin and a sideways glance at Henderson and Jones.\n\n\"Kowalski?\"\n\nKathy flushed. \"Yes, Captain.\" She gave a lopsided smile. \"I'll probably blush like a summer sunset.\"\n\nJanisi nodded, smiling. \"You will. For the first five minutes. After that, no-one notices.\"\n\n\"What's the teams, Captain?\"\n\n\"Up to you.\"\n\n\"Kathy?\" said Henderson. \"Think you could work with me?\"\n\nPleased, because she liked the sandy-haired detective, Kathy cocked her head. \"Yeah, you might do.\" Henderson grinned.\n\n\"Guess it's you and me, Jack,\" said Gonzalez.\n\n\"Guess so,\" said Jones, looking pleased.\n\n\"I have other work to do, so would you guys take Mrs. Janisi and discuss how you're going to handle this? Use one of the interview rooms. When you've done that, I want Kowalski and Gonzalez to go home and change into civilian clothes. As of now, you're probationary detectives. Today's Friday, the open day is Monday. I want you to work in the teams you just agreed.\" Peterson scowled at the four young officers. \"There have been a lot of muggings in the Ashton area. I want both teams prowling around there. You'll be on call for anything else. Okay?\"\n\n\"Yes, sir, Captain,\" said Kathy.\n\n\"Si, mi Capitan,\" said Gonzalez brightly.\n\nPeterson's eyebrows went up but he waved them out. \"Go!\"\n\nIn the interview room they discussed the layout of the club and the bay. Janisi had brought a map and they studied it.\n\n\"You say everything's been happening on the beach?\"\n\n\"So far as we know.\"\n\n\"No-one's seen anything?\"\n\n\"Nothing.\"\n\n\"We'll have to play it by ear, then,\" said Henderson.\n\n\"Can people take bags onto the beach?\" Kathy asked\n\n\"Of course. Sun block, picnic food, towels. You know, the usual beach things. Everything but clothing.\"\n\n\"We can take our guns and badges, even if we can't wear them,\" Gonzalez muttered.\n\n\"Good point, Rita.\" Jones winked at her. \"Where would you pin your badge anyway?\" Gonzalez stuck her tongue out at him.\n\n\"Is there anything else?\" said Janisi, fighting a smile. \"If there isn't, give me all of your names. I'll get some day-passes made out for Monday and drop them off tomorrow. If we meet on Monday, my name's Karen.\"\n\n\"I'm Kathy.\" Scribbling the names down.\n\n\"Tim.\"\n\n\"Jack.\"\n\n\"Rita.\"\n\nJanisi nodded. \"Until Monday. Thank you Kathy,\" taking the list of names from her.\n\nKathy enjoyed working with Henderson. The tall detective had an easy-going manner and a sharp wit. Nothing particularly exciting happened in Kathy's first three days as a detective, so she was able to try and establish a working relationship with Tim Henderson. She was pleased that he didn't try any macho male superiority. Instead, she found him willing to listen to her and he was happy enough to let her share the questioning when they were interviewing some punks they pulled in after catching them in the act of shoplifting.\n\nSunday night Henderson dropped Kathy at her apartment. He switched off the car engine and sat back.\n\n\"Tomorrow,\" he said.\n\nKathy grinned fleetingly, beginning to feel nervous when she thought of what the Monday would bring. \"What about tomorrow?\"\n\n\"Badge and gun in your beach bag, hidden but easy to get at. How you going to do that?\"\n\n\"The bag I'm going to bring has an inside pocket. I've rigged up a plastic frame that holds it open just enough to get my gun out quickly. I've tried it and it works.\"\n\n\"What about keeping it concealed?\"\n\n\"A handkerchief stuffed lightly in the top of the pocket. It looks normal.\"\n\n\"Sounds good. What about food? What shall we do?\"\n\nKathy liked the 'we'. \"If you like, I'll make sandwiches. How about chicken and pastrami? I'll make salad as well.\"\n\n\"Sounds great, Kathy. Drinks?\"\n\n\"You get some. Lots of water! We could be there all day.\"\n\n\"I can think of worse ways to spend a day,\" said Henderson lightly. \"All those naked chicks!\"\n\n\"And kids and grannies and fat old men,\" Kathy responded tartly.\n\n\"True.\" Henderson started the car engine and Kathy got out. \"Nine o'clock. Be ready, partner.\"\n\n\"See ya then.\"\n\nGetting ready for bed that night, Kathy stood naked before the bedroom mirror, carefully studying herself. She had trimmed her pubic hair neatly to her bikini line, laughing to herself as she thought, 'no bikini'. She knew she was trim and fit. 'There's nothing else I can do. The team has to take me as I am'. She blew herself a kiss and climbed into bed.\n\nKathy woke early next morning, showering carefully, grateful that her auburn hair was cut short and took little care or drying. She dressed lightly, only panties and a light sundress, a pair of Scholl sandals on her feet. She took her H&K 9mm and practiced drawing it quickly from her bag, then tucked the gun and her badge out of sight under a handkerchief in the modified pocket.\n\nBy nine o'clock she was ready, sandwiches made, some soft drinks in a cooler bag. Henderson's battered Ford pulled up outside and she went down.\n\n\"Morning, partner.\" Tim was relaxed in shorts and t-shirt.\n\n\"Hi, Tim.\" Kathy flopped into the seat beside Henderson, tossing her bags into the back seat. She exhaled violently.\n\n\"Ready?\"\n\nShe grimaced. \"I guess so.\"\n\n\"Nervous?\"\n\n\"Hell, yes! I've never been naked in public before.\" She laughed shortly. \"You?\"\n\n\"Nope. I think it's a first for all of us.\"\n\n\"Let's go. Sooner we get there, sooner we settle the butterflies.\"\n\nIt seemed no time at all before they were at the club, a short queue of vehicles waiting to pass the gate. The day-passes provided by Karen Janisi got them quickly through and they easily found a slot in the big tree-shaded car park. A long, low building housed the administration facilities, together with a pair of buildings, easily identified as the changing facilities. Some teenagers wearing Sun Club t-shirts and shorts were guiding day-visitors. The changing-rooms had more lockers than Kathy had ever seen before. There were a few women around, but she didn't see Gonzalez.\n\n'Changing' took her twenty seconds. She didn't really need a locker but the key system gave her an idea, so she put her shoes, panties and sundress into a locker and took the key. The exit from the changing area was on the opposite side to the entrance. A sign over the door made her pause for a moment, but she took a deep breath and went out under the 'No Clothing Beyond This Point' exhortation.\n\n\"Kathy?\" It was Henderson.\n\n\"Hi, Tim.\" She could feel herself going red.\n\nBy unspoken mutual consent they studied each other for a moment. Kathy liked what she saw. Henderson obviously kept himself in trim, the smooth muscles of an athlete moving easily under his lightly tanned skin, a tan suddenly, shockingly, broken by the area of un-tanned skin at his mid-section, making her suddenly aware of her own pale breasts and butt. Kathy looked fleetingly at his prick. 'Decent size', she thought, 'not too big for me. Hell, where did that thought come from!'\n\n\"You look sensational, Kowalski.\" Tim's voice was warm. He reached out and took her hand. \"Come on, the beach is this way. Remember, we're a couple!\"\n\nHenderson's obvious admiration relaxed Kathy a little, so she was able to study her surroundings. Hay Cove was lovely. Dropping quite steeply from the buildings, the path wound through the pines, leading to Hay Cove itself, the sand dotted with people, more visible in the clearings Karen Janisi had mentioned.\n\n\"Plenty of cover among the pines if you can move quietly,\" said Henderson, \"and anyone moving through the sand will be almost inaudible. I think we're looking for a team here. Someone to distract the victims while someone else lifts the goodies.\"\n\n\"Makes sense,\" said Kathy, scanning the area herself. \"Have you seen anything of Jack and Rita? Or Karen Janisi?\"\n\n\"Not so far. I haven't seen anyone I recognise. Is that good or bad?\" Henderson laughed. \"Maybe the people we know don't go naked on Mondays.\" He gave a low whistle and pointed. \"Is that Janisi over there?\"\n\nKathy squinted. \"Yep, sure is. Want to say hello?\"\n\n\"I guess. She might have seen Jack and Rita.\"\n\nKaren Janisi was obviously a regular sun-worshipper, because her tan was even and all-encompassing. She was pleased to see them and yes, she had seen Jack and Rita.\n\n\"They went that way,\" she said, pointing North. \"Said they were going to find a place just off the beach.\" She smiled. \"Your friend has a spectacular figure.\"\n\n\"Rita? I've only ever seen her in uniform,\" said Kathy, suddenly curious.\n\n\"We'll see you later, Karen. Come on, Kowalski. Let's look for your spectacular friend.\"\n\nKathy made a face and Janisi smiled as Tim hauled her away.\n\nJack and Rita spotted them first and called them over. Janisi was right, Rita did have a sensational figure. Smooth olive skin and lush curves normally concealed by her uniform, whenever she moved she was the centre of attention, female as well as male. She grinned as Kathy and Tim came up, a slight flush on her face.\n\n\"I'm enjoying this, I think I'm a born exhibitionist.\"\n\n\"We're here to work, Rita, remember?\" Kathy was conscious of Jones quick assessment of her figure. 'Tim's prick's bigger', she thought, suddenly amused.\n\nRita pulled a face. \"How are we going to do this? Anyone any ideas?\" She glanced around. No-one was near and as far as they could tell people assumed they were friends who were just chatting.\n\n\"So far as I can tell there's only one route off the beach,\" said Kathy. \"How about if we set up a base somewhere there? We can take turns 'cruising'. It seems to be the norm here.\" She gestured to two or three couples wandering apparently aimlessly. \"We can look out for any attention seekers who might be decoys.\"\n\n\"Sounds feasible,\" said Jack. \"Any other ideas? Signals? We might need to indicate from a distance that we've seen something, without necessarily yelling about it.\"\n\n\"I did think of something,\" said Kathy. \"These locker keys?\" She held up her arm. The key was in a pouch on a wrist strap held with Velcro. They each had them, she'd noticed. \"We'll need to keep a careful watch on each other, but if we all start with them on the right wrist, we can move them to the left if we see something.\" She shrugged. \"It might be too subtle, but they are nice and bright.\" She gestured at the day-glo band on her wrist.\n\n\"It's something,\" Tim declared. \"We'll use it. If anyone thinks of anything else, sing out.\" He paused. \"Any ideas?\"\n\nNo-one spoke. \"Okay,\" said Rita. \"Let's set up base. I need some sunblock, and soon!\"\n\nFive minutes later they'd found a spot near the pathway, tucked in a little clearing. While giving a clear view of the path, the view of the beach was a little obscure and seemed to be the reason no-one else had claimed it. They spent a few minutes applying sunblock. Tim did Kathy's back and she relished the feel of his strong hands on her skin, disturbed suddenly to feel herself moistening. She was amused to see that he made a point of being in front of her when she rubbed the sunblock onto her breasts.\n\n\"Who's gonna do the first cruise?\" Rita asked, rubbing sunblock onto her shaved mound. Three extra sets of eyes watched the movement of her hand.\n\nTim shook himself. \"Kathy? How about we do it?\" He gestured. \"We'll head North, slowly, along the water's edge. When we get there, we'll sit for about five minutes, then we'll come back along the tree line, past here to the south end. Five minutes, then back here along the water's edge. Then you two can do the same, but go North along the tree line and come back along the beach. Anyone got a better idea?\"\n\n\"What do we do while you're away? It'll take you nearly an hour, I guess.\" Jack shrugged. \"I suppose this is a kind of stakeout.\"\n\n\"Keep an eye on who's coming in and going out, especially if you recognise anyone that we know professionally. Investigate anything unusual.\" Tim shrugged. \"I've never tried to find a thief with no clothes on before.\"\n\nRita snorted. \"Hell, man, it's all firsts! First time as a detective, first time working with a partner, first time taking my clothes off in public. God knows what my grandmother would make of it!\"\n\n\"Is she here too?\" Tim asked innocently. \n\nRita punched his arm. \"Idiot!\"\n\nTim turned to Kathy. \"Kathy, take your beach bag. If you don't mind I'll put my badge and gun in it. We can take turns carrying it.\"\n\n\"Okay, but we'll leave the food here. I made enough for four,\" she said to the others, \"so help yourself.\"\n\n\"Rita laughed. \"I did too! At least we won't starve.\"\n\n\"Come on, Kathy. Let's cruise!\"\n\nKathy slung her bag with the two guns over her shoulder and she and Tim went hand in hand down to the water's edge, turning North, strolling idly, skipping sideways to avoid the bigger waves. Tim squeezed her fingers.\n\n\"I like this. I wish we weren't working.\"\n\n\"Me too. You're a nice guy to be with, Tim.\"\n\n\"You mean that?\"\n\n\"I said it.\"\n\n\"Have dinner with me tonight?\"\n\n\"I'd love to.\" She shook her head and Henderson could see a bright spot of colour on each cheek. \"I feel like everyone is watching us.\"\n\n\"You, not us, Kathy. Deep breath, shoulders back, push those gorgeous tits out. You're the best-looking woman on the beach.\"\n\nKathy laughed, the need to hide herself fading rapidly as she began to realise that the looks coming her way were mostly admiring, from women as well as men. She caught the direction of a harassed mother's glance, her two pre-school children arguing with each other, and laughed.\n\n\"What?\" said Henderson.\n\n\"They're not just looking at me. See that woman with the two kids?\"\n\n\"What about her?\"\n\n\"She was checking out your dick. She licked her lips and looked hungry, I swear.\"\n\nTim looked embarrassed. \"You have no idea how hard I'm fighting an erection, Kowalski.\"\n\nKathy grinned. \"Mmm, I'd like to see that,\" she purred, teasing him.\n\n\"Not here,\" he said bluntly.\n\nAbout to respond, something caught Kathy's eye. \"Hey, is that the sort of distraction we're looking for?\"\n\nThere was a gasp from Tim. \"Are those tits real?\"\n\n\"Dunno. Can't tell from here.\" Kathy grinned at her companion. There was indeed no way to tell if the bouncing tits were real or enhanced. There were four of them, attached to two girls so alike as to be peas from the same pod, tanned all over, sun-streaked blonde hair. Typical beach bunnies. The girls were playing beach volleyball in company with six or eight other youngsters. There was much squealing and name-calling and inevitably almost everyone nearby was watching.\n\n\"Watch the background, Kathy. See anything suspicious?\"\n\nKathy looked carefully beyond the game. Nothing much seemed to be happening. She saw a young man walk to one of the post-mounted garbage cans scattered along the tree-line and discard some waste. Nothing else was moving except the game and some younger children playing in the sea.\n\n\"I don't see anything, Tim. You?\"\n\nHenderson shook his head. \"Zilch. Come on, we'll keep moving.\"\n\nThey headed North, reaching the limit of the cove a few minutes later. They sat down on a flat rock and surveyed the beach. The youngsters in the volleyball game were sitting now, relaxing, chatting. There did seem to be some sort of disturbance near the garbage can Kathy had noticed.\n\n\"Something going on down there, Tim. Shall we stroll over?\"\n\n\"Might as well.\"\n\nThe garbage cans were mounted on stout wooden posts and Kathy realised that there were several of them. They were scattered along the edge of the trees, just off the beach, obviously for the use of the visitors to the cove.\n\nAs they neared the commotion, Kathy spotted Karen Janisi. She spotted Tim and Kathy at the same moment and glanced around, then made her way over to the two detectives, frowning. She looked around, to make sure that she could not be overheard.\n\n\"Another robbery. Do you want to do anything official at the moment? Mrs Solomon is insisting we call the police.\"\n\n\"We never saw anything. Call it in, Karen. We'll keep looking. They may try again, you never know.\"",
        "Janisi bit her lip, but nodded and turned away to the victim. Tim and Kathy carried on down the beach. Glancing out towards the surf as she heard a squeal of voices Kathy saw that the volleyball game had re-started, a little further South this time.\n\n\"Plenty of energy,\" said Tim, following Kathy's gaze.\n\nKathy nodded. \"Same two Barbie clones. Don't know about the others.\" She moved on, pausing to let a young man pass in front of her to deposit some garbage in a can. Tim took her hand as they walked and they moved on South. As they passed the path, Kathy noted a wheel mounted dumpster in what appeared to be a purpose-cut clearing in the pines. Painted to match its surroundings, she hadn't noticed it when they had come onto the beach.\n\nWhat drew her attention now was the grizzled man in work gloves and sneakers, discarding a garbage sack into the dumpster. He moved past them, heading North, having taken a fresh garbage sack from a roll under the dumpster.\n\n\"He must be emptying the garbage cans along the beach,\" Kathy said to Tim. \"So many people here it's keeping him busy.\"\n\nTim grunted, his mind apparently on other things, like how he could persuade Kathy to go to bed with him, as he told her some time later. They moved on down to the South of the beach without seeing anything suspicious.\n\n\"Do you want to sit for a while or should we go straight back to the others? I dunno about you, but I'm hungry,\" Tim declared.\n\nKathy laughed. \"Yeah, I guess you're right.\" It wasn't long before they were back with the others, who were just finishing their own lunch.\n\n\"Anything?\" asked Rita.\n\nKathy made a face. \"Someone was robbed near the North end of the beach. We told Karen to call it in, the woman wanted the police.\"\n\nJack nodded. \"Okay, our turn. Come on, Rita.\" He held out his hand and hauled Gonzalez to her feet. Like Kathy, she had a beach bag and the two detectives headed off along the beach, hand in hand. Kathy watched them for a while and grinned when Jack's arm went round Rita's waist and she moved closer to him.\n\n\"Chow, Kowalski,\" Tim called, waving a chicken leg.\n\nThey ate in companionable silence, both of them with healthy appetites enhanced by the sea air. At last Kathy sat back. \"I'm full!\" she declared.\n\n\"Me, too,\" said Tim, discarding a last chicken bone. He gathered up the rubbish from their meal, stuffing it into the paper sack Kathy had brought the food in.\n\n\"I could use the john. I'll take the rubbish and drop it in one of the garbage cans,\" said Kathy. \"You stay here.\"\n\n\"Okay.\" Tim leaned back against a convenient pine trunk.\n\nKathy strolled out onto the beach and headed towards the nearest garbage can. The two Barbies were in conversation with a young man and as Kathy passed them she recognised the guy who had been so tidy. She almost did the classic double-take when she realised that the young man had very similar features to the girls. Triplets? Possibly. Almost definitely brother and sisters.\n\nThe trio broke off their conversation as Kathy passed, returning bright, empty smiles at her greeting. She snorted to herself as she moved away. 'Up yours, too, kids'.\n\nKaren Janisi came towards her, looking worried. \"Another one, Kathy. I've called up to the office and they've called it in. A patrol car's on its way.\"\n\nKathy nodded absently. Something was tickling at the back of her mind. \"Karen? The garbage cans? How often are they emptied, and where?\"\n\n\"Usually twice a day, around two in the afternoon and just before dusk. We've found that's usually enough. People tend to spread out and they all get used pretty well evenly. Why?\"\n\n\"Hang on. Around two, and dusk?\"\n\n\"Yes.\"\n\n\"No other times?\"\n\n\"Not usually.\"\n\n\"Where does the garbage go?\"\n\n\"Did you spot the dumpster near the foot of the path?\"\n\n\"Yes?\"\n\n\"The garbage goes in there. One of the guys comes down in a four-wheel-drive at dusk and tows it up. He brings a fresh one down in exchange.\" Janisi looked exasperated. \"What's this about, Kathy?\"\n\n\"You didn't have anyone emptying the garbage cans earlier?\"\n\n\"No.\" Janisi took Kathy's arm. \"What is this all about?\"\n\n\"Karen, I'm not sure how yet, but I think I know who and I think I know where the stolen property is! Have you seen Jack and Rita?\"\n\n\"Five minutes ago. Along there.\" She pointed North.\n\n\"Karen, find them! Send them back, pronto. I'll put Tim in the picture.\" Kathy took Janisi's arm. \"I'll tell you everything later. I promise. Jack and Rita? Please?\"\n\nKaren Janisi paused for a moment, biting her lip, then nodded and took off at a run. Kathy turned on her heel and began running back to Tim. And her bag. As she ran, she looked up the path. A tanned and grizzled figure was headed up the path carrying a garbage bag.\n\nIn their clearing Tim was startled by her precipitate arrival. \"What's up?\" he asked, alarmed.\n\n\"I think I know who and I think I know where the stolen goods have gone,\" she said, hurriedly retrieving her badge and gun from her bag. \"When Jack and Rita get back, arrest the Barbie twins and their brother.\"\n\n\"Brother?\" said Tim, bewildered.\n\n\"Yeah, he looks just like them. Very keen on depositing garbage, he is, remember?\"\n\n\"Him?\"\n\n\"Him. He's the thief, they're the distraction and I think it's daddy who has the stolen goods.\"\n\n\"What about you,\" Tim cried as Kathy turned on her heel.\n\n\"I have to get up to the top before the evidence disappears,\" yelled Kathy as she took off at a dead run up the path.\n\nHer appearance startled the incoming sun worshippers of Hay Cove, for the sight of a naked woman brandishing a PD badge and a H&K 9mm automatic was not a familiar one to them. Breathing hard, Kathy dashed into the admin block.\n\n\"Police,\" she panted, showing her badge.\n\n\"That was quick, I've just now called,\" said the girl behind the desk, eyeing Kathy's nakedness in amazement.\n\nKathy shook her head. \"Have you seen a guy come through, so high - \" she held up her hand, \" - about forty, half-bald? Probably carrying a garbage bag.\"\n\nThe girl pointed. \"He just went out.\"\n\nKathy sprinted out the door, causing gasps of astonishment. A skinny, familiar figure was just nearing a battered Jeep. \"Stop, police!\" she yelled.\n\nStartled, the figure half-turned, then tripped over a protruding tree-root. The bag flew from his hand. By the time he could regain his feet Kathy was beside him. \"Hands on top of the car,\" she snarled. \"Feet apart.\" Oh, shit, no handcuffs.\n\n\"What's the meaning of this,\" the figure asked indignantly. \"You have no right to stop me.\"\n\nKathy glanced down. \"No? So tell me, Mister?\" she paused.\n\n\"Jenkins. Albert Jenkins.\"\n\n\"So tell me, Mr. Jenkins, are these watches and wallets all yours?\" The sight of the spilled contents of the garbage bag eased the last little worry from her mind.\n\n\"Well, well, well, what have we here?\"\n\nShe turned at the familiar voice. \"Brennan! Lend me your 'cuffs, please.\n\n\"My handcuffs, Kowalski. What do you want my handcuffs for?\"\n\n\"To cuff Jenkins, you big ape!\"\n\n\"Now why would you want to cuff Mr. Jenkins? Let me guess. Petty theft again, Albert?\"\n\n\"Go fuck yourself!\" said Jenkins.\n\n\"Hands on top of the car,\" Kathy snapped.\n\nThere was something in Kathy's voice, for Jenkins obeyed hurriedly.\n\n\"Brennan? The 'cuffs, please?\" Kathy dared a glance at the patrolman, to find him fighting to keep a straight face at the sight of his naked fellow officer. \"You were called about a robbery, weren't you?\" she said sweetly. \"This is one of the robbers.\" Something made her turn. \"And there are the rest of them.\"\n\n\"Nice work, Kowalski,\" said Captain Peterson some time later. He fought a grin, unsuccessfully. \"I'm sorry, but I can't order Brennan not to say what he saw.\"\n\nKathy made a rueful face. \"I guess I made an impression on my first undercover operation, Captain.\"\n\nPeterson smiled at her. \"That you did, lass. Jenkins' prints are all over the stolen goods. So are his son's. The girls are protesting innocence.\" He shook his head. \"You've done all your paperwork so get yourself away now. You've got tomorrow free. I'll see you again on Wednesday.\" He paused, looking up at her. \"Henderson has asked for you as his regular partner. He says you've got the brains to go with his brawn, and that you make a good team. You want it?\"\n\n\"Yes, sir. I'd like that.\" Kathy was pleased that Henderson had asked for her.\n\n\"You've got it. See you Wednesday.\"\n\nHenderson was waiting for her. \"Dinner?\"\n\nKathy nodded. \"I hadn't forgotten, Partner. I'll cook it. After...\"\n\n\"After?\"\n\n\"Tim, I've been out among naked people all day, out in the fresh air and sunshine. I've seen pricks of all sizes and shapes, from soft to half-hard. I've seen tits of all shapes and sizes...\"\n\n\"None as nice as yours!\"\n\n\"Thanks.\" Kathy grinned. \"Frankly, I'm as horny as hell. What I need is some friendly, no strings, fuck-buddy-style hot and sweaty copulation. I'll supply the pussy if you supply the prick. Deal?\"\n\n\"Deal,\" said Tim Henderson in a tone of deep satisfaction.\n\nTo those of you who have read this far, my thanks, and I hope you enjoyed my little tale. Feedback is welcome and as this is a competition entry, please vote, too. "
    ],
    "authorname": "Alex De Kok",
    "tags": [
        "nude beach",
        "undercover cop",
        "detective",
        "volleyball game",
        "wastebin",
        "theft"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/kowalski-gets-her-man"
}